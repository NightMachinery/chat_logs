[00:03:59] <shka> humasect: machine gun-propeller synchronization was done using two methods
[00:04:14] <shka> and since we are talking about the first world war here 
[00:04:23] <shka> no constant speed props yet
[00:04:45] <shka> so it was doing weird things to the rate of fire of guns
[00:05:17] <humasect> timing?
[00:06:26] <shka> humasect: that as well
[00:06:45] <shka> essentially, rate of fire of a gun is rarely in sync with the prop speed
[00:06:56] <humasect> figured 
[00:09:19] <selwyn> yeah it was a difficult problem iirc
[00:10:27] <humasect> hmm
[00:10:35] <humasect> async
[00:10:37] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[00:10:50] <selwyn> i think ww1 must have been one of the scariest wars in terms of the equipment you had to rely on
[00:11:38] <selwyn> shitty manual synchronization to put bullets through the thing that lets you fly
[00:12:33] *** Joins: notzmv (~zmv@user/notzmv)
[00:13:46] <selwyn> shka: i noticed more shortages today they are definitely a thing
[00:14:55] <selwyn> they prioritise leaving out things like bottled water and certain brands of beer as i assume they don´t deliver enough profit per volume and are not essential
[00:15:07] <selwyn> but also, apparently some vegetables
[00:23:05] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 248 seconds)
[00:23:50] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[00:28:13] <shka> not ideal
[00:29:10] <shka> selwyn: synchronization worked, but i wonder if it caused some malfunction in the guns
[00:29:22] <selwyn> it sounds very risky
[00:30:27] <shka> well, as long as your ammo is not widely out of spec it should be fine?
[00:31:41] <selwyn> sounds like a big assumption for the middle of ww1
[00:31:47] <selwyn> i am not really knowledgeable about this though
[00:32:04] <selwyn> did they even have proper quality control back then
[00:32:58] <shka> they had, but quality of ammunition would become a problem for Canadian troops supplied by the british for instance
[00:33:27] <selwyn> i see
[00:34:55] <shka> on the other hand, guns of that era were designed with less then idea ammo in mind
[00:35:13] <shka> long recoil, toggle locked pistols and so one
[00:36:43] <selwyn> today i learned a new german word: farfegnugen
[00:39:18] <contrapunctus> selwyn: I've never heard that one o.O
[00:41:16] <contrapunctus> selwyn: what's it supposed to mean?
[00:41:43] <contrapunctus> Didn't find it in a German dictionary either, so I'm guessing it's misspelled.
[00:42:04] <selwyn> ´driving pleasure´
[00:42:11] <selwyn> apparently a reference to an old vw advert
[00:44:33] <selwyn> bbl
[00:44:37] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:06:49] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 248 seconds)
[01:40:13] *** Joins: retropikzel (~retropikz@2001:999:202:2575:3591:3733:f7c:ed63)
[01:46:27] *** Quits: retropikzel (~retropikz@2001:999:202:2575:3591:3733:f7c:ed63) (Quit: Leaving)
[01:55:36] *** Quits: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at) (Quit: WeeChat 3.2)
[02:25:55] *** Quits: micro (~micro@user/micro) (Ping timeout: 268 seconds)
[02:26:41] *** Joins: micro (~micro@user/micro)
[02:26:50] <hayley> I got a response: "Ruby's GC is pretty decent, considering how dynamic Ruby is as a language."
[02:26:58] <hayley> What does the language have to do with anything?
[02:29:10] <hayley> On the contrary, the host language forces them to use a non moving GC without more engineering effort.
[02:31:49] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[02:45:06] <kakuhen> http://www.randomhacks.net/2005/12/03/why-ruby-is-an-acceptable-lisp/
[02:52:14] <gilberth> "LISP is a dense functional language." Yeah, right.
[02:55:33] <gilberth> The rest of the article is only about syntax, isn't it?
[02:55:43] <kakuhen> ive never been able to get myself to like ruby syntax
[02:55:46] <kakuhen> but i still want to try it some day
[02:56:58] <pl> ruby when it comes to design is a bit of what happens when you reimagine Perl through Smalltalk
[02:57:42] <kakuhen> fun !
[02:57:56] <pl> and implementation was heavily influenced by lisp, emacs lisp even
[02:58:59] <pl> arguably a big reason behind some of the differences in the internals between Python and Ruby, in ways that impacted language design
[02:59:27] <gilberth> Every article spelling it "LISP" is suspect. And is there even a standard Ruby? Why then complain that networking is not part of ANSI-CL? Mood point.
[03:00:42] <kakuhen> in my experience, people calling lisp LISP usually have no idea about the language, but I like to keep these stereotypes to myself :x
[03:00:48] <kakuhen> also i dont know much about cl either
[03:01:52] <pl> gilberth: Ruby has an ISO standard, and a living standard which is used for interoperability testing between implementations
[03:01:56] <hayley> Yes, that is one stereotype I use a lot.
[03:02:52] <hayley> But I don't see what Ruby being dynamic has to do with the GC. It's all vectors of slots down there, no?
[03:04:42] <gilberth> pl: Oh. I was not aware. And "living standard" is new-speak for "look at the implementation we have".
[03:04:50] <pl> gilberth: nol
[03:04:51] <pl> no
[03:05:27] <pl> gilberth: living standard as in "this is somewhat documented spec, and this is a complete test suite that is the actual authority on whether your implementation is standard-compliant)
[03:05:45] <gilberth> No? May I call Gray Streams a living standard, then?
[03:06:48] <pl> gilberth: if there's a versioned test suite that one can depend on? Probably
[03:07:14] <recordgroovy> Apparently there was a draft ISO standard at some point, but the link to it is dead now: https://stackoverflow.com/questions/3263031/is-there-a-formal-specification-like-the-java-language-specification-jls-for
[03:07:15] -ixelp- standards - Is there a formal specification (like the Java Language Specification (JLS)) for Ruby? - Stack Overflow
[03:07:19] <gilberth> And where is the W3C test suite? There are some, but far from exhausting, otherwise you won't find a bug in any render engine the moment you look at it.
[03:07:46] <recordgroovy> I see also a link to a community-driven standard -- I would personally put this at the same weight as, say, SBCL's documentation
[03:08:09] <gilberth> Which is no standard by any means.
[03:08:13] <pl> recordgroovy: Ruby v1.8 is ISO/IEC 30170:2012
[03:08:24] <moon-child> the concept of a 'living standard' is ridiculous.  The whole point of a standard is that you can point to some code, or an implementation, and say 'this is compliant with the standard'.  If the standard can change at any time, such a statement becomes meaningless
[03:08:52] <recordgroovy> pl: thanks!
[03:09:22] <pl> moon-child: that's why Ruby a) versions the "standard" b) the test suite is the conformance benchmark that even th original implementation must pass
[03:10:07] <moon-child> that's not a living standard, then, just a versioned standard
[03:10:12] <moon-child> living standard is something like html5
[03:10:19] <pl> I blame the newspeak getting to me :P
[03:10:21] <gilberth> A test suite is nice, but no requirement of a standard. A good standard does not need any test suite.
[03:10:29] <kakuhen> i like how not a single web browser is fully compliant with html5 spec
[03:10:35] <kakuhen> but they still add more and more to it every year
[03:11:21] <gilberth> kakuhen: Yes, and like at old times we face a duopol. Though it once was the Netscape monopol.
[03:12:34] <pl> I love how people forgot that non-trivial part of why IE won was Netscape bungling 5.x and 6.x, and IE being frankly better in certain ways that involved /standards as they were considered then/
[03:12:59] <gilberth> I mean, Closure was standard-conforming, even more so than Netscape and even was the first browser ever to pass the CSS-1 acid test. Still, you had trouble browsing random web pages. Because the pages were written in Netscape-ML not HTML with Netscape-Stylesheets not CSS.
[03:14:21] <gilberth> Ironically the Netscape HTML parser is now speced as part of HTML5. Some two decades too late.
[03:15:43] <pl> I was mostly in Netscape camp due to anti-MS feelings, not because Netscape was better other than the fact that it ran on linux
[03:15:44] <gilberth> So, even when authoring HTML+CSS+JS, it's trial and error, as browsers don't care to implement the specs by W3C.
[03:15:54] <pl> (and before that, on OS/2)
[03:16:36] <kakuhen> look at how chromium implements it and copy 
[03:16:43] <kakuhen> :))
[03:16:47] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[03:17:06] <gilberth> pl: My point was: To have a practical browser, you needed to probe/measure what Netscape did. Implementing the spec was not suffice. This situation isn't any different today.
[03:18:47] <gilberth> Major problem is: Web browsers still interpret any crap in their own way, instead of throwing syntax or semantic errors. So authors just hack something together and when it works, they are set. Compilers don't work that way.
[03:19:25] * hayley looks up c# thread local gc and gets more damn ThreadLocal results.
[03:20:06] <gilberth> This makes it impossible to implement a new web browser from scratch.
[03:21:04] <kakuhen> servo looked like an interesting effort but i think its mostly dead now
[03:21:15] <kakuhen> you can only rewrite so much in ru5t until interest dies
[03:21:19] <hayley> https://www.mono-project.com/docs/advanced/garbage-collector/sgen/ suggests concurrent-parallel mark and sweep, with thread local allocation buffers.
[03:21:20] -ixelp- Generational GC | Mono
[03:23:28] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[03:23:55] <hayley> https://news.ycombinator.com/item?id=14378297 A crab admits the generational hypothesis admits!
[03:23:56] -ixelp- > The importance of a moving/compacting GC varies hugely depending on whether or... | Hacker News
[03:24:01] <hayley> Er, that the hypothesis exists?
[03:27:45] <moon-child> it just happens to hold for c#
[03:29:15] <hayley> More that it still exists in the presence of escape analysis and value types if I read the rest of the thread right.
[03:30:04] <hayley> "There's a HUGE difference between a thread-local cache (which everyone uses and which you cite) and per-thread nurseries (which are an obscure idea that hardly anybody likes)." fite me
[03:37:31] <hayley> Aw, come on, OpenJ9 calls TLABs "thread local heaps"?
[03:38:17] *** Quits: random-nick (~random-ni@87.116.182.72) (Ping timeout: 248 seconds)
[03:42:09] <hayley> OTOH I suppose even with the read barriers in that Haskell prototype, the speedup from locality looks like it is more than the usual slowdown for a read barrier.
[03:44:47] <hayley> https://www.cs.purdue.edu/homes/suresh/papers/ismm12.pdf "Eliminating Read Barriers through Procrastination and Cleanliness" I can do the former but not the latter.
[03:51:27] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[03:51:58] <hayley> gilberth: So they use a limited reference count to track "cleanliness". That said, it looks fine as it only counts linear/local non-linear/global non-linear.
[03:52:22] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[04:06:32] <hayley> And the end result is sort of like shrinking the nursery. Last night I was pondering about using an even smaller initial allocation space before being promoted to the "nursery", and this does something similar.
[04:19:50] <hayley> https://www.youtube.com/watch?v=JAmCQZ8bwcQ
[04:19:51] -ixelp- Gary Numan (London 1979) [01]. Me I Disconnect From You - YouTube
[04:20:27] <hayley> But IMO we could simplify the "refcount" and just have either "pointers from outside this page" or "no pointers".
[05:29:47] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[05:57:24] *** Joins: ln43 (~ln43@user/ln43)
[06:01:50] <gilberth> Bah! I was bored and tried the MATE desktop with Debian. I can't believe it! A completely broken modmap still is default, with both Alt and Meta being on the same modbit, as well as Super and Hyper (sic!)! When, oh when, please, when, will people learn how modifier bits are supposed to work?
[06:02:31] <moon-child> nobody gets modifiers right
[06:02:52] <moon-child> try this: plug in two keyboards, press shift on one, shift on the other, release it on the first, and then press any key
[06:03:56] <gilberth> That's a completely different issue. I am talking about a brain dead default configuration of the modifier bits for decades with XFree86.
[06:04:26] <moon-child> well, these are both demonstrations of the fact that people haven't spent enough time thinkng about and working with modifiers
[06:04:30] <gilberth> When Alt and Meta produce the same bit, how could I tell them apart?
[06:07:07] <gilberth> I could live with the idea, that the key labeled "Alt" should be X11 Alt key and not the Meta key. That is an issue of the keyboard layout.
[06:08:06] <gilberth> XEmacs used to issue a prominent warning in that case.
[06:09:23] <gilberth> Anyhow, I was looking for the Multi-Buffering X extension. Seems like Linux does not have that. Nor has XQuartz. How to have vsync then? Use GLX?
[06:09:47] * gilberth fears the day, he needs to switch back to Linux for the desktop.
[06:12:09] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[06:13:34] <moon-child> what do you use currently?
[06:13:37] <kakuhen> return to pufferfish
[06:14:10] <gilberth> moon-child: Me? macOS.
[06:15:16] <moon-child> I use mainly linux and freebsd atm, but was thinking about getting a mac.  Those m1s are sexy, and my laptop is getting on in years
[06:16:37] <gilberth> Apropos keyboard: The XKB extension idea is, that the keyboard layout is not held on the server, but the client. So, yes, the keyboard layout of the remote machine, I log in to, would govern the layout of my local keyboard, in just that application window? Get real!
[06:19:35] <gilberth> So I suggest those kids rather craft X12, which would be a protocol to ask the server to ask the kernel tojust handover the bus to the client and be set. Sad part: It's partly done this way already.
[06:21:20] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[06:21:35] <moon-child> arcan
[06:34:22] <gilberth> Bah, would I ever return to Linux for desktop use, I would just not use a desktop environment. What for?
[06:34:49] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 248 seconds)
[06:46:14] <edgar-rft> There's nothing on top of my desk but me!
[06:46:49] <gilberth> You sit on the desk? Don't you have a chair?
[06:51:56] <edgar-rft> No, I don't have a chair on top on my desk.
[06:52:10] <edgar-rft> What should that be good for?
[06:53:17] <gilberth> For sitting on. So you stand on your desk?
[06:53:38] <moon-child> edgar-rft: obviously if you're sitting on top of the desk you need somewhere to put the monitor
[06:53:40] <moon-child> so you put it on the chair
[06:54:48] <gilberth> moon-child: Or it's mounted on the wall, like with TVs in hotel rooms?
[06:57:46] <edgar-rft> my chair isn't mounted to the wall
[07:01:02] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[07:05:27] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[07:21:00] <hayley> gilberth: So the one viable technique for thread local nurseries with mutable objects I found is to add a "reference count" bit so that you know how far back in the heap you need to fix up at most. How do you feel about that?
[07:24:57] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[07:26:57] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[07:27:24] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[07:31:14] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[07:31:44] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[07:38:33] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[07:42:46] <gilberth> hayley: Bad.
[07:43:42] <hayley> If I said the refcount was monotonically increasing, as it only tracks either "definitely no references older than me" or "there might be references older than me"?
[07:44:24] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[07:44:49] <gilberth> Isn't there a simpler solution?
[07:46:23] <hayley> The simpler solution is to run a full minor GC, which involves scanning the whole nursery. It is slow.
[07:48:06] <gilberth> You talk about references from outside the nursery into it?
[07:49:09] <hayley> References from inside the nursery, from "before" the object. Say the GC preserves age, then we would mark references coming from lesser addresses (which would only be made by mutation), and if there are no such references, we only scan higher addresses.
[07:49:41] <gilberth> ok
[07:50:33] <hayley> Well, more precisely, the paper mentions tracking the "session" of objects allocated after the last minor GC. But I think just "older" objects work too. It would correspond to Baker's optimistic stack allocation, but without the stack.
[07:51:49] <gilberth> What exactly do you want to solve?
[07:52:30] <hayley> Using thread local heaps with mutable objects. The problem is that the naïve approach is to do a minor GC every time we publish a reference to a local object to the global heap.
[07:53:10] <gilberth> Thus my last question.
[07:53:13] <hayley> Now, imagine I have a program where threads hold onto some state, do some work, and report back on a mailbox in a loop. Every report would require tracing the state, which we'll assume is unlikely to die.
[07:55:08] <gilberth> ok. So you already have a write barrier for noting when giving a pointer away?
[07:55:55] <hayley> Yes.
[07:57:42] <gilberth> Good. And the trouble is, objects pointed to from the object whose pointer escaped?
[07:58:35] <hayley> Yes, as we have EQ and mutation in general, we have to fix up pointers after copying out.
[07:59:31] <gilberth> Fix up pointers in the nursery?
[08:00:29] <hayley> Yes.
[08:00:29] <gilberth> I mean, this sounds like the write barrier would evacuate the object into outside world, as soon as an outside->inside reference is created, right?
[08:00:42] <hayley> Precisely.
[08:02:46] <gilberth> Ok. What happens, when Thread A does (setq *x* (cons 1 (cons 2 3))) and thread B reads (cdr *x*)? Is (cons 2 3) evacuated, too? And, when? on SETQ or on CDR?
[08:03:30] <hayley> Yes, the transitive closure is evacuated on SETQ, unless you want a read barrier too.
[08:04:01] <gilberth> Ok. I get that. So a micro mark for that pointer. Good.
[08:04:30] <hayley> The optimization is to only scan objects made since the last escape, unless it is shown that there might be a reference in the rest of the nursery. And recording that requires a one-bit reference count of sorts.
[08:04:48] <gilberth> Now, I see what you mean. You must update pointers in the nursery to evacuated objects.
[08:04:54] <hayley> Right!
[08:05:26] * gilberth thinks.
[08:06:55] <gilberth> So, what would reference counting do here?
[08:07:06] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Quit: Leaving)
[08:07:37] <hayley> Another option I want to consider is to just assume a unidirectional heap, i.e. that there were no updates, unless shown otherwise. This rarely happens all the time for whole heaps, because you need a "pure" eagerly-evaluated programming language, and the only one I can think of is Erlang. But it is a fine assumption locally.
[08:08:19] <hayley> The bit marks that there might still be a reference from lesser addresses or not. So it is like a one-bit reference count to me.
[08:09:18] <gilberth> Hmm, /me wants sth more clever.
[08:09:30] * hayley hears screaming from downstairs. "This computer's so fucked!" Sometimes she has to remember not everyone who shows their rage to a computer is a bad programmer.
[08:10:10] <gilberth> Your brother lost at a game?
[08:11:36] <hayley> My dad complaining about my old^W^Whis machine.
[08:12:17] <gilberth> Ah. Anyhow, this is not an easy problem, you have there.
[08:12:55] <gilberth> And I take it, you want to avoid read barriers?
[08:12:58] <hayley> That is why I am asking around for it.
[08:13:07] <hayley> Yes, I'd rather not use a read barrier.
[08:13:38] <hayley> Not unless you can give me one in hardware, and Appel's MMU hack wouldn't work here.
[08:15:51] <gilberth> Hmm, I'll give it some thought. But I have not done my home work yet.
[08:17:21] <gilberth> I mean, this is nasty. You also would need to update pointers in registers.
[08:17:25] * hayley reads the mechanical-sympathy thread
[08:17:47] <gilberth> What's it about?
[08:17:50] <hayley> Oh, bollocks, Gil Tene is telling me that the read barrier in C4 is faster than the write barrier in G1?
[08:17:58] <hayley> https://groups.google.com/g/mechanical-sympathy/c/JJTUs_jXw5A/m/55cRmOUoCwAJ the Go GC
[08:17:59] -ixelp- Modern Garbage Collection (good article)
[08:18:59] <hayley> "Self-healing barriers eliminate the inefficiency sometimes found in concurrent collectors by ensuring that barriers only [effectively] trigger at most once per work unit" I am thinking a similar thing for the one-bit reference count; we only are going to flip it once per object.
[08:21:04] <hayley> If it is that cheap, I might consider a read barrier/load-value barrier. And beach will likely hit me with a clue-by-four over it.
[08:24:50] <hayley> There is also the question of whether or not there is enough parallel code for a more scalable GC which still has more per-thread overhead to be a net positive. IIRC Azul stopped making hardware because there wasn't enough parallel code for big wins.
[08:26:23] <gilberth> Well, I was thinking about forwarding pointers. I can imagine that they are cheap. Especially with ARM.
[08:26:40] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[08:27:47] <hayley> Didn't know ARM helped. But if you want to use alignment traps, consider that EQ doesn't load anything. (But again, given that most of the time you aren't hitting a read barrier, you can do a normal EQ, then chase forwarding pointers if it fails.)
[08:29:24] <hayley> (I expect to run single-threaded on a micro-controller, so I will probably just use a normal generational GC with remembered cards, STW nursery and incremental tenured heap. With the fast RAM and CPU I could probably do read barriers, but I'd rather not.)
[08:29:25] <gilberth> Oh, with AMD64 too. GCC just refuses to emit a conditional move with a memory operand.
[08:30:26] <hayley> Right, conditional moves. I thought you weren't supposed to use conditional bits on newer ARM. And the read barrier on C4 fixes things up so that it only traps once per cycle.
[08:31:43] <gilberth> Hmm. What is wrong with conditional moves on ARM?
[08:31:43] <hayley> Yeah, Aarch64 removes conditional execution, saying branch prediction got good enough.
[08:32:14] <gilberth> Ok.
[08:33:00] <hayley> (Note that SICL is 64-bit only, though Micro-Utena/Zero Feet will run on 32-bit ARM first.)
[08:33:43] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[08:34:21] <gilberth> And yes, I keep forgetting EQ.
[08:34:30] <hayley> Reminds me, I once suggested the name Kaplan Scheme as an opposite to the Stalin Scheme compiler. Given we have a JIT rather than whole program analysis, I figure my Lisp on Utena better be called Kaplan.
[08:35:03] <hayley> (If you don't get the joke: <https://en.wikipedia.org/wiki/Fanny_Kaplan>)
[08:36:09] <gilberth> A sufficiently advanced JIT can do what whole program analysis does with dynamic systems. And better, when we let it to speculate.
[08:36:28] <hayley> Yes, you get profile guided optimization for free.
[08:36:54] <humasect> heres the thing, dynamic is eye of the beholder, nonstop all programs are all static (depending on data/input, but given that is still finite responses)
[08:38:03] <gilberth> I mean, this idea is old, very old. Why not just keep your data base about any information you used for optimization along with the information which code was build under which assumptions. You update the system dynamically, you recompile what is needed.
[08:39:01] <humasect> no matter how many facets you mold the dice, only those will be rolled 
[08:39:38] <humasect> like the recent nethack facebook ai challenge 
[08:39:56] <humasect> once the binary is molded there are only certain combos and patterns. 
[08:40:02] <gilberth> I still like interactive development, and the ability to patch running systems.
[08:40:12] <humasect> smalltalk =) 
[08:42:17] <gilberth> I mean, I could fix a function in seconds, while the C++ hackers need to wait hours for his program to recompile and yet more time to maneuver it in a state, where he could test his change. Therefore the overrating of debuggers. I hardly use any, I debug with PRINT.
[08:42:37] <humasect> ugh   d: warning: dylib (/usr/local/opt/libgccjit//lib/gcc/11/libgccjit.so) was built for newer macOS version (11.3) than being linked (11.0)
[08:43:10] <humasect> gilberth: that, i can relate with. all my C days as well, just needed print if anything. 
[08:43:25] <humasect> a bit autistic/ocd to visualise the memory map but it is important to do so
[08:43:51] <humasect> but sometimes have to work with the code of others..
[08:43:52] <gilberth> And your dynamic library trouble wouldn't have happened too. That libs are too static.
[08:44:13] <humasect> im not sure
[08:44:26] <gilberth> "was built" says it all.
[08:44:41] <humasect> just had to brew install gcc i guess?? strange
[08:44:55] <humasect> who knows if ive got two versions of gcc now 
[08:45:04] <humasect> (whatever Xcode has going o)
[08:45:23] <gilberth> Xcode uses clang.
[08:45:23] <humasect> well prebuilt code is like, really we could run C source code gilberth
[08:45:27] <humasect> oh right =) 
[08:46:00] <humasect> like emacs .el then compiled .elc (or .eln)
[08:46:28] * lotuseater got to know tcc
[08:46:47] <humasect> in theory we could surely run .c files as .sh or .lisp 
[08:47:03] <gilberth> This also is why I like to install sw in directories like /opt/foo-42.69/, so that one version cannot clobber another.
[08:47:16] <humasect> i like when soft installs in opt
[08:47:24] <contrapunctus> gilberth: NixOS/Guix? 😏
[08:47:27] <humasect> else /local/ is manageable
[08:47:46] <humasect> i would like to not see blender, ruby
[08:47:49] <humasect> python*
[08:48:13] <gilberth> contrapunctus: No, ./configure, /me and PATH.
[08:50:28] <gilberth> lotuseater: tcc is nice. It also comes as a lib for runtime use. COMPILE for C. :)
[08:50:45] <humasect> back in the day i used lcc for windows
[08:50:53] <humasect> just after rhide/djgpp
[08:51:31] <contrapunctus> gilberth: I mean, it sounds like you'd like NixOS/Guix, then.
[08:51:50] <lotuseater> yes when I will study some more C I think this is well for use and way less heavier than gcc
[08:53:11] <gilberth> contrapunctus: Frankly, I like my olde Debian. I am familiar with it and it does everything I need, which is not much.
[08:53:38] <humasect> i missed mac and now we are reuinited and could not be happier 
[08:54:08] <gilberth> loutseater: C development is batch oriented, anyway. So why would it matter how heavy gcc is?
[08:54:43] <moon-child> that doesn't mean it's not convenient when programs compile more quickly
[08:54:49] <lotuseater> it didn't say it does?
[08:55:09] <humasect> need all the .h files 
[08:55:35] <gilberth> moon-child: When they compile at all. There is much GCCism to be found in .h files.
[08:56:00] <moon-child> which is supported by tcc
[08:56:31] <gilberth> All? Also those nasty #pragma's you find with say macOS?
[08:57:07] <humasect> ___gnu___
[08:57:25] <moon-child> I don't know about all, but it certainly supports quite a lot of them, and compiles a lot of useful software
[08:58:03] <lotuseater> does it also cover the "restrict" keyword? i read this is the only one that has no equivalent in C++
[08:58:23] <humasect> not sure if that is standard
[08:58:55] <moon-child> it is standard, and yes, tcc supports it
[08:59:48] <moon-child> dennis ritchie doesn't like it though https://www.lysator.liu.se/c/dmr-on-noalias.html
[08:59:48] -ixelp- Dennis Ritchie: Why I do not like X3J11 type qualifiers
[09:00:23] <lotuseater> so better saying people shouldn't talk about portability of their code if just certain big toolchains like gcc or clang support some stuff
[09:02:02] <hayley> Why do they use noalias so aggressively then?
[09:02:37] <lotuseater> I don't know, what does it do?
[09:03:08] <moon-child> presumably 'they' are not dennis ritchie
[09:03:46] <lotuseater> right
[09:04:00] <hayley> noalias seems like a reasonable inclusion, but it shouldn't be in the types of these functions if it's a problem.
[09:04:15] <gilberth> I already mentioned it, but this is hilarious <http://clim.rocks/gilbert/emacs-broken.png> But this ruins Emacs for me.
[09:04:36] <moon-child> my
[09:04:48] <hayley> My cursor goes dim while hovering over Emacs. Though I don't use it much.
[09:04:50] <humasect> "ruins emacs"? 
[09:04:56] <humasect> my emacs cursor is fine..
[09:05:04] <hayley> https://www.youtube.com/watch?v=8K9EOeoHo_Y Melbourne uses compacting GCs
[09:05:04] -ixelp- Why Melbourne’s Bins are Solar Powered #shorts - YouTube
[09:05:35] <gilberth> "restrict" is in ISO C. IIRC since C99.
[09:06:00] <humasect>  whoa, what does it do? never heard of it or seen it. is this correct reality ?
[09:07:33] <gilberth> humasect: Try (set-frame-parameter nil 'line-spacing 10) and then go to the end of line. And it's fine with 24.5.1
[09:08:03] <humasect> im compiling latest as we began speaking
[09:08:06] <humasect> 24.!
[09:08:24] <gilberth> Yes, that version is fine.
[09:09:19] <gilberth> Version 27 is not.
[09:11:40] <humasect> for the cursor...
[09:19:08] * hayley hears more shouting and puts https://www.youtube.com/watch?v=5G35NI45vno on the jukebox.
[09:19:37] <gilberth> Does shouting help?
[09:19:38] * humasect just put on https://www.youtube.com/watch?v=O9KhqIRbrjA&list=RDO9KhqIRbrjA&start_radio=1
[09:19:42] <lotuseater> who's shouting? ∘_○
[09:19:53] <hayley> My parents. Because someone forgot the discount code or something.
[09:20:03] <lotuseater> oh
[09:20:25] <gilberth> A discount code? Really?
[09:20:58] <lotuseater> why not? :)
[09:21:18] <gilberth> We still have FREENODESUX for a month of free Libera Gold access.
[09:22:04] <lotuseater> :D
[09:22:06] * hayley checks commit log
[09:22:33] <hayley> "Simplify implementation of trim functions." Great, if it's trimming register arrangements I have to pull and check everything. No, it's trimming strings. Phew.
[09:24:38] <hayley> A dubious USB hub: https://i.redd.it/0bfug28x8vj71.jpg
[09:25:02] <gilberth> lol
[09:25:20] <moon-child> my
[09:25:33] <lotuseater> ehm
[09:26:01] <moon-child> brings a whole new meaning to 'intel inside'
[09:26:02] <gilberth> "Intel inside!" Couldn't resist. Sorry.
[09:26:41] <gilberth> moon-child: Two idiots one thought. Let's found a club!
[09:27:01] <moon-child> hmm.  Maybe we can call it #lispcafe? :)
[09:27:04] * hayley now thinks of funny fatal error messages.
[09:27:10] <moon-child> only with blackjack
[09:27:11] <moon-child> and hookers
[09:27:18] <lotuseater> maybe an ode from Apple to Intel users
[09:27:35] <lotuseater> moon-child: i also thought where's my futurama meme?
[09:27:40] <hayley> "Here come a riddle, here comes a clue, if you were really smart, you'd know what to do, when I say, "Attempted to divide by zero." The answer is obvious: [ABORT] Return to top level."
[09:27:57] <lotuseater> nice
[09:28:22] <hayley> To be fair, I've had that joke for years. Can't think of any others.
[09:29:29] <hayley> "Veronica Merco, of the German Federal Republic, had this to say: An attempt to access an array of element-type NIL was made.  Congratulations!"
[09:29:47] <lotuseater> https://trash.randomerror.de/hqs29/wrong_but_fast.jpg
[09:31:24] <hayley> https://www.youtube.com/watch?v=FTuVB5-19FE
[09:31:24] -ixelp- Crash - YouTube
[09:32:36] <humasect> https://www.youtube.com/watch?v=ioqgrYorhkU
[09:32:36] -ixelp- King Gizzard & The Lizard Wizard - Straws In The Wind - YouTube
[09:32:49] <lotuseater> nice i tried this the first time now :D
[09:34:13] <humasect> hmm. "battery source: power adapter. battery: not charging" 
[09:34:53] <lotuseater> did you allocate an array of element-type nil too? :D maybe it has system side effects
[09:38:18] <lotuseater> brrr i hear the rain from outside
[09:39:10] <White_Flame> "Invalid index 0 for (SIMPLE-VECTOR 0), should be a non-negative integer below 0."
[09:40:26] <lotuseater> hah.
[09:40:38] <White_Flame> that's my favorite one
[09:40:51] <gilberth> What's so funny about it?
[09:41:01] <White_Flame> "should be a non-negative integer below 0."
[09:41:28] <hayley> They would break joke compatibility if they tested for (zerop (length vector)) I suppose.
[09:41:31] <White_Flame> great advice, sbcl, I'll get right on it!
[09:41:54] <gilberth> And? It's correct.
[09:42:08] <White_Flame> there are no non-negative integers below zero.  It's asking you to do the impossibel
[09:42:30] <kakuhen> if they had said number instead of integer, maybe one of the hyperreals would've done the trick ;)
[09:42:30] <gilberth> Exactly.
[09:43:09] <White_Flame> like "Error, should be an infinitely looping proper list" or something
[09:43:31] <White_Flame> erm, recursive, whatever
[09:43:43] <gilberth> circular.
[09:43:55] <White_Flame> yeah, that's the word
[09:44:02] * White_Flame takes his brain pills
[09:45:12] <gilberth> So what should the AREF error message say instead?
[09:45:58] <hayley> "There are no elements in this vector, go away!"
[09:46:02] <kakuhen> ^
[09:46:04] <kakuhen> say the obvious thing
[09:46:11] <kakuhen> and conditionally report details
[09:46:16] <gilberth> CCL says "Error: Array index 0 out of bounds for #() ." and plenks.
[09:46:23] <moon-child> it is not a _bad_ error message, just a funny one
[09:47:12] <hayley> Why yes, it's a "friendly" error message, it even jokingly tells you to get lost!
[09:48:23] <gilberth> However, I wonder why SBCL throws an error, when I say (make-array 1 :element-type nil)? *print-array* is NIL, still the printer throws an error. Why?
[09:48:42] <hayley> It's only rude if you already don't like the compiler, and/or you don't have a funny bone. Or you're the person that convinced my ex to leave me.
[09:49:03] <hayley> gilberth: Nowadays it just prints arrays non-readably, idk.
[09:49:48] <gilberth> hayley: Still. And I do, when working with huge arrays. So it throws an error, just in case?
[09:50:06] <humasect> brain pills =( 
[09:50:33] <kakuhen> where can  I obtain the brain pills
[09:50:38] <hayley> Sometimes I have to remind myself that I'm in the universe where sending someone Don't Build Your Own Lisp indirectly lead to a breakup after like two years.
[09:51:04] <gilberth> I mean, (stringp (make-array 1 :element-type nil)) is fine, as it should be. And it returns T, as it should.
[09:51:13] <humasect> computer is brain pill 
[09:51:46] <kakuhen> i made an awful choice of brain pills then ( ；´Д｀)
[09:52:23] <lotuseater> i should get some mate later. and new cookies
[09:52:25] <gilberth> hayley: At least, you learned the lesson.
[09:52:27] * hayley uploaded an image: (172KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/DMWkceZySTVEllcIAZqeSIvo/Screenshot_2021-06-08_19-54-36.png >
[09:52:28] <hayley> Or in other words, my least controversial writeup actually did cause the most damage.
[09:53:41] <humasect> y tho
[09:53:43] <hayley> What's the lesson?
[09:54:36] <gilberth> Don't build your own Lisp?
[09:54:54] <hayley> I learnt that long ago.
[09:55:05] <kakuhen> i will make my own lisp eventually
[09:55:19] <moon-child> that's your _least_ controversial writeup?  I would like to see some of the others
[09:55:20] <hayley> Pro-tip: As long as you don't fuck it up, I won't have to complain you fucked it up.
[09:55:39] <hayley> moon-child: https://applied-langua.ge/posts/
[09:55:40] -ixelp- Published texts
[09:55:54] <gilberth> hayley: I mean, you could have had hobbies like any other girl at your age, like shopping for instance.
[09:56:24] <gilberth> Instead you mess with *ughghggbrr* GAR-BAGE!
[09:56:58] <moon-child> kakuhen: you may make one, just as long as you do not build it
[09:57:29] <gilberth> hayley: You even have a handbook about that hobby. Strange.
[09:57:33] <hayley> I consider "Terminal boredom", "Ethical software is a sad joke" and "A parastatal problem" to be the worst of them.
[09:58:13] <hayley> gilberth: The Art of the Automatic Memory Object Management Protocol
[09:59:56] <gilberth> TAoAMOMP? Does it have a nice cover?
[10:00:17] <hayley> Still, I consider "bad implementation is bad" to be a relatively complaint-free argument.
[10:00:58] <gilberth> Who complains? Are you talking about my favorite article of yours?
[10:01:50] <hayley> Well, someone on Hacker News accused me of being a "whiny little bitch" because I introduced the article with "First, God help you if you are going to write your first interpreter in C. Second, God can't help you if you follow this book."
[10:03:14] <lotuseater> even he would respond "please use garbage collection as I did"
[10:03:25] <gilberth> And? Perhaps the original book was satire, and we didn't get it?
[10:03:36] <moon-child> ha, if only
[10:04:23] <gilberth> I mean, after it's fun to read.
[10:04:31] <gilberth> * after all
[10:06:06] <hayley> One of the exercises at the end is to retrofit a GC to the interpreter. But there is also a pattern of diddling an object, and then having a copy to put back. If you think you can just remove the copies and frees, you are terribly wrong.
[10:06:34] <gilberth> As this hilarious GC benchmark with cut and paste errors, and looping ten times as less in the favorite language and not noticing, that the compiler optimized what was thought to be benchmarked away. Wasn't that the same author?
[10:06:58] <hayley> I think someone else wrote the benchmarks, or at least some of the ports. But if you maintain it, IMO same thing.
[10:07:22] <gilberth> ok. Then I misremembered, sorry.
[10:07:53] <hayley> Nope, you are correct. The author just hasn't configured git to use their GitHub account properly.
[10:07:54] <gilberth> We still have MicroPython!
[10:08:34] <hayley> "Running a STW GC on a microcontroller: the idiot's guide to real-time* microcontrollers" *Real-time is shorthand for really slow time
[10:09:03] <gilberth> lol. It takes *real* time.
[10:09:58] <hayley> "allocation is slow, so pool things" idk I'd just write a faster allocator
[10:10:23] <gilberth> Bah. I am bored. I'll need to find my productivity again tomorrow.
[10:10:34] <humasect> install linu
[10:10:35] <humasect> x
[10:11:00] <gilberth> hayley: A single add instruction not fast enough?
[10:11:22] <hayley> When your language implementation "is optimised to run on microcontrollers", but actually it is not optimized at all
[10:12:10] <hayley> gilberth: Depends. Apparently free pointer registers are overrated because you end up doing a cache miss to allocate. But if everything is fast SRAM, the plot changes.
[10:12:15] <gilberth> "But we inline! Even assembler!"
[10:13:04] <gilberth> hayley: Did I say "register"?
[10:13:18] <hayley> gilberth: On your beloved ARM, it'd have to be a register for a single add, no?
[10:13:26] <hayley> Else you have load, add, store.
[10:13:41] <gilberth> Load/store. Yes.
[10:14:09] <gilberth> Then just use r13. Not?
[10:14:13] <hayley> On x86 you could just ADD [blah], 8 but that doesn't give you the value. Hm.
[10:15:33] <hayley> How's XADD work again? MOV Rn, 8; XADD [location], Rn?
[10:15:35] <moon-child> xadd?
[10:15:38] <gilberth> ADD [blah], 8 already allocated. Nobody said, you also want to stash things in the object.
[10:15:47] <moon-child> ah you beat me to it.  Yeah
[10:20:39] <kakuhen> humasect: i installed fedora 34 to try out gnome 40, and i actually kind of like it 
[10:20:51] <kakuhen> my other purpose was to see whether kvm lived up to its hype, since bhyve isnt too impressive
[10:21:14] <kakuhen> now i have a laptop that's only ever turned on when i want to use qemu/kvm for some dumb task
[10:21:43] <gilberth> hayley: And where do you get the location from?
[10:32:40] <hayley> gilberth: Say we have thread locals in FS, then [FS + blah]?
[10:33:01] <hayley> moon-child: So, what do you find controversial about DBYOL? I guess the writing style was a bit...much.
[10:34:14] <hayley> (Though, again, after mentioning it, I have to note more evidence that my ex didn't care about what people did to me, more that I disliked them.)
[10:37:12] <hayley> (Just sayin'. Though I should have recovered by now.)
[10:38:06] <humasect> kakuhen: oh? i read article yesterday comparing someone's switch from mac to gnome
[10:38:14] <humasect> have not used it myself since hmm late 90s
[10:38:48] <humasect> i think anything with M1 chip is happy but i will survive with i5 =) 
[10:39:34] <hayley> The M1 is still 856 cores short.
[10:40:23] <hayley> If it is feasible to run single-threaded and/or coarse locking programs (what's the difference, really) then I don't want it.
[10:40:51] * moon-child plugs greenarrays
[10:42:00] <moon-child> or is 144 still too small?
[10:42:59] * hayley runs the calculator
[10:43:24] <hayley> 720 to go. And I want shared memory, which I guess a multi-computer chip doesn't offer (fair enough, still).
[10:49:15] <kakuhen> humasect: besides the gestures there isn't much similarity imo
[10:49:32] <kakuhen> you can convert dash to a dock or a taskbar if you want, but it barely functions as either of those two options
[10:49:46] <kakuhen> (also depends on extensions, so it makes gnome shell less stable)
[10:50:07] <kakuhen> also the thick titlebars and lack of minimize buttons throws me off since I rarely use programs in full screen
[10:50:22] <kakuhen> but besides that, gnome 40 fixes 99% of things I found wrong with gnome 3
[10:51:09] <humasect> kakuhen: yeah idk. i like mac 
[10:51:11] <kakuhen> people swear by KDE but it's somehow less stable and consistent than GNOME ever was for me (´・ω・)
[10:51:41] <humasect> only reason i dont use mac is because i have random pc hardware i have to make do with some frankenstein
[10:51:53] <kakuhen> the entire desktop just freezes if you want to use wayland, and on X11 your cursor will change across windows despite restarting the entire DE -- unfortunate for me who hates the default KDE cursors
[10:52:07] <humasect> back in the days (1.0) used gnome and kde back and forth. also worked on gnustep 
[10:52:10] <humasect> (windowmaker)
[10:52:23] <kakuhen> also gtk programs look very out of place in KDE whereas qt programs in GNOME look somewhat native.
[10:52:27] <humasect> yeh. see with mac i just turn the f*cking thing on and go to town.
[10:52:42] <kakuhen> but these are my personal opinions -- i'm willing to bet someone in here has the exact opposite thoughts as me :x
[10:52:51] <humasect> i didnt have to reboot and edit configs to add a second screen. i just had to plug in the hdmi 
[10:53:04] <kakuhen> oh it also doesnt help my first experience with KDE was with plasma 4
[10:53:11] <humasect> well with mac hardware i wouldnt dare run anything else
[10:53:40] <humasect> but anything else i would try to get as close to mac software as i could. oh wait.. thats most of the UI projects since the windows 95 start bar.
[10:53:54] <kakuhen> www
[10:53:56] <humasect> and X button and ok/cancel and scroll bars ffs and ...
[10:53:59] <humasect> heh
[10:54:08] <kakuhen> windowmaker is comfy but too bad everything that isn't a gnustep program will look out of place with it
[10:54:14] <kakuhen> a similar situation happens if you attempt using CDE 
[10:54:50] <humasect> it is not very common for someone to install linux on apple hardwrae 
[10:55:13] <humasect> kakuhen: yep. basically the situation with linux itself. gimp, blender, inkscape, firefox...
[10:55:19] <gilberth> What I find most disturbing is the idea is to take network-transparency away and reduce the display server to a glorified blitter. No matter what desktop environment you put upon that.
[10:55:35] <kakuhen> humasect: well, unless it's some very old powermac that people want to keep using for whatever reason
[10:55:35] <humasect> its a mess. and who the fsck decided that graphic icons in menus was a good idea? hmm??
[10:55:59] <humasect> gilberth: thin client? ive always liked that idea. PLATO system =) 
[10:56:10] <moon-child> gilberth: network _transparency_ is not what you want.  The protocol that works well on a single machine does not work well over a network.  You need _a_ network protocol, but it should not be the same as the local one
[10:56:20] <kakuhen> now that TenFourFox is officially dead and most PPC enthusiasts (read ppc, not power9 or whatever) probably do not program much, it's more worth it to run Debian or whatever on ppc64le than it is to keep rocking Tiger or Leopard
[10:56:41] <humasect> oh https://imgur.com/a/doeT88e 
[10:56:42] -ixelp- Imgur: The magic of the Internet
[10:56:55] <humasect> X11 was meant for thin client stuff 
[10:56:55] <moon-child> https://arcan-fe.com/2020/10/28/a12-advancing-network-transparency-on-the-desktop/  (and the prior post there linked) discusses
[10:56:56] -ixelp- A12 – Advancing Network Transparency on the Desktop | Arcan
[10:57:07] <humasect> and NeWS and then DPS and then --- ?? HTML ??
[10:58:12] <kakuhen> return to sunview
[10:58:28] <humasect> what is it ? cant find, never heare
[10:58:33] <humasect> heard*
[10:58:35] <gilberth> humansect: Well these days, a 1Gbps LAN is not fast enough to support a damn web browser? I like using X11 applications on a box 100km away, with a mere 10Mbps when you're lucky. And >30ms latency, when you're lucky. Should I run a HDMI cable across half of Germany? And Danmark, when I am vacation?
[10:59:01] <moon-child> 'Should I run a HDMI cable across half of Germany?' of course!
[10:59:14] <moon-child> (I wonder if the protocol would work with that sort of latency?)
[10:59:21] <gilberth> What's the maximum length of an HDMI cable, again?
[10:59:40] <kakuhen> not long enough
[10:59:49] <moon-child> you can daisychain them
[10:59:53] <moon-child> and put periodic amplifiers
[11:00:02] <moon-child> (I mean, you probably can't buuuuuut)
[11:00:13] <gilberth> Then, we need to shrink Germany. I have an idea: Start another war? We'll sure lose again.
[11:00:48] <humasect> human sect
[11:00:55] <moon-child> so instead of just east germany and west germany, we will have north-by-northeast germany and ... and ...?
[11:00:55] <humasect> i wont get the notifications, btw
[11:01:26] <humasect> gilberth: i was trying out screen mirroring today, iphone<->mac, it was okay. but one direction was laggy. 
[11:01:26] <gilberth> moon-child: I have a better idea: We give north germany back to danmark.
[11:01:51] <humasect> gilberth: but good point. of course not HDMI. that is why we have HTML and why it was mentioned. 
[11:02:02] <humasect> super small document descriptions 
[11:02:17] <gilberth> humasect: Still, I can't use firefox over about 15m distance.
[11:02:54] <moon-child> humasect: in general, display formats are based on a backing document format.  HTML is not distinct in that respect
[11:02:58] <hayley> https://www.youtube.com/watch?v=PcsumKaIXEs
[11:02:59] -ixelp- Gary Numan (London 1981) [07]. The Aircrash Bureau - YouTube
[11:03:15] <gilberth> HTML/CSS/AJAX is the new network transparent display server protocol. In fact I have a very experimental HTTP/HTML/AJAX/CSS backend for my Silica.
[11:03:53] <gilberth> Using SVG for graphics.
[11:04:07] <humasect> moon-child: but for xfer
[11:04:12] <hayley> Would anyone here take offense to a 1/16 byte/byte overhead for a bytemap rather than a bitmap?
[11:04:27] <moon-child> gilberth: was that why you were talking about svg being underspecified recently?
[11:04:30] *** Joins: shka (~herr@109.231.62.239)
[11:04:35] <humasect> gilberth: truth. however that is not what someone would do! you would just point your own firefox at the same URL. ????
[11:04:45] <humasect> aka The Inter Net
[11:05:08] <hayley> IIRC the proof for sliding GC to work requires objects are at least 2 words...but then they might not be aligned to 16 bytes. Dammit! 1/8 then?
[11:05:08] <gilberth> moon-child: Not specifically that. But, yes, I consider the SVG backend very useful.
[11:06:58] <hayley> The problem is a. I have no "object header" to cram bits into, and b. BT/BTS on x86 is either slow would you use a memory argument, or requires handholding by computing (ash bit-number -6) yourself.
[11:07:07] <gilberth> humasect: How would I do that with the EDA application I own?
[11:07:29] <humasect> EDA?
[11:07:54] <humasect> oh got it
[11:08:00] <gilberth> Electrical Design Automation, I believe. Schematics, PCBs.
[11:08:10] <humasect> oh i thought Electronic Document Access
[11:08:16] <humasect> (google)
[11:08:23] <gilberth> I am not yet found again, otherwise there would be a professional EDA suite in the "cloud".
[11:08:31] <humasect> hmm. i would say, they should use css
[11:08:47] <gilberth> * founded
[11:08:55] <humasect> well a kind of markdown that is transmittable (realtime if needed) like json or etc
[11:09:11] <gilberth> For what?
[11:09:36] <humasect> for what you are doing ?
[11:09:39] <humasect> what else?
[11:09:42] <humasect> what/
[11:09:49] <gilberth> Markdown for CAD?
[11:10:47] <moon-child> 'the conflict between the Church's Pulpit and Turing Tarpit'
[11:10:57] <humasect> gilberth: no just whatever format is used. 
[11:11:15] <humasect> obv all the pixels for every possible combined view is not stored, thats quantum stuff
[11:11:26] <humasect> X11 protocol no different
[11:12:15] <gilberth> I can't follow you here.
[11:12:54] <humasect> ok
[11:13:04] <humasect> well see VNC sends parts of the screen compressed pixels
[11:13:14] <humasect> X11 protocol sends ideas that are small and get translated to pixels 
[11:13:20] <humasect> marked down, if you will 
[11:13:23] <humasect> html same 
[11:13:41] <gilberth> Ok. Postscript too.
[11:13:44] <humasect> so gilberth you wouldnt use firefox remotely, you would use it locally, to the same address. ??
[11:13:46] <humasect> yeah
[11:14:01] <gilberth> X11 is device-dependent, though.
[11:14:12] <humasect> yeah 
[11:14:16] <humasect> er
[11:14:16] <humasect> yeah?
[11:14:38] <gilberth> hamuansect: Then take a word processor, or a CAD application. No URL I could point it to,
[11:14:42] <humasect> so each device needs its implementation, or, the protocol is dependant on device ? 
[11:15:07] <humasect> hmm. my cat name Plato. big idealist.
[11:15:16] <gilberth> Each client must ask the X server for it's damn pixel and color format.
[11:15:25] <humasect> send a text document we dont need a picture of it, just the "text data"
[11:15:41] <humasect> (the *Idea* of the paper. which gets rendered)
[11:15:48] <humasect> ohh
[11:15:56] <humasect> yeah..
[11:16:04] <gilberth> We are talking past each other. You talk about documents, I talk about interactive applications.
[11:16:14] <humasect> over networks
[11:16:20] <humasect> just different angles 
[11:16:31] <humasect> web browser is basically that
[11:16:57] <humasect> just html+css+js and 90% of devices have web browsers
[11:17:31] <humasect> tech is already there long ago, our minds however are stuck wherever they happen to be stuck at 
[11:17:40] <gilberth> My plan is to be a little bit like NeWS. With very slight bending of the CLIM spec, I send display lists to the HTML client, so that scrolling e.g. happens locally. Only the change set does need to be send down the wire. And it's completely device independent.
[11:17:53] <humasect> seen linux done on risc-v emu on gpu pixel shader, what are the limit ?
[11:18:17] <humasect> wait gilberth what are you working on now =) 
[11:18:26] <humasect> dirty rectangles
[11:18:50] <gilberth> I am work on nothing right now. I work on my CLIM in general.
[11:19:05] <gilberth> humansect: Higher level than dirty rectangles.
[11:19:49] <humasect> last here you were working on custom cpu 
[11:20:17] <humasect> i think html/css/js is a decent transport.. although i would use webasm over js of course
[11:20:20] <gilberth> That is what I do, when I am stuck with my CLIM.
[11:20:27] <humasect> oh =) 
[11:20:55] <humasect> i got a macbook a few months ago but too scared to use it because i will get attached and it will break or get stolen so ive had it in my dresser =) 
[11:21:00] <humasect> using it today because feeling lucky 
[11:21:09] <humasect> also need coding for sanity.
[11:21:15] <humasect> (drank a lot this year. )
[11:21:48] <gilberth> I drank nothing this year, would kill me.
[11:22:22] <gilberth> And as I am not finished yet, that would be unfortunate.
[11:22:29] <hayley> https://twitter.com/lordbeef/status/1431406983366660100 In which the bad guys in Apple+ TV shows use Android phones.
[11:24:06] <gilberth> humasect: html/css/js is a mess.
[11:26:39] <humasect> yes
[11:26:48] <humasect> but imagine without it! 
[11:26:58] <humasect> its there to control a worse mess
[11:27:05] <humasect> and for that is doing an ok job 
[11:27:18] <humasect> gilberth: you arent drinking?? !
[11:28:02] <gilberth> I used to.
[11:28:19] <humasect> i know. i havent been around for a while and it is great to hear i am proud
[11:28:32] <humasect> (oni-on-ion) i drank a lot and learned my lesson(s)
[11:28:33] <lotuseater> drinking water and coffee instead :)
[11:28:43] <humasect> i stopped caffeine 1.5 year ago =)
[11:29:10] <lotuseater> i just get some with the mate, I'm no coffee guy
[11:30:04] <humasect> i cant find anything else to drink, sipping on stuff is fun
[11:30:09] <humasect> puffing on stuff as well
[11:30:17] <humasect> habits are stupid and great and bad
[11:31:06] <humasect> sip on water? yeah... i was born into dopamine so i am accustomed to carrot on a stick 
[11:31:38] <humasect> smoke break, beer after work, coffee in the morning, what else
[11:32:07] <gilberth> The story of HTML is an endless story of misunderstandings. Speced as a document description language, used as a page description language. We would have been better off, when in the early days there would have been e.g. some interactive PS, leaving the idea of HTML intact.
[11:33:36] <humasect> hypercard ? 
[11:34:07] <humasect> oh for links. 
[11:34:33] <humasect> but for what other document description format? aside from plain text. which turns into *BOLD* /Italic/ and whatnot because features get added by nature
[11:35:31] <gilberth> Have you looked at HTML? HTML2 even?
[11:35:55] <humasect> no, never. 
[11:36:04] <humasect> i have never seen HTML in my life.
[11:36:31] <humasect> as a format it is bs we know that =) but as a document format (DOM) what is more popular? 
[11:36:56] <humasect> as for the story of thin-clients and such, web browsers are basically it.
[11:37:08] <humasect> its the middle meeting point of all-the-things
[11:37:09] <gilberth> Well, HTML is pretty simple. CSS once was pretty simple. People still use it for more than describing documents with links.
[11:37:12] <humasect> if we like it or not =) 
[11:37:24] <humasect> i have big respect for CSS3 
[11:38:08] <humasect> maybe not the language itself or whatever, but it can do quite a lot. and web browsers got hardware accelerated GUI before the rest of the OS! (aside from mac that is)
[11:38:27] <gilberth> Perhaps. Still I believe giving those people with their 1px x 1px GIFs and pages optimized for 800x600 just that in early days, would not have watered down HTML.
[11:38:48] <humasect> font, compositing, making sure its good on all platforms, its a big system. i would think web browser code base is larger than linux kernel
[11:39:12] <gilberth> These days we have neither. No good document format, and no good page description format.
[11:39:27] <humasect> well
[11:39:31] <humasect> we have more options and choice
[11:39:40] <humasect> which to me is completely overwelming 
[11:39:53] <gilberth> Actually we have less.
[11:39:53] <humasect> there is no *obvious* choice. 
[11:40:18] <gilberth> One size fits all, does not work here. IMHO.
[11:40:20] <humasect> any piece of file is a potential document format. what the hell are you saying =) 
[11:41:06] <humasect> a real hypertext format would be great, i tried org-mode but its overcomplicated 
[11:41:08] <gilberth> Is a GIF file a document? Can you reformat it? Search in it? Print it at 600dpi?
[11:41:13] <contrapunctus> gilberth: what do you want in a document format, and in a page description format?
[11:41:24] <humasect> gilberth: sure with meta data though.
[11:41:56] <humasect> conversation kind of about thing-clients, network transport of document or screen description. like X11 
[11:42:01] <humasect> thin-*
[11:42:37] <gilberth> A page description is sth like PS or PDF. A LaTeX file is almost a document format. In a document formation I want structure (sections, enumerations, lists, tables, etc.). The former does not have that structure. Any style applied to the latter should be purely optional.
[11:43:16] <gilberth> humasect: So you suggest that GIF is a good format for say the ANSI-CL spec? Or Lisp code?
[11:44:55] <gilberth> And part of that structure is links. And I would love to have hyper links, which we don't have in HTML even.
[11:44:58] <humasect> to me those formats are additions to the content, which to me is plain text
[11:45:21] * hayley uploaded an image: (387KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/uIociCfGzvOtFmCOClglzSAs/randy-smith.png >
[11:45:25] <humasect> dont have hyperlinks in HTML ?
[11:45:35] <gilberth> Ok. Can you shop at amaozon.com with telnet?
[11:46:01] <humasect> i tried to use org-mode with links but it ehh , honestly, its better to use directories and files. we already have the organizational ability
[11:46:09] <gilberth> humasect: Hyperlinks are bidirectional.
[11:46:19] <humasect> back button?
[11:46:43] <gilberth> Does it bring me to all pages, that point to the page I was reading?
[11:47:04] <gilberth> It brings you back to exactly one of those.
[11:47:23] <humasect> oh. heh well thats kind of asking a lot 
[11:47:29] <humasect> "history" but in backward tree
[11:48:13] <humasect> files and folders, what else do we need ?
[11:48:18] <gilberth> See: <http://bauhh.dyndns.org:8000/clim-spec/edit/apropos?q=bounding-rectangle> and look at the end of the bounding-rectangle entry.
[11:48:18] -ixelp- CLIM II Specification, Search Results
[11:48:51] <gilberth> There are all the places that refer to "bounding-rectangle" the protocol class.
[11:49:58] <gilberth> <http://bauhh.dyndns.org:8000/clim-spec/23-8.html> "t" has a lot of references.
[11:49:58] -ixelp- CLIM 2 Specification — 23.8 Standard Presentation Types
[11:50:33] <humasect> yeah
[11:50:51] <humasect> but to change the order of things, needs to be auto generated from "template" or meta-language
[11:50:55] <humasect> (document template)
[11:51:06] <gilberth> Both the CLIM spec and the ANSI-CL are very rich in links. And they have types, like "FOO, the type" "FOO, the function" etc.
[11:51:42] <humasect> and abuse #anchors
[11:52:00] <gilberth> Abuse?
[11:52:24] <humasect> http://bauhh.dyndns.org:8000/clim-spec/3-1.html#_2097
[11:52:24] -ixelp- CLIM 2 Specification — 3.1 General Regions
[11:52:35] <humasect> i dont mean "abuse" that is, but take advantage of
[11:53:00] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[11:53:00] <humasect> to get around the static html, anchors or other files 
[11:53:44] <dave0> maw
[11:53:48] <gilberth> And I ordered them in a ring. Look at <http://bauhh.dyndns.org:8000/clim-spec/30-4.html#_1851> And click on the top most gadget-value backlink. Keep doing that, see how that leads you to all gadget-value definitions?
[11:53:48] -ixelp- CLIM 2 Specification — 30.4 Abstract Gadget Classes
[11:54:12] <gilberth> Or just use the apropos field.
[11:55:03] <humasect> gilberth: yeah just different parts of one page, anchors. no JS tho so that is nice
[11:55:15] <gilberth> Anyhow, that is like I think a document should look like in contrast to a GIF.
[11:55:54] <humasect> oh
[11:56:14] <humasect> ive been checking out reddit, and most posts are pictures of text. what a waste 
[11:56:24] <humasect> (no account, plain generic scrolling)
[11:56:30] <gilberth> And anyone can scribble into it.
[11:56:37] <humasect> yep
[11:56:44] <humasect> move some letters around
[11:57:01] <gilberth> No, you can annotate the clim-spec.
[11:57:24] <humasect> anything can be annotated
[11:57:46] <gilberth> Yes. The playground is for trying: <http://bauhh.dyndns.org:8000/clim-spec/G.html>
[11:57:46] -ixelp- CLIM 2 Specification — G Annotation Playground
[11:58:17] <gilberth> The interaction is weird, you need to [back] twice and reload to see what you wrote.
[11:58:50] <humasect> test test
[12:01:11] <gilberth> At times, I even respond eg. <http://bauhh.dyndns.org:8000/clim-spec/14-2.html>
[12:01:11] -ixelp- CLIM 2 Specification — 14.2 Patterns and Stencils
[12:02:54] <humasect> pretty. like a newspaper
[12:04:15] <gilberth> I wish people would use it more. I mean, with a spec, you often think .oO(WTF? This contradicts blah, doesn't it). Next person might have some insight. Keep a discussion right were the context is. Would the WEB have backwards links, a reddit discussion say, would appear automatically at any document link to in that thread.
[12:04:29] <humasect> interactive ?
[12:04:49] <humasect> like user editing wikipedia ? there is nice sites for that with the bible
[12:06:06] <gilberth> Yeah, but I wish you could do that with any website, no matter what. And that when I post on reddit a link to example.com, the next guy reading example.com could see, that there is a link to what he reads now from reddit.
[12:06:31] <humasect> ahh yeah
[12:06:38] <gilberth> And I am not talking about editing. You can't edit the clim-spec, I host. You can annotate it. That's different.
[12:06:44] <humasect> that requires super invasion of privacy tho 
[12:06:52] <humasect> highlighter
[12:07:22] <gilberth> What privacy? A post on reddit is public, as well as any website linked.
[12:08:12] <moon-child> gilberth: I can't remember its name.  But somebody tried to invent that, before the web took off
[12:08:17] <moon-child> is still trying, apparently.  But
[12:08:20] <gilberth> Google used to offer a reverse search. Gone.
[12:08:33] <humasect> gilberth: its the tracking to make it work 
[12:09:37] <gilberth> moon-child: I once contemplated using P2P for an annotation network. It would be query the P2P network for annotations of what you browse.
[12:10:01] <gilberth> humasect: What tracking?
[12:10:44] <humasect> to see where you went! to know it came from reddit
[12:11:11] <gilberth> reddit and the NSA know, when I visit reddit.
[12:11:12] <moon-child> everybody can read every post on reddit.  So I can just look at all the reddit posts, see which ones link to the clim spec, and annotate the latter with those posts
[12:11:35] <moon-child> then we can add an optimization that makes that not such a slow and bandwidth-intensive process
[12:11:41] <gilberth> moon-child: Exactly.
[12:13:10] *** Joins: makomo (~makomo@user/makomo)
[12:13:38] <gilberth> Though my idea is, that you can add annotations without cooperation. How to design that database is left as an exercise to the reader.
[12:14:14] <humasect> google docs =) 
[12:14:36] <humasect> collab, annotation, highlight, sync, etc
[12:14:46] <gilberth> Nah. Something distributed and open.
[12:14:53] <humasect> but its not emacs
[12:15:38] <humasect> i want to see collab in emacs, mentioned a few times in channel. would be neat to share sessions. not just for tech support which would be great, but also for collab on projects
[12:15:44] <gilberth> There should be an open protocol to maintain the database. Ask hayley on how to do that.
[12:16:31] <gilberth> humasect: Emacs could talk to multiple X servers at once. Or was it XEmacs?
[12:16:46] <moon-child> my
[12:16:52] <moon-child> do I want to know how that worked...or why...
[12:17:13] <kakuhen> it sounds fun
[12:17:46] <gilberth> https://www.gnu.org/software/emacs/manual/html_node/emacs/Multiple-Displays.html
[12:17:48] * moon-child throws bricks at pulseaudio
[12:18:02] <kakuhen> same but with core audio
[12:18:23] <moon-child> kakuhen: i bet core audio doesn't stutter when changing volume though
[12:18:27] <moon-child> or randomly eat 100% cpu
[12:18:41] <moon-child> or refuse to change output devices for nebulous reasons
[12:18:56] <kakuhen> that last part happens
[12:19:00] <gilberth> You're talking about Apple?
[12:19:07] <kakuhen> if I open mumble, and plug in my headphones after I join a channel
[12:19:15] <humasect> core audio is perfect latency
[12:19:16] <kakuhen> the output device is still on my laptop speakers rather than my headphones
[12:19:31] <humasect> better solution than alsa/jack/etc
[12:19:39] <kakuhen> latency is good when i want to record things with my midi keyboard
[12:19:46] <humasect> what
[12:19:47] <kakuhen> but i also want to be able to have my default output device switch on demand
[12:19:52] <humasect> latency never good no
[12:20:00] <kakuhen> i mean the low latency
[12:20:04] <gilberth> My [Apple] core audio forgets about my internal (sic!) speakers at times.
[12:20:09] <kakuhen> i.e. the latency of core audio is good when I want to record with my midi keyboard
[12:20:22] <kakuhen> but I dont care about the low latency when it behaves in stupid ways when I use mumble
[12:20:29] <moon-child> well, alright.  THe _main_ thing I was annoyed about in this instance is the stuttering when changing volume
[12:20:33] <moon-child> cause that's just dumb
[12:20:41] <humasect> oh yeah. well less ltency is best.no point to having lag , no reason
[12:20:46] <humasect> unless to nerf 
[12:21:13] <moon-child> i'm petty sure I know why they do that too.  Refilling ring buffer cause it was filled with audio with the old volume level.  Just hilariously dumb
[12:21:14] <kakuhen> if i connect my headphones after i join a mumble server, the output still routes to my speakers and I have to manually tell mumble "no i actually want this other device"
[12:21:27] <kakuhen> ive never had this problem with pulseaudio, or just about anywhere else
[12:21:45] <humasect> moon-child: whats the sitch, what app, ive had zero audio issues
[12:22:52] <kakuhen> moon-child: or maybe they use a really inefficient method for smoothing the changes in gain
[12:23:13] <moon-child> oh no it's the opposite, it's that they're _not_ doing it in software
[12:23:23] <moon-child> probably
[12:23:25] <moon-child> https://gitlab.freedesktop.org/pulseaudio/pulseaudio/-/issues/1119
[12:23:26] -ixelp- [ALC1220] Audio stutter, cut-outs and rewinding on volume change (#1119) · Issues · PulseAudio / pulseaudio · GitLab
[12:23:32] <kakuhen> ok this is epic
[12:24:03] <kakuhen> i last used pulseaudio during 2010 - 2014 and I somehow didnt run into this issue before :x
[12:24:11] <kakuhen> but pulseaudio back in the day DID have tons of latency
[12:24:16] <kakuhen> any real-time audio stuff needed JACK
[12:24:22] <humasect> i want to try Super Collider
[12:24:51] <humasect> bleh linux audio is hard work 
[12:25:01] <humasect> better today but not "just plug in" 
[12:25:05] <kakuhen> a little birdie told me ALSA started as a high schooler's project
[12:25:06] <moon-child> i started rewriting arcan's audio server at one point to be not terrible.  I should finish doing that and then expunge pulse from my memories
[12:25:07] <kakuhen> sounded very fun
[12:25:45] <kakuhen> oh also i dont get why people hate pipewire
[12:25:51] <gilberth> Why is audio still an issue with Linux? What is so damn hard about it?
[12:26:15] <kakuhen> someone post that link to xkcd competing standards
[12:26:18] <kakuhen> that's basically it
[12:26:24] <moon-child> gilberth: are you really surprised?  Has _anything_ good ever come of FDO?
[12:26:45] <kakuhen> Unix used to have OSS and it was bad and then it became proprietary, so Linux community definitely didnt want to keep using it.
[12:26:50] <gilberth> FDO?
[12:26:54] <moon-child> freedesktop org
[12:26:59] <moon-child> kakuhen: freebsd oss is ♥
[12:27:03] <kakuhen> and around that time you had ALSA and alternatives, and it seemed like ppl couldnt agree on which exact subsystem to use
[12:27:04] <gilberth> Agreed.
[12:27:29] <kakuhen> but honestly linux audio isn't that bad, at least in my experience
[12:27:31] <gilberth> And why, again, when we talk about freedesktop.org, it's that part of the X protocol?
[12:27:57] <kakuhen> the implementation is very ugly, sure, since you need to be able to pretend to be ALSA and friends if you're pipewire and want to have functional audio across programs
[12:28:15] <gilberth> Still, its just banging samples at snail pace to some DAC. Can't be hard.
[12:28:20] <kakuhen> moon-child: funny because I actually had sooo much problems with it
[12:28:42] <kakuhen> no amount of tinkering was able to make me use my built-in laptop speakers
[12:28:57] <kakuhen>  /dev/dsp was always whatever connected to the headphone jack
[12:29:00] <humasect>  latency afaik is the issue
[12:29:04] <kakuhen> and /dev/dsp1.0 existed yet produced no input x.x
[12:29:40] <kakuhen> but im willing to bet its more my ideapad having bad hardware.
[12:29:48] <kakuhen> the trackpad doesnt work with freebsd either, for instance
[12:29:54] <kakuhen> it requires some proprietary driver that only exists on windows and linux
[12:30:06] <kakuhen> ditto for my wireless card
[12:30:08] <humasect> its terrible for latency
[12:30:35] * gilberth was disappointing that macOS has no /dev/audio since his '95 Blockout clone just writes .au files to it for some sound. Instead he spawns afplay and it just works.
[12:31:13] <humasect> =)
[12:31:38] <kakuhen> you WILL fill out structs with a million fields and CheckError() a million times to play back audio.
[12:32:04] <moon-child> sounds like vulkan
[12:32:06] <moon-child> or uefi
[12:32:11] <moon-child> soulless apis
[12:32:12] <kakuhen> it's core audio :)
[12:32:23] <humasect> no trackpad? go back
[12:33:23] <kakuhen> i had a usb mouse that i connected to my ideapad when I used freebsd on the machine
[12:33:30] <kakuhen> wasn't too practical but it helped me use it for months heh
[12:33:39] <kakuhen> one day i'll get a computer that has decent hardware support for freebsd
[12:34:13] <gilberth> A vintage i386 PC clone?
[12:34:20] * gilberth ducks and takes cover.
[12:34:23] <humasect> many months i went wiithout mouse, ask these guys, using keynav.c
[12:34:46] <kakuhen> using freebsd as a desktop has gotten significantly better in the past two years
[12:35:07] <kakuhen> with a fresh install of freebsd nowadays you can pretty much just "pkg install xfce" and you get a full fledged DE with reasonable preinstalled programs
[12:35:25] <kakuhen> if you prefer MATE then "pkg install mate" and add 1-2 lines to your rc.conf
[12:35:39] <humasect> why tho
[12:35:48] <gilberth> My brain is too deeply wired for SYSV to feel at home with BSD. Blame XENIX.
[12:36:14] <humasect> idk configuring computer all day long was a great hobby as late teens
[12:36:28] <kakuhen> well if you want zero configuration whatsoever, there's also desktop-installer now
[12:36:32] <humasect> but now i just save up and pay my guts for a mac that works 100% no f*cking around
[12:36:40] <kakuhen> you just push the buttons you want and most of the time it'll work
[12:36:49] <humasect> i did the slackware from floppies 1994 been there 
[12:37:19] <humasect> here i just open my computer. got all the unix and tools and everything i need. close it when done
[12:37:45] <humasect> dont need 3 energy drinks and 5 hours of typing and music to get something going
[12:37:58] <humasect> done that, too old now =( 
[12:37:59] <gilberth> For me it was Soft Landing Linux System (SLS) from '92.
[12:38:09] <humasect> never heard of it
[12:38:12] <kakuhen> my friends loved watching me suffer trying to port Macaulay2 to FreeBSD late at night :3c 
[12:38:25] <humasect> i remember ordering Allegro Lisp CD demo in maybe 1995 
[12:38:28] <kakuhen> it enlightened me a lot on the whole /usr/local stuff
[12:38:30] <gilberth> humasect: Was the first Linux distribution.
[12:39:01] <humasect> ahh. i was just 12 then 
[12:39:07] <kakuhen> the number 1 problem making linux software compile on freebsd is that people will HARD CODE LIBRARY PATHS in their makefiles and this throws off the entire build process
[12:39:16] <humasect> me slackware -> x -> xemacs
[12:39:28] <moon-child> kakuhen: I think I actually symlinked bash into /bin
[12:39:45] <kakuhen> like people will straight up just specify /usr/lib/foo and you'll have to patch these out and use the "proper flags" (i.e. whatever pkg-config --libs libfoo outputs)
[12:39:57] <gilberth> humasect: I turned 18yo in '92. Before Linux it was XENIX for me.
[12:39:58] <kakuhen> but when you have a giant project like Macaulay2 with 30+ deps and they all use random GNU extensions to their makefiles
[12:39:59] <kakuhen> aaaaahhhhhh
[12:40:04] <kakuhen> i gave up after a week
[12:40:58] <kakuhen> with that said, i very much like the way freebsd does things
[12:41:15] <kakuhen> and i still havent found a linux distro that doesn't merge user-installed binaries with system-provided binaries
[12:41:32] <gilberth> I first ported GCC-1.4.something to have GCC-2.forgot to then port X11 to XENIX. It didn't have networking, so I hacked a device driver to give me bidirectional pipes, poor man's sockets.
[12:41:52] <humasect> ohh
[12:42:18] <gilberth> Damn MS compiler could compile either GCC-2.xx nor X11.
[12:42:26] <gilberth> * could not
[12:43:41] <gilberth> Once I got X11 up, my father was shocked how snappy it was.
[12:43:41] <kakuhen> also one thing i like alot about freebsd is that uh
[12:43:59] <kakuhen> installed a 64-bit OS and want 32-bit programs and libraries? no problem, just "tar -xvf lib32.txz" and you're good to go
[12:44:03] <gilberth> And you could move windows, not just a wire-frame.
[12:44:12] <kakuhen> on mac os: "haha oh well, recompile it or suck it if the software's proprietary"
[12:44:46] <kakuhen> there's this ftp client i really want to try, but the relevant uni department that made it is long gone and they only made binaries for 32/64-bit PowerPC and 32-bit Intel.
[12:44:51] <kakuhen> No development since 2011
[12:45:16] <humasect> gilberth: cool =)
[12:46:03] <humasect> kakuhen: i had that on linux debian. 64bit os, 32bit browser (had 2 or 4gb at the time)
[12:48:00] * gilberth read about SLS. It is said that Slackware is a fork of SLS.
[12:48:56] <humasect> installing slackware from disks is a well known time, almost meme 
[12:49:10] <humasect> 10+ floppies afaik
[12:49:14] <gilberth> Wikipedia says, that Debian also is an off-spring of SLS.
[12:49:42] <humasect> my last pc was debian, no problems with it 
[12:50:43] <gilberth> humasect: I remember having a CD-ROM also with a host of other software. But that could have been later. When were CD-ROMs common place?
[12:50:49] <humasect> remote X11 works well for all the times ive used it
[12:51:06] <humasect> hmm gilberth i think after 1993
[12:51:07] <gilberth> But my first install was from floppies, right.
[12:51:36] <humasect> hmm cdrom maybe 1996 actually. i did not have a fast enough cdrom drive for diablo 
[12:52:05] <gilberth> That's so long ago.
[12:52:22] <humasect> quake 1996, installed doom from floppies so was before that. yeah... 25.5 years 
[12:52:36] <gilberth> However I once bought Motif for Linux. And still have the free CD-ROM from Franz' with ACL.
[12:52:42] <humasect> why couldnt we just stay back in that time lol 
[12:52:57] <humasect> when coders was artist not factory work 
[12:53:08] <gilberth> Nah, the machines were painfully slow and tight.
[12:53:19] <humasect> franz =) yeah allegro lisp CDs i got 1996 ish
[12:53:24] <humasect> (or 95)
[12:53:33] <humasect> but for the time they werent
[12:53:44] <humasect> it was just what it was
[12:53:54] <gilberth> Bruno Haible once send me tapes with snail mail.
[12:54:16] <humasect> idk what that is. dial up sucked
[12:54:25] <contrapunctus> gilberth: so if a document format can be made a page description format with the addition of style data, why have a page description format? 🤔
[12:54:30] <humasect> but maybe if we all "dial down" our tech usage maybe we can save the planet eheh..eh..
[12:54:51] <gilberth> humasect: Actually machines were tight for CL. Paging and thrashing was common. I don't miss that.
[12:55:22] <gilberth> humasect: You sound like the local Green party.
[12:55:23] <kakuhen> i heard symbolics used to offer expansion cards for some sun workstations to speed up lisp
[12:56:09] <gilberth> For sun? I am aware of the cards with a lispm on it for macs.
[12:57:11] <kakuhen> yeah for sun workstations in particular
[12:57:12] <gilberth> A 36xx uses a 68k for booting, I heard.
[12:58:56] <gilberth> But yes, at times I wish I could get my mid-90 X setup back. With a better screen, of course.
[13:00:24] <lotuseater> humasect: I think I'll buy this Quake 1 remake next week. :)
[13:00:48] <gilberth> But with unicode please.
[13:01:37] <humasect> lotuseater: remake? =) 
[13:01:53] <humasect> gilberth: i wouldnt mind my 19" 1600x1200 
[13:01:56] <humasect> crt
[13:02:25] <humasect> used it for gamecube vga/rgb converter as well (and rotate it on its side for arcade games)
[13:03:06] <humasect> but, the past, if we were really there for it we wouldnt want to go back
[13:03:37] <lotuseater> yes it came out some days ago
[13:03:59] <humasect> ohh cool
[13:04:25] <humasect> perhaps i should get a steam account 
[13:04:39] <lotuseater> i think i just played sometime with a friend Quake III when we were in 6th grade.
[13:05:14] <lotuseater> I'll get it for PS4
[13:05:49] <kakuhen> i got my macbook at the worst timing possible
[13:05:59] <kakuhen> the fancy arm macbooks released about a month later lul, none of them were 16 inch granted.
[13:06:10] <kakuhen> but i tricked one of my friends into playing some mobile game...
[13:06:11] <lotuseater> damn
[13:06:16] <kakuhen> and this game supports windows but not mac os****
[13:06:18] <humasect> kakuhen: what did you get 
[13:06:22] <kakuhen> **** not if you run the iOS version on an m1 macbook
[13:06:32] <kakuhen> humasect: macbook16,1
[13:06:59] <humasect> ok im macbookpro12,1
[13:07:05] <kakuhen> nice!
[13:07:19] <humasect> mid 2015 right when they idk 
[13:07:21] <kakuhen> but yeah, i was also expecting arm macbooks to be exceptionally bad
[13:07:26] <humasect> this game not for mac? =( 
[13:07:32] <kakuhen> then november happened hehe
[13:07:33] <humasect> what is arm macbooks ?
[13:07:44] <humasect> are you talking about M1? those are DoMiNaTiNg
[13:07:44] <kakuhen> what are now called "M1"
[13:07:47] <kakuhen> yes
[13:07:57] <kakuhen> nobody knew that was going to happen in october 2020 :x
[13:07:58] <humasect> be jealouse
[13:08:00] <kakuhen> or I didn't at least
[13:08:23] <humasect> and its only M1
[13:08:40] <humasect> just killing it. ipad pro v.5 is terrorising. wait until M2
[13:09:42] <kakuhen> ok i found the message from my friend
[13:09:56] <humasect> this quake remake only for windows
[13:10:03] <kakuhen> on november 12, 2020: "lol kakuhen you missed out badly"
[13:10:17] <kakuhen> "Apple's new macbook is pretty much the biggest hw advance in over a decade. The freaking macbook air has comparable perf to top of the line desktops"
[13:10:25] <kakuhen> i was expecting it to be about 1,000% worse 
[13:10:42] <kakuhen> well, in 5 years hopefully they'll be even better than today heh
[13:11:06] <humasect> i had the 2011 air, it was great (11") . had the 2012 but got bamboozled
[13:11:23] <humasect> 2015 macbook pro known to be best apple has made 
[13:11:53] <humasect> which i found out in hindsight. but lady only gave me an air charger (45w) not pro (60+w)
[13:11:54] <lotuseater> every year they bring out "the best we ever created" :D
[13:12:04] <kakuhen> well yes, marketing team does one thing
[13:12:05] <humasect> nah i mean articles online and stuff
[13:12:12] <humasect> just before they went butterfly keyboard 
[13:12:14] <kakuhen> but the M1 is a significant increase in performance if you believe a subset of benchmarks heh
[13:12:27] <kakuhen> one thing that weirds me out however is uhh
[13:12:31] <humasect> "HeH" subset
[13:12:31] <kakuhen> why is long double = double in the M1?
[13:12:46] <humasect> that is really ur issue with it? lol 
[13:12:55] <kakuhen> I was reading some documentation on porting things to apple silicon and apparently quad-precision floats dont exist
[13:12:56] <humasect> M1 kills performance thats nonstop truth
[13:13:00] <kakuhen> but it seems so arbitrary of a decision to make
[13:13:05] <humasect> and electronic life
[13:13:14] <kakuhen> humasect: I dont have a problem with the processor; I'm simplying noting things I found interesting about it, for better or worse
[13:13:23] <kakuhen> also there's still no Clozure CL port 
[13:13:27] <humasect> is it like arm? or it is an arm?
[13:13:31] <moon-child> m1 apparently has suuuper fast int div
[13:13:42] <ck_> pretty devisive..
[13:13:42] <moon-child> there's instruction latency tables somewhere.  Dont' remember where
[13:13:47] <moon-child> ck_: ugh
[13:13:53] <kakuhen> humasect: arm64e, which is an extension of ARMv8a that adds fancy features like pointer authentication
[13:14:03] <kakuhen> but the M1 deviates from "normal ARM" in a few key spots
[13:14:07] <kakuhen> the biggest one is long double = double
[13:14:16] <lotuseater> "Hands up, give me your phone! ... urgs, no audio 3.5mm connector, I don't want it, your problem."
[13:14:24] <moon-child> kakuhen: that's abi, not hw
[13:14:26] <humasect> kakuhen: cool. i like arm -- looking at these two 2ds systems or switch dev. 
[13:14:29] <humasect> kakuhen: cool. i like arm -- looking at these two 2ds systems or switch dev. 
[13:14:33] <humasect> sorry.
[13:14:53] <kakuhen> oh, and there's some bit that's always set in the M1, so some hypervisor thingy doesn't behave like on other ARM processors
[13:15:06] <humasect> lotuseater: i got iphone 7 first without 3.5mm jack. reason is: water proofing. and something else. 
[13:15:16] <lotuseater> ah yes
[13:15:22] <lotuseater> we had this some days ago
[13:15:26] <humasect> nintendo consoles have been arm for a while. done some gba 
[13:15:57] <White_Flame> the m1 also adopts the exact x86 memory ordering/barrier/etc model as well
[13:16:06] <humasect> interesting
[13:16:17] <lotuseater> oh gba chip is indeed also not so trivial from what i heard
[13:16:20] <White_Flame> so that x86->m1 rosetta whatever doesn't have to add software barriers
[13:17:07] <humasect> lotuseater: what do you mean? it has thumb-16bit mode for some stuff , other than that its quite clean and simple
[13:17:11] <lotuseater> I learnt many things from this blog post about implementing CHIP8 in CL by Steven Losh.
[13:17:13] <kakuhen> White_Flame: TIL
[13:17:29] <humasect> lotuseater: link pls =) if you can find it. no big deal if not 
[13:17:35] <kakuhen> That means many hypotheses about dropping 32-bit support are just false
[13:17:48] <lotuseater> humasect: ok i meant writing games for it is tricky somebody told me
[13:17:53] <kakuhen> I saw many people online claim removal of 32-bit support would make Rosetta 2 "easier" to implement, but that never made much sense to me
[13:17:58] <kakuhen> They seemed just fine during the PowerPC -> Intel days.
[13:18:12] <White_Flame> kakuhen: doeasn't really have anythign to do with 32-bit though
[13:18:16] <lotuseater> humasect: yes plz wait ... could peek myself again into it for fresh ideas for mixcl
[13:18:28] <White_Flame> the memory architecture is the same between x86-32 and x86-64 afaik
[13:18:45] <lotuseater> or look at the cl6502 project
[13:18:54] <lotuseater> https://stevelosh.com/blog/2016/12/chip8-cpu/
[13:18:55] -ixelp- CHIP-8 in Common Lisp: The CPU / Steve Losh
[13:19:57] <humasect> lotuseater: as for tricky to write games, i will say no. not more difficult than SDL, really -- just memory map instead of function calls.
[13:20:05] <lotuseater> so for me as a hardware muggle (okay now i laughed myself about the word choice) this chip8 thing is way more understandable in the first place ^^
[13:20:13] <humasect> lotuseater: ty
[13:20:23] <lotuseater> ah hm .. SDL ..
[13:20:33] <White_Flame> yeah, chip8 is a really low bar that's still functional and has a bunch of stuff already written for it
[13:21:06] <humasect> lotuseater: writing any 2d game, really. bitmaps, sprites, but with the addition of palettes and effects done with memory map address properties 
[13:21:19] <humasect> gba/nds/3ds is a pleasure to work with
[13:22:08] <lotuseater> or this funny thing, the NES Controller has 8 keys, so every possible state fits in a byte ^^
[13:22:43] <White_Flame> still uses a shift register to keep pin count down though, right?
[13:22:44] <lotuseater> humasect: i'm excited for when the game by shinmera comes out. i like pixel art
[13:23:09] <lotuseater> White_Flame: i don't know :) but i like to learn from you people
[13:23:59] <lotuseater> my GameBoy Advance was (and is) my last self owned Nintendo Console. but playing on the Wii was also fun
[13:26:38] <kakuhen> the Wii was the last nintendo console I had
[13:26:55] <kakuhen> actually, did they even make any more afterwards
[13:27:03] <kakuhen> i can only recall handheld devices 
[13:27:44] <lotuseater> we had one at home or we played with my best friend at his house ^^
[13:28:13] <ck_> kakuhen: "Wii U" wasn't really a handheld, was it?
[13:28:24] <lotuseater> in decembre this steam deck comes out, but i don't know about its hardware
[13:28:36] <kakuhen> ck_: No idea. I have heard of the Wii U but I have never seen it
[13:28:38] <humasect> i got 2 3ds ("new 2ds" better hardware)
[13:28:39] <lotuseater> ck_: this thing was ...
[13:29:44] <lotuseater> hm for me was at Pokemon Emerald the end personally, so I didn't need a DS
[13:33:46] <humasect> "The internal specifications of the device have also been updated, including additional processor cores, an increase to 256 MB of RAM"
[13:33:59] <humasect> "	804 MHz ARM11 MPCore quad-core" 
[13:34:09] <lotuseater> for what now?
[13:34:33] <humasect> 'new' 3ds
[13:34:39] <humasect> (and new 2ds)
[13:35:19] <lotuseater> ahh
[13:35:46] <lotuseater> the PS3 had 256 MB XDR DRAM and 256 MB DDR3 GPU RAM
[13:35:46] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Read error: Connection reset by peer)
[13:36:09] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[13:36:19] <humasect> also has the ARM9. awesome how it can run all the DS software. which also can run all the gba software
[13:36:25] <humasect> (and gameboy and gameboy color.)\
[13:36:39] <lotuseater> yes
[13:38:14] <lotuseater> but also questionable if a company sells you the same stuff as "newer" which was former maybe limited in software
[13:39:04] <humasect> eh software unlocking hardware is generally quite obvious. im not sure of any consumer event where that is accepted 
[13:39:16] <lotuseater> but Sony now came to its senses and you can play PS4 games without a problem on PS5. not that I have one
[13:39:25] <humasect> it has the hardware to play the older stuff. not software emulation
[13:39:50] <lotuseater> right
[13:40:02] <humasect> so its not a software unlock by payment or what you were thinking.
[13:40:57] <lotuseater> it was just a general statement
[13:41:12] <White_Flame> I just want to play ps5 games on my ps4, lower performance
[13:41:23] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[13:41:37] <humasect> ah k my bad
[13:41:54] <lotuseater> humasect: no problem ^^
[13:41:56] <White_Flame> also, just like the extra features on the switch joycons, the ps5 controller is unnecessary and gimmicky, and barely any games will use the advanced stuff
[13:42:08] <White_Flame> and making it overly expensive
[13:42:31] <humasect> ahem: i want to get a switch but dont want to miss out on all the wii u stuff =( thankfully a lot has been ported over
[13:42:50] <humasect> i never really liked xbox or ps
[13:42:50] <lotuseater> or when an operating is written in a way it mimics to you your hardware is outdated
[13:43:21] <lotuseater> or a steam deck :D
[13:43:25] <humasect> just got 3ds so it will last a long time because i dont game nearly that much. and there are more than enough games for 5 lifetimes. 
[13:44:29] <lotuseater> yeah a friend of mine has *every* DS game, this little data hoarder, about 60000 or so iirc
[13:44:53] <White_Flame> my nephew just got a 3ds for his birthday, gonna take him to the used video game store
[13:45:08] <White_Flame> (or just see if it can do sdcard boot stuff like I had going on mine :-P)
[13:45:10] <humasect> yep well 6100~ or so =) there are a lot 
[13:45:12] <lotuseater> or they are so much cause he counted every country game version on top
[13:45:31] <lotuseater> oh okay i thought i have a 0 too much :D still many
[13:45:36] <humasect> White_Flame: sdcard stuff is quick and easy =) did it to two of them. while drunk
[13:45:51] <lotuseater> White_Flame: i hope not GameStop ^^
[13:46:38] <White_Flame> no, actual local retro store
[13:46:44] <White_Flame> atari 2600 through to modern
[13:46:50] <humasect> lotuseater: and they are all great quality. i am happyto buy a 3rd 3ds (well, "new 2ds") even though welfare
[13:46:56] <lotuseater> yes we have one too here in town, very good :)
[13:46:57] <White_Flame> btw, this is my 3ds, it is gorgeous https://www.lukiegames.com/assets/images/3DS/3ds_xl_sys_persona_q_fl_p_9agxtd.jpg
[13:47:51] <humasect> ive got both of these idiots https://cdn02.nintendo-europe.com/media/images/10_share_images/systems_11/new_nintendo_2ds_xl_1/H2x1_N2DSXL_Nintendo2DSXL_Keyvisual_image1600w.jpg 
[13:47:51] <lotuseater> humasect: wasn't this E.T. game rated the worst of all time? was that on Atari?
[13:48:17] <humasect> yeah it was blamed for the video game crash of 1980s or smth 
[13:48:25] <White_Flame> I had the flat-slab 2ds for a while, returned it.  It was way too easy to accidentally hit the power button
[13:48:44] <lotuseater> White_Flame: I could build a GBA SP Display into my GBA, it was the last without backlight
[13:48:46] <White_Flame> lotuseater: yeah, atari 2600
[13:48:53] <humasect> new 2ds is great : quad core?? basically a 3ds without the 3d feature
[13:49:09] <White_Flame> also, the ET game gets a bad rap, although it wasn't bad for the time
[13:49:22] <humasect> switch lite, however: dont think so. unless its a phone or it can dock, it needs to flip closed. 
[13:49:29] <White_Flame> but they literally made more cartridges than there were consoles in existence, iirc
[13:49:36] <humasect> White_Flame: angry video game nerd =) (youtube persona)
[13:49:41] <lotuseater> White_Flame: very cool cover at your DS. is french your mother tongue? (just guessing)
[13:49:48] <White_Flame> yep, been there, done that, seen the movie ;)
[13:49:50] <humasect> yeah AVGN made a whole movie about atari game. 
[13:49:52] <humasect> heh
[13:49:54] <humasect> (i havent)
[13:49:58] <White_Flame> lotuseater: no, it's just weaboo foreignness
[13:50:06] <White_Flame> I'm a SMT fan
[13:50:12] <lotuseater> humasect: oh i have one for you, but it's really faked for TV
[13:50:18] <lotuseater> hehe okay
[13:51:20] <lotuseater> be careful, it's short but loud: https://www.youtube.com/watch?v=ZTY05H_Ur5c
[13:51:21] -ixelp- Ich will Unreal Tournament spielen - YouTube
[13:51:24] <humasect> back cover on those can be easily changed, i heard 
[13:53:14] <hayley> We found a video of gilberth in 1990.
[13:53:40] <White_Flame> back when he was just an old man? ;)
[13:53:54] <lotuseater> no way!!
[13:54:05] <dave0> with a black tee-shirt and torn jeans?
[13:54:18] <dave0> play some grunge
[13:54:20] <lotuseater> but he sent me a link with a picture of him from around that time
[13:54:32] <White_Flame> feathered hair, or mullet?
[13:54:36] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[13:54:39] <dave0> ooh nice
[13:54:48] <lotuseater> ehm, normal
[13:56:02] <lotuseater> lol i looked up what mullet means :D
[13:56:36] <hayley> White_Flame: FWIW I heard there is a flag on the M1 to jump between TSO and a weaker model?
[13:56:38] <White_Flame> business in front, party in back
[13:57:03] <White_Flame> hayley: very possible
[13:57:06] <hayley> People go off about how they did the stuff to make refcounting go fast (lol, rocket propelled horse much?) which was about a weaker ordering.
[13:57:11] <lotuseater> White_Flame: ah that's the trick!
[13:57:16] <White_Flame> all I know is that the x86 compatible one is there in hardware
[13:57:32] <hayley> https://www.reddit.com/r/hardware/comments/i0mido/apple_silicon_has_a_runtime_toggle_for_tso_to/
[13:57:33] -ixelp- Apple silicon has a runtime toggle for TSO to speed up emulation : hardware
[13:58:25] <hayley> Also see https://www.realworldtech.com/forum/?threadid=197218&curpostid=197218
[13:58:27] -ixelp- Real World Technologies - Forums - Thread: Apple M1 TSO + RefCounting optimizations
[13:58:44] <lotuseater> I think I need a hair cut next week or so, 5 months growing is again enough.
[13:59:56] <hayley> But of course, you can get retain/release for ZERO nanoseconds at the low low price of FREE - it's called tracing GC.
[14:00:12] * hayley uploaded an image: (33KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/pxnylbONLgkPLPaUBhVzPKKt/laserappel.jpg >
[14:01:07] <White_Flame> I cut my own hair.  In a ponytail you can't tell how crooked the cut really is ;)
[14:01:14] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[14:01:14] <White_Flame> (since the coronathingy)
[14:01:35] <hayley> I haven't had a hair cut since...2017?
[14:01:41] <hayley> It has grown surprisingly slowly.
[14:01:52] <White_Flame> still, it's healthy to eliminate the damaged ends
[14:02:00] <White_Flame> especially if you want to grow it long
[14:02:02] <dave0> you don't have the bother of facial hair
[14:02:04] <humasect> rocket horse
[14:02:12] <kakuhen> i had to cut my hair since i messed up when cutting my bangs
[14:02:17] <kakuhen> and now i have short hair again
[14:02:20] <humasect> tried mohawk , shaved it last week 
[14:02:31] <humasect> felt too badass
[14:03:03] <kakuhen> also region locks are the worst thing ever
[14:03:20] <kakuhen> can someone explain why again I cannot use something I legally purchased overseas
[14:03:21] <lotuseater> hayley: i think this fits better to you as it would to me
[14:03:32] <White_Flame> I heard "region locks" and was still thinking how this applied to hair
[14:03:39] <kakuhen> lmao
[14:03:40] <humasect> hah same
[14:03:45] <lotuseater> :D
[14:03:53] <hayley> You only get to change the region of your hair three times, then you go bald.
[14:03:54] <kakuhen> to this day, there is no reasonable, non-cultish explanation for region-locking
[14:03:54] <hayley> Source: beach
[14:04:12] <White_Flame> kakuhen: mooonney
[14:04:16] <White_Flame> munny
[14:04:19] <humasect> "those locks of hair, depending on region" (dreads etc) 
[14:04:23] <kakuhen> how am i violating a trademark, copyright, or patent by using software i bought abroad?
[14:04:32] <hayley> It's a gas.
[14:04:34] <dave0> is it lock or loch?
[14:04:36] <White_Flame> because you are from expensive place, can't buy from cheap place
[14:04:42] <humasect> lick
[14:05:15] <kakuhen> White_Flame: the actual answer is that breaking DRM is a copyright violation thanks to retarded laws in my country
[14:05:36] <lotuseater> that was US, right?
[14:05:36] <humasect> is it illegal to hear copyright music
[14:05:39] <kakuhen> so companies can impose anything they want on you 
[14:05:45] <kakuhen> lotuseater: yes
[14:06:00] <dave0> why is copyright criminal and not just civil
[14:06:13] <lotuseater> EU is also dumb on some law making
[14:06:18] <White_Flame> it's not a copyright violation, it's a DMCA violation
[14:06:19] <kakuhen> more importantly, why is copyright? :3c 
[14:06:37] <White_Flame> kakuhen: because legacy
[14:06:43] <White_Flame> also mickey mouse
[14:06:47] <humasect> copy cats
[14:06:50] <kakuhen> oh speaking of mickey mouse
[14:07:00] <kakuhen> i recall when disney attempted suing deadmau5 over his logo """copying""" mickey mouse
[14:07:03] <lotuseater> https://www.youtube.com/watch?v=WTxYp9ECnPY
[14:07:04] -ixelp- Charlie Puth - Betty Boop Remix - YouTube
[14:07:06] <kakuhen> that lawsuit obviously went nowhere.
[14:07:12] <White_Flame> deadmau-five
[14:07:20] <dave0> mickey mouses white gloves is copyrighted
[14:07:21] <kakuhen> that's how i first saw it too yeeears back :)
[14:07:22] <humasect> what about mario bro , with his white gloves? sonic the hedge hog ?
[14:07:43] <lotuseater> dave0: i had one when i was a child :D
[14:08:03] <White_Flame> kakuhen: he was on whatever games event going on now, and trolled the audience in saying that :)
[14:08:12] <kakuhen> nice
[14:08:21] <White_Flame> gamescongamescom
[14:08:26] <White_Flame> gamescom
[14:08:43] <kakuhen> also one thing I miss about android
[14:08:49] <kakuhen> no need to change my region a dozen times to get the apps i used to have
[14:08:51] <humasect> lots of os uses white glove to click links
[14:09:08] <White_Flame> rpg cursors, too
[14:09:14] <kakuhen> i've been cycling regions right now between us, china, taiwan, and japan, just to get several different apps that are region-locked on iOS
[14:09:20] <kakuhen> but on android they literally just have an APK file on the website
[14:09:22] <kakuhen> which you can download
[14:09:45] <humasect> its called 
[14:09:46] <humasect> https://www.blog.shanedenson.com/?p=2730
[14:09:53] <kakuhen> gosh i really hope apple loses that dumb lawsuit and gets forced to give users the luxury of something remotely close to APKs
[14:10:01] <humasect> ahem The Manicule
[14:10:38] <humasect> all software should be free and we should all buy each others stuff distributing wealth over time naturally like digital rennaisissance
[14:10:46] <dave0> hayley: https://youtu.be/w-rv2BQa2OU
[14:10:47] -ixelp- INXS - Need You Tonight (Official Video) - YouTube
[14:10:53] <humasect> kickstarting each others
[14:11:16] <kakuhen> humasect: sometimes I really want to buy music, or some software, but then I can't because it's region-locked
[14:11:33] <kakuhen> so I end up not purchasing it, even if I would accept a small markup in case it's REALLY somehow inconvenient for the copyright holder to sell overseas.
[14:11:42] <kakuhen> oh well, at least piracy knows no borders.
[14:11:56] <kakuhen> lost sale for the copyright holder since they made it impossible for me to purchase.
[14:11:59] <humasect> its getting better =) 
[14:16:24] <dave0> i read a story that the cracked version of resident evil village was smoother than the original
[14:16:40] <hayley> Yeah, DRM schemes can suck like that.
[14:16:44] *** Joins: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at)
[14:16:51] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[14:16:59] <dave0> kakuhen: how do you feel about abandonware
[14:17:59] <kakuhen> frustrating when it's proprietary
[14:18:12] *** Quits: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at) (Client Quit)
[14:18:24] <kakuhen> there are some proprietary softwares i wanted to try but it is impossible for me to do so since the company died a decade or more ago.
[14:19:03] <pjb> There are very very rare occurences, when this happens, where the company releases the source code…  
[14:19:06] <kakuhen> there was this 9-year-old HFS Utility that I downloaded from github and it compiled 100% fine on my mac
[14:19:20] <kakuhen> developer just stopped working on it (for good reason probably) and he only made binary for 32-bit intel
[14:19:29] <kakuhen> luckily the source code was online and I was able to make my own working copy.
[14:19:44] <pjb> This is something states could enact: any corporation that wants to sell software or firmware, should put the source in escrow (each release), in case it folds.
[14:20:09] <hayley> State-enforced egoist telekommunism imo
[14:20:53] <pjb> There's such a notion as common good.
[14:21:11] *** Joins: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at)
[14:22:21] * hayley uploaded an image: (462KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/uYknosggxUrmiSonRMKUrcow/credit-score.png >
[14:22:40] <dave0> hayley: https://youtu.be/g-gK1MqM-7s?t=16
[14:22:41] -ixelp- Rogue Traders vs INXS - One Of My Kind [OFFICIAL VIDEO] - YouTube
[14:24:12] <kakuhen> ok this is epic
[14:24:26] <kakuhen> the picture hayley sent that is
[14:25:31] <dave0> :-p
[14:25:54] <hayley> pjb: For me, the egoist, the welfare of this “human society” is not in my heart. I sacrifice nothing to it, I only use it; but to be able to use it completely, I transform it instead into my property and my creation.
[14:26:00] <pl> Social credit score, you mean equifax? 😉
[14:26:17] <hayley> So the state betrays its hostility against me by demanding that I should be a human being, which assumes that I am not one and can count for it as an “inhuman monster”; it imposes being human on me as a duty. Further it requires that I do nothing which would stop it from persisting. Its continued existence is supposed to be sacred for me. Then I should not be an egoist, but an “honest, upright,” i.e., moral human being. Enough: I am
[14:26:17] <hayley> supposed to be powerless and respectful before it and its continued existence.
[14:31:35] <kakuhen> you can tell lisp cafe has been serving tea and coffee rather than beer lately
[14:33:31] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[14:33:55] <hayley> Show of hands, out of the labels "mutable", "immutable", "has identity", "lacks identity", what would you call: the fixnum 4, an instance of (defstruct foo (bar 'bar :read-only t)), an instance of STANDARD-CLASS
[14:34:59] <kakuhen> immutable, mutable, mutable, but im also very tired now
[14:38:01] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:41:28] *** Joins: random-nick (~random-ni@87.116.182.72)
[14:57:45] <hayley> Anyone want a new VAX? https://logical-co.com/product/nuvax-4400-system/
[14:58:21] <pl> hayley: that's a PC running emulator :)
[14:58:31] <hayley> Damn!
[14:58:56] <pl> it has special hw to interface with QBus peripherals and a real QBus cage, and is cycle accurate though
[14:59:25] <hayley> Sure, that's nice.
[14:59:26] <pl> you can use it to replace a dying vax in industrial settings
[14:59:46] <pl> the much funnier part is that all evidence points to PDP-10 being produced longer than the VAX :D
[15:00:52] <hayley> So I found someone trying to get explicit heap-lets on .Net: https://github.com/dotnet/csharplang/discussions/2999
[15:00:53] -ixelp- Proposal: Allow short isolated computations to use private heap avoiding GC (arena allocation approach) · Discussion #29 [...]
[15:00:55] <pl> as in actual hw CPUs, not emulated boards
[15:01:40] <hayley> Otherwise, not much about thread-local heaps in C#?
[15:06:25] <hayley> Oh well, seems the one-bit reference-from-older-objects count is the best way to make thread local GC with mutable objects fast.
[15:12:16] <pl> 1bit refcount variation?
[15:13:04] <hayley> https://www.cs.purdue.edu/homes/suresh/papers/ismm12.pdf basically uses a one bit reference count, though only counting references from older objects (i.e. which were mutated).
[15:16:11] <hayley> Well, they use two bits, but I cannot be assed to have all four states - just "assigned to older object" or not should be fine. And https://sci-hub.st/10.1007/BF01932156 reminded me with one bit, you can just use your old mark bitmap.
[15:16:12] -ixelp- Sci-Hub | The one-bit reference count. BIT, 17(3), 351–359 | 10.1007/BF01932156
[15:19:43] <hayley> Do you know anything special about handling bitmaps? All I know is that the SBCL developers only use BT on x86-64 to extract the bit from the word, because it manages to be bog slow with a memory argument.
[15:34:39] <hayley> https://www.youtube.com/watch?v=lwpzt25FLLg
[15:34:39] -ixelp- [YTP] Michael Rosen & The Banana Inspector - YouTube
[15:44:54] <hayley> Well, how did I not figure out that bit test/set/reset have been supported since the 386? That's interesting.
[15:51:57] *** Joins: dra (~dra@2a04:4540:641d:1e00:812b:a6f8:737:14ef)
[15:51:59] <dra> Hello!
[15:52:22] <lotuseater> hey dra
[15:54:06] <dave0> hayley: does SBCL let you get down to that assembly nitty-gritty?
[15:54:31] <hayley> dave0: Currently, it does emit BT.
[15:54:34] <dave0> have to roll your own bit array in c
[15:54:40] <dave0> hayley: nice
[15:55:06] *** Joins: razzy (~razzy@user/razzy)
[15:55:16] <hayley> (disassemble (lambda (x) (declare (simple-bit-vector x) (optimize (speed 3) (safety 0))) (setf (sbit x 0) 1))) ; prints BTS DWORD PTR [RDX+1], 0 then some noise.
[15:58:38] <lotuseater> dave0: https://pvk.ca/Blog/2014/03/15/sbcl-the-ultimate-assembly-code-breadboard/
[15:58:39] -ixelp- SBCL: the ultimate assembly code breadboard - Paul Khuong: some Lisp
[16:00:05] <dave0> but this is forth
[16:03:05] <dra> lotuseater: Thanks for the rabbit hole.
[16:04:18] <lotuseater> :(
[16:05:53] <lotuseater> sorry
[16:06:06] <dra> :)
[16:06:34] <lotuseater> i don't understand much of that myself yet
[16:07:09] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[16:07:53] <lotuseater> or nearly nothing
[16:07:59] <dra> I'm writing a Scheme-ish interpreter in assembly. Anything Lisp and assembly is interesting currently.
[16:08:32] <humasect> i like the idea of lisp as the assembly back then (say on lisp machine) 
[16:08:34] <lotuseater> cool
[16:08:58] <lotuseater> that sounds like a lot of nontrivial work :)
[16:09:43] <dave0> dra: https://github.com/marcpaq/arpilisp/
[16:10:12] <lotuseater> can i think of those SBCL VOPs/Intrinsics as some kind of compiler macro like that works on the level when the final machine code is generated?
[16:10:23] <pl> ehh, the assembly on lisp machine was not much lisp, it was however geared to support lisp
[16:10:35] <dra> dave0: Thanks!
[16:10:45] <pl> was weirder on CADR because there the instruction set changed pretty much every system version...
[16:11:50] <dra> lotuseater: Writing _unoptimized_ assembly is key here. So there's lots of repetition.
[16:12:02] <lotuseater> ahh
[16:12:26] <lotuseater> and right, better it works as intended primarily
[16:12:31] <dra> Exactly.
[16:12:50] <dra> I'll leave the optimization for when it can do enough Lisp. ;)
[16:13:47] <lotuseater> so use the Lisp to let it optimize itself in a sane way on the metalevel ^^
[16:14:16] * hayley thinks
[16:14:37] <dra> Yeah... I'm not sure where the manual labor is hidden, but it's definitely somewhere.
[16:14:38] <lotuseater> hayley: when aren't you thinking?
[16:14:45] <hayley> Does it count if I use a program written in Lisp to generate machine code from Lisp code?
[16:14:45] <humasect> wasm =/
[16:15:07] <humasect> count for what 
[16:15:14] <dave0> hayley: you did that with your regular expression library!
[16:15:27] <dra> hayley: Is the machine code able to write itself using Lisp as input?
[16:15:29] <lotuseater> sure it counts
[16:15:40] <hayley> dave0: No, that was Lisp code from regular expressions. The machine code is from -- oh, better not spoil the joke.
[16:16:21] <dra> Anyway, I'm currently trying to figure out how to implement LABELS.
[16:16:26] <hayley> dra: Yes.
[16:16:33] <dra> hayley: Then yes, I'd say. :)
[16:16:42] <humasect> implement them with C
[16:16:51] <lotuseater> and you have yet FLET ?
[16:17:23] <dra> lotuseater: FLET I have.
[16:17:31] <hayley> Hm, one common way to implement LETREC (close enough to LABELS for discussion) is to LET the variables with some bogus value, then set each variable with the values evaluated in the new environment.
[16:17:57] <dra> lotuseater: I could just extent the lexical environment with the environment stored in the lambda.
[16:17:58] <hayley> i.e. (letrec ((x v) ...) body ...) = (let ((x <bogus>) ...) (set! x v) ... body ...) in Scheme macro syntax.
[16:18:03] <lotuseater> wow even that is impressive enough though (for me)
[16:18:49] <hayley> https://www.youtube.com/watch?v=w1OKwH_f1PE
[16:18:50] -ixelp- Curtain Call - YouTube
[16:19:11] <dra> It can do macros, too. But those are really annoying without qq.
[16:19:53] <humasect> is qq a reader macro
[16:21:33] <dra> https://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node367.html#SECTION003600000000000000000
[16:21:34] -ixelp- Appendix C. Backquote
[16:22:30] <lotuseater> even Steele claims it's not so obvious ^^
[16:24:06] <humasect> i like the thought of unix being the C vm. back when i was worried about lisp images and size
[16:24:23] <lotuseater> hehe
[16:24:56] <dra> Linux, on the other hand, has a stable system call API, so screw C. ;)
[16:25:09] <humasect> doesnt mach ?
[16:25:15] <humasect> in a similar fashion 
[16:25:29] <humasect> cygwin and WSL probably is similar ?
[16:25:40] <dra> Probably. I'm (half) joking.
[16:25:40] <pl> depends what you mean
[16:25:46] <pl> Cygwin has no syscalls
[16:25:52] <pl> it's all about tricks using libc
[16:26:00] <pl> some of them crazy
[16:26:16] <humasect> good times, those =) 
[16:26:34] <pl> WSL1 runs emulation of linux syscalls, WSL2 runs VM with linux kernel
[16:26:51] <humasect> ohh
[16:27:08] <pl> but afaik Mach had no syscalls stability
[16:27:32] <humasect> https://stackoverflow.com/questions/48845697/macos-64-bit-system-call-table  
[16:27:33] -ixelp- assembly - macOS 64-bit System Call Table - Stack Overflow
[16:28:01] <pl> humasect: macos != mach
[16:28:03] <humasect> libsystem i think..
[16:28:17] <humasect> hmm
[16:28:45] <humasect> second answer, it does all of them? bsd and mach
[16:28:54] <humasect> idk this side of things sorry for ignorance
[16:29:29] <dra> hayley: May I query you?
[16:29:35] <humasect> https://opensource.apple.com/source/xnu/xnu-2782.20.48/bsd/kern/syscalls.master    --- so XNU is not mach. 
[16:29:43] <pl> well, macos uses Mach-based kernel, but the exported syscall table is not "stable" in any way for Mach
[16:29:53] <hayley> Sure.
[16:30:05] <humasect> pl: ah yeah
[16:30:11] <pl> humasect: well, it's not official CMU Mach, but that's because it's the weird Mach 3.5 branch from OSF/1
[16:30:23] <humasect> darwin?
[16:30:54] <pl> humasect: OSF/1, the BSD side of Unix Wars
[16:31:03] <humasect> ohh
[16:31:39] <pl> it used a modified Mach 3 kernel (sometimes called "Mach 3.5") which was used as base with MacOS 10.0
[16:31:58] <humasect> this sucks. macos has nothing to fix. so im just staring at it unless i've something to do
[16:32:12] <pl> specifically, MacOS X 10.0 used some OSFMK version as base code, with Free/Net BSD code used to patch over some stuff
[16:32:27] <humasect> not port from NeXT?
[16:32:29] <lotuseater> humasect: sounds like one of those first world problems ^^
[16:32:59] <humasect> =)
[16:33:05] <pl> humasect: NeXT started on Mach 3.x with BSD server, and I believe updated with code from OSF/1 over time. MacOS 10.0 referenced specific OSFMK version
[16:33:30] <humasect> ahh
[16:34:08] * hayley re-reads the paper and finds that having zero and one references on the heap is also optimizable. But she can't be bothered to ask for two bits per object in the bitmap.
[16:34:33] <pl> OSF/1 took Mach 3.x hybridized with in-kernel (instead of userland originally) bsd server based on BSD4.3/4.4
[16:34:34] <lotuseater> like when you go to the grocery store and you don't know what chips to buy cause they provide 100 sorts
[16:36:15] * humasect avoid stores. unless got a specific task 
[16:36:29] <humasect> pl: Hurd went back to userland ?
[16:36:35] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[16:36:44] <pl> humasect: Hurd would need to get /anywhere/ first ;)
[16:36:48] <lotuseater> that sounds like ignoring those problems :P
[16:37:12] <pl> humasect: Hurd in its Mach days drank Mach kool aid heavily, afaik
[16:37:15] <humasect> i dont know what chips, because all the other chips screaming buy me -
[16:37:30] <humasect> pl: heh yeah, something modular something
[16:37:37] <humasect> eNcApSuLaTe
[16:38:05] <humasect> meanwhile unix programs are meant to be piped and are basically C functions but compiled
[16:38:20] *** Joins: razzy (~razzy@user/razzy)
[16:38:28] <humasect> https://en.wikipedia.org/wiki/Unix_philosophy 
[16:38:40] <humasect> there them boyz
[16:38:41] <lotuseater> humasect: i have a clever strategy as I'm not the chips guy, just the ones you put in the oven or friteuse
[16:38:47] * hayley uploaded an image: (73KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/RcjhfQeEVxMCoAMcZriwQggc/randall-smith.jpeg >
[16:38:49] <pl> humasect: modularity is not a problem. The problem was that Mach made assumptions about certain things in its IPC design that resulted in poisoning the well for microkernel systems for decades
[16:38:52] <humasect> thompson n richie
[16:39:08] <humasect> friteuse.
[16:39:19] <pl> i.e. the idea of using multiple userland "servers" wasn't bad. The design and implementation of Mach IPC was
[16:39:30] <humasect> pl: oh. ounds minor
[16:39:30] <lotuseater> hmm, wasn't sure about the translation
[16:39:46] <hayley> 'I should have seen it coming.  I walked into my office after some lecture and stepped around some grey-bearded dude that was talking to my office mate.  "Hi, I'm Brian Kernighan," said the grey-bearded dude as I walked by. I thought quickly, "Hey, this is the guy that helped invent C, should I kill him now and take revenge for all humanity?"' --- someone
[16:40:02] <lotuseater> humasect: deep fryer. with oil
[16:40:12] <dave0> humasect: https://news.ycombinator.com/item?id=19416485
[16:40:13] -ixelp- The Unix-Haters Handbook (1994) [pdf] | Hacker News
[16:40:24] <pl> humasect: but since Mach was such a big project in the discussions etc. everyone started associating Mach failures with microkernels in general
[16:40:34] <lotuseater> hayley: phew :D
[16:41:06] <humasect> ahh
[16:41:14] <dave0> humasect: it has my current favorite unix quote: Unix went from being the worst operating system available, to being the best operating system available, without getting appreciably better.
[16:41:29] <humasect> ah thats terrible
[16:42:00] <lotuseater> and i think the better translation for the former would be crisps
[16:42:10] <humasect> although all our other attempts, plan 9, smalltalk, genera, next, mainstream is mainstream
[16:42:15] <humasect> people will drive Ford
[16:42:56] <humasect> lotuseater: fritter sounds familiar 
[16:43:22] <humasect> i like macos. i should learn more about current version - last one i had was in 2011
[16:44:37] <dave0> for some reason apple wants to control the software and the hardware.. i thought they learned their lesson in the 90's
[16:45:07] <lotuseater> okay i try to save this in my vocabulary
[16:45:07] <pl> dave0: that's what they learned in fact
[16:45:37] <pl> one of the very first things Jobs did was to kill the idea of non-Apple hw running Apple software
[16:45:41] <humasect> dave0: heh idk. or idc. it works great for me
[16:45:55] <humasect> why everyone jellin on apple
[16:45:55] <pl> (along with killing much of Apple's R&D)
[16:46:03] <humasect> its a big company made of a lot of people
[16:46:11] <lotuseater> "Dear Steve Jobs, please come back and fire Tim Cook."
[16:46:22] <humasect> ok that pls
[16:46:27] <pl> it's a very top-down company where the few people at the top have dictatorial control
[16:46:47] <humasect> eh for the best. most ppl dont know what they are doing
[16:46:58] <pl> humasect: in Apple, that's by design
[16:47:17] <pl> as in, it's secretive internally too
[16:47:26] <pl> and teams aren't allowed to communicate
[16:47:49] <humasect> hmm. i will put this in lego terms. as a kid i loved to build stuff and play with lego. didnt even consider it as a "company trying to make money" until let's say right now
[16:47:53] <lotuseater> pl: maybe they think the Loki way "We free you from freedom for your own good."
[16:48:13] <humasect> i just use the computers and software, dont care about whatever the company is up to ... im not trying to be a CEO or entereitpreuneeuerr
[16:48:28] <lotuseater> Lego is great. or was
[16:48:54] <humasect> no no. still great. its when you add "the lego company" in that equation that it becomes like a person
[16:49:26] <humasect> i thought "lego sucks they just do star wars and harry potter what sellouts" but its still lego. not thinking of the company aspect of it
[16:49:31] <humasect> clouds my judgements and choices 
[16:49:56] <humasect> lego now makes a lot of user created sets, doing amazing things. wish i had the money
[16:50:37] <humasect> i try to think most things are at least trying to evolve for the better. we got customer complaints right? apple has investors, big gigantic financial clients they cannot let down, they have to listen to the people else no money made
[16:50:59] <humasect> people want this, supply meets demand
[16:51:23] <humasect> if anything apple or any large corp like google is made by the people who are paying for it and using the service
[16:51:34] <humasect> theres no one on a mountain with a gun saying Buy THis Or Else 
[16:51:43] <lotuseater> some other such companies do much interesting work too
[16:52:11] <humasect> i think i would have a good time investing stocks 
[16:52:33] <humasect> been following tech regardless. all because i couldnt choose a programming languge
[16:54:32] <lotuseater> sorry, i saw this meme again yesterday and couldn't resist changing it a bit: https://trash.randomerror.de/rsjfq/addicts.png
[16:56:41] <humasect> macos 12 whoa
[17:00:08] <hayley> Huh, I did something like that, but IIRC there was a Kotlin programmer. In part cause I had to put up with someone who thought that fancy "with" syntax was any replacement for macros.
[17:08:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[17:10:58] * hayley uploaded an image: (18KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/bzRlFalOwhlrVgDRRfPukxzu/self-chalice.jpeg >
[17:11:04] <hayley> lotuseater: consume the self chalice
[17:14:18] <lotuseater> hayley: okay :) has this to do with the self compiler?
[17:15:10] <hayley> Yes.
[17:17:17] *** Joins: nihaal (~nihaal@171.60.228.170)
[17:17:37] *** Quits: okflo (~okflo@188-23-113-20.adsl.highway.telekom.at) (Quit: WeeChat 3.2)
[17:18:44] <lotuseater> I wanted to buy one of those fancy TeX cups, but they were out of stock.
[17:18:52] * hayley still has a hunch that the second bit in the not one bit refcount is unnecessary. At least, you don't tend to cons between other consing and publishing the latter.
[17:20:30] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Read error: Connection reset by peer)
[17:20:36] *** Joins: humasect_ (~humasect@2001:1970:57e0:4100::3d20)
[17:24:15] <hayley> Hm, but they use the damn "session" and not unidirectionality. More stuff to test!
[17:26:35] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:29:45] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 248 seconds)
[17:30:17] *** Quits: APic (apic@apic.name) (Ping timeout: 248 seconds)
[17:34:13] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[17:34:41] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[17:38:19] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[17:41:54] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[17:43:55] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:46:25] *** humasect_ is now known as humasect
[17:49:17] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[17:54:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:00:41] *** Joins: rain3 (~rain3___@79.115.250.43)
[18:02:33] *** Joins: humasect_ (~humasect@2001:1970:57e0:4100::3d20)
[18:04:52] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Ping timeout: 250 seconds)
[18:13:53] *** Quits: humasect_ (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[18:19:10] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[18:25:39] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[18:35:26] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:36:43] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Read error: Connection reset by peer)
[18:36:49] *** Joins: humasect_ (~humasect@2001:1970:57e0:4100::3d20)
[18:37:36] *** Joins: APic (apic@apic.name)
[18:44:27] *** Quits: nihaal (~nihaal@171.60.228.170) (Ping timeout: 240 seconds)
[18:54:04] *** humasect_ is now known as humasect
[18:59:17] *** Joins: selwyn (~selwyn@user/selwyn)
[19:00:45] *** Joins: razzy (~razzy@user/razzy)
[19:20:02] *** Quits: APic (apic@apic.name) (Ping timeout: 245 seconds)
[19:22:20] <edgar-rft> lotuseater: what about using TeX for printing on your own cup
[19:44:28] *** Joins: nihaal (~nihaal@171.60.228.170)
[19:46:40] <selwyn> pigs are also getting too big here
[20:00:33] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[20:05:01] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[20:06:18] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[20:23:43] <pjb> selwyn: yes, wild animals are getting obese too. It's the pollution.
[20:27:18] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:27:30] <edgar-rft> selwyn: Boris Johnson is getting too big?
[20:29:32] <edgar-rft> human race gets decimated by covid, so pigs take their chance to gain world domination, not really surprising
[20:32:32] <pjb> I'd bet on bears.
[20:33:14] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (Quit: ZNC 1.6.3+deb1ubuntu0.2 - http://znc.in)
[20:33:38] <humasect> cats'
[20:34:40] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[20:38:33] *** Joins: selwyn (~selwyn@user/selwyn)
[20:44:36] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[20:53:11] *** Joins: derelict (derelict@user/derelict)
[20:56:57] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Quit: Leaving...)
[21:02:31] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3d20)
[21:11:31] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 252 seconds)
[21:13:38] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3d20) (Remote host closed the connection)
[21:16:25] *** Joins: APic (apic@apic.name)
[21:27:44] <gilberth> Good morning #lispcafe!
[21:29:10] <selwyn> good morning gilberth
[21:29:12] <selwyn> how are you
[21:30:08] <gilberth> I believe, after I had my dosis of caffeine, I'll be fine. Sort of.
[21:31:55] <gilberth> Kitchen still is an utter mess, all kind of stuff formally occupying the little closet is still spread evenly all around.
[21:32:53] <gilberth> I can't clean that up --- it's not my stuff. :(
[21:33:03] *** Joins: razzy (~razzy@user/razzy)
[22:03:21] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 248 seconds)
[22:13:01] *** Joins: razzy (~razzy@user/razzy)
[22:17:45] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 248 seconds)
[22:25:42] <gilberth> I wonder, if I could measure the performance impact of read barriers and/or forwarding pointers. Testing the MSB would be cheap, but fixnums could have that lit.
[22:28:44] <selwyn> i think i found a bug the other day
[22:29:37] *** Quits: APic (apic@apic.name) (Ping timeout: 252 seconds)
[22:30:56] <gilberth> selwyn: The other day? I find bugs each day. What is it?
[22:31:23] <gilberth> Or rather: The bugs find me. They somehow like me.
[22:34:27] <selwyn> in the slime repl, try typing an escaped symbol :|abc|
[22:35:41] <selwyn> when the mark is set immediately to the left of the last |, type a ¨
[22:35:53] <selwyn> for me, the ¨ ends up to the right of the |
[22:35:56] <selwyn> this seems wrong
[22:38:01] <gilberth> Works here.
[22:39:03] <selwyn> ok
[22:39:08] <selwyn> hm
[22:39:13] <gilberth> Are you sure, that this is a SLIME thing? But when I type "¨" another letter is expected to be put beneath it.
[22:40:03] <selwyn> uh
[22:40:25] <selwyn> i meant ", not sure why my irc client put ¨
[22:40:39] <gilberth> ok. I'll try again.
[22:41:39] <gilberth> All fine too, with a "
[22:42:14] <selwyn> well well
[22:42:34] <gilberth> This sounds like a very strange behaviour that you have there.
[22:42:54] <selwyn> i have reproduced it
[22:43:17] <selwyn> it could be related to my weird keymap but i don´t think so
[22:48:41] <selwyn> gilberth: what do i do :o
[22:48:46] <gilberth> I tested it with my recent Debian in my VM. Emacs 26.1 and Slime 2.26.1. All fine.
[22:48:52] *** Joins: razzy (~razzy@user/razzy)
[22:49:18] <gilberth> What is '"' bound to?
[22:50:02] <gilberth> Here it's just self-insert-command.
[22:52:01] <gilberth> [Despite Emacs' cursor seriously broken, but who needs extra space between lines?]
[22:52:08] <selwyn> paredit-doublequote
[22:52:28] <gilberth> So that is your culprit then, I guess.
[22:52:36] <gilberth> I don't use paredit.
[22:52:40] <selwyn> oh
[22:52:41] <selwyn> ok
[22:55:20] <gilberth> Dammit, why would c-m-l lock my screen? Silly.
[22:56:52] <contrapunctus> gilberth: blame window manager?
[22:57:04] <gilberth> ok. With paredit, I get. I type #:" and wind up with #: "". Is that expected? And when I type #:|foo| c-b " I wind up with jst #:|foo| no '"' in there.
[22:57:44] <gilberth> contrapunctus: Yes, blame those kids. Am I the only one using Emacs?
[22:59:58] <selwyn> you get no " at all? that seems weird
[23:00:47] <gilberth> It's half-way consistent on macOS. GUI shortcuts use the super^Wapple^cmd key, the alt key is free. Only trouble: I just can't make the left alt into meta and the right alt for alternate characters across all applications. Emacs has an option for that, that's fine. But in Terminal.app for instance, you either could type accented characters, or have a meta key. Not both at the same time. I am the only one using keys beyond ASCII? *sigh*
[23:01:05] <selwyn> ok
[23:01:25] <contrapunctus> gilberth: try kmonad for that.
[23:01:39] <gilberth> selwyn: Yes, I place the point before the '|' in #:|foo|, then type '"' and the point moves past the '|' and no '"' inserted.
[23:02:28] <selwyn> but you should be allowed to have a \" inside the || right
[23:02:58] <selwyn> for me, that is what happens whenever i type " inside the ||, but some characters before the rightmost | 
[23:04:17] <selwyn> :|foo\"| => :|foo"|
[23:04:28] <selwyn> yet it is difficult to type
[23:05:03] <gilberth> contrapunctus: Ah ok. It uses the kext from Karabiner. And Karabiner cannot do, what I need. So I doubt kmonad can. I can't try it because I have macOS 10.10 and that isn't supported.
[23:05:44] <contrapunctus> gilberth: Step 1. Install Linux 😏
[23:06:29] <gilberth> selwyn: Of course there could be '"'s inside ||. But then, this is why I don't use paredit. I hate it, when what is inserted, is not what I type. I can't get used to it.
[23:06:53] <selwyn> oh
[23:07:00] <selwyn> well, i will think about what to do
[23:07:03] <selwyn> thanks for your help!
[23:07:41] <selwyn> hopefully one day i can be as good a bug hunter as you
[23:07:44] <gilberth> contrapunctus: No way! It's worse than macOS for me. Begins with a broken modmap. And I am too old to spend days in configuring the system to behave almost sane.
[23:08:17] <gilberth> selwyn: Well, next step would be to fix paredit-doublequote.
[23:08:36] <selwyn> so you think there is a chance it is actually broken
[23:09:12] <gilberth> Well, it behaves strange for you and for me. And in different ways.
[23:13:21] <gilberth> It looks like it does not distinguish between '|' and '"' as both take verbatim text. I believe #:|foo<POINT>| + '|' typed = #:|foo|<POINT> would be the expected behaviour? Oh. And when I type '|foo and then <backspace> I get an error. A c-a c-k then gets an error too. I can delete '|foo only by c-a c-d's. Two other bugs! Found in seconds.
[23:13:34] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:17:08] <gilberth> More bugs. #:|foo<POINT>| + c-d => Nothing happens. Or is that the expected behaviour?
[23:21:28] *** Quits: nihaal (~nihaal@171.60.228.170) (Quit: nihaal)
[23:22:43] <gilberth> Bah! I just can't work with paredit. I fight the inserted parens all the time. I have to attend to them instead of just typing what I mean. And I can't delete parens?
[23:24:00] <contrapunctus> gilberth: ...
[23:24:36] <contrapunctus> gilberth: what exact editing operation are you trying to do? 
[23:24:48] <gilberth> I type e.g. (foo a 2) then decide, I need a LET around that, maneuver back and wind up with (let ((a (blah)))<POINT>) (foo a 2) and can't delete the ')' after the point? I want the LET around (foo a b) not before it. I am too old for that, it seems.
[23:25:59] <contrapunctus> gilberth: I haven't used Paredit in a while (I use Smartparens instead)...doesn't it wrap with parens with M-( ?
[23:27:03] <contrapunctus> So `|(foo a 2)` -> `M-(` -> `|((foo a 2))`
[23:27:30] <White_Flame> you push parens around with C-S-cursor left/right
[23:27:38] <White_Flame> instead of deleting/inserting
[23:27:43] <contrapunctus> gilberth: you never insert or delete individual parens with Paredit, always in pairs.
[23:27:46] <White_Flame> however, you can always cut & paste parens to get around paredit
[23:28:09] <White_Flame> for really degenerate cases
[23:28:33] <White_Flame> IMO the best think about paredit is that C-k doesn't unbalance your parens
[23:28:36] <White_Flame> *thing
[23:29:06] <gilberth> Perhaps, that's why I can't work with it. I don't like a structure editor. It takes a too large part of my brain to figure out what exact tree operation I need to apply, instead of just typing what I mean. And how would M-( know what I want. Say I have (foo a 1) (foo b 2) typed. Do I want the LET around just (foo ..) or both?
[23:30:18] <contrapunctus> gilberth: I use Boon, so in that situation I'd say `a p 2 ;` to wrap two forms, or `a p ;` to wrap one.
[23:30:29] <gilberth> I rarely have trouble with unbalanced parens, I have an extra stack for those in my brain. Habits.
[23:30:32] <contrapunctus> Paredit probably has something like that too.
[23:31:01] <contrapunctus> gilberth: pretty sure Paredit also wraps regions.
[23:31:08] <gilberth> Yes, but I just don't want that kind of editor.
[23:31:25] <contrapunctus> Hm...okay then 😄
[23:31:54] <gilberth> I just never believed in a structural editor.
[23:32:13] <contrapunctus> Seriously, more than even macros, I like Lisp syntax for structural editing.
[23:33:28] <gilberth> But this ironic and I call that east coast versus west coast at times. Interlisp knows what is in an editor buffer (sedit), but the screen is just a bitmap, while Emacs knows nothing about it's buffer, but CLIM/dynamic windows knows everything about every pixel on the screen. (presentations)
[23:36:15] <gilberth> contrapunctus: Sure, I like the Lisp syntax, because I could maneuver around sexprs with c-m-f c-m-b c-m-u and friends. But it's optional and I still could use c-f c-b etc to move around.
[23:36:45] <White_Flame> I only recently shifted to paredit, maybe 2 years ago.  had 15+ years without it before
[23:36:49] <White_Flame> it took a bit, but was worth it
[23:38:24] <gilberth> I was doing fine for 30+ years.
[23:40:41] <contrapunctus> gilberth: sure, I still use word/line/character movements and operations in Lisp code.
[23:41:07] <contrapunctus> I don't know of any structural editing package which disallows that.
[23:41:32] <gilberth> Well, I can't with paredit.
[23:41:54] <contrapunctus> (Paredit and smartparens-strict-mode just make it harder to disbalance pairs of parens, quotes, etc.)
[23:42:27] <contrapunctus> And I like slurping, barfing, and splicing.
[23:43:04] <gilberth> They make it hard to have parens, where they belong. And as I mentioned, I never have trouble with imbalanced parens.
[23:43:30] <contrapunctus> You don't like it, that's perfectly okay.
[23:43:54] <contrapunctus> I'm talking about why I do.
[23:45:43] <gilberth> Sure, when you are more productive using it, that's great. My editing habits are just too deeply rooted and I would fight paredit all day, to solve a problem, what I don't have. Or believe, I don't have.
[23:48:07] *** Quits: rain3 (~rain3___@79.115.250.43) (Ping timeout: 240 seconds)
[23:50:32] *** Joins: vats (~vats@180.149.226.8)
