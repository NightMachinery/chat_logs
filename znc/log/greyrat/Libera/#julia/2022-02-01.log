[00:14:59] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:36:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[00:40:46] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[01:14:10] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[01:38:50] *** Quits: ermo (~ermo@user/ermo) (Read error: Connection reset by peer)
[01:43:29] *** Joins: ermo (~ermo@user/ermo)
[01:50:33] *** Quits: ermo (~ermo@user/ermo) (Ping timeout: 268 seconds)
[01:51:58] *** Joins: ermo (~ermo@user/ermo)
[02:26:12] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:52:30] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[02:55:26] *** Joins: Erutuon (~Erutuon@user/erutuon)
[02:57:10] *** Joins: notzmv (~zmv@user/notzmv)
[03:48:15] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[04:15:59] <adigitoleo> edm: Just an idea, depending on what you want you could broadcast bitwise ops: https://x0.at/TMWB.txt
[04:17:01] <adigitoleo> edm: if you need matrix products etc. then I think you'll need to define them, see https://stackoverflow.com/questions/64939193/boolean-matrix-multiplication-in-julia
[04:17:58] <adigitoleo> edm: overloading the usual operators (+,-,*,etc.) for a custom number subtype should also work I think, yes
[04:50:37] *** Quits: cp--- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 268 seconds)
[04:51:11] *** Joins: cp--- (~cp-@b157153.ppp.asahi-net.or.jp)
[05:26:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:30:57] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 276 seconds)
[05:58:50] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:07:13] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[06:12:32] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[06:39:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:24:25] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:25:36] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:33:48] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 276 seconds)
[07:38:05] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[08:08:41] *** Joins: Erutuon (~Erutuon@user/erutuon)
[08:18:26] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 268 seconds)
[08:20:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:20:51] *** Joins: Erutuon (~Erutuon@user/erutuon)
[09:06:27] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:14:26] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Remote host closed the connection)
[09:14:37] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[09:15:10] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[09:42:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:55:52] *** Quits: Ekho (~Ekho@user/ekho) (Quit: CORE ERROR, SYSTEM HALTED.)
[10:07:09] *** Joins: Ekho (~Ekho@user/ekho)
[10:55:28] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:02:55] *** Joins: notzmv (~zmv@user/notzmv)
[11:37:31] *** Joins: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[11:41:19] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[12:09:34] <edm> adigitoleo: thank you
[12:09:47] <edm> yes i tried the last option in the end and it seems to work, sort of
[12:10:34] <edm> 2A gives me [2 0 0; 0 2 0; 0 0 2] etc which is annoying but i think that means i probably need to sort out ‘promotion’ so that any bool multiplied by a scalar is either 0 or 1
[12:10:48] <edm> but again i am a bit new to julia so i may be flailing
[12:20:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[12:50:37] <mikko> i wouldn't mess with the promotion rules for built-in types, either define your own number type or own method
[12:53:11] <mikko> although to be honest i'm not sure in what scenario you would be multiplying booleans with scalars now that i think of it
[12:54:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:55:04] *** Quits: Major_Biscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[12:57:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[12:57:31] *** Joins: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl)
[13:29:45] <edm> mikko: you're right ofcourse, i was just playing around in pluto seeing if i'd understood overloading
[13:31:13] <edm> mikko: so would that just be a struct called MyBinaryType whose only entry is a bool, and just re-write the rules for that struct? i.e. basically just a wrapper around bool
[13:31:39] <edm> or is it better as e.g. an int that i can somehow force to be constructed as only either 0 or 1 or...
[13:40:37] *** Quits: edm (sid147314@id-147314.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[13:41:57] *** Joins: edm (sid147314@id-147314.hampstead.irccloud.com)
[13:42:17] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (Ping timeout: 240 seconds)
[13:42:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:52:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[13:56:16] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[14:02:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:04:00] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[14:46:42] <adigitoleo> edm: according to the manual, defining new primitive types is not recommended: https://docs.julialang.org/en/v1/manual/types/#Primitive-Types
[14:46:47] <adigitoleo> not sure exactly why
[14:47:04] <adigitoleo> but in that case, I'd just implement the methods rather than a new type
[14:49:07] <adigitoleo> and just dispatch on Bool(s) or AbstractArray{<:Bool}
[14:49:13] <edm> so you'd prefer my_special_matrix_product(A,B) where A and B are matrices of bools, rather than overwriting the primitives
[14:49:43] <adigitoleo> yeah since Bool already exists as a binary primitive, just write methods for that type that do what you need
[14:50:48] <edm> I'll need to go and do some reading as I'm not sure i strictly follow how this is different to e.g. this: https://usercontent.irccloud-cdn.com/file/2sszX9n6/Screenshot%202022-02-01%20at%2011.20.33.png
[14:52:14] <adigitoleo> yeah that's fine, although sometimes discouraged as "type piracy": https://docs.julialang.org/en/v1/manual/style-guide/#Avoid-type-piracy
[14:54:53] <edm> Righto. So then, if i instead do something like `struct Bit <: Number; b::Bool;  end' and then implement menthods like: +(x::Bit, y::Bit) 
[14:55:07] <edm> is that the most julian way to do this?
[14:59:18] <adigitoleo> don't think I'm qualified to say what's the most julian way, fairly new myself... have seen stuff similar to that in the wild
[15:00:29] <edm> ok thanks. i'm assuming that just wrapping in a struct is a sort of zero-cost abstraction in Julia and there's not some better way of declaring a new type. but yes, I'm in the drowning-in-ignorance pool at the bottom of the learning curve at the moment
[15:01:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[15:02:25] <adigitoleo> most of the time I use structs when I want a new type yes, although I've never needed a number subtype before
[15:04:44] <adigitoleo> that's also how it's recommended in this cheat sheet: https://juliadocs.github.io/Julia-Cheat-Sheet/
[15:04:45] <mikko> declaring *primitives* is different than declaring struct that has one int/bool/whatever inside it
[15:05:45] <mikko> primitives are something that is implemented in the llvm, which is why i guess their use is discouraged
[15:08:53] <mikko> the point being that there's really never a reason to use your own primitive unless you *really* know what you're doing, wrapping a ready-made primitive in a struct is the way to go
[15:09:12] <edm> right, thanks for your help all
[15:09:21] <edm> and yes i absolutely don't know what I'm doing in this case
[15:09:30] <edm> (or in the general case, usually)
[15:21:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:46:02] *** Joins: jjido (~Denis@94.4.149.217)
[17:13:20] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:27:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[18:24:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:19:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[21:13:03] *** Quits: lunik1 (~lunik1@37.205.14.203) (Quit: :x)
[21:15:19] *** Joins: lunik1 (~lunik1@37.205.14.203)
[21:29:24] *** Quits: MajorBiscuit (~MajorBisc@c-001-020-005.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:38:09] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[21:51:26] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[22:09:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:12:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b193:a8bc:ecae:fe3)
[23:44:02] *** Joins: Erutuon (~Erutuon@user/erutuon)
