[00:00:08] <CrtxReavr> Yeah. . .
[00:00:16] <CrtxReavr> Which didnt' seem right. . . . drug store & all.
[00:00:17] <SnoopJ> (which CPython also used to use, IIRC)
[00:00:21] <sveinse> haha. I've been with rcs -> cvs -> svn -> hg -> git
[00:00:36] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:00:41] <CrtxReavr> I think the whole universe used to use cvs.
[00:01:07] <grym> i learned the value of distributed versioning tools after a particularly harrowing weekend involving a dying RAID and a svn server that hadn't been backed up in years but had years upon years of research data on it
[00:01:08] <sveinse> today that's git
[00:01:16] <bjs> if anything, git is at least proof that you don't have to be first to market to make good software people will use
[00:01:32] <CrtxReavr> For a long time, the FreeBSD project used svn for source management, and continued to use cvs for release management.
[00:01:47] *** Quits: quhar (~g.kucharc@staticline-31-182-241-146.toya.net.pl) (Quit: WeeChat 3.4)
[00:01:48] *** Quits: BrokenCog (~BrokenCog@38.sub-174-194-146.myvzw.com) (Quit: leaving)
[00:01:55] <grym> (and then i learned about `git` and also `git svn` in one big gulp!)
[00:02:12] <SnoopJ> bjs, you can be late and make confusing software? :D
[00:02:13] <deniska> git is also a proof that user experience is overrated :D
[00:02:16] <sveinse> even HW-engineers and non-sw ppl use git these days for all kinds of tinkering projects. So git is "accepted" these days
[00:02:23] *** Joins: quhar (~quhar@staticline-31-182-241-146.toya.net.pl)
[00:02:31] <CrtxReavr> I do okay with git, so long as nothing goes majorly sideways.
[00:02:36] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[00:02:39] <CrtxReavr> If I have a mess to clean-up, then I need help.
[00:02:55] <bjs> SnoopJ: I think most people that use git use it in a "simple" way and never need 99% of the features it provides
[00:02:57] <CrtxReavr> Though. . . it's amazing how well 'git status' is as telling you what you need to do.
[00:03:11] <bjs> SnoopJ: whether that's good or bad depends on your point of view :P
[00:03:18] * SnoopJ nods
[00:03:43] <bjs> CrtxReavr: I really like it, status commands that actually tell you *what commands you can run next to do useful things*
[00:03:57] <bjs> so many hours of stackoverflow saved
[00:05:40] <CrtxReavr> #git has saved my ass more than once.
[00:05:55] <CrtxReavr> Plus, just cow-orkers who are way better versed with git than I am.
[00:06:11] <CrtxReavr> It never hurts to type 'git status' though.
[00:07:57] *** Quits: quhar (~quhar@staticline-31-182-241-146.toya.net.pl) (Quit: WeeChat 3.4)
[00:08:14] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:08:25] *** Joins: quhar (~quhar@staticline-31-182-241-146.toya.net.pl)
[00:08:38] <deniska> `hg init; hg add .git; hg commit` just in case you screw something up
[00:08:38] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:4c89)
[00:08:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[00:10:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[00:10:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:11:48] <sveinse> I'm glad we're done with hg thou. I had a critical hg repo that crashed when iterating over the older revisions. The bug sat with the hg community for 6 months without resolution. So I certainly get a "sinking ship"-feel over it.
[00:12:15] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[00:12:45] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[00:12:50] <sveinse> That might be insulting someone by saying so. For that I'm sorry.
[00:15:33] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[00:16:06] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:06] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:20] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:16:21] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:16:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:16:27] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[00:18:16] <deniska> git is pretty much the only vcs I used, not counting a weird proprietary one, in which you locked a file before editing, and then received phone calls from colleagues asking you to unlock a file you forgot about
[00:19:02] <deniska> OTOH I never had merge conflicts in this one :)
[00:19:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:20:13] <grym> i've had an xls plushie before
[00:20:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:20:38] *** Quits: grooverman_ (~grooverma@152.250.149.217) (Ping timeout: 260 seconds)
[00:20:42] <sveinse> deniska: yes, there are some that requires a lock, checkout, checkin, unlock pattern
[00:20:44] <grym> (not yet xlsx, but it sure was on an unprotected network share god help you if two people had it *open* at once)
[00:20:45] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:21:19] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:21:57] *** Joins: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de)
[00:22:05] <jwhisnant> <sarcasm> ah windows and file and directory locking, good times! </sarcasm>
[00:24:04] <sveinse> I wonder what the FP-hardware implications would be if they chose to do floating points like the 10-base Decimal instead of 2-base variant in float
[00:24:32] <SnoopJ> sveinse, once upon a time, hardware did both
[00:24:42] <Helle> sveinse: well look it up, there have been decimal computers with floating point support
[00:24:45] <Helle> well, BCD
[00:24:55] <Helle> also trinary computers if you really want to mess with your brain
[00:25:08] <SnoopJ> Yea, look up the history of BCD if you're curious. A lot of IBM systems had a knob on the control panel for this :)
[00:25:08] <sveinse> true that
[00:25:31] <sveinse> But for some reason IEEE754 prevailed
[00:25:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:25:51] *** Quits: frege86 (~frege@d99-199-16-209.bchsia.telus.net) (Ping timeout: 256 seconds)
[00:25:54] <Helle> yes, because BCD is inefficient compared to just straight binary
[00:26:06] <SnoopJ> sveinse, this is well befoer IEEE-754 existed
[00:26:09] <Helle> though arguably floats are a little weird compared to regular integers
[00:26:39] *** Joins: Viewday1153 (~Viewday@user/viewday)
[00:26:43] <SnoopJ> Computeprhile recorded a nice discussion of BCD with Professor Brailsford: https://www.youtube.com/watch?v=RDoYo3yOL_E
[00:27:19] *** Joins: bahamas (~lucian@84.232.140.52)
[00:27:39] <sveinse> Approx ~24 years ago I used to co-maintain gcc for a port of a FP DSP from TI. It used another float format than IEEE754
[00:27:59] *** Quits: andreasbuhr (~quassel@p549db62a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:28:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[00:28:32] *** Viewday1153 is now known as Viewday115
[00:29:01] <sveinse> SnoopJ: cool, thanks
[00:30:24] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:30:56] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:31:25] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[00:32:35] <SnoopJ> I thought that Ken Shirriff had talked about BCD on his blog before, but I can only find incidental references to it in his articles about the machines that used it
[00:33:56] <Helle> I mean a big reason BCD was usable on the big iron is that they where microcoded to all hell and back, so they could do BCD with VARIABLE length numbers in "hardware"
[00:34:14] <SnoopJ> yea, and this was well before word sizes stabilized
[00:34:17] <Helle> and BCD meant that the mental design for the system was easy as was length signalling
[00:34:19] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[00:34:40] <SnoopJ> if you needed a weird word size like 40 or 60 bits to make it all work out, why the heck not :)
[00:34:42] <Helle> (namely, you waste a few bit combinations with BCD and that means you can use those for IB signalling)
[00:35:02] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[00:35:07] <Helle> SnoopJ: I mean IBM mainframes can hardware multiply variable length BCD "strings"
[00:35:24] <Helle> and "hardware" I guess, they can only do it because of very fancy microcode
[00:35:25] <SnoopJ> Helle, right, that's why there's a hardware control for it
[00:35:31] <SnoopJ> Because it literally changes the way the machine computes
[00:35:34] <sveinse> you lose 6 states per 4 bits with BCD thou
[00:35:48] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:35:50] <Helle> sveinse: which are great for signalling
[00:36:08] <SnoopJ> sveinse, yes, and this was well known at the time. It turned out to be a popular design trade-off.
[00:36:51] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:36:55] <SnoopJ> the UX benefit of being able to punch decimal values onto a card is pretty high
[00:37:42] <Helle> I mean original punchcards quite often had 1 punch per column to indicate a value from 1 to 10
[00:37:49] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:4c89) (Quit: Client closed)
[00:37:54] <Helle> so BCD is already a density improvement from that
[00:38:17] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[00:38:30] *** Joins: toma_ (~RubbishPu@node-1w7jr9yhpl489wga6amqjk2b3.ipv6.telus.net)
[00:38:36] <sveinse> I saw the CNN Apollo 11 documentary (the one with digitally restored footage and no narrator) and they pan through the control center. It's amazing how much space they needed for computers. -- Today this is replaced by data centers of the same size, only located elsewhere :P
[00:38:55] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[00:39:09] *** Joins: hams (~hams@user/hams)
[00:39:32] *** Quits: nomic (~nomic@185.192.69.74) (Quit: Leaving)
[00:41:04] *** Joins: grooverman (~grooverma@189.110.78.152)
[00:41:31] *** Joins: nomic (~nomic@185.192.69.74)
[00:42:10] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489wga6amqjk2b3.ipv6.telus.net) (Ping timeout: 250 seconds)
[00:42:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:42:45] *** Quits: DaDarkWizard (~DaDarkWiz@2600:6c47:a200:350a:5e6b:db95:ae49:966c) (Quit: Client closed)
[00:43:53] *** Quits: magla (~gelignite@55d4c150.access.ecotel.net) (Quit: Stay safe!)
[00:43:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[00:44:41] *** Joins: jay-m126 (~jay-m@129.0.76.12)
[00:44:46] *** Joins: jay-m126_ (~jay-m@129.0.76.12)
[00:44:47] *** Joins: jay-m1261 (~jay-m@129.0.76.12)
[00:45:44] *** Quits: dadofapollo (~dadofapol@135.129.1.199) (Quit: Konversation terminated!)
[00:47:49] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:48:05] *** Quits: dre (~dre@2001:8003:c932:c301:efa8:3ab4:6d9d:737a) (Quit: Leaving)
[00:48:12] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[00:49:31] *** Quits: noobaroo (~solas@user/noobaroo) (Quit: Konversation terminated!)
[00:50:04] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[00:51:01] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:51:27] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 250 seconds)
[00:51:43] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[00:53:03] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[00:53:23] *** Quits: NotThatRPG_ (~NotThatRP@mail.sift.net) (Ping timeout: 256 seconds)
[00:53:48] *** Joins: parv (~quass@user/parv)
[00:54:11] *** Quits: quhar (~quhar@staticline-31-182-241-146.toya.net.pl) (Quit: WeeChat 3.4)
[00:55:38] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[00:56:03] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:56:03] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:56:38] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[00:57:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[00:57:18] *** Joins: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl487ymy7kxckm6fs.ipv6.telus.net)
[00:58:24] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[00:58:41] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[00:59:04] <KnowledgeShark> hey everyone :)
[00:59:18] <KnowledgeShark> it's rare my PC freezes :X
[00:59:35] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:00:21] *** Quits: toma_ (~RubbishPu@node-1w7jr9yhpl489wga6amqjk2b3.ipv6.telus.net) (Ping timeout: 245 seconds)
[01:00:22] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 250 seconds)
[01:01:02] *** Joins: blei (~blei@user/blei)
[01:02:32] *** Joins: georgios (~georgios@user/georgios)
[01:02:44] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[01:02:51] *** Joins: DaDarkWizard (~DaDarkWiz@2600:6c47:a200:350a:5e6b:db95:ae49:966c)
[01:02:58] *** Quits: siwica``` (~user@169-185-142-46.pool.kielnet.net) (Ping timeout: 250 seconds)
[01:03:43] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d106-0f64-fa50-19ff.res6.spectrum.com) (Read error: Connection reset by peer)
[01:04:49] *** Joins: clf059 (~clf059@94.140.8.5)
[01:04:51] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[01:04:58] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[01:05:56] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:06:17] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:07:18] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:07:37] *** Joins: funhouse (~funhouse@user/funhouse)
[01:10:44] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 272 seconds)
[01:11:03] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:11:11] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 256 seconds)
[01:12:00] <dag> is venv the "best" way to manage dependencies?
[01:12:29] <SnoopJ> dag, they're useful for having isolated environments, they don't really "manage" dependencies.
[01:12:36] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:12:41] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:14:19] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Lost terminal)
[01:14:41] <dag> so two different python projectss might have deps requests==1 and requests==2
[01:14:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:14:55] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:14:56] <dag> each project need to manage its dependencies somehow
[01:15:17] <dag> dependency manager?
[01:15:18] <grym> dag: and they cannot share the same site, then.  yes, making a venv for each will let you install both in independent sites
[01:15:26] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:16:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:16:56] *** Joins: Amadiro__ (~Amadiro@45.154.138.41)
[01:17:48] *** Joins: blei17 (~blei@user/blei)
[01:19:07] *** Joins: bahamas (~lucian@84.232.140.52)
[01:19:19] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:19:41] *** Quits: Amadiro_ (~Amadiro@45.154.138.91) (Ping timeout: 256 seconds)
[01:19:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:19:57] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[01:20:11] <theseb> python ML question...I know in general what hyperparameters are but what specifically are "model", "optimizer" and "data" hyperparameters?
[01:20:15] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[01:20:28] *** Quits: rje (~textual@65.141.156.170) (Remote host closed the connection)
[01:20:45] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[01:20:46] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:20:58] *** Joins: rje (~textual@65.141.156.170)
[01:21:27] <SnoopJ> theseb, hyperparameters related to the model (the architecture, e.g. the number of layers in a convnet), the optimization process (e.g. learning rate or "momentum") and presumably how you load/transform data for training (e.g. augmentations)
[01:22:04] <SnoopJ> This isn't really a Python question though, ##machinelearning-general would probably have more to say about that question.
[01:24:03] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 252 seconds)
[01:24:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[01:25:17] <theseb> ok...thanks anyways
[01:25:42] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 252 seconds)
[01:25:54] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:26:04] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:28:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[01:29:02] *** Quits: blei17 (~blei@user/blei) (Quit: Client closed)
[01:29:24] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:29:32] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 252 seconds)
[01:30:26] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[01:30:38] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:35:36] *** Quits: src (~src@user/src) (Quit: leaving)
[01:35:49] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[01:37:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 245 seconds)
[01:37:02] *** Quits: koox (~dev@213.133.91.246) (Read error: Connection reset by peer)
[01:37:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:37:22] *** Joins: admin123 (~harrymore@37.120.216.194)
[01:37:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[01:37:38] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[01:37:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[01:38:39] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:38:39] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:38:44] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-248.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:38:52] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[01:38:54] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[01:39:31] *** Quits: jay-m1261 (~jay-m@129.0.76.12) (Ping timeout: 256 seconds)
[01:39:31] *** Quits: jay-m126_ (~jay-m@129.0.76.12) (Ping timeout: 256 seconds)
[01:39:31] *** Quits: jay-m126 (~jay-m@129.0.76.12) (Ping timeout: 256 seconds)
[01:39:59] *** Joins: tonitch (~tonitch@user/tonitch)
[01:40:08] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[01:41:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:41:46] <orbisvicis> goes does this: https://bpa.st/CNIQ
[01:42:09] <orbisvicis> in particular, ctypes.CDLL(None).free is not working on cygwin, if any ideas...
[01:42:17] <ivii> Can anyone help with django filtering? It just won't work.. https://0bin.net/paste/iE9SgOj2#IXuZ9UPwYkjwCeqLFAvMEG7D3uXWo0kSb8Y2nf00pIm
[01:43:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:44:37] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:44:37] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:45:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:45:26] <dag> uwsgi --socket 0.0.0.0:80 --protocol=http --wsgi-file wsgi.py
[01:45:27] <dag> uwsgi: unrecognized option '--wsgi-file'
[01:47:11] *** Joins: jpn (~jpn@user/jpn)
[01:47:46] *** Joins: rje (~textual@50.35.241.164)
[01:47:49] *** Joins: cliluw (~cliluw@47.147.77.43)
[01:48:29] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:48:54] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[01:50:21] <SnoopJ> dag, how did you install uwsgi?
[01:50:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:51:00] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[01:51:44] *** Joins: blei (~blei@user/blei)
[01:52:04] *** Joins: tijuco (~tijuco@user/tijuco)
[01:52:38] <dag> SnoopJ: pip install uwsgi
[01:52:39] *** Joins: thorbw (~tw@46.230.130.50)
[01:52:41] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[01:52:48] <dag> in a venv
[01:53:02] <SnoopJ> dag, what is the output of `type -a uwsgi` ?
[01:53:20] <dag> uwsgi is /home/d/app/.venv/bin/uwsgi
[01:53:20] <dag> uwsgi is /usr/bin/uwsgi
[01:53:20] <dag> uwsgi is /bin/uwsgi
[01:54:19] *** Quits: Fifan (~Fifan@188.243.183.56) (Read error: Connection reset by peer)
[01:54:29] <SnoopJ> dag, hmm, weird. I was wondering if /usr/bin/uwsgi was what you were getting, some distributions don't install the Python plugin with uWSGI (on debian/ubuntu it's uwsgi-plugin-python), but if you're using pip that shouldn't happen
[01:55:20] <dag> i did first install uwsgi in the os and removed it. cached path locations perhaps. a fresh shell solved it
[01:55:37] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[01:55:45] <SnoopJ> ah. yes, if you were getting the OS's copy it may not have installed that plugin, especially if you're on debian/ubuntu
[01:56:03] <SnoopJ> this argument is specific to the Python plugin
[01:57:02] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[01:58:18] <dag> yeah makes sense. thanks!
[01:59:43] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[01:59:58] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:59:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[02:00:07] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489h7r5vp261eff.ipv6.telus.net)
[02:01:20] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[02:02:19] *** Parts: bancroft_ (~bancroft@user/bancroft) (WeeChat 3.2)
[02:03:18] *** Quits: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl487ymy7kxckm6fs.ipv6.telus.net) (Ping timeout: 260 seconds)
[02:03:55] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[02:04:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[02:04:58] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[02:05:32] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:07:07] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 272 seconds)
[02:07:51] *** Quits: greedom (~greedom@p200300de6712fa004ce14439600bb567.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:08:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:08:50] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:09:16] <dag> what's a simple way to reload uwsgi when i modify any python code in my project?
[02:09:48] *** Quits: dreamscached (~dreamscac@user/dreamscached) (Ping timeout: 240 seconds)
[02:10:01] *** Quits: clf059 (~clf059@94.140.8.5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:10:08] <c4017w_> Is there a type annotation for concurrent.Future?
[02:11:30] *** Joins: clf059 (~clf059@94.140.8.5)
[02:11:49] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[02:12:11] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[02:14:12] *** Joins: mven5 (~mven@ip68-104-39-54.lv.lv.cox.net)
[02:14:16] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:14:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:14:55] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:2431:d584:cbe9:73f) (Quit: dclxvi)
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:07] <avu> c4017w_: https://github.com/python/typeshed/blob/master/stdlib/concurrent/futures/_base.pyi#L46
[02:15:13] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[02:15:13] *** mven5 is now known as mven
[02:15:30] *** Joins: Veil (~Veil@user/Veil)
[02:16:16] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:29] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:17:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:17:29] <c4017w__> avu, how do I import that?
[02:18:07] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:ea3a:6d66:577f:f99d)
[02:18:08] <jinsun__> from concurrent.futures import Future ?
[02:18:09] <avu> c4017w__: you don't need to explicitly import types from typeshed if you're using mypy
[02:18:46] <SnoopJ> dag, the --py-auto-reload option: https://uwsgi-docs.readthedocs.io/en/latest/Options.html#py-auto-reload
[02:19:44] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[02:19:46] <c4017w__> avu, I tried to run this from the interpreter: https://bpa.st/YDCA
[02:19:47] *** Quits: clf059 (~clf059@94.140.8.5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:20:00] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0034-44e7-d0a8-40e0.res6.spectrum.com)
[02:20:31] <jinsun__> requires python 3.9+ to use it like a generic
[02:20:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[02:20:42] <jinsun__> for 3.7+ and from __future__ import annotations
[02:20:47] <c4017w__> Oh. Any way to do it in 3.7?
[02:20:48] <jinsun__> s/for/or
[02:21:08] <jinsun__> or quote the annotation manually, "Future[int]"
[02:21:21] <c4017w__> nice that worked
[02:21:31] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[02:22:11] *** Joins: clf059 (~clf059@94.140.8.5)
[02:22:32] *** Quits: alch3mist (~alch3mist@199.169.204.182) (Quit: Client closed)
[02:23:45] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:23:57] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:24:58] *** Quits: digicyc (aarona@user/digicyc) (Quit: WeeChat 2.7.1)
[02:25:42] *** Parts: TonyStone (~TonyStone@2603-7080-8607-c36a-0034-44e7-d0a8-40e0.res6.spectrum.com) (Leaving)
[02:25:58] <orbisvicis> those on linux, is "import ctypes; ctypes.CDLL(None).free" an error?
[02:26:19] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9) (Ping timeout: 256 seconds)
[02:26:33] <SnoopJ> orbisvicis, no
[02:29:04] <orbisvicis> :(
[02:29:17] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[02:29:20] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[02:29:26] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 260 seconds)
[02:29:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:30:36] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:ea3a:6d66:577f:f99d) (Ping timeout: 252 seconds)
[02:31:18] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:31:55] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:31:58] *** Quits: daemonises (uid545329@id-545329.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:32:28] *** Quits: reset (~reset@user/reset) (Quit: reset)
[02:33:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:33:53] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:34:32] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:35:11] *** Joins: Alexthek1d (~Alexthek1@p5b3ae756.dip0.t-ipconnect.de)
[02:35:45] <Alexthek1d> hi
[02:36:04] <Alexthek1d> can someone explain me why python gives me a different result than wolframAlpha?
[02:36:05] <Alexthek1d> https://onecompiler.com/python/3xw58ydt6
[02:36:12] <Alexthek1d> https://www.wolframalpha.com/input?i=2048%21+%2F+%2812%21+*+%282048-12%29%21+%29
[02:36:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:39:02] <Repiphany> Alexthek1d: You're doing the math with ints/float division and then converting that float to a Decimal so you lose precision
[02:39:41] *** Joins: uxemacs (~timothy@user/uxemacs)
[02:39:46] <Repiphany> You can do integer division with that and you don't lose anything because python ints are bignums
[02:39:58] <Repiphany> math.factorial(2048)//(math.factorial(12) * math.factorial(2048 - 12))
[02:41:23] <jinsun__> yup Decimal was useless there, just make sure you work with ints only that means // instead of /
[02:41:25] <SnoopJ> they're different even if you use a Python `float`, probably W|A is doing something different than CPython is
[02:41:36] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:e644:3c18:7438)
[02:42:16] <SnoopJ> ah, nevermind, it's expressible only with `int`, and W|A is smart enough to know that
[02:43:31] <Repiphany> `math.comb(2048, 12)` btw in python >=3.8
[02:44:17] <Alexthek1d> thank you guys!
[02:44:29] <cowsay-moo> Hey.. need some special help here.  I completely borked my pip installation... I deleted something from site-packages and now I can't even run "pip" by itself without an error. I've tried upgrading it (python -m pip install --upgrade pip), which returns an error, force-reinstalling from package manager (pacman). Also tried removing (moving) all of my site-packages. Nothing is working.  any ideas?  Error:  https://bpa.st/raw/AS5A
[02:44:43] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:46:36] <jinsun__> that's a weird one, cwd doesn't exist?
[02:47:09] <cowsay-moo> your guess is as good as mine
[02:47:13] <leonardo> looks like current working directory was removed but the shell is still in that directory
[02:47:16] <nedbat> i knew pip did cool colored bars now. I didn't realize it was because they vendored rich
[02:47:21] <jinsun__> something like that happend to me actually once, but that was my hard disk failing
[02:47:27] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:47:35] <nedbat> cowsay-moo: what does the command "pwd" show for you?
[02:47:38] <jinsun__> hopefully your problem is not as bad
[02:48:01] <cowsay-moo> nedbat, /home/me/.local/lib/python3.10/site-packages/gi-stubs/repository
[02:48:18] <jinsun__> and did you delete that folder?
[02:48:20] <leonardo> just cd home
[02:48:25] <leonardo> and retry
[02:48:37] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[02:48:44] <cowsay-moo> oh good grief
[02:48:55] <cowsay-moo> yeah that's working. i was in a deleted folder
[02:48:56] <cowsay-moo> lol
[02:49:07] <leonardo> happens to me all the time
[02:49:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[02:49:15] <cowsay-moo> thanks everyone
[02:49:32] *** Joins: jpn (~jpn@user/jpn)
[02:50:02] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[02:50:22] *** Quits: Alexthek1d (~Alexthek1@p5b3ae756.dip0.t-ipconnect.de) (Quit: Leaving)
[02:50:41] <RougeR> eyyy my code runs...been a long time since ive got that stuck
[02:50:50] *** Quits: cqi_ (~cqi@111.201.36.198) (Ping timeout: 265 seconds)
[02:51:29] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 256 seconds)
[02:51:38] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:51:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:53:50] *** Quits: Narrat (~omnius@p200300df5f4c41b706ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:54:16] <RougeR> celery no longer supports class based tasks
[02:54:18] <RougeR> no problem
[02:54:18] <RougeR> https://bpa.st/5Y7A
[02:54:20] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[02:54:30] <SnoopJ> nedbat, I guess it's not a big deal to vendor something else since they were already doing that
[02:54:45] <SnoopJ> especially since the error bars are very pretty :)
[02:54:57] <SnoopJ> err, progress* bars
[02:55:08] <RougeR> this right here is some hacky bullshit lol
[02:55:09] <RougeR> https://bpa.st/5Y7A#1L71
[02:55:13] <nedbat> SnoopJ: yeah, once the vendoring mechanisms are in place, why not pull in a bunch of stuff?
[02:56:27] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[02:56:33] <SnoopJ> nedbat, it's not like Debian can get any angrier about it :innocent:
[02:56:43] <SnoopJ> (oops, I forgot my emoji slug converter is broken)
[02:56:43] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:56:51] *** Joins: a1fa (~a1fa@user/a1fa)
[02:56:58] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[02:57:09] <a1fa> hello, can anyone help me with a tensorflow question..
[02:57:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:57:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:57:18] <a1fa> ValueError: cannot reshape array of size 30625 into shape (1,175,175,3)
[02:57:20] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[02:57:38] <Repiphany> 175*175*3 == 91875
[02:58:02] <SnoopJ> a1fa, when you reshape, the new size (the product of the new shape) has to be the same as the old size.
[02:58:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:58:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:58:19] <a1fa> i think i had 1 there, let me check
[02:58:20] <SnoopJ> looks like maybe you're reshaping a single channel rather than 3, because 30625 * 3 is 91875
[02:58:29] *** Joins: uxemacs (~timothy@user/uxemacs)
[02:58:48] <a1fa> ValueError: Unsupported image shape: (1, 175, 175, 1)
[02:58:51] <a1fa> fun
[02:59:15] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:85ac)
[02:59:25] <SnoopJ> That's coming from some other part of the code, probably a part of the model that expects some other shape (probably one that ends in 3?)
[02:59:32] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:59:44] <grym> a1fa: perhaps the first index is batch size? (it often is)
[03:00:02] <grym> a1fa: (are you processing 3-channel 175 square pixel images)
[03:00:02] <a1fa> grym: i am pointing cv2.imread to a file instead of directory
[03:00:11] <grym> yes, you are :P
[03:00:16] <a1fa> :0
[03:00:28] <grym> (probably)
[03:00:35] <SnoopJ> if so, this can only be a single channel
[03:00:40] <SnoopJ> because math
[03:01:19] <a1fa>     img = np.array(data).reshape(1,s,s,3)
[03:01:37] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[03:01:41] <SnoopJ> a1fa, can you share the complete error report with us at https://bpa.st? The rest of the report is helpful information.
[03:01:42] <a1fa> maybe the grayscale is trowing it off
[03:01:42] <Repiphany> 30625 isn't divisible by 3
[03:02:15] <a1fa> SnoopJ: https://github.com/PrayagBhakar/TensorFlow-Image-Classifier
[03:02:20] <grym> cv2 can convert to greyscale, however
[03:02:25] <a1fa> i used this to create the model
[03:03:04] <SnoopJ> a1fa, okay, that's partly helpful. It's not something I can use to help you without the complete error report, though.
[03:03:49] <a1fa> let me post the test code
[03:04:03] <SnoopJ> The model may expect a 3-channel image. If your input images are a single channel (you mentioned grayscale?) you might need to convert them to a 3-channel form first.
[03:04:16] <a1fa> i am using a same picture from model
[03:04:17] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[03:04:36] <a1fa> i dont see where the other guy converted them to 3 channels
[03:04:36] *** Joins: Masterphi (~Masterphi@user/masterphi)
[03:04:41] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[03:04:46] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Quit: leaving)
[03:04:48] <a1fa> but that does make sense
[03:04:48] * SnoopJ waits for further information
[03:04:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:05:03] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[03:05:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[03:05:14] <a1fa> https://bpa.st/7FTA
[03:05:18] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[03:06:03] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[03:06:34] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:06:54] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:07:16] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 272 seconds)
[03:07:28] <SnoopJ> a1fa, can we see the complete error report? It has information that is useful in determining why the error occurred.
[03:07:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:07:42] <a1fa> wait
[03:07:45] <a1fa> my bad
[03:07:48] * SnoopJ waits
[03:08:02] <a1fa> i commented line 31
[03:08:04] <a1fa> and it works
[03:08:11] <a1fa> i had img_to_array twice
[03:09:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:09:06] <AhmedAmerican> I do have a `list` of `lists`. each list contain `2 elements`. Now i would like to fill `my list of lists` if the length < 3 with an empty list/lists. example `[["a", "b"]]` should be converted to `[["a", "b"], ["", ""], ["" , ""]]`
[03:09:41] *** Quits: mattfoxxx (~mattfoxxx@200116b822fc9a00c05b4fdabbc92166.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[03:09:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:10:01] <AhmedAmerican> `[["a", "b"], ["c", "d"]]` to be `[["a", "b"], ["c", "d"], ["", ""]]`
[03:10:23] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:11:01] *** Quits: hub (~hub@user/hub) (Quit: -)
[03:11:05] <AhmedAmerican> is there a more efficient way than checking the list of lists`if == 2`and `if == 1`
[03:11:21] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:11:29] *** Joins: hub (~hub@user/hub)
[03:11:36] <a1fa> (i have no clue how to interpret these results)
[03:11:50] <a1fa> pred = model.predict(image)
[03:11:53] <SnoopJ> AhmedAmerican, `N_missing = 3 - len(yourlist); if N_missing > 0: for _ in range(N_missing): yourlist.append(["", ""])`
[03:11:53] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:11:53] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:12:01] <a1fa> pred = array([[0.1121563 , 0.10939671, 0.11364722, 0.10824511, 0.11198572, 0.11286477, 0.1090349 , 0.11189863, 0.11077064]], dtype=float32)
[03:12:17] *** Quits: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt) (Ping timeout: 240 seconds)
[03:12:34] <a1fa> are these percentages ?
[03:12:44] <a1fa> 11% of one category
[03:12:48] *** Quits: clf059 (~clf059@94.140.8.5) (Quit: Textual IRC Client: www.textualapp.com)
[03:13:00] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:13:05] <SnoopJ> a1fa, it depends on what the model is built to do
[03:13:11] <a1fa> image classification
[03:13:30] <SnoopJ> erm, an image classification network can have more than one sort of output
[03:13:46] <SnoopJ> some will output probabilities, some won't
[03:13:57] <a1fa> ok this matches to 9 labels i created
[03:14:13] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[03:14:27] <SnoopJ> those do sum to 1.0 so they could be probabilities
[03:14:47] <SnoopJ> (but you need to check the model's design to know for sure)
[03:15:18] <a1fa> i think it got it right
[03:15:31] <a1fa> "right_closed"
[03:15:39] *** Joins: crashrep (~crashrep@user/crashrep)
[03:15:48] <a1fa> shouldnt my model carry labels also?
[03:16:08] *** Joins: Bardon (~Bardon@user/Bardon)
[03:16:15] <SnoopJ> typically each output "slot" is associated with one of the known classes
[03:16:33] <a1fa> guess not
[03:16:37] <SnoopJ> (again, consult the model's design/documentation)
[03:16:48] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[03:16:50] <a1fa> i do have them in a separate file
[03:17:20] <a1fa> i think i am just going to load them out of a file and call them as index
[03:17:28] <a1fa> -_- janky
[03:17:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:17:56] <a1fa> i am surprised i got this far to be honest
[03:18:52] *** Joins: _mantra (~mantra@216.73.163.121)
[03:18:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[03:19:28] *** Quits: mantra (~mantra@216.73.163.81) (Ping timeout: 250 seconds)
[03:19:55] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[03:20:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:21:10] <RougeR> AhmedAmerican,
[03:21:11] <RougeR> https://stackoverflow.com/a/3438986
[03:21:22] <RougeR> I think think answer with itertools might serve you well
[03:22:05] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 256 seconds)
[03:22:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:23:50] *** Joins: KevinX (~KevinX@user/KevinX)
[03:24:10] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:24:13] *** Joins: noobaroo (~solas@user/noobaroo)
[03:24:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:25:37] *** Quits: admin123 (~harrymore@37.120.216.194) (Ping timeout: 240 seconds)
[03:28:21] *** Quits: moto_ (~moto@user/moto) (Ping timeout: 252 seconds)
[03:29:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:30:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:37] <RougeR> AhmedAmerican, im too tiered not sure if this is a stupid answer to what you asked
[03:30:38] <RougeR> https://bpa.st/ZHZA
[03:30:44] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 250 seconds)
[03:31:52] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8f5:448b:f0f1:4571)
[03:31:52] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8f5:448b:f0f1:4571) (Changing host)
[03:31:52] *** Joins: skapata (~Skapata@user/skapata)
[03:32:11] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:32:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:33:00] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 240 seconds)
[03:33:25] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[03:34:47] *** Joins: moto (~moto@user/moto)
[03:35:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:36:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:37:38] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:37:40] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:37:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:38:11] *** Joins: peanuter (~peanuter@static.190.220.201.138.clients.your-server.de)
[03:38:20] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[03:38:31] *** Joins: Wulf (~Wulf@user/wulf)
[03:39:05] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:85ac) (Ping timeout: 256 seconds)
[03:40:13] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[03:40:38] *** Joins: dude-x (~textual@72.76.74.165)
[03:42:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:42:42] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:42:52] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 250 seconds)
[03:43:58] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:43:59] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[03:44:01] *** Joins: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net)
[03:44:30] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:44:49] *** Joins: jpn (~jpn@user/jpn)
[03:45:44] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:46:25] *** Joins: uxemacs (~timothy@user/uxemacs)
[03:47:50] *** Quits: peanuter (~peanuter@static.190.220.201.138.clients.your-server.de) (Read error: Connection reset by peer)
[03:50:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[03:50:25] *** Quits: grimvar (~grimvar@i5c75f505.versanet.de) (Ping timeout: 256 seconds)
[03:50:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[03:50:51] *** Joins: notepad72 (~notepad@129.159.46.243)
[03:50:58] *** Quits: notepad7 (~notepad@129.159.46.243) (Ping timeout: 272 seconds)
[03:50:59] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[03:50:59] *** notepad72 is now known as notepad7
[03:52:10] *** Joins: grimvar (~grimvar@i5C75F634.versanet.de)
[03:52:17] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:52:17] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:52:33] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:52:33] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:52:36] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[03:53:10] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[03:53:59] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[03:54:16] <Jonno_FTW> In pylint I get a cyclic import error, but I get a cyclic import error from a file that doesn't even do the listed imprtos
[03:54:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[03:55:17] *** Quits: moto (~moto@user/moto) (Ping timeout: 252 seconds)
[03:56:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:56:42] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[03:57:47] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:58:21] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:58:47] *** Quits: notepad7 (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[03:58:55] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:59:34] *** Joins: notepad72 (~notepad@129.159.46.243)
[04:01:44] *** Joins: moto (~moto@user/moto)
[04:02:02] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: leaving)
[04:02:37] *** Joins: stoneware (~stoneware@user/stoneware)
[04:05:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:05:45] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:4d68:1cec:b76b:d875) (Ping timeout: 252 seconds)
[04:06:32] *** Quits: nomachi[m] (~nomachima@2001:470:69fc:105::1:d597) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: LDaVinci[m] (~ldavincim@2001:470:69fc:105::1:c125) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: langley[m] (~langleyis@2001:470:69fc:105::1:bd3a) (Ping timeout: 240 seconds)
[04:06:32] *** Quits: gbristol (gbristol@hermes.gbristol.net) (Ping timeout: 240 seconds)
[04:06:34] *** Joins: Karyon_ (~Karyon@user/karyon)
[04:06:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:06:39] *** Joins: cust_ (amaama@blackbox.amaama.org)
[04:06:41] *** Joins: gbristol (gbristol@hermes.gbristol.net)
[04:06:42] *** Joins: shangxiao (~davids@101.165.217.11)
[04:07:02] *** Quits: SouthFox[m] (~southfoxs@2001:470:69fc:105::1:d8d5) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: jessicaferem (~jessicafe@2001:470:69fc:105::1:d6a1) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: cust (amaama@2607:f2c0:f00f:2500::3) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: jordanb76[m] (~jordanb76@2001:470:69fc:105::1:c142) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: Karyon (~Karyon@user/karyon) (Ping timeout: 240 seconds)
[04:07:28] *** Joins: LDaVinci[m] (~ldavincim@2001:470:69fc:105::1:c125)
[04:07:30] *** Joins: langley[m] (~langleyis@2001:470:69fc:105::1:bd3a)
[04:07:32] *** Quits: Eryn83FL_Matrix[ (~eryn-1983@2001:470:69fc:105::7c74) (Ping timeout: 240 seconds)
[04:08:18] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:08:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[04:09:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[04:10:35] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:10:48] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[04:10:51] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:12:20] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[04:12:37] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[04:13:21] *** Joins: cypostres (~cypostres@user/cypostres)
[04:15:46] *** byzandula is now known as byzafk
[04:15:52] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:15:59] <a1fa>     model_meta = _metadata_fb.ModelMetadataT()
[04:16:00] <a1fa> NameError: name '_metadata_fb' is not defined
[04:16:07] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[04:16:09] <a1fa> #260 @ https://github.com/PrayagBhakar/TensorFlow-Image-Classifier/blob/master/create_CNN_model.py
[04:17:48] *** Joins: moto (~moto@user/moto)
[04:18:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:18:26] <a1fa> hm, i think its just missing tflite-support
[04:19:19] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[04:19:19] *** Joins: nomachi[m] (~nomachima@2001:470:69fc:105::1:d597)
[04:20:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:20:03] <Jonno_FTW> oh he left
[04:20:07] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[04:20:28] *** Joins: Eryn83FL_Matrix[ (~eryn-1983@2001:470:69fc:105::7c74)
[04:20:57] *** Joins: jinsun_ (~jinsun@user/jinsun)
[04:21:00] *** Joins: jordanb76[m] (~jordanb76@2001:470:69fc:105::1:c142)
[04:21:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:22:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:23:37] *** Joins: jessicaferem (~jessicafe@2001:470:69fc:105::1:d6a1)
[04:23:56] *** Joins: SouthFox[m] (~southfoxs@2001:470:69fc:105::1:d8d5)
[04:24:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9)
[04:24:35] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[04:28:38] *** Joins: noobaroo (~solas@user/noobaroo)
[04:29:00] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:29:32] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:29:57] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[04:30:17] *** Joins: medium_cool (~medium_co@136.36.128.48)
[04:30:21] *** Quits: Veil (~Veil@user/Veil) (Quit: If one cut the source of flow.)
[04:30:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:30:46] *** Joins: Everything (~Everythin@37.115.210.35)
[04:31:53] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:bc3b:d6be:5f61:c52e)
[04:32:04] <lseactuary> is raising a ValueError the best choice among the options below to signal to the caller of a function that an argument failed input validation (for example, the function received -1 when it was expecting a positive integer)?
[04:32:13] *** Quits: oriba (~oriba@dynamic-089-014-251-097.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:33:05] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:33:44] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:33:58] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:35:07] <parv> Seems reasonable
[04:35:22] <lseactuary> thanks!
[04:35:42] <Jonno_FTW> lseactuary: yes, it also follows the pattern used in much of the standard library
[04:36:01] <lseactuary> also iterators or sequences is confusing me. var = [] and var = [n for n in range(10)] is a sequence vs var = iter(n for n in range(10)) and var = (n for n in range(10)) which is an iterator?
[04:37:45] <SnoopJ> lseactuary, ValueError is a good choice when the type is correct but the value itself is problematic, yes.
[04:37:57] <lseactuary> thanks!
[04:38:15] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:38:15] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:38:26] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[04:38:30] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[04:38:30] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:38:46] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:39:26] <SnoopJ> lseactuary, re: iterator vs. sequence, an iterator is an object that does the actual walking along some iterable object, a sequence is an *iterable* object (i.e. one you can call iter() on) that can also be indexed by integers and fed to len()
[04:39:43] <lseactuary> is the examples i gave correct?
[04:40:24] <SnoopJ> the first one produces a list, and lists are sequences. The second one produces a generator iterator, which is a type of iterator, yes.
[04:40:30] *** Quits: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[04:40:45] <lseactuary> :)
[04:41:07] <SnoopJ> second/third, since those have the same effect (calling iter() on an iterator returns that iterator)
[04:41:18] *** Joins: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net)
[04:41:25] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:41:27] *** Joins: Merinorus_ (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[04:41:51] *** Merinorus_ is now known as Merinorus
[04:42:32] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:42:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:43:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:43:17] *** Joins: Barones (~Barones@user/Barones)
[04:43:19] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[04:43:32] <a1fa> how do you get an index number from a list of floats [0.123,0.124,0.121..]
[04:43:59] <bpalmer> can you give an example?
[04:44:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:44:21] <a1fa> array([0.12692529, 0.12555295, 0.12288783, 0.12299503, 0.12614274, 0.12361297, 0.12557036, 0.12631284], dtype=float32)
[04:44:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:44:49] <SnoopJ> it isn't clear what "index number" means
[04:44:49] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:44:49] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:44:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:44:56] <Repiphany> Use ranges instead of trying to check for float equality
[04:45:00] <lseactuary> if you want something ordered, you need a list, or tuple is ok?
[04:45:04] <lseactuary> i think we can only sort a list.
[04:45:31] <Tritium> a1fa: can you tell us what you mean by index number?
[04:45:50] <SnoopJ> lseactuary, you can call sorted() on either, but only a list can be sorted in-place. Tuples are immutable.
[04:46:10] <lseactuary> aha
[04:46:29] <lseactuary> A module-level constant holding objects representing types of animals, in order, e.g., Dog, Cat, Mouse, Bird -- is better as a tuple?
[04:46:31] <SnoopJ> well, I guess you'd have to call tuple(sorted(...)) to get a tuple back
[04:46:43] <lseactuary> lists are better where things change?
[04:46:44] <a1fa> Tritium: i want to know the postion number of the element in the list
[04:46:48] <SnoopJ> lseactuary, it depends on whether the thing should be allowed to change, yes.
[04:46:58] <SnoopJ> a tuple is a good choice for a constant sequence
[04:47:03] <a1fa> 0,1,2,3,4,5,7,8,9
[04:47:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:47:13] <SnoopJ> a1fa, what element?
[04:47:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:47:50] <Tritium> a1fa: list.index is the method
[04:48:03] <SnoopJ> Tritium, I think they're asking about an ndarray
[04:48:20] <Tritium> my next advice is appropriate either way...
[04:48:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:48:27] <bpalmer> possibly a1fa wants np.where , but still very unclear. And I'd be somewhat careful with floats
[04:48:36] <Tritium> you probably should be using a dict if you need that kind of lookup
[04:48:38] <SnoopJ> probably argwhere() instead of where()
[04:48:45] <SnoopJ> (where() returns the value, not the index)
[04:49:01] <a1fa> numpy.core._exceptions.UFuncTypeError: ufunc 'add' did not contain a loop with signature matching types (dtype('float32'), dtype('<U1')) -> None
[04:49:11] <bpalmer> oh, oops
[04:49:14] <a1fa> oops
[04:49:21] <a1fa> i see my problem
[04:49:30] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[04:49:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:49:52] <lseactuary> is a global constant immutable by definition in Python?
[04:49:59] <a1fa> pred[0].index(number)
[04:50:02] <SnoopJ> lseactuary, Python doesn't have constants
[04:50:15] <lseactuary> global variable that is a constant
[04:50:33] <SnoopJ> You can certainly make a variable that is meant to be constant. Python will not enforce that.
[04:50:34] <Tritium> Python has no immutable names.
[04:51:01] <Tritium> you can have immutable objects, but python will do nothing to stop you from rebinding a name
[04:52:39] <lseactuary> immutable means cant be over-written right?
[04:52:49] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[04:52:54] <SnoopJ> It means the object can't change
[04:53:06] <SnoopJ> (but the *name* of the object usually can)
[04:53:19] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[04:53:28] *** Joins: Seirdy0 (~Seirdy@sourcehut/user/seirdy)
[04:53:48] <Tritium> (i cannot think of a situation other than a keyword protected name that python would prevent you from assigning an arbitrary object to any name)
[04:54:02] <SnoopJ> Tritium, fun fact, you can get around those anyway
[04:54:17] <SnoopJ> https://bugs.python.org/issue46555
[04:54:27] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[04:54:32] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Quit: Bye)
[04:55:12] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[04:55:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[04:55:46] <Tritium> oops
[04:55:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:56:17] *** Joins: audio (~audio@user/audio)
[04:56:27] *** Joins: ymwm (~yingmanwu@110.85.123.161)
[04:56:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:56:57] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:bc3b:d6be:5f61:c52e) (Quit: Client closed)
[04:57:11] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[04:57:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:59:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:59:33] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[04:59:46] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[05:00:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:00:41] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[05:00:48] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:00:50] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[05:01:42] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:01:47] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:01:58] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[05:02:09] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Client Quit)
[05:02:09] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Client Quit)
[05:02:11] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (Quit: Reticulating Splines)
[05:02:22] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:02:32] *** Joins: noobaroo (~solas@user/noobaroo)
[05:02:33] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:02:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:03:54] *** Quits: moog (~moog@98.97.86.136) (Ping timeout: 250 seconds)
[05:04:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[05:04:19] *** Joins: frege (~frege@d99-199-16-209.bchsia.telus.net)
[05:04:20] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:04:28] *** Joins: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576)
[05:05:01] *** Joins: moto (~moto@user/moto)
[05:05:13] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:08:37] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:08:37] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:09:30] *** Joins: han-`14 (~han`@li987-55.members.linode.com)
[05:09:33] *** Quits: han-`1 (~han`@li987-55.members.linode.com) (Quit: Ping timeout (120 seconds))
[05:10:02] *** Quits: zegalch (~zegalch@178.128.75.133) (Quit: Ping timeout (120 seconds))
[05:10:44] *** Joins: zegalch (~zegalch@178.128.75.133)
[05:10:45] *** Quits: con3 (~con3@143.198.53.32) (Quit: ZNC 1.8.2 - https://znc.in)
[05:10:56] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[05:11:01] *** Joins: con3_ (~con3@2604:a880:4:1d0::be:d000)
[05:11:11] *** Joins: phantomcircuit_ (~phantomci@192.241.205.97)
[05:11:12] *** Quits: ouemt (~quassel@user/ouemt) (Quit: No Ping reply in 180 seconds.)
[05:11:13] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[05:11:29] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[05:11:36] *** Quits: foo (~foo@user/foo/x-8763512) (Ping timeout: 245 seconds)
[05:11:38] *** Quits: phantomcircuit (~phantomci@2604:a880:1:20::f2:c001) (Quit: ZNC - https://znc.in)
[05:11:41] *** Quits: sasha (~sasha@wikimedia/-sasha-) (Quit: ZNC - https://znc.in)
[05:11:45] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:12:01] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Ping timeout (120 seconds))
[05:12:05] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[05:12:07] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:12:11] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (Quit: No Ping reply in 180 seconds.)
[05:12:19] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 250 seconds)
[05:12:33] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:12:39] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:12:51] *** Quits: taru9 (~realTaru9@user/taru9) (Ping timeout: 245 seconds)
[05:12:57] *** Quits: explodes (~explodes@user/explodes) (Remote host closed the connection)
[05:13:03] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[05:13:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[05:13:17] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[05:13:19] *** Joins: explodes (~explodes@user/explodes)
[05:13:22] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[05:13:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:13:25] *** Joins: ouemt (~quassel@user/ouemt)
[05:13:30] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[05:13:32] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[05:13:41] *** Joins: foo (~foo@user/foo/x-8763512)
[05:13:49] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 240 seconds)
[05:13:51] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: Textual IRC Client: www.textualapp.com)
[05:13:56] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:14:03] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[05:14:10] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:14:10] *** Quits: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000) (Ping timeout: 260 seconds)
[05:14:21] <KnowledgeShark> I can't find for the life of me a working example of sending the contents of a folder (working directory or specified) to a utf-8 text file. Any example, I would be grateful!
[05:14:29] *** Joins: bahamas (~lucian@84.232.140.158)
[05:14:32] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:14:48] *** Joins: meejah (~meejah@rutas.meejah.ca)
[05:14:49] <phy1729> What does contents of a folder mean?
[05:15:15] <KnowledgeShark> phy1729: list of all "*.json" files persay -> jsonfiles.txt
[05:15:25] *** Quits: Lightsword (~Lightswor@user/lightsword) (Quit: ZNC)
[05:15:38] *** Joins: Lightsword_ (~Lightswor@user/lightsword)
[05:15:46] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (Ping timeout: 245 seconds)
[05:15:47] *** Joins: jim (~jim@about/linux/staff/jim)
[05:15:52] *** Joins: gothicserpent (~gothicser@2604:a880:4:1d0::176:6000)
[05:15:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:15:56] *** Quits: DCTWD (~dc@uz.utmappro.com) (Quit: ...)
[05:16:09] <phy1729> please note that paths can contain any byte other than NUL, so a line by line list of files isn't safe
[05:16:15] *** Joins: DCTWD (~dc@uz.utmappro.com)
[05:16:32] *** Joins: taru9 (~realTaru9@user/taru9)
[05:16:48] *** Lightsword_ is now known as Lightsword
[05:16:53] <KnowledgeShark> phy1729: I have no idea what that means. I am a Python noob. I am learning quite a bit though, at a descent pace.
[05:16:53] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Client Quit)
[05:16:53] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Client Quit)
[05:17:01] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[05:17:07] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:17:08] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:17:14] <phy1729> So you can have a file called foo.json right?
[05:17:42] *** Joins: sasha (~sasha@wikimedia/-sasha-)
[05:17:50] <phy1729> file names are terrible terrible things and   foo<newline here>bar.json  is also a valid file name (on *nix systems)
[05:18:07] *** Quits: dab21 (dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:18:27] <phy1729> If this is just for learning, you want to look at https://docs.python.org/3/library/pathlib.html and Path.glob
[05:18:28] <KnowledgeShark> phy1729: I have a file called 4706734.json, 4733915.json and 4263402.json (this makes up "working directory").
[05:18:54] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[05:19:06] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:19:15] <KnowledgeShark> phy1729: I don't need the path with the filename on each line; just the filename.extension on each line -> utf-8 .txt
[05:19:16] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[05:19:23] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[05:20:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:20:18] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:20:42] <arkanoid> according to my benchmark, string[python] is twice faster and more efficient than string[pyarrow], contrary to claims
[05:20:56] <phy1729> you can do that with pathlib (in particular you'd want PurePath.name for that), but I'm letting you know the idea isn't correct in general
[05:21:13] <nedbat> arkanoid: what is "string[python]" ?
[05:22:16] <KnowledgeShark> phy1729: The logic fits my applications requirements. Thank you for the pointer. I will try to find a working example with PurePath.name from import pathlib2. Appreciated!
[05:22:21] <KnowledgeShark> nedbat: greetings
[05:22:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:22:51] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[05:23:21] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:23:21] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:24:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:24:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:24:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:26:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:26:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:26:31] *** Joins: src (~src@user/src)
[05:27:19] <nedbat> KnowledgeShark: hey there
[05:27:49] <KnowledgeShark> Here is my dpaste: https://dpaste.com/3RGNAM9EX ... How do I carry over properly the literal output of the function as opposed to the function code?
[05:28:04] <KnowledgeShark> nedbat: Still here learning and bulding. It's starting to become a little more fun.
[05:28:11] <KnowledgeShark> nedbat: How is your day/evening?
[05:28:14] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[05:28:27] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:29:12] <nedbat> good, trying to think of a short pithy python factoid
[05:30:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[05:30:36] *** Joins: medium_cool (~medium_co@136.36.128.48)
[05:30:46] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:31:16] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[05:31:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:32:57] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[05:33:22] *** Joins: five643333496 (~five6@8.40.26.20)
[05:33:33] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[05:34:41] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[05:35:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:41:50] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:43:06] *** Quits: remote (~self@user/hackers) (Remote host closed the connection)
[05:43:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:43:26] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[05:43:46] <KnowledgeShark> nedbat: very cool
[05:43:52] <KnowledgeShark> drop it when you got it
[05:44:54] *** Joins: frost (~frost@user/frost)
[05:45:20] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:45:39] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:46:35] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 256 seconds)
[05:46:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com)
[05:47:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:48:18] *** Quits: frost (~frost@user/frost) (Client Quit)
[05:48:28] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[05:48:36] <KnowledgeShark> i'm getting syntax errors. I do this a lot and can't seem why I don't grasp the concept of how to properly carry over proper outputs rather than literals. dpaste: https://dpaste.com/CNKD6JBBD
[05:49:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:50:06] *** Joins: duds- (~duds-@user/duds)
[05:50:07] <bpalmer> KnowledgeShark: so it's complaining you never closed the open parentheses.
[05:50:34] <KnowledgeShark> bpalmer: Am I close? So an additional ) ?
[05:50:46] <bpalmer> KnowledgeShark: every ( should have a corresponding ) ; you have 3 (  (one for print, one for list, and one for glob), and only 2 )
[05:51:01] <KnowledgeShark> bpalmer: ahhh.. Thank you!
[05:51:04] <bpalmer> KnowledgeShark: you may want to look at a code editor that helps you see mismatched parentheses
[05:51:23] *** Joins: bahamas (~lucian@84.232.140.158)
[05:51:30] <KnowledgeShark> bpalmer: Great advice! Thank you. Yes; using terminal. (terminator). Time for a level up indeed!
[05:52:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:52:30] <KnowledgeShark> whoa!
[05:52:41] <KnowledgeShark> that outputted *everything* in all subdirectories
[05:52:53] <KnowledgeShark> bpalmer: it worked though, appreciate it.
[05:52:58] <KnowledgeShark> phy1729: you too, thank you.
[05:53:42] <KnowledgeShark> Anyone know how to make it only do "current directory" and exclude sub-directories using pathlib2 Path/p.glob ?
[05:53:52] <phy1729> don't use **
[05:54:02] <jinsun__> also upgrade to 3.10 so the error message shows you which exact bracket was mismatched
[05:54:19] <KnowledgeShark> phy1729: will do! ty
[05:54:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:54:40] <phy1729> You might want to look into list comprehensions. It'll be handy for applying path.name for path in Path('.').glob('*.json')
[05:54:44] <KnowledgeShark> jinsun__: I did upgrade to 3.10.0 as you advised earlier. I'm not certain why my output didn't give the good outputs.
[05:55:04] <KnowledgeShark> phy1729: will do. thank you.
[05:55:59] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[05:56:07] <jinsun__> KnowledgeShark: oh I didn't look, it actually did tell you, see the  ^ on line 19
[05:56:13] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[05:56:37] <jinsun__> that's where you needed to add parens
[05:56:37] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 240 seconds)
[05:56:54] <KnowledgeShark> jinsun__: oh i see. yes! I like that. Show's exactly where the problem is.
[05:57:01] <KnowledgeShark> like bpalmer keyed me in on.
[05:57:07] <jinsun__> or no, that's what had to be closed somewhere
[05:57:13] <KnowledgeShark> i'll pay more attention and upgrade my editor
[05:58:30] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[05:59:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:01:09] *** Joins: medium_cool (~medium_co@136.36.128.48)
[06:04:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:04:20] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[06:04:40] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[06:04:40] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[06:04:41] <KnowledgeShark> phy1729: I removed the ** and I got a strange traceback. dpaste: https://dpaste.com/FKHQEE5DP (NotImplementedError) - Non-relative patterns are unsupported. line 9 "list(p.glob('/*.json'))"
[06:04:50] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:06:25] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: Textual IRC Client: www.textualapp.com)
[06:06:44] <phy1729> you want to get rid of the / too.
[06:07:16] <BrenBarn> if you're just looking for json files in the current dir then you just want `*.json`
[06:07:18] *** Parts: frege (~frege@d99-199-16-209.bchsia.telus.net) ()
[06:07:43] <KnowledgeShark> phy1729: thank you
[06:07:51] <KnowledgeShark> BrenBarn: Yes, thank you!
[06:08:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:08:54] *** Joins: medium_cool (~medium_co@136.36.128.48)
[06:08:58] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[06:09:00] *** Joins: Roey (~Roey@user/Roey)
[06:09:12] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[06:09:15] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:09:15] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:10:01] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:10:54] <phy1729> KnowledgeShark: it's helpful to read the docs to understand how a method works https://docs.python.org/3/library/pathlib.html#pathlib.Path.glob
[06:12:06] *** Joins: medium_cool (~medium_co@136.36.128.48)
[06:12:13] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[06:12:15] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[06:12:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:12:48] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Ping timeout: 252 seconds)
[06:12:48] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 250 seconds)
[06:13:01] *** Joins: purple_cthulhu (~rax@185.108.96.12)
[06:13:43] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[06:14:30] <KnowledgeShark> phy1729: Thank you! I still am struggling with understanding the documentation to be honest.
[06:14:45] <KnowledgeShark> My new dpaste is : https://dpaste.com/G4SDSSL54 ... How do I remove "[PosixPath(' ') between each filename?
[06:14:54] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[06:15:33] <KnowledgeShark> Is that bound to this entire import Path in pathlib2 , as a wrapper?
[06:15:51] *** Joins: ub (~Thunderbi@p200300ecdf19b70a55005d108b4dd460.dip0.t-ipconnect.de)
[06:16:42] *** Quits: ubert (~Thunderbi@p200300ecdf19b765b1fc5a865b2694ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:16:42] *** ub is now known as ubert
[06:17:31] *** Quits: ubert1 (~Thunderbi@p200300ecdf19b7650b46467200086b86.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:17:34] *** Joins: zeden (~zeden@user/zeden)
[06:19:04] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[06:19:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:20:26] *** Quits: medium_cool (~medium_co@136.36.128.48) (Read error: Connection reset by peer)
[06:21:09] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[06:21:42] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e155:e774:42cc:4269)
[06:21:45] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:22:27] *** Joins: noobaroo (~solas@user/noobaroo)
[06:23:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:23:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[06:23:21] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[06:24:37] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:25:13] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[06:26:41] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:27:31] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[06:27:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9) (Ping timeout: 250 seconds)
[06:27:58] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[06:28:04] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:28:08] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[06:28:49] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:28:55] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:29:12] <KnowledgeShark> I found a different approach to listing all working directory specified files w/ extension using import fnmatch and import os from various sources : my dpaste is here: https://dpaste.com/G89DWPGGP (It outputs the correct formatting with my file names); I just can't seem to write the contents of my variable "my_match" and when trying to change it with quotes, etc. It doesn't seem to work. Right now the .txt writes "my_match". Any ideas?
[06:29:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:30:39] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:31:54] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[06:32:00] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[06:32:11] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[06:32:27] *** Quits: subopt (~subopt@2603-8081-2302-459a-2413-206f-94c2-ab62.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:33:40] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[06:33:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 252 seconds)
[06:33:43] <phy1729> KnowledgeShark: Path.glob returns a list of Path objects. If you want just the name, you need to get that attribute from each (this is where the list comprehension comes in)
[06:34:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:35:17] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[06:35:29] <KnowledgeShark> phy1729: So all in all it's more comprehensive for files, directories, etc using pathlib2 and Path if you know what you're doing? Good to know!
[06:35:30] *** Joins: dadofapollo (~dadofapol@135.129.1.199)
[06:35:39] <KnowledgeShark> Still would like to know the answer to both of these :)
[06:35:57] <KnowledgeShark> I will read
[06:36:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:37:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:37:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[06:38:24] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[06:40:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:41:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:41:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:41:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[06:42:42] *** Joins: shiv (~shiv@pool-108-7-216-80.bstnma.fios.verizon.net)
[06:44:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:45:01] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489h7r5vp261eff.ipv6.telus.net) (Remote host closed the connection)
[06:45:06] *** Quits: dadofapollo (~dadofapol@135.129.1.199) (Quit: Konversation terminated!)
[06:45:22] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489h7r5vp261eff.ipv6.telus.net)
[06:45:39] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[06:46:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:47:09] <shiv> Hi Folks: say I have a list of integers and I want to find the max value of these integers, would I use .max() or would I do max(integer_list)?
[06:47:58] *** Quits: parv (~quass@user/parv) (Ping timeout: 260 seconds)
[06:48:37] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[06:48:59] <bpalmer> shiv: what happens when you try both?
[06:51:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:51:52] *** Quits: noobaroo (~solas@user/noobaroo) (Remote host closed the connection)
[06:51:53] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:53:47] <jinsun__> it is a bit unfortunate, but the answer is max(your_list)
[06:55:11] <meejah> nedbat: "everything's a dict"
[06:55:36] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[06:55:42] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:55:43] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:55:43] *** finn_elija is now known as FinnElija
[06:56:11] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 245 seconds)
[06:56:14] <phy1729> less unfortunante when you consider it works on all iterables not just lists
[06:56:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[06:56:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:57:10] <shiv> jinsun__, Thank you :)
[06:57:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:57:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:57:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:57:59] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[06:58:05] *** Joins: parv (~quass@user/parv)
[06:58:41] <jinsun__> it could have been made to work on all iterables, by just forcing all iterables to inherit from Iterable, and adding the method there
[06:59:04] <jinsun__> like how C# does it with its IEnumerable
[06:59:05] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 268 seconds)
[06:59:21] *** Joins: tijuco (~tijuco@user/tijuco)
[07:00:20] <jinsun__> but wouldn't be duck typing, and not pythonic, and probably worse for performance also, so not happening
[07:00:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:00:35] *** Quits: hexenbane (~hexenbane@fixed-187-190-159-31.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[07:01:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:02:19] *** Joins: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402)
[07:02:28] <jinsun__> but the free function version looks uglier than the method version, and doesn't work with auto-complete, you just have to remember it
[07:02:47] <songd> hi. I'm looking for a cross-platform macro library that can do screengrabs. anyone know of one?
[07:03:29] <songd> (I wanna do some bluestacks game automation using opencv, but would like to make it work on mac/linux using the android emulator)
[07:04:40] <KnowledgeShark> Is there an easy remedy for my dpaste traceback? https://dpaste.com/EH7FDPQJR ; The error is telling me my Python Variable which is a list; how do I assign a Python Variable "non list" the same contents as the list "my_match" , so I can write the files to.txt using open() ?
[07:04:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:06:18] <phy1729> files just hold strings (well a bytestring, but we can ignore that) so you need to serialize your data
[07:07:02] <songd> KnowledgeShark: write(json.dumps(your_list))
[07:07:34] <songd> since you're writing to json files, you might as well make sure it's properly serialized to json
[07:07:47] <KnowledgeShark> songd: I just need file names.
[07:07:51] <phy1729> also you should look at using a context when opening files so you can't forget the close https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
[07:07:57] <KnowledgeShark> songd: I used sqlalchemy to de-serialize to mariadb
[07:08:08] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:08:32] <songd> oh, I see. sorry I wasn't reading properly. lemme read again with a bit less negligence this time
[07:08:41] <KnowledgeShark> lol no worries
[07:08:44] *** Joins: saroy (~Sandipan@43.252.250.67)
[07:09:08] <maxtim> How do nested functions work? Are they local only to the parent function? Can I call it globally? (I know this doesn't work, but I thought I'd share where I'm at: https://bpa.st/LXNQ
[07:09:10] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:09:15] <KnowledgeShark> phy1729: Yes I have that tab open. :/
[07:09:39] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:09:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[07:10:12] <songd> KnowledgeShark: file.write('\n'.join(my_match))
[07:10:22] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:10:52] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:11:00] <KnowledgeShark> songd: thank you! I will give it a go! :)
[07:11:08] <phy1729> maxtim: the name is scoped just like any other variable
[07:11:49] <songd> yeah maxtim, what phy1729 said. "def something(): ..." is just like "something = some_function"
[07:12:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:12:34] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:12:42] <maxtim> so in this case, it's scope is local only to the parent function
[07:13:00] <maxtim> s/it's/its
[07:13:42] <SnoopJ> maxtim, the nesting layer has its own lexical scope; names are resolved against the nearest enclosing scope where they can be found, in general.
[07:13:46] <maxtim> said another way, call_that() can only be called from call_this()
[07:13:46] *** Joins: adeliktas4 (~adeliktas@i59F5FD1E.versanet.de)
[07:14:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:14:43] *** Quits: shiv (~shiv@pool-108-7-216-80.bstnma.fios.verizon.net) (Quit: Leaving)
[07:14:50] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[07:14:57] <SnoopJ> https://docs.python.org/3/reference/executionmodel.html#resolution-of-names
[07:15:11] *** Joins: jamea (~jamea@177.239.81.39)
[07:15:12] *** Quits: adeliktas (~adeliktas@i59F4D410.versanet.de) (Ping timeout: 250 seconds)
[07:15:12] *** adeliktas4 is now known as adeliktas
[07:15:13] <jamea> hi all
[07:15:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:28] <maxtim> (i wish docs had a dark mode)
[07:15:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:15:38] <jamea> is possible access to a site (login pass) and copy a image to harddisk?  not: not gui... not Xwindow
[07:16:09] <maxtim> jamea, I've done this in the past using BeautifulSoup
[07:16:39] <songd> jamea there are a few headless browsers if you mean a screengrab of the page. if you want to download a file then you should look at requests and/or scrapy
[07:16:50] <maxtim> for audio, of course....
[07:16:54] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:17:39] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e155:e774:42cc:4269) (Quit: I have gone to sleep. ZZZzzzâ€¦)
[07:17:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:17:57] *** Quits: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[07:17:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:18:06] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b0c4:71ad:bd2f:7b15)
[07:18:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:18:34] <songd> beautifulsoup is good for malformed html back in the xhtml/html4 fiasco days, but most modern sites don't have that problem nowadays, and the lxml selector model is really nice to use, so use scrapy or the library it uses for parsing (parsel) instead
[07:18:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:19:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:19:53] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[07:20:02] <maxtim> songd, funny, the site I was scrapping from was super old. (Probably still is). I would grab a zip file defined by date and convert the audio from there.
[07:20:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:20:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:20:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:20:39] *** Quits: vats (~vats@103.16.30.211) (Ping timeout: 256 seconds)
[07:21:15] <songd> I wonder if there's a soup to lxml converter?
[07:21:17] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[07:21:26] *** Joins: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[07:21:44] <songd> That would be ideal, use soup to parse it, then throw into lxml for the ability to use xpath and css selectors
[07:21:46] <maxtim> iirc you can use lxml lib....
[07:21:47] <SnoopJ> maxtim, there's definitely still interest in a dark mode option, e.g. https://github.com/python/docs-community/issues/1#issuecomment-1006943732
[07:22:28] <SnoopJ> songd, are you aware of lxml.html ?
[07:22:38] <songd> oh cool no
[07:23:34] <cowsay-moo> Question.. I was playing around with PyGObject/Gtk today.. I changed "gi.require_version("Gtk", "3.0")" to 4.0, and then decided to go back to 3.0. Now every time I try to run my project, it says "Namespace Gtk is already loaded with version 4.0" ... how do I "unload" 4.0 so I can return to 3.0?
[07:23:37] <SnoopJ> it's apparently resting directly on something in libxml2 https://lxml.de/parsing.html#parsing-html
[07:24:14] <SnoopJ> I don't have a good sense of how tolerant it is of malformed documents vs. BeautifulSoup, but it's certainly more actively worked on, so I imagine it's as good or better
[07:24:16] <songd> I've not done any scraping in a while actually, but last time I did lxml directly it didn't like really messy html. things may have changed since then - could be much nicer now
[07:24:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[07:24:44] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[07:25:02] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:25:02] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b0c4:71ad:bd2f:7b15) (Quit: Textual IRC Client: www.textualapp.com)
[07:25:37] *** Joins: subopt (~subopt@2603-8081-2302-459a-d594-da84-617b-7c5f.res6.spectrum.com)
[07:25:55] *** Joins: Blankspace (~Blankspac@user/blankspace)
[07:26:47] *** Joins: lalitmee (~lalitmee@180.94.33.5)
[07:27:10] <songd> last time i used requests + parsel and it worked, but I think the site was reasonably well formed
[07:27:13] *** Joins: frost (~frost@user/frost)
[07:27:28] <cowsay-moo> disregard my question.  i had 3.0 and 4.0 set in two different files
[07:28:06] <SnoopJ> songd, it may not like it, depending on exactly how icky "really messy" is, but worth a shot if it cuts out an entire dependency in my estimate
[07:29:24] <SnoopJ> if it's more malformed than document, libxml2 might have trouble stitching it back together
[07:30:16] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:31] <audio> maxtim, YOU DARE PING ME, HEATHEN?!
[07:30:36] * audio tosses maxtim a sword
[07:30:41] <audio> WE FIGHT TO THE DEATH!
[07:30:50] <maxtim> lmao
[07:30:56] <audio> EN GUARD!
[07:31:09] <audio> lol
[07:31:23] <maxtim> I'll use my nearest antenna
[07:31:27] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[07:32:20] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[07:32:35] *** Joins: medium_cool (~medium_co@136.36.128.48)
[07:32:47] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:49] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[07:33:07] *** Quits: tj123__ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[07:34:46] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:35:23] *** Quits: sreve_ (~quassel@p549d73b1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:35:27] <songd> hrmph, so I guess PIL/pillow + some macro tool to grab window positions is my best option for game automation?
[07:35:42] *** Joins: sreve (~quassel@p549d7184.dip0.t-ipconnect.de)
[07:37:05] <SnoopJ> libxml2 seems to claim it can parse "real world" HTML [sic]
[07:37:26] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: Textual IRC Client: www.textualapp.com)
[07:37:44] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[07:37:46] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:37:48] <songd> "real world" is an error?
[07:39:00] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:39:05] <SnoopJ> no, I mean sic as in "sic erat scriptum", i.e. exactly how it was written (in the HTMLParser header: https://gnome.pages.gitlab.gnome.org/libxml2/devhelp/libxml2-HTMLparser.html)
[07:39:40] <songd> ah okay, I assumed it was because you disagreed with it!
[07:39:52] <songd> or thought "real world" html isn't a thing
[07:40:15] <maxtim> what is "real world" HTML?
[07:40:25] <maxtim> what does that even mean....?
[07:40:29] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:40:44] <maxtim> I think that is hence the [sic]
[07:40:46] <songd> the dogshit that you see in the wild
[07:41:07] <SnoopJ> maxtim, HTML documents aren't always well-formed, browsers etc. are not required to reject invalid documents and usually don't. They just try to pick up all the pieces after the explosion.
[07:41:11] <songd> <BLINK><MARQUEE>this stuff</BLINK></MARQUEE>
[07:41:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[07:41:38] <maxtim> whu... <br /> huh?
[07:42:21] <songd> removing those two tags was the precursor to cancel culture
[07:42:31] <maxtim> lmao
[07:42:58] *** Quits: lalitmee (~lalitmee@180.94.33.5) (Remote host closed the connection)
[07:43:15] <maxtim> i wish i could tell that joke to friends. I'll literally get blank stares
[07:44:09] <SnoopJ> judging by the prevalence of nonconforming HTML, invoking the concept as a bogeyman may be precisely the same level of hand-wringing
[07:45:04] <songd> I think the biggest problems were the XHTML declaration at the top combined with javascript copypasta that broke the xml rules
[07:45:12] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 252 seconds)
[07:45:13] <SnoopJ> A nice interview discussing some of the messy history that led to the mess that is (was?) HTML: https://youtu.be/Q4dYwEyjZcY?t=235
[07:45:21] <songd> s/were/was
[07:45:42] <songd> cool thanks
[07:45:56] <SnoopJ> anyway, I also remembered lxml being a little touchy about HTML (and having gotten a lot better), but couldn't trust my remembrance
[07:46:12] *** Joins: jochum (~quassel@user/jochum)
[07:46:40] <SnoopJ> there's still some API in lxml.html for hooking it into BeautifulSoup, so you're not necessarily locked out of switching if you do bump into documents that it chokes on
[07:48:01] *** Joins: aod (~a@190.75.0.70)
[07:48:29] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[07:48:35] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-585f-140b-6646-4b30.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:49:14] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:49:29] *** Quits: src (~src@user/src) (Quit: leaving)
[07:50:20] *** cryocaustik7 is now known as cryocaustik
[07:51:13] *** Joins: lalitmee (~lalitmee@180.94.33.5)
[07:52:15] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Remote host closed the connection)
[07:52:40] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d)
[07:52:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:54:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:54:42] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:55:20] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:57:22] *** Quits: purple_cthulhu (~rax@185.108.96.12) (Quit: Leaving.)
[07:58:19] *** Quits: shangxiao (~davids@101.165.217.11) (Quit: WeeChat 3.4)
[07:59:06] <KnowledgeShark> songd: That worked brilliantly! Thank you!
[07:59:30] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[08:01:10] *** Quits: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402) (Remote host closed the connection)
[08:01:27] *** Joins: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402)
[08:01:48] *** Joins: fuzzykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[08:01:56] *** Quits: sus (zero@user/zeromomentum) (Quit: Ping timeout (120 seconds))
[08:02:00] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[08:02:09] *** Joins: sus (zero@user/zeromomentum)
[08:02:12] *** Joins: argoneus (~argoneus@argoneus.com)
[08:02:21] *** Joins: mchlumsky8 (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[08:02:49] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[08:02:49] *** mchlumsky8 is now known as mchlumsky
[08:03:55] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[08:03:55] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Ping timeout: 240 seconds)
[08:04:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:04:36] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 250 seconds)
[08:05:05] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[08:05:31] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[08:05:37] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Read error: Connection reset by peer)
[08:05:59] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Ping timeout: 256 seconds)
[08:05:59] *** Quits: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402) (Ping timeout: 256 seconds)
[08:06:07] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[08:06:48] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[08:07:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:07:48] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[08:09:57] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:10:19] *** Joins: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402)
[08:11:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:12:22] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:13:00] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[08:14:40] *** Quits: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402) (Remote host closed the connection)
[08:14:57] *** Joins: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402)
[08:15:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[08:16:53] *** Quits: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402) (Remote host closed the connection)
[08:17:10] *** Joins: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402)
[08:18:28] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 250 seconds)
[08:18:59] *** Joins: dubs (~user@user/sbudnik)
[08:21:10] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:21:51] *** Quits: songd (~songd@2a00:23a8:826:a800:5590:2ee2:29fb:e402) (Ping timeout: 256 seconds)
[08:22:20] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:24:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9)
[08:24:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:26:29] *** Joins: xkuru (~xkuru@user/xkuru)
[08:26:33] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[08:27:26] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 245 seconds)
[08:27:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:29:00] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[08:30:05] *** Joins: Betal (~Betal@user/betal)
[08:31:11] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:31:24] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 252 seconds)
[08:31:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:33:03] *** Quits: sreve (~quassel@p549d7184.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:33:09] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[08:33:13] *** Quits: Giovanni (~Giovanni@176.55.166.222) (Remote host closed the connection)
[08:33:23] *** Joins: sreve (~quassel@p4ff44c9d.dip0.t-ipconnect.de)
[08:34:19] *** Quits: roguelazer (~jbrown@sietchtabr.roguelazer.net) (Ping timeout: 256 seconds)
[08:34:41] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[08:34:47] *** Joins: quasineutral5 (~quaisneut@user/quasineutral)
[08:35:06] *** Joins: han-solo (~hanish@user/han-solo)
[08:35:20] *** Joins: roguelazer (~jbrown@sietchtabr.roguelazer.net)
[08:36:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:36:01] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Ping timeout: 256 seconds)
[08:36:01] *** quasineutral5 is now known as quasineutral
[08:37:34] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b370:bd09:49bf:13b8)
[08:38:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:40:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:40:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:42:22] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[08:42:41] *** Quits: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[08:44:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:44:27] <KnowledgeShark> I have a Python Variable which is an integer holding json file count "53185" as an example. file.write is giving me an "write() argument must be str, not int" ; what's the remedy for this situation? my dpaste is here: https://dpaste.com/D3Q73BWH6 thanks
[08:44:50] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 272 seconds)
[08:44:59] *** Joins: r4ulrm (~raul@181.27.127.43)
[08:45:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:45:44] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[08:45:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:45:57] *** Joins: rvalue (~rvalue@user/rvalue)
[08:46:24] <Repiphany> KnowledgeShark: `str(current_json_dataset_file_count)`
[08:46:42] <Repiphany> or use f-strings, `f'{current_json_dataset_file_count}'`
[08:46:45] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[08:47:14] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[08:48:05] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[08:48:13] <KnowledgeShark> Repiphany: Do I replace "file.write((current_json_dataset_file_count))" with "file.write(str(current_json_dataset_file_count))" ? Thank you!!!
[08:48:27] *** Quits: Bobathan_ (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 252 seconds)
[08:50:10] *** Joins: eyepeetee (~aa@user/eyepeetee)
[08:50:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:51:21] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[08:51:27] <eyepeetee> hi, what is the best way to locate the source of memory leaks in a program?
[08:51:28] <han-solo> KnowledgeShark: is that the only thing that you are writing to the file ?
[08:52:03] <KnowledgeShark> han-solo: Yup! Just the file count python variable
[08:52:57] <KnowledgeShark> That's nice though, if you can specifcy file.write(int(variable)) file.write(str(variable)), etc. if that's what I just learned from Repiphany.
[08:53:00] <han-solo> `with open(fname, 'w') as f: json.dump({"count": count}, f)`
[08:53:12] <eyepeetee> it almost seems like garbage collection isn't working quite right. probably that isn't the case though (or is it)
[08:53:39] <han-solo> now you could just load that using json, without having to again `int(f.read())` and stuff
[08:53:48] <KnowledgeShark> han-solo: I am not using json.dump (already extracted all json data using SQLAlchemy).
[08:54:06] <KnowledgeShark> I need to manage the files in different parts of my program.
[08:54:13] <KnowledgeShark> and file information
[08:54:14] <han-solo> okay
[08:54:23] <KnowledgeShark> han-solo: I appreciate that , though!
[08:57:16] <KnowledgeShark> Repiphany: Worked Perfect! Thank you very very much! Brilliant!
[08:57:36] <bpalmer> Given x=1, the f-string f'{x=}' == 'x=1' ; where is the x= syntax described? I've been reading through PEP 498 and even the Format Specification Mini-Language in the string package , but I'm having trouble seeing how/where it's defined.
[08:58:03] <Repiphany> bpalmer: It wasn't part of the original f-string specification
[08:58:13] <han-solo> it's in 3.9, or 3.8 i think
[08:58:24] <bpalmer> aha
[08:58:31] <han-solo> 3.8 it seems
[08:59:00] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[08:59:10] <bpalmer> Thanks, found it in the 3.8 patch notes
[08:59:28] <bpalmer> er, the 3.8 What's New doc, rather.
[08:59:43] <han-solo> https://docs.python.org/3.8/whatsnew/3.8.html#f-strings-support-for-self-documenting-expressions-and-debugging
[08:59:54] <bpalmer> gracias.
[09:00:49] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[09:01:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[09:03:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:04:06] *** Joins: mexen (uid495612@user/mexen)
[09:06:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[09:07:17] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[09:07:31] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[09:09:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:09:27] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[09:09:30] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[09:09:43] *** Joins: Socra (~Socra@206.217.216.21)
[09:09:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:09:51] *** Joins: mcpackey (~pm0001@p5dc1c9c8.dip0.t-ipconnect.de)
[09:11:11] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:11:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:13:30] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:13:55] <mattf> blender python addon: is there any way to add a hook every time an object is added?
[09:16:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[09:18:24] *** Joins: savolla (~quassel@84.44.28.28)
[09:18:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:19:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:19:17] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[09:21:38] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:22:55] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[09:23:00] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:23:14] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:25:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[09:28:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:28:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[09:28:32] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 272 seconds)
[09:29:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:29:34] *** Joins: dvx (~dvx@5.181.92.64)
[09:29:35] *** Joins: vats (~vats@103.16.30.101)
[09:30:13] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz)
[09:31:07] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz) (Client Quit)
[09:32:15] *** Joins: cyphase (~cyphase@user/cyphase)
[09:32:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:33:48] *** Joins: dreamscached (~dreamscac@user/dreamscached)
[09:33:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:33:59] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:34:34] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[09:36:18] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:38:46] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[09:39:10] *** Joins: kdc (~kdc@196.211.197.133)
[09:39:36] *** Quits: kdc (~kdc@196.211.197.133) (Max SendQ exceeded)
[09:40:05] *** Joins: kdc (~kdc@196.211.197.133)
[09:41:21] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:41:56] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[09:43:03] *** Parts: agireud (~agireud@user/agireud) ()
[09:43:24] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.206)
[09:43:49] *** Joins: agireud (~agireud@user/agireud)
[09:44:42] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.206) (Max SendQ exceeded)
[09:45:11] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.254)
[09:45:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:45:37] *** Joins: djapo (~archangel@user/djapo)
[09:47:00] *** Joins: shadow3d (~shadow3d@119.123.134.157)
[09:47:45] *** Joins: xkuru (~xkuru@user/xkuru)
[09:50:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[09:50:16] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[09:50:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[09:51:18] *** Joins: Enitin (~Enitin@82.180.145.226)
[09:51:37] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[09:51:48] *** Joins: tvm (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[09:52:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:52:30] *** Quits: strugee (~strugee@2602:ffc5:200:4900::1) (Ping timeout: 250 seconds)
[09:54:39] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz)
[09:55:32] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[09:55:40] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:56:45] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[09:58:11] *** Quits: shadow3d (~shadow3d@119.123.134.157) (Ping timeout: 256 seconds)
[09:59:12] *** Joins: han-solo (~hanish@user/han-solo)
[09:59:44] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489h7r5vp261eff.ipv6.telus.net) (Quit: Leaving)
[10:00:27] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[10:00:44] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.254) (Ping timeout: 250 seconds)
[10:01:32] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[10:01:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:02:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:03:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[10:05:47] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[10:06:52] *** Joins: manti7 (~manti7@176.10.104.94)
[10:07:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:08:06] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[10:08:25] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[10:10:05] *** Joins: x_kuru (xkuru@user/xkuru)
[10:11:13] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:13:49] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[10:14:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 252 seconds)
[10:14:49] *** Joins: jazzy (~jaziz@user/jaziz)
[10:14:59] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:21:58] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:25:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:26:18] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[10:27:21] *** Joins: parv (~quass@user/parv)
[10:27:27] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9) (Ping timeout: 252 seconds)
[10:29:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:29:46] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[10:31:03] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:31:24] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[10:31:45] *** Joins: grooverman_ (~grooverma@152.250.149.217)
[10:31:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[10:32:03] *** Joins: slav0nic (slav0nic@python.su)
[10:34:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:34:37] *** Quits: grooverman (~grooverma@189.110.78.152) (Ping timeout: 240 seconds)
[10:34:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:35:09] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[10:36:15] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[10:36:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:37:06] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:37:08] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 250 seconds)
[10:37:08] *** Joins: AlanMD_ (~AlanMD@86.124.30.89)
[10:37:34] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[10:38:39] *** Joins: mohammad5305 (~mohammad@37.137.17.134)
[10:38:50] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 272 seconds)
[10:41:13] *** Joins: cyphase (~cyphase@user/cyphase)
[10:41:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[10:42:32] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:42:52] *** Joins: sixpiece (~brainz3sl@static.61.104.203.116.clients.your-server.de)
[10:44:57] <sixpiece> hello someone asked me if I would be able to do a certain job involving python but I never really did much python programming, am I able to accept the job?
[10:45:20] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:14] <BrenBarn> that's kind of up to you
[10:46:21] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:46:34] <BrenBarn> you have to compare how much Python you know with how much you'd need to do the job
[10:46:35] *** Joins: emerent_ (~quassel@p200300cd5743c35fba27ebfffed28a59.dip0.t-ipconnect.de)
[10:46:36] *** emerent is now known as Guest5106
[10:46:36] *** emerent_ is now known as emerent
[10:46:40] *** Quits: Guest5106 (~quassel@p200300cd5743c32cba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:47:25] *** Joins: lalitmee_ (~lalitmee@180.94.32.193)
[10:47:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[10:48:50] *** Quits: davidlowryduda (~davidlowr@2601:197:600:1210:adfa:97b2:16e:b6e4) (Ping timeout: 250 seconds)
[10:50:05] *** Quits: lalitmee (~lalitmee@180.94.33.5) (Ping timeout: 256 seconds)
[10:50:52] *** Joins: davidlowryduda (~davidlowr@73.61.8.192)
[10:52:00] *** Joins: Pickchea (~private@user/pickchea)
[10:53:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:54:21] *** Joins: mrwick (~mrwick@user/mrwick)
[10:54:49] *** Joins: jay-m126 (~jay-m@154.126.169.74)
[10:54:50] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[10:54:54] *** Joins: jay-m126_ (~jay-m@154.126.169.74)
[10:54:55] *** Joins: jay-m1261 (~jay-m@154.126.169.74)
[10:54:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[10:55:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:56:01] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[10:56:38] <sixpiece> sorry just a second trying to add an email account
[10:56:38] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:56:56] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[10:57:02] *** Joins: dude-x_ (~textual@72.76.74.165)
[10:57:09] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:57:12] <sixpiece> cannot figure out why it's always so painful to do this
[10:57:13] <sixpiece> lol
[10:57:45] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:58:48] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1016:e644:3c18:7438) (Ping timeout: 250 seconds)
[10:59:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:59:03] <sixpiece> I work at some Staffing company and I came across your resume on Indeed. I think you could be a good fit for our Python, Unix Sheel Scripting, Sybase (KC) opportunity. Please let me know if you're interested.
[10:59:09] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:59:20] <sixpiece> I am interested for sure but I wonder if I can qualify
[10:59:36] <han-solo> you could interview and see
[10:59:42] <sixpiece> sorry BrenBarn for the delay I was just working on getting that email
[10:59:57] <sixpiece> so just send the regular resume in the meantime?
[11:00:30] <sixpiece> I don't think I should really market myself as a python programmer for merely installing it on my computer
[11:00:50] <sixpiece> or using a script or two
[11:00:59] <sixpiece> thank you han-solo
[11:01:20] *** Joins: slav0nic (slav0nic@python.su)
[11:01:30] <sixpiece> my python question that I have is I have a script that runs in the background all the type renewing my ssl certificates for a website how can I see if it's running?
[11:01:39] <sixpiece> because it doesn't show up as a process
[11:02:34] <han-solo> is that a daemon ? or something run by cronjob ?
[11:03:25] *** Joins: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr)
[11:04:38] <sixpiece> yes I believe so
[11:04:55] <bookworm> which of the two mutually exclusive options?
[11:04:56] <han-solo> which one ?
[11:05:03] <sudorm> hi, is there a way to create an in-memory temporary file ?
[11:05:18] *** Joins: death916 (~Username@68.255.157.200)
[11:05:20] <sudorm> with a filepath that can be passed to another process?
[11:05:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:05:27] <bookworm> sudorm: sure, throw it in /tmp
[11:05:29] <han-solo> sudorm: `tempfile`
[11:05:42] <sudorm> (on Windows)
[11:05:47] <sixpiece> it's a cron job
[11:05:57] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[11:05:58] <Repiphany> Set up a ramdisk
[11:05:58] <han-solo> not exactly in memory,
[11:06:00] <han-solo> https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile
[11:06:16] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:06:17] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[11:06:18] <sudorm> Repiphany, yes that's what I currently do, I mount a RAMdisk
[11:06:20] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:06:34] <sudorm> Repiphany, but I wanted to avoid this and find a simpler way
[11:06:53] *** Joins: kuter (~kuter@public-gprs523036.centertel.pl)
[11:07:18] <han-solo> sixpiece: have it log somewhere
[11:07:30] <sixpiece> interesting it's in /etc/crontab I think
[11:07:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[11:07:38] <Repiphany> Probably sockets instead of files for interprocess communication
[11:08:01] <han-solo> sixpiece: or mayeb `/var/log/cron` may have some already
[11:08:11] *** Joins: QuHaR (~QuHaR@192.162.148.48)
[11:08:20] <han-solo> not exactly sure of the cron log location, but somewhere like that
[11:08:26] <bookworm> cron usually sends email as logs
[11:08:37] <bookworm> meaning/var/spool/
[11:08:46] <sudorm> han-solo, this is usually in Temp of C:\ but not in memory IIRC
[11:08:52] *** Joins: Guest143332 (~Guest1433@ppp079166198078.access.hol.gr)
[11:09:03] *** Quits: Guest143332 (~Guest1433@ppp079166198078.access.hol.gr) (Client Quit)
[11:09:15] *** Quits: uxemacs (~timothy@user/uxemacs) (Ping timeout: 252 seconds)
[11:09:31] *** Joins: upsala (~zcb@185.209.196.134)
[11:09:31] <Repiphany> sudorm: Maybe take some inspiration from https://github.com/off99555/python-mmap-ipc
[11:09:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[11:09:46] <sixpiece> 0 0,12 * * * root python -c 'import random; import time; time.sleep(random.rando
[11:09:46] <sixpiece> m() * 3600)' && certbot renew -q
[11:09:54] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[11:10:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:10:04] *** Quits: death916 (~Username@68.255.157.200) (Ping timeout: 268 seconds)
[11:10:10] <sixpiece> sorry I thought it would do it in 1 line but basically that's vi /etc/crontab the command that renews it interesting
[11:10:17] *** Joins: luigibu (~luigi@93.176.153.88)
[11:10:20] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[11:10:33] <bookworm> poor mans time jitter...
[11:11:00] *** Quits: dibas (~dibas@user/dibas) (Ping timeout: 240 seconds)
[11:11:10] <sixpiece> thank you, bookworm , sudorm , han-solo
[11:11:13] *** Joins: dibas (~dibas@wild.uberspace.de)
[11:11:13] <bookworm> use your OS facilities people, timers are a thing in systemd land
[11:11:13] *** Quits: dibas (~dibas@wild.uberspace.de) (Changing host)
[11:11:13] *** Joins: dibas (~dibas@user/dibas)
[11:11:34] <sixpiece> bookworm systemd is unix only I believe  no?
[11:11:39] <sudorm> Repiphany, oh thanks for this one! i was researching precisely this a few days ago... good tutorial! is it yours?
[11:11:47] <bookworm> not unix no
[11:11:49] <Repiphany> No, I just googled
[11:11:53] <bookworm> cron is unix
[11:11:55] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 268 seconds)
[11:12:06] <bookworm> systemd is Linux, depending on the distro
[11:12:50] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[11:13:03] <sixpiece> https://de.wikipedia.org/wiki/Systemd
[11:13:21] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Changing host)
[11:13:21] *** Joins: DK3 (~DK3@user/DK3)
[11:13:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:13:57] <sixpiece> it says it right here apparently solaris has system management facility smf, and mac os has launchd
[11:13:58] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:14:15] <bookworm> pretty sure most people don't want the German version but sure, that's a Wikipedia page
[11:14:22] *** Joins: blackout69 (~blackout6@37.183.198.248)
[11:14:24] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:15:11] <sixpiece> exactly I grew up trying to be ashamed of speaking German so I sort of understand but they do get to the point
[11:15:57] <sixpiece> that's what comes up on google search results though
[11:16:28] *** Joins: death916 (~Username@68.255.157.200)
[11:17:12] *** Joins: nomic2 (~nomic@185.217.117.111)
[11:17:22] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:03] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:1cc9:d73:eb51:2a8d) (Ping timeout: 252 seconds)
[11:18:49] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:19:44] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:19:47] *** Quits: nomic (~nomic@185.192.69.74) (Ping timeout: 256 seconds)
[11:20:15] <han-solo> why would one be ashamed of speaking German ? :/
[11:20:43] <han-solo> i guess that's a question for offtopic
[11:21:48] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[11:22:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:22:45] <sixpiece> yes a bit off topic but like all the ches I suppose, French sounds the best I suppose but it's kind of maybe too cute so I guess it makes English the winner
[11:22:57] *** Quits: mohammad5305 (~mohammad@37.137.17.134) (Ping timeout: 240 seconds)
[11:25:18] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[11:25:31] <han-solo> i don't know what that means
[11:26:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:26:55] *** Quits: dreamscached (~dreamscac@user/dreamscached) (Ping timeout: 256 seconds)
[11:26:58] *** Quits: pkapp_ (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 272 seconds)
[11:27:56] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:27:56] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b87d:b7c8:de5e:a391)
[11:28:16] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:28:49] <sudorm> Repiphany, using mmap(..., tagname='mysharedspace')  is really great for IPC
[11:29:07] <sudorm> but it only works for Windows. What's the equivalent for Linux?
[11:30:55] *** Quits: parv (~quass@user/parv) (Quit: parv)
[11:31:04] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:31:27] *** Joins: grooverman (~grooverma@189.110.77.226)
[11:32:49] <han-solo> "Avoiding the use of the tag parameter will assist in keeping your code portable between Unix and Windows."
[11:33:33] <sudorm> han-solo, yes indeed that's what I was referring to.
[11:33:50] <sudorm> Which similar option would you use on Linux?
[11:34:31] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[11:34:33] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[11:35:06] *** Quits: grooverman_ (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[11:35:27] <han-solo> the process you want to communicate is not a child process right ?
[11:35:36] <sudorm> han-solo, yes not a child process
[11:36:45] <han-solo> i can only assume something that require a socket thingies
[11:36:52] <han-solo> then
[11:37:52] <sixpiece> han-solo https://www.youtube.com/watch?v=-_xUIDRxdmc just to answer your question
[11:38:33] *** Joins: mohammad5305 (~mohammad@37.137.17.134)
[11:38:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:38:52] *** Joins: jpn (~jpn@user/jpn)
[11:39:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:41:19] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[11:42:20] *** Joins: palasso (~palasso@user/palasso)
[11:42:57] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[11:43:28] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[11:44:10] *** sixpiece is now known as root
[11:44:26] *** root is now known as sixpiece
[11:45:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:45:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:45:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:46:44] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:47:21] *** Joins: Iolo (~iolo@user/Iolo)
[11:48:56] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[11:49:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:50:25] *** Joins: lalitmee__ (~lalitmee@180.94.32.228)
[11:50:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[11:51:02] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[11:51:12] *** Quits: jinsun__ (~jinsun@user/jinsun) ()
[11:52:58] *** Quits: lalitmee_ (~lalitmee@180.94.32.193) (Ping timeout: 250 seconds)
[11:53:18] *** sixpiece is now known as root
[11:53:38] *** root is now known as root133
[11:55:19] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f94e:a39:fd56:6e15) (Quit: Textual IRC Client: www.textualapp.com)
[11:56:12] *** Quits: sawk (~quassel@151.81.118.116) (Remote host closed the connection)
[11:57:19] *** Joins: zmt01 (~zmt00@user/zmt00)
[11:58:07] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:58:11] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[11:58:12] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:58:58] *** Joins: sawk (~quassel@151.81.118.116)
[12:01:07] *** Joins: kosh (~kosh@user/kosh)
[12:01:15] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 268 seconds)
[12:02:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:02:48] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[12:03:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:03:22] *** Joins: audio (~audio@user/audio)
[12:04:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:06:20] *** Joins: chele (~chele@user/chele)
[12:06:49] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[12:07:02] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[12:08:12] *** Joins: Alexthek1d (~Alexthek1@p5b3ae99d.dip0.t-ipconnect.de)
[12:08:14] <Alexthek1d> hello
[12:08:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:09:02] <Alexthek1d> how can you print a float like "7.269250114220301e-21" like 0.0000000000000000000072692501 without knowing the precision?
[12:09:11] <Alexthek1d> *to
[12:09:15] <Alexthek1d> *as
[12:09:16] <Alexthek1d> sorry
[12:11:20] <root133> you just did
[12:11:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[12:11:55] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:12:28] <root133> yes
[12:12:43] <root133> I put it into the python shell and it accepts it and rewrites it as such:
[12:12:52] <root133> 7.2692501e-21
[12:13:02] <root133> guten nacht
[12:13:06] *** Joins: vladoski (~vladoski@2001:b07:add:d406:f809:685c:190e:d2eb)
[12:13:11] *** Quits: root133 (~brainz3sl@static.61.104.203.116.clients.your-server.de) (Quit: Leaving)
[12:13:16] <Alexthek1d> what? xD
[12:14:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:14:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:15:15] *** Quits: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 252 seconds)
[12:15:34] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:15:39] *** Joins: arinov (~arinov@213.194.126.155)
[12:17:03] <Repiphany> You could use abs(math.log10(...)) + whatever number of digits you wanted after the zeros
[12:17:06] *** Joins: bindu (~bindu@user/bindu)
[12:18:44] *** Joins: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[12:19:03] <Alexthek1d> i think that is not what i'D like to do
[12:19:05] *** Quits: mohammad5305 (~mohammad@37.137.17.134) (Ping timeout: 252 seconds)
[12:19:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:19:21] <Alexthek1d> print(decimal.Decimal(1.357e-05))
[12:19:23] <Alexthek1d> this works
[12:19:27] *** Joins: cheater (~Username@user/cheater)
[12:19:30] <Alexthek1d> print(decimal.Decimal(1.357e-21))
[12:19:32] <Alexthek1d> this not
[12:19:49] *** Joins: Gerula_ (~Gerula@user/gerula)
[12:19:49] *** Gerula is now known as Guest5068
[12:19:49] *** Quits: Guest5068 (~Gerula@user/gerula) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[12:19:49] *** Gerula_ is now known as Gerula
[12:19:50] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:23:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:23:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[12:24:37] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9)
[12:24:55] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[12:25:01] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[12:25:09] *** Quits: vats (~vats@103.16.30.101) (Ping timeout: 252 seconds)
[12:25:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:25:51] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Ping timeout: 256 seconds)
[12:26:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[12:26:54] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b370:bd09:49bf:13b8) (Quit: pvergain)
[12:27:13] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b370:bd09:49bf:13b8)
[12:27:43] *** Joins: Auron (Auron956@user/auron)
[12:27:47] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 256 seconds)
[12:27:48] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[12:27:54] *** justm33 is now known as justm3
[12:28:16] *** Quits: death916 (~Username@68.255.157.200) (Quit: Going offline, see ya! (www.adiirc.com))
[12:28:16] *** Joins: antaresgades (~antaresga@ieocadiz.cd.ieo.es)
[12:29:00] *** Joins: acresearch (~acresearc@user/acresearch)
[12:29:25] *** jazzy2 is now known as jazzy
[12:29:29] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 256 seconds)
[12:29:29] *** Quits: Alexthek1d (~Alexthek1@p5b3ae99d.dip0.t-ipconnect.de) (Quit: Leaving)
[12:30:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:31:03] *** Quits: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr) (Quit: Leaving)
[12:31:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:31:33] <acresearch> people i am stuck with something, i am trying to convert a list of 32 integers into base58. How can I do that? please help     here is my code so far: https://paste.debian.net/1234218/
[12:31:35] *** Quits: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:31:54] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[12:32:41] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:32:44] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:32:54] *** Joins: lalitmee_ (~lalitmee@180.94.32.86)
[12:33:31] *** Joins: gusto (~Augustus@109.255.100.54)
[12:33:40] *** Joins: death_ (~Username@68.255.157.200)
[12:34:05] *** Joins: hball (~hball@55.140.133.37.dynamic.jazztel.es)
[12:34:06] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[12:34:28] *** dcaro_away is now known as dcaro
[12:34:30] *** Joins: gusto (~Augustus@109.255.100.54)
[12:34:31] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[12:35:38] *** Quits: lalitmee__ (~lalitmee@180.94.32.228) (Ping timeout: 260 seconds)
[12:36:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[12:36:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[12:36:45] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[12:37:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:38:23] *** Joins: Guest93 (~Guest93@157.46.110.13)
[12:38:46] <Guest93> Suggest a good book for python
[12:38:56] <Guest93> Thank you
[12:40:42] *** Joins: shad (~shad@user/shad)
[12:42:15] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[12:42:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[12:42:29] <kosh> Guest93, for what purpose?
[12:43:05] <Guest93> for acing Python
[12:43:25] <Guest93> I looked at Learning Python the Hard Way
[12:43:31] <Guest93> not really helpful
[12:43:38] <kosh> acing python? do you mean learning python or learning to do something specific with python?
[12:43:40] *** Quits: iob (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz) (Ping timeout: 250 seconds)
[12:43:42] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[12:44:01] <Guest93> I wish to become really good in basic Python
[12:44:11] <Guest93> I program everyday
[12:44:23] <Guest93> but I feel some expert level book could help
[12:44:32] <Guest93> Leetcode etc are logically difficult for me
[12:44:41] *** Joins: rond_ (~rond_@90.254.208.190)
[12:45:39] <rvalue> Guest93: what according to you is a python expert?
[12:46:12] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[12:47:15] <Guest93> OK man suggest a book
[12:47:45] <kosh> Guest93, https://greenteapress.com/wp/think-python/   that is usually a good first choice but the only way to become and expert is experience, you don't learn that from a book in any language
[12:48:16] <Guest93> I know that, but I code in isolation
[12:48:22] <Guest93> no one to discuss
[12:49:14] *** Joins: nishant (~Nishant@49.37.242.151)
[12:49:27] *** Quits: nishant (~Nishant@49.37.242.151) (Remote host closed the connection)
[12:49:58] *** Joins: nishant (~Nishant@49.37.242.151)
[12:50:37] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[12:51:01] *** Joins: tijuco (~tijuco@user/tijuco)
[12:52:06] <kosh> Guest93, this one is also good https://www.penguinrandomhouse.com/books/568139/impractical-python-projects-by-lee-vaughan/#:~:text=Impractical%20Python%20Projects%20is%20a,you'll%20use%20every%20day.
[12:52:14] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:53:27] *** Joins: mohammad5305 (~mohammad@94.24.20.27)
[12:54:25] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[12:55:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:58:42] *** Joins: rendar (~rendar@user/rendar)
[12:59:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:59:07] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[12:59:39] *** Joins: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[12:59:51] *** Quits: sawk (~quassel@151.81.118.116) (Ping timeout: 256 seconds)
[13:00:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:00:31] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[13:01:00] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[13:01:08] *** Joins: plastico (~plastico@neomutt/plastico)
[13:01:34] <Guest93> kosh thank you very much !
[13:02:00] *** Quits: Sylhouette (~johan@87.233.185.201) (Ping timeout: 252 seconds)
[13:03:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:03:57] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 240 seconds)
[13:07:41] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[13:07:49] <kosh> Guest93, no problem
[13:08:05] <kosh> Guest93, beyond that you need to read online
[13:08:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:08:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:08:45] <kosh> Guest93, I also suggest learning about the optional typing system  http://mypy-lang.org/
[13:09:45] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[13:10:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[13:11:50] *** Quits: death_ (~Username@68.255.157.200) (Ping timeout: 250 seconds)
[13:12:18] *** Joins: Gerula (~Gerula@user/gerula)
[13:12:29] *** Quits: aod (~a@190.75.0.70) (Quit: leaving)
[13:13:17] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[13:13:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:13:42] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:13:49] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:13:52] *** Quits: kolcon1 (~kolcon@v.kolouch.org) (Quit: WeeChat 3.4)
[13:14:03] *** Quits: Guest93 (~Guest93@157.46.110.13) (Quit: Client closed)
[13:14:07] *** Joins: redgloboli (~redglobol@user/redgloboli)
[13:18:59] <rendar> i'm creating a C++ project that will be eventually integrated inside python, is it wise to use cmake instead of make?
[13:19:24] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[13:19:37] *** Joins: blackout69 (~blackout6@37.183.198.248)
[13:23:00] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 240 seconds)
[13:23:33] *** Quits: cypostres (~cypostres@user/cypostres) (Read error: Connection reset by peer)
[13:23:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:23:57] *** Joins: cypostres (~cypostres@user/cypostres)
[13:25:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:26:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[13:26:45] *** Quits: nomic2 (~nomic@185.217.117.111) (Quit: Leaving)
[13:26:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:27:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:27:17] *** Quits: tykling (~tykling@irc.tyknet.dk) (Ping timeout: 256 seconds)
[13:27:31] <kosh> I am involved with a project that uses cmake right now, I hate cmake, I don't know if there is a better option but I do hate cmake
[13:28:02] *** Joins: nunggu (~q@user/nunggu)
[13:28:15] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[13:28:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:29:22] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[13:29:34] *** Joins: jpn (~jpn@user/jpn)
[13:29:59] *** Joins: sawk (~quassel@78.6.80.66)
[13:30:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[13:30:05] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:30:44] *** Joins: tykling (~tykling@irc.tyknet.dk)
[13:31:04] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5)
[13:31:16] *** Joins: imakestuff (~imakestuf@197.156.77.110)
[13:31:21] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[13:31:24] <rendar> lol
[13:31:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:31:29] <imakestuff> I have an sqlalchemy base class with a field email = Column(String(length=320), unique=True, index=True, nullable=False)
[13:31:41] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[13:31:48] <imakestuff> can the subclass override it to become nullable and non-unique?
[13:32:03] <imakestuff> I can't modify the class directly as it comes from a library
[13:32:17] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 240 seconds)
[13:33:46] *** Joins: jinsun (~jinsun@user/jinsun)
[13:34:04] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:35:26] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[13:36:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:37:00] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Ping timeout: 240 seconds)
[13:37:14] *** Joins: matsaman (~matsaman@user/matsaman)
[13:37:22] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5) (Remote host closed the connection)
[13:37:39] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5)
[13:38:07] <acresearch> people how can i convert an array of bytes to base58 hex?    there is no explanation of thin in google
[13:39:01] <kosh> base58?
[13:39:20] <kosh> hex is base 16
[13:39:37] *** Joins: death_ (~Username@68.255.157.200)
[13:40:18] *** Quits: imakestuff (~imakestuf@197.156.77.110) (Remote host closed the connection)
[13:41:06] <han-solo> there seems to be https://pypi.org/project/base58/
[13:41:23] *** Joins: chele_ (~chele@user/chele)
[13:41:42] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5) (Remote host closed the connection)
[13:41:59] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5)
[13:43:48] *** Quits: chele (~chele@user/chele) (Ping timeout: 252 seconds)
[13:44:53] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[13:46:33] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5) (Ping timeout: 256 seconds)
[13:47:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[13:48:11] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[13:48:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[13:48:35] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[13:49:02] <matsaman> acresearch: so you'd probably call it merely 'base58'
[13:49:45] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:49:56] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:50:09] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:50:20] *** gentooclimax is now known as climax
[13:52:29] <rubin55> Hi all, say, can I express a slice of sorts where I always drop the last item in the resulting list? like: x='foo/bar/baz'; x.split('/')[all-items-exept-the-last]?
[13:53:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:53:56] *** Joins: ice9 (~ice9@user/ice9)
[13:54:19] <rubin55> ... [:-1] ok then, rtfm myself!
[13:54:26] *** Quits: lalitmee_ (~lalitmee@180.94.32.86) (Quit: Leaving)
[13:54:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:14] *** Quits: kiryin (~kiryin@85-76-116-37-nat.elisa-mobile.fi) (Quit: quit)
[13:56:28] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[13:56:32] *** death_ is now known as death916
[13:56:46] <matsaman> rubin55: cheating...
[13:56:57] <han-solo> `pathlib.Path(x).parent`, maybe `.parts` if you want the parts, if you are working with paths...
[13:58:09] <rubin55> fair enough, these are not paths though (albeit split by '/')
[13:58:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:58:22] <rubin55> (nice one that .parent)
[13:58:36] <han-solo> i see
[14:00:05] <kosh> rubin55, although you could pretend they are paths if they are always consistent like that
[14:00:19] *** climax is now known as gentooclimax
[14:00:35] *** Joins: jpn (~jpn@user/jpn)
[14:01:02] *** Joins: TheCat (~TheCat@user/z-cat)
[14:01:15] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 240 seconds)
[14:01:16] <rubin55> true that, but I'm not sure if in that case I might run into weird issues with say valid path-element names, for example, containing ':' or somesuch
[14:01:29] <rubin55> s/valid/invalid/
[14:01:56] <matsaman> split/slicing is pretty darn simple
[14:02:25] *** Joins: naranja (~orange@user/orangeboxcutter)
[14:02:31] *** Joins: cation21 (cation@user/cation)
[14:02:59] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:02:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:03:30] <rubin55> agreed, works a charm
[14:03:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[14:04:09] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[14:04:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:04:44] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:05:47] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 252 seconds)
[14:05:55] *** cation21 is now known as cation
[14:06:22] *** Joins: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[14:07:00] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 240 seconds)
[14:12:21] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:12:37] *** Quits: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[14:16:04] *** Joins: CombatVet (~c4@user/combatvet)
[14:16:19] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[14:16:24] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[14:16:55] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[14:17:04] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: Lost terminal)
[14:17:21] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b370:bd09:49bf:13b8) (Ping timeout: 252 seconds)
[14:19:56] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[14:21:23] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:23:30] *** Quits: hball (~hball@55.140.133.37.dynamic.jazztel.es) (Quit: Client closed)
[14:23:50] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5)
[14:24:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:24:13] *** Joins: Blankspace (~androirc@user/blankspace)
[14:26:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:26:17] <Masklin__Gurder> Are all variables in Python "objects"?
[14:26:25] <han-solo> yes
[14:26:28] <Masklin__Gurder> I haven't yet understood what an "object" is, really.
[14:26:40] <Masklin__Gurder> han-solo: What does a non-object variable look like?
[14:26:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:26:59] <han-solo> say, `integer` in java ?
[14:27:06] <han-solo> or in c++, i guess
[14:27:09] <Masklin__Gurder> han-solo: I don't know java, not sure what that means
[14:27:18] <Masklin__Gurder> I know some Fortran, and Python and Bash fairly well.
[14:27:21] <han-solo> it's a primitive type
[14:27:26] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[14:27:30] <Masklin__Gurder> So a "type" is not an object?
[14:27:40] <han-solo> in python yes
[14:27:45] <avu> Masklin__Gurder: there is no such thin in Python, every variable is always a label attached to an object. Some other languages distinguish between "primitive" types and objects but Python does not.
[14:27:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:27:55] <han-solo> i mean, type is also an object
[14:28:01] <avu> Masklin__Gurder: in Python, even a type (or class) is an object
[14:28:11] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[14:28:20] <Masklin__Gurder> Hmmm
[14:28:29] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:41ec:2350:c309:7ef5) (Ping timeout: 256 seconds)
[14:28:30] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[14:28:32] *** Quits: mohammad5305 (~mohammad@94.24.20.27) (Ping timeout: 250 seconds)
[14:28:34] <Masklin__Gurder> But what is an object?
[14:28:41] <Masklin__Gurder> Say I write  foo="bar"
[14:28:45] <Masklin__Gurder> Where is the object?
[14:28:58] <kosh> the object is the string "bar"   and foo is a label for it
[14:29:00] <avu> Masklin__Gurder: "bar" creates an object of type str
[14:29:37] <Masklin__Gurder> Okay
[14:29:39] <matsaman> Masklin__Gurder: writing a language/interpreter?
[14:29:51] <Masklin__Gurder> Is there any language for which foo="bar" does not involve an object?
[14:30:02] <avu> Masklin__Gurder: yes, C for example
[14:30:35] <Masklin__Gurder> matsaman: No I just figured it's time to figure some basic things out that I've ignored so far
[14:30:49] <Masklin__Gurder> avu: Alright, so what's the difference between C's "bar" and Python's "bar"?
[14:31:03] <Masklin__Gurder> What makes the object an "object"?
[14:31:25] <avu> Masklin__Gurder: hard to explain without you knowing anything about C
[14:31:40] <Masklin__Gurder> Bummer
[14:31:43] <novns> Masklin__Gurder, there are no objects in C
[14:31:46] <avu> Masklin__Gurder: the differences are not that important anyway I would say. If you're learning Python, learn Python's semantics
[14:32:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[14:32:42] <avu> Masklin__Gurder: and in Python, there's only objects and objects are things that always have exactly one type and in the general case have attributes (like methods for example)
[14:33:11] <Yhg1s> Masklin__Gurder: what makes it an object is how Python treats it. What you can do with it in Python.
[14:33:13] <han-solo> generally an object is something that have attributes and methods, i guess
[14:33:48] <avu> methods are attributes
[14:33:56] <Yhg1s> Masklin__Gurder: Python doens't have variables-as-containers the way C does; each thing is an object, which means it has a type and can be passed around. In C terms, you can think of Python variables to all be pointers to structs.
[14:34:50] <avu> again, I don't thin comparisons to C are useful when talking to somebody who doesn't know C. Sorry I started that. :)
[14:34:54] <Masklin__Gurder> Okay I think I'll need to google this...
[14:34:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:35:21] <Masklin__Gurder> Thanks everyone
[14:36:07] *** Joins: Klinda (~superleag@user/klinda)
[14:36:41] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8148:10b0:e607:d8ac) (Quit: Leaving)
[14:36:59] *** Joins: vats (~vats@103.16.30.101)
[14:37:24] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[14:38:42] *** Quits: han-solo (~hanish@user/han-solo) (Killed (NickServ (GHOST command used by hanish!~hanish@178.248.114.121)))
[14:39:27] *** Joins: han-solo (~hanish@user/han-solo)
[14:42:12] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[14:42:36] <ens> if i make a pull request for a feature branch can i still keep working on the branch afterwards and the PR will only pull the commits up to the time i made the PR?
[14:44:10] <BtbN> not a python question
[14:44:19] <BtbN> if you mean github, anything you push to the PR branch is part of the PR.
[14:44:25] *** Joins: Enitin (~Enitin@82.180.145.226)
[14:44:58] <ens> thanks BtbN. sorry i didn't know where else to appropriately ask.
[14:45:12] <jinsun> ##github or maybe #git
[14:46:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:47:36] <jinsun> Masklin__Gurder: in python object is just a base class that all other classes inherit from, so if you don't know or care what type of a variable is, you call it object
[14:47:36] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 250 seconds)
[14:47:37] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[14:47:56] <rubin55> Masklin__Gurder: One way you could look at it, is that in languages that treat, say, foo="bar" not as an object, foo is simply a pointer to a  memory address + length indicator where you would find the characters b, a, r. If a language treats something as an object, that means it usually points to a more complex structure that can have all kinds of handy behaviour (methods, things to execute) and (meta)data (extra attributes)
[14:48:32] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[14:48:36] *** Joins: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt)
[14:49:38] *** Joins: mohammad5305 (~mohammad@94.24.20.27)
[14:50:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[14:50:05] <Masklin__Gurder> Ahhh
[14:50:16] <Masklin__Gurder> Yeah okay that clears it up
[14:50:34] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[14:51:00] <Masklin__Gurder> So non-objects are just a length of adjacent memory bits
[14:51:18] <Masklin__Gurder> ... pointed to with a variable
[14:52:38] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[14:52:58] <Masklin__Gurder> ... which makes sense since people seem to have various ideas of what constitutes an object, I mean objects can be simple or very complex so it's a fluid concept kind of.
[14:53:04] *** Joins: PaterTemporalis (~woooopsie@bl21-200-69.dsl.telepac.pt)
[14:54:08] *** Joins: Guest76 (~textual@85.191.185.246)
[14:54:47] *** Quits: Guest76 (~textual@85.191.185.246) (Client Quit)
[14:55:06] *** Joins: phage (~phage@85.191.185.246)
[14:55:46] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[14:55:46] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[14:55:46] *** finn_elija is now known as FinnElija
[14:57:46] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:e0b2:13fd:c1c1:aedf)
[14:57:52] *** Joins: georgios (~georgios@user/georgios)
[15:01:17] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 240 seconds)
[15:02:24] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[15:02:26] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Quit: Goodbye)
[15:03:32] *** Quits: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[15:03:33] *** Quits: vats (~vats@103.16.30.101) (Ping timeout: 252 seconds)
[15:03:48] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[15:03:55] *** Joins: sr71919 (~sr71919@183.82.29.150)
[15:04:37] *** Quits: mohammad5305 (~mohammad@94.24.20.27) (Ping timeout: 240 seconds)
[15:04:54] *** Quits: sr71919 (~sr71919@183.82.29.150) (Remote host closed the connection)
[15:04:54] *** Quits: kuter (~kuter@public-gprs523036.centertel.pl) (Quit: Lost terminal)
[15:05:11] *** Joins: sr71919 (~sr71919@183.82.29.150)
[15:05:12] *** Joins: kuter (~kuter@public-gprs523036.centertel.pl)
[15:06:19] *** Joins: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[15:06:37] *** Joins: mohammad5305 (~mohammad@2.180.94.190)
[15:06:52] *** Quits: mohammad5305 (~mohammad@2.180.94.190) (Remote host closed the connection)
[15:09:51] *** Quits: sr71919 (~sr71919@183.82.29.150) (Ping timeout: 256 seconds)
[15:10:54] *** Quits: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:11:10] *** Joins: rond_ (~rond_@90.254.208.190)
[15:11:26] *** Joins: Coniass (~quassel@2a03:4000:57:afc:5883:e3ff:fee1:8fee)
[15:15:26] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:15:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:17:33] *** Joins: darksun (~darksun@user/darksun)
[15:19:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[15:20:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:20:11] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz) (Remote host closed the connection)
[15:23:50] *** Quits: Babar (~Babar@171.233.210.64) (Killed (iridium.libera.chat (Nickname regained by services)))
[15:23:51] *** Joins: Babar (~Babar@171.233.210.64)
[15:24:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:27:22] *** Quits: death916 (~Username@68.255.157.200) (Ping timeout: 260 seconds)
[15:28:06] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:28:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[15:28:24] *** Joins: pvergain (~Thunderbi@91-168-140-26.subs.proxad.net)
[15:28:32] *** Quits: pulsar12 (~quassel@a79-169-140-39.cpe.netcabo.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:29:12] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:30:29] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:30:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:32:03] *** Joins: zeden (~zeden@user/zeden)
[15:32:09] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz)
[15:32:43] *** Joins: bloody (~bloody@user/bloody)
[15:32:46] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[15:33:17] *** Joins: ocramoi (~ocramoi@143.107.231.30)
[15:33:37] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:34:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:35:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:35:29] *** Joins: CombatVet_ (~c4@user/combatvet)
[15:36:02] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[15:36:19] *** CombatVet_ is now known as CombatVet
[15:36:20] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[15:36:28] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[15:37:01] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:37:27] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:38:08] *** Joins: phage (~phage@85.191.185.246)
[15:39:03] *** Joins: moritz[m]123 (~moritzhiv@2001:470:69fc:105::1:db3c)
[15:39:03] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[15:39:26] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:39:36] *** Quits: adeliktas (~adeliktas@i59F5FD1E.versanet.de) (Ping timeout: 250 seconds)
[15:39:43] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:40:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:43:49] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:45:22] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:45:57] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Quit: Leaving)
[15:46:26] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[15:46:45] *** Joins: Gerula (~Gerula@user/gerula)
[15:47:04] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[15:47:06] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[15:47:37] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[15:49:56] *** Quits: ocramoi (~ocramoi@143.107.231.30) (Quit: WeeChat 2.9)
[15:50:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:51:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:51:39] *** Joins: dez (uid92154@user/dez)
[15:53:07] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 268 seconds)
[15:53:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[15:53:36] *** Quits: rtsn (~nstr@h-98-128-229-174.NA.cust.bahnhof.se) (Remote host closed the connection)
[15:53:49] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:54:31] *** Quits: death916_ (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[15:55:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:55:20] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[15:55:32] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:55:45] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[15:55:48] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 252 seconds)
[15:57:03] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:57:37] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[15:58:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:58:35] *** Quits: Guest7375 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[15:58:39] *** Joins: phage (~phage@85.191.185.246)
[15:58:54] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[15:59:08] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:59:15] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[16:00:04] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[16:00:34] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[16:00:38] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:600e:3a:7a9b:efea)
[16:00:44] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:00:49] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[16:01:32] *** Joins: a0_12 (~a0_12_2@87.116.164.185)
[16:03:15] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[16:03:41] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:03:41] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:03:45] *** Quits: a0_12 (~a0_12_2@87.116.164.185) (Quit: Leaving)
[16:03:56] *** Quits: FaV1r3s (~localhost@user/fav1r3s) (Quit: ZNC - https://znc.in)
[16:05:27] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:05:36] *** Joins: antaresgades94 (~antaresga@ieocadiz.cd.ieo.es)
[16:05:37] *** Quits: antaresgades94 (~antaresga@ieocadiz.cd.ieo.es) (Client Quit)
[16:06:43] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:604f:af1b:b7ac:d1bb)
[16:07:34] *** Joins: Falco (~Falco@gtlvpn.gastops.com)
[16:07:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:08:01] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:08:08] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[16:09:32] *** Joins: phage (~phage@85.191.185.246)
[16:09:40] *** Joins: Guest7375 (~vit@chello085216193138.chello.sk)
[16:10:47] <Falco> I'm having issues with this code: https://bpa.st/F4OQ whenever I end up calling this method, this ends up getting returned: <bound method job.SH of <classes.job object at 0x000002281BF0B520>> instead of an integer like I expect... now I've been looking into it a bit but can't seem to figure it out and was wondering if anyone knew
[16:11:35] <avu> that's the most creative way to check if a value is None that I've seen to date :)
[16:11:58] *** Quits: DK3 (~DK3@user/DK3) (Ping timeout: 272 seconds)
[16:12:07] <nedbat> Falco: ` if self.QH is not None: `
[16:12:13] <Falco> lol
[16:12:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:13:19] <Falco> avu I'm doing it this way since my whole program I need to compare various object types...
[16:13:39] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[16:13:45] <avu> Falco: regarding your question, the result of the calculation on line 4 depends on the types of self.QH and self.AH
[16:13:46] <jinsun> to call the method you need to have () after the method name, obj.SH() and not obj.SH
[16:13:48] <Falco> I guess I could do if obj == obj() but like... shhhh
[16:13:55] *** Joins: lakrass (~lakrass@user/lakrass)
[16:14:08] *** Joins: shad (~shad@user/shad)
[16:14:24] <avu> Falco: there is the isinstance() function if you need to check the types of things more generically
[16:14:29] <Falco> jinsunI do, don't worry
[16:14:43] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:14:48] <Falco> avu I'm 3 months into writing this program, it's staying this way lol
[16:15:03] *** Joins: zmt00 (~zmt00@user/zmt00)
[16:15:36] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:15:42] *** Joins: FaV1r3s (~localhost@2001:41d0:8:99ea::1)
[16:15:42] *** Quits: FaV1r3s (~localhost@2001:41d0:8:99ea::1) (Changing host)
[16:15:42] *** Joins: FaV1r3s (~localhost@user/fav1r3s)
[16:15:46] <avu> Falco: the returned value you're getting suggests jinsun is right though and you're looking at the result of evaluating `obj.SH` instead of `obj.SH()`
[16:16:22] <Falco> Ah really? I'll look a little harder thanks
[16:16:51] *** Joins: cdown_ (~cdown@188.214.11.14)
[16:17:01] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4962:7b82:a726:2c3d)
[16:18:10] <Falco> Hmm forgot it in my print statement, my var assignment was good
[16:18:32] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[16:19:27] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[16:19:27] *** cdown_ is now known as cdown
[16:19:28] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[16:21:46] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[16:23:17] *** Joins: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com)
[16:23:26] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[16:23:32] <trafficjam> what algorithm can i use to run .map on a nested list?
[16:23:43] <trafficjam> s/list/object
[16:24:25] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:24:43] *** Joins: dfinr (~dfinr@user/dfinr)
[16:25:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:25:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:28:23] *** Quits: chele_ (~chele@user/chele) (Ping timeout: 256 seconds)
[16:28:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:29:03] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:29:03] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:29:15] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[16:29:18] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[16:29:51] *** Joins: chele (~chele@user/chele)
[16:30:21] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[16:30:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[16:31:48] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[16:32:00] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4998:5f5e:9ad1:1206)
[16:32:00] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4998:5f5e:9ad1:1206) (Changing host)
[16:32:00] *** Joins: skapata (~Skapata@user/skapata)
[16:33:36] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:34:17] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[16:34:25] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:34:37] <Wooble> depends on the type of object and how deeply it's nested.
[16:35:04] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[16:35:18] <Wooble> (and what you even mean by mapping over a nested object; likely to want to flatten it first?)
[16:35:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:35:39] *** Quits: QuHaR (~QuHaR@192.162.148.48) (Quit: WeeChat 3.3)
[16:36:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:36:36] *** Joins: polyrob_ (~rob@user/polyrob)
[16:36:37] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[16:37:21] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[16:38:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:38:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:38:58] *** Quits: ymwm (~yingmanwu@110.85.123.161) (Ping timeout: 250 seconds)
[16:39:02] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[16:39:02] *** polyrob_ is now known as polyrob
[16:39:25] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[16:39:56] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:40:54] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[16:41:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:41:32] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:42:25] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[16:42:59] *** Joins: audio (~audio@user/audio)
[16:43:00] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[16:43:16] *** Joins: phage (~phage@85.191.185.246)
[16:43:53] <audio> can someone tell me why filepath is a list of the characters in the string `filepath` which is given to make_spectrograms as a parameter (should be an absolutely path to a dir) https://bpa.st/YPNQ
[16:44:10] <audio> i'm just learning how to use concurrent.futures
[16:44:33] *** Quits: Falco (~Falco@gtlvpn.gastops.com) (Quit: Client closed)
[16:44:46] *** fuzzykef is now known as furrykef
[16:45:19] <Wooble> audio: the second argument to map should be an iterable, each item of which will run through the function.
[16:45:43] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[16:46:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:46:58] <matsaman> for i in 'string': print(i)
[16:47:22] <matsaman> for i in [1,2,3]: print(i)
[16:47:28] <csm3105> Hi guys, i'm trying to connect to my postgresql db with sqlalchemy and i'm perfoming the connection as follows https://bpa.st/JA6Q
[16:47:38] <csm3105> always returns that the connection has been established correctly, even if you enter the wrong credentials, why?
[16:47:40] <Wooble> audio: you probably want something like https://bpa.st/IMAA
[16:48:06] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[16:48:55] <Wooble> csm3105: create_engine doesn't actually connect.
[16:50:20] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:51:03] <wyre> what module do you recommend me for credentials managing? I was using this one https://pypi.org/project/credentials but has no releases and it's a bit mess
[16:51:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:51:47] *** Joins: bjelleklang (~c@wikipedia/Bjelleklang)
[16:51:48] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:51:50] <audio> Wooble, thx
[16:52:24] <wyre> I mean it has no releases in its git upstream repository https://github.com/OniOni/credentials
[16:53:22] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[16:54:34] <enoq> everytime I do anything with lists in map, I'm disappointed
[16:54:42] <enoq> s/map/python
[16:54:59] <matsaman> how so?
[16:55:05] <enoq> why are there no streams/sequences in python
[16:55:07] *** Quits: Syzygy__ (~Syzygy@178-190-83-4.adsl.highway.telekom.at) (Remote host closed the connection)
[16:55:10] *** Joins: mmdbalkhi (~mmdbalkhi@2.186.248.32)
[16:55:16] <matsaman> enoq: as there are in what?
[16:55:23] *** Joins: vlado (~vladoski@93-47-225-67.ip114.fastwebnet.it)
[16:55:27] *** Joins: phage (~phage@85.191.185.246)
[16:55:28] *** Quits: mmdbalkhi (~mmdbalkhi@2.186.248.32) (Client Quit)
[16:55:32] <enoq> something like: [1,2,3, 3, 2, 2, 3].group_by(lambda x: x)
[16:55:54] <enoq> map/filter/group by/sum chained operations
[16:56:03] *** Quits: vlado (~vladoski@93-47-225-67.ip114.fastwebnet.it) (Client Quit)
[16:56:22] <csm3105> Wooble, reading the documentation i undertstood that create_engine create the connection...so, what should I use then?
[16:56:22] *** Joins: vlado (~vladoski@93-47-225-67.ip114.fastwebnet.it)
[16:56:23] <enoq> all there is are list comprehensions which quickly become unreadable
[16:56:39] <matsaman> probably comes down to python's significant whitespace
[16:56:57] <Wooble> wut
[16:57:04] *** Quits: Chex (~Chex@user/chex) (Remote host closed the connection)
[16:57:10] <wyre> csm3105, probably you will have to use some method from the create_engine() object? ðŸ¤”
[16:57:32] <hodapp> there are APIs that do this, I'm fairly sure
[16:57:43] <Wooble> enoq: use itertools; sequence types don't have every conceivable method attached to them, we use functions instead.
[16:57:52] *** Joins: KomeilParseh (~Thunderbi@2.186.248.32)
[16:58:02] *** Quits: vladoski (~vladoski@2001:b07:add:d406:f809:685c:190e:d2eb) (Ping timeout: 250 seconds)
[16:58:04] <enoq> yep, functions don't scale because paranethesis just keep growing and growing
[16:58:22] <enoq> map(filter(filter(map()))) isn't readable
[16:58:32] <Wooble> and I was going to guess you came from Lisp until you said that
[16:58:38] <enoq> especially because the first evaluated is the most inner expression
[16:58:40] <matsaman> I mean, it's not as left-to-right as English, but it is ultimately the same as methods
[16:58:47] *** Joins: davidd (~hay_sup@user/memorious)
[16:59:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:59:10] <matsaman> a lot of languages have that issue, though
[16:59:31] <audio> Wooble, this only gets files for one dir in that parent dir
[16:59:42] *** Joins: tarel2 (~tarel2@2600:8801:1881:7300::a288)
[17:00:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:00:16] <Wooble> audio: it should be running a separate map for each directory the way your outer loop is. You could build a list/generator of all the files and map them all at once instead.
[17:00:20] <davidd> I'm writing some async code that calls out to a package function that I can't change that's defined without async. I want to await this function anyway. is calling the function the same as if it were defined with async and awaiting it?
[17:00:26] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[17:00:53] <enoq> what I want is something like
[17:00:57] <enoq> [1, 2, 3, 2, 3, 4, 2, 3, 4, 3, 4]
[17:01:00] <enoq>     .group_by(lambda x: x)
[17:01:02] <enoq>     .map(lambda key, values: (key, sum(values)))
[17:01:02] *** Joins: strk (~strk@user/strk)
[17:01:18] <Wooble> davidd: in that it will block until it returns, yes-ish?
[17:01:30] <davidd> yes, exactly
[17:01:51] <strk> print('%s', v) # prints `b'value'` with python3 while it printed just `value` with python2, how to fix/adapt ?
[17:03:01] <Wooble> strk: depends. Is it a bytestring for a good reason? Is it text you could .decode() first?
[17:03:02] <strk> sorry, I mean print('%s' % v)
[17:03:05] <grym> enoq: so itertools.groupby...
[17:03:17] <grym> not everything has to be a fluent API
[17:03:48] <strk> not sure it's a good reason, it comes from the `ldap` module, it's a query from ldap
[17:03:58] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Ping timeout: 260 seconds)
[17:04:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:04:19] *** Quits: KomeilParseh (~Thunderbi@2.186.248.32) (Quit: KomeilParseh)
[17:04:22] <Wooble> strk: you can *probably* just .decode() it
[17:04:23] <tarel2> I'm running Manjaro armÂ  on pine phone ,Â  I thought why not make mobile apps, is anything for interfacing withÂ  a 4g radio , GSP?
[17:04:23] <strk> I guess it's for unicode
[17:04:55] *** Joins: KomeilParseh (~Thunderbi@2.186.248.32)
[17:05:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:05:11] <strk> not sure though
[17:05:13] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Remote host closed the connection)
[17:05:37] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 240 seconds)
[17:05:38] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:05:41] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[17:05:50] <Wooble> strk: in LDAP v3 it should be giving utf-8; I *think* in earlier versions there's no way to tell what encoding you have so the module plays it safe and gives you back the bytes
[17:06:02] *** Quits: Midjak (~Midjak@82.66.147.146) (Remote host closed the connection)
[17:06:16] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Max SendQ exceeded)
[17:06:41] *** Joins: iob (~iob@nat1.prg.suse.com)
[17:06:43] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[17:06:47] <enoq> in Kotlin I'd use https://dpaste.com/AJJAL8DM8 which is pretty obvious
[17:07:09] <Wooble> ok, well python isn't kotlin and isn't going to be.
[17:07:24] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[17:07:27] <enoq> right, but Python could at least add some fluent APIs
[17:07:38] <enoq> especially because these things give you stuff like stream fusion
[17:07:50] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:07:51] *** Joins: andreasbuhr (~quassel@p549db53a.dip0.t-ipconnect.de)
[17:07:55] <strk> Wooble: would  utf-8 be still returned as a bytestring ?
[17:08:14] <Wooble> strk: yes, but you can .decode('utf-8') on it to get a str
[17:08:19] <strk> or why would I get the `b'val'` representation ?
[17:08:24] <strk> ok
[17:08:36] <jinsun> enoq: you can do fancy stuff with operator overloading, you might like this https://sspipe.github.io/
[17:09:12] <enoq> jinsun: yep, that's what I want, it's just a complete abomination
[17:09:22] *** Quits: dfinr (~dfinr@user/dfinr) ()
[17:09:27] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[17:09:37] <enoq> abusing operator overloading that is :)
[17:09:52] <enoq> Django does something similar with sql though
[17:10:10] *** Quits: KomeilParseh (~Thunderbi@2.186.248.32) (Quit: KomeilParseh)
[17:10:19] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[17:10:34] *** Joins: KomeilParseh (~Thunderbi@2.186.248.32)
[17:12:28] <tarel2> astring = "Hello_world!"
[17:12:29] <tarel2> print (astring[3:7:3])
[17:12:37] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[17:12:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:14:04] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[17:14:25] <tarel2> I get this lw, I don't how.Â  it says start , stop and step,Â  so how do I get W
[17:14:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:15:57] <strk> ok, next: cannot pickle '_io.BufferedReader' object
[17:16:08] <strk> I think the object is what cgi.FieldStorage() returns (cgi module)
[17:16:38] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[17:16:46] <strk> statement is: pickle.dump(query_dict, tf, pickle.HIGHEST_PROTOCOL)
[17:16:58] <jinsun> tarel2: astring[3] is l and astring[6] is w
[17:17:00] <tarel2> I guess I get start , and even where to stop but I don't get step.Â  Â I play with the number 1 or 2 , and I don't get the output, where does step start from?atÂ  3?
[17:17:20] *** Joins: jamea (~jamea@177.239.81.39)
[17:17:54] *** Quits: KomeilParseh (~Thunderbi@2.186.248.32) (Quit: KomeilParseh)
[17:17:55] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[17:18:20] *** Joins: mmdbalkhi (~Thunderbi@2.186.248.32)
[17:18:38] <jinsun> tarel2: [3:7:3] means start at 3 and then keep adding 3 till you reach 7, so you only get 3 and 3+3, the next step 6+3 would "reach" 7, so it stops there
[17:18:59] <marduk> ^
[17:19:01] <SnoopJ> tarel2, step doesn't "start" anywhere. This operation starts with the index `start` and advances to `stop`, advancing by `step` each time it goes to get the next entry.
[17:19:06] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[17:19:06] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::c)
[17:19:07] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1db4-03cc-2fad-93fa.res6.spectrum.com)
[17:19:16] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9) (Ping timeout: 250 seconds)
[17:19:24] *** Joins: R2Racoon (~R2Racoon@181.62.52.196)
[17:19:38] *** Joins: vats (~vats@103.16.30.101)
[17:19:48] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[17:19:59] <SnoopJ> if you look at the "Sequences" section of this part of the data model, it has an explanation: https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy
[17:20:03] <strk> what's the python3 way to store and load the cgi.FieldStorage() ?
[17:20:11] *** Joins: cdown_ (~cdown@188.214.11.14)
[17:20:49] <jinsun> cgi.FieldStorage is going away btw, it is part of the dead batteries PEP
[17:21:00] <strk> oh
[17:21:05] <jinsun> will be removed in 3.13
[17:21:06] <strk> more things to change
[17:21:18] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[17:21:23] <Wooble> tbh they should throw away the entire cgi library but alas...
[17:21:27] <strk> I'm full of lines using query_dict['something'].value
[17:21:39] <strk> what would you replace it with Wooble ?
[17:21:51] <Wooble> wsgi, 20 years ago.
[17:22:00] <strk> I'm looking for the least change
[17:22:18] <Wooble> oh, they *are* getting rid of all of cgi.
[17:22:20] <matsaman> no way, cgi is great
[17:22:29] <marduk> ultimately it comes from the http request which is strings (maybe bytes) so you can always store the string.
[17:22:29] <strk> wsgi I was looking at, but it didn't sound like an easy switch
[17:22:31] <Wooble> CGI wasn't even great in 1995.
[17:22:37] <jinsun> the entire cgi library is going way I think https://peps.python.org/pep-0594/#cgi
[17:22:56] <marduk> unless it's a stream
[17:22:58] <strk> well this is legacy code, I'm just trying to adapt
[17:23:04] <matsaman> ridiculous
[17:23:05] *** Joins: Enitin (~Enitin@82.180.145.226)
[17:23:11] <jinsun> for cgi.FieldStorge you have to either use  urllib.parse.parse_qsl if that works, or use https://pypi.org/project/multipart/
[17:23:15] <matsaman> it's one thing if it has problems and nobody want sto maintain it, that's normal
[17:23:19] <strk> `cannot pickle '_io.BufferedReader' object` suggests it's a stream
[17:23:22] <Wooble> in 2000 the cgi module was called "designed poorly and are now near-impossible to fix"
[17:23:25] <matsaman> getting rid of it because you want people to use wsgi instead is silly, though
[17:23:30] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:604f:af1b:b7ac:d1bb) (Read error: No route to host)
[17:24:10] <marduk> I think they're getting rid of it because nobody loves it (and by "nobody" i mean maintainers and by "love" i mean wants to maintain).
[17:24:21] <strk> what's returned from cgi.FieldStorage() can be used like a dict, and that's how this code uses it
[17:25:09] <matsaman> first it says it's "inefficient" and then it says some other thing said it needed "fixing". But those are separate things
[17:25:22] <matsaman> marduk: yeah that's totally normal
[17:25:39] <matsaman> but also pretty sad
[17:26:09] <marduk> Yeah, it's called software.
[17:26:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:26:20] <Wooble> I mean feel free to maintain it forever on pypi?
[17:26:21] <SnoopJ> much ado about nothing, check out an old revision if you find yourself getting maudlin about it
[17:26:27] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[17:26:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:26:41] *** Joins: guest29032 (~guest2903@223.179.139.248)
[17:27:17] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[17:28:56] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[17:29:25] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[17:29:32] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[17:29:33] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Remote host closed the connection)
[17:29:36] <matsaman> marduk: for sure
[17:29:40] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:29:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:29:49] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:30:12] *** Quits: bjelleklang (~c@wikipedia/Bjelleklang) (Quit: Leaving)
[17:30:35] *** Quits: saroy (~Sandipan@43.252.250.67) (Remote host closed the connection)
[17:30:53] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[17:30:53] *** Joins: death916 (~death916@user/death916)
[17:30:54] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz) (Quit: Leaving)
[17:31:10] *** Joins: alex11 (~alex11@user/alex11)
[17:31:25] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Remote host closed the connection)
[17:31:50] <Wooble> strk: FieldStorage keeps a reference to the filelike the data comes from for, uh, reasons? Why do you want to pickle it?
[17:31:50] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:32:27] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[17:33:42] <strk> Wooble: I want to save the user input in a file, for reusing it later (email confirm)
[17:33:43] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:604f:af1b:b7ac:d1bb)
[17:34:03] <strk> all I need is a dictionary I guess, at least, that's how I'm using it
[17:34:44] <jinsun> doesn't sound like something that you should use pickle for
[17:35:05] <Wooble> (neither does anything else, tbh)  *hides*
[17:35:36] <strk> I *thinkI* pickle was suggested to me in this channel, long time ago :)
[17:35:59] <strk> it's fine to change to any other form of serialization
[17:36:02] <jinsun> make a dict out of it and json.dump I guess, I would be dict[str, str] I guess which shouldn't cause any problems
[17:36:18] <marduk> isn't fieldstorage already a mapping (i forget. long time since i worked with it)?
[17:36:22] <strk> jinsun: ideas on how to make a dict out of FieldStorage() ?
[17:36:42] <Wooble> marduk: it's a horrifying mess that has __getitem__
[17:36:54] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:36:54] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:37:05] *** Joins: Sylhouette (~johan@87.233.185.201)
[17:37:06] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[17:37:06] * strk finds examples on the web
[17:37:07] <Wooble> also, .keys() but not .items() :/
[17:37:10] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:37:11] *** Quits: davidlowryduda (~davidlowr@73.61.8.192) (Ping timeout: 256 seconds)
[17:37:25] <marduk> Well if it has .keys() then there you go
[17:37:32] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 252 seconds)
[17:37:38] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:37:52] <marduk> d = {k: fs[k] for k in fs.keys()}
[17:38:06] *** Quits: chele (~chele@user/chele) (Ping timeout: 252 seconds)
[17:38:17] <jinsun> it has .getfirst and .getlist, so getitem does .getfirst I guess, and you want .getlist if you want to save everything
[17:38:21] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:38:23] *** Joins: FluffyMask (~masque@user/fluffymask)
[17:38:25] <Wooble> as a bonus each key can have multiple values
[17:38:40] <marduk> Yeah but that's "normal", right?
[17:38:45] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[17:38:50] <strk> bah, still not 0-changes solution, as all the lines I have are using .value on those dict values (for no reason)
[17:38:55] <marduk> isn't it always a list... (why are we using cgi???!!!)?
[17:39:10] <strk> I don't think we're using lists btw
[17:39:18] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:b19d:d8f1:1756:fb98)
[17:39:20] <Wooble> marduk: no, if there's one value it gaves it back as not a list. https://github.com/python/cpython/blob/3.10/Lib/cgi.py#L529
[17:40:08] <Wooble> (do not look directly into the source code. I may need a nap after seeing how they define class attributes randomly in the middle of the method defs.)
[17:40:19] <strk> bah, the example cgiFieldStorageToDict function also returns a dict whose values are MiniFieldStorage
[17:40:23] <strk> extra complex for no reason
[17:40:27] <marduk> Ah. TBH I don't think I've worked with cgi module since Python 1.x.  But as I said before the request is a string/bytes and they're already plenty of libs for parsing HTTP requests that are better than cgi arent' there?
[17:40:57] <Wooble> marduk: yes we've already been over the "don't use cgi in 2022" lecture :)
[17:41:10] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[17:41:17] <marduk> Ok
[17:41:18] <Wooble> also excuse me while I get off your lawn :)
[17:41:36] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[17:41:50] * strk needs a better plan here
[17:42:01] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[17:42:18] <Wooble> (I'm old enough to have used python 1.x, although I'd never even heard of python back then)
[17:42:27] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[17:43:26] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:43:39] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[17:43:59] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:43:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:44:07] *** Joins: darksun (~darksun@user/darksun)
[17:44:07] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:44:08] *** Parts: trafficjam (~qubes@119-12-218-129.dynamic.ipstaraus.com) ()
[17:44:17] *** Quits: tracey (~trace@user/trace) (Remote host closed the connection)
[17:44:36] <CrtxReavr> I think 2.4 is the oldest I've used.
[17:44:41] *** Quits: mmdbalkhi (~Thunderbi@2.186.248.32) (Ping timeout: 252 seconds)
[17:44:49] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[17:44:53] <CrtxReavr> Though I think the first "class" I took was written to 2.2.
[17:45:08] <CrtxReavr> Was a free Google video course.
[17:45:09] <Wooble> I'm just realizing I may have actually used 1.x in Zope
[17:45:23] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[17:45:49] <marduk> I think the first time I worked with Python was ~1.3
[17:45:53] *** Joins: plastico (~plastico@neomutt/plastico)
[17:46:09] <marduk> At least my first python book seems to suggest that
[17:47:17] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:e0b2:13fd:c1c1:aedf) (Read error: Connection reset by peer)
[17:47:32] *** Joins: NeoCore (~neocore@37.120.204.165)
[17:47:57] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[17:48:16] <strk> I'm old enough to hate python, as the only scripting language which broke backward compatibility
[17:48:24] <strk> (I might have been lucky)
[17:48:52] *** Joins: Falc (~Falc@193.191.206.243)
[17:49:21] <BtbN> perl did it much more recently
[17:49:45] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[17:50:00] <grym> backcompat gets broken all the time
[17:50:05] <rvalue> strk: 2 to 3? isnt any major upgrade exactly that?
[17:50:30] <han-solo> i think i started with 2.7 or something, but i remember working with some that didn't have `json` module and `else` was not a thing `try:..except:..else:`
[17:50:37] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[17:50:41] <han-solo> maybe 2.4, 2.3 or something
[17:50:48] <strk> BtbN: really ? I must have missed it, or maybe I was disciplined enough not to use much non-core modules
[17:51:14] <BtbN> You can't drag bad legacy along indefinitely. Got to clean up sometime
[17:51:20] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[17:51:24] *** Joins: jpn (~jpn@user/jpn)
[17:51:32] <strk> yeah, maybe I should really go to wsgi or what it is called
[17:51:38] <strk> the whole thing is behind a proxy anyway
[17:51:54] <strk> so using only python would get rid of an additional http server
[17:52:42] <BtbN> uwsgi isn't meant to be used standalone
[17:52:48] <BtbN> you put it behind apache with mod_proxy_uwsgi
[17:52:56] <BtbN> but it avoids loading an interpreter into httpd
[17:53:18] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[17:53:33] *** Joins: chele (~chele@user/chele)
[17:54:57] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:55:03] <strk> ok so no use at the moment
[17:55:20] <strk> I just need python3 compatibility for this perfectly working python2 thingy
[17:55:23] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[17:55:28] *** Joins: fanis30 (~anon@adsl-138.37.6.0.tellas.gr)
[17:55:50] *** Quits: death916 (~death916@user/death916) (Ping timeout: 268 seconds)
[17:56:01] <strk> for some reason FieldStorage() used to be serializable via pickle in python2 and stopped being so in python3
[17:56:05] <strk> that's the current obstacle
[17:56:34] *** Quits: chele (~chele@user/chele) (Client Quit)
[17:56:41] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[17:58:05] *** Joins: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de)
[17:58:06] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[17:58:45] *** Joins: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de)
[17:58:57] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[17:59:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:00:15] <LuxuryMode> It appears that after daylight savings time began, my scheduled Celery tasks are running an hour behind. For example, a task that runs using `crontab(minute=30, hour=6)` will run at 7:30 instead of 6:30. One suggestion I've seen it to use the `nowfun` argument to `crontab` and supplying a function that returns `datetime.datetime.now(pytz.timezone('America/New_York'))` Anyone know if this is a viable approach?
[18:00:54] <strk> urllib known to be better ?
[18:00:56] <tarel2> Having the pine phone , with python is there away to use a 4g radio and gps? or do you need to make system call?
[18:00:58] <strk> because... module 'urllib' has no attribute 'quote_plus'
[18:01:40] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[18:01:53] <SnoopJ> strk, better than what?
[18:02:01] <strk> than cgi (someone said)
[18:02:13] <SnoopJ> they don't do the same things
[18:02:34] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[18:02:40] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[18:02:40] *** Joins: death916 (~death916@user/death916)
[18:03:21] <jinsun> it is not "better" it may be able to do the same thing as cgi.FieldStorage in some cases, according to the PEP https://peps.python.org/pep-0594/#cgi
[18:03:39] <han-solo> `urllib.parse.quote_plus`
[18:03:52] *** Joins: KomeilParseh (~Thunderbi@2.186.248.32)
[18:03:57] <jinsun> and you have to import from urllib.parse can't just import urllib for that
[18:05:30] <strk> urllib.parse.quote_plus works
[18:05:32] <strk> thanks
[18:05:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:06:14] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz)
[18:06:22] *** Joins: digicyc (aarona@user/digicyc)
[18:06:25] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[18:07:47] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 256 seconds)
[18:07:53] *** Joins: bahamas (~lucian@86.120.77.115)
[18:08:16] *** Quits: Amadiro__ (~Amadiro@45.154.138.41) (Ping timeout: 245 seconds)
[18:08:37] *** Joins: hball (~hball@55.140.133.37.dynamic.jazztel.es)
[18:09:06] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:09:46] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 272 seconds)
[18:10:20] <Falc> LuxuryMode: sounds reasonable, if that's the API...
[18:10:20] *** Quits: hball (~hball@55.140.133.37.dynamic.jazztel.es) (Client Quit)
[18:10:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:11:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:12:10] *** Joins: Jigsy (~Jigsy@user/jigsy)
[18:12:28] <graingert[m]> when does `__del__` get called compared to weakref.ref's callback?
[18:12:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:13:06] *** Quits: iob (~iob@nat1.prg.suse.com) (Ping timeout: 268 seconds)
[18:13:17] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[18:13:51] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:14:12] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[18:14:29] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[18:15:30] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Ping timeout: 252 seconds)
[18:16:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[18:16:17] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[18:16:38] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:17:13] *** Joins: millido (~millido@84.210.150.128)
[18:18:04] *** Joins: Blankspace (~Blankspac@user/blankspace)
[18:18:47] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[18:18:48] *** Quits: guest29032 (~guest2903@223.179.139.248) (Quit: Client closed)
[18:22:35] *** Joins: phage (~phage@85.191.185.246)
[18:23:59] <Wooble> graingert[m]: as far as I can tell, there are no guarantees which order you'd get them in.
[18:24:17] <Wooble> (which isn't too surprising since there's no guarantee __del__ will ever actually run at all)
[18:24:42] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:26:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:26:40] *** Quits: antaresgades (~antaresga@ieocadiz.cd.ieo.es) (Quit: Client closed)
[18:28:45] *** Joins: causa_sui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[18:28:48] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[18:29:19] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:29:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:29:52] *** Joins: white2 (~mahengrui@user/mahengrui1)
[18:29:54] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[18:30:15] *** Joins: Enitin (~Enitin@82.180.145.226)
[18:30:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[18:30:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[18:31:31] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[18:31:32] <mav`rik> Is there any tool/library available to take the output from profiling (a pstats file) and create an html report from it (something akin to Perl's nytprofhtml, for example)? I appreciate I can use RSR or KCacheGrind etc., but it would be nice to be able to share profiling info with others without need for installations.
[18:31:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:32:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:32:40] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:33:21] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[18:33:53] *** Joins: Algernon91 (~Algernon6@2a04:cec0:11fb:3264:4965:7a19:35b:7776)
[18:33:55] <Jimmy2027> is it possible to share a python package as binary such that the actual code is hidden?
[18:34:05] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:604f:af1b:b7ac:d1bb) (Read error: Connection reset by peer)
[18:34:14] <han-solo> binary yes
[18:34:52] <CrtxReavr> Well. . . hidden-ish.
[18:35:07] <strk> how do I load (unmarshal) JSON from a file ? I have a filedescriptor
[18:35:11] <Jimmy2027> han-solo: how would that work? Is it possible to  package the precompiled code?
[18:35:13] <CrtxReavr> Decompilers are a thing.
[18:35:16] <han-solo> `json.load(f)`
[18:35:35] <han-solo> Jimmy2027: pyinstaller is a popular tool i think
[18:35:46] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[18:36:12] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[18:36:24] <grym> Jimmy2027: you can package code into a standalone executable.  given enough time and work, reverse engineering is always possible
[18:36:58] <CrtxReavr> han-solo, when was json.load() added?  Always remember having to use json.loads(file.read())
[18:37:05] <Jimmy2027> grym: yup of course :)
[18:37:20] *** Joins: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:4cb3:f97c:a83c)
[18:37:31] <han-solo> CrtxReavr: i think it was always there in the `json` lib
[18:37:38] <han-solo> has always been there*
[18:37:39] <CrtxReavr> o_O
[18:38:05] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:38:05] <phy1729> even there in 2.7
[18:38:10] <grym> if you're going to use .loads, use it in a way that doesn't dangle the fh after, too :)
[18:38:13] <Falc> CrtxReavr: new additions will have a "Added in x.y", I believe
[18:38:27] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[18:38:31] <grym> (i like json.loads(Path(...).read_text()) for this reason)
[18:38:41] *** Joins: beli6147 (~Thunderbi@rrcs-24-173-55-10.sw.biz.rr.com)
[18:39:02] <strk> thanks han-solo
[18:39:16] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:39:17] *** Quits: cowsay-moo (~cowsay-mo@2a0c:f040:0:4356:1015:4cb3:f97c:a83c) (Client Quit)
[18:39:28] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:39:59] <Wooble> Jimmy2027: I recommend finding the article on how DropBox did this, how it was broken, and then just give up.
[18:39:59] <Jimmy2027> grym: the best to protect the code would be to convert it into cython and bundling it with pyinstaller?
[18:40:10] <grym> Jimmy2027: the best way to protect code is to pay a lawyer
[18:40:19] <Jimmy2027> Wooble: haha sounds interesting, will try to find it
[18:40:32] <grym> Jimmy2027: saas can help, too, if that's viable for you
[18:40:51] *** Joins: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it)
[18:40:57] <grym> not without its own tradeoffs, of course
[18:41:03] *** Quits: kuter (~kuter@public-gprs523036.centertel.pl) (Quit: Lost terminal)
[18:41:28] <mav`rik> CrtxReavr: added in 2.6, though the documentation for it then was a little hairy. There's some examples of use of the `load` method there though - https://docs.python.org/release/2.6/library/json.html#module-json
[18:42:48] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[18:43:23] <han-solo> CrtxReavr: https://github.com/python/cpython/blob/90540004d3e1cbc0bd5595838bca3d1970198120/Lib/json/__init__.py#L243 # i'm kinda sure it's even in the svn before they this merge as well
[18:43:54] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:44:47] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[18:45:09] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:45:33] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[18:45:38] *** Quits: Algernon91 (~Algernon6@2a04:cec0:11fb:3264:4965:7a19:35b:7776) (Read error: Connection reset by peer)
[18:45:46] *** Joins: jamea (~jamea@200.68.140.3)
[18:45:53] *** Joins: cruncher (~cruncher@user/cruncher)
[18:45:53] *** Quits: icsdi (~icsdi@net-5-94-129-68.cust.vodafonedsl.it) (Quit: Leaving)
[18:47:13] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:47:35] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[18:47:50] *** xavie is now known as xcombelle
[18:48:06] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[18:48:52] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:4965:7a19:35b:7776)
[18:49:18] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:49:26] <wyre> could I search packages in PyPI with curl?
[18:51:27] <mav`rik> wyre: Use the pypi API maybe? https://warehouse.pypa.io/api-reference/#available-apis-datasets
[18:51:40] <CrtxReavr> han-solo, man. . . now I'm just annoyed that I missed that for so many years.
[18:51:56] <CrtxReavr> First worked with json in 2014.
[18:52:30] <Jong> Any reason __line__ was not made a keyword in python? It would've made printing current line very easy. I wouldn't need to copy and paste code from stack overflow like from inspect import currentframe, getframeinfo etc
[18:52:43] *** Joins: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr)
[18:52:55] <sudorm> hi, do you guys use aws lambda functions?
[18:53:08] <grym> sudorm: Just ask your question. It's the best way to know if anyone can help.
[18:53:13] <sudorm> yep
[18:53:17] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[18:53:26] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[18:53:27] <sudorm> I just created a test helloworld AWS lambda function, it works
[18:53:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:54:00] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Ping timeout: 252 seconds)
[18:54:02] <sudorm> but then how to call it from a standard application? i don't see where to get the URL of the Lambda function. Do we access it with an URL, REST API style?
[18:54:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[18:55:20] <sudorm> join #aws
[18:55:26] <sudorm> sorry ;)
[18:55:27] <jinsun> Jong: logging has a format thing for line numbers %(lineno)d, https://docs.python.org/3/library/logging.html#logrecord-attributes
[18:55:33] <mav`rik> sudorm: "It depends" is sadly the answer. There are many kinds of AWS lambda, from the almost typical "thing accessible via HTTP" through to SQS/SNS event handlers, Lambda@Edge stuff for CloudFront, etc.
[18:55:57] <wyre> mav`rik, thank you; I guess this https://pypi.org/project/pypi-simple/ could also work, ... however I'm wondering if I could just do http requests directly to pypi.org/simple ðŸ¤”
[18:56:06] <sudorm> mav`rik, ok I see! What is the "level 101" way to do it?
[18:56:33] <jinsun> Jong: but it works only for python code I think (same as your inspect based solutions), and python modules may not be python code
[18:56:37] *** Joins: hirgen (~hirgen@cpc120260-heme13-2-0-cust3.9-1.cable.virginm.net)
[18:57:13] <mav`rik> sudorm: Not really a Python question in that case, Python just provides the mechanism to deliver the result, the real question is probably best asked somewhere like #aws, I suspect normally it would be "put it behind an API Gateway"
[18:58:07] <sudorm> mav`rik, thanks for your help! what kind of API gateway? (i'll continue on #aws, thanks)
[18:58:44] <mav`rik> sudorm: https://docs.aws.amazon.com/lambda/latest/dg/services-apigateway.html
[18:59:12] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:59:23] <mav`rik> wyre: Sure, but you run the risk of being blocked, or rate limited, or who knows what else. Why not use the XMLRPC endpoint to make your queries, and get back a machine-readable output?
[18:59:51] *** Joins: filename (~kilitary@188.242.105.134)
[19:00:04] <wyre> XMLRPC?
[19:00:43] *** Joins: test_me (~Thunderbi@softbank126025216254.bbtec.net)
[19:01:45] <jinsun> mav`rik: isn't that disabled permanently? https://status.python.org/incidents/grk0k7sz6zkp
[19:01:46] *** Joins: kts (~kts@103.73.237.12)
[19:02:10] <hirgen> Is there things you can do in python for system admin/ level 2 and 3 support you can do what Powershell can't or some trickery for windows/activedirectory/sccm/0365 support etc.?
[19:03:18] <sudorm> mav`rik, perfect, it works! btw, what's the diff between HTTP API and REST API? All REST APIs I know are often with HTTP POST...
[19:04:03] <han-solo> `curl https://pypi.org/pypi/httpx/json` seems to work fine from the link you shared
[19:04:42] <ldericher> who can help with FastAPI? I've started my API "app" from the OAuth2 example at https://fastapi.tiangolo.com/tutorial/security/oauth2-jwt. Now I've moved the "/token" endpoint into a new APIRouter with prefix "/auth", let's say "app.auth.router". I can see the Login url as "/auth/token" in swagger, that's fine. However, 1) I want the *whole* API to be prefixed with "/api" (so login will be at "/api/auth/token"), and 2) I need a way to reflect that
[19:04:42] <ldericher> change in the `tokenUrl` of my `OAuth2PasswordBearer` instance
[19:05:04] *** Quits: mcpackey (~pm0001@p5dc1c9c8.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:05:46] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[19:05:59] *** Joins: antineutrino (~antineutr@user/eru)
[19:06:08] <sudorm> mav`rik, I found the answer, thanks for everything. https://docs.aws.amazon.com/lambda/latest/dg/services-apigateway.html#services-apigateway-apitypes
[19:06:34] *** Joins: blackout69 (~blackout6@37.183.198.248)
[19:07:03] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[19:08:11] *** Quits: KomeilParseh (~Thunderbi@2.186.248.32) (Remote host closed the connection)
[19:08:50] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[19:08:58] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:08:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:09:13] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[19:09:15] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[19:11:16] *** Quits: nishant (~Nishant@49.37.242.151) (Quit: Leaving)
[19:12:02] *** Quits: antineutrino (~antineutr@user/eru) (Quit: WeeChat 3.4)
[19:13:05] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[19:15:24] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Ping timeout: 250 seconds)
[19:16:36] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[19:17:00] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9)
[19:17:02] *** Joins: jamiejackson (~jamiejack@131.106.140.145)
[19:18:06] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[19:18:51] *** Joins: antineutrino (~antineutr@user/eru)
[19:18:55] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:19:43] <jamiejackson> hi folks. in most package management frameworks i'm used to, there's a way to specify development/runtime requirements and to keep them separated. can you suggest a way to do this in python? i have a couple of runtime packages and i have (at the moment) pytest as a development dependency. FWIW, i'm working in PyCharm and I want to establish a
[19:19:43] <jamiejackson> convention that's easy for other devs on my team to pick up a project and start working with it right away.
[19:19:55] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:19:58] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[19:20:17] *** Joins: Blankspace (~Blankspac@user/blankspace)
[19:20:35] *** Quits: antineutrino (~antineutr@user/eru) (Client Quit)
[19:20:39] *** Joins: phage (~phage@85.191.185.246)
[19:21:07] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:21:59] <ldericher> jamiejackson, use python-poetry.org and the pycharm plugin for poetry
[19:22:30] *** Quits: Blankspace (~Blankspac@user/blankspace) (Client Quit)
[19:22:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[19:22:51] <ldericher> then you can `poetry add [--dev] <package>` or just use the PyCharm utilities
[19:24:30] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[19:24:31] *** Joins: paul424 (~tom@ip-5-172-234-77.multi.internet.cyfrowypolsat.pl)
[19:25:10] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[19:26:12] <jamiejackson> i'll check that out, ldericher, thanks for the suggestion.
[19:26:16] <grym> jamiejackson: you can add "extras" to packages, and i usually name one of mine "dev" :)
[19:26:25] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[19:26:36] <grym> jamiejackson: commented out, but https://tildegit.org/grym/modern-python-mwe/src/branch/master/setup.cfg
[19:26:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:27:02] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Read error: Connection reset by peer)
[19:27:08] <grym> so then consumers `pip install foo` and devs `pip install -e '.[dev]'`
[19:27:20] <grym> (in foo's root directory)
[19:28:52] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[19:28:54] <Jimmy2027> grym: do you have any experience with pyinstaller by any chance? I'm trying to reproduce this example: https://github.com/mobiusklein/cython_pyinstaller_example but running the executable fails with  No module named 'my_package'
[19:29:00] <grym> Jimmy2027: i don't.
[19:29:13] <Jimmy2027> okay^^
[19:29:51] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:29:54] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4)
[19:29:58] *** Parts: test_me (~Thunderbi@softbank126025216254.bbtec.net) ()
[19:30:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:30:24] <jamiejackson> grym, what's this whole INI format/strategy that you used? i'm a noob and i only know `requirements.txt`
[19:30:33] <grym> jamiejackson: it's the new-style way to write setup.py
[19:30:37] *** Joins: favreje (~jeff@170.249.173.67)
[19:30:40] <grym> post-pep517/518
[19:31:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:31:11] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[19:31:15] <jamiejackson> okay, note to self: read up on `setup.py`
[19:31:19] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[19:31:24] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[19:31:26] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[19:31:27] <grym> well, read up on setup.cfg/pyproject.toml :P
[19:31:39] <jamiejackson> ah, right
[19:31:54] <grym> you'll note there isn't a setup.py in that repo, nor a requirements.txt
[19:32:30] <grym> but you can `pip install git+https://tildegit.org/grym/modern-python-mwe` anyway
[19:32:35] <grym> not like it does very much :D
[19:33:14] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:33:42] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:33:57] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[19:34:16] *** pizzaiolo is now known as pizza
[19:35:10] <grym> (it prints 'hello world')
[19:35:42] <jinsun> jamiejackson: requirements.txt is for development, for the users of the library you don't want to have a manual step of installing the requirements, pip install your_package should automatically figure out the requirements, that is what pyproject.toml/setup.cfg/setup.py is for
[19:35:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 268 seconds)
[19:35:58] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:36:21] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 268 seconds)
[19:37:04] <ldericher> jamiejackson, and the pyproject.toml is the most modern approach, and you can auto-generate and auto-handle it using python-poetry
[19:37:49] <ldericher> (you also get a poetry.lock file, and you should be familiar with those lock files from wherever you're coming from)
[19:38:12] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[19:38:16] *** cdown_ is now known as cdown
[19:38:42] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[19:39:01] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:39:01] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:39:25] *** Quits: sudorm (~sudorm@lfbn-orl-1-1117-150.w86-244.abo.wanadoo.fr) (Quit: Leaving)
[19:39:48] *** Joins: audio (~audio@user/audio)
[19:40:12] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[19:40:39] *** Quits: sawk (~quassel@78.6.80.66) (Read error: Connection reset by peer)
[19:41:09] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Read error: Connection reset by peer)
[19:41:17] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[19:42:09] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[19:42:19] <Jong> Is there a name for when a class wraps another class but with nothing added (no functionality extended, no new member variables, no new functions), making the wrapper class pointless?
[19:43:35] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[19:43:40] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:43:45] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[19:43:45] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:44:07] *** Joins: rsx (~dummy@ppp-188-174-129-89.dynamic.mnet-online.de)
[19:45:29] *** Joins: control (~v1@user/control)
[19:45:35] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:45:50] <control> hello, how can i generate numbers every 50. say 50, 100, 150, 200 etc
[19:46:05] <control> from 50 to 1000
[19:46:30] <phy1729> range(50, 1001, 50)
[19:46:31] <odinsbane> control: [ x in range(50, 1000, 50)]
[19:47:16] <odinsbane> The 1001 would include the last one. phy1729's example gives you a generator. Mine is a list. What do you want to do with the numbers?
[19:47:21] <phy1729> odinsbane: you'd have to [x for x in range(...)], but it's easier to just list(range(...))
[19:47:41] *** Joins: Xano (~Xano@2a00:23c4:4204:700:16b6:faf8:d4ec:df0d)
[19:47:55] <jpds> odinsbane: Answer a homework assignment
[19:48:20] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 250 seconds)
[19:48:33] <control> great thank you!
[19:48:43] *** Quits: control (~v1@user/control) (Client Quit)
[19:48:56] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:4965:7a19:35b:7776) (Read error: Connection reset by peer)
[19:49:01] *** Joins: Algernon91 (~Algernon6@80.215.109.152)
[19:49:20] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:49:51] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[19:50:30] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[19:50:53] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[19:51:06] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[19:51:21] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[19:51:34] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:51:58] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[19:52:11] *** Joins: Amadiro (~Amadiro@45.154.138.41)
[19:52:16] *** Joins: jpn (~jpn@user/jpn)
[19:52:53] *** Joins: Barones (~Barones@user/Barones)
[19:53:36] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[19:53:48] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[19:54:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:54:11] *** Joins: revolve (~u0_a227@82-132-238-60.dab.02.net)
[19:54:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:55:48] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[19:55:57] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:56:05] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:102c:62e6:73:699b)
[19:56:17] *** Quits: Algernon91 (~Algernon6@80.215.109.152) (Read error: Connection reset by peer)
[19:57:29] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[19:58:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:58:51] *** Joins: elwoodpd (~elwoodpd@85.210.161.53)
[19:59:55] *** Joins: Midjak (~Midjak@82.66.147.146)
[20:00:36] <rendar> i'm creating a C++ project that will be eventually integrated inside python, is it wise to use cmake instead of make?
[20:01:14] <SnoopJ> rendar, I have done this with either, pick the one that meets your immediate needs the best
[20:01:30] *** Joins: concerned_goat (~concerned@hari-23-b2-v4wan-164840-cust99.vm1.cable.virginm.net)
[20:01:44] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[20:02:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:03:54] <rendar> SnoopJ, ok
[20:04:04] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:04:10] <rendar> SnoopJ, so wheels won't complain using cmake
[20:04:30] <rendar> but what about cmake is not present in the system? 'pip install' will fail?
[20:04:34] <SnoopJ> I don't understand the questions
[20:04:59] <Yhg1s> rendar: what does "fully integrated inside python" mean?
[20:05:02] <SnoopJ> If your package needs cmake to be installed and cmake is not present on the system, it will fail, yes.
[20:05:16] <SnoopJ> (this is true of make as well, FWIW)
[20:05:24] <rendar> well, yes
[20:05:37] <Yhg1s> rendar: wheels are a binary format. They would be the result of running make (or cmake).
[20:05:46] <rendar> Yhg1s, oh, ok i see
[20:06:25] <rendar> what about py libs which have a part written in C/C++? usually are they downloaded by pip in binary format? like apt-get would do?
[20:06:37] *** Quits: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576) (Quit: Reticulating Splines)
[20:06:43] *** Quits: VIle` (~Vile@73.182.253.255) (Read error: Connection reset by peer)
[20:07:11] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[20:07:25] <Yhg1s> rendar: they can be, yes. It depends on what's been uploaded to PyPI.
[20:07:49] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[20:07:50] *** Joins: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576)
[20:08:00] <rendar> i see
[20:08:04] <SnoopJ> if you know what your target platforms are, it probably makes sense to compile for those ahead of time and include the result of compilation in your wheels
[20:08:34] <rendar> so i can upload both, some certain very known arch like amd64 precompiled by me (so binary format), then sources to compile in the case of unknown arch
[20:09:10] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[20:11:39] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[20:12:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:12:42] *** Joins: raym (~raym@user/raym)
[20:12:47] *** Joins: savolla (~quassel@95.10.203.10)
[20:14:20] <rubin55> Apparently this is not Python 3.8 compatible:
[20:14:27] <rubin55> def which(program: str) -> str | None:
[20:14:37] <Xano> How does one make Mypy and gettext work together, or more precisely, how I I tell Mypy not to fret about _()?
[20:14:38] <rubin55> (the str | None:)
[20:14:41] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[20:14:50] <rubin55> is there a 3.8 compatible way of expressing that?
[20:14:51] <Xano> rubin55, Use typing.Union for Python <3.98
[20:14:54] <Xano> *<3.9
[20:15:06] <deniska> typing.Optional[str]
[20:15:08] *** Joins: bahamas (~lucian@84.232.140.158)
[20:15:24] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[20:15:29] <Xano> Or like deniska says, typing.Optional specifically if it's a union between None and something else
[20:15:30] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[20:15:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:15:42] <rubin55> Right, ok! thanks.
[20:16:17] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:16:27] *** Joins: Wh0 (~V@103.249.234.34)
[20:16:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[20:18:15] *** Joins: Enitin (~Enitin@82.180.145.223)
[20:18:18] *** Quits: bryce_ (~bryce@ool-457dd6ac.dyn.optonline.net) (Read error: Connection reset by peer)
[20:19:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:20:33] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[20:20:33] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[20:21:47] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[20:21:51] <jinsun> it is new in 3.10, doesn't work in 3.9 either
[20:22:08] <jinsun> unless you do the future import, then works for 3.7+
[20:23:00] *** daniel3 is now known as daniel2
[20:23:08] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:23:48] <dTal> exec('def myfunc():\n\treturn  "Hello, World\n"\n')
[20:24:38] <dTal> this gives "SyntaxError: unterminated string literal" because it interprets the newline inside the "Hello World" string as belonging to the out string
[20:24:42] <dTal> *outer
[20:24:51] *** Joins: KevinX (~KevinX@user/KevinX)
[20:25:17] <dTal> This is true even if you define the code block with multiline string syntax
[20:25:33] <dTal> how can I introduce a newline into generated code?
[20:26:56] <dTal> sorry, more precisely - how can I introduce newlines into nested strings?
[20:27:00] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:a410)
[20:27:12] <mav`rik> When profiling code, does anyone use tooling beyond the defaults, or is it mostly a short looped process over the pstats output (so no additional tooling, reports, etc.)?
[20:27:17] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:28:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:28:04] <han-solo> dTal: maybe escape them ?
[20:28:23] <dTal> han-solo: no, then it's escaped in the inner string as well
[20:28:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[20:28:47] <dTal> i.e. the functions prints "Hello, World\n" literally
[20:29:52] <han-solo> `d={};exec('def myfunc():\n\treturn "Hello, World\\n"\nglobals()["x"]=myfunc()', d);d['x']`
[20:29:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:30:15] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[20:30:27] <han-solo> oh
[20:30:39] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[20:30:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:31:54] *** Quits: supakeen (~supakeen@python/site-packages/supakeen) (Quit: Bridge terminating on SIGTERM)
[20:32:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:32:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:32:56] <Wooble> dTal: no it doesn't. print(myfunc())
[20:33:04] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[20:33:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[20:33:25] <Wooble> dTal: the function returns a string, which your interpreter prints the repr of.
[20:33:40] *** Joins: Vornotron (~Vornicus@2603-8000-5d07-7ef0-44bf-6e8e-94ff-564e.res6.spectrum.com)
[20:33:46] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:33:51] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4962:7b82:a726:2c3d) (Quit: Leaving)
[20:34:08] *** Joins: supakeen (~supakeen@python/site-packages/supakeen)
[20:34:11] *** Quits: samuelbernardo (~samuelber@nata02.lip.pt) (Ping timeout: 272 seconds)
[20:34:36] <dTal> thank you Wooble
[20:34:48] <dTal> I was staring right at it
[20:34:55] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[20:35:03] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:35:03] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:35:09] <Wooble> no problem, people calling the interpreter a read-execute-print-loop is a problem, since it doesn't actually print() :)
[20:35:15] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[20:35:18] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[20:35:52] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:102c:62e6:73:699b) (Read error: Connection reset by peer)
[20:36:19] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:36:42] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:102c:62e6:73:699b)
[20:36:50] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1db4-03cc-2fad-93fa.res6.spectrum.com) (Ping timeout: 252 seconds)
[20:39:02] *** Joins: magla (~gelignite@d536591f.access.ecotel.net)
[20:39:46] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:40:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com)
[20:40:47] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:41:07] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[20:41:21] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:41:21] *** Quits: R2Racoon (~R2Racoon@181.62.52.196) (Ping timeout: 256 seconds)
[20:41:39] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[20:41:48] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11fb:3264:102c:62e6:73:699b) (Ping timeout: 252 seconds)
[20:41:52] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d5:1441:6595:2578)
[20:42:36] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Read error: Connection reset by peer)
[20:44:07] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[20:44:27] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Read error: Connection reset by peer)
[20:45:53] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[20:46:08] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:46:45] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[20:48:27] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:49:14] *** Quits: rsx (~dummy@ppp-188-174-129-89.dynamic.mnet-online.de) (Quit: rsx)
[20:49:30] *** Quits: marcello42 (~mp@p200300dfaf10fe013da0eb2bf7bf6508.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:49:37] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Ping timeout: 256 seconds)
[20:50:03] *** Joins: jpn (~jpn@user/jpn)
[20:50:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:50:59] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[20:51:13] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Remote host closed the connection)
[20:51:20] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:51:24] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:51:25] *** Quits: WantToHe1p (~WantToHel@96.77.40.70) (Changing host)
[20:51:25] *** Joins: WantToHe1p (~WantToHel@user/wanttohelp)
[20:51:27] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.206)
[20:51:38] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[20:53:53] *** Joins: bambams (~bambams@user/bambams)
[20:54:15] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:55:01] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:55:35] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[20:55:54] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:55:54] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[20:56:01] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[20:56:23] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:56:27] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[20:56:30] <zen_coder> How can I get my expression to match, with only chaging content of variable A? https://www.online-python.com/jpUu9ALQkZ but A has to be regular expression string
[20:56:35] *** Quits: Major_Biscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[20:56:37] *** Joins: zamba (~marius@185.47.250.222)
[20:56:37] *** Joins: phage (~phage@85.191.185.246)
[20:56:58] *** Joins: MasterK (~MQ@86.123.41.138)
[20:57:02] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:57:30] <zamba> hi! i have a looooong ascii line.. it's 12000 characters long.. but there is structure to the madness.. every "section" in this line is built up to match this regex: '\d{5}\d{2},\d{2},\d{2},\d{2},\d{2} \d{2},\d{2},\d{2},\d{2},\d{2} \d{2},\d{2},\d{2},\d{2},\d{2} '
[20:57:46] <theseb> if 2 pandas dataframes have the same number of rows, how just combine all the columns into a new single super dataframe?
[20:57:49] <zamba> how can i iterate over the line and extract each of the blocks from this?
[20:58:17] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 250 seconds)
[20:58:26] *** Joins: Betal (~Betal@user/betal)
[20:58:33] <zamba> so for instance, the first two sections looks like this: "1200110,28,56,74,83 01,30,40,67,86 15,29,43,57,87 1200202,18,37,64,72 03,20,38,45,75 04,39,51,65,89 "
[20:58:45] <zamba> look*
[20:58:56] <SnoopJ> zamba, is there other data in the line, or is it only the sections matched by the pattern?
[20:58:58] *** Joins: Giovanni (~Giovanni@176.219.119.243)
[20:59:03] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:59:08] <zamba> SnoopJ: only this repeating pattern
[20:59:29] <SnoopJ> zamba, sounds like you might be able to use re.findall() or perhaps re.finditer() to do what you want.
[20:59:39] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[20:59:44] <Wooble> or maybe split on spaces and take 2 chunks at a time.
[20:59:44] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[20:59:55] <mike18> hi does python have datatype double?
[21:00:01] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[21:00:02] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:00:10] <Wooble> mike18: float is a ieee double
[21:00:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:00:34] <zamba> nice.. finditer works
[21:00:50] <Wooble> mike18: (there's no built-in single precision float)
[21:01:15] *** Joins: dez (uid92154@user/dez)
[21:01:18] <mike18> so all you calc in python uses double prec and not floating point prec?
[21:01:33] <SnoopJ> "double precision" is a type of "floating point precision"
[21:01:33] <Wooble> all you calculation with floats, yes.
[21:01:42] <mike18> ok
[21:01:42] <Wooble> calculate*
[21:01:58] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:02:04] <Wooble> for cases where that matters, you were probably using numpy anyway.
[21:02:47] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:04:27] *** Joins: Chex (~Chex@user/chex)
[21:05:02] <zamba> SnoopJ: is there a way to turn all meta sequences into a match group?
[21:05:14] *** Quits: pvergain (~Thunderbi@91-168-140-26.subs.proxad.net) (Quit: pvergain)
[21:05:22] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:05:22] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:05:24] <zamba> short of having to '()' encapsulate everything?
[21:05:35] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[21:05:38] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:05:59] *** Quits: Jmtrix (~qed@user/jmtrix) (Ping timeout: 252 seconds)
[21:06:13] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[21:06:46] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 250 seconds)
[21:06:53] *** Joins: Jmtrix (~qed@2604:180:2:72d::497d)
[21:06:53] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[21:06:53] *** Joins: Jmtrix (~qed@user/jmtrix)
[21:07:44] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Ping timeout: 272 seconds)
[21:07:44] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 272 seconds)
[21:08:45] *** Quits: raym (~raym@user/raym) (Ping timeout: 252 seconds)
[21:08:58] <SnoopJ> zen_coder, the problem with your pattern is that the * is being interpreted as a quantity, not a literal asterisk. If you change the pattern to `A = r'copy something "foo \\"\*\\"'` it will match against B
[21:09:11] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[21:09:12] *** Joins: bleb (~cm@user/bleb)
[21:09:25] <SnoopJ> zamba, I don't know what a "meta sequence" is in this context.
[21:09:37] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[21:11:29] *** Joins: raym (~raym@user/raym)
[21:12:25] *** Joins: Korra (~textual@216.15.105.161)
[21:12:47] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[21:13:26] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Ping timeout (120 seconds))
[21:13:59] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:15:14] *** Joins: rje (~textual@65.141.156.170)
[21:15:23] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:16:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:17:30] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[21:17:56] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[21:17:59] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:20:23] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:3866:cbcf:8e15:3aa9) (Ping timeout: 250 seconds)
[21:20:42] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[21:20:49] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[21:20:51] <SnoopJ> fun (silly?) micro-optimization I just blundered into while looking around at how ModuleType is used in CPython: https://bugs.python.org/issue45654#msg408210
[21:21:01] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:a410) (Ping timeout: 256 seconds)
[21:21:26] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[21:21:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:22:27] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:23:00] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:23:10] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[21:23:19] *** dcaro is now known as dcaro_away
[21:23:28] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[21:23:33] *** Joins: jpn (~jpn@user/jpn)
[21:23:58] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[21:24:20] <zamba> i have 5 numbers i should output in a row.. there should be 9 columns.. numbers from 1 to 9 should be in the first column, 10 to 19 in the second, and so on.. if there's no number in a column, then it should be left blank, but it should still output the space..
[21:24:25] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[21:24:28] <zamba> what's the easiest way of outputting that to the terminal?
[21:24:33] *** Joins: qlixed (~qlixed@181.44.129.13)
[21:24:56] <phy1729> how does having 5 numbers tie into the rest?
[21:25:37] <zamba> phy1729: each row has 5 numbers.. each number should fit in its corresponding column
[21:25:53] *** Quits: fanis30 (~anon@adsl-138.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[21:25:59] <zamba> so there should only be one number in each column
[21:26:11] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:26:32] *** Joins: zrsm (~mrrobot@173.171.254.123)
[21:26:45] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[21:26:56] <phy1729> so you want a grid from 1-100 but only print numbers in your list of 5?
[21:28:09] <zamba> phy1729: 9 columns wide
[21:28:12] *** Quits: jamea (~jamea@200.68.140.3) (Ping timeout: 240 seconds)
[21:28:18] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[21:28:32] <phy1729> well you need to stick 10, 20, ... somewhere
[21:28:41] *** Quits: Elzington_ (~Elzington@static-68-235-44-46.cust.tzulo.com) (Quit: Leaving)
[21:29:00] *** Joins: greedom (~greedom@p200300de6716ce0004bc69690c6fe986.dip0.t-ipconnect.de)
[21:30:18] <phy1729> I think you want something like print('\n'.join(' '.join(f'{x:2}' if x in a else '  ' for x in range(r, 101, 10)) for r in range(0, 10)))
[21:30:25] *** Quits: jay-m126_ (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:30:25] *** Quits: jay-m126 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:30:59] *** Quits: jay-m1261 (~jay-m@154.126.169.74) (Ping timeout: 256 seconds)
[21:32:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[21:32:12] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[21:33:28] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:34:19] *** Joins: brabrax (~brabrax@user/brabrax)
[21:34:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:34:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[21:34:23] *** Joins: marcello42 (~mp@p200300dfaf10fe010e3892c3ca815872.dip0.t-ipconnect.de)
[21:34:59] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:35:35] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:36:13] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[21:36:46] <Xano> How do I express a type that describes any object with an attribute with a fixed name and type?
[21:37:06] <Xano> These attributes are added to concrete types dynamically, but I'd like to be able to hint on them
[21:37:06] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[21:37:18] <sco1> Protocols?
[21:37:29] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[21:37:41] <sco1> https://peps.python.org/pep-0544/
[21:37:46] <Xano> sco1, I'm not familiar with those yet, but will read the docs. Thanks for the nudge :)
[21:37:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:38:07] <fakenullie> https://mypy.readthedocs.io/en/stable/protocols.html
[21:38:32] <Xano> sco1, fakenullie Very helpful, thank you both :)
[21:38:47] <mike18> question to python boto3: https://ideone.com/f9G6tT is that returned datatype in bytes?
[21:40:57] *** Joins: iob (~iob@90-182-197-112.rcp.o2.cz)
[21:41:15] <SnoopJ> Xano, Protocol +1 for that question. There was also a talk about them at PyCon 2021 if they're unfamiliar: https://www.youtube.com/watch?v=kDDCKwP7QgQ
[21:41:49] <SnoopJ> assuming you are willing to target 3.8+, that is.
[21:42:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:42:40] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[21:43:51] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dc89:ea2a:b512:d104)
[21:44:08] *** Quits: revolve (~u0_a227@82-132-238-60.dab.02.net) (Read error: Connection reset by peer)
[21:44:15] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[21:45:43] *** Quits: marcello42 (~mp@p200300dfaf10fe010e3892c3ca815872.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[21:45:58] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:46:44] <Xano> SnoopJ, Fabulous! I did recently drop 3.7 support so this should work :)
[21:47:46] *** Quits: paul424 (~tom@ip-5-172-234-77.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:48:03] *** Joins: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs)
[21:51:57] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[21:52:33] *** Quits: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs) (Client Quit)
[21:53:01] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:54:10] *** Quits: vlado (~vladoski@93-47-225-67.ip114.fastwebnet.it) (Remote host closed the connection)
[21:54:45] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[21:54:51] *** Joins: codificat (~pep@52.red-79-159-232.dynamicip.rima-tde.net)
[21:54:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[21:55:10] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[21:55:59] *** jjhoo_ is now known as jjhoo
[21:56:29] *** Quits: kts (~kts@103.73.237.12) (Quit: Konversation terminated!)
[21:56:48] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:56:48] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:57:01] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:57:01] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[21:57:38] *** Joins: funhouse (~funhouse@user/funhouse)
[21:57:52] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b87d:b7c8:de5e:a391) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:58:07] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:7942:f2a1:5c20:cf68)
[22:00:18] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:00:20] *** Joins: kts (~kts@103.73.237.12)
[22:00:27] *** Joins: sr71919 (~sr71919@183.82.29.150)
[22:00:39] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dc89:ea2a:b512:d104) (Ping timeout: 268 seconds)
[22:01:50] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[22:01:57] *** Joins: llanhmod1 (~personnel@user/domhnall/x-2887755)
[22:02:36] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[22:02:55] *** Parts: llanhmod1 (~personnel@user/domhnall/x-2887755) ()
[22:03:06] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-192.poda.cz) (Ping timeout: 250 seconds)
[22:03:17] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[22:03:40] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:03:51] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[22:04:26] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[22:04:39] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:04:39] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:04:42] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:06:04] *** Quits: beli6147 (~Thunderbi@rrcs-24-173-55-10.sw.biz.rr.com) (Quit: beli6147)
[22:07:00] *** Quits: grooverman (~grooverma@189.110.77.226) (Ping timeout: 240 seconds)
[22:07:47] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[22:07:48] *** Joins: audio (~audio@user/audio)
[22:07:51] *** Joins: audiobirb (~audio@user/audio)
[22:08:10] *** Quits: Wh0 (~V@103.249.234.34) (Quit: Leaving)
[22:08:11] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[22:09:05] *** Joins: phage (~phage@85.191.185.246)
[22:09:32] *** Joins: wattux (~wattux@2a02:238:f014:472:60a9:d026:9c87:463a)
[22:09:37] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[22:09:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:10:32] *** Joins: nemexis_ (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[22:10:48] *** Joins: grooverman (~grooverma@152.250.149.49)
[22:11:25] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 240 seconds)
[22:13:17] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[22:13:41] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[22:13:42] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[22:15:34] *** Joins: jay-m126 (~jay-m@154.72.150.140)
[22:15:39] *** Joins: jay-m1261 (~jay-m@154.72.150.140)
[22:15:39] *** Joins: jay-m126_ (~jay-m@154.72.150.140)
[22:16:33] *** Quits: savolla (~quassel@95.10.203.10) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:16:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:16:56] *** Quits: vats (~vats@103.16.30.101) (Ping timeout: 252 seconds)
[22:17:12] *** Quits: phage (~phage@85.191.185.246) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:17:46] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:17:46] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:17:46] *** Joins: phage (~phage@85.191.185.246)
[22:17:59] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[22:18:02] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[22:18:15] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 256 seconds)
[22:18:28] *** Quits: phage (~phage@85.191.185.246) (Client Quit)
[22:18:34] *** Joins: Enitin (~Enitin@82.180.145.223)
[22:18:37] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.206) (Ping timeout: 240 seconds)
[22:19:32] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[22:20:17] *** Joins: epicout (~epicout@user/epicout)
[22:20:33] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:20:34] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dc89:ea2a:b512:d104)
[22:21:59] *** Joins: teut (~teut@103.144.92.214)
[22:24:26] *** Quits: sr71919 (~sr71919@183.82.29.150) (Remote host closed the connection)
[22:24:44] *** Joins: sr71919 (~sr71919@183.82.29.150)
[22:24:46] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 250 seconds)
[22:24:59] *** Joins: aslicedbanjo (~aslicedba@host86-134-28-120.range86-134.btcentralplus.com)
[22:25:25] *** Quits: audiobirb (~audio@user/audio) (Quit: Leaving)
[22:25:51] *** Joins: JoelJoel (~jjshoe@user/joel)
[22:26:33] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 268 seconds)
[22:27:53] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:27:53] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:28:13] *** Quits: wattux (~wattux@2a02:238:f014:472:60a9:d026:9c87:463a) (Quit: Client closed)
[22:28:30] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[22:29:01] *** Quits: sr71919 (~sr71919@183.82.29.150) (Ping timeout: 256 seconds)
[22:29:15] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:29:52] *** Joins: pyeveryt_ (~pyeveryth@dot1x-155-41-160-40.bumc.bu.edu)
[22:30:17] *** Joins: nomic (~nomic@185.217.117.111)
[22:30:47] *** Joins: sr71919 (~sr71919@183.82.29.150)
[22:30:58] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d0dc:8c7:d95c:7c13)
[22:31:08] *** Quits: Enitin (~Enitin@82.180.145.223) (Read error: Connection reset by peer)
[22:31:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[22:31:36] *** Joins: Enitin (~Enitin@82.180.145.223)
[22:31:47] *** Joins: crashrep (~crashrep@user/crashrep)
[22:32:56] *** Joins: jazzy (~jaziz@user/jaziz)
[22:33:29] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[22:33:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:34:45] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:34:47] *** Joins: grooverman (~grooverma@152.250.149.217)
[22:34:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:34:59] *** Joins: audiobirb (~audio@user/audio)
[22:35:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:35:17] *** Quits: kts (~kts@103.73.237.12) (Quit: Konversation terminated!)
[22:35:49] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[22:35:57] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[22:36:02] *** Quits: jay-m1261 (~jay-m@154.72.150.140) (Ping timeout: 250 seconds)
[22:36:02] *** Quits: jay-m126_ (~jay-m@154.72.150.140) (Ping timeout: 250 seconds)
[22:36:02] *** Quits: jay-m126 (~jay-m@154.72.150.140) (Ping timeout: 250 seconds)
[22:36:27] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
[22:36:45] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dc89:ea2a:b512:d104) (Ping timeout: 252 seconds)
[22:37:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:37:55] *** Joins: jay-m126 (~jay-m@129.0.76.184)
[22:37:57] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[22:38:04] *** Joins: jay-m126_ (~jay-m@129.0.76.184)
[22:38:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[22:39:15] *** Joins: Enitin (~Enitin@82.180.145.227)
[22:39:56] *** Quits: tarel2 (~tarel2@2600:8801:1881:7300::a288) (Quit: Client closed)
[22:41:25] *** Joins: FergusL (~freenode4@user/fergusl)
[22:41:42] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 252 seconds)
[22:42:10] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:42:44] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:10] *** Joins: jay-m1261 (~jay-m@129.0.76.184)
[22:43:15] *** Joins: unwired (~unwired@user/unwired)
[22:43:41] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:43:50] *** Joins: qlixed (~qlixed@152.170.36.244)
[22:43:50] <audiobirb> can someone tell me what's wrong with my code? https://bpa.st/GBQQ -- it stops after only a bit of processing, and in the middle gives this message: https://bpa.st/B5GQ
[22:44:19] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[22:44:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:31] *** Joins: Elzington (~Elzington@static-68-235-44-46.cust.tzulo.com)
[22:47:24] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:47:30] <Wooble> audiobirb: put lines 37-40 in a function (such as main()), and call it in an `if __name__=="__main__":` guard.  your file needs to be importable.
[22:48:14] *** Joins: somlis (~somlis@user/somlis)
[22:48:37] *** Quits: NeoCore (~neocore@37.120.204.165) (Quit: Leaving)
[22:49:10] <Wooble> (the docs mention that __main__ must be importable, but only to point out you can't do this interactively.)
[22:49:59] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:50:28] *** Quits: kdc (~kdc@196.211.197.133) (Quit: Leaving)
[22:50:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:50:39] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[22:51:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[22:51:14] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[22:51:20] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[22:51:24] *** Quits: qlixed (~qlixed@152.170.36.244) (Remote host closed the connection)
[22:52:38] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[22:52:42] *** Quits: sn_fk_n (~snufkin@94.15.173.91) (Ping timeout: 252 seconds)
[22:52:48] *** Joins: qlixed (~qlixed@152.170.36.244)
[22:53:48] *** Quits: teut (~teut@103.144.92.214) (Quit: Client closed)
[22:54:04] *** Joins: teut (~teut@103.144.92.237)
[22:54:13] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[22:54:20] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[22:54:24] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[22:55:03] *** Joins: ngp (~ngp@199.180.249.183)
[22:57:02] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:57:24] *** Joins: wattux (~wattux@2a02:238:f014:472:60a9:d026:9c87:463a)
[22:57:29] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:57:56] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[22:58:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e94e-c6aa-d6c8-3d10.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:58:28] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:58:46] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[22:59:24] *** Quits: ngp (~ngp@199.180.249.183) (Client Quit)
[22:59:42] *** Joins: ngp (~ngp@199.180.249.183)
[23:00:16] *** Joins: marenz (~marenz@dynamic-077-191-160-055.77.191.pool.telefonica.de)
[23:00:18] <marenz> gn'day
[23:00:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[23:01:00] <marenz> the json.dumps() method takes a parameter 'cls' to pass a custom encoder. Is there a way I can also pass constructor arguments to my custom encoder when using it with json.dumps()?
[23:01:19] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[23:01:51] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:01:53] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[23:01:57] *** Joins: quhar (~quhar@staticline-31-182-241-146.toya.net.pl)
[23:02:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d0dc:8c7:d95c:7c13) (Remote host closed the connection)
[23:03:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d0dc:8c7:d95c:7c13)
[23:03:35] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 256 seconds)
[23:03:41] *** Quits: elwoodpd (~elwoodpd@85.210.161.53) (Ping timeout: 245 seconds)
[23:04:08] *** Joins: Enitin (~Enitin@82.180.145.225)
[23:04:34] <Repiphany> marenz: cls would be an instance of JSONEncoder or some subclass of it or whatever, so you can construct that however you want
[23:04:55] <marenz> Repiphany, I believe it has to be a type, not an instance?
[23:05:37] <marenz> If I try an instance I get  "Unhandled exception TypeError caught: 'ReplacingEncoder' object is not callable"
[23:06:27] <Repiphany> Oh whoops, right
[23:06:39] *** Quits: cruncher (~cruncher@user/cruncher) (Quit: Leaving)
[23:07:23] <jarthur> Right, you could wrap it in a functools.partial if you want. You can also take a look at the pure-python version of dumps in the standard library. It's a very light wrapper around JSONEncoder.encode. You can make your own wrapper that does what you want.
[23:07:25] <Repiphany> All of the keyword arguments to dumps get passed to cls to initialize it
[23:07:33] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[23:08:00] <marenz> Ah, so I just need to forward them appropriately and add my own. Thanks! :)
[23:09:15] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:09:17] <Repiphany> You just need to subclass JSONEncoder and implement .default to handle whatever objects you're trying to extend to
[23:09:35] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:10:13] *** Joins: namkeleser (~namkelese@101.175.155.55)
[23:10:14] *** Joins: lesault (~lesault@user/lesault)
[23:10:19] <dob1> I created the virtualevn dir in the wrong directory, the one where I write the code not in separatare subdir.  Can I simply delete bin, lib, __pycache__ and pyenv.cfg ?
[23:10:22] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:17] <nedbat> dob1: yes
[23:12:26] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[23:13:15] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[23:13:44] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[23:13:47] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[23:14:59] *** Joins: asa22 (~asa22@77.211.7.222)
[23:15:23] *** Quits: teut (~teut@103.144.92.237) (Quit: Client closed)
[23:15:33] <asa22> Hi, I normally use C# on VS and get a lot of help from my IDE, how can I have the same kinda thing in VSCode with python
[23:15:55] <asa22> I get a bit of highligting but not nearly as much as Id like
[23:16:04] <asa22> like whole blocks of text is just white
[23:16:04] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[23:16:55] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:f88a:6270:fde4:c4d1)
[23:17:43] *** Quits: greedom (~greedom@p200300de6716ce0004bc69690c6fe986.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:18:11] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:18:14] <Wooble> asa22: I don't use vscode for python, but when I try it everything gets colored like I'd expect.
[23:18:32] *** Joins: greedom (~greedom@p200300de6716ce0004bc69690c6fe986.dip0.t-ipconnect.de)
[23:21:10] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[23:21:10] *** Joins: KomeilParseh (~Thunderbi@185.108.96.40)
[23:21:13] <tmart> Every week is trash week in my neighborhood (where we put our bins out for the dump truck on Tuesday), but only every _other_ week is recycling week (when the recycling truck also comes that day). What's a good way in Python to figure out if there's recycling this week? I've realized that ISO 8601 weeks can go up 53, so a simple even-odd system doesn't seem sufficient.
[23:21:15] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[23:23:04] *** Joins: jrd139 (~jrd@nat-wireless-140-180-240-123.princeton.edu)
[23:23:09] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:24:14] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[23:24:21] <SnoopJ> tmart, you could compute the number of weeks since a reference and check if that is an even or odd number of weeks? This also lets you move your reference if sometimes there's a hiccup (e.g. no pickup for inclement weather)
[23:24:49] <lesault> asa22: I have the Python and Pylance extensions installed in vscode and highlighting is fine.
[23:24:57] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[23:25:08] <asa22> lesault I use VScodium maybe thats the issue
[23:25:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:25:53] *** Quits: asa22 (~asa22@77.211.7.222) (Quit: Client closed)
[23:26:15] *** Quits: Staunch (~Staunch@137.83.202.220) (Ping timeout: 252 seconds)
[23:26:39] *** Joins: Atque (~Atque@user/atque)
[23:26:44] <SnoopJ> tmart, i.e. something like: `n_weeks = (datetime.date.today() - REFERENCE_DATE).days // 7;  is_recycle_week = not bool(n_weeks % 2)`
[23:27:57] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[23:27:57] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e0e2-ce57-d3ad-b362.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:28:46] <tmart> Yeah, SnoopJ, I think you're right that counting from a reference must be involved. A week's pickup is inductively defined by last week's.
[23:29:19] *** Quits: jrd139 (~jrd@nat-wireless-140-180-240-123.princeton.edu) ()
[23:29:31] *** Joins: _BobRockHR_ (~andrija@user/BobRockHR)
[23:29:46] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Ping timeout: 250 seconds)
[23:29:54] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c00d-0011-9495-6b87.res6.spectrum.com)
[23:30:02] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:30:05] *** Quits: jrjsmrtn_ (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[23:30:16] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Quit: WeeChat 3.4)
[23:30:21] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[23:31:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:32:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[23:32:02] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:32:07] *** Joins: Croves (~Croves@192.34.198.20)
[23:32:16] *** hernan604 is now known as hernan
[23:32:55] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[23:33:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:33:02] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:33:22] <tmart> And thank you for the implementation!
[23:33:30] *** hernan is now known as hernan604
[23:33:54] <Croves> What design pattern should I use to represent entities that don't relate to each other directly, but comes from the same source? I'm trying to write a wrapper arround a ticket event API that I use at work. At first, I tought about having a APIEntity class, and then a Ticket and User class that inherits from APIEntity - does this make sense?
[23:34:07] *** Joins: bahamas (~lucian@84.232.140.158)
[23:34:56] <phy1729> Why do you need to represent them as a group or in what context do you need to do so?
[23:35:00] *** Joins: jamea (~jamea@200.68.140.28)
[23:35:02] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:35:07] <SnoopJ> Croves, what do they inherit? I would think the objects would just represent the data tied to the objects themselves.
[23:35:58] <mattf> Does anyone know an api i can get a list of the world's contires and for each one: area, name, a mini map image of some sort, neighbor countries (borderlands). Simplest possible api (its for a little quiz game im making)
[23:36:34] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[23:36:52] <Croves> SnoopJ I was thinking in using the parent class to store the auth credentials; plus the request to the API is always the same - a get to a specific endpoint followed by the id of the object; something like requests.get('api/users/1') so I thought it was nice to have some way to abstract all these calls
[23:37:01] *** Quits: KomeilParseh (~Thunderbi@185.108.96.40) (Ping timeout: 256 seconds)
[23:37:25] *** Joins: jrd139 (~jrd139@nat-wireless-140-180-240-107.princeton.edu)
[23:38:09] *** Joins: georgios (~georgios@user/georgios)
[23:38:12] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:38:36] *** Quits: jrd139 (~jrd139@nat-wireless-140-180-240-107.princeton.edu) (Client Quit)
[23:38:36] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[23:38:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[23:41:09] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-9533-c9bc-6bff-610c.res6.spectrum.com)
[23:41:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:41:48] *** Joins: funhouse (~funhouse@user/funhouse)
[23:43:00] *** Quits: jay-m1261 (~jay-m@129.0.76.184) (Ping timeout: 240 seconds)
[23:43:00] *** Quits: jay-m126_ (~jay-m@129.0.76.184) (Ping timeout: 240 seconds)
[23:43:00] *** Quits: jay-m126 (~jay-m@129.0.76.184) (Ping timeout: 240 seconds)
[23:45:24] <bpalmer> mattf: honestly, I don't think you should mess with an API ; on a good year, countries don't change that rapidly, so you can just download everything from, say, wikidata.org manually
[23:46:04] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:46:06] <mattf> true
[23:47:09] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:47:42] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[23:47:45] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:48] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[23:47:51] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:48:28] <SnoopJ> Croves, that sounds pretty convoluted to me rather than just having a completely separate class that represents the API details.
[23:48:41] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:48:54] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[23:49:00] <SnoopJ> e.g. done your way, you can't make an instance of User or Ticket that has nothing to do with the API, but this might be a meaningful operation for some programs
[23:49:33] *** Quits: _BobRockHR_ (~andrija@user/BobRockHR) (Quit: WeeChat 3.4)
[23:49:40] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:49:49] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:49:49] <SnoopJ> (conversely, depending on what exactly you're doing, it *might* make sense to do it this way, but that sounds like a pretty special case)
[23:50:04] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[23:50:50] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[23:51:33] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Ping timeout: 252 seconds)
[23:53:49] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[23:55:03] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[23:56:03] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 256 seconds)
[23:56:06] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[23:56:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:7d91:e2c0:1e69:5eb6)
[23:57:05] *** Quits: wattux (~wattux@2a02:238:f014:472:60a9:d026:9c87:463a) (Quit: Client closed)
[23:58:03] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[23:58:54] *** Quits: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e) (Read error: Connection reset by peer)
[23:58:57] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:59:32] *** Joins: onichomp (~onichomp@2806:264:4408:1e2:39ef:26d0:9817:e19e)
