[00:06:15] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:06:16] *** Joins: thelounge1018 (b9645785@67.205.143.82)
[00:06:34] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:33] *** Quits: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6) (Quit: Client closed)
[00:11:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:11:39] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[00:13:35] *** Parts: thelounge1018 (b9645785@67.205.143.82) ()
[00:17:00] *** Joins: matsaman (~matsaman@user/matsaman)
[00:18:34] *** Joins: summersault (~summersau@179.221.251.36)
[00:18:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:19:31] *** Covrus_ is now known as Covrus
[00:19:46] *** Quits: Covrus (~Covrus@user/covrus) (Quit: WeeChat 3.4)
[00:20:10] *** Joins: Covrus (~Covrus@user/covrus)
[00:22:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[00:23:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:28:57] <ThePendulum> grrr
[00:30:02] *** Quits: twiclo1 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Ping timeout: 240 seconds)
[00:30:09] <matsaman> ThePendulum: agreed
[00:30:12] *** Joins: summersault (~summersau@179.221.251.36)
[00:30:40] <ThePendulum> for some reason the syntax checking in vim has suddenly gone completely messed up and I don't know why
[00:32:54] <ThePendulum> n> new Set([1,2,3]).toJSON()
[00:32:55] <jellobot> (fail) TypeError: (intermediate value).toJSON is not a function
[00:33:25] <ThePendulum> u wot, it is in my chrome console and I was wondering why it's returning a native array
[00:33:51] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:34:04] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9841-fdb7-086b-ec04.res6.spectrum.com) (Remote host closed the connection)
[00:34:50] *** Joins: summersault (~summersau@179.221.251.36)
[00:35:07] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:35:30] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[00:35:53] *** Joins: twiclo1 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d)
[00:36:12] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[00:37:53] *** Joins: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com)
[00:37:54] <ThePendulum> hm seems the broken syntax checking might have something to do with vim-obsession, no idea what suddenly changed though
[00:38:40] <ThePendulum> oh, I guess not, opening a JS file and then a Vue file brings the problem back
[00:40:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:40:12] <silly> you are wondering why .toJSON returns an array and not a json string?
[00:40:19] <KevinX> when is the last time you told someone you use Vim? isn't that a requirement to keep it working?
[00:40:22] <ThePendulum> yes
[00:40:35] <silly> where did you get .toJSON from?
[00:40:40] <silly> is it a symbol?
[00:40:55] <ThePendulum> I don't know, it showed up in the method suggestions in the chrome console so I ran it
[00:41:24] <KevinX> toJSON works on dates I think
[00:41:49] <silly> google indicates, on url and performance too
[00:41:59] <silly> but not with arrays
[00:42:03] <ThePendulum> n> new Date().toJSON()
[00:42:04] <jellobot> (okay) '2022-01-19T21:12:04.445Z'
[00:42:14] <silly> funny
[00:42:16] <ThePendulum> is that even valid JSON
[00:42:23] <silly> a string is
[00:42:35] <silly> and null and a number or a boolean
[00:42:39] <ThePendulum> n> JSON.parse('"testing"')
[00:42:40] <jellobot> (okay) 'testing'
[00:42:49] <ThePendulum> hm right, thought you couldn't put just a string without encapsulation but I'm wrong
[00:42:55] <silly> n> JSON.parse('null')
[00:42:56] <jellobot> (okay) null
[00:43:01] <silly> n> JSON.parse('true')
[00:43:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[00:43:02] <jellobot> (okay) true
[00:43:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:43:53] <ljharb> londontux: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[00:44:06] <ljharb> ThePendulum: sets definitely don't have a toJSON method
[00:45:15] <silly> ljharb, adding it to Set or Array prototype is a no go, but we can implement it as a Symbol right?
[00:45:36] <ThePendulum> ljharb: guess it's something chrome is adding for one reason or another then
[00:46:02] <ljharb> ThePendulum: no, it definitely is not
[00:46:07] <ljharb> ThePendulum: 1000%, it's your site adding that
[00:46:10] <silly> ThePendulum, i've tried chrome unstable just now. are you using chrome canary?
[00:46:15] <ljharb> silly: no, JSON only looks at "toJSON".
[00:46:27] <ljharb> silly: and the reason sets and maps don't have toJSON has nothing to do with string vs symbol for the property name
[00:46:47] <ljharb> silly: and arrays already have toJSON behavior without needing the method
[00:46:56] <silly> omg
[00:47:07] <ljharb> n> JSON.stringify([1, 2, 3])
[00:47:07] <jellobot> (okay) '[1,2,3]'
[00:47:25] <ThePendulum> huh weird, is that something babel polyfill might do?
[00:47:32] <silly> there is some sort of .toJSON involved?!
[00:47:42] <ljharb> ThePendulum: yes, core-js polyfills a handful of things it shouldn't. map/set toJSON was a proposal of mine that got rejected
[00:47:51] <ljharb> silly: no, not in arrays. JSON.stringify is hardcoded to handle it
[00:47:57] <ThePendulum> right okay, because I'm pretty sure neither my colleague nor myself would extend like that heh
[00:48:00] <silly> that's what i thought
[00:48:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:48:29] <ThePendulum> is a native array what it was meant to output?
[00:48:52] <ljharb> ThePendulum: the proposal? yes, it outputs `Array.from(this)`
[00:49:03] <ljharb> so for sets, it's an array of their values; for maps, an array of entries.
[00:49:10] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[00:49:22] <silly> ah, something jsonfyable
[00:49:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:49:42] <ljharb> it's up to the individual keys/values to also be JSON-serializable
[00:49:47] <silly> huh :( i'd expect .toJSON to output json
[00:49:52] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[00:49:57] <mike18> hi how can i download that file? https://ideone.com/r451wk
[00:50:04] <ljharb> that's not how the protocol's operated, but i agree that'd be more intuitive
[00:50:24] <ljharb> mike18: there's a "download" button
[00:50:37] <mike18> @ljharb did you read that link?
[00:50:40] <ljharb> mike18: if you mean the data-uri URL, you can't, that's a file:// URL
[00:50:48] <ljharb> mike18: if it's not already present on your system, it won't ever work
[00:50:55] <mike18> where can i find it than?
[00:51:28] *** Joins: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com)
[00:51:36] <mike18> is there a way to reopen it from the same js session?
[00:51:37] <ljharb> mike18: either it's on your machine already, and that's the file path - or it's not, and you can never ever get to the origianl file
[00:51:46] <ljharb> mike18: whoever generated that file path is likely who has it
[00:52:03] <mike18> ok if its on my machine - where is it stored than?
[00:52:10] <ljharb> that URL is the literal path
[00:52:16] *** Quits: salad (~cucumber@82.76.150.118) (Quit: salad)
[00:52:17] <ljharb> remove "file://", that's the path
[00:52:31] <mike18> under root?
[00:52:53] <ljharb> yes, any path starting with `/` starts at the root
[00:52:58] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:53:07] *** Joins: netfrog (~netfrog@178.115.64.13.wireless.dyn.drei.com)
[00:53:09] <mike18> i dont see anything like that under rooot
[00:53:33] <ljharb> then it's not on your machine. so where'd that URL come from?
[00:53:51] <mike18> but i still see that think in my browser
[00:53:52] <ljharb> if it came from another user, then that user made a mistake, and the contents of the file were never sent anywhere, and you can't possibly ever get them
[00:53:52] <mike18> thing
[00:54:21] <ljharb> not sure what to tell you. maybe the site's JS code transforms that to something else
[00:54:31] <mike18> i have a web session with some text in my browser - im logged out but in the background there is some text - i looked into html and found that link
[00:54:33] <ljharb> but if you see the thing, you can download it from "where you see it" directly
[00:55:10] <mike18> i cant go back to that text box in the browser...
[00:55:12] *** Joins: londontux1 (~Tuxy@178.115.64.13.wireless.dyn.drei.com)
[00:55:14] *** Quits: twiclo1 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d) (Ping timeout: 250 seconds)
[00:55:16] *** Joins: netfrog_ (~netfrog@178.115.64.13.wireless.dyn.drei.com)
[00:55:19] <ljharb> then how do you "still see it"
[00:55:25] *** Quits: netfrog (~netfrog@178.115.64.13.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[00:55:28] <ljharb> if you still see it, right click on it and download i
[00:55:29] <ljharb> t
[00:55:32] <ljharb> if you don't still see it, it's gone
[00:55:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:55:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:55:34] *** Joins: wroathe (~wroathe@user/wroathe)
[00:55:49] <mike18> there is some other frame on top - with thanks - bla bla bla
[00:56:11] *** Quits: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[00:56:22] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[00:57:21] *** Joins: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com)
[00:58:04] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[00:58:42] <netfrog_> hallo, i try to generate a post method javascript links but something in my code must be wrong? https://paste.debian.net/hidden/7e3cc23b/
[00:59:17] *** Quits: londontux1 (~Tuxy@178.115.64.13.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[00:59:31] <systemfault> netfrog_: That code is pretty useless for us, give us the generated version
[00:59:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:00:01] <systemfault> But quickly like that, are you trying to call .submit() on a buttonÉ
[01:00:03] <systemfault> ?
[01:00:42] *** Quits: zwei (~Zweihande@znc.ext.zweihander.me) (Quit: ZNC - https://znc.in)
[01:01:03] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[01:01:20] <netfrog_> yes
[01:01:46] <mike18> ljharb: everything i see in chrome and which is in on text the background of another frame - i can still download somehow?
[01:02:41] <netfrog_> systemfault, can you helo me?
[01:04:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:04:07] *** Quits: kakashiAL (~kakashi@37.85.18.55) (Ping timeout: 256 seconds)
[01:04:35] <netfrog_> systemfault, http://paste.debian.net/hidden/4aab2030/
[01:04:44] *** Quits: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com) (Quit: w0ng)
[01:05:21] *** Joins: w0ng (~w0ng@185.218.127.41)
[01:05:39] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[01:05:46] <netfrog_> help=help
[01:05:53] <netfrog_> helo=help
[01:06:49] *** Quits: joelmo (uid17355@2a03:5180:f::43cb) (Quit: Connection closed for inactivity)
[01:07:25] <systemfault> Your JS is declared before the button so I guess that the querySelector returns null
[01:07:36] *** Quits: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com) (Quit: Leaving.)
[01:08:14] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:08:18] *** Joins: nomad1 (~nomad@user/spacenomad)
[01:10:41] <netfrog_> systemfault, i don't no but thank you - should i declared it befor?
[01:11:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:11:29] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6124:8097:4737:3d31) (Quit: Textual IRC Client: www.textualapp.com)
[01:12:35] <D4mned> yeah u need ur html to load 1st then you mess with it with javascript
[01:14:45] *** Joins: twiclo1 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d)
[01:14:52] <Slade> ugly.. https://github.com/apollographql/apollo-client/blob/main/CHANGELOG.md#apollo-client-354-2021-11-19
[01:16:00] *** Joins: src (~src@user/src)
[01:18:27] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[01:19:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[01:19:30] <netfrog_> the javascript is now after the normal link an it still not work http://paste.debian.net/hidden/99309d77/
[01:20:29] <netfrog_> the javascript is in a php for loop
[01:20:41] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[01:21:46] <ljharb> mike18: yes
[01:21:54] <ljharb> netfrog_: never put JS in php, only in a .js file
[01:22:21] *** Joins: gehn (~gehn@user/gehn)
[01:23:27] <netfrog_> ljharb, what should i do, php is generated the links, can i put a .js file in a php loop?
[01:23:53] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a)
[01:24:37] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[01:25:15] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[01:25:20] <ox1eef> store the links on the DOM
[01:25:30] <D4mned>   var formButton = "form[name='9'] > button";
[01:25:32] <D4mned> whats that
[01:26:12] <ox1eef> a selector, but i'm not sure what the "> button" part does.
[01:26:43] <netfrog_> i have the code from a web site
[01:26:46] <netfrog_> sorry
[01:28:09] <ox1eef> button.addEventListener(function() - aren't you missing the event name there?
[01:29:58] <netfrog_> is this code not good?
[01:30:05] <ljharb> !server data @ netfrog_
[01:30:06] <jellobot> netfrog_, There's 3 options to properly get data from the server to the client: 1) fetch request from JS. 2) HTML data-* attributes, read them in JS. 3) <script type="application/json"></script>, read and parse it from JS, however this option requires special escaping of </script> in the json body. Never generate/template JS on the fly. See also !fetch
[01:30:18] <ljharb> netfrog_: that's what you do ^ hardcode the logic, provide the data that way.
[01:31:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:31:32] <ox1eef> i don't think it is functional, you'd usually have the event name with addEventListener .. eg - addEventListener("click", function() {})
[01:32:43] *** Joins: pulse_ (~pulse@user/pulse)
[01:34:54] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:35:53] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:36:02] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[01:36:39] <netfrog_> thank you
[01:38:40] *** Joins: Naan (~Naan@user/naan)
[01:41:37] *** Joins: zwei (~Zweihande@znc.ext.zweihander.me)
[01:42:12] <ljharb> !npm deep-equal @ silly
[01:42:13] <jellobot> silly, npm.im/deep-equal 2.0.5|2020-12-01|node's assert.deepEqual algorithm
[01:42:20] <ox1eef> I wasn't aware of option 3, that's quite nice, what escaping is needed exactly?
[01:42:49] <ljharb> ox1eef: the string "</script>" can never appear, even in a string or comment, or else the browser will *immediately* terminate the script tag
[01:42:59] <ox1eef> roger
[01:43:10] <ljharb> which can lead to all kinds of security issues
[01:43:16] <ljharb> (beyond just breaking your site)
[01:44:09] <ox1eef> indeed, maybe worth encoding with base64 or something
[01:45:44] <ljharb> people usually do something like that for the slash or something, yeah
[01:45:56] <ljharb> it's not hard to do, it's just "break the world" if you don't
[01:46:01] <ox1eef> cool, good to know thanks
[01:46:06] <ljharb> so it's usually safer to avoid the possibility by doing options 1 or 2
[01:47:41] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[01:48:28] *** Quits: netfrog_ (~netfrog@178.115.64.13.wireless.dyn.drei.com) (Quit: Leaving)
[01:49:09] *** Quits: D4mned (~D1mned@212.101.251.83) (Quit: Leaving)
[01:49:58] <ox1eef> agreed, it struck me as useful for cases where you're generating a static using ruby / python / whichever, and want to store data to be used by the javascript from the site.
[01:50:16] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[01:50:18] <ox1eef> static site*
[01:51:13] <ljharb> even then you'd want an external .json file for cacheability when you update
[01:51:30] <ox1eef> yeah true, good point
[01:51:32] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[01:51:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:54:49] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:00:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[02:02:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:05:52] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[02:06:27] *** Quits: pmercado (~pmercado@186.107.48.199) (Ping timeout: 256 seconds)
[02:07:20] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:08:19] *** Quits: w0ng (~w0ng@185.218.127.41) (Quit: w0ng)
[02:08:54] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[02:13:15] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[02:14:59] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:15:08] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[02:15:27] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:16:31] *** Joins: nomad1 (~nomad@user/spacenomad)
[02:18:26] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:21:09] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bc04:150b:5ca9:e842) (Ping timeout: 268 seconds)
[02:23:04] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:26:14] *** Joins: barkle (kirk@kirk.shelltalk.net)
[02:26:44] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:11ea:447f:a0ba:3629)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:17] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:34] *** Joins: src_ (~src@user/src)
[02:32:46] *** Quits: pizdets (~pizdets@183.182.114.168) (Ping timeout: 250 seconds)
[02:33:57] *** Joins: pizdets (~pizdets@183.182.114.97)
[02:34:33] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:34:37] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[02:37:16] <saltrocklamp[m]> what's a good basic package for handling command line options/flags?
[02:37:40] <saltrocklamp[m]> nodejs.org recommends "yargs"
[02:39:08] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[02:40:28] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:34] *** Joins: pluri (~pluri@user/pluri)
[02:41:41] <systemfault> I used yargs in the past, worked well
[02:42:11] <saltrocklamp[m]> i just looked over the docs, not really a fan of the design. is there something that lets you declaratively specify the options and arguments that should be accepted?
[02:42:35] <saltrocklamp[m]> although it is pretty clever and seems pretty easy to use for ad-hoc things
[02:42:45] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[02:45:44] *** Joins: pluri (~pluri@user/pluri)
[02:47:01] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[02:47:36] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[02:49:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:50:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[02:50:35] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) ()
[02:51:02] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[02:51:25] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) (Client Quit)
[02:51:32] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 240 seconds)
[02:51:48] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[02:58:09] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[03:03:01] *** Joins: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com)
[03:03:27] *** Parts: londontux (~Tuxy@178.115.64.13.wireless.dyn.drei.com) ()
[03:06:16] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[03:07:43] *** Joins: kadams (~kadams@user/kadams)
[03:12:37] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:f023:de31:af4a:c8a4) (Ping timeout: 240 seconds)
[03:13:02] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[03:13:45] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[03:13:55] *** Joins: src (~src@user/src)
[03:13:58] *** Joins: matsaman (~matsaman@user/matsaman)
[03:17:39] *** Quits: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com) (Changing host)
[03:17:39] *** Joins: gjvc (~gjvc@user/gjvc)
[03:18:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:20:18] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 256 seconds)
[03:20:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[03:22:44] <sheetjs> systemfault: tried yargs, ran into an issue almost immediately
[03:23:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[03:23:12] <sheetjs> https://github.com/yargs/yargs/issues/2010
[03:23:45] <systemfault> Shit happens
[03:23:57] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:23:59] <sheetjs> admittedly the issue was pretty funny
[03:25:37] *** Quits: twiclo1 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d) (Ping timeout: 240 seconds)
[03:26:31] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:26:54] *** Joins: twiclo1 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[03:26:55] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[03:28:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:28:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:28:58] *** Joins: wroathe (~wroathe@user/wroathe)
[03:29:07] *** Joins: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net)
[03:29:56] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:66da:6e9e:cde7:7c35) (Ping timeout: 250 seconds)
[03:31:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:32:41] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:33:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:33:50] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 250 seconds)
[03:34:16] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:34:57] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[03:35:13] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:36:09] *** Joins: nomad1 (~nomad@user/spacenomad)
[03:36:38] *** Joins: vats (~vats@180.149.226.41)
[03:37:18] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[03:38:50] <evulish> does it make sense to use `npm ci` in a Dockerfile with a multi-step build, since the image with node_modules will be wiped if the package.json/package-lock.son changes, and node_modules is in .dockerignore
[03:39:09] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[03:39:10] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[03:39:57] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[03:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:45:33] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:45:58] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:46:03] *** Joins: trevors (~trevors@user/trevors)
[03:46:24] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:46:24] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:46:56] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:49:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:50:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:50:40] *** audiobirb is now known as audiocat
[03:54:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[03:58:44] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:00:23] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:11ea:447f:a0ba:3629) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:03:38] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:06:01] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[04:09:28] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:5006:f150:c832:5e73) (Quit: Client closed)
[04:10:17] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Ping timeout: 240 seconds)
[04:14:18] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[04:14:49] *** Joins: vysn (~vysn@user/vysn)
[04:16:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[04:16:54] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:e477:8c1b:94d5:fd66)
[04:17:02] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:22:51] *** Joins: oscurochu (~oscurochu@37.120.215.102)
[04:24:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:39] *** Joins: sickdyd (~sickd@FL1-119-243-125-95.tky.mesh.ad.jp)
[04:27:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[04:28:17] *** Joins: panella32 (~panella32@164.215.206.60)
[04:29:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:29:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:29:25] *** Joins: wroathe (~wroathe@user/wroathe)
[04:29:29] *** Parts: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) ()
[04:29:29] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[04:29:53] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:699d:242:fb03:618d) (Quit: Textual IRC Client: www.textualapp.com)
[04:31:20] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[04:34:04] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[04:35:48] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[04:42:42] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Client closed)
[04:43:03] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[04:43:18] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[04:45:06] *** Joins: nomad1 (~nomad@user/spacenomad)
[04:46:57] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:64f1:80a6:2066:123a) (Read error: Connection reset by peer)
[04:51:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:51:17] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[04:52:18] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[04:54:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:00:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[05:01:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:03:38] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[05:05:33] <hax> why does eslint say that jsx props should not use arrow functions, but https://reactjs.org/docs/render-props.html does just that?
[05:07:56] *** Joins: Swantvee (~swant@libera/staff/swant)
[05:08:19] <de-facto> var val = "ok"; window.addEventListener('keyup', function(event) { ...how to get val here? });
[05:08:46] <de-facto> can i somehow bind the scope where val lives to the event function while still getting the event argument?
[05:09:42] *** Joins: nomad1 (~nomad@user/spacenomad)
[05:10:14] <matsaman> hax: this? https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-bind.md
[05:10:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:11:02] <hax>  matsaman yeah that one
[05:12:01] <matsaman> seems straightforward to me
[05:12:19] <matsaman> they aren't authored by the same people, they have different perspectives, the end
[05:14:46] *** Quits: N4buc0- (~N4buc0@177.40.2.111) (Ping timeout: 256 seconds)
[05:16:59] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[05:17:17] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 240 seconds)
[05:18:40] <de-facto> how do i get the scope where window.addEventListener() was called?
[05:18:49] <hax> sure. I was looking more for an opinion on technical merits of the eslint rule vs the React docs example
[05:20:13] <gehn> de-facto, you just literally write `val` in the context of your example code
[05:20:25] <gehn> val wil be in visible scope in that function
[05:21:07] <gehn> if your code is not actually what you wrote but is more complex and val lives somewhere else, I dunno, there are likely a few ways to go about it
[05:21:49] <gehn> well, not likely, there *are* a few ways to go about it; which ones are appropriate depends on your goals aka "what are you actually trying to do"
[05:22:14] <matsaman> hax: react is trash
[05:22:19] <matsaman> most linters are obnoxious
[05:22:20] <matsaman> =D
[05:22:22] <de-facto> yeah its more complex, and i see something else is going on indeed
[05:22:37] <gehn> react is best act
[05:23:21] <matsaman> named after someone's experience with the ACT
[05:23:44] <gehn> the angular paradigm is trash, the react paradigm is good, and both have multiple clones and or alternatives by now like vue and or svelte etc etc
[05:27:18] <matsaman> they all suck
[05:27:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:27:38] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:28:22] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[05:28:51] <sheetjs> a lot of it is fad driven
[05:29:45] <matsaman> ^
[05:29:59] <matsaman> and the rest is human-condition-as-boredom driven
[05:30:26] <sheetjs> angular has a router
[05:30:33] <matsaman> and then after that, it's people who want to be the only person who can deal with any particular stack, so they force its adoption
[05:30:40] <sheetjs> react does not, and there are multiple solutions in the ecosystem for it
[05:30:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:31:27] <sheetjs> people point to angular's size as a criticism, missing the fact that a large part of why react is so small is because the size metric omits the third party modules you have to include for basic features
[05:31:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:33:17] <matsaman> they're both monstrous
[05:33:19] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:33:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[05:33:28] *** Joins: silverdust (~silverdus@user/silverdust)
[05:34:19] *** Quits: Swantvee (~swant@libera/staff/swant) (Remote host closed the connection)
[05:36:40] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[05:37:52] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 268 seconds)
[05:37:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[05:38:26] <ox1eef> they overcomplicate the development model as well. they're like black holes people get trapped in.
[05:38:42] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[05:38:50] <ox1eef> unless it's a big project i'd prefer vanilla JS.
[05:39:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:39:56] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[05:40:02] <matsaman> you shouldn't have to create a rigid framework just to keep people from making a giant sloppy mess like what Facebook had when they were prompted to rewrite it and make react
[05:40:14] <ox1eef> =]
[05:41:08] <matsaman> and with that, I want to find a react.js obfuscation contest, or make one =P
[05:41:16] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:41:37] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:42:27] <ox1eef> i haven't used react in years but from afar it just seems to get more complicated as it goes, without trying to obsfucate anything.
[05:42:30] <ljharb> angular is terrible and size has nothing to do with it
[05:42:42] <matsaman> motion of the ocean
[05:42:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:42:51] <ljharb> and yes, the react paradigm is great, separate from the specific choices made by the react team
[05:43:23] <de-facto> hmm somehow that scope is freaked up, its not the version of it when that addEventlistener function was called but a later version of it
[05:44:10] <de-facto> var val = "ok"; window.addEventListener('keyup', function(event) { ...how to get val here? }); val = "not ok"
[05:44:18] <de-facto> someting like that
[05:44:21] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[05:44:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:44:47] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:44:53] <ljharb> devslash: you just reference it
[05:44:55] <de-facto> how do i get a snapshot of the scope at the time when  window.addEventListener( ... ) was called?
[05:44:58] <ljharb> de-facto: ^
[05:45:08] <de-facto> yeah but how?
[05:45:12] <ljharb> de-facto: you don't get a snapshot of the scope. if you want a snapshot of a *value*, you assign it to a new variable
[05:45:21] <ljharb> de-facto: but also, don't add event listeners in a loop
[05:45:23] <ljharb> use event delegation
[05:45:36] <de-facto> its in a loop yeah and it sees the last iteration
[05:45:46] <ox1eef> "val" will be available to that listener function, it is a local - if "this" changes, maybe you want to use an ES6 function.
[05:45:51] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[05:45:57] <systemfault> Don't use loops? :)
[05:46:02] <de-facto> lol
[05:46:09] <ox1eef> use forEach instead
[05:46:45] <de-facto> how do i reference the current scope for an iteration ?
[05:46:55] <ox1eef> are you using a for loop? because that's the issue
[05:46:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[05:47:05] <ox1eef> use forEach instead, it will capture the local like you expect.
[05:47:06] <de-facto> yes its a for loop
[05:47:25] <de-facto> can i emulate that?
[05:47:55] <ox1eef> eh i guess maybe, an anonymous function call in the loop might work but the standard fix is to use forEach
[05:49:20] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[05:49:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[05:50:03] <de-facto> hmm wrapping it in an anonymous function does not work
[05:50:38] <de-facto> (function() {  window.addEventListener( ... ) })();
[05:51:07] <ox1eef> that's the idea yeah, then define "val" inside the anonymous function.
[05:53:14] <de-facto> maybe i need to warp the whole loop body
[05:53:44] <ox1eef> yes.. for(;;) { (function() { var val = ; })(); }
[05:54:01] <de-facto> oh yeah that works
[05:54:07] <de-facto> nice
[05:54:20] <ox1eef> not really :D just use forEach.
[05:54:41] <systemfault> Why would that work?
[05:55:05] <ox1eef> for the same reason forEach works.
[05:55:30] <systemfault> But you need to pass the value to the IIFE
[05:55:31] <de-facto> it got an individual independent (anonymous) scope for each iteration i guess
[05:55:34] *** Quits: panella32 (~panella32@164.215.206.60) (Quit: Textual IRC Client: www.textualapp.com)
[05:55:52] <de-facto> with the for loop the scope gets changed each iteration
[05:56:03] <Decker> well it can init to the variable in the for loop too and keep a copy without passing
[05:56:34] <systemfault> The problem is using "var"
[05:56:46] <systemfault> "var" doesn't care about block scoping
[05:57:00] <Decker> it's in a function not a block
[05:57:19] <ox1eef> the var declartion is in a for block.
[05:57:40] <de-facto> yes
[05:58:00] <ox1eef> try 'let val = x'; it might also work.
[05:58:22] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[05:58:25] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:59:37] *** Joins: z1haze (~z1haze@user/z1haze)
[05:59:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:00:27] <z1haze> i cant figure out how to get selenium to properly open chrome with wsl. wsl 2 runs on other than 127.0.0.1, but selenium tries to open the browser to 127.0.0.1
[06:01:59] *** Joins: Swantvee (~swant@libera/staff/swant)
[06:02:54] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[06:03:20] <de-facto> nice it works perfectly thanks guys :)
[06:04:01] <systemfault> n> const x = []; for (var i = 0; i < 10; i++) { x.push(() => i) };  x.map(_ => _())
[06:04:02] <jellobot> (okay) [ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10 ]
[06:04:02] *** Quits: Swantvee (~swant@libera/staff/swant) (Remote host closed the connection)
[06:04:07] <systemfault> n> const x = []; for (let i = 0; i < 10; i++) { x.push(() => i) };  x.map(_ => _())
[06:04:08] <jellobot> (okay) [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
[06:04:25] <systemfault> That's what I mean when I say that var doesn't care about block scoping
[06:05:39] <ljharb> !last @ de-facto
[06:05:39] <jellobot> de-facto, If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/
[06:07:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:07:20] *** Joins: Swantvee (~swant@libera/staff/swant)
[06:09:16] *** Joins: gehn (~gehn@user/gehn)
[06:11:01] *** Quits: Swantvee (~swant@libera/staff/swant) (Remote host closed the connection)
[06:11:39] <Decker> I have this feeling that the solution that was 'great it works, thanks' will make the guys answering cringe :)
[06:12:26] *** Quits: vats (~vats@180.149.226.41) (Ping timeout: 250 seconds)
[06:13:47] *** Joins: jmdaemon (~jmdaemon@142.207.76.198)
[06:15:03] <de-facto> thanks
[06:15:18] *** Quits: jmdaemon (~jmdaemon@142.207.76.198) (Changing host)
[06:15:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:16:48] <de-facto> yeah thats exactly my problem described there
[06:18:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:22:22] <de-facto> in that example there at http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/ in the suggested solution
[06:22:48] <de-facto> is the return function() { ... } the function that is attached to the onclick event listener?
[06:23:09] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:23:12] <de-facto> e.g. could I return function(event) { .. } to get the event code?
[06:23:30] <de-facto> event object
[06:25:03] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:27:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:28:42] <de-facto> seems the answer is yes
[06:29:13] <de-facto> thats nice that way in can capture and bind any custom scope while still receiving the argument from the event callback
[06:29:34] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[06:31:02] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:33:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:33:56] *** Joins: thojanssens (~thojansse@49.230.96.140)
[06:34:18] *** Quits: audiocat (~audio@user/audio) (Read error: Connection reset by peer)
[06:35:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[06:35:17] *** Joins: audiocat (~audio@user/audio)
[06:39:20] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[06:39:35] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:b4e7:78c4:245e:8540)
[06:39:50] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:42:21] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:46:41] *** Joins: w0ng (~w0ng@103.1.212.158)
[06:49:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:49:40] *** Parts: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (ERC (IRC client for Emacs 25.3.1))
[06:51:06] *** Joins: thojanssens_ (~thojansse@49.229.129.199)
[06:52:37] *** Quits: thojanssens (~thojansse@49.230.96.140) (Ping timeout: 240 seconds)
[06:52:51] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[06:55:23] *** Joins: silverdust (~silverdus@user/silverdust)
[06:55:51] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[06:56:49] *** Joins: Betal (~Betal@user/betal)
[06:59:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:00:05] *** Joins: pavonia (~user@user/siracusa)
[07:02:07] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:04:26] <ljharb> de-facto: the answer is *don't add event listeners in a loop*
[07:04:41] <ljharb> de-facto: add one event listener to a common parent, and you can catch infinite children's clicks at once
[07:04:58] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:f5a:e3ce:b523:2768)
[07:07:32] *** Quits: cisme__ (~cisme_@2600:1700:d980:1a40:182a:4ef3:47e9:95ff) (Ping timeout: 240 seconds)
[07:09:48] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Quit: WeeChat 3.3)
[07:10:56] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:13:57] *** Joins: fef (~thedawn@user/thedawn)
[07:15:54] <de-facto> the loop goes over an array of config objects that create a toolbar with svg buttons, each registering a click and keycode event
[07:20:19] <ljharb> devslash: right. so, don't do that. add a listener for both events on the *toolbar*
[07:20:22] <ljharb> events bubble up.
[07:21:11] <dave0> like bubbles in soda
[07:22:04] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[07:22:53] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[07:24:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[07:28:16] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[07:30:37] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 240 seconds)
[07:32:51] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[07:33:31] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[07:33:31] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[07:33:31] *** Joins: nortoh (~nortoh@user/nortoh)
[07:40:37] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[07:41:30] *** Joins: han-solo (~hanish@user/han-solo)
[07:47:23] *** Joins: thojanssens__ (~thojansse@182.232.32.29)
[07:49:47] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[07:50:03] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[07:50:03] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[07:50:57] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[07:51:10] *** Quits: thojanssens_ (~thojansse@49.229.129.199) (Ping timeout: 256 seconds)
[07:53:37] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[08:03:48] *** Quits: nullheroes2 (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[08:07:31] *** Quits: laslmtdwbcs^ (~laslmtdwb@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[08:10:11] *** Parts: queue (~nerd@rektnet.com) ()
[08:13:02] *** Joins: eyepeetee (~aa@user/eyepeetee)
[08:15:03] <mike18> hi
[08:15:15] <mike18> how can i download the html code from chrome?
[08:15:56] <mike18> when i go to source its empty in the devloper tools
[08:16:21] <systemfault> Then the HTML is probably created by JS
[08:16:35] <systemfault> So there's no HTML source
[08:16:42] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:19:18] <mike18> so there is no way to download it than?
[08:20:19] <ljharb> you can "view source" and then "save as"
[08:20:30] <ljharb> but that won't save all the cached assets that are displayed, like js, css, images, etc
[08:20:42] <ljharb> oh right, also that won't save the current state of the dom
[08:24:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:24:53] <mike18> but i see text in the text box
[08:24:59] <mike18> it needs to be saved somwhere?
[08:25:19] <mike18> at least somwhere in the dom?
[08:26:14] *** Joins: jmdaemon (~jmdaemon@142.207.63.195)
[08:26:16] <mike18> it looks like it uses a data-uri file:///..../file.txt
[08:26:23] <ljharb> yes, we've talked about that
[08:26:25] <mike18> that i cant get from somewhere?
[08:26:28] <mike18> yeah i know
[08:26:29] <ljharb> if there's text you can just copy and paste it
[08:26:37] <ljharb> there's nothing built into the browser to just dump everything
[08:26:46] <mike18> i know i had to remove some message boxes from the html
[08:26:51] <mike18> in the dom bc the screen was locked
[08:27:17] <mike18> i thought you can deserialize the dom somehow with js?
[08:27:58] <mike18> does that work no?
[08:28:12] <ljharb> i mean maybe, but nothing you can easily download
[08:28:16] <ljharb> what do you mean "the screen was locked"
[08:28:29] <ljharb> your entire situation remains very confusing. if there's something you can see on the screen, you can just go get it
[08:28:59] <mike18> if the screen is locked an a message is there to rate the experience :D
[08:29:11] <mike18> i was not able to see the text in the message box
[08:29:19] <mike18> so i removed that dialog and some other elements
[08:29:22] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:29:23] <mike18> to get to see it again
[08:29:26] <mike18> do you understand?
[08:29:34] <ljharb> so close the modal rating dialog
[08:29:45] <mike18> yeah i removed it from the dom
[08:29:57] <ljharb> but like, just click the "x" or "no" or "cancel" or "close" or whatever
[08:29:58] <mike18> but i thought there is a better solution
[08:30:02] <ljharb> nobody's going to force you to ratei t
[08:30:22] <mike18> the screen is not made to go back after seeing the rate experience dialog
[08:30:28] <mike18> its a workaround i did
[08:30:55] <mike18> i just tought there is a easy way to dump the dom into a file
[08:31:00] <ljharb> no, there's no better solution
[08:31:00] <mike18> and see whats in the dom
[08:31:21] <mike18> also when i check the current dom
[08:31:28] <mike18> bc i see that data-uri file:///..../file.txt
[08:31:37] <mike18> there is no way to access that file btw
[08:32:02] <mike18> is that a security thing?
[08:32:21] <ljharb> no
[08:32:28] <ljharb> it's not actually a file
[08:32:43] <ljharb> and the `data-` prefix means the browser doesn't look at it. which means the page's JS is using it
[08:33:01] <mike18> but there is something in that file?
[08:33:02] <ljharb> so who knows how they're transforming it or what they're doing with it?
[08:33:04] <ljharb> it's not a file
[08:33:04] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[08:33:20] <mike18> the text i look at in the message box i cant find in the dom :)
[08:33:22] <ljharb> but you simply can't know what that data-uri field is for unless you read all of their javascript, and understand it.
[08:33:32] <mike18> the only thing i saw is that data-uri thhing
[08:33:33] <ljharb> it's impossible for there to be actual text, that's not in the dom
[08:33:48] <ljharb> so either it's an image or a canvas (not actual text), or it's in the dom.
[08:34:00] <mike18> you mean it must be in the dom - but i dont find it?
[08:34:13] <mike18> its text - i can copy paste it now
[08:34:21] <mike18> just trying to understand it...
[08:34:34] <ljharb> yes, it must be in the dom
[08:34:40] <ljharb> if you can't find it, that doesn't mean it's not there, that just means you can't find it
[08:34:50] <mike18> is there a text search for the dom in chrome?
[08:34:56] *** Joins: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6)
[08:34:57] <mike18> which goes to the element?
[08:35:22] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[08:36:41] <teut> https://bpa.st/AA3A
[08:36:55] <mike18> whats that?
[08:37:01] <teut> https://bpa.st/RLAA
[08:37:22] <teut> what's the difference between these two codes. It's react
[08:37:48] <teut> the behavior that I'm getting is not the same
[08:37:53] *** Quits: defjam (~eb0t@90.203.120.248) (Read error: Connection reset by peer)
[08:38:41] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[08:40:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[08:42:18] <mike18> ljharb: is there a search no?
[08:42:33] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:42:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:43:42] *** Joins: defjam (~eb0t@90.209.247.249)
[08:47:07] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[08:48:05] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[08:49:15] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[08:49:29] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[08:50:55] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:52:45] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 256 seconds)
[08:52:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[08:53:30] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[08:54:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[08:54:27] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[08:55:05] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[08:56:04] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:56:11] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[08:56:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[08:58:26] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[08:59:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[08:59:43] *** Joins: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp)
[08:59:55] *** Quits: SpiceMan (~Don_Spice@zaq31fa4c95.rev.zaq.ne.jp) (Changing host)
[08:59:55] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[09:00:00] <oscurochu> im about to be a happy guy. i still have a lot of work to do on my frontend to make it testable, and it doesnt have the greatest asthetics but it works, mostly. good tests will likely sort out the remaining problems. sorry to brag lol
[09:00:02] *** Quits: teut (~teut@2401:4900:1c68:6b85:14d9:4273:1b4:ada6) (Quit: Client closed)
[09:00:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:01:36] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[09:04:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:13:58] *** Quits: jmdaemon (~jmdaemon@142.207.63.195) (Changing host)
[09:13:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:17:52] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Ping timeout: 257 seconds)
[09:18:02] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[09:18:13] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[09:18:26] *** Quits: thojanssens__ (~thojansse@182.232.32.29) (Quit: Leaving)
[09:18:45] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:21:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:24:24] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[09:24:27] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[09:26:17] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:f5a:e3ce:b523:2768) (Ping timeout: 240 seconds)
[09:36:46] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:37:06] *** Quits: oscurochu (~oscurochu@37.120.215.102) (Remote host closed the connection)
[09:41:16] *** Joins: thojanssens (~thojansse@182.232.32.29)
[09:41:19] <thojanssens> hello
[09:41:35] <thojanssens> I have an issue with Jest, where I try to count the number of calls to a Jest mock function
[09:41:40] *** Quits: sickdyd (~sickd@FL1-119-243-125-95.tky.mesh.ad.jp) (Read error: No route to host)
[09:41:42] <thojanssens> https://pastebin.com/5GTHMmWc
[09:41:53] *** Joins: sickdyd (~sickd@FL1-119-243-125-95.tky.mesh.ad.jp)
[09:42:16] <thojanssens> "hello!" is printed but jest still considers that the `resolver` function has not been called
[09:42:29] <thojanssens> I'm stuck on that error for a while, I can't figure it out
[09:45:39] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[09:47:45] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[09:48:41] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e)
[09:48:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:50:10] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:50:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[09:56:17] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[09:57:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:57:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:57:56] *** Joins: wroathe (~wroathe@user/wroathe)
[09:57:58] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[09:58:26] <thojanssens> ok got
[09:58:31] <thojanssens> one of the function was asynchronous...
[09:58:54] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[09:59:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:00:40] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[10:01:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:03:01] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[10:03:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:03:48] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[10:06:06] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[10:07:37] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:08:29] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[10:08:48] *** Joins: bobbybob (~Guest14@2405:201:3003:8024:348e:466c:a606:1eb8)
[10:09:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:09:56] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[10:10:00] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:10:01] *** Quits: bobbybob (~Guest14@2405:201:3003:8024:348e:466c:a606:1eb8) (Quit: Client closed)
[10:10:16] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[10:10:57] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:15:11] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[10:18:37] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:26:49] *** Quits: thojanssens (~thojansse@182.232.32.29) (Ping timeout: 256 seconds)
[10:28:09] *** Joins: silverdust (~silverdus@user/silverdust)
[10:29:31] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[10:29:44] <sheetjs> is there a good ts annotation stripper?
[10:29:55] *** Joins: jmd_ (~jmdaemon@142.207.120.123)
[10:30:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[10:31:34] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:9952:728:f039:79c2) (Ping timeout: 250 seconds)
[10:32:57] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:33:00] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[10:33:14] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[10:33:51] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[10:34:32] *** Quits: nelubit (~nelubit@user/nelubit) (Ping timeout: 240 seconds)
[10:35:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:37:37] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[10:37:38] *** Quits: jmd_ (~jmdaemon@142.207.120.123) (Quit: ZNC 1.8.2 - https://znc.in)
[10:37:58] *** Joins: jmdaemon (~jmdaemon@142.207.120.123)
[10:38:08] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[10:38:20] *** Joins: D4mned (~D1mned@212.101.251.220)
[10:40:39] *** Joins: panella32 (~panella32@173.245.219.235)
[10:41:53] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 268 seconds)
[10:42:33] *** Joins: Akiva (~Akiva@user/Akiva)
[10:49:13] *** Quits: panella32 (~panella32@173.245.219.235) (Quit: Textual IRC Client: www.textualapp.com)
[10:54:08] *** Joins: thojanssens (~thojansse@182.232.32.29)
[10:54:08] <systemfault> sheetjs: There are like, a billion of them now, no?
[10:54:38] <sheetjs> like ones that just strip simple annotations?
[10:55:03] <systemfault> What are "annotations" for you?
[10:55:40] <sheetjs> XY the real problem is that i have bare files and want to just remove annotations without doing anything else
[10:56:14] <sheetjs> coffeescript used to have a --bare mode for this
[11:00:22] <systemfault> That's what tsc, babel TS plugin, esbuild, swc all do, no?
[11:02:07] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[11:03:53] <sheetjs> here's the simplest example
[11:04:04] <sheetjs> https://www.typescriptlang.org/play the first example
[11:04:21] <sheetjs> it may seem silly, but their example shows a few ways in which tsc modifies the code
[11:04:35] <sheetjs> first and foremost, adding "use strict";
[11:04:53] <jaawerth> have you tried just using https://babeljs.io/docs/en/babel-plugin-transform-typescript#typescript-compiler-options ? iirc that's pretty much all it does, but with a bajillion options because of the various TS facets
[11:05:07] <sheetjs> line 3 and 9 and 12 and 15 are removed, and semicolons are added to each code line
[11:05:43] <jaawerth> also https://babeljs.io/docs/en/babel-plugin-transform-strict-mode if you aren't using ES modules what with their implicit strict mode
[11:06:35] <sheetjs> just to give an example, in the playground, the ideal stripper would not touch the code
[11:06:50] <jaawerth> I mean, babel. babel.
[11:06:59] <jaawerth> it's one of the tools that doesn't do anything you don't tell it to
[11:07:15] <jaawerth> start witih 0 transforms and add them, starting with the typscriptp one, until you're happy
[11:07:31] <sheetjs> at that rate it might be easier and more maintainable to do it in sed :P
[11:07:50] <jaawerth> lol I mean it's asking what you aske for but sure have fun
[11:07:53] <jaawerth> I'd probably go with awk though
[11:08:23] <systemfault> sheetjs: The TS compiler is configurable... you could set "alwaysStrict" to false to remove "use strict" for example..
[11:08:48] <systemfault> sheetjs: But yeah, look at the TS stripers instead of TSC, babel being the obvious choice
[11:10:56] <jaawerth> speaking of compiled-to-source languages, fennel is extremely permissive about what can be a valid identifier. how permissive, you ask? this compiles and runs https://gist.github.com/jaawerth/0949eca6b3fc33a5353e142cfacf2630
[11:11:12] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:11:41] <sheetjs> JS is pretty flexible with identifiers
[11:12:01] <jaawerth> tell me that when it accepts zalgotext as valid identifiers :P
[11:12:21] <systemfault> Why would anyone use Fennel except for having fun?
[11:12:45] <systemfault> If you want a Lisp that a few people actually use.... there's Clojure :P
[11:13:07] <sheetjs> n> var ಠ_ಠ = 3; ಠ_ಠ-ಠ_ಠ
[11:13:08] <jellobot> (okay) 0
[11:13:26] <jaawerth> lol how do you think I got into fennel?
[11:14:07] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[11:14:54] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[11:15:12] <systemfault> jaawerth: You used javascript to create a script that picks one element in an array of weird but interesting languages and got "Fennel" as result?
[11:16:57] <jaawerth> haha nah, the (by far) most active maintainer (i'm a distant second) of the lang/compiler, who's also the author of leiningen, got me into it by talking about it in #clojure (plus I realized a bazillion things I already use run lua due to it being so tiny and embeddable, so I can run fennel basically everywhere)
[11:17:11] <jaawerth> it's mostly just an excuse for me to tinker around with a compiler though
[11:17:40] *** Quits: tuxer (~tuxer@fixed-189-203-7-133.totalplay.net) (Remote host closed the connection)
[11:17:58] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[11:18:43] <systemfault> Ah, that's cool :)
[11:18:53] *** Joins: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de)
[11:19:23] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[11:20:35] <jaawerth> it's also its own module bundler, which was easier than you'd think to get working thanks to lua's module/require system having having `package.preload` as one of the configurable module searchers
[11:21:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[11:22:22] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[11:22:33] <jaawerth> oh, even better re: the zalgotext-as-rnnnable-code thing, here is what happens to the web repl on fennel-lang.org when you paste that code into it https://p.jaawerth.com/cursed-repl.png
[11:22:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[11:22:59] <jaawerth> (unicode was a mistake)
[11:23:28] <systemfault> jaawerth: Does Fennel support tail recursion?
[11:23:45] <jaawerth> lua does, so fennel also does
[11:24:44] <jaawerth> it's basically just lisp semantics + compile-time macro magic but otherwise aims to compile to lua with as little overhead as it can so it can be embedded in all the same places
[11:25:23] <systemfault> Fennel looks much more interesting to me than Lua...
[11:25:47] <jaawerth> I def prefer it, but I'm biased
[11:26:23] <systemfault> Does it work with Luajit?
[11:26:30] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[11:27:23] <jaawerth> yeah, 5.1-5.4 and luait are all supported, you just have to keep in mind what your're targeting in your source to handle the handful of API differences
[11:27:28] <jaawerth> *luajit
[11:29:04] <jaawerth> it'll also run in fengari (lua vm implemented in js) and I was successful in my very naive tinkering with using emscripten's emcc with fennel's --compile-binary flag to get it running in wasm. though to properly use it in wasm would take actual work
[11:29:47] <jaawerth> (well, that's just compiling the fennel compiler's own self + the lua vm to a static binary/wasm)
[11:30:38] <jaawerth> I'm tempted to make a direct-to-JS analog just because I wish I had clean macros in JS quite frequently
[11:30:48] <jaawerth> but there are enough toy compile-to-js langs as it is ;-)
[11:31:20] <systemfault> Clojure included...
[11:32:26] <jaawerth> hah, I actually think clojurescript is pretty decent. in some ways it's cleaner than clojure itself, since prototypes have way less overhead compared to the horrendous reflection stuff you have to do in java to get first-class protocols working
[11:32:51] <jaawerth> shame it goes through the closure compiler though
[11:33:10] *** Joins: nelubit (~nelubit@user/nelubit)
[11:33:15] <deniska> https://github.com/clojure/clojure/blob/master/src/jvm/clojure/lang/IFn.java I don't see anything horrendous about it :)
[11:33:51] <jaawerth> well, it's just that it can't use its own features for perf reasons is all
[11:34:33] <jaawerth> and instead has to implement core things as java classes. it's not a huge deal but it's sort of a shame. in cljs a lot of the core operationsare expressed in terms of defprotocol iirc
[11:34:37] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[11:34:55] <systemfault> jaawerth: I don't see the problem with generated code using the closure compiler in advanced mode.
[11:35:44] <jaawerth> true, it's abstracted, and most of the pain involved with closure compiler is having to confiugure and interface with it
[11:36:12] <jaawerth> I do like clojurein both its forms :)
[11:37:13] <jaawerth> (though I can't help but think the BEAM/erlang version could be the best version if it had an active community)
[11:39:59] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40)
[11:40:36] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[11:41:43] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[11:44:43] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[11:45:05] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[11:45:56] *** Quits: Croran (~Croran@71.231.214.173) (Quit: leaving)
[11:48:37] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[11:48:56] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:49:19] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[11:49:55] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[11:52:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[11:52:35] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[12:01:17] *** Quits: sickdyd (~sickd@FL1-119-243-125-95.tky.mesh.ad.jp) (Ping timeout: 240 seconds)
[12:03:22] *** Joins: sickdyd (~sickd@FL1-133-202-201-130.tky.mesh.ad.jp)
[12:05:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[12:07:33] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:08:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:14:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:14:57] *** Quits: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:20:57] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[12:24:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:24:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:24:12] *** Joins: wroathe (~wroathe@user/wroathe)
[12:27:20] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[12:28:54] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[12:28:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:30:09] *** Quits: Ealinn[m] (~olgatokar@2001:470:69fc:105::1:3e01) (Quit: You have been kicked for being idle)
[12:33:13] *** Joins: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au)
[12:42:01] *** Joins: Naan (~Naan@user/naan)
[12:43:32] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[12:43:59] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:45:46] *** Joins: stenno (~stenno@user/stenno)
[12:49:57] *** Joins: Deneb (~johnch@101.111.189.80.dyn.plus.net)
[12:49:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:50:05] *** Joins: D1nger (~Booster2o@91.183.83.5)
[12:53:01] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 256 seconds)
[12:53:28] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:54:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:54:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:54:59] *** Joins: wroathe (~wroathe@user/wroathe)
[12:57:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:58:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:59:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:06:57] *** Quits: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au) (Remote host closed the connection)
[13:07:15] *** Joins: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au)
[13:07:40] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[13:11:18] *** Joins: silverdust (~silverdus@user/silverdust)
[13:13:09] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:e477:8c1b:94d5:fd66) (Read error: Connection reset by peer)
[13:15:07] *** Quits: thojanssens (~thojansse@182.232.32.29) (Ping timeout: 256 seconds)
[13:15:24] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:16:11] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[13:16:14] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[13:16:19] <aLeSD> hi there
[13:16:55] <aLeSD> is it ok to create a function like async do1() { return await do2(); } ?
[13:17:36] <aLeSD> I am doubting on the 'await' ... maybe I should remove it
[13:18:05] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[13:18:35] *** Joins: thojanssens (~thojansse@182.232.32.29)
[13:22:04] <Kabouik> Hi #JS. I use a javascript function in R to create custom clusters for a Leaflet map. I don't know JS so I took this function from some post on stackoverflow: https://0x0.st/ooNL.txt
[13:22:30] <Kabouik> However, as you can see here https://0x0.st/ooN9.png, this creates square clusters when tere is too many data points clustered. I'm assuming the svg is just getting cropped.
[13:25:08] <Kabouik> I tried altering the `<svg>` line at the bottom of the function and managed to remove the cropping, but this is not desirable because this increases the size of clusters and their clickbox, thus preventing clicks on map features that are too close. This also somehow alters the position of the center of clusters.
[13:25:13] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[13:25:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:25:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:25:47] *** Joins: wroathe (~wroathe@user/wroathe)
[13:25:53] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:25:57] <avu> aLeSD: yes, that await does nothing useful, it just keeps the do1 function on the stack uselessly
[13:26:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:29:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:30:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:30:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:31:45] *** Joins: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de)
[13:31:47] <jaawerth> Kabouik: what did you alter? the style attr? also, any way you can, like, serialize this so we can get more readable JS to help you parse through?
[13:32:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:33:41] <aLeSD> avu, thanks
[13:34:31] *** Quits: D1nger (~Booster2o@91.183.83.5) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[13:34:37] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:34:46] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:38:21] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[13:38:49] <jaawerth> Kabouik: anyway I suspect it's the viewBox you'll need to modify https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox -  you can optionally use it in tandem with <view> to basically control zoom level https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view
[13:39:00] <jaawerth> (mostly just viewBox though)
[13:39:32] *** Quits: Deneb (~johnch@101.111.189.80.dyn.plus.net) (Quit: Leaving)
[13:39:49] *** Joins: stenno (~stenno@user/stenno)
[13:40:48] <sickdyd> what headless CMS would you suggest to use for something extremely simple? I need to integrate it with Gatsby
[13:41:21] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[13:42:29] <silly> markdown files in a github repo, can't get any simpler than that
[13:43:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[13:44:37] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:51:49] *** Quits: D4mned (~D1mned@212.101.251.220) (Read error: Connection reset by peer)
[13:52:37] *** Quits: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au) (Ping timeout: 240 seconds)
[13:53:06] *** Joins: D4mned (~D1mned@212.101.251.23)
[13:53:40] *** Quits: sickdyd (~sickd@FL1-133-202-201-130.tky.mesh.ad.jp) (Ping timeout: 268 seconds)
[13:56:01] *** Joins: nomic (~nomic@185.192.69.41)
[13:56:33] *** Joins: wroathe (~wroathe@user/wroathe)
[14:01:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:03:05] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:03:13] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:04:14] *** Quits: jmdaemon (~jmdaemon@142.207.120.123) (Changing host)
[14:04:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:08:06] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[14:16:16] <Kabouik> jaawerth thanks for your reply. Sorry about the bad formatting of the JS function, it's just how it was posted on stackoverflow and since I can't write JS I didn't venture into reformating it
[14:17:19] <Kabouik> viewBox indeed seems to be involved. I did edit it at some point (together with svg size) and it solved the cropping, but cluster were not correctly positionned. Let me show you what I did:
[14:18:29] <Kabouik> I turned `<svg max-width='60' maxheight='60' viewBox='-30 -30 60 60' style='width: 60px; height: 60px; position: relative; top: -24px; left: -24px;' >` into `<svg max-width='180' maxheight='180' viewBox='-90 -90 180 180' style='width: 180px; height: 180px; position: relative; top: -72px; left: -72px;' >`
[14:19:13] <jaawerth> this is something I would suggest making a fiddle for - we'll (I have to focus on work shortly, but others here ecan also help) be able to be more effective with a live svg example we can tinker with
[14:19:16] <jaawerth> !fiddle
[14:19:16] <jellobot> jaawerth, Please create a running example of your code (a screenshot is not acceptable). For browsers: jsfiddle.net, codesandbox.io, stackblitz.com, codepen.io, jsbin.com  For node: runkit.com, gist.github.com. See also !mcve and !paste
[14:19:32] <Kabouik> Hum wait it was svg width= and height=, not max-width= and max-height=
[14:20:45] <jaawerth> yeah they all sort of relate - here, this ties things together pretty well and even has some live/interactive examples https://css-tricks.com/creating-a-panning-effect-for-svg/
[14:21:23] <Kabouik> The problems with multiplying everything by 3 are (i) when zooming in, clusters are smaller, but their "footprint" is larger than the actual image, which prevents clicking on things beneath it, and (ii) the top: and left: shouldn't be multiplied by 3 because this messed up the exact positionning, but I really don't know where the initial -24px came from so I can't reproduce the same calculation for the new size.
[14:22:30] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:22:35] <jaawerth> you might need to adjust your units. you can also use percentages within the viewbox
[14:24:59] <Kabouik> I tried that only for top: and left: and it didn't work, but I didn't try for viewBox. Will do. It would still help to understand how the -24px in the initial function was calculated. I assume it was a substraction between the svg size (remember this should be width= and height= there, I mistakenly pasted an erroneous edit of the function above, sorry) and something else size xxx6px somewhere, but I don't see what
[14:26:29] <jaawerth> so the idea behind the viewBox is you define its units with respect to width and height, and then all the inner coordinates can be unitless
[14:26:33] <jaawerth> and will scale with the container
[14:27:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:27:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:27:20] *** Joins: wroathe (~wroathe@user/wroathe)
[14:27:43] <jaawerth> oh the viewPort is also important there
[14:30:56] <jaawerth> so you define your width and height to be whatever pixels, then the viewBox are is a unitless set of coordinates inside it. then all the coordinates for the svg elements, you don't need units, since they're in terms of the viewBox and the containing actual dimensions. trying to use it in tandem with real coordinates will cause the exact kind of clustering issues you're talking about
[14:31:50] <Kabouik> This is what I'd get with svg width='180' height='180' viewBox='-90 -90 180 180' style='width: 180px; height: 180px; position: relative; top: -24px; left: -24px;' >`: https://0x0.st/ooqi.png Clusters look good and are no longer cropped, but their position is off (I need adjusting top: and left: but don't know how those were calculated in the first place) and the click area is also wrong, much larger than the clusters themselves.
[14:32:04] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:32:10] <jaawerth> Kabouik: oh, also, possibly relevant  this https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio
[14:32:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:32:30] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 250 seconds)
[14:32:47] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Remote host closed the connection)
[14:33:21] <jaawerth> alright, with that I gotta start looking at my code :)
[14:33:53] *** Joins: stenno (~stenno@user/stenno)
[14:33:57] <jaawerth> but try the aspect ratio - that might help with positioning, and from there it might just be messing with the CSS
[14:34:02] <Kabouik> Thanks for the help jaawerth. I'm not there yet since I still need to translate your advice in layman's terms, but this gives me hope. :p
[14:34:43] <jaawerth> yeah sorry my advice is so high-level, figured it'd be better than nothing though
[14:34:49] <jaawerth> oh I had one more link that lays things out pretty well IMO
[14:35:22] <jaawerth> https://www.sarasoueidan.com/blog/svg-coordinate-systems/
[14:36:10] <Kabouik> That one is a long read but it seems pretty much on spot, hope it will help, thanks!
[14:36:42] <jaawerth> there's a part 2 and 3 - I know you're just trying to solve this one problem but last time I had to do this kind of thing (generating annotations on an itneractive map, not unlike what you're doing), reading up on the core concepts these mention really helped a lot
[14:37:31] <jaawerth> though that was like 5-6 years ago and I was using raphaeljs instead of SVG because I had to support IE9 and possibly IE8 (so it could be worse!)
[14:38:08] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[14:38:50] <Kabouik> Yeah I can see that my issue is related to know understanding the relative influences of things like svg height=, width=, viewBox, style height and width, etc. I was hoping I could just solve this one-liner issue without learning the concepts because I literally never need them in R usually, but this may not be that easy.
[14:39:49] <Kabouik> Oh well it certainly would be a good idea to support IE too, but I'm a biologist, not a programmer, I have a good excuse to tell colleagues: folks, just use Chromium or Firefox based browsers please. :p
[14:40:12] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[14:40:22] <Kabouik> (Says someone who uses Nyxt as a browser…)
[14:40:31] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:295b:27c3:87b1:2b8f)
[14:44:18] <jaawerth> well IE8 and 9 aren't even supported by microsoft anymore so anyone still using them is probably working in some kind of horrendous closed network environment. heck, they were already showing their age 5-6 years ago
[14:44:41] *** Joins: mknod (~mknod@user/mknod)
[14:45:18] <jaawerth> IE9 still had the problem where window.console didn't exist until you opened the console, so console.log would cause silent JS errors, which wouldn't be in the console when you opened it, and would magically fix themselves when you subsequently refresh because now window.console exists
[14:47:43] <Kabouik> Haha, that sounds like a great solution
[14:47:52] <Kabouik> "Yeah, just open the console, close it and reload"
[14:48:29] <Kabouik> "I understand you have a problem with your toaster not toasting right. Did you try to unplug and replug the power socket of your toaster?"
[14:52:35] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:54:52] *** Joins: fef (~thedawn@user/thedawn)
[14:55:21] *** Joins: vysn (~vysn@user/vysn)
[14:57:28] *** Joins: silverdust (~silverdus@user/silverdust)
[14:58:53] <DnzAtWrk> I don't see why a toaster wouldn't use an operating system
[14:58:58] <DnzAtWrk> like ToastOS
[14:59:32] <DnzAtWrk> they could add an instagram share-your-toast feature and a chromium-based browser for watching youtube while you toast
[15:01:58] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 250 seconds)
[15:02:13] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[15:02:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:03:58] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[15:04:18] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:04:18] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:04:18] *** Joins: wroathe (~wroathe@user/wroathe)
[15:04:33] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[15:04:40] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) ()
[15:05:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:06:25] *** Joins: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn)
[15:06:44] *** Parts: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) ()
[15:09:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[15:09:37] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 240 seconds)
[15:09:44] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:09:48] <Kabouik> Pretty sure this should be electron-based instead.
[15:11:20] <hassoon> 'morning
[15:12:13] *** Joins: kordou (~Guest1@193.92.82.45.dsl.dyn.forthnet.gr)
[15:13:15] <kordou> HI! I have two div elements that overlap each other and I want to able to listen to click event ob both of them. how can I do this ?
[15:15:15] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[15:22:57] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[15:25:11] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:25:12] <hassoon> kordou: just set the click event on the overlapping one, and then access the event target as well as the other overlapped div within your click event handler logic
[15:25:56] <hassoon> kordou: you can give one of the divs a css rule of pointer-events:none; to make sure only one of the divs receive the click event
[15:26:32] *** Joins: silverdust (~silverdus@user/silverdust)
[15:27:02] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 240 seconds)
[15:27:23] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Remote host closed the connection)
[15:27:43] *** Quits: thojanssens (~thojansse@182.232.32.29) (Ping timeout: 256 seconds)
[15:27:57] *** Joins: stenno (~stenno@user/stenno)
[15:31:02] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[15:32:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[15:33:55] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:33:57] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Bye everyone)
[15:34:53] *** Joins: pmercado (~pmercado@186.107.48.199)
[15:35:28] *** Joins: jonifen (~jonifen@user/jonifen)
[15:40:02] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 240 seconds)
[15:41:04] *** Joins: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net)
[15:42:16] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[15:44:57] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[15:45:22] <kordou> hassoon Thanks a lot. The pointer event works also for the touch  ?
[15:45:24] *** Quits: rev1nchn (~rev1nchn@gateway/vpn/pia/rev1nchn) ()
[15:54:37] *** Quits: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[15:58:14] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[16:03:36] *** Quits: kakashiAL (~kakashi@ip-037-201-198-009.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[16:04:44] *** Quits: oscurochu (~oscurochu@37.120.215.100) (Ping timeout: 256 seconds)
[16:06:51] <hassoon> kordou: there is TouchEvent for you
[16:07:21] <hassoon> kordou: you need to differenciate between touchevent and clickevent, so you don't have duplicate code executiojs
[16:07:24] <hassoon> * executions
[16:08:14] <hassoon> kordou: as a clue, the touchevent fires always before the click event, you can set a boolean switch to know when to run the touchevent handler logic or the  clickevent's
[16:08:36] <hassoon> kordou: do check which one is triggered the first though, just to make sure
[16:14:37] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 240 seconds)
[16:15:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[16:18:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[16:21:18] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[16:21:42] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[16:22:01] *** Joins: stenno (~stenno@user/stenno)
[16:23:41] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[16:23:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:24:17] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[16:26:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[16:26:50] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:26:56] *** Joins: silverdust (~silverdus@user/silverdust)
[16:27:03] *** Joins: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net)
[16:28:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:28:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[16:28:33] *** Joins: tex (~super@user/dix)
[16:29:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[16:31:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[16:34:21] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[16:38:35] *** Joins: fef (~thedawn@user/thedawn)
[16:39:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[16:45:55] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:48:16] *** Joins: thojanssens (~thojansse@182.232.32.29)
[16:51:45] *** Joins: stenno (~stenno@user/stenno)
[16:51:56] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[16:52:28] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:55:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Quit: Leaving)
[16:57:22] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[16:57:30] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Excess Flood)
[16:57:36] <silly> qswz, \o/ welcome back! stenno ping
[16:58:11] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:9dce:76e7:4731:23dd)
[16:59:14] <qswz> hey guys
[17:00:19] <silly> nothing special, we just want you to hang around
[17:00:20] <qswz> I was maintaining prompt package, but don't have time or motivation to updat it anymore https://github.com/flatiron/prompt/issues/223
[17:00:56] <qswz> silly: no prob, it's just that I moved in a noisy place, when it's calm I'll be more sleeping than chatting :D
[17:01:26] <silly> new flat?
[17:01:37] <silly> i hope you have heating and air conditioning now
[17:01:53] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:02:06] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[17:03:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:04:00] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:04:00] *** Joins: trevors (~trevors@user/trevors)
[17:04:05] <qswz> yes new flat, above a nanny
[17:04:25] <silly> eww babies
[17:04:29] <qswz> no heat, no hot water, but really no need, I need silence rather haha
[17:04:47] <silly> i have a snoring cat
[17:05:07] <qswz> he's not fit
[17:05:53] <qswz> make him fast, that solve snoring usually (weightloss)
[17:06:03] <silly> it's a she
[17:06:26] <qswz> a shemale, sorry
[17:06:37] <silly> but i won't let her go outside, every time this happens she comes back all dirty with flea and worms :(
[17:06:47] *** Joins: nomic (~nomic@185.192.69.41)
[17:07:03] <silly> we have too many street cats in croatia
[17:07:46] <qswz> cats are the new rats
[17:08:35] <silly> it makes me so sad. when i got her, we went outside regularly and she enjoyed climbing the olive trees and laying in dirt, catching and eating birds
[17:09:02] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[17:09:05] *** Quits: hamess (~hamess@user/hamess) (Quit: **BRB** dyed my hair bLacK. Mom got so mad lol)
[17:09:12] <silly> do you in france have cats on the streets too?
[17:09:14] <qswz> I love hearing birds
[17:09:22] <qswz> yea
[17:09:41] <qswz> there are almost as many pets as populaton in france
[17:09:46] <silly> weird, it's something i don't know from germany
[17:10:00] <undefined_bob> you can give her medicine in her furr against fleas and precautionary pills against worms
[17:10:05] *** Joins: N4buc0- (~N4buc0@177.40.2.111)
[17:10:18] <qswz> not too many in the streets tho
[17:10:27] <silly> yes, i know, once she lost furr where i applied the medicine :o
[17:10:53] <qswz> in her furr Elise
[17:11:16] <undefined_bob> hm try a different one and only apply it to a small patch for testing?
[17:11:40] <silly> nope, i won't let her out anymore
[17:11:42] <undefined_bob> Or else you can get a cat harness for her and go outside together with her on a lash
[17:11:50] <qswz> we need to introduce big eagles, so they eat cats
[17:12:00] <qswz> small birds vengeance
[17:12:21] <undefined_bob> this way she can be safely outside together with you :3
[17:12:23] <silly> also, drivers don't stop for cats, so it's only a question of time, until she won't come back from a day trip
[17:13:19] <silly> it's fine, i'll get a home office job and together we can wait at home for death to arrive
[17:13:49] <silly> heating and air conditioning is all we need
[17:14:12] <qswz> if pets outlived humans, people would have less pets
[17:14:20] <silly> true
[17:15:22] <silly> although, i think tortoise can get older than humans
[17:15:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[17:15:59] <undefined_bob> turtles often get older than their humans and afaik some birds too
[17:16:02] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:16:03] *** Joins: hamess (~hamess@user/hamess)
[17:20:06] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[17:20:30] *** Joins: pulse_ (~pulse@user/pulse)
[17:21:06] <silly> oh yeah, parrots
[17:21:10] *** pulse_ is now known as pulse
[17:22:42] <qswz> we have green exotic parrots who developped outside
[17:23:33] <qswz> big groups of them
[17:26:03] <silly> and humming birds?
[17:26:54] <silly> we have some weird birds here, barely bigger than a bee
[17:29:34] <qswz> oh man I hate function hoisting (function after return), so confusing
[17:30:28] <qswz> https://github.com/heapwolf/prompt-sync/blob/master/index.js#L30
[17:31:48] <varrg> indeed, should be declared on top
[17:32:40] <qswz> I think airbnb discourage nested fnctions no? or Jordan at least
[17:33:01] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:33:09] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[17:34:04] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[17:34:15] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[17:34:37] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[17:34:54] <qswz> avocadoes are expensive, but I think I'll buy a few, I need that
[17:36:26] <silly> oh yeah, that's a nice example of a terrible habit
[17:36:54] <silly> i found such in my old code too
[17:37:08] <qswz> I'mfine with nested functions
[17:37:18] <qswz> even in react components
[17:37:40] <silly> well, if it has to life in a closure, so be it
[17:37:54] <qswz> function Shit(props) {
[17:38:07] <qswz>   function handleClick(e) {
[17:38:50] <silly> i thought useEffect was a good example?
[17:39:37] <silly> but i'm not quite sure if that counts, i feel like my understanding of react isn't deep enough
[17:40:54] *** Joins: paule32 (~paul@nat-91-137-26-13.net.encoline.de)
[17:40:54] *** Quits: paule32 (~paul@nat-91-137-26-13.net.encoline.de) (Changing host)
[17:40:54] *** Joins: paule32 (~paul@user/paule32)
[17:44:29] *** Joins: voltage_ (voltage@user/voltage)
[17:46:14] <qswz> with use effect functions are not directly nested
[17:47:06] <qswz> function f() { function g() { } }
[17:47:07] <qswz> vs
[17:47:20] <qswz> function f() { h(function g() { }); }
[17:47:23] <qswz> different
[17:47:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:47:51] <silly> react stores the callback somewhere, right
[17:48:20] <qswz> yea
[17:48:29] <qswz> there's isecalllback too
[17:48:35] <qswz> use*
[17:48:51] <silly> <MaybeThis onClick={(){/*tadaa*/}}
[17:48:59] <qswz> you rarely need it
[17:49:04] <silly> <MaybeThis onClick={()=>{/*tadaa*/}} />
[17:49:38] <silly> oh look, the cat woke up
[17:49:56] <silly> her name is Emma
[17:49:57] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:f8ce:fddf:e624:da40) (Read error: Connection reset by peer)
[17:51:33] <qswz> https://www.youtube.com/watch?v=Qpzx5SZuIv4
[17:51:33] <skillbot> YouTube Title: Matmatah - Emma
[17:52:13] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:52:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:52:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:52:49] *** Joins: wroathe (~wroathe@user/wroathe)
[18:00:43] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Ping timeout: 256 seconds)
[18:04:12] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[18:07:00] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:07:18] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Remote host closed the connection)
[18:08:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:08:45] *** Joins: silverdust (~silverdus@user/silverdust)
[18:14:30] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[18:16:26] <qswz> fun fact, potatoes are actually more nutritious than avocadoes
[18:16:41] <qswz> contain more different vitamins and stuff
[18:17:13] <qswz> I need to make a salary to potato / banana convertor
[18:17:23] <qswz> to show that people are paid more than enough
[18:18:43] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[18:19:02] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:9dce:76e7:4731:23dd) (Ping timeout: 240 seconds)
[18:23:00] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[18:23:45] *** Quits: b-rex (van@down.by.the.river.lol) (Quit: ZNC 1.8.2 - https://znc.in)
[18:25:00] *** Joins: b-rex (van@down.by.the.river.lol)
[18:27:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:29:29] <qswz> I earn 100 bananas/day, way more than enough
[18:29:32] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:29:44] *** Joins: silverdust (~silverdus@user/silverdust)
[18:30:47] <qswz> I could eat 50 bananas, if they are super ripe, but 100, nah
[18:32:08] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[18:32:48] <qswz> what's a good term that can englob any payment method (card, sepa, wallet, ..)?
[18:32:57] <qswz> "payment method" feels too technical
[18:33:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:37:52] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[18:41:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:41:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:41:03] *** Joins: wroathe (~wroathe@user/wroathe)
[18:42:14] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[18:43:00] <wedr> Anyone who tries to open Google Chrome Dev on Linux, how do you solve the issue where the browser fails to display the window (and it glitching out when I tried opening a new window instance)?
[18:45:49] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:45:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:46:49] *** Joins: kakashiAL (~kakashi@37.85.18.55)
[18:48:11] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[18:48:13] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:48:17] <buu> qswz: cash money
[18:49:09] <qswz> buu: :D
[18:49:13] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[18:49:42] <qswz> shut up and take my $
[18:50:27] <qswz> do you gys use plausible.io? instead of GA
[18:52:19] <ThePendulum> you can keep your jquery
[18:52:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:54:01] <ThePendulum> I don't but I've been looking for a GA alternative. €9/mo for 10k views though, meh, would rather host something myself
[18:54:41] <buu> I don't have any traffic to analyze =[
[18:55:13] <qswz> because it's just illegal traffic
[18:55:26] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[19:01:18] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-068.46.114.pool.telefonica.de)
[19:01:53] *** Quits: kordou (~Guest1@193.92.82.45.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[19:03:51] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[19:04:46] *** Parts: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) ()
[19:06:04] *** Joins: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c)
[19:07:27] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[19:10:17] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[19:11:33] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:16:01] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:17:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:17:42] *** Quits: myusername (~sleeeepin@2001:4641:6e62:0:406c:71b5:d48e:398c) (Quit: Leaving)
[19:18:01] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:22:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:25:54] *** Quits: thojanssens (~thojansse@182.232.32.29) (Ping timeout: 256 seconds)
[19:27:02] <renlo> a coworker worked with the guy who made jquery (iirc Resig), apparently he wasnt using jQuery himself at the time (~4 years ago)
[19:27:09] <renlo> * a friend (not coworker)
[19:29:43] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:29:52] *** Quits: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[19:31:03] <qswz> it's because John resigned
[19:31:33] <qswz> easy one
[19:32:39] <qswz> I think react had a bigger impact than jquery
[19:34:57] *** Joins: Simplar (~quassel@188.163.93.76)
[19:36:17] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:38:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:40:26] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[19:45:03] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[19:47:42] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:49:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:49:59] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[19:49:59] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[19:50:22] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[19:51:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[19:52:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:53:28] *** Joins: fef (~thedawn@user/thedawn)
[19:53:35] *** Joins: taupiqueur_ (~taupiqueu@67.245.204.77.rev.sfr.net)
[19:54:14] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:56:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:01:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[20:03:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:06:46] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[20:07:04] *** Joins: stenno (~stenno@user/stenno)
[20:10:08] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:10:14] <banana_> o/
[20:11:34] <banana_> ljharb: morning, if you had to advocate data-down event-up patterns for components how would you go about it. specifically advocating not encapsulating ajax calls inside components
[20:21:25] <qswz> with react use react-query
[20:21:56] <qswz> combine this with your own modules for api calls
[20:22:29] <qswz> const q = useQuery('stuff', actions.listStuff);
[20:22:32] <banana_> yeah I'm more asking if you had to convince someone else not to put ajax calls in a component how would you go about it
[20:22:41] <banana_> and not talking about route components btw
[20:22:43] <austincheney> banana_, all events receive an implicit event object.  That object can be passed into other functions, so that solves for event up.  Data-down requires a bit of work, but not much more.
[20:23:17] <qswz> banana_: is useQuery putting API calls in the component?
[20:23:24] <renlo> banana_: show them angular
[20:23:33] <qswz> answer is yes and no
[20:23:40] <qswz> the logic is in actions/
[20:23:51] <qswz> the hook in the component
[20:24:20] <qswz> no need for data-down event-up hype-out pattern
[20:24:21] <austincheney> You could store data you receive from HTTP responses, but that seems fragile.  I would pass all data from a network through a common orchestrator that is looking for a unique identifier and that identifier should determine where to push the data.
[20:25:00] <banana_> austincheney: are you saying specifying a callback that any driver can implement is more abstract than having stuff implemented directly in the component?
[20:25:11] <qswz> useQuery(identifier, callback)
[20:25:18] <qswz> that's exactly what it does
[20:25:25] <austincheney> banana_, let me get an example that works well for me
[20:25:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:26:16] <austincheney> banana_, here is an example of this on the server side (but its the same in the browser): https://github.com/prettydiff/share-file-systems/blob/master/lib/terminal/server/transmission/receiver.ts
[20:26:32] <banana_> austincheney: are you talking about redux?
[20:26:47] <banana_> or Redux forgot which one is the pattern
[20:26:55] <austincheney> The data, regardless of what it is or what it contains takes the patter:   {data:{the stuff}, service:"same of the micro service"}
[20:27:04] <qswz> how to sort list, but force items sarting with _ at the end
[20:27:20] <austincheney> in this case the "service" string is all I care about
[20:27:45] <austincheney> it tells the application where to go next and exactly what the data will look like
[20:28:34] <banana_> ok that's interesting but mainly just was talking about advocating not implementing ajax directly in a reusable component
[20:28:41] <banana_> ajax calls
[20:28:58] <banana_> maybe I'm missing a point you made or im not understanding something
[20:29:18] <qswz> n> ['d', '_b', 'az', '_t', 'b'].sort((a, b) => (a.startsWith('_')-b.startsWith('_')) || a.localeCompare(b))
[20:29:19] <jellobot> (okay) [ 'az', 'b', 'd', '_b', '_t' ]
[20:29:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[20:29:23] <austincheney> banana_, exact same pattern in the browser: https://github.com/prettydiff/share-file-systems/blob/master/lib/browser/utilities/network.ts#L95-L116
[20:30:19] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[20:30:42] <qswz> what is this foo:bar notiation in TS?
[20:30:49] <renlo> imo it becomes evident pretty quickly that ajax int he component is not ideal with any non-trivial example, so, maybe just give them a complicated flow and have them do it 2 ways, with ajax in components and using some singular request / state setter thingymabob (ie actions)
[20:30:57] <austincheney> banana_, don't put ajax in reusable components.  Isolate any network calls into purpose driven components that must be called from other components
[20:31:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:31:11] <qswz> austincheney: ^
[20:31:19] <banana_> in react those are called route components right
[20:31:25] <qswz> data:socketDataType
[20:31:31] <qswz> how is that valid?
[20:31:38] <austincheney> banana_, i have no idea.  I dont bother with react
[20:31:42] <qswz> oh it's the type?
[20:31:48] <qswz> add a space dmanit
[20:31:55] <systemfault> qswz: What are you rambling about?
[20:32:05] <qswz> type:requestType = socketData.service;
[20:32:07] <qswz> should be
[20:32:13] <qswz> type: requestType = socketData.service;
[20:32:14] <banana_> I'm just asking how would you make the argument for not putting ajax calls in reusable components?
[20:32:18] <qswz> or something more readable
[20:32:23] <qswz> systemfault: ^
[20:32:33] <systemfault> That TS has weird non-standard conventions...
[20:32:34] <banana_> besides "dont do that" if you had to advocate but didnt have power to have your way
[20:32:57] <systemfault> Types are usually in pascal case.. there's normally a space after the :
[20:33:07] <qswz> yea
[20:33:10] <systemfault> snake_case is also used...
[20:33:11] <renlo> just have them do it
[20:33:17] <qswz> that's why I was confused
[20:33:18] <banana_> qswz: also not sure what you meant by "no need for data-down event-up hype-out pattern"
[20:33:28] <qswz> I guess austincheney is using eslint-standard-ts :p
[20:33:37] <banana_> isn't data-down event-up a useful pattern to follow?
[20:33:51] <austincheney> qswz, for linting I use typescript-eslint
[20:33:58] <qswz> banana_: I meant no need to make things complex, have you looked at react-query?
[20:34:34] <qswz> https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/docs/rules/type-annotation-spacing.md
[20:34:59] <qswz> use after: true
[20:35:11] <banana_> qswz: no I'm not working on a react project but I'll check it out. so youre saying you often use the data-down event up patter?n
[20:35:19] <stenno> wb qswz
[20:35:24] <stenno> where have you been?
[20:35:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:35:35] <qswz> stenno: sleeping
[20:35:40] <stenno> fair
[20:35:42] <qswz> noisy annoying neighbor
[20:35:57] <stenno> damn
[20:36:10] <qswz> badly isolated building
[20:36:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:36:21] <qswz> I can't ork when I head someone's TV
[20:36:25] <qswz> work*
[20:36:25] <ljharb> banana_: i'm not sure what you mean
[20:36:29] <qswz> hear*
[20:36:44] <stenno> i had a construction site next to my flat for a few years and it was horror
[20:36:52] <banana_> ljharb: you often use data-down event-up pattern?
[20:36:55] <ljharb> qswz: noise-cancelling headphones
[20:37:01] <banana_> you often make dumb components right
[20:37:02] <ljharb> banana_: i don't know, i don't use that phrase
[20:37:11] <qswz> stenno: oh yea, during work hours
[20:37:14] <banana_> dumb components good?
[20:37:22] <qswz> ljharb: thanks, yes thinking about that
[20:37:34] <banana_> ajax calls directly implemented in reusable components bad?
[20:37:38] <banana_> that's what I mean
[20:37:42] <silly> i know the contruction site thing too, i wanted to shoot myself
[20:37:53] <stenno> noise-cancellation is only a mitigation, its not a permanent solution
[20:38:09] <silly> probably best to just move on asap
[20:38:10] <stenno> because i wouldn't just want to wear noise-cancelling headphones for like 8 hours a day
[20:38:17] <qswz> although it's the guy making noise who should deal this
[20:38:22] <stenno> trues
[20:38:24] <stenno> -s
[20:38:30] <qswz> :/
[20:38:48] <banana_> just curious how you would articulate why making reusable components "dumb" is better
[20:38:58] <austincheney> banana_, by isolating all my network handling to purpose driven libraries I can scale the rest of my application without concern for how the network works.  I just know I call a method and network stuff happens.
[20:39:25] <qswz> modules
[20:39:27] <stenno> dumb components are easier to make pure
[20:39:30] <qswz> DRY, simply
[20:40:09] <stenno> i guess dumb components are pure by definition
[20:40:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[20:40:48] <banana_> austincheney: ah ok so that's a pattern of separating your ajax calls from your routes or whatever library youre using, you mentioned you werent making a react app
[20:41:51] <qswz> the THIC principle, Throw-away Hype Insane reCommandations
[20:42:09] <banana_> stenno: yeah I'm guessing "dumb" is a relative term. but I think the phrase implies you should make your components as dumb as possible.
[20:42:38] <stenno> dumb component is well-defined for react
[20:42:47] <austincheney> banana_, this line of code is an example of AJAX/Websockets/whatever done right: https://github.com/prettydiff/share-file-systems/blob/master/lib/browser/content/file_browser.ts#L1002
[20:43:09] <stenno> dumb component = presentational component in react lingo
[20:43:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:44:26] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:44:51] <qswz> is it still dumb if it has hooks?
[20:45:21] <banana_> stenno: yeah but some logic you might want outside the reusable component right, even if some drivers need to use that same logic put that logic and functonality in a reusable function. because some drivers might not need that logic but need the reusable component
[20:45:25] <qswz> if this hooks issues api calls
[20:45:41] <qswz> basically all my components are dumm then
[20:46:16] <banana_> austincheney: I know I mentioned ajax calls but that was more of an example for my questions about dumb components than how to implment ajax calls
[20:46:56] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:47:02] *** Joins: thojanssens (~thojansse@182.232.32.29)
[20:47:09] <austincheney> banana_, the goal of any well written application is automation.  Everything is vanity and vapor.
[20:47:16] <austincheney> *Everything else...
[20:48:06] <banana_> stenno: just trying to make sure I'm on the right track there with mentioning that reusable logic outside the components but that relates to the reusable component. like logic done after an ajax call is made
[20:48:23] <banana_> but again not necessarily needed by all drivers of the reusable component
[20:49:14] <banana_> what's the term for that kind of logic? application logic idk trying to best articulate my understanding of the data-down event-up pattern, or refine my understanding
[20:51:44] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:52:38] <banana_> austincheney: you mean build it so making other stuff afterwards is easier?
[20:53:04] <banana_> I like layman terms because I'm layman
[20:53:40] <qswz> I'm rayman
[20:53:51] <austincheney> write the application so that you arent rewriting it next week
[20:54:30] <qswz> write the applicatio as if you're 10 years older
[20:54:33] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:55:15] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[20:55:17] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[20:56:03] <banana_> austincheney: easier said than done
[20:56:14] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[20:56:19] <banana_> so build it right the first time
[20:56:51] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:57:17] <qswz> code natural selection
[20:57:23] <qswz> best code survives
[20:57:23] <banana_> but yeah refactoring is ok right? that's not the same thing as rewriting XD
[20:57:24] *** Joins: trevors (~trevors@user/trevors)
[20:57:40] <banana_> like if you have to refactor a bit next week that's ok
[20:58:15] <banana_> it's ok to suck at your job a little?
[20:59:50] <austincheney> banana_, don't build it right the first time, because that isn't going to happen.  Instead practice architecture to better understand how code grows over time and then plan accordingly.  Do more with less and execute faster while doing it.
[21:00:37] *** Quits: taupiqueur_ (~taupiqueu@67.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[21:00:44] <austincheney> banana_, https://news.ycombinator.com/item?id=29984401
[21:00:54] <banana_> ah ok so choose a promising pattern and then implement it and resist analysis paralysis
[21:00:59] <qswz> n> [{x:2},{x:1},{x:1.2}].sort((a, b) => a.y-b.y)
[21:00:59] <jellobot> (okay) [ { x: 2 }, { x: 1 }, { x: 1.2 } ]
[21:01:25] <qswz> n> [{x:2},{x:1},{x:1.2}].sort((a, b) => a.y?.localeCompare(b.y))
[21:01:25] <jellobot> (okay) [ { x: 2 }, { x: 1 }, { x: 1.2 } ]
[21:01:45] <banana_> ok thanks bookmarked
[21:01:53] <qswz> how is this called? stability of sort?
[21:02:05] <qswz> sorting with non existent prop
[21:03:40] <qswz> Here's my approach to programming anything: 1. Think 2. Sleep 3. Do 4. Redo 5. Add tests
[21:04:03] <qswz> 2. Sleep or go out or do somethig else
[21:04:05] <banana_> lol step 2
[21:04:36] <qswz> most important one
[21:04:56] <qswz> give it a sleep
[21:05:03] <qswz> don't give it a go
[21:06:23] <banana_> and about working with coworkers where you have to frequently justify how you're programming
[21:06:38] <banana_> or I guess fellow project programmers
[21:09:26] <qswz> fortunately my unique coworker think better or similarly rest of the time
[21:10:15] <qswz> having to justify your choices is a good thing
[21:10:49] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f432:d78d:9f19:bda7)
[21:11:57] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[21:12:06] <banana_> ok yeah I need to justify making reusable components dumb
[21:12:16] *** Joins: Akiva (~Akiva@user/Akiva)
[21:12:30] <banana_> but maybe my reasoning is already sufficient
[21:13:23] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-068.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:14:35] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 268 seconds)
[21:15:00] <banana_> e.g. having implementation details of user actions done in a callback invoked by your components abstracts those callbacks, because those callbacks are implemented else where
[21:15:16] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 256 seconds)
[21:15:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:15:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:15:21] *** Joins: wroathe (~wroathe@user/wroathe)
[21:16:09] <banana_> making your component more reusable, your component yields implementation details
[21:17:19] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[21:18:08] *** Quits: thojanssens (~thojansse@182.232.32.29) (Read error: Connection reset by peer)
[21:18:44] <banana_> and if common drivers need the same implementation details of those callbacks provide the implementation in a reusable function or something
[21:19:08] <banana_> but dont put that reusable function in your component.
[21:19:52] <austincheney> how do you have components that are not reusable?
[21:21:05] <banana_> you could have smart components if youre using route components in react afairc
[21:24:24] <qswz> is it worth using odsh for sorting
[21:24:57] <qswz> .sort((a,b) => a.code.localeCompare(b.code)) vs sortBy(.., 'code')
[21:25:24] <qswz> shorter, by I need to add import sortBy from 'lodash/sortBy';
[21:25:27] *** Joins: guest3935 (~guest3935@dynamic-046-114-168-202.46.114.pool.telefonica.de)
[21:25:30] <qswz> so longer
[21:25:43] <qswz> so let's go vanilla
[21:26:19] *** Quits: guest3935 (~guest3935@dynamic-046-114-168-202.46.114.pool.telefonica.de) (Max SendQ exceeded)
[21:29:14] *** Quits: D4mned (~D1mned@212.101.251.23) (Quit: Leaving)
[21:30:51] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:23] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:32:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:34:30] *** Joins: nomic (~nomic@185.192.69.41)
[21:35:11] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:39:27] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:39:32] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:40:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:40:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:40:22] *** Joins: wroathe (~wroathe@user/wroathe)
[21:40:41] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[21:44:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:45:41] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 256 seconds)
[21:48:11] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[21:51:53] <austincheney> I typically use a custom written function passed into the standard sort method.  In 99% of cases thats fine so long as the sort function returns 1 or -1 and not 0.
[21:53:08] <austincheney> In JS array sort is implementation dependent and can vary wildly when returning 0 from the sort function.  I remember seeing something before TC39 for a standard implementation, but that was a while back.
[21:53:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[21:54:11] <austincheney> in the cases where a sort function won't work for consistency reasons I will filter the array instead of sorting.
[21:56:13] *** Joins: trevors (~trevors@user/trevors)
[21:56:15] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:57:45] <ljharb> sort doesn't vary anymore
[21:57:50] <ljharb> it's stable, by spec, as of a couple years ago
[21:58:08] <ljharb> and a sort comparator can absolutely return zero.
[22:00:36] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[22:00:52] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e) (Quit: Textual IRC Client: www.textualapp.com)
[22:01:21] *** Joins: wedr_ (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[22:02:07] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[22:02:34] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4f1:e8d1:c5:6a0e)
[22:03:52] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:05:36] *** Quits: deltab_ (~deltab@95.154.230.49) (Changing host)
[22:05:36] *** Joins: deltab_ (~deltab@user/deltab)
[22:05:46] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 250 seconds)
[22:05:59] *** Joins: mud (~mud@user/kadoban)
[22:06:12] *** deltab_ is now known as deltab
[22:07:25] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:08:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:08:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:08:17] *** Joins: wroathe (~wroathe@user/wroathe)
[22:10:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:11:23] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 250 seconds)
[22:13:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:13:04] *** Quits: OneMirro1 (~far@onegrandcircle.com) (Ping timeout: 256 seconds)
[22:13:13] *** Joins: klys (~mdasoh@show.op8.us)
[22:13:19] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[22:14:27] *** Joins: OneMirror (~far@onegrandcircle.com)
[22:15:20] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:17:07] *** Quits: mud (~mud@user/kadoban) (Remote host closed the connection)
[22:18:23] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[22:20:31] *** Joins: mud (~mud@user/kadoban)
[22:21:02] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:24:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[22:24:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[22:30:38] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:31:58] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[22:37:13] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 268 seconds)
[22:37:18] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:38:29] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:42:17] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:45:01] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[22:49:32] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:53:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:53:39] *** Quits: Bombo_ (atom@p2e58ef25.dip0.t-ipconnect.de) (Changing host)
[22:53:39] *** Joins: Bombo_ (atom@user/bombo)
[22:53:39] *** Bombo_ is now known as Bombo
[22:55:44] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:56:28] *** Joins: gpap (~pap@athedsl-4414603.home.otenet.gr)
[22:57:04] <KevinX> I have a promise from axios with .finally(r) and r is undefined, but if I switch it to .then(r) then r has the expected value. Can't figure out why.
[22:57:57] <ljharb> KevinX: `.finally` can't change the resolution value
[22:57:57] <systemfault> isn't r a function you declared?
[22:58:23] <KevinX> I mean like finally(r => r), sorry
[22:58:44] <systemfault> Ah... then what ljharb said.
[22:59:30] <KevinX> The value passed into finally is undefined
[22:59:41] <systemfault> You don't get a value at all in .finally...
[22:59:55] <KevinX> Ah, I thought it was passed through
[23:00:01] <systemfault> It only exists to do cleanup
[23:00:08] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[23:00:11] <ljharb> KevinX: `.finally` doesn't receive any value, and its return is ignored
[23:00:19] <ljharb> it can reject, and change the rejection reason, but that's it
[23:00:23] <KevinX> Well that explains it then
[23:00:34] <systemfault> I guess that if the TC39 really wanted, they could pass some result type... (A bit like .addSettled)
[23:00:41] <systemfault> *allSettled
[23:00:46] <ljharb> nope
[23:00:51] <ljharb> because `finally` blocks don't get any input
[23:00:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:01:00] <ljharb> promises have to mirror syntactic try/catch/finally
[23:01:53] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:03:09] <KevinX> I don't necessarily understand. I'll go read more on it though
[23:03:39] <systemfault> Yeah, but try/catch/finally is imperative... Promise is a bit more FP, so if for some reason, I need to access the result in finally, it forces me to declare a mutable variable in the upper scope
[23:03:46] <systemfault> It's fine but...
[23:05:25] <KevinX> yeah I wanted to use finally by itself as I don't care if this call errors, and want to check the value directly (which could be undefined)
[23:05:27] <ljharb> systemfault: if you need that, you'd do `.then(f, g)`
[23:05:33] <ljharb> systemfault: iow, `finally` is the wrong thing to use for that.
[23:05:57] <ljharb> KevinX: that's what `.then` is for. you can add `.catch()` first if you want to ignore a rejection.
[23:07:33] <KevinX> yeah I was just hoping to avoid having both then and catch
[23:08:07] <ljharb> KevinX: `.then(r, () => {})`
[23:08:39] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[23:10:11] <KevinX> Will that work if a `then` higher up errors though?
[23:11:05] <KevinX> I'll just use then/catch anyway. Not a big deal :)
[23:12:51] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:17:22] *** Joins: mknod (~mknod@user/mknod)
[23:17:33] *** Joins: zebrag (~chris@user/zebrag)
[23:17:41] *** Joins: taupiqueur (~taupiqueu@126.144.204.77.rev.sfr.net)
[23:17:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:18:15] <mknod> Hello.
[23:18:19] <mknod> n> function foo() { console.log('Did something'); }; var [fooAliasA, fooAliasB] = [foo, foo]; fooAliasB()
[23:18:20] <jellobot> (okay) Did something
[23:18:41] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:5b9a:be02:3bcb:7b8f)
[23:18:42] <mknod> Can I retrieve which "alias" was used from within foo()?
[23:20:13] <pavonia> n> function foo() { console.log('Did something as ' + this.name); }; var [fooAliasA, fooAliasB] = [foo, foo]; fooAliasB()
[23:20:13] <jellobot> (okay) Did something as undefined
[23:24:28] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[23:28:22] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[23:30:47] <mknod> pavonia, I need jellobot to give me the right answer, I need it so bad
[23:31:25] <pavonia> I can't see a way to get the variable name from within the function
[23:31:40] <sheetjs> in the literal sense you cannot
[23:31:59] <sheetjs> there are tricks like binding
[23:32:05] <pavonia> n> function foo() { console.log('Did something as ' + arguments.callee.name); }; var [fooAliasA, fooAliasB] = [foo, foo]; fooAliasB()
[23:32:05] <jellobot> (okay) Did something as foo
[23:32:50] <sheetjs> n> function foo() { return this.alias; } var A = foo.bind({alias:"A"}), B = foo.bind({alias:"B"}); [A(), B()]
[23:32:51] <jellobot> (okay) [ 'A', 'B' ]
[23:32:51] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:33:06] <sheetjs> but that has other problems
[23:34:59] <mknod> Such as? This is to circumvent some limitations where triggers can't call functions with arguments. I need to wrap my whole code into one function that does it all, but that does different things depending on what alias was used.
[23:35:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:35:14] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[23:37:34] <ljharb> mknod: no, you can never know the variable names used inside a function
[23:38:54] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[23:39:20] <mknod> I mean,
[23:39:23] <mknod> n> function foo() { console.log('Did something as ' + this.alias); }; var A = foo.bind({alias:"A"}), B = foo.bind({alias:"B"}); B()
[23:39:24] <jellobot> (okay) Did something as B
[23:39:40] <mknod> sheetjs' solution looks very promising, doesn't it?
[23:40:09] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 256 seconds)
[23:41:43] <pavonia> Can't you just add an extra argument to foo and make foo return another function which you call then?
[23:42:42] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:43:03] <pavonia> Maybe you should paste an example of your actual use case
[23:44:08] <mknod> No. https://developers.google.com/apps-script/reference/base/menu?hl=en#addItem(String,String)
[23:44:52] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[23:45:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[23:46:06] *** Joins: voltage (voltage@user/voltage)
[23:46:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[23:46:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[23:47:31] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[23:48:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:48:49] *** voltage is now known as voltage_
[23:49:38] <mknod> Basically, I need to isolate two portions of code from each others, because they are not supposed to run in the same context, but Google Apps Script doesn't seem to allow this.
[23:50:55] *** Quits: N4buc0- (~N4buc0@177.40.2.111) (Ping timeout: 256 seconds)
[23:51:57] <mknod> sheetjs, what are those problems you are referring to?
[23:53:36] <pavonia> "functionName  String" makes me sad
[23:54:00] <ljharb> mknod: ah, that's because they're entirely different functions tho.
[23:54:20] <mknod> pavonia, you see where I'm coming from right.
[23:56:26] <mknod> ljharb, I think I'm missing your point.
[23:57:22] <ljharb> mknod: when you use `.bind` you're making a brand new function
[23:57:46] <pavonia> mknod: The solution I proposed will still work, you just need to create several aliased functions beforehand
[23:57:49] <ljharb> mknod: you might as well do `const fooA = (...a) => foo(...a)` or whatever
[23:58:12] <ljharb> using `.bind` is silly when you can just make a wrapper function.
[23:59:00] <mknod> ljharb, how do I tell which menu was clicked from within that wrapper?
[23:59:16] <mknod> I guess I need to carry that information in one way or another.
[23:59:23] <ljharb> you can embed it in the wrapper.
[23:59:40] <ljharb> but also this seems really weird, like it should just be a click event, and the event object should tell you which it was
[23:59:48] <ljharb> but also this is google apps script, which is terrible
