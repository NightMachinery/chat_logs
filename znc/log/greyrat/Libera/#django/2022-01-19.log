[00:01:24] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[00:04:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[00:23:25] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[00:35:36] *** Joins: ST47 (~ST47@wikimedia/st47)
[01:01:16] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[01:05:14] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:09:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:11:10] *** Quits: vladoski (~foo@93-47-225-14.ip114.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:48] *** Joins: fikran (~fikran@user/fikran)
[01:12:24] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[01:15:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:18:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:00] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:24:11] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979)
[01:31:40] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979) (Ping timeout: 250 seconds)
[01:34:17] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:41] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[01:35:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:35:44] *** ChanServ sets mode: +v EvilDMP
[01:39:23] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[01:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[01:44:48] *** Joins: djapo (~archangel@user/djapo)
[01:58:25] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 268 seconds)
[02:04:49] *** Quits: mintograde (~mintograd@47.201.5.61) (Read error: Connection reset by peer)
[02:05:14] *** Joins: mintograde (~mintograd@47.201.5.61)
[02:06:25] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[02:06:26] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:14:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:14:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:17:09] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:17:24] *** Joins: pepper (~pepper@user/pepper)
[02:19:03] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979)
[02:26:25] <dre> PEOPLE!
[02:26:36] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:27:40] <dre> If I have a "temporary uploaded file" is there a way I can refer to that file by a url hash or something? so; for instance, that personA could upload a file, view the  contents, and then copy/paste the URL (with a hash pointing to the tempfile) to a personB, who would then be able to look at that same view processing the same file?
[02:28:00] <dre> I mean, I could just put the literal filename up in the get param, but I feel like that's not a great idea.
[02:28:20] <dre> or just "don't beother"
[02:28:25] <dre> yeah I like that answer, don't bother
[02:28:39] <PaulWay[w]> dre: how are you saving the content?
[02:31:00] <dre> upload file -> "yet-to-be-committed-changes" [confirm] -> save to database.  currently not saving the changes, when they click [confirm] I just re-process the initial file
[02:31:18] <dre> idk, things are too fluid at the moment, still hacking something together.
[02:31:52] <PaulWay[w]> If the content has an index number - the ID of the record it's associated with in your models, say - then you can do something with the index number.
[02:32:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:32:48] <PaulWay[w]> Say, encrypt it with a stored key to turn the ID into a random string, then decrypt it in the view that gets the random string.
[02:33:18] <PaulWay[w]> Or you can generate a hash of the data and store that with the record, and then that's the field you look up in the view that gets the hash.
[02:33:37] <PaulWay[w]> Or you don't relate the random string to the hash of the content at all - just pick a random number.
[02:34:53] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[02:38:39] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: Textual IRC Client: www.textualapp.com)
[02:44:47] *** Joins: varoo (~Varenyam1@182.68.178.155)
[02:50:32] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979) (Ping timeout: 240 seconds)
[02:56:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:56:10] *** ChanServ sets mode: +v EvilDMP
[02:58:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:58:48] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:59:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:59:49] *** ChanServ sets mode: +v EvilDMP
[02:59:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:05:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[03:09:19] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[03:10:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:19:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[03:20:51] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:21:09] *** Joins: fikran (~fikran@user/fikran)
[03:21:12] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:27:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:28:07] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:31:43] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:34:26] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:37:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:40:01] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[03:46:32] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[03:47:54] *** Joins: audiobirb (~audio@user/audio)
[03:50:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:51:34] *** Joins: cyphase (~cyphase@user/cyphase)
[03:58:59] *** Joins: djapo (~archangel@user/djapo)
[04:00:10] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:00:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[04:00:37] *** vinleod is now known as vdamewood
[04:04:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:33:07] *** Joins: jfoster (~textual@user/jfoster)
[04:34:11] <jfoster> Hello. The allauth django package has a function `new_user()` that returns `get_user_model()()` from `django.contrib.auth`
[04:34:30] <jfoster> I'm not familiar with the use of two parens in a row like that. The idea is that it is returning an instance of the user object. Can anyone explain that syntax to me?
[04:35:27] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:40:22] <jfoster> Okay, answering my own question: The second set of parens are a class instantiation operator.  django.contrib.auth's get_user_model() returns the user model class.  The second set of parens
[04:41:50] <jfoster> acts similar to if you imported the User model and then  did:  `user = User()` which would apparently create a new instance of the class.  The thing that confuses me is that I would normally only "create" a new user object instance using some version of User.objects.create()
[04:43:22] <jfoster> The reason this is causing me some concerns is that I had overridden the User model's create() in a custom manager. But this class instantiation operator seems to possibly sidestep my custom manager.
[04:46:09] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979)
[04:48:23] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[04:48:49] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[04:53:17] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:53:42] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:56:44] <FunkyBob> jfoster: get_user_model returns a class... sothe second () creates a class instance
[04:56:54] <FunkyBob> so, yeah, you got it
[04:56:54] <jfoster> is that class instance written to the DB?
[04:56:58] <FunkyBob> no
[04:57:03] <FunkyBob> not until you call save() on it
[04:57:11] <jfoster> ah hm
[04:57:29] <FunkyBob> can I ask for which features you're using allauth?
[04:58:39] <jfoster> I have a pretty heavily customized allauth setup.  One of the reasons I often incorporate it is to lay groundwork for federated logins.
[04:59:12] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[04:59:19] <jfoster> But I have the email confirmation flow customized as well.
[04:59:39] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Client Quit)
[05:00:42] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[05:01:05] <jfoster> The package has some patterns and default workflows that I don't get super excited about. However, when Sign In with Apple debuted, it seemed to still be the "market leader" so to speak in making that available (though it took some time to be merged)
[05:01:34] <jfoster> FunkyBob are there alternate auth packages you like / what makes you ask?
[05:01:56] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:02:08] <FunkyBob> i ask mostly because I've met too many people who use it for features that are built into django, and they simply didn't know they were built in
[05:02:18] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Client Quit)
[05:02:35] <FunkyBob> and, yeah, it seems to do some things in questionable or unexpected ways... so I like to keep an eye out
[05:02:56] <jfoster> Ah. It may be I do that in some cases, but my main reason is to have a single, well supported set of patterns for "login with Google", "sign up with X"
[05:03:16] <jfoster> It is super weird some times.  I agree. Very opinionated.
[05:03:22] <FunkyBob> yeah, it's 3rd party login that it provides that django does not.
[05:03:48] <jfoster> FunkyBob Back on that  object instance question: the reason this is a problem is that I actually am trying to override create() in a custom manager on User
[05:04:21] <jfoster> Is it right that my create() method would not get called if the object instance is save()'d rather than using User.objects.create() ?
[05:05:40] <jfoster> My purpose here is to hook into the post-save of the my custom User model.  I had been doing this using a signal, but was hoping to avoid that.  I want some stuff to be done whether the user is created using my SignupForm or via some admin script that creates users, etc.
[05:08:42] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[05:08:57] *** Quits: Buliarous (~gypsydang@46.232.210.139) (Client Quit)
[05:10:24] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[05:10:37] <hackedhead> save() is also not called in some cases (bulk_create) See the note in: https://docs.djangoproject.com/en/4.0/topics/db/models/#overriding-predefined-model-methods
[05:11:11] <hackedhead> (similarly, the signal is also not fired in those cases).
[05:11:22] <FunkyBob> jfoster: that  is correct... object.create is only called if you call object.create
[05:11:31] *** Joins: mxp (~mxp@185.16.205.131)
[05:11:33] <FunkyBob> Model.save does not call it... it calls Model.save
[05:11:34] <hackedhead> which... is a rather annoying caveat of the ORM
[05:20:04] <bparker> I'd rather it be called create_and_save() to avoid confusion with simply Model() or instance.save()
[05:20:10] <bparker> and there's already a get_or_create()
[05:20:49] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:21:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:27:14] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:27:44] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[05:27:55] *** Joins: djapo (~archangel@user/djapo)
[05:28:48] *** Quits: Harlin (~DonQixote@75-163-149-234.clsp.qwest.net) (Remote host closed the connection)
[05:28:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:30:30] *** Joins: fikran (~fikran@user/fikran)
[05:41:51] <hackedhead> which would then need to be called get_or_create_and_save() ?
[05:42:02] <hackedhead> =P
[05:44:47] <PaulWay[w]> wave_magic_wand()
[05:52:16] *** Joins: rje (~textual@50.35.241.164)
[06:07:03] *** Quits: varoo (~Varenyam1@182.68.178.155) (Quit: Leaving)
[06:07:28] <FunkyBob> dwim()
[06:35:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[06:35:47] <audiobirb> FunkyBob, hey
[06:36:21] <audiobirb> FunkyBob, my createview keeps redirecting to my "dashboard" (regular fbv) instead of my detailview and i have no clue why
[06:36:34] <audiobirb> on object creation using the form of the createview
[06:37:53] <audiobirb> FunkyBob, can you help? https://bpa.st/6NEQ
[06:39:08] <bparker> nobody else can help?
[06:40:30] <bparker> reverse("email_subscription_detail") <- there is no such named url
[06:41:32] <bparker> you called it email_scheduler_detail instead
[07:01:07] <FunkyBob> taht shouldn't silently redirect, though
[07:01:13] <FunkyBob> if there's no such pattern, it should raise an error
[07:01:53] <FunkyBob> I suspect, instead, it's because your create url doesn't end with a '/' and you've lazily used action='.'
[07:02:10] <FunkyBob> so '.'  for  /email-scheduler/create is /email-scheduler/
[07:02:21] <FunkyBob> check in your browser inspector to see exactly where the form submits to
[07:11:04] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 268 seconds)
[07:20:45] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:21:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:23:17] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:37:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:39:51] *** Joins: fikran (~fikran@user/fikran)
[07:41:44] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[07:57:45] *** Quits: blackleitus (~blackleit@189.195.195.100) (Quit: Leaving)
[08:10:02] *** Quits: sreve (~quassel@p4ff44cd7.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:10:50] *** Joins: sreve (~quassel@p4ff44ea0.dip0.t-ipconnect.de)
[08:30:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:44:00] *** Joins: djapo (~archangel@user/djapo)
[08:57:18] *** Joins: joshiatharva (~joshiatha@2409:4042:2188:cc4a:a45f:d492:253f:2ea7)
[08:57:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[08:59:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:02:09] <jfoster> hackedhead FunkyBob bparker How are you all handling this situation, then? Where, you can't count on a User manager to catch this ()() -> save() song and dance, nor post_create signals.  One option I've considered is to pull anything related to User creation into its own method and document the places where I make sure it gets called "wherever users are created" realizing that this needs test coverage and docs.
[09:02:56] *** Quits: joshiatharva (~joshiatha@2409:4042:2188:cc4a:a45f:d492:253f:2ea7) (Quit: Client closed)
[09:10:30] <jfoster> for example in save(), evaluate `if self.pk is None:` and call the expected user initialization stuff there.  I'm really just looking for a best practice on post create for my custom User model.
[09:17:03] <PaulWay[w]> Why do you have more than one place where users are created?
[09:18:30] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[09:18:31] *** Quits: jfoster (~textual@user/jfoster) (Read error: Connection reset by peer)
[09:18:43] *** Joins: jfoster_ (~textual@user/jfoster)
[09:20:31] *** Joins: mattil (~mattil@d16zy4tfhhflv4rk6xf-4.rev.dnainternet.fi)
[09:20:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:21:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:22:35] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:23:18] <jfoster_> PaulWay[w] I have a SignupForm, but I also create users in tests, and it seems reasonable to want a user signup endpoint that would live apart from the Form.
[09:23:58] *** Quits: mattil (~mattil@d16zy4tfhhflv4rk6xf-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:26:31] <jfoster_> Really, I just want to make sure if a user is created, anywhere, that another model object instance is created and associated to the user.
[09:26:45] <pembo13> jfoster_, i did that with a signal
[09:26:47] *** Joins: djapo (~archangel@user/djapo)
[09:27:05] <pembo13> there are hidden consequences to using signals, just FYI
[09:27:19] <jfoster_> I had it in a signal but ran into one of those consequences.
[09:27:33] <pembo13> jfoster_, which
[09:27:35] <jfoster_> That was why i tried to dish it to the User manager create()
[09:27:51] <jfoster_> I believe it had to do with calling save() or something inside the post_save signal--causing an infinite loop
[09:28:19] <pembo13> jfoster_, if you're creating a new model.. why would you call save again?
[09:28:28] <PaulWay[w]> I'd put the logic specific to creating users in a function, and then call that from your views and tests.
[09:29:58] <jfoster_> I believe it was that I needed the object instance to exist before I could do the thing I wanted to do. I frankly can't remember, but it made sense at the time.
[09:30:33] <jfoster_> PaulWay[w] that is sort of the thing I was thinking, just factor the user "initialization" stuff out, and be sure it gets called.
[09:31:37] <pembo13> is http://dpaste.de/ working for anyone?
[09:32:32] <pembo13> jfoster_, this works for me, https://pastebin.mozilla.org/62uJCn9P
[09:37:18] <jfoster_> pembo13 thanks for that, it is similar to what I (should not have) dumped in favor of the unreliable user manager create() override: https://pastebin.mozilla.org/4wV9DQuF
[09:37:59] <pembo13> `kwargs.get('created', True)` probably not a good idea to default 'created' to True
[09:38:08] <jfoster_> I think what happened is on line 7, I realized that I wasn't saving this payment_info relation.
[09:38:46] <pembo13> jfoster_, right... in that case you could have done the create
[09:39:16] <pembo13> and then used a User.objects.filter(id=user.id).update(payment_info_id=payment_info.id)
[09:39:45] <pembo13> adding a .save() would definitely trigger a loop
[09:40:11] <jfoster_> i considered this update way, since it is only in sql, right?
[09:40:21] <jfoster_> but then there was some other thing that came up that made that a no-no
[09:40:30] <pembo13> it doesn't trigger a save signal
[09:40:57] <pembo13> you can still assign the field.. but not to do the `.save()`
[09:41:30] <pembo13> jfoster_, i'm not sure what issue that would cause
[09:43:00] *** Joins: dor (~erg@78.11.12.207)
[09:43:24] *** Joins: mattil (~mattil@d16zy4tfhhflv4rk6xf-4.rev.dnainternet.fi)
[09:45:38] *** Quits: mattil (~mattil@d16zy4tfhhflv4rk6xf-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:47:18] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d14:5eb2:ab40:4205:c981:41c3)
[09:47:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:49:02] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:c851:b3f:6686:979) (Ping timeout: 240 seconds)
[09:49:12] *** Joins: fikran (~fikran@user/fikran)
[09:51:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[09:52:45] <jfoster_> pembo13 I can't say from this vantage what it was either. Hopefully this time i'll commit the code so I'll have comments about the unwinding.
[09:53:21] <jfoster_> `created` should be passed as True or False regardless on a post_save signal though, right?  I get True is a bold assumption, but that condition should never fire.
[09:53:45] <pembo13> jfoster_, ok
[09:55:42] <jfoster_> regardless, if it is passed then I would use the full signature as your example does. pulling it from kwargs and having that True is distracting / confusing.
[10:01:25] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d14:5eb2:ab40:4205:c981:41c3) (Ping timeout: 256 seconds)
[10:02:33] *** Quits: jfoster_ (~textual@user/jfoster) (Ping timeout: 256 seconds)
[10:06:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:21:40] *** Joins: slav0nic (slav0nic@python.su)
[10:24:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:33:37] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:36:31] <serafeim> hello friends
[10:37:19] <pembo13> serafeim, hello
[10:40:16] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[10:40:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:41:48] *** Joins: jfoster (~textual@user/jfoster)
[10:49:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:51:23] *** Quits: pembo13 (~pembo13@47.196.95.206) (Quit: Leaving)
[11:08:09] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[11:08:20] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:09:51] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[11:10:07] *** Joins: dor (~erg@78.11.12.207)
[11:10:44] *** Joins: mrwick (~mrwick@user/mrwick)
[11:11:31] *** Joins: blag (~blag@071-094-056-144.res.spectrum.com)
[11:19:03] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[11:28:25] *** Joins: djapo (~archangel@user/djapo)
[11:32:44] *** Joins: pycode (~pycode3@2001:b07:5d28:551:40db:21b2:b4a5:6a94)
[11:37:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:54:50] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[11:56:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[11:58:33] *** Joins: fikran (~fikran@user/fikran)
[12:03:39] *** Joins: iomari891 (~iomari891@197.210.70.166)
[12:09:08] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Quit: Leaving)
[12:15:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:15:21] *** ChanServ sets mode: +v EvilDMP
[12:24:11] *** Quits: dor (~erg@78.11.12.207) (Read error: No route to host)
[12:25:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[12:29:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:30] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[12:47:09] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 268 seconds)
[12:48:57] *** Joins: gitly (~gitly@148.252.133.202)
[12:52:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:52:36] *** ChanServ sets mode: +v EvilDMP
[12:52:39] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[12:53:13] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[12:53:16] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[12:53:56] *** Quits: gitly (~gitly@148.252.133.202) (Ping timeout: 268 seconds)
[12:54:30] *** Joins: djapo (~archangel@user/djapo)
[12:55:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:55:15] *** Joins: gitly (~gitly@185.69.145.65)
[12:56:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:56:45] *** ChanServ sets mode: +v EvilDMP
[12:57:47] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[12:57:56] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[12:58:46] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[12:59:33] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[12:59:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:00:06] *** Quits: gitly (~gitly@185.69.145.65) (Ping timeout: 268 seconds)
[13:01:47] *** Joins: gitly (~gitly@148.252.129.23)
[13:06:02] *** Quits: gitly (~gitly@148.252.129.23) (Ping timeout: 240 seconds)
[13:06:46] *** Joins: gitly (~gitly@148.252.129.23)
[13:08:47] *** Joins: shiriru (~shiriru@user/shiriru)
[13:09:59] *** Joins: slavfox (~slavfox@93.158.232.111)
[13:10:51] *** Quits: shiriru (~shiriru@user/shiriru) (Client Quit)
[13:12:41] *** Joins: shiriru (~shiriru@user/shiriru)
[13:13:05] *** Joins: gitly2 (~gitly@148.252.133.169)
[13:14:50] *** Quits: gitly (~gitly@148.252.129.23) (Ping timeout: 256 seconds)
[13:16:10] *** Quits: shiriru (~shiriru@user/shiriru) (Client Quit)
[13:19:18] *** Quits: gitly2 (~gitly@148.252.133.169) (Ping timeout: 250 seconds)
[13:22:30] *** Joins: thanhnl0697 (~thanhnl06@14.161.0.53)
[13:23:28] *** Joins: gitly2 (~gitly@148.252.128.242)
[13:29:45] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:31:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[13:32:54] *** Joins: VaniaPy (~VaniaPy@79.103.77.11.dsl.dyn.forthnet.gr)
[13:34:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:40:21] *** Joins: rusrushal13 (~rusrushal@2401:4900:5d18:76e4:7b06:d89d:4706:dcce)
[13:42:43] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:46:08] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:47:15] <VaniaPy> Hello, on DRF , i'm trying to add authentication with PYJWT, i have registration and login endpoints and i'm trying to give the token
[13:47:31] <VaniaPy> to pass* the token to a new endpoint
[13:47:41] <VaniaPy> in order to retrieve a list with contacts
[13:47:55] <VaniaPy> but it seems that the token is expired
[13:48:16] <VaniaPy> and i can't generate a new one as well
[13:49:54] <VaniaPy> https://bpa.st/G27A   https://bpa.st/XYTQ  the authentication code
[13:49:57] <VaniaPy> is here
[13:50:46] <LordKalma> not really an answer, but with dj_rest_auth, and rest_framework_simplejwt, all of that is automagically done for you
[13:51:05] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:52:00] <LordKalma> if you're interested I can share what I have written
[13:52:29] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:54:28] <VaniaPy> hmm sure,why not,it's for learning purposes the project that i'm building so it would be nice to see alternatives
[13:55:14] <GinFuyou> there is also alternative to not use JWT as far as I understand
[13:55:16] <LordKalma> let me make you a gist
[13:55:28] <LordKalma> GinFuyou, for sure. I had token auth, and even session auth is possible
[13:56:21] <thanhnl0697> about your code > generate token > the data, maybe u missing some field like `iat`, `jti`, `exp` . Samle ```iat = int(time.time())
[13:56:21] <thanhnl0697>     exp = iat + exp_in_seconds
[13:56:22] <thanhnl0697>     jti = iat + randint(9999, 999999)
[13:56:22] <thanhnl0697>     data = dict(jti=jti, sub=str(user_id), iat=iat, exp=exp)```
[13:58:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[13:58:22] <debnet> Hello people. Is there a way to force Django to use "->>" operator instead of "->" on jsonb fields?
[13:58:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:59:01] <debnet> Because I have to use successive annotations with CAST in order to retrieve my data and it's ugly. :P
[13:59:12] <GinFuyou> https://blog.tinbrain.net/blog/jwt-auth.html just for reference
[13:59:22] <LordKalma> VaniaPy, https://gist.github.com/ruilvo/5677131e57d4ab55574df2fb6ec2684f
[13:59:26] <LordKalma> it's as simple as this
[13:59:47] <LordKalma> nevermind my excessively nested urls.py, I copied that from my project hahah
[14:01:04] <LordKalma> GinFuyou, honestly, session is just fine if, for example, you just want to have an SPA frontend or something
[14:01:19] <LordKalma> any half decent browser sends the cookie along
[14:01:37] <VaniaPy> :P  it's fine, thanks,i'll take a look at that
[14:01:44] <LordKalma> I only have token/jwt because 1) I was experimenting, 2) I want "dumb" programmatic access to my api
[14:02:25] <LordKalma> VaniaPy, the full files: https://github.com/ruilvo/radioamadorismo-website/tree/master/backend/config in case you want to take a look
[14:05:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[14:06:07] <LordKalma> btw, if anybody wants to play "roast my settings.py", criticism welcome
[14:07:54] *** Joins: fikran (~fikran@user/fikran)
[14:33:59] *** Quits: rusrushal13 (~rusrushal@2401:4900:5d18:76e4:7b06:d89d:4706:dcce) (Ping timeout: 256 seconds)
[14:34:23] *** Quits: thanhnl0697 (~thanhnl06@14.161.0.53) (Quit: Client closed)
[14:46:23] *** Quits: VaniaPy (~VaniaPy@79.103.77.11.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[14:50:25] *** Quits: blag (~blag@071-094-056-144.res.spectrum.com) (Ping timeout: 256 seconds)
[15:02:16] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[15:02:38] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:12:56] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:17:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:18:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:29:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:31:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:31:26] *** ChanServ sets mode: +v EvilDMP
[15:36:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:40db:21b2:b4a5:6a94) (Ping timeout: 240 seconds)
[15:42:52] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:43:17] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[15:45:05] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[15:49:04] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 268 seconds)
[15:49:18] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[15:52:03] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[15:54:40] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:03] *** Joins: dodo__ (~dodo@user/dodo)
[16:13:33] *** Joins: matthewwilkes_ (sid500242@id-500242.uxbridge.irccloud.com)
[16:13:38] *** Joins: Trieste_ (T@user/pilgrim)
[16:14:06] *** Joins: dnns01_ (~quassel@2a02:c207:3003:651::1)
[16:14:26] *** Joins: Grauwolf_ (~grauwolf@user/grauwolf)
[16:14:31] *** Joins: szkl_ (uid110435@uxbridge.irccloud.com)
[16:14:31] *** Joins: harm_ (~urth@geertswei.nl)
[16:15:00] *** Joins: felixx_ (felixx@django/moderator/felixx)
[16:15:01] *** ChanServ sets mode: +v felixx_
[16:15:01] *** Server sets mode: +cnrt 
[16:15:01] *** Joins: krisd_ (krisd@s0.mydevil.net)
[16:15:17] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Killed (NickServ (GHOST command used by DLange_)))
[16:15:26] *** Joins: farn_ (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[16:15:27] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[16:15:30] *** Joins: benjaomi- (~benjaomin@37.139.19.237)
[16:15:34] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[16:15:34] *** Joins: wez_ (~wyoung@about/web/wez)
[16:15:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:15:59] *** Joins: ____`_`__ (~eismann@pg.afoo.at)
[16:16:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[16:16:05] *** Quits: totte (~totte@h-82-196-112-155.A166.priv.bahnhof.se) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: rtpg (sid443069@id-443069.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: nedbat (~nedbat@python/psf/nedbat) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: krisd (krisd@s0.mydevil.net) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: Grauwolf (~grauwolf@user/grauwolf) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: wez (~wyoung@about/web/wez) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: ubernost1um (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: daniel2 (daniel@user/daniel2) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: benjaoming (~benjaomin@37.139.19.237) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: jgee (~jgee@186.80.49.20) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: urth (~urth@geertswei.nl) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: felixx (felixx@django/moderator/felixx) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: dang`r`us (~eismann@pg.afoo.at) (Ping timeout: 240 seconds)
[16:16:08] *** matthewwilkes_ is now known as matthewwilkes
[16:16:08] *** rtpg_ is now known as rtpg
[16:16:08] *** felixx_ is now known as felixx
[16:16:08] *** jgee9 is now known as jgee
[16:16:13] *** schinckel_ is now known as schinckel
[16:16:13] *** benjaomi- is now known as benjaoming
[16:16:14] *** dodo__ is now known as dodo
[16:16:42] *** Joins: koolazer (~koo@user/koolazer)
[16:17:18] *** Joins: fikran (~fikran@user/fikran)
[16:19:46] *** Joins: ubernost1um (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[16:19:57] *** Quits: szkl_ (uid110435@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[16:19:57] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[16:20:31] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 256 seconds)
[16:21:02] *** Joins: Trieste (T@user/pilgrim)
[16:30:21] *** kostkon_ is now known as kostkon
[16:30:24] *** Joins: pycode (~pycode3@2001:b07:5d28:551:f006:9396:332:ef52)
[16:31:11] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[16:36:31] *** Grauwolf_ is now known as Grauwolf
[16:41:38] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:47:40] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:00:01] *** Joins: VaniaPy (~VaniaPy@46.12.162.16.dsl.dyn.forthnet.gr)
[17:04:51] *** ____`_`__ is now known as dang`r`us
[17:24:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[17:32:42] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:37:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[17:49:06] *** Quits: iomari891 (~iomari891@197.210.70.166) (Ping timeout: 256 seconds)
[17:53:02] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:03:06] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[18:07:15] *** Joins: x_kuru (~xkuru@user/xkuru)
[18:10:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 268 seconds)
[18:10:18] *** Joins: eron (~eron@2804:431:c7c2:3848:2c26:bc50:f8a2:a008)
[18:13:17] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 240 seconds)
[18:18:32] *** Joins: admin123 (~harrymore@47.18.246.203)
[18:21:13] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:24] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.4)
[18:24:17] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[18:24:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:26:16] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[18:27:01] *** Joins: fikran (~fikran@user/fikran)
[18:27:59] *** Joins: clydez (~clydez@178.116.34.81)
[18:28:02] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[18:29:59] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[18:31:25] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[18:37:09] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:39:39] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:41:38] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[18:44:45] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[18:54:41] <pycode> hello everybody
[18:55:03] <pycode> what do i still have this warning ?: ....without a default; we can't do that (the database needs something to populate existing rows).
[18:55:09] <pycode> the table has no rows
[18:55:24] <pycode> truncate table core_mytable RESET IDENTIFY CASCADE
[18:55:40] <pycode> so why does django is still asking me to set a default value ?
[18:56:04] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[18:56:15] <GinFuyou> Because it doesn't depend on existance of table
[18:57:35] <pycode> so how can i do that?
[18:59:08] *** Joins: iomari891 (~iomari891@197.210.70.132)
[18:59:10] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[18:59:11] <GinFuyou> provide default or redo migrations
[19:00:32] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[19:02:38] <pycode> GinFuyou, ok
[19:09:38] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[19:11:44] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[19:17:57] *** Joins: djapo (~archangel@user/djapo)
[19:18:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:20:20] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[19:22:23] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[19:26:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi)
[19:26:34] *** Joins: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net)
[19:27:26] <Guest07> Is there a way to specify  <label for='something'> Label </label> in forms.py?
[19:37:10] *** Quits: pycode (~pycode3@2001:b07:5d28:551:f006:9396:332:ef52) (Ping timeout: 250 seconds)
[19:39:44] <Guest07> Nevermind I figured out a workaround.
[19:39:58] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[19:41:15] <GinFuyou> Guest07, FieldClass(label="My Label")
[19:42:08] <Guest07> Ah interesting
[19:42:44] <Guest07> I did something like this instead https://dpaste.org/RaWV
[19:43:29] <Guest07> My other question is I am not sure what to use for error messages. https://dpaste.org/HyaC
[19:43:54] <Guest07> I am not sure what the difference between regular field.errors and non_field_errors is
[19:43:59] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[19:44:25] <Guest07> and messages I have it setup to see everything too so when there is an error in the form, I see duplicate error messages
[19:53:14] <GinFuyou> non_field_errors are errors that not specific to any single field. Most common example would be password inputs mismatching with confirmation
[19:54:24] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[19:56:18] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[19:56:57] <Guest07> ooh so they only apply to view/form clean methods?
[19:57:05] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[19:57:13] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:03:48] *** Joins: dez (uid92154@user/dez)
[20:05:58] <Guest07> Or maybe forms.ValidationError ?
[20:06:48] *** Quits: eron (~eron@2804:431:c7c2:3848:2c26:bc50:f8a2:a008) (Quit: Client closed)
[20:11:26] <bparker> ValidationError can be raised for a specific field or in general
[20:11:34] <bparker> and errors can be printed for both cases on the same form
[20:11:50] <bparker> but yes non_field_errors apply to form clean() and not clean_somefield()
[20:12:02] <bparker> afaik
[20:20:43] <Guest07> ok interesting thanks
[20:21:18] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[20:22:15] *** Quits: VaniaPy (~VaniaPy@46.12.162.16.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:26:07] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Client Quit)
[20:28:57] *** Quits: clydez (~clydez@178.116.34.81) (Ping timeout: 240 seconds)
[20:33:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[20:35:14] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:36:22] *** Joins: fikran (~fikran@user/fikran)
[20:37:06] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:41:45] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[20:43:50] *** Joins: PomeloEU (~PomeloEU@ip26-2-214-87.adsl2.static.versatel.nl)
[20:45:34] *** Quits: PomeloEU (~PomeloEU@ip26-2-214-87.adsl2.static.versatel.nl) (Client Quit)
[20:46:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:47:47] *** Joins: PomeloEU (~PomeloEU@ip26-2-214-87.adsl2.static.versatel.nl)
[20:58:12] *** Quits: sharksauce1 (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[21:18:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:19:24] *** ChanServ sets mode: +v EvilDMP
[21:26:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-193.dhcp.inet.fi) (Quit: Leaving)
[21:29:42] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[21:29:48] *** Joins: GinF (~GinFuyou@reya.cloud.tilaa.com)
[21:30:09] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[21:34:07] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:40:18] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[21:48:00] *** daniel3 is now known as daniel2
[21:48:24] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[21:48:28] <no_gravity> Good Evening
[21:48:46] <no_gravity> I just noticed how similar templates in Django and Symfony look like. Do they both use Twig templates?
[21:49:04] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[21:49:23] *** Quits: GinF (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[21:49:36] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[21:51:17] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[21:51:26] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[21:55:53] <LordKalma> Django uses Jinja2 (more or less)
[21:57:45] <GinFuyou> Well, no Jinja is inspired by DTL, but so less
[21:57:48] <no_gravity> I guess they have the same root somehow.
[21:58:03] <no_gravity> Because I could just copy my templates from Django to a Symfony project and it workd :)
[21:58:15] <LordKalma> all template engines are more or less the same
[21:58:23] <LordKalma> except JSX, which is something else
[21:58:29] <LordKalma> vuejs templates are also {{ }} stuff
[21:58:35] <LordKalma> they all look similar in the end
[21:59:16] *** Joins: rje (~textual@65.141.156.170)
[21:59:18] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:02:35] <no_gravity> My own template engine uses just {}.
[22:02:43] <no_gravity> I find that the most comfortable.
[22:10:17] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:11:42] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[22:14:46] *** Joins: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede)
[22:14:48] *** Quits: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) (Quit: Client closed)
[22:15:12] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[22:16:13] *** Quits: iomari891 (~iomari891@197.210.70.132) (Quit: WeeChat 3.3)
[22:19:58] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[22:21:00] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[22:27:09] *** Joins: audiobirb (~audio@user/audio)
[22:32:36] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[22:43:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:43:57] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 240 seconds)
[22:45:43] *** Joins: fikran (~fikran@user/fikran)
[22:54:21] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Quit: beastDiv1)
[22:54:40] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[23:07:04] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[23:07:21] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[23:11:31] <audiobirb> FunkyBob, you around?
[23:12:01] <audiobirb> i changed email_scheduler to email_subscription and replaced "." with my email_subscription_create url and now i'm getting "EmailSubscription() got an unexpected keyword argument 'initial'
[23:12:01] <audiobirb> "
[23:12:02] *** Quits: dre (~dre@2001:8003:c932:c301:3dc2:f775:99d4:76ef) (Ping timeout: 240 seconds)
[23:15:21] <audiobirb> bparker, you around?
[23:16:02] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[23:18:08] <audiobirb> wtf
[23:18:12] <audiobirb> no one is online?
[23:18:19] <audiobirb> with freenode this was never a problem
[23:21:27] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:29:33] <beastDivision> audiobirb: timezones, people are busy, day jobs, etc, irc is async a lot of the time
[23:31:27] *** Joins: CrowX- (~CrowX-@185.167.46.134)
[23:32:16] <CrowX-> When streaming a large file using StreamingHttpResponse, does each chunk of the streaming process get served by the same worker, or does it use separate workers?
[23:38:29] <FunkyBob> audiobirb: please read the topic
[23:38:36] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[23:38:44] <FunkyBob> CrowX-: same worker
[23:38:55] <aselman4> Hello. Is there a way to add query hints to the queries that django generates?
[23:39:13] <FunkyBob> aselman4: don't think so
[23:39:14] <CrowX-> FunkyBob, and is it blocked from serving other requests until it finishes streaming?
[23:39:29] <FunkyBob> CrowX-: if it's a thread or process model, yes
[23:39:38] <CrowX-> thanks
[23:39:43] <FunkyBob> aselman4: isn't that an oracle and/or mssql only sort of thing?
[23:39:54] <aselman4> yes it is
[23:42:40] *** wez_ is now known as wez
[23:45:00] *** Joins: VaniaPy (~VaniaPy@46.12.162.16.dsl.dyn.forthnet.gr)
[23:46:04] *** Quits: vladoski (~foo@2001:b07:add:d406:44d8:8b83:6fe4:ede) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:49:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:50:35] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:52:28] *** Quits: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) (Quit: Client closed)
[23:54:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[23:54:07] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Quit: \o/)
[23:54:43] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[23:55:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:55:43] *** ChanServ sets mode: +v EvilDMP
[23:57:20] *** Quits: VaniaPy (~VaniaPy@46.12.162.16.dsl.dyn.forthnet.gr) (Quit: Connection closed)
