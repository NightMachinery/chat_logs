[00:00:15] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:01:01] <ano> any approach? think to store vars in files
[00:03:16] <emanuele6> why do you need to do this?
[00:03:31] *** Quits: ElPresidenteP (~ElPreside@2600:1700:3d10:4870:5c99:3fb5:4f54:3112) (Read error: Connection reset by peer)
[00:04:48] <ano> because multiple bg jobs using the same global vars
[00:04:58] *** Joins: N4buc0 (~N4buc0@177.132.111.247)
[00:04:59] <emanuele6> ok, but why?
[00:05:06] <emanuele6> what are you trying to do?
[00:05:15] <emanuele6> otherwise the question is too general
[00:05:32] <Earnest> ano: (Answer is no, but as emanuele6 suggests, there is probably a better way to accomplish what you're trying to do)
[00:06:08] <emanuele6> bash doesn't have a pool(2)/select(2) like command, so there is not a general solution
[00:06:59] <ano> any way to chk if bg job exited with non-zero status?
[00:07:03] <emanuele6> you can probably figure out an ad hoc solution for your specific problem though
[00:07:17] <emanuele6> ano: that is what the `wait' command does.
[00:07:48] <ano> # false & wait; echo $?
[00:07:50] <shbot> ano: [1] 51
[00:07:50] <shbot> ano: [1]+  Exit 1                  false
[00:07:50] <shbot> ano: 0
[00:08:11] <ano> wait returns 0 even if bg job failed
[00:08:12] *** Quits: lavaball (felix@31.204.155.215) (Ping timeout: 240 seconds)
[00:08:19] <emanuele6> wait %-
[00:08:34] <emanuele6> or `wait "$!"', (or `wait -n' in bash)
[00:09:01] <emanuele6> you must provide a pid, otherwise wait just wait for every job to finish and returns 0
[00:09:31] *** Quits: Sulky__ (~Sulky@37.164.218.39) (Quit: Leaving)
[00:09:34] *** Quits: Sulky (~Sulky@37.164.218.39) (Quit: Leaving)
[00:09:38] <emanuele6> ( pid or jobspec (like %-) or `-n' to tell wait to wait for any job )
[00:10:13] <emanuele6> # exit 20 & exit_pid=$!; wait "$exit_pid"; printf '%s\n' "$?"
[00:10:14] <shbot> emanuele6: [1] 51
[00:10:14] <shbot> emanuele6: [1]+  Exit 20                 exit 20
[00:10:14] <shbot> emanuele6: 20
[00:10:31] <emanuele6> # exit 20 & wait %1; printf '%s\n' "$?"
[00:10:33] <shbot> emanuele6: [1] 51
[00:10:33] <shbot> emanuele6: [1]+  Exit 20                 exit 20
[00:10:33] <shbot> emanuele6: 20
[00:10:44] <emanuele6> # exit 20 & wait -n; printf '%s\n' "$?"
[00:10:46] <shbot> emanuele6: [1] 51
[00:10:46] <shbot> emanuele6: [1]+  Exit 20                 exit 20
[00:10:46] <shbot> emanuele6: 20
[00:11:21] <emanuele6> you can read `help wait' 's output to learn how wait works instead of just running wait
[00:11:21] *** Joins: lavaball (felix@31.204.155.215)
[00:12:46] <ano> # js=(); false & js+=($!); true & js+=($!); wait ${js[@]}
[00:12:52] <shbot> ano: [1] 51
[00:12:52] <shbot> ano: [2] 52
[00:12:53] <shbot> ano: etc... ( http://ix.io/3Rr3 )
[00:13:00] <ano> # js=(); false & js+=($!); true & js+=($!); wait ${js[@]}; echo $?
[00:13:01] <emanuele6> !quote > ano
[00:13:01] <greybot> ano: https://mywiki.wooledge.org/Quotes
[00:13:06] <shbot> ano: [1] 51
[00:13:06] <shbot> ano: [2] 52
[00:13:06] <shbot> ano: etc... ( http://ix.io/3Rr4 )
[00:13:19] <emanuele6> also you are passing multiple pids, not a single pid.
[00:13:21] <ano> what about multiple jobs?
[00:13:38] *** Joins: karakedi (~eAC53C340@user/karakedi)
[00:13:43] <emanuele6> what do you mean "what about multiple jobs?" what do you expect there?
[00:14:03] <emanuele6> do you expect $? to be "1 0"? i don't get it
[00:14:10] <emanuele6> run `wait' multiple times
[00:14:27] <ano> mean, is there a way to wait for multiple jobs to finish and return non-zero if any job return non-zero
[00:14:36] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:14:47] <emanuele6> yes. use a loop and check all of them.
[00:15:20] <emanuele6> also
[00:15:22] <emanuele6> !qefs
[00:15:22] <greybot> "$Quote" "$Every" "${F:-ing}" "$Substitution"
[00:15:26] <emanuele6> lmao
[00:15:34] <emanuele6> !meta qefs
[00:15:34] <greybot> kurahaupo 1645905948(2022-02-26) learn "$Quote" "$Every" "${F:-ing}" "$Substitution"
[00:15:57] <ano> no point to quote builtin consistent vars like a $!
[00:16:13] <emanuele6> how is there no point exactly?
[00:16:19] <emanuele6> what makes them special?
[00:16:30] <emanuele6> also is ${js[@]} a "builtin"?
[00:18:17] <phy1729> ano: IFS=1
[00:20:11] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Quit: Leaving)
[00:22:09] <wiscii> IFS=^H
[00:22:15] *** Joins: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de)
[00:23:34] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[00:23:43] *** Joins: _Vi (~vi0oss@2a0d:7c40:3000:1326::3)
[00:25:54] <emanuele6> # js=(); { true & js+=( "$!" ); false & js+=( "$!" ); } 2>/dev/null; if x=; for pid in "${js[@]}"; do wait "$pid" || { x=1; break; }; done; [[ $x ]]; then printf 'at least one non-zero exit code\n'; fi
[00:25:55] <shbot> emanuele6: [1]-  Done                    true
[00:25:55] <shbot> emanuele6: [2]+  Exit 1                  false
[00:25:56] <shbot> emanuele6: at least one non-zero exit code
[00:26:04] <emanuele6> # js=(); { true & js+=( "$!" ); true & js+=( "$!" ); } 2>/dev/null; if x=; for pid in "${js[@]}"; do wait "$pid" || { x=1; break; }; done; [[ $x ]]; then printf 'at least one non-zero exit code\n'; fi
[00:26:06] <shbot> emanuele6: [1]-  Done                    true
[00:26:06] <shbot> emanuele6: [2]+  Done                    true
[00:27:13] <Earnest> Something to keep in mind for people here, that I missed before
[00:27:41] <Earnest> Is that bash maintains a job table, and in this job table various jobs can have various states, such as running, ending, ended, etc.
[00:28:24] <Earnest> The point is that just because a job ends, does not mean it has been removed from the table.  So you can have lots of jobs finish before reaching wait, but all of them will be removed one by one by successive calls to wait
[00:28:47] <Earnest> The information about the job, its exit status, and so on is still there even after the process long since terminated
[00:28:59] <Earnest> This is the key to understanding wait -n parallelism
[00:34:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:32] *** Joins: seninha (~chatzilla@user/seninha)
[00:36:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:36:35] <emanuele6> i am not sure bash stores the exit statuses, i think it just uses waitpid(2)
[00:36:37] <emanuele6> but maybe it does
[00:37:07] *** Joins: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c)
[00:37:40] <emanuele6> oh, no it must be storing them
[00:37:52] <emanuele6> because you can call wait multiple times, yeah
[00:37:53] <ano> # js=(); false & js+=($!); true & js+=($!); for _ in ${js[@]}; do wait -n || s=1; done; [[ ! $s ]] || echo 1
[00:37:59] <shbot> ano: [1] 51
[00:37:59] <shbot> ano: [2] 52
[00:37:59] <shbot> ano: etc... ( http://ix.io/3Rra )
[00:38:26] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6)
[00:38:32] <emanuele6> what??
[00:38:37] <emanuele6> why would you do that?
[00:38:50] <emanuele6> you are storing pids for what? as a counter?
[00:39:07] <emanuele6> what if there are other jobs?
[00:40:10] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[00:40:28] <emanuele6> also you can just use  s=; while jobs %- 2>/dev/null; do wait -n || s=1; done  at this point
[00:40:28] <ano> what if IFS=1!? there is many other ways to break script
[00:40:40] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[00:41:23] <emanuele6> i don't see get why you rewrote my code to make it not use the pids and to remove the early return and check all pids unnecessarily though
[00:41:34] <emanuele6> s/see //
[00:42:18] <emanuele6> but  for _ in ${js[@]}; do wait -n   is just silly
[00:42:36] *** Joins: yustin (~yustin@user/yustin)
[00:43:25] <wiscii> ano why would IFS be 1 ? in the first place
[00:43:27] <ano> because >wait for multiple jobs to finish and return non-zero if any job return non-zero
[00:43:45] <emanuele6> then remove the early return, but wait -n is still silly
[00:44:17] <emanuele6> use a   while jobs %- &> /dev/null; do wait -n || s=1; done  loop if you want to do that
[00:46:02] <emanuele6> # false & true & true & if s=; while jobs %-; do wait -n || s=1; done &>/dev/null; [[ $x ]]; then printf 'at least one non-zero exit status.\n'; fi
[00:46:04] <shbot> emanuele6: [1] 51
[00:46:04] <shbot> emanuele6: [2] 52
[00:46:04] <shbot> emanuele6: [3] 53
[00:46:06] <ano> wiscii: it was example from phy1729 how different IFS can break unquoted vars, but there is many other ways to break things
[00:46:32] <wiscii> i read it myself .. the question remains
[00:46:40] <wiscii> ano^
[00:46:54] <emanuele6> # false & true & true & if s=; while jobs %-; do wait -n || s=1; done &>/dev/null; [[ $s ]]; then printf 'at least one non-zero exit status.\n'; fi
[00:47:00] <shbot> emanuele6: [1] 51
[00:47:01] <shbot> emanuele6: [2] 52
[00:47:01] <shbot> emanuele6: etc... ( http://ix.io/3Rrg )
[00:47:13] <ano> wiscii: then ask phy1729
[00:47:18] <emanuele6> ( the variable was named $s, not $x )
[00:47:21] <emanuele6> # true & true & true & if s=; while jobs %-; do wait -n || s=1; done &>/dev/null; [[ $s ]]; then printf 'at least one non-zero exit status.\n'; fi
[00:47:24] <shbot> emanuele6: [1] 51
[00:47:24] <shbot> emanuele6: [2] 52
[00:47:24] <shbot> emanuele6: etc... ( http://ix.io/3Rrg )
[00:47:39] <emanuele6> mm, why is that not working
[00:48:26] <emanuele6> oh, %- only matches running processes, duh
[00:48:53] <emanuele6> then store the pids, but check them
[00:48:57] <ano> because jobs %- pops jobs from queue?
[00:49:20] *** Quits: mauz (~mauz@82.66.125.193) (Quit: Leaving...)
[00:49:26] <emanuele6> is a way to check if a job is running `%-' means the last job
[00:49:33] <emanuele6> i remembered it wrong
[00:50:39] <emanuele6> # { true & js+=("$!"); true & js+=("$!"); true & js+=("$!") ;} &>/dev/null; if s=; for pid in "${js[@]}"; do wait "$pid" || s=1; done &>/dev/null; [[ $s ]]; then printf 'at least one non-zero exit status.\n'; fi
[00:50:41] <shbot> emanuele6: no output
[00:50:46] <emanuele6> # { true & js+=("$!"); false & js+=("$!"); true & js+=("$!") ;} &>/dev/null; if s=; for pid in "${js[@]}"; do wait "$pid" || s=1; done &>/dev/null; [[ $s ]]; then printf 'at least one non-zero exit status.\n'; fi
[00:50:48] <shbot> emanuele6: at least one non-zero exit status.
[00:50:56] <emanuele6> don't early return, but check the right pids ^
[00:51:06] *** Parts: ham5urg (~ham5urg@213.21.40.224.dynamic-pppoe.dt.ipv4.wtnet.de) (Leaving)
[00:51:27] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd) (Ping timeout: 256 seconds)
[00:53:10] <emanuele6> another thing you could do is keep the early return and wait for all the pids
[00:53:45] *** Joins: shabius (~shabius@2a0e:1c80:1:1041::1007)
[00:53:46] <emanuele6> # js=(); { true & js+=( "$!" ); false & js+=( "$!" ); } 2>/dev/null; wait "${js[@]}"; if x=; for pid in "${js[@]}"; do wait "$pid" || { x=1; break; }; done; [[ $x ]]; then printf 'at least one non-zero exit code\n'; fi
[00:53:47] <shbot> emanuele6: [1]-  Done                    true
[00:53:48] <shbot> emanuele6: [2]+  Exit 1                  false
[00:53:48] <shbot> emanuele6: at least one non-zero exit code
[00:54:12] *** Quits: twobitsprite (~twobitspr@gateway/vpn/pia/twobitsprite) (Quit: leaving)
[00:54:28] <emanuele6> if you need to do something between `wait' and checking the results
[00:55:27] <wiscii> ano, your script ..
[00:56:25] <Earnest> ano: %- doesn't pop, it references job that would become the main (default) job once the main one ends (%% or %+)
[00:57:13] <emanuele6> oh, right also that
[00:58:09] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[00:58:29] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[00:58:34] <emanuele6> but main, jobspecs can only select running jobs, so a `while jobs %%' loop would not work and is just wrong
[00:58:43] <emanuele6> s/main/&ly/
[01:00:45] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:00:52] <ano> # true & sleep 1; jobs %-; wait -n; echo $?
[01:00:55] <shbot> ano: [1] 51
[01:00:55] <shbot> ano: [1]+  Done                    true
[01:00:55] <shbot> ano: 127
[01:00:58] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[01:01:48] <Earnest> ano: jobs output shows you what %+ and %- refer to (%% and %+ are the same thing)
[01:03:07] <Earnest> d# :&:& jobs
[01:03:08] <shbot> Earnest: [2] + Running                    :
[01:03:08] <shbot> Earnest: [1] - Running                    :
[01:03:38] <emanuele6> d# { :&:& } 2/ jobs
[01:03:39] <shbot> emanuele6: dash: 1: Syntax error: word unexpected
[01:03:40] <emanuele6> err
[01:03:57] <emanuele6> d# { sleep 1 & sleep 1 & } 2>/dev/null; jobs
[01:03:59] <shbot> emanuele6: [2] + Running                    sleep 1
[01:03:59] <shbot> emanuele6: [1] - Running                    sleep 1
[01:04:09] <emanuele6> oh, it's jobs, not jobs %%
[01:05:02] <emanuele6> you were showing the + and -, i misunderstood
[01:14:31] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:14:48] *** Joins: zebrag (~chris@user/zebrag)
[01:15:55] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[01:16:55] *** Joins: unop (~unop@195.91.20.32)
[01:17:06] *** Quits: shabius (~shabius@2a0e:1c80:1:1041::1007) (Quit: Leaving)
[01:17:47] <phy1729> wiscii: I'm just saying that one should always qefs because it protects against idiocy elsewhere
[01:20:50] <wiscii> phy1729: all ready on your side ;-)
[01:22:00] <wiscii> i have a really cool and unexpected example
[01:22:36] <wiscii> because it bit my right in the ass!
[01:24:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:27:57] *** Quits: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[01:28:16] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[01:28:18] *** Quits: ekathva (~ekathva@2001:999:53:4449:188a:48b1:2ca2:338c) (Quit: Leaving)
[01:28:42] <wiscii> # bar(){ echo ok; }; [ $foo ] ] || bar
[01:28:44] <shbot> wiscii: no output
[01:29:08] <wiscii> # bar(){ echo ok; }; [ $foo ] ] || bar; echo $?
[01:29:10] <shbot> wiscii: 0
[01:29:20] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f783) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:29:23] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[01:29:45] <wiscii> !learn qefsthis # bar(){ echo ok; }; [ $foo ] ] || bar; echo $?
[01:29:46] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[01:29:46] <greybot> OK, wiscii
[01:29:56] <wiscii> !qefsthis
[01:29:56] <greybot> # bar(){ echo ok; }; [ $foo ] ] || bar; echo $?
[01:29:58] <shbot> greybot: 0
[01:31:08] <larryv> !forget qefsthis
[01:31:08] <greybot> OK, larryv
[01:31:21] <wiscii> why ?
[01:31:44] <larryv> needlessly convoluted example
[01:31:56] <wiscii> it is a perfect example
[01:31:57] <larryv> it always prints 0, unless echo is somehow broken
[01:32:11] <wiscii> you have not figured out the problem
[01:32:20] <larryv> and i'm sure there's already at least factoid that says you should quote args in [ ]
[01:32:21] <wiscii> !learn qefsthis # bar(){ echo ok; }; [ $foo ] ] || bar; echo $?
[01:32:22] <greybot> OK, wiscii
[01:32:49] <tirnanog> larryv: yeah, quotewhen
[01:32:50] <wiscii> it explains exactly why quoting is necessary
[01:33:06] <tirnanog> it doesn't explain anything at all, in fairness. although, neither does qefs.
[01:33:33] <wiscii> ok, it is a perfect example of what goes wrong, it leaves the reader the question of "why" ..
[01:33:50] <larryv> your examples always have way too much cruft
[01:34:00] <wiscii> there is no cruft ..
[01:34:12] <wiscii> what cruft ?
[01:34:14] <larryv> the function is cruft. the test command that is inherently broken is cruft
[01:34:18] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (Ping timeout: 252 seconds)
[01:35:00] <wiscii> !forget quefsthis
[01:35:00] <greybot> I don't know what quefsthis is
[01:35:06] <wiscii> !forget qefsthis
[01:35:06] <greybot> OK, wiscii
[01:35:08] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[01:35:32] <wiscii> even the name "qefsthis" is a hint to its nature
[01:35:44] <wiscii> it feels like a good example to me ..
[01:36:10] <wiscii> eg
[01:36:26] <wiscii> # bar(){ echo ok; }; [ "$foo" ] ] || bar; echo $?
[01:36:28] <shbot> wiscii: bash: [: : unary operator expected
[01:36:28] <shbot> wiscii: ok
[01:36:29] <shbot> wiscii: 0
[01:36:52] *** Joins: crashrep (~crashrep@user/crashrep)
[01:38:03] <Earnest> wiscii: Why the ] ]?
[01:38:25] <Earnest> Why a function?
[01:38:37] <wiscii> it was a typo which hid from me for months, which is why it feels like such a good example
[01:38:52] <wiscii> it was not until i started doing QEFS that the error came to light
[01:39:19] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:39:19] <wiscii> nock-on effect
[01:39:26] <wiscii> knock-on effect
[01:39:33] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.235) (Quit: leaving)
[01:41:08] <wiscii> look again ..
[01:41:28] <wiscii> # [ "$foo" ] ] ||  echo $?
[01:41:30] <shbot> wiscii: bash: [: : unary operator expected
[01:41:30] <shbot> wiscii: 2
[01:41:41] <emanuele6> "$?"
[01:41:49] <wiscii> # [ $foo ] ] ||  echo $?
[01:41:51] <shbot> wiscii: no output
[01:41:59] <wiscii> no error either
[01:42:17] <Earnest> Sure
[01:42:19] <wiscii> a simple typo caused a total failure in a crucial code path
[01:42:32] <wiscii> until QEFS found it
[01:42:39] <Earnest> [ "]" ] wouldn't be an error,  [ "" "]" ] would
[01:42:40] <wiscii> hense .. good example
[01:42:49] <emanuele6> QEFS, but not "$?" ?
[01:43:12] <wiscii> Earnest: it is not "what you want" it is "what the user typed" and subsequently missed
[01:43:26] <larryv> an example that accidentally *works* with bad quoting has merit. cut the fat
[01:43:28] <Earnest> All you did was rediscover x$foo = x
[01:43:34] <wiscii> # [ $foo ] ] ||  echo "$?"
[01:43:34] <larryv> the function, the test
[01:43:36] <shbot> wiscii: no output
[01:43:38] <wiscii> because emanuele6
[01:44:21] <larryv> someone could easily say "this wouldn't have happened if you used [[" and they'd be right. using [ is a distraction
[01:44:43] <wiscii> larryv: it doesn't technically "work" it simply never fails
[01:45:00] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 240 seconds)
[01:45:03] <larryv> i'm well aware
[01:45:03] <wiscii> POSIX
[01:45:43] <wiscii> listen, you guys don't like good examples that are found by astute users, so be it
[01:45:45] <Earnest> wiscii: You might be over thinking this
[01:46:16] <wiscii> Earnest: i am over thinkning it, i should have quoted it
[01:46:22] <Earnest> Recall that [ is a command, like ls.  [ takes arguments and expects its final argument argv[argc] to be ]
[01:46:26] <wiscii> but still, it's a really good example
[01:46:50] <Earnest> If you supply more than one argument it expects a unary operator, such as -f, -e, -d, etc.
[01:47:18] <wiscii> https://xkcd.com/386/
[01:47:25] <wiscii> ^ all and sundry
[01:47:47] <Earnest> wiscii: Are you so stuck in your ways to think that this is what's happening?
[01:48:02] <wiscii> nope ..
[01:48:02] <Earnest> In fact, having shown that, I'll take note of it and never interact with you
[01:48:08] <wiscii> ok
[01:48:28] <wiscii> when humour becomes the weapon then we are all fucked
[01:48:55] *** Joins: docmax (~docmax@dynamic-077-000-132-132.77.0.pool.telefonica.de)
[01:50:29] <wiscii> Earnest: to be honest, i don't follow your line of reason.  My line of reason is, this is what goes wrong when typos and typos are notoriously hard to spot .. especially when you have something like ']] ||' in the thick of it iall
[01:50:39] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[01:50:48] <wiscii> it all*
[01:51:25] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[01:51:30] <wiscii> and if a function never fails then how do you know it's broken
[01:51:48] <wiscii> QEFS did actually discover this error
[01:51:55] *** Joins: tijuco (~tijuco@user/tijuco)
[01:52:08] <wiscii> i quoted some sting somewhere else and that started working as expected
[01:52:14] <wiscii> and then this one broke
[01:52:25] <wiscii> but it did not break
[01:52:41] *** Joins: Kholuendara (~Kholuenda@user/kholuendara)
[01:52:43] <wiscii> so my tests went from working to working .. even though I knew it should break
[01:53:16] <ano> phy1729: u cannot protect against all "idiocy", there is many set(s)/shopt(s)/ENV(s)/etc depended behaviours
[01:53:17] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:53:20] <wiscii> that is the most insidious bug i have ever seen
[01:53:41] <emanuele6> ano: that is not true for quoted expansion.
[01:55:45] <Earnest> ano: None of those will break proper quoting, does this change your opinion?
[01:56:29] <Earnest> (And if not, what level of proof would?)
[01:56:41] <ano> according to compact* and posix mode there is many quoting related behaviors
[01:57:09] <Earnest> Go on
[01:58:30] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 252 seconds)
[01:59:08] *** Joins: tijuco (~tijuco@user/tijuco)
[02:00:09] *** Joins: ChmEarl (~chmearl@user/chmearl)
[02:00:21] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:a875:45d9:5bbc:7fa6) (Ping timeout: 245 seconds)
[02:02:28] *** Joins: rgrinberg (~textual@187.223.170.172)
[02:02:48] <emanuele6> i don't see them. i see "quoting" mentioned in the compat section of the manual, but never for expansions, only for other things related to =~, word in ${var:-word}, and other minor things all unrelated to expansion
[02:03:59] *** Joins: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net)
[02:04:46] *** Joins: white_rose[m] (~whiterose@2001:470:69fc:105::1:c732)
[02:06:12] <ano> BASH_COMPAT=compat41
[02:06:18] <ano> # BASH_COMPAT=compat41
[02:06:20] <shbot> ano: bash: BASH_COMPAT: compat41: compatibility value out of range
[02:06:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:07:37] <Earnest> #triggers
[02:07:46] <emanuele6> # triggers
[02:07:47] <shbot> emanuele6: Available triggers: +# bash-devel; 1# bash-1.14; 2# bash-2.05b; 32# bash-3.2; 3# bash-3.2; 42# bash-4.2; 43# bash-4.3; 44# bash-4.4; 4# bash-4.4; 50# bash-5.0; 51# bash-5.1; 5# bash-5.1; # bash-5.1; d# dash-0.5.9; sh# dash-0.5.9; k# ksh 93u+ 2012-08-01; m# mksh R59 2021/01/24; b# bourne; j# bourne(w/job);
[02:08:04] <Earnest> +# declare -p BASH_VERSION
[02:08:06] <shbot> Earnest: declare -- BASH_VERSION="5.1.4(1)-maint"
[02:08:16] <Earnest> ._.
[02:08:18] <emanuele6> that is old
[02:09:19] <emanuele6> the latest release is 5.1.16(1)
[02:09:44] <emanuele6> and bash-devel should be 5.2.0(2)-alpha
[02:10:38] <emanuele6> wow, bash 5.2.0(2)-alpha takes 2seconds to start up on my pc
[02:11:34] <geirha> that's normal
[02:12:09] <geirha> by default, dev releases like -alpha has debugging stuff enabled, which makes it slow
[02:12:26] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[02:12:27] <emanuele6> yeah, i just noticed
[02:13:07] <geirha> and yeah, I should get around to updating shbot's versions
[02:13:52] <geirha> not right now though, but tomorrow, yeah, tomorrow, definitely
[02:14:04] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[02:14:46] *** Quits: Kholuendara (~Kholuenda@user/kholuendara) (Ping timeout: 250 seconds)
[02:17:27] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:28:53] *** white_rose[m] is now known as whiterose[m][m]
[02:29:24] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[02:30:04] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Quit: Coyote finally caught me)
[02:30:28] *** whiterose[m][m] is now known as white_rose[m]
[02:32:11] *** Joins: at_work (~at_work@user/at-work/x-5282331)
[02:34:29] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[02:35:02] <wiscii> !learn qefs-x01 # [ $foo ] ] || echo NOK; echo OK
[02:35:02] <greybot> OK, wiscii
[02:35:13] <wiscii> !qefs-x01
[02:35:13] <greybot> # [ $foo ] ] || echo NOK; echo OK
[02:35:16] <shbot> greybot: OK
[02:35:46] <ano> seems i was wrong about >many, but definitely remember there was some single quotes within double quotes nonsense for posix mode in older versions
[02:36:20] <emanuele6> ano: how is that relevant to expansion though?
[02:36:47] <emanuele6> s/to/for/
[02:37:05] <ano> it was somehow related for expansion afaik
[02:37:46] <emanuele6> if you say expansion in general, maybe, but if you are saying for the expansion of a variable: "$var", there is no way
[02:38:11] <geirha> 1 NOK is $0.11, nok $foo, so that explains that
[02:38:23] <geirha> s/nok/not/
[02:39:26] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[02:39:30] <wiscii> who's there ?
[02:40:03] <wiscii> s/who's there/who's not there/ ?
[02:41:25] <geirha> the vikings, but you can keep wineland, it's tainted now
[02:42:31] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Read error: Connection reset by peer)
[02:42:56] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[02:43:32] *** Joins: Adoi (~Adoi@user/adoi)
[02:44:01] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:44:06] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[02:44:32] <wiscii> the vikings .. i'm not even ggoing there
[02:45:03] <wiscii> !qefs-x01
[02:45:03] <greybot> # [ $foo ] ] || echo NOK; echo OK
[02:45:06] <shbot> greybot: OK
[02:45:19] <wiscii> that is sweet because it is really
[02:45:47] <wiscii> `[ -n ']' ]`
[02:45:48] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[02:45:57] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[02:46:03] <wiscii> hiddin bashisms
[02:46:19] <wiscii> oh no POSIXisms
[02:48:23] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:49:08] <wiscii> it is like a chess puzzle, the fun is seeing the problem
[02:54:30] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:56:52] <wiscii> !forget qefs-x01
[02:56:52] <greybot> OK, wiscii
[02:57:58] <wiscii> !learn example01 # [ $foo ] ] || echo "Win $10,000,000"; echo "You loose"
[02:57:58] <greybot> OK, wiscii
[02:58:18] <wiscii> !forget example01
[02:58:18] <greybot> OK, wiscii
[02:59:19] <wiscii> !learn example01 # [ $foo ] ] || echo "Win $10,000,000"; echo "You lose"
[02:59:19] <greybot> OK, wiscii
[03:01:37] *** Joins: arinov (~arinov@178.240.182.179)
[03:02:59] *** Joins: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256)
[03:03:06] <wiscii> !forget example01
[03:03:06] <greybot> OK, wiscii
[03:03:33] <wiscii> !learn q01 # [ $foo ] ] || echo "Win $10,000,000"; echo "You lose"
[03:03:33] <greybot> OK, wiscii
[03:03:54] <wiscii> !learn a01 # [ "$foo" ] ] || echo "Win $10,000,000"; echo "You lose"
[03:03:54] <greybot> OK, wiscii
[03:04:27] <emanuele6> geirha: lol
[03:06:23] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:07:36] *** Joins: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net)
[03:07:51] <alesan> hello, if I used alias and define one, will those be inherited by scripts I call?
[03:07:59] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:08:06] <larryv> no
[03:08:19] <alesan> is there a was to do so?
[03:08:28] <alesan> I need to mock fake commands for - functional testing
[03:08:55] <alesan> one of these scripts is supposed to reboot, but during the test I want it to, ideally touch a file or something, not reboot
[03:09:13] <alesan> by substituting the real command with a mock, it's a common way to do testing
[03:09:26] <alesan> so if I could force an alias down the throat of a script...
[03:09:34] <alesan> that'd make it very easy
[03:09:38] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:10:14] *** Quits: arinov (~arinov@178.240.182.179) (Ping timeout: 260 seconds)
[03:10:52] <wiscii> easy ..
[03:11:25] *** Quits: luva (~luva@185.168.9.231) (Ping timeout: 240 seconds)
[03:11:34] *** Joins: luva (~luva@37.120.197.45)
[03:11:59] <wiscii> i enjoyed "The hateful 8"
[03:12:18] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[03:12:43] <alesan> yes if I could "export" aliases my testing would be very easy
[03:13:00] <larryv> alesan: you can have your scripts define and use aliases if you call them in a certain way, but you can't make them inherit from the calling shell
[03:13:35] <larryv> you can export functions though
[03:13:37] *** Joins: ferdna (~ferdna@user/ferdna)
[03:13:50] <alesan> do You have an example? about that "certain way" so that I can see if it matches my use case
[03:13:53] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[03:13:58] <larryv> i'd recommend just using functions.
[03:14:08] <alesan> I mean at that point I'll just use a variable
[03:14:26] <alesan> if a environment variable is set, I'll use that command if it isn't I'll use a default
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:40] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[03:16:08] <alesan> very odd, that such a powerful functionality of BASH (aliases) is kept so limited, what was the design consideration?
[03:16:24] <wiscii> no more fuck ups
[03:16:38] <Friithian> aliases are for interactive use
[03:16:52] <alesan> Friithian, I believe in mechanism, not policy
[03:17:42] <larryv> alesan: they are considered a legacy feature
[03:17:43] <emanuele6> yes, aliases only expand in interactive shells.
[03:17:50] <alesan> I presented a use case (testing) where aliases could be the ideal instrument for mock-ups
[03:17:54] <larryv> work will not be done to help people use them more
[03:17:58] <Friithian> or, you could use functions
[03:18:00] <alesan> larryv, OK, very odd from my point of view
[03:18:18] <alesan> Friithian, yes, as larryv suggested
[03:18:32] <larryv> there are very few cases were functions are not superior
[03:18:36] <Friithian> like, aliases are fine where they are. They make it so I type l and get ls -lsh --color=auto without all the typing
[03:18:37] <wiscii> an aliais is simply laziness
[03:18:40] <larryv> # BASH_ENV=<(printf '%s\n' "alias ls='echo dumb'") bash -O expand_aliases -c 'ls'
[03:18:41] <shbot> larryv: dumb
[03:18:43] <alesan> larryv, are You saying you do not have any alias in your shell configuration? :)
[03:18:50] <larryv> alesan: i have zero aliases
[03:19:01] <larryv> i have like two functions for convenience things
[03:19:15] <alesan> so do You not map "v" to ls -alh?
[03:19:16] <wiscii> +1
[03:19:26] <alesan> :O
[03:19:54] <emanuele6> the only aliases i have are d0=DISPLAY=:0 and d1=DISPLAY=:1
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:03] <larryv> this is the only thing i do along those lines: ls() { command ls -AFh "$@" }
[03:20:15] <larryv> interactive only
[03:20:30] <wiscii> i uncolour grep
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:54] <wiscii> no i add -n to grep
[03:21:39] <emanuele6> huh?
[03:22:00] <alesan> so how would I do the mock with a function
[03:22:09] <DPA> # mkdir bin; echo "echo Hello World!" >bin/reboot; PATH="$PWD/bin/:$PATH"; reboot
[03:22:11] <shbot> DPA: bash: /root/bin/reboot: Permission denied
[03:22:18] <alesan> the script itself would have a function of the same name, but I can override it externally?
[03:22:29] <DPA> # mkdir bin; echo "echo Hello World!" >bin/reboot; chmod +x bin/reboot; PATH="$PWD/bin/:$PATH"; reboot
[03:22:31] <shbot> DPA: Hello World!
[03:22:51] <alesan> DPA, that is also an interesting technique, yeah
[03:22:53] <larryv> # ls() { echo less dumb; }; export -f ls && bash -c ls
[03:22:55] <shbot> larryv: less dumb
[03:24:00] <larryv> alesan: the script you're mocking already defines the function that you're trying to mock out?
[03:25:21] <alesan> right now just calls "reboot" on a line. You suggested I could use functions to mock that call, so I thoguht I had to define a "reboot" function inside the script for the "production" case, and some sort of external definition for testing
[03:26:06] <alesan> so I am not sure how to proceed with that...
[03:26:16] *** Quits: _Vi (~vi0oss@2a0d:7c40:3000:1326::3) (Ping timeout: 250 seconds)
[03:26:28] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 268 seconds)
[03:26:45] <larryv> you don't have to define a function inside the script
[03:27:18] <larryv> # bash -c ls; ls() { echo less dumb; }; export -f ls; bash -c ls
[03:27:20] <shbot> larryv: less dumb
[03:27:48] <larryv> bah
[03:27:50] <larryv> # bash -c 'ls -a'; ls() { echo less dumb; }; export -f ls; bash -c 'ls -a'
[03:27:52] <shbot> larryv: .  ..  .bashrc  .mkshrc
[03:27:52] <shbot> larryv: less dumb
[03:28:24] <alesan> ohhh
[03:28:33] <emanuele6> # printf 'echo hello\n' > my_script; bash my_script
[03:28:35] <shbot> emanuele6: hello
[03:28:42] <emanuele6> # printf 'echo hello\n' > my_script; (echo () { ls -A ;}; export -f echo; bash my_script)
[03:28:44] <shbot> emanuele6: .bashrc  .mkshrc  my_script
[03:29:27] <alesan> export -f is the right one?
[03:29:42] <larryv> "right"?
[03:29:45] <alesan> also
[03:29:53] <alesan> is all of this a bashism or it's POSIX?
[03:30:01] <larryv> bashism
[03:30:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:05] <emanuele6> it's not POSIX
[03:30:12] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:17] <alesan> OK, just to know how much I'm crossing
[03:30:19] <emanuele6> but aliases never expand in POSIX scripts also.
[03:30:28] <alesan> yeah
[03:30:34] <wiscii> good!
[03:30:44] <emanuele6> maybe in function definitions
[03:31:13] <DPA> This works even for mocking absolute paths:
[03:31:13] <DPA> # mkdir bin; echo "echo Hello World!" >bin/reboot; chmod +x bin/reboot; unshare -rm sh -c "mount --bind $PWD/bin/reboot /sbin/reboot; unshare --map-user=$(id -u) /sbin/reboot"
[03:31:16] <shbot> DPA: bash: unshare: command not found
[03:31:22] <emanuele6> yes, they actually do in function definition
[03:31:34] <emanuele6> so i guess that is a way to use aliases in POSIX sh scripts.
[03:32:00] <alesan> emanuele6, I am cursious, can you ... explain?
[03:32:21] <larryv> they do though :-/
[03:32:22] <larryv> sh -c $'alias ls=date\nls'
[03:32:27] <larryv> # sh -c $'alias ls=date\nls'
[03:32:29] <shbot> larryv: Sun Mar  6 00:02:28 UTC 2022
[03:32:41] <alesan> what
[03:32:45] <emanuele6> # bash -c $'alias ls=date\nls'
[03:32:47] <shbot> emanuele6: no output
[03:32:50] <emanuele6> oh, it's just bash then
[03:32:51] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 245 seconds)
[03:33:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:33:20] <emanuele6> yeah, aliases don't expand in function definition either when using bash
[03:34:05] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[03:34:56] <wiscii> emanuele6: did you check that ?
[03:35:13] *** Quits: rgrinberg (~textual@2806:101e:7:134:c52e:384:2f97:6256) (Ping timeout: 256 seconds)
[03:35:22] <emanuele6> yes.
[03:35:34] <wiscii> exellent :)
[03:35:58] * wiscii air strums
[03:36:29] <emanuele6> # printf '%s\n' '#!/bin/bash -' 'alias x=echo\ y' 'l () { x; }' 'l' > scr; chmod +x scr; ./scr
[03:36:30] <shbot> emanuele6: ./scr: line 3: x: command not found
[03:36:34] <emanuele6> # printf '%s\n' '#!/bin/sh -' 'alias x=echo\ y' 'l () { x; }' 'l' > scr; chmod +x scr; ./scr
[03:36:36] <shbot> emanuele6: y
[03:36:43] <emanuele6> # printf '%s\n' '#!/bin/sh -' 'alias x=echo\ y' 'l () { x; }' 'l' > scr; chmod +x scr; bash --posix ./scr
[03:36:45] <shbot> emanuele6: y
[03:37:08] <emanuele6> even without the function it would work in posix mode
[03:37:25] <emanuele6> # printf '%s\n' '#!/bin/sh -' 'alias x=echo\ y' 'l' > scr; chmod +x scr; bash --posix ./scr; dash ./scr; bash ./scr
[03:37:27] <shbot> emanuele6: ./scr: line 3: l: command not found
[03:37:27] <shbot> emanuele6: ./scr: 3: ./scr: l: not found
[03:37:27] <shbot> emanuele6: ./scr: line 3: l: command not found
[03:37:33] <emanuele6> oops
[03:37:37] <emanuele6> # printf '%s\n' '#!/bin/sh -' 'alias x=echo\ y' 'x' > scr; chmod +x scr; bash --posix ./scr; dash ./scr; bash ./scr
[03:37:39] <shbot> emanuele6: y
[03:37:39] <shbot> emanuele6: y
[03:37:39] <shbot> emanuele6: ./scr: line 3: x: command not found
[03:37:57] <emanuele6> aliases not expanding in scripts is bash specific behaviour
[03:38:04] <emanuele6> i didn't know that
[03:39:12] <tirnanog> yet there's no convenient defence against functions propagated by the environment. bash is sometimes strange.
[03:39:53] <emanuele6> i wonder why there is this behaviour; aliases cannot be exported. can they?
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8) (Remote host closed the connection)
[03:40:17] <larryv> not to my knowledge
[03:41:06] <wiscii> i would presume that it is a sort of "bash does not do this because it is stupid" defense
[03:41:09] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[03:44:27] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8)
[03:49:02] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8) (Ping timeout: 252 seconds)
[03:49:08] <tirnanog> yeah, probably.
[03:50:45] <alesan> :O
[03:51:04] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:51:38] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[03:57:00] *** Joins: rgrinberg (~textual@187.223.170.172)
[03:59:27] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[03:59:39] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[04:01:49] *** Joins: ChmEarl (~chmearl@user/chmearl)
[04:04:06] *** Quits: Jong (~Jong@184-99-74-148.boid.qwest.net) (Ping timeout: 256 seconds)
[04:07:05] *** Joins: beencubed (~beencubed@209.131.238.248)
[04:21:34] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:21:57] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 240 seconds)
[04:26:18] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[04:26:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e)
[04:26:46] *** Quits: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl) (Ping timeout: 256 seconds)
[04:26:59] *** Joins: Laskolnyk (~wasyl@89-76-136-17.dynamic.chello.pl)
[04:30:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Read error: Connection reset by peer)
[04:32:03] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[04:35:56] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[04:36:15] *** Joins: gpol2 (~gpol@135-23-207-205.cpe.pppoe.ca)
[04:39:04] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[04:44:03] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[04:47:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:49:49] *** Quits: gpol2 (~gpol@135-23-207-205.cpe.pppoe.ca) (Read error: Connection reset by peer)
[04:53:57] *** Joins: jklfds (~jklfds@user/jklfds)
[04:55:08] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:58:08] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: Textual IRC Client: www.textualapp.com)
[04:58:12] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 240 seconds)
[05:00:33] *** Joins: thiras (~thiras@user/thiras)
[05:00:58] *** Joins: wolfshappen (~waff@irc.furworks.de)
[05:06:46] *** Joins: gpol2 (~gpol@135-23-207-205.cpe.pppoe.ca)
[05:08:28] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[05:09:09] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[05:10:30] *** Joins: vysn (~vysn@user/vysn)
[05:10:52] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[05:10:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[05:16:38] *** Quits: jaysicks (~jaysicks@178-164-134-138.pool.digikabel.hu) (Ping timeout: 256 seconds)
[05:19:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f97e:25ad:9b8c:d34e) (Quit: Leaving)
[05:20:36] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[05:22:32] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[05:22:58] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:29:17] *** Joins: jklfds (~jklfds@user/jklfds)
[05:33:44] *** Joins: geli (~gelignite@55d44ff4.access.ecotel.net)
[05:34:11] <larryv> !forls
[05:34:12] <greybot> Don't use "for i in `ls *.mp3`": http://mywiki.wooledge.org/BashPitfalls#for_i_in_.60ls_.2A.mp3.60
[05:34:13] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 256 seconds)
[05:34:51] <larryv> !forget forls
[05:34:51] <greybot> OK, larryv
[05:34:57] <larryv> !learn forls #redirect pf1
[05:34:57] <greybot> OK, larryv
[05:35:00] <larryv> !forls
[05:35:14] <larryv> hm. disappointing
[05:35:25] <larryv> !forget forls
[05:35:25] <greybot> OK, larryv
[05:35:40] *** Joins: mccoy__ (~mccoy@p5790410e.dip0.t-ipconnect.de)
[05:35:41] <larryv> !learn forls #REDIRECT pf1
[05:35:41] <greybot> OK, larryv
[05:35:43] <larryv> !forls
[05:35:49] <larryv> ah, well.
[05:35:52] <larryv> !forget forls
[05:35:52] <greybot> OK, larryv
[05:35:56] <larryv> !learn forls https://mywiki.wooledge.org/BashPitfalls#pf1 -- Don't do this! -- for f in $(ls *.mp3)
[05:35:56] <greybot> OK, larryv
[05:36:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:36:42] *** Quits: magla (~gelignite@55d44f73.access.ecotel.net) (Ping timeout: 250 seconds)
[05:38:10] *** Quits: mccoy_ (~mccoy@pd9e3fecc.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:39:55] <chiselfuse> twkm: i was asking if there's a way to grep all manpages for a match, which i thought apropos already did
[05:42:42] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[05:43:47] *** Joins: akoana (~ah@user/akoana)
[05:44:08] *** Joins: wolfshappen (~waff@irc.furworks.de)
[05:45:21] *** Joins: jensen (~jensen@65.78.100.184)
[05:45:47] <pj> chiselfuse: zgrep FTW: zgrep pattern /usr/share/man/man*/*
[05:46:16] *** Joins: masoudd (~masoudd@user/masoudd)
[05:48:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[05:53:05] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[05:56:40] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:57:43] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[05:58:50] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[06:01:50] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:03:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:04:13] *** Joins: seninha (~chatzilla@user/seninha)
[06:06:22] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:06:34] *** Quits: geli (~gelignite@55d44ff4.access.ecotel.net) (Quit: Stay safe!)
[06:09:29] *** Joins: darkbit (~db@136.158.8.67)
[06:18:55] *** Joins: Inline__ (~Inline@p200300cd473dda00d9049d80a70df8bf.dip0.t-ipconnect.de)
[06:19:05] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[06:19:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:20:09] <jensen> i have a list of data produced from yt-dlp like this: https://0x0.st/oP4Y.txt . I want to make all the columns fixed length for easy readibility, even if it means truncating long strings. The data produced supports Python string formatting, e.g. `%(title).15s` but this only configures minimum width. how can i make the text file nicely formatted?
[06:20:33] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8)
[06:20:53] <wiscii> \t
[06:21:49] *** Quits: Inline (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:23:22] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:25:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:25:13] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8) (Ping timeout: 256 seconds)
[06:27:30] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 272 seconds)
[06:28:01] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[06:28:27] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[06:28:56] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[06:29:53] <jensen> no
[06:32:10] <larryv> something like this would probably work. awk -F ' *\\| *' '{ printf "%.20s | %.20s | %.20s | %.20s | %.20s | %.20s | %.20s\n", $1, $2, $3, $4, $5, $6, $7 }' input.txt
[06:32:17] <tirnanog> if you have util-linux: sed -e $'s/ | /\t/g' oP4Y.txt | column -s $'\t' -o ' | ' -t
[06:32:33] <tirnanog> oh, never mind. misread the question.
[06:33:42] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:31] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:34:47] *** Joins: noarb (~noarb@user/noarb)
[06:34:54] *** Joins: jiploading (~jiploadin@user/vjipac)
[06:36:32] *** Quits: Jong (~Jong@2620:10d:c090:400::5:9b63) (Quit: Textual IRC Client: www.textualapp.com)
[06:37:01] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:37:13] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:38:52] *** Quits: noarb (~noarb@user/noarb) (Remote host closed the connection)
[06:39:12] *** Joins: noarb (~noarb@user/noarb)
[06:41:19] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[06:44:37] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 240 seconds)
[06:45:08] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:46:15] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:46:43] *** Joins: stanlib (~archblade@user/stanlib)
[06:46:44] *** Joins: crashrep (~crashrep@user/crashrep)
[06:47:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[06:48:26] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[06:49:26] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[06:50:08] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:51:16] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[06:51:32] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[06:51:49] *** Parts: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Leaving)
[06:52:02] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[06:52:36] *** Quits: N4buc0 (~N4buc0@177.132.111.247) (Ping timeout: 240 seconds)
[06:52:56] <jensen> larryv: thanks, i used %-20s to add padding for shorter strings. i have some foreign characters that take up exactly two character's worth of space but they are not handled correctly in both your case and with padding where even if the string containing the character is much smaller than the fixed width, its column is wider than other lines of the same column. i assume there's no easy way to handle
[06:52:58] <jensen> it so it's not too bad
[06:56:12] *** Joins: labrador (~labrador@user/labrador)
[06:56:23] <larryv> yes, i believe the widths are in bytes.
[06:58:04] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 256 seconds)
[07:00:05] *** Joins: stanlib (~archblade@user/stanlib)
[07:01:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:04:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:07:17] *** Quits: sinaowolabi (~SinaOwola@169.159.107.1) (Ping timeout: 240 seconds)
[07:11:10] *** Quits: stanlib (~archblade@user/stanlib) (Ping timeout: 250 seconds)
[07:14:20] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[07:18:10] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 272 seconds)
[07:22:35] *** Joins: semeion (~semeion@user/semeion)
[07:22:45] *** Quits: zzbot (~zbot@68.23.85.99) (Quit: Leaving)
[07:23:29] *** Joins: zzbot (~zbot@68.23.85.99)
[07:23:48] *** Quits: jos1 (~jos3@host-091-097-190-010.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[07:24:32] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[07:27:04] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:29:17] *** Joins: zzbot (~zbot@68.23.85.99)
[07:29:24] *** Joins: botz (~zbot@68.23.85.99)
[07:30:12] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[07:30:42] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:47] <jensen> column -t -s'|' works great and handles those chars as well
[07:31:06] *** Quits: zzbot (~zbot@68.23.85.99) (Client Quit)
[07:33:15] *** Joins: ChmEarl (~chmearl@user/chmearl)
[07:33:16] *** Quits: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[07:33:55] *** Parts: botz (~zbot@68.23.85.99) ()
[07:34:00] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 272 seconds)
[07:36:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[07:36:48] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[07:37:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:37:35] *** Joins: jos1 (~jos3@dyndsl-178-142-071-186.ewe-ip-backbone.de)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:25] <jensen> a while loop appends (>>) command's output to a file on disk and it loops potentially many thousands of times. I assume this means constantly writing to disk. Its important is not important (it can be reproduced) that I need to save to disk immediately. Would it be better to concatenate it to a massive string var and then write to disk at the end? Perhaps append to a file in tmpfs and move that file
[07:40:26] <jensen> to disk at the end? Curious caveats with these approaches. It's actually written to an SD card in the end and over the network so performance may be a consideration
[07:42:22] <alesan> "Its important is not important (it can be reproduced) that I need to save to disk immediately" can you explain again?
[07:43:18] *** Joins: semeion (~semeion@user/semeion)
[07:43:55] *** Joins: rcernin (~rcernin@101.189.129.123)
[07:44:12] *** Quits: alesan (~root@c-73-158-143-8.hsd1.ca.comcast.net) (Quit: Leaving)
[07:45:28] <jensen> whoops. i mean the output of the data is easily reproducible so it's not important i need to save to disk immediately or even in fragments. it can be accumulate all output of the full loop and then written just once to disk
[07:46:46] *** Joins: johnjaye (~pi@173.209.64.74)
[07:46:56] <johnjaye> what's a convenient way to change PATH based on the current directory?
[07:47:00] <larryv> you could certainly build up a single enormous variable and output it in one command at some point. doesn't sound "better" to me in any sense, but whatever.
[07:47:02] <johnjaye> or maybe do something similar to that python venv thing
[07:47:12] <johnjaye> where like you run a command and the prompt changes and path changes and you're in a certain dir
[07:47:20] <tirnanog> jensen: do that then? redirect the loop.
[07:48:25] <larryv> johnjaye: why?
[07:48:36] <jensen> what is size of string str limited by
[07:48:41] <jensen> string var*
[07:48:44] *** Joins: jklfds (~jklfds@user/jklfds)
[07:48:45] <johnjaye> well. A) why does python venv do it, and
[07:48:46] <jensen> just memory
[07:49:09] <johnjaye> B) I'm doing a weird thing where I'm running a program with a new set of defaults in a certain folder
[07:49:22] <johnjaye> basically i need to make sure when i run the program from that directory that HOME is that dir
[07:49:46] <johnjaye> e.g. ~/var/blah and I'm in blah and I need to run HOME=/home/me/var/blah <command> every time
[07:50:37] <johnjaye> so to be exact I need HOME to change when i'm in that dir
[07:50:44] <larryv> what does that have to do with PAHT
[07:50:45] <larryv> PATH
[07:51:13] <larryv> lol you want to persistently change HOME when you're in a directory that is not actually your home directory?
[07:51:17] <johnjaye> yes
[07:51:45] <johnjaye> i guess i could just write a script to do it. but wanted to know if there was a more bash-like way
[07:53:12] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 250 seconds)
[07:53:32] *** Joins: downunder (~downunder@110.151.111.219)
[07:57:54] <larryv> jensen: you can do while ... do ... done >>file to avoid opening and closing the file repeatedly. i don't really understand what problem you're trying to solve/avoid by collecting your result in-memory first
[07:58:44] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[07:59:54] <jensen> actually i'm just curious if e.g. a sleep 1 while loop appending a command's output to disk means a file is opened, written to, and closed (I assume that's the process?) once each loop and if that's a notable impact on disk performance, e.g. is that ever a concern?
[08:01:32] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[08:01:37] <larryv> if your loop looks like ''while foo; do something >>file; done'' then yes the file is opened and closed repeatedly. if you write it the way i just said, it is not
[08:02:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:02:47] <larryv> ("the way i just said" is referring to my previous message)
[08:03:33] <jensen> gotcha
[08:18:10] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:e8d7:a122:602d:46e9)
[08:19:37] *** ponies_ is now known as ponies
[08:24:43] <jensen> is this a decent way to benchmark performance of commands by passing the command as an argument, within reason? https://0x0.st/oPyH.txt
[08:25:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:25:18] <Friithian> I would just use `time`
[08:26:15] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 240 seconds)
[08:26:56] <wiscii> wtf is that ?
[08:28:40] <Friithian> what time is? it's a command
[08:28:53] <Friithian> well, shell ekyword?
[08:28:57] <Friithian> # type time
[08:28:59] <shbot> Friithian: time is a shell keyword
[08:29:06] <wiscii> not that .. i'm not blind
[08:29:26] <Friithian> then what is the that you are referring to
[08:29:37] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[08:30:01] <wiscii> https://0x0.st/oPyH.txt <- that
[08:30:28] <Friithian> it is, I assume an attempt to time how long it takes to execute a command
[08:31:25] <wiscii> so , we agree that it is weird ?
[08:31:34] <Friithian> eh
[08:31:46] <wiscii> exactly
[08:31:52] <Friithian> no, eh to you saying it is weird
[08:32:19] <larryv> i would probably just use time as well.
[08:33:10] <wiscii> i would iterate more
[08:34:12] *** Joins: XRODRiGO (xrodrigo@softbank126130110109.bbtec.net)
[08:35:30] *** Quits: BrowseMan (~BrowseMan@78.130.185.116) (Ping timeout: 260 seconds)
[08:39:57] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:44:27] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[08:44:59] *** Joins: djph_ (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[08:45:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:e8d7:a122:602d:46e9) (Ping timeout: 240 seconds)
[08:46:50] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Ping timeout: 272 seconds)
[08:47:14] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:e8d7:a122:602d:46e9)
[08:47:45] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:49:58] *** Quits: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com) (Quit: (Read error: Connection reset by beer, You Phuq With Me, You Phuq With The B0rg.0rg))
[08:51:08] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[08:53:14] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:e8d7:a122:602d:46e9) (Ping timeout: 260 seconds)
[08:54:23] *** Joins: GiorgiGzirishvil (~drnmatrix@2001:470:69fc:105::1:d1e5)
[08:54:41] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:55:53] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8)
[08:59:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[09:00:02] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8) (Ping timeout: 240 seconds)
[09:00:55] *** Joins: n8chan (~nate@98.45.195.72)
[09:01:36] *** Quits: jiploading (~jiploadin@user/vjipac) (Ping timeout: 245 seconds)
[09:05:00] *** Quits: n8chan (~nate@98.45.195.72) (Ping timeout: 240 seconds)
[09:07:18] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[09:07:33] *** Quits: metal_egg (~metalegg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[09:08:00] *** Joins: epony (epony@user/epony)
[09:08:16] *** Joins: jiploading (~jiploadin@user/vjipac)
[09:17:28] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:20:18] *** Quits: jiploading (~jiploadin@user/vjipac) (Ping timeout: 256 seconds)
[09:20:59] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:21:40] *** Quits: epony (epony@user/epony) (Remote host closed the connection)
[09:21:55] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[09:22:17] *** Joins: jiploading (~jiploadin@103.230.107.48)
[09:24:18] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[09:25:13] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:26:38] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[09:28:43] *** Quits: Xanthaos (~ke4nhw@user/ke4nhw) (Remote host closed the connection)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:09] *** Joins: timj (~timj@user/timj)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:25] *** Joins: mizzunet (~mizzunetm@2001:470:69fc:105::1:5d39)
[09:31:44] <mizzunet> Hi there
[09:32:47] *** Parts: mizzunet (~mizzunetm@2001:470:69fc:105::1:5d39) ()
[09:33:25] *** Quits: DaNeenjah (~jake@adsl-74-230-8-132.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[09:35:54] <larryv> hello
[09:36:04] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:39:08] <emanuele6> too late
[09:39:19] <emanuele6> but hello larryv
[09:39:37] <larryv> oh oops lol
[09:39:56] <larryv> this is what i get for hiding part messages
[09:40:00] <larryv> hello emanuele6
[09:44:10] *** Joins: momonster (~mo@ip1f105454.dynamic.kabel-deutschland.de)
[09:45:57] *** Joins: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr)
[09:48:15] *** Joins: oarion7 (~anonymous@user/oarion7)
[09:50:12] *** Quits: momonster (~mo@ip1f105454.dynamic.kabel-deutschland.de) (Quit: Konversation terminated!)
[09:51:41] *** Joins: epony (epony@user/epony)
[09:51:50] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[09:53:20] *** Quits: sinaowolabi (~SinaOwola@169.159.107.1) (Ping timeout: 272 seconds)
[09:55:14] *** Joins: zebrag (~chris@user/zebrag)
[10:07:15] *** Joins: jklfds (~jklfds@user/jklfds)
[10:08:06] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:08:31] *** Joins: fef (~thedawn@user/thedawn)
[10:09:01] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:09:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:10:44] *** Joins: zebrag (~chris@user/zebrag)
[10:11:44] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[10:12:25] *** Joins: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781)
[10:14:17] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 240 seconds)
[10:17:41] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:18:40] *** Quits: unixman_home (~unixman2@229-194-137-216.mtaonline.net) (Ping timeout: 256 seconds)
[10:20:09] *** Quits: rgrinberg (~textual@2806:101e:7:134:b0ce:ab36:db17:1781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:20:44] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:22:53] *** Joins: labrador (~labrador@user/labrador)
[10:22:59] *** Quits: wiscii (~tct@user/wiscii) (Quit: fuck  you all)
[10:23:03] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[10:23:24] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:23:30] *** Joins: rgrinberg (~textual@187.223.170.172)
[10:23:59] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:24:26] *** Quits: labrador (~labrador@user/labrador) (Client Quit)
[10:25:45] *** Joins: yustin (~yustin@user/yustin)
[10:26:14] *** Joins: mewt (~mewt@65.78.125.80)
[10:26:14] *** Quits: mewt (~mewt@65.78.125.80) (Quit: leaving)
[10:26:36] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[10:26:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[10:26:57] *** Joins: labrador (~labrador@user/labrador)
[10:29:55] *** Joins: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi)
[10:30:03] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:30:25] *** Quits: A|an (~Alan@173.216.85.166) (Quit: A|an)
[10:32:31] *** Joins: seninha (~chatzilla@user/seninha)
[10:33:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[10:36:30] *** Joins: mewt (~mewt@65.78.125.80)
[10:37:24] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[10:38:12] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[10:38:22] <mewt> Hi, the following script seems to hang in the while loop and I'm not sure why: https://bpa.st/QXFA
[10:38:32] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[10:38:44] <mewt> It definitely gets *to* the while loop, then just doesn't return or give output anymore
[10:39:12] <mewt> echo text is wrong atm, don't care
[10:39:58] <xmb> while [[ 0 -eq $( grep cmd is wrong i suppose
[10:40:09] *** Joins: lavaball (felix@31.204.155.215)
[10:40:26] <xmb> try until grep -q (-c i dunno) ; do echo ; sleep ; done
[10:40:39] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[10:41:35] *** Quits: jiploading (~jiploadin@103.230.107.48) (Remote host closed the connection)
[10:41:36] <xmb> i read up on -c ur plan should work but
[10:41:50] <xmb> its inefficient and so not recommendable, you need a grep -q and check its exit status
[10:42:10] <mewt> that's definitely better, thanks. let's see...
[10:42:23] <xmb> https://bpa.st/BRCQ
[10:43:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[10:43:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:44:45] <mewt> Yeah nope, that's not why it is hanging
[10:44:58] <mewt> But that's a much better way to check, so thank you for that
[10:45:13] <xmb> then maybe the sudo dhcpd is hanging
[10:45:17] <xmb> try bash -x the script
[10:46:35] <mewt> Oh interesting...
[10:46:56] *** Joins: BrowseMan (~BrowseMan@78.130.185.116)
[10:47:34] <mewt> It's the grep call after that hangs. Sorry I didn't try this already...
[10:49:12] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:49:20] <xmb> np yo welcome
[10:51:10] <pj> hahaha, you're missing the input file on that grep so grep hangs waiting for input from stdin.
[10:51:59] *** Joins: bluedust (~bluedust@103.161.144.63)
[10:52:00] *** Joins: jklfds (~jklfds@user/jklfds)
[10:52:54] <pj> but yeah: while ! grep "$ZED_MAC" "$LEASE_FILE"; do ...; done
[10:53:01] <pj> also...
[10:53:08] <pj> !caps > mewt
[10:53:08] <greybot> mewt: By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[10:53:27] <mewt> Oh yep, that was amazingly stupid
[10:53:33] <mewt> I found it just as I looked back here
[10:53:49] <mewt> Thanks for the tip on caps too, I'll swap all that
[10:54:37] <pj> also you're not looking for a particular pattern, so I would recommend grep -F
[10:55:38] <pj> DHCPD_CONF="./dhcpd.conf" assumes that the script is being run from a particular location.  Recommend using an absolute path there instead of a relative one.
[10:57:33] <mewt> hrm that one may require something else to do right -- my plan is to distribute the config with this thing, for my use case
[10:57:37] <pj> and lastly, your usage of echo isn't particularily bad, but echo can have issues, I recommend using printf instead as a rule of thumb.
[10:57:49] <mewt> Alright
[10:58:16] <pj> well, if it's meant to be a user config, then I would suggest "$HOME/.dhcpd.conf"
[10:58:20] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:58:44] <pj> if it's meant to be a system-wide config then find an appropriate absolute path to store it for the system.
[11:00:00] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:00:22] *** Joins: unop (~unop@195.91.20.32)
[11:01:00] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 240 seconds)
[11:02:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:03:29] *** Quits: oarion7 (~anonymous@user/oarion7) (Quit: Running IRC on a charmed medieval abacus.)
[11:05:09] <mewt> Yeah, I'm not...sure either is appropriate here as that config is supposed to apply only to invocation of dhcpd from within that script, but $HOME could work
[11:05:38] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:05:38] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:05:38] <xmb> i had similiar, with wpa_supplicant
[11:05:51] <xmb> but i managed without file with <( printf <file_content> )
[11:06:07] <xmb> so if ur dhcpd file is short or so u can script it in
[11:06:20] <mewt> that is appealing actually, and something i should have thought of. it's only about 4 lines, could fit easily
[11:06:28] <xmb> dhcpd --file <( printf %s "$file_content" )
[11:07:14] <xmb> or, dhcpd --file /dev/fd3 3<<<"$content" or such
[11:07:29] <xmb> even { dhcpd --file /dev/fd/3 ; } 3<<<"$content"
[11:07:32] <xmb> dunno just showing
[11:11:48] *** Joins: labrador (~labrador@user/labrador)
[11:13:17] <mewt> Also, long as I'm restricting myself to bash only, C-style for loops are a fine way to do a set number of iterations passed in as an argument, right?
[11:13:39] <xmb> yes
[11:13:44] <xmb> im not so friend with them, but they work
[11:13:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:14:37] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 240 seconds)
[11:16:54] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:20:14] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[11:23:45] *** Joins: timm (~timm@user/timm)
[11:27:28] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:28:42] *** Joins: unop (~unop@195.91.20.32)
[11:29:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:33:06] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:33:48] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:9913:1b20:2bb0:f11b) (Ping timeout: 240 seconds)
[11:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[11:34:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:34:20] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:35:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:37:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[11:39:45] *** Joins: duuude (~user@user/duuude)
[11:40:41] *** Quits: bluedust (~bluedust@103.161.144.63) (Remote host closed the connection)
[11:44:14] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[11:45:48] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 240 seconds)
[11:46:03] *** Quits: tkonto (~tkonto@188.4.208.136.dsl.dyn.forthnet.gr) (Quit: WeeChat 3.4)
[11:48:14] *** Joins: raisen (~raisen@cpe-108-185-219-72.socal.res.rr.com)
[11:49:00] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[11:49:37] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:50:01] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:51:48] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[11:52:34] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[11:53:32] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[11:55:47] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[11:55:58] *** Joins: l4s8g_ (~l4s8g@2a02:908:1a72:c7c0::cb3f)
[11:56:40] *** Joins: Brion_ (~Brion@gateway/tor-sasl/brion)
[11:57:01] *** Quits: ekathva (~ekathva@n14jozpbxtbgza7g9-1.v6.elisa-mobile.fi) (Ping timeout: 245 seconds)
[11:58:15] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 240 seconds)
[11:58:16] *** Brion_ is now known as Brion
[11:59:17] *** Joins: dermoth (~dermoth@user/dermoth)
[12:01:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[12:02:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[12:02:54] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[12:03:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:04:36] *** Joins: docmax_ (~docmax@dynamic-077-001-237-095.77.1.pool.telefonica.de)
[12:07:21] *** Quits: docmax (~docmax@dynamic-077-000-132-132.77.0.pool.telefonica.de) (Ping timeout: 252 seconds)
[12:07:39] *** Joins: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi)
[12:07:41] *** Quits: ekathva (~ekathva@85-76-69-134-nat.elisa-mobile.fi) (Remote host closed the connection)
[12:07:48] *** Quits: timm (~timm@user/timm) (Ping timeout: 240 seconds)
[12:08:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:09:30] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[12:10:41] *** Joins: epony (epony@user/epony)
[12:11:48] *** Joins: rendar (~rendar@user/rendar)
[12:11:49] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[12:12:56] *** Quits: rgrinberg (~textual@187.223.170.172) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:13:08] *** Quits: [RMS] (~rs@genoce.org) (Ping timeout: 256 seconds)
[12:14:36] *** Joins: timm (~timm@user/timm)
[12:14:45] *** Quits: raisen (~raisen@cpe-108-185-219-72.socal.res.rr.com) (Quit: Leaving)
[12:16:08] *** Quits: timm (~timm@user/timm) (Client Quit)
[12:24:57] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[12:26:33] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:30:09] *** Quits: kyle[m] (~kylematri@2001:470:69fc:105::1:73e8) (Quit: You have been kicked for being idle)
[12:30:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8)
[12:36:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:36:42] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[12:42:36] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[12:49:16] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[12:49:24] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[12:52:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:56:36] *** Quits: Starfoxxes (~Starfoxxe@ip-037-201-006-167.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:57:55] *** Joins: labrador (~labrador@user/labrador)
[12:59:51] *** Quits: sinaowolabi (~SinaOwola@169.159.107.1) (Ping timeout: 256 seconds)
[13:01:01] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:04:21] *** Joins: fling (~fling@user/fling)
[13:04:24] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[13:07:21] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[13:10:41] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Read error: Connection reset by peer)
[13:10:59] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[13:11:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[13:14:20] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[13:14:26] *** Joins: jklfds (~jklfds@user/jklfds)
[13:15:29] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[13:16:33] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:17:04] *** Joins: xx (~xx@user/xx)
[13:18:53] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 256 seconds)
[13:19:26] *** Joins: labrador (~labrador@user/labrador)
[13:22:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:28:57] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8) (Remote host closed the connection)
[13:29:09] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:410d:72db:6e59:76f8)
[13:30:11] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:b0f4:9e47:fd83:3c5b)
[13:30:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:32:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:32:57] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[13:33:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:34:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:35:40] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[13:36:38] *** Quits: l4s8g_ (~l4s8g@2a02:908:1a72:c7c0::cb3f) (Quit: l4s8g_)
[13:37:35] *** Joins: _Vi (~vi0oss@2a0d:7c40:3000:1326::3)
[13:38:59] *** Joins: jaysicks (~jaysicks@178-164-166-32.pool.digikabel.hu)
[13:39:16] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[13:42:07] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 256 seconds)
[13:44:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 272 seconds)
[13:46:16] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Ping timeout: 240 seconds)
[13:46:37] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[13:46:53] *** Joins: sinaowolabi (~SinaOwola@169.159.107.1)
[13:47:06] *** Quits: sinaowolabi (~SinaOwola@169.159.107.1) (Remote host closed the connection)
[13:47:19] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[13:47:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:51:23] *** Joins: millido (~millido@84.210.150.128)
[13:55:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:59:08] *** Joins: random_chimp[m] (~randomchi@2001:470:69fc:105::1:d31d)
[14:00:46] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[14:03:16] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:10:02] *** Joins: somlis (~somlis@user/somlis)
[14:11:31] *** Quits: qub411 (~user@118.209.248.55) (Quit: WeeChat 3.0)
[14:15:03] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[14:23:28] *** Quits: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:24:03] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[14:27:06] *** Joins: thiras (~thiras@user/thiras)
[14:27:41] *** Joins: ano (~ano@user/ano)
[14:28:03] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[14:28:51] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[14:29:25] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[14:32:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[14:36:52] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:37:20] *** Joins: roadie (~user@2a02:8108:5a40:1d87:89d1:133a:f798:4627)
[14:41:02] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Remote host closed the connection)
[14:42:40] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:44:51] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[14:44:52] *** Joins: grettke_ (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[14:45:34] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Ping timeout: 256 seconds)
[14:48:12] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 240 seconds)
[14:48:35] *** Joins: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81)
[14:50:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:54:18] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[14:56:14] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) ()
[14:59:16] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[14:59:25] *** Joins: jklfds (~jklfds@user/jklfds)
[14:59:31] *** Joins: unop (~unop@195.91.20.32)
[15:00:37] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:01:36] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:03:22] *** Joins: magla (~gelignite@55d44ff4.access.ecotel.net)
[15:16:54] *** djph_ is now known as djph
[15:21:42] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 250 seconds)
[15:25:06] *** Joins: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net)
[15:29:00] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[15:30:20] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:30:37] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:33:17] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:b0f4:9e47:fd83:3c5b) (Ping timeout: 240 seconds)
[15:33:30] *** Joins: vishal (~vishal@fedora/vishal)
[15:37:26] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[15:38:34] *** Joins: unop (~unop@195.91.20.32)
[15:41:51] *** Joins: opv (~opv@scorp.opviel.de)
[15:44:50] *** Quits: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81) (Ping timeout: 260 seconds)
[15:47:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[15:49:24] <Tach> Shall I loop trough a file per line or just grep per item where I want to check on
[15:50:31] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:51:15] *** Joins: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81)
[15:51:43] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[15:53:16] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:59:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[15:59:50] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:01:08] *** Joins: Adoi (~Adoi@user/adoi)
[16:01:13] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d)
[16:02:45] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[16:04:02] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:08:16] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 272 seconds)
[16:09:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl)
[16:10:26] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:75ed:2bc4:3f74:738b)
[16:11:19] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[16:16:00] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[16:18:27] *** Joins: [R] (~rs@genoce.org)
[16:19:14] *** Joins: sobkas (~sobkas@95.175.17.217)
[16:20:56] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 240 seconds)
[16:21:00] *** Joins: kill (~killown@user/killown)
[16:21:49] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[16:27:15] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[16:30:34] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[16:33:24] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[16:35:20] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:36:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:37:14] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[16:38:23] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:38:29] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[16:40:10] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:40:11] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[16:42:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:39] *** Joins: labrador (~labrador@user/labrador)
[16:48:26] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[16:49:26] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[16:51:56] *** Quits: jos1 (~jos3@dyndsl-178-142-071-186.ewe-ip-backbone.de) (Remote host closed the connection)
[16:55:22] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[16:56:16] *** Joins: jos1 (~jos3@dyndsl-178-142-071-186.ewe-ip-backbone.de)
[16:58:37] *** Joins: dreamon (~dreamon@pd9503c39.dip0.t-ipconnect.de)
[16:59:05] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[16:59:19] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[16:59:19] *** Joins: iliv (~iliv@user/iliv)
[17:09:00] *** Quits: drd (~drd@2001:b07:a70:9f1f:7c59:9868:ca2f:aa81) (Ping timeout: 240 seconds)
[17:14:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:15:57] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[17:19:21] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[17:19:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:19:55] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[17:20:15] *** Joins: jklfds (~jklfds@user/jklfds)
[17:23:36] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:26:35] <xmb> Tach, either is cool
[17:26:43] <xmb> a grep is prolly better and easier
[17:26:59] <xmb> while read -r r ; do .. ; done < <( grep foo file )
[17:27:22] *** Joins: han-solo (~han-solo@user/han-solo)
[17:29:54] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:30:31] <twkm> chiselfuse: had you read what it does you shouldn't have that opinion.
[17:30:40] <Tach> xmb yeah... will check it tonight, thanks!
[17:31:02] <xmb> hi tw km
[17:32:00] <twkm> howdy.
[17:32:35] <xmb> sometimes.. :)
[17:34:06] *** Parts: Bombo_ (atom@p4ff00b5d.dip0.t-ipconnect.de) ()
[17:35:06] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Remote host closed the connection)
[17:35:16] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 240 seconds)
[17:35:43] <TenochSLB> how would you go about deleting files in a dir that donot match a pattern?
[17:36:46] <twkm> extglob or find.
[17:36:47] <lopid> !extglob
[17:36:47] <greybot> "Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
[17:37:22] <TenochSLB> greybot, thanks, I was thinking about using find but it is a pain to read all that doc
[17:38:09] <xmb> # touch foo bar ; find ! -name '*o*' -delete ; ls
[17:38:12] <shbot> xmb: foo
[17:38:27] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 252 seconds)
[17:39:11] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[17:40:35] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[17:41:20] *** Quits: omnigoat (~omnigoat@user/omnigoat) (Quit: The Lounge - https://thelounge.chat)
[17:42:05] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[17:42:26] *** Quits: martinus__ (~martin@92.29.201.77.rev.sfr.net) (Ping timeout: 260 seconds)
[17:42:46] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[17:44:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:c486:dc7e:8ce4:e6c9)
[17:45:12] *** Quits: omnigoat (~omnigoat@user/omnigoat) (Client Quit)
[17:45:25] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:46:49] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[17:48:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:f999:2ecc:9c95:df5d) (Ping timeout: 260 seconds)
[17:49:48] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[17:49:48] *** Quits: jhunk (~jhunk@c-69-143-130-202.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[17:51:16] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:51:36] *** Quits: _Vi (~vi0oss@2a0d:7c40:3000:1326::3) (Ping timeout: 245 seconds)
[17:56:23] *** Joins: sinaowolabi (~SinaOwola@41.58.233.29)
[17:56:26] *** Parts: getz[m] (~getz@2001:470:69fc:105::c85e) ()
[17:57:01] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:57:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:58:55] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[18:05:04] <rubin55> Good day all, say, I have a bash array with strings in it. I would like to prefix each string with another string and print the total array, space separated; can I do that without a for-loop?
[18:06:01] <rubin55> so say foo=(a b c)
[18:06:01] <rubin55> prefix with "-x ", so output is
[18:06:01] <rubin55> -x a -x b -x c
[18:06:17] <llua> you most likely don't want to actually do that
[18:06:43] <llua> are you attempting to build a command to run?
[18:07:07] <rubin55> Yes, I am
[18:07:22] <rubin55> I have a bunch of --tag elements to set on a docker build command
[18:07:31] <rubin55> --tag elements vary in number
[18:07:48] <llua> then yeah, don't want a bunch of '-x n' strings since they aren't actual options
[18:08:29] <xmb> # arr=( a b c ) arr=( "${arr[@]/#/p}" ) arr=( "${arr[@]/%/s}" ) ; declare -p arr
[18:08:30] <shbot> xmb: declare -a arr=([0]="pas" [1]="pbs" [2]="pcs")
[18:09:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[18:09:07] <twkm> the question is whether the -x and the string should be one word or two.
[18:10:03] <llua> if -x and it's argument can touch, -xN then xmb's solution could work for you
[18:10:12] <rubin55> docker build . -t a -t b -t c
[18:10:24] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[18:10:36] <rubin55> they can't touch, they would be separate arguments for the docker command afaik
[18:10:38] <xmb> docket build . -t\ {a,b,c}
[18:10:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[18:10:56] <llua> that one wouldn't work
[18:11:14] <twkm> then you likely want a loop.
[18:11:28] *** Joins: Enissay (~Enissay@user/enissay)
[18:11:41] <rubin55> ok, other question: can you "execute" an array? as in:
[18:11:50] <twkm> iterate over foo, building bar+=(-x "${foo[ix]}").
[18:11:55] <llua> docker "${args[@]}"
[18:12:18] <rubin55> declare =a command=(ls -al)
[18:12:18] <rubin55> ${command[@]}
[18:12:37] <rubin55> twkm: clear that
[18:12:43] <llua> you could, but you generally store code in functions and data in variables
[18:13:10] <xmb> # declare -a "cmd=( $( ls --quoting-style=shell-escape -Ac ) )" ; declare -p cmd
[18:13:11] <shbot> xmb: declare -a cmd=([0]=".bashrc" [1]=".mkshrc")
[18:13:28] <rubin55> llua sure, but yes, I could do it args only like your example
[18:15:00] *** Joins: dea_ (~dea@2a01:5ec0:7806:e866:d635:2ac1:5601:78f7)
[18:15:05] <xmb> # x=( 'a b c' d ) x=( ${x[@]@Q/#/--pre } ) ; declare -p x
[18:15:07] <shbot> xmb: bash: ${x[@]@Q/#/--pre }: bad substitution
[18:15:34] <rubin55> much thanks guys
[18:16:21] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[18:20:38] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 268 seconds)
[18:22:02] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[18:22:59] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[18:23:24] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:23:43] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[18:24:01] <dea_> is there any way I can launch chrome with a different icon in taskbar/panel in linux? any desktop env
[18:25:04] <dea_> basically my question is exactly as this: https://unix.stackexchange.com/questions/494282/command-to-run-executable-with-icon
[18:25:43] <twkm> you can customize the desktop icon, but once running the program is in charge of its icons.
[18:26:32] <twkm> did the idiotstack not produce an "answer"?
[18:27:23] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 256 seconds)
[18:29:01] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[18:29:18] <dea_> twkm: I don't care about the launcher icon, I wish I can change the running program icon
[18:29:40] <dea_> which is shown on the panel
[18:29:40] <twkm> yeah, i get that.  "too bad".
[18:29:55] <twkm> the program is in charge of its icons.
[18:30:42] <twkm> no doubt there's a way involving a debugger.
[18:33:35] <dea_> I thought x11 would have something to override the shown icon and not mess with the program
[18:33:45] *** Joins: son0p (~ff@181.136.122.143)
[18:33:53] <dea_> I'm surprised no one solved this issue in linux so far
[18:33:59] <xmb> its window managers stuff
[18:34:13] <xmb> out of all, theres no one here any way
[18:34:16] *** Joins: nyex (~Thunderbi@177.84.107.26)
[18:34:31] <twkm> if you can guess the resource handle you can update it.
[18:36:41] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[18:37:03] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[18:37:51] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[18:39:16] *** Joins: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[18:39:25] *** Quits: haniaF_ (~haniaF@83.24.224.152.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[18:40:25] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:40:44] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[18:44:07] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[18:44:18] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[18:45:18] *** Quits: dea_ (~dea@2a01:5ec0:7806:e866:d635:2ac1:5601:78f7) (Ping timeout: 268 seconds)
[18:45:34] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[18:45:49] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[18:47:07] *** Joins: labrador (~labrador@user/labrador)
[18:47:32] *** Quits: ncrowl_ (~ncrowl@89-160-77-219.cust.bredband2.com) (Ping timeout: 256 seconds)
[18:47:36] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6)
[18:47:36] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d96f:789:dcb9:a5e6) (Changing host)
[18:47:36] *** Joins: skapata (~Skapata@user/skapata)
[18:47:41] *** Quits: XRODRiGO (xrodrigo@softbank126130110109.bbtec.net) (Remote host closed the connection)
[18:49:22] *** Joins: ncrowl (~ncrowl@83-233-50-39.cust.bredband2.com)
[18:49:29] *** Quits: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[18:50:37] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[18:51:52] *** Joins: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[18:52:08] *** Joins: revolve (~u0_a227@82-132-238-140.dab.02.net)
[18:54:24] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:54:26] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[18:55:08] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Client Quit)
[18:55:28] *** Quits: sinaowolabi (~SinaOwola@41.58.233.29) (Ping timeout: 256 seconds)
[18:56:33] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[18:57:01] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:57:35] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:58:18] *** Parts: opv (~opv@scorp.opviel.de) ()
[18:58:31] *** Joins: opv (~opv@scorp.opviel.de)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:02:16] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[19:02:36] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[19:02:36] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:02:38] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[19:02:38] *** Joins: ferdna (~ferdna@user/ferdna)
[19:02:41] *** Joins: igemnace (~ian@user/igemnace)
[19:02:50] *** Joins: _Vi (~vi0oss@2a0d:7c40:3000:1326::3)
[19:04:43] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:06:52] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[19:08:41] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[19:09:17] *** Joins: sinaowolabi (~SinaOwola@41.58.233.29)
[19:11:31] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[19:12:00] *** Joins: Sulky (~Sulky@37.173.159.108)
[19:12:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[19:12:58] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[19:13:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 240 seconds)
[19:13:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:16:38] *** Quits: mccoy__ (~mccoy@p5790410e.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:16:42] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[19:21:23] *** Quits: teear (~teear@cbharraste.eu) (Quit: reboot)
[19:22:35] *** Joins: teear (~teear@cbharraste.eu)
[19:24:50] *** Joins: dea_ (~dea@static-68-235-35-181.cust.tzulo.com)
[19:26:07] *** Joins: masoudd (~masoudd@user/masoudd)
[19:26:28] *** Joins: Everything (~Everythin@37.115.210.35)
[19:28:59] *** Joins: A|an (~Alan@173.216.85.166)
[19:30:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[19:31:04] *** Joins: revolve_ (~u0_a227@82-132-238-140.dab.02.net)
[19:31:04] *** Quits: revolve (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[19:33:04] <xmb> is 'case' subject to 'continue'
[19:33:38] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:44] *** Joins: haniaF (~haniaF@79.191.94.234.ipv4.supernova.orange.pl)
[19:33:51] <Earnest> no
[19:34:10] <Earnest> Just as 'if' isn't subject to continue
[19:36:05] *** Joins: jklfds (~jklfds@user/jklfds)
[19:39:56] <xmb> k thanks
[19:40:43] *** Parts: opv (~opv@scorp.opviel.de) ()
[19:41:40] <twkm> some wrap case in a until/while so they can use break/continue.  case does have new ways to operate though, such as fallthrough.
[19:41:52] <xmb> whats the right usage of ;& .. as in like i want to run on [-+~] an overall action and have additional per each a different additional statement .. should i just case $arg in [-+~]) overall &; -) .. ;; esac
[19:41:56] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[19:42:14] <geirha> !;&
[19:42:15] <greybot> ;; signifies the end of a case list. ;& makes it fall through to the next list. ;;& makes it fall through to the next list if the pattern matches.
[19:42:39] <xmb> so ;;& would be my case ? i write an shbot example
[19:43:06] <geirha> probably
[19:44:07] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:d9a1:10f6:e673:603f)
[19:44:12] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:44:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[19:45:20] <xmb> # args=( '' nonopt - opt + opt - ) ; while [[ -v args[++i] ]] && arg=${args[i]} ; do case $arg in [-+~]) [[ ! -v ${args[i+1]} ]] && exit 1 ;& -) whatever+=( "${args[i]}" ) ;; esac ; done
[19:45:22] <shbot> xmb: logout
[19:45:22] <shbot> xmb: (shell exited with 1)
[19:45:25] <xmb> cool
[19:45:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:45:50] <xmb> no idea
[19:52:12] *** Joins: Sulky_ (~Sulky@37.166.7.142)
[19:52:21] *** Quits: revolve_ (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[19:52:39] *** Quits: sinaowolabi (~SinaOwola@41.58.233.29) (Ping timeout: 252 seconds)
[19:52:57] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[19:54:17] *** Quits: Sulky (~Sulky@37.173.159.108) (Ping timeout: 240 seconds)
[19:57:02] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 240 seconds)
[19:59:02] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[20:05:09] *** Joins: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net)
[20:07:33] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:75ed:2bc4:3f74:738b) (Remote host closed the connection)
[20:07:58] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:d670:75ed:2bc4:3f74:738b)
[20:08:41] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[20:09:24] *** Joins: sinaowolabi_ (~SinaOwola@169.159.107.1)
[20:10:34] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:12:17] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[20:17:11] *** Joins: et (~et@user/et)
[20:18:12] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[20:24:27] *** Joins: N4buc0- (~N4buc0@177.132.111.247)
[20:24:52] *** Joins: revolve (~u0_a227@82-132-238-140.dab.02.net)
[20:25:43] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:d670:75ed:2bc4:3f74:738b) (Remote host closed the connection)
[20:29:31] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.4)
[20:35:29] *** Quits: TMan459 (~TMan459@068-113-234-055.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[20:35:51] <xmb> i dont get it ,  http://ix.io/3Rw1  , i parse the args, if found an option arg w/o arguments it should at least print its msg but it doesnt ..
[20:35:51] <checkbot> xmb: I think the problem is on line 8. Use braces when expanding arrays, e.g. ${array[idx]} (or ${var}[.. to quiet). See 16 issues on https://shellcheck.net/?id=cb86351
[20:37:27] <xmb> those are, line 7 and 8 in question
[20:38:51] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[20:39:59] *** Quits: nyex (~Thunderbi@177.84.107.26) (Quit: nyex)
[20:41:52] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Ping timeout: 272 seconds)
[20:47:58] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[20:48:32] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[20:49:24] *** Quits: maledictium (~crux@dsl-90-228.bl26.telepac.pt) (Ping timeout: 240 seconds)
[20:49:53] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[20:50:39] *** Joins: maledictium (~crux@dsl-90-228.bl26.telepac.pt)
[20:51:38] *** Joins: Betal (~Betal@user/betal)
[20:54:09] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:54:11] <iconoclasthero> what's the right way to get the output of du into this while loop?
[20:54:14] <iconoclasthero> while IFS= read -r line; do if [[ "$line" == *"total" ]]; then echo "$line"; fi; done < $(/bin/du -bcs *mp3)
[20:54:14] <iconoclasthero> bash: $(/bin/du -bcs *mp3): ambiguous redirect
[20:54:33] *** Joins: thiras (~thiras@user/thiras)
[20:55:10] <xmb> < <( cmd )
[20:56:15] <xmb> du -sbc *mp3 | awk 'END { print }'
[20:56:31] *** Quits: revolve (~u0_a227@82-132-238-140.dab.02.net) (Read error: Connection reset by peer)
[20:56:44] *** Quits: Sulky_ (~Sulky@37.166.7.142) (Ping timeout: 256 seconds)
[20:57:13] <iconoclasthero> ok, so is there a way to get it to work the way I had it?  i tried a bunch of permutations around << (cmd) and nothing worked.
[20:57:27] <xmb> no << (cmd)
[20:57:28] <xmb> as i wrote
[20:57:30] <xmb> < <( cmd )
[20:57:33] <xmb> or < <(cmd)
[20:57:37] <Earnest> !<() > iconoclasthero
[20:57:37] <greybot> iconoclasthero: Process Substitution >(command ...) or <(...) is replaced by a temporary filename. Writing or reading that file causes bytes to get piped to the command inside. Often used in combination with file redirection: cmd1 2> >(cmd2). See http://mywiki.wooledge.org/ProcessSubstitution http://mywiki.wooledge.org/BashFAQ/024
[20:57:49] <Earnest> iconoclasthero: <() and >() is a distinct thing, like $() is
[20:58:05] <iconoclasthero> i don't understand awk at all so anything i would use from there would be at the risk of !cargocoding
[20:58:08] <iconoclasthero> lol
[20:58:15] <Earnest> That's a shame
[20:58:25] <iconoclasthero> well, that's my development level at the moment.
[20:58:36] <Earnest> Good opportunity to learn
[20:58:40] <gnoo> why not tail -1 ?
[20:58:42] <iconoclasthero> it might be.
[20:58:47] <Earnest> gnoo: At least use -n
[20:58:57] <Earnest> But yes, tail would be better
[20:59:00] <iconoclasthero> well, so here's the thing... i want to learn the process substitution thing on this.
[20:59:07] <Earnest> See link
[20:59:26] <iconoclasthero> so other solutions may be better, but i want to get that learned first.
[20:59:43] *** Quits: darkbit (~db@136.158.8.67) (Read error: Connection reset by peer)
[20:59:45] <Earnest> iconoclasthero: No point in quoting "total" btw, it's already a string
[20:59:47] <xmb> as i / we wrote, no << its < <(
[21:00:16] <iconoclasthero> so what am I missing?
[21:00:17] <iconoclasthero> while IFS= read -r line; do if [[ "$line" == *"total" ]]; then echo "$line"; fi; done < < (/bin/du -bcs *mp3)
[21:00:17] <iconoclasthero> bash: syntax error near unexpected token `<'
[21:00:28] <xmb> < < ( is not < <(
[21:00:33] <xmb> i can write to the wind
[21:00:35] <iconoclasthero> got it
[21:00:46] <Earnest> iconoclasthero: Do you write $() as $ (cmd)?
[21:01:25] <iconoclasthero> got it, thanks
[21:01:53] <xmb> at most, u can try <<<"$( cmd )"
[21:02:01] <xmb> which is no better than < <( at all
[21:03:34] <iconoclasthero> ok, so let me see if i got this right
[21:03:50] <iconoclasthero> $( is a "token" as is <(
[21:03:53] *** Joins: ChmEarl (~chmearl@user/chmearl)
[21:04:10] <yitz> !<(
[21:04:10] <greybot> Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[21:04:13] <iconoclasthero> and $( means to run this as a variable or whatever and <( means that you want to grab std out for something.
[21:04:18] <yitz> !$(
[21:04:18] <greybot> Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[21:04:25] <yitz> !<
[21:04:25] <greybot> Redirections: http://mywiki.wooledge.org/Redirection
[21:04:43] <xmb> <( will appear as /dev/fd/63 for example for reading
[21:04:50] <xmb> thats why u need an additional < before it to pipe to read while loop
[21:05:01] <iconoclasthero> that's what I'm asking
[21:05:03] <yitz> All three affect STDIN/STDOUT in various ways
[21:05:15] <iconoclasthero> what xmb said
[21:05:22] <xmb> >( is for into the cmd
[21:05:28] <iconoclasthero> i coudn't figure out the why for the 2nd <
[21:05:34] <yitz> (Though there's more than just those three)
[21:05:44] <iconoclasthero> and it wasn't obvious from the faq why
[21:05:46] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[21:06:25] <iconoclasthero> so in this: ffmpeg -nostdin -hide_banner -stats -f concat -safe 0 -i <(for f in ./*.opus; do echo "file '$PWD/$f'"; done) -acodec copy "$title.opus"
[21:06:42] <iconoclasthero> the <( is saying that i'm dumping the STDOUT to the -i
[21:06:42] *** grettke_ is now known as grettke
[21:06:54] <xmb> if -i supports input_file
[21:06:56] <iconoclasthero> but i don't need a 2nd < because it isn't going INTO the command.
[21:06:58] <iconoclasthero> it does.
[21:07:01] <xmb> yes
[21:07:02] <xmb> cool
[21:07:05] <xmb> well understood
[21:07:11] *** Quits: MajorBiscuit (~MajorBisc@c-001-021-050.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:07:34] <iconoclasthero> alright, well, i'll save awk for another day and the tail -1 thing is a nice way to do it as well.
[21:07:44] <yitz> awk is the best <3
[21:08:10] <iconoclasthero> just that little bit of the WHY i needed the 2nd < made a quantum leap in understanding of bash syntax.
[21:08:23] <iconoclasthero> my* understanding
[21:09:02] <xmb> its not well documentated, i personally wouldnt recommend any much page, the greycat pages are for me not much more than another hates wrong docs
[21:09:11] *** Joins: bluedust (~bluedust@103.165.167.61)
[21:10:23] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:10:47] <iconoclasthero> things like that (and awk, regex) are hard because of the very symbolic nature of it.  until you "get it" it just doesn't make any sense.
[21:10:52] <xmb> by the way, another shortment, printf %s\\n ( or %s\\0 ) and files as args
[21:11:00] <xmb> printf %s\\n *.opus
[21:11:17] <xmb> yea you need proper friendly explaintions like good interactive chats
[21:11:24] <xmb> i learned here, from long way back
[21:11:35] <iconoclasthero> you also need to use it enough to learn it
[21:11:50] <xmb> freetime tech does it
[21:12:06] <iconoclasthero> regex is something i would like to know, but i have use for it so little that i never get the reps
[21:12:21] *** Joins: mongy (~mongy@user/mongy)
[21:12:29] <xmb> ill do a regex docs pages in my docs too, when i come up
[21:12:37] <yitz> The biggest "ah hah" moment for getting awk to click for me was understanding how it's a series of pattern-action pairs that are executed in order for each line
[21:13:09] <Dan39> thanks yitz
[21:13:31] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:13:46] <iconoclasthero> basically, what I'm trying to do is grab the file size totals from before and after i converted them, then get the % reduction.
[21:14:05] <iconoclasthero> i.e., (start-finish)/start *100
[21:14:20] <xmb> well you need persistant process then
[21:14:25] <xmb> a bash or gawk process
[21:14:32] <xmb> for the bash one u just keep the values
[21:14:40] <xmb> however, to get the size, find will be your friend
[21:14:45] <xmb> see -printf in man page
[21:14:57] <yitz> Or stat works, too
[21:15:07] <xmb> %s i think is size, and i would not touch the filenames but have em already loaded into array
[21:15:44] *** Joins: realies (~realies@user/realies)
[21:16:01] <realies> why is this bad? [ -z ${vncpwd} ] && $noauth="-SecurityTypes None"
[21:17:08] <realies> I mean, it dies with /init.sh: 27: =-SecurityTypes None: not found
[21:17:14] <iconoclasthero> so in order for this to work, it needs to sum *mp3 and *opus so I'm not sure how stat is going to do that.
[21:17:20] <iconoclasthero> i have no idea how to do an array variable.
[21:17:31] <yitz> !" > realies
[21:17:32] <greybot> realies: "Double quote" every literal that contains spaces/metacharacters and _every_ expansion: "$var", "$(command "$var")", "${array[@]}", "a & b". Use 'single quotes' for code or literal dollar signs: 'Costs $5 US', ssh host 'echo "$HOSTNAME"'. See http://mywiki.wooledge.org/Quotes , http://mywiki.wooledge.org/Arguments and http://wiki.bash-hackers.org/syntax/words .
[21:17:45] <iconoclasthero> i get what an array is, but working with them...
[21:17:50] <xmb> realies, no $var= .. var=..
[21:17:52] <yitz> Also, var=val  not  $var=val
[21:18:04] <realies> ah :D
[21:18:21] <xmb> we can go thru all iconoclasthero when u have time
[21:18:21] <yitz> I think shellcheck ought to catch that, too
[21:18:42] <iconoclasthero> i mean, i might as well take the time to learn it now
[21:19:12] <xmb> so then first, u want individual stats per files i assumed
[21:19:31] <iconoclasthero> no, i'm interested in the totals for the book.
[21:19:36] <xmb> also is there any separation between opus and mp3 or are they just on the same list
[21:19:46] <xmb> for all together only
[21:19:51] <xmb> then no need for much code
[21:19:52] <iconoclasthero> so some books are broken out by chapers/parts, others are the whole book in one file.
[21:20:08] <iconoclasthero> in this case...
[21:20:10] <xmb> aha
[21:20:23] <xmb> well its simple, save to new directory structure and have clear values
[21:20:32] <xmb> by either find or du or stat or so
[21:20:42] <iconoclasthero> https://pastebin.com/usgMiu9R
[21:20:42] <pasteban> Paste is available without ads on https://pastebin.com/raw/usgMiu9R
[21:21:09] <xmb> so
[21:21:14] <xmb> thats one book
[21:21:15] <xmb> i guess
[21:21:45] <xmb> and u wanna encode both mp3 and opus separately using same ffmpeg cmd ?
[21:21:45] <iconoclasthero> yes.  and i want to compare the starting size (the sum of mp3s in this case) with the final size (always .opus)
[21:22:03] <iconoclasthero> no, the previous action was to transcode the mp3 to opus.
[21:22:14] <xmb> aha, k sec
[21:22:22] *** Joins: seninha (~chatzilla@user/seninha)
[21:22:27] <xmb> you could without math percentage...
[21:22:45] <iconoclasthero> for file in *.@(flac|mp3|wav|m4?|ogg) ; do
[21:22:45] <iconoclasthero>  ffmpeg ...; done
[21:22:49] <xmb> { du -hs *mp3 | tail -1 ; du -hs *.opus | tail -1 ; }
[21:23:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[21:23:14] *** Joins: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au)
[21:23:29] <xmb> the { and ; } not needed, was for else
[21:23:31] <iconoclasthero> why not assign those to variables and then divide?
[21:23:39] <xmb> cause they are prefixed
[21:23:49] <xmb> thats why prolly -b or so ill try find
[21:23:56] <xmb> but i use awk cause its for this task
[21:24:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:25:51] <iconoclasthero> how would i tell bash to truncate at the tab after the size?  mp3=${mp3% ...
[21:26:08] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[21:27:02] *** Joins: Jong (~Jong@2620:10d:c090:400::5:9b63)
[21:27:30] <xmb> dunno which u mean paste here i code on the cmd
[21:27:43] <iconoclasthero> $ mp3=$(\du -bcs *mp3 |tail -1); opus=$(\du -bcs *opus|tail -1); echo "${mp3% *}" "${opus% *}"
[21:27:44] <iconoclasthero> 1040901527	total 266400493	total
[21:28:17] <iconoclasthero> on irc that shows up as spaces but in the terminal there's a tab b/w the size and "total"
[21:29:13] <xmb> try, mp3=${mp3%$'\t'*}
[21:30:21] <xmb> # p=. ; f() { LC_ALL=C find "$p" -name '*.flac' -o -name '*.mp3' -o -name '*.wav' -o -name '*.ogg' -printf %s\\0 ; } ; f2() { LC_ALL=C find "$p" -name '*.opus' ; } ; { f ; printf __end__\\0 ; f2 ; } | gawk -v n=1 -v RS=\\0 '$0 == "__end__" { ++n; next } { sav[ n ] += $0 } END { print sav[ 1 ] , sav[ 2 ], sav[1] - sav[ 2 ] / 1024 / 1024 }'
[21:30:24] <shbot> xmb:   0
[21:31:37] <xmb> # printf 22 > 1.mp3 ; printf 1 >1.opus ; p=. ; f() { LC_ALL=C find "$p" -name '*.flac' -o -name '*.mp3' -o -name '*.wav' -o -name '*.ogg' -printf %s\\0 ; } ; f2() { LC_ALL=C find "$p" -name '*.opus' ; } ; { f ; printf __end__\\0 ; f2 ; } | gawk -v n=1 -v RS=\\0 '$0 == "__end__" { ++n; next } { sav[ n ] += $0 } END { printf "%s %s %.11f\n", sav[ 1 ] , sav[ 2 ], sav[1] - sav[ 2 ] / 1024 / 1024 }'
[21:31:39] <shbot> xmb:  0 0.00000000000
[21:31:50] <xmb> hm nearly working idunno
[21:32:52] <xmb> # printf 22 > 1.mp3 ; printf 1 >1.opus ; p=. ; f() { LC_ALL=C find "$p" -name '*.flac' -o -name '*.mp3' -o -name '*.wav' -o -name '*.ogg' -printf %s\\0 ; } ; f2() { LC_ALL=C find "$p" -name '*.opus' -printf %s\\0 ; } ; { f ; printf __end__\\0 ; f2 ; } | gawk -v n=1 -v RS=\\0 '$0 == "__end__" { ++n; next } { sav[ n ] += $0 } END { printf "%s %s %.11f\n", sav[ 1 ] , sav[ 2 ], sav[1] - sav[ 2 ] / 1024 / 1024 }'
[21:32:53] <shbot> xmb:  1 -0.00000095367
[21:33:05] <xmb> u may try i dunno i wrote that thats all
[21:33:46] *** Joins: crashrep (~crashrep@user/crashrep)
[21:34:33] <xmb> try -h in du
[21:34:37] <xmb> without math
[21:34:50] <xmb> would at least visually show u instant results
[21:34:54] <xmb> rather than exact percentage
[21:36:32] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 250 seconds)
[21:38:45] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[21:39:14] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[21:42:38] *** Quits: L3Fr0g (~fr0g@89.137.20.4) (Ping timeout: 256 seconds)
[21:45:17] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:45:51] <iconoclasthero> $ mp3=$(\du -bcs *mp3 |tail -1); mp3="${mp3%$'\t'*}"; opus=$(\du -bcs *opus|tail -1); opus="${opus%$'\t'*}"; d=$((mp3-opus)); echo $(($(( $d * 100 / $mp3 )) ))% reduction; p=$(bc <<< "scale=0; (100*$d / $mp3)"); echo "$p% reduction"
[21:45:52] <iconoclasthero> 74% reduction
[21:45:52] <iconoclasthero> 74% reduction
[21:47:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:47:22] <iconoclasthero> and to cover all starting formats:  mp3=$(\du -bcs *.@(flac|mp3|wav|m4?|ogg) |tail -1);
[21:47:42] <xmb> good man
[21:48:03] <iconoclasthero> i haven't a clue what you were attempting.
[21:48:15] <xmb> as a side note, the $'\t'* can be [!0-9]*
[21:48:30] <iconoclasthero> yeah, i was going to ask about that.
[21:48:42] <iconoclasthero> i'm assuming that the [!0-9]* is regex
[21:48:50] <xmb> yea hm attempting .. :)
[21:48:54] <xmb> its a shell glob
[21:48:54] <iconoclasthero> what's the $'\t' ?
[21:48:56] <xmb> char class tho
[21:48:59] <xmb> same as regex char class
[21:49:09] <xmb> excepts the ! sign is shell glob
[21:49:14] <xmb> in regex its ^
[21:49:15] <iconoclasthero> obviously the \t is tab
[21:49:26] <xmb> then works anywya
[21:50:00] <iconoclasthero> (I'd honestly rather not depend on recognizing the tab but rather the numbers...)
[21:50:19] <xmb> yep
[21:50:41] <iconoclasthero> so what is the $ doing before the '\t' ?
[21:50:51] <xmb> # x=123.43$'\tblabla' ; printf %s\\n "${x%%[!0-9.]*}"
[21:50:54] <shbot> xmb: 123.43
[21:51:02] <xmb> that is for $' string '
[21:51:07] <xmb> bash interpreted constant string
[21:51:31] <xmb>  it doesnt interpret $var it interprets \' and other backslash codes
[21:51:32] <yitz> !$'
[21:51:32] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[21:52:00] <yitz> The $ and ' are not separate tokens. The token is $' similar to <( being one token
[21:52:55] <iconoclasthero> so echo $'\t\t\n' is going to give me two tabs and a CR?
[21:53:07] <xmb> and two crs
[21:53:12] <xmb> as echo does always, without -n
[21:53:13] <xmb> dont use echo
[21:53:16] <xmb> learn to use exact printf
[21:53:21] <iconoclasthero> yeah, i know
[21:53:34] <iconoclasthero> they get converted, but when I'm just messing around...
[21:53:39] <xmb> # printf %s $'\t\t\n' | od -x
[21:53:41] <shbot> xmb: 0000000 0909 000a
[21:53:41] <shbot> xmb: 0000003
[21:54:02] <iconoclasthero> those are the octals?
[21:54:10] <xmb> i dunno i dunno od i thought something
[21:54:14] <xmb> they are not very visible there
[21:54:29] <xmb> # printf %s $'a\t\bt\tc\nd'
[21:54:31] <shbot> xmb: a       t        c
[21:54:31] <shbot> xmb: d
[21:55:16] <iconoclasthero> wtf is \b?
[21:55:29] <iconoclasthero> backspace?
[21:56:04] *** Joins: jklfds (~jklfds@user/jklfds)
[21:56:17] <iconoclasthero> oh, and why the three <s feeding bc?
[21:56:48] <yitz> `od -c` might be easier to read
[21:57:04] <yitz> !<<<
[21:57:04] <greybot> Here strings. Similar to here documents: The word after <<< is passed to the standard input of a command, with a newline appended. Syntax: ''command <<< "some sentence"'' (Like ''echo "some sentence" | command'', but without the overhead of the subshell)
[21:57:07] *** Joins: TMan459 (~TMan459@068-113-229-180.res.spectrum.com)
[21:57:56] *** Joins: xmb_ (~xmb@178.197.205.190)
[21:58:07] <xmb_> sorry iconoclasthero my phone batteried out, and sorry for few non working cmds
[21:58:49] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:58:51] <iconoclasthero> ok, so on the <<< to bc, how would i run it without the <<<?
[21:59:00] <iconoclasthero> bc scale=0; "(100*$d / $mp3)"
[21:59:00] <iconoclasthero> File scale=0 is unavailable.
[21:59:00] <iconoclasthero> bash: (100*774501034 / 1040901527): No such file or directory
[21:59:08] *** Quits: xmb (~xmb@178.197.205.231) (Ping timeout: 272 seconds)
[21:59:12] <xmb_> u need it as input
[21:59:15] <xmb_> <<<"$var"
[21:59:27] <xmb_> u can gawk if u want
[21:59:54] <xmb_> gawk "{ print 100 * $d / $mp3 }" # cheap gawk passthru
[22:00:07] <xmb_> er
[22:00:13] <xmb_> gawk "BEGIN { print 100 * $d / $mp3 }"
[22:00:15] <xmb_> so
[22:00:20] <yitz> iconoclasthero:   echo foo | bc   works
[22:00:20] <iconoclasthero> no, that's really not getting at what I'm asking.
[22:00:40] <iconoclasthero> let me look up how bc works
[22:00:51] <xmb_> yea look for non stdin option
[22:00:57] <yitz> iconoclasthero:   printf '%s\n'  scale=0 "(100*$d / $mp3)" | bc
[22:00:59] <xmb_> man gawk is shorter than man bc i think
[22:01:07] <xmb_> or so
[22:01:11] <xmb_> +
[22:01:19] <Friithian> bah, use dc
[22:02:24] <xmb_> give cmd example maybe
[22:02:29] *** Quits: jklfds (~jklfds@user/jklfds) (Ping timeout: 256 seconds)
[22:02:30] <iconoclasthero> ok
[22:02:57] <iconoclasthero> so bc won't let me use my variables inside of "it" when i call it from $ bc
[22:03:00] <iconoclasthero> ?
[22:03:22] <iconoclasthero> so bc won't let me use my variables inside of "it" when i call them* from $ bc
[22:03:31] <xmb_> there are cases paste your code
[22:03:56] <iconoclasthero> 100 * $d
[22:03:56] <iconoclasthero> (standard_in) 4: illegal character: $
[22:03:56] <iconoclasthero> 100 * "$d"
[22:03:56] <iconoclasthero> (standard_in) 5: syntax error
[22:04:12] <xmb_> yea u need to define em
[22:04:15] <xmb_> with some luck its easy
[22:04:23] <xmb_> its either printf to bc or <<<
[22:04:35] <xmb_> simply var=$var and mp3=$mp3 inside
[22:04:35] <iconoclasthero> yeah, now i get why you have to play those games with it.
[22:04:39] <xmb_> in double not single quotes
[22:04:41] <xmb_> and have em
[22:05:05] <xmb_> a bash is just .. a bash var, no perl var, no kernel var, no bc var
[22:05:11] <xmb_> u can export vars
[22:05:15] <xmb_> but i dunno bc usage for such
[22:07:50] <xmb_> u can awk it no problemly, with print or printf
[22:07:57] <xmb_> printf %i i think makes the int of it
[22:09:20] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:09:47] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:12:40] *** Quits: roadie (~user@2a02:8108:5a40:1d87:89d1:133a:f798:4627) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[22:12:49] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:13:24] *** Joins: roadie (~user@2a02:8108:5a40:1d87:89d1:133a:f798:4627)
[22:13:41] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[22:13:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:15:24] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:15:52] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:18:18] <olspookishmagus> hot to make this output three lines?
[22:18:20] <olspookishmagus> $ while read -r fruit ; do echo "$fruit" ; done < <( echo "banana" "apple" "mango" )
[22:18:23] <olspookishmagus> banana apple mango
[22:18:34] <olspookishmagus> missing seperator? read -d? IFS?
[22:18:40] *** Inline__ is now known as Inline
[22:18:58] <olspookishmagus> ultimately I'll use this to pass arguments to find
[22:19:13] <xmb_> printf %s\\n "bla" 'blubb' $'\t\t' end
[22:19:33] <xmb_> read -d ' '
[22:19:45] <xmb_> and, another thing
[22:20:16] <xmb_> # x=( one\ one\ one two ) IFS=$'\t' ; printf %s "${x[*]}"
[22:20:18] <shbot> xmb_: one one one     two
[22:20:30] <xmb_> # x=( one\ one\ one two three ) IFS=$'\n' ; printf %s "${x[*]}"
[22:20:32] <shbot> xmb_: one one one
[22:20:32] <shbot> xmb_: two
[22:20:32] <shbot> xmb_: three
[22:21:20] <olspookishmagus> ok xmb_ thank you
[22:21:22] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:21:46] <xmb_> bless
[22:22:32] *** Joins: Atque (~Atque@user/atque)
[22:23:19] *** Joins: seninha (~chatzilla@user/seninha)
[22:23:22] <iconoclasthero> is there something to take a string of bytes and convert it to human readible or do i just need to grab both of them from du?
[22:23:26] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[22:24:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:24:15] <xmb_> yes, but its one of my scripts
[22:24:18] <xmb_> gotta digg it up
[22:24:51] <iconoclasthero> not super important, it would just be easier than running the du twice
[22:26:45] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:26:56] <xmb_> check it, http://ix.io/3Rwz
[22:26:58] <olspookishmagus> can you have find report what it is deleting? maybe a verbose switch?
[22:27:00] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:27:03] <xmb_> its also the only piece of software i know that does so
[22:27:21] <xmb_> maybe -print -delete
[22:28:01] *** Joins: skapata (~Skapata@user/skapata)
[22:28:14] *** Joins: martinus__ (~martin@92.29.201.77.rev.sfr.net)
[22:31:33] <iconoclasthero> so i should save that in ~/bin and call it with my script?
[22:32:06] <xmb_> sure
[22:33:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:33:25] *** Joins: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e)
[22:33:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:34:06] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[22:35:41] <Earnest> olspookishmagus: read splits on IFS, you gave read one variable "fruit", and so the entire line ended up in "fruit".  If you used read -r a b c then it would split the line and place each result into corresponding positional
[22:35:48] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 240 seconds)
[22:36:27] <Earnest> olspookishmagus: As for 'turning space separated into newline separated', that tends to demand more details because it's not clear why you'd need to do that
[22:36:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[22:37:10] *** Joins: lispy (~lispy@user/lispy)
[22:38:27] *** Joins: Tabmow (~tabmow@user/tabmow)
[22:38:54] *** Joins: L3Fr0g (~fr0g@89.137.20.4)
[22:41:02] <iconoclasthero> ok, i'll save it for later, for now, i just called du twice:  https://pastebin.com/cZH29YCk
[22:41:02] <pasteban> Paste is available without ads on https://pastebin.com/raw/cZH29YCk
[22:41:43] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:41:53] <xmb_> looks lol style
[22:42:13] <iconoclasthero> lol style?
[22:42:14] <iconoclasthero> https://pastebin.com/raw/BmfiQUBD
[22:42:40] <xmb_> say, not very readable =p but easy
[22:42:56] <Earnest> iconoclasthero: Instead of repeating ffmpeg with the same set of flags, you can create a function that wraps it, then pass the changing arguments to that instead
[22:43:22] <iconoclasthero> you see that most of those are commented out, right?
[22:43:31] <iconoclasthero> so the question that i'm getting at here is this:
[22:44:02] <iconoclasthero> i want to know when the script starts which i accomplish with the start time from date +%s
[22:44:10] <iconoclasthero> and when it ends...
[22:44:13] <iconoclasthero> but since i'
[22:44:26] <Earnest> Your response has put me off
[22:44:30] <iconoclasthero> i'm calling the ffmpeg commands into the background, how do i wait untill all of them are finished?
[22:44:41] <xmb_> there is $EPOCHREALTIME and there is $SECONDS
[22:44:57] <xmb_> then, with date +%s which is epochrealtime minus the dot comma numbers
[22:44:57] <geirha> you run the wait command
[22:45:01] <xmb_> then, $SECONDS is the same
[22:45:14] <xmb_> ah and wait yes didnt read last msg
[22:45:30] <geirha> and lose the fg commands. Those should only be used in interactive bash
[22:45:34] <xmb_> $SECONDS is runtime in seconds
[22:45:46] <iconoclasthero> @geirha, that's what i'm trying to do
[22:45:59] <iconoclasthero> i realized they're sloppy but they should work
[22:47:22] *** Joins: seninha (~chatzilla@user/seninha)
[22:47:37] <xmb_> do u -nostdin
[22:47:41] <iconoclasthero> so should i just put wait; in front of end="$(date +%s)", i.e., wait;end="$(date +%s)"
[22:47:54] *** Quits: sinaowolabi_ (~SinaOwola@169.159.107.1) (Ping timeout: 272 seconds)
[22:48:02] <xmb_> printf 'script runtime: %ss\n' "$SECONDS"
[22:48:03] <iconoclasthero> i know -nostdin for ffmpeg which is how i can get it to work in the bg in the first place.
[22:48:13] <xmb_> # sleep 2 ; printf 'script runtime: %ss\n' "$SECONDS"
[22:48:17] <shbot> xmb_: script runtime: 2s
[22:49:14] <iconoclasthero> so xmb_ you're saying to get rid of all the math around the duration and just use $SECONDS ?
[22:49:35] <xmb_> as all u can get is this yes
[22:49:40] <xmb_> for more accurate gawk or bc math
[22:49:48] <xmb_> i just demo 'its already there'
[22:53:30] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[22:53:35] <iconoclasthero> oh, i should mention in opus.book.4 the -le term on line 23 should be 3 so that it calles 4 ffmpeg jobs for all 4 of my threads.
[22:54:08] <xmb_> btw about numfix, numfix <<<"$num"
[22:54:27] <xmb_> non number separated input parsing
[22:55:03] <iconoclasthero> numfix is your script?
[22:55:06] <xmb_> ye
[22:55:11] <iconoclasthero> thanks
[22:55:15] <iconoclasthero> ill put that in the comments.
[22:55:17] <xmb_> np
[22:56:25] <xmb_> i may go sleep, nighty =) cheers + bless
[22:56:45] <iconoclasthero> yeah, i think the $SECONDS thing will help
[22:56:54] <iconoclasthero> but i'll still need wait in front of it i think
[22:57:03] <iconoclasthero> cool, thanks for your help xmb
[22:57:17] <xmb_> you have to, wait, or it ends the script with backgroudned still on
[22:57:29] *** Joins: tijuco (~tijuco@user/tijuco)
[22:58:56] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[22:59:17] <iconoclasthero> i think i accomplished what i wanted to do with this script today, thanks for everyone's help.  learned a lot
[23:02:23] <larryv> !forget q01
[23:02:23] <greybot> OK, larryv
[23:02:25] <larryv> !forget a01
[23:02:25] <greybot> OK, larryv
[23:03:25] *** Joins: 073AAUKVP (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[23:04:01] *** Joins: podeni (~podeni@188.27.129.34)
[23:04:08] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[23:06:04] <iconoclasthero> now if we can just figure out how to fix the damage that drill bit did to my laptop monitor...
[23:06:47] <podeni> Hi everyone. If I want to obfuscate a string (replace every character with a placeholder), can I do better than: OBFUSCATED="$(echo "${ORIGINAL}" | sed 's/./#/g')"
[23:06:49] <podeni> ?
[23:07:51] *** Joins: Xanthaos (~ke4nhw@user/ke4nhw)
[23:07:51] <larryv> # foo=abc; printf '%s\n' "${foo//?/#}"
[23:07:53] <shbot> larryv: ###
[23:08:47] <podeni> Thanks, just looking to see how things can be done in multiple ways. That works!
[23:09:20] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 256 seconds)
[23:09:51] *** Joins: jabster28 (~jabster28@81.111.217.63)
[23:09:55] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[23:10:14] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:12:47] *** Quits: N4buc0- (~N4buc0@177.132.111.247) (Remote host closed the connection)
[23:13:06] *** Quits: Tabmow (~tabmow@user/tabmow) (Max SendQ exceeded)
[23:13:28] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:13:52] *** Quits: dea_ (~dea@static-68-235-35-181.cust.tzulo.com) (Ping timeout: 256 seconds)
[23:15:34] *** Quits: Tabmow (~tabmow@user/tabmow) (Max SendQ exceeded)
[23:16:14] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:18:38] *** Quits: Tabmow (~tabmow@user/tabmow) (Max SendQ exceeded)
[23:18:53] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[23:19:00] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:20:19] *** Joins: zebrag (~chris@user/zebrag)
[23:24:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:25:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:27:11] *** Lord_of_Life_ is now known as Lord_of_Life
[23:27:47] *** Joins: Adoi (~Adoi@user/adoi)
[23:30:29] *** Quits: docmax_ (~docmax@dynamic-077-001-237-095.77.1.pool.telefonica.de) (Remote host closed the connection)
[23:31:24] *** Quits: lilo_booter (~charlie@ptr-1dvvlcnzb8gdy4pjhcs.18120a2.ip6.access.telenet.be) (Quit: WeeChat 1.9.1)
[23:32:09] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[23:32:40] *** Joins: unop (~unop@195.91.20.32)
[23:33:21] *** Joins: Sulky (~Sulky@37.166.7.142)
[23:33:24] *** Quits: lmat (~Lmat@c-73-102-193-68.hsd1.in.comcast.net) (Remote host closed the connection)
[23:34:25] *** Quits: csm3105 (~csm3105@static-8-26-230-77.ipcom.comunitel.net) (Quit: Leaving)
[23:35:29] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[23:36:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[23:37:31] *** Quits: unop (~unop@195.91.20.32) (Read error: Connection reset by peer)
[23:37:34] *** Quits: rgrinberg (~textual@2806:101e:7:134:f12f:44e5:7c55:988e) (Ping timeout: 260 seconds)
[23:37:40] *** Joins: unop_ (~unop@195.91.20.32)
[23:37:58] <sixwheeledbeast> !varcaps
[23:37:58] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[23:40:36] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:49:14] *** Joins: lavaball (felix@31.204.155.215)
[23:50:36] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 272 seconds)
