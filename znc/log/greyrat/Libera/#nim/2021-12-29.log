[00:55:49] <FromDiscord> <Shiba> ok yes it's found but now it's screaming errors
[00:55:55] <FromDiscord> <Shiba> (edit) "ok yes it's found ... but" 03added "it"
[01:04:08] <FromDiscord> <Shiba> i think i should change it's to 32 bit since it's the only supported architecteur
[01:22:44] <FromDiscord> <Shiba>  https://media.discordapp.net/attachments/371759389889003532/925506580026368000/Capture.PNG
[01:33:16] <FromDiscord> <hmmm> I just tried tcc for kicks, it's faster no doubt, but the runtime will be slower right?
[01:34:09] <FromDiscord> <Shiba> In reply to @hmmm "I just tried tcc": yes , some libaries wont work tho since it's 32 bit only , and you will need to modify the pointers in the c filles
[01:34:32] <FromDiscord> <hmmm> I thought I downloaded tcc 64
[01:34:46] <FromDiscord> <hmmm> or that's what my man fabrice said on his website
[01:35:15] <FromDiscord> <Shiba> maybe the installer is for 64 bit cpus
[01:38:05] <FromDiscord> <Shiba> In reply to @hmmm "I thought I downloaded": oh wait you use linux ?, ok you're good to go
[01:38:16] <FromDiscord> <hmmm> nu I'm on w10
[01:48:34] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:49:12] <FromDiscord> <Elegantbeef> Indeedâ†µ(@hmmm)
[01:49:27] <FromDiscord> <Elegantbeef> TCC's speed is all "let's get the fastest to binary" not "let's get the fastest binary"
[01:57:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[02:00:07] <FromDiscord> <Shiba> now i need to find those libaries that my nim package use and fix the pointers
[02:02:54] <FromDiscord> <Shiba> nevermind it's works
[02:03:55] <FromDiscord> <Yardanico> In reply to @Shiba "yes , some libaries": What? You don't need to modify any pointers
[02:04:16] <FromDiscord> <Yardanico> If your Nim compiler is 64-bit and the C compiler is 32-bit then just compile with --cpu:i386
[02:04:23] <FromDiscord> <Yardanico> If you want 32-bit binaries
[02:05:15] <FromDiscord> <Shiba> okay okayðŸ¥º
[02:05:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:06:15] <FromDiscord> <Yardanico> In reply to @Shiba "": There's an easy workaround for that too
[02:06:17] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/issues/19041#issuecomment-962548645
[02:06:52] <FromDiscord> <Shiba> i should dig deeper before i ask here
[02:08:24] *** Joins: vicfred (~vicfred@user/vicfred)
[02:09:57] <FromDiscord> <Yardanico> But again, tcc will only help with C compilation speed, Nim compilation speed will be the same
[02:14:41] <FromDiscord> <Shiba> yes the c compiling part is now faster
[02:36:26] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Read error: Connection reset by peer)
[02:37:15] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:11:35] <FromDiscord> <evoalg> In reply to @Solitude "i grepped the stdlib": did you download docs so yo can use grep on the command line? I love grep, but how do I download docs in a nice format? ... or do you use html files?
[03:16:48] <FromDiscord> <Yardanico> he probably just grepped the src
[03:17:07] <FromDiscord> <evoalg> is that downloaded by default?
[03:17:14] <FromDiscord> <Yardanico> of course?
[03:17:19] <FromDiscord> <Yardanico> nim has to compile your code somehow
[03:17:24] <FromDiscord> <evoalg> ahhh true
[03:17:26] <FromDiscord> <Yardanico> if you import the stdlib it needs to get the stdlib from somewhere
[03:17:36] <FromDiscord> <evoalg> gotcha - thank you!
[03:35:52] <FromDiscord> <evoalg> :w
[03:35:57] <FromDiscord> <evoalg> whoops
[03:37:45] <FromDiscord> <evoalg> @ElegantBeef I think this can be done all in a for loop using slicerator? ... https://play.nim-lang.org/#ix=3JRG
[03:41:10] <FromDiscord> <evoalg> (and my code is not optimized)
[03:56:24] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:47:04] <FromDiscord> <TheDarkMode> Trying to run a Pixie example, from Nimble download folder. https://media.discordapp.net/attachments/371759389889003532/925557997978132520/unknown.png
[04:48:20] <FromDiscord> <Yardanico> maybe that demo no longer works, not sure
[04:48:29] <FromDiscord> <Yardanico> also, it's better to test demos by copying the code to your own folder
[04:48:34] <FromDiscord> <Yardanico> and not running the code straight from the .nimble folder
[04:49:47] <FromDiscord> <TheDarkMode> In reply to @Yardanico "also, it's better to": same error
[04:49:59] <FromDiscord> <Yardanico> yeah I didn't say that would fix it, but it's generally what you should do anyway
[04:50:07] <FromDiscord> <Yardanico> looks just like it wasn't tested after some changes in pixie
[04:50:11] <FromDiscord> <Yardanico> or maybe it's missing an import
[04:50:23] <FromDiscord> <Yardanico> that code shows using pixie with GL and not standalone though, there are a lot of tests you can look at
[04:53:02] <FromDiscord> <TheDarkMode> I even downloaded the GIT folder for Pixie and placed it in the Nim folder, running those examples gave many errors https://media.discordapp.net/attachments/371759389889003532/925559503523565599/unknown.png
[04:54:07] <FromDiscord> <Yardanico> What errors for example?
[04:54:30] <FromDiscord> <Yardanico> It's really hard to help with just folder images, it's much better if you always provide the error message
[04:55:06] <FromDiscord> <TheDarkMode> In reply to @Yardanico "It's really hard to":  https://media.discordapp.net/attachments/371759389889003532/925560023847927848/unknown.png
[04:55:28] <FromDiscord> <TheDarkMode> I'm not sure what I'm missing -
[04:55:45] <FromDiscord> <Yardanico> as the error says it can't find the image
[04:55:52] <FromDiscord> <Yardanico> because you're supposed to execute this test outside the examples directory
[04:56:10] <FromDiscord> <Yardanico> you're supposed to execute it from the main directory of pixie (so in your case pixie-master)
[04:56:36] <FromDiscord> <Yardanico> so you need to switch to that directory first
[04:58:16] <FromDiscord> <TheDarkMode> In reply to @Yardanico "you're supposed to execute": thanks, will try
[05:00:08] <FromDiscord> <TheDarkMode> In reply to @Yardanico "you're supposed to execute": It built successfully, thanks for the help
[05:08:52] <FromDiscord> <dizzyliam> is there a way to set global compiler flags so you can compile with tcc by default?
[05:12:04] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/nims.html
[05:18:56] <FromDiscord> <dizzyliam> oop missed point one
[05:18:57] <FromDiscord> <dizzyliam> thanks
[05:26:17] <FromDiscord> <Yardanico> In reply to @TheDarkMode "It built successfully, thanks": they actually do stuff though
[05:26:26] <FromDiscord> <Yardanico> as you see in the code they write to an image
[05:26:46] <FromDiscord> <Yardanico> it's just that pixie already has those made  in its repo for testing
[05:26:56] <FromDiscord> <Yardanico> try deleting examples/gradient.png and rerunning this program
[06:00:05] <FromDiscord> <retkid> so how stable is the inline asm?
[06:00:39] <FromDiscord> <retkid> anyone here use it?
[06:09:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:20:31] <FromDiscord> <Yardanico> In reply to @retkid "so how stable is": it's literally just inline asm, what can be  "stable"  or not "stable" about it?
[06:20:41] <FromDiscord> <Yardanico> sure there are nim projects that use it, just search for asm in code
[06:21:43] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/925581820488196146/unknown.png
[06:22:46] <FromDiscord> <retkid> unsafe can have multiple meanings. Pretty sure it just means evaluated but it can have other meanings
[06:22:57] <FromDiscord> <retkid> (edit) "evaluated" => "not-evaluated"
[06:33:38] <NimEventer> New thread by Tmsa04: Would the Nim version number be helpful in deprecation documentation?, see https://forum.nim-lang.org/t/8750
[06:45:55] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:52:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:59:57] <FromDiscord> <Yardanico> In reply to @retkid "unsafe can have multiple": no? unsafe here literally means "not safe", same as cast or raw pointers
[07:19:49] *** Joins: xet7 (~xet7@user/xet7)
[07:37:33] <nrds> <06Prestige99> Is there a roadmap for concepts 2.0 or is that getting scrapped?
[07:37:35] <FromDiscord> <treeform> In reply to @TheDarkMode "Trying to run a": You appear to have older version of staticglfw
[07:37:55] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[07:38:12] <FromDiscord> <treeform> In reply to @TheDarkMode "It built successfully, thanks": You need to run it from the root folder
[07:38:25] <FromDiscord> <treeform> In reply to @TheDarkMode "It built successfully, thanks": Do you still have issues?
[07:44:21] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:16:51] <FromDiscord> <TheDarkMode> In reply to @treeform "You appear to have": how do I correct that? I appreciate the reply
[08:19:15] <FromDiscord> <TheDarkMode> In reply to @treeform "Do you still have": realtime.glfw seems to be the only real time example that works
[08:25:38] <FromDiscord> <TheDarkMode> In reply to @treeform "Do you still have": The first Error: I deleted the shadow.png file, as was suggested earlier today. The second error shows something went wrong in pixie (what that is Idk) https://media.discordapp.net/attachments/371759389889003532/925613008061857902/unknown.png
[09:08:07] <FromDiscord> <valerga> "Gnu already announced they're rewriting gcc with it"
[09:08:11] <FromDiscord> <valerga> I'm assuming this is not true
[09:08:22] <FromDiscord> <valerga> with nim
[09:17:44] <FromDiscord> <evoalg> ls
[09:21:49] <FromDiscord> <Rika> Of course it is not
[09:26:42] <FromDiscord> <treeform> In reply to @TheDarkMode "The first Error: I": Its trying to write to example folder, do you have an example folder on your path
[09:26:52] <FromDiscord> <treeform> is it writable
[09:27:07] <FromDiscord> <treeform> your last line says you are in `C:\>`
[09:27:20] <FromDiscord> <treeform> and not in the `pixie-master` folder
[09:27:34] <FromDiscord> <treeform> if you cd to the `pixie-master` it should work
[09:28:01] <FromDiscord> <treeform> it will also work if you create `C:\examples` folder but I don't recommend it.
[09:28:33] <FromDiscord> <treeform> instead of running this:
[09:28:34] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/925628839751712768/unknown.png
[09:28:47] <FromDiscord> <treeform> you should cd to the last pixie-master folder
[09:29:04] <FromDiscord> <treeform> and run `nim c -r examples/shadow.nim`
[09:29:13] <FromDiscord> <treeform> that's what we do
[12:23:47] <NimEventer> New thread by Domogled: Enum in macro, see https://forum.nim-lang.org/t/8752
[12:25:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:31:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[12:58:56] <FromDiscord> <konsumlamm> In reply to @nrds "<Prestige> Is there a": Prestige: they're on the roadmap (https://github.com/nim-lang/RFCs/issues/437) under stretch goals for 2.x
[13:47:20] <FromDiscord> <hmmm> Erorr: expected 'except' ðŸ¤”
[13:47:57] <FromDiscord> <hmmm> why is it expecting except when I want to use it some lines later?
[13:48:07] <FromDiscord> <hmmm> very suspect
[13:48:12] <FromDiscord> <Elegantbeef> Code is wonderful
[13:48:26] <FromDiscord> <hmmm> not helpful beefy ðŸ˜ƒ
[13:48:41] <FromDiscord> <Elegantbeef> I'm asking for the code
[13:48:54] <FromDiscord> <hmmm> there is no code is a proc of 3 lines with parseint lol
[13:49:35] <FromDiscord> <hmmm> okok I see if I can clean it up
[14:01:19] <FromDiscord> <konsumlamm> just posting error messages without code isn't helpful
[14:01:21] <FromDiscord> <konsumlamm> remember, we can't read your mind
[14:01:45] <FromDiscord> <hmmm> you shouldn't want to, my mind is not pretty lol
[14:02:02] <FromDiscord> <hmmm> I had a mini snag, but code is coming in all it's glorious 5 lines
[14:02:51] <FromDiscord> <haxscramper> the code is simple, just one line
[14:02:55] <FromDiscord> <haxscramper> and 10k coumns
[14:02:57] <FromDiscord> <haxscramper> (edit) "coumns" => "columns"
[14:04:06] <FromDiscord> <haxscramper> I think there was a 17-char snippet that crashed the compiler
[14:04:39] <FromDiscord> <hmmm> tadann
[14:04:39] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3JUF
[14:06:37] <FromDiscord> <haxscramper> As usual, adding imports helps .., and I'm not sure if indentation is correct in the first place
[14:07:11] <FromDiscord> <konsumlamm> the `else` should have the same indentation as the corresponding `if`
[14:08:03] <FromDiscord> <haxscramper> `readLine(stdin))` is unclosed
[14:08:11] <FromDiscord> <hmmm> ha!
[14:08:13] <FromDiscord> <haxscramper> or rather, `))` excessively closes
[14:08:38] <FromDiscord> <haxscramper> `var more = readLine(stdin))`
[14:08:40] <FromDiscord> <hmmm> I think it's right
[14:08:46] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[14:08:46] <FromDiscord> <hmmm> except had nothing to do with it
[14:09:36] <FromDiscord> <hmmm> ty ðŸ˜‹
[14:09:45] <FromDiscord> <konsumlamm> at least if you use VS code (or any editor with error highlighting) it should point to the unopened )
[14:10:01] <FromDiscord> <hmmm> I'm using ST
[14:10:08] <FromDiscord> <hmmm> not pointing anything sadl
[14:12:59] <FromDiscord> <Elegantbeef> You can also always use `nim check` if super lost or pass `--errorMax:0`
[14:13:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3JUL
[14:16:34] <FromDiscord> <geekrelief> VS Code also has colored brackets https://code.visualstudio.com/blogs/2021/09/29/bracket-pair-colorization
[14:17:52] <FromDiscord> <hmmm> wa nimcheck would be nice to have to run on save, need to see if the ancient ST extension has the option
[14:18:44] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[14:27:37] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 240 seconds)
[14:35:43] *** Joins: mahlon (~mahlon@martini.nu)
[14:47:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[15:49:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[15:52:21] <FromDiscord> <qb> Who has access to https://github.com/nim-lang/opengl/blob/master/src/opengl/glut.nim?
[15:52:26] <FromDiscord> <qb> (edit) "https://github.com/nim-lang/opengl/blob/master/src/opengl/glut.nim?" => "https://github.com/nim-lang/opengl/blob/master/src/opengl/glut.nim ?"
[16:04:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[16:33:08] *** Joins: rockcavera (~rc@192.12.112.193)
[16:33:08] *** Quits: rockcavera (~rc@192.12.112.193) (Changing host)
[16:33:08] *** Joins: rockcavera (~rc@user/rockcavera)
[16:55:47] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:12:03] <FromDiscord> <Shiba> In reply to @Yardanico "https://github.com/nim-lang/Nim/issues/19041#issuec": weird tcc says "dl libary not found" and "m libary not found"
[17:18:40] <FromDiscord> <Shiba> it turns out that the sorting of arguments passed to the nim colmpiler matters
[17:25:24] <FromDiscord> <Shiba> but now i have new errors
[17:25:39] <FromDiscord> <Rika> Which is
[17:48:57] <FromDiscord> <Shiba> it's a tcc specific or maybe another issue with float32
[18:08:03] *** Joins: arkurious (~arkurious@user/arkurious)
[18:33:09] *** Joins: bindu (~bindu@user/bindu)
[18:37:03] *** Parts: bindu (~bindu@user/bindu) (WeeChat 3.4)
[18:39:33] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[18:50:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6cc4:96c6:a3a5:e429)
[18:56:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[19:01:32] <FromDiscord> <retkid> sent a long message, see http://ix.io/3JWG
[19:07:46] <FromDiscord> <konsumlamm> i think they were just confused because you said that unsafe can mean not-evaluated, which makes no sense
[19:09:45] *** Joins: bkay (~beshr@c-0681e355.09-52-616c6b1.bbcust.telenor.se)
[19:10:07] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 250 seconds)
[19:10:16] <FromDiscord> <retkid> In reply to @Yardanico "it's literally just inline": well he also said this
[19:11:03] <FromDiscord> <retkid> in a very specific tone
[19:11:57] *** Joins: snow (~snow@177.79.83.142)
[19:12:16] <FromDiscord> <konsumlamm> again, i think it's just confusion about what you mean
[19:12:21] *** snow is now known as Guest6411
[19:12:38] <FromDiscord> <retkid> alrighty then
[19:14:19] *** Quits: Guest6411 (~snow@177.79.83.142) (Client Quit)
[19:33:13] <FromDiscord> <Fish-Face> sent a code paste, see https://play.nim-lang.org/#ix=3JWU
[19:36:00] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[19:36:49] <FromDiscord> <konsumlamm> it should
[19:37:03] <FromDiscord> <konsumlamm> looks like you're simply not adding that value
[19:37:22] <FromDiscord> <konsumlamm> besides, are you sure that you need a linked list and not just a `seq`?
[19:38:05] <FromDiscord> <Fish-Face> this is an experiment to see if that is the case ðŸ˜›
[19:38:26] <FromDiscord> <Fish-Face> it is for aoc, so experimenting to find optimal data structures
[19:39:51] <FromDiscord> <Fish-Face> sent a code paste, see https://play.nim-lang.org/#ix=3JWX
[19:40:34] <FromDiscord> <Fish-Face> there is other stuff that is `add`ing stuff to the list. Is there any dodgy state of the list I can check for?
[19:41:42] <NimEventer> New thread by Hobbyman: JSON - how to edit Jarrays (amongst others), see https://forum.nim-lang.org/t/8753
[19:44:49] <FromDiscord> <konsumlamm> In reply to @Fish-Face "the actual code is:": do you have a small reproducible example that you can share (preferably through the nim plaground)?
[19:45:14] <FromDiscord> <Fish-Face> I have not attempted to reduce my case yet
[19:45:45] <FromDiscord> <Fish-Face> for now a confirmation that there is at least not something obviously wrong with that snippet is useful
[19:48:37] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[19:50:58] <FromDiscord> <konsumlamm> i don't know your full code, so it's hard to say Â¯\_(ãƒ„)_/Â¯
[19:55:12] <FromDiscord> <Fish-Face> yeah I will try to put something sensible together
[19:56:16] <FromDiscord> <Fish-Face> something screwy is definitely going on - as I modify the `echo` above I can get things to segfault - or not, but not on the line I'm changing.
[19:58:31] <FromDiscord> <hmmm> what was the magick invocation for default param? proc thingy(x : int = 10) ?
[19:59:56] <FromDiscord> <hmmm> yea it works
[20:00:41] <FromDiscord> <Fish-Face> looks like `list.tail` is getting changed, but `list.head.next` is still `nil` (for the case where this breaks on a length-one list)
[20:05:19] <FromDiscord> <Fish-Face> OK I think the problem is if you add an empty list
[20:07:11] <FromDiscord> <Fish-Face> `a.add(b)` where `b.head == nil` results in the old tail of `a` having `next==nil`, but now `a.tail` is different
[20:10:42] <FromDiscord> <Fish-Face> @konsumlamm https://play.nim-lang.org/#ix=3JX3
[20:11:18] <FromDiscord> <Fish-Face> If it doesn't off with at least one element, the bug doesn't exist
[20:13:17] <FromDiscord> <Shiba> ok so iam getting errors of "not found files" of my project after i put --cpu:i386
[20:13:50] <FromDiscord> <Shiba> (edit) "ok so iam getting errors ... of" 03added "in the exe"
[20:13:57] <FromDiscord> <Shiba> and it's wont compile if ididn't add that argument
[20:17:55] <FromDiscord> <Fish-Face> @konsumlamm I tried to add in stuff to print the addresses but the playground gave me a link to something completely different and I couldn't get back to that so whatever XD
[20:31:53] <FromDiscord> <hmmm> yo what were the rules for breaking up code too large to fit screen
[20:33:37] <FromDiscord> <Solitude> zoom out
[20:34:04] <FromDiscord> <hmmm> ha!
[20:36:14] <FromDiscord> <hmmm> I can't zoom out, I'm a boomer
[20:37:27] <FromDiscord> <Shiba> does 32 bit build affect file reading and accesing directories
[20:45:37] <FromDiscord> <geekrelief> In reply to @Shiba "does 32 bit build": I'm curious what's your OS and hardware? I recall you mentioned you're on a Pentium.  Are you mixing 32-bit/64-bit applications?
[20:45:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:47:21] <FromDiscord> <Shiba> iam using windows 64 bit
[20:49:12] <FromDiscord> <geekrelief> ah ok my mistake.  I thought Pentium's were only 32 bit
[20:56:27] <FromDiscord> <Shiba> it's always generates a .exe in nimcached and complains about not findind the other parts of my projects
[20:58:31] <FromDiscord> <geekrelief> what command are you running?
[21:12:19] <FromDiscord> <QueenFuckingAdrielle> Has anyone had any luck inlining nvidia ptx into nim?
[21:15:08] <FromDiscord> <Shiba> sent a code paste, see https://play.nim-lang.org/#ix=3JXx
[21:21:57] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3JXA
[21:22:00] <FromDiscord> <Require Support> This is probably written somewhere but do I need to do anything to use a global var within a proc?
[21:22:02] <FromDiscord> <Shiba> ??
[21:22:20] <FromDiscord> <geekrelief> `-r` runs your program.  If you want the output, remove that
[21:22:33] <FromDiscord> <geekrelief> I mean the executable
[21:23:05] <FromDiscord> <Shiba> but it's outputs it in nimcahe
[21:23:16] <FromDiscord> <geekrelief> that's what you want?
[21:23:38] <FromDiscord> <Shiba> no like can you change the out directory
[21:24:04] <FromDiscord> <Shiba> (edit) "out" => "output"
[21:24:21] <FromDiscord> <geekrelief> I'm not sure what you're saying
[21:25:44] <FromDiscord> <geekrelief> What's the `F:/slurp` for?
[21:28:40] <FromDiscord> <Shiba> i tried to change the path of the executable
[21:29:14] <FromDiscord> <geekrelief> don't you need `--outdir` for that?
[21:29:54] <FromDiscord> <Shiba> ok thanks
[21:30:10] <NimEventer> New Nimble package! preprod - preprod, see https://github.com/j-a-s-d/preprod
[21:36:35] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[21:39:14] <FromDiscord> <Shiba> @geekrelief one more issue , so my nim scripts reads some filles like pngs , but the exe returns and error ofn not found , is that related to the cpu type
[21:39:25] <FromDiscord> <Shiba> (edit) "filles" => "files"
[21:39:33] <FromDiscord> <Shiba> (edit) "and" => "an"
[21:39:42] <FromDiscord> <Shiba> (edit) "ofn" => "of"
[21:39:58] <FromDiscord> <geekrelief> What's the error? I doubt it's related to your cpu type
[21:41:32] <FromDiscord> <konsumlamm> @Fish-Face that looks like a bug, you should open an issue on github
[21:41:56] <FromDiscord> <Shiba> In reply to @geekrelief "What's the error? I":  https://media.discordapp.net/attachments/371759389889003532/925813398615232522/Capture.PNG
[21:41:57] <FromDiscord> <konsumlamm> btw, you don't need the `.toSeq` to convert it to a readable form, you can just print linked lists directly
[21:42:11] <NimEventer> New Nimble package! honeycomb - A dead simple, no-nonsense parser combinator library written in pure Nim., see https://github.com/KatrinaKitten/honeycomb
[21:42:48] <FromDiscord> <geekrelief> In reply to @Shiba "": your path is messed up
[21:42:57] <FromDiscord> <Shiba> ?
[21:43:29] <FromDiscord> <geekrelief> you're specifying `F:\slurp\assets` twicw
[21:43:31] <FromDiscord> <geekrelief> (edit) "twicw" => "twice"
[21:44:00] <FromDiscord> <geekrelief> post your code
[21:47:21] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:51:11] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Client Quit)
[21:51:47] <FromDiscord> <Shiba> fixed thanks again
[21:52:57] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:54:06] <FromDiscord> <geekrelief> @KatrinaKitten Nice work on honeycomb! I was just look at https://github.com/zevv/npeg.  I guess this would be a good competitor?
[21:55:56] <FromDiscord> <Rosen> Was about to say, honeycomb looks sweet
[21:56:19] <FromDiscord> <geekrelief> yeah, I'm totally going to use it for my level prototyping
[21:57:08] <FromDiscord> <geekrelief> @haxscramper honeycomb looks like a good addition for this https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6 And thanks for writing that up!
[21:58:07] <FromDiscord> <KatrinaKitten> I wasn't aware npeg existed, it looks excellent ðŸ™‚ I think the goals of the two are slightly different though, npeg looks like a good option if you're already familiar with PEG syntax and want to convert it directly to Nim, where Honeycomb is aimed at providing a bit more of a high level API by comparison rather than a true DSL.
[21:58:50] <FromDiscord> <geekrelief> In reply to @KatrinaKitten "I wasn't aware npeg": I don't blame you. I only found out about npeg 2 days/yesterday ago? ðŸ™‚
[21:58:54] <FromDiscord> <haxscramper> In reply to @geekrelief "<@!608382355454951435> honeycomb looks like": added
[22:00:59] <FromDiscord> <KatrinaKitten> I will say that if you're familiar with the Parsy library for Python, Honeycomb should feel very familiar, as that's the library I learned parser combinators through and I heavily mimicked the general design principles there.
[22:01:40] <FromDiscord> <geekrelief> I've only used parser combinators with Haskell a decade ago.  I sorta recall liking them more than dealing with grammars ðŸ™‚
[22:04:41] <FromDiscord> <KatrinaKitten> PEG-based grammars in particular can be one to one converted to and from typical parser combinators if I'm not mistaken, but the implementation isn't necessarily quite the same. It's definitely nice to be able to kind of hack things together in the language you're writing though, rather than being stuck in the tighter featureset of a dedicated syntax or DSL.
[22:05:00] <FromDiscord> <KatrinaKitten> (edit) "PEG-based grammars in particular can be one to one converted to and from typical parser combinators if I'm not mistaken, but the implementation isn't necessarily quite the same. It's definitely nice to be able to kind of hack things together in the language you're writing though, rather than being stuck in the tighter featureset of a dedicated syntax or ... DSL." 03added "true"
[22:05:53] <FromDiscord> <KatrinaKitten> The biggest thing I wanted to achieve with Honeycomb was keeping it simple and straightforward, which grammar based libraries often can't be.
[22:06:06] <FromDiscord> <geekrelief> Yeah, the more familiar syntax is the immediate appeal.  I'll definitely try out honeycomb first over npeg when I get around to it.
[22:06:43] <FromDiscord> <geekrelief> I wish there was something like parser combinators for writing macros. ðŸ™‚
[22:07:12] <FromDiscord> <geekrelief> (edit) "writing" => "dealing with"
[22:07:29] <FromDiscord> <haxscramper> dealing as in wrigin?
[22:07:33] <FromDiscord> <haxscramper> (edit) "wrigin?" => "writing?"
[22:07:42] <FromDiscord> <haxscramper> or dealing as in unparsing the AST into data?
[22:08:03] <FromDiscord> <geekrelief> I'm writing a DSL that generates inline nim code
[22:08:34] <FromDiscord> <geekrelief> https://github.com/geekrelief/genit so right now I'm just doing a simple replacement for this
[22:08:46] <FromDiscord> <haxscramper> depending on the complexity of the transform it might be possible to implement declarative AST-AST rewritign
[22:09:01] <FromDiscord> <geekrelief> but I've been working on writing a parser so I can extend it's functionality
[22:09:12] <FromDiscord> <geekrelief> (edit) "it's" => "its"
[22:09:23] <FromDiscord> <KatrinaKitten> I think I saw a library floating around somewhere that supports pattern matching over ASTs in macros, if that floats your boat. Not quite the same, but.
[22:09:41] <FromDiscord> <geekrelief> probably  PMunch's macroutils?
[22:10:11] <FromDiscord> <geekrelief> I was looking over that again today, but it's not quite what I'm looking for
[22:10:20] <FromDiscord> <haxscramper> for pattern matching it is  `fusion/matching` or some other
[22:10:29] <FromDiscord> <Solitude> ast_pattern_matching
[22:10:33] <FromDiscord> <haxscramper> for `quote do` inverse it is a PMunch's macroutils
[22:10:38] <FromDiscord> <haxscramper> also gara/patty
[22:10:47] <FromDiscord> <KatrinaKitten> Might have been either, I don't recall offhand. I'm quite new to Nim and ran across it while researching the language.
[22:12:13] <FromDiscord> <geekrelief> oh is this it? https://github.com/krux02/ast-pattern-matching
[22:14:03] <FromDiscord> <KatrinaKitten> sent a long message, see http://ix.io/3JY0
[22:15:42] <FromDiscord> <geekrelief> In reply to @KatrinaKitten "The one thing I": No worries.  It's clearly early days for the library. Thanks for putting it together.  I have quite a bit on my plate, but the idea of a having a parser combiinator library for Nim's AST is enticing me.
[22:16:43] <FromDiscord> <geekrelief> I'm daydreaming about forking honeycomb to tease it apart to see how to go about doing that.
[22:18:10] <FromDiscord> <KatrinaKitten> Feel free, contributions are more than welcome ðŸ™‚ (with the caveat I might steal your idea, implement it my way, and credit you instead of merging, but that's just me being weird and picky about things lol)
[22:20:57] <FromDiscord> <geekrelief> In reply to @KatrinaKitten "Feel free, contributions are": sounds good, I don't mind my PRs being rejected as long as the idea is incorporated. ðŸ™‚
[22:21:39] <FromDiscord> <geekrelief> I'll probably take a closer look at gara too.  That might work for me.
[22:23:59] <Zevv> hola, what/where is honeycomb?
[22:24:33] <FromDiscord> <geekrelief> In reply to @Zevv "hola, what/where is honeycomb?": https://github.com/KatrinaKitten/honeycomb
[22:24:43] <Zevv> takk
[22:27:46] <Zevv> nice
[22:32:43] <FromDiscord> <KatrinaKitten> The most ironic thing about this entire project has been the fact that, unlike what my naming sense would imply, I'm actually terrified of bees XD
[22:32:48] <FromDiscord> <geekrelief> I forgot I had this bookmarked https://nim-lang.org/blog/2021/03/10/fusion-and-pattern-matching.html @haxscramper  thx again!
[22:33:26] <Zevv> KatrinaKitten: cmon, bees are your buddies
[22:33:30] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[22:33:34] <FromDiscord> <geekrelief> In reply to @KatrinaKitten "The most ironic thing": some childhood trauma?
[22:34:23] <FromDiscord> <geekrelief> When I was a kid, I drank a coke during a picnic and was stung.  A bee flew out of the can.
[22:34:44] <FromDiscord> <geekrelief> I hold no grudges against bees.
[22:37:37] *** Joins: neurocyte0132889 (~neurocyte@94.46.64.245)
[22:37:37] *** Quits: neurocyte0132889 (~neurocyte@94.46.64.245) (Changing host)
[22:37:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:38:17] <FromDiscord> <KatrinaKitten> I got stung by a yellow jacket for doing nothing at all when I was about 8, haven't been able to stand anything beelike since. I don't hate bumbles and the like, they're friendly enough, but I have a visceral phobic reaction to them regardless.
[22:40:23] <FromDiscord> <KatrinaKitten> But hey, the pun for Honeycomb was too good to pass up XD
[22:42:23] <FromDiscord> <geekrelief> Also works cause the imagery is of cells packed neatly together.
[22:42:59] <FromDiscord> <geekrelief> break off one chunk and it's still recognizable
[22:45:51] <FromDiscord> <KatrinaKitten> Aye
[23:15:21] *** Quits: bkay (~beshr@c-0681e355.09-52-616c6b1.bbcust.telenor.se) (Quit: Leaving)
[23:15:46] *** Joins: beshr (~beshr@user/beshr)
[23:46:23] <noeontheend> KatrinaKitten: I know I'm late to the party, but nice job with Honeycomb! I'd be impressed if it came from a Nim veteran, let alone someone just starting with the language.
[23:48:11] <FromDiscord> <hmmm> honeycomb looks great! what does the first line do btw
[23:48:16] <FromDiscord> <hmmm> parser  = ((s("Hello") | s("Greetings")) << c(',') << whitespace) & (regex(r"\w+") << c("!."))
[23:48:47] <FromDiscord> <Rika> Make a parser?
[23:49:04] <FromDiscord> <hmmm> yea but explain to peasants like mere in more detail
[23:49:37] <FromDiscord> <Rika> I donâ€™t have the time so hopefully the other does
[23:50:08] <FromDiscord> <hmmm> rika u bad boi, you always have time for hmm
[23:51:23] <FromDiscord> <KatrinaKitten> sent a long message, see http://ix.io/3JYn
[23:52:07] <FromDiscord> <hmmm> ðŸ‘€
[23:52:32] <FromDiscord> <hmmm> it sure looks like more readable than regex
[23:53:00] <FromDiscord> <KatrinaKitten> It's 100% overkill for most things a simple regex would do ðŸ˜…
[23:53:00] <FromDiscord> <Rika> Depends on you I guess
[23:53:07] <FromDiscord> <KatrinaKitten> But, it is quite simple to work with once you're familiar with it.
[23:53:12] <FromDiscord> <Rika> When you hit some sort of regex proficiencyâ€¦
[23:53:29] <FromDiscord> <hmmm> ðŸ˜…
[23:54:21] <FromDiscord> <hmmm> Kat do you have a simple example of things people do with something like honeycomb / like blogpost etc
[23:55:04] <FromDiscord> <KatrinaKitten> The repo's readme has a few articles about the subject, though in particular I'd recommend Computerphile's video on the topic ðŸ™‚â†µhttps://github.com/KatrinaKitten/honeycomb
[23:55:12] <FromDiscord> <KatrinaKitten> (edit) "ðŸ™‚â†µhttps://github.com/KatrinaKitten/honeycomb" => "ðŸ™‚â†µhttps://github.com/KatrinaKitten/honeycombâ†µhttps://www.youtube.com/watch?v=dDtZLm7HIJs"
[23:56:00] <FromDiscord> <KatrinaKitten> As for more "list of use cases" type examples, I recently participated in a programming language jam (like a game jam) and used parser combinators in my implementation.
[23:56:45] <FromDiscord> <KatrinaKitten> Any time you have a complex parsing job to do, and nanosecond performance isn't as much of a concern as simplicity for the dev, parser combinators are a good option to consider.
[23:58:13] <FromDiscord> <Rika> If youâ€™re smart in designing them you can still get good performance
[23:58:46] <FromDiscord> <KatrinaKitten> Definitely, it just tends to be a little less unless you have some internal transformation / optimization. Lots and lots of recursive nested function calls.
[23:59:22] <FromDiscord> <KatrinaKitten> Not nearly so huge a difference that it will matter for most use cases.
