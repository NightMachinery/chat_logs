[00:00:26] *** Quits: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b) (Read error: Connection reset by peer)
[00:00:26] *** Quits: dittid[m] (~dittidmat@2001:470:69fc:105::789d) (Read error: Connection reset by peer)
[00:00:27] *** Quits: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc) (Read error: Connection reset by peer)
[00:00:28] *** Quits: EmanuelLoos[m] (~emanuel-l@2001:470:69fc:105::6260) (Read error: Connection reset by peer)
[00:00:28] *** Quits: memst[m] (~memst@2001:470:69fc:105::716) (Read error: Connection reset by peer)
[00:00:28] *** Quits: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd) (Read error: Connection reset by peer)
[00:00:29] *** Quits: sixecho (~sixecho@2001:470:69fc:105::32) (Write error: Connection reset by peer)
[00:00:29] *** Quits: kepstin (~kepstin@user/kepstin) (Write error: Connection reset by peer)
[00:00:29] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (Write error: Connection reset by peer)
[00:00:29] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Write error: Connection reset by peer)
[00:00:29] *** Quits: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce) (Read error: Connection reset by peer)
[00:00:30] *** Quits: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2) (Write error: Connection reset by peer)
[00:03:06] *** Joins: dreamon (~dreamon@pd95038fb.dip0.t-ipconnect.de)
[00:03:55] *** Joins: Narrat (~omnius@p200300df5f0b10aa06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[00:11:22] *** Quits: s55 (~s55@user/s55) (Ping timeout: 245 seconds)
[00:12:23] *** Joins: s55 (~s55@user/s55)
[00:15:50] *** Joins: Guest6 (~Guest6@206.127.125.184)
[00:17:11] <blerd> I found some random tutorial that will hopefully allow me to step through ffmpeg.c but there is a lot going on in that code base.. Also there are other source files as well. T_T
[00:18:35] <emcodem> oh really, which tutorial is it? :D
[00:19:57] *** Quits: crashmatrix (~hatseflat@193.200.132.183) (Ping timeout: 265 seconds)
[00:20:25] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[00:37:05] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:40:25] <blerd> https://www.roxlu.com/2019/062/compiling-ffmpeg-with-x264-on-windows-10-using-msvc
[00:40:37] <blerd> and then combine with this https://www.programmersought.com/article/87774628911/
[00:43:16] <BtbN> Or just use gdb
[00:43:29] <BtbN> Building a fully features ffmpeg with MSVC is a serious mess
[00:43:31] <BtbN> *d
[00:43:48] *** Quits: Flabb (~Flabb@89.169.84.117) (Quit: Leaving)
[00:45:09] <blerd> I just need enough to see what special sauce is in there to get concat to work, but yeah I can see that being a problem
[00:45:42] <blerd> I saw a gdb tutorial for debugging but it's  a bit too hardcore for me right now
[00:45:45] <BtbN> ffmpeg.c is not involved with the concat demuxer?
[00:46:17] <BtbN> As far as the API is concerned, that's just another demuxer
[00:46:24] <blerd> concat filter i should say
[00:46:30] <BtbN> Same thing for that
[00:47:38] <blerd> idk why mine doesn't work. I only get the first files video stream and then a concat of the audio streams with the same line it works with ffmpeg.c so idk
[00:49:53] <blerd> Seems to be okay with with just video concat and just audio concat. From what I can tell ffmpeg.c is building the filter graphs manually not using the avfilter_graph_parse2.
[00:52:43] <blerd> If i had to guess it has something to do with the audio track being slightly longer than the video stream, but that is why i'm looking into ffmpeg.c
[00:53:08] *** Joins: Buster_ (~Buster@46.160.36.66)
[00:53:09] <BtbN> Except it doesn't, and just calls avfilter_graph_parse2 on the string
[00:54:09] <furq> https://ffmpeg.org/doxygen/trunk/ffmpeg__filter_8c_source.html#l00955
[00:54:13] <furq> maybe this is worth looking at
[00:54:52] <furq> or just avfilter_graph_config if you're not calling that already
[00:58:15] <blerd> Well I tried it two ways.. with avfilter_graph_parse2 and avfilter_graph_parse_ptr. Couldnt get either to work.  When I use Parse2. I include the buffer/buffersink in the string.
[01:00:18] <blerd> So I think the buffer is still made manually... but have to debug first to know for sure.
[01:03:49] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[01:05:11] <blerd> but first I will dump both graphs and compare
[01:11:15] <blerd> the -dumpgraph 1 doesnt seem to work unless input is a filter graph from what I can tell in ffmpeg.c If that option worked could save me some time
[01:18:33] *** Joins: TheSash__ (~TheSashmo@207.35.238.34)
[01:19:42] *** Quits: TheSashmo (~TheSashmo@207.35.238.34) (Ping timeout: 276 seconds)
[01:22:13] *** Joins: kepstin (~kepstin@user/kepstin)
[01:23:27] <blerd> the char* looks pretty much the same. Although ffmpeg.c uses the [0:v:0] syntax.
[01:23:42] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[01:23:56] *** Joins: luc65r (~luc65r@2001:470:69fc:105::ee1)
[01:23:56] *** Joins: idesmi[m] (~idesmitch@2001:470:69fc:105::f2b)
[01:24:04] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:24:04] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[01:24:04] *** Joins: singlerider[m] (~singlerid@2001:470:69fc:105::2fd2)
[01:24:04] *** Joins: EmanuelLoos[m] (~emanuel-l@2001:470:69fc:105::6260)
[01:24:05] *** Joins: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc)
[01:24:10] *** Joins: memst[m] (~memst@2001:470:69fc:105::716)
[01:24:16] *** Joins: dittid[m] (~dittidmat@2001:470:69fc:105::789d)
[01:24:16] *** Joins: igh4st[m] (~igh4stmat@2001:470:69fc:105::35ce)
[01:24:16] *** Joins: alienpinecone[m] (~alienpine@2001:470:69fc:105::35bd)
[01:34:23] <blerd> I'm going to dump the graph to make sure.. that would mean something is up with having parse2 make the buffer and buffersinks. Maybe extra configuration needed
[01:35:39] *** Joins: SaadHaider (~SaadHaide@39.45.158.212)
[01:36:27] <SaadHaider> Hello guys,
[01:36:30] <SaadHaider> I am trying to convert a animated webp file to mp4 using javascript ffmpeg, but not able to do so.
[01:36:30] <SaadHaider> I played around with the command given here to convert mp4 to animated webp https://gist.github.com/witmin/1edf926c2886d5c8d9b264d70baf7379 but I cannot do the reverse of this command to convert animated webp to mp4.
[01:36:54] <SaadHaider> Any help/suggestions would be appreciated.
[01:45:49] *** Joins: serg (~serg@78-56-11-186.static.zebra.lt)
[01:46:12] *** Joins: TheAMM (~AMM@user/amm)
[01:46:12] *** Quits: AMM (~AMM@user/amm) (Killed (NickServ (GHOST command used by TheAMM)))
[01:46:19] *** Quits: serg (~serg@78-56-11-186.static.zebra.lt) (Client Quit)
[01:46:30] *** TheAMM is now known as AMM
[01:46:45] *** Joins: epg (~epg@78-56-11-186.static.zebra.lt)
[01:48:21] <emcodem> hey Saad
[01:48:25] <emcodem> whats your error?
[01:48:31] <emcodem> whats the commandline you use?
[01:48:42] *** Joins: stano (~stano@p5deb5037.dip0.t-ipconnect.de)
[01:48:56] <blerd> I miss the days when all my problems where just from using command line.
[01:49:38] <stano> using mpv on armv7, how can i get faster color space conversion?
[01:49:40] <stano> [ffmpeg] swscaler: No accelerated colorspace conversion found from yuv420p to bgra.
[01:50:07] <stano> CPU has NEON SIMD which could accelerate this
[01:50:19] <furq> SaadHaider: there's no animated webp decoder yet
[01:50:22] <furq> https://trac.ffmpeg.org/ticket/4907
[01:50:51] <furq> not really sure why libwebp is used for encoding but not decoding
[01:51:22] *** Quits: SaadHaider (~SaadHaide@39.45.158.212) (Ping timeout: 246 seconds)
[01:51:26] <furq> bye
[01:51:51] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[01:53:35] <epg> Hi all
[01:53:36] <epg> If it possible to capture EPG stream from IPTV channel to any readable format? In VLC I see EPG, and ffmpeg shows there is stream called epg “No Program  Stream #0:7[0x12]: Data: epg” but I’m not sure how to dump EPG to any readable format. If it possible?
[01:56:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[01:59:41] *** Joins: TSaari (~tsaari@user/tsaari)
[02:00:04] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Quit: WeeChat 3.2)
[02:16:38] *** Joins: pong (~beaver@user/pong)
[02:19:12] *** Quits: Terrence (~Terrence@097-085-185-009.biz.spectrum.com) (Ping timeout: 255 seconds)
[02:21:59] <emcodem> hm do you know the format of the stream @epg?
[02:22:42] <epg> nope, but I see VLC understand it
[02:26:06] <epg> usually EPG in xls format, but I suspect it can be somehow compressed
[02:34:20] *** Quits: Buster_ (~Buster@46.160.36.66) ()
[02:34:22] *** Quits: pong (~beaver@user/pong) (Ping timeout: 244 seconds)
[02:35:37] <blerd> so looks like format/aformat gets injected in my ffmpeg.c I'm going to try adding that.. but I doubt that makes a difference
[02:38:51] <emcodem> @epg i dont thing that epg has been yet added to ffpmeg in any way
[02:39:36] <emcodem> let me rephrase, i am pretty sure of that
[02:39:46] <emcodem> i guess you need to use some other tool for ti
[02:39:51] <emcodem> it
[02:40:06] *** Joins: pong (~beaver@user/pong)
[02:41:19] *** Joins: Terrence (~Terrence@097-085-185-009.biz.spectrum.com)
[02:42:00] <blerd> nope x.x
[02:43:15] *** Quits: Zucca (~Zucca@user/zucca) (Remote host closed the connection)
[02:43:33] *** Joins: Zucca (~Zucca@user/zucca)
[02:46:40] <BtbN> Anyone with working Linux + VAAPI setup could test if my binary is able to use it? https://btbn.de/files/ffmpeg-N-102965-gf531a1a4e8-linux64-gpl.tar.xz
[02:51:26] *** Quits: epg (~epg@78-56-11-186.static.zebra.lt) (Quit: Connection closed)
[02:52:18] *** Joins: epg (~Android@78-56-11-186.static.zebra.lt)
[02:53:48] *** Quits: epg (~Android@78-56-11-186.static.zebra.lt) (Read error: Connection reset by peer)
[02:54:42] *** Joins: epg (~Android@78-56-11-186.static.zebra.lt)
[02:55:22] *** Quits: epg (~Android@78-56-11-186.static.zebra.lt) (Read error: Connection reset by peer)
[02:58:11] <Terrence> Is there a built in ffmpeg function that convert clock time (char*) to pts?
[03:00:46] <BtbN> no
[03:00:57] <BtbN> That also makes no sense, clock time has no relation to pts
[03:01:25] <Terrence> It's timestamp
[03:01:48] <Terrence> Like suppose I wanted to convert 97 seconds to the timestamp based from a file
[03:02:18] <BtbN> multiply seconds by timebase, add start-offset
[03:03:00] <Terrence> Okay, but I was just wondering if there was already a built in function or if I need to make one myself?
[03:03:09] <Terrence> That's what I was wondering
[03:03:31] <Terrence> av_ts2str() is something that does the opposite
[03:03:40] <Terrence> But I can't seem to find the inverse of this function ^
[03:04:58] *** Quits: dreamon (~dreamon@pd95038fb.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:09:03] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[03:10:06] *** Joins: epg (~Android@78-56-11-186.static.zebra.lt)
[03:10:35] <Terrence> Ah I guess I can write it, av_str2ts(), I guess
[03:10:47] *** Quits: epg (~Android@78-56-11-186.static.zebra.lt) (Read error: Connection reset by peer)
[03:11:04] <BtbN> There's definitely code to parse timestamps somewhere
[03:11:10] <BtbN> you can pass them on the commandline after all
[03:11:20] *** Quits: jafa (~jafa@ip68-98-112-122.ph.ph.cox.net) (Ping timeout: 256 seconds)
[03:12:10] *** Quits: Arokh (~MoveAlong@ip-88-153-210-106.hsi04.unitymediagroup.de) (Ping timeout: 272 seconds)
[03:12:20] <Terrence> Ahh .. extremely good point. I'll keep looking
[03:15:25] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[03:15:25] *** Joins: Arokh (~MoveAlong@ip-88-153-210-106.hsi04.unitymediagroup.de)
[03:16:35] *** Joins: nd_ (~nd@user/nd)
[03:16:35] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[03:16:51] *** Quits: nd (~nd@user/nd) (Ping timeout: 265 seconds)
[03:17:09] *** nd_ is now known as nd
[03:19:49] *** Quits: Narrat (~omnius@p200300df5f0b10aa06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:21:26] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[03:21:46] *** Joins: epg (~Android@78-56-11-186.static.zebra.lt)
[03:22:26] *** Quits: epg (~Android@78-56-11-186.static.zebra.lt) (Read error: Connection reset by peer)
[03:22:59] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[03:25:10] *** Joins: Trieste (T@user/pilgrim)
[03:32:30] *** Quits: der_richter (~Akemi@p4fde4320.dip0.t-ipconnect.de) (Quit: Leaving.)
[03:37:02] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[04:07:22] *** Joins: ZucZero (~Zucca@user/zucca)
[04:10:05] *** Quits: Zucca (~Zucca@user/zucca) (Ping timeout: 255 seconds)
[04:14:35] *** Quits: jess (~jess@libera/staff/jess) ()
[04:23:52] *** WereSquirrel is now known as NaviTheFairy
[04:26:08] *** Quits: imuo (~imuo@cpe-174-100-53-99.neo.res.rr.com) (Ping timeout: 256 seconds)
[04:37:09] *** Joins: Fohsap (~Muimi@60.20.218.178)
[04:40:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:45:27] *** Quits: pong (~beaver@user/pong) (Quit: pong)
[04:46:21] *** Joins: pong (~beaver@user/pong)
[04:48:23] <Terrence> In order use av_seek_frame() to seek to a certain frame, do you have to unreference the current frame you're on first?
[04:57:49] *** Quits: pong (~beaver@user/pong) (Quit: pong)
[05:06:34] *** Joins: pong (~beaver@user/pong)
[05:15:07] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[05:15:58] *** Joins: mthall_ (~quassel@2a01:4f9:4a:2f4d:ecb0:6aff:fed2:c9a1)
[05:16:04] *** Quits: mthall (~quassel@95.217.250.52) (Ping timeout: 272 seconds)
[05:20:39] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:29:42] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 245 seconds)
[05:30:01] *** Joins: TL (~TL@119.4.240.125)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[05:57:00] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 255 seconds)
[05:57:19] *** Joins: TL (~TL@119.4.240.125)
[06:09:16] *** Quits: MrZeus__ (~MrZeus@37.120.156.249) (Ping timeout: 256 seconds)
[06:21:57] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 276 seconds)
[06:36:14] <Terrence> av_seek_frame() is used to position the AVFormatContext and the given frame of the timestamp right?
[06:55:10] *** Joins: jos2 (~jos3@dyndsl-091-096-043-226.ewe-ip-backbone.de)
[06:58:34] *** Quits: jos1 (~jos3@dyndsl-095-033-175-166.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:10:20] *** Joins: gnoo (~gnoo@user/gnoo)
[07:13:06] *** Quits: emcodem (uid483343@id-483343.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:17:02] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 272 seconds)
[07:18:00] *** Joins: TL (~TL@119.4.240.125)
[07:29:04] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 272 seconds)
[07:29:22] *** Joins: TL (~TL@119.4.240.125)
[07:30:09] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-263-107.w86-235.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[07:30:48] *** Parts: blerd (~blerd@71.182.169.24) (Closing Window)
[08:23:54] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[08:40:05] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[08:40:28] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[08:53:28] *** Quits: Fohsap (~Muimi@60.20.218.178) (Remote host closed the connection)
[08:55:26] *** Joins: Fohsap (~Muimi@60.20.218.178)
[09:15:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[10:05:49] *** Joins: der_richter (~Akemi@p4fde4f46.dip0.t-ipconnect.de)
[10:06:02] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 255 seconds)
[10:06:22] *** Joins: TL (~TL@119.4.240.125)
[10:12:17] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:29:39] *** Joins: Flabb (~Flabb@89.169.84.117)
[10:37:10] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[10:49:06] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[10:57:30] *** Joins: xochilpili (~xochilpil@fixed-187-189-47-16.totalplay.net)
[10:57:52] <xochilpili> hello everyone, does anyone knows about video forensics tools in linux?
[10:58:13] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:e78c:842:54f8:58dd)
[10:59:13] <stano> i just used one
[10:59:31] <xochilpili> stano, can you share the name of the tool?
[11:00:02] <stano> what is it you want to do
[11:01:08] <xochilpili> i wanted to see metadata or additional information from a video mp4
[11:01:13] <stano> i ran a ssir quality comparison between two encodes
[11:01:26] <stano> ffprobe might give you what you want
[11:01:34] <xochilpili> i have tried with ffprobe mediainfo an exiftool but no brand
[11:01:45] <xochilpili> nothing usefull
[11:02:33] <stano> 'brand'?  i usually see 'handler_name'
[11:02:59] <xochilpili> can i share to you what i've got, perhaps you can see something additional?
[11:03:03] <stano> e.g. handler_name    : ISO Media file produced by Google Inc. Created on: 06/07/2021
[11:03:30] <stano> i don't have any detailed knowledge of this. just what i see with ffprobe
[11:03:46] *** Joins: epg (~Android@78-56-11-186.static.zebra.lt)
[11:03:47] *** Quits: epg (~Android@78-56-11-186.static.zebra.lt) (Client Quit)
[11:04:05] <xochilpili> https://paste.centos.org/view/4a9157c2 <
[11:04:13] <xochilpili> using ^ mediainfo
[11:04:17] *** Joins: someuser (~user@41.239.56.217)
[11:04:34] <xochilpili> https://paste.centos.org/view/8f575839 < exiftool
[11:06:58] <xochilpili> can you see that > Title : Vireo Ears v2.7.0 ?
[11:09:39] <stano> i don't know how me reading text you extracted will help you confirm that it is what you are reading
[11:11:28] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[11:22:24] *** Quits: xochilpili (~xochilpil@fixed-187-189-47-16.totalplay.net) (Quit: Leaving)
[11:37:31] <stano> i have some friends who still watch 'the news'.  i keep telling them to stop doing that.
[11:37:35] <stano> sorry wrong channel
[11:38:51] *** Joins: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de)
[11:46:50] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[11:50:25] *** Joins: stevenli_ (~stevenliu@103.1.67.94)
[11:50:26] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Read error: Connection reset by peer)
[12:02:46] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:04:25] *** Joins: stevenliu (~stevenliu@ffmpeg/developer/stevenliu)
[12:04:42] *** Quits: stevenli_ (~stevenliu@103.1.67.94) (Ping timeout: 245 seconds)
[12:14:00] *** Joins: linjie (~linjie@58.247.210.251)
[12:18:40] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 265 seconds)
[12:25:49] *** Joins: luni-4 (uid453292@id-453292.charlton.irccloud.com)
[12:35:49] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:38:14] *** ZucZero is now known as Zucca
[12:39:29] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[12:46:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:50:04] *** Joins: emcodem (uid483343@id-483343.brockwell.irccloud.com)
[12:54:20] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[12:55:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:59:59] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[13:00:30] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[13:14:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:16:23] *** Quits: Terrence (~Terrence@097-085-185-009.biz.spectrum.com) (Ping timeout: 255 seconds)
[13:25:17] *** Quits: stevenliu (~stevenliu@ffmpeg/developer/stevenliu) (Quit: Leaving...)
[13:42:48] *** Joins: Blacker47 (~Blacker47@user/blacker47)
[13:45:40] *** Quits: n000g (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[13:50:28] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[14:02:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 245 seconds)
[14:09:34] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[14:10:36] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 272 seconds)
[14:13:50] *** Joins: koolazer (~koo@user/koolazer)
[14:40:54] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[14:45:36] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 265 seconds)
[14:48:59] *** Quits: stano (~stano@p5deb5037.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[15:14:51] *** Joins: shlomif (~rindolf@87.68.242.72.adsl.012.net.il)
[15:16:05] *** Quits: rindolf (~rindolf@87.68.241.247.adsl.012.net.il) (Ping timeout: 255 seconds)
[15:23:48] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[15:30:55] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Ping timeout: 244 seconds)
[15:31:39] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[15:39:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[15:45:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:46:56] *** Joins: koolazer (~koo@user/koolazer)
[15:51:33] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[16:15:45] *** Joins: linjie (~linjie@58.247.210.251)
[16:18:53] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 265 seconds)
[16:20:15] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 255 seconds)
[16:32:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[16:32:40] *** Quits: der_richter (~Akemi@p4fde4f46.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[16:35:37] *** Joins: der_richter (~Akemi@p4fde4f46.dip0.t-ipconnect.de)
[16:39:24] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[16:39:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:43:28] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[17:08:49] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[17:12:27] *** Quits: der_richter (~Akemi@p4fde4f46.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[17:12:38] *** Joins: der_richter (~Akemi@p4fde4f46.dip0.t-ipconnect.de)
[17:17:45] *** Joins: koolazer (~koo@user/koolazer)
[17:19:59] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:23:50] *** Joins: MrZeus__ (~MrZeus@37.120.156.249)
[17:27:34] *** Joins: keypusher (keypusher@user/keypusher)
[17:31:48] *** Joins: keypushe- (keypusher@user/keypusher)
[17:32:31] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 246 seconds)
[17:33:09] *** Quits: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de) (Ping timeout: 255 seconds)
[17:35:04] *** keypushe- is now known as keypusher
[17:35:32] *** Joins: rsx (~dummy@ppp-188-174-140-73.dynamic.mnet-online.de)
[17:41:58] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 246 seconds)
[17:42:27] *** Joins: keypusher (keypusher@user/keypusher)
[17:50:25] *** Joins: blerd (blerd@71.182.169.24)
[17:50:32] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 245 seconds)
[18:00:06] <blerd> So I think I found the issue with my concat but not sure why I have the wrong info. Time base for video file in my code is inverse of FPS.(1001/60000). FFMPEG.c has it set to 1/90000. Since it is MPEG-TS it should be 1/90000 just not sure how ffmpeg.c is getting that. avcodec_open2 seems to set the time base to 1001/60000. I also get 1001/60000 from transcode example. It is also interesting how ffmpeg.c has the fps specified in the buffersrc input string and
[18:00:06] <blerd> transcode example does not.
[18:02:40] *** Joins: nrg (~NRG@user/nrg)
[18:10:48] <danergo> guys, I have a very strange issue with my code using libav* functions. I have minimalised the problem down to a 140LOC, and a sample test.mp4 file. Is this the right place to share and discuss on what have I mistaken?
[18:11:08] <danergo> my code detects keyframes in test.mp4 different than ffmpeg
[18:11:20] <danergo> on the same machine, using the same file
[18:11:47] <danergo> please let me know if this is the right place to discuss this, or I need to post it somewhere else, because I'm out of ideas now
[18:14:54] <emcodem> right place it is :D
[18:14:56] *** Quits: pong (~beaver@user/pong) (Quit:  )
[18:14:56] <c_14> either here or the libav-user mailing list is correct
[18:15:11] <danergo> perfect, thanks so much :)
[18:15:39] <emcodem> what you mean by  detect keyframes? e.g. scene change detection filter or I Frame or IDR frame?
[18:16:17] <danergo> I'll share right now
[18:17:12] <danergo> Here is my code:
[18:17:14] <danergo> https://pastebin.com/0W7BTm81
[18:17:32] *** Joins: pong (~beaver@user/pong)
[18:17:55] <emcodem> and whats the exact commandline you use to compare?
[18:18:15] <danergo> there is a video file, I'll try to share it soon
[18:18:57] <danergo> in my code, I'm comparing AVPacket->flag, if it equals 1, it shows as keyframe (KF), on line 91
[18:19:06] <danergo> I'm comparing it to an ffmpeg command:
[18:19:34] <danergo> ffmpeg -probesize 32 -i test.mp4 -c copy -bsf:v trace_headers -f null - 2>&1
[18:20:01] <danergo> if I put `| grep -e frame_num -e key` after this ffmpeg command, I got a pretty good result:
[18:20:47] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 268 seconds)
[18:21:17] <danergo> Uploaded file: https://uploads.kiwiirc.com/files/470d5e395cae0c6751fe0a5a569dfb6a/image.png
[18:21:30] <danergo> frame_num is going from 0->49
[18:21:37] <danergo> then comes a keyframe
[18:21:58] <danergo> every 50th packet is a keyframe, based on ffmpeg (and also based on my earlier expectations)
[18:22:11] <danergo> however, my code's output shows me very different result:
[18:22:22] <c_14> danergo: try #include <libavcodec/paket.h> pkt->flags & AV_PKT_FLAG_KEY instead of pkt-flags==1
[18:23:36] <danergo> yes, I had that idea, but it doesn't make ANY difference :(
[18:24:47] <danergo> in my code, I got "KF" output for: packets at 0, 50, 99, 196 and 391
[18:25:18] <danergo> whereas it supposed to be at 0, 49, 99, 149, 199, 249, 299, 349, 399
[18:26:45] <danergo> what's the usual way to share video file here?
[18:26:54] <danergo> I fear of conversion
[18:27:21] <danergo> and I guess pastebin would be angry on me if I paste a 7Mb file :)
[18:31:07] <furq> people use 0x0.st a lot
[18:31:23] <furq> any similar site that doesn't suck to download from is fine
[18:34:11] *** shlomif is now known as rindolf
[18:35:28] <emcodem> is it possible that you loose packets or such @danergo
[18:35:41] <danergo> how is it possible? :)
[18:35:42] <emcodem> no
[18:35:43] <emcodem> hmmm
[18:35:46] <danergo> reading from file
[18:35:55] <emcodem> ah, i thought because you do network init...
[18:35:56] <danergo> local file, next to binary
[18:36:10] <danergo> sorry, I just left it in the code
[18:36:19] <danergo> originally it was opened the stream from network
[18:36:39] <danergo> and suffered from the same problem, but I thought it's a network problem
[18:36:52] <danergo> but it also reproducable (100%) with a local testfile
[18:37:46] <c_14> Ok, after changing the code to only log packets for the selected video stream, I'm at least getting the same number of key frames
[18:38:41] <c_14> Ok, and if I pass -copyts to the ffmpeg command they now match up
[18:38:58] <danergo> https://0x0.st/-O66.mp4
[18:39:02] <danergo> this is my testfile
[18:39:13] <c_14> danergo: check if the ffmpeg output matches your output if you add -copyts
[18:40:45] <danergo> ok, added -copyts
[18:40:55] <c_14> It matches up for me when I check on your file
[18:40:56] <danergo>  ffmpeg -probesize 32 -i test.mp4 -copyts -c copy -bsf:v trace_headers -f null - 2>&1 | grep -e key -e frame_num
[18:41:02] <danergo> same result as before :(
[18:41:07] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:41:16] <danergo> keyframe @ every 50th
[18:41:22] *** Joins: mickey (~user@user/mickey)
[18:43:40] *** Joins: DennisF (~DennisF@53-170-177-143.ftth.glasoperator.nl)
[18:44:55] <c_14> this is the output of `ffmpeg -copyts -i -O66.mp4 -c copy -bsf:v trace_headers -f null /dev/null |& grep -e key' for me https://pb.c-14.de/t/kng.sALrvU
[18:45:10] <c_14> and of your program |& grep KF: https://pb.c-14.de/t/kng.sALrvU
[18:45:17] <c_14> eh, wrong link
[18:45:19] *** Joins: linjie (~linjie@58.247.210.251)
[18:45:19] <c_14> https://pb.c-14.de/t/kng.gtIroT
[18:45:22] <c_14> that's for your program
[18:45:45] <DennisF> Good afternoon all. I'm using ffmpeg for a bunch of different RGB conversions and all works great. However now I'm trying to decode a v210 feed into p010 and the only thing that I'm getting is a green output. Looking at the AV_CODEC_ID_V210 decoder it seems this is the only threaded one so I'm wondering if there is anything I need to do to get that
[18:45:46] <DennisF> going?
[18:46:04] *** pong is now known as beaver
[18:46:17] *** Quits: linjie (~linjie@58.247.210.251) (Remote host closed the connection)
[18:47:36] *** Joins: linjie (~linjie@58.247.210.251)
[18:47:37] <DennisF> there are some comments on how to use avcodec_send_packet() avcodec_receive_frame() but it's not entirely clear to me how to run that. I'm calling avcodec_send_packet(v210 frame) and then do { x=avcodec_receive_frame(); ... } while (x == AVERROR(EAGAIN));
[18:48:21] <DennisF> if I use a close-but-not-quite decoder such as AV_CODEC_ID_V210X I do get a corrupted version of what I'm expecting
[18:48:59] <DennisF> s/corrupted/shapes which resemble the expected signal but with wrong colors/
[18:51:54] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 255 seconds)
[18:59:21] <danergo> c_14: yes, keyframes number indeed seems correct.
[18:59:44] <danergo> but why are frames so much different in my code versus ffmpeg?
[19:00:16] <danergo> because in case running ffmpeg, keyframes are coming at every 50th frame, and in my code it varies
[19:01:04] <danergo> and the problem is that if this stream is coming from network, and I'm trying to remux it to fragmented mp4, and I use +frag_keyframes, I got a lot of different frame-length fragments
[19:03:45] <danergo> so in case I make the frame counter 0 at every detected keyframe, my intervals are:
[19:04:19] <danergo> 0-49, 0-48, 0-96, 0-194
[19:04:34] *** Joins: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de)
[19:05:06] <danergo> and all duration is always 9000, which means in my code, keyframes are coming later and later as time is passing
[19:05:27] <danergo> but there is also PTS there
[19:05:35] <danergo> first keyframe is @0
[19:05:54] <danergo> 2nd KF: @2.8s
[19:06:09] <danergo> 3rd KF: @5.3s
[19:06:24] <danergo> 4th KF: @10.3s
[19:06:41] <danergo> 5th KF: @20.3s
[19:06:57] <danergo> it seems it's doubling? :O
[19:11:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:13:00] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:13:55] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:15:47] *** Quits: TL (~TL@119.4.240.125) (Ping timeout: 265 seconds)
[19:19:46] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:19:50] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[19:20:15] <SpeakerToMeat> Hello all.
[19:20:27] <SpeakerToMeat> Nevermind
[19:21:23] *** Joins: linjie (~linjie@58.247.210.251)
[19:25:39] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 255 seconds)
[19:25:46] <emcodem> i like that album :D
[19:25:59] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[19:26:24] *** Joins: koolazer (~koo@user/koolazer)
[19:34:10] *** Joins: ||arifaX (~Commodore@p4fc72abc.dip0.t-ipconnect.de)
[19:34:10] *** Quits: ||arifaX (~Commodore@p4fc72abc.dip0.t-ipconnect.de) (Changing host)
[19:34:10] *** Joins: ||arifaX (~Commodore@user/arifax/x-9857073)
[19:34:16] *** Joins: TL (~TL@119.4.240.125)
[19:35:55] *** Joins: Terrence (~Terrence@097-085-185-009.biz.spectrum.com)
[19:40:18] <Terrence> Does anyone know if it's possible given a certain amount of frames in a buffer to write until a certain timestamp?
[19:40:57] <Terrence> I'm not sure if using av_seek_frame() will be sufficient enough to use and can't seem to find any other function with the capability to do so without a formatcontext
[19:54:15] *** Quits: ||arifaX (~Commodore@user/arifax/x-9857073) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:56:20] <emcodem> still no success Terrence? :D
[19:56:56] *** Joins: nrg (~NRG@user/nrg)
[19:57:16] *** Quits: Fohsap (~Muimi@60.20.218.178) (Read error: Connection reset by peer)
[19:57:27] <Terrence> Eh we're getting close but I'm still trying to account for those extra seconds emcodem
[19:57:48] <Terrence> The way I currently have it working is thanks to kepstin but there's still some little bugs
[19:58:21] <Terrence> I currently have a queue in place that writes every frame less than the start of silence, but I think I need to write every frame up UNTIL the start of silence
[19:59:10] <Terrence> But that's the part that I'm having trouble figuring out how to do with the functions ffmpeg has available
[20:00:05] <emcodem> you got start of silence in pts and compare the pts of the packets, right?
[20:00:24] <Terrence> Yes
[20:00:51] <Terrence> if(queue.front()->pts < silence->pts) // write it
[20:01:02] <Terrence> But I want to write up until silence->pts
[20:01:10] <emcodem> sounds correct
[20:01:44] <emcodem> if(queue.front()->pts <= silence->pts)
[20:01:55] <emcodem> thats what i understand from what you say
[20:02:17] <Terrence> But the thing is with that, the queue has pts values that increment based on the number of samples
[20:02:39] <Terrence> so suppose the samples is 1024
[20:02:44] *** Joins: linjie (~linjie@58.247.210.251)
[20:02:59] <Terrence> and I have silence that begins at 5109 right?
[20:03:41] <emcodem> 5109 donesnt look like a pts
[20:03:52] <Terrence> if would only be able to write frames with pts of 0, 1024, 2048, 3072, 4096
[20:04:01] <emcodem> yes
[20:04:16] <Terrence> But i still need to write up until 5109
[20:04:20] <Terrence> That's the issue
[20:04:25] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 258 seconds)
[20:04:44] <emcodem> ah ok so you want to get only parts of a frame
[20:04:50] <Terrence> YES
[20:05:15] <Terrence> and those were just random number examples
[20:05:23] <emcodem> should be possible for pcm audio but unfortunately i need to run now, sorry pal :D
[20:05:36] <Terrence> thanks I'll keep searching
[20:06:37] <Terrence> Or does anyone else know how I would be able to write up until a certain value
[20:07:03] <emcodem> i am sure you can generate a frame and just copy the raw data from the decoded frame's buffer but you'd need to translate the bytes you copy to the buffer, e.g. 3 bytes per sample and per channel if it is 24 bit audio
[20:07:06] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 252 seconds)
[20:07:51] <emcodem> hehe i'd probably just calculate the byte values and read directly from the file :D
[20:07:59] <emcodem> so, need to go, much luck to you!
[20:08:05] <Terrence> Thanks!
[20:13:14] *** Joins: linjie (~linjie@58.247.210.251)
[20:17:01] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[20:17:22] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 246 seconds)
[20:18:47] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:21:44] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 272 seconds)
[20:29:32] *** Quits: DennisF (~DennisF@53-170-177-143.ftth.glasoperator.nl) (Quit: Connection closed)
[20:32:01] *** Quits: dreamon (~dreamon@ppp-88-217-71-147.dynamic.mnet-online.de) (Ping timeout: 258 seconds)
[20:38:19] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[20:40:15] *** Joins: arcatech (~arcatech@user/arcatech)
[20:49:21] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 255 seconds)
[20:50:29] *** Joins: linjie (~linjie@58.247.210.251)
[20:50:42] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 240 seconds)
[20:55:01] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 258 seconds)
[20:57:14] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[21:03:51] *** Joins: Kodsama (~kodsama@84-217-46-206.customers.ownit.se)
[21:06:23] *** Quits: rsx (~dummy@ppp-188-174-140-73.dynamic.mnet-online.de) (Quit: rsx)
[21:11:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:20:03] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[21:23:25] *** Joins: linjie (~linjie@58.247.210.251)
[21:23:56] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:26:10] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[21:26:41] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:26:46] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[21:28:03] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 255 seconds)
[21:29:11] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 265 seconds)
[21:30:37] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:39:30] *** Joins: omegatron (~some@p5484990d.dip0.t-ipconnect.de)
[21:39:34] *** Quits: Syrup (uid10029@user/maple) (Quit: Connection closed for inactivity)
[21:40:10] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[21:42:53] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[21:46:45] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 268 seconds)
[21:49:50] *** Joins: koolazer (~koo@user/koolazer)
[21:52:44] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 244 seconds)
[21:54:53] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[21:58:55] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[22:05:15] *** Quits: s55 (~s55@user/s55) (Ping timeout: 268 seconds)
[22:13:13] *** Joins: arcatech (~arcatech@user/arcatech)
[22:19:07] *** Joins: dreamon (~dreamon@p54b140d7.dip0.t-ipconnect.de)
[22:24:04] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 246 seconds)
[22:36:43] *** Joins: DennisF (~DennisF@53-170-177-143.ftth.glasoperator.nl)
[22:40:45] *** Joins: linjie (~linjie@58.247.210.251)
[22:45:07] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 245 seconds)
[22:54:56] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[22:55:10] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[22:58:09] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[23:00:52] <Terrence> If I wanted to use a filter multiple times using the ffmpeg api, but with varying arguments for every call, would I have to keep setting up the filter every time I need to use it?
[23:03:31] *** Joins: s55 (~s55@user/s55)
[23:05:49] <kepstin> some filters can be sent commands to change some arguments, but in general if you're filtering separate things... i'd probably set up a new filter chain each time.
[23:06:08] *** Quits: danergo (~danergo@catv-176-63-201-22.catv.broadband.hu) (Quit: Connection closed)
[23:07:09] <Terrence> I'm only filtering one audio file kepstin
[23:08:13] <kepstin> sure, but you're filtering it twice from the start with different filters, right?
[23:09:03] <Terrence> Yeah, I use silencedetect first
[23:09:11] <Terrence> But my goal was to have them working concurrently
[23:09:25] <Terrence> I implemented your idea with the queue which temporarily worked
[23:10:15] <Terrence> Until I realized that if I only pass in every frame with a pts less than or equal the pts of silence start, there are instances where I will be missing parts of frames
[23:11:07] <Terrence> So my goal would be up until silence start, pass in queue.front()->pts to silence_start to aselect and then write that to the output file
[23:12:05] *** Quits: DennisF (~DennisF@53-170-177-143.ftth.glasoperator.nl) (Quit: Connection closed)
[23:12:16] <Terrence> But if I'm able to change the arguments as you've suggested and just change the filter once that would be ideal
[23:12:27] <Terrence> *set up the filter once
[23:13:24] <Terrence> Does that make sense kepstin?
[23:20:58] *** beaver is now known as pong
[23:23:21] <Terrence> I guess my real issue is just understanding how to use the aselect filter using ffmpeg's api
[23:25:17] *** Quits: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl) (Ping timeout: 258 seconds)
[23:31:05] *** Joins: crashmatrix (~hatseflat@hatsuseno.rootaccess.nl)
[23:35:24] *** Joins: Volgaar (~volgaar@104.66.13.93.rev.sfr.net)
[23:37:39] *** Joins: koolazer (~koo@user/koolazer)
[23:39:14] *** Joins: imuo (~imuo@cpe-174-100-53-99.neo.res.rr.com)
[23:54:15] *** Joins: linjie (~linjie@58.247.210.251)
[23:56:54] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 276 seconds)
[23:58:48] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 255 seconds)
[23:59:13] <kepstin> using filters from the api isn't fundamentally different - either way, you're constructing a filter  and setting some parameters on it, then it goes into a filter chain which frames get fed through.
[23:59:24] <kepstin> isn't fundamentally different from the cli*
