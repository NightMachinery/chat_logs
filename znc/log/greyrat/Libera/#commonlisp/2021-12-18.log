[00:13:15] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[00:15:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:19:20] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f) (Ping timeout: 268 seconds)
[00:20:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[00:22:10] *** Quits: frgo (~frgo@217.111.125.3) (Remote host closed the connection)
[00:34:00] *** Quits: cage (~cage@dynamic-adsl-84-220-217-231.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:38:44] *** Joins: frgo (~frgo@217.111.125.3)
[00:40:58] *** Quits: pve (~pve@87-93-235-107.bb.dnainternet.fi) (Quit: leaving)
[00:42:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[00:42:57] *** Quits: frgo (~frgo@217.111.125.3) (Ping timeout: 240 seconds)
[00:43:43] *** Quits: rotateq (~user@185.66.193.48) (Ping timeout: 256 seconds)
[00:52:05] *** Joins: frgo (~frgo@217.111.125.3)
[01:07:20] <Guest74> is there something like BUTLAST for the front?
[01:12:11] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Remote host closed the connection)
[01:12:50] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[01:16:17] <mfiano> nthcdr
[01:26:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[01:26:51] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[01:34:56] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Ping timeout: 245 seconds)
[01:36:42] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[01:39:15] *** Quits: frgo (~frgo@217.111.125.3) (Remote host closed the connection)
[01:39:26] <Guest74> ah, I guess my question was badly specified.  say I want only the last 10 elements of a list.  I'll have to keep nthcdr in mind though.
[01:40:41] <mfiano> Then you should keep pointers to those cons cells if you don't want a big Big-O
[01:41:11] <mfiano> Or use a more proper data structure
[01:41:35] <Guest74> it's just a random list.
[01:42:12] <mfiano> A list is not a good choice of a data structure for this algorithm.
[01:42:33] <mfiano> If you don't want to build it up piece wise and keep pointers to the interesting cells
[01:42:45] <semz> Huh? It's doable in O(n) without precomputed extra info
[01:42:49] <Guest74> I'm just talking about lists, any random list I might receive.  I am not choosing this as a data structure.
[01:43:07] <Guest74> wpi;dm
[01:43:09] <Guest74> oops
[01:43:24] <Guest74> wouldn't it be 2n?
[01:43:31] <semz> O(2n) = O(n)
[01:43:36] <semz> but yes
[01:43:45] <Guest74> me knows nothing about O
[01:47:47] <phoe> Guest74: CL:LAST
[01:48:53] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Ping timeout: 256 seconds)
[01:50:01] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[01:50:56] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[01:53:30] <Guest74> Nice!  Thanks.  I was thinking there should be something.
[01:54:20] <Guest74> and I thought butlast wasn't such a good name, but now it makes sense.
[01:54:43] <Guest74> uh, no, i still don't like it.
[01:55:04] *** Joins: frgo (~frgo@217.111.125.3)
[01:55:11] <phoe> "the last N elements" versus "everything but the last N elements"
[01:55:16] <phoe> LAST versus BUTLAST
[01:55:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:56:07] <Guest74> as a cobbler it doesn't sound good.
[01:57:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:58:18] <Nilby> and there's BUTFIRST as I like to call CDR
[01:59:26] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:59:50] *** Quits: frgo (~frgo@217.111.125.3) (Ping timeout: 268 seconds)
[02:00:08] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:00:30] <Guest74> might as well make a whole bunch.  butnth
[02:01:45] <Nilby> you can rename nthcdr and cd*dr's
[02:02:44] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:544b:4bac:213b:f60)
[02:02:50] <Guest74> sure, and replace remove-if-not with but-if
[02:02:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:02:56] <phoe> nthcadadr
[02:03:20] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ee:e8ad:34c3:9119:b6d7:8793)
[02:05:01] <Guest74> anybody have a jps+ implementation?
[02:07:52] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:544b:4bac:213b:f60) (Ping timeout: 268 seconds)
[02:17:14] <jackdaniel> nthc(random-number-of-times (random-elt a d))r
[02:26:06] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[02:26:35] *** Joins: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de)
[02:27:06] *** Joins: akoana (~ah@user/akoana)
[02:28:03] <Guest74> I just noticed I'm getting a warning on a case slot with :INITFORM nil and :TYPE (or nil something)
[02:28:09] <Guest74> s/case/class
[02:28:20] <jackdaniel> the type nil is empty
[02:28:25] <jackdaniel> you want (or null something)
[02:28:36] <Guest74> thanks
[02:28:42] <jackdaniel> sure
[02:30:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:19c3:7b50:512d:d28) (Ping timeout: 240 seconds)
[02:32:33] *** Joins: frgo (~frgo@217.111.125.3)
[02:36:37] *** Quits: frgo (~frgo@217.111.125.3) (Ping timeout: 240 seconds)
[02:38:21] <rotateq> and I wanted to admit my logical failure of yesterday, of course an AND in the matching expression wouldn't make sense ^^ maybe in a quantum computer with quilc :)
[02:39:37] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 240 seconds)
[02:46:41] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 256 seconds)
[02:48:03] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[02:48:20] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[02:49:32] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 240 seconds)
[02:57:34] *** Joins: temp1234 (~temp1234@2602:61:7432:3d01:9f:33bf:9a68:6f28)
[02:58:52] *** Joins: Oddity (~Oddity@user/oddity)
[02:58:56] <temp1234> So, is an fexpr just a macro whose body is implicitly quoted? I've been trying to understand why you'd want them :)
[02:59:54] <hayley> A fexpr is a function which gets its arguments unevaluated.
[03:00:22] <hayley> Theoretically they are more powerful than macros, but I can't think of any uses of fexprs that macros don't do.
[03:01:02] <temp1234> Hm, alright
[03:01:02] *** Quits: temp1234 (~temp1234@2602:61:7432:3d01:9f:33bf:9a68:6f28) (Client Quit)
[03:01:11] *** Joins: temp1234 (~temp1234@2602:61:7432:3d01:3864:d103:b6bf:aa8c)
[03:01:40] <White_Flame> is a fexpr expcted to actualy execute the code in the runtime environment, instead of returning source code?
[03:03:11] <hayley> Yes.
[03:08:28] *** Quits: temp1234 (~temp1234@2602:61:7432:3d01:3864:d103:b6bf:aa8c) (Quit: Client closed)
[03:12:31] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[03:14:55] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::103e) (Remote host closed the connection)
[03:17:44] *** Joins: Jing (~hedgehog@2604:a840:3::103e)
[03:17:45] <Nilby> I don't think fexprs are more powerful than macros, it's just that given fexprs you can make macros better than the other way around. Most of the time you want macros.
[03:20:41] *** Joins: taiju (~taiju@240b:253:ec40:2400:fc1c:4577:fe:d2)
[03:21:12] <rotateq> hm i know mexprs from mathematica and such, what are fexprs again exactly?
[03:22:55] <Nilby> like hayley said, a function that gets un-eval arguments like a macro
[03:23:09] <mfiano> Does the standard provide the building blocks for them, or do they require implementation support?
[03:24:31] <Nilby> You can make a macro that is the fexpr, but then you can't pass it to apply, so you have to make another function which you can apply. So it's a little clumsy, but you can do it in any CL.
[03:24:33] *** Joins: gaqwas (~john@dynamic-095-115-128-022.95.115.pool.telefonica.de)
[03:25:56] <mfiano> You can apply a macro if it also expands to that second function though, though maybe that is not possible in this specific context.
[03:27:55] <Nilby> It's a tiny bit different because applying the macro function just does the expansion and doesn't evaluate it.
[03:34:50] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[03:38:54] *** Joins: Alfr (~Alfr@user/alfr)
[03:39:38] <Nilby> Let's just forgets fexprs. But this might clear it up or make it more muddy: https://plaster.tymoon.eu/view/2781#2781
[03:43:00] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ee:e8ad:34c3:9119:b6d7:8793) (Read error: Connection reset by peer)
[03:45:39] <jmercouris> Bike: exactly what pjb said
[03:50:21] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 245 seconds)
[03:58:51] *** Quits: OlCe (~user@lfbn-nic-1-510-34.w90-116.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[04:01:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:03:52] <_73> I am trying to use the `bst` package to make a binary search tree that can be controlled through a closure. The package however uses special variables to control a trees behavior. I want to be able to set these variable only in my lexical closure so they only control my one instance of a bst. I understand why this code does not work but am wondering if it is possible to do something like this with a closure, or if I need to use a
[04:03:52] <_73> different package: https://dpaste.com/2C4Z48NRU
[04:05:02] <Bike> have your closure bind the specials on entry
[04:05:22] <Bike> like, you do (let ((bst-copy-function #'identity)) (lambda (...) (let ((*bst-copy-function* bst-copy-function)) ...)))
[04:08:29] <_73> Perhaps I don't actually know why my code doesn't work. I was under the impression that you could not modify a special variable through a let binding.
[04:09:17] <Bike> yes. let doesn't modify the existing binding, it makes a new one. is that relevant?
[04:10:25] <_73> how does the bst package know to use this new binding?
[04:11:50] <mfiano> special variables are a stack of bindings under the same name
[04:12:40] <mfiano> You can push new bindings to the stack with LET, and when the dynamic scope ends the value is popped off the stack
[04:13:11] <Bike> well, i'm assuming you'd be using the actual package's special variables here.
[04:13:24] <Bike> since using your own is obviously not going to help
[04:15:58] *** Spawns is now known as Spawns_Carpeting
[04:17:08] <_73> I have become confused. I must need to read more about special variables.
[04:17:57] *** Quits: gaqwas (~john@dynamic-095-115-128-022.95.115.pool.telefonica.de) (Ping timeout: 240 seconds)
[04:21:21] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[04:31:37] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[04:40:21] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:49:17] *** Quits: taiju (~taiju@240b:253:ec40:2400:fc1c:4577:fe:d2) (Ping timeout: 240 seconds)
[04:50:12] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[04:55:37] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 240 seconds)
[04:56:32] *** Joins: taiju (~taiju@240b:253:ec40:2400:fc1c:4577:fe:d2)
[04:57:34] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:58:46] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[05:00:31] *** Joins: karlosz_ (~karlosz@47.151.136.69)
[05:02:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:fc1c:4577:fe:d2) (Ping timeout: 240 seconds)
[05:04:23] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[05:04:24] *** karlosz_ is now known as karlosz
[05:05:04] *** Joins: Oladon (~olad@98.43.81.226)
[05:05:46] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[05:07:30] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[05:19:15] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[05:30:12] <rotateq> me too still
[05:30:29] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:6095:a396:e3f3:a8b6)
[05:32:25] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[05:32:40] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[05:34:11] <rotateq> hm maybe someone should give me a hint in the spec error with PROG2
[05:34:59] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 256 seconds)
[05:36:05] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Client Quit)
[05:36:20] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[05:39:05] <hayley> PROG2 should return the primary value of evaluating the second form, but the specification claims it returns the primary value of evaluating the first form.
[05:40:27] <semz> The standard is correct fwiw. It's a typo in the hyperspec.
[05:40:29] * rotateq must think a moment just to get it right
[05:40:48] <rotateq> haha yes, i was jsut curious today after the talk
[05:41:54] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[05:43:24] <rotateq> OK.
[05:44:04] <rotateq> hm now more thinking about the differences fexprs vs macros (or rather sexprs, or maybe you can give me more hints)
[05:45:16] <hayley> fexpr stands for "funny expression" or something like that; it's independent to surface syntax like S-expressions.
[05:45:47] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:6095:a396:e3f3:a8b6) (Remote host closed the connection)
[05:47:02] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:51:37] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[05:56:06] <rotateq> hm okay and mexprs was for meta-expressions. Wolfram still claims that Wolfram Language is the most advanced in existence. but sure they did and do a great job on many things
[05:58:03] <hayley> I'd have no idea how you measure advanced-ness.
[05:58:31] <hayley> But I don't think it has much to do with syntax.
[05:59:27] <rotateq> very impressive, he wrote (much of or everything? hm ok not the existent fortran libs nor based langs) Mathematica 1.0, coming from his SMP, himself
[06:00:01] <rotateq> hayley: right! they claim "we have everything you need in best possible version"
[06:02:33] <rotateq> so to lastly be ontopic with it, maybe when building new things, we can learn from this too and improve it
[06:05:34] <rotateq> and no it hasn't, they have put much know-how into all things over the years
[06:09:32] <jcowan> you want ({drop,take}-{left,right} list n)
[06:11:29] <rotateq> oh do i? :D
[06:11:42] <rotateq> maybe in Haskell such constructs
[06:13:57] <jcowan> Scheme has them too
[06:15:04] <jcowan> https://github.com/scheme-requests-for-implementation/srfi-1/blob/master/srfi-1-reference.scm
[06:15:33] <jcowan> you'd need to modify that if you want portable code
[06:15:39] <rotateq> yes and i read that this newLISP uses define-macro to make them
[06:15:42] <rotateq> yes
[06:17:12] <jcowan> but since almost every CL has tail recursion (if not general tail calling) then it's just a matter of respelling define as defun, etc.
[06:17:27] <hayley> "new", uses dynamic scoping by default
[06:19:46] <rotateq> ah so tail calling is an improvement for tail recursion?
[06:21:49] * edgar-rft calls you all tails
[06:23:43] <rotateq> edgar-rft: Sakrileg!
[06:24:50] <Bike> rotateq: i've done some experiments with including fexprs in a compiled language, but it's entirely a pain in the ass, and I don't think it would be an improvement over macros in very many cases.
[06:24:59] <Bike> they are indeed orthogonal to the surface syntax
[06:26:01] *** Joins: ajoberstar (~user@97-116-72-197.mpls.qwest.net)
[06:27:42] <rotateq> oh cool, what didn't you do? :) i see you in so many great projects on github
[06:28:28] *** Quits: Oladon (~olad@98.43.81.226) (Read error: Connection reset by peer)
[06:30:04] <drakonis> rotateq: iirc take what wolfram says with a grain of salt
[06:30:34] <Bike> well, i didn't finish it, for one thing
[06:30:54] <drakonis> i'd be surprised if he did everything by himself
[06:31:15] <drakonis> as he's known for taking credit for things he hasn't built
[06:31:35] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[06:36:00] <Nilby> I don't how to measure advancedness, but I do know how to measure scientific arrogance, and the unit is the "wolfram" and Mathematica is at about by 37 kiloWolframs by now, which is quite a lot.
[06:36:20] <hayley> I thought arrogance was measured in nano-Dijkstras.
[06:36:57] <Nilby> that's a much smaller scale i think
[06:37:12] <drakonis> nah, wolfram is significantly more arrogant than dijsktra
[06:38:08] <rotateq> drakonis: i like much of his writings and he had much success since from 30 years now
[06:38:29] <drakonis> success built off other people's work though
[06:39:35] <hayley> Well, Wolfram didn't take the offer of using beach's term rewriting compiler, so he can't be that clever.
[06:39:43] <hayley> ("he" being Wolfram)
[06:39:49] <rotateq> and sure, not everything. but the blog article about Schoonschip and nobel prize laureate Martinus Veltman was interesting read. Veltman insisted on writing it in assembly
[06:41:04] <Nilby> unfortunately, his recent physics stuff is closer than most people think, and if people like stylewarning and friends don't realize they're reverse engineering qm into lambda calculus soon, wolfram & co might stumble into it
[06:41:07] <rotateq> oh yes, i think there are so many way more impressive people work for Wolfram Research, just take Oleg Marichev (the author of the five books on sum and integral tables), he did much work so that Mathematica can solve way more integrals
[06:41:40] <rotateq> but okay, when you work at a company they may be allowed to steal your ideas and make billions
[06:42:13] <rotateq> Nilby: oh cool point
[06:42:48] <rotateq> hayley: surely not beach who you meant :) and they corresponded some time?
[06:43:17] <hayley> I forgot the story.
[06:43:25] <rotateq> he could also have written mathematica in lisp, but then just fake symbolity
[06:43:36] <rotateq> no problem, maybe i ask him directly
[06:43:38] <stylewarning> #commonlisp more like #crackpotlisp
[06:44:47] *** Joins: Lycurgus (~juan@98.4.112.204)
[06:44:52] <Xach> Hmm, anyone know more about Harmonix and Lisp?
[06:45:08] <semz> The crackpot is implicit in the Lisp part
[06:45:09] <Xach> I seem to remember at least one CL guy who worked there but I don't know if he did Lisp there.
[06:45:43] <rotateq> ohai stylewarning :) hope the qubits still flip around
[06:46:07] <stylewarning> electrons are definitely bumping
[06:46:16] <rotateq> Xach: hm what is Harmonix?
[06:46:21] <semz> rotateq: If you wait another hour, you'll probably be able to ask beach himself.
[06:46:26] <drakonis> is harmonix as in the people that made rock band?
[06:46:51] <Lycurgus> game maker among many other uses of name
[06:47:05] <hayley> I recall one Wolfram article which went off on Macsyma on Maclisp running on giant timeshared PDP-10s, whereas Mathematica(?) on C ran on a small PC. Never mind the, well, pretty large change in hardware performance.
[06:47:09] <Lycurgus> s/maker/shop/
[06:47:17] <jcowan> rotateq: when foo calls foo in tail position, that's tail recursion.  When foo calls bar, that's general ("proper") tail calling.
[06:47:24] <rotateq> stylewarning: I remembered this funny thing from Feynman's auto biography, when his advisor Wheeler called and said "Feynman, I now know why all electrons are the same! They ARE all the same traveling through time and space."
[06:47:53] <stylewarning> The One Electron Universe (TM)
[06:48:00] <rotateq> but should read many parts in the real lectures again the next two years to fresh up my physics too
[06:48:24] <rotateq> stylewarning: and i think this "The Egg" story may have been inspired by it.
[06:49:01] * hayley goes searching for the article
[06:49:18] *** Quits: Catie (~user@user/catie) (Quit: going home)
[06:49:44] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:50:19] <rotateq> semz: yes he's mostly up around 5AM European middle time
[06:51:02] <rotateq> jcowan: thanks :)
[06:52:05] <hayley> I can't find it now, but I swear someone said some crap like that. Mathematica was released in 1988, which would mean there was literally a 20-year gap in hardware in such a comparison.
[06:52:11] <rotateq> no problem
[06:52:35] <rotateq> but I should sleep, it's now 4:23am here ∘.○
[06:53:36] <hayley> ...apparently the first version was for the Macintosh, so if you had money I guess you'd have a 68030 by then?
[06:54:27] <hayley> (Somewhat amusing is that the 68000 was just used as a "front end processor" which played a part of booting a Lisp machine.)
[06:56:25] <stylewarning> i have a box of like 1-5 FEPs
[06:56:27] <rotateq> :)
[06:56:30] <stylewarning> 15 *
[06:56:52] <rotateq> You also own a lisp machine, don't you?
[06:57:04] <Guest74> rotateq: I believe Harmonix is the bard.
[06:57:10] <rotateq> hmm
[06:57:13] <stylewarning> i have 2 3650 2 3620 a macivory and a micro explorer
[06:57:19] <rotateq> from Asterix? ^^
[06:57:26] <stylewarning> and a ton of spare parts, keyboards, monitors, etc
[06:57:27] <rotateq> oh wow
[06:57:43] <rotateq> maybe also an extra room for all that :D
[06:57:53] <stylewarning> my guest room is full of it
[06:57:53] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[06:58:07] <stylewarning> poor guests have to sleep in this literal rats nest of lisp machine ephemera
[06:58:12] <rotateq> haha so guests can sleep on them and it's warm
[06:58:47] <hayley> Oh, I found the comment, and it was from some rando, not anyone from Wolfram. But it's hilarious to me.
[06:59:06] <hayley> "This announcement knocked my socks off. I recall MIT-MC, the multimillion-dollar DEC PDP-10 that ran Macsyma in the late 1970s. It was a scarce resource; labs from all over the world would pay tens of thousands of dollars per year to access the symbolic computation engine. Today, a far more-capable engine is available on a $50 computer."
[06:59:17] <hayley> Sure, you only had...er....45 years of hardware improvements there too, buddy.
[06:59:36] <rotateq> nice
[06:59:45] <Nilby> wolfram was trying to complete with macsyma and first wrote a thing called smp and got mad when the universiy said they owned it, so he quit and re-wrote it as mathematica, running on a tiny mac
[07:00:37] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[07:00:56] <Nilby> but of course there was cool things on MCL, spawning xcode and CCL
[07:01:11] <hayley> (Well, the PDP-10 was first sold 1968, the Pi 1 was first sold 2012, but with old CPUs Broadcom basically didn't want to throw out...but you get the idea, no?)
[07:01:16] <Nilby> and yes I am a crackpot :)
[07:01:20] <stylewarning> wolfram had a contest to try to decrypt or unlock a copy of SMP
[07:01:33] <stylewarning> this was ca 5-10y ago
[07:01:50] <Nilby> heh, he's still mad about it
[07:02:01] <rotateq> Nilby: i still like the 1988 video with him where he shows everything
[07:02:03] <hayley> Did anyone decrypt it?
[07:02:09] <stylewarning> AFAIK no
[07:02:28] <stylewarning> but you have to engage and sign agreements and whatever
[07:02:58] <hayley> Wait, they had the contest because they didn't have an unencrypted copy?
[07:03:03] *** Joins: ldb (~user@user/ldb)
[07:03:07] <rotateq> and now the S-Combinator challenge
[07:03:52] <Nilby> but sometimes good things come from people being mad universities and quiting to re-write some famous software
[07:03:57] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[07:04:09] <drakonis> yes...
[07:04:10] <rotateq> hui
[07:04:12] <drakonis> lots of things
[07:04:25] <ldb> It seems wolfram needs GPL
[07:04:52] <rotateq> Nilby: oh yes, very true. escaping too academic and elitary systems
[07:05:06] <rotateq> ldb: but all the money!
[07:05:06] <hayley> stylewarning: I saw someone selling a "retro computer kit" with a 68000 included. Well, that covers the FEP, but what about the rest of the machine?
[07:05:19] *** Joins: Bike (~Bike@71.69.170.70)
[07:05:19] *** ChanServ sets mode: +o Bike
[07:06:52] <rotateq> hayley: can you please say what FEP means in this context? sry
[07:07:14] <Nilby> Front End Processor
[07:07:21] <rotateq> oki thank you
[07:08:30] <ldb> and the FPU?
[07:09:23] <rotateq> front processor unit?
[07:11:02] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Ping timeout: 240 seconds)
[07:11:16] *** Quits: ajoberstar (~user@97-116-72-197.mpls.qwest.net) (Remote host closed the connection)
[07:11:32] *** Joins: ajoberstar (~user@97-116-72-197.mpls.qwest.net)
[07:12:02] <ldb> rotateq: that's floating point unit
[07:12:20] *** Quits: ajoberstar (~user@97-116-72-197.mpls.qwest.net) (Client Quit)
[07:12:40] <rotateq> aha!
[07:13:58] <rotateq> that was what Veltman also suggests for using assembly in computer algebra, that floating point ops are fasta. but physics also lives heavily from symbolic calculation
[07:14:28] <rotateq> okay, it was another time (or not?)
[07:15:36] <rotateq> stylewarning: hm iirc i should go on and install gfortran on my new machine, so i can finally compile/load the qvm and try playing with it :)
[07:18:43] <Guest74> rotateq: I have to admit I was incorrect.
[07:19:53] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 268 seconds)
[07:19:57] <stylewarning> rotateq: I don't think gfortran is needed with latest master
[07:20:32] <stylewarning> (I might be wrong; I have it installed all the time)
[07:21:11] <stylewarning> But we refactored MAGICL to not need that stuff necessarily https://github.com/quil-lang/magicl#requirements
[07:21:17] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:23:47] <rotateq> okay I don't remember what it let fail the last time i tried, but I want understand some day how this and quilc really works and does its impressive magic, so high respect for you people at rigetti
[07:26:24] <rotateq> hm i wonder if some maybe verbose (from APL view point) things in magicl can also replaced and made shorter with april, even when april becomes in some more things superior over the dyalog overoptimized implementation
[07:27:06] *** Quits: jealousmonk (~user@2804:431:e7c4:c1f0:2b8b:886e:308:fb5c) (Quit: sleep)
[07:30:51] <beach> Good morning everyone!
[07:31:30] <Nilby> the lisp around the old fortran is both funny and sad. there must be a more palatable way
[07:34:31] <rotateq> Hello beach, don't worry, that bit offtopic may now be over. But of course interesting too.
[07:35:54] <ldb> weird, cl-cpus::*number-of-processors* is 0 on OS X
[07:38:38] <ldb> ah, they hardcoded sysctl name constants, and assumed OS X has the same constant as BSD
[07:39:06] <rotateq> beach: Did you correspond at some point with Stephen Wolfram in the past?
[07:39:45] *** Quits: saturn2 (~visitant@user/clone-of-saturn/x-1551297) (Ping timeout: 250 seconds)
[07:40:24] <rotateq> ldb: maybe OS X is so well designed as they often claim, it can also run multithreaded on 0 cores
[07:40:24] <beach> No, hayley forgot the details.  It was not *my* term rewrite system, it was that of my thesis advisor, and he was the one doing the communication before I got involved.  But I wrote the compiler for that term rewriting system, something nobody had done before.
[07:40:46] <rotateq> Okay, sure also some days ago. :)
[07:46:48] <rotateq> I maybe wasn't even born nor thought of at that time.
[07:47:37] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[07:48:38] <beach> I started my dissertation in 1983.
[07:49:55] <rotateq> okay then 11 years before i was crafted :)
[07:50:33] <rotateq> you was deeply into lisp at that time, right?
[07:50:39] <rotateq> *were
[07:51:55] <beach> Yes.  I wrote the compiler for the rewrite system in Franz Lisp (not to be confused with Allegro Common Lisp).
[07:52:06] <beach> It generated VAX assembler.
[07:52:16] <rotateq> I wouldn't have confused it. :)
[07:52:27] <beach> Good. :)
[07:52:28] <rotateq> hui okay
[07:53:30] <rotateq> but I learned this year that FranzInc is named after the hungary componist, I like some of his music
[07:53:49] <hayley> beach: Thanks for the clarification.
[07:54:03] <beach> Yes, Franz Lisp is a pun on Franz Liszt.
[07:54:07] <rotateq> Franz Liszt
[07:54:21] <rotateq> ah yes you were faster
[07:59:56] *** Quits: semz (~none@user/semz) (Ping timeout: 245 seconds)
[08:03:16] *** Joins: karlosz (~karlosz@47.151.136.69)
[08:03:40] *** Joins: notzmv (~zmv@user/notzmv)
[08:03:42] <rotateq> so CL was at that time heavily influenced by Maclisp, Zetalisp and others, right?
[08:04:03] <rotateq> or Interlisp and your mentioned Franz Lisp
[08:06:23] <beach> Right.  I don't think Franz Lisp had any influence on Common Lisp.  Franz Lisp was mostly like Maclisp.  It was specifically written for Unix as I recall.
[08:08:19] <rotateq> okay I have no idea, but am interested in those history details. one book of Herbert Stoyan I found some weeks ago from around 1980 covers over 100 pages just LISP history :)
[08:08:40] <beach> Yeah, it's fascinating.
[08:12:50] *** Joins: semz (~none@user/semz)
[08:16:48] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[08:21:37] <rotateq> Can I pass a lambda-expression directly inside a SATISFIES with DEFTYPE?
[08:21:52] <ldb> yes
[08:22:29] <rotateq> can you give me a simple example? and then how to correctly handle (optional) type parameters
[08:23:14] <beach> clhs satisfies
[08:23:14] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/t_satisf.htm
[08:23:33] <beach> It has to be a symbol.
[08:24:05] <beach> "lambda expressions are not allowed"
[08:24:22] <rotateq> oh hm okay
[08:24:28] <ldb> oh, i thought that's argument list
[08:25:07] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[08:28:00] *** Joins: clone_of_saturn (~visitant@user/clone-of-saturn/x-1551297)
[08:28:14] <rotateq> and which additional type specifiers I remember are defined by default are: satisfies, mod, eql, complement, and, or, not; which did i miss?
[08:28:24] *** clone_of_saturn is now known as saturn2
[08:28:27] <rotateq> member
[08:31:46] <beach> clhs 4.2.3
[08:31:47] <specbot> Type Specifiers: http://www.lispworks.com/reference/HyperSpec/Body/04_bc.htm
[08:32:04] <beach> COMPLEMENT is not one.
[08:32:11] <rotateq> stylewarning: okay it was about some libffi thingy so file it can't find on my machine, not gfortran
[08:32:47] <rotateq> beach: oh! so good i asked, or should have asked "which of those did i remember correctly?"
[08:33:48] <rotateq> And what is needed for writing efficienty TYPEPs?
[08:35:07] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 268 seconds)
[08:35:35] <beach> An implementation that recognizes a call to TYPEP with a quoted type specifier and handles it efficiently.
[08:35:50] <rotateq> mysterious :)
[08:36:26] <rotateq> better maybe: how do you approach it in SICL?
[08:36:51] <beach> You would want your implementation to turn (TYPEP ... 'CONS) into (CONSP ...) for instance.
[08:36:57] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[08:37:54] <rotateq> yes, so with a compiler-macro?
[08:38:07] <beach> Possibly.  Or have the compiler handle it specially.
[08:39:27] <rotateq> I see. Like when SBCL for example sees an addition with two arguments and calls #'sb-impl::two-arg-+ on those.
[08:39:34] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:40:10] <rotateq> Or as is in heisigs fast-generic-functions the example with first binary-add and the reducing more arguments with that.
[08:41:29] <saturn2> you can consider the second argument to TYPEP as a little programming language which you compile into lisp
[08:42:57] <rotateq> hmm ok
[08:52:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:56:52] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:59:16] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:02:03] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[09:12:05] *** Joins: samebchase (~samebchas@51.15.68.182)
[09:19:30] *** Quits: saturn2 (~visitant@user/clone-of-saturn/x-1551297) (Quit: WeeChat 1.0.1)
[09:20:40] *** Joins: clone_of_saturn (~visitant@user/clone-of-saturn/x-1551297)
[09:20:49] *** clone_of_saturn is now known as saturn2
[09:48:46] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[09:53:10] <ldb> Well I pushed a PR to cl-cpus to fix problem on OS X
[09:54:03] <ldb> but I think april also need a fix, it might be to confident to assume everyone gets 2+ CPU cores.
[09:56:42] <ldb> ah, my version seems outdated, the master branch on github uses shell command now.
[09:57:47] *** Quits: ldb (~user@user/ldb) (Remote host closed the connection)
[09:58:55] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:04:05] *** Joins: opalvaults[m] (~opalvault@2001:470:69fc:105::1:51f6)
[10:06:17] *** Joins: ldb (~user@user/ldb)
[10:10:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[10:15:36] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[10:15:51] *** Joins: s-liao (~s-liao@101.86.96.21)
[10:24:28] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[10:25:20] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[10:28:47] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[10:34:22] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[11:28:29] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[11:40:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[11:51:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:56:42] *** Joins: pve (~pve@178-55-234-16.bb.dnainternet.fi)
[11:59:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:59:16] *** Quits: lisp123 (~lisp123@5.30.23.247) (Read error: Connection reset by peer)
[12:03:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:1e71:dc8c:d2fa:3d7e) (Ping timeout: 252 seconds)
[12:03:18] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:04:47] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:995c:e86e:470c:8a37)
[12:10:51] *** Quits: Jing (~hedgehog@2604:a840:3::103e) (Remote host closed the connection)
[12:11:28] *** Joins: Jing (~hedgehog@125.105.142.62)
[12:13:41] *** Joins: paule32 (~paule32@user/paule32)
[12:19:35] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[12:27:01] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[12:30:42] *** Joins: shka (~herr@109.231.0.226)
[12:31:51] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Client Quit)
[12:32:10] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[12:32:30] *** Joins: gaqwas (~john@dynamic-095-115-039-070.95.115.pool.telefonica.de)
[12:38:28] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[12:54:32] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[12:56:08] *** Joins: Jing_ (~hedgehog@2604:a840:3::103e)
[12:57:32] *** Quits: Jing (~hedgehog@125.105.142.62) (Read error: Connection reset by peer)
[13:12:17] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[13:18:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[13:19:14] *** Joins: Colt (~Colt@user/colt)
[13:30:14] *** Joins: unixlisp (~unixlisp@2409:8a3c:5406:7be0:fe08:4aff:fe66:ec11)
[13:32:55] *** Parts: unixlisp (~unixlisp@2409:8a3c:5406:7be0:fe08:4aff:fe66:ec11) ()
[13:47:12] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:47:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:48:29] *** Lord_of_Life_ is now known as Lord_of_Life
[13:54:41] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[13:58:58] *** Joins: makomo (~makomo@user/makomo)
[14:03:33] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[14:17:43] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[14:47:43] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.3)
[14:51:07] *** Quits: hugo (znc@verdigris.lysator.liu.se) (Quit: ZNC 1.8.2 - https://znc.in)
[14:51:57] *** Joins: cage (~cage@dynamic-adsl-84-220-217-231.clienti.tiscali.it)
[14:53:04] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[14:59:51] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[15:00:36] <scymtym> Nilby: i will need a bit more time. i'm testing everything in a container to ensure i'm not missing any dependencies or untracked local files
[15:10:37] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[15:11:00] *** Joins: amb007 (~a_bakic@243.149.22.93.rev.sfr.net)
[15:12:57] *** Quits: amb007 (~a_bakic@243.149.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:14:13] *** Joins: s-liao (~s-liao@101.86.96.21)
[15:14:47] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[15:33:36] <edgar-rft> I hope you're not talking about a trash container
[15:34:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[15:35:43] <scymtym> docker container
[15:37:58] *** Joins: Alfr (~Alfr@user/alfr)
[15:38:32] <edgar-rft> that's close :-)
[15:44:39] *** Quits: raeda (~raeda@72.49.249.241) (Ping timeout: 250 seconds)
[15:45:58] *** Joins: rito_ (~rito_gh@45.112.243.172)
[15:48:22] <scymtym> see, that's why i didn't say it in the first place
[15:53:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[15:53:34] *** Joins: tfb (~tfb@88.98.95.237)
[16:07:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:09:13] *** Joins: treflip (~user@user/treflip)
[16:16:55] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 250 seconds)
[16:21:30] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[16:22:33] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[16:31:49] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:31:58] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:48:34] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Quit: KvL)
[17:08:07] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:15:40] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[17:20:24] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[17:24:38] *** Joins: raeda (~raeda@74.215.109.33)
[17:26:17] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[17:26:50] *** Joins: amb007 (~a_bakic@243.149.22.93.rev.sfr.net)
[17:29:04] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[17:29:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[17:30:39] <Nilby> scymtym: No worries. Take your time. You've done a lot of amazing work.
[17:32:46] <scymtym> Nilby: thanks. i almost have a reproducible description (with a little help from jackdaniel an the McCLIM side)
[17:38:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:49:08] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f)
[17:58:54] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[17:59:14] <Xach> Hmm, something with named-readtables seems to be different today
[17:59:31] <Xach> I don't understand some of the failures in http://report.quicklisp.org/2021-12-18/failure-report.html
[18:00:02] *** Joins: VincentVega (~user@212.97.1.43)
[18:01:32] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f) (Ping timeout: 240 seconds)
[18:04:07] <scymtym> Xach: dougk has been tweaking symbols and packages lately. maybe an SBCL bug?
[18:04:28] <VincentVega> Does trivia have optional elements? Thinking like (list (maybe a :default 1) b) which would match both '(0) and '(1 0).
[18:05:51] <VincentVega> Quite annoying that I have to repeat the whole pattern at the moment.
[18:07:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:07:34] *** Joins: s-liao (~s-liao@101.86.96.21)
[18:07:37] *** Quits: amb007 (~a_bakic@243.149.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[18:07:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[18:08:16] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 245 seconds)
[18:09:29] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[18:14:58] *** Joins: igemnace (~ian@user/igemnace)
[18:25:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[18:32:40] <Xach> scymtym: i am not using cutting-edge sbcl and haven't updated recently
[18:38:17] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[18:39:37] *** Joins: amb007 (~a_bakic@243.149.22.93.rev.sfr.net)
[18:39:46] <scymtym> Xach: i see. your report said SBCL 2.1.10.195-bca540cd6 which i thought equated master, but i guess 195 is actually too low for that
[18:46:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:04:57] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[19:05:18] *** Joins: Bike (~Bike@71.69.170.70)
[19:05:18] *** ChanServ sets mode: +o Bike
[19:05:20] *** Quits: amb007 (~a_bakic@243.149.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[19:05:45] *** Joins: amb007 (~a_bakic@180.36.22.93.rev.sfr.net)
[19:07:09] *** Joins: cosimone (~user@93-34-133-159.ip49.fastwebnet.it)
[19:10:37] *** Quits: frodef_ (~frode@46.212.93.4) (Ping timeout: 240 seconds)
[19:10:37] <etimmons> Xach: Looking at fof's code, I don't see it declare a dependency on named-readtables at all. It was probably relying on one of its deps to load it, but then that dep stopped doing it.
[19:11:59] *** Joins: frodef (~frode@46.212.93.4)
[19:14:21] *** Quits: cosimone (~user@93-34-133-159.ip49.fastwebnet.it) (Remote host closed the connection)
[19:14:57] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:16:57] *** Quits: amb007 (~a_bakic@180.36.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[19:17:01] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:b9e6:e327:def5:4f06)
[19:17:39] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ee:e8ad:88a8:5c2d:25dd:e8a0)
[19:17:58] *** Joins: amb007 (~a_bakic@99.14.23.93.rev.sfr.net)
[19:19:38] *** Joins: frodef_ (~frode@46.212.93.4)
[19:20:17] *** Quits: frodef (~frode@46.212.93.4) (Ping timeout: 240 seconds)
[19:21:57] *** Quits: amb007 (~a_bakic@99.14.23.93.rev.sfr.net) (Ping timeout: 240 seconds)
[19:22:01] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:b9e6:e327:def5:4f06) (Ping timeout: 268 seconds)
[19:22:38] *** Joins: amb007 (~a_bakic@241.15.23.93.rev.sfr.net)
[19:25:04] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:28:16] *** Joins: frodef (~frode@46.212.93.4)
[19:28:17] *** Quits: frodef_ (~frode@46.212.93.4) (Ping timeout: 240 seconds)
[19:42:25] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Remote host closed the connection)
[19:43:16] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[19:43:52] *** Joins: lisp123_ (~lisp123@45.86.202.12)
[19:47:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[19:48:59] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[19:49:48] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) ()
[19:50:29] *** Joins: frodef_ (~frode@46.212.93.4)
[19:50:57] *** Quits: frodef (~frode@46.212.93.4) (Ping timeout: 240 seconds)
[20:05:37] *** Joins: lagash (lagash@lagash.shelltalk.net)
[20:09:31] <Xach> uh oh
[20:10:29] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[20:14:16] <beach> Xach: ?
[20:15:05] <Xach> beach: undeclared dependencies are bad
[20:15:43] <beach> Indeed.
[20:15:44] <Xach> it has happened for fof apparently
[20:18:28] <beach> Yes, I see.
[20:32:03] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10e2:6974:88a8:5c2d:25dd:e8a0)
[20:34:54] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[20:35:24] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ee:e8ad:88a8:5c2d:25dd:e8a0) (Ping timeout: 268 seconds)
[20:52:13] *** Quits: lisp123_ (~lisp123@45.86.202.12) (Remote host closed the connection)
[20:53:17] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[20:53:22] <ori> how do i write a loop in which the loop variable is set to the result of a function call? here's what I'm trying to do, in python: https://dpaste.org/J8qq. How would I express that in idiomatic lisp?
[20:53:46] *** Joins: random-nick (~random-ni@87.116.181.93)
[20:57:04] <mfiano> the FOR keyword will accomplish that
[21:02:45] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[21:03:27] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:03:52] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[21:22:56] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:53:37] *** Joins: lisp123 (~lisp123@45.86.202.12)
[21:55:42] <pjb> ori: (loop :for result := (function-call))
[21:57:57] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
[22:04:01] *** Quits: amb007 (~a_bakic@241.15.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[22:05:46] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:08:49] *** Joins: srhm (~srhm@user/srhm)
[22:12:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:17:45] *** Joins: Nel (~Nel@172-222-135-071.res.spectrum.com)
[22:18:25] *** Quits: Nel (~Nel@172-222-135-071.res.spectrum.com) (Client Quit)
[22:19:37] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[22:25:12] <jeosol> Good mornings guys
[22:25:40] <jeosol> Xach: Hi, I remember you have a S3 related CL library
[22:28:47] <jeosol> Is anyone using S3 to save objects using, e.g., cl-store library?
[22:29:09] *** Quits: treflip (~user@user/treflip) (Quit: good night ✨)
[22:30:40] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:33:48] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10e2:6974:88a8:5c2d:25dd:e8a0) (Ping timeout: 268 seconds)
[22:34:37] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[22:36:22] *** Joins: ajoberstar (~user@97-116-72-197.mpls.qwest.net)
[22:41:11] *** Joins: Josh_2 (~user@37.25.47.130)
[22:41:25] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[22:41:59] <Josh_2> Hi. bknr signals a warning when you use change-persistent-class, Is there a way I can suppress this warning?
[22:42:03] <Josh_2> I am using sbcl
[22:43:19] <Josh_2> Oh I can probably use ignore-errors
[22:43:52] *** Joins: manj-gnome (~manjaro-g@65.206.51.7)
[22:44:05] <Josh_2> Yes I can
[22:44:08] <Josh_2> silly me
[22:46:21] <_73> is there anyway to essentially create a union type where a value of this type has to be a member of some set of symbols?
[22:46:49] <_73> err forget that I mentioned union type.
[22:48:15] <pjb> or what?
[22:48:25] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:50:14] <manj-gnome> Any online "meetups" covering Common Lisp other than the one run by Atlanta Functional Programming (AtlantaFP)?
[22:50:18] <_73> sorry ignore me
[22:50:44] <pjb> _73: (deftype union-integer-or-enum () `(or integer (member foo bar baz)))
[22:51:11] <_73> that is exactly what I meant thanks
[22:51:50] *** Quits: srhm (~srhm@user/srhm) (Remote host closed the connection)
[22:52:27] *** Joins: srhm (~srhm@user/srhm)
[22:53:55] *** Joins: lisp123 (~lisp123@45.86.202.12)
[22:56:28] *** Quits: srhm (~srhm@user/srhm) (Remote host closed the connection)
[22:57:01] *** Joins: srhm (~srhm@user/srhm)
[22:58:28] <mfiano> manj-gnome: Yes, OLM: https://www.youtube.com/c/OnlineLispMeetings/videos
[22:59:10] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 260 seconds)
[22:59:43] <manj-gnome> @mfiano Thanks! Any others?
[23:00:17] <mfiano> Not anymore that I can recall
[23:04:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[23:06:48] *** Quits: rito_ (~rito_gh@45.112.243.172) (Quit: Leaving)
[23:08:28] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[23:13:32] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[23:14:26] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[23:22:38] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:22:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[23:23:13] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[23:23:42] *** Joins: srhm (~srhm@user/srhm)
[23:30:31] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 268 seconds)
[23:34:30] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[23:39:06] *** Joins: marcoxa (~user@77-57-64-215.dclient.hispeed.ch)
[23:44:09] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[23:45:17] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 240 seconds)
[23:45:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:45:59] *** Quits: sloanr (~user@70-59-70-189.mpls.qwest.net) (Remote host closed the connection)
[23:46:12] *** Joins: sloanr (~user@70-59-70-189.mpls.qwest.net)
[23:49:42] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[23:50:01] *** Joins: theothornhill (~user@2a02:2121:10e:e5e5:734f:319f:fb37:bad)
[23:54:18] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Client Quit)
[23:55:28] *** Joins: lisp123 (~lisp123@45.86.202.12)
[23:59:57] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
