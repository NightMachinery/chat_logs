[00:00:32] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:01:04] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[00:01:16] *** Quits: AtomicInteger (~primamate@82.102.16.147) (Quit: WeeChat 3.3)
[00:02:17] *** Joins: Moyst_ (~moyst@user/moyst)
[00:06:40] *** Quits: vats (~vats@103.158.91.123) (Ping timeout: 260 seconds)
[00:06:54] *** Joins: kogepan (~kogepan@user/kogepan)
[00:10:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:12:12] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[00:13:32] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:13:51] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Ping timeout: 276 seconds)
[00:14:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[00:15:33] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:16:14] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:20:18] *** Quits: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5) (Quit: Leaving)
[00:21:07] *** Joins: pavonia (~user@user/siracusa)
[00:21:45] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[00:23:21] *** Joins: Naan (~Naan@user/naan)
[00:26:45] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:27:26] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:28:53] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:30:35] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:30:46] *** Quits: zeromule (~eric@2601:602:8d80:4e50:f8a9:4a37:45d7:6705) (Ping timeout: 245 seconds)
[00:31:00] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:31:52] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:34:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:34:29] <ThePendulum> webpack's raw-loader I suppose
[00:34:56] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Ping timeout: 245 seconds)
[00:35:18] <ThePendulum> what needs to run it?
[00:37:04] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:38:22] *** Joins: alystair (~alystair@user/alystair)
[00:39:01] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[00:39:14] *** Joins: snedd (~snedd@86.14.114.137)
[00:39:30] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:40:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[00:40:50] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[00:40:52] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[00:41:31] *** Quits: snedd (~snedd@86.14.114.137) (Client Quit)
[00:43:41] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[00:44:34] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:45:08] <austincheney> paule32, let me see how I can help
[00:46:01] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[00:46:28] <austincheney> paule32, document.getElementsByTagName("section"); // returns a node list to loop through
[00:47:29] <austincheney> paule32, document.getElementsByTagName("detaileddescript").getElementsByTagName("section")[0];
[00:49:03] <austincheney> paule32, or you can use this logic: https://github.com/prettydiff/share-file-systems/blob/master/lib/browser/dom.ts  It features a get elementsByText method and a getElementsByAttribute method.
[00:49:22] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:51:35] *** Joins: Naan` (~Naan@user/naan)
[00:53:48] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:54:47] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[00:55:07] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[00:57:44] <paule32> thx austincheney
[00:58:02] <paule32> i had think of a xml solution
[00:58:10] <paule32> with xslt template
[00:58:16] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 245 seconds)
[00:59:03] <austincheney> so the DOM works the same for XML and HTML
[00:59:20] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:59:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[00:59:32] <austincheney> so long as browsers continue to support XML anyways
[00:59:44] *** Joins: g00fy78 (~g00fy@user/g00fy)
[01:01:11] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[01:01:48] <paule32> can i provide a zip archive ?
[01:01:57] <paule32> so, you can look, what i need ?
[01:01:58] *** Joins: Moyst_ (~moyst@user/moyst)
[01:04:03] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[01:04:31] <austincheney> paule32, i recommend posting code to one of those code paste sites
[01:04:37] <austincheney> like gist.github.com
[01:04:48] *** Joins: audiobirb (~audio@user/audio)
[01:06:12] <austincheney> paule32, I presume you already have this, but you must use an HTML namespace to execute JavaScript logic from an HTML script tag in an xml document: https://stackoverflow.com/questions/384639/how-to-include-javascript-in-xml-document
[01:06:29] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[01:06:32] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Remote host closed the connection)
[01:06:38] <paule32> https://dpaste.com/5LFF9VTZG
[01:06:59] <austincheney> I can see the code, so what exactly do you need to access?
[01:07:53] <austincheney> code like "<br></br>" can be written as "<br/>"
[01:08:03] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[01:08:13] *** Joins: g00fy78 (~g00fy@user/g00fy)
[01:08:18] *** Joins: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net)
[01:08:44] <paule32> line 134, ii would like extract the contents of detaileddescription AND simplesect
[01:08:59] <paule32> then i would like to display it (by browser)
[01:10:21] *** Joins: zeromule (~eric@2601:602:8d80:4e50:f8a9:4a37:45d7:6705)
[01:10:40] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:10:40] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:10:40] *** Joins: wroathe (~wroathe@user/wroathe)
[01:12:07] <austincheney> also, to toy around with xml in a HTML webpage you can load the xml in as a string and parse it with a domParser: https://developer.mozilla.org/en-US/docs/Web/API/DOMParser
[01:12:15] *** Parts: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net) ()
[01:12:15] *** Joins: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net)
[01:12:49] <paule32> i need xslt
[01:14:05] *** Parts: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net) ()
[01:14:05] *** Joins: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net)
[01:14:14] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:14:55] *** Parts: Jar2D2 (~Jar2D2@75.97.200.138.res-cmts.haw.ptd.net) ()
[01:16:12] *** Joins: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu)
[01:20:31] *** Quits: pmercado (~pmercado@186.107.63.169) (Ping timeout: 256 seconds)
[01:20:46] <austincheney> paule32, I have no experience with xslt
[01:20:48] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[01:20:50] <austincheney> paule32, https://gist.github.com/prettydiff/973871a8d52becb436911f7827a63d8c
[01:21:28] <austincheney> that is my partial JS solution.  Copy and paste that into the browser console of the XML code in your browser and it will return a node list of 4 or 5 elements
[01:22:39] *** Quits: zeromule (~eric@2601:602:8d80:4e50:f8a9:4a37:45d7:6705) (Ping timeout: 250 seconds)
[01:22:47] <austincheney> actually it will work in the browser console of any page
[01:24:59] <austincheney> i have to go now.  I have to make a pot cake.  Its like a pancake, but its shaped like a large cake made in a rice cooker (pot)
[01:25:29] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:25:54] *** Joins: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net)
[01:31:02] *** Joins: zeromule (~eric@2601:602:8d80:4e50:35ba:f97c:b47c:ea40)
[01:31:33] *** Joins: Northwoods (~Northwood@2409:4055:4e16:37ef:2020:fb80:52a1:271c)
[01:32:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:33:53] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[01:35:14] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:38:16] *** Quits: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net) (Ping timeout: 245 seconds)
[01:40:37] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:41:02] *** Quits: Nimzowitsch_ (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[01:45:29] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:48:45] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:48:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:48:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:48:54] *** Joins: wroathe (~wroathe@user/wroathe)
[01:50:32] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[01:53:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:56:30] *** Joins: Supavisah (~Supavisah@user/supavisah)
[01:59:10] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:59:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:00:35] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:00:45] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[02:00:52] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:01:51] *** Joins: Moyst_ (~moyst@user/moyst)
[02:06:13] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (Excess Flood)
[02:06:31] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[02:07:52] *** Joins: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net)
[02:08:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:08:28] *** Joins: Marco89 (~Marco89@90.247.106.83)
[02:09:27] *** Quits: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com) (Ping timeout: 264 seconds)
[02:09:31] *** Quits: Northwoods (~Northwood@2409:4055:4e16:37ef:2020:fb80:52a1:271c) (Ping timeout: 245 seconds)
[02:09:32] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 240 seconds)
[02:09:47] *** Joins: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com)
[02:10:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 250 seconds)
[02:11:49] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[02:13:18] *** Quits: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net) (Changing host)
[02:13:18] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[02:14:32] *** Quits: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[02:15:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:17:48] *** Quits: CoderCharmander (~CoderChar@20014C4C1256300085DECD4F21A717FC.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[02:18:04] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[02:18:50] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:18:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:20:28] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[02:21:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:22:43] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 268 seconds)
[02:25:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:27:54] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[02:29:49] *** Quits: gagarin (~gaga@85.254.74.59) (Remote host closed the connection)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:06] *** Joins: gagarin (~gaga@85.254.74.59)
[02:30:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:54] *** Quits: pizdets_ (~pizdets@183.182.111.40) (Ping timeout: 250 seconds)
[02:33:33] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[02:33:59] *** Parts: ash_work1i (~ash_m@user/ash-m/x-3292451) ()
[02:34:09] *** Joins: pizdets (~pizdets@183.182.111.212)
[02:36:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:37:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:38:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:42:21] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[02:42:49] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[02:43:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[02:43:31] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:47:28] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[02:49:28] *** Parts: SuperRoach (~superroac@182-239-214-229.ip.adam.com.au) (Leaving)
[02:52:48] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:53:07] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:00:58] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[03:01:51] *** Quits: federico_it (~textual@151.51.80.240) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:50] *** Joins: Moyst_ (~moyst@user/moyst)
[03:06:32] *** Quits: sylario (uid115390@id-115390.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:08:05] *** Quits: Marco89 (~Marco89@90.247.106.83) (Quit: Client closed)
[03:11:38] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Remote host closed the connection)
[03:18:04] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[03:18:54] *** Quits: gagarin (~gaga@85.254.74.59) (Quit: Leaving)
[03:20:43] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[03:21:34] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Read error: Connection reset by peer)
[03:21:52] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:24:15] *** Joins: chao (~stenno@user/stenno)
[03:25:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:25:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:25:07] *** Joins: wroathe (~wroathe@user/wroathe)
[03:25:29] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd) (Ping timeout: 250 seconds)
[03:26:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[03:30:17] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[03:31:57] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:34:15] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[03:35:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:35:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1c81:fe4:5f02:4108) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:26] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[03:37:34] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:39:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:39:38] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Read error: Connection reset by peer)
[03:39:56] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:44:21] *** Quits: zeromule (~eric@2601:602:8d80:4e50:35ba:f97c:b47c:ea40) (Ping timeout: 250 seconds)
[03:44:39] *** Joins: nomic (~nomic@185.217.117.51)
[03:49:27] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[03:49:55] *** Joins: silly_ (~silly@user/silly)
[03:51:13] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:1173:f37b:b763:51ea)
[03:53:41] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[03:54:49] *** Joins: Moyst_ (~moyst@user/moyst)
[03:56:07] *** Quits: stevecam (~stevecam@user/stevecam) (Read error: Connection reset by peer)
[03:58:01] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[03:59:10] *** Joins: audiobirb (~audio@user/audio)
[04:05:47] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[04:06:23] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:07:32] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[04:08:45] *** Joins: default_ (~default@207.98.72.60)
[04:10:14] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:11:35] *** Quits: default_ (~default@207.98.72.60) (Client Quit)
[04:12:18] *** Joins: zebrag (~chris@user/zebrag)
[04:12:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:14:25] *** Quits: Supavisah (~Supavisah@user/supavisah) (Remote host closed the connection)
[04:15:03] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:16:08] *** Joins: zebrag (~chris@user/zebrag)
[04:24:45] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:28:29] <cthulchu> my wonderful folks, is there something that allows you to customize context menu in Chrome? On the browser level. I want to remove the view page source option. I never go there and I remember the shortcut. But I keep misclicking when inspecting stuff.
[04:30:01] *** Joins: zeromule (~eric@2601:602:8d80:4e50:4fa:9094:41dd:ff75)
[04:34:35] <hacks> maybe a custom browser extension. they have access to the browser.menus api
[04:34:42] *** Joins: zerothule (~eric@2601:602:8d80:4e50:7565:3c1f:2dac:8001)
[04:36:11] *** Quits: zeromule (~eric@2601:602:8d80:4e50:4fa:9094:41dd:ff75) (Ping timeout: 245 seconds)
[04:39:34] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:41:28] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 268 seconds)
[04:42:27] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:5411:75bf:6a43:df2a) (Ping timeout: 264 seconds)
[04:46:19] *** Joins: ferdna (~ferdna@user/ferdna)
[04:46:25] <cthulchu> yes, I see that they have. Well... At least, they can add stuff to it.
[04:46:33] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:46:41] <cthulchu> Hooooooowever! I can't find one that removes them, hehe
[04:46:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:47:13] <cthulchu> damn
[04:47:33] <cthulchu> on one hand, I don't wanna make an extension. On the other hand, what a great idea for an extension...
[04:52:03] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:53:58] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:54:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:55:41] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[04:57:35] <cthulchu> do chrome extensions share the same global scope?
[04:57:46] <cthulchu> nah, they're probably isolated
[04:59:43] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:00:35] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[05:01:07] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:01:31] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[05:01:47] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:02:59] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Quit: stewie925)
[05:03:04] *** Joins: Moyst_ (~moyst@user/moyst)
[05:03:20] <poiqwepoiqwe> quick one ... [[1,"id_string1"],[2,"id_string2"]] return id_string from min ... am i best to store an array of key:value pairs and perform min of the key and use it to access the value?
[05:05:38] *** Quits: gopar_ (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:06:53] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[05:10:55] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[05:11:54] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:13:26] *** Joins: EdFletcher (~PKD@user/edfletcher)
[05:14:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:15:42] <hacks> i would probably use array.reduce
[05:16:02] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[05:18:15] <hacks> you already show an array of key value pairs, you just have to iterate over it somehow and get the string that is paired with the smallest key value
[05:20:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:25:02] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[05:25:15] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:25:24] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 260 seconds)
[05:29:41] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:42:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[05:42:58] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:43:23] *** Joins: zebrag (~chris@user/zebrag)
[05:43:30] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[05:56:20] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[06:00:21] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 245 seconds)
[06:02:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:7565:3c1f:2dac:8001) (Ping timeout: 260 seconds)
[06:03:08] *** Joins: Moyst_ (~moyst@user/moyst)
[06:08:31] <cthulchu> so... looks like it's not possible
[06:08:54] <cthulchu> looks like Chrome does not have API to remove an item from context menu.
[06:09:07] <cthulchu> you can only remove items that you've added.
[06:12:58] *** Joins: pluri (~pluri@user/pluri)
[06:14:53] <poiqwepoiqwe> still stuck ... not in a good headspace so hoping someone can assist. https://bpa.st/TS7Q i want value from min key
[06:15:28] <poiqwepoiqwe> technically max key
[06:16:18] <poiqwepoiqwe> so I'm looking for a function that returns '7883cf60-2be1-4cf8-b80a-01f45a650c08' in the https://bpa.st/TS7Q example
[06:19:05] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) ()
[06:20:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:20:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:20:52] *** Joins: wroathe (~wroathe@user/wroathe)
[06:22:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[06:22:32] <ljharb> cthulchu: which is good, you'd be able to do tons of phishing attacks if you could
[06:22:46] <ljharb> cthulchu: and "view source" should never be removeable
[06:22:58] <cthulchu> it could be hidden behind an extension's API
[06:22:59] <ljharb> cthulchu: why are you clicking on the context menu anyways? right click and hit "i" for "inspect element"
[06:23:02] <cthulchu> not accessible from window
[06:23:19] <cthulchu> uh...
[06:23:33] <cthulchu> two mouse clicks are faster than one mouse click and one keyboard click
[06:24:00] <cthulchu> also, it doesn't work
[06:24:01] <cthulchu> lol
[06:24:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:25:05] <ljharb> cthulchu: lol what, no they're not
[06:25:16] <ljharb> cthulchu: one hand's always on the keyboard, the other's on the mouse, it's basically instant
[06:25:33] <cthulchu> maybe in your case
[06:25:36] <cthulchu> but it doesn't matter.
[06:25:39] <cthulchu> it doesn't work.
[06:25:46] <cthulchu> I just tried
[06:25:51] <cthulchu> hitting i does nothing
[06:25:55] <ljharb> oh hm, in chrome i need right click, i, enter
[06:26:05] <ljharb> works fine for me tho
[06:26:07] <cthulchu> oh, so now it's enter too
[06:26:11] <ljharb> yep, apparently
[06:26:15] <ljharb> i don't use chrome, i use safari ¯\_(ツ)_/¯
[06:26:22] <cthulchu> ah, makes sense
[06:26:28] <ljharb> in both tho, you can also right click, up arrow, and enter, because "inspect element" is always at the bottom
[06:26:34] <cthulchu> I don't like mac, PC doesn't have this feature
[06:26:45] <ljharb> ah nvm, safari requires enter too
[06:26:49] <ljharb> lol chrome is the same on mac or pc
[06:26:59] <cthulchu> context menu is not
[06:27:07] <cthulchu> it's partially controlled by the os
[06:27:09] <ljharb> arrow keys don't highlight up and down on it?
[06:27:13] <cthulchu> well, that navigation is
[06:27:21] <cthulchu> arrows work
[06:27:24] <cthulchu> i doesn't
[06:27:24] <ljharb> then enter will select it
[06:27:26] <ljharb> ok
[06:27:33] <ljharb> windows is dumb, no surprise
[06:27:46] <cthulchu> well, at least it doesn't treat its users as sheep
[06:27:53] <cthulchu> I find that annoying
[06:28:40] <ljharb> lol mac doesn't either, but this is a silly debate to have
[06:29:06] <cthulchu> yep
[06:29:41] *** Joins: Rockwood (~Rocky@user/rocky)
[06:29:54] <cthulchu> I don't think an api like that would add any problems
[06:30:09] <cthulchu> I think it's not there just cuz nobody cared enough
[06:30:46] <cthulchu> I would absolutely love building my own context menu, getting rid of at least a hald of stuff in it
[06:31:46] <cthulchu> top 6 options would go immediately.
[06:31:56] <cthulchu> never ever used them, and yet they're always there
[06:32:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:33:36] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:37:08] <ljharb> it definitely would add lots of problems
[06:37:20] <Rockwood> i have question about global variables in PHP global variable usage supposed to be bad. now my question is global variable are fine in JS?
[06:37:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[06:37:28] <ljharb> it's been a long time since context menu customization was added, and with very few exceptions it's been an antipattern for also a long time.
[06:37:30] <ljharb> Rockwood: no
[06:37:32] <ljharb> Rockwood: they are bad everywhere
[06:38:00] <Rockwood> i am thinking about useContext in react
[06:38:40] <Rockwood> means session is better instead of globals?
[06:39:13] <ljharb> Rockwood: useContext isn't globals
[06:39:25] <ljharb> Rockwood: it's tree-specific state.
[06:39:35] <Rockwood> ah okay
[06:39:35] <ljharb> (render-tree, i mean)
[06:40:29] <Rockwood> actually i am thinking about use useContext for auth in react
[06:40:58] <Rockwood> is the reasonable looks?
[06:41:30] <theskillwithin> poiqwepoiqwe https://jsfiddle.net/theskillwithin/u37ygxeb/
[06:42:10] <theskillwithin> odd way the data is formatted btw
[06:42:26] <Rockwood> theskillwithin, o/
[06:42:35] <theskillwithin> o/
[06:42:55] <Rockwood> have seen my question?
[06:43:00] <Rockwood> have you
[06:43:13] <Rockwood> [08:40:32] <Rockwood> actually i am thinking about use useContext for auth in react
[06:43:14] <Rockwood> [08:41:01] <Rockwood> is the reasonable looks?
[06:43:34] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:47:58] <poiqwepoiqwe> theskillwithin: thank you
[06:48:10] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:50:46] *** Joins: paule32_ (~paule32@user/paule32)
[06:52:46] *** Joins: paule32__ (~paule32@user/paule32)
[06:53:04] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:53:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:53:50] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[06:53:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:54:06] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 245 seconds)
[06:54:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:54:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:54:26] *** Joins: wroathe (~wroathe@user/wroathe)
[06:56:06] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:57:13] *** Joins: paule32 (~paule32@user/paule32)
[06:59:06] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 245 seconds)
[06:59:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:00:54] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 260 seconds)
[07:02:20] <ljharb> Rockwood: that could work fine, yes
[07:02:34] <Rockwood> ljharb, thanks
[07:02:36] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:03:12] *** Joins: Moyst_ (~moyst@user/moyst)
[07:03:21] <Rockwood> one more question
[07:06:28] <Rockwood> is reasonable make separate file for --> export const AuthContext = createContext(); ?
[07:07:13] <Rockwood> what is the point behind this i seen many online stuff they are making separate file for this
[07:07:37] <Rockwood> and call file any where for use this
[07:08:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[07:18:10] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:19:54] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:23:20] <whatsupdoc> What's the best way to detect a url change?
[07:23:50] *** Joins: roadt__ (~roadt@36.7.132.126)
[07:24:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:25:26] <whatsupdoc> I am making a Google Chrome extension. In my extension, I open a new tab. I need to wait until that window changes websites to one that starts with a specific domain
[07:27:26] *** Quits: roadt_ (~roadt@36.5.217.183) (Ping timeout: 260 seconds)
[07:31:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[07:32:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:32:21] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:32:21] *** Joins: wroathe (~wroathe@user/wroathe)
[07:33:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:33:20] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:35:17] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:36:18] <theskillwithin> whatsupdoc idk but i found this on duckduckgo https://fix.code-error.com/how-do-you-detect-changes-in-url-with-a-chrome-extension/
[07:40:15] <whatsupdoc> thanks theskillwithin
[07:43:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[07:45:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[07:46:38] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:48:16] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[07:50:26] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[07:51:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:52:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:02:17] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 256 seconds)
[08:03:20] *** Joins: Moyst_ (~moyst@user/moyst)
[08:06:50] <ljharb> Rockwood: yes, because context only makes sense if it's used in multiple components
[08:06:55] <ljharb> Rockwood: so you'd need to import it places
[08:07:16] <Rockwood> yeah i noticed that is
[08:07:28] <Rockwood> good trick to use for auth with user data
[08:07:34] <Rockwood> ljharb, thanks again
[08:08:02] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[08:12:22] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:d66c:ded9:40fd:2641)
[08:15:27] <Rockwood> https://codesandbox.io/s/react-router-with-authentication-original-forked-ojyht?file=/routes.js
[08:15:42] <Rockwood> i am surprise by erroring on correct thing
[08:17:57] <theskillwithin> whats msg?
[08:19:25] <Rockwood> Objects are not valid as a React child (found: object with keys {user, setUser}). If you meant to render a collection of children, use an array instead.
[08:19:26] *** Joins: kill (~killown@user/killown)
[08:19:44] <theskillwithin> right
[08:19:54] <theskillwithin> <h1>{msg}</h1>
[08:20:01] <Rockwood> ah okay
[08:20:03] <theskillwithin> is problem error is pointing to
[08:20:14] <Rockwood> 2 secs correcthing that
[08:21:29] <kill> how can we detect new visitors on a site using js, for example, I want to execute the code with the following conditions, visitor arrives, code won't start, visitor click in a link, code is executed in the next page
[08:22:53] <Rockwood> theskillwithin, thanks
[08:22:59] <theskillwithin> kill best to know why first
[08:25:01] <ljharb> kill: that's not detecting new visitors, that's detecting repeat visitors
[08:25:14] <ljharb> kill: and you *can* but it's a pretty bad idea to do it on the client. why do you think you want to do that?
[08:25:25] <theskillwithin> could use localStorage or a cookie
[08:25:35] <theskillwithin> kill why?
[08:26:20] <ljharb> sure but then GDPR means you have to ask the user for consent first
[08:27:43] *** coc0nut_ is now known as coc0nut
[08:29:02] <Rockwood> done \o/
[08:29:04] <Rockwood> https://codesandbox.io/s/react-router-with-authentication-original-forked-ojyht?file=/index.js
[08:29:10] <theskillwithin> ljharb sometimes I forget that im lucky to only deal with usa users
[08:29:12] <Rockwood> theskillwithin, ljharb  thanks a lots
[08:29:38] <theskillwithin> ljharb but idk if that violates gdpr anyways, cuz its not for marketing shit, its for site functionality
[08:29:51] <ljharb> theskillwithin: i mean, "lucky" in that you have a severely restrained potential market, hugely limiting the value of any stock you might have
[08:29:56] <Rockwood> know i wanna do protected routes
[08:30:10] <ljharb> theskillwithin: i forget the specifics but i think you still need permission for some kinds of site functionality
[08:30:11] <Rockwood> if user loggedIn then its authenticated
[08:30:33] <Rockwood> otherwise guest access only
[08:30:48] <Rockwood> like home
[08:33:09] <theskillwithin> ljharb dang,  well he never told us the why, so we can't really help him from here anyways
[08:34:39] <Rockwood> <theskillwithin> could use localStorage or a cookie hope its not for me
[08:34:47] *** Quits: Icycle (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[08:34:47] <theskillwithin> its not
[08:34:53] <Rockwood> thanks again
[08:35:22] <theskillwithin> Rockwood you usually have some sort of logic where if the user isn't authenticated on a route that needs them to be authenticated on,  then you redirect that user to the login page
[08:36:04] <theskillwithin> not sure if react router calls it redirect or navigate, but either way u send them to another page
[08:36:23] <Rockwood> instead of on each component or any other option for me?
[08:37:17] <Rockwood> i am thinking about it setUser from login component
[08:37:44] *** Joins: Icedream (~icedream@144.76.223.175)
[08:37:46] <Rockwood> after fetch successfully i wanna set user is Authenticated
[08:37:53] <Rockwood> in json
[08:38:44] <Rockwood>         <AuthContext.Provider value={values}> from here
[08:38:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:41:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:43:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:44:31] *** Joins: gehn1 (~gehn@user/gehn)
[08:46:04] *** Quits: roadt__ (~roadt@36.7.132.126) (Ping timeout: 260 seconds)
[08:46:37] *** Quits: gehn1 (~gehn@user/gehn) (Client Quit)
[08:50:12] <Rockwood> good idea
[08:50:43] <Rockwood> i can do easily
[08:51:20] <Rockwood> if no result then response will be handle this easily
[08:51:33] <Rockwood> send null
[08:51:54] <Rockwood> means if user null then route will be /login
[08:52:14] <Rockwood> or anything else
[08:52:21] <Rockwood> null is not good idea
[08:52:37] <Rockwood> only one state make it better
[08:52:39] <Rockwood> anyway
[08:52:47] <Rockwood> time to leave online for today
[08:52:48] <Rockwood> cya
[08:52:50] <Rockwood> tc
[08:52:52] <Rockwood> thanks
[08:52:55] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:56:47] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[08:57:44] *** Joins: diamondbond (~diamondbo@175.157.188.250)
[08:58:34] *** Joins: roadt__ (~roadt@36.7.132.126)
[08:59:13] *** Quits: diamondbond (~diamondbo@175.157.188.250) (Client Quit)
[09:02:11] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 250 seconds)
[09:03:10] *** Joins: Moyst_ (~moyst@user/moyst)
[09:06:02] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:07:59] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:11:59] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[09:12:16] *** Joins: g00fy78 (~g00fy@user/g00fy)
[09:15:43] *** Joins: abraham (~abraham@143.244.185.86)
[09:16:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[09:22:45] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[09:27:13] *** Joins: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu)
[09:31:34] *** Quits: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu) (Read error: Connection reset by peer)
[09:32:38] *** Joins: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu)
[09:38:30] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[09:42:52] *** Joins: chao (~stenno@user/stenno)
[09:47:58] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 268 seconds)
[09:48:28] *** Quits: Moyst_ (~moyst@user/moyst) (Remote host closed the connection)
[09:50:05] *** Quits: roadt__ (~roadt@36.7.132.126) (Ping timeout: 250 seconds)
[09:50:33] *** Joins: roadt__ (~roadt@36.7.132.126)
[09:54:57] *** Joins: Moyst (~moyst@user/moyst)
[09:56:11] *** Quits: CoderCharmander (~CoderChar@2A001110022743270000003A8580AC01.mobile.pool.telekom.hu) (Ping timeout: 245 seconds)
[09:57:04] *** Joins: CoderCharmander (~CoderChar@2A00111002226815000000615AA81601.mobile.pool.telekom.hu)
[09:59:57] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:02:13] *** Quits: Moyst (~moyst@user/moyst) (Ping timeout: 250 seconds)
[10:03:42] *** Joins: Moyst (~moyst@user/moyst)
[10:06:52] *** Joins: han-solo (~hanish@user/han-solo)
[10:16:31] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[10:29:39] *** Joins: voltage_ (voltage@user/voltage)
[10:29:54] *** Quits: voltage_ (voltage@user/voltage) (Remote host closed the connection)
[10:30:23] *** Joins: voltage_ (voltage@user/voltage)
[10:36:59] *** Joins: chao (~stenno@user/stenno)
[10:38:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:41:36] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 245 seconds)
[10:44:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:56:22] *** Quits: kapil_ (~kapil@2a01:4f9:c010:c9c3::1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:56:52] *** Joins: kapil (~kapil@o-k.website)
[10:58:46] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[11:05:48] *** Joins: Northwoods (~Northwood@202.14.122.53)
[11:19:35] *** Joins: x-x (~x@user/x-x)
[11:24:16] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 260 seconds)
[11:31:06] *** Joins: chao (~stenno@user/stenno)
[11:36:01] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 250 seconds)
[11:40:29] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:44:39] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:46:06] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f)
[11:48:47] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[11:50:13] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:53:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[12:06:23] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:06:44] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd19:17d3:b6e0:9c0f)
[12:08:14] *** Joins: FoodMan (~glucose@user/foodman)
[12:08:48] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:12:58] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:843a:6e21:9631:a11f) (Quit: Leaving)
[12:13:34] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 260 seconds)
[12:14:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[12:15:40] *** Joins: z_lehinsun_ (~lehinsun@188.244.142.69)
[12:16:17] *** Joins: kogepan (~kogepan@user/kogepan)
[12:17:51] *** Quits: sakhd__ (~lehinsun@188.113.178.220) (Ping timeout: 245 seconds)
[12:18:25] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Ping timeout: 268 seconds)
[12:20:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[12:23:32] *** Quits: z_lehinsun_ (~lehinsun@188.244.142.69) (Ping timeout: 260 seconds)
[12:25:13] *** Joins: chao (~stenno@user/stenno)
[12:26:29] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[12:29:25] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:30:08] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:40:21] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:43:11] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:43:51] *** Quits: CoderCharmander (~CoderChar@2A00111002226815000000615AA81601.mobile.pool.telekom.hu) (Ping timeout: 250 seconds)
[12:45:51] *** Joins: chao (~stenno@user/stenno)
[12:50:01] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:50:44] *** Quits: roadt__ (~roadt@36.7.132.126) (Ping timeout: 256 seconds)
[12:51:11] *** Joins: roadt__ (~roadt@36.7.132.126)
[12:53:00] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 256 seconds)
[12:55:41] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[12:56:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:58:23] *** Joins: monokrome (~monokrome@50.215.11.140)
[12:58:57] *** Joins: Naan (~Naan@user/naan)
[13:00:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:00:55] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[13:09:31] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 245 seconds)
[13:13:41] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[13:13:49] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:24:35] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 250 seconds)
[13:24:47] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[13:32:56] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[13:34:21] *** Joins: Northwoods (~Northwood@202.14.122.53)
[13:41:50] *** Joins: chao (~stenno@user/stenno)
[13:50:48] *** Joins: wwwi_ (~wwwi@93-101-213.netrun.cytanet.com.cy)
[13:54:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:56:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:56:46] *** Joins: re (~user@user/re)
[13:58:49] *** Joins: Naan` (~Naan@user/naan)
[14:01:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:02:39] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[14:05:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:26] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[14:08:41] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 245 seconds)
[14:09:31] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 245 seconds)
[14:09:32] *** Joins: Guest50 (~Guest50@46.109.76.104)
[14:10:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:14:24] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[14:23:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[14:28:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:29:47] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:d66c:ded9:40fd:2641) (Ping timeout: 268 seconds)
[14:31:42] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[14:36:05] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:37:41] <chao> n> 355/113
[14:37:42] <jellobot> (okay) 3.1415929203539825
[14:37:49] *** chao is now known as stenno
[14:47:02] *** Quits: jpic_ (~jpic@82.142.20.182) (Ping timeout: 268 seconds)
[14:47:05] *** Joins: federico_it (~textual@151.51.80.240)
[14:48:28] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[14:48:42] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[14:49:06] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 245 seconds)
[14:52:51] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 245 seconds)
[14:54:10] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Read error: Connection reset by peer)
[14:57:56] *** Joins: Northwoods (~Northwood@202.14.122.53)
[14:58:15] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[14:59:06] *** Joins: han-solo (~hanish@user/han-solo)
[15:02:26] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 245 seconds)
[15:03:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[15:06:44] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[15:07:02] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:07:55] *** Joins: Northwoods (~Northwood@202.14.122.53)
[15:08:23] *** Joins: NeoCron (~NeoCron@p200300c4cf1ab200146a93e8f94739c9.dip0.t-ipconnect.de)
[15:15:32] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:16:58] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[15:19:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[15:19:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:21:53] *** Quits: Covrus (~Covrus@user/covrus) (Quit: WeeChat 3.3)
[15:23:44] *** Joins: Covrus (~Covrus@user/covrus)
[15:25:26] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 256 seconds)
[15:28:30] *** Joins: kill (~killown@user/killown)
[15:28:54] *** Joins: sylario (uid115390@id-115390.tinside.irccloud.com)
[15:29:44] <sylario> I want to use eslint on my rails porject, so I am adding esLint. First problem : it ask for an entry point, I have at least 4.
[15:30:26] <sylario> I have 3 separate set of rails pages (think user facing, and 2 sets of operators/admin pages) that have each separate CSS and JS
[15:30:42] <sylario> On top of that I have an ember app in, a subdirectory of the main rails app
[15:30:52] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:31:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[15:31:40] <sylario> sorry it's not eslint asking for an entry point, it's npm
[15:34:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:35:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 240 seconds)
[15:36:04] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Remote host closed the connection)
[15:37:52] *** Joins: pmercado (~pmercado@186.107.63.169)
[15:39:41] *** Joins: ecraven (~ecraven@user/nex)
[15:40:08] <ecraven> is there any sort of "standard" function in node.js to unescape html escapes? &lt; and &nbsp; and so on?
[15:40:29] <thykka> sylario, npm's entry point only matters if you're making a module. It's what npm uses to determine which file to import when you do something like require('lodash')
[15:40:48] <ThePendulum> ecraven: don't think so, used https://www.npmjs.com/package/html-entities recently
[15:40:55] <ecraven> thanks
[15:41:14] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:43:29] *** Joins: silly (~silly@user/silly)
[15:43:39] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[15:45:53] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:46:30] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Read error: Connection reset by peer)
[15:46:33] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[15:46:43] *** Joins: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc)
[15:49:13] *** Quits: CoderCharmander (~CoderChar@2001:738:80c:5af3:85de:cd4f:21a7:17fc) (Read error: Connection reset by peer)
[15:49:25] *** Joins: CoderCharmander (~CoderChar@195.199.248.88)
[15:51:23] *** Joins: stenno (~stenno@user/stenno)
[15:54:16] *** Quits: CoderCharmander (~CoderChar@195.199.248.88) (Ping timeout: 268 seconds)
[15:54:56] *** Joins: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu)
[15:56:38] *** Joins: sunarch (uid526836@user/sunarch)
[16:02:26] *** Quits: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu) (Read error: Connection reset by peer)
[16:03:51] *** Joins: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu)
[16:10:39] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[16:13:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[16:15:56] *** Quits: re (~user@user/re) (Remote host closed the connection)
[16:17:29] *** Joins: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be)
[16:18:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[16:20:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[16:22:20] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Ping timeout: 246 seconds)
[16:23:39] <sylario>  thykka : ok, thx
[16:24:46] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[16:26:12] *** Quits: CoderCharmander (~CoderChar@2A001110020C93040000006659F51D01.mobile.pool.telekom.hu) (Ping timeout: 260 seconds)
[16:26:40] *** Joins: CoderCharmander (~CoderChar@2A001110022E4DDD000000467A370901.mobile.pool.telekom.hu)
[16:27:29] *** Quits: CoderCharmander (~CoderChar@2A001110022E4DDD000000467A370901.mobile.pool.telekom.hu) (Remote host closed the connection)
[16:28:50] *** Quits: D1nger (~Booster2o@host-109-88-247-43.dynamic.voo.be) (Quit: Lost the game...)
[16:29:31] *** Joins: Ealinn[m] (~olgatokar@2001:470:69fc:105::1:3e01)
[16:33:37] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:33:46] <fweht> is `element.scrollTop` given in 'real' pixels or in css pixels?
[16:34:01] <thykka> css pixels
[16:34:06] <fweht> thykka: thanks!
[16:34:08] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 260 seconds)
[16:34:44] *** Joins: src (~src@user/src)
[16:36:19] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:37:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:37:38] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[16:37:56] *** Joins: MiraCat (~MiraCat@c-24-30-27-91.hsd1.ga.comcast.net)
[16:38:14] <MiraCat> This question is for those familiar with lisp. Is there a way to write s-expressions in javascript?
[16:40:28] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:30] *** Nrmncr is now known as Neuromancer
[16:41:58] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[16:41:58] *** Joins: nomic (~nomic@185.217.117.51)
[16:45:15] *** Joins: SteveR (~SteveR@103.215.168.1)
[16:50:30] *** Joins: KDev2 (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[16:50:38] *** Quits: MiraCat (~MiraCat@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[16:50:45] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:51:22] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[16:53:30] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[16:53:39] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[16:53:40] *** Quits: KDev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 250 seconds)
[16:53:41] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Ping timeout: 245 seconds)
[16:54:58] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[16:55:57] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[16:56:19] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5)
[16:58:01] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[16:59:18] *** Quits: federico_it (~textual@151.51.80.240) (Quit: Textual IRC Client: www.textualapp.com)
[17:03:50] *** Quits: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:16:42] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:22:11] *** Joins: Ducki (~ducki@p200300f39f0aab00b8ec4dcf27f9f9ad.dip0.t-ipconnect.de)
[17:26:31] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[17:34:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[17:39:27] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[17:41:03] *** Joins: remolej2 (~kenoba@user/kenoba)
[17:41:30] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[17:42:59] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 264 seconds)
[17:42:59] *** remolej2 is now known as remolej
[17:43:58] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[17:46:06] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:46:26] *** Joins: g00fy78 (~g00fy@user/g00fy)
[17:46:36] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (Read error: Connection reset by peer)
[17:48:20] *** Quits: OhTheCode (~OhTheCode@27-33-195-41.tpgi.com.au) (Ping timeout: 268 seconds)
[17:49:11] *** Joins: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net)
[17:51:11] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[17:53:18] *** Joins: stenno (~stenno@user/stenno)
[17:53:32] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[17:54:26] *** Quits: mosh3k21 (~mosh3k21@213.51-174-78.customer.lyse.net) (Changing host)
[17:54:26] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[17:55:26] *** Joins: ttys000 (~ttys000@user/ttys000)
[17:55:36] *** Joins: OhTheCode (~OhTheCode@123-243-229-181.tpgi.com.au)
[17:57:11] *** Joins: g00fy78 (~g00fy@user/g00fy)
[17:58:29] *** Joins: rewq (~pc@102.184.117.46)
[17:58:41] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5) (Ping timeout: 245 seconds)
[17:58:44] *** Joins: ferdna (~ferdna@user/ferdna)
[17:59:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Ping timeout: 245 seconds)
[18:00:49] *** Joins: Haxxa (~Haxxa@202-63-76-96.ip4.superloop.com)
[18:01:04] *** Parts: rewq (~pc@102.184.117.46) ()
[18:01:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:09:53] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[18:10:09] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:14:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:15:50] <ThePhilgrim> Hi, I'm try to send FormData with fetch API. This is what my file looks like atm: https://pastebin.com/0ip9TX4C - I based this file on a youtube tutorial. Now the question is. Do I need the console.logs in second then() and in catch()? If not, what would I exchange the console logs for?
[18:17:44] *** Quits: Swant (~swant@libera/staff/swant) (Quit: gone to IKEA)
[18:18:52] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:20:39] *** Joins: Swant (~swant@libera/staff/swant)
[18:22:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[18:23:04] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:24:09] <stenno> ThePhilgrim: depends on if you want to do somethign with the response or not
[18:24:27] <stenno> if the response is like a message 'successfully uploaded' or so, you want to display it in a toast
[18:24:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:24:35] <stenno> toast notification
[18:25:03] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[18:27:47] *** Joins: constxd (~brad@192.75.101.164)
[18:28:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:28:49] *** Joins: teut (~teut@223.177.35.108)
[18:29:48] <teut> https://niroggyan.netlify.app/solutions/    how to maje the small down arrow 's dropdown disappear automatically when user gets away from the button or gets away from the menu?
[18:29:53] <ThePhilgrim> stenno, the FormData is basically "name: Foo, company: Bar, email: Baz.@baz.baz, message: Lol" . I want to send this to a php file, and in the html I'm going to show a green text if successful and red thingy if error
[18:29:53] <teut> make*
[18:29:54] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[18:29:59] <ThePhilgrim> So I assume I just answered my questions
[18:30:15] <ThePhilgrim> in the .then is where I want to set.style display:block or similar
[18:30:24] <ThePhilgrim> on what I want to do if successful / failed
[18:30:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:30:37] <stenno> ThePhilgrim: read up on 'toast messages'
[18:30:46] <stenno> ThePhilgrim: this is what you probably want
[18:31:21] <ThePhilgrim> Yeah exactly!
[18:31:27] <teut> https://dpaste.org/5itM#L59
[18:31:30] <ThePhilgrim> So that would be in the then() and catch()
[18:31:32] <ThePhilgrim> ?
[18:32:03] <teut> currently the user has to press the button to close it
[18:34:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi)
[18:35:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[18:35:41] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[18:36:03] *** Parts: ecraven (~ecraven@user/nex) (Bye)
[18:36:35] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[18:37:08] <stenno> ThePhilgrim: in the .then you handle the request response. there you can also check success depending on response status code
[18:37:56] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:37:59] <ThePhilgrim> stenno: the first then looks like this: ".then((response) => response.text())"
[18:38:07] <ThePhilgrim> this is where I handle the request response, right?
[18:38:45] <stenno> ThePhilgrim: yes, you'd do it in that callback
[18:39:21] <ThePhilgrim> Okay, and then I have a second "then": ".then((text) => console.log(text))", is it needed?
[18:39:46] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi)
[18:39:49] <ThePhilgrim> I see no purpose of console.logging it :S
[18:39:52] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[18:39:58] <ThePhilgrim> more than for testing purposes during development
[18:40:28] <stenno> what .text() does is returning a promise which resolves to the body stream 'interpreted' as text
[18:40:51] <stenno> if you don't need to handle whatever is returned, then you also don't need to parse the response, yes
[18:41:32] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Remote host closed the connection)
[18:41:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56737b-238.dhcp.inet.fi) (Ping timeout: 260 seconds)
[18:44:59] <ThePhilgrim> stenno: Sorry, too many cool words for me. I don't know what body stream means in this context. So what is interpreted as text? :P
[18:45:18] <stenno> the response body
[18:45:22] <stenno> http response body
[18:45:29] <ThePhilgrim> I mean, I can show a success toast message in the first .then(), and the fail in catch(), right?
[18:45:39] <stenno> yes
[18:45:42] <stenno> but note here
[18:45:55] <stenno> a successful fetch means that you did a request and got a response
[18:46:05] <stenno> so you have to at least inspect the response code
[18:46:09] <ThePendulum> our nicknames are going to cause excellent havoc
[18:46:55] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[18:47:19] <ThePhilgrim> :)
[18:47:37] <ThePhilgrim> stenno: but can I check the response code in the same .then() ?
[18:47:44] <ThePendulum> I have already received free advice not to write my own smtp server
[18:47:53] <ThePhilgrim> if (response === 200) {show success thingy}
[18:47:57] <ThePhilgrim> :D
[18:48:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:48:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:48:26] *** Joins: wroathe (~wroathe@user/wroathe)
[18:48:32] <stenno> yes
[18:48:48] <stenno> https://developer.mozilla.org/en-US/docs/Web/API/Response
[18:48:49] <ThePendulum> the response code is available without resolving the body
[18:49:46] <ThePhilgrim> Okay, I'll continue here a bit and see if I can implement what you guys are talking about! In the meanwhile, I'll remove the second .then()
[18:49:55] <stenno> const result = fetch(...).then((response) => response.status === 200 ? ... )
[18:50:33] <ThePendulum> there's also response.ok if you'd like to accept a wider range of 2xx codes
[18:50:51] <stenno> yes, as shown in the mdn post above
[18:51:10] <ThePhilgrim> I will read it soon, opened it in browser in the meanwhile
[18:51:24] <ThePendulum> I counted on them not having read it :P
[18:51:30] <ThePhilgrim> Do I need to save the fetch function to a variable?
[18:51:44] <ThePhilgrim> I haven't yet, but I will
[18:52:55] <ThePendulum> how do you mean? the function itself is available globally in modern browsers, the result is the argument in then(), if you're using await you would do const res = await fetch();, after that it depends how you want to use it
[18:55:15] <stenno> you can save the result with await to a variable but its not needed here
[18:59:02] *** Joins: re (~user@user/re)
[18:59:04] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[19:01:48] <ThePhilgrim> stenno: I was just asking since you wrote "const result = ..."
[19:05:00] <ThePendulum> result will be a promise in that example, using await allows you to grab the result returned from the last thennable in the chain
[19:06:01] <ThePendulum> you can either only use await, finalize everything within the last thennable, or use a combination where you use a chain for the first part, and then assign it to a result variable to use it in the rest of the function
[19:07:47] <ThePendulum> eg 1) const res = await fetch(); const body = await res.text(); doSomething(body); 2) fetch().then((res) => res.text()).then((body) => doSomething(body)), 3) const body = await fetch().then((res) => res.text)); doSomething(body)
[19:12:28] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:12:54] *** Joins: thiras (~thiras@user/thiras)
[19:17:01] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 245 seconds)
[19:21:00] *** Quits: re (~user@user/re) (Remote host closed the connection)
[19:21:23] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[19:21:37] *** Joins: re (~user@user/re)
[19:23:52] <ThePhilgrim> stenno: Now the success toast works fine! https://pastebin.com/gZdvwi3j - Is there a smart way to execute the .catch() so that I can see that the fail toast works as well?
[19:30:25] <stenno> you could just fetch a random url that doesn't exist
[19:30:35] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:30:36] <stenno> random host
[19:31:07] *** Joins: Betal (~Betal@user/betal)
[19:32:19] <ThePhilgrim> Ah, great
[19:32:57] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[19:33:20] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[19:33:44] <stenno> so yeah, keep in mind that 4xx and 5xx from the server are considered _successful_ as by the resolution of the fetch promise
[19:35:44] <systemfault> ^ You can use reponse.ok to check if the request is actually successful
[19:37:00] <systemfault> const result = await fetch(someUrl).then(response => { if (!response.ok) { throw new Error('omg failed!'); } return response.json() })
[19:38:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:39:23] <ThePendulum> https://httpstat.us/ is quite handy for testing various responses and delays imo
[19:40:24] <ThePhilgrim> stenno using a random url in the fetch doesn't work to execute catch()
[19:41:28] <ThePhilgrim> I get a 404
[19:42:26] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 260 seconds)
[19:42:41] <ThePhilgrim> systemfault: if 4xx & 5xx is considered successful, then response.ok shouldn't work, right?
[19:43:02] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 240 seconds)
[19:43:22] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[19:43:45] <systemfault> There's a nuance that you don't understand.
[19:43:56] <systemfault> There's a "network layer" and a "protocol layer"
[19:44:11] <systemfault> fetch only fails on "network layer" errors
[19:44:18] <systemfault> As in "transport"
[19:44:29] <ThePhilgrim> Hmm ok
[19:44:35] <ThePhilgrim> Hold ..protocol = tcp, right?
[19:44:46] <systemfault> Protocol = HTTP
[19:44:49] <systemfault> Network = TCP
[19:44:51] <ThePhilgrim> oh
[19:44:55] <ThePhilgrim> okay
[19:45:23] <systemfault> So, as long as the request -> response cycle is "complete", as far as "fetch" is concerned, it's "successful"
[19:45:36] <systemfault> Even if you get a 4xx or a 5xx
[19:45:44] <ThePhilgrim> But I want my fail toast message to show both if I get a protocol error or a network error
[19:45:50] <ThePhilgrim> ah ok
[19:46:08] <systemfault> Then you'd do like in my snippet... You can do it in more steps using await
[19:46:31] <ThePhilgrim> if !reponse.ok ?
[19:47:18] <systemfault> const response = await fetch(someUrl); if (!response.ok) { throw new Error(`Failed with status code ${response.status}`) } const result = await response.json()
[19:47:32] <ThePhilgrim> Doesn't seem to work. As you see in fetch(), I just added a non existing file: https://dpaste.com/8SPPNB7VL . I get a 404 response, but the catch is not executing
[19:47:57] <systemfault> What is that weird code...?
[19:48:11] <ThePhilgrim> What is weird?
[19:48:46] <systemfault> There's no reason the .catch would ever be executed.. since a 4xx/5xx is not a transport error and you're not throwing in your .then
[19:49:13] <systemfault> And what you get in a .catch is an error, not a "response" object... so I'm not sure when you're checking for .ok there.
[19:49:26] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[19:49:27] <ThePhilgrim> I had error there
[19:49:36] <ThePhilgrim> But I couldn't have error as the arg and check for response.ok
[19:49:40] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi) (Ping timeout: 260 seconds)
[19:49:52] <ThePhilgrim> So you mean I have to do the !response.ok check in the .then() ?
[19:50:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:51:00] <systemfault> ThePhilgrim: https://jsfiddle.net/aqrgp934/
[19:51:03] <systemfault> Yes.
[19:52:16] <ThePhilgrim> Okay, but I don't really want to throw an error to the user
[19:52:26] <ThePhilgrim> I want to show a red box saying "your message was not sent"
[19:52:45] <ThePhilgrim> Do I need to do that in the .then() with an if !response.ok check?
[19:54:14] <ThePhilgrim> Does this look better? https://dpaste.com/4BWR66A7E
[19:56:03] <systemfault> Yes... but checking two times the same thing is weird...
[19:56:19] <ThePhilgrim> Ah, ok
[19:56:20] <ThePhilgrim> sec
[19:56:27] <systemfault> Just do: if (response.ok) {It's okay} else { It's not okay}
[19:56:32] *** Joins: salad (~cucumber@188.25.233.246)
[19:56:36] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:56:37] <systemfault> response.ok is true for all 2xx
[19:57:17] <ThePhilgrim> https://dpaste.com/EDJFKU2VR Like so?
[19:57:37] <systemfault> Yes, a lot better
[19:58:16] <ThePhilgrim> Awesome, thanks! Question about the .catch() though. Does it make sense to console.log it or should I do anything else if there's an error?
[19:58:19] <systemfault> I would personally throw the error so I can log it... but up to you
[19:59:30] <ThePhilgrim> So as I have it now? Or do I need to add a throw statement?
[19:59:42] <systemfault> ThePhilgrim: Like this https://jsfiddle.net/pt8nmcyf/
[19:59:50] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:00:24] <systemfault> That way, if you get a network failure, your catch is getting called... and if the status code is not 2xx, it's also getting called
[20:00:27] <ThePhilgrim> You mean the error in the then() ? Only I put it in catch instead?
[20:00:56] <systemfault> I don't understand.
[20:01:04] <ThePhilgrim> Me neither :D
[20:01:17] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[20:01:23] <ThePhilgrim> I am trying to understand what to do in the catch() .. You're talking about the .then() xD
[20:01:32] <systemfault> .catch is about handling errors....
[20:01:44] <ThePhilgrim> Yes
[20:01:50] <systemfault> In your case, you want to show that failToast thingy... and print it in the console.
[20:02:05] <systemfault> That's what the last code I sent you is doing
[20:02:11] <ThePhilgrim> And at the moment I have .catch((error) => console.log(error)
[20:02:17] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:02:22] <systemfault> ThePhilgrim: Look at this code https://jsfiddle.net/pt8nmcyf/
[20:02:30] <ThePhilgrim> I'm looking at it
[20:02:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi)
[20:03:01] <systemfault> So... if there's a network error, the .then will just never be called... and it will go straight to the .catch
[20:03:14] *** Joins: nkrth (~nkrth@103.210.42.179)
[20:03:31] <ThePhilgrim> Okay
[20:03:32] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:03:33] <systemfault> If there's a HTTP error, then the "if (!response.ok)" will throw an exception so the .catch will be executed.
[20:03:47] <ThePhilgrim> And if there's a 404?
[20:04:09] <stenno> then response.ok will be false
[20:04:19] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[20:05:00] <ThePhilgrim> Ahhh, and then it throws the error anyways?
[20:05:12] <ThePhilgrim> or.. rather, the catch() is executed?
[20:05:15] <systemfault> response.ok returns true if the status code is in the range 200 - 299
[20:05:43] <ThePhilgrim> so in other words, if I ever get to "throw Error", the .catch() is executed??
[20:05:49] <systemfault> Yes...
[20:05:53] <ThePhilgrim> Ahhhhhhhhh
[20:05:54] <ThePhilgrim> good lord
[20:06:00] <ThePhilgrim> That was difficult to get
[20:07:00] <systemfault> ThePhilgrim: The promise functions .then/.catch/.finally mirror the classic "exception" mechanism
[20:07:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:07:52] <ThePhilgrim> Right, but I didn't understand that throwing an Error in the .then() would execute the .catch()
[20:08:47] *** Joins: Betal (~Betal@user/betal)
[20:09:23] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:10:45] <systemfault> n> Promise.resolve().then(() => { throw 'lol'; }).catch(err => console.log(err))
[20:10:46] <jellobot> (okay) lol
[20:13:43] <ThePhilgrim> systemfault, stenno Thanks for all your help and patience!
[20:13:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[20:13:53] <ljharb> ThePhilgrim: just like throwing an error in a `try` will execute the `catch`
[20:13:56] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:14:20] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:15:33] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:15:34] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[20:16:25] *** Joins: Betal (~Betal@user/betal)
[20:17:57] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:18:55] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:19:42] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:20:06] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:21:26] *** Joins: joakimk (~joakimk@ti0004q160-3453.bb.online.no)
[20:22:35] *** Joins: Rockwood (~Rocky@user/rocky)
[20:22:54] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:24:28] <Rockwood> stenno, o/
[20:24:33] <Rockwood> h r u?
[20:26:54] *** Quits: kill (~killown@user/killown) (Ping timeout: 256 seconds)
[20:28:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:29:51] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:7fb9:9202:33ba:f1c7)
[20:30:00] *** Joins: g00fy78 (~g00fy@user/g00fy)
[20:30:24] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[20:30:42] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[20:31:11] <stenno> i am ok
[20:31:21] <stenno> waiting for my next holidays in december
[20:32:17] *** Quits: g00fy78 (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[20:32:24] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-233.46.114.pool.telefonica.de)
[20:32:30] <Rockwood> gr8
[20:32:41] <Rockwood> hope soon coming
[20:34:00] *** Joins: kill (~killown@user/killown)
[20:34:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[20:35:24] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[20:35:31] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:35:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:35:31] *** Joins: wroathe (~wroathe@user/wroathe)
[20:35:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[20:35:54] <ThePhilgrim> stenno: what do you work with? :)
[20:35:59] <ThePhilgrim> developer?
[20:36:17] <stenno> i ahve a fulltime job as a developer, yes
[20:36:33] <ThePhilgrim> cool! back or front end?
[20:37:44] <stenno> depends lol
[20:38:22] <stenno> our company doesn't have enough employees to have a distinction there
[20:38:44] <ThePhilgrim> Ah, so full stack in other words? :)
[20:39:11] <ThePhilgrim> May I ask what the stack looks like at the company?
[20:39:26] <stenno> at the moment its react + symfony + postrges
[20:39:51] <ThePhilgrim> Ah, so PHP for backend?
[20:39:54] *** Quits: joakimk (~joakimk@ti0004q160-3453.bb.online.no) (Ping timeout: 256 seconds)
[20:39:55] <stenno> yeah
[20:39:59] <Rockwood> stenno, why not NODE?
[20:40:07] <stenno> in my private/hobby projects i wouldn't use php
[20:40:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[20:40:23] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 268 seconds)
[20:40:29] <stenno> hysterical raisins
[20:41:00] <ThePhilgrim> Do you write any backend in Python privately?
[20:41:14] <stenno> no
[20:41:20] <ThePhilgrim> Ok
[20:41:40] <stenno> i looked at python backens a little bit wrt `flask`
[20:42:35] <stenno> but i think that node is a really backend programming language for non-numbercrunching tasks
[20:42:39] <stenno> really good
[20:42:50] *** Quits: re (~user@user/re) (Remote host closed the connection)
[20:42:59] <ThePhilgrim> You would say Node > Python for backend?
[20:43:03] <stenno> hell yeah
[20:44:16] <EdFletcher> I know many ex-Python backenders who have made the switch, myself including. Couldn’t agree more with stenno
[20:45:53] <ThePhilgrim> Really? I really like Python syntax better than JS syntax so I was very much leaning towards Python for the future. Could you elaborate on why Node would be better?
[20:45:55] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:47:20] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:5db7:4266:c553:6ff6) (Read error: Connection reset by peer)
[20:48:21] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:acc9:6358:388e:af4b)
[20:49:48] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[20:50:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[20:51:40] *** Joins: kakashiAL (~kakashi@37.80.38.10)
[20:52:27] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Remote host closed the connection)
[20:52:51] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[20:53:50] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[20:54:10] <ljharb> ThePhilgrim: the benefits of using the same language on frontend and backend can not be overstated
[20:54:18] <han-solo> both are nice, but with js you could do frontend and ^
[20:54:25] <ljharb> ThePhilgrim: meaning that if the frontend used brainfuck it'd still be better to use brainfuck on the backend than to use anything else
[20:54:35] <ThePhilgrim> Ah okay
[20:54:38] <ThePhilgrim> Makes sense
[20:55:09] <ThePhilgrim> So since everything is JS in the front end, a JS backend would always make sense :P
[20:55:22] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:acc9:6358:388e:af4b) (Read error: Connection reset by peer)
[20:56:05] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:acc9:6358:388e:af4b)
[20:57:25] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 250 seconds)
[20:58:30] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[20:59:35] <han-solo> and typescript is very nice
[20:59:36] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[21:01:36] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 245 seconds)
[21:04:59] <ljharb> meh, it's ok
[21:05:04] <ljharb> ThePhilgrim: yes, precisely
[21:06:09] <systemfault> Python seems to hate functional programming in general... for that reason, I'm not attracted to it.
[21:06:17] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 268 seconds)
[21:07:45] *** Joins: jpic (~jpic@82.142.20.182)
[21:07:58] *** Joins: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de)
[21:08:02] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[21:09:24] <ThePhilgrim> systemfault: What do you mean by functional programming?
[21:09:36] *** Quits: teut (~teut@223.177.35.108) (Quit: Client closed)
[21:10:07] <systemfault> Programming with pure functions and avoiding mutations as much as possible.
[21:10:30] <merpnderp> Anyone happen to know of a free site to map thousands of addresses on a map? Want to make a map for court advocates to help clients.
[21:10:50] <merpnderp> Am lazy and don't want to write my own interface to Google Maps.
[21:10:57] <systemfault> Technically, python supports it to some extent... but when I looked a few years, it was impossible to make a lambda function that isn't an expression
[21:11:30] <systemfault> And Python has things, like list comprehensions that I would love to see in JS.
[21:12:02] *** Quits: AtomicInteger (~primamate@p200300ee171a2800817a7ecdf02b0d26.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:12:25] <sylario> WHen I browse the result of querySelectorAll I have the elements I wanted + a weird item function
[21:12:36] <sylario> It's the same with getElementByCLass
[21:12:49] <sylario> Why is there a weird item object?
[21:13:17] <systemfault> It should simply be a function
[21:13:33] <systemfault> myNodeList.item(0) should be the same as myNodeList[0]
[21:13:41] <systemfault> Unless you're talking about something else.
[21:14:14] *** Joins: AtomicInteger (~primamate@5.180.62.193)
[21:15:14] <sylario> I use   for (const checkbox in checkboxes) { to add eventListner
[21:15:54] <systemfault> Hmm, okay
[21:16:09] <systemfault> And is "item" part of the NodeList that is returned? If so, that's weird.
[21:16:14] <sylario> I retrieve with checkboxes[checkbox] to add a listener on it. To make it work right now, I would have to add something to ignore the last item a weird "item" function
[21:16:31] <sylario> I tried with a bogus selector and it return only this wird item
[21:17:15] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: Ping timeout (120 seconds))
[21:17:28] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[21:17:42] <sylario> https://usercontent.irccloud-cdn.com/file/vV0FYdLB/image.png
[21:18:00] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[21:18:25] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:18:38] <sylario> First loop : https://usercontent.irccloud-cdn.com/file/35dQ79h3/image.png
[21:18:55] <systemfault> Ah lol
[21:19:06] <systemfault> My eyes has not caught it...
[21:19:09] <sylario> third loop : https://usercontent.irccloud-cdn.com/file/uUWgiiFZ/image.png
[21:19:11] <systemfault> You're using for/in
[21:19:21] <systemfault> That's not how you iterate on things in JS
[21:19:36] <sylario> ho, I thought it was the loop to use
[21:19:37] <systemfault> for/in exists to iterate on object keys
[21:19:49] <systemfault> No, you either use for/of or .forEach
[21:20:20] <systemfault> There's no reason to use for/in in JS, forget it exists.
[21:20:28] *** Joins: stenno (~stenno@user/stenno)
[21:21:24] <systemfault> .forEach only exists on NodeList (returned by document.querySelectorAll), not HTMLCollection(Returned by document.getElementsByClassName)
[21:22:07] <systemfault> Another thing you can do is convert the NodeList to an array to use array-specific methods ( const result = Array.from(document.querySelectorAll(someSelector)) )
[21:22:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:24:07] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-233.46.114.pool.telefonica.de) (Quit: Connection closed)
[21:24:26] *** Joins: Simplar (~quassel@188.163.92.225)
[21:24:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi) (Quit: Leaving)
[21:24:48] *** Quits: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a) (Ping timeout: 268 seconds)
[21:26:02] <sylario> Yup, forEach works fine, thx systemfault
[21:26:11] <systemfault> You're welcome :)
[21:26:18] <stagas> and how do you break off a forEach loop?
[21:26:38] <sylario> break?
[21:26:51] <sylario> I do not know, but I do not need it here
[21:28:22] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:acc9:6358:388e:af4b) (Ping timeout: 260 seconds)
[21:28:23] <sylario> with a lot of weird technique it seems
[21:30:01] <sylario> You can see a Eventlistener code in the document inspector !
[21:30:15] <sylario> Dev tools are super useful
[21:30:22] <systemfault> stagas: You can't.
[21:30:37] <systemfault> stagas: What is that forEach loop doing?
[21:30:49] *** Joins: mikrosis (~mikrosis@dynamic-046-114-174-233.46.114.pool.telefonica.de)
[21:30:59] <systemfault> sylario: Yeah, can't live without them :)
[21:31:18] <sylario> it's puting a listener to a list of checkbox
[21:32:05] <systemfault> I'm confused now...
[21:32:18] <systemfault> sylario: are you also stagas ?
[21:32:29] <sylario> nope
[21:33:02] <systemfault> Ahh, okay, was wondering because I was asking a question to stagas and you answered :)
[21:33:06] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[21:33:14] <systemfault> (And you're both talking about forEach)
[21:33:57] <sylario> I thought he was telling me forEach are complicated to break out off ^^ And I thought you made a s tab error when replying to me :
[21:34:00] <sylario> !
[21:35:23] *** Joins: reallymemorable (~reallymem@148.59.24.2)
[21:37:09] *** Joins: reallyme_ (~reallymem@93.sub-174-242-142.myvzw.com)
[21:39:41] *** Joins: nomic (~nomic@185.217.117.51)
[21:40:49] *** Quits: reallymemorable (~reallymem@148.59.24.2) (Ping timeout: 268 seconds)
[21:44:41] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:cb22:a5f5:49d6:f71f)
[21:45:08] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:cb22:a5f5:49d6:f71f) (Changing host)
[21:45:08] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[21:45:38] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[21:51:07] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:52:03] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[21:53:17] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:53:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:53:17] *** Joins: wroathe (~wroathe@user/wroathe)
[21:56:35] *** Quits: reallyme_ (~reallymem@93.sub-174-242-142.myvzw.com) (Remote host closed the connection)
[21:59:37] *** Joins: reallymemorable (~reallymem@148.59.24.2)
[21:59:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:01:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:40] *** Joins: reallyme_ (~reallymem@2600:1000:b110:ba7d:5c15:9be4:9d31:82e9)
[22:02:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:03:37] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:06:14] *** Quits: reallymemorable (~reallymem@148.59.24.2) (Ping timeout: 260 seconds)
[22:11:26] *** Quits: nkrth (~nkrth@103.210.42.179) (Quit: Ping timeout (120 seconds))
[22:14:59] *** Quits: hassoon (hassoon@grape.ircnow.org) (Changing host)
[22:14:59] *** Joins: hassoon (hassoon@user/hassoon)
[22:16:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:16:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:16:08] *** Joins: wroathe (~wroathe@user/wroathe)
[22:20:16] *** Joins: mwwagoner (~Thunderbi@user/mwwagoner)
[22:20:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:20:55] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-233.46.114.pool.telefonica.de) (Quit: Connection closed)
[22:21:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:22:41] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:23:14] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:1173:f37b:b763:51ea) (Quit: Textual IRC Client: www.textualapp.com)
[22:24:15] *** Joins: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp)
[22:24:32] *** Joins: federico_it (~textual@151.51.80.240)
[22:26:11] *** Quits: sunarch (uid526836@user/sunarch) (Quit: Connection closed for inactivity)
[22:26:27] *** Quits: reallyme_ (~reallymem@2600:1000:b110:ba7d:5c15:9be4:9d31:82e9) (Remote host closed the connection)
[22:27:03] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:cdd3:b179:217e:d3fa)
[22:27:40] *** Joins: Northwoods (~Northwood@202.14.122.53)
[22:27:49] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[22:28:19] *** Quits: X-Scale (~ARM@31.22.167.95) (Ping timeout: 268 seconds)
[22:29:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:29:26] *** X-Scale` is now known as X-Scale
[22:29:52] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[22:31:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[22:37:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:41:47] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[22:44:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:48:00] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[22:50:10] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:57:39] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[23:03:34] *** Joins: Betal (~Betal@user/betal)
[23:06:12] *** Joins: zerothule (~eric@2601:602:8d80:4e50:9592:daf0:67a7:c58a)
[23:07:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:07:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:07:04] *** Joins: wroathe (~wroathe@user/wroathe)
[23:07:34] *** Joins: dsrt^ (~dsrt@68.101.58.90)
[23:10:46] *** Quits: mwwagoner (~Thunderbi@user/mwwagoner) (Ping timeout: 245 seconds)
[23:10:47] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[23:11:25] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::1b)
[23:11:44] *** Quits: Northwoods (~Northwood@202.14.122.53) (Ping timeout: 260 seconds)
[23:18:33] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[23:19:29] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:22:59] *** Quits: summersault2 (~summersau@179.221.251.16) (Remote host closed the connection)
[23:24:02] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:cdd3:b179:217e:d3fa) (Quit: Textual IRC Client: www.textualapp.com)
[23:28:18] *** Joins: |Psycho| (~mr_robot@user/psycho/x-2475944)
[23:28:36] *** Quits: federico_it (~textual@151.51.80.240) (Read error: Connection reset by peer)
[23:37:44] *** Joins: eron (~eron@186.192.87.8)
[23:40:03] *** Quits: eron (~eron@186.192.87.8) (Client Quit)
[23:40:46] *** Joins: mwwagoner (~Thunderbi@user/mwwagoner)
[23:43:28] *** Quits: kakashiAL (~kakashi@37.80.38.10) (Ping timeout: 260 seconds)
[23:44:33] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Lost terminal)
[23:49:16] <|Psycho|> https://paste.debian.net/plain/1220837  How is that this returns 1? Is it because the thousands separators?
[23:52:10] <sylario> |Psycho|: the addition is done before parsing, maybe it's trying to parsefloat a weird concatenation of the 2 values?
[23:53:32] <|Psycho|> it's really weird because I have this working just fine somewhere else
[23:54:34] *** Quits: salad (~cucumber@188.25.233.246) (Quit: salad)
[23:59:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
