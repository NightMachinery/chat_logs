[00:00:18] <bladerunner1> yeah
[00:01:01] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[00:01:11] <fizzie> (And no, the code isn't affected by endianness, it just operates on the full `unsigned int` value. `0x12345678 >> 8 == 0x00123456` is true irregardless of how the implementation decides to distribute those bits in bytes.)
[00:02:06] <Maxdamantus> endianness is only noticable when reinterpreting bytes as different types.
[00:04:46] <bladerunner1> well thanks everyone :) I'll prolly practice around this a bit, now that I understand it
[00:12:24] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:12:34] <retr0>  
[00:13:09] *** Joins: danisanti (~daniel@user/danisanti)
[00:13:26] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:15:02] *** Quits: danisanti (~daniel@user/danisanti) (Client Quit)
[00:15:49] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[00:16:04] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Read error: No route to host)
[00:16:14] *** Joins: danisanti (~daniel@user/danisanti)
[00:17:21] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[00:18:48] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[00:19:43] *** Joins: Viewday1156 (~Viewday@user/viewday)
[00:20:19] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:20:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[00:22:44] *** Quits: danisanti (~daniel@user/danisanti) (Ping timeout: 250 seconds)
[00:23:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:23:33] *** Viewday1156 is now known as Viewday115
[00:25:43] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[00:26:00] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:26:42] *** Joins: Guest60 (~Guest60@46.1.229.209)
[00:29:27] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:30:24] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[00:30:53] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[00:32:15] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:32:58] *** Quits: alch (~alch@151.46.85.228) (Ping timeout: 272 seconds)
[00:33:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:17] *** Joins: alch (~alch@151.44.85.26)
[00:34:19] *** Joins: strajder (~strajder@user/strajder)
[00:34:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:36:47] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[00:37:04] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:38:44] *** Quits: Guest60 (~Guest60@46.1.229.209) (Quit: Client closed)
[00:41:55] <euandreh> IIUC, there is no point in building and distributing publicly .so files when the library doesn't have a stable ABI.  Is that right?  To get updates you'd have to compile/link again.
[00:44:30] *** Joins: Torr (~Torr@user/torr)
[00:46:32] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:46:57] <sdk_> euandreh: that is right
[00:49:22] *** Joins: squidrin (~squidrin@75.165.136.107)
[00:51:31] <euandreh> sdk_: ty
[00:53:22] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:53:38] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:53:49] *** Quits: squidrin (~squidrin@75.165.136.107) (Ping timeout: 256 seconds)
[00:54:12] *** Joins: seninha (~chatzilla@user/seninha)
[00:56:39] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Remote host closed the connection)
[00:56:56] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[00:57:14] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:57:50] *** Quits: cincoswim (~cincoswim@cm-72-241-174-56.buckeyecom.net) (Ping timeout: 250 seconds)
[00:59:06] <retr0> join part join part join part join part join part join part join part join part join part
[00:59:21] *** Parts: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[01:00:57] *** Quits: kaichiuchu (~mike@user/kaichiuchu) (Ping timeout: 240 seconds)
[01:02:54] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:04:40] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[01:04:55] *** Joins: SadPepe (~SadPepe@2401:f40:1533:0:e4a8:4020:92de:11b7)
[01:06:51] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:07:01] *** Joins: semeion (~semeion@user/semeion)
[01:09:22] *** Joins: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da)
[01:09:23] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[01:12:13] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[01:13:05] *** Quits: SadPepe (~SadPepe@2401:f40:1533:0:e4a8:4020:92de:11b7) (Changing host)
[01:13:05] *** Joins: SadPepe (~SadPepe@user/SadPepe)
[01:15:19] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[01:16:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[01:16:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:18:06] *** Joins: peki (~peki@91.191.14.22)
[01:18:06] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-3d4d-3be7-c779-827a.inf6.spectrum.com)
[01:18:11] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-dcba-088f-f497-9b47.inf6.spectrum.com) (Ping timeout: 252 seconds)
[01:19:47] *** Inline__ is now known as Inline
[01:25:17] *** Quits: SadPepe (~SadPepe@user/SadPepe) (Quit: Leaving)
[01:25:41] *** Quits: AmR (~AmREiSa@156.199.236.198) (Quit: Konversation terminated!)
[01:26:25] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[01:26:28] *** Joins: oriba (~oriba@dynamic-077-011-005-242.77.11.pool.telefonica.de)
[01:30:08] *** Joins: SadPepe (~SadPepe@user/SadPepe)
[01:31:43] *** Quits: gog (~ada@user/gog) (Quit: byee)
[01:34:09] *** Quits: Giovanni (~Giovanni@176.55.170.26) (Ping timeout: 252 seconds)
[01:34:14] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:37:11] *** Quits: SadPepe (~SadPepe@user/SadPepe) (Quit: Leaving)
[01:39:09] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) ()
[01:42:01] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[01:42:54] *** Quits: peki (~peki@91.191.14.22) (Quit: Leaving)
[01:44:02] *** Quits: bladerunner1 (~bladerunn@103.167.123.127) (Quit: WeeChat 3.4)
[01:44:40] *** Quits: slimbo (~slim@user/slimbo) (Quit: WeeChat 3.4)
[01:45:41] *** Quits: Akuli (~Akuli@213.216.209.23) (Quit: Akuli)
[01:52:49] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:54:30] <oldlaptop> euandreh: Often, having a shared library can make some sense even if the library doesn't have a stable ABI, if there are many users of the library. Each one can share (surprise!) the same copy, on disk and often even in physical RAM.
[01:55:02] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:56:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[01:57:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:07:10] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 250 seconds)
[02:09:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:09:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:12:08] *** Joins: CaCode (~CaCode@user/cacode)
[02:13:57] *** Joins: seninha (~chatzilla@user/seninha)
[02:14:15] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[02:15:20] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Client Quit)
[02:20:32] <constxd> W
[02:20:42] <constxd> kings
[02:22:29] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[02:22:53] *** Joins: Guest7469 (~Guest@host76.190-137-36.telecom.net.ar)
[02:23:03] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[02:28:09] <nomagno> https://termbin.com/et5h
[02:28:15] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:28:42] <nomagno> Is there any UB or unexpected behaviour in this recursive-ish variable type definition?
[02:28:50] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 250 seconds)
[02:30:08] <nomagno> Replace
[02:30:08] <nomagno> unsigned (*func)(union var_union);
[02:30:08] <nomagno> With
[02:30:08] <nomagno> unsigned (*func)(struct var);
[02:30:11] <nomagno> Sorry
[02:30:11] *** ChanServ sets mode: +o candide
[02:30:12] *** candide sets mode: +b *!~nomagno@2001:470:69fc:105::c1f0
[02:30:41] <constxd> lmfao
[02:30:58] <fowl> the ruthless justice of an irc bot
[02:31:34] *** candide sets mode: -b *!~nomagno@2001:470:69fc:105::c1f0
[02:32:49] <fowl> macos (or clang?) let me build a shared library from a bunch of object files, but it looks like gcc on linux is wanting the object files compiled with -fPIC, is that to be expected? can someone help me set up my makefile to build a static and a shared library?
[02:33:42] *** Quits: magla (~gelignite@d5366f7c.access.ecotel.net) (Quit: Stay safe!)
[02:33:51] *** Joins: pizdets_ (~pizdets@183.182.110.211)
[02:34:13] *** Quits: pizdets (~pizdets@183.182.114.152) (Ping timeout: 265 seconds)
[02:34:47] <TonyStone> i have a while loop and it doesnt print until the loop copmpletes.  if i change it to a for loop it prints.  what can i do to make sure it prints during while loop?
[02:36:27] <nomagno> TonyStone: that's not normal
[02:36:48] <TonyStone> ok i didnt think so... so i have another issue i am overlooking then... hmmmm
[02:38:02] <nomagno> TonyStone: did you newline terminate the printf in one loop but not in another?
[02:38:23] <nomagno> on many terminals printing without any newline doesn't take effect until the end of the program
[02:38:29] <nomagno> In others it doesn't work at all
[02:38:44] <TonyStone> so nothing prints during this  while(read(fd, privkey, 32) > 0) {
[02:39:37] <BtbN> ignoring the precise return value of a read() seems unwise
[02:39:38] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[02:39:44] <TonyStone> /  for (myI = 0; myI < 1; myI = myI +0){
[02:39:44] <TonyStone>    <---- that prints for me lol
[02:41:15] <fizzie> nomagno: Should be fine. `struct var` is an incomplete type inside its own definition, but you're still allowed to use it in a context that doesn't require a complete type, and the parameter of a function pointer should be one of those. (C11 6.7.6.3p12: "If the function declarator is not part of a definition of that function, parameters may have incomplete type --")
[02:42:05] <TonyStone> BtbN i am tinkering with code of someone elses github project...  im slowly learning a little bit of C so I am not really familiar with read() yet
[02:42:33] <TonyStone> in this project it does this if((fd=open("/dev/urandom", O_RDONLY|O_NOCTTY)) == -1) {  befor the loop
[02:48:13] <TonyStone> wait i should clarify something.  the while loop DOES print in the terminal... however when I am piping it to my other program i cannot read it UNLESS i change it to the for loop then i can read the pipe in my other program.  if that means anything
[02:51:17] <TonyStone> nomagno sorry just saw your respone.  yes i am terminating with newline in both instances...
[02:52:06] <TonyStone> fflush( stdout ); <--- i even put that in to see if it made a difference... it did not.
[02:52:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:53:12] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Read error: Connection reset by peer)
[02:53:14] *** Joins: Thedarkb1 (~Thedarkb@82.3.80.190)
[02:56:10] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:58:44] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 250 seconds)
[02:58:45] *** Joins: kts_ (~kts@103.73.237.221)
[02:58:45] <ioxzev1z> Need to see codez
[02:58:51] *** Quits: kts_ (~kts@103.73.237.221) (Client Quit)
[03:00:52] <ioxzev1z> TonyStone, ^
[03:01:13] *** Joins: gog (~ada@user/gog)
[03:01:27] <TonyStone> ok... let me find it on github ill give you line numbers
[03:02:47] <TonyStone> https://github.com/TonyStone31/keygen/blob/master/keygen.c   line 202 is what i change to a endless for loop and i can read it via pipe in my other program
[03:03:38] <TonyStone> im gonna start over with the original code from github... to make sure i didnt mess something else up
[03:04:01] <ioxzev1z> 202 continues until 303
[03:05:10] <ioxzev1z> 202 will call read() on fd, into privkey, of size 32, until read returns 0 or less
[03:05:13] <TonyStone> yes and it calls anounce_result last which is where it prints to the terminal
[03:05:39] <ioxzev1z> Show me the for loop that you have used to replace the while
[03:05:56] <TonyStone> ok hold on let me open that messy version back up
[03:06:38] *** Joins: DSee (~DSee@198.147.22.212)
[03:06:52] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[03:07:22] <TonyStone> https://zerobin.net/?0710b7f225f01587#odeD/vodsUGUuuDYOcgSo8e2Qag2SdStZpzHDyc9bPs=
[03:07:31] <DSee> C - The Master Programming Language
[03:07:32] <TonyStone> so those are the modifications i made to the loop...
[03:08:03] <ioxzev1z> use https://bpa.st/
[03:08:17] <TonyStone> im trying to make those modifications again from the fresh source to make sure im giving valid info.
[03:08:37] <TonyStone> https://bpa.st/V2XA
[03:09:15] <ioxzev1z> explain the logic behind for (myI = 0; myI < 1; myI = myI +0){
[03:09:23] <TonyStone> lol... ok
[03:09:30] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:09:45] <ioxzev1z> If you want an infinite loop just use for(;;)
[03:09:52] <TonyStone> so i noticed when i made it print a set number of times... like 10 thousand times i was reading it in my pipe
[03:10:27] <TonyStone> and then i said ok... lets try making it an endless loiop... and it worked... and confuses the hell out of me
[03:10:57] <ioxzev1z> Also on line 3 you reopen urandom for each iteration, most likely not closing the previous fd
[03:11:06] <TonyStone> i know   :(
[03:11:11] <ioxzev1z> Move 3 out of the loop you only need to open the fd once
[03:11:11] <TonyStone> and probably slows thing down
[03:11:16] <TonyStone> ok
[03:11:24] *** Quits: Xeha (~Xeha@user/Xeha) (Ping timeout: 240 seconds)
[03:11:25] <ioxzev1z> Or better yet use getrandom()
[03:12:13] <ioxzev1z> In fact I would strongly suggest using that over a normal fd and read8)
[03:12:15] <ioxzev1z> ()
[03:13:10] <TonyStone> i think it uses dev/urandom as it is cryptographically secure
[03:13:43] <ioxzev1z> getrandom is a csprng
[03:13:49] <ioxzev1z> It uses urandom internally
[03:13:59] <ioxzev1z> I'm not entirely sure where the problem is because 202 - 303 just call basic functions
[03:15:14] <TonyStone> i know.... but whats interesting is now it is so messed up it prints the new private key and looks random but it is not doing any of the stuff below that converts it to a bitcoin address. lol
[03:15:33] <TonyStone> i made a disaster out of it.... i need to start over
[03:17:46] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[03:18:53] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:19:40] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:19:40] *** Joins: semeion (~semeion@user/semeion)
[03:21:08] *** Joins: baconology (gb@user/baconology)
[03:21:19] <baconology> i need a "using makefile with subdirectories" for dummies
[03:21:36] <TonyStone> ok well i started over.  and it seems to be working fine now using the while loop... i took out lines 193 to 200 and just before while loop i call fd=open("/dev/urandom", O_RDONLY|O_NOCTTY))  and now i can read it in my pipe
[03:22:44] <TonyStone> so i have a feeling it has something to do with not writing to the pipe because at line 193 it has if (isatty(0)..... i think that has something to do with it... wish i could understand. ill get there though!
[03:24:25] <TonyStone> so the while loop is better because it is not gonna keep reopening /urandom    oh well. this is how i learn. trial and failure
[03:25:11] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[03:25:28] *** Joins: kts (~kts@103.73.237.221)
[03:27:56] *** Joins: pulse (~pulse@user/pulse)
[03:31:15] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7) (Quit: Quit)
[03:39:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:40:23] *** Quits: vboyko (~vboyko@46.211.111.120) (Read error: Connection reset by peer)
[03:40:26] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 272 seconds)
[03:40:29] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[03:40:54] *** Joins: vboyko (~vboyko@46.211.111.120)
[03:41:14] *** Joins: Wulf (~Wulf@user/wulf)
[03:41:14] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[03:41:26] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:41:48] *** Joins: ferdna (~ferdna@user/ferdna)
[03:41:49] <owensjrw> What does it mean to "fold" a list?
[03:41:50] <owensjrw> "given a function, a list, and initial accumulator, fold each item into the accumulator from the left using" This is the context..
[03:42:08] <owensjrw> Good evening my friends.
[03:42:56] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[03:46:32] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[03:47:50] <fizzie> Given a function f, a list [a, b, c, d] and an initial accumulator value x, folding from the left would mean computing f(f(f(f(x, a), b), c), d).
[03:48:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39f6-2932-099f-a193.res6.spectrum.com)
[03:48:36] <fizzie> (Or the parameters might be the other way around.)
[03:49:20] <fizzie> You tend to see fold more in languages where higher-order functions are less painful than in C.
[03:51:04] <owensjrw> Am I removing a, b, c, and d?
[03:52:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:53:25] <fizzie> It doesn't generally speaking modify the list.
[03:53:32] <fizzie> It just returns the result of folding it.
[03:53:38] <fizzie> ,cc int add(int x, int y) { return x + y; } int foldl(int (*f)(int, int), int acc, int list[], size_t n) { return n == 0 ? acc : foldl(f, f(acc, *list), list+1, n-1); } int list[] = {1, 2, 3, 4, 5}, sum = foldl(add, 0, list, sizeof list / sizeof *list); printf("sum = %d", sum); // for example
[03:53:40] <candide> fizzie: sum = 15
[03:55:49] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[03:56:38] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.133)
[03:58:14] <owensjrw> So its a way of performing a function on each item in the list from left to right or right to left? In your example summation of each item.
[04:00:51] <fizzie> Yes, except the function is called with two arguments: the list item, and an accumulator that holds the result of the previous call. So in my example, the `foldl(add, 0, list, 5)` call is equivalent to `add(add(add(add(add(0, list[0]), list[1]), list[2]), list[3]), list[4]);`.
[04:02:22] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Quit: Power is a curious thing.It can be contained, hidden, locked away,and yet it always breaks free.)
[04:02:48] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[04:02:52] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:02:57] <RETRO> ./me
[04:03:00] * RETRO .
[04:05:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[04:05:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[04:07:34] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:07:41] <owensjrw> Thanks again fizzie. You all are always so helpful.
[04:08:35] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[04:09:48] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.133) (Ping timeout: 252 seconds)
[04:10:59] *** Quits: vboyko (~vboyko@46.211.111.120) (Read error: Connection reset by peer)
[04:11:28] *** Quits: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Ping timeout: 272 seconds)
[04:12:37] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:12:41] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[04:19:47] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[04:21:37] *** Parts: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) ()
[04:22:26] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f1141fa1e0576466c280.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:24:24] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f140429be276a75d0242.dip0.t-ipconnect.de)
[04:26:17] *** Quits: kurahaupo (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[04:26:25] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au)
[04:27:35] *** Quits: oriba (~oriba@dynamic-077-011-005-242.77.11.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:28:00] *** Quits: gog (~ada@user/gog) (Quit: byee)
[04:28:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7)
[04:29:56] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:30:11] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:30:12] *** Quits: alch (~alch@151.44.85.26) (Read error: Connection reset by peer)
[04:30:15] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Read error: Connection reset by peer)
[04:30:21] *** candide sets mode: -o candide
[04:32:19] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[04:32:25] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[04:34:04] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 250 seconds)
[04:34:40] *** Joins: alch (~alch@151.44.5.124)
[04:36:17] *** Joins: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88)
[04:37:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[04:40:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[04:42:44] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 250 seconds)
[04:44:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[04:44:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[04:44:42] *** Joins: skapata (~Skapata@user/skapata)
[04:46:36] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:47:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:47:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:52:27] *** Joins: llh (~UPP@user/llh)
[04:52:51] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[04:53:15] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[04:53:25] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[04:54:08] *** Joins: Atque (~Atque@user/atque)
[04:55:57] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:59:18] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[05:02:58] *** Quits: Guest7469 (~Guest@host76.190-137-36.telecom.net.ar) (Remote host closed the connection)
[05:03:06] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[05:03:29] *** Joins: gjvc (~gjvc@user/gjvc)
[05:09:47] *** Joins: vysn (~vysn@user/vysn)
[05:11:38] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 272 seconds)
[05:13:56] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 250 seconds)
[05:15:55] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:17:32] *** Joins: namkeleser (~namkelese@101.175.104.107)
[05:17:35] *** Joins: constxd (~brad@142.134.78.128)
[05:18:54] <constxd> e->with.block.statements.items[1]->try.finally->drop
[05:19:27] <constxd> what's the longest chain of -> . and [] in ur codebase kings
[05:19:36] <constxd> how deeply are u nesting ur objects
[05:22:18] *** Joins: ymwm_ (~yingmanwu@27.153.166.227)
[05:23:46] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[05:26:14] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[05:27:53] *** Joins: Torr (~Torr@user/torr)
[05:30:50] <pragma-> I tend to assign the most interesting parts of the structure to a intermediate pointers when working with deeply nested structures.
[05:31:01] <pragma-> s/to a/to/
[05:32:31] *** Joins: seninha (~chatzilla@user/seninha)
[05:40:27] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[05:42:30] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:adfa:97b2:16e:b6e4)
[05:47:27] <milesrout> constxd: do you go out of your way to use keywords from other languages as field names, to make your code as incompatible as possible with other languages?
[05:47:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:49:00] <constxd> milesrout: yes
[05:49:07] <milesrout> respect
[05:49:30] <constxd> not featured here but i also make heavy use of 'type' and 'class' as names
[05:50:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[05:51:58] <milesrout> 'new' is too useful a variable name to avoid just for vague C++-related reasons
[05:54:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:54:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:54:44] *** Joins: wroathe (~wroathe@user/wroathe)
[05:55:59] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:56:15] *** Joins: tejr (~tejr@user/tejr)
[06:14:06] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 252 seconds)
[06:14:15] <caze> respek
[06:14:28] *** Joins: Inline__ (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[06:14:37] *** Joins: slimbo (~slim@user/slimbo)
[06:17:01] *** Quits: Inline (~Inline@p200300cd472d8600a7f83f236a05ec56.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:18:09] *** Joins: korg815 (~korg815@user/korg815)
[06:24:43] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 268 seconds)
[06:26:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:28:54] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 272 seconds)
[06:30:36] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[06:31:23] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Quit: Connection error?!)
[06:31:28] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[06:32:20] *** Joins: md5 (~md5@2e40edd9.skybroadband.com)
[06:33:21] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 272 seconds)
[06:33:37] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[06:33:50] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:35:14] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 272 seconds)
[06:39:21] *** Joins: constxd (~brad@142.134.78.128)
[06:41:13] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[06:42:00] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::8099)
[06:42:21] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:42:23] *** Quits: groundboi (~groundboi@user/groundboi) (Quit: WeeChat 2.3)
[06:44:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:45:30] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[06:47:54] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:48:15] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[06:48:40] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::8099) (Quit: Leaving)
[06:49:45] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:50:15] *** Quits: theFr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net) (Ping timeout: 256 seconds)
[06:51:37] *** Joins: theFr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net)
[06:52:03] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[06:53:19] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[07:00:37] *** Joins: zer0x (~zer0x@1.55.210.143)
[07:01:35] *** Quits: zer0x (~zer0x@1.55.210.143) (Remote host closed the connection)
[07:01:50] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:02:07] *** Joins: zer0x (~zer0x@1.55.210.143)
[07:04:26] *** Quits: wootz (~wootz@2806:1000:8000:b6a2:9197:d69a:2ddb:9440) (Ping timeout: 250 seconds)
[07:08:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[07:10:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39f6-2932-099f-a193.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:15:10] <fluter> hi, linux kernel is moving to c11, https://linux.slashdot.org/story/22/02/27/0313254/linus-torvalds-prepares-to-move-the-linux-kernel-to-modern-c anyone see this great news?
[07:16:54] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 3.3)
[07:16:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:18:23] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[07:24:03] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[07:26:11] <pnbeast> Oh, yeah, we've been celebrating all weekend.  It's really turned the place upside down.
[07:29:17] *** Quits: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:34:08] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:35:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:39:00] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[07:39:24] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[07:43:00] *** Quits: pizdets_ (~pizdets@183.182.110.211) (Ping timeout: 272 seconds)
[07:43:01] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:43:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[07:43:40] *** Joins: highrate (~presonic@user/highrate)
[07:49:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:50:06] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[07:50:51] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[07:52:08] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:57:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:58:03] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 252 seconds)
[07:58:39] *** Joins: z4r4 (~z4r4@89.36.78.216)
[08:01:38] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 250 seconds)
[08:07:43] *** Joins: Akiva (~Akiva@user/Akiva)
[08:07:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[08:08:41] *** Quits: zer0x (~zer0x@1.55.210.143) (Remote host closed the connection)
[08:08:48] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:10:20] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:14:27] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:16:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:20:54] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:23:11] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[08:26:21] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[08:30:57] *** Quits: alch (~alch@151.44.5.124) (Read error: Connection reset by peer)
[08:31:37] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:31:41] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[08:33:41] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[08:34:57] *** Joins: alch (~alch@151.46.17.35)
[08:37:30] *** Joins: ztx (~ztx@user/ztx)
[08:40:37] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 240 seconds)
[08:40:45] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[08:41:40] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:48:50] <pony> :)
[08:49:28] <pony> c89 isn't long-outdated
[08:54:59] *** Quits: AssKoala (~asskoala@user/asskoala) (Remote host closed the connection)
[08:55:38] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:57:02] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[08:57:26] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:57:28] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[09:00:45] *** Joins: zacts (~zacts@user/zacts)
[09:01:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:08:15] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:08:27] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[09:12:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7) (Quit: Quit)
[09:14:59] <fluter> oh sorry I'm too late :-P
[09:15:13] <fluter> missed the party
[09:16:08] <pony> :D
[09:16:09] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[09:24:36] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Remote host closed the connection)
[09:27:21] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:28:44] *** Joins: nostar (~nostar@68.51.221.108)
[09:33:02] *** Sadale is now known as chartyr
[09:33:06] *** chartyr is now known as Chartyr
[09:33:10] *** Chartyr is now known as Sadale
[09:37:44] *** Joins: on^ (~on@50.232.121.75)
[09:37:54] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[09:39:01] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[09:40:29] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:40:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:40:30] *** Joins: wroathe (~wroathe@user/wroathe)
[09:41:08] *** Joins: Darkcoal (~user@user/Darkcoal)
[09:42:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:43:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:44:02] <nitrix> They had free beer, like the open-source softwares.
[09:44:36] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[10:06:07] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[10:09:40] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.4)
[10:24:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:26:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:26:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[10:26:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[10:26:20] *** Joins: skapata (~Skapata@user/skapata)
[10:29:38] <NRK> i don't think they're moving to C11, are they?
[10:29:43] <NRK> it's probably GNUC11
[10:30:50] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:31:30] <NRK> also, i really don't think the kernel is using C89 lol. it was either gnu89 or gnu99.
[10:32:39] <dave0> the most priviledged code written in the most unsafe language
[10:35:49] *** Quits: zopsi (~zopsi@104-237-136-227.ip.linodeusercontent.com) (Quit: Oops)
[10:36:38] *** Quits: z4r4 (~z4r4@89.36.78.216) (Quit: Leaving.)
[10:39:12] <NRK> yeah, they should've used python instead
[10:41:12] <dave0> javascript
[10:43:38] <greeter> intercal
[10:45:26] <ent58> nim
[10:50:30] *** Joins: SaifRahman[m] (~saifrahma@2001:470:69fc:105::1:d986)
[10:53:39] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[10:54:57] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[10:56:12] *** Joins: lwhjp (~user@softbank126150065004.bbtec.net)
[11:02:13] *** Joins: hanzo (uid532183@user/hanzo)
[11:12:40] *** Joins: hyperupcall (~hyperupca@cpe-172-90-202-158.socal.res.rr.com)
[11:19:25] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:19:46] *** Joins: aradesh (~aradesh@user/aradesh)
[11:20:59] *** Joins: seninha (~chatzilla@user/seninha)
[11:23:18] *** Joins: zer0x (~zer0x@1.55.210.143)
[11:23:24] *** Quits: yggdrasil (~yggdrasil@67-0-50-195.albq.qwest.net) (Ping timeout: 272 seconds)
[11:24:51] *** Joins: yggdrasil (~yggdrasil@67-0-39-214.albq.qwest.net)
[11:25:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:30:59] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:31:14] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:31:55] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:15] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[11:32:39] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[11:34:48] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 272 seconds)
[11:35:37] *** Joins: jusski (~user@78-56-147-210.static.zebra.lt)
[11:38:49] *** Quits: zer0x (~zer0x@1.55.210.143) (Remote host closed the connection)
[11:40:19] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:41:11] *** Joins: toulene (~toulene@user/toulene)
[11:42:51] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:45:33] *** Joins: toulene (~toulene@user/toulene)
[11:46:54] *** Joins: Guest2 (~Guest2@124.41.240.245)
[11:49:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[11:58:17] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:58:18] *** Quits: on^ (~on@50.232.121.75) (Remote host closed the connection)
[12:01:55] *** Quits: Guest2 (~Guest2@124.41.240.245) (Quit: Client closed)
[12:03:30] *** Joins: namkeleser (~namkelese@101.175.104.107)
[12:07:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:11:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:14:28] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[12:14:40] *** Joins: Waynes (~Waynes@user/waynes)
[12:17:06] *** Joins: moog_ (~moog@107.126.53.51)
[12:17:21] *** Joins: missogra (~missogra@p200300d097253e2ea98756b46aab6bed.dip0.t-ipconnect.de)
[12:18:00] *** Quits: missogra (~missogra@p200300d097253e2ea98756b46aab6bed.dip0.t-ipconnect.de) (Client Quit)
[12:18:19] *** Joins: zer0x (~zer0x@1.55.210.143)
[12:19:18] *** Quits: moog (~moog@98.97.87.156) (Ping timeout: 252 seconds)
[12:24:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:24:36] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[12:27:59] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 606 seconds)
[12:30:12] *** Quits: alch (~alch@151.46.17.35) (Read error: Connection reset by peer)
[12:31:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:33:42] *** Quits: Thedarkb1 (~Thedarkb@82.3.80.190) (Ping timeout: 272 seconds)
[12:34:26] *** Joins: alch (~alch@151.44.47.93)
[12:34:30] <sham1> dart
[12:34:49] <pony> rewrite the linux kernel in raku
[12:34:58] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-12-74.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[12:35:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[12:43:20] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[12:45:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[12:45:45] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[12:46:20] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[12:53:52] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[12:54:26] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-bd6f-9234-8444-86f8.fixed6.kpn.net)
[12:57:23] *** Joins: cadmio (~cadmio@151.47.68.51)
[12:58:08] <cadmio> warning: assignment discards â€˜constâ€™ qualifier from pointer target type [-Wdiscarded-qualifiers]  126 |   searchString = gtk_entry_get_text(GTK_ENTRY(search_entry));
[12:58:49] <cadmio> I don't understand it https://paste.gnome.org/p4mtnutsb#line-33 there's no const qualifier put in place
[13:00:44] <dave0> cadmio: what is the prototype for gtk_entry_get_text() ?
[13:01:14] <pony> hi
[13:02:05] *** Parts: pony (sid524992@smol/hors) ()
[13:02:58] <cadmio> dave0: you're right, so I've to change the code to declare it as const
[13:03:17] <dave0> cadmio: line 7 in that paste
[13:03:27] <dave0> cadmio: const char *searchString = NULL;
[13:05:00] <dave0> far out these gtk function names are longer than in X11
[13:06:30] <sham1> dave0: makes sense somewhat, considering that the names consist of some kind of a namespace, the name of your class and then the "method" name
[13:06:58] *** Joins: vboyko (~vboyko@46.211.17.118)
[13:07:50] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:16:28] <cadmio> const char *p and char const *p are the same thing?
[13:17:14] <dave0> cadmio: yes
[13:19:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:19:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[13:20:23] <sham1> ,parens sizeof(0)["abcdefghijkl"]
[13:20:24] <candide> sham1: sizeof (0["abcdefghijkl"])
[13:21:57] <dave0> ,cc putchar( (sizeof(0))["abcdefghijkl"] );
[13:21:59] <candide> dave0:  cannot subscript something of type 'int'
[13:22:08] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[13:27:31] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[13:27:48] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 240 seconds)
[13:27:50] *** Joins: mniip (mniip@libera/staff/mniip)
[13:29:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:31:03] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[13:31:28] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[13:32:00] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:32:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:32:35] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[13:34:18] *** Joins: fe23 (~fe23@2409:8a34:466:6010:f8dc:615:8ec7:7e9)
[13:36:05] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:36:46] *** Quits: jusski (~user@78-56-147-210.static.zebra.lt) (Remote host closed the connection)
[13:37:35] *** Joins: ztx (~ztx@user/ztx)
[13:42:40] <dave0> chuck norris could
[13:42:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:46:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:49:21] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[13:49:32] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[13:50:02] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:53:21] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[14:03:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:04:58] *** Quits: zer0x (~zer0x@1.55.210.143) (Remote host closed the connection)
[14:07:37] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.228)
[14:09:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:12:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[14:12:39] *** Joins: strajder (~strajder@user/strajder)
[14:14:16] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[14:14:36] <Waynes> ,cc putchar(sizeof(0)["abcdefghijkl"]);
[14:14:38] <candide> Waynes:  cannot subscript something of type 'int'
[14:14:52] <Waynes> gcc must be chuck norris
[14:16:03] *** Joins: wand_ (~user@gateway/tor-sasl/wand)
[14:18:15] <Waynes> ,cc printf("%c", (sizeof(0))["abcdefghijkl"]);
[14:18:17] <candide> Waynes: e
[14:18:55] *** Quits: wand (~user@gateway/tor-sasl/wand) (Ping timeout: 240 seconds)
[14:18:58] <Waynes> why does the bot not work with putchar, but with printf (works with putchar on my machine)
[14:19:28] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[14:20:30] <dave0> fucking yeah!
[14:20:44] *** Quits: DSee (~DSee@198.147.22.212) (Quit: Quit)
[14:21:15] <dave0> oh it's a bot problem?
[14:21:22] <dave0> oh well don't worry about it
[14:21:46] <dave0> ,cc int x = (sizeof(0))["abcdefghijkl"]; putchar(x);
[14:21:49] <candide> dave0: e
[14:22:03] *** Joins: DSee (~DSee@198.147.22.212)
[14:22:17] <Waynes> Yeah, it's a bot problem. Works everywhere else I tried. https://ideone.com/hMFUMz
[14:22:58] <dave0> probably just a typo
[14:23:02] <Waynes> ,cc putchar((sizeof(0))["abcdefghijkl"]);
[14:23:02] <dave0> .report
[14:23:04] <candide> Waynes:  cannot subscript something of type 'int'
[14:23:13] <dave0> ,report typo
[14:23:13] <candide> typo has been reported (report id 75424)
[14:23:20] <Waynes> neat
[14:25:33] *** Inline__ is now known as Inline
[14:26:22] *** Joins: kurahaupo (~kurahaupo@pa49-197-172-99.pa.qld.optusnet.com.au)
[14:26:54] *** Quits: mahmutov_ (~mahmutov@5.176.35.94) (Ping timeout: 252 seconds)
[14:28:00] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 252 seconds)
[14:29:53] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[14:30:48] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[14:32:44] *** Quits: DSee (~DSee@198.147.22.212) (Quit: Quit)
[14:33:04] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:33:28] *** Joins: DSee (~DSee@198.147.22.212)
[14:33:28] *** Quits: DSee (~DSee@198.147.22.212) (Client Quit)
[14:34:03] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[14:34:15] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:34:29] *** Joins: DSee (~DSee@198.147.22.212)
[14:34:34] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:34:54] *** Quits: DSee (~DSee@198.147.22.212) (Client Quit)
[14:35:23] *** Joins: DSee (~DSee@198.147.22.212)
[14:38:32] *** Joins: zacts (~zacts@user/zacts)
[14:38:33] *** Joins: X-Scale` (~ARM@83.223.233.31)
[14:39:50] *** Joins: VoidSync (~sync@user/voidsync)
[14:40:17] *** Joins: namkeleser (~namkelese@101.175.104.107)
[14:41:00] *** Quits: X-Scale (~ARM@219.206.137.78.rev.vodafone.pt) (Ping timeout: 272 seconds)
[14:41:01] *** X-Scale` is now known as X-Scale
[14:43:03] *** Joins: vekay (~vekay@user/vekay)
[14:43:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:44:50] <cadmio> I fixed a bug and introduced a new one I cannot solve...
[14:45:07] *** Joins: bick (~kotaman@94.46.203.147)
[14:46:42] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[14:47:40] <dave0> where's the code
[14:49:09] *** Quits: bick (~kotaman@94.46.203.147) (Client Quit)
[14:50:28] *** Joins: gog (~ada@user/gog)
[14:51:35] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[14:51:41] <cadmio> so when you modify a file and then try to close it then it should ask to save it before closing it
[14:51:49] <cadmio> it doesn't happen anymore https://gioretikto.github.io/software/litos2.7.tar.gz
[14:52:12] <dave0> sorry i don't know gtk
[14:54:19] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[14:55:38] *** Joins: thevishy (~Nishant@49.37.242.151)
[14:57:30] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[15:00:27] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:01:22] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:02:39] *** Quits: slidercrank (~slidercra@user/slidercrank) (Client Quit)
[15:02:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:04:26] *** Quits: yggdrasil (~yggdrasil@67-0-39-214.albq.qwest.net) (Ping timeout: 272 seconds)
[15:08:25] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:10:39] <Waynes> looks like there's #gtk
[15:10:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[15:11:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:11:43] <cadmio> no worries I started over from the old version and seems ok now
[15:12:38] *** Joins: savolla (~quassel@95.10.203.10)
[15:15:32] *** Joins: yggdrasil (~yggdrasil@67-0-90-132.albq.qwest.net)
[15:16:28] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) ()
[15:17:24] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[15:18:58] *** Quits: savolla (~quassel@95.10.203.10) (Remote host closed the connection)
[15:23:25] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[15:26:34] <owensjrw> What is the difference between a "fold" and "map" function? What i was reading it seems they are both used to perform a function on each item in the list, array, or vector.
[15:26:43] <owensjrw> Good morning by friends.
[15:27:24] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[15:30:21] <X-Scale> be welcome, owensjrw
[15:31:22] <dave0> owensjrw: that's not c
[15:32:10] <sham1>  Well it could be C, but probably not, at least with those names
[15:33:00] *** Quits: DSee (~DSee@198.147.22.212) (Quit: Quit)
[15:33:03] <X-Scale> owensjrw: also try #proglangdesign and #scheme
[15:34:41] <X-Scale> owensjrw: https://srfi.schemers.org/srfi-1/srfi-1.html
[15:35:50] <sham1> But yeah shortly: map goes through each element of your structure and applies the specified function for each element, producing a new list/array/whatever with the new elements. Fold meanwhile reduces the structure's elements by some binary (usually) function, like for example summing every element. Can also be used to implement things like map and filter and other such things
[15:36:10] <sham1> It's an example of a catamorphism
[15:36:50] <sham1> In C those things tend to be expressed more in the way of just doing raw iteration with for-loops and such
[15:37:15] *** Quits: cadmio (~cadmio@151.47.68.51) (Quit: WeeChat 3.0)
[15:41:20] <owensjrw> Thank you..
[15:46:18] <kurahaupo> owensjrw: Generally "map" takes a list and uses a supplied function to produce another list with the same cardinality, whereas "fold" takes a list and uses a supplied function combine adjacent elements repeatedly until there's only a single valid left
[15:46:25] *** Joins: Rounin (~david@84.212.130.215)
[15:46:35] <kurahaupo> err, what sham1 said
[15:46:57] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Leaving)
[15:47:04] <owensjrw> Thank you again :-)
[15:48:01] *** Quits: TommyC (~TommyC@user/tommyc) (Ping timeout: 256 seconds)
[15:48:04] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:48:45] *** Joins: TommyC (~TommyC@user/tommyc)
[15:49:00] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[15:51:52] *** Joins: plastico (~plastico@neomutt/plastico)
[15:55:52] <owensjrw> X-Scale that was a great link, thank you. Where is Scheme used, an article I was reading stated it is the most un-portable language.
[15:57:39] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Quit: Leaving)
[15:59:10] <nomagno> ... Scheme isn't remotely close to being the most un-portable language
[15:59:10] *** Quits: kurahaupo (~kurahaupo@pa49-197-172-99.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[15:59:18] <nomagno> It's formally standardized and specified, for one
[15:59:24] <sham1> Scheme is portable, the problem is that you end up needing a lot of implementation-specific things to do a lot of stuff
[15:59:33] *** Joins: Klinda (~superleag@user/klinda)
[16:00:04] <nomagno> sham1: which you kinda can't complain about in this specific channel :P
[16:00:23] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:00:45] <sham1> Indeed, that's a trait unfortunately shared between C and Scheme
[16:00:57] *** Joins: kurahaupo (~kurahaupo@pa49-197-172-99.pa.qld.optusnet.com.au)
[16:01:12] <nomagno> owensjrw: Scheme is a small Lisp derivative that is normally used as an interpreted language for user-generated contents, such as plugins for text editors
[16:01:51] <nomagno> There are also a lot of Scheme derivatives, supersets, dialects, and some of these are compiled
[16:02:21] * sham1 squints at "interpreted language"
[16:02:21] *** Joins: random-nick (~random-ni@87.116.176.196)
[16:02:30] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-bd6f-9234-8444-86f8.fixed6.kpn.net) (Quit: Leaving)
[16:02:38] <owensjrw> See this is why I like to visit you all. I always learn so much :-)
[16:02:42] *** Joins: constxd (~brad@142.134.78.128)
[16:02:57] <nomagno> sham1: 'normally used as'
[16:03:01] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Quit: Leaving)
[16:03:19] <sham1> Well okay sure
[16:03:45] <nomagno> It is standardized by a community-run committee, and the standards are published under an informal 'you can modify if you extend or change the language' license
[16:10:28] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[16:13:02] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[16:14:36] *** Quits: Waynes (~Waynes@user/waynes) (Remote host closed the connection)
[16:14:45] *** Joins: Waynes (~Waynes@user/waynes)
[16:19:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[16:19:33] *** Quits: vekay (~vekay@user/vekay) (Quit: Leaving)
[16:19:43] *** Quits: Waynes (~Waynes@user/waynes) (Read error: Connection reset by peer)
[16:19:55] *** Joins: Waynes (~Waynes@user/waynes)
[16:22:50] *** Quits: oakyy (~oaky@2-248-81-51-no181.tbcn.telia.com) (Quit: Leaving)
[16:25:09] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[16:25:29] *** Joins: crystalfrost[m] (~crystalfr@2001:470:69fc:105::1:d9b8)
[16:28:35] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:28:40] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[16:29:20] *** Joins: aosync (~aws@mx1.aosync.me)
[16:29:38] *** Quits: alch (~alch@151.44.47.93) (Read error: Connection reset by peer)
[16:29:50] *** Quits: Waynes (~Waynes@user/waynes) (Read error: Connection reset by peer)
[16:30:06] *** Joins: Waynes (~Waynes@user/waynes)
[16:30:11] *** Quits: Waynes (~Waynes@user/waynes) (Client Quit)
[16:30:16] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Client Quit)
[16:30:20] *** Joins: Waynes (~Waynes@user/waynes)
[16:30:25] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[16:30:51] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:31:50] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[16:34:47] *** Joins: alch (~alch@151.46.10.77)
[16:35:05] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[16:35:51] *** Joins: ymwm__ (~yingmanwu@27.153.167.53)
[16:37:23] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[16:37:52] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[16:38:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:38:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:38:21] *** Quits: ymwm_ (~yingmanwu@27.153.166.227) (Ping timeout: 252 seconds)
[16:39:28] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[16:39:40] *** Joins: shivesh (~shivesh@user/shivesh)
[16:39:46] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[16:40:32] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Client Quit)
[16:40:33] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[16:42:36] *** Joins: Xeha (~Xeha@user/Xeha)
[16:43:42] *** Quits: shivesh (~shivesh@user/shivesh) (Client Quit)
[16:43:50] *** Joins: shivesh (~shivesh@user/shivesh)
[16:44:21] *** Quits: gog (~ada@user/gog) (Quit: byee)
[16:45:06] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 250 seconds)
[16:45:07] *** Quits: shivesh (~shivesh@user/shivesh) (Client Quit)
[16:45:15] *** Joins: shivesh (~shivesh@user/shivesh)
[16:46:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:46:57] *** Quits: shivesh (~shivesh@user/shivesh) (Client Quit)
[16:47:05] *** Joins: shivesh (~shivesh@user/shivesh)
[16:47:28] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[16:50:40] *** Joins: Rynn (~rynn@216.30.158.198)
[16:52:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:53:22] <owensjrw> C yaw'll later have to run...
[16:53:28] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[16:53:45] *** Quits: vboyko (~vboyko@46.211.17.118) (Ping timeout: 252 seconds)
[16:54:40] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[16:56:46] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[16:57:05] *** Joins: vikn (~vikn@83-233-104-30.cust.bredband2.com)
[16:57:55] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:58:18] *** Joins: vboyko (~vboyko@46.211.12.41)
[16:59:24] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Ping timeout: 250 seconds)
[17:01:00] *** Quits: zwrr (~zwr@2804:d45:b966:fb00:d5f4:d325:b39e:8704) (Ping timeout: 240 seconds)
[17:01:45] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[17:02:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:53dd:b5a5:6b8e:e94d)
[17:02:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:02:26] *** Joins: aosync (~aws@mx1.aosync.me)
[17:03:27] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-171.cspire.com) (Read error: Connection reset by peer)
[17:04:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[17:04:58] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:05:32] *** Quits: zachel_ (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[17:07:55] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:08:04] *** Joins: zachel (~zachel@user/zachel)
[17:08:15] *** Joins: ascetics (~mingk@123.113.230.112)
[17:10:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:11:25] *** Joins: pulse (~pulse@user/pulse)
[17:15:55] *** Joins: AsenMx_ (~asen@user/asenmx)
[17:16:11] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 245 seconds)
[17:17:23] *** AsenMx_ is now known as AsenMx
[17:20:25] *** Joins: acerbic (~acerbic@cs-xdata-50-86-52-171.cspire.com)
[17:22:10] *** Joins: mahmutov_ (~mahmutov@5.176.35.94)
[17:26:42] *** Quits: jfsimon1981 (~jfsimon19@116.68.6.84.rev.sfr.net) (Ping timeout: 250 seconds)
[17:26:45] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:32:56] <constxd> kings
[17:35:26] *** Quits: ascetics (~mingk@123.113.230.112) (Quit: Leaving.)
[17:36:47] *** Joins: Intelo (~Intelo@88.246.75.144)
[17:36:49] <Intelo> Hi
[17:36:50] <Intelo> Question: is there any.. ANY UI lib/strategy/language/framework that is simply better and fast to develop as compared to html,css , js websites. I am thinking to use native UI in wasm instead of react/ js. It will still be a website.
[17:37:47] <BtbN> That's not how wasm works oO
[17:37:57] <BtbN> You can't just compile like a GTK application to wasm and expect it to run
[17:38:56] *** Joins: kts (~kts@103.73.237.125)
[17:39:36] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 272 seconds)
[17:40:27] *** Joins: jfsimon1981 (~jfsimon19@37.66.6.84.rev.sfr.net)
[17:41:15] <Intelo> i see
[17:43:41] *** Quits: AdmiralBumbleBee (~AdmiralBu@47.203.174.105) (Read error: Connection reset by peer)
[17:44:08] *** Joins: AdmiralBumbleBee (~AdmiralBu@47.203.174.105)
[17:44:40] *** Quits: kts (~kts@103.73.237.125) (Ping timeout: 272 seconds)
[17:46:36] *** Quits: jfsimon1981 (~jfsimon19@37.66.6.84.rev.sfr.net) (Ping timeout: 240 seconds)
[17:47:29] *** Joins: jfsimon1981 (~jfsimon19@197.59.6.84.rev.sfr.net)
[17:48:28] *** Joins: kts (~kts@103.73.237.125)
[17:52:54] *** Quits: jfsimon1981 (~jfsimon19@197.59.6.84.rev.sfr.net) (Ping timeout: 272 seconds)
[17:53:31] *** Joins: jfsimon1981 (~jfsimon19@200.5.132.77.rev.sfr.net)
[17:54:09] *** Joins: lleo (~lleo@89-200-46-213.mobile.kpn.net)
[17:56:38] *** Quits: zachel (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[17:56:39] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[17:57:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.228) (Ping timeout: 252 seconds)
[17:57:05] *** Joins: duds- (~duds-@user/duds)
[17:59:05] *** Joins: zachel (~zachel@user/zachel)
[17:59:58] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[18:00:00] *** Joins: KevinX (~KevinX@user/KevinX)
[18:00:05] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:02:30] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[18:04:56] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 272 seconds)
[18:06:13] <Intelo> BtbNÂ WASM can drive webGL and webGPU ,so you can run any graphical interface that can be compled natively. No?
[18:07:47] <Intelo> So it is possible and ok to expect?
[18:10:17] *** Joins: meator (~meator@user/meator)
[18:12:34] <DPA> WebGL is a subset of GLES, and so are it's GLSL shaders. Last time I looked into WebGPU, it wasn't widely supported yet. Also note that you can't access any JS objects directly from WASM, you always need a wrapper function. Only arrays, strings & numbers can be passed to WASM, the arrays & strings must be copied if not allocated in WASM to it's memory first, and functions can be imported and exported, but calls to them are limited like this.
[18:12:56] <sham1> Well you'd still need to support the webgpu stuff as a backend for your graphical app
[18:22:15] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[18:22:22] *** Joins: Torr (~Torr@user/torr)
[18:22:34] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[18:22:45] *** Joins: Torr (~Torr@user/torr)
[18:26:14] *** Joins: vd (d4a4416b@67.205.143.82)
[18:26:35] *** Parts: vd (d4a4416b@67.205.143.82) (The Lounge - https://thelounge.chat)
[18:26:38] *** Quits: vikn (~vikn@83-233-104-30.cust.bredband2.com) (Remote host closed the connection)
[18:27:15] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.134) (Ping timeout: 256 seconds)
[18:27:17] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-585f-140b-6646-4b30.res6.spectrum.com)
[18:30:02] *** Quits: Red (~Red@41.92-221-233.customer.lyse.net) (Quit: Leaving)
[18:30:34] *** Joins: Red (~Red@41.92-221-233.customer.lyse.net)
[18:34:02] *** Joins: ztx (~ztx@user/ztx)
[18:34:06] *** Parts: Intelo (~Intelo@88.246.75.144) ()
[18:34:24] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[18:35:29] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[18:38:05] *** Joins: soul-d (~uknown@user/soul-d)
[18:39:08] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[18:39:08] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[18:39:08] *** Joins: AssKoala (~asskoala@user/asskoala)
[18:39:55] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: cya pals)
[18:44:35] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 256 seconds)
[18:44:48] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:45:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:47:52] *** Joins: fowl (~fowlmouth@user/fowl)
[18:47:58] *** Joins: korg815 (~korg815@user/korg815)
[18:50:23] *** Joins: Atque (~Atque@user/atque)
[18:53:59] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:54:40] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[18:58:07] *** Joins: toulene8 (~toulene@user/toulene)
[19:00:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c)
[19:00:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c) (Changing host)
[19:00:21] *** Joins: skapata (~Skapata@user/skapata)
[19:02:17] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g_)
[19:03:29] *** Joins: Guest3344 (~Guest33@37.162.33.149)
[19:03:47] *** Quits: wand_ (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[19:06:27] *** Joins: neo1 (~neo@103.144.161.13)
[19:09:13] *** Joins: wand (~user@gateway/tor-sasl/wand)
[19:10:27] *** Parts: Guest3344 (~Guest33@37.162.33.149) ()
[19:11:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[19:13:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[19:13:55] *** Joins: Everything (~Everythin@37.115.210.35)
[19:16:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[19:17:38] *** Joins: zer0x (~zer0x@1.55.210.143)
[19:21:38] *** Joins: Dome__ (~Dome@host-95-237-130-84.retail.telecomitalia.it)
[19:22:50] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[19:23:43] *** Quits: Dome__ (~Dome@host-95-237-130-84.retail.telecomitalia.it) (Client Quit)
[19:23:43] *** Quits: toulene8 (~toulene@user/toulene) (Read error: Connection reset by peer)
[19:23:59] *** Joins: toulene (~toulene@user/toulene)
[19:24:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:26:43] *** Joins: ferdna (~ferdna@user/ferdna)
[19:30:06] *** Quits: deekej[m] (~deekej@2001:470:69fc:105::a6c) (Quit: You have been kicked for being idle)
[19:32:42] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[19:33:54] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:34:04] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:34:36] *** Quits: zer0x (~zer0x@1.55.210.143) (Ping timeout: 240 seconds)
[19:41:37] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[19:42:18] *** Joins: AmR (~AmREiSa@156.199.236.198)
[19:47:06] *** Quits: kts (~kts@103.73.237.125) (Ping timeout: 250 seconds)
[19:49:35] <owensjrw> Hello all, folds and maps again... if I do this for a fold  "float foldl(float (*fun)(float, float), float acc, float *list_traverse, size_t size_list){return size_list == 0 ? acc : foldl(fun, fun(acc, *list_traverse), list_traverse + 1, size_list - 1);"
[19:50:26] <owensjrw> to build a map functions I am assuming the float acc would become float *acc but how would I malloc the size in a recursive function?
[19:50:32] * pragma- stares at `list_traverse` and `size_list`
[19:50:36] <pragma-> that consistency
[19:50:57] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[19:52:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com)
[19:52:32] <owensjrw> so that malloc is only once and the return is the pointer to the new mapped values?
[19:53:20] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Quit: Stay safe!)
[19:54:00] <pragma-> i would name them either `list_traverse` and `list_size` or more simply just `list` and `size`.
[19:54:25] <pragma-> the 3 hardest things in computer science: cache invalidation, naming things and counting things.
[19:54:26] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[19:54:43] <pragma-> >:C  I meant to say 2, not 3, for the joke.
[19:54:43] <NRK> that's 4
[19:55:05] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[19:57:32] <pragma-> owensjrw: you don't want to malloc within a recursive function
[19:57:37] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[19:57:44] <pragma-> you ideally want to figure out how much you need to allocate beforehand
[19:58:22] <pragma-> of course that's not always possible
[19:59:15] <zer0python> pragma-: you could realloc()
[19:59:40] <owensjrw> float *map(float (*fun)(float, float),float acc[size], float *list, size_t size){return size_list == 0 ? acc : foldl(fun, fun(acc + 1, *list), list + 1, size - 1)} like such?
[20:00:30] <pragma-> well, to be fair, I was thinking about during performance-critical loops, not uninitialization loops.
[20:00:30] <owensjrw> return should be *acc however am I close?
[20:00:43] *** Joins: strajder (~strajder@user/strajder)
[20:00:44] <pragma-> s/unin/in/
[20:01:05] <zer0python> pragma-: indeed. I agree that it would be more efficient to determine array size before executing the map() function.
[20:01:38] *** Joins: pizdets (~pizdets@183.182.114.230)
[20:03:35] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 256 seconds)
[20:05:53] <pragma-> owensjrw: in the snippets pasted i do not see `acc` being used in any meaningful way so I have no comment.
[20:06:26] *** Quits: pizdets (~pizdets@183.182.114.230) (Ping timeout: 265 seconds)
[20:06:27] <owensjrw> Thank you for ganna work on it.. Be back soon.
[20:07:05] <pragma-> maybe I missed it?
[20:08:31] *** Joins: zzbot (~zzbot@user/zzbot)
[20:09:35] *** Quits: zzbot (~zzbot@user/zzbot) (Remote host closed the connection)
[20:10:56] *** Quits: alch (~alch@151.46.10.77) (Ping timeout: 250 seconds)
[20:12:38] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:17:02] *** Joins: pizdets (~pizdets@183.182.115.241)
[20:17:23] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[20:18:53] <fizzie> If you want a recursive map, the natural kind of list for that is a linked list. For something that's given float *list, size_t size, the recursive version doesn't really make that much sense.
[20:20:39] <pr-asadi> Hello. Can I find the pid of a process without using "/proc" and popen(3)?
[20:21:11] *** Quits: pizdets (~pizdets@183.182.115.241) (Ping timeout: 245 seconds)
[20:23:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[20:23:32] <fizzie> (The foldl doesn't really need to be recursive either, I just wrote it that way because it's conventional.)
[20:24:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:25:13] *** Quits: neo1 (~neo@103.144.161.13) (Quit: WeeChat 3.4)
[20:26:15] <fizzie> float foldl(float f(float acc, float x), float acc, float list[], size_t size) { for (size_t i = 0; i < n; i++) acc = f(acc, list[i]); return acc; } is probably more C-ish.
[20:31:47] *** Joins: pizdets_ (~pizdets@183.182.114.15)
[20:32:21] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[20:32:36] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[20:33:57] *** Joins: KevinX (~KevinX@user/KevinX)
[20:34:46] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[20:35:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[20:37:38] *** Quits: KevinX (~KevinX@user/KevinX) (Client Quit)
[20:38:49] *** Quits: pizdets_ (~pizdets@183.182.114.15) (Ping timeout: 265 seconds)
[20:44:23] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[20:44:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:45:45] *** Joins: zzbot (~zzbot@user/zzbot)
[20:46:47] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[20:47:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[20:50:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:50:26] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[20:54:21] *** Joins: Betal (~Betal@user/betal)
[20:55:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:55:37] *** Joins: pizdets (~pizdets@183.182.111.163)
[20:56:46] *** Quits: fe23 (~fe23@2409:8a34:466:6010:f8dc:615:8ec7:7e9) (Quit: fe23)
[20:59:31] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:59:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:00:35] *** Quits: pizdets (~pizdets@183.182.111.163) (Ping timeout: 265 seconds)
[21:00:46] *** Quits: ymwm__ (~yingmanwu@27.153.167.53) (Ping timeout: 250 seconds)
[21:00:58] *** Joins: neo1 (~neo@103.144.161.8)
[21:01:09] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[21:01:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:02:17] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[21:04:02] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[21:04:19] *** Joins: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[21:04:43] *** Quits: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Client Quit)
[21:04:54] *** Joins: neo1 (~neo@103.144.161.8)
[21:05:04] *** Joins: fezhead (~mrpenguin@user/mrpenguin)
[21:05:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:05:28] <tusko> I spawn a bunch of different threads in my test program and then try to use join() on them. My producer kicks in, fills my buffer, but then blocks and I get deadlock.
[21:05:40] *** Joins: pizdets (~pizdets@183.182.114.244)
[21:05:41] <tusko> Is there some specific way I should be calling these things?
[21:05:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[21:05:49] <tusko> I can provide code xaamples
[21:06:01] <owensjrw> Think I got fold and map to work but the math is not working the sd and ssd should by 2.0 and 2.1 respectively is I put in 2,4,4,4,5,5,7,9 for the data points.  https://bpa.st/XOOA
[21:06:18] <owensjrw> Sorry tusko you were first...
[21:06:38] *** Quits: fezhead (~mrpenguin@user/mrpenguin) (Client Quit)
[21:06:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:07:04] <tusko> its cool, bro, I'm sure we'll both ger the help we need but don't deserve right now
[21:07:51] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[21:08:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[21:09:30] <owensjrw> Yep these folks here are so awesome. Would like to shake their hands and say thank you.
[21:09:49] *** Joins: user_ (~user@62.216.60.166)
[21:10:14] *** Parts: SaifRahman[m] (~saifrahma@2001:470:69fc:105::1:d986) ()
[21:10:23] *** Joins: z4r4 (~z4r4@89.36.78.152)
[21:10:55] *** Quits: user_ (~user@62.216.60.166) (Client Quit)
[21:11:32] *** Joins: angelacrust (~angelacru@182.64.84.36)
[21:12:24] <fizzie> `list_item` appears entirely unused in map. If you want it to map in-place, it should probably contain something like `*list = fun(*list, avg); map(fun, list+1, size-1, avg);` in the recursive case.
[21:12:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[21:13:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:15:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:15:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:16:07] <angelacrust> Hi, I'm unable to spot the logical error in this program. The program is failing at "((" https://bpa.st/P5OA
[21:16:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com)
[21:17:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:17:29] *** Quits: pizdets (~pizdets@183.182.114.244) (Ping timeout: 265 seconds)
[21:18:10] <owensjrw> angelacrust line 7 looks like its missing a "(" but Im a very very noobie.
[21:18:48] <angelacrust> Should I write a separate `if` block to counter this error? I'm looking for a solution that doesn't implement an extra `if` block
[21:18:56] <angelacrust> owensjrw I'm also a noobi
[21:18:59] <angelacrust> *noobie
[21:22:43] *** Joins: pizdets (~pizdets@183.182.110.14)
[21:24:01] <owensjrw> angelacrust I incorrectly counted the () in line 7 disregard
[21:24:17] <angelacrust> that's okay :)
[21:24:52] <angelacrust> There is a flaw in the logic but I can't figure it out l
[21:24:55] <owensjrw> angelacrust why did you '- 1' on extreme? strlen does not include the null '\0' char in the count?
[21:26:27] <angelacrust> oh, the program is checking whether the sequence of parentheses is correct or not.
[21:26:28] <angelacrust> `( ( { } ) )`
[21:26:28] <angelacrust> I'm consuming the closing parts because they've already been computed. Hence, the -1
[21:27:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:27:07] *** Joins: tiotags (~tiotags@user/tiotags)
[21:27:27] *** Quits: pizdets (~pizdets@183.182.110.14) (Ping timeout: 256 seconds)
[21:27:58] <angelacrust> Failing at `( ) { } } {`
[21:29:53] *** Joins: pizdets (~pizdets@183.182.110.16)
[21:31:29] <constxd> bro what the fuck
[21:31:38] <constxd> abs(s[i + 1] - s[i])
[21:31:43] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[21:31:45] <angelacrust> what
[21:32:11] <angelacrust> OHHHH
[21:33:32] <angelacrust> owensjrw you were right, I didn't close the braces correctly
[21:33:53] <constxd> start over from scratch imo
[21:34:25] <angelacrust> hmm
[21:35:49] <owensjrw> Whoo Hooo yes I got one right.... party at my place... not really... :-)
[21:36:09] <angelacrust> yeah gg
[21:36:32] <angelacrust> Â there's still a logical flaw in this code...
[21:36:35] <angelacrust> :(
[21:36:40] <constxd> delete it all and start over
[21:36:43] <constxd> it's fucked right now
[21:37:14] <angelacrust> yeah
[21:37:17] *** Joins: Warkruid (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[21:37:29] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Quit: Leaving)
[21:37:59] <constxd> try some examples with pencil and paper
[21:38:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea)
[21:38:19] <constxd> i don't think you have the algorithm figured out. you should work on that before translating it into C code
[21:38:27] <angelacrust> yeah:(
[21:38:50] <constxd> dont b sad
[21:38:55] <angelacrust> all other solutions are using complex data structures and I think I can solve this without using any DS
[21:39:03] <angelacrust> 62/91 tests passed
[21:39:38] *** Quits: Warkruid (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Client Quit)
[21:39:39] <constxd> lol this is kind of a binary thing, either it works or it doesn't
[21:39:45] <angelacrust> yeah :(
[21:39:49] <constxd> don't pay attention to the number of tests passing
[21:40:22] <angelacrust> I only have 20 mins left if : (
[21:40:58] <constxd> you want to use some kind of stack
[21:41:12] <constxd> either implicitly through a recursive function or explicitly by allocating one
[21:41:22] <angelacrust> yes, but I believe I can solve it without one
[21:41:37] *** Quits: vboyko (~vboyko@46.211.12.41) (Ping timeout: 256 seconds)
[21:42:11] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[21:42:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-99f7-1928-2563-4a8c.res6.spectrum.com)
[21:43:31] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[21:46:05] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[21:47:00] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Client Quit)
[21:48:23] <constxd> whatever you do will be isomorphic to the stack solution
[21:48:30] <constxd> it's simply in the nature of the problem
[21:48:33] <angelacrust> hmm
[21:48:33] <constxd> but ok good luck
[21:48:36] <angelacrust> thanks
[21:48:45] <angelacrust> I think I have to remove the absolute function
[21:49:56] <constxd> bro you have to remove all of it
[21:49:58] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:50:14] <angelacrust> :')
[21:50:25] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[21:50:30] <angelacrust> I will spend a few more hours on this problem
[22:00:04] *** Quits: neo1 (~neo@103.144.161.8) (Quit: WeeChat 3.4)
[22:00:08] *** Joins: alex11 (~alex11@user/alex11)
[22:01:00] *** Joins: reset (~reset@user/reset)
[22:03:21] *** Joins: alch (~alch@151.46.72.79)
[22:03:56] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[22:04:28] *** Joins: neo1 (~neo@103.144.161.23)
[22:04:52] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:05:27] <ski> <https://bpa.st/P5OA> -- 404
[22:05:47] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[22:06:14] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[22:06:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:06:35] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[22:06:46] <angelacrust> https://bpa.st/5WJA ski
[22:06:49] *** Quits: neo1 (~neo@103.144.161.23) (Client Quit)
[22:06:50] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[22:06:55] <angelacrust> changed the code a bit
[22:08:10] *** Joins: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[22:08:15] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:08:52] *** Joins: csileeeeeeeeeeoe (~csileeeee@50.232.121.75)
[22:09:21] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[22:09:48] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:13:41] *** Joins: Dave_Rizzle (~Dave@2001:16b8:1ed8:1100:90df:5593:cc22:bdd6)
[22:15:18] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[22:15:40] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[22:15:51] *** Quits: angelacrust (~angelacru@182.64.84.36) (Quit: Client closed)
[22:15:51] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[22:16:15] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:16:22] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:17:38] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[22:18:30] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[22:18:53] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:19:12] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:21:00] *** Quits: pizdets (~pizdets@183.182.110.16) (Ping timeout: 252 seconds)
[22:22:17] *** Joins: pizdets (~pizdets@183.182.114.148)
[22:22:25] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[22:23:03] *** Quits: Dave_Rizzle (~Dave@2001:16b8:1ed8:1100:90df:5593:cc22:bdd6) (Quit: Leaving...)
[22:24:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[22:25:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:26:38] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:26:53] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:28:18] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 250 seconds)
[22:31:25] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:31:34] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:32:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:33:30] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[22:34:12] *** Joins: oriba (~oriba@dynamic-089-014-025-098.89.14.pool.telefonica.de)
[22:35:02] *** Parts: RETRO (~RETRO@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[22:35:37] *** Quits: z4r4 (~z4r4@89.36.78.152) (Ping timeout: 240 seconds)
[22:36:17] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[22:36:35] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:37:24] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[22:41:37] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[22:41:51] *** Joins: Akuli (~Akuli@82-203-162-94.bb.dnainternet.fi)
[22:42:56] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:44:13] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[22:45:08] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:49] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[22:46:08] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[22:47:26] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:48:03] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:52:54] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 252 seconds)
[22:53:22] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[22:54:14] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:04:18] <owensjrw> Got the map to work. Whoo Hoo on a roll today... https://bpa.st/UHYA
[23:07:26] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[23:07:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-99f7-1928-2563-4a8c.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:07:59] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g)
[23:11:29] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[23:11:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c158-e30b-7e5e-fcd2.res6.spectrum.com)
[23:12:21] <ski> owensjrw : should `map' update-in-place ?
[23:13:36] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[23:14:18] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Read error: Connection reset by peer)
[23:14:22] <owensjrw> I was thinking the same thing maybe create a second array to keep the original data.
[23:15:10] <ski> letting the caller decide where to store the resulting data would probably make sense, imho
[23:15:22] <ski> `malloc(sizeof(float) * datapoints)' would be better as `malloc(sizeof *data_list * datapoints)'
[23:16:36] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[23:16:56] <ski> the `printf' call in the `for' loop should probably be followed by an `fflush(stdout)'
[23:17:20] <Waynes> I wonder if people should worry about integer overflow in the size computation for malloc
[23:18:18] <Waynes> But more importantly, try entering "duck" for data points and observe the ensuring chaos.
[23:20:10] *** Parts: v4mp (~v4mp@user/v4mp) ()
[23:20:33] <ski> hm, i suppose the `scanf' should use `%zi' rather than `%li'
[23:21:48] <owensjrw> Great points, yes I did not put in any error catching or defensive programming (stolen from the great zed shaw :-) ) techniques.
[23:22:58] <owensjrw> i thought there was a problem with fflush(stdout)
[23:23:23] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[23:23:40] <ski> why is `deviation' called that ?
[23:24:01] <ski> redundant brackets in the `float avg = (...);' command
[23:24:21] <ski> `avg' seems to have no business being a parameter of `map'
[23:24:55] <ski> you should probably adapt `foldl' and `map' to take a `void *context' parameter, which they just pass on to the callback function
[23:25:15] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[23:25:26] <owensjrw> deviation == distance between the value and the average squared.
[23:25:39] <Waynes> "deviation" probably refers to standard deviation but it's squared difference, really.
[23:25:54] <Waynes> Oops, I was too slow.
[23:26:26] <owensjrw> placing avg in map was the only way I can use it in the function deviation within map.
[23:26:41] <ski> owensjrw : that's why you should be passing a `void *context'
[23:27:21] <ski> `map' should not have to care about you wanting the callback to get access to `avg'. it's none of `map's concern, to deal with averages
[23:27:22] <owensjrw> I dont follow are you saying void map(arg, arg, ..){}
[23:27:40] *** Quits: nullptr| (~nullptr@user/nullptr/x-2182142) (Quit: ZNC - http://znc.in)
[23:27:41] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: Lost terminal)
[23:28:04] <ski>   float *map(void *context,float (*fun)(void *,float,float),float *list,size_t size,float avg)
[23:28:12] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:28:53] <ski> er, sorry, that ought to be
[23:28:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:28:57] <ski>   float *map(void *context,float (*fun)(void *,float),float *list,size_t size,float avg)
[23:29:32] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:29:59] <ski> then you can do
[23:30:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:30:30] *** Joins: nullptr| (~nullptr@user/nullptr/x-2182142)
[23:30:48] *** Lord_of_Life_ is now known as Lord_of_Life
[23:30:59] <ski>   float squared_distance_from_average(void *context,float x) {
[23:31:10] <ski>     float *pavg = context;
[23:31:21] <ski>     return (x - *pavg) * (x - *pavg);
[23:31:24] <ski>   }
[23:31:36] <ski> and finally call as
[23:31:57] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 252 seconds)
[23:32:04] <ski>   map(&avg,squared_distance_from_average,data_list,datapoints);
[23:32:07] *** Joins: v4mp (~v4mp@user/v4mp)
[23:32:15] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:32:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:32:33] <ski> well, modulo that you possibly want to pass a pointer to the destination array to `map', as mentioned above
[23:32:37] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[23:33:16] <ski> owensjrw : makes sense ?
[23:33:33] *** Joins: Torr (~Torr@user/torr)
[23:33:37] <owensjrw> I'm still learning how does this change the fact that I'm still passing the value of avg?
[23:33:46] <ski> (you probably should also check that `datapoints' is not zero, before dividing by it)
[23:34:03] *** Joins: teepee (~teepee@openscad/teepee)
[23:34:45] *** Quits: pizdets (~pizdets@183.182.114.148) (Ping timeout: 265 seconds)
[23:34:47] <ski> the point of the change is that it's none of `map's concern that you're passing some extra information to the callback that happens to be a `float' (`avg')
[23:35:18] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[23:35:38] *** Joins: pizdets (~pizdets@183.182.115.101)
[23:35:44] <ski> in another call to `map', you might want your callback to access some other type of data .. and so `map' should not be restricted to just be able to pass a `float' along to the callback. it should be able to pass along any information (and it should not care what type of information that is)
[23:36:47] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[23:37:21] <ski> usually, when you're accepting a function pointer as a callback being passed to a function, you should also be passing a `void *context' parameter, that is passed on to the callback
[23:38:14] <Waynes> life would be much easier if functions could capture variables
[23:38:30] *** Joins: smoke (~smoke@user/smoke)
[23:38:35] *** tazle_ is now known as tazle
[23:39:46] <owensjrw> I am assuming this is to follow the opaque programming techniques?
[23:39:58] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:40:04] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:40:17] <owensjrw> A word I am still learning in this context.
[23:40:34] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[23:41:21] *** Joins: xa0s (~xa0s@mab.sdf.org)
[23:41:43] <ski> well, in GCC you can define local/nested functions, and so you could define `float squared_distance_from_average(float x) { ..avg.. }' inside of `main', and pass `squared_distance_from_average' to `map' (the version without the `void *context' parameter)
[23:41:47] *** Joins: teepee (~teepee@openscad/teepee)
[23:41:48] <ski> (but that's not standard C)
[23:42:04] <ski> owensjrw : dunno what you mean by "the opaque programming techniques"
[23:43:20] <constxd> it's just due to C's weak type system and lack of closures
[23:43:43] <owensjrw> a couple of mentors (such as you are right now) have stated to me to make sure the programs are opaque which is defined  an opaque data type is a data type whose concrete data structure is not defined in an interface. This enforces information hiding, since its values can only be manipulated by calling subroutines that have access to the missing information.
[23:43:53] <constxd> lack of closures accounts for its presense and weak type system accounts for the fact that it's `void *`'
[23:44:13] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[23:45:23] *** Joins: ferdna (~ferdna@user/ferdna)
[23:46:01] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[23:46:44] <ski> (oh, and Clang has blocks, so you could then be using `map(^(float x) { return (x - avg) * (x - avg); },data_list,datapoints)', given that `map' takes a `float (^fun)(float)')
[23:47:28] <ski> anyway, if C had parametric polymorphism / generics, the signature for `map' above would become something like
[23:48:21] <ski>   float *map<typename T>(T *context,float (*fun)(T *,float),float *list,size_t size,float avg);  /* point being to emphasize that the type of the pointed-to context parameter is the same as the first parameter of the callback */
[23:48:47] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[23:51:15] <ski> owensjrw : ah, you seem to be talking about Abstract Data Types (a general Computing Science concept). in C, this can be done by handling pointers to `struct's (or `union's) which are opaque in the interface, meaning that only an identifying tag is given, but not the fields
[23:52:34] <ski> (however, when you said "the opaque programming techniques" it was not clear that you were referring to this, rather than say perhaps "information hiding" through "lexical capture" of non-local variables in (here, simulated) closures, or perhaps something else entirely)
[23:53:54] *** Quits: drflashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b) (Quit: Reconnecting)
[23:53:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea) (Ping timeout: 252 seconds)
[23:54:07] *** Joins: drflashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[23:54:29] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:54:36] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:59:22] <owensjrw> ski,  in all your examples float avg is still in the signature float *map<typename T>(T *context,float (*fun)(T *,float),float *list,size_t size,float avg); is this what I should be using?
[23:59:59] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
