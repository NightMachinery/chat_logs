[00:23:47] *** pony is now known as no-n
[00:25:02] *** Quits: Elw3 (~Elw3@dynamic-002-247-241-219.2.247.pool.telefonica.de) (Ping timeout: 240 seconds)
[00:26:29] *** no-n is now known as pony
[00:27:04] *** Joins: Elw3 (~Elw3@dynamic-002-247-240-156.2.247.pool.telefonica.de)
[00:34:33] *** Quits: ttmrichter (ttmrichter@user/ttmrichter) (Ping timeout: 252 seconds)
[00:42:01] *** Joins: rgrinberg (~textual@187.223.209.106)
[00:43:01] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Remote host closed the connection)
[00:47:23] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[00:51:50] *** Quits: Elw3 (~Elw3@dynamic-002-247-240-156.2.247.pool.telefonica.de) (Quit: Leaving)
[00:56:51] *** Joins: ttmrichter (ttmrichter@user/ttmrichter)
[01:28:22] *** Joins: arinov (~arinov@213.194.126.155)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.83)
[02:34:01] *** Quits: pizdets (~pizdets@183.182.114.96) (Ping timeout: 268 seconds)
[02:39:09] *** Quits: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2) (Quit: WeeChat 3.3)
[03:32:07] *** Quits: gelignite (~gelignite@55d41c14.access.ecotel.net) (Quit: Stay safe!)
[03:47:58] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[04:12:55] *** Quits: tertu (~tertu@user/tertu) (Quit: so long...)
[04:13:12] *** Joins: tertu (~tertu@user/tertu)
[04:13:51] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[04:37:15] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[04:52:17] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:58:39] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[04:58:55] *** Quits: bgiannan (giann@2a01:4f8:141:1272::2) (Read error: Connection reset by peer)
[05:08:12] *** Joins: R2robot (~R2robot@user/r2robot)
[05:11:24] *** Quits: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr) (Quit: bye)
[05:58:51] *** Joins: Guest64873 (~bot@172-220-180-248.res.spectrum.com)
[05:59:04] *** Parts: Guest64873 (~bot@172-220-180-248.res.spectrum.com) ()
[06:40:31] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: https://gnu.org)
[06:47:43] *** Joins: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f)
[07:25:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:27:07] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[07:27:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:36:11] *** Quits: yalb (xsbot@user/mniip/bot/yalb) (Ping timeout: 268 seconds)
[07:36:26] *** Joins: yalb (xsbot@user/mniip/bot/yalb)
[07:44:35] *** Quits: zenfold (~zenfold@user/zenfold) (Remote host closed the connection)
[07:44:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[07:45:03] *** Quits: fcr (~fran@r167-60-29-14.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[07:45:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:46:18] *** Joins: zenfold (~zenfold@user/zenfold)
[07:53:04] *** Joins: fcr (~fran@r167-60-8-201.dialup.adsl.anteldata.net.uy)
[08:02:25] *** Quits: darkstarx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[08:07:18] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:08:33] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[08:08:57] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:13:22] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[08:52:46] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:53:36] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[08:54:01] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:03:16] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:15:07] *** Joins: Erutuon (~Erutuon@user/erutuon)
[09:25:47] *** Joins: dvx (~dvx@5.181.92.64)
[09:34:25] *** Quits: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net) (Ping timeout: 256 seconds)
[09:37:18] *** Joins: DixieFlatline (~soryuu@pool-173-61-70-58.cmdnnj.fios.verizon.net)
[09:38:50] *** Quits: Erutuon (~Erutuon@user/erutuon) (Quit: WeeChat 2.8)
[09:43:38] *** Quits: ratchet_freak (~ratchetfr@ptr-82rtos481r7ovvrs8i1.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[09:58:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[09:59:08] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:59:55] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[10:00:19] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[10:00:33] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:06:37] *** Quits: ratchetfreak (~ratchetfr@ptr-82rtos1uqv0498h4biz.18120a2.ip6.access.telenet.be) (Read error: Connection reset by peer)
[10:28:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:28:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:40:00] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[10:41:16] *** Joins: ano (~ano@user/ano)
[10:55:22] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 268 seconds)
[10:59:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[11:05:07] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[11:05:59] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[11:06:46] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[11:09:15] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:11:35] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[11:19:33] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 250 seconds)
[11:19:53] *** Quits: batrick (batrick@2600:3c00::f03c:91ff:fe96:477b) (Ping timeout: 252 seconds)
[11:21:52] *** Joins: batrick (batrick@2600:3c00::f03c:91ff:fe96:477b)
[11:30:35] *** Joins: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net)
[11:33:55] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:43:18] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2)
[11:43:18] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2) (Changing host)
[11:43:18] *** Joins: skapata (~Skapata@user/skapata)
[11:43:26] *** Joins: doublef (~df@88.87.88.122)
[11:46:56] *** Joins: arinov (~arinov@213.194.126.155)
[11:55:50] *** Parts: doublef (~df@88.87.88.122) ()
[12:11:40] *** Quits: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:14:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[12:16:34] *** Joins: ano (~ano@user/ano)
[12:53:08] *** Joins: Elw3 (~Elw3@dynamic-002-247-243-072.2.247.pool.telefonica.de)
[13:54:29] *** Quits: Elw3 (~Elw3@dynamic-002-247-243-072.2.247.pool.telefonica.de) (Quit: Leaving)
[14:06:30] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: No route to host)
[14:07:38] *** Joins: kipras (~kipras@88.216.142.28)
[14:21:33] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:23:04] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.3)
[14:54:51] *** Joins: graywolf (~wolf@user/graywolf)
[15:17:48] *** Joins: anton (anton@user/anton)
[15:50:09] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[16:07:29] *** Quits: kipras (~kipras@88.216.142.28) (Quit: Ex-Chat)
[16:49:18] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[17:07:30] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[17:07:30] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[17:07:30] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[17:07:53] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[17:17:01] *** Joins: Froovins (~Froovins@user/Froovins)
[17:30:59] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:17:53] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[18:18:56] *** Joins: magla (~gelignite@55d4970c.access.ecotel.net)
[18:27:08] *** Joins: earthbre- (~earthbrea@li778-229.members.linode.com)
[18:28:36] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Ping timeout: 268 seconds)
[18:43:20] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-905f-a794-ab8e-4d9a.res6.spectrum.com)
[18:55:48] *** Joins: Elw3 (~Elw3@dynamic-002-247-242-202.2.247.pool.telefonica.de)
[19:10:45] *** Joins: ratchetfreak (~ratchetfr@ptr-82rtos4q1fevz05mn5d.18120a2.ip6.access.telenet.be)
[19:35:07] *** Joins: ratchet_freak (~ratchetfr@ptr-82rtos481r7ovvrs8i1.18120a2.ip6.access.telenet.be)
[19:44:09] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[19:44:10] *** Quits: fcr (~fran@r167-60-8-201.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[19:53:46] *** Joins: fcr (~fran@r167-56-75-3.dialup.adsl.anteldata.net.uy)
[20:12:59] *** Quits: ratchetfreak (~ratchetfr@ptr-82rtos4q1fevz05mn5d.18120a2.ip6.access.telenet.be) (Ping timeout: 250 seconds)
[20:24:39] *** Joins: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2)
[21:28:29] *** Joins: Colt (~Colt@user/colt)
[21:49:53] *** Joins: angryguy (~Elw3@dynamic-002-247-243-019.2.247.pool.telefonica.de)
[21:52:32] *** Quits: Elw3 (~Elw3@dynamic-002-247-242-202.2.247.pool.telefonica.de) (Ping timeout: 265 seconds)
[21:56:36] *** Joins: reset (~reset@user/reset)
[22:04:03] <angryguy> So i have a construction function taking a few arguments, say x,y,z, i dont want to construct again if the values have been already used, but how would i keep track of that? if cache[x..y..z] for example would be rahther demanding with these string creationing i guess. 
[22:16:18] <Habbie> cache[x][y][z] then?
[22:16:22] <kakolainen[m]> you can do  cache[hash(x)+hash(y)+hash(z)]  just avoid doing cache[hash(x+y+z)]
[22:16:48] <Habbie> assuming you have some hash function that returns a number, and collissions are okay
[22:16:57] <Habbie> -s
[22:18:42] <kakolainen[m]> on collision you just inspect the object from cache if it was really constructed with the same x,y,z, that's the basic hashmap way
[22:19:03] <Habbie> yep, that works
[22:19:16] <angryguy> the former would result in if cache[x] and cache[x][y] and cache[x][y][z] unless there is a smart way around that. Not sure if thats better. 
[22:19:19] <Habbie> and then either accept that on a collision, one of the two parties will never be in the cache, or store an array behind the key
[22:19:54] <angryguy> Not sure how caching compares to ..
[22:19:55] <Habbie> angryguy, you can give the table (cache) a metatable that creates an empty table (with such a metatable) instead of returning nil
[22:19:58] <Habbie> like python's defaultdict
[22:19:59] <angryguy> Ehm hashing
[22:20:06] <Habbie> that's a good question
[22:20:08] <Habbie> .. is cheap
[22:20:16] <Habbie> but interning of the combined string will cost some memory
[22:20:26] <angryguy> That i am sure of
[22:20:34] <Habbie> if that is acceptable, it's probably simplest
[22:20:47] <Habbie> make sure that the lack of delimiter in a..b..c is ok
[22:21:35] <angryguy> Why could it not? I dont see how that matters.
[22:21:49] <Habbie> well, let's say one time a,b,c = 'foo','bar','hello
[22:21:57] <Habbie> and another time a,b,c = 'foob','ar','hello
[22:22:00] <Habbie> those would become the same cache key
[22:22:04] <angryguy> Ahhh
[22:22:11] <angryguy> yea, that IS possible
[22:22:32] <Habbie> usually you can find a delimiter char
[22:22:40] <Habbie> a..'/'..b..'/'..c
[22:22:42] <Habbie> but if not, there's 
[22:22:44] <Habbie> > string.format('%q%q%q', 'foo','bar','hello')
[22:22:46] <Habbie> "foo""bar""hello"
[22:22:50] <Habbie> also, and you should measure this
[22:23:01] <Habbie> this might in fact be faster than a bunch of string concats
[22:24:08] <angryguy> So calling string format for generating a key... never would have crossed my mind. 
[22:24:21] <Habbie> a..b..c is two operations
[22:24:28] <Habbie> string.format, internally, might be smarter about allocating etc.
[22:24:41] <Habbie> as far as i know, it might still be slower for other reasons, etc.
[22:24:46] <Habbie> so, things for you to consider and measure
[22:25:06] <Habbie> string.format also takes %s:%s:%s or whatever, of course
[22:25:37] <angryguy> Yea, problem is i am using luajit, its always a hazzle to write a proper measure for it.
[22:25:42] <Habbie> ah yep
[22:25:44] <Habbie> it is
[22:29:02] *** Joins: hodbogi (~fatalnix@user/fatalnix)
[22:29:51] <hodbogi> I'm trying to remember and not having much fun googling for it or finding in in a reference, is there something Lua has to assist with calling several functions in a row like a(b(c(d()))) to look a bit nicer?
[22:30:06] <angryguy> I think i actually need str,int,int,int as input. for the ints i can also imagine x*1000+y*10+z to work, giveen z is a single digit and y is max 700
[22:30:31] <angryguy> You mean tail calls hodbogi ?
[22:30:59] <hodbogi> I could technically do that? But then that implies that a b c and d know about eachother
[22:31:06] <hodbogi> what if they have no idea they exist
[22:31:31] <hodbogi> say I want to pipeline multiple unrelated functions together but pass input through them
[22:31:54] <Habbie> you could write a function f() that you call like f(a,b,c,d) with no support for arguments
[22:32:01] <kakolainen[m]> also make sure to set your cache as weak table so it won't prevent the grabage collection of unneeded objects
[22:32:04] <Habbie> or f({a,b,c,d},500,20) with arguments
[22:32:09] <hodbogi> you know, that is true, I didn't think of that
[22:32:19] <hodbogi> I could easily make a pipe function
[22:32:24] <Habbie> yes
[22:32:30] <hodbogi> Not a bad ideas
[22:32:36] <angryguy> Then youl do a= function stuff=calulation return b(stuff) end 
[22:33:18] <Habbie> could even be f(a,b,c,d)(500,20)
[22:33:30] <Habbie> which then calls x=d(500,20) x=c(x) ...
[22:33:31] <hodbogi> maybe make it reusable and accept pipe(...)
[22:35:51] <angryguy> kakolainen[m] what exactly do i have to set here? the generator generates other functions that may or not be used again and are stored in the cache table. I gather seting something to weak here can allow some of it to be garbage collected, but i dont know what.
[22:37:02] <hodbogi> Thanks for that, I think I know what I'm going to do now then. I was looking at cleaning up some old code and couldn't stand  all of the parantheses mess lol
[22:37:30] <Habbie> hodbogi, cool :)
[22:39:16] <kakolainen[m]> to set the cache weak just do setmetatable(cache,{__mode="kv"}), if you don't set it weak you need to manually remove the objects from the cache kind of like memory managment
[22:41:57] <angryguy> Okydoky i just try that i guess. Thanks. I still dont get when deleting happens here tho. Loosing the whole cache randomly seems to be counter productive.
[22:42:18] <Habbie> well
[22:42:20] <Habbie> the question is
[22:42:23] <Habbie> when do you want things to go away from the cache?
[22:42:26] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[22:43:17] <angryguy> That i dont know yet. Still planning.
[22:43:21] <Habbie> ok
[22:44:27] *** Quits: zostj (~rue@1-162-40-252.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:45:46] <Habbie> then maybe don't do the weak thing right now
[22:45:52] <Habbie> because if you do, you'll have tons of surprises
[22:45:55] <angryguy> The thing is a simple toolkit button but with automations, you say button("exit") and it appears under the hood i need to pass "exit" to the font lib to have it calculate the size of the borders which is want i dont want to do every frame.
[22:45:58] <Habbie> but if you don't do it, the only surprise will be running out of memory
[22:46:36] <angryguy> Uhrg my typing.
[22:46:39] <angryguy> Is it the beer?
[22:46:44] <Habbie> probably
[22:47:55] *** ghoti_ is now known as ghoti
[22:48:21] <kakolainen[m]> yeah it's kind of random, if the cache is small not really needed but better do it correctly from the start than later find out you copy pasted the same mechanism to something which needs larger cache and start experiencing memory leak and out of memery
[22:48:30] <Habbie> ack
[22:48:39] <Habbie> but weak tables might throw away a lot of things earlier than angryguy wanted
[22:52:04] <kakolainen[m]> then you could set the __index metamethod and count which elements are most often accessed and set them to another cachetable which won't be garbage collected
[22:52:19] <Habbie> assuming they live long enough :)
[22:52:23] <Habbie> but yes
[22:52:25] <Habbie> plenty of options
[22:52:58] <angryguy> Questionable if complicated solutions yield the best result tho.
[22:53:12] <Habbie> i would probably go for simpler, yes
[22:53:21] <kakolainen[m]> or actually first put everything on the cache table which won't be collected and on __newindex count which has not had accesses and move them to the weak cache table
[22:53:34] <Habbie> or limit to 1000 items
[22:55:33] <angryguy> I dont think that i would ever see a difference, neither the cpu usage is detectable in the entire game nor is there any worthy memory usage. But that doesnt mean should do such coarse mistakes and recalculate stuff several hundred times a second.
[22:55:59] <Habbie> you'll also make people doing things on batteries happier
[22:56:48] <angryguy> Whiiiiich is the entire target group
[22:57:01] <Habbie> right :)
[23:01:56] <angryguy> Ofc i made the mistakes of not having any colour component in it so my buttons are white withg white text, duh.
[23:01:57] <kakolainen[m]> I would say the root of the problem is that you use a wrong font library, the correct fast way to draw fonts is using distance fields and then you get the border size for free and changing border for free too also no need to construct different fonts for each font size
[23:04:03] <angryguy> Working with löve. I take what they use. But i cant say i am very fond of its font support. BUT it does its job.
[23:05:22] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[23:06:59] <jaawerth> even a fixed-size table as a rolling buffer might be enough for you to game the gc a bit. in non-5.4 isn't lua pretty slow to collect anyway? but if you keep the last N items, you'll guarantee those in your weak table cache for the k/v lookup, and once they fall off the buffer then they'll eventually get GC'd; you could then play around with that as needed
[23:07:21] <jaawerth> if it were 5.4 I imagine you'd just need something big enough to give the items a good chance to make it past the first generation
[23:08:55] <jaawerth> well, plus you can set major/minor multipliers. but you're talking about love, so doesn't apply
[23:09:12] <kakolainen[m]> defold engine supports distance field fonts but looks like they implemented it in glsl and Java instead of Lua
[23:10:12] <angryguy> Fonts in java? thihihi no thanks
[23:12:46] *** Joins: arinov (~arinov@176.89.29.127)
[23:12:55] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:12:58] <kakolainen[m]> fonts are one of the nastiest things to draw, kerning maps and millions of codepoints from simple utf8 makes it horrible to handle any sane way
[23:14:05] *** Quits: ArRay (~ArRay_@user/array/x-1947090) (Remote host closed the connection)
[23:14:29] *** Joins: ArRay (~ArRay_@user/array/x-1947090)
[23:15:04] <angryguy> Having multiple font formats sure doesnt help.
[23:19:31] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Quit: Leaving)
[23:30:30] *** Quits: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2) (Quit: WeeChat 3.3)
[23:41:37] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:44:59] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[23:46:04] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1376-196.w90-79.abo.wanadoo.fr)
[23:54:18] *** Quits: ArRay (~ArRay_@user/array/x-1947090) (Ping timeout: 276 seconds)
[23:57:59] *** Joins: ArRay (~ArRay_@user/array/x-1947090)
