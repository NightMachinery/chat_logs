[00:33:54] <Altai-man> AlexDaniel, the one with line numbers or?
[00:59:37] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:59:37] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:01:12] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[01:33:07] <codesections> wait, really:
[01:33:25] <codesections> m: say Mu(42)
[01:33:26] <camelia> rakudo-moar b7f088b5a: OUTPUT: ¬´42‚ê§¬ª
[01:34:21] <codesections> Oh, is that being parsed as a coercion? 
[01:34:54] <codesections> m: say Int.^lookup('nope')(5)
[01:34:54] <camelia> rakudo-moar b7f088b5a: OUTPUT: ¬´5‚ê§¬ª
[01:36:19] <codesections> m: say Int.^lookup('abs')(-5); say Int.^lookup('abbs')(-5)
[01:36:20] <camelia> rakudo-moar b7f088b5a: OUTPUT: ¬´5‚ê§-5‚ê§¬ª
[01:37:17] <codesections> that's pretty odd ‚Äì and I'm not sure if it's a feature or not
[01:44:38] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:49:08] <AlexDaniel> Altai-man: the one with the release number that is incorrect :)
[01:49:37] <AlexDaniel> Altai-man: https://gist.github.com/Whateverable/19d6d6dd4a4040ef67022edbeda4c9a5
[01:49:57] <AlexDaniel> 2021.06 should say 2021.06, not 2021.05-something
[01:50:06] <AlexDaniel> doesn't matter anymore I guess
[01:50:10] <AlexDaniel> it happened before too
[01:55:33] <Altai-man> AlexDaniel, I fail to see how that could happen. I mean, there is https://github.com/rakudo/rakudo/pull/4417/commits/4887a169b47a1b5805dc3d90b5aa4c83a86fc4dd <- and github shows it's included under the 2016.06 tag?
[01:56:01] <Altai-man> anyway, I think I'll retire in two relesaes
[01:56:05] <Altai-man> *releases
[01:56:38] <AlexDaniel> oooooooh interesting
[01:56:58] <AlexDaniel> cuz I also fail to see how it can happen!
[01:57:26] <AlexDaniel> c: 2021.06 say $*PERL.compiler.version
[01:57:27] <committable6> AlexDaniel, ¬¶2021.06: ¬´v2021.05.43.g.4887.a.169.b‚ê§¬ª
[01:58:21] <AlexDaniel> c: 4887a169b4 say $*PERL.compiler.version
[01:58:21] <committable6> AlexDaniel, ¬¶4887a16: ¬´v2021.05.43.g.4887.a.169.b‚ê§¬ª
[01:58:58] <AlexDaniel> that's the right commit sha, but whyyy
[01:59:09] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[02:01:31] <AlexDaniel> c: cd01706216d6 say $*PERL.compiler.version
[02:01:31] <committable6> AlexDaniel, ¬¶cd01706: ¬´v2021.06.1.gcd.0170621‚ê§¬ª
[02:02:20] *** Quits: Frozenset (~Frozenset@176.220.114.254) (Quit: Connection closed)
[02:02:27] <AlexDaniel> Altai-man: great work! Well deserved retirement ü§ó
[02:02:47] <AlexDaniel> Altai-man: some successor volunteered already?
[02:03:51] <Altai-man> AlexDaniel, not really, but I also did not "announce" it properly yet, just told it here and there a couple of times in "well, maybe sometime in the future" sorta way, so the people are not worried yet. :)
[02:04:34] <AlexDaniel> Altai-man: if you stay for 3 releases then you'll break the record üòÄ
[02:04:49] <Altai-man> AlexDaniel, well, that's my plan. :P
[02:05:05] <AlexDaniel> Altai-man: yes, but 3, not 2, if I'm not mistaken
[02:06:11] <AlexDaniel> or 4 if we count point releases as cheating ü§î
[02:06:13] <Altai-man> AlexDaniel, dunno, maybe I'm wrong as well. I counted it as 2, doesn't matter much. I mean, after first 10 one or two more start to look alike.
[02:06:19] <AlexDaniel> not making your life easier am I
[02:06:39] <Altai-man> AlexDaniel, well, I counted both point for you and me included.
[02:07:55] <AlexDaniel> Altai-man: dunno, some releases are special! Based on the list, 2020.08 looked like one üòõ
[02:08:10] <AlexDaniel> Altai-man: but you did great! Thank you for your work!
[02:08:22] <Altai-man> AlexDaniel, noooo, I don't want to remember this one, what an utter failure, heh.
[02:08:42] <Altai-man> .oO ( just blame the man who distracted me a lot that day )
[02:09:38] <Altai-man> AlexDaniel, I cannot express enough gratitude to YOU though, I mean I am just starting the scripts once in a while and you did made all that tooling, that's very helpful.
[02:09:55] *** Quits: patrickb (~quassel@55d485ea.access.ecotel.net) (Quit: Quit.)
[02:10:28] <AlexDaniel> if I didn't do it, you would've had one made by Zoffix. It was a big step too, mine was just an iteration on that
[02:11:07] <AlexDaniel> there was Toaster instead of Blin and a bot instead of the sakefile, both did the job alright
[02:12:15] <Altai-man> fair enough
[02:49:12] *** gabiruh_ is now known as gabiruh
[02:49:47] *** Joins: Typewriter (~I@94-224-212-146.access.telenet.be)
[02:53:02] *** Quits: Typewriter (~I@94-224-212-146.access.telenet.be) (Client Quit)
[02:54:24] <[Coke]> (releases) I'm glad you (and others) have gotten to point where it's mostly routine. Thank you!
[02:54:43] <[Coke]> (you all)
[03:02:28] <vasko> Hi, anybody able to point me in the right direction to convert a list into a hash? In perl5 I would do `‚ñ∂ perl -M'Data::Dump qw(dump)' -e 'my %sq = map { $_ => $_ ** 2 } (0..4); dump \%sq;'
[03:02:28] <vasko> { "0" => 0, "1" => 1, "2" => 4, "3" => 9, "4" => 16 }`
[03:03:58] <vasko> In raku I'm failing with: `> (0..3).map( * => * ** 2);
[03:03:58] <vasko> (0 => 1 2 => 9)`
[03:04:35] <moon-child> so you want the array indices to be the keys of the hash?
[03:04:50] <moon-child> oh, no, ignore me
[03:05:19] <moon-child> so something like (* => * ** 2) is actually a function of _two_ parameters
[03:05:26] <moon-child> so you would need something like {$_ => $_ ** 2}
[03:06:03] <moon-child> m: say (0..4).map({$_ => $_ ** 2}).hash
[03:06:04] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´{0 => 0, 1 => 1, 2 => 4, 3 => 9, 4 => 16}‚ê§¬ª
[03:06:29] <vasko> Ah thanks, I was missing the `.hash` cheers :)
[03:07:32] <moon-child> well, you don't actually need the .hash depending on what you do with it
[03:07:36] <moon-child> m: my %x = (0 .. 4).map({$_ => $_ ** 2}); say %x
[03:07:37] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´{0 => 0, 1 => 1, 2 => 4, 3 => 9, 4 => 16}‚ê§¬ª
[03:08:31] <vasko> Oh I see, I really need to reread the manpages and understand the `Whatever` closures over normal subs/functions I'm used too.
[03:15:10] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[03:16:45] <Xliff> Is there an easy way to check the wordsize of a string encoding?
[03:18:36] *** Joins: casaca (~casaca@user/casaca)
[03:28:31] <Xliff> Hmmmm....
[03:28:49] <Xliff> m: "Hello".encode('ASCII').of.^name.say # ?
[03:28:50] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´uint8‚ê§¬ª
[03:28:53] <Xliff> \o/
[03:40:53] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (Quit: WeeChat 2.8)
[03:42:41] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[03:46:55] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[03:48:19] *** Joins: casaca (~casaca@user/casaca)
[03:56:31] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[03:57:52] *** Joins: casaca (~casaca@user/casaca)
[03:58:53] <mykhal> m: sub circumfix:<\ />($a) { "\$a/" }; say \o/
[03:58:53] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Missing required term after infix‚ê§at <tmp>:1‚ê§------> 3 circumfix:<\ />($a) { "\$a/" }; say \o/7‚èè5<EOL>‚ê§    expecting any of:‚ê§        prefix‚ê§        term‚ê§¬ª
[04:00:55] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:01:14] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[04:02:33] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[04:32:55] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:33:57] *** Joins: casaca (~casaca@user/casaca)
[04:35:05] *** Quits: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:53:12] <mykhal> c: releases say (1..10).&{ .?expand // .?agile // .?eager }
[04:53:34] <committable6> mykhal, ¬¶releases (56 commits): ¬´(1 2 3 4 5 6 7 8 9 10)‚ê§¬ª
[05:08:08] <mykhal> c: releases  say (1..3).Set.keys.sort.join ; say (1..3).Set.sort.keys.join
[05:08:30] <committable6> mykhal, ¬¶releases (56 commits): ¬´123‚ê§012‚ê§¬ª
[05:13:05] *** Quits: japhb (~geoff@mugs/japhb) (Ping timeout: 255 seconds)
[05:14:10] *** Joins: japhb (~geoff@mugs/japhb)
[05:31:35] *** Quits: japhb (~geoff@mugs/japhb) (Quit: leaving)
[05:34:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:54:10] *** Joins: MaxRozeman (~MaxRozema@n110-22-87-29.sun3.vic.optusnet.com.au)
[05:55:15] *** Quits: MaxRozeman (~MaxRozema@n110-22-87-29.sun3.vic.optusnet.com.au) (Client Quit)
[05:56:02] *** Joins: MxRz (~MxRz@n110-22-87-29.sun3.vic.optusnet.com.au)
[06:00:41] *** Quits: MxRz (~MxRz@n110-22-87-29.sun3.vic.optusnet.com.au) (Client Quit)
[06:15:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:21:02] *** Joins: zacts (~zacts@user/zacts)
[06:25:23] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[06:26:09] *** Joins: zacts (~zacts@user/zacts)
[06:46:46] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[07:04:45] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[07:10:33] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:11:01] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[07:13:12] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[07:21:23] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:39:27] *** Joins: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de)
[08:18:44] *** Joins: kjp_ (~kevin@180.216.161.162)
[08:21:41] *** Quits: kjp (~kevin@180.216.13.19) (Ping timeout: 252 seconds)
[08:29:54] *** Quits: kjp_ (~kevin@180.216.161.162) (Quit: WeeChat 2.8)
[09:21:56] *** Quits: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[09:24:32] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:31:34] *** Quits: stoned75_ (~seb@pop.92-184-100-115.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[09:33:08] *** Joins: stoned75 (~seb@pop.92-184-102-14.mobile.abo.orange.fr)
[09:40:14] *** Joins: kjp (~kevin@180.216.161.162)
[10:08:02] *** Joins: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de)
[10:30:22] <CIAvash> vasko:  For that specific example, you can also do `(0..4).map($++ => *¬≤).hash` or `(0..4).kv.map(* => *¬≤).hash` or `(0..4).map(*¬≤).kv.hash`.
[10:32:54] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:34:57] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:39:57] *** Joins: japhb (~geoff@mugs/japhb)
[10:41:54] *** Quits: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:58:42] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:59:43] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[11:00:59] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:02:20] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[11:02:36] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:22:42] *** Joins: Doc_Holliwood (~holli@dslb-088-073-151-046.088.073.pools.vodafone-ip.de)
[12:01:27] *** Joins: Frozenset (~Frozenset@213.211.8.6)
[12:02:24] <Geth> ¬¶ doc: dcbec63a1f | (JJ Merelo)++ | doc/Language/js-nutshell.pod6
[12:02:24] <Geth> ¬¶ doc: Adds requested section, closes #3928
[12:02:24] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/dcbec63a1f
[12:02:27] <linkable6> Link: https://docs.raku.org/language/js-nutshell
[12:03:08] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:03:36] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[12:08:26] <Geth> ¬¶ doc: f0447e85a6 | (JJ Merelo)++ | doc/Language/js-nutshell.pod6
[12:08:27] <Geth> ¬¶ doc: Addressing @moon-chilled comments #3928
[12:08:27] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f0447e85a6
[12:08:29] <linkable6> Link: https://docs.raku.org/language/js-nutshell
[12:09:06] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:10:01] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[12:16:33] <Geth> ¬¶ doc: 68191b2b57 | (JJ Merelo)++ | doc/Language/modules.pod6
[12:16:33] <Geth> ¬¶ doc: Fixes #3911 link
[12:16:33] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/68191b2b57
[12:16:36] <linkable6> Link: https://docs.raku.org/language/modules
[12:17:17] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:17:28] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[12:28:53] <AlexDaniel> committable6: releases say $*PERL.compiler.version
[12:29:15] <committable6> AlexDaniel, https://gist.github.com/dcf3243800499f06643d45181cde700d
[12:29:55] <AlexDaniel> Altai-man: I think I figured it out. It's probably the case of tag not being pushed (or being pulled) before the commit is fetched
[12:30:16] <AlexDaniel> Altai-man: so for whateverable, at the moment of building, 2021.06 didn't exist. I deleted the build and now it shows up correctly
[12:30:32] <AlexDaniel> (deleting a build means it regenerates it in a few minutes)
[12:56:45] *** eseyman_ is now known as eseyman
[14:49:08] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[15:49:09] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:49:09] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:49:09] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:49:09] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:49:09] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:09] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[15:49:10] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[15:49:26] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[15:49:29] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:49:31] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[15:50:25] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[15:50:43] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[15:50:54] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[15:51:00] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[15:51:20] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[15:51:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:20:40] *** Joins: MoC (~moc@user/moc)
[16:22:03] <vasko> CIAvash: Nice! The ¬´kv¬ª method looks awesome :) I'm starting to see how the `*` slot works, thanks!
[16:28:56] *** Joins: patrickb (~quassel@55d401e9.access.ecotel.net)
[16:33:05] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:40] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:50:06] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[16:50:06] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[16:50:27] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[16:52:22] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[16:52:22] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[17:23:47] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~‚ô™)
[17:51:05] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[17:51:39] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[18:21:40] <daxim> do we have a moral equivalent of webperl?  I want to try out raku in the front-end
[18:33:59] <patrickb> daxim: I think not. The best there is, is rakudo-js: https://www.npmjs.com/package/rakudo
[18:34:56] <patrickb> rakudo-js works. Biggest caveats are that it's currently not being actively worked on, and long load times.
[18:49:43] <daxim> http://perlpunks.de/paste/show/61055be2.609b.266?plain=1
[18:50:58] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[18:51:39] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[19:14:03] *** Joins: zacts (~zacts@user/zacts)
[19:35:46] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[19:43:04] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[19:51:08] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[20:03:13] *** Joins: zacts (~zacts@user/zacts)
[20:37:05] <patrickb> Is there a call-if-object-exists-op? something like `$obj.some-meth() if $obj`?
[20:37:28] <lizmat> .foo with $obj
[20:40:27] <codesections> ($obj//Nil).foo also works, but ^^^ is what I'd go with
[20:43:55] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[20:45:10] <patrickb> ($obj//Nil).foo looks strange. Is Nil.foo a noop?
[20:45:58] <MasterDuke> mostly
[20:46:04] <codesections> Nil.anything returns Nil (but also may have some warnings)
[20:46:06] <MasterDuke> m: Nil.foo; Nil.push
[20:46:07] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Use of Nil.push not allowed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:46:43] <patrickb> Ah, understood.
[20:46:54] <lizmat> Nil.push is not allowed, because .push should mutate the invocant, and Nil is immutable
[20:47:08] <lizmat> m: Nil.append
[20:47:08] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Use of Nil.append not allowed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[20:47:13] <lizmat> m: Nil.shift
[20:47:13] <camelia> rakudo-moar 54f1b7a5f: ( no output )
[20:47:14] <codesections> ^^^ despite saying "not allowed", that's still a warning, right?
[20:47:20] <lizmat> m: Nil.pop
[20:47:20] <camelia> rakudo-moar 54f1b7a5f: ( no output )
[20:47:27] <lizmat> hmmm... looks like we forgot a few
[20:48:01] <lizmat> ah, Nil.shift could be considered a .shift on an empty Array, and that returns a Failure
[20:48:06] <lizmat> m: dd [].shift
[20:48:06] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Failure.new(exception => X::Cannot::Empty.new(action => "shift", what => "Array"), backtrace => Backtrace.new)‚ê§¬ª
[20:48:33] <lizmat> and since Nil is a sort of soft Failure, I guess Nil.shift and Nil.pop are ok
[20:49:20] <codesections> Oh, no, I was wrong: Nil.push is an error (not a warning).  It's just runtime rather than compile time
[20:50:33] <codesections> m: try Nil.push; say $!.raku
[20:50:33] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´X::AdHoc.new(payload => "Use of Nil.push not allowed")‚ê§¬ª
[20:54:51] <MasterDuke> m: sub a($b) { dd $b }; my $c; .&a with $c; ($c//Nil).&a
[20:54:51] <camelia> rakudo-moar 54f1b7a5f: OUTPUT: ¬´Nil‚ê§¬ª
[21:11:22] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Remote host closed the connection)
[21:11:46] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[22:11:46] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:11:47] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[22:14:42] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[22:32:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:34:38] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:46:45] *** Quits: stoned75 (~seb@pop.92-184-102-14.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[22:48:28] *** Joins: stoned75 (~seb@pop.92-184-102-211.mobile.abo.orange.fr)
[23:09:45] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:13:05] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:24:29] <tbrowder> can anyone using emacs tell me how to avoid the editor rerunning all the unicode font prep? i haven't noticed when it happens, but, out of the blue i will open a text file and it takes quite a few seconds to map unicode chars and such. i would capture the messages but i'm never prepared for it when it happens!
[23:25:36] <tbrowder> i suspect i need something that's absent in my emacs config files
[23:26:04] <tbrowder> but know not what :-(
[23:47:28] *** Joins: Kaipi (~Kaiepi@156.34.44.192)
[23:47:28] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Read error: Connection reset by peer)
[23:52:44] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:52:56] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
