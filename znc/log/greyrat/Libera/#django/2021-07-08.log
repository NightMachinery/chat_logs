[00:08:42] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Ping timeout: 252 seconds)
[00:12:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:14:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:19:24] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[00:20:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[00:24:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:24:12] *** ChanServ sets mode: +v EvilDMP
[00:24:53] *** Quits: anas (~anas@196.235.5.143) (Quit: WeeChat 3.3-dev)
[00:25:10] *** Joins: anas (~anas@196.235.5.143)
[00:27:15] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:28:04] *** Quits: anas (~anas@196.235.5.143) (Client Quit)
[00:28:16] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[00:28:20] *** Joins: anas (~anas@196.235.5.143)
[00:28:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 246 seconds)
[00:31:48] *** Quits: anas (~anas@196.235.5.143) (Client Quit)
[00:32:03] *** Joins: anas (~anas@196.235.5.143)
[00:35:00] <mogad0n> "django.db.utils.ProgrammingError: operator class "varchar_pattern_ops" does not accept data type integer" i get this when i try to use either a 1) `unique=True` with `models.ForeignKey()` or 2) Use this instead  `models.OneToOneField()` .
[00:37:38] <mogad0n> I add to these model instances and i have to select the 'device' (being it's own model) currently it allows duplicate and multiple assignments but that's non-ideal
[00:37:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:37:52] *** ChanServ sets mode: +v EvilDMP
[00:38:47] <mogad0n> I wanted to avoid it even allowing the deviceid to be selected.
[00:39:17] <mogad0n> sorry i mean if already assigned, hence that approach
[00:39:48] <mogad0n> any ideas what i can do? I'm on django3.1
[00:45:09] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:47:20] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:50:26] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:50:58] <PaulWay[w]> Are you trying to use an existing database?
[00:51:13] <PaulWay[w]> And just putting Django on top of it?
[00:52:20] <mogad0n> Nope
[00:52:59] <mogad0n> I understand that if there are dupes they will need to be ironed out first
[00:53:09] <PaulWay[w]> So each time you change the field type you also either have a migration or you rebuild your initial migrations and you rebuild your database from that?
[00:53:24] <mogad0n> yeah
[00:54:21] <PaulWay[w]> Then I'm trying to figure out why you'd be get a `varchar_pattern_ops` field when Django would be creating a matching ID field in your foreign table.
[00:54:28] <mogad0n> have i goofed something im running this locally
[00:54:46] <mogad0n> so i dont have the db populated
[00:55:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:56:19] <mogad0n> it runs fine without the unique=True arg in the models.ForeignKey()
[00:57:24] <mogad0n> But i dont want something already assigned to another instance to be available to be assigned to the instance im creating right now
[01:03:01] *** Joins: cs (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:03:13] *** Joins: rje (~rje@2600:380:4724:e44:7dea:982f:8da5:ec3c)
[01:03:46] <mogad0n> oh well the model it is relating to has a non normal pk. it's explicitly defined as a models.CharField(pk=true, unique=true) etc. But if that was the issue why would it work without the unique:True or switching to OneToOneField(). I read about using UniqueContraint() but given this https://docs.djangoproject.com/en/3.2/ref/models/constraints/#opclasses it may not work because it's not available on
[01:03:48] <mogad0n> 3.1. Im not extremely well versed with Postgres specifics.
[01:04:53] <mogad0n> Eventually i was considering a boolean field is_assigned on the device model
[01:06:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 265 seconds)
[01:08:20] <mogad0n> or a method since it may need to check at the the time. Not sure. But once i have that i was going to use limit_choices_to={'is_assigned': False} arg or some other way. Lemme know if i can read up on something specific which would help. SOrry for the essay
[01:11:58] *** Quits: rje (~rje@2600:380:4724:e44:7dea:982f:8da5:ec3c) (Quit: My computer has gone to sleep. ZZZzzz…)
[01:14:15] *** Quits: cs (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:43] *** Quits: Fahrradkette (~Fahrradke@2a02:1205:c69a:b000:107d:cd75:e9cf:9037) (Quit: Leaving)
[01:15:59] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[01:16:16] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[01:30:17] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[01:32:02] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 252 seconds)
[01:33:31] *** Joins: clawh (~clawh@185.244.214.60)
[01:33:41] *** Quits: clawh_ (~clawh@185.244.214.60) (Remote host closed the connection)
[01:33:50] *** Quits: anas (~anas@196.235.5.143) (Ping timeout: 272 seconds)
[01:35:37] *** Joins: anas (~anas@196.235.5.143)
[01:40:27] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[01:44:24] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:50:21] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:27] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Quit: ZNC 1.8.2 - https://znc.in)
[01:53:49] *** Quits: Harlin (~DonQixote@216.80.0.10) (Remote host closed the connection)
[01:54:51] *** Joins: NeuroWinter (~NeuroWint@107.172.219.233)
[01:54:53] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[01:55:40] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Quit: leaving)
[01:58:17] <PaulWay[w]> mogad0n: it's not a huge problem having a CharField as a primary key - but if your migrations don't reflect that and it was previously an int, then your migrations are going to try to make the foreign keys as ints.
[01:58:24] <PaulWay[w]> Which would explain the error message you're getting.
[01:58:52] <PaulWay[w]> It's nothing to do with the constraints or limiting choices, it's everything to do with the types of the fields.
[02:01:53] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:04:49] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:06:55] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:11:00] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:11:48] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:12:48] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:13:34] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:15:44] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:18:09] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:20:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:25:03] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:26:22] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:27:46] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 246 seconds)
[02:28:12] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[02:28:31] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:28:47] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[02:28:52] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:29:17] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:30:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:04] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:33:37] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:38:57] *** Quits: anas (~anas@196.235.5.143) (Quit: WeeChat 3.3-dev)
[02:39:13] *** Joins: anas (~anas@196.235.5.143)
[02:45:22] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[02:52:01] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[02:54:54] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Client Quit)
[02:56:10] *** Quits: anas (~anas@196.235.5.143) (Ping timeout: 240 seconds)
[03:00:44] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[03:02:45] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:12:05] *** Quits: y04nn (~y04nn@91.193.4.106) (Ping timeout: 258 seconds)
[03:15:38] *** Joins: y04nn (~y04nn@91.193.4.106)
[03:20:34] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:24:25] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:26:26] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:31:30] *** Quits: y04nn (~y04nn@91.193.4.106) (Remote host closed the connection)
[03:34:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:35:22] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[03:37:01] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:38:59] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[03:44:12] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[04:07:35] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:10:45] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[04:29:24] *** Quits: jgee (~jgee@186.80.49.20) (Quit: The Lounge - https://thelounge.chat)
[04:35:00] *** Quits: maloik (~maloik@189.201.147.213) (Quit: leaving)
[04:38:28] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:42:52] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 246 seconds)
[04:45:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:48:08] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:48:53] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:55:41] *** Joins: jgee (~jgee@186.80.49.20)
[04:56:11] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[04:57:04] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:02:23] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:04:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:13:45] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:15:22] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[05:20:20] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:20:51] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:21:31] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:27:18] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[05:27:18] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 258 seconds)
[05:27:18] *** Quits: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[05:27:29] *** Joins: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com)
[05:30:15] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:37:55] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 265 seconds)
[05:39:00] *** vinleod is now known as vdamewood
[05:42:22] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[05:42:39] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:43:50] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:44:21] *** Joins: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au)
[05:44:50] *** Joins: clawh_ (~clawh@185.244.214.60)
[05:46:14] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[05:47:58] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[05:48:03] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:54:17] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[05:54:30] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:55:05] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:06] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[06:16:45] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:17:21] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[06:21:01] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Client Quit)
[06:25:15] *** Joins: audiocat (~audio@2603-8081-1800-6a65-0864-cd51-1ae6-323f.res6.spectrum.com)
[06:43:10] *** Quits: Elzington (~Elzington@static-198-54-128-100.cust.tzulo.com) (Ping timeout: 265 seconds)
[06:45:35] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[06:47:49] *** Quits: aquijoule_ (~richbridg@213-225-13-36.nat.highway.a1.net) (Ping timeout: 246 seconds)
[06:50:46] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[07:24:38] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[07:26:21] *** Quits: audiocat (~audio@2603-8081-1800-6a65-0864-cd51-1ae6-323f.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:44:15] *** Joins: Crassus (~Crassus@user/crassus)
[08:00:13] *** Joins: audiocat (~audio@2603-8081-1800-6a65-662a-417a-58d5-f091.res6.spectrum.com)
[08:13:07] *** Joins: tubogram (~tubogram@user/tubogram)
[08:25:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:31:46] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:32:59] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:35:42] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[08:36:01] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:38:05] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[08:38:09] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:38:12] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:39:30] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:41:55] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[08:42:03] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:46:12] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[08:46:30] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:51:43] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:56:12] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[08:56:31] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:59:42] *** Joins: shangxiao (~davids@101.181.108.207)
[09:34:22] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:36:02] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:40:27] <shangxiao> anyone setup django_filters to work with JSONField?
[09:44:19] <b-rex> shangxiao: you should be able to treat the fields in the JSON like relational fields e.g. jsonfield__somekey
[09:45:15] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:29] <shangxiao> hmm
[09:54:54] *** Joins: rje (~rje@174.31.247.135)
[09:55:15] *** Quits: rje (~rje@174.31.247.135) (Client Quit)
[09:57:30] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:59:22] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:59:59] <shangxiao> does django support setting up views based on another model nowdays?
[10:00:08] <shangxiao> uhh… i mean db views
[10:05:13] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:07:15] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[10:09:58] *** Joins: rje (~rje@174.31.247.135)
[10:14:42] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:14:55] <schinckel> You can use managed=False (and stop writes).
[10:16:40] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[10:18:02] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[10:18:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:23:20] *** Quits: PaulWay[w] (~PaulWay@203-174-143-46.can.static-ipl.aapt.com.au) (Ping timeout: 252 seconds)
[10:25:10] *** Joins: anas (~anas@196.235.5.143)
[10:28:23] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:30:32] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[10:30:36] <shangxiao> yeah that's what I used to do but thought there might be a better way
[10:31:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:31:00] *** ChanServ sets mode: +v EvilDMP
[10:31:02] <shangxiao> i remember Funky and others were experimenting with some support for doing this via models
[10:31:24] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:32:32] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:32:35] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[10:38:17] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[10:42:22] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[10:44:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:41] <FunkyBob> i did have a basic poc at the djangocon EU sprints in heidelberg
[10:47:00] <FunkyBob> but I never found a suitable serialisation format for the query to be sure migrations could detect a change
[10:47:09] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:28] *** Joins: Tas-sos (~Tas-sos@78-152-69.adsl.cyta.gr)
[11:05:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:05:15] *** ChanServ sets mode: +v EvilDMP
[11:06:16] *** Joins: HoaxKey (~HoaxKey@85.255.235.12)
[11:16:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:17:32] *** Joins: pycode (~pycode@2001:b07:5d28:551:c78b:bddf:d04e:46cf)
[11:28:31] *** Quits: anas (~anas@196.235.5.143) (Ping timeout: 246 seconds)
[11:37:56] <shangxiao> ah yes I remember; how does one normalise a query to see if it's the same query
[11:57:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:57:03] *** ChanServ sets mode: +v EvilDMP
[12:28:17] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[12:36:30] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:42:23] *** Joins: anas (~anas@196.235.5.143)
[12:49:24] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:20] *** Joins: slav0nic (slav0nic@python.su)
[13:01:52] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:03:56] *** Quits: audiocat (~audio@2603-8081-1800-6a65-662a-417a-58d5-f091.res6.spectrum.com) (Ping timeout: 252 seconds)
[13:04:01] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[13:11:42] *** Joins: Rikem (~mike@user/rikem)
[13:20:46] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 272 seconds)
[13:21:13] *** Quits: rje (~rje@174.31.247.135) (Ping timeout: 246 seconds)
[13:24:02] *** Joins: rje (~rje@174.31.83.238)
[13:43:27] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:44:04] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Client Quit)
[13:46:39] *** Joins: Crassus (~Crassus@user/crassus)
[13:52:33] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[14:03:45] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:21] <pycode> hello
[14:08:15] *** Joins: thiras (~thiras@user/thiras)
[14:13:11] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[14:13:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:13:28] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[14:20:27] *** Joins: Lauxley (~lauxley@2a01:e34:ec55:2700:6194:7fb1:298b:ec96)
[14:20:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:20:34] *** ChanServ sets mode: +v EvilDMP
[14:29:57] <jor> pycode: so... did you get your chart working? :)
[14:30:11] *** Joins: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net)
[14:30:14] *** Quits: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net) (Read error: Connection reset by peer)
[14:30:36] <pycode> jor, eheh still working on it, yes it is running but i am not trying to find a way to avoid calling the database
[14:30:40] <pycode> the query is giant
[14:31:01] <pycode> i mean, it returns 200k and then as i wrote i should around 400 points
[14:31:09] <pycode> and then with the slider i move over those 200k points
[14:31:45] <pycode> but i have to load them so i am creating a command that create such json (it put it cache...redis) and then i can load it (gzipped)
[14:32:09] <pycode> so i am woking on the optimization, because the rendering of the chart is good, 400/500 points at once are basically nothing
[14:32:14] <pycode> very fast
[14:34:25] <pycode> jor, for the moment i am using small chunks https://bpa.st/O37A
[14:34:51] <pycode> for testing, but if i remove that [1:500] it will take a while
[14:35:00] <pycode> (6-7 seconds)
[14:35:15] <pycode> (i will check db optimization after this)
[14:41:11] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:44:22] <jor> yeah, many ways to optimize that... but on the otherhand, if you are caching anyway. Could maybe remove this from the request-response cycle, and update the redis cache in the background on some schedule
[14:46:22] <jor> but eventually, you'd probably want a chunked/paged json view. so the client handle this more efficiently (since caching still leaves the first, slow call)
[14:47:36] <jor> and the next version is usually dropping the strict json format, use a streaming response backed by a db cursor, to limit memory usage :)
[14:54:05] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[15:00:37] *** Joins: dez (uid92154@user/dez)
[15:13:33] <shangxiao> i don't suppose any has an autoformatter that works for django templates?  prettier doesn't work & won't add support for it as part of the core and there's no plugin for it =/
[15:17:17] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:21:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:c78b:bddf:d04e:46cf) (Ping timeout: 252 seconds)
[15:23:31] <FunkyBob> shangxiao: does the django plugin for vscode work?
[15:23:54] <shangxiao> not sure, i'm using vim
[15:24:30] <moldy> according to the django forum, no solution works really well
[15:24:46] <moldy> https://forum.djangoproject.com/t/automatic-formatting-of-django-templates/341/15
[15:27:55] <shangxiao> oh wow django forum
[15:28:00] <shangxiao> that's new
[15:30:43] <moldy> it's been there for a while :)
[15:31:31] <shangxiao> well haven't done django for a while ;)
[15:40:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[15:48:05] *** Quits: clawh_ (~clawh@185.244.214.60) (Remote host closed the connection)
[15:49:07] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:56:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:57:28] *** Quits: zamba (~marius@5.226.162.54) (Ping timeout: 272 seconds)
[16:01:40] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 252 seconds)
[16:05:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:05:55] *** ChanServ sets mode: +v EvilDMP
[16:09:31] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[16:18:18] *** Joins: clawh (~clawh@185.244.214.60)
[16:23:18] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[16:23:20] *** Joins: clawh_ (~clawh@185.244.214.60)
[16:27:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[16:28:32] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[16:29:06] *** Joins: cusco (~tralala@neptune.tretas.eu)
[16:29:12] <cusco> hello
[16:29:18] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:30:04] <cusco> irc channel seems empty..
[16:30:10] <cusco> did people move to another server again?
[16:30:23] <serafeim> i'm not sure but the usuals are here
[16:30:23] *** Joins: kostkon (~androirc@ob21aa.static.otenet.gr)
[16:30:32] <cusco> cool
[16:31:04] <cusco> so... again, im farily unexperienced with django... I am taking a closer look at forms maybe for the first time... Having said that:
[16:31:37] <cusco> Im doing form = MyCompanyForm(instance=company)
[16:32:06] <cusco> and after a form.is_valid() it seems all fields show in form.changed_data and they're all blank
[16:32:12] *** Joins: n00bn00b (~N00b@79.184.110.70.ipv4.supernova.orange.pl)
[16:32:22] <cusco> so how are we suposed to load pre-existing information without posting all again?
[16:33:02] <serafeim> using initial
[16:33:08] <serafeim> MyCompanyForm(initial=something)
[16:33:08] <cusco> ahm
[16:33:27] <serafeim> also i think you mean form.cleaned_data
[16:33:32] <cusco> and initial, is like a dict of field:value or could it be the instance?
[16:33:41] <serafeim> well it really depends
[16:33:46] <serafeim> actually
[16:33:53] <serafeim> scratch the initial thingie
[16:34:10] <cusco> the initial is so when I load the form it brings some defaults
[16:34:15] <cusco> it seems
[16:34:19] <serafeim> to create a ModelForm you have two options. either pass just the instance (which is when the form is first displayed)
[16:34:43] <serafeim> but when you have user-posted-data then you need to also pass this data to the model form's constructor
[16:35:04] <cusco> so.. Im interested now in displaying a form before the post
[16:35:08] <serafeim> so if request.POST: MyCompanyForm(request.POST, instance=company)
[16:35:27] <serafeim> if not request.POST: MyCompanyForm(instance=company)
[16:36:33] <cusco> so.. I'm doing an extra step.. this is my goal here... trying to run is_valid() before rendering the template, to set a variable to define if a specific section still needs to be worked on or not (several forms in a page)
[16:36:54] <cusco> and when I do MyCompanyform(instance=company) ...
[16:36:59] <cusco> is_valid() returns false
[16:37:06] <serafeim> but you can't run is_valid in an empty form
[16:37:07] <cusco> and .data is empty
[16:37:16] <serafeim> yes becaue the form *is* empty if you don't pass the data
[16:37:25] <cusco> so I thought loading it with the instance would load the instance data onto it
[16:37:28] <serafeim> no
[16:37:45] <cusco> so.. again, when displaying it, how does it load pre-existing data?
[16:38:01] <serafeim> it uses the instance
[16:38:11] <serafeim> displaying is a different thing from validating
[16:38:16] <cusco> I see
[16:38:19] <serafeim> you need to have branches in your code and intantiate the form twice
[16:38:27] <serafeim> one to view it and one to validate/submit it
[16:39:04] <cusco> I was hoping to hook into that.. the instace has more data from elsewhere and I was hopping to validate if it already had the mandatory fields set in the form
[16:39:20] <cusco> hopping
[16:39:32] <moldy> cusco: there is an example in the docs which you should usually follow
[16:39:34] <serafeim> if you want to validate the data of the instance then you can pass it as data
[16:39:49] <moldy> cusco: https://docs.djangoproject.com/en/3.2/topics/forms/#the-view
[16:39:56] <serafeim> ie MyCompanyForm(instance.__dict__, instance=instance). but that usually ain't the crrect thign to do
[16:40:05] <cusco> but then I need to find all the fields I want to pass as data manually, not the whole instance, right?
[16:40:13] <cusco> ow instance.__dict__
[16:40:18] <serafeim> not sure if it will work
[16:40:20] <moldy> cusco: follow the docs.
[16:40:32] <serafeim> i also recommend following the docs
[16:40:35] <moldy> no need to become "smart" here unless you want to do something rather non-standard :)
[16:40:38] <cusco> yes I understand
[16:41:28] <moldy> MyCompanyForm(instance=instance) does load the data, IIRC
[16:42:01] <cusco> so, that was my initital thought
[16:42:37] <moldy> and this should update the instance: ``form = MyCompanyForm(request.POST, instance=instance); form.is_valid(); form.save()``
[16:42:44] <moldy> you're using a ModelForm, right?
[16:43:06] <serafeim> instance wont' work with a modelform
[16:43:17] <serafeim> instance wont' work *without* a modelform
[16:43:37] <cusco> it is a ModelForm yes
[16:44:01] <moldy> cusco: if you show us your current view code, we can probably help better
[16:44:28] <cusco> hah... not that I don't want to, but... not even sure of what part to show
[16:44:37] <moldy> the view
[16:44:39] <cusco> im just using shell_plus at the moment to see how to implement
[16:44:45] <moldy> ah ok
[16:45:05] <cusco> so... the form has some fields of the instance
[16:45:20] <cusco> and my instance has them filled
[16:46:09] <cusco> and form= MyForm(instance=company) ... form.is_valid() returns false; and form.data is empty dict
[16:46:17] <cusco> so it does not load data from instance..?
[16:46:28] <serafeim> cusco: i told you before
[16:46:35] <serafeim> cusco: if you don't pass data the form is empty
[16:46:48] <serafeim> you need to call it with MyForm(data, instance=instance)
[16:46:50] <moldy> cusco: from the top of my head: https://dpaste.org/hxZX
[16:47:24] <moldy> cusco: line 9 should say CompanyForm instead of Company
[16:50:07] <cusco> serafeim: right. ok instance.__dict__ almost works, I'll try to figure out the one field that insn't working
[16:52:06] <moldy> cusco: noo
[16:52:21] <moldy> cusco: i'm pretty sure you're solving a problem that doesn't exist
[16:52:47] <moldy> write down your code and show it, then we can tell you what's going wrong
[16:53:40] <moldy> for one thing, you almost never have to look at .changed_data
[16:54:21] *** Joins: serghei (~egrep@user/serghei)
[16:58:49] <cusco> well, I might have explained it wrong, my issue is not displaying the form.. per se.. I' sending a few forms to the template in the context, and I'm trying to figure out which ones require additional data, BEFORE the post
[16:59:07] <cusco> moldy:
[16:59:55] <moldy> cusco: well, we cannot tell you which ones require initial data without seeing your code
[17:00:20] <moldy> cusco: if those are ModelForms that are supposed to update a model instance, just pass the instance to the form as shown in my paste above, and you're good
[17:00:41] <moldy> don't reinvent functionality that django already gives you for free
[17:01:07] <cusco> ok fine.. I'm refactoring this piece of old code
[17:01:08] <cusco> http://paste.debian.net/1203780/
[17:02:43] <moldy> cusco: i am wondering if these are even forms in the django sense?
[17:03:06] <moldy> ah i see.
[17:03:33] <moldy> cusco: so, what specific problem do you have with this code?
[17:04:22] <cusco> I want to set a variable which will tell me if a specific form has all the mandatory data in the instance already
[17:04:41] <moldy> why?
[17:04:45] <cusco> so that in the template I can call the user attention to the sections that contain unfinished forms
[17:04:52] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[17:05:09] <moldy> btw, that view looks like it is *only* showing forms, not processing them (for POST), is that correct?
[17:05:16] <cusco> yes
[17:05:31] * hemebond wonders why one wouldn't use Django forms
[17:05:45] <cusco> this is a django ModelForm
[17:05:47] <moldy> cusco: ok. forms have a has_changed() method, does that solve your problem?
[17:05:54] <cusco> no
[17:06:14] <cusco> anyway serafeim explained what I needed to know
[17:06:19] <moldy> hemebond: they are using django forms, but they are also using the name "form" for some models which is somewhat confusing :)
[17:06:48] <cusco> this is an example of one form defenition: http://paste.debian.net/1203782/
[17:09:03] <moldy> cusco: "I want to set a variable which will tell me if a specific form has all the mandatory data in the instance already"
[17:09:15] <moldy> cusco: why not just get that information from the model instance?
[17:10:21] <moldy> add a has_mandatory_data() method to your models, call that
[17:10:42] <moldy> since this view is basically read-only, the forms will always reflect the data in the model instance
[17:12:09] <hemebond> "I want to set a variable which will tell me if a specific form has all the mandatory data in the instance already" isn't this what forms do already?
[17:12:52] <moldy> not if "mandatory data" means something else to you than to django :)
[17:13:23] <hemebond> 🤯
[17:15:42] <n00bn00b> moldy, have you any example of that meaning difference
[17:15:55] <n00bn00b> like what You mean by mandatory
[17:16:05] <n00bn00b> other than required to be filled and validated?
[17:16:11] <moldy> n00bn00b: django has ``required``, but looking at cusco's code, they mean something else by "mandatory" here
[17:16:28] <moldy> apparently there are objects in the database which don't have all the "mandatory" data yet
[17:16:31] <n00bn00b> thanks, so long discussion
[17:17:26] <n00bn00b> so they have more than 0b10 problems...
[17:18:15] <n00bn00b> as I see cusco already described what they not do, but not what is main idea of problem to be solved
[17:18:27] <n00bn00b> which apparently should be taken into consideration first
[17:19:06] <n00bn00b> then should do some coding, not solving problems of business problem solution representation in code now
[17:19:21] <n00bn00b> most of these errors are imho because of lack of understanding of domain
[17:20:15] <n00bn00b> ad moldy: ( cusco: why not just get that information from the model instance? ) because he dont know the simpler is better?
[17:21:34] <n00bn00b> ppl sometimes afraid to divide code into pieces, I meet one guy who won the argue about inlining the 3loc php statements in about 2k places instead of making the method of it ;/
[17:21:57] <n00bn00b> micromanagement like this (and my overthinking it too) make a mess
[17:22:12] <n00bn00b> (so I will mute myself * mic banging on the floor * )
[17:22:56] <cusco> hey.. no, mandatory is required, yes forms do that already, however only when posting I can see if it is missing data. My goal is since Im sending several forms in the context, to hilight the sections that the user still needs to add some data
[17:23:09] <cusco> well .. im sorry if I have caused a nedless discussion
[17:23:17] <n00bn00b> cusco: not your fault
[17:23:29] <n00bn00b> and, sever is the "source of truth"
[17:23:45] <hylje> cusco: what about a javascript snippet that sniffs out the "required" attr from form inputs and causes a ruckus if you haven't filled them in yet
[17:24:08] <n00bn00b> if You check the requirement of fields on client side (only) it could cause several vurnelabilities of Your application
[17:24:21] <hemebond> I'm still not seeing a requirement that isn't already fullfilled by regular forms.
[17:24:26] <n00bn00b> hylje: why not some html feature?
[17:24:43] <n00bn00b> https://www.w3schools.com/tags/att_input_required.asp
[17:24:54] <hylje> i've sometimes pondered about a "staged" validation scheme where there's very few hard-required fields but you can ask the model about how strictly it passes validation.. so stage1 with minimal stuff stage2 for more stuff, so on
[17:25:04] <hylje> n00bn00b: html doesn't know how to cause a ruckus
[17:25:37] <cusco> anyways, passing instance.__dict__ seems like a workable approach
[17:25:39] <jor> hehe, I just read the initial question/problem as 'how to validate the form on the initial get/render and show the errors'
[17:26:07] <hylje> (some more complex onboarding things for finance, KYC etc don't have a clean way of filling in all the information at once, so it would be useful to spit out the information the onboardee knows right away, and have them return when they get the appropriate documents)
[17:26:18] <n00bn00b> hylje: but You mean by understanding more important logic? then You would have 2 places and 4 times more possibility to make error
[17:26:20] <jor> and then yes, you need to pass the data=..., but instance.__dict__ might contain too much unneeded stuff
[17:26:21] <n00bn00b> and introduce a bug
[17:26:36] <moldy> cusco: your instances are already stored in the database, so apparently mandatory doesn't mean "strictly required so it can be saved"?
[17:26:40] <cusco> jor: yes it will,but also the needed stuff :)
[17:26:55] <n00bn00b> introducting JS mostly should be done on some fancy frontend, not with horribly patched forms imho ;/
[17:27:15] <n00bn00b> cusco, what is the point You want to not make requests?
[17:27:20] <cusco> moldy: they were saved trough outher means, differnt from forms
[17:27:20] <jor> cusco: try, but i'd borrow the functionalitty from the ModelForm, I suspect it looping over the defined fields there
[17:27:35] <n00bn00b> like, why server cant validate it for You in normal way and... let it go, make sth else?
[17:27:43] <cusco> jor: but ModelForm can't check if is valid before posting, right?
[17:27:55] <moldy> cusco: i would still get this from the model
[17:28:03] <hemebond> That's what Javascript and HTML are for.
[17:28:05] <hylje> the server can and needs to validate it for you as well, but it's an user experience thing to be more helpful to the poor data input victim :-)
[17:28:21] <jor> cusco: yeah, ModelForm uses a model_to_dict(instance, opts.fields, opts.exclude) function
[17:28:21] <n00bn00b> cusco: if they are saved through other means, data sources forms or etc. then why they are not other models (but related) ?
[17:28:37] <moldy> cusco: the reason is: your forms are all unbound forms. they are not intended to validate data in that state, just to display it.
[17:28:48] <cusco> n00bn00b: there are plenty of related models
[17:29:17] <moldy> cusco: validation of the data happens with bound forms (usually on a POST request). so in this case, you're better off just looking at the data in your db yourself.
[17:29:30] <n00bn00b> so maybe You try to solve one big problem introducing the merge of problems instead of making it more like bounded, having bounded contexts
[17:29:57] <moldy> so, add a has_mandatory_data() to your models, call that, set a value in the template context based on it.
[17:29:59] <cusco> moldy: that is what Im doing I just thought I could use the form required fields that might not bve required in the model
[17:30:03] <cusco> to validate
[17:30:23] <n00bn00b> you just have hardly mainainable legacy code becausee You had possibility to introduce bad arch to that app imho
[17:30:45] <cusco> moldy: no, adding to the model is not appropriate. The same model might be completed at different stages, and what is mandatory during hte first stage differes from teh second stage, etc
[17:31:00] <moldy> cusco: then give the method a parameter or make more than one
[17:31:01] <hylje> we all do bad architecture because anything useful we do is a moving target
[17:31:09] <n00bn00b> doing JS stuff on client side is not good option for that :) You will make things worse then
[17:31:35] <moldy> cusco: you can probably do something like ``if form.fields[fieldname].required and not getattr(instance, fieldname)`` or such. but i wouldn't overcomplicate this.
[17:31:37] <n00bn00b> hylje afaik no, but I would be pleased to hear your explanatory of your opinion :)
[17:31:57] <cusco> n00bn00b: im trying to understand what you're saying.. I don't think I yet know what "bound/unbound" form is
[17:32:12] <hylje> bound form = has form data, unbound form = no form data
[17:32:17] <cusco> oh
[17:32:23] <hylje> form data comes from the browser eg. input fields and a <form>
[17:32:28] <moldy> cusco: a bound form is one to which input data from the client was submitted (usually on POST)
[17:32:32] <n00bn00b> cusco: also always be sure that if post fails You return the data to the user as pre-filled form ofc; with some glichy code You could break that
[17:32:54] <cusco> yes Im using django standards for that
[17:33:03] <hylje> in other words, bound form = submitted, unbound form = displayed
[17:33:19] <n00bn00b> so great, then do what moldy suggest, helping us a lot ;)
[17:33:29] <cusco> lol
[17:33:39] <n00bn00b> do not overcomplicate it :)
[17:33:43] <cusco> im not
[17:33:54] <cusco> you guys are.. in my unexperienced opinion
[17:34:13] <cusco> anyways, thank you for all the inputs.. I will learn more as I go :)
[17:34:40] <n00bn00b> great thankfullnes for Your unexperienced opinion about guys here XD
[17:35:06] <n00bn00b> I actually was telling you some about DDD but I am fairly sure from your response that You cannot understand it
[17:35:08] <cusco> yes I just became aware that might have sounded harsh, didn't mean to
[17:35:16] <cusco> Im just saying I will keep at it
[17:35:29] <n00bn00b> oh, me to mate just learn something and dont do shit in code
[17:35:30] <hylje> it'll be easier to understand after a good night's sleep i've found
[17:35:55] <cusco> what is DDD?
[17:35:58] <n00bn00b> hylje: after a 4 small projects made from scratch?
[17:36:06] <n00bn00b> cusco: ask google
[17:36:19] <cusco> domain driven design
[17:36:26] <n00bn00b> cusco: and if You learning You will do shitty design as Your daily job
[17:36:30] <n00bn00b> and dont worry
[17:36:37] <n00bn00b> You must practise to be better
[17:36:41] <cusco> indeed
[17:37:01] <n00bn00b> sometimes You should try to write one code 4-5times to make it ok
[17:37:13] <n00bn00b> so, use git (any VCS)
[17:37:21] <n00bn00b> and dont worry about removing your code
[17:37:30] <cusco> ow im an experienced programmer, just new to python and django
[17:37:31] <n00bn00b> making it cleaner, making it tested
[17:37:49] <n00bn00b> cusco: oh I didnt see it at all in your behaviour, sorry - I dont buy it
[17:38:02] <cusco> thats cool, I don't need to sell it :)
[17:38:12] <n00bn00b> so you dont know what it is all about
[17:38:20] <n00bn00b> you are your trademark
[17:38:30] <n00bn00b> if You wont sell it why You do it
[17:38:44] <n00bn00b> if You claim your experience
[17:38:52] <n00bn00b> why You not showing it
[17:38:59] <hylje> calm down
[17:39:03] <n00bn00b> ok, sry
[17:39:12] <hylje> thank you
[17:39:31] <n00bn00b> no problem, too much honest potion drinked today
[17:40:08] <n00bn00b> so, anybody introduced ccbv and is it worth a try?
[17:40:27] <hylje> i've mostly used vanilla cbv and drf cbvs
[17:40:28] <n00bn00b> or there are better alternatives for django with drf projects?
[17:40:50] <n00bn00b> oh, ok
[17:41:40] <n00bn00b> hmm but hylje by cbv do You mean ccbv or cbv is built-in or django plugin?
[17:42:23] <hylje> django comes with a CBV scheme built in, CCBV (iirc) is a library that's laid out in a different way and might be easier to understand
[17:42:32] <n00bn00b> I seen the idea but dont get why to show that like this; other than API spec for some ppl and the code from repo to "understand
[17:42:43] <hylje> DRF also has a related CBV scheme with the APIView class
[17:43:33] <n00bn00b> for libs I completely understand usefullness of that
[17:43:54] <n00bn00b> but for online publicly deployed projects showing the part of code to strangers -- apparently not
[17:44:10] <n00bn00b> what they are actually useful for? ; /
[17:44:50] <n00bn00b> I was talking with guy about ccbv introduction to blog one time; we dont have contact now and dont see any usefullness in that
[17:45:48] <hylje> example projects should have as few dependencies as reasonable, so i would avoid using "convenience" libraries unless showcasing the convenience itself
[17:47:55] <n00bn00b> good point
[17:51:04] *** Quits: anas (~anas@196.235.5.143) (Ping timeout: 246 seconds)
[17:56:50] *** Joins: pycode (~pycode@2001:b07:5d28:551:6ec3:a669:57be:8f6e)
[18:21:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[18:30:16] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[18:32:48] <pycode> jor, pardon, i am back....eeeh you are right there are many ways
[18:33:31] <pycode> i see if this first one works, and then i will understand if i need more optimizations
[18:33:32] <pycode> :)
[18:34:11] <pycode> jor, for example now the problem is the slider eheheh, i mean... if i have from 0 to 200.000 points and the view is just 500 points it means that this curson will be very tiny
[18:35:18] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[18:36:19] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[18:36:47] <pycode> i mean a very small move on the slider will be a big jump on the chart
[18:50:52] *** Joins: crawler (~crawler@user/crawler)
[18:57:40] *** Joins: anas (~anas@197.2.60.124)
[19:00:06] *** Quits: n00bn00b (~N00b@79.184.110.70.ipv4.supernova.orange.pl) (Ping timeout: 272 seconds)
[19:16:18] *** Quits: kostkon (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:21:52] *** Quits: crawler (~crawler@user/crawler) (Ping timeout: 252 seconds)
[19:22:12] *** Joins: crawler (~crawler@user/crawler)
[19:22:14] *** Quits: crawler (~crawler@user/crawler) (Excess Flood)
[19:22:33] *** Joins: crawler (~crawler@user/crawler)
[19:22:35] *** Quits: crawler (~crawler@user/crawler) (Excess Flood)
[19:22:54] *** Joins: crawler (~crawler@user/crawler)
[19:22:56] *** Quits: crawler (~crawler@user/crawler) (Excess Flood)
[19:23:14] *** Joins: crawler (~crawler@user/crawler)
[19:23:16] *** Quits: crawler (~crawler@user/crawler) (Excess Flood)
[19:25:09] *** Quits: HoaxKey (~HoaxKey@85.255.235.12) (Ping timeout: 268 seconds)
[19:32:30] *** Joins: Tykling (~tykling@irc.tyknet.dk)
[19:33:25] *** Quits: Tas-sos (~Tas-sos@78-152-69.adsl.cyta.gr) (Ping timeout: 258 seconds)
[19:33:32] *** Joins: HoaxKey (~HoaxKey@85.255.235.12)
[19:34:02] <Tykling> recommended ide/editor for a new programmer? would be nice if it could also handle javascript
[19:38:26] <hemebond> Sublime Text 4
[19:43:48] <moldy> Tykling: many people use vscode these days
[19:54:12] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[19:54:31] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[19:55:58] *** Quits: anas (~anas@197.2.60.124) (Ping timeout: 252 seconds)
[20:07:10] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[20:07:37] <shangxiao> thought this was an interesting read: https://hakibenita.com/django-nested-transaction
[20:08:30] *** Joins: slavfox (~slavfox@93.158.232.111)
[20:08:37] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 246 seconds)
[20:09:24] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[20:13:26] *** Joins: anas (~anas@102.156.134.91)
[20:16:15] <Tykling> moldy: we went with vscode for her, thank you
[20:18:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:6ec3:a669:57be:8f6e) (Ping timeout: 246 seconds)
[20:18:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:20:02] *** Quits: anas (~anas@102.156.134.91) (Ping timeout: 268 seconds)
[20:20:26] <wallbroken> queryset = self.request.user.ordered_items.all()
[20:20:36] <wallbroken> i want to make an AND condition on filter
[20:20:44] <wallbroken> queryset = self.request.user.terminated_items.all()
[20:20:52] <wallbroken> how to make this?
[20:24:37] *** Joins: mntee (~mntee@2001:19f0:5001:3a15:2020:170f:a0b8:d20e)
[20:25:18] <mntee> hey, current django version in pip3 is 3.2.5 right? shouldn't getting started tutorial for 3.2 work in this case?
[20:29:15] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[20:38:20] <mntee> because i in fact followed all the steps in part 1, copied all the code verbatim into places i was told to, and it throws 404 when i curl http://127.0.0.1:8000/polls/"
[20:39:25] <moldy> mntee: show us your urls.py file please
[20:40:39] <moldy> mntee: actually, show us mysite/urls.py, polls/urls.py and polls/views.py
[20:41:51] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[20:42:38] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[20:42:56] <LuxuryMode> If I have a query `models = Model.objects.filter(a=b)` and then later do `models = models.exclude(x=y)` does this result in hitting the DB twice?
[20:43:52] <moldy> LuxuryMode: no
[20:44:04] <moldy> LuxuryMode: not if you do not evaluate the queryset between the two calls
[20:44:36] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[20:44:48] <LuxuryMode> Got it, thanks
[20:46:24] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:46:59] <mntee> moldy: https://dpaste.org/eM0z here
[20:47:13] <mntee> django-admin --version prints 3.2.5
[20:48:03] <mntee> following this https://docs.djangoproject.com/en/3.2/intro/tutorial01/
[20:48:06] <moldy> mntee: hmm, should work.
[20:48:12] <moldy> mntee:  try restarting runserver please
[20:48:44] <mntee> like abort it and python3 manage.py runserver again?
[20:48:49] <moldy> mntee: yup
[20:49:02] <moldy> it should auto-reload, but sometimes that doesn't work, esepcially on windows i think
[20:50:32] <mntee> moldy: still getting this https://dpaste.org/WSUk
[20:51:11] <moldy> mntee: django is not seeing the line 6 from https://dpaste.org/eM0z for some reason
[20:51:19] <moldy> did you save the file? ;)
[20:51:27] <mntee> yeah the output is from cat
[20:51:52] <moldy> mntee: can you push your whole project to github or such?
[20:52:39] <mntee> ok give me a second
[20:52:53] <moldy> mntee: maybe you edited the wrong urls.py file
[20:53:29] <moldy> mysite/urls.py is relative to your project root, so that urls.py should be in the same directory as settings.py.
[20:53:48] *** Joins: anas (~anas@196.235.5.143)
[20:55:42] <mntee> moldy: the one with 2 paths or the one with the index view?
[20:55:54] <moldy> the one with the two path() calls
[20:56:10] <moldy> the other one should be in polls/urls.py relative to the directory that contains manage.py
[20:56:53] <moldy> if you look at "Let’s look at what startproject created" on https://docs.djangoproject.com/en/3.2/intro/tutorial01/, you see that there are two mysite directories
[20:56:57] <mntee> oh i see
[20:57:01] <moldy> don't confuse them :)
[20:57:04] <mntee> that is true, must have missed that
[20:57:06] <mntee> thanks
[20:57:29] <moldy> also "The outer mysite/ root directory is a container for your project. Its name doesn’t matter to Django; you can rename it to anything you like."
[20:57:37] <moldy> some people like to rename this to avoid getting confused
[20:57:56] <wallbroken> anybody could help me?
[20:59:05] <moldy> wallbroken: self.request.user.ordered_items.all() & self.request.user.terminated_items.all(), iirc
[21:02:36] <wallbroken> moldy: and what to make a not?
[21:02:51] <wallbroken> i need to deny the condition self.request.user.terminated_items.all()
[21:02:52] <moldy> wallbroken: there's .exclude()
[21:03:10] <moldy> i recommend you take some time to read through https://docs.djangoproject.com/en/3.2/ref/models/querysets/
[21:03:39] <wallbroken> ok, thanks
[21:10:17] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:14:44] *** Quits: HoaxKey (~HoaxKey@85.255.235.12) (Ping timeout: 255 seconds)
[21:18:16] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 246 seconds)
[21:47:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:47:05] *** ChanServ sets mode: +v EvilDMP
[21:51:25] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 258 seconds)
[21:52:40] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:54:25] *** Joins: serghei (~egrep@user/serghei)
[22:02:50] *** Joins: Elzington (~Elzington@static-198-54-128-46.cust.tzulo.com)
[22:06:36] *** Joins: Skyz (~Skyz@user/skyz)
[22:11:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:23:55] *** Quits: shangxiao (~davids@101.181.108.207) (Quit: WeeChat 3.2)
[22:31:10] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[22:31:42] <bilb_ono> can someone explain to me why you need uwsgi or gunicorn when trying to run a django app in production? Why not just use the manage.py runserver in production?
[22:33:41] <deniska> bilb_ono: the builtin debug server is not written with performance and security in mind
[22:37:41] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:38:32] <bilb_ono> deniska: ok so runserver is literally for debugging/developing only
[22:38:39] <bilb_ono> thanks
[22:40:46] *** Quits: anas (~anas@196.235.5.143) (Quit: WeeChat 3.3-dev)
[22:47:36] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:38] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:02:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:02:35] *** ChanServ sets mode: +v EvilDMP
[23:06:47] *** Joins: thiras (~thiras@user/thiras)
[23:07:25] *** Joins: audiocat (~audio@2603-8081-1800-6a65-032f-072b-bf09-a39b.res6.spectrum.com)
[23:14:39] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[23:16:47] <LuxuryMode> I'm getting this key error exception https://imgur.com/a/G3Udmdc when trying to check if there's a FK on a model instance https://dpaste.org/WrxP (where `resident` is a `ForeignKey` field). Any ideas on what the issue is here?
[23:17:21] <LuxuryMode> sorry, added relevant line https://dpaste.org/mrOP
[23:18:20] *** Joins: aselman4 (~aselman4@136.2.16.127)
[23:18:58] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:23:34] <LuxuryMode> `myproject.myapp.models.resident.DoesNotExist: Resident matching query does not exist.` is the error I'm seeing. I thought I'd only see such an error for a OneToOneField, not for a ForeignKey
[23:24:35] <LuxuryMode> and that field is set to `null=True`
[23:24:51] *** Joins: argento (~argent0@168-227-97-34.ptr.westnet.com.ar)
[23:34:38] <LuxuryMode> Doh, figured this out. Data integrity issues. The FK is there but no such record exists with that id.
[23:37:10] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[23:41:37] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[23:42:49] <aselman4> Hello all. I have models that link to each other in a parent-child type structure. each child can have one parent (fk). the problem is not every child has a parent.
[23:43:39] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 256 seconds)
[23:43:50] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[23:43:56] <aselman4> For example there are models A, B, C, D. D has parent C, C has parent B, etc. but an instance of D may have a C parent and the C parent may have a null B parent
[23:44:06] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[23:45:47] <aselman4> however i would like to write a query that always starts from A and returns all data on children using nested queries/subqueries. the problem is if a start at A and an instance of D doesnt have an A level parent, the query wont work. does anyone have any suggestions on ways to solve this?
[23:51:29] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
