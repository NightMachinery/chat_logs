[00:08:47] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5)
[00:09:55] <segfaultfizzbuzz> can an amateur like myself understand the difference between arm and x86 ?
[00:10:56] <segfaultfizzbuzz> why did x86 fail to make inroads in the mobile market, for example?
[00:12:01] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[00:12:07] <geekosaur> power
[00:12:28] <geekosaur> x86 bis power-hungry, which means big batteries and a lot of waste heat
[00:12:41] <segfaultfizzbuzz> i've heard that, but can i understand why? is that intrinsic to the isa?
[00:12:59] <segfaultfizzbuzz> some say that the "crufty instruction" claim is insignificant for the power budget
[00:13:16] <segfaultfizzbuzz> is it a lesser ability to perform memory reordering...?
[00:13:27] <geekosaur> not to the isa (instruction set) but to the cpu design. x86 is designed for speed, arm for power saving
[00:13:50] <segfaultfizzbuzz> oh wow i don't know the difference between cpu design and isa, heh
[00:14:08] <segfaultfizzbuzz> so "arm is designed to be powered off while x86 is designed to operate 24/7" ?
[00:14:37] <geekosaur> I'm not sure how you pulled that from what I said
[00:14:55] <segfaultfizzbuzz> "power saving" -- in what way
[00:15:19] <geekosaur> x86 is designed to compute things as quickly as possible, ignoring how much power that costs. arm is designed to compute things in the least power-intensive way, ignoring how long it takes
[00:15:54] <segfaultfizzbuzz> i see
[00:16:02] <geekosaur> and there is in general a speed vs. power tradeoff in the fundamental design
[00:16:17] <geekosaur> (you might look up "CMOS" sometime)
[00:17:14] <segfaultfizzbuzz> i was curious a while ago about arm servers and looked up benchmarks
[00:17:32] <geekosaur> CMOS is the design used for modern transistors. it can run very fast but requires large amounts of power to do so, or run at low power but run slowly
[00:17:33] <segfaultfizzbuzz> this was maybe two or three years ago, i think i was looking at ampere machines (??)
[00:18:05] <segfaultfizzbuzz> i looked at a collection of phoronix benchmarks and the arm servers available were uncompetitive with x86
[00:18:39] <segfaultfizzbuzz> i *think* those benchmarks included power consumption considerations but am not certain
[00:24:58] <segfaultfizzbuzz> so you're saying that ARM cpus are different in regards to how they are physically fabricated and that the isa/logic/etc is more or less irrelevant to the power consumption?
[00:25:06] <geekosaur> you need to design the whole system around the cpu power/speed tradeoff, since it also affects side-channel processors, memory, memory-mapped IO ports, etc.
[00:25:52] <geekosaur> the instruction set means nothing. see transmeta, which started out working on making CPUs that ran the x86 ISA on ARM CPUs
[00:26:24] <geekosaur> this didn't go well mostly because translating ISA on the fly is inevitably going to be slower than running it natively
[00:26:51] <segfaultfizzbuzz> i remember transmeta
[00:27:07] <geekosaur> flip side there have been Intel x86 CPUs that took the same power tradeoff as ARM CPUs (Atom, early Celeron, etc.)
[00:27:26] <geekosaur> They were not popular because people expect performance from "x86"
[00:28:15] <segfaultfizzbuzz> for example i am under the impression that the m1 "is fast"
[00:28:23] <segfaultfizzbuzz> and "is low power consumption"
[00:29:00] <geekosaur> apple designed it to take something closer to the common x86 tradeoff, same way intel designed atom and celeron to take something closer to the common arm tradeoff
[00:29:01] <segfaultfizzbuzz> but, is that because tsmc has a (probably temporary?) node advantage
[00:29:31] <segfaultfizzbuzz> or is the efficiency intrinsic and likely to persist (as in, not marketing)
[00:29:39] <geekosaur> but there are still differences because the rest of the system has to match
[00:31:34] <geekosaur> you can go only so far with changing the power/performance tradeoff without redesigning everything else in the machine — and with much of it (FSB, memory, etc.) you really can't afford to deviate much from what exists without building all your own infrastructure (chip fabrication etc.)
[00:32:58] <geekosaur> and there will be intrinsic differences because, hm. not the exposed instruction set but the underlying CPU design and likely intermediate instruction set/microcode
[00:33:56] <geekosaur> now we're getting into stuff you probably won't understand well without a background in CPU design. I have a partial background because I spent ~15 years working with CPU designers and picked up a few things
[00:34:08] <segfaultfizzbuzz> thinking about "speed" and "power consumption" is a bit confusing in the context of servers
[00:34:28] <segfaultfizzbuzz> because if there is always work to be done, you can burn more power but do things more quickly, so it doesn't matter
[00:37:19] <segfaultfizzbuzz> so... i am guessing that this arm design is more (and will always be?) for low compute throughput devices like phones and laptops and soforth?
[00:39:29] <geekosaur> in the modern world I'd say yes. ARM started out as more general purpose though
[00:40:45] <segfaultfizzbuzz> so we won't see x86 becoming like powerpc
[00:40:53] <geekosaur> x86 pretty much took over the general computing world, so ARM refocused on low power computing
[00:42:04] <geekosaur> powerpc held on longer than most people realize. car embedded computers and the original xbox come to mind
[00:44:37] *** Joins: Pickchea (~private@user/pickchea)
[00:44:44] <geekosaur> but at this point neither x86 nor arm is going away. and intel has a stranglehold on both
[00:46:22] <geekosaur> (they even tried to do a hostile takeover of the ARM consortium, and failed because various EU governments between them hold controlling shares and the consortium founding documents specifically warn against any one company taking control of ARM)
[00:47:19] <perryprog> speaking of takeovers, yay Nvidia is abandoning their plan of buying arm :)
[00:48:38] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[00:49:28] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Read error: Connection reset by peer)
[00:49:37] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[00:53:31] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[00:54:38] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:55:00] <geekosaur> mm, actually I should dig into apple's current relationship with intel. they switched from ppc to x86 in part to get better discounts on arm cpus… but now they're manufacturing their own instead of buying from intel
[00:55:23] <geekosaur> and m1 signals they're spreading that to the desktop
[00:57:56] <geekosaur> (and apparently have been fabricating their own ARM CPUs for iPhones for a while)
[01:01:41] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[01:23:22] *** Quits: joes (~joes@hardfought/member/joes) (Quit: Leaving)
[01:28:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:30:01] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:05:20] <segfaultfizzbuzz> right,... i am trying to understand whether they represent a real competitive threat or whether they will just um, be apple ;-)
[02:06:34] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:06:53] <geekosaur> apple only cares about competitiveness in the phone market
[02:08:11] <geekosaur> they're in some sense a threat to intel. not a threat on the consumer level
[02:25:31] <perryprog> though Intel is...
[02:25:43] <perryprog> old, to put it simply
[02:29:21] <segfaultfizzbuzz> nintendo is also old, so that doesn't matter
[02:29:41] <geekosaur> apple's pretty old too. your point?
[02:29:41] <segfaultfizzbuzz> the significance of phone sales is that they are pretty high volume
[02:29:54] <segfaultfizzbuzz> yeah, i mean, company age isn't as important as competitiveness and inventiveness
[02:30:00] * geekosaur used to own a fat mac
[02:30:12] <segfaultfizzbuzz> haha what? fat mac?
[02:30:13] <geekosaur> apple's changed a *lot* since then
[02:30:28] <segfaultfizzbuzz> i thought apple was a joke back in the 90s
[02:30:34] <geekosaur> original mac 512K vs. 128K
[02:30:40] <segfaultfizzbuzz> ah
[02:31:00] <segfaultfizzbuzz> i'm kinda sold on their phones as being rather good
[02:31:16] <segfaultfizzbuzz> i had a 2012 macbook air and it melted its own keyboard
[02:31:31] <segfaultfizzbuzz> to their credit, they replaced the keyboard for free
[02:31:51] <segfaultfizzbuzz> the m1 air can apparently hit 100c so it isn't clear that the engineering is substantially different...
[02:31:52] <geekosaur> I've never liked the iPhone UI
[02:32:00] <segfaultfizzbuzz> yep, the ui sucks and is full of bugs
[02:32:25] <segfaultfizzbuzz> lol
[02:33:49] <segfaultfizzbuzz> phone sales are high volume and intel doesn't really have their hat in the ring, which means that there's a lot of room to get paid to generate new designs
[02:35:57] <segfaultfizzbuzz> i've done a tiny amount of gpu programming and had to pay attention to moving memory back and forth between the cpu and gpu
[02:36:38] <segfaultfizzbuzz> seems like the apple mx architecture is designed to skip the need to copy
[02:39:37] <perryprog> I was saying I think Intel isn't long for competitiveness, I just used the wrong adjective :P
[02:40:14] <segfaultfizzbuzz> ...i'm a little foggy on what the difference is however between that and like the old macbooks where the gpu would share ram with the cpu... i guess that ram was cordoned off and needed to be copied
[02:41:23] <geekosaur> dual-ported ram is slower
[02:41:38] <segfaultfizzbuzz> dual-ported?
[02:42:22] <geekosaur> if the gpu and the cpu are both able to access some section of memory then there needs to be a hardware mutex to keep them from both accessing it at the same time
[02:42:49] <segfaultfizzbuzz> ok?
[03:08:11] <geekosaur> ok, if that wasn't clear, it's both slower and somewhat more expensive than normal memory so it will usually be somewhere else in the address space than memory used for normal operation. that said, since it's directly accessible by the CPU (with a speed penalty) graphics APIs can allocate memory from it directly for various uses
[03:15:00] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5) (Remote host closed the connection)
[03:15:22] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5)
[03:25:50] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 250 seconds)
[03:27:19] *** Joins: jespada (~jespada@87.74.36.188)
[03:27:57] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[03:30:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:45:38] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[03:46:03] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[03:58:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:18:18] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:29:13] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[04:32:40] *** Joins: alt-romes (~romes@44.190.189.46.rev.vodafone.pt)
[04:34:44] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 250 seconds)
[04:38:18] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[04:40:26] *** Quits: alt-romes (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[04:53:00] *** Joins: xsperry (~xs@user/xsperry)
[04:53:17] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5) (Ping timeout: 240 seconds)
[05:05:37] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[05:13:29] *** Joins: xsperry (~xs@user/xsperry)
[05:19:20] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[05:24:22] *** Joins: zaquest (~notzaques@5.130.79.72)
[05:28:32] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[05:52:53] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Read error: Connection reset by peer)
[05:54:23] *** Joins: xsperry (~xs@user/xsperry)
[06:00:57] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:30:07] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:12:01] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:17] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[08:02:17] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf) (Ping timeout: 240 seconds)
[08:26:41] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:00:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[10:40:45] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[11:02:14] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:05:15] *** Joins: xsperry (~xs@user/xsperry)
[11:11:01] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[11:14:23] *** Joins: xsperry (~xs@user/xsperry)
[11:24:45] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[11:31:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[11:36:06] *** Joins: xsperry (~xs@user/xsperry)
[11:36:30] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[12:35:05] *** dminuoso_ is now known as dminuoso
[12:35:31] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:36:01] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:45:39] *** Quits: dminuoso (~dminuoso@static.88-198-218-68.clients.your-server.de) (Changing host)
[12:45:39] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[12:47:32] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:32] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:35] *** allbery_b is now known as geekosaur
[13:31:31] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[13:32:00] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[13:49:39] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[13:53:17] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[14:08:42] *** Joins: joes (~joes@hardfought/member/joes)
[14:21:05] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Remote host closed the connection)
[14:21:32] *** Joins: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827)
[15:04:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:05:49] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:36:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[15:38:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:17:50] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5)
[16:39:05] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5) (Quit: Leaving)
[17:59:13] *** Quits: joes (~joes@hardfought/member/joes) (Remote host closed the connection)
[18:02:34] *** Joins: joes (~joes@hardfought/member/joes)
[18:24:37] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf) (Ping timeout: 240 seconds)
[18:30:48] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[19:03:53] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:59e3:db49:aa0a:46e5)
[19:04:36] <segfaultfizzbuzz> i'm trying a bit of haskell again (coming from rust) and am trying to understand the workflow which substitutes for the availability of crates.io,...
[19:05:17] <segfaultfizzbuzz> i have a goal which is to use https://hackage.haskell.org/package/http-conduit-2.1.8/docs/Network-HTTP-Conduit.html so i can try working with a stream of data in haskell
[19:05:48] <segfaultfizzbuzz> stack was favored at one point but i got the impression that maybe cabal is now favored...??
[19:05:59] <geekosaur> depends on who you ask
[19:06:09] <geekosaur> last time I checked it was about even
[19:06:09] <segfaultfizzbuzz> lol
[19:06:59] <geekosaur> one problem with stack is that it went from being maintained by fpco to community-maintained, and the community doesn't seem to be doing much maintenance any more
[19:07:08] <segfaultfizzbuzz> of stack?
[19:07:14] <geekosaur> yes
[19:07:46] <geekosaur> that said, using stackage LTSes does make things a bit easier, and cabal doesn't really have a good way to use stackage as yet
[19:08:45] <sclv> right. the niche of stack is if you want a consistent but not-necc-the-latest universe of packages picked for you, as opposed to the whole of hackage
[19:08:51] <merijn> My relevant, yet completely avoiding answering the question, explanation: https://gist.github.com/merijn/8152d561fb8b011f9313c48d876ceb07
[19:08:59] <merijn> segfaultfizzbuzz: ^^
[19:09:02] <sclv> it tends to have more appeal to large company projects
[19:18:15] *** Quits: prrxddq[m] (~prrxddqma@2001:470:69fc:105::1:4f72) (Quit: Client limit exceeded: 20000)
[19:26:58] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[19:27:53] <segfaultfizzbuzz> what... https://paste.rs/E38  ... cabal complains unexpected 'h' expecting space, "&&", white space, "||", comma or end of input
[19:28:07] *** Joins: prrxddq[m] (~prrxddqma@2001:470:69fc:105::1:4f72)
[19:30:17] <geekosaur> you're missing a comma
[19:30:42] <geekosaur> twice, you make the same mistake in the library and executable sections
[19:31:10] <geekosaur> version specs need to be separated by commas since they are potentially complex expressions
[19:31:43] <geekosaur> so put a comma at the end of "base >=4.12 && <4.13" in both places
[20:24:18] <segfaultfizzbuzz> https://community.arm.com/arm-community-blogs/b/architectures-and-processors-blog/posts/the-final-isa-showdown-is-arm-x86-or-mips-intrinsically-more-power-efficient  regarding x86 vs arm, this was a good discussion (if slightly dated)
[20:24:34] <segfaultfizzbuzz> https://www.extremetech.com/wp-content/uploads/2014/08/PowerPerfTrade.png of note was this figure, hehe
[20:34:29] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::a2bf)
[21:13:11] *** Joins: vicfred (~vicfred@user/vicfred)
[21:16:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[21:17:40] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:27:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:28:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:42:04] *** Quits: coot (~coot@2a02:a310:e03f:8500:5cc8:47c:8ec0:b827) (Quit: coot)
[21:48:22] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:02:40] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:04:02] *** Quits: joes (~joes@hardfought/member/joes) (Ping timeout: 268 seconds)
[22:13:54] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:15:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:21:23] *** Quits: quintasan (~quassel@quintasan.pl) (Quit: quintasan)
[22:31:45] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:33:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:33:47] *** Joins: quintasan (~quassel@quintasan.pl)
[22:35:03] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:40:01] <segfaultfizzbuzz> so... i'm following the examples here: https://hackage.haskell.org/package/http-conduit-2.1.8/docs/Network-HTTP-Conduit.html ... the first one works, and after (i think?) fixing the dependencies in the second i am getting a type mismatch
[22:40:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:41:50] <segfaultfizzbuzz> couldn't match C.Conduit with C.SealedConduitT
[22:42:09] <segfaultfizzbuzz> i'm guessing that this has something to do with some kind of version mismatch in the dependencies
[22:42:49] <segfaultfizzbuzz> but the example doesn't say what its precise dependencies are, and i was just following what cabal said to use when my compiles failed
[22:44:17] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[23:44:01] *** Joins: Pickchea (~private@user/pickchea)
