[00:00:14] *** Parts: kadir (~kadir@78.178.105.36) (WeeChat 3.3)
[00:00:44] <_death> maybe one could hack sbcl to change the array header for a different element type, utilize the pun, and revert back
[00:03:38] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[00:03:40] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Read error: Connection reset by peer)
[00:04:08] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[00:04:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[00:06:42] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:07:09] <_death> or create a new header similar to displaced arrays..
[00:09:12] <Guest74> ugh, apparently xlib:put-raw-image does not behave like xlib:put-image.  It will not send the data in multiple requests. It wont even check if the data will fit in one request and so hangs with anything larger than max request size.
[00:11:51] <_death> it would have endianness issues similar to C, though
[00:12:09] <Guest74> welp, that was a lot of wasted time.
[00:14:30] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[00:17:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[00:17:08] <NotThatRPG_away> A follow-up on my earlier question about tests that finish locally, but bog on GitHub CI. I have noticed one big difference: when I run the tests locally, FiveAM (for they are 5AM tests) runs them in lexicographic order by name. But on GitHub CI, they are in what looks like a random order. I'm not sure what could account for that difference.
[00:17:14] *** NotThatRPG_away is now known as NotThatRPG
[00:26:07] *** Quits: alvaro121_ (~akira121@201.230.126.66) (Ping timeout: 250 seconds)
[00:31:54] *** Joins: alvaro121_ (~akira121@201.230.126.66)
[00:32:53] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 268 seconds)
[00:34:46] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[00:41:08] <jackdaniel> Guest74: isn't put-raw-image what you've been proclaiming for clx persistently though - "provide raw x11 protocol and let the client handle higher abstractions"?
[00:41:23] <jackdaniel> like i.e splitting the request
[00:42:28] <Guest74> multiple requests are part of the protocol.
[00:43:46] *** Joins: paule32_ (~paule32@user/paule32)
[00:44:44] <jackdaniel> perhaps I'm looking in the wrong place, but putimage (the x11 request) is not specified to split the request
[00:45:02] *** Quits: alvaro121_ (~akira121@201.230.126.66) (Ping timeout: 240 seconds)
[00:46:01] <Guest74> are you being intentionally obtuse?
[00:46:06] <jackdaniel> (and xlib:put-image is specified to put some lipstick on that native request)
[00:46:15] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 244 seconds)
[00:46:44] <jackdaniel> no, and please try moderate your language
[00:48:14] <jackdaniel> what I'm saying is that you are inconsistent with your own previous intentions expressed in clx repository
[00:50:51] <jackdaniel> s/is specified to put/is defined to put/
[00:53:21] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:59:23] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:59:29] *** Joins: ym (~ym@5.143.220.3)
[01:03:15] *** Joins: gaqwas (~john@dynamic-095-114-161-175.95.114.pool.telefonica.de)
[01:07:32] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:07:38] *** Quits: VincentV` (~user@212.241.29.8) (Read error: Connection reset by peer)
[01:08:51] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 245 seconds)
[01:09:46] *** Joins: amb007 (~a_bakic@128.148.22.93.rev.sfr.net)
[01:11:02] *** Quits: ym (~ym@5.143.220.3) (Ping timeout: 240 seconds)
[01:18:17] *** Joins: stacksmith (~stack@ctrl-c.club)
[01:18:27] <stacksmith> Good morning
[01:20:33] *** Joins: sander (~sander@user/sander)
[01:22:17] <stacksmith> Does anyone know why Emacs would stop treating one of the .lisp files in my project as a lisp file?
[01:23:04] <stacksmith> It refuses to do SLIME stuff, like compile file or function...
[01:27:44] <NotThatRPG> What's in the mode line for that buffer (as opposed to mode line of working buffer)?
[01:28:38] <NotThatRPG> I mean the emacs mode line at the bottom of the window. But the "mode line" as in a line at the top of the file, commented, with settings, is also worth checking.
[01:28:43] <stacksmith> normally, (Lisp Paredit adoc [my-proj-name sbcl]); crappy file: (Lisp)
[01:29:04] <mfiano> M-S-; major-mode RET
[01:29:33] <stacksmith> Why would it suddenly stop SLIMEing just that file?
[01:29:42] <mfiano> type that in both buffers
[01:31:14] <stacksmith> mfiano: both report lisp-mode
[01:31:48] *** Quits: cage (~cage@dynamic-adsl-84-220-237-192.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:33:56] <mfiano> Then something strange is going on. I have never seen that with SLY at least.
[01:34:17] <mfiano> I'm not very familiar with SLIME though.
[01:34:25] <mfiano> Maybe someone else could further debug
[01:34:45] <etimmons> Does `M-x revert-buffer` in the the crappy file (with SLIME running) fix it?
[01:36:04] <etimmons> I've had this happen to me before where opening a file before running M-x slime caused SLIME's key bindings and other stuff to not apply
[01:36:56] <mfiano> Interesting. Maybe that's another thing to add to the "SLY fixed it" list
[01:37:04] <stacksmith> sadly I've been editing the file trying to get it to work so reverting is not possible.
[01:37:25] <mfiano> Just save it to disk, then revert-buffer
[01:37:49] <stacksmith> That does nothing
[01:38:26] <mfiano> and M-x slime-compile-defun does not work?
[01:38:54] <mfiano> That is, are the major mode key maps messed up, or is SLIME just not working at all
[01:39:18] <pjb> stacksmith: etimmons: M-x normal-mode RET should reset the major mode to what emacs thinks it should.
[01:39:27] <pjb> (might be better than revert-buffer)
[01:39:35] <etimmons> Good to know
[01:40:18] <stacksmith> slime-compile-defun seems to have compiled a function
[01:40:39] <stacksmith> M-x normal-mode RET does nothing useful
[01:40:59] <mfiano> Ok so something clobbered the keymap
[01:41:01] <mfiano> Interesting
[01:41:22] <stacksmith> Peculiar that Paredit is gone
[01:41:50] <mfiano> What does it even say for C-h k C-c C-c ?
[01:41:57] <NotThatRPG> I would have guessed that meant that something went wrong in your hook functions or something, causing the failed buffer not to be properly initialized
[01:42:12] <stacksmith> undefined
[01:42:20] <NotThatRPG> Anything in the *Messages* buffer?
[01:43:11] <mfiano> What happens if you do M-x lisp-mode RET ?
[01:43:35] <mfiano> If that fixes it, I'd double check it really is a *.lisp extension and not a typo
[01:44:10] <stacksmith> Ah.  M-x lisp-mode RET says 'unmatched bracket'
[01:44:33] <mfiano> Oh then do M-x check-parens
[01:45:33] <stacksmith> OK, fixed paren and M-x lisp-mode fixed it.
[01:45:50] <stacksmith> That was a shit and a half, as usability goes.
[01:45:56] <mfiano> Odd how it crippled everything. It has never done that for me
[01:46:05] <mfiano> Glad to help though
[01:46:07] <pjb> paredit-mode will deactivate itself when parentheses become unbalanced, but this should not deactivate lisp-mode or slime.
[01:46:18] <stacksmith> Thanks a lot
[01:46:19] *** Quits: amb007 (~a_bakic@128.148.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[01:46:34] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[01:47:11] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 264 seconds)
[01:47:53] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[01:49:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Remote host closed the connection)
[01:50:08] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:06:44] *** Quits: cosimone (~user@93-44-184-123.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:09:56] *** Joins: akira121__ (~akira121@201.230.126.66)
[02:16:01] *** Quits: roelj (~user@2001:1c02:b16:3700:3718:3a46:b1ae:ba54) (Remote host closed the connection)
[02:17:32] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[02:26:02] *** Quits: gaqwas (~john@dynamic-095-114-161-175.95.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[02:36:39] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[02:39:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:15:13] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:17:01] *** Quits: Jing_ (~hedgehog@2604:a840:3::1033) (Remote host closed the connection)
[03:17:39] *** Joins: Jing (~hedgehog@2604:a840:3::1033)
[03:19:36] *** Quits: akira121__ (~akira121@201.230.126.66) (Remote host closed the connection)
[03:20:30] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[03:20:30] *** Joins: alvaro121 (~akira121@201.230.126.66)
[03:26:17] *** Joins: s-liao (~s-liao@101.86.103.113)
[03:27:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:29:14] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[03:49:03] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[03:55:09] *** Quits: stylewarning (sid241636@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[03:55:09] *** Quits: iisi (sid19824@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[03:56:27] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:57:09] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[03:57:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[03:57:20] *** Quits: travv0 (sid293381@user/travv0) (Read error: Connection reset by peer)
[03:57:21] *** Quits: splittist (sid17737@id-17737.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:57:21] *** Quits: dbotton (sid492350@id-492350.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:25] *** Quits: sgithens (sid10659@id-10659.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:25] *** Quits: jcowan (sid325434@id-325434.ilkley.irccloud.com) (Read error: No route to host)
[03:57:27] *** Quits: griffinmb (sid410590@id-410590.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:33] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:35] *** Quits: jsatk (sid304796@id-304796.helmsley.irccloud.com) (Write error: Connection reset by peer)
[03:57:37] *** Quits: IUSR (sid348938@2a03:5180:f:4::5:530a) (Read error: Connection reset by peer)
[03:57:39] *** Quits: victor (sid208353@user/victor) (Read error: Connection reset by peer)
[03:57:40] *** Quits: ullbeking (sid5364@user/ullbeking) (Read error: Connection reset by peer)
[03:57:40] *** Quits: d_run (sid83858@id-83858.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:40] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:41] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:57:41] *** Quits: hubvu (sid495858@user/hubvu) (Read error: Connection reset by peer)
[03:57:42] *** Quits: alanz (sid110616@id-110616.uxbridge.irccloud.com) (Read error: Connection reset by peer)
[03:57:44] *** Lord_of_Life_ is now known as Lord_of_Life
[04:06:23] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4) (Ping timeout: 264 seconds)
[04:13:02] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 240 seconds)
[04:13:24] *** Joins: occ (~occ@user/occ)
[04:14:03] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[04:14:13] *** Joins: hubvu (sid495858@user/hubvu)
[04:14:18] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[04:14:20] *** Joins: d_run (sid83858@hampstead.irccloud.com)
[04:14:21] *** Joins: conjunctive (sid433686@helmsley.irccloud.com)
[04:14:24] *** Joins: pl (sid98063@helmsley.irccloud.com)
[04:14:24] *** ChanServ sets mode: +o pl
[04:18:36] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[04:19:13] *** Quits: dbotton (sid492350@lymington.irccloud.com) (Ping timeout: 256 seconds)
[04:19:47] *** Quits: d_run (sid83858@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[04:20:11] *** Quits: gendl (sid100083@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[04:20:11] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 264 seconds)
[04:20:47] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[04:20:47] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[04:21:09] *** Joins: frgo_ (~frgo@p548a30d7.dip0.t-ipconnect.de)
[04:22:11] *** Joins: d_run (sid83858@hampstead.irccloud.com)
[04:22:16] *** Joins: conjunctive (sid433686@helmsley.irccloud.com)
[04:22:59] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[04:23:18] *** Joins: hubvu (sid495858@user/hubvu)
[04:23:35] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:23:52] *** Joins: splittist (sid17737@tinside.irccloud.com)
[04:24:10] *** Joins: pl (sid98063@helmsley.irccloud.com)
[04:24:10] *** ChanServ sets mode: +o pl
[04:24:26] *** Joins: victor (sid208353@user/victor)
[04:25:06] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[04:26:06] *** Joins: alanz (sid110616@uxbridge.irccloud.com)
[04:29:19] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[04:32:04] *** Joins: iisi (sid19824@hampstead.irccloud.com)
[04:32:46] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 268 seconds)
[04:34:18] *** Joins: travv0 (sid293381@user/travv0)
[04:34:19] *** Joins: jcowan (sid325434@ilkley.irccloud.com)
[04:41:35] *** Joins: stylewarning (sid241636@helmsley.irccloud.com)
[04:44:42] *** Joins: ullbeking (sid5364@user/ullbeking)
[04:50:53] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[04:54:29] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[04:54:36] *** Joins: sgithens (sid10659@helmsley.irccloud.com)
[04:54:40] *** Joins: IUSR (sid348938@hampstead.irccloud.com)
[04:58:05] *** Quits: utis_ (~utis@vpn-client317.uio.no) (Ping timeout: 246 seconds)
[04:58:40] *** Joins: utis (~utis@vpn-client317.uio.no)
[05:11:11] *** Quits: occ (~occ@user/occ) (Ping timeout: 264 seconds)
[05:12:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[05:14:41] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[05:17:18] *** Quits: random-nick (~random-ni@87.116.176.55) (Ping timeout: 260 seconds)
[05:33:07] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:44:43] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[05:45:50] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[05:54:35] *** Joins: elderK (uid205007@helmsley.irccloud.com)
[05:54:40] *** Joins: griffinmb (sid410590@helmsley.irccloud.com)
[05:54:45] *** Joins: drmeister (sid45147@ilkley.irccloud.com)
[06:13:41] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 246 seconds)
[06:16:43] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[06:20:32] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Ping timeout (120 seconds))
[06:30:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[06:32:38] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[06:34:41] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 245 seconds)
[06:34:53] *** Quits: pve (~pve@178-55-111-82.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[06:35:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[06:36:12] *** Joins: pve (~pve@37-33-70-215.bb.dnainternet.fi)
[06:36:28] *** Joins: aeth (~aeth@user/aeth)
[06:37:48] *** Joins: pillton (~user@2405:b000:703:2::35:28)
[06:51:02] *** Quits: alvaro121 (~akira121@201.230.126.66) (Ping timeout: 240 seconds)
[06:53:25] *** Joins: paule32__ (~paule32@user/paule32)
[06:55:28] *** Joins: paule32 (~paule32@user/paule32)
[06:56:32] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 240 seconds)
[06:58:14] *** Joins: paule32_ (~paule32@user/paule32)
[06:58:27] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 256 seconds)
[06:59:55] *** Joins: paule32__ (~paule32@user/paule32)
[07:01:51] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 256 seconds)
[07:03:41] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 264 seconds)
[07:07:47] *** Joins: s-liao (~s-liao@101.86.103.113)
[07:12:39] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[07:17:38] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:24:56] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[07:25:52] *** Joins: holycow (~rtaylor@69-172-184-139.cable.teksavvy.com)
[07:30:16] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[07:31:24] <beach> Good morning everyone!
[07:31:42] <holycow> morning beach
[07:33:01] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: jealousmonk (~user@2804:431:e7c4:7f35:7769:1f33:9572:c142) (Quit: ERC (IRC client for Emacs 27.1))
[08:06:27] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 256 seconds)
[08:13:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[08:20:17] <asen> good morning
[08:23:27] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 256 seconds)
[08:31:14] *** Quits: semz (~none@user/semz) (Ping timeout: 246 seconds)
[08:32:24] <beach> asen: Are you new here?  I don't recognize your nick.
[08:42:48] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[08:43:53] *** Joins: semz (~none@user/semz)
[08:50:48] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[08:51:01] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[08:58:21] *** Joins: VincentVega (~user@212.241.28.95)
[09:23:03] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[09:23:16] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[09:23:55] *** Joins: Oladon (~olad@98.43.81.226)
[09:31:11] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[09:40:11] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[09:40:39] *** Joins: VincentV` (~user@212.241.28.95)
[09:42:41] *** Quits: VincentVega (~user@212.241.28.95) (Ping timeout: 264 seconds)
[09:54:28] *** Joins: s-liao83 (~s-liao@101.86.103.113)
[09:54:41] *** Quits: frgo_ (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:54:55] *** Quits: s-liao83 (~s-liao@101.86.103.113) (Client Quit)
[09:55:12] *** Joins: s-liao80 (~s-liao@101.86.103.113)
[09:55:39] *** Quits: s-liao80 (~s-liao@101.86.103.113) (Client Quit)
[09:56:09] *** Joins: s-liao90 (~s-liao@101.86.103.113)
[09:56:26] *** Quits: s-liao90 (~s-liao@101.86.103.113) (Client Quit)
[09:57:00] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[09:59:10] *** Joins: s-liao (~s-liao@101.86.103.113)
[10:01:55] *** Joins: occ (~occ@user/occ)
[10:09:07] *** Joins: alvaro121 (~akira121@201.230.126.66)
[10:20:02] *** Quits: dre (~dre@2001:8003:c932:c301:a62b:d5d5:737b:8c68) (Ping timeout: 240 seconds)
[10:20:13] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 250 seconds)
[10:21:41] *** Quits: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Ping timeout: 264 seconds)
[10:36:37] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:41:33] *** Joins: gaqwas (~john@dynamic-095-115-100-195.95.115.pool.telefonica.de)
[10:44:23] *** Joins: dre (~dre@2001:8003:c932:c301:95e0:6e2a:a0f5:346)
[10:46:18] <mfiano> Good morning
[10:48:24] <hayley> Hey mfiano.
[10:49:35] <mfiano> I have been thinking of getting back into CL development this week after a long hiatus. I would like to explain my implementation of a graphics generation algorithm, because my plan is to create a visual stepwise animation of it executing, for the purpose of more intuitive debugging and parameter tweaking. I am not sure if this channel is okay with that, as while it is written in CL, it is
[10:49:37] <mfiano> mostly algorithm explanation in order to get ideas on how to visually represent things.
[10:50:46] <beach> Hello mfiano.  I say "try us".
[10:50:50] <mfiano> My plan is to have something similar to a graphical disassembler, that i can iterate stepwise forward or reverse, in order to visually see changes ("register contents", etc)
[10:51:42] <mfiano> Thanks. I have been thinking about this for several months, and I have vague ideas. Any feedback would go a long way towards getting me back into a coding mindset.
[10:53:39] <mfiano> So the algorithm is a variant of Wave Function Collapse (WFC), but you don't need to know what that does, just that it is a method to generate 'locally-similar' images, given a sample image. This means similar patterns/textures show up in the output, and with a similar frequency.
[10:55:21] <mfiano> My implementation is split up into 2 phases: analyzation of the input image, and generation of the output. All the interesting work is done in the first phase. This is where all the data structures are cached to be used by the latter phase.
[10:57:12] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:58:27] <mfiano> Phase 1 goes something like this: Given a kernel size, say 3x3 pixels, start at the topleft of the sample, and read the 3x3 pattern of pixels. All 4 RGBA channels of each pixel are packed into a UB32 integer, and stored in a 'patterns' hash table keyed by a 1d array of length 9 of element-type '(unsigned-byte 32), whose value is 0, and subsequent patterns are increased by 1.
[10:59:02] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[10:59:18] <mfiano> The next pattern is taken from moving the kernel window right 1 pixel, so receives the 2 columns from the first pattern, plus an additional column.
[10:59:43] <mfiano> For each of these patterns, all the reflections and rotations are also calculated, and added to the hash table if they are unique.
[11:00:06] <mfiano> So by the time the entire image is analyzed, there will be lots of patterns that phase 2 makes use of.
[11:01:11] <mfiano> Phase 2 is what I actually want to be visualized graphically in the stepwise manner I mentioned.
[11:03:04] <mfiano> How that phase works is, given an output image size, initialize each pixel to be a bit vector of length 'number of patterns' (hash-table-count from phase 1).
[11:05:04] *** Joins: s-liao88 (~s-liao@101.86.103.113)
[11:05:36] <mfiano> Now each pixel of the output is the 'superposition' of every possible pattern. The algorithm does some mathy stuff to select a pattern of the lowest entropy for some random starting pixel, which modifies its bit vector to reflect all the patterns that cannot coherently fit adjacent to the selected pattern.
[11:06:09] *** Joins: occ (~occ@user/occ)
[11:06:59] <mfiano> and then these changes are propagated to the adjacent pixels' bit-vectors, until propagation cannot continue, and the algorithm selects another pixel and repeats. the process is done when either a contradiction occurs, in which case you have to start over or backtrack to some point in the past, or all bit-vectors are reduced to a single on bit
[11:07:54] <mfiano> Wow that was a mouthful. So I'm trying to think of a good way to stepwise animate this superposition of many possible patterns
[11:08:24] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[11:13:17] *** Joins: s-liao (~s-liao@101.86.103.113)
[11:14:40] *** Quits: pillton (~user@2405:b000:703:2::35:28) (Quit: ERC (IRC client for Emacs 27.2))
[11:15:12] *** Quits: s-liao88 (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[11:16:04] <mfiano> In a way, you can think of it as a giant sudoku puzzle, with many more choices than single digit numbers
[11:16:12] *** Quits: s-liao (~s-liao@101.86.103.113) (Client Quit)
[11:16:51] <mfiano> Phase 1 could easily generate 1000 different patterns, which means each output pixel would start as a bit vector of length 1000
[11:17:29] <mfiano> (with all on bits, and takes its final shape with there is a single on bit left)
[11:19:17] <mfiano> s/with/when/
[11:21:39] <beach> It sounds like a bit vector with length "number of patterns" would be huge, no?
[11:21:51] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4)
[11:22:08] <beach> Why 1000 and not way more?
[11:22:13] <mfiano> Yes, and that is compounded by the fact that a robust implementation would need to keep history for backtracking purposes
[11:22:58] <mfiano> it's completely input-dependent. it depends on how many unique patterns of the given kernel size exist in the sample (including rotational and reflective symmetry)
[11:23:28] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[11:23:58] <beach> The number of possible patters is 2^{32*9}, no?
[11:24:08] <beach> Why would there be any repetition whatsoever?
[11:24:29] <mfiano> Where did I imply repetition?
[11:25:00] <beach> The hash table value is incremented when a pattern is repeated I think you said.
[11:25:59] <mfiano> The hash table is keyed by the pattern array, with a timestamp value if that pattern has not been seen before for the entire sample image
[11:26:33] <mfiano> otherwise if it has, another frequencies table is incremented, but that is irrelevant details
[11:27:23] <beach> So it seems to me that there will typically be as many patters as there are pixels in the input image.
[11:27:43] <mfiano> that is not true at all
[11:28:12] <beach> If not, there is repetition, which you just suggested there isn't.
[11:29:53] <mfiano> Jump to "Pre Processing". It gives an example of a 4x4 input sample image, with a kernel size of 3: https://www.gridbugs.org/wave-function-collapse/
[11:30:15] <mfiano> amd then scroll down a bit for an example with rotations/reflections
[11:33:04] <beach> I am afraid that didn't help my confusion.
[11:33:33] <beach> If the same pattern appears several times in the image, then that means that there is repetition.
[11:34:12] <beach> If there is no repetition, then each pattern appears only once, and there must be as many patters as there are pixels.
[11:34:40] <mfiano> Ok, yes there may possibly be repetition, sorry. Repetition is not recorded in the patterns table, not the bit vector, but in a separate analyzation table keyed by pattern array whose value is an increasing integer representing its frequency
[11:35:48] <beach> But a pattern has 32*9 bits, so the probability of repetition is a random image is very low.
[11:35:51] <mfiano> or it might be keyed by the pattern id timestamp from the pattern table, that probably sounds more right (going by memory here)
[11:36:19] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[11:36:34] <mfiano> this algorithm is meant to be used with simple bitmaps of a small number of colors
[11:36:44] <beach> You never told us that.
[11:36:46] <mfiano> the frequency can vary a lot
[11:37:38] <beach> If that's the case, why use 32 bits for a pixel value?  32 bits suggests 8 bits for each color and 8 bits for alpha.
[11:37:41] <mfiano> True, this algorithm is fairly complicated, and I was trying to omit some details, and forgot others, as I just want to create a graphical debugger for phase 2
[11:38:12] <beach> But you said that phase 1 is the important one as I recall.
[11:38:13] <beach> No?
[11:38:41] <beach> "All the interesting work is done in the first phase."
[11:40:25] <mfiano> Phase 1 is the analyzation of the small size/color count input image, which records all these patterns and frequencies into the 2 global tables. Phase 2 is the actual generation of the output by intelligently choosing a pixel's pattern to 'collapse it to', and removing impossibilities of adjacent pixels in a recursive propagation step
[11:40:39] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[11:43:14] <mfiano> By that, I just meant that generation uses the cached data from phase 2 and is pretty much a black box as far as my problem is concerned.
[11:43:47] <mfiano> with the only detail needed is that each output image pixel is many possible values until propagation limits it down
[11:44:11] <mfiano> err cached data from phase 1
[11:49:40] *** Joins: hirez- (~hirez@2602:ffc5:20::1:512e)
[11:49:52] *** Quits: hirez (~hirez@2602:ffc5:20::1:512e) (Quit: Later)
[11:55:02] *** Quits: dre (~dre@2001:8003:c932:c301:95e0:6e2a:a0f5:346) (Ping timeout: 240 seconds)
[11:55:19] <beach> What does a superposition of patterns look like?
[11:55:54] *** Joins: aeth_ (~aeth@user/aeth)
[11:57:05] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[11:57:16] <mfiano> Assume there are 100 patterns recorded in the global patterns table, and maybe there are a few repetitions of some recorded in another global table.
[11:58:51] <mfiano> The generation begins by the user choosing an output size, and initializing an array with each element being an object that contains a bit vector filled with 1's of length 100. the index into these bit vectors is the timestamp of the patterns recorded in the global patterns table.
[12:00:46] <mfiano> the output is realized by intelligently selecting a pattern, thus setting all except 1 of a single output pixel's bit-vector bits to 0, and propagating changes to adjacent pixels recursively (there are a set of adjacency rules computed in phase 1 to go by)
[12:01:16] <mfiano> so the superposition of each pattern is this bitvector. it is a collapsed pattern when it has a single 'on' bit
[12:02:12] <beach> But, I mean, what operation is "superposition"? Bitwise AND, Bitwise OR, Bitwise XOR, something else?
[12:02:40] <mfiano> It's not an operation, just a data structure.
[12:02:56] <mfiano> i guess OR though
[12:03:31] <mfiano> any bit set to on is a possible pattern for that output cell.
[12:05:47] <beach> I think I understand a little bit better, but I don't think I can be of much help.  I suspect some domain knowledge is required for that.
[12:06:03] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:07:10] <mfiano> Sure no problem. To summarize, the problem I've been thinking about is a graphical representation of the 'progress' of collapsing each output pattern.
[12:07:38] <beach> Yes, I see.
[12:08:16] <mfiano> Obviously a large output image needs something like user-input and context panes to intuitively display interesting information
[12:08:26] <mfiano> but the arbitrary size of the data still makes that hard
[12:10:05] <mfiano> drilling into the inspector is less than ideal and very error prone, from my experience, especially considering the number of iterations you want to inspect various state about.
[12:10:32] <mfiano> I will think some more. UI is hard as it is
[12:12:12] <beach> Indeed.
[12:12:34] <mfiano> On another note
[12:13:10] <mfiano> Consider a small-ish 200x200 output image requested by the user.
[12:13:28] <mfiano> with 100 possible patterns for each of those 40k pixels
[12:14:47] <mfiano> that is a lot of bits for each bit-vector, that need to be different objects with no shared state. Now consider that contradictions in the algorithm are common, so backtracking is needed. That means many histories of this 40k instances of 100-long bit-vectors need to be kept
[12:14:55] <mfiano> this is also a very memory intensive program
[12:15:08] <mfiano> That, i don't think can be easily solved.
[12:15:21] <beach> Sounds bad, yes.
[12:16:04] *** Joins: dre (~dre@2001:8003:c932:c301:3aa0:ae93:dc87:2b3)
[12:17:35] <mfiano> It's a really inefficient algorithm, and not guaranteed to terminate, hence the backtracking. But what makes it interesting is the extensibility in which it can be modified, and how good it looks when it does complete.
[12:18:46] *** Quits: gaqwas (~john@dynamic-095-115-100-195.95.115.pool.telefonica.de) (Remote host closed the connection)
[12:18:57] *** Joins: gaqwas (~john@dynamic-095-115-100-195.95.115.pool.telefonica.de)
[12:20:05] <mfiano> Thanks for your time. I am slowly getting back into coding mode and appreciate having someone to explain this to to get my brain in gear.
[12:21:27] <mfiano> I haven't coded anything other than small menial tasks in about 5 months. This project is what I want to come back to and finish with perhaps a McCLIM frontend for experimenting.
[12:21:48] <mfiano> Though McCLIM in quicklisp is broken. I should talk to jackdaniel about that
[12:22:36] <jackdaniel> how is it broken? :(
[12:22:40] <mfiano> It has a read-time dependency on the swank package, even when run from SLY or a terminal
[12:22:55] <jackdaniel> does it ? oh no
[12:23:08] <jackdaniel> and it is not declared anywhere?
[12:23:10] <mfiano> fails to quickload, yeah
[12:23:23] <mfiano> I can produce the debugger/backtrace, sec
[12:24:20] *** Quits: gaqwas (~john@dynamic-095-115-100-195.95.115.pool.telefonica.de) (Ping timeout: 246 seconds)
[12:25:19] <mfiano> repl: https://gist.github.com/mfiano/55a4c6332d369abaa233c6ceb6a2ebca
[12:25:22] <jackdaniel> hm, it loaded from the terminal here
[12:25:27] <mfiano> debugger: https://gist.github.com/mfiano/10992eeea2557d83b6cc515aa9ea08b4
[12:25:39] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[12:28:27] *** Quits: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it) (Read error: Connection reset by peer)
[12:28:28] <jackdaniel> thanks, looking
[12:28:28] <mfiano> I stand corrected. It works from the terminal, but not from SLY anymore.
[12:30:03] <jackdaniel> isn't this swank what fails to load under sly?
[12:30:27] <jackdaniel> (I mean - swank that is found i.e in ql)
[12:30:51] <mfiano> https://gist.github.com/mfiano/402593cd3e9f7f74448b1c78e4eed525
[12:30:56] <mfiano> That seems to load
[12:31:48] <jackdaniel> I don't think that mcclim depends on swank presentations
[12:32:02] <jackdaniel> drei indeed by default depends on swank, but nothing beyond "vanilla" dependency
[12:32:06] <jackdaniel> you may push to features :clim-without-swank
[12:32:16] <jackdaniel> (and mcclim core depends on drei right now)
[12:32:55] <mfiano> That worked. Weird, I never needed to do that before
[12:33:20] <jackdaniel> I don't think that I've changed anything relevant recently
[12:33:44] <mfiano> Admittedly, the last few times I used McCLIM was scymtym's fork
[12:34:21] <mfiano> But I have used McCLIM from QL before without issues, so :shrug:
[12:34:33] <mfiano> I know nothing about swank presentations, or swank for that matter.
[12:35:22] <jackdaniel> swank loader requires swank-presentations as one of *contribs* (i.e include contribs), perhaps sly does something weird? I don't know
[12:35:55] <jackdaniel> swank is a common lisp process that communicates with emacs exchanging strings (or other data like images)
[12:36:15] <mfiano> I would be weary of loading swank on top of slynk
[12:36:31] <mfiano> I am not sure if anything would be clobbered
[12:37:12] <jackdaniel> either way I'm glad that this little trick worked for you
[12:37:17] <mfiano> wary*
[12:37:24] <mfiano> Thanks
[12:37:27] <jackdaniel> sure
[12:37:33] *** Joins: Alfr (~Alfr@user/alfr)
[12:45:31] *** Joins: davep (uid504677@id-504677.tinside.irccloud.com)
[12:46:38] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: No route to host)
[12:47:02] *** Quits: occ (~occ@user/occ) (Ping timeout: 240 seconds)
[12:47:02] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:56:04] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[12:59:05] *** Joins: s-liao (~s-liao@101.86.103.113)
[13:01:25] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:04:09] *** Joins: s-liao8 (~s-liao@101.86.103.113)
[13:04:32] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Ping timeout: 240 seconds)
[13:07:24] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[13:08:18] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 268 seconds)
[13:14:41] *** Joins: heisig (~heisig@131.188.6.20)
[13:18:08] *** Joins: skn (~znc@2001:19f0:5:701:5400:ff:fe7c:4e5c)
[13:18:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 246 seconds)
[13:18:32] *** Quits: alvaro121 (~akira121@201.230.126.66) (Ping timeout: 240 seconds)
[13:19:06] *** Quits: skn2 (~znc@2001:19f0:5:701:5400:ff:fe7c:4e5c) (Quit: ZNC 1.8.2 - https://znc.in)
[13:19:17] *** Quits: phoe (~phoe@user/phoe) (Ping timeout: 246 seconds)
[13:20:16] *** Joins: phoe (~phoe@user/phoe)
[13:23:41] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[13:24:07] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[13:24:30] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:24:50] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[13:25:02] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[13:36:37] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[13:38:40] *** Joins: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it)
[13:40:32] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 240 seconds)
[13:44:17] *** Quits: elderK (uid205007@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:45:32] *** Quits: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it) (Ping timeout: 246 seconds)
[13:56:12] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[13:58:09] *** Joins: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it)
[13:59:12] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[14:15:06] *** Quits: s-liao8 (~s-liao@101.86.103.113) (Quit: Client closed)
[14:15:25] *** Joins: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[14:25:47] *** Quits: heisig (~heisig@131.188.6.20) (Ping timeout: 246 seconds)
[14:26:32] *** Quits: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 240 seconds)
[14:28:28] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[14:30:56] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[14:31:16] *** Joins: aartaka (~aartaka@5.1.53.225)
[14:42:50] *** Joins: s-liao (~s-liao@101.86.103.113)
[14:50:42] *** Quits: utis (~utis@vpn-client317.uio.no) (Quit: leaving)
[15:04:57] *** Joins: random-nick (~random-ni@87.116.176.55)
[15:23:19] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:27:53] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Remote host closed the connection)
[15:28:09] *** Joins: notzmv (~zmv@user/notzmv)
[15:28:10] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[15:28:19] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[15:28:27] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 256 seconds)
[15:30:11] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 246 seconds)
[15:30:49] *** Joins: aartaka (~aartaka@5.1.53.225)
[15:33:20] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[15:35:01] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[15:35:11] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 264 seconds)
[15:35:13] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[15:36:54] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[15:36:59] *** Joins: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[15:40:45] *** Quits: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Remote host closed the connection)
[15:40:56] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 245 seconds)
[15:41:28] *** Joins: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[15:44:11] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[15:44:25] *** Joins: s-liao (~s-liao@101.86.103.113)
[15:48:45] *** paule32__ is now known as paule32
[15:50:31] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[15:52:56] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[15:52:57] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[15:53:14] *** Joins: theothor` (~user@217.84-49-191.nextgentel.com)
[15:59:54] *** Quits: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 260 seconds)
[16:02:57] *** Quits: theothor` (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[16:05:51] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[16:06:57] *** Joins: occ (~occ@user/occ)
[16:20:04] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[16:26:50] *** Joins: rain3 (~rain3___@86.127.200.84)
[16:28:58] *** Joins: s-liao (~s-liao@101.86.103.113)
[16:33:50] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[16:35:43] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[16:46:42] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[16:49:44] *** Joins: s-liao (~s-liao@101.86.103.113)
[16:54:11] *** Joins: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it)
[17:00:44] *** Joins: Bike (~Glossina@71.69.170.70)
[17:00:44] *** ChanServ sets mode: +o Bike
[17:06:35] *** Joins: attila_lendvai_ (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[17:10:02] *** Quits: davep (uid504677@id-504677.tinside.irccloud.com) (Ping timeout: 240 seconds)
[17:10:59] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Read error: Connection reset by peer)
[17:11:01] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[17:11:01] *** Quits: alanz (sid110616@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[17:11:16] *** Quits: gendl (sid100083@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[17:11:35] *** Quits: drmeister (sid45147@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[17:11:35] *** Quits: IUSR (sid348938@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:11:35] *** Quits: dbotton (sid492350@lymington.irccloud.com) (Ping timeout: 256 seconds)
[17:11:47] *** Quits: jcowan (sid325434@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[17:12:02] *** Quits: griffinmb (sid410590@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[17:12:03] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[17:12:09] *** Quits: stylewarning (sid241636@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:09] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:20] *** Quits: sgithens (sid10659@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:12:23] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 264 seconds)
[17:12:23] *** Quits: d_run (sid83858@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:12:29] *** Joins: iisi_ (sid19824@hampstead.irccloud.com)
[17:12:40] *** Joins: stylewarning (sid241636@helmsley.irccloud.com)
[17:12:43] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: iisi (sid19824@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:43] *** iisi_ is now known as iisi
[17:12:46] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[17:12:48] *** Joins: travv0_ (sid293381@id-293381.helmsley.irccloud.com)
[17:12:50] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[17:12:52] *** Joins: griffinmb (sid410590@helmsley.irccloud.com)
[17:12:53] *** Joins: jsatk (sid304796@2a03:5180:f:1::4:a69c)
[17:12:59] *** Quits: travv0 (sid293381@user/travv0) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: victor (sid208353@user/victor) (Ping timeout: 264 seconds)
[17:12:59] *** Quits: splittist (sid17737@tinside.irccloud.com) (Ping timeout: 264 seconds)
[17:13:00] *** travv0_ is now known as travv0
[17:13:03] *** Joins: hubvu (sid495858@user/hubvu)
[17:13:08] *** Joins: epolanski (uid312403@2a03:5180:f:1::4:c453)
[17:13:09] *** Joins: sgithens (sid10659@helmsley.irccloud.com)
[17:13:11] *** Joins: alanz (sid110616@uxbridge.irccloud.com)
[17:13:12] *** Joins: davep (uid504677@id-504677.tinside.irccloud.com)
[17:13:17] *** Joins: jcowan (sid325434@2a03:5180:f:3::4:f73a)
[17:13:18] *** Joins: victor_ (sid208353@user/victor)
[17:13:20] *** Quits: travv0 (sid293381@id-293381.helmsley.irccloud.com) (Changing host)
[17:13:20] *** Joins: travv0 (sid293381@user/travv0)
[17:13:22] *** Joins: ullbeking (sid5364@user/ullbeking)
[17:13:25] *** Joins: gendl (sid100083@2a03:5180:f:4::1:86f3)
[17:13:38] *** Joins: splittist (sid17737@tinside.irccloud.com)
[17:13:55] *** Joins: d_run (sid83858@id-83858.hampstead.irccloud.com)
[17:14:08] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[17:14:15] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[17:14:23] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[17:15:11] *** ChanServ sets mode: +o pl
[17:17:08] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[17:19:22] *** Joins: cosimone (~user@93-44-184-239.ip98.fastwebnet.it)
[17:22:47] *** Joins: theothor` (~user@217.84-49-191.nextgentel.com)
[17:23:49] *** Joins: jealousmonk (~user@2804:431:e7c4:7f35:7769:1f33:9572:c142)
[17:25:15] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[17:28:11] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[17:30:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[17:31:11] *** Quits: epolanski (uid312403@2a03:5180:f:1::4:c453) (Quit: Connection closed for inactivity)
[17:37:10] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[17:37:17] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Client closed)
[17:41:26] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[17:46:04] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[17:46:32] *** Joins: minu99 (~minu99@193.146.57.149)
[17:46:33] *** Quits: alanz (sid110616@uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[17:46:33] *** Quits: sgithens (sid10659@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[17:47:42] *** Quits: iisi (sid19824@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:47:47] *** Quits: d_run (sid83858@id-83858.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:47:51] *** Quits: splittist (sid17737@tinside.irccloud.com) (Ping timeout: 256 seconds)
[17:47:51] *** Quits: griffinmb (sid410590@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:47:51] *** Quits: stylewarning (sid241636@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:47:51] *** Quits: travv0 (sid293381@user/travv0) (Ping timeout: 250 seconds)
[17:47:52] *** Quits: dbotton (sid492350@lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:47:52] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:48:02] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[17:48:02] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[17:48:16] *** Quits: theothor` (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[17:48:18] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 250 seconds)
[17:48:18] *** Quits: victor_ (sid208353@user/victor) (Ping timeout: 250 seconds)
[17:48:23] *** Quits: jcowan (sid325434@2a03:5180:f:3::4:f73a) (Ping timeout: 264 seconds)
[17:48:32] *** Quits: jsatk (sid304796@2a03:5180:f:1::4:a69c) (Ping timeout: 240 seconds)
[17:48:44] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 250 seconds)
[17:48:59] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[17:48:59] *** Quits: gendl (sid100083@2a03:5180:f:4::1:86f3) (Ping timeout: 264 seconds)
[17:49:10] *** Quits: davep (uid504677@id-504677.tinside.irccloud.com) (Ping timeout: 250 seconds)
[17:50:00] *** Quits: minu99 (~minu99@193.146.57.149) (Client Quit)
[17:52:16] *** Joins: conjunctive (sid433686@helmsley.irccloud.com)
[17:52:25] *** Joins: alanz (sid110616@uxbridge.irccloud.com)
[17:53:33] *** Joins: IUSR (sid348938@hampstead.irccloud.com)
[17:53:46] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[17:53:46] *** Joins: jcowan (sid325434@ilkley.irccloud.com)
[17:53:49] *** Joins: travv0 (sid293381@user/travv0)
[17:54:14] *** Joins: gendl (sid100083@hampstead.irccloud.com)
[17:54:16] *** Joins: drmeister (sid45147@ilkley.irccloud.com)
[17:54:24] *** Joins: hubvu (sid495858@user/hubvu)
[17:54:28] *** Joins: ullbeking (sid5364@user/ullbeking)
[17:54:50] *** Joins: victor_ (sid208353@tinside.irccloud.com)
[18:02:10] *** Joins: sgithens (sid10659@helmsley.irccloud.com)
[18:02:40] *** Joins: splittist (sid17737@tinside.irccloud.com)
[18:02:48] *** Joins: iisi (sid19824@hampstead.irccloud.com)
[18:03:21] *** Joins: stylewarning (sid241636@helmsley.irccloud.com)
[18:03:36] *** Joins: ym (~ym@5.143.220.3)
[18:03:45] *** Joins: davep (uid504677@tinside.irccloud.com)
[18:04:29] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[18:04:55] *** Joins: griffinmb (sid410590@helmsley.irccloud.com)
[18:05:23] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[18:14:01] *** Joins: d_run (sid83858@hampstead.irccloud.com)
[18:14:15] *** Joins: pl (sid98063@helmsley.irccloud.com)
[18:14:15] *** ChanServ sets mode: +o pl
[18:22:48] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 268 seconds)
[18:23:33] *** Joins: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394)
[18:31:22] *** Joins: Inline (~Inline@aftr-37-201-240-87.unity-media.net)
[18:32:35] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Remote host closed the connection)
[18:32:40] *** Quits: lisp123w (~user@80.227.170.170) (Remote host closed the connection)
[18:33:52] *** aeth_ is now known as aeth
[18:40:25] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:44:28] *** Joins: rogersm (~rogersm@90.166.177.48)
[18:45:53] *** Quits: VincentV` (~user@212.241.28.95) (Read error: Connection reset by peer)
[18:49:02] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:49:40] *** Joins: Guest7488 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[18:55:09] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[18:55:23] <jcowan> NotThatRPG: The point of randomizing test order is to help flush out dependencies between tests.  So try and find such dependencies.
[18:56:11] <NotThatRPG> jcowan: I'm puzzled by the order being randomized on GitHub, but not on my laptop, though.
[18:56:25] <jcowan> So am I
[18:56:32] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:59:08] <Guest7488> mfiano: I just update pixels during the propagaion phase.  Easier to change single collapsed pixels than redraw the entire image. if you keep track of cells whose entropy has decreased then you can just run through that list and redraw those as well if you want visualize that part as well.
[19:00:22] <Guest7488> I'm curious why you want reflection and rotation in an overlapped model.  That's something easier achieved in nonoverlapping tiles.
[19:01:02] <etimmons> NotThatRPG: I'm assuming this is SHOP3? A spot check makes it appear that the tests are run in the same order between GH runs (comparing the two failed logistics-tests, at least)
[19:01:39] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Ping timeout: 268 seconds)
[19:02:41] <NotThatRPG> @etimmons: Yes, that seems right.  Unfortunately, there's a big difference between the way I am running the tests locally and on GitHub.  Locally, I generally run the full test suite at once which ... seems like it would be *more* likely to yield artifacts than running in c. 36 independent processes.
[19:03:38] <etimmons> NotThatRPG: Do the tests run VAL frequently?
[19:04:00] <NotThatRPG> What I should do is set up a docker container that lines up with what is done on GitHub and see if I can replicate there. But, man, it's really annoying when debugging the tests eats so much time -- tail wagging the dog!
[19:04:43] <NotThatRPG> @etimmons: I will check; I don't recall off-hand if each of the logistics tests is checked by VAL.
[19:07:59] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[19:09:18] <NotThatRPG> @etimmons: Just checked -- the logistics tests which are failing don't use VAL: they check results for equality against stored plan s-expressions.
[19:11:46] <etimmons> NotThatRPG: Hmm, there goes that theory. The biggest reason I've seen for SBCL to perform that differently in two similar environments is one has `ulimit -n` set really high, causing run-program to slow down significantly.
[19:12:46] *** Joins: theothor` (~user@217.84-49-191.nextgentel.com)
[19:13:00] <NotThatRPG> @etimmons: Actually, this shows that I should have been using VAL, but I'm not going to extend that test set until I figure this out.
[19:13:36] *** Quits: theothor` (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[19:15:31] <NotThatRPG> Another confound is that I split the logistics tests into two tests, and now they pass, but now a *different* test times out (openstacks). Curiouser and curiouser
[19:17:20] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[19:17:32] *** Joins: ad-absurdum (~ad-absurd@2600:100a:b018:ff8c:ae6e:e5e6:9548:7b83)
[19:18:41] <NotThatRPG> The split tests finish in about 2 minutes each, where before the combined tests would time out after six hours!
[19:22:18] <NotThatRPG> Actually, it looks like the test that timed out never got around to running the FiveAM tests. It looks like it hung in, or right after, compilation! https://github.com/shop-planner/shop3/runs/4173251345?check_suite_focus=true
[19:22:59] <NotThatRPG> That is even more bonkers than I had thought.
[19:23:24] <NotThatRPG> I have to dash off to get somewhere before a zoom call starts. Thanks @etimmons and @jcowan !  TTYL
[19:23:59] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[19:27:32] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 240 seconds)
[19:27:41] <etimmons> NotThatRPG: Yeah, definitely looks like something really weird is happening.
[19:43:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[19:52:35] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 264 seconds)
[19:54:54] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[19:57:32] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 240 seconds)
[19:57:54] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 260 seconds)
[19:58:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:58:58] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[20:18:28] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:25:47] *** Joins: Catie (~user@user/catie)
[20:32:15] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[20:32:59] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[20:35:01] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[20:40:45] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 250 seconds)
[20:42:55] *** Quits: NotThatRPG (~NotThatRP@mail.sift.net) (Ping timeout: 250 seconds)
[20:44:39] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[20:45:05] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[20:50:20] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[20:52:10] <gpiero> hi all, newbie question here
[20:54:15] <gpiero> short version: I would like to do (defun myfun (&key a) (symbol-value 'a)), but symbol-value returns unbound-value
[20:54:48] <gpiero> long version: https://pastebin.com/mC2i3qYR
[20:55:31] <gpiero> any help?
[20:56:07] <gigamonkey> symbol-value is looking for the globally bound value of the symbol a. I suspect you're hoping to get the value of the local parameter maybe?
[20:56:21] <Bike> eval-parameters is a macro. you probably don't want to quote its argument.
[20:56:37] <gpiero> gigamonkey: yeah, exactly
[20:57:03] <Bike> the arguments to myfun are lexical variables. they can't be accessed with symbol-value.
[20:57:26] <gpiero> @Bike: suspected this, there's a way around?
[20:57:53] <Bike> I'm not sure what output you want here exactly. What do you expect (eval-parameters (a b c)) to return?
[20:58:25] <gpiero> something like ((a . 1) (c .3))
[20:58:32] <Bike> but with strings?
[20:58:36] <gpiero> yeah, sorry
[20:58:49] <Bike> seems like (("A" . "1") ("B" . "NIL") ("C" . "3")), is that right?
[20:59:10] <gpiero> "B" should be omitted because the value is nil
[20:59:27] <gpiero> so: (("A" . "1") ("C" . "3"))
[21:01:54] <Bike> (defmacro eval-parameters (&rest symbols) `(append ,@(loop for symbol in symbols for sname = (write-to-string symbol) collect `(let ((value ,symbol)) (if value (list (cons ,sname (write-to-string value))) nil)))))
[21:02:20] <Bike> (let ((a 1) (b nil) (c 3)) (eval-parameters a b c)) => (("A" . 1") ("C" . "3"))
[21:02:38] <Bike> why do you want to do this, exactly?
[21:03:34] <pjb> gpiero: there's a way around, but why don't you just pass the value of the lexical variable to the function?
[21:03:51] <gpiero> @Bike: think so... many thanks, going to understand your solution, will take a while
[21:04:05] <pjb> gpiero: check http://informatimago.com/articles/usenet.html#C-like-pointers-in-Lisp
[21:04:25] <gpiero> pjb: thanks, will check
[21:06:39] *** attila_lendvai_ is now known as attila_lendvai
[21:06:53] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Quit: Leaving)
[21:10:09] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[21:10:34] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[21:16:36] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[21:18:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[21:20:02] *** Joins: nature (~nature@45.32.235.173)
[21:20:47] *** Joins: splatt9990 (~user@2600:2b00:8a19:ea00:216:3eff:fec3:387a)
[21:29:50] *** Quits: lexi_sparks (~lexi_spar@user/lexi-sparks/x-9241394) (Ping timeout: 260 seconds)
[21:29:59] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[21:32:17] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[21:32:40] *** Quits: splatt9990 (~user@2600:2b00:8a19:ea00:216:3eff:fec3:387a) (Remote host closed the connection)
[21:32:43] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:32:46] *** Joins: splatt99` (~user@74.215.190.180)
[21:32:51] *** Joins: chris` (~user@2600:2b00:8a19:ea00:216:3eff:fec3:387a)
[21:33:42] *** Quits: splatt99` (~user@74.215.190.180) (Client Quit)
[21:33:42] *** Parts: chris` (~user@2600:2b00:8a19:ea00:216:3eff:fec3:387a) ()
[21:39:13] *** Joins: johnjay (~pi@192.142.100.50)
[21:42:27] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 256 seconds)
[21:46:07] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:52:33] *** Joins: notzmv (~zmv@user/notzmv)
[21:53:00] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:53:05] *** Quits: X-Scale (~ARM@31.22.202.101) (Ping timeout: 246 seconds)
[21:54:51] *** X-Scale` is now known as X-Scale
[21:57:52] *** Joins: didi (~user@user/didi)
[21:59:59] <didi> Can an object inside a vector, but beyond fill-pointer, be garbage collected?
[22:00:14] <_death> no
[22:00:19] <didi> Thanks.
[22:01:01] <_death> the element is still there, but it's not active
[22:01:18] * didi nods
[22:01:21] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 245 seconds)
[22:01:54] <didi> I actually want it to be GCed, so I'll set the position to nil.
[22:17:11] *** Joins: johnjay (~pi@192.142.100.50)
[22:21:34] *** Joins: tfeb (~tfb@88.98.95.237)
[22:22:39] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:28:52] <NotThatRPG> @etimmons: I should probably figure out how to make a core image and avoid the multiple compilations, and maybe that would help. But I'm boggled by the GitHub runner seeming to just halt arbitrarily like this.
[22:29:06] *** Parts: didi (~user@user/didi) (O bella ciao bella ciao bella ciao, ciao, ciao.)
[22:29:16] *** Quits: johnjay (~pi@192.142.100.50) (Remote host closed the connection)
[22:31:37] *** Quits: Jing (~hedgehog@2604:a840:3::1033) (Remote host closed the connection)
[22:32:36] *** Joins: Jing (~hedgehog@2604:a840:3::1049)
[22:35:51] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[22:36:12] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[22:38:34] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[22:42:47] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 246 seconds)
[22:46:47] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[22:54:38] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[22:59:41] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:01:28] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:01:54] *** Joins: Oladon (~olad@98.43.81.226)
[23:02:53] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 250 seconds)
[23:04:47] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-60-64-228-236-58.dsl.bell.ca)
[23:04:54] *** Quits: davep (uid504677@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:09:15] *** Joins: alvaro121 (~akira121@201.230.126.66)
[23:16:35] *** Quits: holycow (~rtaylor@69-172-184-139.cable.teksavvy.com) (Quit: leaving)
[23:24:41] *** Joins: kadir (~kadir@78.178.105.36)
[23:25:41] *** Parts: kadir (~kadir@78.178.105.36) ()
[23:26:43] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 250 seconds)
[23:27:39] *** Joins: kadir (~kadir@78.178.105.36)
[23:28:21] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[23:31:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[23:31:48] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:39:34] *** Quits: rain3 (~rain3___@86.127.200.84) (Ping timeout: 260 seconds)
[23:39:53] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:40:57] *** Quits: Inline (~Inline@aftr-37-201-240-87.unity-media.net) (Quit: Leaving)
[23:43:35] *** Quits: ym (~ym@5.143.220.3) (Ping timeout: 264 seconds)
[23:43:43] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[23:45:56] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 268 seconds)
[23:54:30] *** Joins: akoana (~ah@user/akoana)
[23:54:54] *** Joins: VincentVega (~user@212.241.28.95)
[23:58:24] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[23:59:01] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
