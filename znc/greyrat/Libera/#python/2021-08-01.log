[00:00:01] *** Joins: Fiji- (~Fiji@user/fiji)
[00:00:08] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[00:00:33] *** Joins: CombatVet (~c4@user/combatvet)
[00:01:30] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[00:02:15] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[00:02:47] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:02:59] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.2)
[00:03:56] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[00:04:49] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[00:04:53] *** Joins: ioe (~is0ke3@user/is0ke3)
[00:04:55] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[00:05:14] *** Joins: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com)
[00:05:23] <SnoopJ> josh_h, pre-commit is nice to wrangle these things if you're not already using it
[00:06:57] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[00:06:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:07:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:08:45] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:09:12] *** Joins: akk (~akk@75.161.157.26)
[00:09:32] *** __jmcantrell__ is now known as jmcantrell
[00:09:44] *** Joins: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at)
[00:13:10] *** Quits: cedric (~cedric@2a01:cb11:867:c200:bcbc:6316:e3ae:4f44) (Quit: Konversation terminated!)
[00:14:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:15:13] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:15:15] *** Quits: v0lta (~dkmueller@2a01:c22:729b:b200:d529:fc38:a873:b8c5) (Quit: WeeChat 3.2)
[00:15:32] *** Quits: junktext (~junktext@109.201.152.167) (Ping timeout: 245 seconds)
[00:15:50] <grym> josh_h: isort +1 for sure
[00:16:49] *** Quits: relationalalgebr (~relationa@117.216.30.224) (Quit: relationalalgebr)
[00:17:55] *** Joins: magla (~gelignite@55d418d7.access.ecotel.net)
[00:18:52] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:20:37] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Quit: Client closed)
[00:20:51] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[00:22:38] <SnoopJ> ah yea, isort is great
[00:22:39] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[00:23:08] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:b8ff:dfa4:4e98:96af) (Quit: Textual IRC Client: www.textualapp.com)
[00:24:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:25:16] *** Joins: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net)
[00:25:34] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[00:25:55] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:26:40] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 258 seconds)
[00:28:44] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[00:29:26] *** Quits: finnx (~finnx@2600:1702:1ae0:930:139c:5941:d8b7:493) (Remote host closed the connection)
[00:29:34] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[00:29:59] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:30:34] *** Joins: finnx_ (~finnx@2600:1702:1ae0:930:6b82:2d5d:78e7:395f)
[00:31:30] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[00:32:37] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[00:33:42] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 272 seconds)
[00:35:39] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:36:17] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[00:40:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[00:41:23] *** Joins: ferz (~ferz@93.48.251.229)
[00:41:35] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:42:36] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Read error: Connection reset by peer)
[00:43:43] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:43:44] *** BullHorn_ is now known as BullHorn
[00:45:15] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.1)
[00:45:18] *** Quits: finnx_ (~finnx@2600:1702:1ae0:930:6b82:2d5d:78e7:395f) (Quit: Leaving)
[00:45:31] *** Joins: anddam (~anddam@user/anddam)
[00:45:38] <josh_h> what's isort?
[00:45:43] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[00:45:56] <josh_h> SnoopJ: is that a repo-wide thing?
[00:46:08] *** Joins: v0lta (~dkmueller@2a01:c22:729b:b200:2d0b:b4f1:af3f:db67)
[00:46:15] *** Joins: finnx_ (~finnx@2600:1702:1ae0:930:6b82:2d5d:78e7:395f)
[00:48:12] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[00:49:04] <mawk> case-insensitive sort josh_h
[00:49:07] <mawk> I believe
[00:49:26] <mawk> ah no
[00:49:29] <josh_h> oh no this is something I should use at work
[00:49:29] <mawk> it's some python magic lib
[00:49:50] <josh_h> I enforce google sort order but isort is a formatter for it that will automatically do the right thing
[00:50:00] <josh_h> so I can make this little linting chore go away
[00:52:04] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 272 seconds)
[00:52:20] <josh_h> I personally like appnexus but the chore of maintaining the config for the linter was too much for people so I switched to google and dump internal libraries into third party
[00:52:35] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[00:53:05] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:53:43] *** Joins: djapo (~archangel@user/djapo)
[00:56:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:56:50] <josh_h> pre-commit is also a work thing, automating stuff on a commit cycle like that is good for feedback loops
[00:56:53] *** Quits: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net) (Ping timeout: 265 seconds)
[00:57:09] <josh_h> versus having it happen in CI cause someone forgot to run the formatter or tests etc
[00:57:25] <josh_h> something else I'm looking for is a task runner
[00:57:53] <josh_h> I've used Makefiles at home and I made a little scripting framework at work so it's all bash and a little bit of cleverness
[00:57:54] *** Joins: Auron (~Auron956@user/auron)
[00:58:21] *** Joins: c10l (~c10l@89.34.167.207)
[00:58:33] <josh_h> I've also used one of the 2 powershell task things, I can't remember the names rn but there are 2 of them
[00:58:41] <josh_h> is fab still a thing?
[00:59:16] <graingert> All about ansible now
[01:00:01] <josh_h> yeah me too BUT https://www.pyinvoke.org/ when I last looked at fab this was in progress, it used to be coupled to the paramiko parts I don't really need
[01:00:09] <josh_h> or at least I don't think I do
[01:00:46] <josh_h> but a thing in the territory of Makefiles but in the same language as my project has an argument for it
[01:00:56] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[01:00:59] <josh_h> I kinda like the idea of doing it with the powershell thing I haven't used lol
[01:01:09] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:01:21] *** Joins: Celeo (~Celeo@user/celeo)
[01:01:22] <josh_h> it's a weird platform for it and its cold start time is brutal but it is cross-platform
[01:01:43] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[01:02:04] <josh_h> I think I'll give invoke a shot, like what the hell
[01:02:12] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[01:02:18] <josh_h> I always wanted this thing to be a thing and now it is so I should kick the tires
[01:03:01] *** Joins: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net)
[01:03:08] <josh_h> You do kinda need to be outside python to bootstrap the env though
[01:03:14] <josh_h> oh well, wrapper script
[01:03:42] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[01:04:54] *** Joins: c10l (~c10l@89.34.167.207)
[01:06:23] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[01:06:35] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[01:09:12] <SnoopJ> josh_h, yes
[01:09:58] <SnoopJ> josh_h, isort orders your imports for you, it's got some configurability (like separating out your third-party libs) but the defaults are nice, and it has a profile for compatibility with black
[01:10:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[01:11:04] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[01:11:11] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:11:39] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[01:11:40] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:11:56] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:12:05] *** Joins: c10l (~c10l@89.34.167.207)
[01:13:33] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:13:36] *** Quits: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[01:13:37] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 272 seconds)
[01:14:05] *** Joins: y1n (~y1n@84-115-64-120.wifi.dynamic.surfer.at)
[01:14:45] *** Joins: c10l (~c10l@89.34.167.207)
[01:14:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:14:56] *** Joins: paravida (~myChateau@user/paravida)
[01:15:31] *** Quits: resmo (~resmo@2a00:d420:9:8a00:6d52:8497:b524:1d45) (Read error: Connection reset by peer)
[01:15:58] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:16:08] *** Joins: resmo (~resmo@2a00:d420:9:8a00:48d3:5484:79a:f341)
[01:16:10] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 240 seconds)
[01:16:51] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:17:09] *** Joins: c10l (~c10l@89.34.167.207)
[01:18:55] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:20:05] *** Joins: c10l (~c10l@89.34.167.207)
[01:22:06] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:22:40] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[01:23:02] <Metalsutton> SnoopJ, hey mate
[01:23:18] *** Joins: c10l (~c10l@89.34.167.207)
[01:23:21] <SnoopJ> Metalsutton, hey, did you get my memo?
[01:23:25] <Metalsutton> Still not having much luck tracking down an older version
[01:23:47] <SnoopJ> That's alright. It turns out my hypothesis about your bug was wrong anyway, I checked with #debian.
[01:23:54] <Metalsutton> memo? Oh sorry, im now logged at a different machine
[01:24:08] <Metalsutton> So its not the library?
[01:24:15] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:24:45] <SnoopJ> ah, you will have one waiting when you auth with nickserv next. Yea, the library isn't using the symbol that blows up for you. So, kinda back to square one. If you can share the error report again (old paste expired) I'll take a fresh look.
[01:25:59] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[01:26:23] <AhmedAmerican> 🙃why VSCode doesn't load integrated terminal within cwd :S
[01:26:46] *** Joins: c10l (~c10l@89.34.167.207)
[01:27:30] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[01:27:30] *** Quits: c10l (~c10l@89.34.167.207) (Client Quit)
[01:28:24] <Metalsutton> I just read the memo
[01:28:43] *** Joins: c10l (~c10l@89.34.167.207)
[01:29:12] <Metalsutton> im on a windows machine today so im going to PuTTy in and retreive the error
[01:30:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[01:31:13] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:31:56] <Metalsutton> whats the output i should be getting when i 'whereis pygame'
[01:32:25] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[01:32:41] *** Quits: adamts (~Adam@user/mysteryblokhed) (Read error: Connection reset by peer)
[01:33:03] *** Joins: adamts5 (~Adam@user/mysteryblokhed)
[01:33:32] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[01:34:12] *** adamts5 is now known as adamts
[01:34:41] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[01:34:48] *** Joins: c10l (~c10l@89.34.167.207)
[01:35:09] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:35:09] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[01:35:31] *** Quits: adamts (~Adam@user/mysteryblokhed) (Client Quit)
[01:36:48] *** Joins: Fiji- (~Fiji@user/fiji)
[01:37:31] *** Joins: c10l (~c10l@89.34.167.207)
[01:38:28] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[01:38:38] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:38:55] *** Joins: c10l (~c10l@89.34.167.207)
[01:40:58] *** Quits: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel) (Killed (NickServ (GHOST command used by goldanda1pel)))
[01:41:36] *** Joins: infidel (~ecrump@75.161.232.127)
[01:42:33] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:43:58] <Metalsutton> SnoopJ, https://bpa.st/LFZQ
[01:44:23] <Metalsutton> I seem to have two installations of pygame. with different errors
[01:44:32] <Metalsutton> ive looked them both up and fail horribly
[01:45:26] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:46:47] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[01:46:48] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 256 seconds)
[01:47:00] *** Quits: ioe (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:48:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:49:04] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[01:50:13] *** Joins: pnoud (~pnoud@user/pnoud)
[01:50:51] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[01:53:08] *** Joins: minip (minip@user/minip)
[01:53:33] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:54:00] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:54:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[01:54:12] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:54:56] *** Joins: VimVim (~VimVim@85.191.62.251)
[01:55:22] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:55:51] *** Joins: oriba (~oriba@dynamic-077-013-203-077.77.13.pool.telefonica.de)
[01:55:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[01:56:29] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[01:56:44] <winterflaw> I have a thread, and I want it to run until I set a flag, and then I want it to return.  I'm thinking to pass in a dict, and have a key in there which is the flag, and set it outside the thread, and then thread will check on each iteration of its internal loop if the value of that key has become true.  Seem reasonable?  better ways?
[01:56:47] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:57:00] *** Joins: c10l (~c10l@89.34.167.207)
[01:57:06] *** Quits: V1mV1m (~VimVim@85.191.3.32) (Ping timeout: 240 seconds)
[01:57:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:57:28] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[01:58:34] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[01:59:07] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:00:18] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:01:00] <bjs> winterflaw: that's one way,  but really anything can work,  just setting a global variable (or an instance attribute) or something works fine too.
[02:01:34] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Quit: Konversation terminated!)
[02:01:39] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[02:01:56] <winterflaw> Thankyou.
[02:02:30] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[02:02:43] *** Joins: c10l (~c10l@89.34.167.207)
[02:03:40] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:05:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[02:06:44] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:09:00] *** Joins: c10l (~c10l@89.34.167.207)
[02:09:24] *** Joins: reset (~reset@user/reset)
[02:09:36] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[02:10:02] <bjs> winterflaw: note there does exist threading.Event, but a lot of the threading-specific things are designed around "waiting" primitives
[02:10:08] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:10:55] <winterflaw> yes, I looked at it, but I don't want the thread to wait - I want it to keep running until the event is set
[02:11:06] <winterflaw> so it'd only use is_set(), which is the same as just checking a normal variable...
[02:11:30] <winterflaw> assuming GIL is doing the special magic to make inter-thread communication work correctly
[02:11:32] <bjs> winterflaw: what is your thread doing btw?
[02:11:39] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:12:04] <bjs> winterflaw: one flaw of threads is the inability to interrupt them in any way (cancellation),  but `async` libraries all make this an easy and fundamental feature
[02:12:16] <bjs> (to be able to just say `some_task.cancel()` to stop it at the next await)
[02:12:19] <winterflaw> I have two threads, one is issuing a slow SQL query, the other is issuing fast SQL queries, and the fast thread should keep looping, issuing its queries, until the slow thread has finished its query
[02:12:55] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:13:02] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:13:14] <winterflaw> hmm, I don't quite want to interrupt the fast thread - I want it to finish gracefully, and also in fact now I think about it, to issue one more query once the finish flag has been raised
[02:13:24] <winterflaw> so I want to signal it
[02:13:31] <bjs> ah okay :)
[02:13:46] *** Quits: y1n (~y1n@84-115-64-120.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[02:13:56] *** Joins: y1n (~y1n@84-115-64-139.wifi.dynamic.surfer.at)
[02:14:32] *** Quits: akk (~akk@75.161.157.26) (Quit: +++)
[02:15:33] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:15:42] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:dbae:55e4:323c:3110)
[02:15:54] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[02:16:40] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:16:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[02:17:16] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:17:21] *** PJBoy is now known as Guest3578
[02:17:21] *** Quits: Guest3578 (~PJBoy@user/pjboy) (Killed (silver.libera.chat (Nickname regained by services)))
[02:17:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:19:03] *** Joins: c10l (~c10l@89.34.167.207)
[02:19:07] <SnoopJ> Metalsutton, oh, this is a different error. Hmm. I'm in the midst of something, but if you'll be around for a bit I'll try to come back to it and see if we can get you unstuck, unless someone beats me to the punch (hopefully so!)
[02:19:11] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Quit: Client closed)
[02:19:25] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[02:20:24] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:21:42] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2 (See ya!))
[02:22:49] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:22:55] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[02:23:04] *** Joins: c10l (~c10l@89.34.167.207)
[02:23:16] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 272 seconds)
[02:23:24] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:23:57] <Metalsutton> yup. im doing other stuff too
[02:23:58] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[02:24:13] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[02:24:26] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[02:25:45] *** Joins: c10l (~c10l@89.34.167.207)
[02:28:14] *** Joins: hcdc25 (~hcdc25@146.86.166.85)
[02:28:36] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[02:28:42] *** Quits: p-i- (~Ohmu@node-12lr.pool-118-173.dynamic.totinternet.net) (Ping timeout: 240 seconds)
[02:28:48] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[02:29:03] *** Joins: spithash (~spithash@user/spithash)
[02:30:31] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 246 seconds)
[02:30:38] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:31:10] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[02:31:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[02:32:03] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:32:58] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[02:34:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[02:35:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:36:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:39:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[02:39:07] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:40:26] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:41:19] *** Joins: c10l (~c10l@89.34.167.207)
[02:43:12] *** Quits: Melantha (~pyon@user/pyon) (Ping timeout: 268 seconds)
[02:43:41] *** Joins: Melantha (~pyon@user/pyon)
[02:44:15] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:44:40] *** Quits: hcdc25 (~hcdc25@146.86.166.85) (Quit: Client closed)
[02:44:41] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:45:08] *** Joins: jess (~jess@libera/staff/jess)
[02:45:11] *** Joins: hcdc25 (~hcdc25@146.86.166.85)
[02:46:34] *** Joins: glestrade (~glestrade@adsl-99-75-190-110.dsl.sndg02.sbcglobal.net)
[02:46:53] *** Joins: c10l (~c10l@89.34.167.207)
[02:47:50] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[02:48:03] *** Joins: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net)
[02:48:04] *** Quits: foobaz21259 (~foobaz212@111.188.159.143.dyn.plus.net) (Write error: Broken pipe)
[02:48:08] <glestrade> Hi again, folks… I’m trying to get an answer on the tensorflow discussion forum on this question… any ideas here? https://discuss.tensorflow.org/t/deciphering-memory-allocation-warnings/3333
[02:48:12] <glestrade> Unfortunately the way I have to train the data is very unusual… it’s basically algorithm 2 from https://arxiv.org/pdf/1809.03428.pdf
[02:49:01] <glestrade> I’m actually also wondering if the np.random.laplace function is particularly expensive
[02:49:26] <glestrade> and maybe there’s a way to profile the time spent in the function calls? For jupyter notebook, or python generally?
[02:49:41] *** Joins: AsenM (~AsenM@78.90.248.234)
[02:50:42] <Repiphany> glestrade: https://jiffyclub.github.io/snakeviz/
[02:50:52] <AsenM> Hello, folks! How I can make this prettier? What are best practices here? https://bpa.st/KT7A
[02:51:39] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:51:42] <Repiphany> AsenM: You're not returning anything from the fib function so you should fix that
[02:51:46] *** Quits: Akuli (~Akuli@87-94-110-83.bb.dnainternet.fi) (Quit: Leaving)
[02:51:52] <Repiphany> Oh, printing it instead
[02:52:40] <AsenM> Repiphany, can i somehow make it more OOP style?
[02:52:40] <Repiphany> You can just call `fib(a, times - 1)` instead of doing `times -= 1`
[02:52:56] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[02:53:05] <AsenM> isn't this more "unreadable"?
[02:53:10] <bjs> AsenM: how so?
[02:53:24] *** Joins: jazzy (~jaziz@2600:380:c145:1176:2597:c2d0:40d3:bffe)
[02:53:29] <bjs> AsenM: also maybe this would be easier to follow as a loop
[02:53:55] <Repiphany> It's a very common pattern for tail recursion kind of functions
[02:54:14] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:dbae:55e4:323c:3110) (Ping timeout: 256 seconds)
[02:54:15] <AsenM> not sure what best practices are, i'm just a newbiew and coming from a different langauge
[02:54:16] <bjs> AsenM: and actually giving the proper name to `phi = ((1 + math.sqrt(5)) / 2))` somewhere in the file so it's easier to see what's going on :)
[02:55:08] <winterflaw> if I make a couple of threads, and in one of them issue a blocking call of some kind (issing SQL to a db), are the other threads going to be paused until the blocking thread finishes its function call?
[02:55:20] *** Quits: PiRATA (~weechat@user/pirata) (Quit: PiRATA)
[02:55:26] <winterflaw> (because that's what it kinda looks like)
[02:55:46] <bjs> winterflaw: no,  that's sort of the point of threads, they don't get blocked by other threads.
[02:55:51] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[02:56:02] <winterflaw> good
[02:56:07] <winterflaw> I'll look some more at my code.
[02:56:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[02:56:11] <AsenM> should i use generator for my case guys?
[02:56:17] <winterflaw> I wasn't sure if Python was ending up not really doing MT.
[02:56:24] <bjs> winterflaw: that said, the code itself (and Python itself) can use locks
[02:56:35] <winterflaw> yes
[02:56:42] <winterflaw> but that's okay, I can sort that out
[02:56:53] <bjs> AsenM: would it really improve anything?
[02:57:10] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:57:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:57:21] <AsenM> bjs, I don't know, if i knew i wouldn't ask
[02:57:35] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:57:39] <winterflaw> ah there we go
[02:57:41] <winterflaw> idiot mistake
[02:57:49] <winterflaw> the 11pm kind of mistake
[02:57:53] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:57:54] <jochum> AsenM: what do you want with the generator?
[02:58:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:58:42] <Repiphany> AsenM: Writing it like https://bpa.st/P42A is much easier for me to follow recursively
[03:00:00] <jochum> Repiphany: This prints only the last one
[03:00:14] <jochum> But you didn't knew that
[03:00:55] <jochum> I like the having the hard math done once
[03:01:14] <Repiphany> It's trivial to add a print to the first line of fib if you really needed to
[03:01:20] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[03:01:43] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:01:57] *** Joins: driib1 (~driib@185.195.233.163)
[03:02:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[03:03:03] *** PJBoy is now known as Guest4374
[03:03:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:03:55] *** Quits: hcdc25 (~hcdc25@146.86.166.85) (Quit: Client closed)
[03:05:19] *** Joins: hcdc25 (~hcdc25@146.86.166.85)
[03:05:23] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[03:05:56] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 265 seconds)
[03:05:56] *** driib1 is now known as driib
[03:06:00] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:06:18] *** Quits: Guest4374 (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[03:07:44] *** Joins: c10l (~c10l@89.34.167.207)
[03:07:47] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[03:09:30] *** Quits: emika (~emika@185.207.249.229) (Ping timeout: 272 seconds)
[03:09:52] *** Joins: emika (~emika@83.136.182.162)
[03:10:57] *** Quits: y1n (~y1n@84-115-64-139.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:12:20] *** Joins: thiras (~thiras@user/thiras)
[03:12:21] *** Quits: d3sync (~d3sync@62.1.243.19.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:12:40] *** Joins: WarpedAI (~Warped@user/warped)
[03:14:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[03:15:07] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 245 seconds)
[03:15:11] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:15:15] *** Quits: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07) (Quit: WeeChat 2.3)
[03:16:06] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:16:34] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[03:17:47] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[03:17:48] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:18:01] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 250 seconds)
[03:19:37] *** Joins: Snyp (~rksht@49.207.214.102)
[03:19:39] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[03:20:12] *** Quits: hcdc25 (~hcdc25@146.86.166.85) (Quit: Client closed)
[03:24:08] *** Quits: glestrade (~glestrade@adsl-99-75-190-110.dsl.sndg02.sbcglobal.net) (Quit: glestrade)
[03:25:13] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:25:37] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[03:26:32] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:26:41] *** Joins: oprypin (~irc@pryp.in)
[03:26:46] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[03:29:58] *** Quits: v0lta (~dkmueller@2a01:c22:729b:b200:2d0b:b4f1:af3f:db67) (Quit: WeeChat 3.2)
[03:30:49] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:31:14] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:31:46] <nubonix> okay, so im wanting to periodically send images from one computer to another within memory. ive got a starlette reverse proxy on main machine, and a starlette server on the other machines. I can make a request to the other machines, and they will send back an image to my starlette reverse proxy [which gives me the image that the server sent]. I have a pyqt5 app and this is where i want to images to go. Also, when im sending the
[03:31:46] <nubonix> image, im sending metadata along with it so i can distinguish between the servers, and the images. I would like to update a QLabel every X seconds [whatever i set X to & ignoring how long it actually takes to send the http post request and process it on both sides]
[03:32:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:33:31] <nubonix> but what im not really understanding is how to update the label. where i want to update the images is a table within the BotWatcher class in botwatcherpage.py and the MainWindow class is in app.py which is responsible for all the classes & pages within my pyqt5 app
[03:34:11] <nubonix> reverse_proxy.py runs the starlette reverse proxy, and app starts both the pyqt5 app and the reverse_proxy
[03:34:46] <nubonix> so i think ive got just about everything i need, i just am blank on how to stitch them together atm
[03:37:38] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[03:39:42] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[03:39:53] *** Quits: magla (~gelignite@55d418d7.access.ecotel.net) (Quit: Stay safe!)
[03:40:58] *** Joins: hcdc25 (~hcdc25@146.86.166.85)
[03:42:47] *** Quits: dudek (~dudek@185.150.236.155) (Quit: Leaving)
[03:43:20] *** Quits: oriba (~oriba@dynamic-077-013-203-077.77.13.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:45:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:49:06] *** Joins: glestrade (~glestrade@adsl-99-75-190-110.dsl.sndg02.sbcglobal.net)
[03:51:06] *** Joins: pnoud (~pnoud@user/pnoud)
[03:52:28] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:56:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[03:58:08] *** Quits: glestrade (~glestrade@adsl-99-75-190-110.dsl.sndg02.sbcglobal.net) (Quit: glestrade)
[03:58:21] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:02:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[04:03:20] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 272 seconds)
[04:03:27] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[04:03:29] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:04:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:04:58] *** Quits: katze_ (~brotmann@aftr-82-135-87-180.dynamic.mnet-online.de) (Quit: Leaving)
[04:05:35] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[04:06:33] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[04:08:43] *** Quits: Elon_Satoshi (~elonsatos@172.86.186.171.adsl.inet-telecom.org) (Ping timeout: 250 seconds)
[04:10:17] *** Joins: vicfred (~vicfred@user/vicfred)
[04:10:25] *** Joins: Elon_Satoshi (~elonsatos@172.86.186.171.adsl.inet-telecom.org)
[04:12:31] <AhmedAmerican> https://bpa.st/UAVA is the following `xpath` can't be used within `selenium` ? `./br[1]/following-sibling::text()[1]`
[04:12:52] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:14:00] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Read error: Connection reset by peer)
[04:14:22] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[04:14:48] *** Joins: Jefren1 (~Jefren@70.35.66.38)
[04:15:46] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 240 seconds)
[04:16:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:16:38] *** Wulf4 is now known as Wulf
[04:16:46] <foo> I have an option: A) pull out JSON from the database for 30 results and then reference based on keys, or B) do 30 different queries and match on certain keys... from a performance perspective, is one versus the other preferred?
[04:16:57] <foo> This is for a listing on a web page, doesn't occur too frequently. Mostly trying to decide one way or the other
[04:16:58] *** Quits: Jefren (~Jefren@70.35.67.18) (Ping timeout: 240 seconds)
[04:17:00] <foo> Thanks
[04:17:26] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 258 seconds)
[04:18:39] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[04:19:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:20:17] *** Quits: optimant (~prime@user/optimant) (Quit: Quit)
[04:20:41] *** Joins: Jefren2 (~Jefren@70.35.67.14)
[04:21:01] <stealth_> foo, why not just get results based on keys? `'select table from one, two, where key1=? and key2=?', (1, 2)` you should get results based on key
[04:21:53] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:22:21] <foo> stealth_: Oh, I could do that, then I would return sub 30 results then iterate through them and display accordingly... hmm.
[04:22:24] <AhmedAmerican> #css
[04:22:47] *** Joins: optimant (~prime@user/optimant)
[04:22:59] *** Joins: bongobrown (~omary@cpe-76-185-215-2.satx.res.rr.com)
[04:23:01] *** Quits: Jefren1 (~Jefren@70.35.66.38) (Ping timeout: 250 seconds)
[04:24:56] <stealth_> foo, ya, sql is a powerful tool, use it accordingly
[04:25:10] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:25:52] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:26:03] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Ping timeout: 250 seconds)
[04:27:42] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[04:28:01] <foo> stealth_: thanks
[04:28:35] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[04:29:04] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[04:29:24] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[04:29:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[04:30:02] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[04:30:43] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[04:31:23] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:31:30] *** Joins: Mattiaslndstrm (~Mattiasln@m5-240-164-110.cust.tele2.se)
[04:32:49] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:33:05] *** Joins: zopsi (~zopsi@irc.dir.ac)
[04:34:29] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[04:34:31] *** Joins: MaXxer01 (~MaXxer0@i5E86B25C.versanet.de)
[04:34:56] <AhmedAmerican> https://bpa.st/UAVA is the following `xpath` can't be used within `selenium` ? `./br[1]/following-sibling::text()[1]`
[04:35:23] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:35:30] *** Quits: MaXxer0 (~MaXxer0@mue-88-130-53-249.dsl.tropolys.de) (Ping timeout: 240 seconds)
[04:36:19] *** Quits: Mattiaslndstrm (~Mattiasln@m5-240-164-110.cust.tele2.se) (Ping timeout: 265 seconds)
[04:36:37] *** Quits: waxfire238 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:36:49] *** Joins: waxfire238 (~waxfire@65.119.2.240)
[04:42:00] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:42:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:43:59] *** Joins: oldguy (~oldguy@90.244.127.122)
[04:44:42] *** Quits: bongobrown (~omary@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 240 seconds)
[04:46:34] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[04:51:13] *** Joins: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net)
[04:54:41] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 265 seconds)
[04:55:24] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:57:27] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:59:05] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[04:59:09] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:59:13] *** Quits: Snyp (~rksht@49.207.214.102) (Ping timeout: 258 seconds)
[05:01:11] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[05:01:41] *** Joins: Fluxx (~Fluxx@user/fluxx)
[05:02:30] *** Quits: hcdc25 (~hcdc25@146.86.166.85) (Quit: Client closed)
[05:04:21] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[05:05:55] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[05:06:20] *** Joins: CombatVet (~c4@user/combatvet)
[05:12:35] *** Quits: dfcnvt (~dfcnvt@191.96.185.123) (Quit: leaving)
[05:12:50] <glestrade> is there anywhere I can find source for the np.random library?
[05:13:03] <glestrade> I want to see how computationally expensive np.random.laplace is
[05:21:47] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[05:22:51] <KirkMcDonald> glestrade: It is on github, e.g. https://github.com/numpy/numpy/blob/main/numpy/random/src/distributions/distributions.c#L469
[05:23:09] <glestrade> KirkMcDonald: thx
[05:26:08] *** Joins: LordKalma (~LordKalma@2a01:4f9:c011:27ad::1)
[05:31:57] *** Joins: MaXxer0 (~MaXxer0@mue-88-130-53-097.dsl.tropolys.de)
[05:32:38] *** Quits: MaXxer01 (~MaXxer0@i5E86B25C.versanet.de) (Ping timeout: 272 seconds)
[05:32:40] *** Quits: wbn (~wbn@user/wbn) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:25] *** Joins: wbn (~wbn@user/wbn)
[05:37:10] *** Joins: vlm (~vlm@user/vlm)
[05:37:32] *** Quits: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net) (Quit: glestrade)
[05:37:38] *** Quits: tabakhase (tabakhase@user/tabakhase) (Quit: ZNC - http://znc.in)
[05:37:55] *** Quits: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[05:40:32] *** Quits: Umbire (~UmbireThe@user/umbire) (Quit: Umbire zaps a wand of digging!)
[05:41:53] *** Joins: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net)
[05:43:40] *** Joins: tabakhase (tabakhase@user/tabakhase)
[05:45:51] *** Joins: califax- (~califax@user/califx)
[05:48:15] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:48:16] *** califax- is now known as califax
[05:48:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:49:44] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 272 seconds)
[05:49:44] *** Quits: kmh (~kmh@p200300df5f2fd50048f006e6baaf7fa7.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[05:49:44] *** brabrax_ is now known as brabrax
[05:51:53] *** Joins: pnoud (~pnoud@user/pnoud)
[05:53:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:54:02] *** Quits: zware (~zach@python/psf/zware) (Quit: Quitting)
[05:54:47] *** Joins: zware (~zach@python/psf/zware)
[05:57:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[05:57:20] *** Quits: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net) (Ping timeout: 272 seconds)
[05:58:03] *** Joins: Wafficus (~user@70.126.240.148)
[05:58:40] <Wafficus> hello I have a question regarding the last portion of my little project. I'm trying to create a art gallery site from a python script. Its the last portion regarding the image tags that I'm a bit uncertain about regarding using the 'os' module from Python 3
[05:58:42] <Wafficus> https://bpa.st/HEUA
[05:59:29] <Wafficus> can anyone help me point me in the right direction to just have it look at the 'images/' directory onward from the given full path?
[05:59:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[05:59:55] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:01:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:03:14] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[06:04:42] <stealth_> Wafficus, for a site the directory look up should start with '/images/...'
[06:04:46] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[06:04:55] <stealth_> Wafficus, so you need extra "/" at the start
[06:05:55] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 258 seconds)
[06:06:14] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:07:00] <stealth_> Wafficus, wherever you are using `str()` you don't need it. whatever is in '...' or "..." is already a string
[06:07:30] *** Joins: CombatVet (~c4@user/combatvet)
[06:08:37] <stealth_> Wafficus, this can be written like so `picture_img_tag = f'<img id="{picture_path}" alt="" src="{picture_path}"/>'`
[06:09:45] <stealth_> Wafficus, `picture_img_tag = f'<img id="{picture_path}" alt="" src="/{picture_path}"/>'` notice i added `src="/` to account for your "/images/" issue
[06:10:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[06:10:43] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[06:11:07] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:12:53] <Wafficus> thanks will try this out stealth_
[06:13:48] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[06:15:45] *** Joins: korg815 (~korg815@user/korg815)
[06:16:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:16:58] *** Joins: tims (~tims@61.69.131.46)
[06:18:30] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 252 seconds)
[06:18:47] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[06:18:50] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c9b:2300:33fe:3790:ba18:2648)
[06:19:41] *** Joins: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net)
[06:21:03] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:22:02] *** Quits: sharperguy (~sharpergu@2001:16b8:5c0d:a900:f864:b91e:fe1:1b25) (Ping timeout: 272 seconds)
[06:23:36] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[06:24:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[06:25:37] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[06:25:50] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Ping timeout: 272 seconds)
[06:28:40] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[06:29:04] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:29:23] *** Quits: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net) (Quit: Konversation terminated!)
[06:29:46] *** Joins: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net)
[06:32:11] *** Joins: Flux (~Fluxx@user/fluxx)
[06:32:56] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[06:33:42] *** Quits: oldguy (~oldguy@90.244.127.122) (Quit: Leaving)
[06:35:06] *** Quits: Orimendix (~kevin@162-221-219-5.lxtnkya3.metronetinc.net) (Quit: Konversation terminated!)
[06:35:20] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 272 seconds)
[06:36:10] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:37:34] *** Quits: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net) (Quit: glestrade)
[06:38:07] *** Joins: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net)
[06:38:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[06:38:32] *** Joins: thiras_ (~thiras@user/thiras)
[06:38:34] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[06:39:16] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:40:20] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:40:40] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[06:40:53] *** Joins: c10l (~c10l@89.34.167.207)
[06:41:08] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[06:41:35] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Read error: Connection reset by peer)
[06:41:40] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[06:41:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:42:23] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[06:43:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[06:44:16] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:45:52] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[06:46:16] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:46:31] *** Joins: c10l (~c10l@89.34.167.207)
[06:50:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:52:51] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:53:07] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-6954-6107-32c9-6eb8.res6.spectrum.com)
[06:53:08] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[06:53:50] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[06:55:02] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[06:55:12] *** Joins: c10l (~c10l@89.34.167.207)
[06:55:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:55:14] *** FinnElija is now known as Guest3020
[06:55:14] *** finn_elija is now known as FinnElija
[06:55:36] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7505-cb9f-3992-4528.res6.spectrum.com) (Ping timeout: 272 seconds)
[06:55:56] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[06:56:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:57:00] *** Joins: CombatVet (~c4@user/combatvet)
[06:57:09] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:58:25] *** Quits: Guest3020 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[06:59:00] *** Quits: glestrade (~glestrade@wsip-68-224-172-169.sd.sd.cox.net) (Quit: glestrade)
[06:59:21] *** Quits: Wafficus (~user@70.126.240.148) (Quit: ERC (IRC client for Emacs 27.2))
[07:00:02] *** Quits: esv (~esv@72.11.45.232) (Ping timeout: 272 seconds)
[07:00:10] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 240 seconds)
[07:00:42] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:02:49] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[07:05:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[07:06:53] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:08:08] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:12:23] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:50] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[07:15:09] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[07:16:30] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[07:16:39] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[07:16:53] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[07:17:14] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Client Quit)
[07:19:03] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[07:24:42] *** Quits: schumaml (~schumaml@p200300e2ef33e70053c1821a43d17d29.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:24:52] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[07:25:01] *** Joins: schumaml (~schumaml@p200300e2ef33e70053c1821a43d17d29.dip0.t-ipconnect.de)
[07:25:41] *** Joins: Sadale (~Sadale@user/sadale)
[07:26:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:31:56] *** Quits: mandeep (uid394387@id-394387.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:13] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[07:32:43] *** Joins: c10l (~c10l@89.34.167.207)
[07:35:30] *** Quits: emika (~emika@83.136.182.162) (Ping timeout: 272 seconds)
[07:35:43] *** Joins: emika (~emika@83.136.182.166)
[07:36:23] *** Joins: lethu (~lethu@196.117.90.136)
[07:36:46] *** Quits: Naan (~naan@user/naan) (Ping timeout: 272 seconds)
[07:37:57] *** Quits: justyb11 (~justyb@2601:483:500:3ea:ec03:2ce:d7ba:f9e5) (Quit: Leaving)
[07:38:08] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:43:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[07:45:22] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 268 seconds)
[07:47:02] *** Quits: lethu (~lethu@196.117.90.136) (Quit: Quit())
[07:49:05] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[07:51:20] *** Joins: nbao (~nbao@187.20.162.127)
[07:51:37] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[07:51:43] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[07:52:44] *** Joins: pnoud (~pnoud@user/pnoud)
[07:53:24] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:55:25] <SnoopJ> Metalsutton, this other error you're experiencing is a failure to get OpenGL set up the way PyGame (or one of its dependencies) wants it. EGL is an interoperability layer in that ecosystem. It looks like a lot of people say that running without X can be the cause of this, and if I recall right, you're doing that?
[07:57:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[08:00:27] <SnoopJ> Metalsutton, oh, and I see that the SDL_RWclose problem is still present. But at least in this report it's a lot more clear where it's come from: one of the .so files in pygame itself.
[08:00:27] <jochum> SnoopJ: wow.
[08:00:37] <SnoopJ> jochum, wow?
[08:00:38] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[08:00:50] <jochum> Still thinking about that case
[08:00:58] <jochum> problem
[08:01:13] * SnoopJ shrugs
[08:01:29] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:04:25] *** Joins: matsaman (~matsaman@user/matsaman)
[08:04:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:06:17] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[08:15:18] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[08:15:22] *** Joins: yaalon (~yaalon@40.sub-174-195-195.myvzw.com)
[08:17:13] *** Quits: yaalon (~yaalon@40.sub-174-195-195.myvzw.com) (Remote host closed the connection)
[08:19:37] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 250 seconds)
[08:19:50] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[08:20:13] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Remote host closed the connection)
[08:20:55] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[08:21:02] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[08:22:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[08:23:53] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[08:26:25] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:26:59] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 258 seconds)
[08:29:47] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:29:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:31:36] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:32:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[08:33:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:53] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:40:23] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[08:40:25] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[08:40:30] *** Joins: ferz (~ferz@93.48.251.229)
[08:41:24] <Metalsutton> jochum, yeah well at least he is putting in such good effort. He has been a huge help, so I appreciate it.
[08:41:50] <Metalsutton> The SDL_RWclose problem only occurs with python 3.9
[08:42:13] <Metalsutton> SnoopJ, ^
[08:42:38] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[08:43:16] <nubonix> how can i set the QLabel using the function get_bot_screenshot?
[08:43:16] <nubonix> i can use apscheduler.AsyncIOScheduler to schedule the function to be called at an interval that i specify, but i havent figured out how to update the label based upon what the function returns, as there are multiple labels that im trying to update, and since its async, i wont be getting the data for the same label every time, instead i need to use the metadata that comes from the get_bot_screenshot response [starlette restful
[08:43:16] <nubonix> api]. I have a different label for each window, and im trying to update these windows based on what get_bot_screenshot returns
[08:43:16] <nubonix> here is the code https://bpa.st/HJMA
[08:43:16] <nubonix> for this example, there are 3 windows, and im trying to retrieve image(s) to update each of these windows, should make sense on where im trying to put them
[08:43:16] <nubonix> https://imgur.com/a/PQB3wp7
[08:43:16] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:43:44] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:43:54] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 272 seconds)
[08:44:41] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[08:46:00] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:46:38] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[08:46:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:47:10] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[08:47:17] *** Joins: Celeo (~Celeo@user/celeo)
[08:48:53] <SnoopJ> Metalsutton, yes, I see that. I'm not sure why, though. Can you remind me if you're using X or not?
[08:49:22] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:49:36] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:49:56] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:50:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:53:03] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:55:52] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[08:56:20] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[08:57:42] *** Joins: reumeth (~reumeth@user/reumeth)
[08:59:13] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:59:51] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[09:01:30] *** Quits: matsaman (~matsaman@user/matsaman) (Ping timeout: 240 seconds)
[09:02:01] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[09:02:13] <SnoopJ> Metalsutton, it would possibly be helpful to see the output of `python3.9 -m pip install -vvv --log install.log --force-reinstall pygame`, which will show us a lot of information about how pip is installing this page. Seeing it for `python3.7 ...` too wouldn't hurt, might be that one of them is building from source and one isn't.
[09:02:18] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:02:32] *** Joins: c10l (~c10l@89.34.167.207)
[09:03:11] *** Joins: matsaman (~matsaman@user/matsaman)
[09:05:23] *** Quits: andika (~andika@ec2-35-175-240-188.compute-1.amazonaws.com) (Remote host closed the connection)
[09:05:26] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:05:39] *** Joins: andika (~andika@ec2-35-172-190-246.compute-1.amazonaws.com)
[09:05:45] <SnoopJ> The EGL error looks like it's a problem with the runtime it's running in, and I think is happening later in the initialization than the other error. It may be that 3.7 is the better bet, here. That, or using the python3-pygame package if you're willing to use pygame 1.9.4
[09:07:07] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:07:08] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[09:07:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[09:07:40] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:07:51] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:07:52] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[09:08:19] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Client Quit)
[09:08:36] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[09:08:57] <stealth_> try reinstalling python3
[09:09:01] <stealth_> 3.9
[09:11:30] <Metalsutton> I wonder if there is an example of a pygame script that doesnt try to output anything to a screen, it just goes through an does its checks.
[09:12:50] <stealth_> Metalsutton, can you find a arch/rolling release distro for your device vs debian based?
[09:15:49] <Metalsutton> I am sure i can. All i want to do is to control the gpio pins to create a portable avr pogo programmer and be able to select .hex files from a list etc. so i have the touchscreen to make a menu.
[09:15:57] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:16:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[09:16:27] <Metalsutton> raspbian, even lite, is a bit overkill maybe.
[09:16:30] <SnoopJ> Metalsutton, they ship the tests with the library apparently, `python3 -m pytest.tests -v` runs all of them in verbose mode. I don't know which ones you'd have to bypass to avoid trying to use a screen.
[09:17:37] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[09:18:00] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[09:18:00] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:18:44] <SnoopJ> Being able to see the pip output would help to know if pip is building it for you, or if you're getting a binary wheel (which might be built against incompatible libraries)
[09:18:50] *** Joins: greentree (~greentree@pool-108-41-42-58.nycmny.fios.verizon.net)
[09:18:53] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:19:02] <greentree> am i bad at math or is there like something weird that happens with bit shifting if numbers get too large?
[09:19:09] <greentree> https://bpa.st/V4PA
[09:19:25] *** Quits: pan (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:19:46] <stealth_> Metalsutton, also does it have to be a zero device? don't you have a pi you can test with, those might be better for this type of application?
[09:20:11] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[09:20:13] <SnoopJ> greentree, what's `a`?
[09:20:24] *** Joins: pan (~quassel@pankid.club)
[09:20:30] <Metalsutton> SnoopJ, you ok with scrolling the biggest wall of text ever? I just did the force reinstall
[09:21:01] <greentree> sorry about that SnoopJ
[09:21:01] <greentree> https://bpa.st/K73A
[09:21:02] <greentree> typo
[09:21:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:21:05] <greentree> a is 'ts'
[09:21:11] <SnoopJ> Metalsutton, if you used the --log option I included, you should have an install.log that you can put on https://bpa.st, and yes, I set the verbosity to max just in case it's really obscure :)
[09:21:16] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[09:21:48] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[09:24:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:25:26] *** Quits: Celeo (~Celeo@user/celeo) (Read error: Connection reset by peer)
[09:26:21] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-6954-6107-32c9-6eb8.res6.spectrum.com) (Quit: jarthur_)
[09:27:38] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[09:28:14] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[09:29:27] <Metalsutton> SnoopJ, https://pastebin.com/xnFsS4GL
[09:30:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[09:30:46] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:31:10] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:31:24] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[09:31:28] *** Joins: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi)
[09:32:36] *** Quits: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi) (Remote host closed the connection)
[09:32:38] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:33:31] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[09:34:04] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[09:34:47] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[09:34:51] *** Joins: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi)
[09:36:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[09:37:08] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[09:37:31] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[09:38:29] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[09:39:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:39:37] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:39:43] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[09:40:27] *** Joins: CombatVet (~c4@user/combatvet)
[09:41:15] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[09:41:21] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[09:43:38] *** Quits: Jigsy` (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy)))
[09:43:44] *** Joins: Jigsy (~Jigsy@user/jigsy)
[09:44:14] *** Joins: monkey_ (~user@190.104.116.134)
[09:44:45] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:45:59] <SnoopJ> Metalsutton, ah, so it's coming pre-built from piwheels.org. That makes sense. What does running this give you? `ldd /home/pi/.local/lib/python3.9/site-packages/pygame/rwobject.cpython-39-arm-linux-gnueabihf.so`
[09:47:20] *** Quits: greentree (~greentree@pool-108-41-42-58.nycmny.fios.verizon.net) (Quit: greentree)
[09:48:23] <Metalsutton> im just about to jump across back to my linux box from my windows machine.
[09:48:33] <Metalsutton> I might ask you to repeat that last message.
[09:48:35] <Metalsutton> brb
[09:48:46] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[09:50:03] *** Joins: MetalSutton (~MetalSutt@101.100.153.131)
[09:50:22] <SnoopJ> The command in question: `ldd /home/pi/.local/lib/python3.9/site-packages/pygame/rwobject.cpython-39-arm-linux-gnueabihf.so`
[09:51:05] *** Quits: mattil (~mattilinn@84-253-253-42.bb.dnainternet.fi) (Remote host closed the connection)
[09:52:51] <MetalSutton> https://bpa.st/DOUA
[09:53:35] *** Joins: pnoud (~pnoud@user/pnoud)
[09:54:11] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:55:32] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[09:56:26] *** Joins: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at)
[09:57:42] *** Joins: upsala (~zcb@185.213.155.160)
[09:58:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[09:59:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:59:27] <SnoopJ> hmm, okay, so it's definitely using the libSDL2 that the package manager gave you.
[10:00:16] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[10:03:03] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:03:39] <MetalSutton> holy shit i got something to run
[10:04:08] <SnoopJ> MetalSutton, with 3.7?
[10:05:14] <MetalSutton> https://i.imgur.com/DfUWLo7.png
[10:05:21] <foo> Can someone remind me the syntax for [x for x in xes for y in x.y] or such... basically nesting two deep
[10:05:26] <foo> I always have issues with this one.
[10:05:30] <MetalSutton> It maybe a black box, but at least its not an error
[10:05:46] <SnoopJ> MetalSutton, nice! What was the fix to get past the EGL problem? Some missing package or driver?
[10:05:50] <KirkMcDonald> foo: [f(x) for sublist in L for x in sublist]
[10:06:05] <SnoopJ> MetalSutton, or hm, looks like you're running it in X there, is that the difference from before?
[10:06:07] <KirkMcDonald> foo: It is, indeed, weirdly inside-out.
[10:06:18] <foo> KirkMcDonald: thank you, /me reads it a few times to try to wrap his head around it
[10:06:24] *** Joins: Rue (~rue@2001-b011-1000-1ae0-a939-19fb-a202-7a0a.dynamic-ip6.hinet.net)
[10:06:27] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[10:06:27] <foo> KirkMcDonald: I feel like I do this once every 6 months and it doesn't stick, heh.
[10:06:35] *** Parts: Rue (~rue@2001-b011-1000-1ae0-a939-19fb-a202-7a0a.dynamic-ip6.hinet.net) (WeeChat 3.2)
[10:06:44] <SnoopJ> foo, KirkMcDonald the mnemonic that finally worked for me is that they read the same LTR as they do top-to-bottom when it's not a comprehension
[10:06:56] <MetalSutton> I changed my code from os.putenv('SDL_FBDEV', '/dev/fb1'), to os.putenv('SDL_FBDEV', '/dev/fb0')
[10:07:05] <KirkMcDonald> foo: The loops go in the same order that they would as a series of `for` statements, but the "loop body" goes in the front.
[10:07:08] <MetalSutton> and yes, ran it in rdp
[10:07:17] <SnoopJ> MetalSutton, ah, wrong framebuffer then. Sweet :)
[10:07:22] <MetalSutton> well ... no
[10:07:31] <MetalSutton> i want it in framebuffer 1
[10:07:48] <SnoopJ> Oh, I see, you're just seeing if you can run it in the other one to make sure there isn't some other problem?
[10:08:08] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[10:08:38] <MetalSutton> https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi/easy-install-2#pitft-as-raw-framebuffer-device-2982165-50
[10:08:48] <foo> KirkMcDonal / SnoopJ - huh, this is helpful, I think I follow now... I got it on my first try. I like that mnemonic SnoopJ. I was doing this: [s.alias for m in my_media if m.duration and m.duration > 1800 and not m.tags for s in m.shorturls]
[10:10:20] *** Quits: andika (~andika@ec2-35-172-190-246.compute-1.amazonaws.com) (Remote host closed the connection)
[10:10:40] *** Joins: andika (~andika@ec2-18-212-169-182.compute-1.amazonaws.com)
[10:11:21] <SnoopJ> MetalSutton, interesting, I checked against the packages on piwheels.org, and it looks like the SDL_RWclose symbol is this way in the 3.9 wheel, but *not* in the 3.7 wheel. I'm not sure if that's indicative of a build flaw or not.
[10:11:58] <MetalSutton> ok. well im happy with 3.7
[10:12:08] <MetalSutton> thanks for all your help!
[10:12:34] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 240 seconds)
[10:12:35] <MetalSutton> I just need to figure out now why i cannot access the framebuffer 1
[10:12:42] <MetalSutton> but i dont think thats pygame related
[10:12:57] <SnoopJ> I don't think that EGL init problem is pygame's fault, no
[10:14:07] <SnoopJ> MetalSutton, the Adafruit guide does say "OpenGL accelerated software will never appear on the PiTFT (it is unaccelerated framebuffer only)" when using it in this mode, though.
[10:15:22] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:15:42] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[10:16:12] <SnoopJ> Looks like the only one of those three modes that supports OpenGL (and therefore SDL as PyGame wants to use it in what you're doing) is the HDMI mirror one.
[10:16:24] <MetalSutton> However this guide suggets I can do something like this: https://learn.adafruit.com/raspberry-pi-pygame-ui-basics/from-gpio-to-screen
[10:16:51] *** Joins: BUSY (~BUSY@user/busy)
[10:17:14] <MetalSutton> is text on a colour background considered accelerated?
[10:19:09] *** Quits: andika (~andika@ec2-18-212-169-182.compute-1.amazonaws.com) (Remote host closed the connection)
[10:19:27] *** Joins: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net)
[10:19:28] *** Joins: andika (~andika@ec2-35-170-248-20.compute-1.amazonaws.com)
[10:20:17] <MetalSutton> oh FOR FUCK SAKE
[10:20:20] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[10:20:28] <MetalSutton> Sorry SnoopJ I which i readd this earlier.
[10:20:34] <SnoopJ> MetalSutton, "accelerated" usually refers to hardware acceleration, i.e. there's a device doing the actual drawing for you. OpenGL is typically used to talk to these devices. It's less about *what* you are drawing and more about *how*.
[10:20:50] <MetalSutton> https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi/pitft-pygame-tips#ensure-you-are-running-sdl-1-dot-2-2859156-6
[10:21:30] <SnoopJ> Oh, huh.
[10:22:04] <MetalSutton> All this time we were trying to get SDL 2.x working
[10:22:18] <MetalSutton> I didnt come across this page till now.
[10:22:45] <SnoopJ> MetalSutton, you might be able to try running your demo as `SDL_RENDER_DRIVER=software python3 ...` to see if that lets you use /dev/fb1, but this is a blind guess.
[10:22:51] <MetalSutton> "DL 2.x and SDL 1.2.15-10 have some serious incompatibilities with touchscreen. You can force SDL 1.2 by running a script"
[10:23:07] <SnoopJ> I'm not entirely sure that's talking about the graphics capabilities, but it's good to know.
[10:24:24] <MetalSutton> yeah the touch. But im just saying. looks like i might be reverting sdl anyway
[10:25:39] <SnoopJ> Yea, I guess maybe it's using 1.2 for some stuff. A little scary to mix and match from the old Debian version like that, but the script looks like it's being as safe as it can be about doing it.
[10:26:53] <MetalSutton> ok ill give it a shot in a bit.
[10:27:12] <MetalSutton> and yeah. still getting that same EGL issue even with render driver set to software
[10:27:25] <MetalSutton> its ok, its just good knowing i have a lil bit of progress
[10:27:30] <SnoopJ> Ah well
[10:28:25] *** Joins: anandprabhu (~anandprab@185.195.233.158)
[10:29:31] <SnoopJ> Yea, glad to know about this incompatibility. I'm still pretty curious about this SDL_RWclose problem with the 3.9 wheel. Or rather, I wonder why the 3.7 one doesn't have it.
[10:29:35] *** Joins: relationalalgebr (~relationa@117.216.30.224)
[10:34:03] <MetalSutton> im actually getting an odd error, that now it always display on the remote x session, no matter what framebuffer
[10:34:45] <MetalSutton> im new to python, do i need to delete a temp file, or overwrite something to see my code changes?
[10:34:52] *** Quits: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net) (Quit: Leaving)
[10:35:15] <MetalSutton> if i run the script, it should run the version that is edited right?
[10:35:52] <SnoopJ> yes
[10:38:38] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-5cd1-fa28-1e6f-abb1.res6.spectrum.com)
[10:38:43] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[10:38:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 276 seconds)
[10:41:35] <SnoopJ> ahhh
[10:42:03] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[10:42:27] <SnoopJ> MetalSutton, the 3.9 wheel for pygame is built against Bullseye, the *next* version of Debian from what you have (currently it's the "testing" release)
[10:44:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[10:45:49] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:23] <SnoopJ> If you are keen to use python3.9 for your project, you might want to try installing pygame as: `python3.9 -m pip install --no-binary pygame` which will tell pip not to use the one piwheels is offering, but to build it from source. This might be kinda demanding on your pi, though.
[10:46:25] *** Joins: seednode (~seednode@user/seednode)
[10:46:30] <SnoopJ> (and might require some additional packages)
[10:46:49] <SnoopJ> but at last I understand what the heck is going on there :)
[10:47:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:49:26] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:49:36] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[10:49:59] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[10:51:36] *** Quits: anandprabhu (~anandprab@185.195.233.158) (Quit: Leaving)
[10:51:53] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-1d4f-58cf-cdfb-06b1.res6.spectrum.com)
[10:52:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:52:56] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[10:53:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:53:45] *** Lord_of_Life_ is now known as Lord_of_Life
[10:54:16] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-1d4f-58cf-cdfb-06b1.res6.spectrum.com) (Client Quit)
[10:55:38] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[10:55:49] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:55:54] *** Quits: Quietus (~quietus@larch.ratcliffefamily.uk) (Ping timeout: 256 seconds)
[10:56:06] *** Joins: rememberYou (~someone@user/rememberyou)
[10:56:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-5cd1-fa28-1e6f-abb1.res6.spectrum.com) (Ping timeout: 272 seconds)
[10:56:17] *** Quits: y1n (~y1n@84-115-64-204.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[10:57:44] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:57:56] *** Joins: Quietus (~quietus@larch.ratcliffefamily.uk)
[11:00:47] *** Joins: CombatVet (~c4@user/combatvet)
[11:02:08] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:03:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:05:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:05:28] *** Joins: kosh (~kosh@user/kosh)
[11:05:33] *** Joins: emerent_ (~quassel@p200300cd57058ca9ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:05:33] *** emerent is now known as Guest7970
[11:05:33] *** emerent_ is now known as emerent
[11:05:46] *** Quits: Guest7970 (~quassel@p200300cd57058c29ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[11:07:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:08:04] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[11:08:07] *** Joins: gggp (~gggp@60.10.23.170)
[11:08:56] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[11:09:39] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[11:09:57] <gggp> college network is not stable
[11:11:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[11:13:25] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:14:27] *** Joins: palasso (~palasso@user/palasso)
[11:15:18] *** Joins: CombatVet (~c4@user/combatvet)
[11:15:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:15:37] *** Joins: manti7 (~manti7@176.10.104.94)
[11:17:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:21:16] *** Quits: relationalalgebr (~relationa@117.216.30.224) (Quit: relationalalgebr)
[11:23:30] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[11:24:29] *** Joins: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at)
[11:27:21] *** Joins: trace987 (~trace@95.90.106.112)
[11:27:43] *** Joins: gustik (~gustik@2a01:c844:241f:c020:312a:c22f:e497:698f)
[11:28:21] *** Joins: NeoCore (~neocore@89.40.183.16)
[11:29:50] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[11:31:44] *** Quits: finnx_ (~finnx@2600:1702:1ae0:930:6b82:2d5d:78e7:395f) (Ping timeout: 272 seconds)
[11:32:02] *** Joins: finnx (~finnx@99-158-137-5.lightspeed.tukrga.sbcglobal.net)
[11:33:27] *** Quits: LiftLeft (~LiftLeft@191.96.227.125) (Ping timeout: 245 seconds)
[11:35:02] *** Joins: lpapp_ (~lpapp@84.66.225.222)
[11:35:23] <lpapp_> hi, is this the right channel to ask pyautogui questions?
[11:35:36] *** Joins: yaalon (~yaalon@2600:1012:b12b:cb46:d07f:5d39:b3c0:82c4)
[11:35:51] <SnoopJ> lpapp_, they are appropriate here, yes.
[11:35:55] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 250 seconds)
[11:36:28] <lpapp_> thanks, so I am trying to test my GUI application. I am trying to emulate some mouse drag, but it is not happening exactly. This is what I am trying: pyautogui.moveTo(564,377);pyautogui.click();pyautogui.drag(106, 64, duration=5.0, button='left')
[11:36:48] *** Joins: alnr (~alnr@38.125.204.99)
[11:36:50] <lpapp_> the mouse seems to move correctly, however it seems to behave like mouse move, rather than drag
[11:37:01] <lpapp_> as if it was not holding the left mouse down.
[11:37:07] <lpapp_> what am I doing wrong?
[11:37:29] <lpapp_> the coordinates I got from pyautogui.position() when manually going where I want to test the gui interaction.
[11:38:13] <kosh> I suspect you may need to ask later in the day or tomorrow, sunday morning european time and the usa asleep is a pretty low period of time for getting help
[11:39:11] <lpapp_> let us see
[11:39:17] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:39:22] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:41:31] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:41:44] *** Parts: robyndrake (~robyndrak@user/robyndrake) (WeeChat 3.2)
[11:41:47] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:42:11] <lpapp_> oh, if I use pyautogui.click() twice, then it works, odd, maybe because the first just changes the focus from the terminal to the GUI application
[11:42:22] <lpapp_> and the second does the actual click that I am expecting in the GUI application
[11:42:23] <SnoopJ> lpapp_, a click() is pushing down, then releasing. You want the drag*() functions, probably: https://pyautogui.readthedocs.io/en/latest/mouse.html#mouse-drags
[11:42:53] <lpapp_> drag seems to be move rather than drag
[11:42:53] <SnoopJ> click() is described as being press-and-release later on that page: https://pyautogui.readthedocs.io/en/latest/mouse.html#mouse-clicks
[11:42:57] <lpapp_> i.e. it just animates a mouse move
[11:43:00] <lpapp_> it does not actually drag
[11:43:07] <lpapp_> if you call click before, it seems to properly drag
[11:43:32] <lpapp_> this is based on my empirical tests
[11:43:43] <lpapp_> I was also expecting drag to drag, not just move
[11:43:55] <SnoopJ> If you think the library's documentation is wrong, you should open a ticket. Otherwise, I'd follow the docs, and maybe try to figure out why drag doesn't do what you expect.
[11:43:56] <lpapp_> drag is an animated move based on my quick experience
[11:43:59] <lpapp_> whereas move is an instant move
[11:44:15] <SnoopJ> Did you call drag with the `button` parameter specified?
[11:44:22] <lpapp_> yes, it is mandatory
[11:44:52] <lpapp_> it looks like doubleClick() also works.
[11:44:54] <lpapp_> Great :)
[11:45:34] <alnr> using mysqlclient 1.4.6, i'm getting 2026 SSL connection error. I've remedied this on another client instance by adding ssl_mode='DISABLED' to the Connection call, but this particular instance reports that ssl_mode is an invalid keyword and I cant upgrade mysqlclient now. any ideas on how to get around this?
[11:46:06] <SnoopJ> lpapp_, maybe you want to use mouseDown() instead of click() to initiate it, if you can't get the drag functions to work.
[11:46:50] <SnoopJ> Someone more familiar with pyautogui might chime in, I'm off for now.
[11:47:09] <SnoopJ> MetalSutton, before I go: https://github.com/pygame/pygame/issues/2657
[11:50:26] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[11:50:47] *** Joins: LiftLeft (~LiftLeft@37.19.198.43)
[11:51:18] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 258 seconds)
[11:52:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[11:52:14] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[11:52:15] *** Joins: Mattiaslndstrm (~Mattiasln@m5-240-164-110.cust.tele2.se)
[11:54:22] *** Joins: pnoud (~pnoud@user/pnoud)
[11:55:25] *** Quits: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[11:55:38] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[11:55:48] *** Quits: LiftLeft (~LiftLeft@37.19.198.43) (Ping timeout: 272 seconds)
[11:55:54] *** Joins: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at)
[11:57:38] *** Joins: CombatVet (~c4@user/combatvet)
[11:58:54] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:59:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[11:59:12] *** Joins: Auron (Auron956@user/auron)
[12:00:02] *** Joins: Mat1010 (~Mat1010@168.181.209.58)
[12:00:08] *** Parts: Mat1010 (~Mat1010@168.181.209.58) ()
[12:00:14] *** Quits: audiocat (~audio@2603-8081-1800-00ad-d96a-2229-d147-cd98.res6.spectrum.com) (Ping timeout: 272 seconds)
[12:00:17] *** Joins: pnoud (~pnoud@user/pnoud)
[12:01:41] *** Joins: emika5 (~emika@83.136.182.196)
[12:03:40] *** Quits: Imbapokah (~pavel@88.201.129.183) (Read error: Connection reset by peer)
[12:03:57] *** Quits: alnr (~alnr@38.125.204.99) (Ping timeout: 258 seconds)
[12:04:02] *** Quits: emika (~emika@83.136.182.166) (Ping timeout: 272 seconds)
[12:04:03] *** emika5 is now known as emika
[12:04:38] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:05:41] *** Joins: Imbapokah (~pavel@88.201.129.183)
[12:09:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[12:11:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:14:48] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[12:17:24] *** Joins: rendar (~rendar@user/rendar)
[12:18:28] *** Joins: EGH (~EGH@185.25.195.104)
[12:19:05] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:21:35] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:24:31] *** Joins: tuxifreund (tuxifreund@ubuntuusers/wikiteam/tuxifreund)
[12:25:06] *** Quits: yaalon (~yaalon@2600:1012:b12b:cb46:d07f:5d39:b3c0:82c4) (Remote host closed the connection)
[12:26:34] *** Quits: doc (~doc@user/doc) (Ping timeout: 256 seconds)
[12:26:50] *** Quits: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[12:27:00] *** Joins: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at)
[12:28:03] <lpapp_> SnoopJ: thanks, mouseDown() also works instead of doubleClick()
[12:28:11] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[12:29:15] *** Joins: doc (~doc@user/doc)
[12:30:16] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[12:30:40] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[12:30:59] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Remote host closed the connection)
[12:31:34] *** Joins: tmlk (~tmlk@38.red-83-42-242.dynamicip.rima-tde.net)
[12:31:46] <tmlk> hello world!
[12:32:37] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[12:32:51] <kosh> goodbye world :)
[12:32:54] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[12:33:09] <tmlk> kosh: you're quite right :)
[12:33:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:33:41] <tmlk> I'm new with Python, totaling 8 hours. I'm creating a script that should create a google group from a ticket in jira.
[12:33:42] <kosh> pretty sure the world hates us
[12:34:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[12:36:03] *** Joins: ayrus (~ayrus@user/ayrus)
[12:37:18] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[12:37:22] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[12:37:28] <tmlk> this is where I got so far https://bpa.st/YLRQ
[12:38:08] *** Joins: aum (~aum@202.47.255.123.static.snap.net.nz)
[12:38:10] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:48] <tmlk> at this point I should get my customfields from jira issue and pass them to google api. I was wondering how to get there. In BASH I achieved that by setting a variable with the issue json. Then assigning variables with the custom fields content.
[12:40:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[12:41:04] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[12:41:04] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:05] <tmlk> and finally using GAM toolkit to create group, add members and set some settings ("gam create group $groupname" a for loop to add members like "for owner in $owners; do gam update group $groupname add owner $owner; done"
[12:42:07] *** Joins: CombatVet (~c4@user/combatvet)
[12:42:29] <tmlk> I believe I can do better with python. So here I am asking for advice.
[12:42:39] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:282:660b:3f33:9321)
[12:45:21] <tmlk> btw. I'm first getting a list of domains from google to validate the user input in the issue to ensure that the requested domain actually exist/is correctly written in the jira issue.
[12:45:43] *** Joins: yaalon (~yaalon@2600:1012:b1b9:6c22:3d91:ba67:dd43:9f3f)
[12:46:18] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[12:48:03] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:48:39] *** Joins: magla (~gelignite@55d482e4.access.ecotel.net)
[12:48:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[12:49:28] <kosh> sorry I have not really worked with things like this
[12:49:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:51:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:52:38] *** Quits: LordKalma (~LordKalma@2a01:4f9:c011:27ad::1) (Ping timeout: 256 seconds)
[12:53:41] *** Quits: wbn (~wbn@user/wbn) (Remote host closed the connection)
[12:53:42] *** Joins: andikadinata (~andikadin@subs47-116-206-43-104.three.co.id)
[12:56:34] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:58:00] *** Joins: relationalalgebr (~relationa@117.216.30.224)
[13:01:04] *** Quits: Mattiaslndstrm (~Mattiasln@m5-240-164-110.cust.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:02:51] *** Quits: relationalalgebr (~relationa@117.216.30.224) (Quit: relationalalgebr)
[13:03:20] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[13:04:00] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[13:04:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:05:26] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:05:46] *** Joins: mei (~mei@user/mei)
[13:08:33] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[13:09:01] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[13:09:16] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 272 seconds)
[13:09:17] *** mIk3_09 is now known as mIk3_08
[13:09:24] *** Quits: andikadinata (~andikadin@subs47-116-206-43-104.three.co.id) (Read error: Connection reset by peer)
[13:10:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[13:10:41] *** Joins: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[13:13:05] *** Quits: resmo (~resmo@2a00:d420:9:8a00:48d3:5484:79a:f341) (Ping timeout: 252 seconds)
[13:14:24] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:15:30] *** Joins: entuland (~entuland@user/entuland)
[13:16:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:17:04] <rendar> `.venv_dir/bin/pip <params>` is exactly the same as `.venv_dir/bin/python -m pip <params>` right?
[13:17:21] *** Quits: dbg (~dbg@user/dbg) (Ping timeout: 276 seconds)
[13:17:36] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:18:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[13:19:43] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:282:660b:3f33:9321) (Quit: WeeChat 3.2)
[13:21:39] *** Joins: evilroot (~evilroot@user/evilroot)
[13:25:42] <ChrisWarrick> rendar: mostly, yes
[13:25:54] *** Quits: y1n (~y1n@84-115-65-134.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[13:25:58] <ChrisWarrick> rendar: if you’re upgrading pip on windows, you must use python -m pip
[13:25:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[13:26:03] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[13:26:26] <rendar> i see
[13:26:41] *** Joins: y1n (~y1n@84-115-65-150.wifi.dynamic.surfer.at)
[13:26:49] <rendar> ChrisWarrick: you mean upgrading pip itself?
[13:27:12] <ChrisWarrick> rendar: yes
[13:27:40] <rendar> ok
[13:27:52] <whatsupdoc> Can someone code review?
[13:27:54] <whatsupdoc> https://dpaste.org/Mgz7
[13:28:12] *** Quits: yaalon (~yaalon@2600:1012:b1b9:6c22:3d91:ba67:dd43:9f3f) (Remote host closed the connection)
[13:28:18] <whatsupdoc> I want to see someone else's sol
[13:28:20] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:6467:aa41:cd69:bd89)
[13:30:52] *** Joins: supernovah (~supernova@mail.ijk.nz)
[13:30:55] <very_sneaky> where does pip install its packages on windows 10?
[13:30:56] <ChrisWarrick> whatsupdoc: you can replace lines 10-14 with just  return st == st[::-1]
[13:31:12] <very_sneaky> using it with pyenv-win, if relevant
[13:31:16] <supernovah> hey  I'm trying to understand some python docs, what does the forward slash mean when it says "struct.unpack_from(format, /, buffer, offset=0)"
[13:31:43] <ChrisWarrick> supernovah: that you can’t specify format as a keyword argument
[13:32:06] <ChrisWarrick> supernovah: struct.unpack_from(format='', buffer='') is not allowed due to the /
[13:32:28] <ChrisWarrick> supernovah: you need to use struct.unpack_from('', '') or struct.unpack_from('', buffer='') (or any optin with the offset argument)
[13:32:48] <supernovah> ChrisWarrick: thanks, :)
[13:34:20] <supernovah> the arguments passed to it are these: struct.unpack_from('<' + 'I'*root_length, data, offset=offset) and coming from a c background, I see the '<' + 'I'*root_length and think it's going to create an integer of '<' + 'I' times root_length, is this interpretation wrong?
[13:34:54] <ChrisWarrick> supernovah: it’s not an integer, it’s a string
[13:34:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:35:14] <supernovah> So the * operator is not a multiplication?
[13:35:19] <ChrisWarrick> supernovah: you can multiply strings by numbers, eg. 'I' * 4 = 'IIII'
[13:35:37] <very_sneaky> okay nevermind, found it - pyenv's pip installs installables to ~/.pyenv/pyenv-win/versions/x.x.x/
[13:35:39] <very_sneaky> Scripts
[13:35:51] *** Parts: lpapp_ (~lpapp@84.66.225.222) ()
[13:35:52] <supernovah> so '<' + 'I'*root_length in bytes, would be 1 + root_length long?
[13:35:56] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[13:36:03] <very_sneaky> does anybody have a good way of managing global programs installed via python, that shouldn't change with the interpreter? if possible
[13:36:12] <ChrisWarrick> supernovah: not sure I understand the question
[13:36:38] <supernovah> the first parameter, is a format string that is '<IIIII...' where the number of 'I's, is root_length yes?
[13:36:42] <ChrisWarrick> supernovah: if you’re asking about the string it produces, you’ll get an '<' in front, and then as many 'I's as root_length specifies
[13:36:44] <ChrisWarrick> supernovah: yes
[13:36:49] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:37:27] <supernovah> okay thanks, I'm just trying to figure out why a program isn't allocating some memory properly and this particular string is supposted to be in the vicinity of 800 megabytes long, I'll check how long it actually makes it
[13:37:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[13:38:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[13:38:25] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:38:34] <ChrisWarrick> supernovah: 800 MB? that sounds like an unusual use of struct
[13:38:51] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[13:39:34] <supernovah> I didn't write it, I don't know any python either heh
[13:39:43] *** Quits: aum (~aum@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[13:40:22] <supakeen> I like big structs and I cannot allocate?
[13:41:06] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[13:41:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:43:07] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:43:19] <whatsupdoc> thanks ChrisWarrick
[13:43:25] <ChrisWarrick> whatsupdoc: you’re welcome!
[13:44:28] *** Joins: wbn (~wbn@user/wbn)
[13:45:23] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:46:18] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[13:46:54] *** Joins: flimsypondreed[m (~flimsypon@2001:470:69fc:105::cd71)
[13:47:41] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[13:47:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:48:31] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[13:48:53] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[13:49:08] *** Joins: Milos (~Milos@user/milos)
[13:49:44] <WhyNotHugo> What's the right way to [programatically] detect if a project is using poetry, flint, etc? (Eg: having it's repo checked out).
[13:49:50] *** Quits: wbn (~wbn@user/wbn) (Quit: ZNC 1.8.2 - https://znc.in)
[13:50:05] *** Joins: wbn (~wbn@user/wbn)
[13:50:45] *** Joins: Pickchea (~private@user/pickchea)
[13:51:11] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[13:51:40] *** Quits: supernovah (~supernova@mail.ijk.nz) (Ping timeout: 265 seconds)
[13:52:25] *** Quits: schumaml (~schumaml@p200300e2ef33e70053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:53:23] *** Joins: schumaml (~schumaml@p200300e2ef33e70053c1821a43d17d29.dip0.t-ipconnect.de)
[13:53:34] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[13:56:35] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[13:57:36] *** Joins: supernovah (~supernova@mail.ijk.nz)
[13:57:39] <rendar> `pip list | grep -v '^\-e'` if equivalent of `pip list --exclude-editable` right?
[13:57:58] <supernovah> something weird is going on with the nickserv sorry,
[13:58:19] <supernovah> I have this line: console('root_length: %s, len(data): %s, offset: %s' % (root_length, len(data), offset)), and it outputs: 21:22:44 root_length: 201720069, len(data): 56883, offset: 6
[13:58:31] <supernovah> then I receive the error: struct.error: unpack_from requires a buffer of at least 806880276 bytes
[13:58:53] <supernovah> is it failing to generating this very long string "<IIIII..." ?
[13:59:08] *** Joins: juzza1 (~juzza1@78-27-78-26.bb.dnainternet.fi)
[14:00:22] <supakeen> You'd need to pastebin some code supernovah.
[14:01:09] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[14:03:41] <supernovah> I don't know enough python to make an mwe, but the only line that's failing is self.root_passives = list(struct.unpack_from('<' + 'I'*root_length, data, offset=offset))
[14:04:06] *** Joins: CombatVet (~c4@user/combatvet)
[14:04:57] <supernovah> the source is here: https://github.com/brather1ng/PyPoE/blob/f5141a201eb358a290999417f397f0f1dc3e8874/PyPoE/poe/file/psg.py#L285
[14:05:37] <supakeen> In general what you're printing there it says quite directly that your `len(data)` is only 56 883 bytes.
[14:05:46] <supakeen> Yet your struct format specifier requires a lot more.
[14:06:11] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:06:18] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:06:47] <supernovah> I take it struct.unpack_from unpacks into the originating buffer, such that it requires it to be substantially longer than it is?
[14:06:54] *** Quits: VimVim (~VimVim@85.191.62.251) (Ping timeout: 272 seconds)
[14:07:17] <supakeen> No, it returns a new object but the source object (`data` in your case) needs to be the length that conforms to your format specifier.
[14:07:44] <supernovah> that leads me to believe the value that root_length takes is most likely erroneous hmm
[14:07:47] <supakeen> And your source is only 56 883 bytes while your format specifier indicates you want 906 880 276 bytes.
[14:08:06] <supakeen> Well, I'd consider it to be highly unlikely that you have a buffer with 200 million int32's in it but it could b :)
[14:08:32] *** Joins: bw1 (senn@shell.xshellz.com)
[14:08:48] <supernovah> the memory is a file, which is a database so it could be, but I think it's most likely a lot less - it only contains something like 4000 entries to my knowledge
[14:09:03] <supakeen> How did you decide on this format specifier?
[14:09:17] <supernovah> I didn't write the code, I'm executing the software and it has this bug
[14:09:32] <supakeen> Ok well, let's start before then, where does `root_length` come from?
[14:09:39] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:09:44] *** Parts: bw1 (senn@shell.xshellz.com) ()
[14:10:00] <supernovah> if you look at the source I linked, root_length is supposedly an int ... <was typing>
[14:10:04] <rendar> `pip list | grep -v '^\-e'` if equivalent of `pip list --exclude-editable` right?
[14:10:23] <supernovah> yes so this is reading a game's data and that game has been patched recently and I think they've changed the file format of this particular file
[14:10:46] <supakeen> Yes, I'd think some offsets have moved around so you're reading a much larger value vor `root_length` than it's supposed to be.
[14:11:16] <supernovah> unfortunate because I'd really like to poke around and findd out how it's changed but I don't think I have time before monday
[14:11:18] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 276 seconds)
[14:11:44] <supakeen> Well, can you print the hex values of the first say 16 bytes of that `data` variable/
[14:11:49] <supakeen> I doubt it's moved around a lot.
[14:13:43] <supakeen> You can `print(data[:16].hex())` to get that.
[14:15:01] <supernovah> ooh thanks, I'm trying to find out what file this is - it's buried in a 30GiB contiguous file on disk and I have a viewer for it which *is* up to date but both of these programs take the proprietary file list and modify the "extension" for the user rather than using the actual internal extension which is just .dat
[14:15:26] <supernovah> these are merely strings shown to the user but it makes it hard to locate things
[14:17:26] <rendar> any help?
[14:17:52] <supakeen> I'll have to go but if the length is a 16-bit integer and it's in the range of a *max* of 14 000 (which is about what the length indicates it's considerably less) then you'd see something like `\x12\x13\x00\x00` in the first bytes.
[14:17:57] <supakeen> Err a 32-bit.
[14:17:59] <supakeen> Good luck.
[14:19:17] <supernovah> fortunately I'm from the world of embedded systems and have spent a lot of time in linker land with various toolchains so this is somewhat of my forte ... :D
[14:19:36] *** Joins: katze_ (~brotmann@aftr-82-135-87-187.dynamic.mnet-online.de)
[14:22:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:26:32] *** Quits: y1n (~y1n@84-115-65-150.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[14:27:05] *** Joins: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at)
[14:28:34] *** Joins: stevieh (~skrodzki@83.135.21.194)
[14:28:39] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:30:16] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 272 seconds)
[14:30:54] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 272 seconds)
[14:32:17] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:32:27] *** Joins: jinsun (~quassel@user/jinsun)
[14:33:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:33:48] *** Joins: coc0nut (~coc0nut@128.90.138.207)
[14:36:11] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[14:39:50] <furrykef> What's a good way to compare strings with a custom collation? E.g. if I want "æ" to be sorted in between "a" and "b", so e.g. "æmette" comes after "axian" and before "bacan"
[14:40:20] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Quit: Default quit message is difficult to set. If you don't see me returning, ask me? You will find me, if you want to)
[14:40:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[14:41:59] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[14:44:16] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[14:45:25] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[14:46:42] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[14:49:30] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:51:35] *** Joins: oriba (~oriba@x4db7cf0c.dyn.telefonica.de)
[14:51:48] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:52:39] <Repiphany> Laziest way probably like custom_alphabet = ['a', 'æ', 'b', ...]; sorted(strings, key = lambda s : [custom_alphabet.index(c) for c in s])
[14:52:41] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[14:53:02] <furrykef> Repiphany: yeah, that's pretty much what I was thinking
[14:54:37] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[14:55:02] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Ping timeout: 272 seconds)
[15:00:17] *** Joins: pnoud (~pnoud@user/pnoud)
[15:05:16] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[15:07:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[15:11:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[15:12:58] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[15:14:51] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 258 seconds)
[15:16:45] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:20:36] *** Quits: stevieh (~skrodzki@83.135.21.194) (Ping timeout: 258 seconds)
[15:21:08] <gitesh> I kinda love optional parameters
[15:21:36] <gitesh> How does it keep its value when even when function is done then it's frame is destroyed
[15:22:25] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:22:26] <furrykef> Default values for keyword arguments are associated with the function object rather than with the stack frame
[15:23:06] <gitesh> What is keyword argument
[15:23:15] <gitesh> I call it parameters
[15:23:27] *** Quits: oriba (~oriba@x4db7cf0c.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:23:32] <bjs> gitesh: furrykef didn't mean keyword argument;  `def f(x=1): ...` the `1` here is attached to the function
[15:24:00] <bjs> gitesh: but anyway the frame being destroyed does not mean that the objects get destroyed. If you `def f(): x = some_new_obj(); return x`   then `x` doesn't get destroyed
[15:24:07] <bjs> (at least not automatically)
[15:24:11] <gitesh> Oh bjs that's good to know I was kinda wondering
[15:25:29] <gitesh> Hmm... That's right
[15:26:42] *** Quits: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[15:26:47] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[15:27:23] *** Joins: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at)
[15:28:23] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:28:46] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[15:28:59] <rendar> since which version of pip is `list` subcommand supported?
[15:29:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:29:24] *** Joins: gggp_ (~gggp@111.192.219.25)
[15:29:35] <gggp_> missed some msgs
[15:29:41] *** gggp_ is now known as gggp
[15:29:51] <gggp> network is unstable
[15:30:15] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[15:30:56] *** Joins: nyloc (~nyloc@p54825146.dip0.t-ipconnect.de)
[15:31:15] <The-Compiler> rendar: https://pip.pypa.io/en/stable/news/#v1-3
[15:31:31] <The-Compiler> rendar: note that its output isn't intended for parsing though, if that's what you had in mind
[15:31:45] <rendar> it is
[15:31:54] *** Joins: iflema (~ian@user/iflema)
[15:31:58] <rendar> The-Compiler: https://stackoverflow.com/questions/2720014/how-to-upgrade-all-python-packages-with-pip
[15:32:00] <rendar> check this out
[15:32:20] <rendar> it even has --format=json option
[15:32:35] <nyloc> A question out of curiosity can someone explain why this: [f"{s}-{i}" for s in ["A", "B"] for i in range(96)] is about 10% slower than [f"A-{i}" for i in range(periods)] + [f"B-{i}" for i in range(96)]
[15:33:40] <The-Compiler> rendar: well, yes, with those options, which haven't been there since the beginning
[15:33:45] <nyloc> so nested list comprehension vs. two comprehensions and merging the two resulting lists? Benchmarked on Python 3.9 in a Notebook with the %timeit magic.
[15:34:20] <rendar> The-Compiler: my question was about this: since i use that command i was wondering if i have to support some ifs, to check if pip list is available or not
[15:34:27] <rendar> if it's too old, i wouldn't care
[15:34:30] <The-Compiler> nyloc: what's 'periods'?
[15:34:45] <rendar> but if in some systems i couldn't find pip list, i will think about it
[15:34:46] <The-Compiler> rendar: you'd probably want to check the changelog for when --format=freeze was introduced
[15:34:49] <nyloc> oh, sorry its 96 forgot to remove it there
[15:34:51] *** Quits: tmlk (~tmlk@38.red-83-42-242.dynamicip.rima-tde.net) (Quit: Leaving)
[15:35:07] *** Quits: y1n (~y1n@84-115-65-127.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[15:35:27] <rendar> The-Compiler: uhm, can i check gracefully if pip supports a subcommand like 'list' calling pip itself?
[15:35:34] <nyloc> wanted to make it self contained as possible, both with a fixed number, I guess it comes down to the f-string with two replacements vs f-string with just one replacement
[15:36:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[15:36:45] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[15:36:45] *** Joins: Pickchea (~private@user/pickchea)
[15:36:52] <bjs> nyloc: well also you've "unrolled" one of the loops which is a very common optimization pattern
[15:37:18] <bjs> so the iteration over ["A", "B"] isn't happening anymore
[15:39:30] <The-Compiler> rendar: supporting 'list' probably is the smaller of your worries, given that it's been supported for 8.5 years now
[15:39:47] <bjs> gggp: did you ask a question?
[15:39:53] <nyloc> bjs: yeah but I thought the adding of two lists would make up for this.
[15:40:03] <rendar> The-Compiler: i know, but never under estimate the power of Debian old stuff ^_^
[15:40:13] <bjs> nyloc: the lists are pretty small
[15:40:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:40:33] <nyloc> checked with up to 100000 with the same result
[15:40:38] <The-Compiler> rendar: sure, but why do you want to check for 'pip list' existing, when you actually also need to know whether '--format=freeze' works (which is much newer I think)
[15:41:28] <rendar> are you sure? because the older version of pip, used `pip freeze` to list packages, with that same format, i guess
[15:41:40] <rendar> (when there wasn't `pip list`)
[15:41:54] *** Joins: hcdc25 (~hcdc25@146.86.166.85)
[15:42:50] <The-Compiler> rendar: yes, https://github.com/pypa/pip/pull/752/files doesn't add --format
[15:43:04] <rendar> uhm ok
[15:43:49] <rendar> The-Compiler: what would be a reliable solution of this? checking pip version with pip -V ?
[15:44:48] <The-Compiler> rendar: https://github.com/pypa/pip/pull/3686
[15:45:04] *** Quits: gggp (~gggp@111.192.219.25) (Ping timeout: 272 seconds)
[15:45:05] <The-Compiler> rendar: but all I'm doing really is searching for "pip list" in the pip changelog and looking at the linked PRs/issues
[15:46:22] *** Joins: gggp (~gggp@60.10.194.46)
[15:46:52] *** Quits: hcdc25 (~hcdc25@146.86.166.85) (Quit: Client closed)
[15:49:39] <rendar> The-Compiler: don't you think that i should check if --format=freeze is supported, instead of 'pip list', since it's newer so it's the common denominator that i should use in a if ... else: use older version
[15:49:45] *** Parts: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Leaving)
[15:50:34] *** Quits: supernovah (~supernova@mail.ijk.nz) (Ping timeout: 265 seconds)
[15:50:50] <The-Compiler> rendar: yeah, or perhaps just try to get what you want and check the exit status, though I dunno how pip reacts exactly
[15:53:28] <rendar> The-Compiler: uhm, i see.. problem is that i cannot get when --format has been applied to pip list.. i couldn't find it in the changelogs, how is this possible?
[15:53:43] <The-Compiler> rendar: I sent you a link to the PR
[15:53:51] *** Quits: gggp (~gggp@60.10.194.46) (Read error: Connection reset by peer)
[15:55:03] <rendar> The-Compiler: oh sorry, right right
[15:55:58] <rendar> The-Compiler: now, how can i get at which pip x.y.z version that commit has been released?
[15:55:59] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[15:58:33] <ChrisWarrick> rendar: if you’re talking about PR #3686: https://github.com/pypa/pip/commit/1ca4e5e1e71b8d5c64db01ca7177c1ef73590148 says 9.0.0+
[15:58:33] *** Joins: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[15:58:44] <The-Compiler> rendar: click on the "merged commit 1ca4e5e into pypa:develop" commit, and you'll get to https://github.com/pypa/pip/commit/1ca4e5e1e71b8d5c64db01ca7177c1ef73590148 which shows the tags its in - or search for the PR ID in the changelog. Not entirely sure which one is right, GitHub says 9.0 while the changelog lists it for 10.0
[15:58:51] *** Joins: gggp (~gggp@60.10.194.46)
[15:59:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[16:01:35] <rendar> wow that's very old
[16:01:54] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[16:02:54] <The-Compiler> yeah, if it was indeed in 9.0, even the oldest supported Ubuntu stable (18.04 LTS aka Bionic) would have it
[16:03:01] <The-Compiler> perhaps RHEL/CentOS wouldn't, dunno
[16:05:37] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[16:05:54] *** Joins: thiras (~thiras@user/thiras)
[16:06:28] *** Quits: dgdg (~dg_dg@84.252.92.13) (Remote host closed the connection)
[16:07:14] *** Quits: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[16:07:46] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:08:54] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[16:08:58] <arkanoid> hello
[16:09:49] <arkanoid> is it possible to use method call syntax for functions outside classes?
[16:09:50] *** Joins: relationalalgebr (~relationa@117.216.30.224)
[16:10:11] <bjs> arkanoid: if it's outside a class what would you call it "on"?
[16:10:13] *** Joins: famubu (~famubu@user/famubu)
[16:10:52] <arkanoid> I mean, can I do "def myfun(myobj,a,b,c): ... " and call it via "myobj.myfun(a,b,c)"?
[16:11:01] <bjs> arkanoid: no
[16:11:13] <famubu> While using the curses module of Python, is there a way to handle terminal resize? So that the screen somehow will get redrawn as per the changed dimensions the screen when a resize happens?
[16:11:19] <bjs> arkanoid: (unless you put that def on the myobj class of course)
[16:11:25] <arkanoid> classes is the only way to acheive this call syntax?
[16:12:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:12:36] <bjs> arkanoid: well sort of,  `obj.x` is attribute lookup and the class defines what the attributes are and how to look them up, so really all the `myobj.x` looking syntax is down to the class
[16:12:56] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[16:13:13] <arkanoid> this is a show stopper for procedural programming in general
[16:13:20] <bjs> arkanoid: it is?
[16:13:47] <arkanoid> chained calls are like x(y(z())) instead of z.y.x
[16:14:12] <arkanoid> yeah, it is a show stopper
[16:14:23] <bjs> arkanoid: I don't see why
[16:14:52] <bjs> this is a feature of object-orientated programming not procedural, the original procedural languages didn't even have this syntax.
[16:15:06] *** Joins: besnn (~besnn@dynamic-adsl-94-34-136-225.clienti.tiscali.it)
[16:15:07] <bjs> and you can always just write things in classes if you want the syntax.
[16:15:28] <Repiphany> arkanoid: https://bpa.st/V4ZA
[16:16:47] <arkanoid> Repiphany: would be good if the whole script could be handled this way
[16:17:00] <arkanoid> I'll try to hack around
[16:17:21] <bjs> arkanoid: I mean that is what classes do,  why do you want to avoid classes? It sounds like your program isn't procedural at all if you're thinking in terms of objects and method calls
[16:17:36] <The-Compiler> arkanoid: I don't follow. x(y(z())) is different from z.y.x, and method call syntax is different from that as well
[16:17:43] <The-Compiler> arkanoid: What's your goal?
[16:17:45] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[16:18:12] <besnn> what are you trying to do?
[16:18:26] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[16:19:06] *** Joins: Auron (Auron956@user/auron)
[16:19:39] <rendar> let's say i'm implementing some string commands with my python application.. it parses a string, read commands and parameters and call functions with those parameters, appropriately converted
[16:19:42] <arkanoid> The-Compiler: I exploring procedural programming in python with a better syntax, as I tend to avoid OO whenever possible (experience has though me this)
[16:19:48] <rendar> pretty basic, until now
[16:19:54] <bjs> arkanoid: I mean you can't avoid OO in Python. Since everything is an object
[16:19:59] <rendar> but let's consider some of those functions are 'async' functions
[16:20:36] <rendar> so, if i have the string `get_website a; save_data_into_db;`  i will have 2 async commands, basically
[16:20:48] <besnn> should have gone for perl/raku/awk if you're avoiding OO
[16:21:11] <besnn> python is especially nice for OO
[16:21:37] <rendar> one solution would be telling the interpreter to wait each command, right?
[16:21:48] <rendar> (wait for each command completion)
[16:22:06] <bjs> rendar: I guess? I'm not really sure where your question is going
[16:22:45] <rendar> bjs: well, my question is simple: with normal sync functions, an interpreter is pretty trivial, for command in commands: execute(command)`
[16:22:52] <rendar> but with async functions, it all changes
[16:22:55] <nedbat> arkanoid: can you give us an example of some code you would write in z.y.x style?
[16:23:04] <bjs> rendar: does it all change?
[16:23:27] <bjs> rendar: I mean if your interpreter has the same behaviour of just executing things sequentially then nothing really changes
[16:23:38] <rendar> bjs: yes because let's consider this: `get_website a; save_data_into_db;` -- in normal function there is only one order of execution, data will be downloaded from the website and AFTER stored into db
[16:23:53] <bjs> rendar: yes that is what ; means
[16:24:01] <rendar> yes
[16:24:21] <besnn> checkmate
[16:24:26] <rendar> bjs: you mean that for every ';' it reads, the interpreter must WAIT that the coroutine has been completed...
[16:24:36] <bjs> rendar: well yeah, that is what ; should mean
[16:24:52] <arkanoid> bjs: I'm already programming in other languages that let me write better procedural code with that syntax. But as an early python programmers (started when it was 1.x) and moved to other world, I'm now exploring if it's possible to get the desired syntax as I do see that there are many interesting libraries out there that I want to use, and that I'm already using in another languages via foreign
[16:24:53] <arkanoid> function interface
[16:25:01] <bjs> rendar: I assume you want to write an interpreter that isn't just "async" but has an entirely new operator to do things concurrently, like "get_website a || save_data_into_db"
[16:25:18] <rendar> bjs: far enough! the point is that with this obtuse design i will not benefit from async operations
[16:25:51] <bjs> rendar: which design
[16:25:51] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 265 seconds)
[16:26:06] <rendar> bjs: the interpreter which "flattens" everything to sync commands
[16:26:15] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 272 seconds)
[16:26:15] <bjs> rendar: did you miss my second comment about || ?
[16:26:27] <rendar> yes
[16:27:09] <rendar> bjs: `get_website a b c d e f; save_data_into_db`
[16:27:40] *** Joins: milkshake (~milk@60.53.71.104)
[16:27:51] *** Joins: emika1 (~emika@185.207.249.223)
[16:28:01] <rendar> one possible solution would be this, website will be readed concurrently, then it waits with ';' that all data is gathered, then is stores into the db
[16:28:02] <nedbat> arkanoid: can you give us a concrete example of some z.y.x code?
[16:28:06] <rendar> does this sounds ok to you?
[16:28:15] <bjs> rendar: okay so my point is that taking a normal interpreter (with ";") then just making everything use async/await is fairly easy
[16:28:18] *** Quits: emika (~emika@83.136.182.196) (Ping timeout: 240 seconds)
[16:28:18] *** emika1 is now known as emika
[16:28:29] <nedbat> arkanoid: that way we could help with the details of how to make it work in Python
[16:28:34] <arkanoid> nedbat: is a language that supports it, or in pseudo-python?
[16:28:42] <bjs> rendar: but isn't the same as writing an interpreter for a _different language_ with a new operator to concurrently compose things
[16:28:47] <nedbat> arkanoid: let's try some pseudo-python
[16:28:48] <arkanoid> s/is/in
[16:28:51] <arkanoid> k
[16:29:32] <bjs> rendar: (often this "concurrently compose" operator is called || but I guess you can call it what you want)
[16:30:13] <rendar> bjs: ok yes, but we must concur (pun intended) that there are some commands that cannot be concurrently run, because if the command "store_data_into_db" must gather ALL data from ALL websites, it must wait all get_website commands to be executed.. but i think that's true also in a normal asyncio application, there are some function that must wait...
[16:30:31] <bjs> rendar: well that's a question about the language you want to interpret
[16:30:40] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 272 seconds)
[16:31:05] <bjs> writing the interpreter to run them concurrently from there is not hard (e.g. if your interpreter uses asyncio then asyncio already gives you create_task() and gather() and other mechanisms to do that.)
[16:31:17] <rendar> uhm
[16:32:26] <rendar> bjs: i was thinking: "get_website [a,b,c,d,e] > store_data_into_db" will call `await get_website("a") ... await get_website("b" ... and so on` and then store all those data into a queue called "store_data_into_db"
[16:32:50] *** Joins: ppw (~ppw@user/ppw)
[16:33:07] <bjs> rendar: okay, I'm not sure where this is going.  It sounds like you're still trying to design the language you want to write the interpreter for?
[16:33:15] <bjs> Once you've decided what to do it should be fairly straightforward to do it.
[16:33:51] <ppw> is there a terse expression for retrieving the minimum key for a specified value in a dict?
[16:34:04] <rendar> lol no! this is going here: there are some commands that are not async, by nature! e.g. with "status;" i want *immediately* print a status of something, so i'd need to mix async functions with normal ones... :(
[16:34:33] <bjs> rendar: why is that a problem? if your program is async you can just call functions normally in your interpreter to do the sync ones
[16:34:56] <nedbat> ppw: min(k for k,v in the_dict.items() if v == the_value)
[16:34:57] <bjs> rendar: again this sounds like a language design question to distinguish between the sync and async functions
[16:35:05] <nedbat> ppw: but note this iterates the entire dict
[16:35:17] <arkanoid> nedbat: here's a simple example https://termbin.com/7wku
[16:35:25] <nedbat> ppw: and will fail if the value isn't in the dict.
[16:35:51] <bjs> arkanoid: it seems weird to me because I would call that a very object-orientated way of writing things
[16:35:58] <rendar> bjs: no no, the problem is in python! i mean.. the interpreter must *choose* if the next function to call is async (so it has to await it) or sync..
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:14] <bjs> rendar: you're literally describing a language design question :P
[16:36:27] <rendar> lol
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:00] <rendar> bjs: do you think that the language must mark itself the async functions? e.g. "-get_website a b c; exit", `-` means: this function is async
[16:37:03] <bjs> rendar: there is no problem *in Python* here, you parse your language and you have to know whether the bit of code in your language is supposed to be sync or async. That's a question about the design of your language
[16:37:16] <bjs> rendar: once you know, then you can tell Python to await or not
[16:37:21] <arkanoid> bjs: applying first argument automatically is a procedural thing before OO took it for encapsulation
[16:37:24] <ppw> thanks nedbat
[16:37:45] <rendar> bjs: ok i see your point, you think that the interpreter must check a dict or some data, to check if that particular function has the async flag
[16:37:58] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:38:03] <bjs> arkanoid: the first language I can think that did that was Object Pascal :P
[16:38:09] <nedbat> arkanoid: I wouldn't recommend this, but:  https://gist.github.com/ecf27f3eb9060ddf843710e2a7451e26
[16:38:10] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[16:38:34] <nedbat> arkanoid: btw, you are calling it procedural, but this style seems much more functional to me.
[16:38:42] <bjs> that too
[16:38:46] <nedbat> arkanoid: what do you do for functions of more than one argument?
[16:39:16] <bjs> rendar: I mean sure your language might have a set of builtins and your interpreter would just _know_ which of the builtins were async or sync (because you made them),  and then you can know what to do
[16:39:19] <bjs> rendar: that is one way
[16:39:19] <jinsun> arkanoid: maybe you are looking for soething like this https://github.com/sspipe/sspipe
[16:39:51] <arkanoid> nedbat: well, procedural and functional stem from same school. Yes I do agree that that syntax is also seemingly functional, but not required
[16:39:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:40:01] <bjs> rendar: is there a good reason to not just make everything async (in the interpreter)?
[16:40:20] <bjs> rendar: some of the functions might just ... not await
[16:40:33] <rendar> bjs: uhm
[16:40:48] *** Leonarbro_ is now known as Leonarbro
[16:40:48] *** Quits: relationalalgebr (~relationa@117.216.30.224) (Ping timeout: 272 seconds)
[16:40:50] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[16:40:50] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:41:28] <rendar> bjs: wtf? how can you do that? i mean.. consider "status;" that just has to print something: `async def print_status(): print(...) ..await?!? what?`
[16:41:44] *** Joins: ferz (~ferz@93.48.251.229)
[16:41:46] <arkanoid> nedbat: thanks for the Ark class, interesting hack!
[16:41:53] <bjs> rendar: print something?  but sure that `async def` looks fine
[16:41:59] <nedbat> arkanoid: notice line 13 though :(
[16:42:04] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 272 seconds)
[16:42:14] <bjs> rendar: and `await print_status()` runs it and prints the result
[16:42:23] <nedbat> arkanoid: if you use that code, do not put my name on it, I'm not taking the blame :)
[16:42:24] <rendar> bjs: point is every async function MUST contain await inside their body, if the function only prints... what awaits?!
[16:42:36] <bjs> rendar: why must there be an await?
[16:42:38] <bjs> who said that
[16:42:47] <rendar> my book
[16:42:53] <arkanoid> nedbat: can't the __getattr__ of Ark be hacked to find the print function too?
[16:43:12] <nedbat> arkanoid: before fixing that, we should talk about functions of more than one argument
[16:43:14] <bjs> rendar: which book is that
[16:43:52] *** Joins: lpapp_ (~lpapp@84.66.225.222)
[16:44:05] <arkanoid> nedbat: here we're entering the functional world, but python does partial and closures, so should not be a problem apart
[16:44:09] <arkanoid> from syntax
[16:44:18] <lpapp_> hi, does pyautogui.locateOnScreen('foo.png') or pyautogui.click('foo.png') work for anyone?
[16:44:19] <rendar> bjs: uhm, Fluent Python, but maybe i have misinterpreted when he said that, because that book is from older python not supporting async/await keywords
[16:44:52] <nedbat> arkanoid: overall, my recommendation is not to try to make Python look like a different language. Why use Python at all in that case?
[16:45:09] <rendar> basically he said that every generator, to be considered a generator, must have "yield" keyword in the body function, otherwise it will be a normal function and not a generator, is this right?
[16:45:16] <bjs> rendar: yes that is right
[16:45:20] <lpapp_> I took a screenshot of my Mac search icon as foo.png, but both of those methods would return a None object.
[16:45:42] <arkanoid> nedbat: yeah I'm already realizing this. Ad you may have notice, this is a "comeback" from an old school python programmer. I just want to peep if there's "something new"
[16:45:44] <rendar> bjs: then he extended that definition to coroutines, if they hadn't 'yield from' they are not coroutines
[16:46:02] <bjs> rendar: well you couldn't use @asyncio.coroutine or whatever it was called yeah
[16:46:04] <nedbat> arkanoid: there is nothing new in Python that makes this more possible.
[16:46:09] <bjs> (or well if they didn't have any yield in them)
[16:46:25] <bjs> rendar: but even then you can say `if False: yield` or something so you can still make everything a coroutine
[16:46:36] <rendar> i see
[16:46:44] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[16:46:45] <lpapp_> oh, I see, maybe because it is a different app, if I capture something from the terminal where I run the python interpreter, then it works.
[16:46:47] <arkanoid> sure, no problem. I'd like to thank you for the answer
[16:46:51] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.2)
[16:46:53] <rendar> bjs: then i thought that if you don't use 'await' inside a function, it won't be a coroutine
[16:46:55] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:47:15] <bjs> rendar: but my point is it doesn't really matter, you can just make everything an `async def` and then the question is just where do you put `await`s
[16:47:27] *** Joins: anddam (~anddam@user/anddam)
[16:47:57] <arkanoid> the day python will become more procedural and more functional it will be a better python! But this day will never arrive :)
[16:48:17] <bjs> arkanoid: Python will never get the syntactic feature you're asking for here
[16:48:35] <bjs> because well, it has a different more structured way to do it: classes.
[16:48:46] <rendar> bjs: but i don't want to include 'if False: await asyncio.sleep(2)` :(
[16:48:53] <bjs> rendar: well you don't have to
[16:49:04] <arkanoid> sure thing, but I skipper py2 and we're almost py4 so it was worth asking :)
[16:49:10] <bjs> rendar: because you don't need an `await` in an `async def`
[16:49:17] <rendar> bjs: ok ok, i'll study more and check further into that, having eveything async is not bad at all
[16:49:42] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:49:52] <bjs> rendar: and even if you had to do that it doesn't matter because it doesn't appear in the language you're interpreting anywhere (it's a hidden implementation detail) and would only appear in the implementation of a few builtin operations
[16:50:09] *** Joins: morteza24 (~morteza24@37.98.82.18)
[16:50:11] <bjs> so I think you're worrying far too much about a tiny little implementation detail deep in the interpreter before you've even got the language you want to interpret down
[16:50:59] <rendar> ok
[16:51:14] <rendar> i have to read a ~150 pages book about asyncio
[16:51:29] <bjs> rendar: no
[16:51:29] <rendar> problem with the book Fluent Python is that async/await were not available back then
[16:51:39] <rendar> bjs: no? i want to do that!
[16:51:43] <optimant> does marking all calls async mean they will necessarily be spawned into new threads? wonder if you’d end up with non thread safe code that stomps on some shared fields or external state
[16:51:56] <bjs> optimant: async is nothing to do with threads
[16:51:56] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[16:52:05] <bjs> they are separate concerns
[16:52:58] *** Joins: andikadinata (~andikadin@116.206.42.105)
[16:52:59] *** Joins: y1n (~y1n@84-115-64-184.wifi.dynamic.surfer.at)
[16:53:12] *** Joins: audiocat (~audio@2603-8081-1800-00ad-d152-b01b-7c0c-e089.res6.spectrum.com)
[16:54:13] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[16:54:14] <optimant> thx. just scrolling back over my cup of coffee and imagining pure chaos ensuing.
[16:54:42] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:57:03] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 276 seconds)
[16:57:47] *** Joins: alnr1 (~alnr@38.125.204.99)
[16:58:00] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[16:59:40] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:01:08] *** Joins: pnoud (~pnoud@user/pnoud)
[17:01:08] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[17:02:01] <graingert> Anyone know how to move a list onto https://mail.python.org/mailman3/lists/?all-lists ?
[17:02:31] <graingert> The twisted mailing list is going to be deleted in a few months because the hosting provider got removed
[17:02:48] <graingert> EWDurbin: ^
[17:03:06] *** Quits: andika (~andika@ec2-35-170-248-20.compute-1.amazonaws.com) (Remote host closed the connection)
[17:03:14] *** Quits: ppw (~ppw@user/ppw) (Quit: ppw)
[17:03:32] <jochum> ohh twisted, I learned a lot from twisted :)
[17:03:57] <jochum> Perspective Broker :)
[17:04:16] <famubu> I twisted my mind with twisted.. (Just kidding. I haven't even used twisted)
[17:04:27] *** Joins: rsx (~dummy@ppp-188-174-159-68.dynamic.mnet-online.de)
[17:04:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:04:38] <SamuelMarks> hi
[17:05:30] <SamuelMarks> `sorted` accepts `key` argument. How do I get equivalent for `frozenset`? - I'm uniquifying a sequence
[17:06:03] *** Quits: andikadinata (~andikadin@116.206.42.105) (Quit: The Lounge - https://thelounge.chat)
[17:06:27] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[17:06:50] <Peng> Write a for loop, maybe
[17:07:05] <graingert> SamuelMarks: more_itertools.unique_everseen
[17:08:35] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:08:55] *** Joins: ano (~weechat@user/ano)
[17:09:03] <SamuelMarks> nvm I moved the key func to a preprocessing step and have a postprocesing step to turn it back
[17:09:10] <SamuelMarks> (all on one line using functional programming)
[17:09:32] <SamuelMarks> graingert - I'm avoiding external dependencies for maximum portability
[17:09:54] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:11:38] *** Joins: Pickchea (~private@user/pickchea)
[17:13:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[17:13:52] *** Joins: cdown (~cdown@89.32.122.5)
[17:15:56] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[17:15:58] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:17:30] *** Joins: adamts (~Adam@user/mysteryblokhed)
[17:18:31] *** Joins: vinnix (~vinnix@user/vinnix)
[17:20:42] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[17:20:55] <vinnix> hey folks, I'm learning how to plot charts using pandas and matplotlib; I'm facing a challange here.... lets say that I have 4 lines: ['1501', '0.5', '0.3','0.02']
[17:21:13] *** Joins: andika (~andika@116.206.42.105)
[17:21:21] <vinnix> is there any technique to "split" the chart, so I can have good resolution/visualization for the small/tiny numbers in comparsion with the large one?
[17:21:44] <vinnix> in this case, I'm using a bar chart
[17:22:08] *** Quits: ayrus (~ayrus@user/ayrus) (Quit: system has gone to sleep. ZZZzzz…)
[17:22:49] *** Parts: lpapp_ (~lpapp@84.66.225.222) ()
[17:23:16] *** Joins: ice9 (~ice9@user/ice9)
[17:24:11] *** Joins: andika9 (~andika@116.206.42.84)
[17:24:12] *** Joins: Atque (~Atque@user/atque)
[17:24:17] <optimant> vinnix: would a secondary axis work for this: https://matplotlib.org/stable/gallery/subplots_axes_and_figures/secondary_axis.html
[17:24:41] *** Quits: andika (~andika@116.206.42.105) (Read error: Connection reset by peer)
[17:24:41] *** andika9 is now known as andika
[17:26:00] *** Quits: andika (~andika@116.206.42.84) (Client Quit)
[17:26:46] *** Joins: andika (~andika@116.206.42.84)
[17:28:13] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[17:29:06] *** Quits: andika (~andika@116.206.42.84) (Client Quit)
[17:29:13] <rendar> how to properly run a python process in debug mode? i mean, there are several variables such as PTHONASNCIODEBUG=1 or PYTHONTRACEMALLOC=1 to set? there are more? and what about python --flags to specify? and, what about for release processes? would be wise to specify the contrary of all of those variables, e.g. PYTHONTRACEMALLOC=0 ?
[17:29:54] *** Joins: andika (~andika@116.206.42.84)
[17:31:39] *** Quits: andika (~andika@116.206.42.84) (Client Quit)
[17:32:08] *** Quits: famubu (~famubu@user/famubu) (Ping timeout: 252 seconds)
[17:33:23] <vinnix> optimant: I see what you mean by secondary axis, maybe I didn't get what you mean or how to use the secondary axis in this case. here in my case, those values represent the same metric and unit
[17:33:39] <vinnix> optimant: Megabytes in this case.
[17:35:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 276 seconds)
[17:35:25] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:37:34] <vinnix> it's like I need one scale for 0, and another scale for 1, 2, and 3.
[17:38:02] <vinnix> (altought, they represent the same units)
[17:38:51] <vinnix> odd thing is that I don't know, if in the future, I will have other lines, like an 9th line, that will also have the need to be out the scale)
[17:39:48] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[17:40:02] *** Joins: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07)
[17:40:18] *** Quits: jazzy (~jaziz@2600:380:c145:1176:2597:c2d0:40d3:bffe) (Ping timeout: 240 seconds)
[17:40:21] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[17:40:24] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:40:31] *** Quits: Elon_Satoshi (~elonsatos@172.86.186.171.adsl.inet-telecom.org) (Ping timeout: 258 seconds)
[17:41:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:41:21] <SamuelMarks> Hmm, are Python object memory addresses no longer guaranteed after a deepcopy? - Python 3.10 is giving different results to 3.8
[17:41:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[17:42:39] <bjs> SamuelMarks: what do you mean?
[17:42:55] <bjs> SamuelMarks: surely if you copy you get new objects with different addresses?  why does the address matter?
[17:43:03] <bjs> SamuelMarks: what kind of "different result"?
[17:45:51] <SamuelMarks> bjs - Expected `res = a + b # type: <ast.Name object at 0x1098532e0>` got `res = a + b # type: <ast.Name object at 0x10a31b160>`
[17:46:03] <SamuelMarks> Whereas on 3.8 that error doesn't happen
[17:46:16] <SamuelMarks> (and yes, I know it should be the .id of Name)
[17:46:22] *** Joins: d3sync (~d3sync@62.1.243.19.dsl.dyn.forthnet.gr)
[17:46:31] <Yhg1s> SamuelMarks: they are not guaranteed *in any circumstance*.
[17:46:33] <bjs> SamuelMarks: you're relying on the actual number there in the test?  I'm not sure what this "expected" is
[17:46:55] <SamuelMarks> Well it's worked to date in 3.6, 3.7, 3.8, 3.9
[17:46:58] <bjs> SamuelMarks: copying doesn't really affect anything here, that number is really just totally arbitrary and there's no guarantees about what it is
[17:47:03] <Yhg1s> SamuelMarks: a deepcopy of an object may give you the same object, or a new object.
[17:47:03] <bjs> SamuelMarks: what is "it" exactly?
[17:47:06] <SamuelMarks> on macOS, Windows, and Linux
[17:47:17] <bjs> SamuelMarks: like what is your actual test?
[17:47:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-d152-b01b-7c0c-e089.res6.spectrum.com) (Ping timeout: 272 seconds)
[17:47:24] <Yhg1s> SamuelMarks: it worked by accident. It changed. It no longer works by accident.
[17:48:33] <SamuelMarks> https://github.com/offscale/cdd-python/blob/b105203/cdd/tests/test_doctrans_utils.py#L33 on https://github.com/offscale/cdd-python/runs/3213864077
[17:48:50] <SamuelMarks> Actually it used to work on 3.6, 3.7, 3.8, 3.9, 3.10; not sure what's changed (3.9 isn't even working anymore)
[17:49:29] <SamuelMarks> Yhg1s - Oh as in a new CPython minor release changed things?
[17:51:06] <bjs> SamuelMarks: Something seems odd about this test, what is that `# type: <ast.Name ...>` part?
[17:52:06] <Yhg1s> SamuelMarks: no, as in the test only works by accident, and *any circumstance changing* could have broken it.
[17:52:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[17:53:03] <bjs> SamuelMarks: is this test relying on == between deepcopy'd ast.AST objects?
[17:53:05] <bjs> that just seems broken.
[17:53:26] <SamuelMarks> bjs - https://github.com/offscale/cdd-python/blob/b105203/cdd/tests/mocks/doctrans.py#L110 https://github.com/offscale/cdd-python/blob/b105203/cdd/tests/mocks/doctrans.py#L36
[17:53:53] <SamuelMarks> bjs - no it uses `cmp_ast` from `meta` (with a slight edit and then its merged into my base)
[17:54:23] <bjs> SamuelMarks: but what is the type comment?  it looks like it's a type annotation like thing `x = 42 # type: int`  but then the actual type is weird it looks like the repr of a random ast node
[17:54:26] <bjs> rather than a type
[17:54:41] <SamuelMarks> Yes as I said I should be calling `.id` on it
[17:54:50] <SamuelMarks> But that's not the issue I'm bringing up here
[17:55:40] <Yhg1s> SamuelMarks: what is '.id'?
[17:56:09] <bjs> oh the ast.Name id
[17:56:36] <bjs> SamuelMarks: I mean the issue seems to be that your test is broken and isn't actually checking the actual type names are the same but that the AST nodes have the same identity
[17:56:48] *** Quits: y1n (~y1n@84-115-64-184.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[17:56:55] *** Joins: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce)
[17:57:52] *** Joins: y1n (~y1n@84-115-64-184.wifi.dynamic.surfer.at)
[17:58:01] <SamuelMarks> bjs - Sure but again this doesn't say why it's failing now considering the last commit (15 Jun) that test didn't fail on 3.6, 3.7, 3.8, 3.9, 3.10
[17:58:30] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[17:58:47] *** Joins: thiras (~thiras@user/thiras)
[17:59:30] <bjs> SamuelMarks: well the obvious question is maybe your commit broke it?
[17:59:34] <SamuelMarks> (on macOS, Windows, Linux)
[17:59:44] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:01:13] *** Joins: dg_dg (~dg_dg@84.252.92.7)
[18:01:25] <Yhg1s> SamuelMarks: I'm not sure how I can put this differently. If you're relying on the id() of things, or relying on copy.deepcopy() copying (or not copying), there are very many ways in which things can break. Many of which don't even involve Python, like the OS's memory allocator.
[18:02:02] <bjs> SamuelMarks: but yeah if your test is broken and is checking that the repr() of the ast.Name is the same (and therefore the id()) rather than checking the .id of the ast.Name object is the same then well, there's no guarantees about the id() of objects
[18:02:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:02:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[18:02:56] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:02:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:03:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:04:07] <vinnix> optimant: that actually helped. thanks!
[18:04:23] *** Joins: audiocat (~audio@2603-8081-1800-00ad-e7c0-e36e-6804-a088.res6.spectrum.com)
[18:04:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:06:42] <SamuelMarks> bjs - Yhg1s - Darn. Ok well thanks for the info will change the test
[18:06:59] <bjs> SamuelMarks: why "Darn" ?  I mean your test is clearly broken even if the id was guaranteed
[18:07:17] <bjs> because your test is just asserting the wrong thing
[18:07:18] <bjs> ?
[18:07:39] <SamuelMarks> Sure but I might want to test the ids of things later on in legitamate scenarios and now I'm being told not to
[18:08:20] <bjs> SamuelMarks: the point is not that you're being told not do it in those legitimate scenarios but that there _are no_ legitimate scenarios you can rely on the id()
[18:08:29] <bjs> the only guarantee the id has is that if `x is y` then `id(x) == id(y)`
[18:08:36] <Yhg1s> well, there are, but not when copying things.
[18:10:51] *** Joins: nyah (~nyah@90.221.186.180)
[18:11:51] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[18:14:03] <SamuelMarks> mmm
[18:14:58] *** Joins: jazzy (~jaziz@2600:380:c145:1176:2597:c2d0:40d3:bffe)
[18:16:45] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:16:56] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[18:17:16] *** Joins: marduk (~marduk@172.58.187.213)
[18:17:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:17:48] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:18:21] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:e131:b31f:a53c:f926)
[18:21:51] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[18:23:01] *** Joins: supernovah (~supernova@mail.ijk.nz)
[18:23:20] <supernovah> this server is really irritating me with its logging out
[18:23:44] <The-Compiler> supernovah: no issues here
[18:24:04] <supernovah> I have this package that has a setup.pu (from setuptools) that provides two entry_points, which is builds/installs to site-packages and I want to be able to invoke one of them without building it and installing it every time
[18:24:16] <supernovah> also so I can connect a debugger to it (because I don't know how to do this with a .exe)
[18:24:49] <supernovah> so I ran python setup.py develop which is what setuptools docs say to do, but I can't seem to invoke it
[18:25:06] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[18:25:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[18:26:17] *** Quits: supernovah (~supernova@mail.ijk.nz) (Quit: leaving)
[18:27:25] *** Quits: audiocat (~audio@2603-8081-1800-00ad-e7c0-e36e-6804-a088.res6.spectrum.com) (Remote host closed the connection)
[18:27:26] *** Joins: supernovah (~supernova@mail.ijk.nz)
[18:27:40] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[18:27:43] <supernovah> I don't know what messages got through and what didn't...
[18:28:03] <supernovah> how do I invoke a setuptools package in develp mode, via one of its entry points?
[18:29:12] <arkanoid> from numbers import Number; def addOne(a: Number) -> Number: return a+1 raises error Unsupported operand types for + ("Number" and "int")
[18:29:12] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[18:29:32] *** kostkon_ is now known as kostkon
[18:29:37] <The-Compiler> arkanoid: what's 'numbers'?
[18:29:58] <arkanoid> The-Compiler: https://www.python.org/dev/peps/pep-3141/
[18:31:29] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:47ee:5b65:7103:9641)
[18:31:41] <The-Compiler> arkanoid: so you get that at runtime? Where's that Number object coming from, given that the numbers module only has abstract base classes?
[18:32:15] <supernovah> is it possible to invoke a setuptools package in develop mode via one of its entry points? when I build it it places the entry points as scripts in the site-packages folder and scripts folder but they are windows PE binaries and I can't connect a debugge to them
[18:32:22] <arkanoid> assert addOne(2) == 3
[18:32:24] <supernovah> essentially I just want to debug a setuptools package somehow
[18:32:28] <arkanoid> literal 2
[18:33:23] <The-Compiler> arkanoid: can you show the full error?
[18:34:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[18:34:38] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[18:34:48] <arkanoid> The-Compiler: https://mypy-play.net/?mypy=latest&python=3.10&gist=efbcdb23e6b07745b1a991f772342c6c
[18:34:49] <Wulf> How can I trick python into making "import foo.bar" a noop without creating a bar.py file?
[18:35:04] <The-Compiler> arkanoid: ah, you mean mypy, and not Python which raises at runtime
[18:35:34] *** y1n is now known as y1n-v1
[18:35:53] <bjs> arkanoid: I don’t think mypy (and typing in general) understands the Numbers hierarchy
[18:36:34] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[18:36:39] <arkanoid> sorry, I'm coming from python1, I'm just playing around with new features. Don't know how mypy and python goes well together. I see that Guido owns both and part of the typing syntax is of python3 itself
[18:36:49] <The-Compiler> arkanoid, bjs: https://github.com/python/mypy/issues/3186
[18:36:56] <The-Compiler> arkanoid: Guido owns neither really
[18:37:09] <The-Compiler> but of course he was/is heavily involved in both
[18:37:37] <arkanoid> yeah, wathever :D
[18:38:11] <arkanoid> lol int is not a Number
[18:38:11] <supernovah> I tried also python -m pdb -c continue .\src\cli\exporter\core.py which has the entry point in it, but it complains that a module named src\cli\exporter\wiki\passives isn't available - why can't it find this module when it builds fine with python setup.py build ?
[18:38:18] *** y1n-v1 is now known as y1n-v2
[18:39:20] <supernovah> this module is also a part of the original package hmmm
[18:39:22] <bjs> arkanoid: the numbers library is basically never used
[18:39:26] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 256 seconds)
[18:39:26] <supernovah> how do people usually debug a python package?
[18:39:43] <The-Compiler> I've never heard of that numbers module :D
[18:39:44] <arkanoid> bjs: how do you mypy a function that gets a number ad adds 1 to it?
[18:39:56] <bjs> arkanoid: annotate it as float
[18:40:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bcb1-335a-dddc-7a9b.res6.spectrum.com)
[18:40:21] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:40:42] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[18:40:57] <arkanoid> :|
[18:41:11] <supernovah> do people just not debug python software usually?
[18:41:29] *** dfch_ is now known as dfch
[18:41:35] <The-Compiler> supernovah: pdb or IDE debuggers (VS Code or PyCharm for example) work pretty well
[18:41:55] <supernovah> I have vscode running but I need to generate a launch.json... any ideas?
[18:42:08] *** Quits: y1n-v2 (~y1n@84-115-64-184.wifi.dynamic.surfer.at) (Quit: Leaving)
[18:42:12] <supernovah> you can't invoke this package on the command line without building it first, and when you do it becomes a windows pe binary
[18:42:19] *** Jefren2 is now known as Jefren
[18:42:23] *** Joins: y1n-v2 (~y1n@84-115-64-184.wifi.dynamic.surfer.at)
[18:42:33] <supernovah> the tldr is it its a setuptools package, and it has two entry points - those become binaries in the python\scripts folder
[18:42:47] *** Quits: y1n-v2 (~y1n@84-115-64-184.wifi.dynamic.surfer.at) (Remote host closed the connection)
[18:42:54] <supernovah> I want to invoke one of those entry points with command line arguments, and debug it in vscode somehow
[18:43:27] <bjs> arkanoid: what’s wrong with that
[18:43:31] *** Joins: y1n (~y1n@84-115-64-184.wifi.dynamic.surfer.at)
[18:43:36] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[18:43:53] <arkanoid> that means that mypy doesn't support generics even for numbers
[18:44:03] <The-Compiler> supernovah: surely you should be able to invoke it from a development install somehow?
[18:44:42] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[18:44:50] <arkanoid> but mypy website says: Mypy has a powerful, modern type system with features such as bidirectional type inference, generics, callable types, abstract base classes, multiple inheritance and tuple types.
[18:45:02] <supernovah> The-Compiler: I ran python setup.py develop and it said it installed
[18:45:24] *** Joins: dbg (~dbg@user/dbg)
[18:45:57] *** Quits: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f) (Quit: Leaving)
[18:46:05] <supernovah> then I created a launch.json with the target of Python: current file and chose the file with the entry point - but it fails to find any of the modules in the package
[18:47:14] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:47:31] <supernovah> I also ran of course, pip3 install -e .[full] and it says missing modules which I previously installed and ran
[18:50:49] *** Quits: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce) (Remote host closed the connection)
[18:51:01] *** Joins: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce)
[18:51:17] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:51:21] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[18:51:54] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 272 seconds)
[18:52:07] <supernovah> I tried it with pip too, same result, tried it without -e and same result
[18:52:25] *** Joins: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f)
[18:53:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:54:13] *** Joins: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at)
[18:55:11] <agronholm> arkanoid: I don't quite understand the problem here
[18:55:18] *** Joins: heco (~redrum@user/redrum88)
[18:56:30] <supernovah> mm this is like my fourth day in a row trying to get this stuff to wwork
[18:57:00] *** Quits: y1n (~y1n@84-115-64-184.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[18:57:16] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[18:57:55] <arkanoid> I've to use the Union type
[18:58:09] *** Quits: milkshake (~milk@60.53.71.104) (Quit: Leaving)
[18:58:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[18:59:00] *** Joins: Hackerpcs (~user@user/hackerpcs)
[18:59:02] <The-Compiler> arkanoid: if an argument is annotated as float, you can pass an int as well: https://www.python.org/dev/peps/pep-0484/#the-numeric-tower
[18:59:30] *** Quits: kilitary (~kilitary@kilitary.ru) (Excess Flood)
[19:00:03] *** Joins: akk (~akk@75.161.157.26)
[19:00:10] <arkanoid> The-Compiler: it's not about making mypy happy, it's just that it's a wrong assumption to pass an int where a float is expected
[19:00:15] <arkanoid> much better a union type
[19:01:21] <The-Compiler> arkanoid: is there something you can do to a float but not to an int?
[19:01:59] *** Joins: pnoud (~pnoud@user/pnoud)
[19:02:02] <arkanoid> yeah, add 0.1
[19:02:23] <The-Compiler> arkanoid: >>> 1 + 0.1
[19:02:25] <The-Compiler> 1.1
[19:03:01] *** Joins: jay-m126_ (~jay-m@154.72.163.30)
[19:03:13] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[19:03:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:03:45] <supernovah> wow vscode is using the wrong python version of course
[19:04:08] <arkanoid> The-Compiler: that's an implicit cast to float
[19:04:54] <The-Compiler> arkanoid: so? If an argument is a float, it's entirely valid to pass an int in instead.
[19:05:29] <arkanoid> this is how the plane fails
[19:05:50] *** Joins: kill (~killown@user/killown)
[19:05:52] <arkanoid> union type :D
[19:06:28] *** Quits: jazzy (~jaziz@2600:380:c145:1176:2597:c2d0:40d3:bffe) (Ping timeout: 272 seconds)
[19:06:35] <kill> how can we measure the length of a text in pixels?
[19:07:09] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[19:07:24] <mefistofeles> kill: I suppose you are getting it as an image?
[19:07:37] <kill> mefistofeles, gettting as string
[19:07:55] <kill> text = 'I suppose you are getting it as an image'
[19:08:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:08:43] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[19:08:51] <mefistofeles> kill: ok, so I guess it depends on the font you are using and the size/scaling among other things, probably... such as the DPI
[19:09:01] <kill> I want to limit the text to 600-pixel
[19:09:18] <The-Compiler> kill: 600 pixel where? What's your goal?
[19:09:26] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[19:09:32] <kill> The-Compiler, seo title lenght limit
[19:09:54] *** Quits: d3sync (~d3sync@62.1.243.19.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[19:10:19] <kill> The-Compiler 600 pixel in google search
[19:10:48] <kill> instead of using 60chars limit I would like to use the pixel width method, because sometimes I could use 61 or even 63
[19:10:56] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:11:15] <The-Compiler> kill: if the limit is indeed 600px, it depends on many things, e.g. the font and font size
[19:11:28] *** Quits: rando25892 (~sthk@user/rando25892) (Ping timeout: 272 seconds)
[19:11:31] <kill> The-Compiler, looks like google uses pt sans
[19:11:41] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:12:15] <kill> maybe it's not a good thing, if google search results changes for any other font, this code wouldn't work well
[19:13:36] <supernovah> okay I've gotten a lot further
[19:13:44] <supernovah> the variable I want to look at isnt in the local variables list for some reason
[19:13:50] <supernovah> but I can mouse over it and it says "special variables"
[19:13:59] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[19:15:19] <bremner> just switched a cmd.Cmd script to cmd2.Cmd and my completer stopped working. the method is apparently being called and returning a list of strings, but nothing shows up at the prompt. Any hints?
[19:15:54] <bremner> the cmd2 examples all look fancier than the cmd ones, but it doesn't say the old ones won't work
[19:17:32] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[19:17:34] <bremner> oh. my cmd2 is pretty old, lemme dig up the ancient docs
[19:18:25] *** Joins: marduk5 (~marduk@172.58.187.69)
[19:19:11] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[19:20:16] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[19:20:33] *** Joins: eriluc (~eriluc@178.97.132.77.rev.sfr.net)
[19:21:54] *** Quits: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f) (Quit: Leaving)
[19:22:10] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[19:22:12] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[19:22:16] *** Quits: marduk (~marduk@172.58.187.213) (Ping timeout: 265 seconds)
[19:22:31] *** Joins: ThanatosJ (~Thanatos@197.210.65.221)
[19:23:06] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[19:23:24] *** Joins: marduk (~marduk@172.58.190.207)
[19:23:47] *** Quits: marduk5 (~marduk@172.58.187.69) (Ping timeout: 252 seconds)
[19:24:32] *** Joins: marduk4 (~marduk@172.58.187.109)
[19:25:10] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 265 seconds)
[19:26:35] *** Joins: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f)
[19:28:11] *** Quits: marduk (~marduk@172.58.190.207) (Ping timeout: 252 seconds)
[19:28:11] *** marduk4 is now known as marduk
[19:28:54] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[19:29:29] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[19:29:40] *** Quits: morteza24 (~morteza24@37.98.82.18) (Quit: Leaving)
[19:29:46] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[19:30:23] *** Parts: BullHorn (BullHorn@zapdos.randomlab.info) ()
[19:31:07] *** Joins: RBEL (~jigubigul@2001:1c06:19c3:7000:10ef:b427:e2b:b8c7)
[19:32:17] *** Quits: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at) (Quit: Leaving)
[19:32:28] *** Joins: eriluc55 (~eriluc@178.97.132.77.rev.sfr.net)
[19:32:34] *** Joins: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at)
[19:33:01] *** Quits: akk (~akk@75.161.157.26) (Ping timeout: 250 seconds)
[19:33:06] *** Quits: ThanatosJ (~Thanatos@197.210.65.221) (Ping timeout: 240 seconds)
[19:33:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:33:52] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[19:36:00] *** Parts: eriluc (~eriluc@178.97.132.77.rev.sfr.net) (WeeChat 2.8)
[19:36:25] *** Parts: eriluc55 (~eriluc@178.97.132.77.rev.sfr.net) ()
[19:37:06] *** Joins: eriluc (~eriluc@178.97.132.77.rev.sfr.net)
[19:39:18] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 252 seconds)
[19:40:10] <rendar> how to properly run a python process in debug mode? i mean, there are several variables such as PTHONASNCIODEBUG=1 or PYTHONTRACEMALLOC=1 to set? there are more? and what about python --flags to specify? and, what about for release processes? would be wise to specify the contrary of all of those variables, e.g. PYTHONTRACEMALLOC=0 ?
[19:40:34] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:40:41] *** Quits: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at) (Quit: Leaving)
[19:40:55] *** Joins: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at)
[19:41:18] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 272 seconds)
[19:41:59] <Yhg1s> rendar: no, don't set them unless you are debugging. The documentation lists the environment variables and what they enable: https://docs.python.org/3/using/cmdline.html
[19:42:34] <rendar> Yhg1s: i *am* debugging, i want to understand how i have to properly run a debugging process in python
[19:42:58] <rendar> in C/C++, where i come from, there was debug running, and release running, all set with #define NDEBUG 1 (or 0)
[19:43:11] <Yhg1s> rendar: you don't have to set any of them to 'properly debug'. Some of them help with specific kinds of problems, but they don't make it easier to run it in a debugger.
[19:43:39] <rendar> ok
[19:43:39] <Yhg1s> rendar: yes, Python doesn't have the equivalent of NDEBUG.
[19:43:50] <rendar> i see
[19:44:00] <Yhg1s> (well, technically, -O is the equivalent of NDEBUG, but ~nobody runs with -O)
[19:44:04] <bremner> welp, nvm my question. The completer method had a bug not triggered by cmd.Cmd
[19:44:09] <rendar> why?
[19:44:16] <Yhg1s> rendar: there's no point.
[19:44:19] <rendar> ok
[19:44:35] <rendar> Yhg1s: just for the sake of curiosity, where i can learn all python executable flags like that -O ?
[19:44:39] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:45:00] <Yhg1s> rendar: in the documentation I linked.
[19:45:06] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[19:45:07] *** Joins: heco (~redrum@user/redrum88)
[19:45:09] <rendar> thanks a lot
[19:45:14] *** Quits: eriluc (~eriluc@178.97.132.77.rev.sfr.net) (Remote host closed the connection)
[19:47:17] <The-Compiler> Does --with-pydebug do something strange to malloc() calls in extension modules? I'm trying to run PyQt/QtWebEngine with such a Python build and I get "malloc(): invalid size (unsorted)" somewhere deep inside Chromium, which I've never seen happen before
[19:47:29] *** Joins: eriluc (~eriluc@178.97.132.77.rev.sfr.net)
[19:47:58] *** Quits: lawr3nce (~lawr3nce@gateway/tor-sasl/lawr3nce) (Remote host closed the connection)
[19:48:08] <The-Compiler> the stacktrace is quite something: https://paste.the-compiler.org/view/47911e79
[19:48:45] *** Quits: rememberYou (~someone@user/rememberyou) (Read error: Connection reset by peer)
[19:50:06] *** Joins: VimVim (~VimVim@85.191.77.146)
[19:50:33] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[19:50:42] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[19:52:33] *** Quits: finnx (~finnx@99-158-137-5.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[19:53:58] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[19:54:14] *** Joins: y1n-v2 (~y1n@84-115-64-33.wifi.dynamic.surfer.at)
[19:55:50] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[19:55:53] *** Quits: marduk (~marduk@172.58.187.109) (Ping timeout: 272 seconds)
[19:56:42] <The-Compiler> hmm, ok, no, it must be something else I guess
[19:56:48] <The-Compiler> even with a normal build I get the same issue
[19:57:04] *** Quits: y1n-v1 (~y1n@84-115-64-85.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[19:57:13] *** Joins: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se)
[19:58:06] *** Joins: BlackBishop (dexter@user/blackbishop)
[19:58:11] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[19:59:18] *** Joins: rememberYou (~someone@user/rememberyou)
[19:59:29] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 265 seconds)
[19:59:38] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[20:00:04] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:47ee:5b65:7103:9641) (Quit: Leaving)
[20:00:18] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a)
[20:00:20] *** Quits: kill (~killown@user/killown) (Remote host closed the connection)
[20:00:23] *** cvmn is now known as caveman
[20:01:19] <BlackBishop> trying to use this library https://github.com/jaraco/irc/tree/main/irc .. I made a simple bot https://bpa.st/LV5A but I'm wondering how to get the log.debug messages in https://github.com/jaraco/irc/blob/main/irc/client.py
[20:02:08] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:02:46] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[20:02:46] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[20:03:25] *** Quits: eriluc (~eriluc@178.97.132.77.rev.sfr.net) (Quit: Connection closed)
[20:03:30] <The-Compiler> BlackBishop: logging.basicConfig(level=logging.DEBUG) might help already
[20:03:44] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:04:31] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[20:04:47] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[20:04:58] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[20:05:22] *** Quits: jay-m126_ (~jay-m@154.72.163.30) (Ping timeout: 240 seconds)
[20:05:38] <BlackBishop> The-Compiler: umm, added it after my bot = line with no luck.
[20:06:38] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[20:07:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:07:42] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 265 seconds)
[20:07:45] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:08:11] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 265 seconds)
[20:08:46] *** Joins: jay-m126_ (~jay-m@129.0.205.222)
[20:09:00] <BlackBishop> nvm. I'm dumb
[20:09:09] <BlackBishop> wrong tab
[20:09:45] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[20:10:47] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[20:11:49] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:12:09] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:12:16] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Remote host closed the connection)
[20:12:43] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:12:52] *** nomic2 is now known as nomic
[20:13:23] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:16:46] *** Quits: jay-m126_ (~jay-m@129.0.205.222) (Ping timeout: 272 seconds)
[20:17:34] *** Joins: Elodin_ (~weechat@user/elodin)
[20:18:02] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[20:18:12] *** Joins: jay-m126_ (~jay-m@129.0.205.220)
[20:18:19] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:19:11] *** Quits: besnn (~besnn@dynamic-adsl-94-34-136-225.clienti.tiscali.it) (Changing host)
[20:19:11] *** Joins: besnn (~besnn@user/besnn)
[20:20:18] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 256 seconds)
[20:20:19] *** Joins: cognemo (~cognemo@cpe-46-164-31-76.dynamic.amis.net)
[20:20:53] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:21:02] <gitesh> what is interpolation ?
[20:21:10] *** Parts: bremner (~bremner@notmuch/developer/bremner) (Using Circe, the loveliest of all IRC clients)
[20:21:21] <bjs> gitesh: is there some context?
[20:21:28] *** Quits: rememberYou (~someone@user/rememberyou) (Killed (NickServ (GHOST command used by ememberYour!~someone@12.151-66-87.adsl-dyn.isp.belgacom.be)))
[20:21:30] <bjs> like most words it’ll depend on where it gets used
[20:21:43] *** Joins: rememberYou (~someone@user/rememberyou)
[20:21:50] <gitesh> bjs:     print("The scores {nm} got were: {s1},{s2},{s3}.".format(nm=name,s1=scores[0],s2=scores[1],s3=scores[2]))
[20:22:14] <gitesh> This other option is to specifically refer to keywords for interpolation values, like above.
[20:22:53] <gitesh> I am learning 15.2.1. Keyword Parameters with .format¶
[20:23:10] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[20:23:30] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[20:23:36] *** Joins: foobaz212 (~foobaz212@52.188.159.143.dyn.plus.net)
[20:23:44] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[20:23:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[20:24:26] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[20:24:55] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:25:27] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[20:26:47] <bjs> gitesh: well that’s putting the name and scores values inside the string
[20:27:33] <gitesh> i think interpolate means substitute
[20:28:09] <hogarius> gitesh: what does the rest of chapter 15 say?  Can you integrate the rest of the chapter into the two lines you posted?
[20:28:48] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[20:29:18] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[20:29:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:29:51] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:29:54] <foo> odd, StopIteration is getting raised somewhere in a for loop
[20:29:55] * foo scratches head
[20:30:30] <bjs> foo: is there a ‘raise StopIteration’ line inside the loop
[20:30:42] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[20:30:50] * foo smacks bjs 
[20:30:53] <foo> bjs: not that I see
[20:31:43] <bjs> foo: well then, I’m out of ideas
[20:32:35] <bjs> foo: I’m sure the traceback will tell you exactly where and how :)
[20:32:40] *** Joins: roppert (~roppert@inb4.se)
[20:32:50] <foo> bjs: it doesn't I wish it did. I just shortened down the for loop to this https://bpa.st/2VFA  - nada.
[20:33:01] <foo> bjs: hm, for kicks I'll even simplify even more
[20:33:46] <bjs> foo: well next() will raise once it reaches the end (if it’s empty)
[20:33:48] *** Quits: jay-m126_ (~jay-m@129.0.205.220) (Ping timeout: 265 seconds)
[20:33:52] <foo> bjs: OH.
[20:33:54] <foo> bjs: :)
[20:34:11] <bjs> foo: note next() can take 2 arguments with a default
[20:34:19] <foo> bjs: yeah, I jsut removed everything and it worked so it's probably next() and not skill_data - thank you.
[20:34:27] * foo tests in python CLI
[20:35:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:35:56] <gitesh> keyword parameters and keyword arguments are the same?
[20:36:13] <gitesh> names = ["Alexey", "Catalina", "Misuki", "Pablo"]
[20:36:19] <gitesh> print("'{first}!' she yelled. 'Come here, {first}! {f_one}, {f_two}, and {f_three} are here!'".format(first = names[1], f_one = names[0], f_two = names[2], f_three = names[3]))
[20:37:39] <gitesh> bjs: ^^
[20:38:29] <bjs> gitesh: no, parameters are the things on the "def" and the arguments are the things in the call
[20:38:46] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[20:38:56] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[20:39:09] <gitesh> okay that means optional parameters are keyword parameters
[20:39:50] <gitesh> and .format is a function invocation so the stuff in brackets are keyword arguments
[20:41:00] <bjs> yes, the ones that have a name are called "keyword" arguments
[20:41:11] *** Joins: dez (uid92154@user/dez)
[20:41:22] <bjs> f(1,2,x=3)  then 1 and 2 are positional arguments and x is a keyword argument
[20:41:50] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:42:07] *** Joins: timkofu (~timkofu@user/timkofu)
[20:42:20] <foo> bjs: ok, I must have something like this in that loop: next(a for a in []) - thank you for helping me to catch this.
[20:42:34] *** Quits: timkofu (~timkofu@user/timkofu) (Client Quit)
[20:44:15] *** Joins: ThanatosJ (~Thanatos@197.210.65.221)
[20:44:32] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:e131:b31f:a53c:f926) (Quit: Client closed)
[20:44:58] <gitesh> bjs: while defining a function positional parameters comes first than keyword paramenters?
[20:45:07] <gitesh> *before
[20:45:16] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[20:45:40] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 258 seconds)
[20:47:12] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 258 seconds)
[20:47:22] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:47:23] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[20:47:32] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[20:48:04] *** Joins: Thanattt (~Thanatos@197.210.65.221)
[20:48:33] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:50:04] <bjs> gitesh: well that’s what python syntax says yes
[20:50:07] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[20:50:58] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[20:52:00] *** Joins: digilink (~digilink@user/digilink)
[20:52:10] *** Quits: ThanatosJ (~Thanatos@197.210.65.221) (Ping timeout: 265 seconds)
[20:52:11] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:52:52] *** Quits: Thanattt (~Thanatos@197.210.65.221) (Ping timeout: 272 seconds)
[20:53:45] *** Joins: emika2 (~emika@83.136.182.41)
[20:54:13] *** Joins: y1n-v1 (~y1n@84-115-64-33.wifi.dynamic.surfer.at)
[20:54:46] *** Quits: emika (~emika@185.207.249.223) (Ping timeout: 272 seconds)
[20:54:47] *** emika2 is now known as emika
[20:56:22] *** Quits: rsx (~dummy@ppp-188-174-159-68.dynamic.mnet-online.de) (Quit: rsx)
[20:57:17] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Read error: Connection reset by peer)
[20:57:18] *** Quits: y1n-v2 (~y1n@84-115-64-33.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[20:58:51] *** Joins: milosz (~milosz@user/milosz)
[20:59:38] *** Joins: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net)
[20:59:40] *** Parts: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net) ()
[21:02:51] *** Joins: pnoud (~pnoud@user/pnoud)
[21:03:10] *** Joins: Betal (~Beta@user/betal)
[21:03:22] *** Quits: Elodin_ (~weechat@user/elodin) (Ping timeout: 256 seconds)
[21:04:03] *** Joins: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de)
[21:08:07] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[21:09:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:09:58] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[21:10:10] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[21:11:41] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[21:12:45] *** Joins: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi)
[21:14:36] *** Joins: akk (~akk@75.161.157.26)
[21:14:45] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[21:15:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:15:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:19:08] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[21:19:52] *** Joins: Elodin_ (~weechat@user/elodin)
[21:22:00] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a) (Quit: Leaving)
[21:22:15] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a)
[21:23:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[21:23:57] *** Quits: voltron (~voltrin_@ip5f5993ed.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[21:24:40] <gitesh> how can a function be an object?
[21:24:54] <caveman> how to test differences between dictionary keys?  e.g. d1.keys() - d2.keys()?  or set(d1) - set(d2)?  or some other approach?
[21:25:44] <deniska> caveman: d1.keys() - d2.keys() does work
[21:26:16] <caveman> which approach is more pythonic?
[21:26:57] <deniska> caveman: I think the first one is a bit more obvious as far as the intent is going
[21:27:16] <nyloc> gitesh: If you think about it, having an object that has a method that you can call with some syntactic sugar like () instead of object.__call__() the object is indistinguishable from a function.
[21:27:27] <caveman> deniska: what about intersections?  can we do intersections with the 1st one?
[21:28:28] <deniska> caveman: a.keys() & b.keys()
[21:28:49] <caveman> bitwise and?
[21:28:52] <deniska> caveman: dictionary key objects behave more or less like sets
[21:29:00] <gitesh> nyloc: oh
[21:29:13] <deniska> caveman: so operations you expect sets to do will typically work on dict_keys
[21:29:29] <caveman> deniska: or, how about:  for addition in [k for k in d1 if k not in d2]?
[21:29:32] <deniska> caveman: and sets override operator & to do intersections
[21:29:52] *** Quits: Dotz0cat (~Dotz0cat@h81.95.213.151.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[21:30:14] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 272 seconds)
[21:30:15] <caveman> interesting.
[21:31:06] <deniska> I honestly don't like seeing the word "for" more than once on a single line :)
[21:31:52] <caveman> yes.  i'll go with .keys() and &.
[21:32:03] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[21:32:39] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a) (Quit: Leaving)
[21:32:53] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a)
[21:33:29] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[21:33:58] *** Joins: c10l (~c10l@89.34.167.207)
[21:35:26] *** Joins: zeden (~zeden@user/zeden)
[21:37:58] *** Quits: Elodin_ (~weechat@user/elodin) (Quit: WeeChat 3.2)
[21:39:16] *** Joins: Elodin (~weechat@user/elodin)
[21:42:25] *** Joins: dolor_avis (~dolor_avi@user-5-173-14-190.play-internet.pl)
[21:44:28] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[21:45:47] *** Quits: rendar (~rendar@user/rendar) ()
[21:45:56] *** Quits: dolor_avis (~dolor_avi@user-5-173-14-190.play-internet.pl) (Quit: dolor_avis)
[21:47:55] *** Quits: Elodin (~weechat@user/elodin) (Quit: WeeChat 3.2)
[21:51:16] *** Joins: Elodin (~weechat@user/elodin)
[21:51:31] *** Joins: Narrat (~omnius@p200300df5f45d8d906ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:51:56] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:55:26] *** Quits: y1n-v1 (~y1n@84-115-64-33.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[21:55:49] <gitesh> what's the use of lambda function if we don't give it a name? bjs
[21:56:52] <lambda> one example: to pass it as a function argument
[21:56:53] <nedbat> gitesh: does your book have an example of a lambda function?
[21:57:25] <gitesh> nedbat: lambda x,y: x+y
[21:57:38] <nedbat> gitesh: i hope they have a better example :)
[21:57:39] <gitesh> nedbat: yes
[21:57:58] <bjs> gitesh: maybe sometimes you just want to make a short function and not have to give it its own name
[21:58:12] <bjs> although how useful this is is a good question
[21:58:24] <gitesh> bjs: how would i call it if i didn't give it a name?
[21:58:53] *** Quits: Elodin (~weechat@user/elodin) (Quit: WeeChat 3.2)
[21:59:12] <gitesh> also i have a side question for this room, are functions in javascript the functions which are lambda functions in python?
[21:59:18] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[22:00:05] <lambda> gitesh: can't really do a comparison with javascript, but one thing to note is that "def" functions and "lambda" functions are the same thing
[22:00:06] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[22:00:19] <lambda> "def" just automatically assigns the function object to a name
[22:00:47] <bjs> gitesh: you can pass the function made by lambda to another function for example.
[22:01:05] *** Joins: beencubed (~beencubed@209.131.238.248)
[22:01:21] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:01:27] <gitesh> how didn't i figure out myself
[22:03:07] *** Joins: MaximB (~MaximB@87.68.164.172)
[22:05:17] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:05:50] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:06:14] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:13:40] <nedbat> gitesh: what book are you reading?
[22:13:54] *** Joins: kn1003 (~kn100@wireguard/tunneler/kn100)
[22:14:09] <gitesh> nedbat: https://runestone.academy/runestone/books/published/fopp/index.html
[22:14:44] <nedbat> gitesh: and where in that book were you reading about lambdas?
[22:15:06] *** Quits: kn1003 (~kn100@wireguard/tunneler/kn100) (Remote host closed the connection)
[22:15:30] <gitesh> nedbat: https://runestone.academy/runestone/books/published/fopp/AdvancedFunctions/Anonymousfunctionswithlambdaexpressions.html
[22:16:25] <nedbat> gitesh: i'd like this book better if they explained why lambdas are useful
[22:17:21] *** Joins: reset (~reset@user/reset)
[22:17:25] *** Joins: Celeo (~Celeo@user/celeo)
[22:17:36] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:18:06] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[22:19:24] *** Joins: sazawal (~sazawal@171.50.134.171)
[22:19:53] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:19:54] *** Quits: jess (~jess@libera/staff/jess) ()
[22:20:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:20:55] <sazawal> Hi all. I am starting a thread using a pyqt pushbutton. How do I join this started thread?
[22:22:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:23:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[22:23:09] *** Quits: finsternis (~X@23.226.237.192) (Read error: Connection reset by peer)
[22:23:38] <nedbat> sazawal: can you show us the code that starts it?
[22:24:03] <sazawal> nedbat, Sorry it's part of a big system
[22:24:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:24:31] <nedbat> sazawal: can you pastebin a few lines that show how it is started?
[22:24:46] <sazawal> nedbat, Okay let me try
[22:24:58] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[22:25:38] *** Joins: pwnd_sfw6 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:26:11] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[22:26:11] *** pwnd_sfw6 is now known as pwnd_sfw
[22:26:48] *** Joins: Akuli (~Akuli@82-203-165-255.bb.dnainternet.fi)
[22:29:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:30:21] *** Joins: jinsun_ (~quassel@user/jinsun)
[22:31:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 272 seconds)
[22:31:02] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 272 seconds)
[22:31:25] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[22:32:09] *** Joins: Pickchea (~private@user/pickchea)
[22:35:37] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[22:36:49] <bjs> nedbat: to be honest Python tries hard to make lambdas annoying and less useful
[22:37:09] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:37:16] <nedbat> bjs: 1) that is truish, 2) if you are going to teach lambdas, explain why they are useful
[22:37:37] *** Quits: mattil (~mattilinn@87-92-237-144.rev.dnainternet.fi) (Read error: Connection reset by peer)
[22:38:00] <bjs> nedbat: I think the book gitesh is using is not the best resource.
[22:38:12] <nedbat> bjs: i am seeing its flaws
[22:39:17] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[22:39:18] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[22:39:24] *** Joins: jelmer (~jelmer@user/jelmer)
[22:39:37] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:39:49] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:6467:aa41:cd69:bd89) (Quit: Textual IRC Client: www.textualapp.com)
[22:41:32] <phy1729> lambdas and mypy --strict don't often play nice together
[22:43:48] *** Joins: esv (~esv@72.11.45.232)
[22:44:44] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 255 seconds)
[22:45:31] *** Quits: gustik (~gustik@2a01:c844:241f:c020:312a:c22f:e497:698f) (Quit: Leaving)
[22:46:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:47:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:49:51] <sazawal> nedbat, This is a very basic code I wrote, https://bpa.st/JVNQ . I don't know how should I join the started thread. Uncommenting line 25 freezes the gui. I know I can use QThreads, but the function start_thread in my actual case belongs to another class, it is a whole system in itself which I integrated with pyqtui, so I don't want to use QThreads and complicate that part.
[22:51:42] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[22:53:22] *** Quits: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[22:54:10] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[22:57:55] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Quit: WeeChat 3.2)
[22:59:31] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[23:01:25] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Remote host closed the connection)
[23:01:28] *** Joins: LiftLeft (~LiftLeft@191.96.150.140)
[23:01:28] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[23:01:33] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[23:01:36] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-d858-9f0-39b6-f218.fixed6.kpn.net) (Remote host closed the connection)
[23:01:49] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[23:02:51] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-9941-75ec-8110-27d1.fixed6.kpn.net)
[23:03:41] *** Joins: pnoud (~pnoud@user/pnoud)
[23:05:18] *** Quits: MaXxer0 (~MaXxer0@mue-88-130-53-097.dsl.tropolys.de) (Remote host closed the connection)
[23:06:29] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:07:58] *** Joins: v0lta (~dkmueller@2a01:c22:7a07:3100:54ce:2c9:e7b8:c1d0)
[23:09:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[23:11:24] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[23:12:28] *** Joins: CombatVet (~c4@user/combatvet)
[23:12:55] <gitesh> will you write `if astr not in d` or `if not astr in d`
[23:14:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:15:04] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[23:15:35] *** Joins: pnoud (~pnoud@user/pnoud)
[23:19:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[23:19:40] <dav1d> gitesh, "Use is not operator rather than not ... is. While both expressions are functionally identical, the former is more readable and preferred" https://www.python.org/dev/peps/pep-0008/
[23:20:06] <dav1d> I feel like that also applies to "not ... in" and "not in"
[23:20:40] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[23:20:53] *** Joins: y1n-v1 (~y1n@84-115-64-143.wifi.dynamic.surfer.at)
[23:22:32] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:24:04] *** Joins: kn1003 (~kn100@wireguard/tunneler/kn100)
[23:24:26] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:24:51] *** Joins: darksun (~darksun@user/darksun)
[23:25:52] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[23:26:58] <jinsun_> also pylint will complain about "not ... in" with unneeded-not (C0113) and ask to change it to "... not in"
[23:27:47] *** jinsun_ is now known as jinsun
[23:28:45] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:29:34] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[23:30:30] *** Joins: Dotz0cat (~Dotz0cat@h225.173.40.162.dynamic.ip.windstream.net)
[23:31:22] *** Joins: BlessJah (~BlessJah@user/blessjah)
[23:31:43] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:797e:b2e8:d08a:59c4)
[23:32:25] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:33:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:33:25] *** Joins: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net)
[23:34:41] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:c907:ac42:f088:482d) (Ping timeout: 255 seconds)
[23:34:43] <madprops> what could be a nice way to make an array from a property of an array of dictionaries?
[23:34:55] <madprops> an array made from only that property
[23:35:27] <Dan39> example?
[23:35:53] <madprops> for instance I have an array with items like {"count":1, "word":"dog"}
[23:35:56] <Dan39> [{a:b}, {c:d}, {e,f}] and you want to make [c,d] ?
[23:35:59] <madprops> i want to make an array of 'words'
[23:36:15] <Dan39> oh
[23:36:17] <Dan39> i see
[23:36:34] <madprops> probably an easy thing
[23:36:39] <madprops> for x in y stuff I'm guessing
[23:36:39] <CuriousErnestBro> madprops you can do [x["word"] for x in some_dict]
[23:37:00] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:37:19] <madprops> thought it would be something like that
[23:37:23] <madprops> but I don't fully grasp it yet
[23:37:28] <CuriousErnestBro> some_list I mean
[23:37:41] <KombuchaKip> I am using python3 with -Werror. I'm getting a `ResourceWarning: unclosed file <_io.BufferedWriter name=3>` on exit. I'd like to trace where this object is, but that's not enough information.
[23:37:50] <CuriousErnestBro> madprops it's called a "list comprehension"
[23:37:56] *** Joins: stevieh (~skrodzki@83.135.21.194)
[23:38:16] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[23:40:41] <KombuchaKip> I've fixed the problem, but it would be nice to know what to do in the future to find the culprit.
[23:41:22] *** Joins: finsternis (~X@23.226.237.192)
[23:41:58] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[23:47:08] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:47:59] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[23:49:24] *** Joins: reumeth (~reumeth@user/reumeth)
[23:50:27] *** Quits: y1n-v1 (~y1n@84-115-64-143.wifi.dynamic.surfer.at) (Quit: Leaving)
[23:50:42] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[23:51:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:b1b2:5aaf:3118:ef16)
[23:52:19] *** Joins: upsala (~zcb@185.213.155.160)
[23:52:25] *** Joins: y1n (~y1n@84-115-64-143.wifi.dynamic.surfer.at)
[23:52:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[23:53:43] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:c509:49f3:687:e96a) (Quit: Leaving)
[23:54:41] *** Joins: kn10038 (~kn100@wireguard/tunneler/kn100)
[23:54:43] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[23:55:22] *** Quits: kn1003 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 240 seconds)
[23:56:19] *** Joins: kn100385 (~kn100@wireguard/tunneler/kn100)
[23:57:23] <katze_> if i plot a set of data (all values around 240) with matplotlib it looks like this:
[23:57:24] <katze_> https://ibb.co/BrBLz8x
[23:58:12] <katze_> the y axis desciption is bogus, isn't it?
[23:58:15] <madprops> "for loops can take an else block"
[23:58:18] <madprops> this is great
[23:58:49] *** Joins: matsaman (~matsaman@user/matsaman)
[23:58:54] <katze_> how that?
[23:59:21] <Dan39> madprops: does that do what you want? i have my doubts lol...
[23:59:41] <madprops> Dan39, what do you mean?
[23:59:42] *** Quits: kn10038 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[23:59:47] <madprops> i was using a variable
[23:59:51] <Dan39> oh wait, i see
[23:59:55] <Dan39> lol nevermind
[23:59:56] <madprops> to check if an item existed
