[00:16:30] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:53:40] *** Quits: salkin (~salkin@84.211.234.210) (Ping timeout: 264 seconds)
[01:01:28] *** Quits: gravicappa (~gravicapp@178.214.247.253) (Ping timeout: 264 seconds)
[01:10:14] *** Quits: Franciman (~Franciman@mx1.fracta.dev) (*.net *.split)
[01:10:14] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (*.net *.split)
[01:10:14] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[01:10:14] *** Quits: Colt (~Colt@user/colt) (*.net *.split)
[01:10:14] *** Quits: average (uid473595@user/average) (*.net *.split)
[01:10:14] *** Quits: motherfsck (~motherfsc@user/motherfsck) (*.net *.split)
[01:10:14] *** Quits: andreypopp_ (~andreypop@94.188.42.16) (*.net *.split)
[01:10:15] *** Quits: _tjr_ (~tjr@233.ip-144-217-92.net) (*.net *.split)
[01:10:15] *** Quits: arg_ (~arthur@ns3054037.ip-91-121-134.eu) (*.net *.split)
[01:10:16] *** Quits: copy (~copy@2604:a880:800:10::1e0a:8001) (*.net *.split)
[01:10:16] *** Quits: shawn (~shawn_w@152.44.212.188) (*.net *.split)
[01:10:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[01:10:17] *** Quits: klu (~klu@user/klu) (*.net *.split)
[01:10:17] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[01:10:17] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[01:10:17] *** Quits: pippijn (~pippijn@ra.xinutec.org) (*.net *.split)
[01:10:18] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[01:10:18] *** Quits: ts2 (~ts@46.101.20.9) (*.net *.split)
[01:10:18] *** Quits: wagle (~wagle@quassel.wagle.io) (*.net *.split)
[01:10:18] *** Quits: vb_ (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr) (*.net *.split)
[01:10:19] *** Quits: ccx (~ccx@82.142.125.46) (*.net *.split)
[01:10:19] *** Quits: dmbaturin (~dmbaturin@vyos/developer/dmbaturin) (*.net *.split)
[01:10:20] *** Quits: nfc_ (nfc@tilde.institute) (*.net *.split)
[01:10:20] *** Quits: chrisz (ttbzqs9d0w@55d42cac.access.ecotel.net) (*.net *.split)
[01:10:20] *** Quits: dh` (~dholland@netbsd/developer/dholland) (*.net *.split)
[01:10:20] *** Quits: quernd (~quernd@boethin.uberspace.de) (*.net *.split)
[01:10:20] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (*.net *.split)
[01:10:20] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[01:10:20] *** Quits: drakonis (drakonis@user/drakonis) (*.net *.split)
[01:10:20] *** Quits: landonf (landonf@mac68k.info) (*.net *.split)
[01:10:20] *** Quits: sheb (~sheb@31.223.228.71) (*.net *.split)
[01:10:20] *** Quits: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:c53d:6e2b:93e3:fd4f) (*.net *.split)
[01:10:20] *** Quits: ns12 (~ns12@user/ns12) (*.net *.split)
[01:10:21] *** Quits: towel (~towel@user/towel) (*.net *.split)
[01:10:21] *** Quits: berberman (~berberman@user/berberman) (*.net *.split)
[01:10:21] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[01:10:21] *** Quits: lagash (lagash@lagash.shelltalk.net) (*.net *.split)
[01:10:21] *** Quits: rak (~rak@debian/rak) (*.net *.split)
[01:10:21] *** Quits: Leonidas_ (~Leonidas@cotopaxi.xivilization.net) (*.net *.split)
[01:10:22] *** Quits: qwr (~qwr@182-83-235-80.dyn.estpak.ee) (*.net *.split)
[01:10:22] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[01:10:22] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (*.net *.split)
[01:10:22] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (*.net *.split)
[01:10:22] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (*.net *.split)
[01:10:22] *** Quits: ulyssa (~ulyssa@timecube.club) (*.net *.split)
[01:10:22] *** Quits: nerdypepper (~nerdypepp@user/nerdypepper) (*.net *.split)
[01:10:22] *** Quits: noddy (~user@user/noddy) (*.net *.split)
[01:10:22] *** Quits: johnel_ (~johnel@185.157.234.34) (*.net *.split)
[01:10:22] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[01:10:22] *** Quits: dy (~dy@user/dy) (*.net *.split)
[01:10:22] *** Quits: sim642 (~simmo@europium.sim642.eu) (*.net *.split)
[01:10:22] *** Quits: hannes (~hannes@193.30.40.133) (*.net *.split)
[01:10:22] *** Quits: sadiq (~sadiq@toao.com) (*.net *.split)
[01:10:22] *** Quits: adibsaad[m] (~adibsaad@2001:470:69fc:105::2f65) (*.net *.split)
[01:10:23] *** Quits: Johann (~johann@user/johann) (*.net *.split)
[01:10:23] *** Quits: nimaje (~nimaje@bureaucracy.bureaucracy.de) (*.net *.split)
[01:10:23] *** Quits: Armael (~Armael@macaron.isomorphis.me) (*.net *.split)
[01:10:23] *** Quits: gahr (~gahr@user/gahr) (*.net *.split)
[01:10:23] *** Quits: jonasbits (~quassel@185-97-32-58.cust.tranquillity.se) (*.net *.split)
[01:10:23] *** Quits: dinosaure (~dinosaure@163.172.65.89) (*.net *.split)
[01:10:23] *** Quits: rom1504 (rom1504@rom1504.fr) (*.net *.split)
[01:10:23] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[01:10:24] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[01:10:24] *** Quits: octachron (~octachron@2a01:4f8:1c1c:69ae::1) (*.net *.split)
[01:10:24] *** Quits: haesbaert (~haesbaert@195.95.187.184) (*.net *.split)
[01:10:24] *** Quits: Geekingfrog (geekingfro@2a01:7e01::f03c:92ff:fe48:8bdf) (*.net *.split)
[01:10:24] *** Quits: jsoo (~znc@irc.refl.club) (*.net *.split)
[01:10:25] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: v0idpwn (sid483136@id-483136.helmsley.irccloud.com) (*.net *.split)
[01:10:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[01:10:25] *** Quits: krnkktz (~krnkktzma@2001:470:69fc:105::74c) (*.net *.split)
[01:10:25] *** Quits: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb) (*.net *.split)
[01:10:25] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (*.net *.split)
[01:10:26] *** Quits: lisq (~quassel@lis.moe) (*.net *.split)
[01:10:26] *** Quits: tristanC (~tristanC@user/tristanc) (*.net *.split)
[01:10:26] *** Quits: SquidDev (~SquidDev@autoclave.squiddev.cc) (*.net *.split)
[01:10:27] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[01:10:27] *** Quits: Absalom (kax@envs.net) (*.net *.split)
[01:10:27] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[01:10:27] *** Quits: bronsen (~bronsen@2a04:d480:0:1::3) (*.net *.split)
[01:10:27] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[01:10:27] *** Quits: notnotdan (~notd@v22019068545391262.megasrv.de) (*.net *.split)
[01:10:27] *** Quits: daimrod2 (~daimrod@loire.omecha.info) (*.net *.split)
[01:10:27] *** Quits: theblatte (~theblatte@82-71-49-100.dsl.in-addr.zen.co.uk) (*.net *.split)
[01:10:28] *** Quits: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027) (*.net *.split)
[01:10:28] *** Quits: mg (mg@user/mg) (*.net *.split)
[01:10:28] *** Quits: Enjolras (~enjolras@139.99.101.27) (*.net *.split)
[01:10:28] *** Quits: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net) (*.net *.split)
[01:10:28] *** Quits: rks` (~trefis@ns366843.ip-37-59-60.eu) (*.net *.split)
[01:10:29] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (*.net *.split)
[01:10:29] *** Quits: thizanne (~thibault@2001:41d0:a:f682::1) (*.net *.split)
[01:10:29] *** Quits: vsiles (~vsiles@topinambour.cristau.org) (*.net *.split)
[01:10:29] *** Quits: nore (~nore@217.69.13.67) (*.net *.split)
[01:10:29] *** Quits: oisota (~oisota@user/oisota) (*.net *.split)
[01:10:29] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[01:14:22] *** Joins: Colt (~Colt@user/colt)
[01:14:22] *** Joins: favonia (~favonia@user/favonia)
[01:14:22] *** Joins: adibsaad[m] (~adibsaad@2001:470:69fc:105::2f65)
[01:14:22] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[01:14:22] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[01:14:22] *** Joins: zebrag (~chris@user/zebrag)
[01:14:22] *** Joins: average (uid473595@user/average)
[01:14:22] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[01:14:22] *** Joins: _tjr_ (~tjr@233.ip-144-217-92.net)
[01:14:22] *** Joins: andreypopp_ (~andreypop@94.188.42.16)
[01:14:22] *** Joins: Johann (~johann@user/johann)
[01:14:22] *** Joins: nimaje (~nimaje@bureaucracy.bureaucracy.de)
[01:14:22] *** Joins: Geekingfrog (geekingfro@2a01:7e01::f03c:92ff:fe48:8bdf)
[01:14:22] *** Joins: Armael (~Armael@macaron.isomorphis.me)
[01:14:22] *** Joins: arg_ (~arthur@ns3054037.ip-91-121-134.eu)
[01:14:22] *** Joins: ccx (~ccx@82.142.125.46)
[01:14:22] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[01:14:22] *** Joins: drakonis (drakonis@user/drakonis)
[01:14:22] *** Joins: dmbaturin (~dmbaturin@vyos/developer/dmbaturin)
[01:14:22] *** Joins: copy (~copy@2604:a880:800:10::1e0a:8001)
[01:14:22] *** Joins: landonf (landonf@mac68k.info)
[01:14:22] *** Joins: shawn (~shawn_w@152.44.212.188)
[01:14:22] *** Joins: Soni (~quassel@autistic.space)
[01:14:22] *** Joins: sheb (~sheb@31.223.228.71)
[01:14:22] *** Joins: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:c53d:6e2b:93e3:fd4f)
[01:14:22] *** Joins: nfc_ (nfc@tilde.institute)
[01:14:22] *** Joins: chrisz (ttbzqs9d0w@55d42cac.access.ecotel.net)
[01:14:22] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[01:14:22] *** Joins: jsoo (~znc@irc.refl.club)
[01:14:22] *** Joins: SquidDev (~SquidDev@autoclave.squiddev.cc)
[01:14:22] *** Joins: gahr (~gahr@user/gahr)
[01:14:22] *** Joins: lagash (lagash@lagash.shelltalk.net)
[01:14:22] *** Joins: klu (~klu@user/klu)
[01:14:22] *** Joins: ns12 (~ns12@user/ns12)
[01:14:22] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[01:14:22] *** Joins: v0idpwn (sid483136@id-483136.helmsley.irccloud.com)
[01:14:22] *** Joins: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net)
[01:14:22] *** Joins: rak (~rak@debian/rak)
[01:14:22] *** Joins: greenbagels (~gb@user/greenbagels)
[01:14:22] *** Joins: Leonidas_ (~Leonidas@cotopaxi.xivilization.net)
[01:14:22] *** Joins: ts2 (~ts@46.101.20.9)
[01:14:22] *** Joins: wagle (~wagle@quassel.wagle.io)
[01:14:22] *** Joins: vb_ (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr)
[01:14:22] *** Joins: qwr (~qwr@182-83-235-80.dyn.estpak.ee)
[01:14:22] *** Joins: gdd (~gdd@129.199.146.230)
[01:14:22] *** Joins: jonasbits (~quassel@185-97-32-58.cust.tranquillity.se)
[01:14:22] *** Joins: abraham (~abraham@143.244.185.86)
[01:14:22] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[01:14:22] *** Joins: rks` (~trefis@ns366843.ip-37-59-60.eu)
[01:14:22] *** Joins: drewolson (~drewolson@user/drewolson)
[01:14:22] *** Joins: pippijn (~pippijn@ra.xinutec.org)
[01:14:22] *** Joins: Absalom (kax@envs.net)
[01:14:22] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[01:14:22] *** Joins: sagax (~sagax_nb@user/sagax)
[01:14:22] *** Joins: towel (~towel@user/towel)
[01:14:22] *** Joins: hexology (~hexology@user/hexology)
[01:14:22] *** Joins: dinosaure (~dinosaure@163.172.65.89)
[01:14:22] *** Joins: rom1504 (rom1504@rom1504.fr)
[01:14:22] *** Joins: bronsen (~bronsen@2a04:d480:0:1::3)
[01:14:22] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[01:14:22] *** Joins: berberman (~berberman@user/berberman)
[01:14:22] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:14:22] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[01:14:22] *** Joins: krnkktz (~krnkktzma@2001:470:69fc:105::74c)
[01:14:22] *** Joins: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb)
[01:14:22] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[01:14:22] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[01:14:22] *** Joins: dh` (~dholland@netbsd/developer/dholland)
[01:14:22] *** Joins: quernd (~quernd@boethin.uberspace.de)
[01:14:22] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[01:14:22] *** Joins: ebb (ebb@user/ebb)
[01:14:22] *** Joins: oisota (~oisota@user/oisota)
[01:14:22] *** Joins: nore (~nore@217.69.13.67)
[01:14:22] *** Joins: vsiles (~vsiles@topinambour.cristau.org)
[01:14:22] *** Joins: Enjolras (~enjolras@139.99.101.27)
[01:14:22] *** Joins: mg (mg@user/mg)
[01:14:22] *** Joins: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027)
[01:14:22] *** Joins: theblatte (~theblatte@82-71-49-100.dsl.in-addr.zen.co.uk)
[01:14:22] *** Joins: daimrod2 (~daimrod@loire.omecha.info)
[01:14:22] *** Joins: notnotdan (~notd@v22019068545391262.megasrv.de)
[01:14:22] *** Joins: dstein64 (~dstein64@dannyadam.com)
[01:14:22] *** Joins: tristanC (~tristanC@user/tristanc)
[01:14:22] *** Joins: lisq (~quassel@lis.moe)
[01:14:22] *** Joins: haesbaert (~haesbaert@195.95.187.184)
[01:14:22] *** Joins: sadiq (~sadiq@toao.com)
[01:14:22] *** Joins: hannes (~hannes@193.30.40.133)
[01:14:22] *** Joins: sim642 (~simmo@europium.sim642.eu)
[01:14:22] *** Joins: dy (~dy@user/dy)
[01:14:22] *** Joins: tomku (~tomku@user/tomku)
[01:14:22] *** Joins: johnel_ (~johnel@185.157.234.34)
[01:14:22] *** Joins: noddy (~user@user/noddy)
[01:14:22] *** Joins: nerdypepper (~nerdypepp@user/nerdypepper)
[01:14:22] *** Joins: ulyssa (~ulyssa@timecube.club)
[01:14:22] *** Joins: octachron (~octachron@2a01:4f8:1c1c:69ae::1)
[01:14:22] *** Joins: Exa (exa@irc.moe)
[01:14:22] *** Joins: thizanne (~thibault@2001:41d0:a:f682::1)
[01:14:32] *** Quits: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027) (Excess Flood)
[01:15:00] *** Joins: d_bot (~d_bot@2001:4802:7800:1:be76:4eff:fe20:3027)
[01:15:52] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[01:16:16] *** Joins: Colt (~Colt@user/colt)
[01:45:56] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[02:12:18] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:d885:8fcc:5b6d:d01e) (Quit: Konversation terminated!)
[02:30:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Ping timeout: 264 seconds)
[02:35:09] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:05:25] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:07:12] *** Joins: rgrinberg (~textual@200.5.63.76)
[03:18:33] <d_bot> <cemerick> Has anyone done benchmarks of dune builds or opam switch creation between Intel and amd lately?
[03:23:20] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:26:44] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 252 seconds)
[03:44:20] *** Quits: andreypopp_ (~andreypop@94.188.42.16) (Ping timeout: 252 seconds)
[03:57:10] <d_bot> <infrandomness> I sure as hell can bench my 11th gen mobile cpu through Ubuntu
[03:57:46] <d_bot> <infrandomness> If that's what you are after
[04:14:45] *** Joins: rgrinberg (~textual@200.5.63.76)
[04:26:02] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[04:43:17] *** Joins: shmibs (~shmibs@airen-no-jikken.icu)
[05:02:42] *** Joins: xd1le (~xd1le@user/xd1le)
[05:17:27] *** hexology is now known as hexology_
[05:17:51] *** hexology_ is now known as hexology__
[05:18:08] *** hexology__ is now known as hexology`
[05:18:12] *** hexology` is now known as hexology_`
[05:18:57] *** hexology_` is now known as hexology
[05:31:26] *** Parts: shmibs (~shmibs@airen-no-jikken.icu) (WeeChat 3.3)
[06:24:45] <d_bot> <cemerick> well, I guess we can compare notes, just ordered a new amd laptop (to replace a very rickety 8-year-old one)
[06:59:45] *** Joins: namkeleser (~namkelese@101.175.102.188)
[07:02:24] <Boarders_> does ocaml have an equivalent of Haskell's at patterns?
[07:08:39] <d_bot> <jumpnbrownweasel> (pattern as xxx)
[07:09:10] <Boarders_> ok thanks
[07:11:14] <d_bot> <jumpnbrownweasel> np
[07:11:38] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:00] *** Joins: mbuf (~Shakthi@122.174.165.234)
[07:13:24] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[07:21:03] *** Quits: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:c53d:6e2b:93e3:fd4f) (Quit: ZNC 1.8.2 - https://znc.in)
[07:21:15] *** Joins: grobe0ba (~grobe0ba@2001:19f0:5c01:e36:23c:d0ec:5854:1bcb)
[07:24:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:26:25] *** Joins: andreypopp (~andreypop@94.188.42.16)
[07:28:50] *** Joins: rgrinberg (~textual@200.5.63.76)
[08:31:54] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:35:56] *** Joins: gravicappa (~gravicapp@178.214.247.253)
[08:50:10] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[09:04:58] *** Joins: ejones (~jones@167.88.120.129)
[10:20:13] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:46:32] *** Joins: mro (~mro@port-92-195-144-78.dynamic.as20676.net)
[11:05:27] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[11:15:03] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[11:26:34] *** Joins: olle (~olle@i5E866D9D.versanet.de)
[12:19:22] *** Joins: salkin (~salkin@138.251.92.62.static.cust.telenor.com)
[12:23:06] <d_bot> <leonidas> @kit_ty_kate What is the current OPAM procedure for dealing with the rresult.0.7.0 breakage? asn1-combinators.0.2.5 is picked but breaks on 4.07 because it is missing `result`.
[12:24:29] <d_bot> <leonidas> I can submit a PR but don't want to create a fragile patch to fix their build in OPAM
[12:40:34] <d_bot> <Kate> @leonidas you can send a PR to asn1-combinators.0.2.5 and add an upper-bound constraint to rresult (`"rresult" {< "0.7.0"}`)
[12:47:11] *** Quits: favonia (~favonia@user/favonia) (Ping timeout: 252 seconds)
[12:57:57] <d_bot> <leonidas> @kit_ty_kate Ok done. Turns out the murderer was `ptime` instead but same issue.
[13:27:37] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:37:08] *** Quits: mro (~mro@port-92-195-144-78.dynamic.as20676.net) (Remote host closed the connection)
[13:39:48] *** Joins: mro (~mro@port-92-195-144-78.dynamic.as20676.net)
[13:40:57] <d_bot> <Kate> merged. Thanks!
[13:42:11] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[13:43:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:49:14] *** Quits: mro (~mro@port-92-195-144-78.dynamic.as20676.net) (Remote host closed the connection)
[13:49:44] *** Joins: mro (~mro@port-92-195-144-78.dynamic.as20676.net)
[13:50:52] <d_bot> <infrandomness> Sure thing
[13:51:08] <d_bot> <infrandomness> But how to accurately benchmark
[13:56:40] <d_bot> <leonidas> Thank you @kit_ty_kate!
[14:30:58] *** Quits: chrisz (ttbzqs9d0w@55d42cac.access.ecotel.net) (Ping timeout: 265 seconds)
[14:32:37] *** Joins: chrisz (guwdd1z4oc@55d4c0f0.access.ecotel.net)
[14:34:28] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[14:36:10] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[15:09:32] *** Quits: mro (~mro@port-92-195-144-78.dynamic.as20676.net) (Read error: Connection reset by peer)
[15:09:38] *** Joins: mro_ (~mro@port-92-195-144-78.dynamic.as20676.net)
[15:11:12] *** Joins: bartholin (~bartholin@158.110.70.215)
[15:26:51] *** Quits: mro_ (~mro@port-92-195-144-78.dynamic.as20676.net) (Remote host closed the connection)
[15:27:39] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[15:29:04] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[15:30:52] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:43:26] *** Joins: mro (~mro@port-92-195-144-78.dynamic.as20676.net)
[15:49:11] *** Quits: mro (~mro@port-92-195-144-78.dynamic.as20676.net) (Remote host closed the connection)
[16:10:34] <d_bot> <cemerick> Just a `time dune build` on the biggest project out there. Core maybe, or something mirage, or coq I guess?
[16:11:55] *** Joins: mro (~mro@port-92-195-144-78.dynamic.as20676.net)
[16:21:29] <d_bot> <andreypopp> opam switch create . 4.12.1  238.43s user 20.91s system 451% cpu 57.404 total
[16:21:33] <d_bot> <andreypopp> on 3970 threadripper
[16:22:27] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[16:27:30] <d_bot> <andreypopp> opam switch create . 4.12.1  233.65s user 36.11s system 324% cpu 1:23.20 total
[16:27:43] <d_bot> <andreypopp> on mba m1 (lower power mode off but on a battery)
[16:29:20] <d_bot> <Et7f3> https://github.com/ocaml-dune/dune-bench 👀
[16:32:00] *** Quits: mro (~mro@port-92-195-144-78.dynamic.as20676.net) (Read error: Connection reset by peer)
[16:32:05] *** Joins: mro_ (~mro@2002:5cc3:904e:0:b508:85f0:b67a:2a51)
[16:32:41] <d_bot> <infrandomness> I'm confused
[16:32:50] <d_bot> <infrandomness> how does it benchmark dune, what does it executes ?
[16:35:34] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:36:43] <d_bot> <infrandomness> 🤔
[16:36:44] <d_bot> <infrandomness> https://cdn.discordapp.com/attachments/436568060288172044/915227340164980736/unknown.png
[16:38:00] <d_bot> <andreypopp> that's ocaml-system, it doesn't compile anything
[16:38:41] <d_bot> <infrandomness> yeah I figured, couldn't have been this fast
[16:54:28] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[16:58:23] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[17:30:28] *** Leonidas_ is now known as Leonidas
[17:30:33] <d_bot> <infrandomness> https://cdn.discordapp.com/attachments/436568060288172044/915240889574649876/unknown.png
[17:30:58] *** Leonidas is now known as Guest5250
[17:32:01] *** Guest5250 is now known as Leonidas
[17:32:07] *** Quits: Leonidas (~Leonidas@cotopaxi.xivilization.net) (Changing host)
[17:32:07] *** Joins: Leonidas (~Leonidas@user/leonidas)
[17:33:29] <Anarchos> infradomness did you try a macke clean before ?
[17:34:33] <d_bot> <infrandomness> no, but this is a brand new directory, just cloned it as you can see
[17:36:16] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[17:36:38] <Anarchos> oh sorry i missed it
[17:36:57] *** Quits: mro_ (~mro@2002:5cc3:904e:0:b508:85f0:b67a:2a51) (Remote host closed the connection)
[17:38:10] *** Joins: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se)
[17:41:46] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:44:51] *** Quits: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[17:50:48] *** Joins: xiongxin (~Thunderbi@119.123.103.170)
[17:51:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:57:53] *** Quits: gravicappa (~gravicapp@178.214.247.253) (Ping timeout: 256 seconds)
[17:58:18] *** Joins: gravicappa (~gravicapp@178.214.247.253)
[18:15:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[18:22:15] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:33:37] <d_bot> <cemerick> looks like that patch (https://github.com/ocsigen/tyxml/pull/273) was never complete anyway, so don't feel too badly 🙂
[19:13:26] *** Quits: xiongxin (~Thunderbi@119.123.103.170) (Remote host closed the connection)
[19:14:52] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[19:19:14] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:28:23] <Anarchos> when i compile coq : Error (alert deprecated): module Stdlib.Stream
[19:43:29] *** Joins: mro (~mro@2002:5cc3:904e:0:b508:85f0:b67a:2a51)
[19:45:41] *** Joins: sparogy (~sparogy@2604:a880:cad:d0::648:8001)
[19:46:21] <octachron> 4.14 will deprecate the Stream module indeed.
[19:46:45] <companion_cube> 💪
[19:53:27] <Drup> \O/
[20:02:34] <Anarchos> octachron it is pretty sure i am not a coq developer :)
[20:03:17] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[20:03:34] *** Quits: bartholin (~bartholin@158.110.70.215) (Quit: Leaving)
[20:12:26] *** Joins: sleepydog_ (~sleepydog@pool-100-33-241-236.nycmny.fios.verizon.net)
[20:13:22] *** Quits: sleepydog (~sleepydog@pool-100-33-241-236.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[20:13:48] *** Joins: ansiwen (~sanders@vm1.a6n.de)
[20:13:54] *** Joins: dwt__ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[20:13:56] *** Quits: ocabot (~coucoubot@134.209.175.17) (Ping timeout: 256 seconds)
[20:13:56] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: companion_cube (~simon@user/companion-cube) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: reynir (root@user/reynir) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: tizoc (~user@li296-221.members.linode.com) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: kandu (~kandu@138.68.48.10) (Ping timeout: 256 seconds)
[20:15:04] *** Quits: ansiwen_ (~sanders@vm1.a6n.de) (Ping timeout: 256 seconds)
[20:15:05] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[20:15:32] *** Joins: ocabot (~coucoubot@134.209.175.17)
[20:16:31] *** Joins: reynir (root@user/reynir)
[20:16:37] *** Joins: kandu (~kandu@138.68.48.10)
[20:16:49] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[20:17:49] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[20:17:50] *** Joins: ansiwen_ (~sanders@vm1.a6n.de)
[20:17:51] *** Joins: sleepydog (~sleepydog@pool-100-33-241-236.nycmny.fios.verizon.net)
[20:18:20] *** Quits: ansiwen (~sanders@vm1.a6n.de) (Read error: Connection reset by peer)
[20:18:25] *** Quits: dwt__ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[20:18:59] *** Quits: sleepydog_ (~sleepydog@pool-100-33-241-236.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[20:20:09] *** Joins: habnabit_ (~habnabit@python/site-packages/habnabit)
[20:24:47] *** Joins: tizoc (~user@li296-221.members.linode.com)
[20:27:28] *** Joins: companion_cube (~simon@user/companion-cube)
[20:32:12] *** Quits: mro (~mro@2002:5cc3:904e:0:b508:85f0:b67a:2a51) (Remote host closed the connection)
[20:36:00] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:37:38] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:21:16] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:24:30] *** Joins: rgrinberg (~textual@200.5.63.76)
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:30:40] *** Joins: ns12 (~ns12@user/ns12)
[21:48:08] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[21:48:18] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:48:37] *** Quits: mbuf (~Shakthi@122.174.165.234) (Quit: Leaving)
[22:14:05] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[22:14:33] *** Joins: zebrag (~chris@user/zebrag)
[22:17:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:18:23] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:24:12] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:24:32] *** Joins: zebrag (~chris@user/zebrag)
[22:31:35] *** Quits: salkin (~salkin@138.251.92.62.static.cust.telenor.com) (Ping timeout: 256 seconds)
[22:31:46] <d_bot> <zakkor> Is there any reason why there are only mutable record fields, but no mutable variables?
[22:36:39] <d_bot> <let Butanium = raise Not_found;;> What about ref ?
[22:37:06] <d_bot> <let Butanium = raise Not_found;;> ```ocaml
[22:37:07] <d_bot> <let Butanium = raise Not_found;;> let a = ref 0 in a := 2; !1```
[22:37:08] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[22:39:46] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Client Quit)
[22:41:50] <d_bot> <NULL> They are a wrap around a mutable field in a record, but they do it so well I don't know what true mutable variables would bring unless you want not to distinguish mutable and immutable variables in their types (but I don't think this is a good idea)
[22:41:50] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[22:58:28] *** Quits: olle (~olle@i5E866D9D.versanet.de) (Ping timeout: 264 seconds)
[22:59:30] <d_bot> <zakkor> Well yeah, not sure, that's why I'm asking, it just seemed a bit weird that mutable variables are represented using a wrapper around a mutable record field 😃
[23:00:04] <companion_cube> I'm not sure how closures woudl interact with mutable variables, for example
[23:00:09] <companion_cube> it complicates some things
[23:03:56] <zozozo> the problem would be duplication of these mutable variables: when you pass such a mutbale variable to a function, what exactly do you give the function ? you can't copy the value of the register where it would reside...
[23:04:32] <Corbin> Yeah, when it comes to formal specification, it turns out that *some* sort of box is required around mutable bound values.
[23:07:31] <zozozo> note that in the case where the mutable value does not escape the local scope of a function (i.e. it isn't given as argument to other function, nor captured in a closure), then the ocaml compiler will optimise a ref into a mutable variable, so that it's not allocated
[23:14:29] <d_bot> <zakkor> That makes sense and is exactly the sort of thing I expected, thanks guys! The optimisation is great to hear as well and is something I was wondering haha
[23:18:27] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[23:20:25] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:29:00] <zozozo> one (current) unfortunate downside of that is that it's sometimes the case that it's better (ofr performances) to write a big function body with a ref and for_loops, compared to a solution with recursive functions calls
[23:29:15] <zozozo> which is a bit sad for a functional language
[23:29:29] <zozozo> fortunately, flambda2 is trying to change that, ^^
[23:30:36] <companion_cube> but OCaml isn't just a functional language :)
[23:30:44] <companion_cube> why would it be bad to use some imperative stuff?
[23:34:03] <zozozo> i never said it's bad
[23:34:34] <zozozo> but the fact that imperative code is often times better optimized makes me sad
[23:34:58] <zozozo> especially considering that there are actually good ways to optimize the functional things in those cases
[23:35:12] <companion_cube> I'd rather OCaml help me write the imperative coe
[23:35:14] <companion_cube> code*
[23:35:36] <zozozo> well, the two aren't mutually exclusive
[23:35:42] *** Joins: average (uid473595@user/average)
[23:36:15] <companion_cube> and yet, imperative code would be a lower hanging fruit I believe :/
[23:36:40] <zozozo> well, it's more of a frontend/syntax kind of thing
[23:37:13] <companion_cube> sure, and ways of doing things that don't require exceptions
[23:37:24] <zozozo> exceptions are nice
[23:37:51] <companion_cube> exceptions suck compared to continue/break, sorry
[23:37:59] <companion_cube> it's nice to have them for the general case
[23:38:09] <companion_cube> but they're really suboptimal for the common case
[23:38:18] <companion_cube> and how do we know there's no allocation going on?
[23:40:22] <zozozo> well.. it's indeed hard to know whether they have been optimised out
[23:58:17] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[23:58:28] *** Joins: rgrinberg (~textual@200.5.63.76)
