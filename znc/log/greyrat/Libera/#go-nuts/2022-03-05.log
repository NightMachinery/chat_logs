[00:00:37] *** Quits: beholders_eye (~weechat@2804:7f3:686:2b5e:c356:e59:11fd:363b) (Quit: WeeChat 3.3)
[00:08:52] <lidless> I wish to god there was a clojure->go converter
[00:11:12] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:8598:b3d3:f4ef:2f9d)
[00:12:47] *** jpneverwas is now known as neverwas
[00:12:55] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[00:13:36] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:13:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:14:43] *** Quits: dr0n (~nabromov@176.26.119.61) (Quit: WeeChat 3.3)
[00:18:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:24:56] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[00:32:32] *** Quits: phoenixh (~phoenixh@p200300dd6f21a70040446a06d6cef5d2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:46:48] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.4)
[00:52:54] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[00:55:22] *** Quits: thorsager (~mit@green.krakow.dk) (Remote host closed the connection)
[00:55:22] *** Quits: thorsage1 (~mit@green.krakow.dk) (Remote host closed the connection)
[00:55:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:56:41] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:57:11] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[01:00:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[01:06:36] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545) (Ping timeout: 245 seconds)
[01:06:53] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:09:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:09:41] *** Joins: crashrep (~crashrep@user/crashrep)
[01:10:47] *** __xor is now known as _xor
[01:15:50] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[01:16:15] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:17:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:17:58] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[01:22:57] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:22:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:24:00] *** Joins: treeford (~charleste@user/treeford)
[01:28:21] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[01:30:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:30:45] *** Quits: absc (~absc@dynamic-adsl-94-34-200-132.clienti.tiscali.it) (Quit: Leaving)
[01:32:17] <b0nn> lidless: then write one :)
[01:32:57] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[01:34:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:40:58] *** Joins: treeford (~charleste@user/treeford)
[01:42:12] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:47:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:52:09] *** Quits: jespada_ (~jespada@85.255.234.170) (Ping timeout: 256 seconds)
[01:52:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[01:54:27] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[01:54:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:03:36] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:8573:c735:e30f:72e1)
[02:05:08] *** Quits: ekathva (~ekathva@2001:999:51:19b8:f2b5:31fb:6c84:f10) (Remote host closed the connection)
[02:06:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:09:09] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[02:10:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:14:38] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[02:15:13] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[02:15:22] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:15:24] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[02:17:26] *** Joins: jespada (~jespada@85.255.234.170)
[02:18:19] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[02:18:42] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[02:18:59] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[02:21:00] *** Joins: treeford (~charleste@user/treeford)
[02:25:37] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[02:27:10] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:31:22] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:31:22] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:40:19] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 256 seconds)
[02:49:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:52:24] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[02:57:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:58:18] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[03:02:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[03:08:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:11:30] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[03:13:19] *** Joins: Torr (~Torr@user/torr)
[03:15:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:17:15] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[03:19:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:51:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:55:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:55:57] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[03:58:44] *** Joins: fling (~fling@user/fling)
[04:03:16] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[04:07:30] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Quit: Leaving)
[04:08:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:13:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[04:13:47] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:8573:c735:e30f:72e1) (Quit: Client closed)
[04:14:32] *** Quits: theo (~theo@user/theo) (Read error: Connection reset by peer)
[04:15:31] *** Joins: theo (~theo@user/theo)
[04:15:45] *** Joins: bigGopher (~dan@207.98.176.66)
[04:43:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[04:47:46] *** Joins: rcernin (~rcernin@101.189.129.123)
[04:53:33] *** Joins: treeford (~charleste@user/treeford)
[04:56:58] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[04:58:22] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[04:59:00] *** Quits: tripfandango (~tripfanda@77.137.71.199) (Ping timeout: 252 seconds)
[05:00:14] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[05:09:57] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[05:14:37] *** Joins: Torr (~Torr@user/torr)
[05:17:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:22:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:33:28] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:42:28] *** Joins: bluedust (~bluedust@103.165.167.61)
[06:00:30] *** Joins: ejjfunky (~ejjfunky@125.164.21.90)
[06:02:12] *** Joins: treeford (~charleste@user/treeford)
[06:03:37] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[06:07:02] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[06:13:44] *** Joins: johnjohn101 (~johnjohn1@2600:1700:3905:6010:b84d:9b9e:416c:5ba)
[06:20:37] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:24:19] *** Joins: henry40408 (~henry4040@175.181.153.66)
[06:25:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:26:09] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:8598:b3d3:f4ef:2f9d) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:30:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:35:39] *** Joins: bluedust_ (~bluedust@86.106.136.216)
[06:39:20] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 272 seconds)
[06:40:11] *** Joins: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net)
[06:44:40] *** Quits: ejjfunky (~ejjfunky@125.164.21.90) (Quit: Leaving)
[06:45:02] *** Quits: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net) (Ping timeout: 272 seconds)
[06:45:07] *** Joins: ejjfunky (~ejjfunky2@125.164.19.180)
[06:48:30] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 260 seconds)
[06:49:26] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[06:49:42] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[06:49:59] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[06:51:05] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[06:53:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[06:55:14] *** Joins: rcernin (~rcernin@101.189.129.123)
[06:56:48] *** Quits: rcernin (~rcernin@101.189.129.123) (Client Quit)
[06:58:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:03:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[07:03:08] *** Quits: bluedust_ (~bluedust@86.106.136.216) (Remote host closed the connection)
[07:06:07] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[07:06:20] *** Joins: rvalue (~rvalue@user/rvalue)
[07:06:59] *** Joins: bluedust (~bluedust@194.37.96.104)
[07:08:03] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:09:13] *** Quits: henry40408 (~henry4040@175.181.153.66) (Quit: The Lounge - https://thelounge.chat)
[07:10:09] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[07:11:20] *** Joins: crashrep (~crashrep@user/crashrep)
[07:13:00] *** Quits: bluedust (~bluedust@194.37.96.104) (Ping timeout: 240 seconds)
[07:13:46] *** Joins: andlabs (~andlabs@2605:ef80:8098:40c1:1e2:f2b:43d4:87cd)
[07:16:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:17:31] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[07:20:58] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Client Quit)
[07:21:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:22:54] *** Joins: gui (~gui@189.6.29.251)
[07:23:27] *** Parts: gui (~gui@189.6.29.251) ()
[07:32:32] <b0nn> instead of memorising utf8.RuneCountInString; I'm thinking I'll just len([]rune("string")) all the time :\
[07:33:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:35:36] <b0nn> hrm, maybe not https://github.com/golang/go/blob/release-branch.go1.10/src/runtime/string.go#L158 vs https://cs.opensource.google/go/go/+/refs/tags/go1.17.8:src/unicode/utf8/utf8.go;l=411
[07:36:28] <b0nn> er, https://github.com/golang/go/blob/release-branch.go1.17/src/runtime/string.go#L177
[07:37:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:38:43] *** Quits: andlabs (~andlabs@2605:ef80:8098:40c1:1e2:f2b:43d4:87cd) (Read error: Connection reset by peer)
[07:39:19] *** Joins: andlabs (~andlabs@172.102.12.193)
[07:43:29] <johnjohn101> is there a reason i have to run this command after install if i want to install a module  go env -w GO111MODULE=autoÂ 
[07:43:55] <johnjohn101> i guess my question is why isn't this defaulted
[07:46:03] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[07:46:10] <fizzie> Likely because values other than the default ("on") are being deprecated.
[07:46:54] <fizzie> (The default used to be "auto" for Go versions before 1.16, but now defaults to "on".)
[07:46:59] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:48:00] <johnjohn101> there was no value for that GO111MODULE
[07:48:01] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 256 seconds)
[07:48:19] <fizzie> I mean, the default behavior is that of "on" when it's not specified.
[07:48:29] <fizzie> https://tip.golang.org/doc/go1.16 "More precisely, the `GO111MODULE` environment variable now defaults to `on`. To switch to the previous behavior, set `GO111MODULE` to `auto`."
[07:48:37] <johnjohn101> well i couldn't install the module just out of the box.
[07:48:51] <johnjohn101> i had to run that command first
[07:49:25] <johnjohn101> was getting error go.mod not found or something like that
[07:49:29] *** Joins: j3s (~j3s@cyberia.club/member/j3s)
[07:49:31] <johnjohn101> recent code
[07:50:08] <fizzie> If it doesn't have a go.mod, it's not a module.
[07:50:10] <johnjohn101> 1.17.8
[07:50:42] <johnjohn101> so would need to go back to the author to make it a module?
[07:50:52] <b0nn> johnjohn101: what was the project you were trying to install?
[07:51:22] <johnjohn101> go get github.com/mattn/go-sqlite3
[07:51:52] <b0nn> hm, that's got a go.mod
[07:52:20] <fizzie> But you couldn't use `go get github.com/mattn/go-sqlite3` outside of a module.
[07:52:49] <b0nn> his "Install" is go get github.com/mattn/go-sqlite3
[07:52:57] <b0nn> according to the Readme
[07:53:23] <b0nn> Important: because this is a CGO enabled package, you are required to set the environment variable CGO_ENABLED=1 and have a gcc compile present within your path.
[07:53:53] <b0nn> johnjohn101: ^ do you have those
[07:54:45] <johnjohn101> i didn't on kubuntu,   but once i ran that go env command above, i did the go get  command and it all worked
[07:55:30] <johnjohn101> same on windows
[07:55:38] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:56:44] *** Joins: rcernin (~rcernin@101.189.129.123)
[07:56:45] <b0nn> hat's really odd
[07:56:51] <b0nn> That's*
[07:56:58] <johnjohn101> https://www.thepolyglotdeveloper.com/2017/04/using-sqlite-database-golang-application/  is what i followed
[07:57:08] <b0nn> the GO111MODULE env var shouldn't be needed
[07:59:15] <johnjohn101> this is what i found on stackoverflow to rectify the error i was getting https://stackoverflow.com/questions/66894200/error-message-go-go-mod-file-not-found-in-current-directory-or-any-parent-dire
[08:00:39] <fizzie> I take it you haven't done a `go mod init` for your *own* code?
[08:01:21] <johnjohn101> let me try that in a different directory
[08:01:53] <b0nn> johnjohn101: there are two answers on that SO link related to GO111MODULE, one says "set it to 'off", the other says "set it to 'auto'"
[08:02:00] *** Quits: khyr0n_ (~khyr0n@2806:2f0:9261:c40a:7ac7:701c:931c:7b1d) (Quit: Leaving)
[08:02:11] <fizzie> Because in the module-oriented model, you don't use `go get` to install libraries into GOPATH, but instead the piece of code you're writing has its own go.mod file that lists its dependencies, and `go get` (or maybe more often, just writing the imports as if they existed and running `go mod tidy`) is used to manage that go.mod file.
[08:02:20] *** Joins: khyr0n (~khyr0n@2806:2f0:9261:c40a:7ac7:701c:931c:7b1d)
[08:02:33] <johnjohn101> go: cannot determine module path for source directory C:\go\rls (outside GOPATH, module path must be specified)
[08:02:43] <johnjohn101> that's what go mod init returned
[08:02:55] <b0nn> you need to set up with a FQDN
[08:02:56] <fizzie> Yes, I meant `go mod init <name for your module>`, sorry for being confusing.
[08:04:34] <johnjohn101> is that for writing a new module?
[08:04:43] <johnjohn101> what is FQDN
[08:05:04] <fizzie> Some of the answers in that SO post do seem to be trying to explain making a module (the ones that mention `go mod init`), but all in all it's a very confusing thread, with about a 50:50 split of people recommending that, vs. people explaining how to re-enable GOPATH-style development, and none really clearly explains both options.
[08:05:36] <b0nn> johnjohn101: have a look at this https://go.dev/doc/tutorial/create-module
[08:06:05] <johnjohn101> well it's not my module, so do i need to go back to author and have him fix?
[08:06:47] <fizzie> No, "github.com/mattn/go-sqlite3" (or "github.com/mattn/go-sqlite3/v2" for v2.* versions) is *already* a module.
[08:07:17] <fizzie> The question is how you'd *use* it in module-aware mode (GO111MODULE=on), and the way you'd use it is to put the code *you* want to write inside another module, which depends on it.
[08:07:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:09:01] <johnjohn101> well the download of that module didn't take place until i did the auto.
[08:09:30] <nitrix> johnjohn101, You misdiagnosed the problem and went down the wrong path so now you're confused. Your brand new project simply needs a `go mod init` to create a `go.mod` file. Then your `go get` will register dependencies within the project instead of globally for your machine.
[08:09:59] <johnjohn101> nitrix ok i will try again with a new project
[08:10:34] *** Quits: andlabs (~andlabs@172.102.12.193) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:11:55] *** Joins: bluedust (~bluedust@81.92.205.24)
[08:12:11] <nitrix> I can assure you the problem isn't with sqlite3 having used it myself multiple times.
[08:12:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:12:52] <johnjohn101> once the pkg was installed i was able to work it.
[08:13:02] <johnjohn101> ok new project has the go env set
[08:13:13] *** Joins: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-077a.inf6.spectrum.com)
[08:13:14] <nitrix> You shouldn't need any environment variables.
[08:13:33] <johnjohn101> so how do i delete the
[08:13:54] <johnjohn101> GO111MODULE
[08:14:22] <nitrix> Go modules have been the facto way of working with Go codebases since Go 1.13, it's turned on by default.
[08:14:33] <nitrix> In fact, it's getting removed in 1.18 to avoid people getting confused.
[08:15:11] <johnjohn101> that's just days away right?
[08:15:15] <fizzie> `go env -w` will have written the setting into the per-user configuration file, typically ~/.config/go/env. You can use `go env -u GO111MODULE` to unset it.
[08:15:24] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[08:16:21] <fizzie> Are you sure it's really getting removed in 1.18?
[08:17:11] <fizzie> https://tip.golang.org/doc/go1.18 for example still has things like: "In GOPATH mode (with GO111MODULE=off), go get still builds and installs packages, as before."
[08:19:03] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[08:19:09] <nitrix> fizzie, They were discussing that `go get` shouldn't install anymore and require a proper `go install`. Go 1.17 was going to deprecate it and Go 1.18 enforce it. Lots of go modules were supposed to go along with it.
[08:19:25] <nitrix> fizzie, I'm guessing Generics postponed things :/
[08:20:05] <nitrix> s/Lots of go modules/Lots of go modules intricacies/
[08:20:59] <b0nn> Not having it would mean that projects that are not modules cannot be installed
[08:21:07] <b0nn> That would hurt a lot of users
[08:21:07] <fizzie> The part of `go get` in module-aware mode no longer installing anything is in the 1.18 release notes (that's where the quote was from), I just don't think it was going to extend into further deprecating GOPATH mode.
[08:21:15] *** Joins: todo75 (~todo75@user/todo75)
[08:21:35] *** Quits: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-077a.inf6.spectrum.com) (Remote host closed the connection)
[08:22:12] *** Quits: bluedust (~bluedust@81.92.205.24) (Ping timeout: 240 seconds)
[08:23:51] <nitrix> Honestly an overreach of me with the "in fact", I assumed things had played out like I heard, I'm a little out of touch.
[08:25:43] <johnjohn101> ok if that env variable in set to on, the package does not download
[08:26:11] <johnjohn101> C:\go\sqlite\pkg>go env
[08:26:11] <johnjohn101> set GO111MODULE=on
[08:30:48] <johnjohn101> is this something i should go to author about?
[08:33:50] *** Joins: masoudd (~masoudd@user/masoudd)
[08:33:56] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Remote host closed the connection)
[08:34:12] *** Joins: andlabs (~andlabs@70.107.171.168)
[08:35:29] <nitrix> You don't need a C:\go either.
[08:35:46] <johnjohn101> that's my directory that i'm using for projects
[08:40:45] *** Joins: bluedust (~bluedust@103.165.167.61)
[08:42:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:48:11] *** Joins: treeford (~charleste@user/treeford)
[08:48:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[08:49:54] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[08:52:37] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[08:52:41] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[08:59:03] *** Joins: CacheMoney (~danam@c-24-34-156-60.hsd1.ct.comcast.net)
[08:59:12] *** Parts: CacheMoney (~danam@c-24-34-156-60.hsd1.ct.comcast.net) ()
[09:11:35] *** Joins: henry40408 (~henry4040@175.181.153.66)
[09:22:52] *** Joins: dockk (~dockk@nat-x097-064.reshsg.uci.edu)
[09:23:22] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[09:34:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:35:53] *** Joins: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net)
[09:39:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:45:12] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[09:48:10] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:52:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[09:56:49] *** Joins: scjosh8 (~scjosh@206.189.79.69)
[09:58:28] *** Quits: scjosh (~scjosh@206.189.79.69) (Ping timeout: 250 seconds)
[09:58:29] *** scjosh8 is now known as scjosh
[10:10:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:14:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:22:53] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[10:23:30] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[10:25:00] *** Quits: rcernin (~rcernin@101.189.129.123) (Read error: Connection reset by peer)
[10:26:26] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[10:26:30] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[10:26:55] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[10:27:13] *** Parts: johnjohn101 (~johnjohn1@2600:1700:3905:6010:b84d:9b9e:416c:5ba) ()
[10:27:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:29:07] *** Joins: rcernin (~rcernin@101.189.129.123)
[10:30:48] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[10:33:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:34:17] *** Quits: normen (~normen@p200300d71749cc00f0fe2b2730c17c8d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:45:05] *** Quits: dockk (~dockk@nat-x097-064.reshsg.uci.edu) (Ping timeout: 256 seconds)
[10:46:45] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[10:46:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:48:39] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:51:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[10:58:47] *** Joins: bluedust (~bluedust@103.165.167.61)
[11:00:32] *** Joins: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de)
[11:03:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:05:52] *** Joins: rcernin (~rcernin@101.189.129.123)
[11:06:34] *** Quits: rcernin (~rcernin@101.189.129.123) (Client Quit)
[11:08:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:10:28] *** Joins: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net)
[11:14:37] *** Quits: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net) (Ping timeout: 240 seconds)
[11:25:40] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:a1e1:9675:6182:bb0a)
[11:34:23] *** Quits: j3s (~j3s@cyberia.club/member/j3s) (Ping timeout: 256 seconds)
[11:35:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:36:15] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[11:36:49] *** Joins: ugjka (~ugjka@ugjka.net)
[11:39:24] *** Joins: ekathva (~ekathva@2001:999:53:4449:1838:f296:952e:bb23)
[11:39:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:39:49] *** Quits: todo75 (~todo75@user/todo75) (Quit: todo75)
[11:48:31] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:56:59] *** Joins: mrig (~mrig@user/mrig)
[11:57:46] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[12:00:32] *** Joins: ricci (~ricci@31.187.110.131)
[12:07:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:13:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:15:05] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:16:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[12:16:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:20:52] <Mathisen> is there any site you peolpe would recommend to learn go, that is kina like codecademy where you get some hints if you need it, and have good exersices
[12:24:31] *** Joins: treeford (~charleste@user/treeford)
[12:28:36] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[12:30:13] *** Quits: borring (~borring@2001:470:69fc:105::1:532b) (Quit: You have been kicked for being idle)
[12:32:42] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[12:33:19] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:33:31] *** Joins: bluedust (~bluedust@103.165.167.61)
[12:39:04] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 272 seconds)
[12:40:54] *** Joins: rendar (~rendar@user/rendar)
[12:41:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:46:03] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:46:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:46:47] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[12:50:12] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[12:50:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[12:51:26] *** Joins: mrig (~mrig@user/mrig)
[12:57:23] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[12:58:23] *** Joins: leonarth (~leonarth@user/leonarth)
[13:12:29] *** Joins: shka (~herr@109.231.3.55)
[13:16:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:22:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:26:31] *** Quits: ekathva (~ekathva@2001:999:53:4449:1838:f296:952e:bb23) (Quit: Leaving)
[13:27:00] *** Joins: xb0o2_ (~xb0o2@user/xb0o2)
[13:27:01] *** Joins: X-Scale` (~ARM@83.223.233.227)
[13:28:12] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 240 seconds)
[13:28:16] *** X-Scale` is now known as X-Scale
[13:34:42] *** Quits: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:36:58] *** Joins: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de)
[13:41:38] *** Quits: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:44:30] *** Quits: xb0o2_ (~xb0o2@user/xb0o2) (Quit: Leaving)
[13:44:36] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[13:44:52] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[13:48:54] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[13:50:46] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 245 seconds)
[13:53:41] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:55:41] *** Joins: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de)
[13:57:34] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Max SendQ exceeded)
[13:57:58] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[14:01:48] *** Quits: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:01:50] <xb0o2> What's the logic behind an end-bounded slice (e.g. bar := foo[:4]) inheriting the entire capacity of foo? I find it quite unintuitive and I can't think why you would want that behavior?
[14:05:03] <ricci> bar uses the same underlying array as foo, it doesn't allocate a new one
[14:08:05] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:12:26] <ricci> this means that bar[0] = x will result in foo[0] being == x, and bar = append(bar, y) will result in foo[4] == y
[14:12:34] <ricci> use copy() if you want a copy
[14:14:23] <xb0o2> I appreciate that it uses the same underlying array. I'm saying it's slightly counterintuitive behaviour to end up with a slice of len(2), cap(3) (for example).
[14:16:07] <xb0o2> In the inverse where you're excluding items from the start of the slice (e.g. bar := foo [3:]) you end up with a reduced capacity to stop you from attempting to write off the end of the backing array.
[14:16:09] <xb0o2> Which makes sense.
[14:16:32] <xb0o2> I just don't see the logic behind the default behaviour being bar = foo[:3] ending up with a capacity > length
[14:16:53] <j416> no need to reallocate space
[14:16:58] <j416> as was mentioned
[14:17:19] <ricci> xb0o2: because the underlyin array actually *has* a greater capacity
[14:17:19] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 256 seconds)
[14:17:30] <xb0o2> Yes, I know that.
[14:17:56] <ricci> so what's the problem? it quite intuitive
[14:19:09] <j416> if the size of the underlying array was to be kept to the exact size of the slice at all times, that would mean a lot of reallocation, and it would lose one of the benefits of slices
[14:19:23] <j416> (being cheap)
[14:20:41] <xb0o2> j416: I'm not suggesting that at all.
[14:20:57] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:20:58] <j416> then what?
[14:21:07] <xb0o2> I'm suggesting it would be more intuitive that the new slice, bar, have it's len and cap the same. Nothing to do with the original slice or the backing array.
[14:21:29] <xb0o2> So that the behaviour of...
[14:21:31] <xb0o2> a := []int{1,2,3}; b := a[:1]; b = append(b, 9);
[14:22:12] <ricci> then use copy(), but this needs reallocation
[14:22:22] <xb0o2> Would result in a still being 1,2,3 and b pointing to a newly allocated array somewhere else.
[14:22:28] <j416> xb0o2: cap is the size of the underlying array.
[14:22:39] <j416> lidless: len is the size of the slice.
[14:22:43] <j416> er, xb0o2 *
[14:22:51] <xb0o2> j416: That's not strictly true?
[14:23:02] <j416> it isnT?
[14:23:09] <xb0o2> a := []int{1,2,3}; b := a[1:];
[14:23:22] <xb0o2> The actual backing array of both has len(3), b has len(2)
[14:23:33] <j416> yes?
[14:24:08] <xb0o2> Sorry.
[14:24:13] <xb0o2> cap(3), cap(2)
[14:24:14] <xb0o2> :)
[14:24:16] <j416> right
[14:24:46] <j416> it's still the same array
[14:25:01] *** Joins: tomasfarias1 (~tomasfari@user/tomasfarias)
[14:25:02] <j416> but in the case of b, the pointer is moved ahead
[14:25:14] <j416> so yes, I think you're right in that
[14:25:33] <j416> (but I don't know 100%)
[14:26:04] *** Joins: mmfood (~mmfood@81-229-169-126-no92.tbcn.telia.com)
[14:26:10] <xb0o2> The pointer is moved ahead yes
[14:26:34] <j416> cap is then the number of elements you can add until the array gets reallocated
[14:26:55] <j416> (is that a good definition?)
[14:26:55] <xb0o2> I guess the logic would be that the cap of a slice is always len(slice ptr - original slice ptr)
[14:27:02] <j416> probably mentioned in the spec
[14:27:04] <xb0o2> (When slicing)
[14:27:20] <j416> anyway, I'm off o/ gl
[14:27:31] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[14:27:32] *** tomasfarias1 is now known as tomasfarias
[14:32:12] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[14:32:17] <gl> .
[14:34:54] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[14:35:51] <xb0o2> Ok, reading through the spec has definitely helped swap the way I think about it.
[14:39:59] *** Joins: phoenixh (~phoenixh@p200300dd6f20f80045e0fbeedb177095.dip0.t-ipconnect.de)
[14:52:31] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[14:52:34] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[14:52:51] *** Joins: teasea (~teasea@user/teasea)
[14:53:11] *** Joins: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de)
[14:54:12] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[14:55:11] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[14:55:55] *** Quits: teasea (~teasea@user/teasea) (Client Quit)
[14:57:48] *** Joins: teasea (~teasea@user/teasea)
[15:07:04] *** Joins: tomasfarias6 (~tomasfari@user/tomasfarias)
[15:09:00] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 240 seconds)
[15:09:00] *** tomasfarias6 is now known as tomasfarias
[15:09:14] *** Joins: zunk (~zunk@user/zunk)
[15:12:26] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[15:13:47] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:15:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:16:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:18:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[15:18:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:25:18] *** Quits: borrougagnou (~borrougag@91.134.153.132) (Quit: %byebye%)
[15:25:50] *** Joins: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net)
[15:31:00] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[15:31:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:36:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:39:09] *** Joins: fef (~thedawn@user/thedawn)
[15:42:06] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[15:52:24] *** Quits: normen (~normen@p200300d71749cc00e92c6d6df6179e3c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:52:44] *** Joins: Everything (~Everythin@37.115.210.35)
[15:56:41] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[15:56:53] *** Joins: rvalue (~rvalue@user/rvalue)
[16:00:48] *** Joins: treeford (~charleste@user/treeford)
[16:04:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:04:57] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[16:08:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:10:16] *** Quits: phoenixh (~phoenixh@p200300dd6f20f80045e0fbeedb177095.dip0.t-ipconnect.de) (Quit: Leaving)
[16:12:56] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[16:14:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[16:14:31] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[16:15:53] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:16:34] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (Quit: Bridge terminating on SIGTERM)
[16:16:56] *** Quits: mmfood (~mmfood@81-229-169-126-no92.tbcn.telia.com) (Ping timeout: 272 seconds)
[16:17:34] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[16:20:19] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[16:20:28] *** Joins: ricci (~ricci@31.187.110.131)
[16:35:49] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:39:09] *** Joins: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net)
[16:39:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:40:43] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[16:43:40] *** Joins: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[16:44:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:44:10] *** Quits: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net) (Ping timeout: 272 seconds)
[16:48:02] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (Quit: Bridge terminating on SIGTERM)
[16:48:19] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[17:03:55] *** Joins: normen (~normen@pd9eecc5a.dip0.t-ipconnect.de)
[17:09:33] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[17:09:33] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[17:12:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:17:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[17:19:35] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:39:16] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[17:42:10] *** Joins: han-solo (~han-solo@user/han-solo)
[17:46:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:46:40] *** Joins: bluedust (~bluedust@103.165.167.61)
[17:51:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:52:05] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 256 seconds)
[18:07:52] *** Joins: mmfood (~mmfood@82.118.29.150)
[18:18:04] *** Joins: arkurious (~arkurious@user/arkurious)
[18:19:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:21:01] *** Joins: bluedust_ (~bluedust@185.248.85.25)
[18:21:28] *** Quits: bluedust (~bluedust@103.165.167.61) (Read error: Connection reset by peer)
[18:21:57] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:24:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[18:25:47] *** Quits: bluedust_ (~bluedust@185.248.85.25) (Ping timeout: 256 seconds)
[18:29:37] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[18:37:25] *** Quits: oilt^ (~oilt@50.224.20.226) (Ping timeout: 256 seconds)
[18:53:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:54:28] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:54:41] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[18:57:05] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Client Quit)
[18:57:19] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[18:58:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[19:02:56] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[19:11:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:16:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:24:38] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[19:24:44] *** Joins: pyzozord (pyzozord@user/pyzozord)
[19:25:14] <pyzozord> hey, what does this sentence mean"Unless used through a variable of interface type, methods
[19:25:17] <pyzozord> can always be statically bound (they are not "virtual"), and incur no
[19:25:20] <pyzozord> "Unless used through a variable of interface type, methods can always be statically bound (they are not "virtual"), and incur no runtime overhead compared to an ordinary function."
[19:25:30] <pyzozord> I found it here https://github.com/golang/go/blob/18c5b488a3b2e218c0e0cf2a7d4820d9da93a554/doc/go_spec#L170
[19:29:28] <fizzie> I imagine it means what it says. If you have a method call expression like `x.Foo()`, if the compile-time ("static") type of x is not an interface type, the concrete implementation of Foo() that's relevant is the one defined on the known type of x, and the situation is not any different from an ordinary function call (doesn't need an extra lookup through a vtable or something). Contrast C++ and
[19:29:30] <fizzie> its `virtual` vs. non-`virtual` methods on a class.
[19:31:26] <mickey> i wish there was something like python's pandas for go :(
[19:34:21] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (Ping timeout: 256 seconds)
[19:34:23] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[19:34:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[19:35:36] <fizzie> There's been some attempts, but I don't think anything has really stuck. I guess Gota (https://github.com/go-gota/gota) is the one most closely inspired by Pandas? Just like Gonum's attempting to be the "NumPy of Go".
[19:36:02] *** Joins: khyr0n_ (~khyr0n@2806:2f0:9141:5c07:cff4:f305:71bb:20c6)
[19:37:09] *** Joins: treeford (~charleste@user/treeford)
[19:37:29] <pyzozord> fizzie: x can be of concrete type that implements Foo? How?
[19:38:54] <mickey> gota is kind of abandoned though. theres a fork/another attempt that does some extra stuff but lacks some gota features (like joins) and doesn't seem to be active either
[19:38:58] *** Quits: khyr0n (~khyr0n@2806:2f0:9261:c40a:7ac7:701c:931c:7b1d) (Ping timeout: 260 seconds)
[19:39:00] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[19:39:37] <fizzie> pyzozord: Does this clear it up? https://go.dev/play/p/qKVEy36AC5F
[19:40:47] <pyzozord> fizzie: a bit
[19:41:55] <pyzozord> fizzie: but if Foo() declares explicitly that it is bound to Thing, then Iface is completely redundant no? Foo can handle only Thing anyway
[19:42:02] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[19:42:18] <fizzie> pyzozord: Methods are *always* declared on concrete types.
[19:42:24] <fizzie> Defined, I should say.
[19:42:57] <fizzie> You couldn't write `func (Iface) Foo() {}`; interfaces only contain method sets, not implementations of methods.
[19:43:22] *** Quits: jimeh (jimeh@matrix.bah.io) (Remote host closed the connection)
[19:43:23] <fizzie> It doesn't make Iface "completely redundant", because you could have other types that implement it (by defining the same methods).
[19:43:28] <fizzie> Lemme add to that example a little.
[19:43:52] *** Joins: yaraju (~yaraju@user/yaraju)
[19:44:09] *** Joins: jimeh (jimeh@matrix.bah.io)
[19:45:01] <fizzie> pyzozord: Here: https://go.dev/play/p/1OOtxqGh8Vr
[19:45:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:45:35] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[19:46:01] <pyzozord> fizzie: thanks, I think I get it now
[19:50:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:50:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[19:58:33] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:02:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:03:34] *** Quits: piwu (jtagcat@193.40.103.110) (Quit: Bye!)
[20:03:57] *** Joins: piwu (jtagcat@193.40.103.110)
[20:04:23] *** Quits: piwu (jtagcat@193.40.103.110) (Client Quit)
[20:06:09] *** Joins: piwu (jtagcat@193.40.103.110)
[20:08:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:08:15] *** Joins: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net)
[20:08:32] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Remote host closed the connection)
[20:08:34] *** Joins: khyr0n__ (~khyr0n@2806:2f0:9261:d004:d43c:6a5:4f2f:8d66)
[20:08:55] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[20:11:01] *** Joins: khyr0n (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108)
[20:11:27] *** Quits: khyr0n_ (~khyr0n@2806:2f0:9141:5c07:cff4:f305:71bb:20c6) (Ping timeout: 252 seconds)
[20:13:02] *** Quits: khyr0n__ (~khyr0n@2806:2f0:9261:d004:d43c:6a5:4f2f:8d66) (Ping timeout: 260 seconds)
[20:17:33] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[20:24:12] *** Quits: mmfood (~mmfood@82.118.29.150) (Ping timeout: 240 seconds)
[20:24:38] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[20:27:50] *** Joins: mmfood (~mmfood@82.118.29.46)
[20:35:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:38:07] *** Quits: ejjfunky (~ejjfunky2@125.164.19.180) (Remote host closed the connection)
[20:40:11] *** Joins: independent56 (~independe@2.26.38.133)
[20:40:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:41:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:45:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[20:48:14] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[20:48:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:50:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd)
[20:51:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[20:52:53] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Read error: Connection reset by peer)
[20:52:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:53:02] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[20:58:52] *** Quits: independent56 (~independe@2.26.38.133) (Remote host closed the connection)
[20:58:54] *** Joins: dr0n (~nabromov@176.26.119.61)
[20:59:54] *** Joins: independent56 (~independe@2.26.38.133)
[21:02:12] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 240 seconds)
[21:02:30] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[21:04:28] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[21:07:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:08:42] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:08:56] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[21:11:44] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[21:12:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[21:13:20] *** Quits: independent56 (~independe@2.26.38.133) (Ping timeout: 272 seconds)
[21:14:51] *** Joins: _Asgaroth_ (~Asgaroth@93.107.191.92)
[21:14:55] *** Joins: Garb0 (~Garb0@user/garb0)
[21:14:59] *** Quits: _Asgaroth_ (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[21:15:08] <Garb0> hi
[21:15:16] <Garb0> CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -buildmode=c-shared testdll.go
[21:15:23] <Garb0> Trying to build a DLL for windows on linux
[21:15:31] <Garb0> open /tmp/go-build2383896885/b001/exe/test: no such file or directory
[21:15:44] <Garb0> what's the issue here, any help? Is this PEBKAC?
[21:17:24] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 240 seconds)
[21:18:10] *** Joins: Latrina_ (~Latrina@cpc138118-hatf10-2-0-cust296.9-3.cable.virginm.net)
[21:18:21] *** Quits: Latrina (~Latrina@user/latrina) (Ping timeout: 250 seconds)
[21:19:40] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Ping timeout: 250 seconds)
[21:21:06] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[21:22:16] *** Quits: MD87 (~MD87@user/md87) (Remote host closed the connection)
[21:22:25] *** Joins: MD87 (~MD87@user/md87)
[21:22:36] *** Quits: subj3ct (~brandon@99-36-164-204.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[21:28:01] *** Quits: khyr0n (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108) (Ping timeout: 256 seconds)
[21:30:26] *** Joins: treeford (~charleste@user/treeford)
[21:31:43] *** Joins: khyr0n (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108)
[21:33:37] *** Quits: noonien (~noonien@user/noonien) (Quit: Ping timeout (120 seconds))
[21:33:58] *** Joins: noonien (~noonien@user/noonien)
[21:41:36] <andlabs> Garb0: add -v -x to the go build, what output does it show? use pastebin
[21:44:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:44:19] <Garb0> andlabs: https://pastebin.com/7MpBTySV
[21:44:31] <Garb0> oops, idk why it automatically highlighted to bash
[21:45:31] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[21:45:32] <Garb0> also i changed the test.go to amogus.go throughout since i thought the error had to do with the name somehow fyi
[21:45:33] *** Joins: khyr0n_ (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108)
[21:45:59] *** Quits: khyr0n (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108) (Read error: Connection reset by peer)
[21:46:33] *** Joins: zunino (~zunino@2804:7f5:f380:fad:b53f:1ce9:be:f7a8)
[21:48:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:50:18] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[21:50:31] *** Joins: rvalue (~rvalue@user/rvalue)
[21:54:03] *** Joins: Torr (~Torr@user/torr)
[21:55:32] <andlabs> weird
[21:55:43] <andlabs> it's not creating the work directories...
[21:56:02] <andlabs> in my experience that means the variable saren't set correctly but for you they are...
[21:58:16] *** Quits: zunino (~zunino@2804:7f5:f380:fad:b53f:1ce9:be:f7a8) (Quit: WeeChat 3.0.1)
[22:00:21] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[22:02:05] <Garb0> andlabs: I *think* it's due to some insane-default misconfig wizardry due to gccgo, mingw 686, go-gcco and go-golang all installed at once
[22:03:01] <Garb0> i swear to god debian based dists are nothing but trouble, think im gonna retry building on Arch to see if it works. PS, i tried running on both fish and bash to avoid env blackmagickery, still nothing
[22:03:23] <fizzie> I gave it a little bit of a strace locally (since I've got MinGW installed), and to me it looked like the problem was, MinGW linker wrote the final output into a "testdll.exe", but then Go tried to look for it without the file extension: https://0x0.st/oPOd.txt
[22:03:27] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[22:04:28] <Garb0> Hm, i'll try -o testdll.exe
[22:04:47] <fizzie> Heh, that actually worked here.
[22:05:11] <fizzie> (Well, generated a file, anyway.)
[22:06:11] <fizzie> In fact, `-o testdll.dll` worked as well. It's only with no -o or with `-o <something with no dot>` that it fails to work.
[22:06:26] <andlabs> ah yeah, automatic extensions by windows linkers
[22:06:33] <Garb0> I... it fucking works?
[22:06:38] <Garb0> it did work lmao.
[22:06:47] <andlabs> I forgot all about that on linux
[22:06:55] <Garb0> Why, rob pike? WHY?
[22:07:19] <andlabs> because historically DOS and windows commands like to be "smart" and add extensions themselves
[22:07:47] <Garb0> fizzie, andlabs: Thanks a million times, you guys are real wizards
[22:07:56] <Garb0> a trillion times, in fact.
[22:08:14] *** Joins: khyr0n (~khyr0n@fixed-187-190-159-115.totalplay.net)
[22:08:25] *** Joins: naquad (~naquad@79.135.214.17)
[22:08:53] *** Quits: khyr0n_ (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108) (Ping timeout: 268 seconds)
[22:08:59] <naquad> hi. not directly related to golang per se but rather tooling: is there any way to make gopls complete not only unimported packages but also unimported packages exported symbols?
[22:10:33] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:11:51] <Nnavd> I'm trying to understand gos I/O handling in go routines. When long HTTP fetches are occurring, does golang consider that blocking IO and spin up other goroutines to continue work in place of that goroutine until the IO is done?
[22:12:35] <Nnavd> I'm just trying to optimize for an environment where there can be 1) very large fetches 2) long running jobs working on the results of the fetch
[22:13:11] *** Joins: khyr0n_ (~khyr0n@fixed-187-190-159-115.totalplay.net)
[22:14:12] *** coc0nut_ is now known as coc0nut
[22:16:17] *** Quits: khyr0n (~khyr0n@fixed-187-190-159-115.totalplay.net) (Ping timeout: 268 seconds)
[22:21:34] *** Joins: khyr0n__ (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108)
[22:22:36] *** Quits: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246) (Ping timeout: 240 seconds)
[22:24:21] *** Quits: khyr0n_ (~khyr0n@fixed-187-190-159-115.totalplay.net) (Ping timeout: 256 seconds)
[22:27:12] *** Joins: todo75 (~todo75@user/todo75)
[22:32:17] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:32:57] *** Joins: fling (~fling@user/fling)
[22:33:16] *** Quits: mmfood (~mmfood@82.118.29.46) (Ping timeout: 245 seconds)
[22:34:24] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[22:42:36] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[22:42:37] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[22:42:54] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[22:47:51] *** Joins: bluedust (~bluedust@103.165.167.61)
[23:05:27] *** Quits: jimeh (jimeh@matrix.bah.io) (Remote host closed the connection)
[23:06:29] *** Joins: jimeh (jimeh@matrix.bah.io)
[23:15:48] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[23:18:23] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[23:21:52] <ilpanda> I use golang with vscode and linux (kubuntu). Is it possible to debug a sw that reads from standard input? Thanks
[23:21:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:25:26] *** Parts: Torr (~Torr@user/torr) ()
[23:27:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:28:59] <Garb0> ilpanda: Yeah, just hit F5 and you got your terminal.
[23:29:08] *** Quits: todo75 (~todo75@user/todo75) (Quit: todo75)
[23:29:23] *** Quits: g2anj (~v@58.228.230.4) (Quit: .)
[23:30:44] *** Joins: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net)
[23:32:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[23:35:50] *** Quits: Guest90_ (~textual@180-150-36-144.b49624.bne.nbn.aussiebb.net) (Ping timeout: 272 seconds)
[23:37:07] <ilpanda> Garb0, I tried
[23:38:47] <ilpanda> but when i reach the input reading i get this message: Unable to process `evaluate`: debuggee is running
[23:39:43] <ilpanda> without reading input I have no problem with debugging
[23:40:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[23:40:39] *** Joins: absc (~absc@dynamic-adsl-94-34-200-132.clienti.tiscali.it)
[23:42:29] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[23:43:02] <ilpanda> I am not a go and vscode expert, I am wondering if vscode is the right editor for go
[23:43:29] <ilpanda> and right debugger :-)
[23:43:32] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[23:43:58] *** KirkMcDo1ald is now known as KirkMcDonald
[23:44:01] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[23:45:15] *** Quits: dalek_caan (~Thunderbi@109.252.124.86) (Quit: dalek_caan)
[23:47:43] <A_Dragon> its one of the few sticking points
[23:47:45] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[23:48:14] <Garb0> ilpanda: are you using some kind of Go plugin for vscode?
[23:48:31] <ilpanda> yes
[23:48:50] <A_Dragon> see https://github.com/golang/vscode-go/issues/124
[23:48:52] <Garb0> ilpanda: when i use vscode what i do is simply open the terminal with F5
[23:48:55] <A_Dragon> Garb0: there is an official vscode plugin
[23:48:58] <A_Dragon> that works with gopls
[23:49:01] <A_Dragon> and delve
[23:49:04] <Garb0> and just go ahead and do a `go run whatever.go`
[23:49:22] <Garb0> try removing that and running it manually
[23:49:32] <A_Dragon> er, no
[23:49:58] <A_Dragon> if you want to debug with stdin, you'll need to either run delve outside, and tell vscode to connect to it headlessly over its socket, or use it that way normally a-la gcc
[23:50:36] <A_Dragon> also, see the linked issue
[23:53:00] <ilpanda> I was thinking of using delve. Now I see how it is done
[23:53:09] <A_Dragon> delve is what vscode is using
[23:54:34] <ilpanda> outside
[23:54:57] *** Joins: analogsalad (~analogsal@user/analogsalad)
[23:55:54] <ilpanda> i had read that there were problems with stdin debugger. But I gave it a try here
[23:56:32] <ilpanda> thanks A_Dragon thanks Garb0
[23:56:36] *** Quits: absc (~absc@dynamic-adsl-94-34-200-132.clienti.tiscali.it) (Quit: Leaving)
[23:58:03] *** Quits: khyr0n__ (~khyr0n@2806:2f0:9141:5c32:34c4:6453:3592:a108) (Ping timeout: 252 seconds)
[23:59:53] *** Quits: naquad (~naquad@79.135.214.17) (Remote host closed the connection)
