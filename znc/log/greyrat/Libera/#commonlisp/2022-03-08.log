[00:05:52] *** Joins: kpoeck (~kpoeck@2a01:598:92b0:c7bd:a9a0:4c7d:550c:8aad)
[00:15:15] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[00:15:32] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[00:20:33] *** Joins: jmes (~james@216.154.22.238)
[00:21:19] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:25:16] *** Joins: kevingal (~quassel@37.228.202.100)
[00:26:14] <jmes> Just for fun I want to define a package using the name of the containing file. I'd like to be able to write (defpackage (make-symbol (string-upcase (current-filename))) ...) how would `current-filename' find the enclosing file name?
[00:27:41] <jackdaniel> maybe #.*load-truename* ?
[00:29:00] *** Quits: kevingal (~quassel@37.228.202.100) (Client Quit)
[00:30:03] <jackdaniel> mind that I'm resolving the variable value at the read time (so it doesn't change for when you load a fasl file or whatever)
[00:35:05] <jmes> jackdaniel: thanks, this should be what I'm looking for
[00:38:17] *** Joins: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[00:41:53] *** Joins: kevingal (~quassel@80.233.49.178)
[00:42:37] *** Joins: rogersm (~rogersm@90.166.180.250)
[00:47:30] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[00:48:40] *** Joins: epony (epony@user/epony)
[00:59:20] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:05:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:09:52] *** Joins: Oladon (~olad@98.43.81.226)
[01:09:58] <_73> I am totally stumped on debugging why I cant get my local-project system to load with quicklisp. I am getting an UNDEFINED-FUNCTION error for using functions that should be defined. I have not been able to reproduce the problem so I just info dumped my actual situation. http://dpaste.com/HWSA6LDBD
[01:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:40] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:43] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:21:37] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 240 seconds)
[01:25:27] <pjb> jmes: the function is make-package
[01:25:49] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[01:28:08] <pjb> jmes: *load-truename* is bound to NIL while compiling the file! https://termbin.com/zxmy
[01:28:17] <pjb> jackdaniel: ^
[01:28:51] <Xach> _73: no in-package
[01:29:27] <Xach> _73: put it after the defpackage in maxpc-extensions.lisp
[01:29:41] <Xach> _73: check (apropos "=EQ") also
[01:29:52] <_73> Xach: err of course it was something silly! Thanks.
[01:31:28] *** Quits: kpoeck (~kpoeck@2a01:598:92b0:c7bd:a9a0:4c7d:550c:8aad) (Quit: Client closed)
[01:32:58] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[01:41:24] <jmes> pjb: Okay thanks, I'm going back to explicit package names. I was just curious :P
[01:41:28] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 268 seconds)
[01:55:00] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[02:07:40] <pjb> jmes:  Something like: (eval-when (:compile-toplevel :load-toplevel :execute) (let ((p (make-package (pathname-name (or *compile-file-truename* *load-truename*)) :use '("CL")) )) (dolist (n '("FOO" "BAR")) (export (intern n p) p)) (setf *package* p)))
[02:11:10] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[02:12:55] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[02:13:44] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[02:29:36] *** Joins: daemonises (uid545329@id-545329.uxbridge.irccloud.com)
[02:30:09] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:01] *** Joins: pillton (~user@110-175-155-114.static.tpgi.com.au)
[02:35:09] <hashfuncadb> so quicklisp appears to need three core file: <myproject>.lisp <myproject>.asd package.lisp
[02:35:30] <hashfuncadb> is there a way to specify that all of that logic is contained in <myproject>.lisp?
[02:35:42] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[02:36:54] <hashfuncadb> by, "appears to need", i mean, that this is what (QL:QUICKLOAD) needs to get the project up-and-running in the repl
[02:41:14] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[02:41:25] <hashfuncadb> ^correction: it appears to just need two core files: <myproject>.lisp and <myproject>.asd
[02:42:11] <pillton> hashfuncadb: Quicklisp uses ASDF to manage loading of systems.
[02:43:19] <random-nick> you have to have an .asd file for ASDF to find your system
[02:43:21] <hashfuncadb> pillton: so the <myproject>.asd code can't be put in the <myproject>.lisp file?
[02:43:49] <pillton> hashfuncadb: Not that I know of.
[02:43:50] <random-nick> yes, because ASDF looks for .asd files
[02:44:30] <hashfuncadb> random-nick: ok, so trying to work around that, i'm assuming, would probably be hacky
[02:44:47] <pillton> hashfuncadb: Why? Nobody does that.
[02:46:12] *** Quits: kevingal (~quassel@80.233.49.178) (Ping timeout: 240 seconds)
[02:46:17] <hashfuncadb> pillton: i would like everything contained in one file; yes i know that's contrary to the status quo
[02:46:33] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:85ab:4026:a390:3cc7)
[02:46:44] <pillton> You aren't answering the question.
[02:46:58] <pillton> I already know you want everything in one file.
[02:47:53] <hashfuncadb> pillton: it's for the system i'm developing
[02:48:43] <Xach> hashfuncadb: you can put it all in one file if you want, but there's no simple (i.e. one-liner or whatever) way
[02:49:09] <Xach> hashfuncadb: if i was doing it, i'd think about writing a custom asdf system search function that synthesized a system on the fly pointing to my source file.
[02:49:16] <Xach> i don't know if that would work or be easy.
[02:49:23] <Xach> but, that's where i'd start
[02:51:28] <hashfuncadb> Xach: ok, thanks
[02:51:40] <hashfuncadb> pillton: random-nick: thanks for the help
[02:51:40] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Remote host closed the connection)
[02:51:54] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[02:52:19] <pillton> Best of luck. Not sure how successful you are going to be.
[02:52:49] <pillton> ASDF still doesn't really support the type of problems you are going to encounter with your approach.
[02:54:11] <pillton> I am referring to the :defsystem-depends-on system definition option in ASDF.
[03:15:25] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:31:12] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 272 seconds)
[03:34:46] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 260 seconds)
[03:42:13] *** Joins: Oladon (~olad@98.43.81.226)
[03:54:23] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:00:04] *** Quits: luna-is-here_ (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[04:01:13] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[04:03:24] *** rdrg109_ is now known as rdrg109
[04:04:29] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[04:05:03] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 256 seconds)
[04:09:35] *** Joins: zacque (~zacque@175.143.120.93)
[04:14:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[04:14:34] *** Joins: asen (~asen@2408:821a:618:28c0:b99d:d408:c433:2245)
[04:15:11] *** Joins: unyu (~pyon@user/pyon)
[04:16:01] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:85ab:4026:a390:3cc7) (Remote host closed the connection)
[04:26:30] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[04:38:03] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:28] *** Quits: asen (~asen@2408:821a:618:28c0:b99d:d408:c433:2245) (Quit: Leaving)
[04:43:55] *** Joins: jealousmonk (~user@user/jealousmonk)
[04:45:30] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[04:51:25] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:54:23] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[05:09:42] *** Joins: igemnace (~ian@user/igemnace)
[05:10:48] <hashfuncadb> clhs #:
[05:10:48] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/02_dhe.htm
[05:14:15] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:14:37] *** Quits: igemnace (~ian@user/igemnace) (Read error: Connection reset by peer)
[05:18:09] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 256 seconds)
[05:18:12] *** Quits: etimmons (m-fyxyzb@li834-247.members.linode.com) (Ping timeout: 240 seconds)
[05:18:24] *** Joins: etimmons (m-fyxyzb@li834-247.members.linode.com)
[05:29:12] <hashfuncadb> how can i get this behavior to work (in pseudo-code): (print `(#:,(make-symbol "sym"))) --> (#:SYM)
[05:30:10] <hashfuncadb> instead, i'm given the output: (print `(#:,(make-symbol "sym"))) --> (#:|| #:|sym|)
[05:30:45] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[05:32:30] *** Joins: igemnace (~ian@user/igemnace)
[05:32:42] <White_Flame> make-symbol already returns an uninterned symbol
[05:33:14] <White_Flame> #: and ,(make-symbol ..) are 2 separate symbols in your syntax
[05:33:22] *** Joins: unyu (~pyon@user/pyon)
[05:33:34] <White_Flame> *the results of...
[05:34:02] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[05:34:04] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[05:35:16] <hashfuncadb> White_Flame: ok that makes sense. i'll try something different real quick
[05:35:39] *** Joins: aeth (~aeth@user/aeth)
[05:35:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[05:37:07] <hashfuncadb> i tried: (print `(#:,(read-from-string "sym"))) --> (#:|| SYM)
[05:37:33] <hashfuncadb> i don't understand what ... || ... is and why it's in the resulting list
[05:38:19] <hashfuncadb> clhs ||
[05:38:19] <specbot> Couldn't find anything for ||.
[05:39:48] <White_Flame> I think you need to get some more basics down here
[05:40:09] <White_Flame> pipes are escapes for symbol names when it's not a simply READable name
[05:40:25] <White_Flame> eg spaces, breaking punctuation, and differently-cased letters
[05:40:36] <White_Flame> so || is a symbol with a 0-length name
[05:41:37] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[05:44:11] <hashfuncadb> White_Flame: so in other words: ... #: = || whilst ... #:sym = SYM ?
[05:46:50] *** Joins: Bike (~Bike@71.69.170.70)
[05:47:09] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:47:19] <hashfuncadb> if that's the case, i still don't understand why ... (print `(#:,(read-from-string "sym"))) ... isn't reduced to ... (print `(#:,(read-from-string "sym"))) => (print '(#:sym)) =? (#:SYM)
[05:50:46] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[05:51:45] <White_Flame> right, the colon is a prefix that the symbol tokenizer looks for
[05:52:46] <hashfuncadb> White_Flame: that makes sense now. thanks! i got it to work using this strategy: (read-from-string (concatenate 'string "#:" "sym")) --> #:SYM
[05:52:53] <White_Flame> I already said, #: and ,(read.. are two different forms
[05:53:24] <White_Flame> comma is a terminating character, just like parens, quotes, etc
[05:53:55] <White_Flame> well, that's one way to do it.  remember that READ functions can be dangerous
[05:54:20] <White_Flame> if the 2nd string isn't "sym" but " #.(format c: lol)" ...
[05:56:15] *** Joins: igemnace (~ian@user/igemnace)
[05:56:17] <hashfuncadb> White_Flame: ok, thanks for the teaching/help
[05:57:34] <White_Flame> I don't know what the extent is of what you're doing, but (make-symbol (string-upcase <foo>)) makes more sense
[05:58:06] <White_Flame> (assuming that the read case is upper)
[05:59:11] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:17:17] *** Joins: Inline__ (~Inline@p200300cd470f680001516fcaa15a1e0e.dip0.t-ipconnect.de)
[06:19:56] *** Quits: Inline (~Inline@p200300cd4708ce00867bc6986b1102af.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:28:57] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:31:15] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 256 seconds)
[06:33:28] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[07:01:30] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:11:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[07:12:53] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:44] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:18:37] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[07:20:06] *** Quits: jgart (16dd2205e4@irc.cheogram.com) (Quit: Gateway shutdown)
[07:30:40] <beach> Good morning everyone!
[07:32:59] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:38:05] *** Joins: jgart (16dd2205e4@irc.cheogram.com)
[07:42:05] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[07:49:04] *** Joins: semz_ (~semz@user/semz)
[07:51:50] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:55:49] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:58:47] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[08:01:03] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[08:08:00] *** Joins: whereiseveryone (206ba86c98@2604:bf00:561:2000::2e4)
[08:08:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[08:08:23] *** Joins: paul0 (~paul0@user/paul0)
[08:17:49] *** Joins: Oladon (~olad@98.43.81.226)
[08:54:38] *** Quits: yottabyte (uid195082@2a03:5180:f:2::2:fa0a) (Quit: Connection closed for inactivity)
[09:17:54] *** Joins: lisp123 (~lisp123@120.154.103.52)
[09:18:49] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:22:25] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[09:22:52] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:23:59] <jmes> Morning beach
[09:26:36] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[09:26:38] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[09:26:54] *** Joins: lisp123 (~lisp123@120.154.103.52)
[09:34:52] *** Joins: dre (~dre@2001:8003:c932:c301:171a:f969:49b7:a76a)
[09:37:09] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[09:37:21] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[09:40:00] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:43:25] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[09:43:44] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[10:00:54] *** Joins: lisp123 (~lisp123@120.154.103.52)
[10:15:12] *** Joins: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7)
[10:15:23] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[10:21:50] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[10:28:39] *** semz_ is now known as semz
[10:31:57] *** Joins: hashfunc1040 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[10:32:26] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[10:33:48] <hashfunc1040> is there a way to tell FORMAT to print tabs?
[10:35:31] <hashfunc1040> meaning, i have a form that contains tabs, but when formatted as a string using FORMAT, they are converted to tabs
[10:36:02] <hashfunc1040> sorry... *they are converted to spaces
[10:36:21] *** Joins: aeth_ (~aeth@user/aeth)
[10:36:21] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[10:36:26] *** aeth_ is now known as aeth
[10:37:44] <flip214> hashfunc1040: (format t "~c" #\Tab)
[10:38:02] <hashfunc1040> flip214: i'm not representing my question accurately
[10:38:09] <flip214> ah, sorry. (format t "~a" #\Tab)
[10:38:24] <hashfunc1040> and i can't show an example because my irc client won't let me copy and paste tabs for some reason
[10:38:26] <flip214> hashfunc1040: no, I understand what you mean. indentation doesn't use tabs, AFAIK.
[10:38:46] <flip214> you'd need to do a search-and-replace run afterwards.
[10:41:46] <hashfunc1040> flip214: thanks. yeah looks like i just need to change an emacs setting
[10:42:31] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[10:43:02] *** Quits: hashfunc1040 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[10:47:41] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:55:52] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[10:56:24] *** Joins: lisp123 (~lisp123@120.154.103.52)
[10:56:35] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:00:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[11:01:17] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[11:01:35] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:07:27] *** Quits: dre (~dre@2001:8003:c932:c301:171a:f969:49b7:a76a) (Quit: Leaving)
[11:08:08] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[11:09:28] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:10:29] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:15:35] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:20:29] *** Quits: alvaro121 (~aa@201.230.126.66) (Ping timeout: 256 seconds)
[11:22:53] *** Joins: alvaro121 (~aa@201.230.126.66)
[11:26:28] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[11:28:47] *** Quits: zacque (~zacque@175.143.120.93) (Quit: Goodbye :D)
[11:28:55] *** Joins: pjb (~pjb@user/pjb)
[11:29:03] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:33:48] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[11:34:27] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:41:00] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[11:41:37] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:43:50] *** Joins: shka (~herr@109.231.3.55)
[11:46:05] *** Joins: mingus (~jan-magnu@auth-147-199.anyconnect.uib.no)
[11:47:32] *** Quits: eddof13 (~eddof13@2806:102e:12:64:a0cc:1315:5073:f3f7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:48:35] *** Joins: Krystof (~user@81.174.155.115)
[11:51:05] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:56:24] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:08:59] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:15:28] *** Quits: |smlckz| (~smlckz@user/smlckz) (Quit: WeeChat 3.2.1)
[12:15:28] *** Quits: pranshukhandal (pranshukha@envs.net) (Quit: the lounge - https://webirc.envs.net)
[12:17:03] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 252 seconds)
[12:18:22] *** Joins: pranshukhandal (~ghost@envs.net)
[12:26:28] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[12:30:13] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[12:31:21] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 252 seconds)
[12:39:19] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[13:04:08] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[13:10:25] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 256 seconds)
[13:13:05] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[13:16:40] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[13:19:48] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 256 seconds)
[13:20:59] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[13:24:31] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 245 seconds)
[13:32:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:37:01] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:42:20] *** Joins: Josh_2 (~user@197.184.168.216)
[13:43:00] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[13:45:01] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[13:48:21] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:52:51] *** Joins: mogan90 (~mogan90@132.140.7.93.rev.sfr.net)
[13:54:50] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[13:55:23] <Josh_2> Good Morning
[13:55:53] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[14:02:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:14:12] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[14:16:40] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[14:18:24] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[14:20:32] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:21:57] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[14:23:33] *** Quits: hirez (~hirez@104.128.237.40) (Quit: Later)
[14:24:44] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[14:25:14] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:32:01] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[14:39:22] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Ping timeout: 272 seconds)
[14:39:33] *** Joins: hirez (~hirez@2602:ffc5:20::1:512e)
[14:39:39] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[14:47:03] *** Quits: hirez (~hirez@2602:ffc5:20::1:512e) (Quit: Later)
[14:55:18] *** Joins: |smlckz| (smlckz@user/smlckz)
[14:57:59] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 250 seconds)
[15:03:26] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[15:03:55] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[15:05:51] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[15:06:41] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[15:07:25] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:09:38] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 260 seconds)
[15:11:02] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:11:24] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Ping timeout: 240 seconds)
[15:11:33] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[15:11:58] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:14:20] *** Joins: dongdigua (~Srain@182.200.50.47)
[15:15:00] *** Quits: Josh_2 (~user@197.184.168.216) (Ping timeout: 240 seconds)
[15:15:17] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 240 seconds)
[15:16:06] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:16:38] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Ping timeout: 260 seconds)
[15:17:12] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[15:18:13] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[15:18:14] *** Quits: pillton (~user@110-175-155-114.static.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[15:20:32] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:21:46] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[15:22:12] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:22:49] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:23:10] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 260 seconds)
[15:23:59] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[15:27:20] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Ping timeout: 252 seconds)
[15:29:10] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[15:29:41] *** Joins: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9)
[15:29:53] *** Quits: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9) (Read error: Connection reset by peer)
[15:30:25] *** Joins: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9)
[15:30:38] *** Quits: dongdigua (~Srain@182.200.50.47) (Remote host closed the connection)
[15:33:59] *** Joins: nature (~nature@45.32.235.173)
[15:37:11] *** Joins: hirez (~hirez@2602:ffc5:20::1:512e)
[15:40:30] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:46:42] *** Quits: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9) (Read error: Connection reset by peer)
[15:47:08] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:48:50] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[15:49:43] *** Quits: hirez (~hirez@2602:ffc5:20::1:512e) (Quit: Later)
[15:49:49] *** Joins: lisp123 (~lisp123@120.154.103.52)
[15:50:17] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[15:51:11] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[15:53:41] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[15:55:59] *** Joins: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9)
[15:56:36] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 245 seconds)
[15:58:03] *** Quits: dirtcastle (~dirtcastl@2409:4072:5:4654:ac30:a1ff:fe67:3be9) (Read error: Connection reset by peer)
[15:58:17] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[15:59:49] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[16:02:13] *** Joins: jeffrey (~jeffrey@2001:1c04:398f:5a00:42f7:1e1c:b84:ae35)
[16:13:12] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[16:14:32] *** Joins: zacque (~zacque@175.143.120.93)
[16:15:32] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[16:15:56] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[16:16:15] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:22:30] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[16:28:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:29:15] *** Joins: wacki (~wacki@87.123.3.232)
[16:33:24] *** Joins: Brucio-61 (~Brucio-67@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:36:13] *** Quits: Brucio-61 (~Brucio-67@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Remote host closed the connection)
[16:37:57] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[16:38:05] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[16:40:13] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[16:40:32] *** Joins: Brucio-61 (~Brucio-67@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[16:44:02] *** Joins: lisp123 (~lisp123@120.154.103.52)
[16:48:11] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 252 seconds)
[16:49:12] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 268 seconds)
[16:49:27] *** Joins: hirez (~hirez@104.128.237.40)
[16:51:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[16:52:54] *** Joins: yewscion (~yewscion@52.94.133.128)
[16:56:48] *** Quits: hirez (~hirez@104.128.237.40) (Ping timeout: 272 seconds)
[16:58:05] *** Joins: mogan90 (~mogan90@132.140.7.93.rev.sfr.net)
[17:00:41] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[17:01:21] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[17:02:08] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[17:05:12] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[17:13:46] *** Joins: Bike (~Glossina@71.69.170.70)
[17:13:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[17:14:21] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[17:21:25] *** Quits: jeffrey (~jeffrey@2001:1c04:398f:5a00:42f7:1e1c:b84:ae35) (Ping timeout: 250 seconds)
[17:22:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:34:27] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Read error: Connection reset by peer)
[17:34:34] *** Joins: dirtcastle (~dirtcastl@136.232.208.190)
[17:36:36] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Quit: hhdave)
[17:37:10] *** Joins: hirez (~hirez@104.128.237.40)
[17:37:20] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[17:44:24] *** Quits: dirtcastle (~dirtcastl@136.232.208.190) (Remote host closed the connection)
[17:48:59] *** Joins: VictorCarvalho[m (~vcarvalho@2001:470:69fc:105::1:d566)
[18:06:37] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:7f03:8b0:a81c:56d7) (Ping timeout: 240 seconds)
[18:08:45] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[18:10:18] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Remote host closed the connection)
[18:25:37] *** Joins: jeffrey (~jeffrey@84-107-61-248.cable.dynamic.v4.ziggo.nl)
[18:28:30] *** Quits: zacque (~zacque@175.143.120.93) (Quit: Goodbye :D)
[18:32:49] *** Joins: lisp123 (~lisp123@120.154.103.52)
[18:37:00] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 240 seconds)
[18:37:30] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 272 seconds)
[18:37:58] *** Joins: yottabyte (uid195082@id-195082.lymington.irccloud.com)
[18:48:37] *** Quits: |smlckz| (smlckz@user/smlckz) (Ping timeout: 240 seconds)
[18:55:49] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[19:00:25] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[19:11:39] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[19:18:17] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Quit: ec_)
[19:25:02] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:e5ea:1ffe:3a64:8fa7)
[19:30:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:e5ea:1ffe:3a64:8fa7) (Ping timeout: 250 seconds)
[19:33:38] *** Joins: Oladon (~olad@98.43.81.226)
[19:46:15] *** Joins: silasfox (~sbv@p200300cec71b49000fb32acff10041ab.dip0.t-ipconnect.de)
[19:56:19] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:59:57] *** Joins: shka (~herr@109.231.3.55)
[20:01:14] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[20:05:00] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:07:07] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:11:27] *** Quits: jeffrey (~jeffrey@84-107-61-248.cable.dynamic.v4.ziggo.nl) (Quit: Client quit)
[20:17:37] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[20:18:22] <utis> tried to run #'show-tag-headers from the id3 library in ``practical cl'', but after 16 files i got ``heap exhausted'' . . does that mean there's something wrong with the library?
[20:18:36] *** Quits: X-Scale (~ARM@46.50.5.194) (Ping timeout: 240 seconds)
[20:18:36] *** X-Scale` is now known as X-Scale
[20:20:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[20:22:04] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:23:40] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Quit: Leaving)
[20:23:42] <beach> utis: Not necessarily.
[20:23:58] <beach> utis: You may want to try with a larger heap.  Is this SBCL?
[20:24:15] <utis> yes
[20:24:25] <beach> If so, you can increase the heap size when you start SBCL.
[20:25:48] <beach> `sbcl --dynamic-space-size 10000' will give you 10GB rather than 1.
[20:26:00] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[20:26:33] <utis> ah -- thanks
[20:26:47] *** Joins: X-Scale` (~ARM@31.22.167.35)
[20:27:53] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 256 seconds)
[20:27:53] *** X-Scale` is now known as X-Scale
[20:28:12] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 256 seconds)
[20:28:14] <utis> and this can only be done at startup, right?
[20:29:05] <beach> Yes, because of how their memory manager is written.  But when I suggested that this was a silly limitation, I was told it's a feature.
[20:30:42] <utis> did they supply an argument?
[20:32:02] <beach> Something like "how else would you be able to control how much memory your application uses?".  I was not up to arguing that the amount of memory used may depend on user data, so that you can't (and wouldn't want to) control it.
[20:33:15] <White_Flame> yet python, javascript, etc all expand their heap with use.  Not sure if the JVM started doing that, too
[20:33:43] <beach> Wow, how do they control how much memory their applications use then?
[20:34:13] <White_Flame> various thresholds as to when to run GC
[20:34:28] <White_Flame> but crashing with out-of-memory because the default is too low is a terrible solution, IMO
[20:34:33] <White_Flame> a memory heap limit should be optional
[20:34:59] <beach> That was a tongue-in-cheek question.
[20:35:08] <White_Flame> ah, ok :)
[20:36:59] <beach> I mean, what SBCL does reminds me of the mainframes of the 1960s and 1970s where you had to give a memory limitation on one of the punch cards you put in before your "job".
[20:47:17] <White_Flame> I suspect the main reason for sbcl was straightforwardness of implementation
[20:47:35] <White_Flame> also, presumably a holdover from cmucl?
[20:47:45] <beach> Yes, with respect to the GC techniques of the time.
[20:47:55] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[20:50:20] *** Quits: empwilli (~empwilli@faui48e.informatik.uni-erlangen.de) (Quit: WeeChat 3.0)
[20:54:26] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[20:56:11] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[20:57:52] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:01:46] <jackdaniel> beach: do you mean that an option to set memory limits for an application is silly? (or did I get that wrong?)
[21:03:33] *** Joins: jeosol (~jeosol@user/jeosol)
[21:04:58] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[21:06:24] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Quit: hhdave)
[21:06:47] *** Joins: Oladon (~olad@98.43.81.226)
[21:19:31] <Fade> I read the discussion to be constrasting a static fixed heap and a dynamic one.
[21:20:09] <Fade> I suspect this feature dates back to a time when random access memory was very very expensive.
[21:21:33] *** Joins: [smlckz] (3329f5a75b@198.108.77.17)
[21:21:48] *** Quits: [smlckz] (3329f5a75b@198.108.77.17) (Changing host)
[21:21:48] *** Joins: [smlckz] (3329f5a75b@user/smlckz)
[21:21:54] *** Joins: notzmv (~zmv@user/notzmv)
[21:23:08] <Guest74> I remember when 1meg was $100.  Though that didn't compare to the 10meg hd for $10k
[21:25:59] * Fade narrowly avoids falling into the infinite yak pen of normalizing all the metadata in his music collection
[21:26:33] <Guest74> there's programs to do that at the press of a button.  None in cl that I know of.
[21:27:36] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[21:28:02] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[21:28:14] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[21:28:47] <Fade> there're programs that will do about 40% of that at the press of a button.
[21:29:35] <Guest74> well, you can always write one that will do 100% of what you want.
[21:30:04] <dbotton> My first HD was 5meg and cost me used $700
[21:30:46] <Fade> the problem is not trivial, so while what you say is technically true, it is not practically true.
[21:31:18] <Fade> but having that very discussion in my head almost lead me to yet another attempt to solve the halting problem.
[21:31:23] <edgar-rft> replace all metadata by the string "meta data" - perfectly normalized
[21:32:08] <Guest74> depends on how you approach it.  I find that having dividing things into the easy parts a computer can do, and some parts that require human intervention works well.
[21:32:31] <Guest74> then when you're actually doing the human intervention it usually leads to a solution to make the computer do it.
[21:35:29] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[21:41:18] *** Joins: unyu (~pyon@user/pyon)
[21:47:01] *** Joins: jealousmonk (~user@user/jealousmonk)
[21:47:55] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:49fc:dd14:62fe:1d6f)
[21:55:43] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[22:03:10] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[22:27:13] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[22:27:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:27:34] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[22:39:05] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Quit: Leaving.)
[22:52:24] *** Joins: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1)
[22:52:43] *** Quits: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1) (Remote host closed the connection)
[22:54:29] *** Joins: kpoeck (~kpoeck@2a01:598:91b8:64e1:a1cb:f6b4:567c:1b10)
[22:54:58] *** Joins: morganw (~user@80.225.24.132)
[22:55:55] *** Joins: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1)
[23:06:57] *** Joins: empwilli (~empwilli@faui48e.informatik.uni-erlangen.de)
[23:11:06] *** Quits: wacki (~wacki@87.123.3.232) (Quit: Leaving.)
[23:13:11] *** Joins: akoana (~ah@user/akoana)
[23:16:22] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[23:19:58] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 272 seconds)
[23:20:51] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[23:23:52] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[23:25:37] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:26:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:27:41] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[23:27:56] *** Joins: lispy (~lispy@90.242.1.92)
[23:27:56] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[23:28:23] *** Lord_of_Life_ is now known as Lord_of_Life
[23:29:28] *** Quits: lispy (~lispy@90.242.1.92) (Changing host)
[23:29:28] *** Joins: lispy (~lispy@user/lispy)
[23:30:52] *** Quits: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[23:31:57] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[23:32:11] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[23:37:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:42:50] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[23:45:50] *** Joins: simendsjo (~user@84.211.91.241)
[23:49:45] *** Inline__ is now known as Inline
[23:52:46] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[23:53:59] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[23:54:30] *** Joins: unyu (~pyon@user/pyon)
