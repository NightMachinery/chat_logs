[00:00:32] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:02:06] *** Quits: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:02:42] *** Joins: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27)
[00:03:02] <Tv_> i find it hard to believe whogoes.org was an available dns domain
[00:05:48] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 268 seconds)
[00:08:04] *** Joins: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de)
[00:11:06] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:1c0b:220d:4ee5:1f91)
[00:12:17] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:17:07] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:17:37] *** Joins: mickey8 (~user@user/mickey)
[00:18:22] <braxas> is there something else like this: https://github.com/golang-standards/project-layout
[00:18:54] *** Quits: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d) (Ping timeout: 260 seconds)
[00:19:19] *** Joins: orn (~orn@2a01:6f00:2:a51d:468a:5bff:fea5:bf9d)
[00:20:02] <seebs> i don't know of a lot of things in that genre, but do not take this as an endorsement of that one
[00:20:25] <b0nn> most people link to Ben's blog post
[00:20:41] <j416> braxas: this, https://medium.com/@benbjohnson/standard-package-layout-7cdbc8391fc1
[00:22:36] <seebs> yeah. i don't necessarily recommend that either, but i think it's better and saner.
[00:23:10] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[00:23:11] <Tv_> two worst offense of benbjohnson's write-up is the word "standard"
[00:23:16] *** Joins: INeedAHandle (~INeedAHan@121.155.99.135)
[00:23:17] <Tv_> the rest is largely reasonable
[00:23:26] <Tv_> the later "wtf.dev" blog series is.. less useful, imho
[00:23:58] <b0nn> There was a thing on twitter - should you putyour business logic into the top level, then have all the packages it draw on or into a directory of its own
[00:24:03] <Tv_> but the core idea ben's article talks about (layered architecture, often called "ports and adapters") is something small projects really don't need either
[00:24:15] <Tv_> b0nn: pretty much what ben is writing about
[00:24:29] <Tv_> it makes sense *iff* you have lots of business logic
[00:24:37] <b0nn> I'm in camp - put it into a directory, because I always fiond it confusing having .go files at the top layer, but no real hint as to what their purpose is
[00:24:38] <Tv_> to write everything with that style gets tiring
[00:26:46] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:27:17] <fizzie> Led_Zeppelin2: If what you want out at the very end is an approximate distribution, maybe you want a KLL sketch, because they're mergeable, so you can collect a number of them in parallel and then merge the results. Cf. https://arxiv.org/abs/1603.05346 Karnin, Lang, Liberty, Optimal Quantile Approximation in Streams.
[00:33:04] *** Quits: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27) (Quit: Reconnecting)
[00:33:18] *** Joins: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27)
[00:36:47] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:37:31] *** darkskiez[m] is now known as darkskiez
[00:37:48] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Ping timeout: 260 seconds)
[00:38:42] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:45:31] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[00:47:26] *** Quits: stealth[] (~stealth]@2001:9e8:36ec:3200:1d50:6b67:9559:9543) (Read error: Connection reset by peer)
[00:51:20] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[00:52:33] *** Quits: jbauer (~jbauer@146.71.11.98) (Remote host closed the connection)
[00:53:10] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[00:55:17] *** Joins: jla (~jordi@64.225.79.195)
[00:55:41] *** Joins: noarb (~noarb@user/noarb)
[00:56:22] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:58:43] *** Quits: INeedAHandle (~INeedAHan@121.155.99.135) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:59:47] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 264 seconds)
[01:01:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 268 seconds)
[01:02:21] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:02:51] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[01:03:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:03:56] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[01:05:00] *** Joins: fikran (~fikran@user/fikran)
[01:08:47] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:13:09] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[01:13:30] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[01:13:43] <dostoyevsky2> Could I somehow get a list of all local variables in a function by runtime?   I guess the AST could tell me...
[01:14:40] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[01:16:03] <A_Dragon> AST isnt included at runtime
[01:16:12] <A_Dragon> you'd need to have source with you
[01:16:38] *** Quits: shtirlic_ (~shtirlic@178.70.141.41) (Read error: Connection reset by peer)
[01:16:40] <dostoyevsky2> Yeah, but I can reuse the golang compiler's AST to get a list of local variables for a function
[01:16:52] *** Joins: shtirlic (~shtirlic@178.70.141.41)
[01:17:58] *** Joins: jla (~jordi@64.225.79.195)
[01:17:59] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[01:18:37] *** Joins: noarb (~noarb@user/noarb)
[01:19:27] *** Joins: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net)
[01:24:19] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[01:25:21] *** Quits: volt_ (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[01:26:59] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[01:28:44] <b0nn> are you still struggling with the delve debugger?
[01:29:03] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:30:59] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:31:23] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:26] <dostoyevsky2> delved doesn't seem to support a pattern like `if cond { debugger() }' so I am writing my own...
[01:31:40] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[01:32:07] <b0nn> hrm; there was a discussion on debug loggers the other day that might be what you are wanting
[01:32:41] <A_Dragon> dostoyevsky2: delve supports conditional breakpoints
[01:33:42] <b0nn> delve, though, is easy enough to set a breakpoint in a given method, it's just b package.func:line (not line is the line in the function, relative to the start of the function, not the file, but you can do file break points too IIRC
[01:34:15] <b0nn> A_Dragon: I've never done a conditional breakpoint with delve, can you save me looking it up - how does it get set?
[01:35:14] <b0nn> https://trstringer.com/go-conditional-breakpoints/
[01:35:17] <b0nn> TIL
[01:35:59] <A_Dragon> in vsc you can do it with a right click; with delve's cli client I believe- yeah
[01:37:17] <b0nn> The link I posted uses file:line_number, but I think that package.func:line_number is a LOT easier (his example would be main.main:3 or 4 instead of file.go:12)
[01:37:33] <A_Dragon> you can use that too.
[01:37:41] <A_Dragon> https://github.com/go-delve/delve/blob/master/Documentation/cli/locspec.md
[01:37:50] <b0nn> oh, that comments wasn't on cond :)
[01:38:22] <A_Dragon> address, filename:line line, +offset, -offset, function:line where function is package.(*reciever).funcname
[01:38:28] <A_Dragon> and /a regex/
[01:38:28] <b0nn> but, erm, yeah I knew about the two, I'm saying function is easier than filename
[01:39:57] <dostoyevsky2> I wrote myself a simple p(debugger(StringDict{"var1": var1, "var2": var2})) that works like ipdb.. I just want to look at variables, not really run expressions
[01:41:12] <b0nn> https://github.com/go-delve/delve/tree/master/Documentation/cli#locals
[01:41:26] <dostoyevsky2> The p() is just a Println() to make the gocompiler not remove the StringDict
[01:42:17] <b0nn> and do yourself a massive debugging favour = "%#v\n", struct (or map)
[01:42:24] <dostoyevsky2> If I'd parse the AST I could see what variables are available at that line of hte debugger() and might be able to insert the StringDict{} automatically
[01:42:55] <dostoyevsky2> but I am not sure if I really need that
[01:45:09] <b0nn> https://play.golang.org/p/36MOPdLkqcP
[01:46:14] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 260 seconds)
[01:49:54] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[01:50:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[01:50:16] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[01:50:28] *** Joins: ugjka (~ugjka@ugjka.net)
[01:55:08] <dostoyevsky2> b0nn: I also saw this yesterday on the reddit: https://github.com/hexops/valast ... Supposedly that prints out variables in correct Gosyntax, so you could copy&paste it directly into your code
[01:56:49] <b0nn> uhhh, did you look at the output on the play link I pasted?
[01:57:53] <b0nn> #v provides you with the definition as well as the instance value
[01:57:56] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[01:57:59] *** Quits: cjd (~user@2a01:e0a:149:fcb0:2599:7ff2:34f7:d981) (Ping timeout: 264 seconds)
[01:58:00] *** Joins: gggpkm (~gggpkm@123.113.191.190)
[01:58:01] <b0nn> er, %#v
[01:58:03] <dostoyevsky2> that %#v looks similar
[02:02:58] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:03:09] <b0nn> honestly, the debugger you're trying to build seems built to me; either as delve (an interactive cli, like pdb, or gdb), or as a debug logger (if os.GetEnv("DEBUG) {log.Printf("%#v", var)})
[02:03:26] *** Joins: cjd (~user@2a01:e0a:149:fcb0:2599:7ff2:34f7:d981)
[02:03:33] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:03:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:06:40] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:41fe:2b77:23d8:383b) (Ping timeout: 268 seconds)
[02:06:52] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:294b:584e:b268:9654)
[02:06:59] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[02:07:10] *** Quits: gggpkm (~gggpkm@123.113.191.190) (Read error: Connection reset by peer)
[02:08:32] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[02:08:39] *** Joins: alphasierra (~alphasier@49.36.96.61)
[02:08:54] *** Joins: snake (~snake@user/snake)
[02:09:30] <snake> hi, im not sure i understand the go filesystem, but i am trying to build a simple program with two files but i'm getting this error "found packages bag (bag.go) and main (main.go) in C:\Users\Eric\go\src\hello"
[02:10:02] <b0nn> snake: you can only have one package (and its sister _test) package per directory
[02:10:31] <b0nn> so, either change bag's package to main, or put it into another directory
[02:10:40] *** Quits: boingolov (~nastynate@c-71-236-46-219.hsd1.tn.comcast.net) (Ping timeout: 260 seconds)
[02:10:50] *** Joins: jla (~jordi@64.225.79.195)
[02:11:17] <snake> ok, should i put that new directory in the go\src directory in go\src\hello
[02:12:28] <b0nn> go\src is your $GOPATH, think of that as a "workspace" hello is your project, and bag might be a library in hello, so yes, it can go under hello
[02:13:24] <b0nn> think of packages as "libraries" and understand that they're either in this project or another project, the only rule there is on how you import it
[02:13:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:14:31] <snake> i see, ok thankyou
[02:15:55] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 268 seconds)
[02:16:02] *** Joins: khrbt_ (~znc@user/khrbt)
[02:16:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:17:11] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[02:17:30] <b0nn> screw it, I'mma going to write "this is how to layout a golang project" blog article...
[02:17:58] <b0nn> Another style in the mix is just what the community needs
[02:18:19] <fizzie> Not that you *have* to make a separate package just to have a second source code file, mind you. You can have any number of .go files in a single package (directory), as long as they're all part of the same package. You'd only need to split it into packages if you want the other file to be independently importable. (Or of course if you just prefer for modularity.)
[02:19:24] <fizzie> Hopefully you'll at least write it with module mode in mind, and not in GOPATH style, given what year it is.
[02:19:47] <b0nn> modules are PITA for newbies
[02:20:12] <fizzie> Personally I found them a lot more natural than the GOPATH enforced-monorepo model.
[02:20:29] <b0nn> wait, my editor wont compile unless I have a go.mod *and* run `go mod tidy` after an import
[02:21:01] <b0nn> er s/editor/editor's linter
[02:23:20] <fizzie> I have a faint recollection you needed to "go get ..." remote packages in GOPATH mode as well, if you hadn't used them before.
[02:23:35] <fizzie> (Anyway, I don't think you'll be able to opt out forever.)
[02:24:38] <b0nn> It's like everything - leave it for the early adopters to find all the rough edges, then swan in like I know what I'm doing ;)
[02:25:45] <b0nn> But, the issue here is, newbies, having to setup - $GOPATH is def on the way out, but the required work for modules isn't... seemless ... yet
[02:26:46] <b0nn> I was just trying to find a twitter thread from Johnny Bourquist, who was trying to teach his daughter how to code, and was exasperated at the setup required
[02:27:14] <b0nn> (Not necessarily a Go problem, multiple languages are painful for newbies to set up for)
[02:29:51] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:8561:d34f:d94b:2b07) (Remote host closed the connection)
[02:29:56] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:30:14] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[02:35:03] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:36:25] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:36:49] *** Joins: jespada (~jespada@190.7.36.46)
[02:37:20] *** Quits: alphasierra (~alphasier@49.36.96.61) (Remote host closed the connection)
[02:40:22] *** Quits: martinkennelly_ (~martinken@84.203.20.92) (Ping timeout: 260 seconds)
[02:40:50] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[02:41:57] *** Joins: alphasierra (~alphasier@49.36.96.61)
[02:41:59] *** Joins: jespada_ (~jespada@190.7.36.46)
[02:42:05] *** Quits: jespada (~jespada@190.7.36.46) (Read error: Connection reset by peer)
[02:46:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:50:58] *** Joins: oltuvok (~user@2804:1b2:80:cf64:a663:a1ff:fe49:c8ed)
[02:55:43] *** Quits: alphasierra (~alphasier@49.36.96.61) (Remote host closed the connection)
[02:57:25] *** Joins: boingolov (~nastynate@172-3-47-79.lightspeed.nsvltn.sbcglobal.net)
[03:05:08] *** Joins: andlabs_ (~andlabs@2604:ca00:179:b37f:7573:a8b6:f8f0:ae2f)
[03:06:14] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[03:07:05] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:08:21] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:294b:584e:b268:9654) (Ping timeout: 268 seconds)
[03:08:25] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[03:12:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[03:13:24] <braxas> can I somehow make a struct comparable to a string?
[03:14:19] <braxas> I have this type: https://github.com/iauc/pdt/blob/main/maskedstring.go - and one issue with it is, if I compare it to a non MaskedString, which may have the same actual underlying value, it is seen as not equal
[03:14:21] *** Joins: fikran (~fikran@user/fikran)
[03:15:48] *** Joins: volt (~volt@67.197.6.215)
[03:16:53] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:bc43:2949:2edb:bc32)
[03:17:03] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:18:11] <braxas> Not sure if I can dos omething about it, ideally I would like MaskedString("xxx") to be equal string("xxx")
[03:20:26] *** Quits: andlabs_ (~andlabs@2604:ca00:179:b37f:7573:a8b6:f8f0:ae2f) (Ping timeout: 260 seconds)
[03:25:14] <fizzie> I don't think there's anything you can do about it, if you mean in terms of literally having `MaskedString("foo") == "foo"` to evaluate to true, if you still want MaskedString to be a defined type with those methods of its own.
[03:26:23] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[03:26:50] *** Quits: X-Scale (~ARM@46.50.2.72) (Ping timeout: 268 seconds)
[03:28:14] *** X-Scale` is now known as X-Scale
[03:29:26] <snake> how can i hide information for an abstract data type like i made this bag example: https://ghostbin.com/NTLl6
[03:29:50] <snake> i tried to use a pointer to hide the information, but since types are not required in go, you can dereference the pointer and get to the internal struct data
[03:31:06] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[03:31:17] <andlabs> that isn't what pointers are for
[03:31:29] <snake> hm, that's what pointers are for in C
[03:31:54] <andlabs> not quite
[03:32:06] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 260 seconds)
[03:32:12] <andlabs> what's going on in C is that you don't actually define the struct in the header file, meaning you *have to* use a pointer, otherwise you won't be able to use the struct
[03:32:13] <snake> actually they would often do typedef struct queue * QueueADT;
[03:32:24] *** Quits: boingolov (~nastynate@172-3-47-79.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[03:32:26] <andlabs> but you want to use a pointer anyway because you don't want tocopy large structs all the time
[03:32:41] <fizzie> For most people, struct fields that are not exported are "hidden enough".
[03:33:03] <andlabs> Go doesn't have the same problem for the reason fizzie just said
[03:34:10] <andlabs> also note
[03:34:15] <andlabs> conventional Go code almost never uses semicolons
[03:34:36] <snake> yeah its a habit
[03:34:40] <andlabs> you're using cap() when you want len()
[03:34:48] <snake> andlabs, i dont think so
[03:34:53] <snake> where do i want len()?
[03:35:01] <andlabs> when you want the number of entries in the slice
[03:35:07] <andlabs> ca() is the amount of memory reserved for the slice
[03:35:23] <andlabs> if you append() to a slice it will use whatever cap() space is there before it needs to reallocate
[03:35:29] <nitrix> In fact, go fmt will remove them.
[03:35:48] <snake> andlabs, that's not important here, but thanks
[03:36:02] *** Quits: jespada_ (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:22] <andlabs> and more important, if len < cap, then your for loop will panic
[03:36:38] <andlabs> in fact
[03:36:43] <andlabs> you're just recreating slices there
[03:36:55] <snake> your last message is true
[03:37:06] <snake> i didnt know slices had append
[03:37:15] <snake> but it doesnt matter that much for what im interested in
[03:37:31] <nitrix> They don't. It's a top-level function.
[03:37:34] <snake> andlabs, if it were an array and not a slice, then all the code is correct
[03:37:57] <snake> since you would double by capacity, not by len
[03:39:58] <fizzie> Anyway, if you want to make it a little *more* abstract, you can always export a `type Bag interface { Add(int); Remove() int; ... }` and make your `CreateBag` (conventionally just called `New`, so that the call is `bag.New()` rather than `bag.CreateBag()` which repeats the bag part) return that interface type, which you then make the non-exported `*bag` (pointer-to-struct) type implement.
[03:40:25] <snake> oo
[03:40:34] <fizzie> But really doing that just to "hide the internal data" is a bit weird.
[03:41:20] <snake> ah
[03:41:35] <fizzie> If a struct contains unexported fields, you can't really "access" them. Sure, I guess you might argue it's a little too easy to make a copy by mistake.
[03:42:00] <snake> nah you are right, i didn't even realize you can't access them by name
[03:42:01] <andlabs> (which is also why you use pointers and not even try to dereference them)
[03:42:02] <b0nn> Yeah, for the purposes of encapsulation the unexported fields are opaque to end users
[03:42:09] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:42:12] <snake> i just saw that it printed out but yeah... that is really not the same thing
[03:44:07] *** Joins: boingolov (~nastynate@172-3-47-79.lightspeed.nsvltn.sbcglobal.net)
[03:44:40] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[03:44:42] *** Quits: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:47:41] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:bc43:2949:2edb:bc32) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:53:59] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[03:54:48] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[03:55:00] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[03:55:03] <mikey__> what does "register to speak" mean? is there spam?
[03:55:29] <seebs> there's always spam on IRC networks
[03:56:38] <mikey__> i only remember some spam last superbowl
[03:56:46] <mikey__> i'm not here much
[03:58:31] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (Quit: BNC by #bnc4you)
[03:59:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:59:29] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:00:33] <b0nn> er, but if ppl have to register to speak, and that's been stopping spam bots... you wouldn't see the spam would you :)
[04:00:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:03:01] <snake> b0nn, it works
[04:03:50] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 260 seconds)
[04:04:27] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[04:07:33] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[04:07:45] <b0nn> heh, the anti-spam measures, or your project :)
[04:08:09] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:09:27] *** Joins: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de)
[04:09:38] <snake> the anti-spam measures
[04:09:51] <snake> we see a lot less spam in channels with "register to speak" modes
[04:10:24] <snake> b0nn, i know i was dismissive earlier about the "reinventing slices" advice. but im following it anyways
[04:11:25] *** Joins: noarb (~noarb@user/noarb)
[04:11:31] <b0nn> heh, learning new languages is always about discovering which paradigms from other languages you can carry over, and which you should not
[04:11:31] *** Joins: jbauer (~jbauer@146.71.11.98)
[04:12:02] *** Quits: Rayke (rayke@2600:3c03::f03c:92ff:fe86:498b) (Quit: WeeChat 3.3)
[04:13:04] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:14:20] *** Joins: Rayke (rayke@user/rayke)
[04:14:34] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[04:16:32] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:18:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:19:16] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:24:16] *** Joins: andlabs (~andlabs@2604:ca00:178:a145:6122:a248:3c18:301e)
[04:25:18] *** Quits: zwr (~zwr@2804:d45:b966:fb00:fafc:e229:eaa8:5125) (Ping timeout: 260 seconds)
[04:25:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[04:26:07] *** Joins: zwr (~zwr@2804:d45:b966:fb00:b936:89b6:abed:5ca)
[04:28:28] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Client Quit)
[04:29:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:32:49] *** Quits: andlabs (~andlabs@2604:ca00:178:a145:6122:a248:3c18:301e) (Ping timeout: 268 seconds)
[04:33:52] *** Joins: andlabs (~andlabs@2604:ca00:17a:576:60f3:cdd4:166e:cb29)
[04:34:40] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:35:42] *** Joins: volt (~volt@67.197.6.215)
[04:38:06] <A_Dragon> fizzie: oh given enough want you can munch on unexported fields
[04:41:10] <snake> its ok, even in python you could not have private fields for a long time (tho i think they added it recently)
[04:41:27] <snake> but people just followed it like a convention when appropriate
[04:41:28] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[04:42:50] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:43:30] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[04:43:47] <b0nn> I had an interview once, for Python, where the interviewer was ADAMANT that you could properly encapsulate with Python, I was like, dude, _ and __ are really just polite requests, and you should read "we're all consenting adults"
[04:44:05] *** Joins: andlabs_ (~andlabs@2604:ca00:17a:576:1925:b4fc:fa5a:fd37)
[04:44:12] <b0nn> For some reason I din't get that job :)
[04:45:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:39] *** Joins: duban (uid517682@id-517682.uxbridge.irccloud.com)
[04:47:14] *** Quits: andlabs (~andlabs@2604:ca00:17a:576:60f3:cdd4:166e:cb29) (Ping timeout: 260 seconds)
[04:47:20] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:50] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[04:47:52] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net) (Quit: WeeChat 3.2)
[04:48:11] <fizzie> Given an "opaque" pointer in C, all the data behind it is just a quick memcpy away too. ;)
[04:48:43] <snake> b0nn, lol
[04:48:56] <A_Dragon> __ at least does a little name mangling
[04:49:00] <A_Dragon> its trivial to step around though
[04:49:14] <A_Dragon> go at least you have to work for being stupid
[04:49:33] <snake> fizzie, i actually did want to use an interface for my bag implimentations, how do i use new from the interface? or is that impossible
[04:49:56] <snake> i want to make a paste but im bad at windows cmd to concatenate all my go files for ghostbin
[04:50:39] <snake> its saying i redeclared the new function even though the return type is different, i guess it is impossible because there's no receiver argument
[04:50:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:51:56] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:53:33] <snake> oh i found a good paste bin site.. one moment
[04:53:35] *** Joins: andlabs (~andlabs@2604:ca00:17a:576:6818:9948:ea21:785b)
[04:54:17] *** Joins: andlabs__ (~andlabs@2604:ca00:17a:576:e174:766d:ca9a:8895)
[04:54:18] <snake> nah nvm i figured it out
[04:55:39] *** Quits: zwr (~zwr@2804:d45:b966:fb00:b936:89b6:abed:5ca) (Ping timeout: 268 seconds)
[04:57:30] *** Quits: andlabs_ (~andlabs@2604:ca00:17a:576:1925:b4fc:fa5a:fd37) (Ping timeout: 260 seconds)
[04:57:58] *** Quits: andlabs (~andlabs@2604:ca00:17a:576:6818:9948:ea21:785b) (Ping timeout: 260 seconds)
[04:58:32] <snake> is this code better? more golike? https://paste.gg/p/anonymous/67c33580478f44e48f62c2862ef6aa9d
[04:59:11] <snake> i did end up having to do NewSliceBag and NewLinkedBag because of the issue i mentioned before with the redeclared functions when i had them called "New"
[05:00:18] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[05:00:43] <b0nn> Style point: self is a terrible name :)
[05:01:11] <b0nn> and underscores in type names
[05:01:25] <snake> meh, that's subjective
[05:01:37] *** Joins: iateadonut (~dan@121.177.17.154)
[05:01:46] *** Parts: iateadonut (~dan@121.177.17.154) ()
[05:01:59] *** Joins: iateadonut (~dan@121.177.17.154)
[05:02:46] <b0nn> set a linter up on your machine yet?
[05:02:58] <iateadonut> one thing i like about a framework is running something like `buffalo dev` that checks for file updates and automatically restarts the server on each save.  how do you handle that when not running a framework for web development?
[05:03:10] <fizzie> About as subjective as using UpperCamelCase for Java classes and lowerCamelCase for Java methods. As in, not required by the language, but done by absolutely the entire language ecosystem.
[05:03:17] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:03:47] <iateadonut> also, if it's convenient, i'd like to use a framework.  i'm looking for one with good authentication; email pword recovery, etc.
[05:03:56] <b0nn> there's a few "meta" linters, golangci-lint, and I forget what the other one is called
[05:04:10] <b0nn> s/few/couple
[05:04:14] *** Joins: goldfish (~goldfish@user/goldfish)
[05:04:44] *** Joins: souvik (~souvik@103.59.73.170)
[05:04:53] <fizzie> Naming-wise, you also don't generally repeat the package name in any of the exported symbols. That said, I don't know if there's a good convention for a single-package "interface + multiple implementations" structure. The standard library examples (like ciphers and hashes) that bother with interfaces tend to have the different implementations in separate packages.
[05:05:17] *** Joins: ivan_ (~textual@123.123.46.64)
[05:05:20] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[05:05:27] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: No route to host)
[05:07:14] <snake> ah ok that might work since then i could use LinkedBagPackage.New
[05:07:22] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 260 seconds)
[05:07:24] <snake> (omitting package tho)
[05:07:53] <b0nn> often it's NewLinkedBag() *LinkedBag
[05:07:53] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[05:08:20] <snake> hmm
[05:08:34] *** Joins: SDr (~SDr@li1189-192.members.linode.com)
[05:09:09] *** Quits: SDr (~SDr@li1189-192.members.linode.com) (Changing host)
[05:09:09] *** Joins: SDr (~SDr@user/sdr)
[05:09:14] *** Quits: souvik (~souvik@103.59.73.170) (Ping timeout: 260 seconds)
[05:09:16] <SDr> hi, is there a binary build of 1.18 for windows yet?
[05:09:40] <A_Dragon> given that its not released, the answer is probably no. But you can use the gotip tool to compile it yourself
[05:11:16] <fizzie> snake: Is the bag.IntNode type intentionally exported? Seems like it's more of an internal thing.
[05:11:23] <b0nn> snake: Because Go allows multiple types per package (as you have) it's *much* better to convey to your users what they are doing and what they will receive when they action that function
[05:11:52] <b0nn> (a New() is ambiguous)
[05:12:01] <snake> fizzie, no, i just forgot it is at package level and not file-level
[05:12:14] <snake> i mean yes, but^
[05:12:34] <snake> b0nn, ah
[05:12:45] <snake> yeah that makes sense
[05:15:04] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:15:15] <fizzie> I don't think New() is ambiguous at all for a package that only has one type that's clearly identified with the package name, and it's pretty commonplace. But I guess it's not quite a universally held opinion.
[05:15:38] <snake> fizzie, yeah but here i have multiple types in the same package
[05:15:45] <snake> it seems it can be done either
[05:15:46] <snake> way
[05:16:19] <b0nn> So, the problem becomes, does you user need to inspect your package to know if there is only one type in it, or not
[05:16:32] <fizzie> https://golang.org/doc/effective_go#package-names "Similarly, the function to make new instances of ring.Ring—which is the definition of a constructor in Go—would normally be called NewRing, but since Ring is the only type exported by the package, and since the package is called ring, it's called just New, which clients of the package see as ring.New. Use the package structure to help you
[05:16:34] <fizzie> choose good names."
[05:16:52] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[05:16:59] <b0nn> I'm of the opinion that if my users have to reach for my (crap™) docs, then I've failed them
[05:17:18] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[05:17:50] <b0nn> But I absolutely accept that this is an opinion
[05:19:30] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[05:20:04] *** Joins: noarb- (~noarb@user/noarb)
[05:20:23] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[05:20:53] <fizzie> There's definitely examples of `NewFoo` constructors for cases where the package isn't named after a single thing the `New` function "obviously" is, like bytes.NewBuffer vs. bytes.NewReader.
[05:20:55] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[05:21:52] <b0nn> that ring.Ring example - which linter is it that will complain about "stutter"
[05:22:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[05:22:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:22:37] <b0nn> Oh, curiously enough, it's called stutter :) https://github.com/golang/lint/blob/master/testdata/stutter.go
[05:23:11] <fizzie> I think it excludes that case since there isn't really an option.
[05:23:31] <fizzie> See how it specifically allows donut.Donut. ("ok because it is the whole name").
[05:23:42] *** Joins: fikran (~fikran@user/fikran)
[05:24:11] <fizzie> It'd be a little silly to have `donut.Thing` or `donut.Itself` or whatnot.
[05:24:50] <b0nn> hmm the package name might be the better target for change - baked treats?
[05:24:56] <b0nn> or fried
[05:25:06] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[05:25:14] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:25:20] <fizzie> Though along those lines, it would complain about the `bag.BagInterface` type. Which "conventionally" would probably be either `bag.Interface` (compare `sort.Interface`) or `bag.Bag` (compare `hash.Hash`).
[05:25:52] *** Quits: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:26:04] <b0nn> and bag.Linked and bag.Slice
[05:26:07] <fizzie> But it's a package for a donut, not a package for baked treats in general.
[05:26:10] <b0nn> not sure about the latter
[05:26:37] <b0nn> fizzie: donuts can be baked or fried, so it's incomplete ;)
[05:27:20] <fizzie> Let's not even bring cronuts into it at all.
[05:27:27] <b0nn> heh
[05:27:53] <b0nn> there are also - bread and cake donuts
[05:28:14] <b0nn> and, the fact that, in my corner of the world, the word is Doughnuts
[05:29:10] <b0nn> bread doughnuts use yeast as a leavening agent, and are kneaded to develop the gluten, cake donuts use baking powder, and are not kneaded
[05:29:23] <fizzie> Our local store has started selling brookies (it's a brownie + cookie hybrid), so there's apparently no limit for baked product development.
[05:29:39] <b0nn> dude, those aren't legal here :P
[05:33:26] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:34:31] *** Joins: emanuele6 (~emanuele6@net-2-36-98-113.cust.vodafonedsl.it)
[05:34:51] *** Quits: emanuele6 (~emanuele6@net-2-36-98-113.cust.vodafonedsl.it) (Changing host)
[05:34:51] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[05:35:44] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:36:19] *** Joins: frost (~frost@user/frost)
[05:36:26] *** Joins: X-Scale` (~ARM@46.50.0.1)
[05:37:55] *** X-Scale` is now known as X-Scale
[05:39:15] *** Joins: itsjoints (~itsjoints@2001:470:69fc:105::1:29f4)
[05:39:44] *** Joins: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de)
[05:39:53] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:42:04] *** Quits: andlabs__ (~andlabs@2604:ca00:17a:576:e174:766d:ca9a:8895) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:43:43] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:48:22] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[05:55:09] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[05:56:16] *** Joins: andlabs (~andlabs@2604:ca00:17a:576:9134:c2de:647d:889f)
[05:59:28] *** Quits: andlabs (~andlabs@2604:ca00:17a:576:9134:c2de:647d:889f) (Client Quit)
[05:59:34] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:03:02] *** Joins: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f)
[06:03:52] *** Quits: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f) (Remote host closed the connection)
[06:04:25] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:09:50] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: I'm out!)
[06:11:16] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:27] *** Joins: kiril (~kiril@85.91.153.163)
[06:13:19] *** Joins: sdfgsdfg (sdfgsdfg@user/sdfgsdfg)
[06:17:02] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 268 seconds)
[06:27:31] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[06:29:07] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[06:30:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:31:13] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:33:42] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:45:22] *** Joins: souvik (~souvik@103.59.73.170)
[06:52:12] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[06:52:18] *** Quits: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:59:50] *** Joins: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25)
[07:02:42] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[07:03:53] *** Joins: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de)
[07:04:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:07:37] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:09:28] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[07:17:44] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:17:59] *** Joins: jzacsh[m] (~jzacshm]@2001:470:69fc:105::462)
[07:23:30] *** Quits: monoxane (~monoxane@162.43.233.220.static.exetel.com.au) (Read error: Connection reset by peer)
[07:24:21] *** Joins: monoxane (~monoxane@162.43.233.220.static.exetel.com.au)
[07:26:43] *** Quits: monoxane (~monoxane@162.43.233.220.static.exetel.com.au) (Changing host)
[07:26:44] *** Joins: monoxane (~monoxane@user/monoxane)
[07:26:45] *** Joins: prologic (~prologic@mail.mills.io)
[07:27:42] <prologic> Q: Why does the custom MarshalYAML() in https://gist.github.com/prologic/539c6b2de10ec40fa306f07d3ee9bf31 marshal into features: {} instead of an empty array?
[07:27:48] <prologic> I must be doing something stupid :D
[07:31:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:33:03] *** Joins: fikran (~fikran@user/fikran)
[07:36:56] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[07:37:21] <seebs> i don't know. i'd probably start by checking the actual exact value you're returning. like, printf with %#v or something so you can see what it thinks it's returning.
[07:39:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:40:12] <prologic> hmm
[07:40:50] <prologic> I think I solved it
[07:40:54] <prologic> Really weird actually
[07:41:14] <prologic> I was effectively having a pointer to FeatureFlags in one spot and a pas-by-value in another
[07:41:24] <prologic> Trying to marshal the pass-by-value version breaks down
[07:41:32] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:41:34] <prologic> Presumably. Because it no longer implements the yaml.Marshaler interface
[07:41:40] <prologic> So it defaults to the default behaviour
[07:41:48] <prologic> Which makes sense
[07:43:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[07:44:51] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:16] <seebs> i note you're putting locks around writes to the flags
[07:45:23] <seebs> but not around reads from them
[07:45:32] <seebs> this does not do what you probably want
[07:45:50] <seebs> because it still leaves you with the possibility of reads and writes overlapping and that is a data race and does not have defined semantics.
[07:47:10] <prologic> Ahh yes
[07:47:14] <prologic> You are right, I should fix that
[07:47:18] <prologic> Thanks for pointing the out!
[07:53:05] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:54:32] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[07:56:19] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:01:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:01:34] *** Parts: prologic (~prologic@mail.mills.io) (Textual IRC Client: www.textualapp.com)
[08:06:54] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Quit: WeeChat 3.3)
[08:07:01] *** Joins: engest (~engest@50.126.101.161)
[08:08:11] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[08:12:59] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:13:35] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[08:14:49] *** Quits: normen (~normen@p200300d71721dd009197b7c804eb9f4e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:17:25] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[08:26:28] *** Quits: oltuvok (~user@2804:1b2:80:cf64:a663:a1ff:fe49:c8ed) (Remote host closed the connection)
[08:27:26] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[08:30:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:31:18] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Client Quit)
[08:35:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:40:43] *** Quits: engest (~engest@50.126.101.161) (Ping timeout: 268 seconds)
[08:40:44] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[08:40:59] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:43:56] *** Joins: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de)
[08:45:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:46:25] *** Quits: duban (uid517682@id-517682.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:50:06] *** Quits: bugtrial (bugtrial@gateway/vpn/protonvpn/bugtrial) (Ping timeout: 245 seconds)
[09:00:42] *** Joins: ivan_ (~textual@123.123.46.64)
[09:01:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:01:46] *** Quits: fmac (bf93f83905@chat.sr.ht) (Ping timeout: 245 seconds)
[09:02:12] *** Joins: fmac (bf93f83905@2604:bf00:710:0:5054:ff:feea:5006)
[09:06:37] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[09:07:35] *** Joins: jpw (~jpw@user/jpw)
[09:08:26] *** Quits: sharktamer (9bafe1e1bb@chat.sr.ht) (Ping timeout: 245 seconds)
[09:11:44] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:710:0:5054:ff:feea:5006)
[09:14:14] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:19:18] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[09:24:26] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Remote host closed the connection)
[09:25:04] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:25:27] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:29:00] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:35:03] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[09:38:15] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[09:38:25] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:38:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:40:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:41:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:42:24] *** Joins: fikran (~fikran@user/fikran)
[09:43:00] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[09:44:27] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a964:7ef1:3a96:2c25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:46:52] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[09:47:00] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[09:49:14] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:49:49] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:49:54] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[09:56:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:58:51] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:59:45] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:01:08] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:01:30] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[10:04:10] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:05:59] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:07:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:08:16] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:08:54] *** Quits: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:12:48] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:13:50] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:13:57] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:14:20] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb) (Quit: Leaving)
[10:17:39] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:18:44] *** Joins: artifishul (~nate@162.218.217.134)
[10:19:25] <artifishul> This is probably a dumb question, but how do I enable/disable gopls features for neovim? The docs don't seem to make it obvious, is there a config file it's looking at somewhere?
[10:19:51] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb)
[10:25:35] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:25] <mickey8> good evening everyone! i'm trying to make use of mattn/go-sqlite3 and i've got everything to work and whatever, but since it's a cgo package i'm trying to get into a position where other people in the project won't need to mess around with cgo on windows after me. i rea there's some way to go install github.com/mattn/go-sqlite3 -o bin/ to pretty
[10:27:25] <mickey8> much build it for them already as part of the project and not just on my system. i'm not sure how to do that actually
[10:28:25] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:29:24] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:29:50] <bookworm> artifishul: which lsp integration do you use? Builtin? COC?
[10:31:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:32:10] <bookworm> if the builtin, https://git.labrat.space/nvimConf/tree/lua/rpb/plugins.lua#n245
[10:32:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:32:57] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 268 seconds)
[10:34:33] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:34:35] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:35:32] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:37:41] *** Joins: jla (~jordi@64.225.79.195)
[10:40:43] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[10:49:23] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:49:40] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:50:27] *** Quits: ivan_ (~textual@123.123.46.64) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:51:56] <artifishul> Yeah just builtin bookworm, thanks, I'll check that out
[10:54:41] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:55:32] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[10:55:39] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:57:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:59:06] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:00:45] <artifishul> so now gopls is telling me `struct with 168 pointers could be 136`, but can it tell me what needs to change to get it there?
[11:01:42] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:01:51] <artifishul> structslop is not help, gopls seems to go farther than structslop does
[11:01:55] <artifishul> no help*
[11:02:34] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Ping timeout: 268 seconds)
[11:02:59] <bookworm> try to check the code actions when your cursor is in the struct
[11:03:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:03:27] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:03:39] *** Joins: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7)
[11:04:24] *** Quits: yelnah (~felix@2001:44b8:3084:172:6f0:21ff:fe3c:d4d7) (Ping timeout: 268 seconds)
[11:06:07] *** Joins: ivan_ (~textual@123.123.46.64)
[11:06:46] <artifishul> Hmm, not sure how to see that in neovim
[11:07:37] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:20:32] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:20:58] *** Joins: mickey8 (~user@user/mickey)
[11:24:32] *** Joins: Armanzor (~Armanzor@user/armanzor)
[11:27:38] *** Joins: mrig (~AdiIRC@user/mrig)
[11:28:50] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:33:15] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[11:33:42] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[11:34:08] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:38:05] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[11:39:12] <b0nn> try mouseover
[11:41:45] *** Quits: artifishul (~nate@162.218.217.134) (Quit: Leaving.)
[11:46:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:46:59] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:50:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:51:19] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:51:45] *** Joins: fikran (~fikran@user/fikran)
[11:54:09] <bookworm> in neovim? Not sure the default lsp config has mouse hooks enabled
[11:54:22] <b0nn> oh, it does in vim 8
[11:54:41] <bookworm> for code actions?
[11:54:51] <b0nn> not sure
[11:55:01] <bookworm> vim 8 doesn't have an LSP either
[11:55:08] <bookworm> certainly not out of the box
[11:55:11] <b0nn> I only use it for "what type is this var" and "what is the signature of this func"
[11:55:24] <b0nn> vim-go does
[11:56:30] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[11:57:26] *** Quits: ivan_ (~textual@123.123.46.64) (Ping timeout: 268 seconds)
[11:58:31] *** Quits: Xjs (~jannis@user/xjs) (Quit: Bye.)
[11:58:48] *** Joins: thing_ (~thing@user/thing)
[11:58:53] *** Joins: Xjs (~jannis@user/xjs)
[12:00:03] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[12:00:27] *** thing_ is now known as thing
[12:00:30] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:04:32] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:04:50] *** Joins: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de)
[12:07:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[12:08:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:10:42] *** Joins: monoxane0 (~monoxane@user/monoxane)
[12:12:52] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 268 seconds)
[12:12:52] *** monoxane0 is now known as monoxane
[12:15:33] *** Joins: mei (~mei@user/mei)
[12:26:02] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[12:26:11] *** Joins: moto (~moto@user/moto)
[12:26:17] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:26:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:28:10] *** Joins: martinkennelly_ (~martinken@84.203.20.92)
[12:34:44] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[12:35:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:35:53] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[12:38:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:56:20] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:56:39] *** Joins: mickey8 (~user@user/mickey)
[13:02:48] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[13:07:40] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[13:22:53] *** Joins: Atlas (~atlas@user/atlas)
[13:31:26] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:31:39] *** Joins: mrig (~AdiIRC@user/mrig)
[13:36:26] *** Quits: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:37:49] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[13:37:50] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 260 seconds)
[13:38:38] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 265 seconds)
[13:39:54] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[13:39:57] *** Joins: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de)
[13:45:46] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 260 seconds)
[13:47:12] *** Joins: noarb (~noarb@user/noarb)
[13:50:44] *** Joins: arinov (~arinov@178.240.160.150)
[13:51:42] *** Joins: jla (~jordi@64.225.79.195)
[13:52:04] * jla newbie here..first steps
[13:54:25] <jla> while 'go run main.go'... if i change the underlaying source code, may i (naturally?) stop / restart the running process so the changes are taken into account ? there is no kind of 'on-the-fly' re-compiling magic possible ?
[13:56:20] *** Joins: alzgh (~alzgh@user/alzgh)
[13:58:28] <alzgh> I'm just starting to learn Go. When I need a set is it OK to use a map instead? I don't see any built-in set ds.
[13:59:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[13:59:37] <fizzie> Yes, a `map[foo]bool` or a `map[foo]struct{}` is often used for a set of foo.
[14:00:19] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[14:00:47] *** Joins: prologic (~prologic@mail.mills.io)
[14:00:52] <alzgh> thank you fizzie
[14:01:06] *** Joins: fikran (~fikran@user/fikran)
[14:01:11] <prologic> Q: Why does the empty regexp match any string? (https://play.golang.org/) this is rather weird to me and makes no sense.
[14:01:19] <prologic> Am I misunderstanding regexp here or is this a bug?
[14:01:21] <prologic> Go 1.17.1 here
[14:02:22] <fizzie> Your playground link was missing the... link. Need to click on the share button.
[14:02:52] <prologic> Err fuck wait
[14:03:08] <prologic> https://play.golang.org/p/1ZQuQS4balZ
[14:03:15] <prologic> Didn't realise you had to click the "Share" button :D
[14:04:31] <fizzie> Anyway, the Match method is what other regex APIs often call "Find" instead.
[14:04:35] <fizzie> "MatchString reports whether the string s contains any match of the regular expression pattern."
[14:05:04] <fizzie> Any string will *contain* a match of the empty regular expression.
[14:06:14] <prologic> Oh fuck
[14:06:17] <fizzie> You can add a ^ at the front and a $ at the back to anchor the expression; "^$" will only match the empty string.
[14:06:18] <prologic> 🤦‍♂️
[14:06:22] <prologic> I'm such an idiot
[14:06:28] <prologic> I should be using the proper method then
[14:06:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:07:11] <fizzie> It's a bit confusing; the difference between the Match and Find methods isn't the "usual" one.
[14:07:43] <prologic> Wait sorry I'm a little confused
[14:07:51] <prologic> In my case is it better ot anchor the regexp with ^$ or use Find?
[14:07:57] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[14:08:05] <prologic> I am doing a literal match here, not trying to find a sub string at all
[14:08:12] <fizzie> FindString and MatchString have the same logic of checking whether there is a match, the only difference is in what they return.
[14:08:15] <prologic> Basically matching urls against a blacklist/whistelist
[14:08:40] <fizzie> (One returns a bool, the other the matching string.)
[14:08:57] <fizzie> Yeah, you'll want to anchor the expression for Go.
[14:09:15] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[14:09:15] <prologic> damn
[14:09:22] <prologic> The subtle of the Go regexp librayr
[14:09:31] <prologic> To be fair I've only been bitten by this one case
[14:09:36] <prologic> I don't mind it doesn't have back ref
[14:10:58] *** Quits: cjd (~user@2a01:e0a:149:fcb0:2599:7ff2:34f7:d981) (Ping timeout: 260 seconds)
[14:15:34] *** Joins: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f)
[14:16:23] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[14:17:02] <fizzie> The (C++ API of the) re2 library it's inspired by does have both operations, calling them `FullMatch` and `PartialMatch` respectively. But maybe the author of the Go regexp package thought they have enough different methods already, what with that FindAllStringSubmatchIndex thing going on. ;)
[14:17:12] <fizzie> Using the names "Find" and "Match" to denote a different distinction than the typical one is a little annoying though... but it's not like I could come up with any better names either.
[14:19:09] <prologic> Heh yeah
[14:19:24] <prologic> Well the issue I have is that these strings that are treated as regexes come from a user or "admin" of my software
[14:19:27] <prologic> And come from a web form
[14:19:48] <prologic> So you have the usual crap of realigned with \r\n in the web form, which I translate to \n but this leads to effectively empty strings as potential regexes
[14:20:00] <prologic> So I think it's better if I do some strings trimming there to safe guard that
[14:20:07] <prologic> As well as special case the empty string as a non-valid regex
[14:20:13] <prologic> I mean frankly in my case it makes no sense anyway
[14:20:31] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[14:20:36] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:23:06] *** Quits: arinov (~arinov@178.240.160.150) (Ping timeout: 260 seconds)
[14:24:59] <leitz> I'm writing a set of basic skill building exercises to help brand new Gophers get comfortable with the language. Do you think that would be useful to anyone?
[14:25:05] <leitz> https://github.com/LeamHall/goPracticum
[14:25:47] *** Quits: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f) (Remote host closed the connection)
[14:26:13] *** Joins: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f)
[14:27:07] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:8d4b:a05b:14db:fa09)
[14:29:12] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[14:29:32] *** Joins: alzgh (~alzgh@user/alzgh)
[14:29:36] *** Parts: prologic (~prologic@mail.mills.io) (Textual IRC Client: www.textualapp.com)
[14:31:02] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098)
[14:35:14] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:8d4b:a05b:14db:fa09) (Quit: WeeChat 3.3)
[14:37:24] *** Quits: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f) (Quit: Leaving)
[14:38:29] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[14:38:49] *** Joins: alzgh (~alzgh@user/alzgh)
[14:46:29] *** Atlas is now known as atlas`
[14:51:19] *** Joins: arinov (~arinov@213.194.126.155)
[14:54:04] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--11a.oracle-ocna.com)
[14:54:11] *** Joins: rockyh (~rockyh@user/rockyh)
[14:55:13] *** Joins: Guest26 (~Guest26@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net)
[14:55:27] *** Quits: rockyh (~rockyh@user/rockyh) (Client Quit)
[15:00:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:02:32] *** Joins: hcee (~hcee@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net)
[15:02:52] *** Quits: hcee (~hcee@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net) (Client Quit)
[15:03:25] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:03:35] *** Joins: hcee (~hcee@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net)
[15:03:56] *** Joins: rockyh (~rockyh@user/rockyh)
[15:04:22] *** Quits: Guest26 (~Guest26@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:04:54] *** Quits: shtirlic (~shtirlic@178.70.141.41) (Remote host closed the connection)
[15:07:26] *** Joins: mei (~mei@user/mei)
[15:08:39] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:12:06] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[15:15:11] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:15:28] *** Joins: rockyh (~rockyh@user/rockyh)
[15:20:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:20:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[15:23:15] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:26:16] *** Joins: volt (~volt@67.197.6.215)
[15:26:53] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:27:09] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--11a.oracle-ocna.com) (Remote host closed the connection)
[15:27:28] *** Quits: hcee (~hcee@cpc97866-walt21-2-0-cust111.13-2.cable.virginm.net) (Read error: Connection reset by peer)
[15:27:32] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--11a.oracle-ocna.com)
[15:28:02] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 260 seconds)
[15:28:22] <dntreou> Hello everyone, I am curious to get your thoughts on something I have noticed. Is any actuall difference using a defer rather than doing a return func() { doing something here}
[15:29:27] <mort> well `return func() { ... }` returns a function back to the caller
[15:31:39] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net)
[15:33:53] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[15:34:08] *** atlas` is now known as Atlas
[15:35:32] <since_> dntreou: the idea is you write your defer statement immediately after e.g. open(). Then you do not have to remember it later. Also variable values are captured during at the time the defer is declared. So fundamentally different
[15:37:08] <since_> dntreou: https://play.golang.org/p/q5n0P-mKrmS
[15:37:26] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[15:37:47] *** Joins: alzgh (~alzgh@user/alzgh)
[15:38:38] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[15:40:19] <dntreou> since_:  that was quite interesting to see.... I thought the defer executed in the end of the function call
[15:45:23] *** Joins: krux02 (~krux02@194.8.199.29)
[15:45:31] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[15:46:03] <krux02> I am trying to connect to a mysql server that I can access with http://192.168.8.183/phpmyadmin
[15:46:19] <krux02> but all I get is "connection refused" with no explanation what the problem is
[15:46:50] <krux02> db, err := sql.Open("mysql", "tcp(192.168.8.183)/") // connection refused
[15:47:11] <krux02> Even when I provide username and password, still anstantly connection refused
[15:47:18] <krux02> what am I doing wrong here?
[15:47:37] <krux02> import "database/sql"
[15:47:50] <krux02> import _ "github.com/go-sql-driver/mysql"
[15:47:57] <krux02> I use those two imports
[15:50:33] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[15:52:35] *** Joins: WOBBLY_HORSE (~ryan@220.240.158.188)
[15:56:39] *** Quits: idstam_ (~idstam@2.71.166.96.mobile.tre.se) (Quit: WeeChat 2.8)
[15:56:44] *** Quits: WOBBLY_HORSE (~ryan@220.240.158.188) (Quit: Lost terminal)
[15:57:35] <sztanpet> you arent running mysql at that address at the default port
[15:57:44] <zutto> krux02: triplecheck your connection string (and remember to add port..), confirm that your mysql server is bound to interface that accepts external connections (0.0.0.0 for example), and doublecheck your credentials
[15:59:42] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Quit: The Lounge - https://thelounge.chat)
[16:00:05] <mort> could also be a firewall thing?
[16:00:10] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:00:15] <zutto> you can also try using the mysql/mariadb-cli software to ensure that you can actually connect to the mysql server remotely
[16:00:30] <zutto> aaaand, doesn't mysql limit user access by IP? or am I remembering some other database?
[16:01:30] <zutto> `GRANT ALL ON database_name.* TO user_name@'ip_address' IDENTIFIED BY 'user_password';` ah yes, it does - check your mysql user as well krux02, might be localhost-only by default :)
[16:01:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[16:02:55] *** Joins: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de)
[16:03:20] <since_> dntreou: because it does: look at this with an extra println: https://play.golang.org/p/PSa7ianKB9M
[16:03:30] <since_> Think about the result and hit run
[16:08:07] <dntreou> since_:  the only thing that I would think it would behave differently was the for ( I would put the whole for loop in the defer) to get that result, I would assume that the code as you send it it wouldnt work
[16:08:53] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[16:09:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:10:06] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:10:27] *** Joins: fikran (~fikran@user/fikran)
[16:10:42] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:11:42] <krux02> zutto, thanks
[16:12:04] <krux02> I just got this information here: https://hashmysql.net/wiki/Remote_Clients_Cannot_Connect
[16:12:50] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:13:24] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:19:43] <eyJhb> It seems like this https://github.com/golang/tools/blob/master/internal/lsp/source/completion/statements.go#L181 at some point put in the return, based on the parent function. The only thing I can get out of it now, is `if err != nil { return nil, err }`, nothing about the signature of the function.
[16:19:52] *** Joins: zwr (~zwr@2804:d45:b966:fb00:e598:c47f:66b:6dcf)
[16:19:59] <eyJhb> Anybody else? Or is there anyone that have autocomplete regarding err working ?
[16:22:34] <eyJhb> Found what it should return better here - https://github.com/golang/tools/blob/master/internal/lsp/source/completion/statements.go#L280-L285
[16:23:16] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:24:27] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[16:25:14] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[16:28:31] *** Joins: joshua (~joshua@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc)
[16:28:54] *** Parts: joshua (~joshua@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc) ()
[16:29:10] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--11a.oracle-ocna.com) (Read error: Connection reset by peer)
[16:29:12] *** Joins: jakekelly (~jakekelly@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc)
[16:29:49] *** Parts: jakekelly (~jakekelly@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc) ()
[16:30:26] *** Joins: jakekelly (~jakekelly@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc)
[16:31:50] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[16:31:50] *** Quits: teasea9 (~teasea@user/teasea) (Quit: teasea9)
[16:32:14] *** Joins: teasea90 (~teasea@user/teasea)
[16:33:26] <jakekelly> for any given function in the docs (for example https://pkg.go.dev/net#Dial) is there a list of possible errors that that function might return?
[16:34:22] *** Joins: shtirlic (~shtirlic@178.70.141.41)
[16:34:50] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[16:35:10] <tuskkk____> What is a transparent redirect? And does go http client support it?
[16:35:39] *** Joins: teasea907 (~teasea@user/teasea)
[16:37:20] *** Atlas is now known as atlas`
[16:37:24] *** Quits: teasea90 (~teasea@user/teasea) (Ping timeout: 268 seconds)
[16:37:24] *** teasea907 is now known as teasea90
[16:38:37] <siXy> jakekelly: No - maintaining a full list of possible errors on all supported platforms would be close to impossible
[16:41:21] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:41:26] <siXy> tuskkk____: "transparent redirect" isn't a defined term - you might be thinking of transparent proxying perhaps? But whatever you're thinking of the answer is going to be "yes".
[16:41:33] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:41:44] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fc9d:2ed5:b7a1:e098) (Ping timeout: 268 seconds)
[16:42:51] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[16:43:09] <siXy> tuskkk____: For more about go's http client and redirect, see the docs for CheckRedirect here: https://pkg.go.dev/net/http#Client
[16:44:57] <tuskkk____> I see, let me check it out, thanks. The use case is, I am using some third party client API, and they are changing the domain name, so they say there will be a redirect for a couple of days
[16:45:20] <siXy> yeah, it will just work. you don't need to change anything.
[16:45:33] <tuskkk____> super, thanks
[16:45:44] *** Joins: adlternative (~adl@117.32.216.102)
[16:46:27] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:46:32] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:59:24] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Read error: Connection reset by peer)
[17:00:18] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:00:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[17:01:16] <jakekelly> that makes sense as to the full totality of the problem - I was hoping for at least a partial solution. I would have expected the library writers to evaluate the most common error cases, wrapped those up as your own errors and then have an "unsupported error" fallback option which then just relays the platforms error information. ah well
[17:02:09] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:06:35] *** Joins: engest (~engest@50.39.227.149)
[17:07:14] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[17:08:00] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:09:27] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Client Quit)
[17:11:31] <fizzie> jakekelly: The "net" package specifically *does* some of that, by providing a net.Error interface (that can be used to check if an error is classified as a "timeout" or as "temporary"), and a bunch of other high-level error types (*net.AddrError, *net.DNSError, ...), all of which you can test for with `errors.Is` / `errors.As`. But it's not a common convention, and there isn't any man-page-style
[17:11:33] <fizzie> "these are the possible errors" per-function lists.
[17:12:19] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[17:13:46] <dostoyevsky2> I noticed it's quite difficult to launch e.g. less from inside `go test -v' because /dev/std{in,out,err} are all pipes.. and just telling the command to use /dev/tty (on linux) doesn't produce any output...
[17:15:17] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:17:06] *** Joins: vovs03 (~En3rgy.UM@80.71.242.7)
[17:23:22] *** Quits: adlternative (~adl@117.32.216.102) (Read error: Connection reset by peer)
[17:24:50] *** Joins: adlternative (~adl@117.32.216.79)
[17:31:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:33:06] <seebs> Yes, that's absolutely 100% intentional, do not attempt to interact with "the tty", there isn't one and you shouldn't assume there might be.
[17:34:30] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:34:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[17:35:02] *** atlas` is now known as Atlas
[17:37:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:38:28] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:38:41] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[17:43:14] *** PlaydohPlato3579 is now known as PlaydohPlato
[17:47:05] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[17:47:28] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[17:51:13] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:52:39] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[17:52:46] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[17:53:16] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[17:54:25] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--2a7.oracle-ocna.com)
[17:54:46] *** Quits: lofiguy_ (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[17:55:30] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[17:55:51] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:508f:c2a8:54aa:497c:4a9a:d063)
[18:00:56] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:02:06] <krux02> do you guys have any recommendations for visualizing graphs (simple plots) on a website?
[18:03:03] *** Atlas is now known as atlas`
[18:03:48] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: I'm out!)
[18:03:49] *** Joins: arinov (~arinov@213.194.126.155)
[18:03:53] <krux02> the server is written in go and the data is from a database and for now just generating a static version of the data on request is ok
[18:06:07] *** Parts: LordRishav (~LordRisha@user/lordrishav) (Ight Imma Head out)
[18:06:41] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[18:08:05] *** atlas` is now known as Atlas
[18:11:47] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 264 seconds)
[18:12:13] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Read error: Connection reset by peer)
[18:14:24] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[18:15:59] <Led_Zeppelin2> are there any tools besides 'gotests' that generate test cases? for some reason gotests -incl option does not work for me. Any alternatives?
[18:16:58] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:17:21] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[18:17:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:18:59] *** Joins: tebruno997 (~tebruno99@user/tebruno99)
[18:19:48] *** Joins: fikran (~fikran@user/fikran)
[18:20:01] *** Quits: tebruno997 (~tebruno99@user/tebruno99) (Client Quit)
[18:20:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:20:35] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:508f:c2a8:54aa:497c:4a9a:d063) (Quit: Leaving)
[18:21:15] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[18:22:17] <siXy> krux02: are you after something like grafana?
[18:22:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[18:22:38] <dostoyevsky2> krux02: d3.js
[18:22:51] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 268 seconds)
[18:22:56] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:23:34] <krux02> siXy, yes
[18:23:50] <krux02> but grafana is big
[18:23:52] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[18:24:44] <lofiguy> krux02 Grafana, Zabbix, Prometheus etc. depends on what you need to know ;-)
[18:25:27] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:cd4c:be15:188d:ed80) (Remote host closed the connection)
[18:25:49] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:25:51] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:e12b:32a9:38dc:6318)
[18:26:25] <lofiguy> krux02, https://prometheus.io/docs/guides/go-application/
[18:26:37] <dostoyevsky2> Is the Grafana code base go or typescript?  I see a go.mod in the root directory but then there are .ts files all over the place
[18:26:55] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[18:27:28] <Led_Zeppelin2> all of the above.
[18:27:33] <dostoyevsky2> Seems like they wrote a build script in go
[18:27:47] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[18:29:43] <siXy> krux02: Eh. It's really not that huge - my grafana container here takes all of 50M of ram to run. But there's stuff like github.com/wcharczuk/go-chart if you want smaller.
[18:30:06] <krux02> I just looked into borth Grafana and D3. What was in my head was more of a static page generatiton, so I generate it, and then it works without internet.
[18:31:03] <krux02> I am not ruling either d3 nor grafana out. They look pretty cool
[18:32:31] <siXy> I'd be tempted to just go with grafana as it works and is easy to configure, but if you want something small and custom that lib looks semi reasonable
[18:32:35] <krux02> I am trying to avoid the "two language problem" right now and therefore would prefer if there is something that is just pure server side generation.
[18:32:52] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[18:33:22] <krux02> well, for me at the moment, I am just starting to get into the project. I would like to experiment with different approaches.
[18:33:50] <krux02> The problem is, graphana is already in use (I don't know how it works yet) and it is too slow
[18:34:19] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Read error: Connection reset by peer)
[18:34:27] <krux02> sorry I mean Grafana
[18:35:48] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 268 seconds)
[18:36:10] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:36:10] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[18:37:46] *** Atlas is now known as atlas`
[18:38:03] *** Quits: g4wjs (~quassel@mail.classdesign.com) (Quit: No Ping reply in 180 seconds.)
[18:38:17] *** Joins: g4wjs (~quassel@mail.classdesign.com)
[18:42:10] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[18:42:44] *** Joins: ugjka (~ugjka@ugjka.net)
[18:44:02] <dostoyevsky2> Ok, seems I need to create a pty in order to start less inside "go test" for debugging...
[18:45:05] <krux02> Is there a good tutorial about grafana that actually explains what it does, and why it does things that way?
[18:45:54] *** Joins: lalitmee (~lalitmee@42.106.36.190)
[18:46:26] <siXy> https://grafana.com/docs/grafana/latest/getting-started/getting-started/
[18:46:54] <krux02> dostoyevsky2, github says it is about 50/50 typescript and go
[18:47:24] <siXy> krux02: you shouldn't need to care what lang it's written in - you're not going to be modifying the code anyway
[18:47:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b125-ee43-8416-dc8d.res6.spectrum.com)
[18:47:40] <sztanpet> krux02 high-lever overview: you give it a datasource, you begin to define with an "easy-to-use" graphical ui the graphs you want by querying said datasources, it gives you graphs, very self-contained in that sense
[18:48:02] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:48:20] <krux02> siXy, In my experience I always needed to modify the source code of what I was using
[18:48:24] <krux02> so I do care
[18:49:05] <siXy> if you start modifying the source code for grafana you're probably using it wrong.
[18:49:13] <sztanpet> it either fits your usecase or you make a custom solution really
[18:49:48] <siXy> if you want something to embed into a different app, d3.js or some other lower-level graphing lib is what you want, but that will be a lot more work on your part.
[18:49:51] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.130)
[18:49:52] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.130) (Changing host)
[18:49:52] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:50:17] <sztanpet> you can embed grafana graphs too, but thats beside the point
[18:50:21] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: I'm out!)
[18:50:36] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[18:51:51] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[18:53:01] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:54:11] <dostoyevsky2> krux02: d3.js would work well as a static page, you'd just need to create some javascript and the json to display... but chances are you have so much data (so that it's slow in grafana) -- and that would also be slow as a static page... unless you just do all the work on the severside and generate a json with just the data you want to plot
[18:54:46] *** Joins: andlabs (~andlabs@2604:ca00:17a:576:d43a:d336:44c0:c058)
[18:55:44] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Read error: Connection reset by peer)
[18:56:46] <krux02> dostoyevsky2, that was the idea, to just send the data that is relevant for plotting
[18:56:47] *** Quits: adlternative (~adl@117.32.216.79) (Ping timeout: 268 seconds)
[18:57:57] *** Joins: andlabs_ (~andlabs@2604:ca00:17a:576:d03e:8da:4a6e:900e)
[18:58:01] <krux02> but I am currently thinking about the problem. Maybe the reason for a slow grafana is that it is used inefficiently/incorrectly. And the solution would simply be to use it better.
[18:58:11] <lofiguy> tl;dr last messages but...
[18:58:14] <lofiguy> The monitoring system depends on your requirements. If you have personal app which is used by 1k people these monitoring systems will be overkill.
[18:59:30] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[18:59:41] <lofiguy>  And they will eat more resources than your app ;-)
[19:00:31] <krux02> it is for a senser network
[19:00:37] <krux02> so a lot of real time data
[19:01:14] *** Quits: andlabs (~andlabs@2604:ca00:17a:576:d43a:d336:44c0:c058) (Ping timeout: 260 seconds)
[19:03:47] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:04:36] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:08:30] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[19:18:44] <eyJhb> Plugging this here, anyone that is using gopls that has automatic completion of err returns? Ie. this https://github.com/golang/tools/blob/master/internal/lsp/source/completion/statements.go#L165-L181 ?
[19:19:56] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[19:21:16] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:22:53] *** atlas` is now known as Atlas
[19:24:32] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:25:40] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:26:43] *** Quits: krux02 (~krux02@194.8.199.29) (Remote host closed the connection)
[19:28:13] *** Quits: khrbt_ (~znc@user/khrbt) (Ping timeout: 268 seconds)
[19:30:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[19:37:13] *** Joins: arcatech (~arcatech@user/arcatech)
[19:37:16] *** Joins: khrbt (~znc@user/khrbt)
[19:39:28] *** Quits: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32) (Quit: Leaving)
[19:39:50] *** Joins: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32)
[19:45:40] *** Joins: krux02 (~krux02@194.8.199.29)
[19:47:09] <krux02> I try to build grafana right now and I have a build problem: embed.go:4:2: package embed is not in GOROOT (/usr/lib/go-1.15/src/embed)
[19:47:10] <krux02> what does that mean?
[19:49:18] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 260 seconds)
[19:49:18] *** Quits: et (~et@user/et) (Ping timeout: 260 seconds)
[19:52:18] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[19:55:23] *** Joins: andlabs (~andlabs@2604:ca00:17a:576:98f1:7802:8b71:1545)
[19:56:50] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:57:45] <eyJhb> krux02: Upgrade your golang
[19:57:48] *** Joins: andlabs__ (~andlabs@2604:ca00:17a:576:8444:a85b:2b4:93fc)
[19:58:10] *** Quits: andlabs_ (~andlabs@2604:ca00:17a:576:d03e:8da:4a6e:900e) (Ping timeout: 260 seconds)
[19:58:26] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 268 seconds)
[20:01:31] *** Quits: andlabs (~andlabs@2604:ca00:17a:576:98f1:7802:8b71:1545) (Ping timeout: 268 seconds)
[20:02:19] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[20:02:52] *** Joins: khrbt (~znc@user/khrbt)
[20:03:11] *** marler8997_ is now known as marler8997
[20:03:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:04:44] <krux02> eyJhb, I have version go1.15.9 the lastest version available on my system
[20:05:13] <fmac> embed came with 1.16
[20:05:36] <eyJhb> ^
[20:05:37] <krux02> grafana says it requires version 1.14 or later
[20:05:46] <eyJhb> Then they should update that :)
[20:05:47] *** Quits: andlabs__ (~andlabs@2604:ca00:17a:576:8444:a85b:2b4:93fc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:05:47] <krux02> wtf is embed
[20:05:59] <eyJhb> https://pkg.go.dev/embed
[20:07:08] <krux02> ok, that is useful, but that error message isn't useful at all
[20:07:15] <fmac> you may want to download the latest binary from the golang website if your distro repo isn't up to date
[20:08:44] <rewt> how is that message not useful?  it's saying the embed package is missing... the only reason it would say that is if it's required but missing
[20:10:04] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[20:10:26] <lofiguy> go env -w GO111MODULE=off
[20:11:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:11:32] <lofiguy> or just try inside grafana go mod init
[20:12:18] *** Joins: jespada (~jespada@190.7.36.46)
[20:15:38] <eyJhb> Anyone that has autocompleetion working like - https://github.com/golang/go/issues/43310
[20:17:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:10] *** Quits: lalitmee (~lalitmee@42.106.36.190) (Ping timeout: 268 seconds)
[20:20:46] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Quit: I'm out!)
[20:23:24] *** Quits: emcconville (~emcconvil@c-98-222-200-8.hsd1.il.comcast.net) (Quit: WeeChat 3.2)
[20:23:41] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[20:23:49] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Client Quit)
[20:24:41] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[20:24:42] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[20:27:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:27:57] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:28:22] *** Quits: jlindgren (~phytyca@user/jlindgren) (Quit: The Lounge - https://thelounge.chat)
[20:28:45] *** Joins: jlindgren (~jlindgren@user/jlindgren)
[20:29:09] *** Joins: fikran (~fikran@user/fikran)
[20:29:17] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:31:56] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:34:12] *** Joins: yelnah (~felix@110-175-211-64.static.tpgi.com.au)
[20:35:30] *** Quits: ofh (~felix@2001:44b8:3080:a5:6f0:21ff:fe3c:d4d7) (Ping timeout: 260 seconds)
[20:38:35] <braxas> fizzie: thanks, if I can't I can't, was just wondering
[20:41:09] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[20:46:18] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[20:47:03] <braxas> sorry for all the noob questions, if I have https://github.com/aucampa/go-sdp, and in there I have sdp.go, and in there package sdp and const Foo = "123", if I do import "github.com/aucampia/go-sdp", I will be able to access it with `sdp.Foo`?
[20:48:10] <ikke> import "github.com/aucampia/go-sdp/sdp", but yes, that should be possible
[20:52:47] <braxas> I see, I will have to test
[20:53:24] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:53] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--2a7.oracle-ocna.com) (Ping timeout: 268 seconds)
[20:59:00] <Arsen> can I set IP_TRANSPARENT via a Dialer object?
[20:59:17] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[21:00:19] <Arsen> right now I get a ``panic: dial tcp: address [block redacted]::2: mismatched local address type'' (::2 isn't bound to my machine, but it would be routed to it, so I'd like to bind it via IP_TRANSPARENT)
[21:03:49] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:10:07] <mickey8> how should i check if my secrets.go file with all the api keys and stuff was actually present when main() is run?
[21:11:22] <foobaz> check the length of the key, or make an API call and see if it succeeds
[21:13:16] <mickey8> i mean it'll start complaining it's missing definitions if it's missing
[21:13:41] <mickey8> i was thinking of some if reflect.TypeOf(Secret) == nil or something
[21:14:49] <mickey8> cant really check the len(<undefined constant>)
[21:16:16] <fizzie> braxas: Whether the import path is "github.com/aucampia/go-sdp" or "github.com/aucampia/go-sdp/sdp" depends on whether that repository (a private one? doesn't seem to exist / be visible) has the code in `/sdp.go` or `/sdp/sdp.go`, but in either case after importing it (unless you rename it in the import) you'd access it as `sdp.Foo` corresponding to the package declaration in the file.
[21:17:04] *** Quits: jespada (~jespada@190.7.36.46) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:17:45] <fizzie> You can't do `reflect.TypeOf(<undefined constant>)` any better. If you refer to a name, it must resolve to something at build time.
[21:21:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[21:23:30] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Quit: Leaving)
[21:23:34] *** Quits: krux02 (~krux02@194.8.199.29) (Remote host closed the connection)
[21:25:03] <mickey8> so there's no way to do that?
[21:25:42] <mickey8> :(
[21:26:00] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[21:27:46] *** Quits: volt (~volt@67.197.6.215) (Ping timeout: 260 seconds)
[21:27:47] *** Quits: Atlas (~atlas@user/atlas) (Quit: Textual IRC Client: www.textualapp.com)
[21:27:48] <fizzie> Have a placeholder file that defines those things to nil slices / empty strings, then you *can* use the len(X) test to verify if whoever built the binary actually substituted in the secret bits or not?
[21:28:34] <ikke> The directory does not define the package name
[21:28:47] <fizzie> No, but the directory does define the import path.
[21:29:29] *** Joins: volt (~volt@172.58.158.192)
[21:30:24] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:31:04] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[21:33:09] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[21:33:11] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.130)
[21:33:12] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.130) (Changing host)
[21:33:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:35:18] *** Quits: vovs03 (~En3rgy.UM@80.71.242.7) (Ping timeout: 260 seconds)
[21:37:43] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:41:49] *** Joins: jpw (~jpw@user/jpw)
[21:48:54] *** Joins: glats (~glats@45.77.73.141)
[21:49:17] *** Joins: mei (~mei@user/mei)
[21:51:50] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[21:56:29] <glats> hi. i wonder if the hexagonal architecture is recommended in golang? is there any golang idiomatic architecture that resembles it?
[21:59:14] <seebs> "the hexagonal architecture"?
[21:59:40] <seebs> hmm. https://blog.ndepend.com/hexagonal-architecture/ <-- this, maybe?
[22:01:00] <seebs> anyway, i'm not sure about golang, but in Go, there's at least some convention of using abstracted interfaces for things like I/O, usually using the language feature called interfaces.
[22:01:03] <seebs> Heck of a coincidence that.
[22:03:15] *** Joins: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f)
[22:04:08] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:04:59] *** Quits: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f) (Client Quit)
[22:05:18] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[22:05:57] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[22:09:59] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[22:10:35] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[22:10:40] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[22:12:34] <riv> what are you talking about seeds
[22:12:55] <riv> it literally says golang.org in the topic here
[22:13:10] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Client Quit)
[22:13:23] <LambdaComplex> i'm gonna be writing a program that stress tests a server by sending it random data and recording the results (latency, number of errors, etc). how can i ensure that my program affects the measurements as little as possible? e.g. "okay so the observed throughput was XXXXX but some of that time was actually wasted generating the data so this isn't actually 100% accurate"
[22:14:31] *** Joins: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f)
[22:14:38] <glats> seebs: yeah. i'm sorry. i wasn't that clear. but yeah that kind of arch.
[22:16:02] <glats> i am looking for arguments to avoid that architecture in a go project because that kind of architecture is more for object oriented software.
[22:18:17] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:63:e230:87a0:5e90)
[22:18:19] <foobaz> i write heavily objected oriented code in go
[22:18:57] <foobaz> i think it's fine for that style of development, the only thing i've missed is multiple inheritance, but that's basically just syntactic sugar anyway
[22:19:25] *** Joins: andlabs_ (~andlabs@2a00:79e1:abc:1a0a:b469:fa75:d704:da80)
[22:20:04] <glats> foobaz: i understand
[22:20:04] <foobaz> instead of override methods, you can have function variables in a struct, like you would doing OOP in C
[22:20:15] <glats> perfect. thank you
[22:20:24] *** Joins: Atque (~Atque@user/atque)
[22:20:54] <foobaz> i'm not sure why OOP fell out of style, it's the only way i can keep track of things in a large codebase
[22:21:36] <foobaz> perhaps the modern CADT development model does not put a priority on keeping track of things :)
[22:22:27] <ikke> CADT?
[22:22:45] <foobaz> https://www.jwz.org/doc/cadt.html
[22:22:58] *** Quits: alphasierra (~alphasier@2405:201:e:4d:9f02:dbb3:fb6b:643f) (Quit: Leaving)
[22:23:08] <ikke> ah, I event recently read that
[22:23:22] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:63:e230:87a0:5e90) (Ping timeout: 268 seconds)
[22:25:13] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[22:27:02] *** Quits: gcd (~gcd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Remote host closed the connection)
[22:30:59] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 264 seconds)
[22:36:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:38:01] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:38:30] *** Joins: fikran (~fikran@user/fikran)
[22:41:12] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:41:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:42:28] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[22:44:04] *** Quits: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[22:45:32] *** Joins: normen (~normen@p200300d71721dd00a86b50acc6b489c4.dip0.t-ipconnect.de)
[22:49:16] <b0nn> glats: Hexagonal Architecture/Ports & Adapters + its many other names is an arch that I <3 in Go
[22:49:58] *** Quits: souvik (~souvik@103.59.73.170) (Ping timeout: 260 seconds)
[22:50:13] <b0nn> I mean you get to have your business logic in one package, and it defines the interfaces of the services that it will interact with, and that BL has NO dependencies on anything
[22:50:37] <b0nn> that means I can (and do) swap stuff in and out regularly without having to touch the BL
[22:51:44] *** Joins: et (~et@user/et)
[22:52:01] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:53:23] <glats> b0nn: aaah perfect. hoping not bother you but: do you have any example?
[22:54:06] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:4c76:5f5a:a46c:1035)
[22:54:28] <b0nn> This is a super *simple* example, https://github.com/mindfarm/republish-bot
[22:54:58] <b0nn> Altho I was lazy and put the BL in main.go with the DI code
[22:55:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:57:11] <b0nn> The extensibility of the style is clearest in platform/
[22:57:54] *** Quits: andlabs_ (~andlabs@2a00:79e1:abc:1a0a:b469:fa75:d704:da80) (Ping timeout: 268 seconds)
[22:57:54] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 268 seconds)
[22:58:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:59:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:03:09] <glats> perfect
[23:03:10] <glats> thank you
[23:09:52] *** Joins: jla (~jordi@64.225.79.195)
[23:12:10] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[23:13:23] *** justache is now known as justUnited
[23:15:23] *** Joins: volt_ (~volt@67.197.6.215)
[23:16:24] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[23:16:46] <braxas> fizzie: thanks, I think that answers my question very well
[23:18:13] *** Quits: jla (~jordi@64.225.79.195) (Read error: Connection reset by peer)
[23:18:14] *** Quits: volt (~volt@172.58.158.192) (Ping timeout: 268 seconds)
[23:20:43] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:27:03] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[23:29:10] *** Joins: mrig (~mrig@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr)
[23:31:49] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[23:32:05] *** Quits: mrig (~mrig@amarseille-658-1-164-72.w86-198.abo.wanadoo.fr) (Changing host)
[23:32:05] *** Joins: mrig (~mrig@user/mrig)
[23:33:39] *** Quits: volt_ (~volt@67.197.6.215) (Ping timeout: 268 seconds)
[23:45:05] *** Joins: arcatech_ (~arcatech@user/arcatech)
[23:46:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:46:21] *** Joins: volt (~volt@67.197.6.215)
[23:46:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:49:04] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 268 seconds)
[23:54:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:58:38] *** Quits: jakekelly (~jakekelly@2a02:c7e:22a:5900:2cbf:1ca0:fd2a:d0bc) (Quit: Client closed)
