[00:00:01] <Botje> that is exactly it.
[00:00:40] <mst> revhippie: literally just that
[00:00:40] <daemon> eval: sub blah { return "do not do this its terrible" }; my $name = 'blah'; &{$name}
[00:00:41] <perlbot> daemon: do not do this its terrible
[00:00:59] <mst> revhippie: https://shadow.cat/blog/matt-s-trout/madness-with-methods/
[00:00:59] <Paperbot> Link title(s): [ Madness With Methods ]
[00:02:28] <Botje> if it makes you feel less diry: sub UNIVERSAL::send_msg { my ($self, $msg, @rest) = @_; return $self->$msg(@rest) }
[00:03:30] <revhippie>  /facepalm -- I couldn't get it to work from the command-line because "perl ... -E '... $y = 'bar'; $x->$y' # single-quotes abound!
[00:03:31] <mst> oh, yes, UNIVERSAL to feel *less* dirty
[00:03:33] * mst cries
[00:03:45] <mst> revhippie: $y = q{bar};
[00:03:56] <Botje> if Ruby can have Object#send ...
[00:03:57] <mst> revhippie: also for testing OO stuff in one-liners see p3rl.org/new
[00:04:06] <mst> Botje: we can avoid needing it with ->$method
[00:04:09] <revhippie> mst: or even "bar", but arggh.  I like new, that's really handy.
[00:04:18] <mst> revhippie: I got bored of typing :D
[00:04:25] <Botje> mst: oh yes, I appreciate that perl calls it that.
[00:04:36] <mst> I'd just rather not touch UNIVERSAL
[00:04:52] <mst> except occasionally doing 'local *UNIVERSAL::TO_JSON = ...;'
[00:04:58] <mst> because that's completely sane, honest
[00:09:37] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:09:53] * El_Che wonders why people like to make mst cry
[00:10:36] <revhippie> Perl Stars' Tears?
[00:10:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:12:09] <mst> El_Che: because it's funny? :D
[00:12:14] * mst -> pub
[00:13:57] <El_Che> mst: you need to replentish the lost liquid
[00:14:17] <El_Che> *replenish :)
[00:16:44] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.29 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.29
[00:16:44] * GumbyPAN CPAN Upload: GFX-Enhancer-0.1.20 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/GFX-Enhancer-0.1.20
[00:21:56] *** Joins: lucasb (uid333435@id-333435.hampstead.irccloud.com)
[00:24:14] *** Joins: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1)
[00:29:04] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:30:13] <gordonfish> Re: <daemon> eval: sub blah { return "do not do this its terrible" }; my $name = 'blah'; &{$name}
[00:30:15] <gordonfish> sweval: sub blah { return "not as terrible" }; my $name = 'blah'; __PACKAGE__->can($name)->();
[00:30:16] <perlbot> gordonfish: not as terrible
[00:30:36] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[00:38:51] *** Quits: proller (~p@2a02:6b8:b081:8821::1:19) (Ping timeout: 245 seconds)
[00:41:40] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 258 seconds)
[00:41:47] * GumbyPAN CPAN Upload: YAML-PP-0.027_002 by TINITA https://metacpan.org/release/TINITA/YAML-PP-0.027_002
[00:52:29] *** Joins: proller (~p@80.240.216.69)
[00:59:16] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 245 seconds)
[01:01:49] * GumbyPAN CPAN Upload: Open-This-0.000026 by OALDERS https://metacpan.org/release/OALDERS/Open-This-0.000026
[01:05:21] *** Joins: humky (~humky@user/humky)
[01:11:54] *** Quits: Discipulus_ (~discip@194.242.223.24) (Ping timeout: 265 seconds)
[01:12:23] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[01:17:07] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Client Quit)
[01:23:47] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Ping timeout: 264 seconds)
[01:29:10] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:31:08] *** Joins: jess (~jess@libera/staff/jess)
[01:44:12] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[01:49:37] *** Joins: holyghost (~shameen@2a02:a03f:64c8:9200:8105:b986:e088:50cc)
[02:08:01] *** Quits: Martchus_ (~martchus@2a01:c23:c129:eb00:d250:99ff:fe49:3cce) (Ping timeout: 245 seconds)
[02:08:42] *** Joins: Martchus (~martchus@dynamic-095-117-063-144.95.117.pool.telefonica.de)
[02:11:20] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:11:57] * GumbyPAN CPAN Upload: GFX-Enhancer-0.1.21 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/GFX-Enhancer-0.1.21
[02:13:19] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[02:14:47] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 264 seconds)
[02:17:19] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[02:19:32] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[02:20:51] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[02:21:23] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 264 seconds)
[02:22:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[02:25:43] *** Quits: subie (~subie@2601:4c0:4080:bc0:6cfb:9125:6b42:8b9c) (Quit: Leaving)
[02:27:37] *** Joins: subie (~subie@2601:4c0:4080:bc0:6444:2b37:d148:7a10)
[02:27:40] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (Ping timeout: 268 seconds)
[02:32:48] *** Quits: pizdets_ (~pizdets@183.182.114.223) (Ping timeout: 250 seconds)
[02:34:13] *** Joins: pizdets (~pizdets@183.182.111.121)
[02:35:26] *** Joins: semeion (~semeion@user/semeion)
[02:39:23] *** Quits: Su-Shee (~Susanne@p4ffc720d.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[02:40:38] *** Joins: Su-Shee (~Susanne@p50894fbd.dip0.t-ipconnect.de)
[02:43:31] *** Quits: jabberwok (~wlindley@75.105.20.104) (Read error: Connection reset by peer)
[02:47:04] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[02:51:37] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Ping timeout: 265 seconds)
[02:53:49] *** Joins: whynot (~whynot@46.96.154.38)
[02:57:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[02:57:27] *** Joins: LeoNerd (~leo@genoa.dictatorshipcake.co.uk)
[03:00:23] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 264 seconds)
[03:00:46] *** Joins: proller (~p@2a02:6b8:b081:6414::1:17)
[03:01:32] *** Joins: b0nn (~shane@user/b0nn)
[03:06:44] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:09:59] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[03:11:31] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[03:12:01] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[03:15:49] *** Joins: rundown (~eb0t@90.199.166.206)
[03:19:35] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:60fb:a62c:6c4e:adb0) (Ping timeout: 264 seconds)
[03:19:37] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:24:06] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Client Quit)
[03:25:35] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[03:26:45] *** Joins: krismatrix (~krismatri@38.80.149.51)
[03:27:05] * GumbyPAN CPAN Upload: GFX-Enhancer-0.1.22 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/GFX-Enhancer-0.1.22
[03:27:46] <mst> El_Che: that's what bourbon's for
[03:27:59] <mst> gordonfish: https://shadow.cat/blog/matt-s-trout/madness-with-methods/
[03:27:59] <Paperbot> Link title(s): [ Madness With Methods ]
[03:30:16] <krismatrix> so...an area in development that I struggle with is understanding API documentation. Whether it is following along on twilio, gmail, drive, etc. I have so far managed to survive with the use of modules, but if I wanted to implement something on my own, is there perhaps a set of core concepts that I should really try to understand? 
[03:35:52] <mst> i read the http RFCs then a bunch of articles about REST APIs then accepted nothing is ever really quite like that and read their docs and guessed as I went along
[03:36:03] <mst> I'm not sure if that's a useful answer, but it's the truth about how I learned
[03:37:56] <krismatrix> *shrugs*
[03:38:01] <Kobaz> is there a way to force the caller to return?
[03:38:18] <mst> Kobaz: vaguecat
[03:38:24] <Kobaz> heh sorry
[03:38:30] <Kobaz> oh i could do a Carp::croak
[03:38:53] <mst> Kobaz: p3rl.org/Return::MultiLevel is sometimes useful too
[03:39:06] <b0nn> I have a line: if ($query =~ s/^<([^>]+)>\s*//) { $nick = $1 }// I just want to be sure that nick is being assigned whatever is captured in that regex on query, and nothing is actually happening to $query
[03:39:12] <mst> krismatrix: sometimes all I can say is "this is how I learned it"
[03:39:20] <Kobaz> holy shit that's amazing
[03:39:27] <Kobaz> https://metacpan.org/pod/Return::MultiLevel indeed
[03:39:28] <Paperbot> Link title(s): [ Return::MultiLevel - return across multiple call levels - metacpan.org ]
[03:39:32] <mst> Botje: uh, but s/// is intentionally modifying stuff
[03:39:35] <mst> bah
[03:39:42] <mst> b0nn: uh, but s/// is intentionally modifying stuff
[03:39:49] <mst> b0nn: what are you trying to achieve?
[03:39:52] <b0nn> mst: yeah, that's what worried me
[03:40:13] <b0nn> I'm porting some perl to Go, and want to understand what's happening in that set of lines
[03:40:13] <mst> b0nn: so ... what are you actually trying to do?
[03:40:21] <mst> b0nn: you're deliberately modifying $query there
[03:40:29] <b0nn> no.. the code is..
[03:40:40] <krismatrix> it's fine. 
[03:41:11] <mst> b0nn: looks to me like it's parsing an IRC log and stripping the nick off the front, leaving $query containing the actual message
[03:41:36] <b0nn> https://github.com/globau/logbot/blob/master/lib/LogBot/CLI/Delete.pm#L27
[03:41:37] <Paperbot> Link title(s): [ logbot/Delete.pm at master · globau/logbot · GitHub ]
[03:41:41] *** Quits: lucasb (uid333435@id-333435.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:41:52] <b0nn> mst: that's sounds like an accurate description
[03:43:08] <Kobaz> mst: why is perl so amazong
[03:43:11] <b0nn> actually that clears things up, it's deleting the nick and decorations from the query, whilst also capturing the nick
[03:43:13] <Kobaz> i always wonder that
[03:43:20] <mst> b0nn: yes, exactly
[03:44:09] <mst> b0nn: better would be to use an actual IRC line parser so you didn't need to know that
[03:44:18] <mst> b0nn: we have several, apparently the author of this didn't realise
[03:44:50] <b0nn> heh - I want the bot to run - it won't as it stands on my VPS, so am porting it to Go 
[03:45:14] <b0nn> or, rather, trying to
[03:45:26] <mst> b0nn: that's fair enough, if I wanted to use this bot, I'd probably port it to non-stupid perl, but I'd definitely port it ;)
[03:46:31] <mst> b0nn: oh, it's written by glob, it's not necessarily that bad
[03:46:46] <mst> b0nn: if you wanted to get it to run without rewriting the entire thing we could probably help
[03:46:55] <mst> note: not saying you -should-, only that we -can-
[03:47:35] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[03:48:18] <b0nn> heh, I'm going to be leaning on this channel a lot as I discover things I don't understand :)
[03:49:21] <mst> b0nn: that's fine, but understand that while I'm not going to stop you rewriting it, I -am- going to try and help you understand why perl is actually pretty cool when you use it right
[03:49:49] <mst> this is clearly an *old* bot only recently ported to event loop style perl
[03:50:18] <mst> it doesn't even use Parse::IRC let alone Mojo::IRC
[03:50:30] <b0nn> :) I gave up writing perl about 9 years ago, it was, though the first language I taught myself (about 16 years ago)
[03:50:49] <b0nn> The Go choice is because that's what I code in mostly now
[03:50:51] <mst> b0nn: you've missed out on a lot then, though I'm not going to try and convince you to come back
[03:51:27] <mst> b0nn: only that I want you to come away from this with working code in whatever language you like, and a better understanding of why 2021 perl can be cool :)
[04:01:21] <mst> Kobaz: it's designed for flexibility and honestly that's why I love it so much
[04:12:43] <Kobaz> it's designed for awesomeness, that's what it's designed for
[04:13:42] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[04:13:57] <Kobaz> what's the best way to determine if you're had a carp cluck if you're inside a SIG{__WARN__} handler
[04:14:23] <Kobaz> just check Carp::longmess() or something similar? or is there a cleaner way
[04:14:40] <mst> caller() should show which thing warn()ed
[04:15:10] <Kobaz> ah, so caller would show cluck as the first frame back?
[04:15:45] <Kobaz> trying to avoid double logging
[04:15:54] <Kobaz> since cluck already logged
[04:16:00] <mst> should do, double check that
[04:16:25] <Kobaz> (Carp, /usr/share/perl/5.28/Carp.pm, 292, IS::__ANON__)
[04:16:26] <Kobaz> yeah
[04:16:57] <mst> but sigwarn will let you redirect if you're careful
[04:17:10] <mst> so double logging shouldn't be a thing necessarily
[04:21:09] <Grinnz> Kobaz: this usually means you wanted exceptions and try/catch to propagate to exactly a certain level
[04:21:27] <Grinnz> (ref your previous question about multilevel return)
[04:21:37] <Kobaz> ah
[04:22:19] <Kobaz> well I have a warn handler that does a built in backtrace, but if i'm doing a cluck that produces a trace, i don't need my own trace to kick in
[04:22:24] <Kobaz> and my own extra logging
[04:22:30] <Kobaz> since i can just log the full return from cluck
[04:23:15] *** Quits: whynot (~whynot@46.96.154.38) (Quit: leaving)
[04:23:47] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 265 seconds)
[04:24:38] <mst> Kobaz: uh, alternative trick
[04:24:54] <mst> Kobaz: local *Carp::cluck = sub { warn $_[0] };
[04:25:00] <Kobaz> use Awesome::Logger::Module instead?
[04:25:02] <Kobaz> ah
[04:25:38] <mst> Kobaz: if you're already tracing, just nerf the extra trace stuff you didn't need ;)
[04:26:09] <Kobaz> Well here's my fix $SIG{__WARN__} = sub { dostuff();  otherstuff();  my ($cpackageName, $cfilename, $cline, $caller_subName) = caller(0);  if ($cpackageName eq 'Carp') { return logstuff($msg); }  logstuff_backtrace($msg); ... etc
[04:26:45] <mst> ayup
[04:28:04] <Kobaz> i'm gonna cluck the shit out of all my modules
[04:28:16] <Kobaz> should have been doing that since the beginning, but die() was the common thing at that time
[04:28:17] <gordonfish> mst: Thanks, it was great to read that again
[04:28:42] <Kobaz> I feel like all i do is write error handling
[04:32:16] <mst> Kobaz: I use warn for everything
[04:32:23] <Kobaz> ah
[04:32:23] <mst> Kobaz: then Devel::Confess for debugging
[04:32:27] <Kobaz> ah
[04:33:26] <mst> perl -d:Confess t/foo.t # now die is confess and warn is cluck
[04:33:34] <Kobaz> yeah
[04:33:55] <Kobaz> but i typically don't have the nice option of stopping the daemon and then starting it back up with confess
[04:34:10] <Kobaz> the show must go on, and all my goodies are in the log files
[04:34:34] <mst> oh, yeah, if it's a daemon it has a control socket
[04:35:43] <mst> so I open a unix socket to that, and then tell it to switch to full backtrace mode
[04:37:01] <mst> sometime soon I'm going to create a cpan version of that
[04:37:57] <mst> Kobaz: your daemon is async of some sort right? IO::Async, Mojo, POE, or manual?
[04:45:02] *** Joins: pucara (~i@181.93.167.217)
[04:47:14] * GumbyPAN CPAN Upload: Rex-CMDB-TOML-0.0.1 by VVELOX https://metacpan.org/release/VVELOX/Rex-CMDB-TOML-0.0.1
[04:51:44] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[04:54:03] *** Quits: waltman (waltman@2601:4a:701:4451:ec84:bf6d:e03d:a602) (Quit: leaving)
[05:02:28] *** Joins: waltman (waltman@2601:4a:701:4451:5a3d:5b31:e14c:599f)
[05:17:38] *** Joins: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net)
[05:22:35] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 264 seconds)
[05:23:11] *** Quits: proller (~p@2a02:6b8:b081:6414::1:17) (Ping timeout: 264 seconds)
[05:26:13] *** Joins: emanuele6 (~emanuele6@net-2-36-101-242.cust.vodafonedsl.it)
[05:26:13] *** Quits: emanuele6 (~emanuele6@net-2-36-101-242.cust.vodafonedsl.it) (Changing host)
[05:26:13] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[05:32:06] *** Quits: Su-Shee (~Susanne@p50894fbd.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:33:41] *** Joins: Su-Shee (~Susanne@p50894337.dip0.t-ipconnect.de)
[06:00:06] *** Quits: willthechill (~willthech@99-156-88-67.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[06:09:37] *** Quits: Paladin (~paladin@S0106c0eae42a785d.vc.shawcable.net) (Quit: Lost terminal)
[06:12:07] *** Joins: Paladin (~paladin@S0106c0eae42a785d.vc.shawcable.net)
[06:15:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:16:35] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 264 seconds)
[06:17:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:17:59] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:3569:504d:9bbf:bfc:bc89)
[06:18:14] *** Quits: bmeneg (~bmeneg@2001:1284:f016:975e:713b:8772:bad6:3e5d) (Ping timeout: 258 seconds)
[06:35:25] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[06:49:54] *** Joins: splatt990 (4b25e29db1@198.108.77.17)
[06:55:31] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 245 seconds)
[07:07:18] *** Quits: FastJack_ (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 260 seconds)
[07:08:06] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[07:08:17] *** Joins: semeion (~semeion@user/semeion)
[07:08:34] *** Joins: Martchus_ (~martchus@dynamic-095-118-010-027.95.118.pool.telefonica.de)
[07:10:03] *** Quits: Martchus (~martchus@dynamic-095-117-063-144.95.117.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:16:53] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 258 seconds)
[07:25:30] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[07:27:07] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:44f3:1bf7:3293:3b70)
[07:29:39] *** Joins: semeion (~semeion@user/semeion)
[07:40:27] *** Joins: Linux77_ (~Linux7_7@186.233.183.48)
[07:41:40] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[07:44:06] *** Quits: Linux77 (~Linux7_7@186.233.182.226) (Ping timeout: 258 seconds)
[07:56:35] * GumbyPAN CPAN Upload: App-sslmaker-0.15 by JHTHORSEN https://metacpan.org/release/JHTHORSEN/App-sslmaker-0.15
[08:06:37] * GumbyPAN CPAN Upload: App-proxyforurl-0.11 by JHTHORSEN https://metacpan.org/release/JHTHORSEN/App-proxyforurl-0.11
[08:24:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[08:33:06] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It)
[08:35:05] *** Quits: japh (~scp1@user/japh) (Ping timeout: 258 seconds)
[08:36:46] *** Joins: japh (~scp1@user/japh)
[08:41:21] *** Quits: fling (~fling@user/fling) (Ping timeout: 245 seconds)
[08:43:08] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 258 seconds)
[08:52:35] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:44f3:1bf7:3293:3b70) (Ping timeout: 264 seconds)
[09:04:24] *** Joins: andinus (andinus@tilde.institute)
[09:10:10] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[09:29:51] *** Joins: seoul_man (~meh@097-080-088-148.res.spectrum.com)
[09:29:58] *** Quits: EGD (~egd@user/egd) ()
[09:34:56] *** Quits: pucara (~i@181.93.167.217) (Quit: Lost terminal)
[09:40:22] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[09:42:48] *** Joins: furrymcgee (~devuan@cgn-89-1-210-103.nc.de)
[09:43:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:51:14] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[09:52:33] *** Joins: Discipulus_ (~discip@194.242.223.24)
[09:58:07] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[10:00:58] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:10:53] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:21:52] * GumbyPAN CPAN Upload: Proc-Background-1.29_01 by NERDVANA https://metacpan.org/release/NERDVANA/Proc-Background-1.29_01
[10:24:05] *** Joins: Manderson (~manderson@45.40.81.122)
[10:24:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:24:55] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[10:25:35] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 264 seconds)
[10:25:42] *** Joins: vanfanel640 (~vanfanel6@user/vanfanel64)
[10:26:51] *** Joins: blo_ (~blo@blo.ski)
[10:26:51] *** Joins: tankf33der3 (mpech@envs.net)
[10:27:22] *** Joins: tbcr (~tbcr@107.13.189.161)
[10:27:52] *** Joins: Te[u]K` (~teuk@2001:41d0:2:eb60::1)
[10:28:06] *** Joins: keir_ (~keir@user/keir)
[10:28:33] *** Quits: Manderson (~manderson@45.40.81.122) (Ping timeout: 258 seconds)
[10:28:49] *** Joins: Exagone313 (exa@irc.moe)
[10:30:04] *** Quits: randir (~randir@95-25-159-246.broadband.corbina.ru) (Remote host closed the connection)
[10:30:04] *** Joins: sjn_ (sjn@sprocket.nvg.ntnu.no)
[10:30:05] *** Joins: f3ew1 (~f3ew@2a01:4f9:4b:3b57::2)
[10:30:16] *** Joins: Walex2 (~Walex@SMTP.sabi.co.UK)
[10:30:17] *** Joins: shal (william@208.79.82.66)
[10:30:20] *** Joins: przemoc86 (~przemoc@89-72-24-4.dynamic.chello.pl)
[10:38:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:39:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:39:50] *** Quits: keir (~keir@user/keir) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Exa (exa@irc.moe) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Te[u]K (~teuk@2001:41d0:2:eb60::1) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: vanfanel64 (~vanfanel6@user/vanfanel64) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: przemoc (~przemoc@user/przemoc) (Ping timeout: 260 seconds)
[10:39:50] *** Exagone313 is now known as Exa
[10:39:50] *** Quits: Walex (~Walex@SMTP.sabi.co.UK) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: sjn (sjn@sprocket.nvg.ntnu.no) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: shaldannon (william@208.79.82.66) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: f3ew (~f3ew@2a01:4f9:4b:3b57::2) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: latk (~latk@2001:470:69fc:105::255) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: PonyBlocks-_- (ponyblocks@2605:6400:c847:1478::8741) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: tankf33der (mpech@envs.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: tbcr_ (~tbcr@107.13.189.161) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: fizzie (irc@selene.zem.fi) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: blo (~blo@user/blo) (Ping timeout: 260 seconds)
[10:39:51] *** tankf33der3 is now known as tankf33der
[10:40:00] *** vanfanel640 is now known as vanfanel64
[10:40:20] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[10:40:50] *** Joins: PonyBlocks-_- (ponyblocks@2605:6400:c847:1478::8741)
[10:41:40] *** Joins: WinterStar (~IceLight@user/icelight)
[10:41:56] *** Joins: randir (~randir@93.159.239.42)
[10:42:26] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[10:43:07] *** Joins: fizzie (irc@selene.zem.fi)
[10:47:48] *** Joins: latk (~latk@2001:470:69fc:105::255)
[10:55:02] *** Joins: art1 (~romeyke@p200300ccdf074b00209b3bf43139ffa8.dip0.t-ipconnect.de)
[10:58:44] *** Joins: Pali (~pali@user/pali)
[11:12:30] <merpaderp> I am sorry fellas, which Text::Table tiny module I was supposed to use again
[11:12:42] <merpaderp> there was one which sucked less than the others.
[11:12:55] <merpaderp> Tiny Wide or something
[11:13:03] <merpaderp> the wide chars didnt break it
[11:13:37] <merpaderp> yeah, Text::Table::TinyWide I think was the one
[11:14:25] <merpaderp> anyone knows a good command to check if ubuntu/debian has a package for particular perl module?
[11:14:38] <merpaderp> apt search is class A garbage in that regard or I 'unno how to use it
[11:14:43] <Botje> the name is predictable.
[11:15:03] *** Joins: murrayn (~murray@user/murrayn)
[11:15:21] <Botje> Foo::Bar -> libfoo-bar-perl
[11:15:34] <merpaderp> yea, just checked, it has libtext-table-perl
[11:15:43] <merpaderp> no tiny or wide.
[11:15:54] <Botje> and you can use the filename search in packages.ubuntu.org (or packages.debian.org)
[11:16:03] <Botje> but yeah, OS packages tend to be a crapshoot.
[11:16:08] <Botje> use cpanm be happy
[11:16:32] <merpaderp> yea, I am all for cpanm, but this time I want them to be avail for multiple users on system
[11:17:53] <Botje> doesn't (checks manual) cpanm -S do that?
[11:20:10] <merpaderp> looks like it, lemme test.
[11:21:43] <merpaderp> forgot notest, will take a while
[11:22:35] <merpaderp> It's in /usr/local/share/perl/5.30.0/Text/Table/TinyWide.pm
[11:22:46] <merpaderp> well I'll be double dogged strictly typed - that worked.
[11:22:49] <Botje> and is that in the default @INC?
[11:23:23] <merpaderp> sure it is
[11:23:58] *** Quits: Pali (~pali@user/pali) (Ping timeout: 260 seconds)
[11:26:59] * GumbyPAN CPAN Upload: Date-Julian-Simple-0.13 by MANWAR https://metacpan.org/release/MANWAR/Date-Julian-Simple-0.13
[11:31:39] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[11:34:29] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 258 seconds)
[12:07:03] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:07:04] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 258 seconds)
[12:08:57] *** Joins: WinterStar (~IceLight@user/icelight)
[12:15:46] *** Quits: Su-Shee (~Susanne@p50894337.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[12:17:17] *** Joins: Su-Shee (~Susanne@p4ffc79b1.dip0.t-ipconnect.de)
[12:32:06] * GumbyPAN CPAN Upload: App-Greple-8.48 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-8.48
[12:35:14] <daemon> sweval: use use Regexp::Common qw /URI/; if ('http://www.test.com' =~ /$RE{URI}{HTTP}/) { 3 }
[12:35:16] <perlbot> daemon: ERROR: syntax error at (IRC) line 1, near "Regexp::Common qw /URI/" Global symbol "%RE" requires explicit package name (did you forget to declare "my %RE"?) at (IRC) line 1. Execution of (IRC) aborted due to compilation errors. 
[12:35:19] <Paperbot> Link title(s): [ Home - Test.com ]
[12:35:20] <daemon> sweval: use Regexp::Common qw /URI/; if ('http://www.test.com' =~ /$RE{URI}{HTTP}/) { 3 }
[12:35:21] <Paperbot> Link title(s): [ Home - Test.com ]
[12:35:22] <perlbot> daemon: 3
[12:36:41] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Excess Flood)
[12:38:13] <daemon> sweval: use Regexp::Common qw /URI/; if ('http://www.test.com/blah-review/longpath/30/with/stuff' =~ /$RE{URI}{HTTP}/) { 3 }
[12:38:14] <perlbot> daemon: 3
[12:38:22] <daemon> sweval: use Regexp::Common qw /URI/; if ('https://www.test.com/blah-review/longpath/30/with/stuff' =~ /$RE{URI}{HTTP}/) { 3 }
[12:38:23] <perlbot> daemon: No output.
[12:38:50] <daemon> https is not validated by regexp common uri?
[12:41:19] <daemon> sweval: use Regexp::Common qw /URI/; if ('https://www.test.com/blah-review/longpath/30/with/stuff' =~ /$RE{URI}{HTTPS}/) { 3 }
[12:41:20] <perlbot> daemon: ERROR: Can't create unknown regex: $RE{URI}{HTTPS} at (IRC) line 1. 
[12:44:33] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:45:08] <daemon> ah got it
[12:45:34] <daemon> sweval: use Regexp::Common qw /URI/; if ('https://www.test.com/blah-review/longpath/30/with/stuff' =~ /$RE{URI}{HTTP}{-scheme => qr<https?>}{-keep}/) { 3 }
[12:45:35] <perlbot> daemon: 3
[12:45:38] <daemon> weird syntax
[12:45:55] <daemon> surely {URI}{HTTPS} should be a thing
[13:01:24] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[13:03:07] *** Joins: Guest2981 (~Guest29@p5b2f2453.dip0.t-ipconnect.de)
[13:07:11] * GumbyPAN CPAN Upload: Search-Elasticsearch-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-7.715
[13:07:11] * GumbyPAN CPAN Upload: Search-Elasticsearch-Async-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Async-7.715
[13:07:14] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-6_0-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-6_0-7.715
[13:09:03] *** Quits: Guest2981 (~Guest29@p5b2f2453.dip0.t-ipconnect.de) (Quit: Client closed)
[13:11:35] *** Joins: fling (~fling@user/fling)
[13:12:11] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-6_0-Async-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-6_0-Async-7.715
[13:12:12] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-7_0-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-7_0-7.715
[13:12:15] * GumbyPAN CPAN Upload: Search-Elasticsearch-Client-7_0-Async-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Client-7_0-Async-7.715
[13:12:22] * GumbyPAN CPAN Upload: Search-Elasticsearch-Cxn-NetCurl-7.715 by EZIMUEL https://metacpan.org/release/EZIMUEL/Search-Elasticsearch-Cxn-NetCurl-7.715
[13:12:44] *** Joins: Guest2910 (~Guest29@p5b2f2453.dip0.t-ipconnect.de)
[13:14:49] <b0nn> looking at https://github.com/globau/logbot/blob/master/logbot-irc#L39 I cannot find where connection is defined/instantiated, nor can I find where getline is defined
[13:14:50] <Paperbot> Link title(s): [ logbot/logbot-irc at master · globau/logbot · GitHub ]
[13:15:09] <b0nn> How do I find where those are defined?
[13:15:39] <tm604> it's declared on https://github.com/globau/logbot/blob/master/logbot-irc#L33 and defined in https://github.com/globau/logbot/blob/master/logbot-irc#L82
[13:15:40] <Paperbot> Link title(s): [ logbot/logbot-irc at master · globau/logbot · GitHub ] [ logbot/logbot-irc at master · globau/logbot · GitHub ]
[13:16:58] <b0nn> tm604: thanks, just found them too :)
[13:17:14] <b0nn> How did you know where to look (I found it purely by chance)
[13:22:45] <tm604> `my $var` declares, `$var = ` defines =)
[13:23:17] <b0nn> ok, how did you know it was going to be in the same file
[13:23:26] <b0nn> I guess because the my was local to this file?
[13:26:11] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 264 seconds)
[13:28:49] <tm604> Yes, usually it'll be in the same file or at least imported from another module - e.g. `use Some::Module "$connection"`
[13:29:24] <tm604> also `->getline` is just a method, see https://metacpan.org/pod/IO::Handle#$io-%3Egetline
[13:29:25] <Paperbot> Link title(s): [ IO::Handle - supply object methods for I/O handles - metacpan.org ]
[13:30:00] <b0nn> Yeah, want to see what it's doing
[13:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:30:19] <b0nn> Thanks for the help thus far, it's geting my head back into the game :)
[13:31:01] *** Joins: csrf (~csrf@user/csrf)
[13:32:45] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:33:19] *** Joins: R2robot (~R2robot@user/r2robot)
[13:38:20] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[13:40:57] *** Quits: Guest2910 (~Guest29@p5b2f2453.dip0.t-ipconnect.de) (Quit: Client closed)
[13:41:44] *** Joins: Guest297 (~Guest29@p5b2f2453.dip0.t-ipconnect.de)
[13:49:34] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[13:49:51] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[13:50:44] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:52:27] *** Linux77_ is now known as Linux77
[14:01:17] * GumbyPAN CPAN Upload: Proc-Background-1.29_02 by NERDVANA https://metacpan.org/release/NERDVANA/Proc-Background-1.29_02
[14:10:36] *** Quits: Guest297 (~Guest29@p5b2f2453.dip0.t-ipconnect.de) (Quit: Client closed)
[14:18:49] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[14:21:18] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[14:24:02] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[14:27:40] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[14:36:39] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[15:09:09] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[15:17:06] <daemon> is there handy little tools for removing an element from an arrayref by its value
[15:17:12] <daemon> rather than a for loop to find out where it is
[15:18:00] <alh> You could grep it out? @list = grep { $_ ne 'foo' } @list
[15:18:21] <daemon> ah nice idea, cheers alh 
[15:18:29] <alh> o/
[15:18:41] <daemon> alh++ # have some karma :)
[15:19:00] <rindolf> alh++
[15:24:25] *** Joins: off^ (~off@68.101.53.15)
[15:35:33] <LeoNerd> List::UtilsBy::extract_by { FUNC } @array;
[15:35:52] <LeoNerd> It returns the extracted value, much like grep does, but also will splice() the element(s) out of the array
[15:36:15] <LeoNerd> The advantage it has over  @list = grep ... @list  is that it won't strengthen weakrefs in the array
[15:36:35] *** Parts: tankf33der (mpech@envs.net) (the lounge - https://webirc.envs.net)
[15:36:43] <alh> Possibly more efficient too?
[15:37:22] <LeoNerd> Slightly
[15:37:41] <LeoNerd> If you're extracting lots of elements at once, the current implementation has O(n²) runtime in that case
[15:37:47] <LeoNerd> But if you're just removing one it should be fine
[15:41:39] *** Quits: Discipulus_ (~discip@194.242.223.24) (Read error: Connection reset by peer)
[15:53:11] *** Quits: off^ (~off@68.101.53.15) (Ping timeout: 264 seconds)
[15:56:13] *** Joins: gareppa (~gareppa@user/gareppa)
[15:56:48] *** Joins: proller (~p@2a02:6b8:0:40c:9457:8972:24f2:ff8b)
[15:57:40] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:02:48] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[16:06:08] *** Joins: zenfold (~zenfold@user/zenfold)
[16:09:25] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[16:13:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:21:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[16:21:46] *** Quits: kolcon (~kolcon@v.kolouch.org) (Ping timeout: 245 seconds)
[16:22:47] *** Joins: krismatrix (~krismatri@38.80.149.51)
[16:25:19] *** Joins: kolcon (~kolcon@v.kolouch.org)
[16:26:38] *** Quits: keir_ (~keir@user/keir) (Quit: I've gone)
[16:26:57] *** Joins: keir (~keir@user/keir)
[16:34:19] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[16:38:22] *** bmeneg_ is now known as bmeneg
[16:43:44] *** Quits: andinus (andinus@tilde.institute) (Remote host closed the connection)
[16:44:02] <daemon> sweval: use List::UtilsBy; my $url = 'https://www.test.com/external-review/referral-file-upload/5'; my @z; push @z,$url; extract_by { $_ eq $url } @z
[16:44:04] <perlbot> daemon: Use of uninitialized value $_ in string eq at (IRC) line 1. ERROR: Can't call method "extract_by" without a package or object reference at (IRC) line 1. 
[16:44:22] <daemon> sweval: use List::UtilsBy qw(extract_by); my $url = 'https://www.test.com/external-review/referral-file-upload/5'; my @z; push @z,$url; extract_by { $_ eq $url } @z
[16:44:23] <perlbot> daemon: 1
[16:44:29] <daemon> sweval: use List::UtilsBy qw(extract_by); my $url = 'https://www.test.com/external-review/referral-file-upload/5'; my @z; push @z,$url; [ extract_by { $_ eq $url } @z ]
[16:44:31] <perlbot> daemon: ["https://www.test.com/external-review/referral-file-upload/5"]
[16:44:50] <daemon> LeoNerd, alh weirdly my script is doing this as well with both grep and extract_by
[16:44:51] <daemon> any idea?
[16:46:33] <mst> daemon: because you forgot to import the fucking subroutine?
[16:46:48] <daemon> I fucking did not
[16:46:50] * mst sees no problem otherwise
[16:46:54] <alh> Looks like importing List::UtilsBy doesn't give you extract_by by default
[16:47:01] <alh> So you need 'use List::UtilsBy qw(extract_by);'
[16:47:07] <daemon> you guys are reading like 2 lines down from that right >.>
[16:47:10] <mst> right, the last example is behaving correctly
[16:47:21] <daemon> its meant to remove the entry
[16:47:23] <alh> Ha, sorry :)
[16:47:39] <daemon> sweval: use List::UtilsBy qw(extract_by); my $url = 'https://www.test.com/external-review/referral-file-upload/5'; my @z; push @z,$url; extract_by { $_ eq $url } @z; \@z
[16:47:40] <perlbot> daemon: []
[16:47:43] <daemon> ah it did
[16:47:53] <daemon> nm :)
[16:48:01] <mst> told you so
[16:49:52] <LeoNerd> sweval: no feature 'indirect'; use List::UtilsBy; my $url = 'https://www.test.com/external-review/referral-file-upload/5'; my @z; push @z,$url; extract_by { $_ eq $url } @z
[16:49:54] <perlbot> LeoNerd: Array found where operator expected at (IRC) line 1, near "} @z" 	(Missing operator before  @z?) ERROR: syntax error at (IRC) line 1, near "extract_by { " 
[16:50:10] <LeoNerd> ^-- really hoping we'll get  `no feature 'indirect'`  into the default feature bundle soon
[16:50:43] <LeoNerd> Well,.. not the /default/ default, but the latest numbered version one
[16:52:21] <krismatrix> with regards to references...what is the difference between \@array and [@array] ?
[16:53:19] <LeoNerd> \@array  refers to the existing @array variable,  [@array] makes a new fresh array, and initialises it with a copy of the _current_ values stored in @array
[16:54:05] <krismatrix> hmm..wow. hmm.
[16:54:12] <LeoNerd> Again really really picture these things as boxes. I honestly have in my head a mental image of a cardboard box with "stuff in it"
[16:54:20] <krismatrix> yeah
[16:54:23] <revhippie> eval: @foo = qw(a b c); $x = \@foo; $y = [@foo]; $x->[0] = 'x'; $y->[1] = 'y'; [ @foo ]
[16:54:25] <perlbot> revhippie: ["x","b","c"]
[16:54:28] <LeoNerd> \@array is another name for -the same box-, whereas  [things]  makes a new box and puts a new copy of some existing stuff into it
[16:55:02] <LeoNerd> If you simply look into the boxes they currently look the same.. the difference all comes in what happens if you modify what's in the box.. adding mre things or changing an item
[16:55:35] <LeoNerd> If you modify via the \@array reference, you are modifying the referred-to array. If you modify via the  [ @array ]  reference you're only modifying the copy of it, not the original source the copy was made from
[16:56:29] <krismatrix> ok...so why would I want to do what revhippie is showing where i do my $y = [@foo]; why not just do my @y = @foo; ?
[16:56:39] <LeoNerd> This ability to let others modify a variable by passing a reference to it, by the way, is a really key ability that Perl has and shares with languages like C,... and is missing in things like Python and Java
[16:57:06] <LeoNerd> In Python so many times I've ended up having to store values in a tiny one-element array, so that I can pass that array around to someone else to let them modify it. There is no such thing as a variable reference in Python
[16:57:09] <revhippie> krismatrix: because i wanted an array reference and not an array.
[16:57:15] <LeoNerd> Whereas C and Perl permit this just fine
[16:57:36] <Altreus> a'ernoon
[16:57:48] <krismatrix> I have noticed that perl offers great power but also great responsibility.
[16:58:24] <LeoNerd> Mhmmm.. I often like to think of Perl like a CNC milling machine
[16:58:35] <LeoNerd> If you take the time to learn and study it, you can do a lot of really cool fancy things with it
[16:58:50] <LeoNerd> But when you first approach it, it looks big and scary and confusing and likely to take your fingers off
[16:59:03] <choroba> What kind of machine is Python, then?
[16:59:25] <LeoNerd> I usually call Python "safety scissors" ;)
[16:59:28] <krismatrix> well...i wouldn't say that I am scared exactly. More like, i approach a stage where I think I udnerstand something well, only to realize...i didn't understand it at all.
[16:59:35] <LeoNerd> It has all the sharp edges rounded off so you can't hurt yourself
[16:59:46] <LeoNerd> Well, apart from a few that still remain
[16:59:54] <choroba> :D
[17:01:52] <LeoNerd> The one about function param defaults being a huge one
[17:02:37] <LeoNerd> Python's  def fn(x = []): x,push(123); return x     does not really do the same thing that Perl's   sub fn($x = []) { push @$x, 123; return $x }   does
[17:02:42] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[17:02:43] <krismatrix> I was reviewing DS and algorithms this week, and I wrote them in perl...and I can appreciate that perl makes them feel a lot more complicated.
[17:03:02] <Botje> i .. think you're doing it wrong.
[17:03:03] <mst> krismatrix: realising there's 10x as much to learn as you thought there was is a normal experience in programming, and generally means you just levelled up
[17:03:09] <LeoNerd> In the perl one, that default assignment of  $x = []  happens -every time- the function is called, meaning you get a brand new arrayref every time, so every call to it returns an arrayref of exactly one item inside it
[17:03:27] <mst> krismatrix: also most of the problems with your data structure code were nothing to do with perl
[17:03:34] <LeoNerd> In the python one though, while it looks the same, all the calls infact share the -same- array, meaning it grows every time... each time you call it, the result gets longer and longer
[17:04:31] <krismatrix> mst: I didn't say it was a problem with perl (as in the language), but some of it was problem with my understanding of what perl does and therefore creating incorrect implementation.
[17:04:45] <krismatrix> There were other problems too..no doubt.
[17:05:02] *** Joins: semeion (~semeion@user/semeion)
[17:05:12] <krismatrix> Botje: were you telling me I was doing something wrong?
[17:05:28] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:05:52] <mst> right, but a lot of the problems were because you were assuming things were more complicated than they were and therefore writing logic errors that would've broken in any langauge
[17:06:03] <mst> maybe it wasn't the right exercise for right now
[17:06:07] <Adura> Just bang on it till it works.
[17:07:00] <krismatrix> that's my motto.
[17:07:09] * mst fetches the BIG crowbar
[17:07:10] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[17:08:26] <krismatrix> I mean..the exercise was useful...I had done references before...but very minimally. The effort to do DS and algos forced me to make my own objects and use referecnes. This is more than I think I have ever used them from the ground up.
[17:08:55] <krismatrix> I am not going to claim I fully get it. But progress ....   -_-
[17:10:17] <choroba> LeoNerd: is there a way how to initialize the parameter with a fresh new list() every time without implementing it in the body of the function?
[17:10:28] <LeoNerd> In python? I've no idea..
[17:13:35] * Altreus fetches the HEV suit
[17:13:56] <LeoNerd> I've been enjoying the PRAWN suit this week
[17:14:08] <krismatrix> PRAWN suit?
[17:14:13] <LeoNerd> Subnautica
[17:14:29] <mst> krismatrix: he's just being shellfish
[17:14:45] <LeoNerd> I forget what it stands for. It's one of those silly backronyms made up just to justify the letters
[17:15:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:16:58] <LeoNerd> "Pressure Reactive Armored Waterproof Nano Suit" -- https://subnautica.fandom.com/wiki/Prawn_Suit_(Subnautica)
[17:16:58] <Paperbot> Link title(s): [ Prawn Suit (Subnautica) | Subnautica Wiki | Fandom ]
[17:17:44] <krismatrix> is this some videogame?
[17:17:44] <LeoNerd> The PDA voice in this game has some of the funniest deadpan sarcasm I've ever seen in a game
[17:17:47] <LeoNerd> Yes
[17:17:56] <krismatrix> ah ok. i follow.
[17:18:17] <Altreus> there's a word she says weirdly
[17:18:29] <Altreus> and it bugs me every time but I forgot which one it is
[17:19:10] <LeoNerd> Oh the voice is synthetic so there's lots of weird bits
[17:19:38] <LeoNerd> You need to run the game with captions on so you can read the text as well as listen to the voice, otherwise you end up very confused
[17:20:30] <Altreus> yeah but there's a specific word where she puts the emphasis on the wrong syllable
[17:20:36] <Altreus> all the rest is fine
[17:21:03] <krismatrix> speaking of games...does anybody here work on a game engines..like godot?
[17:21:03] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[17:22:30] <LeoNerd> One word?? The emphasis is wrong on about half the words
[17:22:36] <LeoNerd> "DAY-ta bank"
[17:22:48] <LeoNerd> It's part of the charm of it, I think
[17:22:55] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[17:22:59] <LeoNerd> SN:BZ has a new voice but it has its own quirks in its own way
[17:23:16] <Adura> The one in that reminds me of calling my ISP
[17:24:13] <Altreus> wait how do /you/ pronounce data?
[17:24:16] <Altreus> da-TAH?
[17:24:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:30:53] <LeoNerd> Eh, it's more that the emphasis is too much. It's really "DAAAYY (pause) da bank"
[17:34:51] <choroba> https://www.merriam-webster.com/dictionary/data shows 3 ways
[17:34:51] <Paperbot> Link title(s): [ Data | Definition of Data by Merriam-Webster ]
[17:35:17] <choroba> None of them British, I guess
[17:37:23] <Altreus> seems like dayta, datta, darta
[17:42:54] <Adura> Those who watched TNG and those who didn't.
[17:44:09] <keir> Adura: wow you've just made me realise the pronunciation of data in TNG is very unamerican
[17:46:23] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[17:52:04] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (Ping timeout: 258 seconds)
[17:53:36] *** Joins: tag (sid271787@lymington.irccloud.com)
[17:53:54] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[17:55:32] *** Joins: tejr (~tejr@user/tejr)
[18:35:59] *** Joins: thrig (~thrig@65.113.153.50)
[18:36:12] *** Quits: tbcr (~tbcr@107.13.189.161) (Killed (NickServ (GHOST command used by tbcr_!~brclark@user/tbcr)))
[18:36:28] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[18:37:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:39:50] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[18:40:50] *** Joins: MichaelOF (~michael@p200300eb8f0f7d01bc64e91b94271e12.dip0.t-ipconnect.de)
[18:42:10] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[18:44:47] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[18:48:17] *** Joins: gast0n (~g4570n@user/gast0n)
[18:54:14] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[18:56:49] * GumbyPAN CPAN Upload: Mojo-WebSocket-PubSub-0.06 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-WebSocket-PubSub-0.06
[18:58:48] <gordonfish> keir: Not sure what you mean. I've heard plenty of people in the states say either 'dah-tah' and 'day-tah', sort of a 'too-may-toe' vs 'too-mah-toe'
[18:59:33] <mst> right, it's router that all y'all can't pronounce worth shit
[18:59:35] *** Joins: gchristensen (~grahamc@user/gchristensen)
[18:59:52] <keir> gordonfish: i'm not from "the states" so I can't comment on whats usual. just what i've heard in the media
[18:59:57] <keir> which is usually dah-tah
[18:59:58] <gchristensen> perlcritic is inviting me to use function signatures instead of prototypes, signatures are still experimental, right?
[19:00:09] <thrig> in theory
[19:00:36] <mst> they're still *marked* experimental in core because consensus to change that keeps not quite happening
[19:00:51] <mst> they're not meaningfully experimental at this point however
[19:01:37] <mst> though also, standard reminder that asking was the right thing to do since perlcritic's built-in policies are about 50% wrong so you should never turn one on without checking in first
[19:02:02] <gchristensen> cool, my perlcritic config is theme = community and severity = 3
[19:02:21] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[19:02:28] <gchristensen> so, should I use signatures or leave them off? it looks like I have very few functions using prototypes 
[19:02:41] <gordonfish> keir: dah-tah seems much more common, especially with the rise of cellular 'data' plans when smartphones and tablets became popular
[19:02:41] *** Quits: MichaelOF (~michael@p200300eb8f0f7d01bc64e91b94271e12.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[19:02:57] <gchristensen> s/functions/subs/
[19:03:09] <gordonfish> mmm subs
[19:03:50] <Altreus> no footlong subs please
[19:04:15] <mst> gchristensen: use them
[19:04:24] <mst> gchristensen: also remember prototypes are almost always an error
[19:04:36] <thrig> funk out_of_ma_face( ...
[19:04:37] <mst> gchristensen: if you have code in hydra doing that, you probably want to remove them
[19:04:38] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:04:44] <gchristensen> just did :P
[19:04:44] <gordonfish> Altreus: I never go for footlongs, 6" max
[19:04:54] <Altreus> if perlcritic is 50% wrong then not using it is just as correct as using it!
[19:06:54] <thrig> what if you indent with tabs on half the lines, and spaces on the other, as a compromise?
[19:07:14] <gchristensen> "Notably, the new subroutine signatures work with methods" oh gosh this is like a new language
[19:07:44] <thrig> and they got rid of pushing to @_ before a sub call. what is the world coming to
[19:07:57] <gordonfish> thrig: Intend to indent
[19:08:49] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[19:09:13] <mst> gchristensen: I mean, method signatures have been available on cpan for like ten years
[19:09:32] <gchristensen> you know I'm not starting from fair footing on what is recent and good :)
[19:10:39] <mst> method foo ($bar, $baz) { ... } was one cpan install away from 2011 onwards
[19:11:34] <mst> these days I'd use either core signatures or p3rl.org/Function::Parameters - or if feeling frisky, leonerd's p3rl.org/Object::Pad
[19:12:00] <Altreus> thrig: the road to hell is paved with good indentations
[19:12:01] <thrig> F'P is slow though
[19:12:26] <mst> thrig: even if you only use it for @_ unpacking ?
[19:12:31] <LeoNerd> gchristensen: I spent Monday updating some old code into using async/await + match/case + Object::Pad + signatures.. it really -does- feel like a new language
[19:12:48] <LeoNerd> And I can't even take *all* of the credit there because one of those four things wasn't even written by me ;)
[19:12:49] <Altreus> LeoNerd: maybe it is!
[19:12:54] <Altreus> What's next after 5?
[19:12:59] <LeoNerd> 7
[19:13:03] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:13:05] <Altreus> :D
[19:13:14] <LeoNerd> "version 6" seems to be a cursed version number for many languages
[19:13:17] * mst still thinks we should just call the next release v36
[19:13:21] <gordonfish> thrig: Can you give an example of where it's noticable slow? I've converted whole program that used F::P to native sigs before and never noticed a meaningful difference
[19:13:21] <LeoNerd> Scheme and PHP both skipped it too
[19:13:23] <gchristensen> nice
[19:13:27] <Altreus> perl 36
[19:13:45] <Altreus> Windows skipped everything between 3 and 7 just in case
[19:13:49] <gordonfish> I always wondered why PHP went from 5.x to 7.x
[19:14:04] <Altreus> PHP 6 got renamed to rakuwu
[19:14:05] <mst> because development of 6.x went very, very wrong
[19:14:06] <gordonfish> Altreus: Technically, Win 9x was 4.x
[19:14:17] <Altreus> but they *called* it 95
[19:14:23] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[19:14:23] <gordonfish> 2000/XP/2003 were (NT) 5.x
[19:14:46] <gordonfish> Altreus: The actual version numbers in winver (and just ver in cmd) showed 4.x
[19:15:05] * mst is still sad that early NTs were actually in many ways more stable than later ones because the display server was in user space
[19:15:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:15:15] <thrig> and also slow
[19:15:17] <mst> but the hardware of the day was lame enough they jammed it into the kernel as an optimisation
[19:15:35] <thrig> and then you learn windows printing routes through the video card
[19:16:10] <mst> thrig: can't print a resume without OpenCV after all
[19:16:23] <Altreus> I wonder what has to happen for development on PHP to be considered to have wrong
[19:16:30] <Altreus> gone wrong*
[19:16:47] <gordonfish> mst: I remember using NT 3.51 and was amazed in how much more stable it was than plain 3.1/3.11 windows
[19:18:25] <gordonfish> thrig: I remmembe the othe way around too. Has a daisy wheel printer in the 80s on an XT that could print as you typed in print screen mode (similar to a teletype)
[19:18:51] <thrig> ... and thus sooo much paper was wasted playing trek
[19:18:59] <gordonfish> s/Has/Had/ # cat licking my arm
[19:25:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:25:15] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:26:26] *** Joins: randir (~randir@95-25-159-246.broadband.corbina.ru)
[19:27:01] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:44f3:1bf7:3293:3b70)
[19:34:22] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:37:07] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 252 seconds)
[19:43:37] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[19:55:56] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 245 seconds)
[19:58:40] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[19:59:50] *** Joins: samir (~azureuser@user/samir)
[20:04:19] *** Joins: Pali (~pali@user/pali)
[20:08:43] *** Parts: art1 (~romeyke@p200300ccdf074b00209b3bf43139ffa8.dip0.t-ipconnect.de) ()
[20:11:04] <mst> daemon: omg https://cgit.freebsd.org/src/commit/?id=d410b585b6f00a26c2de7724d6576a3ea7d548b7
[20:11:04] <Paperbot> Link title(s): [ src - FreeBSD source tree ]
[20:15:49] <daemon> oooh we have completion in sh
[20:15:51] <daemon> I did not even notice
[20:16:31] *** Joins: krismatrix (~krismatri@38.80.149.51)
[20:17:01] <Altreus> this pleases me: $ chsh -s csh
[20:17:27] *** Joins: vague98 (~vague@irssi/staff/vague)
[20:17:29] <Grinnz> chsh -s csh shh
[20:17:36] <thrig> ba-doom csh
[20:17:37] <mst> daemon: admittedly, I will still almost certainly setup a toor
[20:18:18] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[20:18:39] <daemon> mst, of course just common sense, but I must admit I really do nothing with root and its configuration other than setting a mind bending password and making sure no one can login to it remotely
[20:19:19] <daemon> oh you mean to test it incase the sh modification breaks something
[20:19:19] <mst> I use it for pkg and modifying rc files and etc.
[20:19:33] <daemon> I mean it might be safest to leave it with csh and just exec into sh for testing purposes
[20:19:45] <mst> no, because having toor as a 'bourne again superuser' has been a tradition on BSDs for long enough that it's burned into my fingers
[20:20:15] <thrig> grep -c toor /etc/passwd   0
[20:20:27] <zgu> she sells csh's by the Shore C durometer?
[20:21:23] <mst> thrig: the point was people like me who can't deal with csh but also don't want a mutant root setup call the uid 0 but bash user toor
[20:21:23] *** Quits: vague (~vague@irssi/staff/vague) (Ping timeout: 256 seconds)
[20:21:45] <thrig> I just type exec ksh or something if there's csh
[20:25:03] <daemon> yeah that is how I normally do freebsd, I leave almost everything with a base shell and just 'zsh' or 'bash' or w/e after I logged in
[20:25:07] <daemon> then you know you are always going to be safe
[20:26:59] *** Joins: andinus (andinus@tilde.institute)
[20:28:08] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[20:31:19] <daxim> https://news.perlfoundation.org/post/cat-open-session-oct-21 starting in 30 min, first link in article goes to a Jitsi Meet instance (Web browser video conference)
[20:31:20] <Paperbot> Link title(s): [ CAT open session – your thoughts and ideas ]
[20:36:50] <krismatrix> I take it Carton's cpanfile and cpanfile.snapshot serve exactly the same conceptual function as package.json and package.json respectively?
[20:37:00] * GumbyPAN CPAN Upload: Test2-Harness-1.000074 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000074
[20:39:53] <mst> krismatrix: pretty much
[20:43:14] <Grinnz> cpanfile declares a list of dependencies, cpanfile.snapshot is a text database of the dependency tree with exact versions
[20:43:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[20:45:26] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[20:50:00] *** Quits: proller (~p@2a02:6b8:0:40c:9457:8972:24f2:ff8b) (Ping timeout: 260 seconds)
[20:50:32] * Grinnz getting closer and closer to "i should just write something to manipulate cpanfile.snapshots because carton is never going to get fixed"
[20:51:46] <mst> what isn't it doing that you want it to?
[20:52:11] <mst> carton is really just a way to collect json files from a local::lib tree and write out a summary of them
[20:55:52] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:56:17] *** Joins: YaoNai (~YaoNai@user/yaonai)
[20:59:04] <Grinnz> mainly my issue is that the carton interface is completely disconnected from how it rewrites the snapshot and i want that to be deterministic
[20:59:48] <Grinnz> i have to fuck around with it and manually change the snapshot sometimes and i don't know why it does some things that it does
[21:01:11] *** vague98 is now known as vague
[21:03:23] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 264 seconds)
[21:11:27] * genio remembers to add cpm to his list of things to look into. 
[21:12:28] *** Joins: krismatrix (~krismatri@38.80.149.51)
[21:13:03] <krismatrix> thank you for the response.
[21:13:34] <genio> I thought cpm kept a snapshot file as well, but I now think I was mistaken
[21:13:48] <mst> genio: cpm installs the right json files in the right places and can use a snapshot file
[21:13:57] <mst> genio: so you do 'cpm install; carton install;'
[21:14:02] <thrig> certified perl manager?
[21:14:12] <mst> carton install being a no-op except for writing the snapshot
[21:15:35] <genio> https://github.com/skaji/cpm/issues/181  ahh, I was remembering reading that
[21:15:36] <Paperbot> Link title(s): [ cpm V1 · Issue #181 · skaji/cpm · GitHub ]
[21:15:39] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[21:15:59] *** Quits: vague (~vague@irssi/staff/vague) (Quit: Client closed)
[21:16:18] *** Joins: vague (~vague@irssi/staff/vague)
[21:16:33] <Grinnz> not sure what benefit there is to reinventing the snapshot unless he has features in mind that it's missing
[21:18:10] <genio> Most likely in relation to thing B in that list?
[21:19:18] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[21:19:49] <Grinnz> i'm talking about the format
[21:19:58] <Grinnz> which cpanm doesn't even interact with
[21:20:37] <mst> I would *guess* "because static rather than code"
[21:20:46] <Grinnz> the snapshot is static
[21:21:39] <mst> yeah, ok, that part, no idea
[21:22:05] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000087 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000087
[21:23:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[21:24:25] *** Joins: omegatron (~some@p5484903d.dip0.t-ipconnect.de)
[21:26:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[21:37:07] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:37:35] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 264 seconds)
[21:37:54] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[21:39:25] *** Joins: diskin (~diskin@31.23.207.230)
[21:47:12] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:2ee6:3c6e:4dd1:b831)
[21:49:00] *** Joins: vague7 (~vague@irssi/staff/vague)
[21:49:43] *** Quits: vague (~vague@irssi/staff/vague) (Killed (NickServ (GHOST command used by vague7)))
[21:49:46] *** vague7 is now known as vague
[21:50:29] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[21:50:39] *** Parts: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) ()
[21:54:18] *** Joins: Macwinner (~Macwinner@12.139.162.66)
[21:54:25] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[21:54:25] *** diskin is now known as Guest503
[21:54:25] *** diskin_ is now known as diskin
[21:56:12] <Macwinner> Hey guys, I wanted to see if anyone here is interested in helping to support some bug fixes for https://metacpan.org/pod/Template::Liquid (paid gig.  all fixes can be re-contributed back open source).
[21:56:12] <Paperbot> Link title(s): [ Template::Liquid - A Simple, Stateless Template System - metacpan.org ]
[21:56:34] <Macwinner> if so, please msg me
[21:57:05] *** Quits: Guest503 (~diskin@31.23.207.230) (Ping timeout: 260 seconds)
[22:02:52] *** Quits: bmeneg (~bmeneg@2001:1284:f016:3569:504d:9bbf:bfc:bc89) (Remote host closed the connection)
[22:06:13] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:07:10] * GumbyPAN CPAN Upload: Net-WebSocket-0.24 by FELIPE https://metacpan.org/release/FELIPE/Net-WebSocket-0.24
[22:14:22] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:18:04] <xenu> Macwinner: have you tried contacting the author?
[22:19:16] <Macwinner> xenu: yep, didn't seem to get a response
[22:20:28] <simcop2387> he's active on github, so not really disappeared at least
[22:20:36] <simcop2387> https://github.com/sanko 
[22:20:37] <Paperbot> Link title(s): [ sanko (Sanko Robinson) · GitHub ]
[22:21:42] <simcop2387> Macwinner: here's the github repo at least, that might be a place to try making a PR or issue or something to get the author's attention.  https://github.com/sanko/template-liquid
[22:21:43] <Paperbot> Link title(s): [ GitHub - sanko/template-liquid: Perl port of Shopify's Liquid markup language. Safe, customer fac... ]
[22:21:48] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:21:54] *** Quits: vague (~vague@irssi/staff/vague) (Quit: Client closed)
[22:21:56] <simcop2387> or a perl monks message, https://www.perlmonks.org/?node=SankoR
[22:21:58] <Paperbot> Link title(s): [ SankoR ]
[22:22:03] <Macwinner> He hasn't seemed to respond to github issues in a while
[22:22:04] <simcop2387> he was just there 40 minutes ago
[22:22:12] *** Joins: vague (~vague@irssi/staff/vague)
[22:22:20] <Macwinner> oh, let me try perlmonks
[22:22:25] <simcop2387> PM might be a reasonable place to nag given that :)
[22:22:46] <Macwinner> PM on perlmonks?
[22:23:10] <simcop2387> yea
[22:23:22] <simcop2387> i think it's got a way to send messages to people.  i don't really use it myself
[22:23:33] <Macwinner> i'll try that, thanks!
[22:26:01] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:28:57] *** Quits: seoul_man (~meh@097-080-088-148.res.spectrum.com) (Changing host)
[22:28:57] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[22:30:04] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:32:19] * mst would also try direct email to the @cpan.org address and also poking on twitter
[22:32:34] *** Joins: krismatrix (~krismatri@38.80.149.51)
[22:37:22] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 260 seconds)
[22:46:37] *** Joins: magla (~gelignite@55d45526.access.ecotel.net)
[22:53:57] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[23:06:02] *** Joins: Pixi (~Pixi@user/pixi)
[23:06:17] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.30 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.30
[23:13:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:14:37] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[23:18:29] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[23:20:49] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:21:21] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 245 seconds)
[23:26:19] * GumbyPAN CPAN Upload: App-geoCancerPrognosticDatasetsRetriever-1.01 by AALAMEER https://metacpan.org/release/AALAMEER/App-geoCancerPrognosticDatasetsRetriever-1.01
[23:38:23] *** Quits: magla (~gelignite@55d45526.access.ecotel.net) (Quit: Stay safe!)
[23:41:28] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[23:43:36] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[23:44:02] *** Joins: kensanata (~user@user/kensanata)
[23:53:59] *** Joins: Pdroman_ (~Android@93.red-79-156-174.staticip.rima-tde.net)
[23:58:26] *** Joins: bmeneg (~bmeneg@2001:1284:f016:3569:504d:9bbf:bfc:bc89)
