[00:01:23] <CarloWood> I am stupid again... how to get the number of bits required to store the positive integer n?
[00:03:29] <xkoncek> CarloWood check these functions: https://en.cppreference.com/w/cpp/numeric/bit_width
[00:03:57] <CarloWood> log2(8) = 3, log2(7) = 2.8,  .. so I think I need the floor(log2(n)) + 1 ?
[00:04:49] <CarloWood> xkoncek: ah, yes - and that's what I said... didn't know that that existed!
[00:05:29] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:07:32] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 240 seconds)
[00:08:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[00:08:47] <sonOfRa> Interesting choice that 0 is 0-bits wide, and not 1 bit
[00:08:53] <sonOfRa> I wonder why that decision was made
[00:11:08] <CarloWood> I wrote those functions in 2018 - and my log2(0) also returns -1.  That is, my log2(n) returns floor(log2(n)) - so that adding 1 means that the width of n=0 is 0.
[00:11:47] <CarloWood> The reason *I* did that is so that I can implement ceil_log2(n) = ceil(log2(n)) as: 1 + log2(n - 1)
[00:12:57] <CarloWood> which then results in ceil_log(1) being 0.
[00:14:06] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:14:50] <CarloWood> I suppose the std did this because they implemented bit_width directly; as: std::numeric_limits<T>::digits - std::countl_zero(x);
[00:15:23] <CarloWood> And if you plug in 0 there - you get 0. So, it's more an artifact of not wanting to make it a special case.
[00:17:00] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[00:19:46] <CarloWood> sonOfRa: ^^^
[00:20:10] <sonOfRa> that seems reasonable, fewer edge cases
[00:21:51] *** gentooclimax is now known as climax
[00:23:23] <CarloWood> It also makes mathematical sense... I'm using this to calculate the number of bits I need in a hash field. And indeed - when the total number possible values is zero then I don't need any bits in my hash for it :P
[00:24:26] <CarloWood> But the same could be said for a range of 1... in that case there is only one value, which is always the same. Then I also don't need to include it in my hash :/.
[00:28:08] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:28:38] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[00:31:19] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[00:31:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:31:48] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[00:32:32] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[00:33:12] *** Quits: kleiner (uid540109@id-540109.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:39:36] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[00:39:36] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[00:41:49] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 240 seconds)
[00:42:48] *** Joins: nq (~nq@2a02:2f08:e015:a900:ce88:51fe:c7ec:5ed9)
[00:43:06] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[00:43:24] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[00:43:42] *** Joins: pulse (~pulse@user/pulse)
[00:50:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:52:08] <cbreak> if there is no possible value, then you can save the whole hash table
[00:52:27] <cbreak> no point having a hash table when there's no possible key to query it with
[00:57:14] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10:fbf2:b01f:1d47:7542)
[01:01:41] *** Joins: jokoon (~eio@2a01:e0a:542:e160:9c4e:870d:32c3:343a)
[01:02:51] <jokoon> I really fail to understand why a ranged for loop crashed while iterating a map
[01:03:17] <jokoon> actually it crashes while iterating a set
[01:03:34] <jokoon> Im bamboozled again
[01:07:34] <xkoncek> !paper int128_t
[01:07:36] <nolyc> xkoncek: Error: "paper" is not a valid command.
[01:07:46] <xkoncek> how do you search for proposals?
[01:10:46] *** Joins: markong (~kvirc@213.146.188.203)
[01:10:54] *** Parts: FLHerne (flh@flherne.uk) (Leaving)
[01:12:38] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[01:13:10] <jokoon> Oh I think I know, I think I removed an element from the set I iterate
[01:20:24] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[01:20:39] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[01:22:19] *** Quits: Guest8537 (~Guest@host52.181-14-185.telecom.net.ar) (Remote host closed the connection)
[01:22:25] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[01:23:06] *** climax is now known as gentooclimax
[01:23:30] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[01:23:42] *** Quits: robod34 (~Username@79.113.243.73) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:24:29] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[01:26:31] *** Joins: letto (~letto@188.26.158.114)
[01:27:18] *** Quits: Msandoy_ (~Msandoy@telia-59089f-40.connect.netcom.no) (Read error: Connection reset by peer)
[01:28:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:31:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:37:23] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Quit: Lost terminal)
[01:40:50] <cbreak> you're not allowed to modify ranges you iterate over
[01:41:01] <cbreak> usually, modification invalidates iterators
[01:41:13] <cbreak> jokoon: if you want to modify a container, use one of the algorithms
[01:41:39] <jokoon> Mmmh
[01:42:03] <jokoon> I just created a list of values to remove, and remove them when I ended iterating
[01:42:09] <cbreak> (they probably don't work with set, but should work fine with vector)
[01:42:18] <cbreak> ... don't waste time on list, it's bad
[01:42:27] <jokoon> Not sure std::algorithm would fit with my code
[01:42:42] <jokoon> I mean a set
[01:42:58] <jokoon> I'd never use a std::list
[01:43:24] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[01:43:37] <cbreak> set is even worse :)
[01:43:47] <cbreak> it's a tree instead of a list, so even more pointers
[01:44:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:44:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:44:17] *** ChanServ sets mode: +v npaperbot
[01:44:46] <jokoon> yeah but removing items in a set is faster
[01:45:15] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[01:46:11] <jokoon> I want fast insert and deletion
[01:46:14] <cbreak> removing things in a std::vector is linear time
[01:46:25] <cbreak> with std::erase_if for example
[01:46:40] <jokoon> yeah but I would need to keep the index, and it invalidates all my indexes once I delete one
[01:46:55] <cbreak> no
[01:47:01] <cbreak> no need to keep indices
[01:47:28] <jokoon> I have objects linked to one another
[01:50:21] *** Quits: foul_owl (~kerry@23.82.193.87) (Ping timeout: 256 seconds)
[01:51:08] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:52:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[01:57:23] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:57:40] <Alipha> jokoon: why are you iterating the set to erase the elements instead of just calling find and then erase?
[01:58:00] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[02:01:51] <jokoon> good question
[02:02:40] <jokoon> Lots of side effects, so I could have written a lambda for this, but it's a long fonction
[02:03:22] <jokoon> I use some flavor of data oriented programming, with object stored in maps
[02:03:37] <jokoon> it's for a game, so there is a time factor
[02:04:29] <jokoon> I'm writing this as a proof of concept, just testing to make it work, and maybe rewrite it entirely if i'm not happy with it
[02:05:24] <jokoon> time factor as is, update() is called like 60 times per second, updating timers etc
[02:05:48] <jokoon> as in*
[02:06:30] *** Joins: foul_owl (~kerry@174-21-69-110.tukw.qwest.net)
[02:06:59] <jokoon> It's just that some timers "trigger" a check for deletion
[02:07:43] <jokoon> My code is probably very badly designed and I already feel judged and naked just by explaining it :D
[02:11:16] <Alipha> I'm naked, except for socks, but that's probably tmi
[02:12:13] <jokoon> are you in australia?
[02:12:47] <jokoon> if you're in the southern hemisphere, it's autumn
[02:13:00] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 250 seconds)
[02:15:17] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[02:18:45] <Alipha> US. it's spring
[02:26:13] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[02:27:25] <cbreak> jokoon: in my experience, if you want performance, you should think about cache locality.
[02:27:44] <cbreak> so it's usually better to have sorted vectors than maps
[02:28:18] <cbreak> and if you want to filter a whole vector, that's O(n). Filtering a set by first creating an other set, and then removing the things, is more expensive in both complexity and actual overhead
[02:29:01] <jokoon> I only iterate a set of "activated" objects
[02:29:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:29:36] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[02:30:06] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[02:31:39] <jokoon> better to have sorted vectors?
[02:32:05] <jokoon> sure but I would need to track the index of those objects
[02:32:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:33:04] <jokoon> A map allows to say "this object is key X and it won't change key"
[02:33:22] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e)
[02:33:34] <jokoon> different types of objects are linked to others
[02:34:18] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[02:35:03] *** Joins: jokoon2 (~eio@88.125.11.133)
[02:36:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e) (Ping timeout: 252 seconds)
[02:37:06] <jokoon2> no IRC scrollback on the topic's link?
[02:37:32] <jokoon2> oh yes
[02:38:02] *** Quits: jokoon (~eio@2a01:e0a:542:e160:9c4e:870d:32c3:343a) (Ping timeout: 240 seconds)
[02:39:15] <jokoon2> Good night
[02:39:16] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:39:17] *** Quits: jokoon2 (~eio@88.125.11.133) (Client Quit)
[02:40:43] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:42:22] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[02:42:30] *** Joins: Guest8537 (~Guest@181.91.159.107)
[02:42:57] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[02:49:24] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[02:54:57] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[03:01:11] *** Quits: foul_owl (~kerry@174-21-69-110.tukw.qwest.net) (Ping timeout: 256 seconds)
[03:02:34] *** Joins: x_kuru (~xkuru@user/xkuru)
[03:05:32] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[03:07:01] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[03:13:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:15:58] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:17:04] *** Joins: foul_owl (~kerry@23.82.193.89)
[03:18:37] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:20:26] *** Quits: dasrael (~rabbit@user/dasrael) (Quit: And away we go!)
[03:20:28] *** Joins: ferdna (~ferdna@user/ferdna)
[03:22:05] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:22:32] *** Joins: dasrael (~rabbit@user/dasrael)
[03:27:02] *** Joins: noarb (~noarb@user/noarb)
[03:27:06] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e) (Quit: Quit)
[03:29:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:32:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:45:38] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:48:12] <very_sneaky> what's the appropriate libcxx value for clang? libc++?
[04:05:04] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5576:5234:dd88:34d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:05] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e)
[04:10:37] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1d93:c001:c5f4:b58e)
[04:13:03] *** Quits: str0 (~str0@178.220.28.32) (Remote host closed the connection)
[04:15:09] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1d93:c001:c5f4:b58e) (Ping timeout: 252 seconds)
[04:20:02] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:30:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:33:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:34:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[04:34:56] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4.1)
[04:45:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:50:18] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[04:51:41] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[04:53:00] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[04:55:02] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[04:55:34] *** Joins: rackj (~rackj@c-73-193-19-25.hsd1.wa.comcast.net)
[05:00:32] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:40fd:1a9f:e098:5b8e) (Quit: Quit)
[05:04:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[05:14:59] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[05:23:44] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Remote host closed the connection)
[05:25:02] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[05:27:34] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:28:39] *** Joins: bpalmer (~user@user/bpalmer)
[05:31:00] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:33:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:34:43] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[05:34:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:35:06] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[05:41:04] *** Quits: rackj (~rackj@c-73-193-19-25.hsd1.wa.comcast.net) (Quit: Client closed)
[05:44:07] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:44:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:44:15] *** ChanServ sets mode: +v npaperbot
[05:47:26] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[05:48:42] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[05:56:41] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[06:00:31] <johnny> that looks right
[06:06:18] <hnOsmium0001[m]> if you are on macos or BSD family systems, on linux it's generally libstdc++ though libc++ is possible
[06:06:56] *** Joins: Inline__ (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de)
[06:08:20] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Remote host closed the connection)
[06:09:02] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:14:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:15:06] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:16:22] *** Joins: geli (~gelignite@55d44736.access.ecotel.net)
[06:19:14] *** Quits: magla (~gelignite@d536146e.access.ecotel.net) (Ping timeout: 260 seconds)
[06:19:42] *** Quits: Kerr (~quassel@2601:602:ce80:df10::b76e) (Quit: No Ping reply in 180 seconds.)
[06:20:55] *** Joins: Kerr (~quassel@2601:602:ce80:df10::d1e)
[06:22:02] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[06:31:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:32:22] <very_sneaky> libstdc++ is the old ABI
[06:32:29] <very_sneaky> libstdc++11 is the new one
[06:33:15] <very_sneaky> i guess my confusion is that clang supports both libc++ and libstdc++11, and it wasn't clear to me what the difference is/which is preferred. gcc can only use libstdc++11 - it looks like libc++ is the llvm implementation though
[06:33:54] <very_sneaky> hnOsmium0001[m]: specifically for macos, i believe libstdc++ has been deprecated - apple-clang is all libc++ now i think
[06:34:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:34:55] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[06:35:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:36:04] <very_sneaky> maybe that's what you were saying
[06:42:16] *** Quits: Guest8537 (~Guest@181.91.159.107) (Read error: Connection reset by peer)
[06:45:57] *** Quits: geli (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[06:49:19] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[06:51:52] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[06:52:37] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[07:07:47] *** Joins: adeliktas4 (~adeliktas@i59F5F671.versanet.de)
[07:09:37] *** Quits: adeliktas (~adeliktas@i59F4D808.versanet.de) (Ping timeout: 240 seconds)
[07:09:37] *** adeliktas4 is now known as adeliktas
[07:11:47] *** Joins: ravan (~ravan@user/ravan)
[07:31:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:35:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:44:05] *** Quits: johnny (~johnny@user/johnny) (Quit: Leaving)
[07:45:16] *** Joins: johnny (~johnny@user/johnny)
[08:07:54] *** Quits: ARoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 250 seconds)
[08:13:35] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[08:17:25] *** Joins: malloy (~jimery@120.235.172.170)
[08:23:43] <Gamah> are there "good" json libs that are usable and a single header besides nlohmann's?
[08:24:13] <Gamah> i keep trying to skim over the docs and i'm still not intuitively understanding how to injest a file and read bits of the structure..
[08:32:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:35:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:38:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:46:08] <hnOsmium0001[m]> I'm not aware of any libraries, but things like these exists within many projects that are for their own uses https://github.com/thedmd/imgui-node-editor/blob/develop/crude_json.h
[08:46:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:06:34] <Gamah> i'm not necessarily married to json... are there any other data exchange formats that are nicer to use in cpp?
[09:20:17] *** Quits: Kerr (~quassel@2601:602:ce80:df10::d1e) (Ping timeout: 240 seconds)
[09:27:57] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[09:32:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:32:55] *** Joins: ravan_ (~ravan@user/ravan)
[09:35:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[09:35:18] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[09:35:56] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[09:36:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:43:38] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[09:44:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:44:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:44:16] *** ChanServ sets mode: +v npaperbot
[09:44:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:58:58] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:14:35] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[10:15:09] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[10:33:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:37:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:37:31] *** Quits: nq (~nq@2a02:2f08:e015:a900:ce88:51fe:c7ec:5ed9) (Quit: Leaving)
[10:37:32] *** Quits: emerent (~quassel@p200300cd5743c3f5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:37:56] *** Joins: emerent (~quassel@p200300cd5743c31fba27ebfffed28a59.dip0.t-ipconnect.de)
[10:40:52] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:44:59] *** Joins: zmt01 (~zmt00@user/zmt00)
[10:47:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:53:15] *** Joins: Kill-Animals (~manjaro-u@208.98.223.69)
[10:55:25] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:04:00] <xkoncek> does VS code support syntax highlighting with modules?
[11:06:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8cf8:54a6:9849:49d9)
[11:06:41] <johnny> i wonder if anybody here has even looked at module code in vscode. I know i haven't bothered since my build systems don't support it yet
[11:07:26] <ville> Gamah: binary file formats are usually more fun to read/write
[11:07:26] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[11:10:37] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[11:11:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:24:28] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[11:25:27] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[11:31:37] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10:fbf2:b01f:1d47:7542) (Ping timeout: 240 seconds)
[11:33:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:35:31] <ville> ok let's narrow that down to simple binary formats that are just made of things that look like: type+data or type+size+data. so just just read 1 byte for data and then known whether there's a data or size+data
[11:36:02] <ville> err 1 byte for type
[11:36:47] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 268 seconds)
[11:37:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:39:28] <ville> depending on needs may wish to stick a header/index in the file so you can just read some parts of it
[11:39:45] <johnny> that's me in decodin these game data files
[11:40:19] <johnny> they have a (mostly) reasonable header
[11:41:45] <ville> yeah. dunno why binary files as a format always seem to be the last choice. somehow the claim about being "human readable" beats everything else
[11:42:08] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:42:14] <ville> and leads people to choose format like json or xml
[11:43:14] <bpalmer> there are a bunch of libraries in the (thrift, cap'n proto, protocol buffer, SBE) vein that you can choose from and skip having to write the parsing yourself
[11:43:22] <ville> so you've nonsense like lsp being json transmitted over the write. absolutely no point
[11:43:55] <ville> come on. if your format needs are at the level i described no need to bring in a library
[11:44:44] <bpalmer> a library brings good design decisions in upfront. Incredibly basic decisions, like including a version right near the beginning.
[11:44:44] <johnny> those aren't the only consumers of said data though
[11:44:57] <johnny> tht's the problem with binary only formats..
[11:45:06] <johnny> it makes consuming elsewhere harder
[11:45:16] <ville> even for json i wouldn't. just write the parser. it's ~500 lines
[11:45:34] <johnny> good for you, but i don't have to write it to consume it on python or other places
[11:45:37] <ville> johnny: no it doesn't. writing a parser is so damned simple
[11:45:38] * bpalmer has been trying to write a reader for a badly documented binary protocol for the lats while that skips out on version information and has at least 3 variants in the wild 
[11:45:54] <johnny> ville, not for people who aren't programmers.. not all the people who wanna read and mod the data ARE programmers
[11:46:25] <johnny> i woudl only use binary if it would really affect the performance and no other time
[11:46:42] <johnny> or in the case of embedded.. because of size constraints
[11:46:45] <bpalmer> so something like one of those tools -- which are usually incredibly simple to use; the hardest part is just fitting them into your build system -- is a big boon and saves on tedium.
[11:47:14] <bpalmer> and if they let you work with both json or binary serialization, then you've got the best of all worlds.
[11:47:18] <johnny> i do think lsp should have gone with with at least bson or something
[11:47:30] <johnny> or maybe one of those ones you metntioned like capn proto
[11:47:34] <johnny> or protobuf
[11:47:52] <johnny> but really, i would assume you'd complain about ipc being involved at all..
[11:48:15] <johnny> altough it certainly does have its benefits
[11:48:27] <johnny> which aren't disimilar to choosing json
[11:48:41] <ville> ipc is not a property of lsp. you could have lsp-as-a-library
[11:48:43] <johnny> it made it suepr easy for folks to get completion data into their programs
[11:49:03] <johnny> i guess i wasn't familiar with a provider that made another choice
[11:49:24] <Shell> I have seen so many incorrect ad-hoc json parsers, tbh.
[11:49:30] <ville> every implementation that i know of however have made that choice: their lsp is an external process
[11:49:42] <Shell> even more incorrect ad-hoc json serializers.
[11:49:44] <johnny> again wih the distinction without an actual difference..
[11:50:11] <johnny> Shell, that's why i don't write a json parser.. id just get wrong!
[11:50:23] <johnny> and it doesn't provide value
[11:50:43] <ville> Shell: well it's sort of hard to be correct correct when there is no correct. what's a number?
[11:50:59] <johnny> well serializers, i did do that.. i turned a setof string keys and values into json
[11:51:46] <johnny> that part is easy enough to serialize
[11:52:04] <johnny> quotes, colon separators, and no comma on the last
[11:52:09] <Shell> ville: whether you can fit the number into your eventual datatype is fiddly, but I'm talking about "getting the actual parser wrong".
[11:52:28] <Shell> GNOME's JSON parser used to think empty objects were invalid. seriously.
[11:52:58] <johnny> hmm.  GNOME or in glib or something?
[11:53:17] <johnny> i wonder how many json parsers are in gnome if you do mean gnome as a whole project
[11:53:31] <Shell> https://gitlab.gnome.org/GNOME/json-glib/
[11:53:48] <johnny> ah so i was mostly correct with my guess
[11:54:19] <ville> Shell: then again bad programmers will fail at whatever they write, if the programmer you assigned to write a json parser can't get that even half-way right what good are they as a programmer?
[11:54:33] <ville> Shell: what are you going to trust for them to produce?
[11:54:39] <johnny> reminds me that it is kinda funny that gnome still relies on gjs, even though everything else related to the web is via webkit
[11:55:15] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Quit: Leaving)
[11:57:02] <Shell> ville: parsers are notoriously hard to get right. *shrug* I avoid writing them when I don't have to, even if I can; because QA and unit testing doesn't catch everything even with the code that actually matters to the business.
[11:57:44] <Shell> I don't really wanna be the guy saying to a customer "yeah, actually our json parser is broken, pls generate your json like this as a workaround"
[11:57:46] <ville> Shell: parsers are a far too broad category to generalize over like that
[12:00:52] <ville> say parser for c++ vs parser for json. or parser for binary format such as above
[12:07:58] <Shell> sure, a flat length-prefixed key-value pair is trivial. JSON is at about the point where the spec is shit and people consistently get it wrong, it seems.
[12:13:59] *** Joins: robod34 (Username@79.113.200.158)
[12:30:14] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[12:31:26] *** Joins: ravan__ (~ravan@user/ravan)
[12:32:55] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[12:33:37] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 240 seconds)
[12:34:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:37:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:39:55] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:40:44] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[12:49:12] <ville> also did they change the spec in recent/5-10 years? i seem to recall it wasn't specified whether there could be more than one value at top-level
[12:50:52] <ville> now the one listed on https://www.json.org/json-en.html seems to be more well-defined than i remember
[12:56:42] *** Joins: Donno (~donno@58.84.206.182)
[12:59:10] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[13:12:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 256 seconds)
[13:12:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:12:45] *** ChanServ sets mode: +v npaperbot
[13:15:08] *** Joins: biberu\ (~biberu@user/biberu)
[13:15:08] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 250 seconds)
[13:16:06] *** biberu\ is now known as biberu
[13:32:51] *** Joins: blackbird_0 (~blackbird@102.159.16.37)
[13:34:06] <xkoncek> supposedly yaml is even harder than json but i don't see why
[13:34:44] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:37:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:38:56] *** Joins: undephin3d (~undephin3@158.181.72.54)
[13:39:17] *** Joins: magla (~gelignite@55d44736.access.ecotel.net)
[13:40:30] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:44:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:44:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:44:17] *** ChanServ sets mode: +v npaperbot
[13:49:27] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[13:56:01] *** Quits: undephin3d (~undephin3@158.181.72.54) (Quit: leaving)
[13:59:41] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[14:00:26] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[14:01:31] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[14:07:26] *** Joins: plastico (~plastico@neomutt/plastico)
[14:17:27] <LordKalma> yaml is a superset of json
[14:21:35] <johnny> xhoncek should read the yaml spec.. oh boy
[14:21:39] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[14:22:03] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[14:22:05] <johnny> i just wish strings required one to quote them
[14:23:27] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[14:27:53] *** Joins: CaCode (~CaCode@user/cacode)
[14:30:06] <LordKalma> haha strings on yaml are like... wow
[14:30:13] <LordKalma> there's 500 ways to do multiline strings
[14:31:05] *** Joins: darkbit (~db@152.32.100.99)
[14:32:38] *** Quits: malloy (~jimery@120.235.172.170) (Read error: Connection reset by peer)
[14:33:55] *** Joins: ymwm (~yingmanwu@240e:37a:40c9:3700:11e1:e123:e29:2f69)
[14:33:57] <fiesh> yaml in general is just *wow*, but not in a good way...
[14:34:55] <Shell> yaml is horrible to read, write, parse... idk who likes it except Rubyists.
[14:35:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:36:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[14:36:59] *** Joins: malloy (~jimery@120.235.172.170)
[14:37:15] *** Joins: gzd (~gzd@83-215-123-219.lhau.dyn.salzburg-online.at)
[14:37:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:38:50] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:39:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:43:21] <very_sneaky> i don't mind yaml from a syntax perspective
[14:43:33] <very_sneaky> the thing i don't like about it is that it's not composable in the way i'd like it to be
[14:43:57] <very_sneaky> just wrestled an issue with my gitlab ci recipe where a particular keyword wouldn't accept strings with environment variables in it
[14:44:52] <xkoncek> from a user point of view, yaml seems nice to me
[14:45:21] <very_sneaky> also, does anybody have any idea why libc++ and libstdc++11 would be operating substantially differently for me? `date` and `gtest` seem to build ok, but when i go to link with my program they shit the bed
[14:45:40] *** Quits: gzd (~gzd@83-215-123-219.lhau.dyn.salzburg-online.at) (Quit: Leaving)
[14:46:04] <Shell> very_sneaky: when strings aren't necessarily quoted, you run into... like, `foo: bar` = string, but `foo: no` = boolean.
[14:46:19] <Shell> it's solveable by being very careful writing yaml, but I hate it.
[14:47:16] <very_sneaky> Shell: it was: `dependencies: - "pkg/build: [$COMPILER, $VERSION]"`, where `dependencies: - "pkg/build: [gcc,11]"` worked fine
[14:47:32] <Shell> fun
[14:47:51] <very_sneaky> but maybe it was something to do with the order in which it resolved those env vars - they were the result of a matrix iteration, and idk how it works under the hood
[14:52:17] <very_sneaky> so i'm getting this junk with libc++: `/usr/bin/ld: ... undefined reference to `testing::internal::EqFailure(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)'` - anybody got any inklings as to why this might be the case? (this is a gtest
[14:52:18] <very_sneaky> symbol, that successfully built with libc++)
[14:52:28] *** Joins: jokoon (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884)
[15:01:25] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[15:03:35] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:04:45] *** Joins: jancoow (~jancoow@user/jancoow)
[15:05:56] *** Quits: blackbird_0 (~blackbird@102.159.16.37) (Quit: Leaving)
[15:10:20] *** Joins: CaCode (~CaCode@user/cacode)
[15:12:27] *** Quits: CaCode (~CaCode@user/cacode) (Max SendQ exceeded)
[15:12:46] *** Joins: CaCode (~CaCode@user/cacode)
[15:13:57] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[15:18:01] *** Joins: filename (~kilitary@188.242.105.134)
[15:26:44] *** Joins: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c)
[15:29:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:32:03] *** Joins: markong (~kvirc@213.146.188.203)
[15:33:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:35:45] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:38:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:40:31] *** Quits: malloy (~jimery@120.235.172.170) (Ping timeout: 265 seconds)
[15:45:40] *** Inline__ is now known as Inline
[15:57:27] *** Joins: jsbach (~jsbach@2a01:c23:6544:db00:96c6:438c:3cf8:3869)
[16:10:18] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:11:14] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 252 seconds)
[16:14:17] *** Joins: ARoxdale (~ARoxdale@93.107.214.80)
[16:14:54] *** Joins: malloy (~jimery@120.235.172.170)
[16:15:48] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[16:20:52] *** Joins: p-i- (~Ohmu@183.89.28.57)
[16:20:53] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[16:21:02] *** Quits: Kill-Animals (~manjaro-u@208.98.223.69) (Ping timeout: 250 seconds)
[16:21:21] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[16:29:12] *** Joins: pulse (~pulse@user/pulse)
[16:31:05] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[16:35:07] *** Joins: Msandoy_ (~Msandoy@telia-590849-163.connect.netcom.no)
[16:36:05] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:36:13] *** Joins: str0 (~str0@178.220.28.32)
[16:36:18] *** Joins: str0_ (~str0@178.220.28.32)
[16:36:20] *** Quits: str0_ (~str0@178.220.28.32) (Remote host closed the connection)
[16:39:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:40:17] <ville> apparently some uk-based project has implemented an arm cpu that tracks pointers as some sort of [valid-bit][begin][end][64bit adress] in hardware
[16:40:41] <ville> so a pointer ends up being 128 bit or something in hardware
[16:42:32] <ville> https://gankra.github.io/blah/fix-rust-pointers/#cheri
[16:45:01] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7023:87ef:b4e8:5e17)
[16:47:50] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[16:47:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[16:48:38] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[16:50:14] *** Joins: pulse (~pulse@user/pulse)
[17:07:29] *** Quits: magla (~gelignite@55d44736.access.ecotel.net) (Quit: Stay safe!)
[17:10:04] *** gentooclimax is now known as climax
[17:10:13] *** climax is now known as gentooclimax
[17:17:48] *** Quits: jsbach (~jsbach@2a01:c23:6544:db00:96c6:438c:3cf8:3869) (Remote host closed the connection)
[17:21:15] *** Joins: jsbach (~jsbach@2a01:c23:6544:db00:d6ab:61b8:29be:bd19)
[17:22:28] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:23:21] *** Joins: jokoon2 (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884)
[17:25:07] *** Quits: jokoon (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884) (Ping timeout: 256 seconds)
[17:26:26] *** Quits: jsbach (~jsbach@2a01:c23:6544:db00:d6ab:61b8:29be:bd19) (Ping timeout: 268 seconds)
[17:27:17] *** Quits: ymwm (~yingmanwu@240e:37a:40c9:3700:11e1:e123:e29:2f69) (Ping timeout: 240 seconds)
[17:35:56] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:36:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:37:11] *** Joins: rond_ (~rond_@90.254.208.190)
[17:38:58] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[17:39:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:40:17] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:40:46] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 250 seconds)
[17:44:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:44:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:44:18] *** ChanServ sets mode: +v npaperbot
[17:45:25] *** gentooclimax is now known as climax
[17:47:51] <LordKalma> Shell, and pythonists :p
[17:48:44] *** Quits: Msandoy_ (~Msandoy@telia-590849-163.connect.netcom.no) (Remote host closed the connection)
[17:49:54] <Shell> LordKalma: pythonists do json, ime.
[17:50:05] <Shell> or Python config formats
[17:50:09] *** Joins: LuckyFire (~LuckyFire@46.217.38.223)
[17:51:34] *** Joins: Msandoy (~Msandoy@telia-590832-38.connect.netcom.no)
[17:56:41] <pulse> "hpp" doesn't mean anything - there's no such thing as "header plus plus"
[17:56:49] <pulse> thank you for listening to my podcast
[18:00:06] <LordKalma> #ifdef __cplusplus extern "C" {  //...   also class Bananas{}; // yes, there *are* big differences
[18:00:13] <LordKalma> thanks for coming to my ted talk
[18:00:39] <LordKalma> TLDR: C++ is not C even if they share the compilation model
[18:00:45] <ville> anyone tried https://fosshost.org ?
[18:01:31] <LordKalma> https://fosshost.org/projects Gnome, Debian, XFCE, Garuda.... :D
[18:08:22] *** Quits: LuckyFire (~LuckyFire@46.217.38.223) (Ping timeout: 268 seconds)
[18:08:22] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[18:08:42] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[18:11:05] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:12:44] <ville> the significance escapes me
[18:13:02] *** Joins: jsbach (~jsbach@2a01:c23:6544:db00:c7d7:59ac:bdd6:d3f8)
[18:13:55] <LordKalma> the answer is yes, someone tried it
[18:13:57] *** climax is now known as gentooclimax
[18:15:48] *** Quits: jsbach (~jsbach@2a01:c23:6544:db00:c7d7:59ac:bdd6:d3f8) (Remote host closed the connection)
[18:16:47] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:18:38] *** Joins: jsbach (~jsbach@2a01:c23:6544:db00:96d8:90de:fbe5:f86a)
[18:19:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:21:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:22:49] *** Joins: paul424 (~tom@ip-5-172-235-251.multi.internet.cyfrowypolsat.pl)
[18:24:50] *** Quits: jokoon2 (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884) (Quit: Leaving)
[18:26:09] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[18:27:02] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:30:04] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[18:31:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:34:28] *** Joins: marius_ (Username@79.113.200.158)
[18:35:24] *** Joins: Inline__ (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de)
[18:35:29] *** Quits: Inline (~Inline@p200300cd473cb900eebf25766a02ea81.dip0.t-ipconnect.de) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:35:29] *** Inline__ is now known as Inline
[18:36:40] *** Joins: minto (~mintograd@47.201.5.61)
[18:36:52] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[18:37:00] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:37:18] *** Joins: AlanRoxdale (~ARoxdale@93.107.214.80)
[18:37:34] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 240 seconds)
[18:38:03] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Read error: Connection reset by peer)
[18:38:53] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[18:39:31] *** Joins: VShell (~shell@user/shell)
[18:39:59] *** Joins: NyB_ (~archon@2a02:169:1d9::1:0:0)
[18:40:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:40:17] *** Joins: twice6 (~twice@173.82.153.50)
[18:40:27] *** Joins: dextercd1 (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:40:52] *** Quits: Shell (~shell@user/shell) (Killed (zirconium.libera.chat (Nickname regained by services)))
[18:40:52] *** VShell is now known as Shell
[18:41:01] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[18:41:03] *** Joins: leonardus (sid358597@tinside.irccloud.com)
[18:41:22] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[18:41:25] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[18:42:04] *** Quits: robod34 (Username@79.113.200.158) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: mintograde (~mintograd@47.201.5.61) (Remote host closed the connection)
[18:42:05] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: EdFletcher (~PKD@user/edfletcher) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: NyB (~archon@2a02:169:1d9::1:0:0) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: ARoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Donno (~donno@58.84.206.182) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:42:05] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: twice (~twice@173.82.153.50) (Ping timeout: 240 seconds)
[18:42:05] *** Quits: Latexi95 (late@banhammer.fi) (Ping timeout: 240 seconds)
[18:42:06] *** marius_ is now known as robod34
[18:42:06] *** twice6 is now known as twice
[18:42:15] *** scoobydoob is now known as scoobydoo
[18:42:34] *** Joins: Donno (~donno@58.84.206.182)
[18:42:46] *** Joins: evangeline (~Eleanor@178.79.105.181)
[18:42:54] *** Joins: Latexi95 (late@banhammer.fi)
[18:44:13] *** Joins: epony (epony@user/epony)
[18:45:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[18:45:30] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[18:45:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:46:13] *** Quits: AlanRoxdale (~ARoxdale@93.107.214.80) (Ping timeout: 240 seconds)
[18:46:32] *** Quits: epony (epony@user/epony) (Excess Flood)
[18:50:02] *** Quits: Ouster (Crucifery@shell.xshellz.com) (Ping timeout: 240 seconds)
[18:50:41] *** Joins: Ouster (Crucifery@shell.xshellz.com)
[18:51:43] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[18:52:13] *** Joins: markong (~kvirc@213.146.188.203)
[18:53:31] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[18:53:52] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[18:54:33] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[18:54:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[18:54:48] *** Quits: udet (~udet@ve603.venus.servdiscount-customer.com) (Read error: Connection reset by peer)
[18:54:50] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[18:54:50] *** scoobydoob is now known as scoobydoo
[18:55:00] *** Joins: udet (~udet@ve603.venus.servdiscount-customer.com)
[18:56:13] *** Joins: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[18:56:36] *** Joins: m_ben_ (~m_ben@user/m-ben/x-7429725)
[18:56:40] *** Quits: kurfen (~kurfen@176.119.195.8) (Ping timeout: 250 seconds)
[18:56:41] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Ping timeout: 250 seconds)
[18:56:47] *** Joins: jbalint_ (~jbalint@071-090-119-177.res.spectrum.com)
[18:57:09] *** Joins: kurfen (~kurfen@176.119.195.8)
[18:57:12] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5328)))
[18:57:13] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[18:57:37] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[18:57:37] *** Quits: jbalint (~jbalint@071-090-119-177.res.spectrum.com) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 250 seconds)
[18:57:38] *** Quits: letto (~letto@188.26.158.114) (Ping timeout: 250 seconds)
[18:57:41] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[18:57:41] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[18:57:54] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 250 seconds)
[18:58:03] *** Joins: immibis (~hexchat@62.156.144.218)
[18:58:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:00:13] *** Joins: naur_ (naur@user/naur)
[19:00:14] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[19:00:18] *** Joins: SoniEx2 (~quassel@autistic.space)
[19:00:19] *** Quits: edr (~edr@user/edr) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: Soni (~quassel@autistic.space) (Remote host closed the connection)
[19:00:19] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: naur (naur@user/naur) (Ping timeout: 250 seconds)
[19:00:19] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Read error: Connection reset by peer)
[19:00:20] *** Quits: DrMax (~DrMax@node-1w7jra94757fz37lptcdb8pyu.ipv6.telus.net) (Ping timeout: 250 seconds)
[19:00:20] *** Joins: msim__ (~msim@2001:8003:d194:d000::d8d)
[19:00:24] *** Joins: edro (~edr@enlo.co)
[19:00:24] *** Quits: edro (~edr@enlo.co) (Changing host)
[19:00:24] *** Joins: edro (~edr@user/edr)
[19:00:52] *** Joins: DrMax (~DrMax@node-1w7jra94757g0eowpdm0t7o2g.ipv6.telus.net)
[19:02:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[19:02:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:04:33] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[19:05:15] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[19:08:54] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:09:47] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[19:10:43] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:15:37] *** Joins: nisa (~quassel@nbg1.tuxifan.net)
[19:15:44] <nisa> Hey, I am trying to implement breakpoints on ptrace: https://bpa.st/7SSA
[19:15:44] <nisa> However in certain functions the RIP seems to get disaligned after passing through a breakpoint and crashes the program. Any idea?
[19:25:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:28:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:29:56] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[19:30:21] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004)
[19:30:21] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004) (Changing host)
[19:30:21] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:38:28] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[19:38:36] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[19:38:55] <Hello71> have you considered that instructions are not all the same size
[19:39:28] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[19:40:06] <Hello71> actually wait, you've just not included any of the important code
[19:40:09] <Hello71> !testcase
[19:40:10] <nolyc> A testcase is the _least_ amount of code that replicates your problem. Paste it to: https://godbolt.org/ and make sure it really does replicate your problem. This does not mean that you dump all your code there. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[19:40:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:44:15] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:44:52] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[19:47:32] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[19:48:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[19:49:26] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[19:51:05] *** Joins: furrymcgee (~devuan@cgn-213-196-210-225.nc.de)
[19:51:29] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[19:51:54] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:53:37] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[20:03:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:07:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[20:09:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:10:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8cf8:54a6:9849:49d9) (Ping timeout: 252 seconds)
[20:10:54] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[20:12:13] *** Quits: paul424 (~tom@ip-5-172-235-251.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[20:12:51] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b126:42fc:7c9a:5916)
[20:16:22] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[20:16:43] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004)
[20:16:43] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004) (Changing host)
[20:16:43] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:18:52] *** Joins: magla (~gelignite@55d44736.access.ecotel.net)
[20:18:54] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[20:18:54] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[20:19:52] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:2cf7)
[20:22:29] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[20:24:16] *** Parts: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) ()
[20:24:16] *** Joins: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr)
[20:25:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:25:31] *** Quits: agrosant (~agrosant@79.103.63.74.dsl.dyn.forthnet.gr) (K-Lined)
[20:28:43] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[20:29:58] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (Quit: Goodbye)
[20:30:19] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[20:31:19] *** Quits: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Remote host closed the connection)
[20:32:30] *** Joins: plastico (~plastico@neomutt/plastico)
[20:36:28] *** Quits: str0 (~str0@178.220.28.32) (Remote host closed the connection)
[20:46:58] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a5a2:71c4:6a24:11d0)
[20:46:58] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a5a2:71c4:6a24:11d0) (Changing host)
[20:46:58] *** Joins: skapata (~Skapata@user/skapata)
[20:48:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[20:52:45] *** Joins: epony (epony@user/epony)
[20:59:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:01:24] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7023:87ef:b4e8:5e17) (Ping timeout: 240 seconds)
[21:04:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:07:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[21:11:53] *** Joins: EdFletcher (~PKD@user/edfletcher)
[21:13:03] *** Joins: minto_ (~mintograd@47.201.5.61)
[21:16:07] *** Quits: minto (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[21:17:07] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:2cf7) (Ping timeout: 256 seconds)
[21:17:25] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[21:19:07] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:26:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812) (Ping timeout: 268 seconds)
[21:28:58] <xkoncek> ville this is with path compression, notice common prefix sharing https://ibb.co/HD85Syf
[21:29:15] *** Joins: nq (~nq@2a02:2f08:e015:a900:7e72:2af9:f526:1e8f)
[21:29:29] <xkoncek> (unless there is a bug, i just wrote it)
[21:30:23] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[21:30:41] *** Joins: kevr (~kevr@user/kevr)
[21:32:47] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:33:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[21:35:03] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[21:41:36] <ville> xkoncek: all i can say is: "there appears to be fewer boxes" but i guess that was the goal
[21:41:52] <xkoncek> yes
[21:42:27] <ville> i sit intentional that there are two names for the same thing: position and index?
[21:44:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:44:18] *** ChanServ sets mode: +v npaperbot
[21:45:45] <ville> 20:41:18         xkoncek | ville 44-45-46 not, but for example the righmost: 82 -> ... -> 90, that can be compressed into 46 -> 90
[21:45:53] <ville> is that evident somewhere?
[21:46:50] <ville> i guess the indices no longer match to the scenario where there were more boxes so it would be difficult to find it
[21:46:56] <xkoncek> all over the picture: go to the left, see node 37 -> 3 and comprate their paths
[21:47:36] <xkoncek> previously there would be one node one the path per one more indx in the path
[21:47:48] <xkoncek> wtf...
[21:48:08] <xkoncek> previously there would be one node per one more index in the path
[21:48:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[21:48:59] <xkoncek> the indices have pointer semantics
[21:49:41] <ville> with out fully understanding it kind of difficult to see what's going on. if the visualization kept the boxes at their depth maybe it would be more evident
[21:50:29] <xkoncek> sure, this i best i could do with .dot
[21:51:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:51:15] <xkoncek> but you get the ieda? an octree node has possibly 8 children, each one is identified by its position in that microarray
[21:52:08] <xkoncek> and the path is just a succession of the descendants from root
[21:56:04] *** Joins: pulse (~pulse@user/pulse)
[22:00:44] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[22:00:58] *** zmt01 is now known as zmt00
[22:01:05] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004)
[22:01:05] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004) (Changing host)
[22:01:05] *** Joins: RoKenn (~RoKenn@user/rokenn)
[22:01:23] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[22:04:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:08:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:12:32] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[22:16:30] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.28-57.dynamic.3bb.co.th)
[22:17:17] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:19:27] *** Quits: p-i- (~Ohmu@183.89.28.57) (Ping timeout: 256 seconds)
[22:31:10] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:33:50] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d8b3:10ce:39eb:f812)
[22:42:22] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[22:44:25] *** Joins: mint (~mint@37.78.183.195)
[22:44:44] <mint> Is there an introduction to modern c++ for beginners from 0?
[22:44:55] <LordKalma> leancpp.com
[22:48:41] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[22:50:12] *** Quits: ahlk` (~user@2600:1700:31c0:3a10::43) (Ping timeout: 240 seconds)
[22:51:26] <xkoncek> no matter what Bjarne says, i would still start with C
[22:51:46] <xkoncek> give it a few months and then learn what C++ does better
[22:51:57] <xkoncek> or rather: more convenient
[22:52:13] <TinoDidriksen> !give mint basics
[22:52:14] <nolyc> mint: Books, references, tutorials, for all levels of learning: https://isocpp.org/get-started ; https://isocpp.org/faq ; https://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; https://cppreference.com/
[22:53:34] <mint> ok
[22:54:31] <TinoDidriksen> Oh neat, Linux is finally turning /dev/random == /dev/urandom
[22:57:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:59:11] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[23:01:19] *** Joins: paul424 (~tom@ip-5-172-237-23.multi.internet.cyfrowypolsat.pl)
[23:01:57] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 256 seconds)
[23:05:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:09:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[23:13:12] <PJBoy> woah what
[23:13:26] <PJBoy> does that mean both are unlimited random?
[23:20:19] <Alipha> Do we have a recommendation yet for a beginner c++20 book?
[23:20:48] <LordKalma> xkoncek, absolutely not
[23:21:06] <LordKalma> watch Kate's cppcon talk on "stop teaching C [when you're teaching C++]"
[23:21:18] <LordKalma> the actual title does not include the [] bit
[23:24:21] <LordKalma> << std::dynamic_extent
[23:24:22] <geordi> 18446744073709551615
[23:24:38] <LordKalma> weird, gcc trunk on godbolt says it doesn't know what that is
[23:25:00] <LordKalma> ah nevermind, fixed it
[23:26:02] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:26:47] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:29:11] <Alipha> xkoncek: nah, learn c++ first, then c (though you probably won't have to actively learn c. You'll just pick it up)
[23:30:00] *** Joins: Kakurady (~nekoyasha@207.236.147.169)
[23:30:12] <LordKalma> A question: https://godbolt.org/z/5fME6GMMe
[23:30:24] <LordKalma> (about class templates and default arguments thereof)
[23:31:15] <LordKalma> oh shit, the answer is right here: https://en.cppreference.com/w/cpp/container/span/span
[23:31:22] <LordKalma> explicit(extent != std::dynamic_extent)
[23:31:25] <LordKalma> never seen this before
[23:32:10] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10:fbf2:b01f:1d47:7542)
[23:32:42] <LordKalma> https://en.cppreference.com/w/cpp/language/explicit explicit ( expression ) 	(2) 	(since C++20)
[23:32:42] <LordKalma> fair
[23:33:15] <Alipha> Neither have I. Cool.
[23:33:46] <LordKalma> although it just control explicit-ness
[23:33:52] <LordKalma> not really the idiom I was going for
[23:34:00] <LordKalma> but may be enough. If it's good enough for span...
[23:38:49] *** Joins: mrvn (~mrvn@ip-046-005-255-082.um12.pools.vodafone-ip.de)
[23:40:06] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[23:40:27] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004)
[23:40:27] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:cd26:3b81:e5ad:4004) (Changing host)
[23:40:27] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:41:47] <LordKalma> btw, I meant "for whenever *N* isn't". That std::size_t is a typo
[23:42:12] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[23:43:38] <mrvn> I have 3 functions A,B,C that should behave like a generator. Every item A generates needs to be send to B and C, they do their own processing and generate their next value. I can't have 2 instances of A. B and C must wait for A to generate the next value and both get it. Idea how to do that?
[23:44:03] <LordKalma> with callback hell
[23:44:20] <LordKalma> or with a signals/slots framework (which is the same, but someone else wrote the hell for you)
[23:44:48] <mrvn> I was aiming for generators using coroutines, maybe something with shared_future
[23:45:04] *** Joins: ivii (~ivan@user/ivii)
[23:45:14] <LordKalma> ah you mean actual generators
[23:45:18] <LordKalma> not "like" generators :p
[23:45:18] <mrvn> yep.
[23:46:02] <LordKalma> void B(){await instance_of_a(); /* compute */}; ?
[23:46:05] <LordKalma> oh sorry
[23:46:10] <LordKalma> co_await, this is C++
[23:46:53] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:47:50] <mrvn> LordKalma: can btoh B and C co_wait on the A instance at the same time? Wouldn't the first co_wait in B make A generate the next value and C never sees it?
[23:48:08] *** Joins: jokoon (~eio@2a01:e0a:542:e160:80a9:a828:83d2:7884)
[23:48:24] <LordKalma> I don't know enough to say at this point :)
[23:48:44] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[23:50:18] <mrvn> Say A just generates primes: 2,3,5,7,11,... B adds 1 to the value, C doubles the value. The main loop co_waits for B and C alternating and prints the value.
[23:50:55] <mrvn> I think then B would get 2, 5, 11 and C would get 3, 7.
[23:52:36] *** Quits: dextercd1 (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4.1)
[23:53:18] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[23:53:35] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[23:55:11] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[23:57:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[23:59:59] *** Joins: rond_ (~rond_@90.254.208.190)
