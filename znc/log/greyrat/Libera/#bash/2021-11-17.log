[00:00:48] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[00:01:29] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:02:34] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:02:59] *** Joins: polve (~polve@twcitalia/polve)
[00:03:38] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[00:03:52] *** Quits: Masklin_Gurder (~joel@213-67-8-136-no206.tbcn.telia.com) (Quit: Konversation terminated!)
[00:04:01] *** Quits: holbrode (sid339826@tinside.irccloud.com) (Ping timeout: 268 seconds)
[00:04:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[00:04:21] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[00:05:12] *** Joins: pycurious (~Adium@user/pycurious)
[00:05:18] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[00:05:23] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Remote host closed the connection)
[00:05:48] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[00:07:40] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[00:12:23] *** Parts: brisky (~brisky@2a02:908:521:2060:bdf1:5e57:b353:7df4) ()
[00:13:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[00:14:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:15:04] <wiscii> does anybody know if it is possible to disable the "suggested fix" from shellcheck output ?
[00:16:47] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[00:17:46] <larryv> i dunno, koala_man, is it?
[00:18:11] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[00:18:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:31] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[00:18:57] <xx> wiscii: you can change the way the info is presented
[00:19:35] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 264 seconds)
[00:19:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:19:42] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Quit: iamGavinJ)
[00:20:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:20:37] <xx> and I agree that the default format displaying the suggested fix is annoying
[00:20:58] *** Joins: Scarecr0w (~Scarecr0w@user/scarecr0w)
[00:21:04] <xx> if it points out an issue to me, then *I* already know how to fix it, and don't need suggestions cluttering the view
[00:21:12] *** Joins: mr_ab (~nobody@bnc.ab.hl9.net)
[00:21:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:22:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[00:23:12] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[00:24:10] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:25:39] *** Quits: howdoi (uid224@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:26:07] *** Parts: cemerick (sid54985@uxbridge.irccloud.com) ()
[00:26:27] <sixwheeledbeast> if you what to ignore the error completely you can disable an "SC" ?
[00:26:37] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Remote host closed the connection)
[00:27:28] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[00:28:04] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[00:28:17] *** Joins: extern (~archer@80.246.130.235)
[00:29:11] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 250 seconds)
[00:29:56] <wiscii> xx: do you mean by -S severity ?
[00:29:59] <geirha> I just write correct code instead. That way it doesn't have to suggest fixes
[00:30:15] <xx> wiscii: I mean -f FORMAT
[00:30:26] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:30:44] <wiscii> oh -f format, i tried, not getting what i'm looking for
[00:31:04] <xx> geirha: yeah, but don't you receive scripts from other people that you have to review?
[00:32:25] <geirha> Obviously, you make THEM run it through shellcheck first then
[00:32:29] <wiscii> actually, i'm sure i saw a switch for turning off suggestions somewhere, was hoping somebody here may have known, i'll keep searchin'
[00:34:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:17] *** Joins: pycurious (~Adium@user/pycurious)
[00:35:36] <wiscii> pfft tty does the trick
[00:36:42] <wiscii> well, sort of, lots of over-lap with shellcheck
[00:36:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[00:37:38] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[00:37:38] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[00:38:13] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[00:38:15] <xx> wiscii: sounds like something that could easily be implemented if you want to send a PR
[00:38:39] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[00:38:55] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[00:39:13] <wiscii> xx: lol .. my haskel is as good as my ancient egyptian
[00:39:16] <lovetruth> !xargs
[00:39:17] <greybot> xargs(1) is dangerous (broken, exploitable, etc.) when reading non-NUL-delimited input. If you're working with filenames, use find's -exec [command] {} + instead. If you can get NUL-delimited output, use xargs -0. Otherwise, you probably want a while read or for loop instead.
[00:39:55] *** Joins: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282)
[00:40:20] <lopid> !find
[00:40:21] <greybot> http://mywiki.wooledge.org/UsingFind
[00:40:24] <lopid> that too
[00:40:28] *** Quits: martinus__ (~martin@53.31.201.77.rev.sfr.net) (Ping timeout: 256 seconds)
[00:40:33] <lovetruth> !find
[00:40:33] <greybot> http://mywiki.wooledge.org/UsingFind
[00:40:50] *** Joins: ro (~ro@user/ansible)
[00:42:16] <lovetruth> Thanks :)
[00:42:26] <ro> hi all. does anyone know an easy approach to estimate how much time it would take to create an archive without actually creating it?
[00:42:33] *** Joins: mankoff (~quassel@152.115.35.237)
[00:42:42] <twkm> nope.
[00:43:18] <twkm> google and microsoft can't figure it out either.
[00:44:38] <wiscii> xx: -f gcc works nice :) thanks
[00:44:58] <xx> ro: upper bound can be estimated by taking the worst possible disk read/write speeds, and making some assumptions about how long the compression algorithm takes to compress some uncompressible data
[00:45:46] <ro> @twkm: well... let me rephrase it... I know it's not very accurate, but I have a 10G file. which I would like to estimate the time it takes to archive that 1G file by attempting a 10x smaller file and then do the some calculations
[00:46:12] <ro> the problem is that I don't know of any tool that can return a parse-able output
[00:46:16] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:46:30] <ro> time <command> doesn't look like it's what I need
[00:46:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:47:04] <twkm> perhaps you want SECONDS.
[00:47:09] <ro> yes
[00:48:01] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[00:50:42] <twkm> bash's time uses TIMEFORMAT, though SECONDS might suffice.
[00:50:44] <ro> I find this really upsetting: https://dpaste.org/voeL/slim and I can't explain it
[00:50:56] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 245 seconds)
[00:52:06] <twkm> that bash's internal time (which is non-standard) differs from the external (also non-standard, but differently so).
[00:53:17] *** Joins: inomoz (~inomoz@176.59.125.26)
[00:53:22] <xx> time was invented by clock-makers to sell more clocks
[00:53:24] <twkm> (non-standard, bash's uses TIMEFORMAT but /bin/time uses an -f option)
[00:54:04] <twkm> i blame the sumerians.
[00:54:12] <xx> ro: /bin/time is an actual program, but bash has a `time` command built-in that gets executed instead of /bin/time
[00:54:26] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.3)
[00:54:31] <xx> also, don't use `which`
[00:54:39] *** Joins: rgrinberg (~textual@201.192.183.100)
[00:54:49] <ro> thanls, xx. that must be it
[00:54:49] *** Joins: Atque (~Atque@user/atque)
[00:56:19] <twkm> !which
[00:56:20] <greybot> which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
[00:57:04] <wiscii> !witch
[00:57:10] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9455:4a3b:6504:3d0c)
[00:57:27] <wiscii> heh .. no burnings here then
[00:57:34] <twkm> # which time
[00:57:35] <shbot> twkm: Sorry, I don't do whichcraft.
[00:57:45] <wiscii> rofl
[00:58:13] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 250 seconds)
[00:58:24] <xx> why's the bot so polite anyway, saying "Sorry"?
[00:59:05] <ro> thanks for the tips!
[00:59:11] <ro> I used to rely on which
[00:59:23] <wiscii> yeah, it should cast a spell of shock first
[00:59:28] *** Quits: Elon_Satoshi (~elon@user/elon-satoshi/x-4242282) (Ping timeout: 265 seconds)
[00:59:31] <twkm> open an issue.
[00:59:59] <wiscii> [FR] bot needs wand and spellbook
[01:00:15] <twkm> a nethack response might be nice, though cursing (see what i did there) might be better.
[01:02:08] <wiscii> roguelike.nethack://YASD: Wizard walks into floating-eye because use did not use .->
[01:02:17] <wiscii> user*
[01:03:44] <wiscii> roguelike.nethack://meanwhile .. naked monk escapes
[01:04:00] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:04:04] *** Joins: ztx (~ztx@user/ztx)
[01:06:53] *** Joins: son0p (~ff@181.136.122.143)
[01:08:09] *** Quits: mankoff (~quassel@152.115.35.237) (Quit: quit)
[01:08:35] *** Joins: mankoff (~quassel@152.115.35.237)
[01:10:18] *** Quits: mankoff (~quassel@152.115.35.237) (Client Quit)
[01:10:38] *** Joins: mankoff (~quassel@152.115.35.237)
[01:11:58] <ponyofdeath> hi, trying to fork a bunch of curl requests inside my bash script is there a good way to do that? is it just using the & or something better?
[01:12:22] <twkm> perhaps one of the parallel utilities.
[01:13:05] <twkm> also, ewww.
[01:13:27] <twkm> as an alternative perhaps aria2c would prove useful.
[01:16:32] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: https://gnu.org)
[01:16:46] <wiscii> i actually have a bashy question: it's about using booleans in a script
[01:17:02] <wiscii> multi-part question..
[01:17:12] *** Joins: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com)
[01:17:12] *** Quits: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[01:17:12] *** Joins: wuseman (wuseman@user/wuseman)
[01:17:43] <wiscii> first off, is using booleans something which scripts need ? I expect there is preferences
[01:18:04] *** Joins: Penguin666x (~Penguin66@217.138.205.135)
[01:18:34] <wiscii> then, do you quoye "", {} a boolean when you know it's only 0/1 and any other value is an error
[01:21:11] *** Quits: Penguin666 (~Penguin66@217.138.205.135) (Ping timeout: 250 seconds)
[01:21:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9455:4a3b:6504:3d0c) (Quit: Leaving)
[01:21:15] <xx> does bash even have booleans?
[01:21:47] <wiscii> not technically ..
[01:22:05] <wiscii> which i recently learnt here
[01:22:12] *** Joins: put_in (~put_somew@123.20.213.95)
[01:22:43] <larryv> bash has strings. strings and strings and strings
[01:22:52] *** Joins: akoana (~ah@user/akoana)
[01:22:57] *** Quits: rgrinberg (~textual@201.192.183.100) (Read error: Connection reset by peer)
[01:23:01] <wiscii> the problem is, my scripts are a bit niche .. so, trying to find good standard
[01:23:04] <larryv> and arrays of strings and associative arrays of strings
[01:23:16] *** Joins: rgrinberg (~textual@201.192.183.100)
[01:23:34] <larryv> i don't really know what "is using booleans something which scripts need" is asking.
[01:24:04] <kurahaupo> chilversc: [[ $path1 -ef $path2 ]]
[01:25:29] *** Quits: nyex (~Thunderbi@177.84.107.30) (Quit: nyex)
[01:25:54] <wiscii> larryv: i guess, in my script, i carry an `if` result "over" in a flag (bool) ..
[01:26:20] <wiscii> beyond the if itself
[01:26:33] <ponyofdeath> twkm: need the bash compatability, what is a more elegant way to do it :)
[01:27:25] <twkm> bash has just one way, &
[01:27:52] <xx> # a=$(true); b=$(false); [[ $a == $b ]] && echo "they are the same"
[01:27:53] <shbot> xx: they are the same
[01:27:59] <xx> wiscii: ^
[01:28:09] <twkm> wiscii: bash also has integers.
[01:29:07] <bobo> asdf
[01:29:26] <twkm> i tend to use the words, true and false, so i can write ''if $thing; then ...'' but i've also used plenty of 0 vs 1 and ''if ((thing)); then ...''.
[01:30:10] <twkm> for the latter some would declare -i thing, though i don't.
[01:30:36] <wiscii> twkm: exactly
[01:30:51] *** Joins: bud (~bud@user/bud)
[01:31:02] <wiscii> and shellcheck goes on and on about it
[01:31:16] <wiscii> 2086
[01:31:21] <bud> hello bash people!
[01:31:33] <wiscii> yo bud
[01:31:46] <bud> i have been working on a magical makefile the last couple of days.
[01:31:53] <yitz> !make
[01:31:54] <greybot> Make is not bash, and Makefiles are not scripts. Ask in ##workingset and read http://www.gnu.org/software/make/manual/ or the help documents of your version of make.
[01:31:59] <kurahaupo> ro: first you need to specify which archive format you're talking about. Then you can estimate a minimum bound simply by adding up the sizes of the files, and then dividinging by the minimum of the disk IO bandwidth of your system, and the compression performance of zlib on your system (if you're making a compressed archive)
[01:32:03] <bud> well, this is related
[01:32:18] <bud> my makefile makes a bash script project
[01:32:40] <bud> also the default for recepies in make is shell
[01:32:42] *** Quits: pushqrdx (~pushqrdx@156.199.234.5) (Ping timeout: 260 seconds)
[01:32:47] * wiscii poors glass of wine
[01:32:48] <yitz> If it's a bash question, we don't care how you run the shell script. Just skip to the shell question.
[01:33:09] <kurahaupo> ro: Or use: time tar -cjf /dev/null /path/to/save
[01:33:16] <yitz> "I have a computer than I use. It's on my office desk. I have a Logitech keyboard."
[01:33:54] <larryv> wiscii: you can't expect shellcheck to analyze the contents of your variables to determine whether it's "safe" to leave them unquoted. if you insist on using leaving expansions unquoted because you think it's okay, then add a directive
[01:34:08] <larryv> *on leaving
[01:34:28] <earnestly> And if you do remember to consider if set +f/-f needs to be in effect
[01:34:30] <twkm> perhaps bud will eventually get to the question/discussion.
[01:34:30] * xx expects shellcheck to become sentient one day
[01:34:33] <bud> i don't have any questions, i am a bash expert
[01:34:36] <koala_man> ShellCheck tries to analyze this, but it sucks at it
[01:34:39] *** Quits: rgrinberg (~textual@201.192.183.100) (Read error: Connection reset by peer)
[01:34:48] <larryv> ah there he is
[01:34:56] <ro> kurahaupo the problem is that if I have a huge file, I don't want it to just sit there until the archive finishes, but try out with a smaller file and multiply that by the times the real archives is bigger
[01:35:18] <twkm> smaller being the key.
[01:35:25] *** Quits: sazawal (~sazawal@122.161.93.207) (Quit: Leaving)
[01:35:39] <kurahaupo> !learn whichcraft https://burnthewhich.github.io/
[01:35:39] <greybot> OK, kurahaupo
[01:35:49] <wiscii> koala_man: :) nice too hear from you
[01:35:50] <xx> just because a 1GB file takes 10s to archive doesn't mean that a 1TB file will take 10000s
[01:35:51] <kurahaupo> !learn burnthewhich https://burnthewhich.github.io/
[01:35:51] <greybot> OK, kurahaupo
[01:35:58] *** Joins: rgrinberg (~textual@201.192.183.100)
[01:36:15] <wiscii> lol
[01:36:30] <bud> i love that song
[01:36:56] <wiscii> kurahaupo: can you set a dark theme on that page ?
[01:37:30] *** Joins: Inline (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:38:28] <kurahaupo> wiscii: I was more thinking of a "fire" theme
[01:38:36] <kurahaupo> like Dante's inferno
[01:38:47] <wiscii> rfl .. but @NIGHT
[01:39:01] <wiscii> now you're cooking!
[01:39:01] <bud> obviously helloween theme
[01:39:04] *** Joins: pushqrdx (~pushqrdx@108.61.208.226)
[01:39:33] <ponyofdeath> twkm: ok thank you!
[01:39:42] <bud> orange, deep purple and black, also, nice page.
[01:40:09] <wiscii> all black with fire from below
[01:40:30] <bud> and cats, maybe replace every cat word with a cat emoji would make it "pop!"
[01:40:59] <wiscii> lol
[01:41:30] <wiscii> and `which` .. spelt `witch`, with an initial alias
[01:41:48] <kurahaupo> ro: ((before=SECONDS)) ; tar -cjf /var/tmp/example.tar.bz2 sample_file ; (( after=SECONDS, elapsed=after-before, estimate=elapsed*10 )); echo "Should take about $estimate seconds"
[01:42:57] <ro> thanks kurahaupo. I'll try that
[01:42:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:46:17] *** Joins: gnoo (gnoo@user/gnoo)
[01:47:43] <kurahaupo> ro: the only catch is that it's integer arithmetic, so that estimate will be ±10 seconds
[01:48:19] <kurahaupo> but then the sample might not be representative, so the real error could be much larger anyway
[01:48:39] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:48:40] <ro> kurahaupo, I wish I knew of that SECONDS variable sooner :-D
[01:48:53] <wiscii> it depends on what you feed your computer ..
[01:49:19] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:49:27] *** Inline is now known as Guest1099
[01:49:32] <bud> is it shbang or shebang?
[01:49:43] <wiscii> oooff
[01:49:58] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Remote host closed the connection)
[01:50:24] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:50:28] <wiscii> i can imagine the `she` bit putting some antennas on buzz
[01:50:36] <bud> ro there is also EPOKREALTIME if you want more finegrained timings
[01:51:02] <geirha> works best if you spell it with CH instead of K though
[01:51:10] *** Inline_ is now known as Inline
[01:51:13] *** Quits: n4dir (~user@i5E86C530.versanet.de) (Remote host closed the connection)
[01:51:22] <bud> yeah
[01:51:34] <bud> EPOCHREALTYME
[01:51:43] <ro> geirha they both sound the same, anyway
[01:51:47] <ro> :-D
[01:52:02] <kurahaupo> POCHEMON
[01:52:16] <kurahaupo> THYME
[01:52:20] <ro> REAL THYME
[01:52:20] <wiscii> isn't 'shebang' already some dirivitive of hashbang #!
[01:52:29] <bud> REALGOODTIME
[01:52:37] <geirha> # declare -n EPOKREALTIME=EPOCHREALTIME; printf '%s\n' "$EPOKREALTIME" # thereifixedit
[01:52:38] <shbot> geirha: 1637101358.202971
[01:52:48] <kurahaupo> "The interpreter line"
[01:53:04] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:53:09] <bud> no one says hasbang, but i shbang, or shebang is common. i want to name a variable properly.
[01:53:15] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 250 seconds)
[01:53:22] <bud> the variable contains a, eh, shebang.
[01:53:30] <bud> is it shebang or shbang
[01:53:47] <kurahaupo> The line starts with a hash and a bang …
[01:54:10] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Ping timeout: 260 seconds)
[01:54:24] <wiscii> coud be PoundGang .. almost sounds a lot worse
[01:54:34] <wiscii> could*
[01:54:38] <kurahaupo> So of course it's "hashbang". If you're lazy you leave off the "ha"
[01:54:52] <wiscii> ah ... there it is
[01:55:06] <wiscii> so shbang
[01:55:22] <kurahaupo> "octothorpe exclamation mark"
[01:55:23] <bud> https://0x0.st/-RW-.png HashPling?
[01:55:28] <wiscii> and some horny tart chucked a 'e' in for fun!
[01:56:00] *** Joins: mikeputnam (~mikeputna@wilug/mikeputnam)
[01:56:02] <kurahaupo> wiscii: Inserting an e to make it pronouncible is allowed
[01:56:17] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[01:56:38] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:56:46] <bud> i will go with SHBANG
[01:56:51] <xx> bud: don't you feel like you're being watched all the time, having those eyes follow your cursor?
[01:56:55] <larryv> i've personally never seen "shbang" anywhere, ever
[01:57:12] <xx> never seen shbang either, have heard hashbang many times
[01:57:28] <kurahaupo> If you're writing it "#!" is the least ambiguous. The spelling in letters is entirely for the benefit of speaking allowed
[01:57:29] <bud> xx: i feel that even when i am not at the computer.
[01:57:33] <kurahaupo> aloud
[01:58:11] <bud> #! is not a valid variable name
[01:58:17] <xx> bud: same, but at least I now coated all the walls with tinfoil
[01:58:41] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:58:42] <xx> sadly can't get any more wifi reception in a different room
[01:58:43] <kurahaupo> bud: its formal name is "interpreter"
[01:59:20] <bud> yeah, that is not bad. hmm.
[01:59:23] <kurahaupo> bud: printf '#!%s\n' "$interpreter"
[01:59:52] <bud> https://0x0.st/-RWX.txt
[02:00:11] <kurahaupo> ie the line minus the #! is the interpreter (and its options, if any)
[02:00:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:01:09] <kurahaupo> Does Make actually do line continuation on single quoted strings? That's new to me
[02:01:19] <bud> .ONESHELL:
[02:01:22] <kurahaupo> otherwise that's a bug
[02:01:29] <bud> its an option
[02:01:56] <jcbjoe2021> bud: what we are you using? Looks old.
[02:02:05] <jcbjoe2021> Wm*
[02:02:09] <bud> default is no .ONESHELL, which actually interprets each line in a recepie in its own subshell
[02:02:12] <bud> i3wm
[02:02:19] <bud> it is cool
[02:03:03] <jcbjoe2021> Yea I use i3 doesn't look like that. What irc client you using bud ?
[02:03:10] <bud> pidgin
[02:03:20] <jcbjoe2021> Oh
[02:03:32] *** Quits: invra_ (~invra@mail.aletheianature.es) (Ping timeout: 246 seconds)
[02:03:34] <bud> i use the default i3 "theme" have just changed the font
[02:04:03] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[02:04:18] <twkm> so make and a de/wm being discussed anyway.
[02:04:39] <bud> they asked
[02:04:58] <bud> no fun allowed, bash only!
[02:05:05] <bud> :D
[02:05:22] * wiscii votes for relaxation
[02:05:32] <twkm> if that were true you'd already have been kicked.
[02:05:34] <bud> and .ONESHELL option in make is imo on topic
[02:05:56] <wiscii> tenuously ..
[02:06:15] <twkm> since it applies only to make, i don't see how.
[02:06:58] <bud> it applies to the shell portion of make. and affect how shell can be written and interpreted. and bash is often that shell.
[02:07:34] <bud> and a recepie in make is more related to the shell it is being written in then make.
[02:08:19] <bud> maybe this is why all makefiles suck and crap like meson and autotools does them all. it is not allowed to discuss the recepies.
[02:08:27] <twkm> and so it continues.
[02:08:54] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[02:09:15] *** Joins: alzgh (alzgh@user/alzgh)
[02:09:15] <twkm> perhaps you want ##workingset.
[02:09:27] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[02:09:51] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:12:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:12:39] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[02:13:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 250 seconds)
[02:15:17] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:16:16] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[02:16:28] <Bayes> is there a more or less easy way to set a dry run for my own bash script?
[02:16:48] *** Quits: mankoff (~quassel@152.115.35.237) (Ping timeout: 265 seconds)
[02:17:17] *** Joins: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[02:17:57] *** Quits: shokohsc861 (~shokohsc@63.16.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[02:18:04] <e36freak> Bayes: what does it do? what do you want to dry run?
[02:18:13] <e36freak> you can always put echo in front of commands you don't actually want to execute yet
[02:18:39] *** arooni_team_b is now known as arooni
[02:19:01] <Bayes> well it does a few things, mostly looping over arrays and calling some commands with them as arguments
[02:19:04] *** Quits: lovetruth (~lovetruth@188.27.142.20) (Quit: Leaving)
[02:19:56] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:20:23] *** Joins: alzgh (~alzgh@user/alzgh)
[02:21:32] <e36freak> putting echo in front of the commands you don't want to run yet is probably the easiest way, depending on what you mean by dry run
[02:21:37] <twkm> beware redirections, # deactivates them where echo will not.  if/until/when can be surprising too.
[02:22:09] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[02:22:46] <e36freak> # doesn't give you output if you want to see what it's doing though
[02:22:47] <shbot> e36freak: bash: doesnt give you output if you want to see what its: command not found
[02:22:47] <e36freak> so
[02:22:54] <e36freak> yes yes
[02:23:01] <Bayes> ok maybe I can switch echo on and off
[02:23:06] <twkm> nope.
[02:23:13] <wiscii> set -x
[02:23:22] <e36freak> set -x doesn't dry run though
[02:23:26] <e36freak> it just tells you what it's doing
[02:23:29] *** Joins: causaui1 (~causasui@192.241.228.169)
[02:23:30] <wiscii> :
[02:23:33] <twkm> and/or verbose ... ut that ^.
[02:23:48] <e36freak> you can always add a -d option to the script that sets say dry_run=1
[02:24:05] <e36freak> and then you can put if statements in the commands you want to be dry or not, to run the dry version or not based on if ((dry_run))
[02:24:10] <e36freak> if this is a regular thing you want to do
[02:24:38] <twkm> alternately careful use of bashdb.
[02:24:56] <Bayes> ok I think I can put a few ifs here and there
[02:24:59] <Bayes> another question
[02:25:19] <xx> Bayes: run the script under a new user
[02:25:58] <Bayes> basically my script has a few nested loops to go thru arrays and use the element combination to parametrize a command / call a function
[02:26:09] <xx> that way there's a lower chance you'll accidentally delete all of your $HOME
[02:27:06] <wiscii> set -ex is sort of the idea
[02:27:16] <twkm> ewww, errexit.
[02:27:24] <wiscii> olololol
[02:27:33] <larryv> the idea for ... what?
[02:27:39] <wiscii> always causes https://burnthewhich.github.io/which/broken-shellsreaction
[02:27:43] <twkm> not a dry-run ...
[02:27:55] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[02:28:04] <wiscii> sorry , my keyboard freaked out
[02:28:15] <e36freak> Bayes: ok?
[02:28:58] <wiscii> set -ex is ok, if you fly by the seat of your pants
[02:28:59] <Bayes> so I tend to run into situations like this with nested loops, but sometimes I don't want to use all nested combinations but some https://pastebin.com/4g2RaSVe
[02:28:59] <pasteban> Paste is available without ads on https://pastebin.com/raw/4g2RaSVe
[02:29:24] <Bayes> is there a structure in bash that's more amenable and flexible to this kind of tasks?
[02:29:31] <bud> i do something like this to dry run
[02:29:34] <Bayes> dictionaries, maps, etc
[02:29:38] <bud> dry_run=1
[02:29:47] <bud> ((dry_run)) || command ..
[02:30:24] <Bayes> bud without the last two .., right?
[02:30:37] <Bayes> or is that some obscure operator I'm totally missing?
[02:30:47] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Ping timeout: 268 seconds)
[02:30:48] *** Quits: az (az@user/azz) (Ping timeout: 268 seconds)
[02:30:53] <wiscii> .. is always .. etc ..
[02:30:55] <bud> yeah it was meant as "stuff" i usually do other commands then `command`
[02:31:08] <Bayes> lol ok sorry newb here ^_^
[02:31:18] <wiscii> \o/
[02:31:46] <wiscii> look up sl (linux)
[02:31:47] <bud> well there is also {1..99}
[02:31:53] <e36freak> Bayes: CMD should be an array as well, you're building a string, first of all
[02:32:01] <bud> so it is an obscure operator as well
[02:32:22] <e36freak> cmd=(myscript); cmd+=("$dataset" "$plsmodel")
[02:32:22] <e36freak> ec
[02:32:29] <e36freak> etc
[02:32:42] <wiscii> bud '[[:space:]]..[[:space:]].*
[02:32:53] <e36freak> there are also associative arrays if that'll help what you're trying to do (aka dictionaries or hashes)
[02:32:56] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[02:33:04] <Blondie101010> note that '..' is not always 'etc' :)
[02:33:15] <e36freak> # declare -A assoc; assoc["foo"]=bar; echo "${assoc[foo]}"
[02:33:16] <shbot> e36freak: bar
[02:33:25] <wiscii> ok, i take it back !!!!!!!!!!!!!!!!!!! ;-)
[02:33:33] *** Joins: n4dir (~user@i5E86C530.versanet.de)
[02:33:37] <Bayes> e36freak thanks, that might get me closer
[02:33:37] <wiscii> bud got the idea :))
[02:33:59] <wiscii> i mean Bayes got the idea
[02:34:03] <e36freak> Bayes: definitely fix the string instead of array thing, no matter which way you go
[02:34:38] *** Joins: steam (~steam@user/steam)
[02:34:39] <Bayes> e36freak fix the string? as om cmd being an array?
[02:34:57] <Bayes> as *in
[02:34:59] <e36freak> yes, cmd needs to be an array, you're building a string there
[02:35:05] <e36freak> !faq complex
[02:35:05] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[02:35:06] <e36freak> to see why
[02:35:09] <larryv> hope submit_job isn't expecting the whole command line to be shoved into that third arg
[02:35:28] <Bayes> larryv maybe it does XD
[02:35:37] * larryv twitches
[02:35:52] <Bayes> larryv cause actually you call slurm something something --wrap "PUT A COMMAND HERE TO RUN REMOTELY"
[02:36:01] <bud> commands in arrays and strings. are you passing a command as an option to another command?
[02:36:07] <Bayes> so it's a command that calls another command that .... all the way down to the rabbit hole
[02:36:22] <bud> many commands support --
[02:37:39] <Bayes> I'll get better at this... eventually
[02:38:21] <bud> or that is what i did in my own scripts that takes a command to another command as an argument
[02:38:34] <Bayes> what does -- do ?
[02:38:55] <bud> so command --option1 arg1 -- some_other_cmd --optionA argA
[02:39:08] <wiscii> usually makes all further arguments non-option arguments
[02:39:23] <Bayes> ah
[02:39:28] <wiscii> oh .. yeah, its complicated
[02:39:38] <bud> will make some_other_cmd be $1 and --optionA be $2 , i think this is default in getopt
[02:39:44] <wiscii> '--option' or '-- etc' ?
[02:40:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:40:02] <bud> which in turn means that you could pass "$@" (which is an array)
[02:40:07] <wiscii> Bayes: ^
[02:40:11] <Bayes> ok I've heard too much and my brain is about to collapse very soon :P
[02:40:20] <larryv> fair enough
[02:40:23] *** Joins: cliluw (~cliluw@47.147.80.149)
[02:40:35] <Bayes> was bash written by the evil btw?
[02:40:43] <bud> and that array "$@" is: (some_other_cmd --optionA argA)
[02:40:52] <Bayes> ^ ah that makes sense
[02:40:56] <wiscii> Bayes: do you mean somethhing like '-h|--help' or do you mean 'set -- foo' ?
[02:41:09] <bud> Bayes: take it easy with the racism
[02:41:28] <Bayes> bud? wut? I didn't try to say anything offensive
[02:41:30] <Bayes> o.o
[02:41:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:41:47] <bud> bash was written by a people of color
[02:42:10] <Bayes> oh I didn't know, I'm very sorry if that sounded offensive at all
[02:42:14] <wiscii>  bud nobody mentioned any racism ..
[02:42:23] *** Quits: podeni (~podeni@188.27.129.177) (Ping timeout: 264 seconds)
[02:42:38] <Bayes> I just meant because all the things I've heard today that were not obvious to me at first sight
[02:42:49] <Bayes> but I'll definitely get better the more I use it and learn it
[02:42:52] <Blondie101010> no the presumption of racism was the most racist comment so far
[02:42:58] <wiscii> Bayes: relax ..
[02:43:09] <twkm> the guide in the topic might prove useful.
[02:43:17] <cliluw> I'm converting the lines in a variable into an array using mapfile -t list_arr < <(echo "$list")
[02:43:17] <cliluw> . One problem is that I get a one-element array when the variable is an empty string. I want to get a 0-element array.
[02:43:54] <Bayes> twkm yeah those ar ethe resources I have handy in my bookmarks
[02:44:10] <Bayes> in fact shellcheck has been of real help
[02:44:23] *** Joins: igemnace (~ian@user/igemnace)
[02:44:25] *** Joins: thysermip (~thysermip@189.111.102.239)
[02:44:34] <Bayes> cause it sometimes catches some of the "subtleties" that totally slip
[02:44:44] <wiscii> yup
[02:44:57] <wiscii> missing a fi .. shellcheck ;-)
[02:45:08] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[02:45:10] <Bayes> anyway thanks everyone for your help, I'm gonna call a day
[02:45:17] <Bayes> o/
[02:45:25] <e36freak> cliluw: the easiest way to do that is just check first.
[02:45:27] *** Quits: thysermip (~thysermip@189.111.102.239) (Client Quit)
[02:45:42] <e36freak> cliluw: if [[ -n $list ]]; then mapfile -t list_arr <<<"$list"; else list_arr=(); fi
[02:45:59] <bud> be sure to look up the shellcheck error codes on the wiki.
[02:46:03] <wiscii> bayes: see ya later
[02:46:48] <cliluw> e36freak: Thanks, mate. I was hoping that there would be a nice way to do it in Bash. I didn't even realize I could use "<<<" here.
[02:47:51] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:48:22] <e36freak> cliluw: mapfile doesn't have an option to discard empty lines or anything, so that's probably the best you're gonna get
[02:48:40] <e36freak> nothing wrong with adding an if statement
[02:49:26] <bud> mapfile has -t
[02:49:30] *** Joins: pushqrdx_ (~pushqrdx@156.199.234.5)
[02:49:34] <bud> Remove a trailing DELIM from each line read (default newline)
[02:49:35] <Blondie101010> or logical operators if you prefer that approach
[02:49:38] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[02:49:45] <e36freak> bud: which discards the newline character itself, but will still create an empty array element for a blank line
[02:49:59] <bud> but in my experience it only works with newline other DELIM is still included
[02:50:15] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:51:00] <e36freak> # mapfile -d . -t foo <<<'foo.bar.baz'; printf '%s\n' "${foo[@]}"
[02:51:01] <shbot> e36freak: foo
[02:51:01] <shbot> e36freak: bar
[02:51:01] <shbot> e36freak: baz
[02:51:06] *** Quits: pushqrdx (~pushqrdx@108.61.208.226) (Ping timeout: 260 seconds)
[02:51:07] <e36freak> removes the . just fine
[02:51:29] *** Joins: howdoi (uid224@lymington.irccloud.com)
[02:51:40] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[02:52:05] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:52:34] <twkm> cliluw: that is a nice way.
[02:52:36] <bud> e36freak: https://0x0.st/-RWe.png <- see the blank last line
[02:53:16] <e36freak> bud: yes, because now there's a terminating newline which is not considered a delimiter and is therefore part of the array element
[02:53:25] <e36freak> it removes the delimiter, it doesn't remove the delimiter *and* newlines
[02:53:46] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[02:54:15] <e36freak> try: mapfile -d . -t arr < <(printf %s 'foo.bar.baz'); printf '%s\n' "${arr[@]}"
[02:54:28] <e36freak> that's the here string adding a trailing newline, not mapfile
[02:54:33] <bud> https://0x0.st/-RW2.png whatever
[02:55:18] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 260 seconds)
[02:56:30] <wiscii> this is INSANE: https://burnthewhich.github.io/which/broken-shells
[02:57:26] <xx> not really
[02:57:31] <larryv> what about it
[02:58:19] <wiscii> well, why does it define a function as a result of `if` ?
[02:58:32] <e36freak> why not?
[02:58:44] <wiscii> yep i got it
[02:58:57] <wiscii> it is INSANE and i now like it!
[02:59:05] <larryv> as opposed to what?
[02:59:12] <e36freak> if (your command is broken) then [overwrite command with new one]
[02:59:15] <e36freak> that's all it's doing
[02:59:24] <Blondie101010> defining functions conditionally causes very bad code
[02:59:31] <bud> i_need() { if .. else
[02:59:33] <e36freak> in most cases yes
[02:59:49] <e36freak> this is a rare exception where it might make sense
[03:00:43] <wiscii> it is so #~'@ rare that it hoofed me in the lower nose .. but now i see it, i really like it
[03:01:08] *** Joins: causaui1 (~causasui@192.241.228.169)
[03:03:53] *** Quits: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[03:04:27] *** Joins: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net)
[03:05:07] <wiscii> would that be a pure bashism ?
[03:05:17] <larryv> would what be
[03:05:37] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[03:05:44] <wiscii> conditionally, declare a function
[03:06:19] <larryv> no
[03:06:27] * wiscii tests
[03:06:31] <larryv> given that the whole point of this page is to present a workaround for wonky shells like Solaris sh and Busybox sh
[03:06:40] <larryv> it would odd if it were
[03:07:07] <wiscii> so, now you are writing non-bash ?
[03:07:57] <larryv> er... yes?
[03:08:41] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:08:48] <e36freak> this channel also supports POSIX sh
[03:09:57] *** Joins: sinaowolabi (~SinaOwola@41.58.239.177)
[03:12:33] * wiscii learnt something new
[03:13:23] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:14:47] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 264 seconds)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:19:09] *** Quits: tex (~super@user/dix) (Ping timeout: 265 seconds)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:15] *** Quits: magla (~gelignite@55d42279.access.ecotel.net) (Quit: Stay safe!)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:28:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:28:21] <knstn> !:
[03:28:21] <greybot> : is a builtin identical to the 'true' builtin; they do nothing and have an exit status of 0
[03:28:30] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[03:28:43] *** Joins: rcernin (~rcernin@124.190.139.235)
[03:30:11] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:30:28] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:33:26] <wiscii> s/they do/it does/
[03:33:43] <wiscii> s/have/has/
[03:35:09] <emanuele6> wiscii: : and true
[03:35:31] <wiscii> :
[03:35:34] *** Quits: pushqrdx_ (~pushqrdx@156.199.234.5) (Ping timeout: 256 seconds)
[03:36:14] *** Joins: causaui1 (~causasui@192.241.228.169)
[03:36:23] *** Joins: pycurious (~Adium@user/pycurious)
[03:36:27] <wiscii> is there a sh-false ?
[03:36:43] <wiscii> lol
[03:36:53] <larryv> …''false''?
[03:37:02] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 265 seconds)
[03:37:25] <wiscii> POSIX `false`
[03:37:50] <larryv> false is required by POSIX
[03:37:52] <larryv> so yeah
[03:37:55] <emanuele6> https://pubs.opengroup.org/onlinepubs/9699919799/utilities/false.html
[03:39:09] <wiscii> is the "false utility" a builtin to sh ?
[03:39:24] <larryv> it's not required to be. neither is true
[03:39:45] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[03:39:59] *** Joins: sublim20 (~sublim20@user/sublim20)
[03:40:03] <wiscii> i have something which may be of curiosity to you
[03:40:04] <geirha> false is very complicated to implement though, so I'm sure many sh implementations avoid implementing it
[03:40:24] *** Joins: SpiderPig (~matt@047-132-233-190.res.spectrum.com)
[03:40:25] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[03:40:54] <wiscii> https://github.com/OpenVPN/easy-rsa/issues/467
[03:40:54] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[03:41:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:41:16] <wiscii> the issue there is that mksh is 2013 and w11 is 2021 ..
[03:41:17] *** Joins: pushqrdx (~pushqrdx@108.61.208.226)
[03:41:34] <wiscii> i don't want answers .. but you may be curious
[03:41:58] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[03:42:34] *** Joins: ano (~ano@user/ano)
[03:45:20] <geirha> cute, so the script was relying on a bug
[03:45:28] <wiscii> more or less
[03:45:43] <wiscii> they did not know though
[03:46:12] <wiscii> more interesting, is that W11 seems to be offering more low level functions ..
[03:46:39] <wiscii> readlink on w7 is a hard fail
[03:46:54] *** Joins: irc_user (uid423822@lymington.irccloud.com)
[03:48:16] *** Joins: samy1028 (~samy1028@068-184-115-031.res.spectrum.com)
[03:48:31] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[03:49:59] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:50:19] *** Joins: alzgh (~alzgh@user/alzgh)
[03:51:37] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[03:52:08] *** Joins: ferdna (~ferdna@user/ferdna)
[03:52:36] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:56:37] *** Joins: sublim20 (~sublim20@user/sublim20)
[03:57:18] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:58:46] *** Quits: pushqrdx (~pushqrdx@108.61.208.226) (Ping timeout: 260 seconds)
[03:58:51] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[03:58:52] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:59:12] *** Joins: ano (~ano@user/ano)
[04:00:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[04:00:28] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:01:31] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[04:09:53] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[04:10:00] <quazimodo> what does & mean in 2>&1
[04:10:29] <quazimodo> have I misunderstood and the operator is actually ">&" ?
[04:10:33] <larryv> !>&
[04:10:33] <greybot> >&word where word is a number or - is FD duplication or closing. A plain >& or >&word (word not numeric or -) is just like &> -- cmd >& file is equivalent to cmd >file 2>&1 but the former is bash- and csh-only.
[04:11:27] <quazimodo> yeah ok >& is by itself an operator
[04:11:28] <quazimodo> cooly thank you
[04:13:00] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:13:34] *** Quits: ro (~ro@user/ansible) (Ping timeout: 256 seconds)
[04:14:21] *** Quits: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr) (Quit: leaving)
[04:14:25] <quazimodo> this is weird; my_command 2>&1 > foo.yml results in empty foo.yml file, but val="$(my_command 2>&1)"; echo "$val" > foo.yml; results in a correct foo.yml
[04:14:49] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[04:15:07] <quazimodo> having a hard time understanding why this may be, could the output of 'my_command' be such that it breaks this piping? (seems dubious to me)
[04:15:48] *** Joins: earendel (uid498179@user/earendel)
[04:17:29] *** Joins: ravan__ (~ravan@user/ravan)
[04:17:56] <larryv> !faq 55 > quazimodo
[04:17:56] <greybot> quazimodo: https://mywiki.wooledge.org/BashFAQ/055 -- Tell me all about 2>&1 -- what's the difference between 2>&1 >foo and >foo 2>&1, and when do I use which?
[04:18:37] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[04:18:42] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[04:19:14] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[04:20:23] <quazimodo> thank you larryv
[04:20:41] <quazimodo> you may have one music https://open.spotify.com/track/7hcT9SzRoL7OanxeGqLIJy?si=d53117289b384a6c
[04:20:50] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[04:21:59] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 265 seconds)
[04:22:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:23:26] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[04:23:43] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[04:23:51] <quazimodo> in both cases though the foo.yml is still empty
[04:26:39] *** Quits: wuseman (wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[04:29:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:29:36] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[04:29:51] <emanuele6> !redirvar
[04:29:57] <emanuele6> !redir2var
[04:29:57] <greybot> Try thinking of FDs as variables. Change > into = and >& into =$. 0=keyboard; 1=terminal; 2=logfile; command 2>&1 1>otherlog; does 2=$1 (so 2=terminal) and 1=otherlog. At the end, command's 0=keyboard, 1=otherlog and 2=terminal
[04:30:01] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[04:30:02] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[04:30:02] *** Joins: wuseman (~wuseman@user/wuseman)
[04:31:31] *** Joins: tr0n (~tr0n@181.225.45.160)
[04:31:39] *** Joins: Bhavuk (~BTaneja@223.178.153.197)
[04:31:45] *** Quits: xx (~xx@user/xx) (Quit: xx)
[04:32:45] *** Joins: transhumanist (~hiken@2601:196:8800:35f0:74e5:d714:2825:4b9b)
[04:33:46] * wiscii just evaporated >&~
[04:37:32] <larryv> quazimodo: is my_command outputting to stdout or stderr or what
[04:38:07] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[04:40:00] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[04:42:02] <earendel> 2(stderr) is redirected to same stream/fd as 1 is/will be
[04:44:01] <earendel> !&
[04:44:01] <greybot> If you put the control operator & at the end of a command, e.g. ''command args &'', the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0. Pid of the last backgrounded command is available via the special variable $!
[04:45:05] <earendel> !>&
[04:45:05] <greybot> >&word where word is a number or - is FD duplication or closing. A plain >& or >&word (word not numeric or -) is just like &> -- cmd >& file is equivalent to cmd >file 2>&1 but the former is bash- and csh-only.
[04:45:12] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:47:09] <emanuele6> what do you mean with "will be"?
[04:47:19] <earendel> # words=hello; echo world >>&words;  echo $words;
[04:47:19] <shbot> earendel: bash: syntax error near unexpected token `&'
[04:48:39] <earendel> will be until it reaches EOT or EOF
[04:49:09] * wiscii huh
[04:49:21] * emanuele6 huh
[04:49:47] <larryv> no idea what you're trying to demonstrate with that command, given that it's broken.
[04:51:04] <wiscii> complicated stuff ..
[04:51:39] <quazimodo> yeah but more importantly
[04:52:10] <quazimodo> why would "my_command > file" result in an empty file while "var=$(my_command); echo $var > file" result in a file that has content
[04:52:18] <quazimodo> it's weird a/f
[04:52:30] *** Joins: pycurious (~Adium@user/pycurious)
[04:52:50] <larryv> those are different. don't just drop parts of your original commands
[04:53:10] <wiscii> perhaps the conditions to satisfy the requests are met differently
[04:54:50] *** Joins: xx (~xx@user/xx)
[04:55:04] <earendel> file descriptor is actually. its like data flowing into and out some process. those streams push sth into a FIFO first in first out buffer.. from  which some other process can pull out data as needed. when you have a | b | c all 3 procs will run in parallel. so the data stream exposed by a will be read by b, and can be transformed, evaluated in chunks. (parts of the whole). which is what makes a stream. like (video or computing some hash)
[04:56:01] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:57:24] <larryv> quazimodo: so you're saying that neither 'my_command 2>&1 >foo.yml' nor 'my_command >foo.yml 2>&1' puts anything into foo.yml?
[04:57:36] <quazimodo> larryv: practically speaking they're the same, the redirection of stderr isn't making a difference so at this point it's not capturing the stdout into a file. All I can think is that the script is somehow checking what redirects are in place and is then being an ass
[04:58:04] <quazimodo> larryv: no, neither are. I'm starting to think this could be because of f*&@ing snap craft
[04:58:08] <quazimodo> snap packages do weird stuff
[04:58:31] <quazimodo> the 'stdout' could be inside the snap container for all I know, thus not writing stuff as it should
[04:59:02] <quazimodo> snap surprises me with weirdness all the time... i wonder how anyone's supposed to use it without all these surprises
[05:00:58] <emanuele6> well, it is not much of a surprise that  2>&1 >foo.yml  does not write my_command's stderr to foo.yml
[05:01:08] <earendel> not sure the order  matters, but in your case the errors will be directed into the same sink as stdout.  could be you need to  > file 2>&1  ..
[05:01:18] <wiscii> # rand
[05:01:19] <shbot> wiscii: bash: rand: command not found
[05:02:00] <earendel> # echo ((RANDOM % 6))
[05:02:01] <shbot> earendel: bash: syntax error near unexpected token `('
[05:02:05] <quazimodo> i suspect that the FD is mixed up, the binary lives inside a snap container
[05:02:10] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:02:35] <earendel> # echo $RANDOM
[05:02:36] <shbot> earendel: 12035
[05:03:02] <earendel> # x=((RANDOM%6)); echo $x;
[05:03:03] <shbot> earendel: bash: syntax error near unexpected token `('
[05:03:09] <wiscii> # sleep goober
[05:03:10] <shbot> wiscii: bash: sleep: goober: bad sleep interval
[05:03:20] <earendel> what.
[05:03:46] <earendel> what does it want. isnt it supposed to to arithmetics inside (( ))
[05:03:55] <wiscii> i forgot to declare
[05:03:59] <larryv> # echo "$((RANDOM % 6))"
[05:04:00] <shbot> larryv: 1
[05:04:00] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[05:04:33] <larryv> !$(( > earendel
[05:04:33] <greybot> earendel: $((...)) is an arithmetic substitution. After doing the arithmetic, the whole thing is replaced by the value of the expression. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[05:04:41] <earendel> hm. so .. (( )) will just give some exit status>?
[05:04:45] <larryv> yes.
[05:04:54] <earendel> alright.
[05:05:29] <wiscii> it does the arithmatic first, and then it expands the variables ;-)
[05:07:09] *** Quits: n4dir (~user@i5E86C530.versanet.de) (Remote host closed the connection)
[05:08:18] *** Joins: causaui1 (~causasui@192.241.228.169)
[05:08:53] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 250 seconds)
[05:09:18] <wiscii> huh ..
[05:09:22] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[05:10:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:11:33] <wiscii> you can't do the arithmatic until you have expanded the variables ..
[05:12:00] <larryv> ?
[05:13:13] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[05:13:18] <wiscii> larryv: i am looking at greybot's advice with a crooked eye
[05:13:26] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[05:14:07] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:14:08] <larryv> what's wrong with it
[05:14:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:14:50] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 260 seconds)
[05:14:51] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[05:15:34] <wiscii> larryv: logically, it appears to be backward
[05:16:15] <wiscii> i think it is missing a step in fact
[05:16:40] *** Joins: roadie` (~user@2a02:8108:ec0:1427:cc82:8186:142:244e)
[05:16:42] <larryv> which is?
[05:16:46] *** Joins: hendry (~hendry@210.23.22.8)
[05:17:02] <wiscii> the sustitution step
[05:17:03] <larryv> i don't see what's wrong with it. the arithmetic within $((...)) is performed, and then the result is substituted for $((...))
[05:18:29] <larryv> "the whole thing [ the $((...)) ] is replaced by the value of the expression" < this is the substitution
[05:19:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:cc82:8186:142:244e) (Ping timeout: 268 seconds)
[05:22:42] <wiscii> yeah .. depends on the audience
[05:23:18] <wiscii> !$((
[05:23:18] <greybot> $((...)) is an arithmetic substitution. After doing the arithmetic, the whole thing is replaced by the value of the expression. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[05:24:02] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:24:24] <wiscii> "after doing the substituting then the arithmatic, the whole .. etc
[05:24:49] <larryv> the substitution in question is the $((...))
[05:24:58] <wiscii> yes
[05:25:10] <ormaaj> pf45 - infrequently asked q.
[05:25:18] <wiscii> but because it is different to normal subs
[05:25:22] <larryv> i don't think there's any need to list out everything that goes on as part of "arithmetic"
[05:25:35] <larryv> otherwise that part would go on for a little while
[05:25:50] <wiscii> ok
[05:27:11] <wiscii> for my time, just add a little extra for the unwary that expansion inside $(( is quite unique , if you feel like it
[05:28:23] <ormaaj> not unique. applies to (( as well.
[05:28:44] <wiscii> in sh ?
[05:28:52] <wiscii> #or POSIX ?
[05:30:01] <wiscii> no no no ..
[05:30:20] <wiscii> some misunderstanding here
[05:30:57] <ormaaj> in implementations with ((
[05:31:03] <wiscii> $(( is arithmetic .. (( is only presedence
[05:31:42] <larryv> !((
[05:31:42] <greybot> ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See http://mywiki.wooledge.org/ArithmeticExpression
[05:32:26] *** Joins: rcernin (~rcernin@124.190.139.235)
[05:32:31] <wiscii> ok .. but not '((' but '$(('
[05:32:47] <wiscii> am i  missing a lesson ?
[05:33:33] <ormaaj> could be. not sure a
[05:33:42] *** Joins: yeirr (~yeirr@user/yeirr)
[05:33:47] <ormaaj> what's confusing...
[05:34:08] <gordonfish> # echo "1 + 2 = $(( 1 + 2)) !"
[05:34:09] <shbot> gordonfish: 1 + 2 = 3 !
[05:34:23] <wiscii> am i  missing a lesson ?99' have meaning in bash ?
[05:34:29] *** Quits: BH23 (~BH23@santoroj.plus.com) (Ping timeout: 265 seconds)
[05:34:53] <larryv> i don't really know what's going on at this point
[05:35:07] <wiscii> neither do i .. reset
[05:35:27] <gordonfish> # if (( 1 + 2 == 3 )); then echo "One plus two is indeed three."; else echo "Try another universe."; fi
[05:35:28] <shbot> gordonfish: One plus two is indeed three.
[05:36:08] <wiscii> gordonfish: that *is* a bashism , yes ?
[05:36:29] <emanuele6> (( 1 + 2 == 3 )) is a bashism, yes.
[05:36:34] <wiscii> of course it is
[05:36:41] <wiscii> cool
[05:36:59] *** Parts: transhumanist (~hiken@2601:196:8800:35f0:74e5:d714:2825:4b9b) ()
[05:37:55] <wiscii> ah .. i see my mistake: greybot explicitly says "((" not "$(("
[05:38:09] <emanuele6> [ "$(( 1 + 2 == 3 ))" != 0 ] or [ "$(( 1 + 2 ))" = 3 ] are how you would perform the same check in POSIX sh (you may use -eq/-ne instead of !=/= if you want)
[05:38:17] <wiscii> # (( fred + ethel ))
[05:38:18] <shbot> wiscii: no output
[05:38:52] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[05:39:48] <yitz> [ "$(( 1 + 2 ))" -eq 3 ]
[05:39:51] <wiscii> f=1; e=2; (( f + e ))
[05:39:57] <emanuele6> another alternative could be: (exit "$(( 1 + 2 == 3 ))")
[05:40:02] <wiscii> # f=1; e=2; (( f + e ))
[05:40:04] <shbot> wiscii: no output
[05:40:09] <emanuele6> err, nevermind
[05:40:18] <emanuele6> that is incorrect
[05:40:21] <wiscii> lol .. i will review
[05:40:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:40:54] *** Joins: pycurious (~Adium@user/pycurious)
[05:40:57] <larryv> # f=1; e=2; (( f + e )); echo "$?"
[05:40:57] <shbot> larryv: 0
[05:40:59] <larryv> # f=0; e=0; (( f + e )); echo "$?"
[05:41:00] <shbot> larryv: 1
[05:41:51] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[05:42:00] *** Quits: zoe (~zoe@fsf/member/zoe) (Remote host closed the connection)
[05:42:01] <wiscii> that is even worse than mine, are you drunk ?
[05:42:40] <ormaaj> someone asked whether it does anything but expand the arithmetic, which it does because there's a pre-expansion step, so i pointed to pf45 (which actually covers two issues). and seems there's still confusion. $(( and (( are identical. (you can mostly ignore the latter if posix)
[05:42:41] <wiscii> # f=1; e=2; echo (( f + e ))
[05:42:41] <shbot> wiscii: bash: syntax error near unexpected token `('
[05:43:32] <emanuele6> (()) is not a substitution...
[05:43:55] <larryv> wiscii: mine are showing the effect of ((...)) while yours don't show anything at all, so i'm not sure what you're going on about
[05:44:14] <ormaaj> (()) is compound.
[05:45:01] *** Joins: causaui1 (~causasui@192.241.228.169)
[05:45:20] <larryv> it has an exit status, it doesn't substitute to anything
[05:45:48] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:46:03] *** Joins: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net)
[05:46:25] <ormaaj> it's only relevent to posix insofar as posix mentions its existence and (( is a posix reserved word.
[05:46:27] * wiscii is stumped
[05:46:44] <emanuele6> ((...)) runs an arithmetic expressions and returns 0 if the result of the expression is not 0, otherwise it returns 1
[05:47:01] <ormaaj> yes
[05:47:12] <emanuele6> $((...)) is a substitution that runs an arithmetic expressions and gets substituted with the result of the expression in decimal form
[05:47:44] <wiscii> ah-ha
[05:47:59] <ormaaj> !posixlet
[05:47:59] <greybot> case $(command -v let) in let) ;; *) let() { while ${2+\:} return "$((! ( ${1:-0} )))"; do shift; done; }; esac
[05:48:11] <wiscii> the "result of the expression in decimal form" is crucial
[05:48:14] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:48:23] <emanuele6> how?
[05:48:46] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[05:49:28] <wiscii> not all of us speak hex .. so we require the "result" in a form we can undeerstand
[05:49:58] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[05:50:09] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[05:50:22] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:50:58] *** Joins: rtypo (~alex@user/rtypo)
[05:52:01] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[05:54:14] <wiscii> bash (( vs sh $(( .. note-worthy ?
[05:54:19] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:54:20] *** Joins: alzgh (~alzgh@user/alzgh)
[05:54:39] <larryv> what does hex have to do with anything
[05:55:06] <wiscii> i'm gonna check wool .. i must be missing some thing
[05:56:14] *** Quits: sinaowolabi (~SinaOwola@41.58.239.177) (Ping timeout: 265 seconds)
[05:58:14] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[05:59:03] <e36freak> wiscii: what do you mean noteworthy? they do two different things
[06:00:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:00:45] <earendel> # echo "$(( 4 & 2 ))"
[06:00:45] <shbot> earendel: 0
[06:01:09] <earendel> # echo "$(( 4 && 2 ))"
[06:01:10] <shbot> earendel: 1
[06:01:38] <earendel> # echo "$(( 4 || 2 ))"
[06:01:39] <shbot> earendel: 1
[06:01:49] <earendel> # echo "$(( 4 | 2 ))"
[06:01:49] <shbot> earendel: 6
[06:03:03] <earendel> # echo "$(( 4 | 2 << 1 ))"
[06:03:04] <shbot> earendel: 4
[06:03:11] <earendel> # echo "$(( 4 | 2 >> 1 ))"
[06:03:12] <shbot> earendel: 5
[06:03:29] <wiscii> ehhhh-hem ..
[06:03:49] <earendel> # echo "$(( (4 | 2) << 1 ))"
[06:03:49] <shbot> earendel: 12
[06:04:02] <earendel> # echo "$(( (4 | 2) >> 1 ))"
[06:04:03] <shbot> earendel: 3
[06:04:11] <xx> earendel: you can also talk to the bot privately
[06:04:27] *** Joins: pycurious (~Adium@user/pycurious)
[06:04:55] <emanuele6> or use your shell
[06:05:14] <xx> using own shell is dangerous
[06:05:24] <earendel> yup. thanks.
[06:05:36] <ormaaj> What specifically are you trying to figure out? spamming a bunch of unrelated stuff here for the bot is confusing.
[06:06:02] <wiscii> we have alll considered greybots nocturnal activities
[06:06:17] <earendel> but then you couldnt even by chance join me .. showing things
[06:06:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[06:06:51] <earendel> pardon for spamming.
[06:06:56] <wiscii> earendel: relax .. everybody has some fun with the bot
[06:07:04] * earendel maintains shruberies
[06:07:16] <earendel> thank you.
[06:07:43] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:07:44] <wiscii> no problem at all , freind
[06:08:03] <earendel> :3
[06:08:08] <wiscii> i abuse the bot regularly
[06:08:20] <wiscii> ;-)
[06:09:36] *** Quits: guardian (~guardian@planet-d.net) (Remote host closed the connection)
[06:10:20] <earendel> would you sell shbot?
[06:10:45] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[06:10:57] <ormaaj> Testing with your own shell isn't that dangerous. Only if you know too little to not have it run something destructive which isn't very hard to avoid.
[06:10:59] <wiscii> could you sell shbot ?
[06:11:33] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[06:12:41] <wiscii> # rm -rf /
[06:12:48] <shbot> wiscii: no output within the time limit
[06:13:15] <wiscii> bot is too smart ;-)
[06:13:35] <wiscii> # rm -rf /*
[06:13:40] <xx> wiscii: it isn't, it actually deleted all of it
[06:13:42] <shbot> wiscii: no output within the time limit
[06:13:52] <emanuele6> what did you expect?
[06:13:59] <wiscii> oh no !
[06:14:03] <earendel> you're rigt.i feel like 13 again <3
[06:14:04] <wiscii> wtp
[06:14:26] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[06:14:40] *** Joins: rcernin (~rcernin@124.190.139.235)
[06:15:23] <wiscii> you have a backup ?
[06:15:24] <earendel> back to the basics. o man. o wooman. have you read elements by euklid? look at the first page. and where can we talk about it
[06:15:46] *** Quits: reallymemorable (~reallymem@pool-108-46-75-178.nycmny.fios.verizon.net) (Quit: Leaving...)
[06:15:52] <xx> what's the `rm` that shbot is actually using? it doesn't support -v
[06:15:55] <wiscii> r-r-r-r-oflll
[06:16:15] <emanuele6> # type rm
[06:16:16] <shbot> emanuele6: rm is a shell builtin
[06:16:28] <emanuele6> xx: the loadable builtin example
[06:17:16] <emanuele6> xx: https://git.savannah.gnu.org/cgit/bash.git/tree/examples/loadables/rm.c
[06:18:47] <larryv> but:
[06:18:52] <larryv> 5# type rm
[06:18:53] <shbot> larryv: rm is /bin/rm
[06:19:28] <ormaaj> many of the examples are quite poor or at least very incomplete.
[06:19:49] * wiscii presses up button slowly .. until # rm -rf /*
[06:20:28] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:21:28] <wiscii> # rm -rf /*
[06:21:34] <shbot> wiscii: no output within the time limit
[06:21:47] <wiscii> dang me
[06:22:05] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[06:22:38] <ormaaj> wiscii stop please. use pm.
[06:22:50] <quazimodo> hi all
[06:22:55] <quazimodo> ah crap wrong channel
[06:23:12] <wiscii> ormaaj: relax ;-)
[06:23:29] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:23:42] *** Joins: pycurious (~Adium@user/pycurious)
[06:24:19] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[06:26:09] *** Joins: sublim20 (~sublim20@user/sublim20)
[06:27:10] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Ping timeout: 260 seconds)
[06:27:42] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[06:27:51] *** Joins: Zauberfisch (~Zauberfis@62.240.156.18)
[06:28:01] <wiscii> ormaaj: just for the record: if you put a bot like greybot online then you better know what you are up to
[06:28:25] <earendel> quazimodo: you have to say something ..  before using this trick.
[06:28:45] <wiscii> and some fruit-cake , like me, jamming rm -rf /* up it
[06:28:52] <ormaaj> it's not my bot.
[06:29:06] <wiscii> it is well protected
[06:30:49] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au)
[06:31:36] <earendel> wait. u even had that channel where ppl play together with the frivolous bot.
[06:32:19] <earendel> u wouldn't like disruopt some fancy talk here with bot spamming wiscii .. right?
[06:32:27] <earendel> of course no.
[06:32:49] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Killed (NickServ (GHOST command used by kurahaupo_!~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au)))
[06:32:56] <earendel> unless it's friday and you have some hotdog with eris.
[06:32:56] *** kurahaupo_ is now known as kurahaupo
[06:33:05] <wiscii> lol .. you mean .. a bot verses a human ?
[06:33:27] <wiscii> i'm not sure ..
[06:34:13] *** Quits: kurahaupo (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[06:34:32] *** Joins: kurahaupo (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au)
[06:34:36] <earendel> but they protest against this rule by eating a hot dog on friday. https://principia-discordia.com i believe.
[06:34:38] <wiscii> earendel: chill out --- ask your question , please
[06:34:51] <earendel> sry chat lag here.
[06:35:11] <earendel> some messages seeem to even drop.  meh. salud.
[06:35:36] *** Quits: rbp (~abdullah@103.66.177.186) (Ping timeout: 268 seconds)
[06:35:43] <earendel> soon
[06:36:00] <wiscii> earendel: you are still here ..
[06:36:22] <wiscii> is it China ?
[06:37:09] <earendel> hey. i think we reall should respect the rules here a bit.
[06:37:25] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au)
[06:37:43] <earendel> im around yw.
[06:37:47] *** Quits: extern (~archer@80.246.130.235) (Quit: WeeChat 3.3)
[06:37:58] <earendel> whre do you hang handsome?
[06:38:00] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Changing host)
[06:38:00] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[06:38:03] *** Quits: kurahaupo (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[06:38:14] <wiscii> lol .....................................
[06:38:20] <earendel> xd
[06:38:41] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:38:59] <wiscii> you need some hardware ?
[06:39:59] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 264 seconds)
[06:40:22] <earendel> i need a blush on a pretty face .. like when the soul hides in excitement
[06:40:49] <wiscii> i know the feeling
[06:44:16] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[06:45:03] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 265 seconds)
[06:47:14] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[06:49:19] <wiscii> but .. i am not in the mood
[06:49:39] *** Quits: af (~af@awalgarg.me) (Ping timeout: 250 seconds)
[06:50:57] *** Quits: Muzer (~muzer@tim32.org) (Ping timeout: 250 seconds)
[06:53:44] <earendel> # x=3; ((z=x+2)); echo "$z"
[06:53:45] <shbot> earendel: 5
[06:54:40] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[06:55:12] <ormaaj> sounds about right
[06:55:19] *** Joins: n4dir (~user@i577BC866.versanet.de)
[06:56:11] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 264 seconds)
[06:59:52] *** Joins: Muzer (~muzer@tim32.org)
[07:00:30] <quazimodo> earendel: lol what
[07:00:49] *** Joins: bliminse_ (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[07:00:55] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Ping timeout: 250 seconds)
[07:01:34] <wiscii> it's one small step
[07:01:56] *** Joins: rigid (~rigid@user/rigid)
[07:02:31] *** Joins: kj (~kj@kj.aerisnetwork.net)
[07:02:35] <wiscii> leading, enevitably, to a giant leap.
[07:02:37] *** Joins: af (~af@awalgarg.me)
[07:03:42] <wiscii> can i get an f in chat for the matrix ?
[07:04:02] <wiscii> just one f will do
[07:04:35] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[07:04:37] <wiscii> just one ...
[07:06:18] <rtypo> # echo f
[07:06:18] <shbot> rtypo: f
[07:06:44] * wiscii <- not part of the solution : part of the problem
[07:07:12] <wiscii> # f
[07:07:13] <shbot> wiscii: bash: f: command not found
[07:07:22] <wiscii> bingo
[07:07:41] <rtypo> am i part of the problem?
[07:08:57] <wiscii> one f did it .. your f
[07:08:58] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:09:34] *** Quits: karstensrage (~karstensr@user/karstensrage) (Ping timeout: 260 seconds)
[07:10:17] <quazimodo> i'm a bit dumb, why does "read -r -d '' script" cause 'set -eo pipefail' to exit?
[07:10:21] <quazimodo> does read return something strange?
[07:10:43] <quazimodo> sorry, "read -r -d '' script <<'EOF'  ....  EOF"
[07:10:51] <quazimodo> the .... is code over many lines
[07:11:38] <wiscii> because
[07:12:08] <quazimodo> oh yeah "$?" is 1
[07:12:11] <quazimodo> i wonder why :/
[07:12:30] <rtypo> quazimodo: huh in 'man read' i can't find a -d but i'm a little drunk
[07:12:38] <rtypo> what's -d?
[07:13:18] <rtypo> oh wait it's a bash built-in
[07:13:26] <quazimodo> sets the delimiter, apparently read doesn't like multiline strings unless you get rid of the delimiter
[07:13:35] <wiscii> for reAL ?
[07:13:40] <quazimodo> something like that
[07:13:50] * wiscii looks
[07:14:04] *** Joins: sublim20 (~sublim20@user/sublim20)
[07:14:09] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[07:14:55] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:14:57] <wiscii> rabbits ..
[07:15:40] <quazimodo> yeah so read is an a-hole
[07:16:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:16:43] <wiscii> read is ok .. don't hate read
[07:17:18] <rtypo> maybe it's because it doesn't find the delimiter?
[07:17:47] *** Quits: tr0n (~tr0n@181.225.45.160) (Quit: Leaving)
[07:17:58] <wiscii> i would hesitate to guess that the delimiter is not propwerly set
[07:19:51] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[07:19:52] <larryv> quazimodo: read returns nonzero when it reaches EOL
[07:20:03] <larryv> *EOF
[07:20:25] *** Quits: jos1 (~jos3@host-091-097-189-010.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:22:44] <rtypo> larryv: https://i.imgur.com/ekLXYwH.png
[07:23:36] <larryv> that didn't read to EOF. it read one line.
[07:25:18] <rtypo> larryv: oh? aw. sorry
[07:25:41] <larryv> # printf %s hello | read; echo "$?"
[07:25:42] <shbot> larryv: 1
[07:25:55] *** Joins: pycurious (~Adium@user/pycurious)
[07:26:13] <quazimodo> larryv: yeah dealing with it now
[07:26:29] <quazimodo> it's nice not to have to use bash for serious programming lol
[07:26:48] *** Joins: aidalgol_ (~aidalgol@user/aidalgol)
[07:27:41] <larryv> https://mywiki.wooledge.org/BashFAQ/001#My_text_files_are_broken.21__They_lack_their_final_newlines.21
[07:27:54] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 256 seconds)
[07:27:57] *** aidalgol_ is now known as aidalgol
[07:29:11] <wiscii> i love getting paid to fuck around
[07:29:40] <pj> # while IFS= read -r line; do printf '%d: %s\n' "$((++l))" "$line"; done<<<$'line1\nline2\n'; echo "Exit code: $?"
[07:29:46] <shbot> pj: 1: line1
[07:29:46] <shbot> pj: 2: line2
[07:29:46] <shbot> pj: etc... ( http://ix.io/3Fdo )
[07:30:38] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:40] *** Joins: MenschZwoNull (~MenschZwo@p57926bd6.dip0.t-ipconnect.de)
[07:31:02] <pj> That's strange, it should return the status of the last command executed, which in this case is the failing read, so why does it return 0?
[07:31:06] *** Quits: MenschZwoNull__ (~MenschZwo@p200300c8571ac600bfdcfbcfe806c4fc.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:31:16] <larryv> last command in the body
[07:31:30] <pj> okay, the help for while doesn't specify that.
[07:32:10] <larryv> huh. yeah that's odd
[07:32:25] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[07:32:57] <pj> bash(1) is more explicit, though.
[07:32:58] <larryv> the manual does, so i guess it's just an oversight https://www.gnu.org/software/bash/manual/html_node/Looping-Constructs.html#index-while
[07:33:10] <wiscii> which-craft link is current ?
[07:33:28] *** Joins: jos1 (~jos3@dyndsl-091-096-039-145.ewe-ip-backbone.de)
[07:33:36] <pj> yeah, I just saw that in bash(1): The exit status of the while and until commands is the exit status of the last command executed in list-2, or zero if none was executed.
[07:33:49] <pj> list-2 is the commands in the body
[07:33:52] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 265 seconds)
[07:34:47] <larryv> wiscii: huh?
[07:35:05] <wiscii> pj: which link is current ?
[07:35:22] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a4ef:f059:ad4c:b8a4)
[07:35:22] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a4ef:f059:ad4c:b8a4) (Changing host)
[07:35:22] *** Joins: skapata (~Skapata@user/skapata)
[07:35:25] <wiscii> larryv: hold on a sec
[07:35:31] <pj> wiscii: huh?  I didn't give any links for anything.
[07:36:25] <pj> At any rate, the very nature that the while loop stops executing shows that the conditional returned non-zero.
[07:37:44] *** Quits: Bhavuk (~BTaneja@223.178.153.197) (Ping timeout: 265 seconds)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2.1)
[07:40:05] *** Joins: kdc (~kdc@196.211.197.159)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:22] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[07:41:17] *** Quits: Roedy (Roedy@user/roedy) (Ping timeout: 265 seconds)
[07:42:13] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:48:20] <ormaaj> # f() { return; }; while f; do ! f; done; echo "$?"
[07:48:21] <shbot> ormaaj: 1
[07:50:15] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:50:41] <ormaaj> Hopefully that makes sense
[07:54:54] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[07:55:29] <pj> ormaaj: yes, the echo $? is coming from the body command, but it loops around once more to the conditional which *then* returns false based on return with no arg using the exit code of the last command
[07:55:57] <pj> at least that's how I'm following it.
[07:57:33] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 265 seconds)
[07:57:34] <wiscii> while f; do not f;
[07:58:26] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[07:58:58] *** Joins: ravan_ (~ravan@user/ravan)
[08:00:25] <wiscii> until ! f; do f
[08:01:56] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 268 seconds)
[08:03:18] <ormaaj> # f() { return; }; false; while ! f; do f; done; echo "$?"
[08:03:19] <shbot> ormaaj: 0
[08:03:20] <pj> # cond_count=0 body_count=0; save_exit(){_v=$1; shift; "$@"; printf -v "$_v" "$?"; return "${!_v}"; }; f() { return; }; while (( cond_count++ )); save_exit cc f; do (( body_count++ )); ! save_exit bc f; done; echo "Return: $? conditional: $cond_count $cc body: $body_count $bc"
[08:03:21] <shbot> pj: bash: syntax error near unexpected token `{_v=$1'
[08:03:37] <pj> # cond_count=0 body_count=0; save_exit(){ _v=$1; shift; "$@"; printf -v "$_v" "$?"; return "${!_v}"; }; f() { return; }; while (( cond_count++ )); save_exit cc f; do (( body_count++ )); ! save_exit bc f; done; echo "Return: $? conditional: $cond_count $cc body: $body_count $bc"
[08:03:43] <shbot> pj: no output within the time limit
[08:03:52] <pj> meh, screw it.
[08:04:27] <ormaaj> return vs ! return is a good ambiguous case
[08:04:45] <wiscii> chill out ;-)
[08:05:06] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:05:32] <pj> technically the ! in ! return wouldn't really do anything useful, would it?
[08:06:28] <ormaaj> ksh93 does something odd with it. the others act the same.
[08:06:39] <wiscii> ! means negate
[08:06:42] <ormaaj> !status
[08:06:42] <greybot> http://wiki.bash-hackers.org/dict/terms/exit_status
[08:06:48] *** Joins: causaui1 (~causasui@192.241.228.169)
[08:06:54] <pj> I mean by rights it should still return, nothing can take the return value after it, and the exit code of the function is determined by the exit code of the command prior to the return.
[08:07:37] <pj> I suppose internally in bash it *might* actually negate the return code of return itself, but if it does so then bash would immediately discard it.
[08:08:05] <ormaaj> ^that's an obscure page that isn't linked to anywhere but has some nice examples.
[08:09:42] <ormaaj> s/to/from/
[08:09:48] <pj> now if you want the function to negate the exit code of the prior command then something like: return "$(( ! $? ))", or you could do: (( $? )): return
[08:10:05] <pj> errr: (( $? )); return
[08:11:17] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[08:11:28] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:11:30] <pj> # negate(){ (($?)); }; false; negate; echo "false is: $?"; true; negate; echo "true is: $?"
[08:11:31] <shbot> pj: false is: 0
[08:11:31] <shbot> pj: true is: 1
[08:11:34] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[08:12:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:12:57] <pj> heh, fun with exit codes
[08:15:23] <ormaaj> !ormaajbomb3 > (people seem to like this one)
[08:15:23] <greybot> (people seem to like this one): shopt -s lastpipe; set -o pipefail; ((())|[()(]|[)||(())|]()([|])||])
[08:16:08] <ormaaj> pipefail makes the function definition false.
[08:17:38] *** Joins: A|an (~Alan@173.216.51.200)
[08:18:22] *** Quits: A|an (~Alan@173.216.51.200) (Client Quit)
[08:21:53] <ormaaj> er just the pipeline i guess because of (())
[08:25:52] <ormaaj> ha return ${!v}
[08:26:28] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[08:27:51] *** ravan_ is now known as ravan
[08:28:16] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[08:28:50] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:29:07] <ormaaj> that old operator kInda gets in the way with nameref sadly.
[08:29:36] <ormaaj> !ormaajrotate
[08:29:36] <greybot> # f() { echo "${@:2}"; ${!1+f $(($1+1)) "${!#}" "${@:2:$#-2}"}; }; f 3 {a..c}
[08:29:37] <shbot> greybot: a b c
[08:29:37] <shbot> greybot: c a b
[08:29:37] <shbot> greybot: b c a
[08:33:04] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 256 seconds)
[08:34:32] *** Joins: superboot (~agentgasm@user/superboot)
[08:40:20] *** Joins: causaui1 (~causasui@192.241.228.169)
[08:45:18] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[08:46:39] *** Quits: superboot (~agentgasm@user/superboot) (Ping timeout: 250 seconds)
[08:51:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[08:55:40] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[08:56:53] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[08:57:31] *** Joins: A|an (~Alan@173.216.51.200)
[08:59:52] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:59:54] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[09:02:17] *** Quits: n4dir (~user@i577BC866.versanet.de) (Remote host closed the connection)
[09:05:44] *** Joins: bud (~bud@user/bud)
[09:11:21] *** Quits: timj (~timj@user/timj) (Ping timeout: 250 seconds)
[09:16:05] *** Quits: Guest1099 (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Quit: Leaving)
[09:16:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[09:16:13] *** Quits: Inline (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Quit: Leaving)
[09:16:37] *** Quits: irc_user (uid423822@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:17:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:19:17] *** Joins: timj (~timj@user/timj)
[09:24:23] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Ping timeout: 264 seconds)
[09:26:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:26:59] *** Joins: podeni (~podeni@188.27.129.177)
[09:27:11] *** Joins: seninha (~seninha@user/seninha)
[09:28:00] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:34] *** Joins: causaui1 (~causasui@192.241.228.169)
[09:33:40] *** Joins: superboot (~agentgasm@user/superboot)
[09:36:55] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[09:39:28] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: No route to host)
[09:39:56] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:54:27] *** Joins: yeirr (~yeirr@user/yeirr)
[10:01:50] *** Joins: Feuermagier_ (~Feuermagi@2a02:2488:4211:3400:b6fd:ec18:acf6:f1a8)
[10:04:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[10:04:11] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:04:13] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[10:06:52] *** Joins: causaui1 (~causasui@192.241.228.169)
[10:11:40] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[10:15:23] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 264 seconds)
[10:19:02] *** Quits: Hamled (sid129388@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[10:19:36] *** Quits: bitchin (sid516755@user/bitchin) (Ping timeout: 256 seconds)
[10:19:36] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[10:20:04] *** Quits: odc (sid197788@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[10:20:11] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[10:21:01] *** Joins: odc (sid197788@helmsley.irccloud.com)
[10:22:15] *** Joins: Hamled (sid129388@uxbridge.irccloud.com)
[10:22:48] *** Joins: bitchin (sid516755@user/bitchin)
[10:23:41] *** Quits: ted-ious (tedious@bitcoinshell.mooo.com) (Ping timeout: 246 seconds)
[10:24:54] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[10:31:28] *** Joins: jdvr (~jdvr@user/jdvr)
[10:32:16] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[10:34:52] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:35:00] *** Joins: Bhavuk (~BTaneja@106.210.140.189)
[10:35:20] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:38:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:39:15] *** Joins: sublim20 (~sublim20@user/sublim20)
[10:43:49] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[10:50:46] *** Quits: Bhavuk (~BTaneja@106.210.140.189) (Ping timeout: 256 seconds)
[10:51:37] *** whatsupboy is now known as skipper
[10:52:38] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:52:44] *** Joins: totenkoph (~scythe@user/totenkoph)
[10:53:24] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4)
[10:53:40] *** Joins: rendar (~rendar@user/rendar)
[10:53:55] *** Joins: Bhavuk (~BTaneja@106.210.140.189)
[10:56:57] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[10:58:19] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[10:59:43] *** Quits: roadie` (~user@2a02:8108:ec0:1427:cc82:8186:142:244e) (Remote host closed the connection)
[10:59:56] *** Joins: roadie` (~user@2a02:8108:ec0:1427:8840:8a8:734a:420b)
[11:01:27] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:34] *** Joins: Bhavuk_ (~BTaneja@110.227.9.218)
[11:03:17] <acagastya> Hi, I am trying to print all files I get using `find` using a for loop; but instead of getting the file names, I am getting single word in a line.  A stripped down example of the code is https://0x0.st/-R4n.sh -- any idea how I could fix it, so my output looks like https://0x0.st/-R47.txt instead of https://0x0.st/-R4h.txt ?
[11:06:05] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (Ping timeout: 264 seconds)
[11:06:32] *** Quits: Bhavuk (~BTaneja@106.210.140.189) (Ping timeout: 265 seconds)
[11:07:39] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[11:08:13] *** Joins: tex (~super@user/dix)
[11:08:50] <ormaaj> !drlwf > acagastya
[11:08:51] <greybot> acagastya: https://mywiki.wooledge.org/DontReadLinesWithFor ... "for" is for iterating arguments/arrays, not strings. Never do: for x in $(cat file), or for x in $var; instead, use a glob (*.txt), an array ("${hosts[@]}") or a while-read loop. See also https://mywiki.wooledge.org/BashPitfalls#pf1
[11:11:56] <ormaaj> !find
[11:11:56] <greybot> http://mywiki.wooledge.org/UsingFind
[11:12:01] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[11:12:23] *** Joins: samy1028b (~samy1028@068-184-115-031.res.spectrum.com)
[11:14:43] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[11:14:52] *** Joins: WinterStar (~IceLight@user/icelight)
[11:14:57] *** Quits: samy1028 (~samy1028@068-184-115-031.res.spectrum.com) (Ping timeout: 268 seconds)
[11:15:47] *** Joins: onto (~onto@45.63.115.64)
[11:17:27] *** Quits: ento (~onto@45.63.115.64) (Ping timeout: 250 seconds)
[11:19:00] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:19:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 268 seconds)
[11:23:47] *** Quits: samnob (~samnob@user/samnob) (Ping timeout: 264 seconds)
[11:24:26] *** Joins: samnob (~samnob@user/samnob)
[11:27:06] *** Joins: alzgh (~alzgh@user/alzgh)
[11:28:17] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Ping timeout: 264 seconds)
[11:28:37] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:28:42] *** Quits: samnob (~samnob@user/samnob) (Client Quit)
[11:28:51] *** Joins: samnob (~samnob@user/samnob)
[11:29:08] <ormaaj> the right way to do whatever you're attempting depends on details. probably you want find -exec
[11:31:26] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[11:32:11] *** Quits: richardm75 (~richardm7@2600:8801:c50a:9f00:393d:358c:68d7:db87) (Ping timeout: 264 seconds)
[11:33:25] <acagastya> That find is then piped to sort and some others, so I think using while would be ideal here.  Thanks, ormaaj!
[11:35:42] *** Quits: fstd_ (~fstd@xdsl-78-35-74-116.nc.de) (Read error: Connection reset by peer)
[11:35:50] *** Joins: fstd (~fstd@xdsl-78-35-74-116.nc.de)
[11:36:46] *** Joins: causaui1 (~causasui@192.241.228.169)
[11:40:15] *** Joins: martinus__ (~martin@53.31.201.77.rev.sfr.net)
[11:41:17] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[11:41:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[11:42:08] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:46:16] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[11:46:45] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:48:26] *** Joins: sublim20 (~sublim20@user/sublim20)
[11:50:13] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: bye)
[11:52:19] *** Joins: yeirr (~yeirr@user/yeirr)
[11:52:30] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[11:54:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:56:18] *** Joins: lavaball (felix@31.204.155.215)
[11:58:31] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:59:03] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 250 seconds)
[12:00:11] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 265 seconds)
[12:01:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:05:47] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[12:05:55] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Remote host closed the connection)
[12:07:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[12:11:10] *** Joins: samnob_ (~samnob@user/samnob)
[12:11:41] *** Quits: samnob (~samnob@user/samnob) (Ping timeout: 268 seconds)
[12:12:29] *** Joins: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[12:12:57] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:13:53] *** Joins: vysn (~vysn@user/vysn)
[12:17:35] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[12:19:04] *** Joins: voices- (~voices_@84.238.197.28)
[12:21:35] *** Joins: furrymcgee (~devuan@cgn-89-1-208-64.nc.de)
[12:22:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[12:23:44] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[12:25:06] *** Quits: TMan459 (~TMan459@068-187-099-141.res.spectrum.com) (Client Quit)
[12:30:02] *** Quits: voices- (~voices_@84.238.197.28) ()
[12:30:17] *** Joins: voices- (~voices_@84.238.197.28)
[12:30:58] *** Quits: b_jonas (~x@catv-176-63-3-164.catv.broadband.hu) (Quit: leaving)
[12:33:55] *** Quits: Hash (~stoned@wants.to.know.howstoned.ru) (Quit: https://hashsecurity.org)
[12:34:41] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[12:34:57] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[12:39:41] *** Joins: shad (~shad@user/shad)
[12:42:48] *** Joins: n4dir (~user@i577BC866.versanet.de)
[12:43:45] *** Quits: roadie` (~user@2a02:8108:ec0:1427:8840:8a8:734a:420b) (Ping timeout: 268 seconds)
[12:48:24] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:53:00] *** Quits: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c) (Ping timeout: 268 seconds)
[12:53:37] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[12:59:36] *** Joins: seninha (~seninha@user/seninha)
[13:00:15] *** Joins: earnestly (~earnest@user/earnestly)
[13:00:31] *** Joins: Mo (~Mo@dynamic-077-001-248-082.77.1.pool.telefonica.de)
[13:01:11] *** Quits: howdoi (uid224@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:02:59] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[13:09:16] *** Joins: roadie` (~user@2a02:8108:ec0:1427:cc82:8186:142:244e)
[13:10:10] *** Quits: Bhavuk_ (~BTaneja@110.227.9.218) (Quit: Leaving)
[13:11:42] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:11:56] *** Joins: roadie`` (~user@2a02:8108:ec0:1427:cc82:8186:142:244e)
[13:12:13] *** Quits: roadie` (~user@2a02:8108:ec0:1427:cc82:8186:142:244e) (Remote host closed the connection)
[13:12:18] *** Joins: bbju (~bbju@103.144.148.219)
[13:12:43] *** Quits: bbju (~bbju@103.144.148.219) (Client Quit)
[13:15:16] *** Quits: samnob_ (~samnob@user/samnob) (Ping timeout: 256 seconds)
[13:17:58] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:23:40] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[13:26:17] *** Joins: samnob (~samnob@user/samnob)
[13:26:38] *** Joins: causaui1 (~causasui@192.241.228.169)
[13:30:00] *** Joins: Oddly (~sacr@mailserver.rshs.nl)
[13:31:32] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[13:32:56] <noent> hey. I am working with some legacy scripts and want to kind of modernize them. I came across the following problem: at some point a command is called and I need to decide on parameters. So I have some if [[ ... ]]; then foo_param="--foo bar --baz 42"; fi. When I then later do 'command $foo_param ...' tools like shellcheck complain about the missing quotes. Putting $foo_param in quotes will obviously break the code, so my next solution was to define it as
[13:32:56] <noent> foo_param=(--foo bar --baz 42) and use 'command "${foo_param[*]}" ...' which works as long as it's set, but the moment foo_param is empty it leads to a call like command '' ... and some commands don't play nice with that. So what are my choices to do this right?
[13:36:22] <noent> I mean I could add another if at some point to decide if I add $foo_param to the arguments of command, but... meh
[13:38:43] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[13:38:46] <Soliton> !faq complex
[13:38:47] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[13:39:04] <Soliton> "${foo_param[@]}"
[13:39:29] <Soliton> "${foo_param[*]}" is just wrong.
[13:39:33] <Soliton> !$*
[13:39:33] <greybot> The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[13:40:20] <noent> oh. oof. I thought I had where to use * and @ figured out ^^
[13:41:07] <Soliton> * only if you want a single string. so if you want to just print it or so.
[13:41:22] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:45:23] <noent> yep, got it. Ty
[13:45:34] <noent> damn. I've been doing it wrong for months
[13:46:30] <obiwahn> $(eval DIGEST := $(shell digest=`docker images --no-trunc --quiet $(TAG_NAME)` && echo "$${digest#sha256:}" ))
[13:46:45] <obiwahn> i try to get a image digest in a makefile
[13:47:07] <obiwahn> i really would like to use ${expansion:off:len}
[13:47:26] <obiwahn> but the colons do not work as expected does anyone of you know a way around it?
[13:48:01] <earnestly> Probably because the shell make uses isn't bash, consider #workingset
[13:48:29] <earnestly> There's no need for eval in gnumake either
[13:48:42] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[13:48:42] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 256 seconds)
[13:49:01] <obiwahn> how may i get the digest then?
[13:49:18] <obiwahn> i push the image just a line before that line
[13:49:38] *** Joins: Pent (sid313808@lymington.irccloud.com)
[13:49:44] *** Joins: ullbeking (sid5364@user/ullbeking)
[13:50:23] <obiwahn> and ${fool#sha256} works
[13:55:09] *** Joins: alzgh (alzgh@user/alzgh)
[13:59:08] *** Joins: reset (~reset@user/reset)
[13:59:30] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[14:00:23] *** Joins: causaui1 (~causasui@192.241.228.169)
[14:03:25] *** Joins: alzgh (~alzgh@user/alzgh)
[14:03:57] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[14:05:42] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[14:14:46] *** Joins: edk (edk@libera/staff/edk)
[14:15:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[14:20:39] *** Joins: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0)
[14:21:08] *** Quits: n4dir (~user@i577BC866.versanet.de) (Remote host closed the connection)
[14:21:13] *** Joins: zro (~zro@user/zro)
[14:26:56] <gnoo>  /j #workingset
[14:27:49] *** Joins: legola (~legola@46.235.101.181)
[14:31:23] *** Joins: ted-ious (~ted-ious@bitcoinshell.mooo.com)
[14:32:24] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[14:32:51] *** Joins: lovetruth (~lovetruth@188.27.142.20)
[14:32:55] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 265 seconds)
[14:33:05] <lovetruth> Can this be achieved by piping in bash?... :)
[14:33:27] <lovetruth> Meaning: find all lines that have duplicate values on column 1
[14:33:34] <lovetruth> (In a .txt file)
[14:34:22] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 265 seconds)
[14:34:37] <selckin> depends what piping means, but you can script that in bash or awk or any combo of utils probably yeah
[14:36:36] *** Joins: causaui1 (~causasui@192.241.228.169)
[14:36:54] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[14:37:16] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:38:05] *** Quits: ted-ious (~ted-ious@bitcoinshell.mooo.com) (Ping timeout: 250 seconds)
[14:38:48] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:38:49] <gnoo> lovetruth: something like cut -d $'\t' -f 1 file.txt | sort -d if the columns are seperated by tab. if by space, use -d ' '. if something else, use awk
[14:41:07] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[14:42:59] *** Joins: polve (~polve@twcitalia/polve)
[14:44:11] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[14:45:44] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[14:46:44] *** Joins: yeirr (~yeirr@user/yeirr)
[14:49:42] *** Joins: voices- (~voices_@84.238.197.28)
[14:51:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[14:54:03] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:54:34] <rendar> can i check from bash if i'm running in 32bit or 64bit?
[14:55:34] *** Quits: termos (sid18647@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[14:55:34] *** Quits: kenyon (sid496813@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[14:56:12] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[14:56:20] *** Quits: gajus (sid202456@tinside.irccloud.com) (Ping timeout: 268 seconds)
[14:56:39] *** Joins: voices- (~voices_@shikoku.cf)
[14:57:23] *** Joins: gajus (sid202456@tinside.irccloud.com)
[14:57:34] *** Quits: chromis (sid150893@tinside.irccloud.com) (Ping timeout: 268 seconds)
[14:57:41] *** Joins: ted-ious (~ted-ious@bitcoinshell.mooo.com)
[14:58:02] *** Joins: kenyon (sid496813@uxbridge.irccloud.com)
[14:58:02] *** Joins: termos (sid18647@helmsley.irccloud.com)
[14:59:47] *** Joins: chromis (sid150893@tinside.irccloud.com)
[15:00:02] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[15:00:10] *** roadie`` is now known as roadie
[15:02:48] <sixwheeledbeast> it's not really related to bash. You could run other tools like uname or arch
[15:05:44] <rendar> both arch and uname gives me x86_64 and not "amd64" which is what i need for apt-get
[15:05:57] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[15:06:12] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[15:06:40] <sixwheeledbeast>  what are you trying to do?
[15:06:57] *** Joins: voices-_ (~voices_@84.238.197.28)
[15:07:17] <rendar> sixwheeledbeast, installing linux-headers-amd64 package
[15:07:28] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[15:07:33] <rendar> i have "linux-headers-" now i have to get "amd64" somehow
[15:09:09] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[15:09:10] *** Joins: Roedy (Roedy@user/roedy)
[15:09:44] <sixwheeledbeast> but with what logic? apt and dpkg have ways to select arch
[15:10:08] *** Quits: voices- (~voices_@shikoku.cf) (Ping timeout: 265 seconds)
[15:10:20] <rendar> sixwheeledbeast, huh? the package name is "linux-headers-amd64" and not "linux-headers"
[15:11:12] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Max SendQ exceeded)
[15:11:31] <Masklin_Gurder> { for foo in {01..10} ; do bar ; done } > outfile
[15:11:33] <Masklin_Gurder> What's missing?
[15:12:00] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:12:13] *** Joins: pj (~pj@ghettoforge/pj)
[15:12:18] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[15:12:26] <sixwheeledbeast> surely that is a dependency that apt will resolve?
[15:13:56] <sixwheeledbeast> There is also `dpkg --print-architecture` which will output what I believe you want but still not sure why that would be required.
[15:14:22] <Masklin_Gurder> Uh
[15:14:23] <Masklin_Gurder> Never mind
[15:14:31] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:15:13] <Soliton> you don't need the curly braces there. if you use them you're missing the final semicolon.
[15:15:26] *** Quits: voices-_ (~voices_@84.238.197.28) (Remote host closed the connection)
[15:15:50] <geirha> it still works though, since done happens to be a command terminator
[15:16:26] <Soliton> ah, fun.
[15:16:55] <rendar> sixwheeledbeast, thanks, that command worked
[15:19:49] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[15:19:59] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Remote host closed the connection)
[15:22:13] *** Quits: kurahaupo_ (~kurahaupo@pa49-180-189-123.pa.nsw.optusnet.com.au) (Ping timeout: 265 seconds)
[15:23:29] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[15:24:08] *** Joins: Atque (~Atque@user/atque)
[15:24:44] <Soliton> rendar: perhaps use linux-headers-generic instead.
[15:24:59] <rendar> Soliton, ok
[15:28:09] *** Joins: cactushead (~cactus_he@159.196.56.11)
[15:28:33] *** Joins: voices- (~voices_@84.238.197.28)
[15:31:37] *** Joins: causaui1 (~causasui@192.241.228.169)
[15:32:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:36:25] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[15:39:12] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[15:39:45] *** Joins: rufito (~phil@186.11.81.7)
[15:41:09] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[15:43:44] <rendar> `if ! echo "something" | sudo tee ${file}; then error` <- is this correct?
[15:45:29] *** Joins: magla (~gelignite@55d4d6da.access.ecotel.net)
[15:45:36] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4) (Quit: Client closed)
[15:46:14] <Soliton> if ! sudo tee "${file}" <<< something; then error
[15:46:29] <rendar> thanks
[15:47:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:48:41] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[15:48:58] <rendar> Soliton, is better `"${file}" <<< something` or `"${file}" <<< "something"` ?
[15:49:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:49:12] <Soliton> !quotes
[15:49:12] <greybot> https://mywiki.wooledge.org/Quotes
[15:53:54] *** Quits: bliminse_ (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[15:56:59] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[16:00:32] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[16:00:34] *** Joins: xx (~xx@user/xx)
[16:00:56] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:02:22] *** Quits: Perun (~perun@xaphon.chao5.net) (Remote host closed the connection)
[16:03:40] *** Joins: noord (~noord@user/noord)
[16:04:09] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[16:06:58] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[16:06:58] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[16:07:30] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:07:41] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4)
[16:07:57] <furrymcgee> whats error?
[16:10:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:10:11] *** Joins: brelod (~me@90.244.150.142)
[16:13:43] <furrymcgee> maybe you better rely on tee to do error handling
[16:13:53] *** Joins: thiras (~thiras@user/thiras)
[16:14:32] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[16:17:36] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[16:18:51] *** Joins: zeden (~zeden@user/zeden)
[16:24:34] *** Joins: causaui1 (~causasui@192.241.228.169)
[16:27:19] *** Joins: shad (~shad@user/shad)
[16:29:01] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[16:32:42] *** Joins: pycurious (~Adium@user/pycurious)
[16:38:25] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:36] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:40:51] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[16:42:59] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[16:43:53] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:46:52] *** Joins: zeraphel (~daddy@2a00:a040:196:56d:96de:80ff:fefa:44a)
[16:48:30] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[16:49:14] *** Parts: zeraphel (~daddy@2a00:a040:196:56d:96de:80ff:fefa:44a) ()
[16:50:23] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[16:50:54] *** Quits: Feuermagier_ (~Feuermagi@2a02:2488:4211:3400:b6fd:ec18:acf6:f1a8) (Quit: Leaving)
[16:50:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:56:16] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 256 seconds)
[16:58:14] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: /msg NickServ IDENTIFY john_johnk Dg/ZXA'N)
[16:58:42] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:00:59] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:05:10] *** Quits: lack (~lack@user/lack) (Ping timeout: 265 seconds)
[17:05:25] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[17:11:03] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:15:57] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[17:19:17] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 250 seconds)
[17:21:23] *** Joins: unixman_ (~aunixman@209.165.134.7)
[17:22:32] *** Quits: unixman (~aunixman@209.165.134.7) (Ping timeout: 260 seconds)
[17:22:54] *** Quits: raz (~raz@user/raz) (Ping timeout: 256 seconds)
[17:22:57] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[17:22:57] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[17:22:57] *** Joins: Bercik (~Redomen@user/bercik)
[17:26:18] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:26:42] *** Joins: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk)
[17:27:53] *** Joins: timj (~timj@user/timj)
[17:28:52] *** Joins: GreyXor (~GreyXor@2a01:e0a:13e:a720:d468:9dbd:a19:c258)
[17:29:14] *** Joins: raz (~raz@107.191.104.145)
[17:29:14] *** Quits: raz (~raz@107.191.104.145) (Changing host)
[17:29:14] *** Joins: raz (~raz@user/raz)
[17:29:41] *** Quits: tobybl (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 250 seconds)
[17:30:18] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 265 seconds)
[17:30:54] *** Joins: rtypo (~alex@user/rtypo)
[17:33:52] *** Quits: GreyXor (~GreyXor@2a01:e0a:13e:a720:d468:9dbd:a19:c258) (Quit: Client closed)
[17:33:59] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 264 seconds)
[17:35:32] *** Joins: seabass (~seabass@user/seabass)
[17:37:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:cc82:8186:142:244e) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[17:37:37] <seabass> Hello! I'm trying to use findutils' `find` command to do OR matching expressions
[17:38:05] <seabass> apparently the syntax is the same as that of shell pattern matching, but I can't find the manual for that.
[17:38:18] <seabass> Please could someone point me to where this syntax is described? Thanks!
[17:38:22] <Soliton> what does OR have to do with patterns?
[17:38:28] <Soliton> !find
[17:38:29] <greybot> http://mywiki.wooledge.org/UsingFind
[17:38:29] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:39:10] <seabass> Soliton: thanks for the link
[17:39:23] <seabass> I was thrown off by this in the find man page: Base of file name (the path with the leading directories removed) matches shell pattern pattern.
[17:39:35] <Soliton> are you talking about -name?
[17:39:40] <seabass> the OR-ing is done in find, not in the matching syntax, right?
[17:39:44] <seabass> Soliton: yup
[17:39:46] <Soliton> yes.
[17:40:07] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[17:40:17] <Soliton> find . \( -name 'foo.txt' -o -name 'bar.log' \) ...
[17:40:30] <seabass> thanks; that works!
[17:40:37] <seabass> is the \( and \) important here?
[17:40:40] <seabass> it appears to work without them
[17:40:49] <Soliton> if nothing follows then no.
[17:40:52] *** Joins: ano (~ano@user/ano)
[17:41:02] <seabass> Soliton, brilliant; thanks again :)
[17:41:16] <Soliton> -test1 -test2 means and so it will change if you add more tests/actions.
[17:42:00] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:42:14] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[17:42:49] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[17:43:18] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[17:43:22] *** Joins: odoood (odoood@gateway/vpn/protonvpn/odoood)
[17:46:11] *** Joins: john_johnk1 (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:46:35] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 264 seconds)
[17:46:35] *** john_johnk1 is now known as john_johnk
[17:48:11] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:48:34] *** Quits: raffaele_ (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net) (Read error: Connection reset by peer)
[17:50:27] *** Joins: thevishy (~thevishy@2405:201:f005:c007:1100:f3e5:ecdd:62f7)
[17:52:23] *** Joins: rafspiny (~raffaele@ip-80-113-98-4.ip.prioritytelecom.net)
[17:52:38] *** Joins: rgrinberg (~textual@201.192.183.100)
[17:59:35] *** Quits: mankoff (~quassel@c-67-183-220-189.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[18:00:09] *** Joins: mankoff (~quassel@152.115.35.237)
[18:00:36] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[18:00:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:03:15] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[18:04:00] *** Joins: thiras (~thiras@user/thiras)
[18:04:23] <wwilliam> What this does?  		[[:space:)"$b"($|:space:) ]] && fail_task=true || continue
[18:04:54] <emanuele6> # [[:space:)"$b"($|:space:) ]] && fail_task=true || continue
[18:04:55] <shbot> emanuele6: bash: syntax error near unexpected token `)'
[18:05:01] <emanuele6> says syntax error
[18:06:01] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:06:32] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[18:08:20] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[18:10:08] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:10:23] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:10:26] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[18:10:48] <gloomy> Hey, I wanted to write a quick function to convert from unix to window path, and did something like `wp=${up//\//\\}; echo "wp"`
[18:11:34] <gloomy> but now if there's something starting by t in my path (like /foo/tar), this gives me `\foo    tar` (it reads \t as a tab, I presume?)
[18:11:49] <gloomy> What am I escaping wrong? :D
[18:11:54] *** Joins: causaui1 (~causasui@192.241.228.169)
[18:12:19] <gloomy> *it give `\foo    ar`, not `\foo   tar`
[18:12:23] <emanuele6> something unrelated to wp=${up//\//\\}
[18:12:38] <emanuele6> # up=/foo/tar wp=${up//\//\\}; declare -p wp
[18:12:39] <shbot> emanuele6: declare -- wp="\\foo\\tar"
[18:14:00] <gloomy> huh
[18:14:53] <emanuele6> you are obviously not actually using   wp=${up//\//\\}; echo "wp"   because that would print "wp"
[18:14:57] <emanuele6> what are you using?
[18:15:11] <emanuele6> (to print $wp)
[18:15:31] <gloomy> sorry - echo "$wp"
[18:15:39] *** Joins: bbju (~bbju@103.144.148.54)
[18:15:43] <emanuele6> # up=/foo/tar wp=${up//\//\\}; echo "$wp"
[18:15:43] <shbot> emanuele6: \foo\tar
[18:15:55] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[18:16:29] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[18:16:51] <gloomy> Just realised the server I was running this on has a zsh shell, trying with bash to see if it behaves differently
[18:17:03] <emanuele6> !zsh
[18:17:03] <greybot> zsh is NOT an enhanced version of bash. It's a different shell, with different features and there's a different channel for your questions: #zsh For zsh-like menu completion, bind '\C-i':menu-complete # there is nothing similar to menu selection
[18:17:03] *** Quits: bbju (~bbju@103.144.148.54) (Client Quit)
[18:17:22] <acagastya> Hi, in a shellscript, I have a command `test -e FILE && printf foo || continue`.  That is because if the file does not exist, it will otherwise fail.  However shellcheck says `continue is only valid in loops.`. How should I rewrite that line?
[18:17:30] <gloomy> yes, I know. Hence my comment :-)
[18:20:34] <gloomy> yup, something zsh specific. Sorry about the confusion.
[18:20:51] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:21:30] *** Joins: Kruppt (~Kruppt@50.111.6.246)
[18:21:41] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 250 seconds)
[18:25:42] <phy1729> !echo > gloomy
[18:25:42] <greybot> gloomy: echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[18:25:49] <phy1729> #bash doesn't like echo either
[18:26:02] <xx> acagastya: || true
[18:26:22] <phy1729> You don't need || true unless you're running with -e
[18:26:38] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[18:26:38] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[18:26:38] *** Joins: Bercik (~Redomen@user/bercik)
[18:27:46] <acagastya> Thanks, xx.
[18:27:57] <earnestly> acagastya: Don't use set -e
[18:28:38] <acagastya> !sete
[18:28:42] <acagastya> !set -e
[18:28:45] <geirha> !-e
[18:28:46] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[18:29:53] <acagastya> All right!  Thanks.
[18:30:11] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:32:15] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:46] *** Quits: mankoff (~quassel@152.115.35.237) (Quit: quit)
[18:33:24] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[18:33:31] *** Joins: causaui1 (~causasui@192.241.228.169)
[18:34:05] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:34:27] *** Joins: igemnace (~ian@user/igemnace)
[18:34:31] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[18:39:29] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[18:40:55] *** Joins: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr)
[18:41:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[18:42:01] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[18:42:19] *** Joins: JanC (~janc@user/janc)
[18:48:20] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[18:51:01] *** Joins: abip20 (~abdullah@103.66.177.186)
[18:51:05] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:52:35] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[18:53:30] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[18:54:19] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: john_johnk)
[18:54:34] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[18:54:48] *** Joins: abip20 (~abdullah@103.66.177.186)
[18:54:58] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[18:55:39] *** Joins: voices- (~voices_@84.238.197.28)
[18:58:57] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Client Quit)
[18:59:16] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[18:59:30] *** Joins: fstd_ (~fstd@xdsl-78-35-74-116.nc.de)
[18:59:45] *** Quits: fstd (~fstd@xdsl-78-35-74-116.nc.de) (Read error: Connection reset by peer)
[18:59:52] *** Joins: useretail_ (~useretail@185.132.19.151)
[18:59:57] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[18:59:59] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[19:00:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[19:00:15] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 250 seconds)
[19:00:39] *** Joins: AsenMx (~AsenMx@user/asenmx)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:29] *** Joins: rendar (~rendar@user/rendar)
[19:04:51] *** Quits: useretail_ (~useretail@185.132.19.151) (Remote host closed the connection)
[19:05:02] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[19:07:37] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 250 seconds)
[19:08:27] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:08:35] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[19:09:22] *** Joins: odoood (odoood@gateway/vpn/protonvpn/odoood)
[19:10:46] *** Joins: ozoned (~odoood@2601:c8:c003:a550::3)
[19:11:53] *** Quits: ozoned (~odoood@2601:c8:c003:a550::3) (Client Quit)
[19:12:15] *** Joins: ozoned (~odoood@2601:c8:c003:a550::3)
[19:12:54] *** Quits: ozoned (~odoood@2601:c8:c003:a550::3) (Client Quit)
[19:13:27] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[19:13:58] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[19:14:01] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[19:14:22] *** ozoned is now known as odoood
[19:16:04] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[19:20:33] *** Joins: voices- (~voices_@84.238.197.28)
[19:22:31] *** Joins: zamba (~marius@5.226.162.54)
[19:22:55] <zamba> how do i grep for ip addresses in a file?
[19:23:14] <zamba> grep -f <file> works, but the problem is that the '.' in the ip addresses are interpreted as a wildcard
[19:23:23] <zamba> i want literal matching
[19:23:25] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:23:27] <koollman> fgrep
[19:23:30] <Soliton> -F
[19:23:57] <zamba> so -F instead of -f?
[19:24:03] <Soliton> no.
[19:24:14] <Soliton> perhaps even -Fx.
[19:24:56] <koollman> (also, not standard, but check if you can instal grepcidr. it's nice)
[19:24:58] <zamba> oh, so -F -f <file>+
[19:27:04] *** Joins: nyex (~Thunderbi@177.84.107.30)
[19:27:42] *** Bilge- is now known as Bilge
[19:29:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:40a5:a81e:f992:bb69)
[19:29:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:40a5:a81e:f992:bb69) (Changing host)
[19:29:33] *** Joins: skapata (~Skapata@user/skapata)
[19:30:06] *** Quits: madcloud (~kmacdev@2001:470:69fc:105::bad5) (Quit: You have been kicked for being idle)
[19:31:05] *** Joins: BH23 (~BH23@santoroj.plus.com)
[19:33:23] <knstn> # grep -o '127.0.0.1' /etc/hosts
[19:33:24] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Quit: ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[19:33:24] <shbot> knstn: grep: /etc/hosts: No such file or directory
[19:33:40] <knstn> It works for me without -F or something else.
[19:34:08] <Soliton> . matches any character which includes a dot...
[19:34:23] *** Joins: Guest64 (~Guest64@2800:200:f410:4b5c:59bf:440d:5a9c:e96b)
[19:34:24] <Soliton> so that it works means very little.
[19:34:55] <Soliton> # grep -o '127.0.0.1' <<< 127-0-0-1
[19:34:55] <shbot> Soliton: 127-0-0-1
[19:34:59] *** Joins: israfel (~israfel@gateway/vpn/pia/israfel)
[19:35:13] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:35:16] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Remote host closed the connection)
[19:35:19] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:35:21] <Soliton> # grep -o '127.0.0.1' <<< 127.0.0.123
[19:35:21] <shbot> Soliton: 127.0.0.1
[19:35:41] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:36:36] *** Joins: richardm75 (~richardm7@2600:8801:c50a:9f00:d62:bc7:cbac:9d04)
[19:38:42] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:e560:c09c:6be:41c4) (Quit: Client closed)
[19:39:38] <knstn> This is where I went wrong "...Interpret PATTERNS as basic regular expressions (BREs, see below).  This is the *default*...."
[19:40:19] *** Quits: jdvr (~jdvr@user/jdvr) (Ping timeout: 265 seconds)
[19:40:21] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[19:40:36] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[19:41:32] *** Quits: OMGOMG (~bobrobert@sandy.ifi.uio.no) (Read error: Connection reset by peer)
[19:42:54] <knstn> And that the quotes are for the shell, not grep.
[19:43:21] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:43:53] *** Parts: seabass (~seabass@user/seabass) ()
[19:47:09] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[19:50:16] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (Remote host closed the connection)
[19:50:19] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[19:53:17] *** Joins: han-solo (~hanish@user/han-solo)
[19:53:40] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[19:54:05] *** Joins: zebrag (~chris@user/zebrag)
[19:54:36] *** Joins: Gerula (~Gerula@user/gerula)
[19:56:48] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[19:57:43] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Ping timeout: 265 seconds)
[20:02:10] *** Quits: Nact (~l@2a02:2788:11c4:6e6:8145:8e91:d047:8ed0) (Quit: Konversation terminated!)
[20:03:02] <bud> i got the unicode quote warning (SC1112), for doing something like this: echo 'don’t autoposition'
[20:03:23] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 264 seconds)
[20:03:47] <bud> i disabled the warning, but now i am wondering if it isn't better to solve the problem.
[20:04:06] <Soliton> what is the problem?
[20:04:25] <bud> coudl there be situations where unicode quotes are "translated" into ascii before they are interpreted by bash?
[20:04:48] <Soliton> what is translating your scripts?
[20:05:25] <Soliton> if the code you write is not what's running then you need to solve that problem.
[20:05:46] <bud> i hate you
[20:06:52] <bud> and i hate this channel. every fucking time i come here want to discuss something, very much on topic you are greeted with this attitude.
[20:07:44] <Soliton> if something translates code before bash runs it that does not sound on topic at all really.
[20:07:59] *** Joins: sublim20 (~sublim20@user/sublim20)
[20:08:17] <Soliton> probably a question for your os channel or your admin.
[20:08:40] <bud> "the code you write"... i am printing a string, the commandline help.
[20:08:45] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later or tomorrow)
[20:08:49] <bud> https://0x0.st/-RvT.txt
[20:09:31] <bud> ^ and that works fine, but i was wandering that maybe somehow fancy quotes like that could be problematic.
[20:09:43] <bud> *wondering
[20:10:23] <Soliton> if you're wondering why shellcheck warns you you could read about that.
[20:10:23] <e36freak> shellcheck is just warning you in case you have unicode quotes as syntax by accident
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:50] <e36freak> printing them in help text should probably not be an issue
[20:10:58] <e36freak> i'd use a here document there, but echo's fine
[20:11:12] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 256 seconds)
[20:11:21] <bud> yeah, i used to do that in a here document, but thought it looked nicer with echo.
[20:11:27] <Soliton> echo -e is pretty dubious but they probably don't care.
[20:12:11] *** Quits: tobybl_ (~tobybl@dhcp-199-132.inf.ed.ac.uk) (Ping timeout: 250 seconds)
[20:12:34] *** Joins: frostwork (~frostwork@user/frostwork)
[20:12:42] <wiscii> also, minor bug:     -y, --ypos INT              | absolute X position of the menu
[20:13:03] <bud> it is autogenerated from markdown (via lowdown) and it did those fancy chars, i kind of like them, since they solved my original reasoning for here doc.
[20:13:31] <bud> wiscii: thanks, its stuff like that that gets left unnoticed for eons.
[20:13:41] <wiscii> ;-)
[20:13:51] <Soliton> so for a generated string echo -e probably makes no sense at all.
[20:14:43] <emanuele6> i generally prefer not to have non-ascii characters in my files
[20:14:52] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[20:14:52] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[20:14:52] *** Joins: Bercik (~Redomen@user/bercik)
[20:14:58] <bud> https://0x0.st/-RvB.png , this make thing is working well, i have been trying it out now on a couple of large bash scripts and it is great.
[20:15:33] <emanuele6> you can use \u2019 to print ’ without putting it literally into the code
[20:15:42] <bud> emanuele6: do you use EPOCHREALTIME to time your prompt command?
[20:15:57] <emanuele6> yes
[20:15:59] <bud> :D
[20:16:51] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[20:17:24] <bud> i rather use here doc then \u stuff
[20:18:03] <emanuele6> you can use unicode_quote=$'\u2019' and $unicode_quote in your here doc :/
[20:18:14] *** Quits: Night-Shade (~Tim@2001:8b0:1650:4d41:c09a:a05f:ee1f:c255) (Ping timeout: 268 seconds)
[20:18:46] <emanuele6> but again, it is ok to just write ’ in the source code
[20:18:51] <emanuele6> i just prefer not to do it
[20:18:54] *** Joins: The_Jag (~The_Jag@host-87-9-29-108.retail.telecomitalia.it)
[20:18:59] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[20:19:02] <bud> but in the here doc i will not get warnings if i do 'EOB', so actual unicode quote or even ascii quote is fine.
[20:20:44] *** Joins: Night-Shade (~Tim@2001:8b0:1650:4d41:c09a:a05f:ee1f:c255)
[20:22:53] <bud> https://0x0.st/-Rv1.png
[20:23:32] <bud> i know that make part is a complete mess.
[20:24:12] <bud> i haven't used lowdown prior, i used to use go-md2man. but lowdown generated very ugly tables.
[20:24:55] <bud> but i realized that the tables looked fine in --term-no-ansi and i also realized that format worked in the manpage as well.
[20:25:27] <emanuele6> > for ___f in "$__dir/./func"/*; ... ; unset ___f
[20:25:48] <emanuele6> hehe this has a subtle issue
[20:26:17] <emanuele6> oh, nevermind, it is not quite as i was thinking it
[20:26:46] <bud> yea, in makefile it is echo '"$$_dir/$(FUNC_DIR)"/*'
[20:27:13] <bud> and FUNC_DIR is set to ./func
[20:27:46] <emanuele6> i was thinking that if there is a file named __print_help in that directory, and ___f gets unset in that file, bash would unset __print_help, but that is innacurate, it would unset a function named ___f
[20:28:09] <emanuele6> anyway, you probably want to use -v with that unset
[20:28:24] <bud> thanks
[20:28:47] <emanuele6> unset tries to unset a variable with the given name, if it doesn't find a variable with that name, it will try to unset a function with that name
[20:29:08] <emanuele6> in almost all cases, you want you use -v with unset
[20:29:37] <bud> yeah that why i use ___ to make it less likely it would interfere with something else, but uing unset -v is really good.
[20:30:05] <bud> i guess i could put the loop in block {} , and declare ___f to be 1000% safe
[20:30:07] <emanuele6> # a=x; a () { printf "hi %s\n" "$a"; }; a "$a"; unset a; a "$a"; unset a; a "$a"
[20:30:08] <shbot> emanuele6: hi x
[20:30:08] <shbot> emanuele6: hi
[20:30:08] <shbot> emanuele6: bash: a: command not found
[20:31:32] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:32:15] <emanuele6> bud: run it in a subshell (`()', not `{;}')? are you sure? if you can source these files in a subshell, why are you even sourcing them?
[20:32:18] <wiscii> # a=x; a () { printf "hi %s\n" "$1"; }; a "$a"; unset a; a "$a"; unset a; a "$a"
[20:32:19] <shbot> wiscii: hi x
[20:32:19] <shbot> wiscii: hi
[20:32:19] <shbot> wiscii: bash: a: command not found
[20:32:25] <bud> not subshell
[20:32:30] <bud> https://0x0.st/-Rve.txt
[20:33:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:33:52] <emanuele6> that does not quite solve the issue without -v; if the last file runs `unset -v ___f' and you run `unset ___f' after, a function named ___f would still be unset
[20:33:57] <bud> hmm, didn't work as i thought.
[20:34:04] <larryv> declare only creates local variables within functions.
[20:34:20] <larryv> { ... } only groups, it doesn't introduce new scope
[20:34:52] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:34:59] <emanuele6> the `declare ___f' is not really needed at all, it is better to just use `unset -v' (-v or -f should always be specified)
[20:35:10] <bud> yeah, i saw that now. i thought you could declare block scoped locals, maybe its just if, for, function
[20:35:49] <bud> very nice, i will always do that now, imo that should be included in shellcheck
[20:35:51] <larryv> only functions. not if or for.
[20:36:25] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[20:36:49] <bud> https://0x0.st/-Rv9.txt
[20:36:53] <bud> :)
[20:38:02] <emanuele6> i think that now, if one of the file uses declare (without -g), the variable it defines will be local to the function
[20:38:12] <larryv> yup
[20:38:24] <emanuele6> i would just use what you were using originally, but specifying -v
[20:39:06] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:39:07] <bud> yeah, i will do that
[20:39:38] *** Joins: kapil (~kapil@o-k.website)
[20:40:35] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:41:40] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:42:18] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[20:43:29] *** Joins: extern (~archer@141.226.57.242)
[20:44:46] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:46:35] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 264 seconds)
[20:47:57] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[20:50:56] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[20:51:07] *** Joins: esselfe (~steph@user/esselfe)
[20:52:49] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 265 seconds)
[20:53:54] *** Joins: thiras (~thiras@user/thiras)
[20:55:27] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:56:00] *** Joins: kapil (~kapil@o-k.website)
[20:56:15] *** Quits: Guest64 (~Guest64@2800:200:f410:4b5c:59bf:440d:5a9c:e96b) (Quit: Client closed)
[20:56:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:56:52] <jcbjoe2021> guys im trying to use the find command to find all files in 2016 i have a lot of subdirectories also. also can it find by modified or created date?
[20:57:10] *** Quits: zro (~zro@user/zro) (Ping timeout: 265 seconds)
[20:58:42] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:59:27] <bud> find search recursevly by default, i think it is a limit to the nesting, but it can be set.
[20:59:35] <bud> i think -maxdepth
[20:59:50] <bud> you can also filter by date
[20:59:59] <jcbjoe2021> bud: find . ?
[21:00:02] *** Quits: extern (~archer@141.226.57.242) (Quit: WeeChat 3.3)
[21:00:12] <jcbjoe2021> i wnat all subdirectories
[21:00:24] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[21:00:28] *** Quits: abip20 (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[21:00:33] <bud> don't you get all subdirectories when you do find . ?
[21:00:37] <larryv> find looks through subdirectories unless you tell it not to
[21:00:45] <larryv> have you ... used find before?
[21:01:04] <Soliton> !ctime
[21:01:05] <greybot> ctime stands for "change time", not "creation time". Most file systems do NOT store a file's creation time at all. On those that do, you need nonstandard tools to retrieve it. Try "-newerBB" in GNU find for example.
[21:01:06] <jcbjoe2021> i have. but i don't know how to do the dates. looking for all of august 2016
[21:02:35] *** Joins: tobybl (~tobybl@213.31.134.235)
[21:05:35] <jcbjoe2021> so use ctime Soliton ?
[21:06:20] <Soliton> probably not.
[21:06:47] *** Joins: zro (~zro@user/zro)
[21:06:57] <Soliton> as teh factoid says chances are your filesystem does not store file creation time at all.
[21:07:23] <phy1729> bash uses K&R style function declaration?
[21:08:14] *** Joins: eleventh (~eleventh@143.131.13.208)
[21:08:41] <jcbjoe2021> exiftool? but that is only creation date
[21:08:58] <larryv> what are you ACTUALLY doing
[21:10:31] <jcbjoe2021> larryv: i imported a lot of pictures to a external hdd. my wife is trying to get all pictures from a certin month Aug 2016 and put them in a folder. we are doing it for a court case. i know linux is faster but right now im going in the gui one by one and doing it. its working but i know there is a faster way. im using her windows desktop computer with linux subsystem to find the information
[21:11:46] <jcbjoe2021> i used that goole task thing to import pictures from google photos, i forgot the name of it
[21:11:47] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[21:11:53] <jcbjoe2021> s/goole/google/
[21:12:48] <Soliton> you should first figure out if you want to look at file meta data or image meta data. maybe they're similar or maybe not.
[21:13:29] <Soliton> check a file with stat and exifwhatever and see what the dates are like.
[21:18:13] *** Quits: thevishy (~thevishy@2405:201:f005:c007:1100:f3e5:ecdd:62f7) (Quit: Client closed)
[21:18:38] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:22:06] <wiscii> jcbjoe2021: find . -newerat '2016-08-01' will get you half way there .. but not sure how to do older than ?
[21:22:18] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 265 seconds)
[21:22:35] <larryv> wiscii: they still haven't established whether the file metadata is even usable
[21:24:08] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[21:24:40] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[21:25:22] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[21:25:49] <lungaro> Is there a way to execute a function in a file I sourced (lib.sh) and access the callers $BASH_SOURCE ?
[21:26:07] <lungaro> trying to make a function to detect if i am being sourced or ran
[21:26:18] <Soliton> !faq sourced
[21:26:19] <greybot> https://mywiki.wooledge.org/BashFAQ/109 -- How can I tell whether my script was sourced (dotted in) or executed?
[21:26:19] <lungaro> but when I move the function into lib.sh, I lose that ability
[21:26:27] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[21:26:51] <Soliton> so hand the relevant data over.
[21:27:14] <lungaro> that makes it less intuitive but yeah. that's what I do now
[21:27:18] <lungaro> just wondering if there is a way w/o doing that
[21:27:27] *** Joins: A|an (~Alan@173.216.51.200)
[21:28:03] <Soliton> less overengineering.
[21:29:48] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[21:31:32] <Soliton> given the example in the wiki not sure how you managed to not make it work though.
[21:32:13] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:33:54] *** Quits: voices- (~voices_@84.238.197.28) (Ping timeout: 265 seconds)
[21:33:57] *** Joins: alzgh (~alzgh@user/alzgh)
[21:34:16] *** Joins: voices- (~voices_@84.238.197.28)
[21:34:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:35:38] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 256 seconds)
[21:36:41] *** Joins: foetus (~norbi@92.206.190.19)
[21:37:03] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[21:37:14] *** Parts: foetus (~norbi@92.206.190.19) ()
[21:38:15] *** Quits: Mo (~Mo@dynamic-077-001-248-082.77.1.pool.telefonica.de) (Ping timeout: 265 seconds)
[21:38:54] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[21:39:47] <lungaro> if i make a function "is_sourced" and put it in lib.sh -- it wont work
[21:40:07] <lungaro> i think we're talkin past each other, I have no beef passing the values into is_sourced function
[21:40:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:42:22] <Soliton> you can define the function wherever you want. shouldn't change how it works.
[21:42:40] *** Joins: ano (~ano@user/ano)
[21:42:43] <Soliton> i guess for some reason you also call it in lib.sh.
[21:43:32] *** Quits: put_in (~put_somew@123.20.213.95) (Remote host closed the connection)
[21:43:53] *** Joins: put_in (~put_somew@123.20.213.95)
[21:44:24] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:44:32] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 265 seconds)
[21:44:44] *** Joins: alzgh (~alzgh@user/alzgh)
[21:44:46] <Soliton> hmm, also you're talking about BASH_SOURCE for some reason.
[21:45:02] <Soliton> BASH_SOURCE is an array if that's the question.
[21:45:51] <lungaro> hmmmmmmmmmm, I see
[21:46:01] <lungaro> i think i'm all set then. Cheers
[21:46:25] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[21:48:05] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:48:17] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:52:30] *** Joins: cdown_ (~cdown@89.32.122.5)
[21:54:35] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:54:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:54:57] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[21:55:09] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[21:55:10] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 265 seconds)
[21:56:22] *** Joins: cdown (~cdown@163.114.131.1)
[21:56:28] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[21:57:42] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:58:54] *** Joins: mr-red (~drd@93-42-69-115.ip85.fastwebnet.it)
[21:59:31] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 265 seconds)
[21:59:45] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:59:56] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[22:00:16] *** Joins: alzgh (~alzgh@user/alzgh)
[22:01:13] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[22:02:10] <jcbjoe2021> Ok thanks wiscii
[22:03:18] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Quit: iamGavinJ)
[22:07:10] *** Joins: Forty-Bot (~kvirc@pool-108-18-207-184.washdc.fios.verizon.net)
[22:07:25] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:07:44] <Forty-Bot> how can I save the value of $@ to be used later where it would otherwise be used like "$@" directly?
[22:09:16] <larryv> args=("$@")
[22:09:28] *** Joins: kj- (~kj@beta.aerisnetwork.net)
[22:09:44] *** Parts: GNUHacker (~foobar@fsf/member/GNUHacker) (ERC (IRC client for Emacs 27.2))
[22:09:47] <Forty-Bot> thanks, that works
[22:12:34] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[22:13:05] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 250 seconds)
[22:15:45] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[22:16:01] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 268 seconds)
[22:16:24] *** Quits: mr-red (~drd@93-42-69-115.ip85.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[22:17:13] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[22:17:53] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 265 seconds)
[22:18:17] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:18:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[22:18:28] *** Joins: somlis (~somlis@user/somlis)
[22:19:48] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[22:20:44] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:22:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[22:22:17] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Remote host closed the connection)
[22:22:29] *** Joins: alzgh (~alzgh@user/alzgh)
[22:22:37] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[22:22:38] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[22:24:08] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[22:24:24] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[22:24:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:24:54] *** Joins: extern (~archer@141.226.57.242)
[22:25:50] *** Joins: thevishy (~thevishy@2405:201:f005:c007:1100:f3e5:ecdd:62f7)
[22:27:13] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[22:28:07] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:28:32] *** Joins: ghostboarder (~quassel@S010640623101dbe0.va.shawcable.net)
[22:28:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:29:00] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[22:29:26] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:30:08] *** Joins: Gerula (~Gerula@user/gerula)
[22:30:17] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[22:30:18] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[22:30:33] *** Joins: causa_sui (~causasui@192.241.228.169)
[22:31:34] *** Quits: extern (~archer@141.226.57.242) (Quit: WeeChat 3.3)
[22:33:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[22:36:03] *** Quits: causa_sui (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[22:37:33] *** bitchin is now known as CodeBender
[22:38:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:39:07] *** Quits: edlou (uid413273@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:39:33] *** Quits: mooz_ (~none@23.254.112.158) (Remote host closed the connection)
[22:39:54] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[22:39:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:40:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:41:23] *** Quits: Night-Shade (~Tim@2001:8b0:1650:4d41:c09a:a05f:ee1f:c255) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:41:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:42:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:42:21] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[22:42:30] *** Quits: Bercik (~Redomen@user/bercik) (Ping timeout: 256 seconds)
[22:43:12] *** Joins: remirol (~lorimer@user/lorimer)
[22:43:12] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[22:43:21] *** remirol is now known as lorimer
[22:44:05] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[22:44:14] *** Joins: tobybl (~tobybl@213.31.134.235)
[22:45:09] *** Joins: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl)
[22:45:09] *** Quits: Bercik (~Redomen@89-73-136-211.dynamic.chello.pl) (Changing host)
[22:45:09] *** Joins: Bercik (~Redomen@user/bercik)
[22:47:46] *** Joins: Night-Shade (~Tim@2001:8b0:1650:4d41:4c64:f098:f04a:9cb4)
[22:51:09] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[22:53:27] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Remote host closed the connection)
[22:53:53] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[22:54:41] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[22:55:24] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[22:55:56] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[22:55:59] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:56:40] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[22:56:57] *** Joins: voices- (~voices_@84.238.197.28)
[22:57:36] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:58:38] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[22:59:27] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Ping timeout: 250 seconds)
[23:00:12] *** Joins: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net)
[23:01:33] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[23:02:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:e1d1:e64a:139f:9e8)
[23:02:46] *** Joins: sinaowolabi (~SinaOwola@41.58.53.137)
[23:04:28] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[23:05:19] *** Quits: Night-Shade (~Tim@2001:8b0:1650:4d41:4c64:f098:f04a:9cb4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:05:58] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[23:10:55] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:12:38] *** Joins: ozoned (~odoood@2601:c8:c003:a550::3)
[23:15:22] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[23:15:24] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 265 seconds)
[23:16:03] *** Joins: az (az@stable.bnc.by.bnc4you.xyz)
[23:16:27] *** az is now known as Guest2799
[23:17:07] *** Joins: voices- (~voices_@84.238.197.28)
[23:17:11] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[23:19:48] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[23:19:48] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[23:19:48] *** Joins: wuseman (~wuseman@user/wuseman)
[23:20:49] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[23:20:55] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[23:21:31] *** Quits: voices- (~voices_@84.238.197.28) (Remote host closed the connection)
[23:21:57] *** Joins: voices- (~voices_@shikoku.cf)
[23:23:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:90b6:f063:786d:943c)
[23:24:39] *** Joins: pycurious (~Adium@user/pycurious)
[23:25:39] *** Joins: sunyibo_ (~dorsch@5.2.75.229)
[23:26:21] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (Ping timeout: 245 seconds)
[23:28:02] *** Joins: thiras_ (~thiras@user/thiras)
[23:30:12] *** Quits: furrymcgee (~devuan@cgn-89-1-208-64.nc.de) (Quit: leaving)
[23:31:24] *** Joins: Gerula (~Gerula@user/gerula)
[23:31:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[23:33:37] *** Quits: dlbh^ (~dlbh@h178.173.139.63.static.ip.windstream.net) (Remote host closed the connection)
[23:38:47] *** Quits: ozoned (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[23:38:52] *** Joins: gareppa (~gareppa@user/gareppa)
[23:38:58] *** Joins: dsrt^ (~dsrt@h178.173.139.63.static.ip.windstream.net)
[23:40:56] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[23:41:46] *** Quits: ops (~ops@user/echelon) (Ping timeout: 245 seconds)
[23:42:00] *** Quits: sunyibo_ (~dorsch@5.2.75.229) (Ping timeout: 256 seconds)
[23:42:41] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[23:43:41] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[23:44:11] <p-i-> I have a (Python) udp socket listener. To test it I send `echo '{"foo":42}` > /dev/udp/127.0.0.1/50007` from the same box (different login) and it picks it up.
[23:44:42] <p-i-> But if I send from a different box, specifying the public IP of the listener box, the listener won't pick it up.
[23:44:57] <w1kl4s> is your listener listening on 127.0.0.1 or 0.0.0.0
[23:44:58] <p-i-> i.e. `echo '{"foo":42}` > /dev/udp/123.45.6.78/50007`
[23:45:14] <phy1729> sounds like firewall or listening on question not a bash question
[23:45:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:e1d1:e64a:139f:9e8) (Remote host closed the connection)
[23:45:38] <phy1729> I'll assume the ` after } is a typo
[23:45:50] <p-i-> 0.0.0.0 ... and the listener code has successfully received packets sent from other boxes.
[23:46:06] <p-i-> oh yes, wrong quote my bad. Should be '
[23:46:45] *** Joins: voices-_ (~voices_@84.238.197.28)
[23:47:44] *** Joins: rtypo (~alex@user/rtypo)
[23:48:26] *** Joins: n4dir (~user@i577BC866.versanet.de)
[23:48:39] *** Joins: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net)
[23:50:41] *** Quits: voices- (~voices_@shikoku.cf) (Ping timeout: 265 seconds)
[23:51:00] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:51:20] <twkm> sounds like a network or o/s issue.
[23:52:38] <p-i-> What's a/s?
[23:52:48] <p-i-> OS?
[23:52:54] <p-i-> sorry, o/s
[23:53:09] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Remote host closed the connection)
[23:53:17] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:53:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[23:55:18] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[23:55:49] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7839:e0f2:7ca6:b112)
[23:55:54] <twkm> operating system.
[23:57:40] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[23:59:44] *** Joins: thiras (~thiras@user/thiras)
