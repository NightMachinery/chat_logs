[00:01:25] *** Joins: Guddddu (~Guddu@190.84.88.92)
[00:02:12] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[00:02:57] <habnabit_> matsaman, pdb has a lot of weird restrictions on its input and that is one of them yes
[00:03:05] <habnabit_> matsaman, what would the point be?
[00:03:13] *** Quits: pro_z (~pro_z@37.214.79.197) (Ping timeout: 252 seconds)
[00:03:19] <matsaman> to make it more useful :/
[00:03:31] <sliwkr> Hey, for once I wanted to do a proper, officially-recommended way of setting up a python project with setup.cfg and pyproject.toml.  I'm not sure how to install the project dev requirements in a virtual environment.  Is there a way of doing something similar to `pip install -r requirements.txt` on a pyproject.toml file?  (Here's what i got: https://bpa.st/RMDA)
[00:03:34] <matsaman> is there a way to tell breakpoint() to let me use a fully functioning console?
[00:03:48] <habnabit_> matsaman, ok, but what would be more useful?
[00:03:52] <habnabit_> matsaman, maybe ipdb
[00:04:02] <matsaman> being able to put in multiple lines
[00:04:04] <habnabit_> sliwkr, pipp install .
[00:04:09] <matsaman> hrmmm, ipdb...
[00:04:20] <habnabit_> matsaman, the utility of being able to put in multiple lines is that you can put in multiple lines? that's a bit tautological
[00:04:22] *** Quits: Gudddu (~Guddu@190.84.88.92) (Ping timeout: 244 seconds)
[00:04:45] <matsaman> habnabit_: for the things python requires multiple lines for
[00:04:51] <matsaman> becuase of significant whitespace
[00:04:51] <habnabit_> matsaman, such as..?
[00:05:08] <matsaman> you can't think of one? =)
[00:05:10] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c0cc:c5be:7650:abff)
[00:05:16] <habnabit_> matsaman, i can't think of any i'd type at a debugger prompt, no
[00:05:30] <matsaman> so you can think of one, good
[00:05:45] <habnabit_> matsaman, python lets you do a lot of useless things
[00:05:51] <matsaman> no doubt
[00:05:53] <habnabit_> matsaman, i am asking you specifically to elaborate on the utility
[00:06:04] <matsaman> I can see that
[00:06:10] <jokoon> is it possible to capture the output of subprocess.run on powershell without muting it on powershell?
[00:06:13] *** Joins: vats (~vats@180.149.226.8)
[00:06:14] <habnabit_> matsaman, i forgot how irritating it is to talk to you
[00:06:17] <hodapp> matsaman: it's a tad ironic to mock someone for that considering the number of times I've asked you in ##linux to back something up with evidence
[00:06:21] <matsaman> appreciate the ipdb suggestion, I'll take a look at it after I look at breakpoint & pdb docs
[00:06:30] <matsaman> habnabit_: okay good to know
[00:06:33] <hodapp> matsaman: and you've responded first with basically "do your own research" and then just with sarcastic deflection and passive-aggressive quips
[00:06:58] <matsaman> hodapp: it's not, because me wanting to type two lines in pdb has nothing to do with facts, it's merely a desire I have
[00:07:01] <habnabit_> hodapp, no, it's the same here; i just forgot who i was talking to
[00:07:12] <matsaman> hodapp: I've literally never said "do your own research" in my life =P do not misquote me please
[00:07:49] <hodapp> matsaman: there is a reason I prepended with "basically"
[00:07:57] *** Quits: braxas (sid508886@id-508886.tooting.irccloud.com) ()
[00:08:16] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[00:08:21] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[00:08:40] *** Joins: shad (~shad@user/shad)
[00:09:20] <matsaman> hodapp: there's a reason we have quotation marks, too, but whatever my friend =)
[00:09:35] <Hax0r> 4
[00:10:30] <hodapp> matsaman: and there's also a reason we have the word "basically" and that language is sensitive to context
[00:10:56] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[00:10:57] <matsaman> hodapp: I feel like you just said that
[00:11:06] *** Joins: Barones (~Barones@189.114.62.31)
[00:11:25] <hodapp> matsaman: no, I literally said something different
[00:12:18] <matsaman> oh I guess there is some 'interact' command? Hrmmm
[00:12:19] <Henry151> hey again. Can someone help me understand where these "json_build_object(%%(json_build_object_1)s" things are coming from here? https://bpa.st/raw/AISQ
[00:12:23] <matsaman> hodapp: neat
[00:12:50] *** Quits: aselman4 (~aselman4@136.2.33.161) (Quit: Client closed)
[00:13:02] <hodapp> ...thus succinctly proving my original point
[00:13:13] <matsaman> hodapp: neat-o
[00:13:36] <hodapp> matsaman: people here have Python questions, so perhaps take it elsewhere
[00:13:49] <matsaman> hodapp: I was asking a python question when you decided to misquote me about something unrelated =P
[00:13:57] <matsaman> stop messaging me, and I will cease to respond to you
[00:15:11] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[00:15:19] <jokoon> is it possible to capture the output of subprocess.run on powershell without muting it on powershell?
[00:15:31] *** Joins: odrling (~odrling@korone.aidoru.agency)
[00:15:31] <matsaman> pretty neat =): https://docs.python.org/3/library/pdb.html#pdbcommand-interact
[00:15:52] <hodapp> Henry151: sorry, what is dbSession?
[00:16:24] <Henry151> hodapp: it's an sqlalchemy database session
[00:17:53] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[00:18:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[00:19:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:20:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[00:21:12] <bookworm> jokoon: what do you mean by "muting" ?
[00:21:28] <jokoon> bookworm, suppress
[00:21:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:22:03] <bookworm> supress how? generally you redirect output to wherever you want it, that's not suppressing it
[00:22:45] <jokoon> mmmh apparently when I capture it, it doesn't show in my terminal
[00:23:04] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[00:24:07] <bookworm> yeah, but you *captured* it, so you have the string in the object returned and can do whatever you want with it, including printing it
[00:24:21] <bookworm> it just doesn't do so automatically
[00:25:25] <jokoon> I want it both in my terminal AND capture it
[00:26:05] <bookworm> so?
[00:26:16] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[00:26:27] <bookworm> res = subprocess.run(blah, capture_output=True); print(res.output)
[00:26:29] <hodapp> so capture it and print it?
[00:26:32] <bookworm> paraphrasing, consult the docs
[00:27:27] <jokoon> hodapp, yes
[00:27:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[00:27:38] <jokoon> hum
[00:27:49] <jokoon> no
[00:27:54] <bookworm> no what?
[00:28:18] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[00:28:27] *** Joins: arinov (~arinov@213.194.126.155)
[00:28:31] <jokoon> if I just call subprocess, the output of what I call is printed into my powershell
[00:28:52] <jokoon> If I use  capture_output=True, it doesn't
[00:28:57] <bookworm> yes, because the stdout defaults to a pipe, connecting your actual stdout with the suprocesse's stdout
[00:29:05] <bookworm> did you read what I wrote, the code?
[00:29:08] *** Joins: nips (~nips@abv84.internetdsl.tpnet.pl)
[00:29:11] *** Quits: nips_ (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 250 seconds)
[00:29:12] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:29:52] <jokoon> the problem is that what I call outputs stuff progressively over time
[00:29:59] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[00:30:05] <jokoon> so I want to follow it and log it
[00:30:22] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[00:30:35] *** Joins: Slimgin (~quassel@097-071-159-002.biz.spectrum.com)
[00:30:37] <jokoon> seems like I can't do what I'm asking
[00:31:14] <bookworm> you can, but you need to drop one level deeper in the api and don't use the hightest level wrapper available to you
[00:31:30] <bookworm> https://docs.python.org/3/library/subprocess.html#subprocess.Popen
[00:31:33] <zware> Henry151: It appears to be building a json object from several columns to return as `bread_data`.  Looks like one call to `json_build_object`, and each of the `%%(json_build_object_#)s`s is naming a key in the returned JSON object
[00:32:31] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:32:39] <jokoon> okay so I cant do what I want with run()
[00:32:40] *** Quits: gilnims (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 240 seconds)
[00:33:39] <bookworm> you can maybe get away with specifying a "tee" like file object as the stdout parameter and try it that way
[00:34:32] <jokoon> with subprocess.PIPE?
[00:35:21] *** Quits: MaximB (~MaximB@87.68.164.81) (Quit: Client closed)
[00:36:05] *** Joins: nomic (~nomic@185.192.69.188)
[00:36:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:36:38] <bookworm> do you just want to pass the output to the terminal or do you want to pro grammatically do things with it as well?
[00:37:00] <bookworm> you mentioned "logging and following it", I assume that means "save to file" + "show in terminal" ?
[00:37:14] <jokoon> yes
[00:37:58] <lilibyte> run(['etc'], stdout=PIPE).stdout.decode('utf-8')
[00:38:03] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-3d62-3163-6f7f-de12.res6.spectrum.com)
[00:38:23] <humanBird> what are the limitations on python dictionary keys?  can they be special characters?
[00:38:44] *** Joins: fikran (~fikran@user/fikran)
[00:38:45] <stewie925> hi pythonistas, I have this head-scratching issue with regards to splicing list - https://bpa.st/3YDA
[00:38:53] <humanBird> can you have a dictionary like { '!@#$%^&*()_+-=\'': "stuff"}
[00:39:01] <hodapp> humanBird: they can be anything immutable
[00:39:23] <zware> humanBird: Yep, that's no problem
[00:39:31] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:39:38] *** Quits: jasper_ (~user@styria.daemonized.org) (Quit: jasper_)
[00:39:54] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:716c:1cf5:8c98:a930) (Quit: Leaving)
[00:39:57] <humanBird> what happens if i parse the contents of a file and use that as a dictionary key?
[00:40:03] <bookworm> jokoon: something in here might be helpful: https://stackoverflow.com/questions/616645/how-to-duplicate-sys-stdout-to-a-log-file
[00:40:07] *** Quits: Elzington (~Elzington@68.235.43.174) (Quit: Leaving)
[00:40:16] <humanBird> and this file has some funny unicode/ascii/whatever in it that the text editor can't even display
[00:40:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[00:40:39] <bookworm> lilibyte: that waits until the command is done right? they want "online" display of say a large find output over time
[00:40:47] <zware> humanBird: dicts don't even require keys to be strings
[00:41:01] <jokoon> thats pretty hairy
[00:41:10] <zware> humanBird: dict won't reject any string you could possibly come up with as a key
[00:41:33] <bookworm> jokoon: there's off the shelve modules in pypi if that's more your style
[00:42:42] *** Joins: djapo (~archangel@user/djapo)
[00:43:21] <jokoon> stdout=PIPE doesn't work!
[00:43:22] *** Joins: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net)
[00:44:35] <jokoon> oh needs a subprocess
[00:45:13] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[00:45:29] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[00:45:41] <stewie925> sorry guys, I just realized my array is in a different order....  whew
[00:46:56] *** Quits: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no) ()
[00:51:23] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 244 seconds)
[00:53:00] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[00:53:29] <jokoon> proc.stdout is empty, don't I need both stdout=subprocess.PIPE and capture_output=True ?
[00:53:40] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[00:54:19] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[00:54:21] <jokoon> no I cant...
[00:54:37] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[00:54:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[00:54:59] <asgas> Is it a bad idea to use a pyqt4 program in 2021? I found a wacom config program on github, but it's still on pyqt4 and modern distros don't even package that anymore.
[00:55:12] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[00:55:34] <zware> jokoon: Sounds like you basically need an object with a `write` method that does what you want, which you can pass in as `stdout`
[00:56:21] <ChrisWarrick> asgas: if there is no better tool, you can definitely use that one
[00:56:39] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[00:56:48] <ChrisWarrick> asgas: although getting pyqt4 working might be difficult — perhaps you could try to port it to pyqt5/6
[00:56:50] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[00:56:59] <zware> jokoon: So, if you're writing to a file, your `write` method would write to both the file and `sys.stdout` (or `sys.stdout.buffer` if using bytes).  You may prefer to flush sys.stdout after each write as well to make sure it updates as quickly as it can
[00:57:02] <jokoon> https://bpa.st/RWDA
[00:58:27] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 245 seconds)
[00:58:28] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Remote host closed the connection)
[00:58:33] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[00:59:14] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[00:59:34] <zware> jokoon: Completely untested: https://bpa.st/QVPQ
[01:00:42] *** Joins: Pandadub (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376)
[01:00:55] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:00:58] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:02:26] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:37] *** Quits: Barones (~Barones@189.114.62.31) (Ping timeout: 252 seconds)
[01:03:36] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[01:05:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[01:05:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:06:00] <Henry151> thanks zware
[01:06:19] <lilibyte> once i captured stdout with this terrible hack `with io.StringIO() as buf, contextlib.redirect_stdout(buf): <something printing to stdout>; output = buf.getvalue()`
[01:07:41] <zware> lilibyte: That looks more like "the right way to do it" than "terrible hack" :)
[01:09:06] <lilibyte> oh. well then in this case couldnt you just both print `output` and write it to a file?
[01:09:22] <zware> lilibyte: In fact, see https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout
[01:09:37] <zware> lilibyte: The different for jokoon is that he's running a subprocess
[01:09:54] <zware> s/he's/they're/
[01:11:12] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 256 seconds)
[01:11:37] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[01:12:06] *** Joins: nomic (~nomic@185.192.69.188)
[01:15:08] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[01:15:41] *** Joins: georgios (~georgios@user/georgios)
[01:15:47] <phillhocking> oh hey, i'm trying to make a unit test to test cli attributes, but definitely doing something wrong... anyone willing to take a look? https://github.com/phillhocking/package_statistics/tree/dev
[01:19:52] <humanBird> if i have some_dict[some_key][another_key] as the shape of my dcitionary, but the initial dictionary is empty, how do I go about incrementing the value if it's found, or setting to 0?
[01:20:02] <grym> phillhocking: you can mock argparse if you have to: https://stackoverflow.com/a/37343818
[01:20:43] *** Quits: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[01:20:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:21:08] <bookworm> humanBird: easiest is collections.defaultdict (the casing may be wrong)
[01:21:26] <bookworm> ha, nailed it actually
[01:21:30] <jokoon> object has no attribute fileno
[01:21:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:21:51] * bookworm curses at the inconsistent casing in the collections module
[01:21:55] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2cdd:4636:d703:2ebd) (Ping timeout: 256 seconds)
[01:22:03] *** Joins: sysopch (~sysopch@2001:b07:6469:cc5f:716c:1cf5:8c98:a930)
[01:22:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:23:47] *** Quits: Allegretto (~allegrett@91-83-192-103.pool.digikabel.hu) (Ping timeout: 250 seconds)
[01:24:24] *** Lord_of_Life_ is now known as Lord_of_Life
[01:24:29] *** Quits: Akuli (~Akuli@82-203-165-163.bb.dnainternet.fi) (Quit: Leaving)
[01:24:29] <zware> jokoon: I did say "completely untested" :).  Apparently subprocess wants an object more file-like than I thought :(
[01:24:48] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 256 seconds)
[01:26:12] <jokoon> problem: the program I call with subprocess has a [y/n] input thing
[01:26:20] *** Joins: zepolen (~zepolen@ppp-94-68-115-2.home.otenet.gr)
[01:26:24] <jokoon> and it's hidden with capture_output
[01:28:35] <jokoon> why not filething = open();run([], stdout=filething)
[01:29:02] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:30:08] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[01:30:11] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:30:42] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[01:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:31:22] <zware> jokoon: If that gets what you want, go for it
[01:31:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[01:32:26] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[01:34:16] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:21] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:37] <jokoon> did not work
[01:35:21] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[01:35:37] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[01:35:42] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Client Quit)
[01:35:52] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[01:36:45] <zware> jokoon: https://bpa.st/5R7A This at least appears to work, but is rather terrible
[01:36:57] *** Joins: mago (~mago@46.222.242.210)
[01:37:35] *** Joins: Allegretto (~allegrett@84-236-30-129.pool.digikabel.hu)
[01:39:57] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 244 seconds)
[01:40:15] <nedbat> phillhocking: I would make argv testable by passing it explicitly to your main() function. then you can call main() with whatever arguments you want.
[01:40:37] *** Quits: iomari891 (~iomari891@197.210.76.203) (Quit: WeeChat 3.0.1)
[01:41:55] <phillhocking> nedbat: isn't that already the case with my main() function? the argparse calls the await fetch(args.arch)
[01:41:59] *** hays is now known as h_
[01:42:23] <nedbat> phillhocking: your main function takes no arguments. It implicitly uses sys.argv through argparse
[01:42:59] <phillhocking> oh. how would i change that without breaking argparse?
[01:43:40] <nedbat> phillhocking: you can pass an explicit list of strings to argparse
[01:43:43] <zware> phillhocking: argparse's `parse_args` takes an `argv` argument.  So you can `def main(argv=sys.argv): ...; parse_args(argv)`
[01:46:34] <phillhocking> zware: that broke it lol
[01:46:52] *** Joins: Elzington (~Elzington@68.235.43.174)
[01:46:52] <nedbat> phillhocking: or:  ` def main(argv): ... parse_args(argv); ...      main(sys.argv) `
[01:47:10] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 240 seconds)
[01:47:53] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[01:48:25] <phillhocking> nedbat: after that change now i'm getting TypeError: main() missing 1 required positional argument: 'argv'
[01:48:42] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:50:16] <Payam> does any know how to add an icon to an python application?
[01:50:28] <Payam> when packaging to debian?
[01:50:33] <Payam> .deb
[01:50:42] <jokoon> ok so my program was writing to stderr :/
[01:50:57] *** Quits: mago (~mago@46.222.242.210) (Quit: Client closed)
[01:51:18] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:52:11] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:794:8415:afb:7a2f) (Ping timeout: 252 seconds)
[01:52:52] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:53:41] <nedbat> phillhocking: we need to see the latest code.
[01:54:01] *** Joins: zebrag (~chris@user/zebrag)
[01:54:02] <nedbat> phillhocking: you have to update the last line to be main(sys.argv)
[01:54:22] <grym> and probably sys.argv[1:]
[01:54:25] <grym> it's been a while i'm not sure
[01:54:46] <zware> phillhocking: ^ grym has it, I forgot the [1:]
[01:55:27] <nedbat> phillhocking: for completeness: the last line should be:  asyncio.run(main(sys.argv[1:]))
[01:55:38] <Payam> nedbat, grym what you guys are doing is amazing. I don't think you get enough appreciation for all support you give to python enthusiasts. Big thank you to you guys and other people that are always ready to help other people.
[01:55:50] <nedbat> Payam: <3
[01:56:26] <jstein> Hi, I am stuck at copying data from a pandas dataframe to a dataframe with timeseries index. I think this is an FAQ and found several hits with the search engine but could not get a working solution. I understood that the problem is that a simple newdf["length"] = olddf["length"] will not copy, but create a view.
[01:56:53] <grym> zware: never have i ever `args = {k:v for k,v in zip(sys.argv[1::2], sys.argv[2::2]}` >:)
[01:57:02] <grym> Payam: thanks!
[01:57:13] <jstein> how can I do this right? I tried newdf["length"] = olddf.loc[:, ('length')]
[01:57:21] <phillhocking> ok, i refactored as y'all suggested and now it is working again
[01:57:23] <jstein> but this failed.
[01:57:28] <grym> zware: (that's obviously horrible, never do that for real)
[01:58:14] *** Joins: waynew (~wayne@user/waynew)
[01:58:57] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[01:59:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:00:07] <phillhocking> ok so now my main() is testable, what all do i do in the cli_test.py?
[02:01:10] *** Quits: Slimgin (~quassel@097-071-159-002.biz.spectrum.com) (Ping timeout: 240 seconds)
[02:01:38] *** Joins: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at)
[02:01:57] <grym> phillhocking: assert facts!
[02:03:29] *** Joins: qk1z (~qk1z@193-82-233-119.tpgi.com.au)
[02:03:31] <grym> though your functions don't return anything, so that's harder to do
[02:03:45] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[02:03:52] <phillhocking> i was trying to test executing the cli, if that makes sense
[02:04:01] <grym> sure
[02:04:06] <phillhocking> that's why i got the cli_test_helpers
[02:04:29] <grym> but the best you can do right now is actually run it, grab stdout, and then make assertions about what those bytes are
[02:04:34] <grym> i think
[02:05:56] <grym> phillhocking: if roughly this business logic was in its own function, you could write tests about that function's work without hitting the network: https://github.com/phillhocking/package_statistics/blob/dev/package_statistics.py#L68
[02:06:31] <grym> but right now your I/O is all tangled up with your processing, so you have to test the whole lot at once
[02:07:25] *** Quits: Sky_Net (~Sky_Net@176.14.213.85) (Read error: Connection reset by peer)
[02:09:00] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[02:10:21] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:13:30] <Payam> No one has ever deployt to a .deb package and can help my how , during installation of my application, a desktop file and icon can be placed in installation folder?
[02:13:44] <Payam> does python have a guide that someone can link me to?
[02:14:18] <zware> Payam: That really sounds more like a .deb question than a Python question to me
[02:14:21] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:15:13] <Payam> zware, debian people think it is more a python question :D
[02:15:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:15:37] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[02:15:41] <zware> Payam: I suspect you'll need to provide more detail in one place or the other, then :)
[02:15:46] <Payam> Payam: that seems like either a python question or a debian packaging question, if the application is eventually for inclusion in debian you might want to reach out to the python packaging team or look in their salsa repo for examples
[02:15:52] <Payam> this is what they told me :D
[02:16:13] <Payam> I read it now. Salsa repo?
[02:16:40] <zware> Payam: No idea, never heard of it
[02:16:52] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[02:16:58] <Payam> I have the setup file ready. I wrote a desktop file and have a dummy icon. so now what do I do.
[02:17:30] <grym> i've never written a .deb in my life, sadly
[02:17:31] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:17:34] <grym> or, perhaps, very gladly!
[02:17:50] <zware> Payam: I would assume you just need to package up your .deb, but I don't know how one goes about doing that
[02:18:15] <Payam> zware, I can create a deb file but no icon will be visible
[02:18:27] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[02:18:35] <Payam> grym, yeah gladly.
[02:18:39] <zware> Payam: (Although are you really sure you need a .deb?)
[02:18:58] <Payam> zware, yeah. .deb is all I know. Other stuff are scary
[02:19:52] <Payam> Python has a good guide on creating .deb files but nothing about icons and so on. python-stdeb page on pypi
[02:20:07] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:20:14] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:74ce:2b07:aeff:fbe2) (Ping timeout: 252 seconds)
[02:21:03] <Payam> But Icon I mean shortcut icon btw
[02:21:27] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (Quit: No Ping reply in 180 seconds.)
[02:21:28] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[02:22:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[02:22:52] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[02:23:13] <zware> Payam: Presumably it's just a matter of including the icon in the right place, but I can't tell you how to go about that.  The only thing in Python even remotely related to icons is in `tkinter`, but that's for an application icon, nothing to do with shortcuts
[02:23:46] *** Quits: Pandadub (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376) (Remote host closed the connection)
[02:23:53] *** Joins: Pandadub (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376)
[02:24:35] <phillhocking> ok, so how am i messing up this test here? it doesn't seem to be getting the argv context: https://github.com/phillhocking/package_statistics/blob/dev/cli_test.py
[02:25:05] <grym> Payam: in my world, things i can't pip install are scary :)
[02:25:05] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad) (Quit: Client closed)
[02:25:26] <Payam> grym, you never do a sudo apt install?
[02:25:41] <grym> Payam: sure, but i mean specifically python things
[02:25:52] <grym> sorry, that was over-broad
[02:26:05] <Payam> grym, I never done anything else but pip install
[02:26:13] <Payam> never manually installed anything.
[02:26:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[02:26:47] <phillhocking> i never ran ./configure && make install in my life :D
[02:27:15] <grym> phillhocking: i would've expected to see something like `result = package_statistics.main('x86'); assert("foo" in result)` or the like, no mocks required
[02:27:19] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[02:27:24] <grym> phillhocking: but, your main() returns None
[02:28:28] <grym> phillhocking: so you'll want to read up on capsys: https://docs.pytest.org/en/6.2.x/capture.html#accessing-captured-output-from-a-test-function
[02:28:47] <phillhocking> well with that cli_test.py it is saying error: the following arguments are required: arch
[02:28:53] <phillhocking> like it isn't getting the 'baz'
[02:29:09] <grym> and your test would call main with stuff, then examine capsys.out, and make assertions about that list of strings
[02:29:46] <grym> Payam: i've hand-built a lot of things, but rarely as root :)
[02:30:28] <Payam> How long have you worked as a developer?
[02:30:35] <Payam> sorry about offtopic
[02:30:54] <grym> arguably never, my job title has always been 'research scientist' :)
[02:31:06] <grym> (but for about 12 years)
[02:31:06] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[02:31:12] <grym> er, 15? somethin'
[02:32:04] <Payam> ah what is your major
[02:32:13] <grym> biosciences
[02:32:14] *** Joins: iflema (~ian@user/iflema)
[02:32:27] <Payam> phd?
[02:32:27] <grym> so, lots of modeling; thus, python by way of numpy
[02:33:17] <grym> i'm a weird academic/industry hybrid :P
[02:33:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:36:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[02:36:40] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:36:41] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:38:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:40:03] *** Joins: mago (~mago@46.222.242.210)
[02:40:22] <Payam> that is awesom
[02:40:41] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:40:47] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[02:40:51] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c0cc:c5be:7650:abff) (Quit: Leaving)
[02:40:57] *** Joins: Slimgin (~quassel@2603:9001:207:a100:8438:7c2d:9614:9bfb)
[02:41:13] *** Joins: ice9 (~ice9@user/ice9)
[02:41:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[02:42:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:42:40] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[02:44:35] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:44:43] *** Parts: mago (~mago@46.222.242.210) ()
[02:45:12] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[02:45:40] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[02:46:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[02:46:12] *** Joins: odoood (~odoood@2601:c8:c003:a550::c)
[02:47:04] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[02:47:14] <ali1234> is there something built in to convert int to string in an arbitrary base?
[02:47:25] <ali1234> like the reverse of int(s, n)
[02:48:06] *** Joins: fikran (~fikran@user/fikran)
[02:48:55] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[02:49:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[02:49:19] *** Quits: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[02:51:22] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[02:51:57] <Repiphany> ali1234: You can do binary, octal and hex with 0b, 0o and 0x like `f'{1000:0b}'`
[02:52:05] <ali1234> i need base 4
[02:52:06] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:52:19] <ali1234> and i need it to be fast or there's no point
[02:52:34] <ali1234> so i don't want to implement it in python
[02:52:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:52:56] *** Joins: jasper_ (~user@styria.daemonized.org)
[02:53:02] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[02:53:24] *** Joins: luna-is-here (~quassel@ip-95-223-58-39.hsi16.unitymediagroup.de)
[02:53:38] <Repiphany> Numpy has base_repr if you can use that
[02:54:01] <ali1234> that should do, thanks
[02:54:10] *** Joins: dev0 (~dev0@user/deepspace-link)
[02:54:19] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[02:54:55] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[02:57:09] <ali1234> what i actually need to do is remove internal zeros from a number in base 4, so it goes 0, 1, 2, 3, 10 -> 1, 11, 12, 13, 20 -> 2, and so on. actually thinking about it, i can just use a massive lookup table
[02:57:31] <ali1234> in numpy, so it will be fast
[02:58:49] <ali1234> i only need numbers up to... 333333333 (base 4) = 262143
[02:59:22] <ali1234> so lookup table will be ~1MB
[03:00:33] <nedbat> ali1234: will a lookup table in numpy be faster than in Python?
[03:00:40] <ali1234> er, yes?
[03:00:51] <nedbat> ali1234: i don't see why it would be.
[03:01:02] <ali1234> because i'm analysing a game tree
[03:01:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:01:21] *** Joins: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at)
[03:01:25] <nedbat> ali1234: ok, but a lookup table is base4numbers[x], right? just indexing into it?
[03:01:46] <ali1234> right
[03:01:57] <nedbat> ali1234: why would a numpy array be faster than a list?
[03:02:12] <ali1234> oh it won't, but it will use less memory
[03:02:28] <ali1234> and it won't be slower either
[03:02:28] *** Joins: dh (dh@bsd.ee)
[03:02:37] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:02:42] <ali1234> cos python ints are bigger than 4 bytes right?
[03:02:55] <ali1234> where as my numpy table can be uint32
[03:02:57] *** Joins: audiophile_ (~audiophil@user/audiophile)
[03:03:00] <nedbat> ali1234: if it's smaller, it's because it's using packed ints, so accessing it will require converting the int to a Python int, which a list wouldn't have to do.
[03:03:18] <ali1234> why?
[03:03:21] <nedbat> you'd have to measure to see what the speed would be.
[03:03:24] <nedbat> ali1234: why what?
[03:03:32] <ali1234> i mean, who says i'm going to access them one at a time? i can vectorize :)
[03:03:41] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[03:03:42] <nedbat> ali1234: ok, you hadn't mentioned that yet :)
[03:03:58] <nedbat> then numpy will definitely be faster
[03:04:06] <ali1234> so imagine if you gave a number to every possible state of tic tac toe
[03:04:14] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[03:04:25] <ali1234> then imagine there's 3 players so each cell has 4 states (base 4)
[03:04:51] <ali1234> then apply gravity to the board... so you can't play top left, the piece "falls" to bottom left
[03:05:07] <ali1234> now build a state tree of every possible game
[03:06:16] <nedbat> ali1234: sounds intense
[03:07:04] <ali1234> not really, it is < 262143 states... so as long as it is stored efficiently and you don't do silly nested for loops everywhere, it should be possible to solve the game in a few minutes
[03:07:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:02] <ali1234> the "apply gravity" step is the most trouble because... well it requires a bunch of bit shift operations, or a lookup table
[03:08:27] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[03:08:31] <humanBird> how do you verify that the output of a print statement has been printed correctly? not looking for mocking.  has to be automated too
[03:08:35] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[03:09:15] <humanBird> pretend you have the correct output.  and you're not storing the print statement output in a separate structure to compare to the expected output. it must be verified on the print output
[03:09:20] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 244 seconds)
[03:09:37] <humanBird> This seems like an impossible task unless you use image recognition
[03:09:43] <ali1234> popen?
[03:10:06] <ali1234> there are libraries that simplify it, like pexpect
[03:10:18] <nedbat> humanBird: you can replace sys.stdout, capture the output, and check what it is.
[03:10:40] <nedbat> humanBird: i know: "it must be verified on the print output"  why? what do you mean?
[03:11:34] <humanBird> is there some sort of hook to verify that the print statment was actually called?
[03:11:55] <nedbat> humanBird: what is wrong with replacing the print function, or replacing sys.stdout?
[03:12:04] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[03:12:05] <humanBird> a fired event.. something
[03:12:10] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:12:16] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[03:12:28] <nedbat> humanBird: are you seeing my questions?
[03:12:36] <humanBird> not sure what you mean by replacing.  if it's getting replaced with something else, it's not getting called
[03:12:52] <ali1234> huh, i just realised this "gravity" operation is super easy
[03:12:53] <nedbat> humanBird: you can replace it with a function that also calls the original print if you like.
[03:14:01] <zware> humanBird: Or if you don't want to replace stdout, run the program in a separate process and look at its output
[03:14:52] <ali1234> if number & 330 is divisible by 40: divide by 40 and add number & 3; else if number is divisible by 40: divide by 40 (all in base 4) - and numpy can trivially vectorize that.
[03:15:39] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:16:56] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d0e3-c6c5-b443-1364.res6.spectrum.com) (Read error: Connection reset by peer)
[03:17:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[03:19:02] <humanBird> sounds like hailstone sequence.
[03:19:03] *** Joins: Adoi (~Adoi@user/adoi)
[03:19:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:20:38] <ali1234> humanBird: my thing? no, it's not. you can't repeat those rules, they always result in a number that is not divisible by 4, except when you started with 0
[03:21:31] <ali1234> also i wrote it wrong. the second part should "if divisible by 10: divide by 10"
[03:21:49] <ali1234> (10 base 4 that is)
[03:23:46] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[03:23:49] <phillhocking> hey grym why does this test not seem to be handing off the arguments? i made it as simple as i could fathom: https://github.com/phillhocking/package_statistics/blob/dev/cli_test.py
[03:23:59] <phillhocking> keeps erroring out saying its not getting arguments
[03:24:24] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:24:56] <nedbat> phillhocking: you aren't supposed to call fixtures yourself.
[03:25:17] <nedbat> phillhocking: also, wouldn't the error be "amd64 not defined"?
[03:25:21] *** Quits: Samian (~Sami@163.114.130.5) (Ping timeout: 244 seconds)
[03:25:23] <phillhocking> lol i don't have the slightest clue what i'm supposed to be doing
[03:25:44] <phillhocking> pytest: error: the following arguments are required: arch
[03:25:49] <phillhocking> that's what i'm getting
[03:26:10] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:26:14] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:26:26] <nedbat> phillhocking: maybe start with this: https://nedbatchelder.com/text/test3.html
[03:26:43] *** Quits: wender (~Wender@179.104.244.105) (Remote host closed the connection)
[03:27:06] <phillhocking> nedbat: thanks!
[03:27:10] *** Quits: odoood (~odoood@2601:c8:c003:a550::c) (Ping timeout: 240 seconds)
[03:29:51] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:30:19] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[03:30:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:30:42] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[03:31:07] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[03:31:48] *** Joins: djapo (~archangel@user/djapo)
[03:34:43] <phillhocking> nedbat: i think my understanding of python is so limited that i'm struggling with these examples
[03:34:45] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[03:34:49] *** Joins: gggp (~textual@60.10.194.45)
[03:34:59] <nedbat> phillhocking: we can answer questions
[03:35:49] <phillhocking> i don't know what a class is
[03:36:04] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[03:36:14] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[03:36:16] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[03:36:38] *** Joins: jdmark (~jdmark@67.8.137.130)
[03:36:41] *** Quits: fstd (~fstd@xdsl-84-44-235-10.nc.de) (Remote host closed the connection)
[03:36:52] *** Joins: fstd (~fstd@xdsl-84-44-235-10.nc.de)
[03:37:00] <phillhocking> so like with my code, would i have something like m = package_statistics.main()
[03:39:23] *** Joins: Axy (~Axy@user/axy)
[03:39:40] *** Quits: regreg_ (~regreg@2a02:2f09:531a:c700:7157:a3c1:3d54:3f04) (Ping timeout: 240 seconds)
[03:40:24] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[03:41:07] <nedbat> phillhocking: why assign that to m?
[03:41:17] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:41:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:42:03] <phillhocking> nedbat: that's what you are doing with a function in these examples
[03:42:07] <phillhocking> i have no idea what i'm doing lol
[03:42:16] <phillhocking> i just want to test my cli output
[03:42:39] <phillhocking> TDD will have to be a lesson for my next project :D
[03:42:45] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:43:36] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:44:49] *** Joins: FatDarrell (~textual@68.91.156.229)
[03:46:00] <Henry151> so, given this definition in the datamodel file, https://termbin.com/a5ci5 when i use sqlalchemy to do something like "myquery = dbSession.query(bread_data)" and then try to look at myquery with str(myquery), instead of seeing the intended query i see "json_build_object(%(json_build_object_1)s" ... any guidance on how to get around this?
[03:47:33] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:49:06] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:49:16] *** Quits: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[03:49:26] <Guddddu> Can a wheel built using python 3.9.5 be used on another server using python 3.9.6?
[03:49:41] <nedbat> Guddddu: yes
[03:52:12] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d4cb-19ad-9d54-b5c3.res6.spectrum.com) (Ping timeout: 245 seconds)
[03:52:25] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:52:42] <nedbat> phillhocking: since you don't have a class, you wouldn't do something like p = Portfolio()
[03:53:40] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 252 seconds)
[03:56:59] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:57:31] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com)
[03:57:35] *** Joins: arinov (~arinov@213.194.126.155)
[04:00:38] *** Quits: FatDarrell (~textual@68.91.156.229) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:59] *** Joins: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at)
[04:04:28] *** Joins: emika8 (~emika@185.207.249.236)
[04:04:40] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[04:05:40] *** Quits: emika (~emika@83.136.182.173) (Ping timeout: 240 seconds)
[04:05:40] *** emika8 is now known as emika
[04:06:47] *** Joins: Kvothe (~weechat@user/elodin)
[04:07:05] *** Joins: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net)
[04:07:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:07:40] *** Joins: Naan (~Naan@user/naan)
[04:10:29] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[04:12:36] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com) (Quit: jarthur)
[04:13:24] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:14:08] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[04:14:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com)
[04:15:10] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:17:51] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[04:18:54] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[04:19:56] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[04:21:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:22:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:23:38] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:24:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:24:21] *** Quits: cliluw (~cliluw@47.147.80.149) (Read error: Connection reset by peer)
[04:24:25] <grym> phillhocking: https://bpa.st/W4DA
[04:24:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:27:25] <grym> phillhocking: also, your main function actually doesn't seem to execute properly
[04:27:45] *** Joins: ericam (~ericam@pool-98-113-135-30.nycmny.fios.verizon.net)
[04:28:45] *** Quits: ckdCreations (~ckdCreati@147.55.133.139) (Read error: Connection reset by peer)
[04:29:04] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[04:29:06] <ericam> Is there an idiomatic way to split a string with shell-like rules? I.e. 'command foo "bar baz"' becomes ['command' 'foo', 'bar baz']
[04:29:19] <nedbat> ericam: use the shlex module in the stdlib
[04:30:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:30:20] *** Joins: regreg_ (~regreg@2a02:2f09:531a:c700:3d50:1bd9:fb7c:66e6)
[04:32:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:32:44] <grym> phillhocking: https://bpa.st/TMXQ
[04:33:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:34:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:34:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:36:09] *** Quits: Ivyy (~Ivyy@2001:a61:13eb:f801:5a89:d3a4:4615:df21) (Quit: Leaving)
[04:37:05] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[04:38:42] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-fc65-cf54-436c-2f33.res6.spectrum.com) (Quit: jarthur)
[04:39:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:39:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:39:48] <grym> phillhocking: this should work, though https://bpa.st/3CFQ
[04:40:12] <grym> there are changes in all three files.
[04:41:03] <grym> phillhocking: now with diffs https://bpa.st/COJQ
[04:42:52] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:43:00] <grym> phillhocking: by the way, you might want to look at tempfile, right now there's some file.gz litter in the pwd when you run the code
[04:47:29] *** Joins: r3m (~launch@user/r3m)
[04:48:50] <grym> i also have no idea why you get the output twice
[04:48:59] <grym> but hey, TIL pytest supports async unit test
[04:49:15] *** Joins: snakey_hiss (~scott@101.100.131.68)
[04:49:17] *** Quits: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[04:50:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:51:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:52:31] <ericam> nedbat: thank you, that's perfect.
[04:52:38] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[04:52:46] <ericam> Also, is there an async equivalent (preferably in anyio) to `input()`?
[04:52:56] <ericam> I can write one myself, but I'd prefer not to duplicate work.
[04:52:59] *** Quits: Strom (strom@fedora/strom) ()
[04:53:22] <grym> ericam: aioconsole, i guess? (that really is a guess)
[04:54:01] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[04:54:43] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[04:54:48] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 276 seconds)
[04:55:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:55:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[04:57:12] <ericam> hmm.  I'd prefer not to install a library with that much functionality just for input(), especially since it looks like I'd have to use asyncio
[04:57:27] *** Joins: fikran (~fikran@user/fikran)
[04:57:30] <ericam> I'm building this one with trio, so y'know
[04:57:32] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:59:34] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:64af:bfcd:937a:b017) (Read error: Connection reset by peer)
[04:59:56] <grym> i misread anyio
[05:01:35] *** Joins: Strom (strom@fedora/strom)
[05:01:45] *** Joins: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at)
[05:03:07] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:05:50] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[05:06:11] *** Joins: montxero (~user@149.167.149.74)
[05:06:19] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[05:07:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:10:40] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[05:11:31] *** Joins: salimfadhley (sid31217@id-31217.lymington.irccloud.com)
[05:12:27] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:13:26] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:17:43] *** Gustavo6046 is now known as Gustava6046
[05:18:22] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:19:41] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[05:22:19] *** Joins: qpdb_ (~qpdb@user/qpdb)
[05:24:32] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[05:24:40] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[05:24:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::c)
[05:25:17] *** Gustava6046 is now known as Gustavo6046
[05:26:22] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 245 seconds)
[05:26:27] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-59c8-d7f9-3a37-49c7.res6.spectrum.com)
[05:28:07] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:28:13] *** Joins: byanka (~byanka@185.176.110.253)
[05:28:45] *** Joins: jazzy (~jaziz@172.58.35.7)
[05:31:46] *** Quits: sysopch (~sysopch@2001:b07:6469:cc5f:716c:1cf5:8c98:a930) (Quit: Leaving)
[05:33:07] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[05:33:46] *** Quits: y1n (~y1n@84-115-65-2.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[05:35:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[05:37:53] <NightMonkey> phillhocking: GIve this a try when you want to give TDD a try: https://github.com/mjhea0/flaskr-tdd
[05:38:32] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:38:38] *** Quits: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[05:39:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:40:29] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:40:31] *** Joins: gggp (~textual@111.63.14.116)
[05:40:41] *** Joins: platta (~platta@pool-71-187-23-254.nwrknj.fios.verizon.net)
[05:40:51] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[05:44:48] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5cef:4200:b721:17fe:fefe:c823)
[05:45:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:45:30] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:45:31] *** Joins: heco (~redrum@user/redrum88)
[05:47:31] *** Quits: sharperguy (~sharpergu@2001:16b8:5c7c:a700:ec59:28bf:cd2:9112) (Ping timeout: 252 seconds)
[05:48:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[05:50:39] *** Joins: frost (~frost@59.71.240.119)
[05:53:05] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[05:53:11] *** Joins: Fiji (~Fiji@user/fiji)
[05:57:12] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:58:10] *** Quits: Slimgin (~quassel@2603:9001:207:a100:8438:7c2d:9614:9bfb) (Ping timeout: 240 seconds)
[05:58:20] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: Leaving)
[05:59:58] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[06:00:09] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:02:12] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[06:04:48] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[06:05:33] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:06:08] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:06:54] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[06:07:15] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[06:07:24] *** Joins: elkclone (~elkclone@user/elkclone)
[06:07:46] <scumbag> So, I'm using python-language-server with flake8 provider, but it keeps using the mccabe provider for complexity; I don't want the mccabe provider doing ANYTHING, but I can't find any documentation about how to disable it.
[06:07:49] <scumbag> Any tips?
[06:10:04] *** Quits: DerpGusta_ (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[06:10:29] <Henry151> if i have a string mystring = "foo bar baz spam ham eggs" and I want to do something like mystring.replace(ham, bacon) but i want to give it multiple things to replace at once, is there a way to pass it a dictionary of old strings and new strings and have it do them all at once?
[06:12:01] *** Joins: DerpGusta (~quassel@user/derpgusta)
[06:12:13] <Henry151> ah nevermind i found the answers i needed
[06:12:26] <stealth_> Henry151, just use `.replace('ham', 'bacon').replace('baz', 'toast')`
[06:16:28] *** Quits: tf (~tf@user/tf) (Quit: tf)
[06:16:34] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:fce0:ddee:4345:8568) (Read error: Connection reset by peer)
[06:17:23] *** Joins: sydbarret (~anton@static-186-121-195-159.acelerate.net)
[06:17:56] *** Joins: Roey (~Roey@user/Roey)
[06:20:18] *** Joins: Celeo (~Celeo@user/celeo)
[06:21:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:21:43] <foo> We have a section of our codebase called "skills" - which involve "silo'd skills" that our core chatbot can do. We can A) move all forms from all skills into a core skills/forms.py module, or B) keep all related fields forms (WTForms in flask) within respective modules/skills. Part of the value of forms.py is we only would import wtforms once. The disadvantage (at least to my thinker brain) is we "add to the
[06:21:49] <foo> spiderweb of imports" within the skills directory, whereas each skill is largely intended to "standalone" - does anyone have any other commentary to add to this?
[06:21:52] <foo> Thank you!
[06:22:00] *** Joins: brabrax (~brabrax@user/brabrax)
[06:23:05] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:24:01] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[06:25:57] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[06:26:08] *** Joins: cation21 (cation@user/cation)
[06:26:34] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[06:27:07] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[06:29:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:29:36] *** cation21 is now known as cation
[06:29:52] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[06:30:19] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 244 seconds)
[06:30:19] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:60f9:ffc0:b80a:de8f)
[06:30:54] *** Joins: tf (~tf@user/tf)
[06:35:22] *** Joins: c10l (~c10l@89.34.167.207)
[06:38:27] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:38:27] *** FinnElija is now known as Guest4486
[06:38:27] *** Quits: Guest4486 (~finn_elij@user/finn-elija/x-0085643) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:38:27] *** finn_elija is now known as FinnElija
[06:38:44] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[06:40:00] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[06:40:45] *** Joins: johnau (~johnau@149.167.139.44)
[06:41:08] *** Joins: gggp (~textual@60.10.194.45)
[06:41:25] *** Quits: twb (~twb@2403-5800-3400-ef00--add.ip6.aussiebb.net) (Ping timeout: 252 seconds)
[06:41:44] <jmiehe> How to just "cat" an arbitrary file to stdout in python, to be piped into another utility?
[06:42:00] <jmiehe> Not just text, but in my case a ZIP file
[06:42:54] <Celelibi> open, read, print.
[06:44:24] *** Quits: jdwidari (~jdwidari@2001:420:c0c4:1003::19a) (Ping timeout: 256 seconds)
[06:45:58] *** Parts: sydbarret (~anton@static-186-121-195-159.acelerate.net) (Closing Window)
[06:46:03] <jmiehe> I got it coerced into a bytes object with escape sequences by now, but I want the raw data, without utf8 or anything
[06:46:07] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:46:10] *** Quits: odoood (~odoood@2601:c8:c003:a550::c) (Ping timeout: 240 seconds)
[06:46:22] <Celelibi> Open the file in binary mode.
[06:46:33] <Celelibi> open("foo.zip", "rb")
[06:46:47] <jmiehe> yes, then read gives me said bytes object
[06:46:55] <Celelibi> yup
[06:47:17] <habnabit_> jmiehe, sys.stdout.detach() gives you the backing bytes-compatible buffer
[06:47:38] <habnabit_> jmiehe, if you're using click, that knows how to do it correctly easier
[06:48:34] <jmiehe> habnabit_: I'm using argparse, does that help too?
[06:48:46] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[06:48:48] <stealth_> jmiehe, not sure why you are opening .zip like that there is already https://docs.python.org/3/library/zipfile.html that you can use
[06:48:57] <habnabit_> jmiehe, barely; kind of. click is way better than argparse
[06:49:41] <habnabit_> jmiehe, https://click.palletsprojects.com/en/8.0.x/arguments/#file-arguments you can set mode='rb' or 'wb'
[06:49:47] <jmiehe> stealth_: That's how I created said zip file. I want my utility to pass that on to another process
[06:50:17] <habnabit_> jmiehe, i can't recommend enough to use click instead
[06:50:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:50:52] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:51:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:51:45] <jmiehe> habnabit_: not bad, will come in handy for the next project
[06:54:07] <stealth_> jmiehe, rather then sending the content over, can you not open the file in another process?
[06:55:33] <jmiehe> stealth_: assume that file is in memory only
[06:55:47] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[06:55:59] <stealth_> jmiehe, could use this method https://docs.python.org/3/library/multiprocessing.shared_memory.html
[06:56:28] <habnabit_> stealth_, yikes
[06:56:30] <jmiehe> stealth_: the other process is not python
[06:57:03] <jmiehe> I just want to replicate `cat file.zip | unzip`
[06:57:17] <habnabit_> jmiehe, cat abuse :(
[06:57:28] *** Joins: p-i-_ (~Ohmu@223.206.150.148)
[06:57:33] <stealth_> ok, ... bit more info coming trough
[06:57:50] <jmiehe> habnabit_: my cats don't seem to mind so far
[06:57:51] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:58:02] <habnabit_> jmiehe, you know you can write that as `<file.zip unzip` ?
[06:58:27] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:59:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:da61:85fe:6e1c:4ca0:1396) (Ping timeout: 240 seconds)
[06:59:14] <jmiehe> habnabit_: yes, but in my case, that'd be something like `myapp.py --arg | whatever.webapp`
[06:59:40] <jmiehe> so I deliberately chose to write it as a pipe expression
[07:01:27] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:02:12] <jmiehe> so anyway, sys.stdout.buffer.write() does the trick for me
[07:02:35] <stealth_> o, i made the mistake is searching "cat" lol
[07:02:43] <stealth_> *of
[07:02:48] <habnabit_> jmiehe, detach the buffer if you're writing to it or you can be weird interleaved writes
[07:02:55] <habnabit_> jmiehe, detach the buffer if you're writing to it or you can *get weird interleaved writes
[07:04:16] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[07:04:33] <jmiehe> habnabit_: sys.stdout.detach() didn't seem to work though ~ I'm in python 3.9
[07:05:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:05:09] *** Quits: cation (cation@user/cation) (Remote host closed the connection)
[07:05:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[07:06:14] <habnabit_> jmiehe, works for me. what's the issue?
[07:06:24] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:06:49] *** Joins: fikran (~fikran@user/fikran)
[07:07:10] <cloudbender> Love reading the essays on python.org
[07:07:10] *** Quits: Pandadub (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376) (Quit: Leaving)
[07:07:49] <cloudbender> Did not encounter the word 'provide' in at least three articles.  So nice.
[07:08:02] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[07:08:15] *** Joins: cation (cation@user/cation)
[07:08:55] *** Joins: p-i- (~Ohmu@223.206.68.32)
[07:08:59] <cloudbender> There is actually a drinking game based on reading ms tech support pages.
[07:10:37] *** Quits: p-i-_ (~Ohmu@223.206.150.148) (Ping timeout: 244 seconds)
[07:11:49] <jmiehe> habnabit_: Weird, just PyCharm didn't like it.
[07:11:58] *** Joins: cloudbender100 (~cloudbend@user/cloudbender)
[07:12:27] <jmiehe> Anyway, found another more concise way.
[07:12:27] <jmiehe> with open(sys.stdout.fileno(), "wb", buffering=0) as stdout: … stdout.write(file.read())
[07:13:09] <stealth_> `print()` prints to stdout
[07:13:33] *** Joins: cloudbender98 (~cloudbend@user/cloudbender)
[07:13:42] * jmiehe can't resist that facepalm
[07:13:59] *** Joins: gggp (~textual@111.63.14.116)
[07:14:42] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 245 seconds)
[07:16:37] *** Quits: cloudbender100 (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[07:16:47] <stealth_> `print(file.read(), flush=True)` # to account for PyCharm weirdness?
[07:18:11] *** Quits: reset (~reset@user/reset) (Quit: reset)
[07:18:23] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:19:55] *** Quits: cloudbender98 (~cloudbend@user/cloudbender) (Ping timeout: 244 seconds)
[07:20:24] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:20:37] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:20:54] <econdudeawesome> exit
[07:20:56] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[07:21:47] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:22:04] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:23:17] <stealth_> jmiehe, fyi, `with open(closefd=True)` is set by default, so that would close `sys.stdout`, not sure what effect that would have
[07:25:31] <jmiehe> stealth_: shouldn't be an issue, it's the last action in that utility anyway. But I'll add in a `closefd=False` and it still works
[07:28:11] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 244 seconds)
[07:29:13] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[07:29:34] *** Joins: montxero (~user@149.167.149.74)
[07:30:02] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:30:25] *** Joins: Samian (~Sami@166.170.47.25)
[07:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:18] <jmiehe> for those interested, I'm currently creating https://github.com/ldericher/fftcgtool/tree/develop ~ this is where I used your help: https://github.com/ldericher/fftcgtool/commit/7f8f8cf62512a52e06441bb95a2e880fba7116d3
[07:32:13] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:34:36] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:34:38] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[07:35:23] *** Joins: aead (~aead@user/aead)
[07:35:25] *** Quits: Samian (~Sami@166.170.47.25) (Ping timeout: 244 seconds)
[07:37:44] *** Joins: foozle (~foozle@2001-b011-c001-16ef-3000-2890-f155-1c1d.dynamic-ip6.hinet.net)
[07:38:07] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:41:16] *** Joins: tsquad (~taylor@173-30-35-13.client.mchsi.com)
[07:42:07] <tsquad> anyone have some non video based online recomendations for learning python? the videos put me to sleep!
[07:42:20] <stealth_> jmiehe, looking at your maybe this is what you wanted `buffer.seek(0); print(buffer.read().decode())`
[07:42:33] <Moult> i'm trying to understand what directories get added to sys.path. if i run python foo.py, i assume that the cwd that i run that command from should be in sys.path. yes? i am getting conflicting results from pytest
[07:42:51] *** Quits: Armen (~Armen@armen138.com) (Quit: The Lounge - https://thelounge.github.io)
[07:43:17] <jmiehe> stealth_: No, I explicitly want bytes, no encoding.
[07:43:30] *** Joins: Armen (~Armen@armen138.com)
[07:43:33] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[07:43:41] <stealth_> jmiehe, try it
[07:44:27] <jmiehe> stealth_: UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc8 in position 10: invalid continuation byte
[07:44:43] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 244 seconds)
[07:44:46] <Moult> e.g. if i am in /foo/bar, and i run `pytest test`, i have /foo/bar/test in my sys.path, which ok, makes sense. but in another project in /foo/baz, if i run the same `pytest test`, i only see `foo/baz` (no test) in the sys.path
[07:45:17] <jmiehe> stealth_: My suspicion is: That one errors out, because I explicitly want bytes, no encoding.
[07:45:59] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[07:46:31] <jmiehe> stealth_: Because my buffer contains a zip file. There is no utf-8 data.
[07:46:40] <stealth_> jmiehe, ok, well if i could better debug the code, its just weird writing to stdout like that since print already does so https://docs.python.org/3/library/functions.html#print
[07:47:27] <jmiehe> print expects a string though, which is utf-8 by default
[07:47:57] <stealth_> jmiehe, not sure what you mean `print(b'hello world')`
[07:47:57] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[07:48:24] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[07:48:48] <stealth_> are using a different encoding?
[07:48:49] <jmiehe> well, that would still use the __str__ method of that bytes object
[07:48:54] *** Quits: Armen (~Armen@armen138.com) (Quit: The Lounge - https://thelounge.github.io)
[07:49:21] <jmiehe> stealth_: I'm not using any encoding. It's a zip file, it's just raw bytes, no codec needed.
[07:49:26] *** Joins: Armen (~Armen@armen138.com)
[07:49:58] *** Joins: matsaman (~matsaman@user/matsaman)
[07:50:40] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[07:50:49] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[07:50:50] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:50:53] <Moult> oh envermind, pebkac :)
[07:51:01] <stealth_> jmiehe, ZipFile just uses string
[07:51:13] <jmiehe> stealth_: compare your example to `print(str(b'hello world'))` by the way
[07:51:19] <stealth_> jmiehe, https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile
[07:52:23] <jmiehe> stealth_: yes, ZipFile uses string, but in my case, that ZipFile is inside a BytesIO object, which is then printed to stdout.
[07:52:31] *** Joins: theprophet (~theprophe@85.114.228.184)
[07:53:24] <stealth_> jmiehe, shouldn't you have used `StringIO` vs `BytesIO` ?
[07:53:40] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[07:53:49] <jmiehe> stealth_: and the BytesIO is (even though the name might seem misleading to you) actually just a container for raw bytes, namely said ZipFile.
[07:54:18] *** Joins: AlanMD (~AlanMD@188.27.5.247)
[07:55:08] <jmiehe> stealth_: The beauty of it all is, you can just clone my repo now and try all those ideas for yourself ~ and submit a pull request if you find something that can be done better.
[07:55:27] *** Joins: JanC (~janc@user/janc)
[07:57:48] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad)
[07:58:10] <stealth_> jmiehe, i am just thinking you are opening a byte buffer, then writing `writestr` = sring, then opening stdout in bytes mode then write bytes to that.
[07:59:52] <stealth_> jmiehe, if used `StringIO` you would just `zip_file.write(...)` the `buffer.seek(0); print(buffer.read())`
[08:01:40] *** Quits: junktext (~junktext@109.201.152.173) (Ping timeout: 240 seconds)
[08:01:45] <jmiehe> But I don't want any string :(((
[08:01:55] <jmiehe> I _want_ it to be bytes
[08:02:08] <jmiehe> stealth_:
[08:03:03] <jmiehe> stealth_: I know python is amazing with strings and encodings. But in this specific circumstance, I want the raw bytes of that zip file.
[08:04:29] <stealth_> jmiehe, ok, sorry, my goal was not to stress you out
[08:06:46] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[08:08:27] *** Joins: BUSY (~BUSY@user/busy)
[08:08:40] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[08:09:05] <Jonno_FTW> so this happened: Fatal Python error: Segmentation fault
[08:09:32] <Jonno_FTW> trying to use an s3 client in multiple threads
[08:09:58] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:1df4:6ff0:9b2d:6f2e)
[08:10:17] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[08:10:54] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:11:01] <Jonno_FTW> I'm making many threaded calls to client.head_object(Bucket=S3_BUCKET_NAME, Key=key)
[08:13:43] <jmiehe> stealth_: Hope so :D ~ maybe this clears things up? https://bpa.st/HB2Q ~ run instantly: https://tio.run/##bY9BS8YwDIbv/RVhl3awbygelMGugnePu6xr5oo1GWtGt18/@00FlS8EEsL7vEnmXSamh8tw1uPwHzMvAnGPSlloweoJQ2CIPoQd7C4YG@g2fOy2p/tu661WKnmZgGckk7E6iuNV6tEHJDZlBUWyRQVD4Iija5/7ELECu44jLp7e2rsS@ghfVKMgx7dDWrygsfp18hFypqkXeIHUkzSgyxvSWzPdUdaqOe8SU/x4Ecsfv3xgpv@JfgmuBws4xkg6k7y8w/k1MV1W8gM7PD1qh9felOVxfAI
[08:13:58] *** Quits: Guddddu (~Guddu@190.84.88.92) (Quit: Leaving)
[08:14:30] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[08:14:35] <stealth_> jmiehe, brb, gota restart
[08:14:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:14:47] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[08:15:28] *** Quits: jazzy (~jaziz@172.58.35.7) (Read error: Connection reset by peer)
[08:15:46] *** Joins: jazzy (~jaziz@172.58.35.7)
[08:16:31] <jmiehe> @everyone: Am I the dense one in this case? Serious question, losing sanity.
[08:18:11] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[08:21:36] <cloudbender> @jmiehe what are you using to inspect the written file of bytes ?
[08:21:58] <Jonno_FTW> jmiehe: @everyone isn't a thing in irc
[08:22:50] <jmiehe> Jonno_FTW: I know, but if you're reading it, you will likely get what I meant
[08:22:57] *** Quits: zaquest (~notzaques@5.128.210.178) (Read error: Connection reset by peer)
[08:23:06] <Jonno_FTW> what's the problem exactly?
[08:23:32] <Jonno_FTW> (people used to do a mass-highlihgt to get the attention of everyone beforehand, and it usually got you banned)
[08:23:33] <jmiehe> cloudbender: I redirected the output to an actual file and it's a valid zip file.
[08:23:46] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:24:07] <habnabit_> jmiehe, are you still having issues?
[08:24:10] <cloudbender> I guess I'm not understanding your dilemma
[08:24:27] <jmiehe> habnabit_: no, it works.
[08:25:08] <stealth_> jmiehe, https://bpa.st/JCQA this is what happening under the hood.
[08:25:08] <jmiehe> Jonno_FTW: Wouldn't do a mass-highlight, was just using that as an idiom, left interpretation to the readers :)
[08:25:33] <Jonno_FTW> was the problem that printing a bytes object printed the actual bytes, and when you decode those bytes python turns it into a readable character?
[08:25:56] <habnabit_> it sounds like there isn't a problem
[08:25:59] <Jonno_FTW> if you want to turn bytes into a string with those characters you need to do a decode('utf8')
[08:26:08] <jmiehe> stealth_: yes, and string implies utf-8 encoding, which a zip file is not
[08:26:41] <habnabit_> jmiehe, are you asking a question, then..?
[08:26:47] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[08:27:03] *** Parts: tsquad (~taylor@173-30-35-13.client.mchsi.com) (Leaving)
[08:27:33] <stealth_> jmiehe, the `ZipFile` is opened in `mode='r'` so you are not even writing it in byte byte `writestr` https://docs.python.org/3/library/zipfile.html#zipfile-objects
[08:28:05] <jmiehe> habnabit_: I'm just trying to convince stealth_ that the raw ZipFile data cannot just be treated as an UTF-8 string
[08:28:07] *** Quits: snakey_hiss (~scott@101.100.131.68) (Quit: WeeChat 1.9.1)
[08:28:27] <habnabit_> jmiehe, sometimes stealth_ is both mistaken and very stubborn. i'm sorry
[08:29:44] <stealth_> habnabit_, you ignored how i can be right as well but w/e
[08:29:58] <habnabit_> stealth_, i did say 'sometimes', which implies 'not always'
[08:30:07] *** Quits: emika (~emika@185.207.249.236) (Ping timeout: 245 seconds)
[08:30:27] *** Joins: emika (~emika@83.136.182.131)
[08:30:50] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:30:50] <jmiehe1> stealth_: The `ZipFile` uses `mode="r"` because it is the higher level. It _takes in_ string data, but _produces_ bytes.
[08:31:45] <habnabit_> (more accurately, ZipFile's mode argument is only superficially similar to file modes; there's other ways it could convey the same information, but that mode string _is not_ used in opening the underlying file or anything else)
[08:31:48] *** Joins: zaquest (~notzaques@5.128.210.178)
[08:32:38] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 256 seconds)
[08:32:38] *** jmiehe1 is now known as jmiehe
[08:32:48] *** Quits: resmo (~resmo@2a00:d420:9:8a00:28ef:a8d9:c522:dc26) (Remote host closed the connection)
[08:33:02] <jmiehe> stealth_: that `ZipFile` does not reside anywhere in the FS, but inside a BytesIO object, which does not have to be (and in this case, most likely, won't be) UTF-8 encoded. So print() and friends won't work.
[08:33:41] <stealth_> jmiehe, well i don't know what you are writing so i don't have a way to test it
[08:33:51] <habnabit_> stealth_, perhaps we should drop it
[08:34:03] <stealth_> jmiehe, you are giving `writestr(b'something')` ?
[08:34:07] *** Joins: resmo (~resmo@2a00:d420:9:8a00:61bf:2bd6:42ae:d461)
[08:34:26] <stealth_> habnabit_, ya, i already apologized
[08:35:09] *** Quits: BigShip (~BigShip@user/bigship) (Read error: Connection reset by peer)
[08:35:44] *** Joins: BigShip (~BigShip@user/bigship)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:52] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Ping timeout: 252 seconds)
[08:36:57] <cloudbender> @jmiehe something in here about detaching a stream from encoders maybe
[08:36:58] <cloudbender> https://docs.python.org/3/library/sys.html#sys.stdin
[08:37:01] <jmiehe> stealth_: nope. Seriously. Clone the repository, play with it. My `develop` branch is pretty stable right now. By now, I'm pretty sure you're the one missing something. Good opportunity to grow.
[08:37:59] <stealth_> jmiehe, sure, i can be wrong sometimes, it a trade-off.
[08:38:20] *** Quits: GenTooMan (~cyberman@c-73-214-106-63.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[08:38:21] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:39:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:39:01] *** Quits: neltraus_ (~neltraus@supernova.neltraus.de) (Quit: Zzzzzz...)
[08:39:18] *** Joins: neltraus (~neltraus@supernova.neltraus.de)
[08:39:20] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[08:39:48] <jmiehe> cloudbender: Works as well, I guess, but I like my solution 'cause it's so idiomatic https://github.com/ldericher/fftcgtool/blob/514b41ce208f62cf6367b6dd89d9e1e26c6ea305/fftcgtool.py#L167
[08:40:32] *** Quits: rud01f (rud0lf@user/rud0lf) (Quit: FREAKSHELLS - https://www.freakshells.net)
[08:40:54] <jmiehe> cloudbender: (typo) https://github.com/ldericher/fftcgtool/blob/349e7970d5d4cfc9b0465716b0be7850663d681c/fftcgtool.py#L166
[08:41:59] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[08:42:02] <habnabit_> jmiehe, huh, why are you using BytesIO at all? with zipfile.ZipFile(sys.stdout.detach(), 'x') as zip_file:
[08:43:38] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[08:44:11] <jmiehe> habnabit_: now … that's a valid question. Actually, I used an actual file before, to validate my method. Guess I don't need that anymore?
[08:44:29] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[08:45:15] <habnabit_> jmiehe, if you were using FileType in argparse (or click!!) then it would give you an open file to somewhere on disk or stdio
[08:47:06] *** Joins: rud01f (rud0lf@user/rud0lf)
[08:49:51] *** Quits: hakeem (~hakeem@user/hakeem) (Quit: Remote host closed the connection)
[08:51:35] *** Joins: hakeem (~hakeem@user/hakeem)
[08:55:37] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 252 seconds)
[08:56:43] *** Quits: LiftLeft (~LiftLeft@172.83.47.138) (Ping timeout: 252 seconds)
[08:58:16] *** Joins: hudo (~hudo@62.68.27.70)
[08:59:32] <jmiehe> habnabit_: Got that hint ;) Well, now it's prettier: https://github.com/ldericher/fftcgtool/blob/1294cc3a3863b0471b89a487b385786a98b32369/fftcgtool.py#L158
[09:00:47] <jmiehe> (also added some compression)
[09:02:46] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[09:03:22] *** Joins: mpan (~mysql@user/mpan)
[09:03:24] *** Parts: mpan (~mysql@user/mpan) ()
[09:03:32] <theprophet> when you create a thread in function, do you need to use target to specify the particular function or just pass the function name in thread parameter?
[09:03:49] <theprophet> x = threading.Thread(target=breakfest()) for example is target necessary here?
[09:04:44] <retrosenator> no
[09:04:50] <retrosenator> unless it is not the first arg
[09:05:04] <retrosenator> its like calling any func
[09:05:52] <theprophet> retrosenator so target is optional in this case?
[09:06:55] <theprophet> i mean both still do the same thing is that correct?
[09:07:12] <theprophet> incase you dont have any arguments in functions
[09:07:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[09:08:41] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[09:09:09] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[09:09:28] <stealth_> theprophet, `target=breakfest` its a callback
[09:09:47] <theprophet> @steal
[09:09:50] <Byteflux> theprophet: You use `target=` because the target argument is not the first positional argument. `threading.Thread(yourfunc)` won't have the same effect because the first position argument (according to the docs) is the thread `group`: https://docs.python.org/3/library/threading.html#threading.Thread
[09:10:30] <theprophet>  stealth_  what you mean callback?
[09:10:39] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:10:52] <Byteflux> Ah yes, I see too. Why are you passing `breakfast()` ?
[09:11:07] <Byteflux> Does `breakfast()` return a function? Otherwise you probably meant `target=breakfast`
[09:11:09] <theprophet> because breakfest is the function name
[09:11:31] <Byteflux> Yes but you are invoking the function and passing the result of it to the Thread constructor.
[09:11:38] <theprophet> i am watching tutorial and i smelled that something was not right
[09:11:39] <Byteflux> Instead of passing the function itself.
[09:11:40] <matsaman> not breakfAst?
[09:11:43] <theprophet> and thats why i wanna make sure
[09:12:10] <Byteflux> You likely want `target=breakfest` instead of `target=breakfest()` (can you spot the difference?)
[09:12:23] <theprophet> oh ok
[09:12:27] <retrosenator> is it breakfest or breakass?
[09:12:34] <stealth_> theprophet, you are telling the thread to call a function `breakfest` so once the thread it ready it will call `breakfest()` by already giving it `breakfest()` you are running the function in current thread.
[09:13:11] <theprophet> retrosenator yes its breakfast
[09:13:28] <matsaman> retrosenator: breaking of the fast(ing)
[09:13:53] <retrosenator> what is breakfest then?
[09:14:06] <retrosenator> a fun time where you break things?
[09:14:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[09:14:08] <theprophet> nothing, thats misspell
[09:14:12] <theprophet> chill
[09:14:28] <Byteflux> theprophet: In Python, functions are objects. It's a common practice to pass around function objects as callbacks, but in your case you mistakenly *called* the function and passed its result instead of passing the function itself as the callback for the thread. Hope that clears it up.
[09:15:01] <retrosenator> unless the function returns a function
[09:15:36] <theprophet> Byteflux thanks it does, thank you.
[09:15:48] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[09:16:11] *** Joins: fikran (~fikran@user/fikran)
[09:16:18] *** Joins: BigShip (~BigShip@user/bigship)
[09:16:22] <Byteflux> And yes a function call can return a function object too... sometimes this is intentional. :)
[09:16:30] *** Joins: hifi (hifi@m.vi.fi)
[09:17:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:17:49] *** Joins: LiftLeft (~LiftLeft@172.83.47.37)
[09:18:37] <matsaman> retrosenator: heh, fun
[09:18:54] <stealth_> in async world it would be common to send `something()` since its a coroutine, which is not triggered till `await` is called `ref = something(); await ref`
[09:19:27] <retrosenator> matsaman: church numbers
[09:20:12] <matsaman> mmm
[09:20:22] *** Joins: Classic (~root@user/classic)
[09:20:28] <theprophet> x = threading.Thread(breakfast()) is this is a correct way?
[09:21:09] <habnabit_> nope
[09:21:11] <Byteflux> theprophet: Unlikely.
[09:21:16] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[09:21:26] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[09:21:31] <retrosenator> make breakfast return lunch
[09:21:32] <theprophet> so its just target=breakfest then?
[09:21:33] <stealth_> theprophet, no! bunch of ppl told you that already, :p
[09:21:52] <stealth_> theprophet, yes to `target=breakfast`
[09:21:55] <Byteflux> Correct, target=breakfast (with the `target=` part and without the `()` part)
[09:21:58] <theprophet> well confusing thing is it both gives me the same result
[09:22:22] <Byteflux> That's because `breakfast()` (with the `()`) is actually calling the function.
[09:22:24] <habnabit_> theprophet, show us
[09:22:31] <Byteflux> Just it does it in the current thread, not in the thread you are creating.
[09:23:02] <theprophet> Byteflux ohhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh
[09:23:07] <theprophet> ok i am stupid
[09:23:12] <Byteflux> Imagine this: result = breakfast(); x = threading.Thread(result)
[09:23:12] <stealth_> habnabit_, do you have comment/take on FFI
[09:23:17] <Byteflux> That is what your code is doing.
[09:23:27] <habnabit_> stealth_, "use cffi"
[09:23:35] <theprophet> ffs ok ok got it got it
[09:23:43] *** Quits: AlanMD (~AlanMD@188.27.5.247) (Quit: ZZZzzz…)
[09:23:47] <stealth_> theprophet, you might have to officially change your irc username to "breakfest"
[09:23:57] <theprophet> hold on
[09:24:12] <stealth_> habnabit_, i am talking about libffi https://github.com/libffi/libffi
[09:24:14] *** theprophet is now known as breakfest
[09:24:23] <stealth_> breakfest, +1
[09:24:29] <breakfest> so how do i register that now?
[09:24:30] <phillhocking> breakfest: lolol
[09:25:00] <breakfest> i like E more than A
[09:25:42] <phillhocking> reminds me of poem_for_your_sprog/lik the bred
[09:26:03] *** Quits: jess (~jess@libera/staff/jess) ()
[09:27:30] *** Quits: retrosenator (~retrosena@91.sub-174-247-27.myvzw.com) (Quit: leaving)
[09:28:46] <breakfest> ok, dont know how to register this name so to avoid confusion ill go back to my original nickname
[09:28:53] *** Quits: breakfest (~theprophe@85.114.228.184) (Quit: Client closed)
[09:29:09] *** Joins: theprophet (~theprophe@85.114.228.184)
[09:29:16] <theprophet> there we go
[09:29:51] *** Joins: Mija (~Mija@user/mija)
[09:30:13] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[09:30:49] *** Quits: LiftLeft (~LiftLeft@172.83.47.37) (Ping timeout: 252 seconds)
[09:31:16] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:14] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[09:34:04] <theprophet> btw, is it possible one function to have multiple threads?
[09:35:22] <Byteflux> Do you mean to ask if it's possible for the same function to be called by multiple threads?
[09:35:46] *** Quits: BigShip (~BigShip@user/bigship) (Ping timeout: 252 seconds)
[09:36:02] <theprophet> Byteflux yes
[09:38:39] <Byteflux> Sure.
[09:39:22] <theprophet> thanks
[09:45:10] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 240 seconds)
[09:49:06] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:51:18] *** Quits: ksynwa (~ksynwa@5.45.111.57) (Quit: oh no they're here)
[09:51:49] <jmiehe> I have a function (=fn) returning another fn. The returned fn has a parameter `card: Card` and returns a list of str. What is the correct type hint for the outer fn?
[09:52:28] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[09:53:22] *** Quits: emerent (~quassel@p200300cd5701a15dba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[09:54:01] *** Joins: emerent (~quassel@p200300cd5701a102ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:54:14] <habnabit_> jmiehe, Callable https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html
[09:54:38] <habnabit_> jmiehe, there's a section on decorators if it's a decorator
[09:55:17] <jmiehe> habnabit_: not a decorator, just filter functions
[09:55:18] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:57:05] <jmiehe> where's the difference between `typing.Callable` and `callable`?
[09:57:47] <habnabit_> jmiehe, what's the similarity? ;) one is a type; one is a function
[09:58:52] <jmiehe> habnabit_: Since 3.9, type hints like `list[int]` are okay, before you needed `typing.List`
[09:59:21] *** Joins: upsala (~zcb@185.213.155.160)
[09:59:30] <habnabit_> jmiehe, ah.. yes, unfortunately, this is a false friend. there's no similar equivalence for callable
[10:00:14] <jmiehe> apparently, someone in this programming focused channel calls themself "int". Isn't it annoying to be pinged randomly?
[10:02:02] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[10:02:18] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[10:02:35] <jmiehe> habnabit_: What about `typing.Iterable`? I guess not the same as `iter` as well. PyCharm doesn't like `-> iter[list]` at least
[10:02:56] <habnabit_> jmiehe, same as callable: no shorthand
[10:05:18] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[10:05:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:06:18] *** Joins: mei (~mei@user/mei)
[10:09:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[10:11:12] *** Joins: kuter (~qwerty@078088007219.bialystok.vectranet.pl)
[10:11:12] *** Quits: kuter (~qwerty@078088007219.bialystok.vectranet.pl) (Client Quit)
[10:11:48] *** Joins: kuter (~kuter@078088007219.bialystok.vectranet.pl)
[10:11:53] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:12:29] *** Joins: ravan__ (~ravan@user/ravan)
[10:12:52] *** Joins: vd97 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[10:15:28] *** Quits: johnau (~johnau@149.167.139.44) (Read error: Connection reset by peer)
[10:15:43] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:22:15] *** Joins: AlanMD (~AlanMD@109.166.134.110)
[10:22:31] *** Joins: Celeo (~Celeo@user/celeo)
[10:22:48] <jmiehe> what do you prefer? https://bpa.st/EX7A
[10:23:30] <jmiehe> typo: line 17 is `foo.exists`
[10:23:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[10:26:01] <habnabit_> jmiehe, i don't like the way you've formatted it, but i'd choose B of the two. well, and i'd do it with generator comprehensions instead of list comprehensions
[10:26:05] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[10:26:14] *** Joins: jcbsv (~jcbsv@185.247.236.137)
[10:26:26] <habnabit_> jmiehe, i'm not a fan of :=
[10:26:26] *** Quits: AlanMD (~AlanMD@109.166.134.110) (Ping timeout: 244 seconds)
[10:27:27] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 240 seconds)
[10:27:48] <InPhase> jmiehe: I agree the formatting chaos there is undesired.  But I prefer A, as it's unclean to create intermediate data that you didn't actually want if a clean method exists to filter at creation.
[10:28:03] *** ravan__ is now known as ravan
[10:28:11] *** Quits: nergar (~Nergar@177.225.152.16) (Quit: Leaving)
[10:28:18] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[10:28:48] <stealth_> jmiehe, does "version A" even work? looks flawed
[10:29:11] <habnabit_> stealth_, are you not familiar with := ?
[10:29:30] <jmiehe> actually, A confuses PyCharm again :D
[10:29:40] *** Quits: jazzy (~jaziz@172.58.35.7) (Ping timeout: 252 seconds)
[10:30:12] <jmiehe> "foo might be referenced before assignment" even though I don't get why
[10:30:59] <InPhase> Oh.  Maybe it can't be used in the if...
[10:31:15] <stealth_> jmiehe, how can `foo` exist before `if` is run?
[10:31:23] <InPhase> That if runs before the evaluated statement.
[10:31:37] <stealth_> ^ what i meant about being flawed.
[10:32:17] <habnabit_> reasons i dislike := ..
[10:32:28] <InPhase> jmiehe: So you need to put the := in the if to do it that way.
[10:32:39] <stealth_> `:=` is an amazing feature is used right
[10:32:46] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[10:32:46] <habnabit_> meh
[10:33:04] <InPhase> [foo for value in collection if (foo := Foo(param=value)).exists]
[10:33:37] <habnabit_> yeah that's just silly
[10:34:37] <InPhase> habnabit_: Perhaps the foos are large and rarely exist, in which case it is a very strong choice.
[10:35:06] <jmiehe> Rephrased: https://bpa.st/D4HA
[10:35:08] <InPhase> But in general I don't find := frightening.  I think we just need a little time yet to adapt to mentally parsing them, as it's a new syntax.
[10:35:39] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:36:06] <stealth_> jmiehe, i like what InPhase recommended, this way its only 1 loop
[10:36:08] <habnabit_> i don't think it's frightening, but it only produces less readable code than the alternatives in comprehensions
[10:36:41] <habnabit_> the real shame is python lacking a proper monadic Option type
[10:37:19] <stealth_> i prefer `:=` vs typing syntax though. typing syntax is a mess.
[10:38:47] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad) (Quit: Client closed)
[10:39:17] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:41:37] *** Joins: palasso (~palasso@user/palasso)
[10:42:05] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:42:23] *** Joins: mexen (uid495612@user/mexen)
[10:42:50] *** Joins: djapo (~archangel@user/djapo)
[10:43:44] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[10:43:58] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[10:44:11] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[10:44:43] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[10:45:20] <phillhocking> ok, so i'm super duper mega mentally deficient with unit tests
[10:45:34] <phillhocking> i'm just trying to get these two tests to work
[10:45:39] <phillhocking> and like, they'
[10:45:55] <phillhocking> they're pretty simple... i just can't figure out for it to know what directory it is being called from
[10:46:03] <phillhocking> because its automated tests with github runners
[10:46:07] <stealth_> phillhocking, use pytest
[10:46:11] <phillhocking> https://github.com/phillhocking/package_statistics/blob/dev/cli_test.py
[10:46:17] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:19] <phillhocking> stealth_: i'm endeavoring to do so
[10:46:23] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:c1e2:e9c:5ff4:bcb9)
[10:46:50] *** Joins: seednode (~seednode@user/seednode)
[10:47:02] <phillhocking> but the python-cli-test-helpers mocks were too hard, and i've spent so much damn time on it i want the simplest tests as possible
[10:47:10] <phillhocking> anything will exit 2 except for valid output
[10:48:10] <phillhocking> so just checking the return code is as simple as i want my tests to be... but subprocess.call() doesn't seem to provide the context of the cwd
[10:48:29] <habnabit_> phillhocking, set cwd= on the subprocess.call if you want a well-known cwd
[10:48:48] <phillhocking> habnabit_: how do i do that?
[10:48:58] <jmiehe> Why the hell are there typing.Iterable, typing.Iterator _and_ typing.Generator
[10:49:00] <habnabit_> phillhocking, call([...], cwd=...)
[10:49:11] <habnabit_> jmiehe, well, those are all three different things
[10:49:28] <habnabit_> jmiehe, not all iterables are iterators, and not all iterators are generators
[10:50:19] <habnabit_> jmiehe, `typing` has surfaced a lot of weird inconsistencies that are baked into the language
[10:50:48] <phillhocking> habnabit_: i'm still confused.. i want cwd to prepend what i'm trying to call
[10:50:50] <jmiehe> What to use for a function returning a generator comprehension? Does it make a difference if the function just yields in some cases?
[10:51:07] <habnabit_> jmiehe, Iterator
[10:51:39] <habnabit_> jmiehe, and unfortunately yes adding yields makes a difference. you can't mix a normal return and a yield in the same function
[10:52:03] <habnabit_> jmiehe, you have to isolate the yields to their own def, then you can `return _otherfunc()`
[10:52:34] <stealth_> phillhocking, also don't you want to set `capture_output=True`
[10:52:35] <habnabit_> phillhocking, can you give an example of what that would do? i don't know what you mean
[10:52:56] <habnabit_> phillhocking, or are you saying you want to run a script in the same directory?
[10:54:24] <jmiehe> Can I have a generator comprehension that just has one element?
[10:54:48] <habnabit_> jmiehe, return iter([x])
[10:56:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1df4:6ff0:9b2d:6f2e) (Read error: Connection reset by peer)
[10:58:29] *** Joins: gusto (~Augustus@109.255.100.54)
[11:01:18] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:02:05] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[11:05:20] *** Joins: Wulf (~Wulf@user/wulf)
[11:05:27] *** Quits: Wulf (~Wulf@user/wulf) (Client Quit)
[11:05:40] *** Joins: Wulf (~Wulf@user/wulf)
[11:07:23] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[11:10:04] <jmiehe> hmmm. Apparently I can return a list or a generator comprehension if I typehint as `typing.Iterable`. This makes more sense now.
[11:11:40] <aphysically> typing.Iterable is deprecated
[11:12:49] <aphysically> after 3.9 just use the collections.abc equivalent, basically
[11:13:40] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[11:15:17] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[11:15:51] *** Joins: gusto (~Augustus@109.255.100.54)
[11:19:31] *** Quits: jcbsv (~jcbsv@185.247.236.137) (Quit: Textual IRC Client: www.textualapp.com)
[11:20:14] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:23:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:24:21] *** scumbag is now known as kevr
[11:25:32] *** Joins: fikran (~fikran@user/fikran)
[11:26:22] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[11:28:19] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[11:28:44] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Client Quit)
[11:29:48] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[11:29:52] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:35:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[11:36:29] *** Joins: Wulf (~Wulf@user/wulf)
[11:37:03] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[11:37:25] *** Joins: portalrat (~portalrat@user/portalrat)
[11:39:04] <phillhocking> habnabit_: i figured it out! :D >3
[11:39:05] <phillhocking> <3
[11:39:20] <phillhocking> i probably did it in a hacky fashion lol
[11:40:22] *** Joins: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it)
[11:43:21] *** Joins: kosh (~kosh@user/kosh)
[11:43:43] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[11:44:03] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:45:10] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[11:48:35] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 244 seconds)
[11:54:42] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[11:55:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:56:39] *** Joins: Samian (~Sami@2620:10d:c091:480::1:3a90)
[11:58:40] <theprophet> guys my pycharm stop button does not stop the program until i click it twice, is there a fix for that?
[11:58:53] <ferz> Hi, there is something that I misunderstood with diskcache:
[11:58:53] <ferz> https://bsd.to/sr3L/raw
[11:58:53] <ferz> Why does it fails to read just saved data?
[11:58:53] <ferz> Why does get() with tag returns a (None, None) list?
[12:01:24] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[12:01:45] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[12:02:29] *** Joins: ppang (~ppang@user/ppang)
[12:03:30] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[12:04:11] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:04:27] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[12:06:08] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[12:07:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[12:07:05] <ferz> It seems that in the configuration "size_limit" can help to store or not some keys, but there is not any advise or any information about it.
[12:07:22] *** Quits: p-i- (~Ohmu@223.206.68.32) (Read error: Connection reset by peer)
[12:08:37] *** Joins: p-i- (~Ohmu@223.206.68.32)
[12:09:15] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[12:11:08] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[12:15:22] *** Joins: dreadedfrog (~user@193.160.129.69)
[12:16:04] *** Quits: p-i- (~Ohmu@223.206.68.32) (Read error: Connection reset by peer)
[12:18:52] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[12:21:16] *** Joins: arinov (~arinov@213.194.126.155)
[12:22:40] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[12:22:57] *** Joins: lucad111 (~lucad111@2a02:2e02:9991:900:e96a:7f6b:edd7:c4b7)
[12:23:24] <theprophet> ferz ask your question again and be even more specific. some1 will answer you.
[12:24:02] *** Joins: shad (~shad@user/shad)
[12:25:31] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[12:26:28] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[12:26:36] <supakeen> No, it's just a question that's specific to a pypi module so you have to hope someone comes by that is familiar with the problem.
[12:27:07] *** Joins: Norore (~weechat@balder.ens.fr)
[12:27:33] <supakeen> I can point out that it seems the output doesn't refer to the script (line 16, isn't the line 16 the traceback has)
[12:28:41] *** Joins: rendar (~rendar@user/rendar)
[12:30:29] <shlomif> theprophet: hi, what happens in the commandline when using ctrl+c/etc?
[12:31:09] <theprophet> @shl
[12:31:21] <theprophet> shlomif i dont know bro, i am learning as well
[12:31:59] <theprophet> i said what i said earlier,because i know you have to wait for the prince to answer your question in this chat xD
[12:32:03] <supakeen> What do you mean, "what happens" shlomif?
[12:32:30] *** Joins: artwalker (~Adium@36.113.113.178)
[12:32:37] *** Joins: ice9 (~ice9@user/ice9)
[12:33:50] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[12:34:12] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:34:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[12:34:48] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[12:35:25] *** Joins: elgraz (~elgraz@151.65.9.160)
[12:35:49] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[12:35:54] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[12:35:56] *** Joins: y1n (~y1n@84-115-64-76.wifi.dynamic.surfer.at)
[12:36:10] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Ping timeout: 252 seconds)
[12:36:42] <shlomif> supakeen: is the problem theprophet reported specific to pycharm?
[12:36:53] *** Quits: artwalker (~Adium@36.113.113.178) (Quit: Leaving.)
[12:36:55] *** Joins: Liblx (~Alex@2a02:810c:280:59c:359a:7e57:9b73:48bf)
[12:36:58] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:37:08] <theprophet> bro wut?
[12:37:28] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:37:39] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[12:37:40] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[12:37:55] <supakeen> oh, i don't know what pycharm uses to stop a process, if it uses signals it's possible you have to send it multiple times depending on if its multithreaded, etc
[12:38:24] <supakeen> and if you have subprocesses/etc
[12:38:38] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[12:38:55] <theprophet> i am so lost
[12:40:40] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:40:46] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:40:59] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:41:25] *** Joins: p-i- (~Ohmu@mx-ll-223.206.144-95.dynamic.3bb.co.th)
[12:41:40] *** Quits: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8) (Ping timeout: 272 seconds)
[12:41:41] *** Quits: bertiger_ (~bertiger@user/bertiger) (Quit: -)
[12:41:54] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[12:42:01] *** Joins: bertiger (~bertiger@user/bertiger)
[12:42:25] *** Joins: manti7 (~manti7@176.10.104.94)
[12:42:57] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Read error: Connection reset by peer)
[12:43:23] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Ping timeout: 252 seconds)
[12:43:32] *** Joins: Bato_ (~plauder@2001:bc8:182c:b39::1)
[12:43:34] *** Quits: Bato (~plauder@2001:bc8:182c:b39::1) (Ping timeout: 272 seconds)
[12:43:51] <theprophet> x.setDaemon(True)
[12:43:51] <theprophet>  ---- print(x.isDaemon()) are same?
[12:43:54] <theprophet> supakeen
[12:44:20] <supakeen> I don't know what `x` is.
[12:44:32] <theprophet> thread
[12:45:08] <theprophet> those methods are same?
[12:45:16] <theprophet> to stop daemon thread
[12:45:28] <theprophet> ?
[12:45:44] <supakeen> Those methods are not the same thing no, one sets the daemon status and one gets the daemon status.
[12:45:48] <supakeen> Neither of them stops it.
[12:46:06] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Ping timeout: 272 seconds)
[12:46:21] <theprophet> when main thread finishes execution
[12:46:34] <theprophet> x.setDaemon(True)
[12:46:40] <theprophet> stops the threads
[12:46:48] <theprophet> daemon threads i mean
[12:47:01] <theprophet> since its connecting daemon thread to maint thread
[12:47:07] <theprophet> does this makes sense?
[12:47:10] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[12:47:43] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[12:47:48] <supakeen> no, it doesn't stop the thread if you want to wait for it you use join.
[12:48:20] <theprophet> let me past the pastebin link ok?
[12:48:35] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[12:48:47] <theprophet> ok nvm
[12:48:52] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:49:05] <supakeen> why are you using daemon threads?
[12:49:22] <theprophet> well i am learning from video tutorial about daemon thread
[12:49:41] <theprophet> and i have a program that turns on the timer after input question
[12:49:54] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 256 seconds)
[12:49:54] *** Joins: p-i-_ (~Ohmu@mx-ll-223.205.81-167.dynamic.3bb.co.th)
[12:49:59] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[12:50:00] <theprophet> but the timer does not stop even after the input question was answered
[12:50:35] <supakeen> a daemon thread doesn't exit when the main thread exits
[12:50:42] <supakeen> which is their main usecase
[12:50:47] <theprophet> yes
[12:50:50] <theprophet> exactly
[12:50:55] <supakeen> you have to end it manually
[12:50:57] <theprophet> so i am trying to confirm
[12:51:00] *** Joins: Cypris (uid511277@user/cypris)
[12:51:02] <theprophet> well not really
[12:51:05] *** Quits: foozle (~foozle@2001-b011-c001-16ef-3000-2890-f155-1c1d.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:51:17] <theprophet> theres another way
[12:51:32] <theprophet> but i wanted to make sure it is what i understood earlier
[12:51:33] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:51:37] *** Quits: p-i- (~Ohmu@mx-ll-223.206.144-95.dynamic.3bb.co.th) (Ping timeout: 244 seconds)
[12:51:40] <theprophet> thats why i was asking the question to confirm
[12:51:40] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[12:51:50] <supakeen> then i don't understand your question
[12:51:50] *** Cypris is now known as Curiosity
[12:51:56] <theprophet> well you can
[12:52:09] <theprophet> thats where i am stuck
[12:52:13] <theprophet> whats the idea behind it
[12:52:39] <theprophet> well you can actually stop daemon threads without manual
[12:52:41] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Ping timeout: 250 seconds)
[12:52:46] <theprophet> like this
[12:52:59] <theprophet> x = threading.Thread(target= timer,daemon=True)
[12:53:04] <theprophet> or like this
[12:53:14] <theprophet> x.setDaemon(True)
[12:53:39] <supakeen> neither of those are 'stopping' a thread; one is starting a thread (as daemon thread) and the other is setting a thread to daemon after it has been started
[12:53:40] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[12:53:59] <theprophet> i mean
[12:54:07] <theprophet> the program stops
[12:54:07] *** Quits: _moep_ (~moep@user/moep/x-3358975) (Ping timeout: 240 seconds)
[12:54:09] <theprophet> the timer stops
[12:54:20] <supakeen> the 'program' consists of all your threads together
[12:54:24] <theprophet> when i answer input question
[12:54:26] <supakeen> and will only stop after all threads have exited
[12:54:34] <theprophet> well
[12:54:37] <theprophet> if its like that
[12:54:42] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[12:54:45] <supakeen> normally threads exit when the main thread exits, the entire point of a daemon thread is that it doesn't do that
[12:54:53] <supakeen> so your program doesn't exit until the daemon thread exits
[12:54:55] <theprophet> well
[12:55:03] <theprophet> the main thread exits
[12:55:08] <theprophet> but timer does not stop
[12:55:14] *** Quits: p-i-_ (~Ohmu@mx-ll-223.205.81-167.dynamic.3bb.co.th) (Ping timeout: 244 seconds)
[12:55:22] <supakeen> yes, that's the intended behavior of setting a thread to daemon
[12:55:45] <theprophet> yes so
[12:55:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[12:55:45] *** Quits: emika (~emika@83.136.182.131) (Ping timeout: 244 seconds)
[12:55:49] <theprophet> how come this
[12:55:56] *** Joins: fdan (~fdan@192.146.154.3)
[12:56:07] <theprophet> x = threading.Thread(target= timer,daemon=True)
[12:56:11] <theprophet> stops the timer?
[12:56:22] <theprophet> when i answer input question
[12:56:31] <theprophet> but without that it wont stop
[12:56:33] *** Joins: emika (~emika@212.102.44.39)
[12:56:45] <supakeen> i can't deal with you continually going back on what you say, which is it?
[12:56:46] <theprophet> i mean the timer wont stop without this x = threading.Thread(target= timer,daemon=True)
[12:57:51] *** Joins: jamer05 (~root@user/jamer05)
[12:57:57] <theprophet> ok look, where short version of what i am asking. my program has input question, the main thread is responsible for that ok? and theres a function with timer ok? the second thread is responsible for that
[12:58:22] <theprophet> so when i am answering the input question
[12:58:25] <theprophet> timer does not stop
[12:58:31] <theprophet> but when i put this in code x = threading.Thread(target= timer,daemon=True)
[12:58:34] <theprophet> then it stops
[12:58:36] *** Joins: psydroid (~psydroid@user/psydroid)
[12:58:38] <theprophet> get it?
[12:58:40] *** Joins: Pickchea (~private@user/pickchea)
[12:59:00] <supakeen> no, use a pastebin
[12:59:10] <theprophet> ok give me a sec
[13:01:05] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[13:02:25] <theprophet> supakeen https://pastebin.com/SjbWLTHR
[13:02:50] <supakeen> use another pastebin, i can't read that one
[13:03:11] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:04:13] *** Quits: Xano_ (~Xano@2a00:23c4:4200:a00:2a14:da05:900:a58c) (Ping timeout: 252 seconds)
[13:04:17] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:04:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:04:38] <theprophet> supakeen https://pastebin.pl/view/73d48ceb
[13:04:50] *** Joins: plastico (~plastico@neomutt/plastico)
[13:05:56] <theprophet> supakeen do you see it now?
[13:06:24] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[13:06:46] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[13:07:03] <supakeen> that seems like normal behaviour, yes
[13:07:07] <supakeen> "The entire Python program exits when no alive non-daemon threads are left.
[13:07:15] <theprophet> exactly
[13:07:20] <theprophet> now look what i am asking
[13:07:38] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[13:08:02] <theprophet> is this x = threading.Thread(target= timer,daemon=True
[13:08:14] <theprophet> and  this  x.setDaemon(True)
[13:08:20] <theprophet> are doing the same thing?
[13:08:48] <supakeen> yes
[13:09:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:09:26] <theprophet> ok, that was my question , thanks for hanging out and keeping up with me. apreciated
[13:09:36] *** Quits: jamer05 (~root@user/jamer05) (Quit: WeeChat 2.8)
[13:11:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:14:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[13:14:11] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:14:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:14:56] *** Joins: jamerpogi (~jamerpogi@user/jamer05)
[13:15:02] *** Joins: dvx (~dvx@185.63.97.64)
[13:15:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:17] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:17:41] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[13:19:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:19:43] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[13:20:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:21:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:22:37] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:23:00] *** Quits: jamerpogi (~jamerpogi@user/jamer05) (Quit: WeeChat 2.8)
[13:23:22] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:23:28] *** Quits: vats (~vats@180.149.226.8) (Ping timeout: 252 seconds)
[13:23:55] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[13:24:01] *** Quits: y1n (~y1n@84-115-64-76.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[13:24:16] *** Joins: ravan (~ravan@user/ravan)
[13:26:35] *** dcaro_away is now known as dcaro
[13:26:57] *** Joins: AlanMD (~AlanMD@188.27.5.247)
[13:27:08] *** Quits: xakan (~xakan@ns354170.ip-91-121-101.eu) (Quit: The Lounge - https://thelounge.chat)
[13:27:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:28:08] *** Joins: fanis30 (~anon@adsl-67.37.6.2.tellas.gr)
[13:28:43] <tsujp> If I have a deeply nested dictionary as follows `foo = { aaa: { bbb: { ccc: 0 }, ddd: { eee: 1 } }, xxx: { yyy: { zzz: 0 }, iii: { jjj: 1 } } }` and I want to iterate the keys at depth 1 only, here this means I want to loop values `bbb`, `ddd`, `yyy`, and `iii` how can I do this without nested `for in` loops? I'd like to be able to just specify the depth so I could do depth 0 meaning `aaa` and `xxx` or depth 3 etc.
[13:29:11] <Repiphany> Recursion
[13:29:27] <rendar> why is that? https://bpa.st/XZLA
[13:29:56] *** Joins: legola (~legola@46.235.100.27)
[13:30:02] <Repiphany> `function` isn't a builtin like str is
[13:30:33] <tsujp> Repiphany: so I would recurse and iterate a counter. When that counter is equal to `depth` I then finally call `.items()`?
[13:31:09] <rendar> Repiphany, and where is located?
[13:31:15] <rendar> can i import it?
[13:32:10] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:9cce:d33f:1775:33d) (Ping timeout: 240 seconds)
[13:32:21] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[13:32:26] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[13:32:27] <Repiphany> Why do you want to
[13:32:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:32:46] <kosh> a double for loop is likely to work better than that and easier to understand
[13:32:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:33:16] <kosh> is there a reason you don't want to use a double nested for loop?
[13:33:28] *** Quits: AlanMD (~AlanMD@188.27.5.247) (Ping timeout: 244 seconds)
[13:33:32] <rendar> Repiphany, to learn
[13:33:41] <rendar> where is 'function' type located?!
[13:34:17] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:34:53] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:34:53] *** Joins: fikran (~fikran@user/fikran)
[13:35:25] *** Joins: gggp (~textual@111.63.14.116)
[13:35:30] <jinsun> rendar: probably https://docs.python.org/3/library/types.html#types.FunctionType
[13:35:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:35:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:36:05] <jinsun> usually builtin stuff that you cannot find normally are stuffed there
[13:36:06] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:37:25] *** Joins: y1n (~y1n@84-115-65-86.wifi.dynamic.surfer.at)
[13:37:30] *** Quits: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[13:37:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:39:24] <Repiphany> tsujp: https://bpa.st/4VDQ
[13:39:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[13:39:40] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[13:40:11] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[13:40:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:40:59] *** Joins: frost (~frost@59.71.240.119)
[13:41:05] <Repiphany> Can add proper checks if the depth can't actually be reached or whatever
[13:43:33] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[13:43:57] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:39f4:b7d8:b3d6:7378)
[13:44:02] <tsujp> Thanks, time to look up yield and what not Repiphany
[13:44:22] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[13:45:59] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Remote host closed the connection)
[13:46:18] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:46:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:46:32] *** Joins: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl)
[13:48:04] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:48:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[13:48:37] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:48:51] *** Joins: cheater (~Username@user/cheater)
[13:49:38] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[13:50:21] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:51:06] <Gurkenglas> How should I turn ["a_x","a_y","b_x"] into ["a_xy","b_x"]?
[13:51:33] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 244 seconds)
[13:52:20] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[13:53:38] *** Joins: stranac (~stranac@195.29.239.126)
[13:53:55] *** Joins: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it)
[13:54:43] <supakeen> First you turn it into a dictionary keyed on the part before _, and a list of the parts after _, then you go through that dictionary and format the keys + that list into strings again.
[13:54:54] <Gurkenglas> aight
[13:55:55] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[13:55:58] <Gurkenglas> ooooh could i use a reverse debugger to turn a getter into a setter, by going "run the getter saving its execution trace; set its return value; go backwards through the code, doing whatever is necessary to make the code produce that value"? :D
[13:56:09] *** Quits: resmo (~resmo@2a00:d420:9:8a00:61bf:2bd6:42ae:d461) (Read error: Connection reset by peer)
[13:56:31] *** Joins: resmo (~resmo@2a00:d420:9:8a00:61bf:2bd6:42ae:d461)
[13:57:31] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:59:22] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[13:59:48] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:00:13] <Tuju> tell me, now when in python3 every string is unicode, why so many operation requires bytes stuff as argument when in python2 we just used strings?
[14:00:20] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 244 seconds)
[14:01:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:02:32] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Ping timeout: 245 seconds)
[14:02:36] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[14:02:36] <Gurkenglas> supakeen, how should i do the first half of that? the dict callable appears to always combine two values into the second one.
[14:02:42] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:02:47] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[14:03:14] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[14:03:35] *** Joins: sigint (sigint@user/sigint)
[14:03:52] *** Quits: czuk_cza (~mist@188.147.96.18.nat.umts.dynamic.t-mobile.pl) (Quit: WeeChat 3.2)
[14:05:27] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 245 seconds)
[14:05:27] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 245 seconds)
[14:06:10] <sigint> Hi, I'm surprised that there is basically no WSGI middleware for compression on the Internet. The ones I can find are super old/deprecated. Am I missing something? Is it a bad idea to do compression in a middleware?
[14:06:24] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[14:06:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:07:40] <kosh> Tuju, most networking things require bytes, what other things do you run into which require bytes?
[14:07:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:08:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 245 seconds)
[14:08:12] <Tuju> i have a file .write() here that gives    TypeError: a bytes-like object is required, not 'str'
[14:08:12] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) ()
[14:08:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:08:31] <Tuju> i'm just trying to figure out can it be like so.
[14:08:35] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[14:08:48] <kosh> you have a unicode object, how do you want it to be encoded when written to the filesystem?
[14:08:59] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[14:09:01] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[14:09:42] <ferz> http://paste.scsys.co.uk/595804?ln=on&submit=Format+it%21  Why diskcache return True on set(key,values) while it fail to save data in cache?
[14:10:15] <Tuju> kosh: to be host, i just want it to be written on disk and not think about it at all. :)
[14:10:22] <Tuju> kosh: to be honest, i just want it to be written on disk and not think about it at all. :)
[14:10:24] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:10:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-59c8-d7f9-3a37-49c7.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:10:42] <wib_jonas> Tuju: you can open files in two modes, string or binary. you open in string mode like eg. open(filename, "w", encoding="utf-8"), in which case write takes a unicode string argument that it will encode with the encoding automatically. but files actually store bytes, so you can also open them in binary mode like open(filename, "wb"), and in that
[14:10:42] <wib_jonas> mode, write to the descriptor will take bytes objects.
[14:11:05] <kosh> Tuju, how would anything read it if you just dumped binary data to a disk without encoding it?
[14:11:06] <Tuju> wib_jonas: ha, that must be it.
[14:11:49] <wib_jonas> Tuju: you can also create a new Python file handle object for an existing open file, but you have to be careful not to mix using the two because of caching, so this is most useful if you want to write binary to sys.stdout
[14:12:24] *** Joins: st327 (~st327@user/st327)
[14:12:36] <bjs> Tuju: python2 also accepted bytes, it's just that Python2, confusingly, called the bytes type "str"
[14:13:31] <Tuju> bjs: yes, I actually understood the whole migration from one line that someone wrote into comments at stackoverflow
[14:13:33] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[14:13:48] <kosh> Tuju, the problem is that files can be in many different encodings, if you are not specific then you may find the file very hard to read
[14:14:01] <wib_jonas> the text mode can also modify the line endings as you read/write in addition to handling the encoding, and doesn't have the annoying bugs that perl's encoding IO layer have. it's worked great for me so far, I've used it with both utf-8 and utf-16-le encoding, for reading and writing, with and without modifying the line endings
[14:14:15] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) ()
[14:14:21] <bjs> Tuju: where did this file you have come from?  it's up to whoever opened the file to decide whether you should read/write text (str) or bytes.
[14:14:30] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:14:53] <Tuju> https://stackoverflow.com/questions/19877306/nameerror-global-name-unicode-is-not-defined-in-python-3 Martijn Pieters
[14:14:53] *** Quits: Gaurhoth (sid75085@id-75085.charlton.irccloud.com) ()
[14:15:15] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[14:15:17] <Tuju> bjs: i was just looking at it, looks like i opened it myself wrong way and handed it to generateDS
[14:15:39] <Tuju> "Python 3 renamed the unicode type to str, the old str type has been replaced by bytes." -- Martijn Pieters
[14:16:04] <bjs> Tuju: that quote sounds mostly accurate.
[14:16:05] <wib_jonas> I don't know anything about the python2 part, I only programmed python3\
[14:16:37] <bjs> Tuju: note that some libraries that accept files expect them to be opened in bytes mode and some expect them to be opened in text mode, you'll have to check the docs but Python lets you open either way.
[14:17:07] *** Quits: NeoCore (~neocore@138.199.47.170) (Quit: Leaving)
[14:17:08] *** Joins: dimbag (~Couture@dynamic-193-228-166-152.ppp.kmv.ru)
[14:17:23] <Tuju> I'd like to make some visual side-by-side cheat-sheet from this once I understand this completely. I'm sure someone has already done it.
[14:17:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:18:11] <Tuju> Python3 unicode HOWTO goes sideways from the start. Today's noisy world you need to go to the matter straight away.
[14:18:43] <bjs> Tuju: it goes sideways?
[14:19:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[14:19:15] *** Joins: Slimgin (~quassel@097-071-159-002.biz.spectrum.com)
[14:19:23] <Tuju> An average person consumes multiple times more information what we used to do at -80's and -90's, at the evening your head is tired. That time must be used more effectively during those hours.
[14:19:28] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:19:43] <Tuju> bjs: explains a lot uneccessary.
[14:20:01] <bjs> Tuju: do you have a specific example of something that's unncessary?
[14:20:03] <Tuju> This Pieters explained more in oneliner :)
[14:20:25] <bjs> I mean all that person did was explain about some re-naming that happened from 2->3, they didn't explain what either of the types was at all or how to use them
[14:20:25] <Tuju> bjs: do we need to go there?
[14:20:59] <Tuju> bjs: I'm talking about this: https://docs.python.org/3/howto/unicode.html
[14:21:08] <bjs> Tuju: well I think the unicode howto is fine,  I mean like most of the Python docs it's "meh"
[14:21:09] <bjs> Tuju: yes
[14:21:56] <Tuju> considering how important that doc is, it should be very much compressed to the essentials.
[14:21:56] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Remote host closed the connection)
[14:22:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[14:22:27] <Tuju> "(desktop computers have gigabytes of RAM, and strings aren’t usually that large)" - yes, right sure they do.
[14:22:30] *** Joins: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471)
[14:22:41] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[14:22:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:22:55] <bjs> Tuju: surely the more important it is the less it should be compressed?  For someone who's using Python every day it's worthwhile to really understand unicode and the string type and how it works
[14:23:13] <bjs> But sure,  it might not be presented in the ideal way for any individual reader.
[14:23:15] <Tuju> I think i said my point already.
[14:24:06] *** Quits: y1n (~y1n@84-115-65-86.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[14:24:14] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (Read error: Connection reset by peer)
[14:25:50] <bjs> Tuju: okay,  re-reading that page it looks okay to me. It explains what unicode is, dispels some myths. Then talks about encodings and bytes before describing in more detail Python's actual "str" type
[14:26:05] *** Joins: gilnims (~quassel@097-071-159-126.biz.spectrum.com)
[14:26:53] <bjs> It's a very introductory page with some basic info,  not really a day-to-day reference of str and its methods or anything like that.
[14:27:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[14:27:16] *** Quits: LuksNuke (~LuksNuke@2001:7e8:c00d:2800:5632:a48d:a3f2:8471) (Ping timeout: 252 seconds)
[14:27:18] <Tuju> maybe i was looking more like reference kind of text.
[14:27:39] <bjs> Tuju: maybe you should look under the Reference sections rather than the HOWTO sections of docs.python.org
[14:28:39] <Tuju> when one is porting stuff, they need to figure out clear answers to common problems. How-to document is the type that pops into my mind first in that case.
[14:28:40] <jinsun_> and for difference between python2 and 3 probably the what's new sections
[14:28:43] *** Quits: fanis30 (~anon@adsl-67.37.6.2.tellas.gr) (Quit: WeeChat 3.2)
[14:28:53] <bjs> Tuju: docs.python.org -> Library Reference (e.g. for the modules and packages and builtins) -> Built-In Types -> Text Sequence Type    :::  https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str
[14:29:10] *** Quits: Slimgin (~quassel@097-071-159-002.biz.spectrum.com) (Ping timeout: 240 seconds)
[14:29:16] <bjs> I mean yeah,  the Python docs don't really mention Python 2 at all
[14:29:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:29:32] <jinsun_> there is a porting how-to also I think
[14:29:41] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:29:46] <bjs> Python 3 is not exactly "new" anymore and no Python 2 version (and frankly most of the old Python 3 versions) are now abandoned and unsupported for years
[14:29:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[14:30:03] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[14:30:05] <kosh> even if you have a lot of memory having something efficiencly stored is still quite important
[14:30:23] <jinsun_> Tuju: so you should have looked here https://docs.python.org/3/howto/pyporting.html instead of the unicode page
[14:30:25] <kosh> IO is just so slow, that includes just getting something from main ram to the cpu
[14:30:57] <Tuju> jinsun_: yes
[14:31:04] <bjs> kosh: well,  the docs were making a point that text is often stored on devices and sent over networks and other things where a naive encoding would be even more painful
[14:31:41] <kosh> encoding is certainly complicated
[14:31:48] <kosh> and nothing can be done about that
[14:33:07] <jmiehe> habnabit_: so anyway, I learned "click" :D
[14:33:55] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 244 seconds)
[14:34:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:36:34] *** Joins: y1n (~y1n@84-115-65-21.wifi.dynamic.surfer.at)
[14:38:21] *** Joins: upsala (~zcb@185.213.155.160)
[14:39:17] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[14:40:24] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 256 seconds)
[14:40:35] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[14:40:41] *** Joins: jrofd (~test@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net)
[14:41:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:41:12] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[14:41:48] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:41:52] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:41:58] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:42:12] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:42:14] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:42:35] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:42:37] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:43:23] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:43:24] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:43:45] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[14:43:47] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[14:43:47] *** Quits: scoobydoo (~scooby@user/scoobydoo) (K-Lined)
[14:43:53] *** Quits: b3z (~b3z@user/b3z) (Ping timeout: 248 seconds)
[14:44:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[14:45:10] *** Quits: Samian (~Sami@2620:10d:c091:480::1:3a90) (Ping timeout: 240 seconds)
[14:45:17] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[14:45:40] <_SKiTZO> Talk about heroic effort!
[14:45:42] <_SKiTZO> https://github.com/calmjs/calmjs.parse/pull/15
[14:46:12] *** Joins: georgios (~georgios@user/georgios)
[14:46:16] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:46:19] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 244 seconds)
[14:46:54] <kosh> so what is that and how does it involve python?
[14:47:10] <_SKiTZO> kosh, it is a js parser implemented in pure python
[14:47:22] <kosh> ah
[14:47:28] <_SKiTZO> there used to be many of them until about 2017 when ES6 became prevalent and they all died out
[14:47:49] <_SKiTZO> but this one guy.... just marching on implementing it for ES6 alone. What a complete legend
[14:49:10] *** Joins: stranac (~stranac@195.29.239.126)
[14:49:58] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[14:52:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:52:34] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 252 seconds)
[14:53:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:53:48] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[14:57:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[14:57:42] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:58:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:01:39] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[15:02:03] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:04:26] *** Joins: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no)
[15:05:00] *** Quits: kuter (~kuter@078088007219.bialystok.vectranet.pl) (Remote host closed the connection)
[15:06:16] *** Quits: st327 (~st327@user/st327) (Quit: Leaving)
[15:06:50] *** Joins: logithack (~logithack@p200300cfbf366f00d74a46fbd53e1789.dip0.t-ipconnect.de)
[15:07:06] *** Joins: jazzy2 (~jaziz@172.58.36.22)
[15:07:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:07:37] *** Quits: qk1z (~qk1z@193-82-233-119.tpgi.com.au) (Ping timeout: 245 seconds)
[15:07:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:07:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[15:08:59] *** Quits: jazzy2 (~jaziz@172.58.36.22) (Client Quit)
[15:09:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:09:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[15:10:49] *** Quits: debnet (sid330295@python/afpy/debnet) ()
[15:11:05] *** Joins: debnet (sid330295@python/afpy/debnet)
[15:11:40] *** Quits: y1n (~y1n@84-115-65-21.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[15:11:40] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[15:12:17] <logithack> I'm running a Python app inside a Docker container. In addition to that app, I'd like to run another Python script to clean up some data in the same container once a day at 3 a.m. I'm having trouble getting a cron job inside the container to properly run the script accordingly. Is there perhaps a better way to schedule the execution of the script, perhaps with a Python-based solution such as the 'schedule'
[15:12:17] <logithack> package I've just come across?
[15:13:03] <raxor2k> still to that day im struggling to understand the "if __name__ == __main ..."
[15:13:16] <raxor2k> could someone explain easily what it is and why this is beneficial?
[15:13:24] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:13:42] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[15:14:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 245 seconds)
[15:15:25] *** vinleod is now known as vdamewood
[15:15:34] *** Joins: Atque (~Atque@user/atque)
[15:19:17] *** Joins: legola (~legola@46.235.100.27)
[15:19:30] <_SKiTZO> logithack, what you are trying to do is not best practice for docker. You should create a separate container for each part of your app. I know this is is adrag to hear, but if you stick with "one container == one purpose" then your life will become much simpler in the future, I promise
[15:20:06] <Repiphany> raxor2k: __name__ is set to '__main__' if you run a script using `python script.py` or whatever
[15:20:10] *** Joins: tga_ (~tga@user/tga)
[15:20:31] <tga_> greetings. is there a way I'm missing to update many values in a pydantic object, like mydict.update({...})?
[15:20:35] <Repiphany> If you `import script` in another file, __name__ won't be '__main__' so that block won't be run when importing, only when running directly
[15:21:03] *** tga_ is now known as tga
[15:22:33] <logithack> _SKiTZO: Yeah, I know about the fact that it's recommended to only have 1 process per container. However: My app is a web app which allows users to run jobs (doesn't matter what kind of jobs). In the web app, users can also delete jobs. However, jobs older than 3 days should be cleared automatically each night. So I think you could argue that this cleaning task _is_ in fact part of my single-purpose app. That's
[15:22:33] <logithack> why I suggested using the 'schedule' package, provided that nobody object to using this for some reason.
[15:23:32] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[15:23:38] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) ()
[15:23:44] <_SKiTZO> logithack, I have implemented this very thing actually.  https://gitlab.com/octomy/batch and https://gitlab.com/octomy/clock
[15:23:48] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:51] <_SKiTZO> sorry.. clockwork
[15:23:53] *** Joins: monchi (sid347418@id-347418.ilkley.irccloud.com)
[15:24:14] *** Joins: mickey (~user@user/mickey)
[15:24:20] <_SKiTZO> batch does tasks processing and clockwork adds tasks  at an interval similar to cron
[15:24:31] <_SKiTZO> both build into docker images
[15:26:48] <_SKiTZO> logithack, You could just spin a thread up at start that waits 3*24*60*60 seconds and then deletes jobs
[15:27:02] <_SKiTZO> if that is the ONLY thing you are doing at interval
[15:27:08] *** Joins: gggp (~textual@60.10.194.45)
[15:27:13] <habnabit_> easier if you're doing it async anyway
[15:27:42] *** Joins: WarpedAI (~Warped@user/warped)
[15:27:49] <logithack> _SKiTZO: The thread option, however, will not start at a certain time (3 a.m. -- no user interaction). It will always depend on when the app was started.
[15:27:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:28:32] <_SKiTZO> logithack, yes so check the time when the thread is started against the time it is supposed to run and wait that long instead
[15:28:48] <habnabit_> logithack, for 'more than one process' docker the best i've seen is https://github.com/just-containers/s6-overlay
[15:29:12] *** Joins: newbie|2 (~Warped@user/warped)
[15:29:25] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[15:31:24] <theprophet> But if the code is importing the module from another module, then the __name__  variable will be set to that module’s name.   <---- what is meant by then the __name__variable will be set to that module's name? which modules, the one where i am importing from or the one where i import?
[15:31:58] <habnabit_> theprophet, __name__ is the name of the current file only
[15:32:10] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 240 seconds)
[15:32:47] <theprophet> so __name__ will be the set to the file where i import right? habnabit_
[15:32:54] <tga> in pydantic, what's the proper way of taking an object and (with a copy or not) updating a few fields?
[15:33:06] <bjs> raxor2k: you should read it as "if this file was run directly:"
[15:33:09] <habnabit_> theprophet, i don't know what "the file where i import" means, so i don't know
[15:33:16] <bjs> raxor2k: (as opposed to being imported from another file)
[15:33:20] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[15:33:30] <theprophet> i mean place where i import module habnabit_
[15:33:43] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[15:33:51] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[15:33:53] <habnabit_> theprophet, i still don't know what you mean. don't all your .py files contain imports?
[15:34:21] <theprophet> well yea but i mean python module not the one i make
[15:34:43] <habnabit_> theprophet, i still don't know what you mean. maybe you could give an example?
[15:34:48] <_SKiTZO> theprophet, any python script can be run directly from the connamdnline with ./script.py and when that happens, the __name__ variable will be set to the value "__main__" indicating that the script is the "main" script , or entrypoint if you will
[15:35:05] <bjs> theprophet: is that a quote from some website/book?
[15:35:12] <theprophet> habnabit_ ok first read this   But if the code is importing the module from another module, then the __name__  variable will be set to that module’s name.
[15:35:18] <theprophet> @bjs yes
[15:35:22] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[15:35:24] *** Quits: realies (~realies@user/realies) (Ping timeout: 244 seconds)
[15:35:28] <bjs> theprophet: okay,  which website or which book?
[15:35:39] <_SKiTZO> theprophet, if it is called by an import statement instead then __name__ will be set to the module instead since now it is NOT the entrypoint/"main" script
[15:35:43] <theprophet> bjs https://www.freecodecamp.org/news/if-name-main-python-example/
[15:35:45] <habnabit_> theprophet, i don't like that sentence. it's got ambiguous antecedents
[15:36:02] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[15:36:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:36:11] <theprophet> well like it or not
[15:36:25] <bjs> theprophet: I agree with habnabit_ the sentence is worded a bit weirdly.  If I go `import calculator` then in calculator.py the __name__ will be "calculator"
[15:36:27] <theprophet> can you please tell me , which module he means?
[15:37:14] <theprophet> look i quote " then the __name__  variable will be set to that module’s name."
[15:37:16] <bjs> theprophet: modules are just files,  each file has a __name__ in it. it's the name for that file (not the filename or filepath, the *Python module name*, which is slightly different but related)
[15:37:22] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) ()
[15:37:31] <jinsun> tga: why not simply `obj.attribute = "new_value"` ?
[15:37:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:38:09] <habnabit_> theprophet, which one is "that module"
[15:38:21] <tga> jinsun: I need to update many fields, I'd rather not repeat the object name over and over again
[15:38:25] <theprophet> thats what i am trying to understand
[15:38:26] <varaindemian> can this be run without cloning the repo? https://github.com/thinkst/canarytokens/blob/a2d946bc471d4097c6c9ae4180a9f92179e0b846/msword.py
[15:38:26] <bjs> theprophet: e.g. for calculator.py the module name (aka the __name__ variable in that file) is "calculator";  for `foo/bar/calculator.py` it's "foo.bar.calculator" etc.  The sentence is worded weirdly because in Python the name depends on how it gets imported.
[15:38:28] <varaindemian> ?
[15:38:29] <theprophet> habnabit_
[15:38:38] <tga> jinsun: bonus points if I can destructure a dict into it
[15:39:15] <tga> jinsun: making progress, looks like I can do `obj.copy(update={**new_values})`
[15:39:44] <jinsun> yes seems like that is the way if you have a dict
[15:41:57] <varaindemian> anyone?
[15:42:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[15:42:19] <varaindemian> not sure what to look for when you first see the code
[15:42:19] *** Joins: coraxx (~cpp@mail.8-pm.com)
[15:43:33] <bjs> varaindemian: what happens if you copy/paste the code and try run it
[15:43:50] <varaindemian> bjs: ModuleNotFoundError: No module named 'ziplib'
[15:43:52] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:44:13] *** Joins: realies (~realies@user/realies)
[15:44:14] *** Joins: fikran (~fikran@user/fikran)
[15:44:22] <varaindemian> bjs: I also see there `WORD_TEMPLATE=settings.CANARY_WORD_TEMPLATE`
[15:44:23] <jinsun> seems like there is a ziplib.py also in that repo
[15:44:26] <theprophet> Python Modules Explained
[15:44:27] <theprophet> Python files are called modules and they are identified by the .py file extension. A module can define functions, classes, and variables.
[15:44:27] <theprophet> So when the interpreter runs a module, the __name__ variable will be set as  __main__ if the module that is being run is the main program.
[15:44:28] <theprophet> But if the code is importing the module from another module, then the __name__  variable will be set to that module’s name.
[15:44:28] <coraxx> hello ... I'm trying to create a spreadsheet with Python ... I'm using a python module called "ezodf" ... I can't seem to find the full documentation and I'm currently stuck in trying to insert a simple formula into a cell ... can anyone help, plz ?
[15:44:35] <varaindemian> bjs: so I wonder if I need something from that
[15:44:38] <bjs> varaindemian: that implies you need the ziplib.py file as well
[15:44:46] <bjs> and probably settings.py (and anything else it imports)
[15:45:04] <theprophet> please look at the last line and tell me , what he means by then the __name__ variable will be set to that module's name?
[15:45:13] <theprophet> which module he means?
[15:45:18] <bjs> theprophet: inside each file there is a __name__ variable that just exists.
[15:45:30] <theprophet> bro i know that
[15:45:32] <bjs> theprophet: the __name__ variable inside the file is the name of the Python module that is that file. Each file is a module
[15:45:41] <bjs> Okay but maybe the thing you're missing is that each file == a module
[15:45:43] *** Joins: ano (~ano@user/ano)
[15:46:44] <theprophet> bjs so by this then the __name__  variable will be set to that module’s name. ,  he means that the file i will create will have __name__??
[15:46:54] *** gilnims is now known as Slimgin
[15:47:04] <habnabit_> any and every python file has __name__
[15:47:14] <bjs> theprophet: well the Python module's name, Python creates a Python module for every .py file
[15:47:25] <bjs> and so every .py file has a __name__ variable that contains the module name
[15:47:29] <theprophet> just tell me yes or no i am begging you
[15:47:36] <bjs> theprophet: the answer isn't either yes or no
[15:48:08] <bjs> theprophet: but "yes",  every .py file will have a __name__ variable inside it.
[15:48:10] <jean-luc> theprophet: just try it
[15:48:14] <jean-luc> and see the answer for yourself xd
[15:48:22] <jean-luc> the power is all in you
[15:48:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[15:50:10] <theprophet> ok thanks , aprecciated
[15:50:31] <coraxx> I guess EZodf is not so EZ :-)
[15:51:54] *** Joins: thiras (~thiras@user/thiras)
[15:52:41] *** A_Dragon is now known as DergServ
[15:52:43] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:52:51] *** DergServ is now known as A_Dragon
[15:53:19] *** Joins: computeiro (~Wender@189.37.66.24)
[15:55:01] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:55:08] <AsenMx> Hello, does anyone know in Gitlab CI  how to make include of template to be a manual job?
[15:55:54] *** Joins: Naan (~Naan@user/naan)
[15:56:26] *** Joins: eson123 (~eson123@118.69.128.37)
[15:56:40] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[15:56:58] <eson123> guys i was trying to scrap twitch with this script in selenium but somehow it notified me that the username field isn't detected, anyone knows how ? https://hatebin.com/ueyluqwhwi here is my codes
[15:57:01] *** Joins: easior (~easior@183.131.110.40)
[15:57:24] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:57:29] *** Joins: wender (~Wender@186.210.224.40)
[15:57:36] <eson123> line numer 17 indicates that selenium couldnm't find the element by that id but when i inspect it with right click in devtools, i can clearly see it
[15:57:44] <jinsun> coraxx: https://pythonhosted.org/ezodf/ ?
[15:57:55] <jean-luc> yeah it means the xpath is no longer valid eson123
[15:58:01] *** Quits: elgraz (~elgraz@151.65.9.160) (Ping timeout: 252 seconds)
[15:58:21] <jean-luc> copy the full xpath and compare it
[15:58:28] <jean-luc> else try one of the other xpath syntaxs
[15:59:02] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:59:25] <eson123> jean-luc: i mean it's still there, i don't see anything changing
[15:59:31] <jinsun> coraxx: the easier way to make spreadsheets with python is to use pandas
[15:59:37] <jean-luc> whts the url of the application under test eson123
[15:59:40] *** Quits: computeiro (~Wender@189.37.66.24) (Ping timeout: 240 seconds)
[15:59:43] <coraxx> jinsun: thanx ... that's the documentation I found ... but it doesn't seem to show all attributes and methods af the Cell Object ... and it I can't find any example of how to insert a formular ... can you see if it is there ?
[15:59:48] <eson123> jean-luc: i already said it, it's twitch
[15:59:53] <eson123> jean-luc: twitch.tv
[16:00:12] *** Quits: df_data (sid466269@charlton.irccloud.com) ()
[16:00:12] <raxor2k> bjs: i solved that thing from yesterday
[16:00:13] <raxor2k> BOOOM !!!!
[16:00:19] <bjs> raxor2k: congrats
[16:00:20] <jinsun> coraxx: ah you want formulas then pandas will be a pain
[16:00:22] <nedbat> eson123: "under test"?  this doesn't seem like testing....
[16:00:39] <eson123> nedbat: that is not testing, i am automating my account
[16:00:41] <eson123> through python
[16:00:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:00:49] <jean-luc> when i search the source of view-source:https://www.twitch.tv/
[16:00:50] <nedbat> eson123: is that a violation of the terms?
[16:00:51] <coraxx> jinsun: yes ..pandas is great for calculations ...however this is for presentation purposes ...a sort of export of the results.
[16:00:55] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[16:00:56] <jean-luc> there is no "login-username" to be found
[16:00:56] <eson123> nedbat: how is that violation ?
[16:01:03] <nedbat> eson123: i don't know, i'm asking.
[16:01:12] <eson123> jean-luc: click on the login button then inspect again, youy will see it
[16:01:16] <eson123> they do a lot of javascript
[16:01:21] <eson123> that is why i chose selenium instead of scrapy
[16:01:21] *** Joins: mickey (~user@user/mickey)
[16:01:47] *** Joins: easior_ (~easior@183.131.110.40)
[16:01:51] *** Quits: AhmedAmerican (sid470527@charlton.irccloud.com) ()
[16:01:51] *** Quits: easior (~easior@183.131.110.40) (Read error: Connection reset by peer)
[16:01:53] <eson123> nedbat: i don't think this is violation, i am not brute forcing anyone, i am just automate stuffs with my account btw
[16:02:06] *** Joins: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com)
[16:02:19] <eson123> also i twitch is a pretty huge platform, not sure if it has password limitation tries or such
[16:02:46] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[16:02:48] *** Joins: oz4ga (~tim@93.90.4.233)
[16:02:52] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[16:03:45] *** Quits: easior_ (~easior@183.131.110.40) (Client Quit)
[16:04:00] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[16:04:01] <eson123> jean-luc: there is a reason why i clicked it first then proceed to finding tho, damn, so many javascript usage there
[16:04:32] <jean-luc> well even when i click it when i search i still dont find login-username
[16:04:47] <jean-luc> but yeah this seems like a nightmare :)
[16:04:56] <eson123> jean-luc: did u click on the username input section then inspect it ? it comes out right away
[16:04:58] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[16:05:32] *** Quits: dimbag (~Couture@dynamic-193-228-166-152.ppp.kmv.ru) (Ping timeout: 245 seconds)
[16:06:24] *** Quits: shad (~shad@user/shad) (Ping timeout: 244 seconds)
[16:08:24] <jinsun> coraxx: seems like you can just assign to .formula, try the example here https://github.com/T0ha/ezodf/blob/master/examples/ods_04_sum_formula.py
[16:10:00] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[16:10:03] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Client Quit)
[16:10:41] <coraxx> jinsun: IT WORKED !!!!  yahoooo
[16:10:49] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:11:08] <coraxx> jinsun: thanx ... so the question is ..where is the documentation for that ?
[16:11:11] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[16:11:18] *** Joins: elgraz (~elgraz@151.65.9.160)
[16:11:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[16:12:34] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:13:45] <Tuju> in python3 i could read pdf file in as text and store it into string. In python3 I can't. There are stuff that goes outside unicode range and i do need to handle it as bytes.
[16:13:53] <Tuju> in python*2* i could read pdf file in as text and store it into string. In python3 I can't. There are stuff that goes outside unicode range and i do need to handle it as bytes.
[16:14:15] <habnabit_> Tuju, open the file in 'rb' mode
[16:14:19] <coraxx> jinsun: and one more thing :-) ... I'm having trouble with the documentation as the example of creating a "currency" value in a Cell doesn't seem to work.
[16:14:30] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[16:14:40] <Tuju> habnabit_:  I do. But it just opens can of worms when I go along the codelines.
[16:14:46] *** Quits: mexen (uid495612@user/mexen) ()
[16:15:05] *** Joins: mexen (uid495612@user/mexen)
[16:15:07] <habnabit_> Tuju, so.. do you need our help with that?
[16:15:53] <Tuju> habnabit_: not really, just saying that py2->py3 isn't that simple thing as it might feel at the beginning. a lot of stuff gets rewritten.
[16:16:16] <habnabit_> Tuju, oh, believe me, i'm well aware of how thorny that transition is
[16:16:28] <habnabit_> Tuju, anyone who says it's a simple port is lying or never done it
[16:16:44] <Tuju> yeah, it's just not has_key() and print()s.
[16:16:58] <habnabit_> Tuju, has_key?? most people are porting from 2.7, not 2.2
[16:17:04] *** Joins: saribro (~swinnenb@user/swinnenb)
[16:17:41] <Tuju> some of my files are pdf, some XML and then comes validation, if you feed 'em bytes, you need <?xml tags etc. :)
[16:17:49] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[16:17:54] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:18:21] <Tuju> along the way i've been thinking that i hope we don't see python4 anytime soon.
[16:18:45] <Tuju> it's like child nobody wants.
[16:19:05] <nedbat> Tuju: we can help with the unicode problems if you like
[16:19:40] <Tuju> nedbat: thanks, i try to get those working by trial-n-error. Once i hit my head into wall, i come here. :)
[16:19:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:19:56] <nedbat> Tuju: there are other approaches :)
[16:19:58] <stealth_> does cffi cache `new` function data, if you are calling it many times?
[16:20:01] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[16:20:20] <stealth_> `ffi.new`
[16:20:23] <Tuju> In some programming book it said in pretext "Programming is understanding", that creeps into my mind every now and then.
[16:20:58] *** Joins: dez (uid92154@user/dez)
[16:21:45] <Tuju> just for giggles, i googled python4  https://opensource.com/life/14/9/why-python-4-wont-be-python-3
[16:21:54] <Slimgin> Would it be appropriate to run a local DHCP server in a virtual environment? I am trying to zero touch a bunch of Opengear devices and the DHCP server on my Cisco c3750 is not capable of doing what is necessary to apply a generic config on the Opengear and so Im left to running a DHCP server.  Would this better be suited to run in a VM?
[16:22:15] <habnabit_> Slimgin, by 'virtual environment' you mean a python venv?
[16:22:18] <nedbat> Tuju: there's no python 4 in the near future
[16:22:29] <Tuju> nedbat: let's keep it that way.
[16:22:32] <Slimgin> @habnabit - Yes.
[16:22:51] <habnabit_> Slimgin, a venv isn't in any way a VM. you can't run a DHCP server 'in' it
[16:22:54] <u4t> python 5 though ...
[16:22:59] <u4t> (:
[16:23:13] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[16:23:43] <Slimgin> @habnabit - Thats what I thought.  My thinking was that I can run Django in a venv,  so why not another network function as well.
[16:23:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:24:04] <Slimgin> I will go the route of installing and configuring the DHCP server in a VM.
[16:24:27] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[16:24:33] <Slimgin> Thank you for your quick help @habnabit_!
[16:24:34] <habnabit_> Slimgin, a venv makes your system look otherwise identical with the sole difference of what python can import
[16:24:43] <Tuju> hey, i hear that there is russian bookkeeping software, that is obviously russia with cyrilic letters in user interface, but it's also written in cyrilic programming language. Maybe python4 could do something similar change?
[16:24:47] <habnabit_> Slimgin, that is the only change
[16:25:06] <Tuju> python4 in latin.
[16:25:08] <nedbat> Tuju: now you want python 4?
[16:25:08] <Slimgin> habnabit_ Gotcha.
[16:25:19] <Tuju> nedbat: nope, i just have symptoms.
[16:25:22] <kushal> nedbat, :D
[16:26:32] *** Joins: iomari891 (~iomari891@102.91.4.216)
[16:27:29] *** Quits: Curiosity (uid511277@user/cypris) ()
[16:27:44] *** Joins: Curiosity (uid511277@user/cypris)
[16:28:09] <coraxx> jinsun: did you disappear ?
[16:29:39] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[16:30:13] *** Quits: logithack (~logithack@p200300cfbf366f00d74a46fbd53e1789.dip0.t-ipconnect.de) (Quit: Leaving)
[16:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[16:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:31:37] *** Joins: mickey (~user@user/mickey)
[16:32:10] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 240 seconds)
[16:32:14] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:33:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[16:33:50] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:34:16] *** Joins: Naan` (~Naan@user/naan)
[16:34:35] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:35:40] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:37] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[16:38:02] *** Quits: realies (~realies@user/realies) (Ping timeout: 245 seconds)
[16:39:16] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[16:39:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 245 seconds)
[16:39:33] <eson123> jean-luc: well i guess i have to rearrange their html codes to see how it is going in tree-formatted form, is there anyhow i can convert it into readable codes ? their index source code are one-lined
[16:39:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[16:39:43] *** Joins: nimnil (~nimnil@daladevelop/nimnil)
[16:40:01] <nimnil> how come, i have to manually add python to windows paths after installation. I mean, who does not want that to happen?
[16:40:10] *** Joins: gggp (~textual@60.10.194.45)
[16:40:40] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[16:40:57] *** Joins: realies (~realies@user/realies)
[16:41:13] <eson123> nimnil: did you check the "ADD TO PATH" option while installing ?
[16:41:22] <nimnil> there is one? of course it is.
[16:41:26] <nimnil> :/
[16:41:39] <eson123> there is, on modern python 3 > installer
[16:42:34] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[16:42:46] <theprophet> nimnil i had the same problem 1 month ago, just mark everything when instaling.
[16:43:44] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[16:44:49] <jinsun> coraxx: the documentation just has this https://pythonhosted.org/ezodf/tableobjects.html#Cell.formula, probably by read/write they mean you can write to it
[16:45:19] <nimnil> theprophet: eson123: thanks. worked now.
[16:45:30] <jinsun> coraxx: for the currency thing no idea, there seems like you can set value_type https://pythonhosted.org/ezodf/tableobjects.html#Cell
[16:45:39] *** Parts: nimnil (~nimnil@daladevelop/nimnil) ()
[16:46:29] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[16:46:43] *** Joins: Enitin (~Enitin@82.102.22.86)
[16:46:52] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:47:00] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad)
[16:47:35] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:47:43] *** Joins: vats (~vats@180.149.226.8)
[16:48:49] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[16:50:44] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 256 seconds)
[16:51:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:51:35] <gitesh> Hi. I have a question.
[16:52:10] <gitesh> How accessing values of an instance/object directly can accidently change it?
[16:52:34] <gitesh> So that we have to make function available to prevent those changes
[16:53:56] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[16:54:13] <bjs> gitesh: it's a little unclear what effect you're referring to here,  directly as opposed to what?
[16:54:35] <bjs> gitesh: but in general objects (especially in Python) can do whatever they want when you call methods or access attributes
[16:54:47] <ali1234> i think the question is "why are getters/setters used?"
[16:56:19] *** Joins: dcaro (~dcaro@user/dcaro)
[16:56:52] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[16:57:18] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[16:57:22] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[16:57:47] *** Joins: Gerula (~Gerula@user/gerula)
[16:57:49] <supakeen> they're not in very widespread use in Python
[16:58:09] <ali1234> not as explicit methods but properties are kind of the same thing
[16:58:32] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[16:58:44] <supakeen> sure but they don't protect against accidentally changing a value more that you could use them to guard the values for an attribute which is, imho, also silly
[16:58:47] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[16:58:55] <supakeen> but: opinions :)
[16:59:35] <ali1234> it is hard to come up with a simple self-contained example that requires them and isn't totally contrived, but they are definitely useful
[16:59:41] <raxor2k> bjs: and onceeeeeeeeeeeeeeeee again a strange bug occurs ..
[17:00:14] <bjs> raxor2k: okay,  what kind of bug?
[17:00:22] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 256 seconds)
[17:00:35] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[17:01:50] <gitesh> why does __init__ method exists?
[17:01:59] <bjs> gitesh: what would you have instead?
[17:02:08] <gitesh> to initialize variables for an instance i could directly do it
[17:02:18] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[17:02:24] <bjs> gitesh: would you copy/paste the initialization code everywhere you make a new instance?
[17:02:27] <gitesh> point1 = Point()  point1.x = 2
[17:02:39] <gitesh> bjs: oh
[17:02:42] <gitesh> got it
[17:02:44] *** Joins: Gerula (~Gerula@user/gerula)
[17:04:27] *** Joins: shad (~shad@user/shad)
[17:04:32] <stealth_> gitesh, its not a rule but normally things you don't want changed by user in class is stored as `._x = `
[17:04:42] *** Joins: Gaurhoth (sid75085@id-75085.ilkley.irccloud.com)
[17:05:01] <stealth_> gitesh, if a user really want to they can change and mess up their software no matter how much protection you add.
[17:05:36] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Remote host closed the connection)
[17:05:52] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:06:16] <raxor2k> bjs: im trying to do exact the same in line 49-56 as i am doing in line 13-20, but i get error? makses no sense.. https://bpa.st/TXDQ
[17:06:27] <gitesh> stealth_: but this is not a java case it hink
[17:06:27] <gitesh> *think
[17:06:34] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:06:54] <supakeen> this is indeed not java :)
[17:07:12] <bjs> raxor2k: judging from the error KeyError: 'secondary_muscle_points'  I'm guessing the problem is that task2 doesn't have secondary_muscle_points
[17:07:30] <raxor2k> bjs: you see the list printed? it has it ..
[17:07:59] <stealth_> gitesh, i would have probably gotten that joke if i knew/used java but i haven't, it looked too weird to even bother trying.
[17:07:59] <bjs> raxor2k: then it's `merged_task2["secondary_muscle_points"]` that doesn't have it
[17:08:18] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[17:08:59] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:09:11] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: Textual IRC Client: www.textualapp.com)
[17:09:30] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:10:21] <raxor2k> bjs: well.. explain this then : https://bpa.st/VVFA
[17:10:44] <bjs> raxor2k: that line tried to access "secondary_muscle_points" on *two* different dicts.
[17:11:06] <bjs> raxor2k: task2 and merged_task2,  if you got a KeyError the one at least doesn't have that key.  If task2 does then merged_task2 must've been the one that didn't
[17:11:20] <bjs> raxor2k: so, what do you want to do if task2 has "secondary_muscle_points" but merged_task2 does not
[17:11:59] <raxor2k> bjs: i dont know, but still doesnt make sense why the first loop on that list works and the other one not
[17:12:02] <raxor2k> exact same code
[17:12:06] <raxor2k> with different values
[17:12:21] <raxor2k> once again: python and dicts = makes no sense :)
[17:12:48] <gitesh> I want guidance on naming , i think nedbat has a web page on that, for suppose if a function is taking a string as a parameter I'm always naming it `astrin`
[17:12:53] <gitesh> `astring` *
[17:13:19] <bjs> raxor2k: in the first loop you don't mention "secondary_muscle_points"
[17:13:33] <raxor2k> bjs: yes because list1 with the values doesnt have that
[17:13:41] <raxor2k> so why should i mention it ?
[17:13:57] <bjs> raxor2k: you shouldn't,  but why are you surprised only the second loop fails?
[17:14:10] <bjs> if the cause is that the merged dict doesn't have "secondary_muscle_points" why are you surprised you don't get the error on the loop that doesn't mention secondary_muscle_points
[17:15:13] <bjs> raxor2k: the answer is obvious that before you add to the secondary_muscle_points's field of the merged dict you need to check if it exists first and if it doesn't, create one
[17:15:21] <raxor2k> bjs: ok bos
[17:15:39] <raxor2k> then i just split the two loops into 2 different functions and it should work
[17:15:42] <raxor2k> much better
[17:16:10] *** Quits: iomari891 (~iomari891@102.91.4.216) (Ping timeout: 240 seconds)
[17:17:15] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[17:17:24] *** Joins: iomari891 (~iomari891@102.91.4.147)
[17:18:25] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Killed (NickServ (GHOST command used by Omega037-B)))
[17:18:43] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[17:18:50] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[17:19:20] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:19:50] *** Joins: ravan (~ravan@user/ravan)
[17:21:26] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[17:22:33] *** Joins: emika6 (~emika@185.207.249.7)
[17:22:52] *** Quits: emika (~emika@212.102.44.39) (Ping timeout: 244 seconds)
[17:22:52] *** emika6 is now known as emika
[17:29:19] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[17:30:17] *** Joins: ubert (~Thunderbi@77.119.216.109.wireless.dyn.drei.com)
[17:30:40] *** Joins: georgios (~georgios@user/georgios)
[17:30:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:32:22] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:32:31] <gitesh> I want to know the behaviour of `==` since i can understand the behaviour of `is` is id()
[17:33:14] <grym> gitesh: is: "are these two names the same object".  ==: "are the object(s) these names refer to equivalent"
[17:33:15] <stealth_> gitesh, you shoudn't use `is` for checking `id()`
[17:33:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[17:33:48] <grym> gitesh: as a practical matter, use `is` for comparisons to None, True, and False; use == everywhere else
[17:33:50] <stealth_> gitesh, you can `is` for `if var is None`, `True`, `False`, `object`
[17:34:20] <stealth_> gitesh, `if id(var) == 123:`
[17:34:50] <bjs> gitesh: == means "are they equal".
[17:34:57] <wib_jonas> gitesh: the == operator usually behaves the same, but it's overridden for a LOT of types, including all the numeric and boolean types, all the containers like tuples and lists and dicts and str. the numbers and bools are rigged to compare equal if they have exactly the same numerical value, even if they're of different types. the containers compare
[17:34:57] <wib_jonas> equal only with the same type of container, and then recursively compare their contents.
[17:35:05] <bjs> gitesh:  1034 == 1033+1
[17:35:07] *** Quits: ubert (~Thunderbi@77.119.216.109.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[17:35:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[17:35:29] <bjs> gitesh: `x = []; x.append(42);  x == [42]`  etc
[17:35:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[17:35:47] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[17:35:48] <bjs> even though they may be different objects that came from different places they are "equal"
[17:35:53] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:36:03] <Tuju> https://suds-py3.readthedocs.io/en/latest/  yiks, there are python3 prints on that page.
[17:36:11] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:36:18] *** Joins: nomic (~nomic@185.192.69.188)
[17:36:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:36:36] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[17:36:42] *** Quits: nomic (~nomic@185.192.69.188) (Client Quit)
[17:36:53] <grym> Tuju: strongly suspect noone updated the docs
[17:37:17] <grym> and then 3 years worth of no maintenance ensued
[17:37:31] <wib_jonas> gitesh: in addition, there's a subtlety: two dict compare equal even if their insertion order differs, but collections.OrderedDict equality care about the order.
[17:37:35] *** Joins: ubert (~Thunderbi@178.115.65.0.wireless.dyn.drei.com)
[17:37:40] <gitesh> look at the following code
[17:37:41] *** Joins: heco (~redrum@user/redrum88)
[17:37:42] <Tuju> and i keep writing python3 when i mean 2
[17:38:01] <gitesh> shorturl.at/abjwO
[17:38:29] <grym> gitesh: could you repaste that to bpa.st/+python? i get XSS warnings when i click that link
[17:38:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:38:41] <nedbat> gitesh: this is a good demonstration of why you shouldn't use "is"
[17:39:27] <gitesh> in this code I have created 2 objects and they are not `==` even though I am creating same objects
[17:39:38] <gitesh> `==` returns false but why?
[17:39:39] <nedbat> gitesh: you didn't use "=="
[17:39:40] *** Joins: Aleks (~aleks@user/aleks)
[17:39:42] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[17:39:51] <nedbat> gitesh: you literally typed "p is q", not "p == q"
[17:40:00] <gitesh> oh sorry
[17:40:06] <wib_jonas> sure, but they also wouldn't compare equal with the == operator
[17:40:21] <nedbat> gitesh: also, your object doesn't define __eq__, so == doesn't know how to work
[17:40:57] <gitesh> oh that's a good . i understand now
[17:41:04] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:41:18] <gitesh> here --- https://bpa.st/GLQA
[17:41:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:41:38] <gitesh> ok even though i didn't define __eq__ then why is that false?
[17:41:44] <gitesh> how is that calculated
[17:41:47] *** Quits: ubert (~Thunderbi@178.115.65.0.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[17:41:56] <gitesh> it is still working not giving errors
[17:42:14] <wib_jonas> gitesh: again, the == operator generally does the same as the is operator
[17:42:27] *** Joins: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376)
[17:42:29] <grym> wib_jonas: ... no?
[17:42:30] <wib_jonas> it only works differently if one of the arguments is of a class that overrides equality
[17:42:43] <stealth_> gitesh, `print(type(p) is type(q))`
[17:42:54] <habnabit_> wib_jonas, that is entirely false
[17:43:05] <wib_jonas> it's just that a lot of the classes that you commonly used, including, like I said, all the numbers and containers, do override the == operator
[17:43:24] <habnabit_> wib_jonas, yes, which contradicts when you said "generally" :)
[17:44:00] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[17:44:15] <gitesh> https://bpa.st/GLQA
[17:44:20] <bjs> gitesh: if you don't define __eq__ then you can't trust what == does
[17:44:28] <gitesh> bjs: okay
[17:44:31] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:dde8:210d:8bb2:f9ad) (Ping timeout: 256 seconds)
[17:44:50] <grym> one of the nice things about dataclasses and attrs is that by default, they generate a sensible __eq__ automatically
[17:44:52] <wib_jonas> anyway, your Point class doesn't override the == operator, nor does it inherit an overridden == operator, so the == comparison on two Points will behave the same as the is comparison
[17:45:16] <stealth_> gitesh, you can also do `print(p.__class__ is q.__class__)` its not checking if the content == each other but, if they both belong to same class.
[17:45:31] *** Joins: keir (~keir@user/keir)
[17:45:50] <bjs> gitesh:  p == q is roughly turned into p.__eq__(q)  and if p's class (the Point class) doesn't define __eq__ you just get the "default" behaviour
[17:45:52] <wib_jonas> if you want to override it, you can try to add something like this to the class body: def __eq__(self, other): return self.x == other.x and self.y == other.y
[17:45:56] <grym> gitesh: https://bpa.st/PLJA
[17:46:10] <gitesh> bjs: got it
[17:46:15] *** Joins: reset (~reset@user/reset)
[17:48:14] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[17:49:00] *** Quits: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no) ()
[17:49:01] *** Quits: resmo (~resmo@2a00:d420:9:8a00:61bf:2bd6:42ae:d461) (Remote host closed the connection)
[17:49:18] *** Joins: resmo (~resmo@2a00:d420:9:8a00:4264:bbbf:4af3:c25c)
[17:49:35] *** Joins: gggp (~textual@60.10.194.45)
[17:51:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[17:53:36] *** Joins: fikran (~fikran@user/fikran)
[17:54:13] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[17:54:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:54:51] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:55:07] *** Joins: zivoni (~tomas@user/zivoni)
[17:55:09] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:57:13] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:59:05] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:00:18] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[18:00:43] *** Quits: regreg_ (~regreg@2a02:2f09:531a:c700:3d50:1bd9:fb7c:66e6) (Read error: Connection reset by peer)
[18:00:54] *** Joins: arinov (~arinov@31.142.36.176)
[18:02:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:03:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:04:59] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:05:22] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[18:05:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[18:07:19] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[18:07:29] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:07:40] *** Quits: gitly (~gitly@148.252.129.136) (Ping timeout: 240 seconds)
[18:09:25] *** Joins: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no)
[18:09:28] <raxor2k> bjs: this is hillarious
[18:09:34] <raxor2k> i have no words'
[18:09:50] *** Joins: gitly (~gitly@148.252.132.125)
[18:09:54] <bjs> raxor2k: for what
[18:10:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:10:19] <Wooble> they have no words, so they can't answer that. :P
[18:10:47] <Fieldy> lol
[18:11:04] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 252 seconds)
[18:11:28] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[18:11:52] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-3d62-3163-6f7f-de12.res6.spectrum.com) (Quit: Client closed)
[18:12:28] <raxor2k> bjs: why cant i do both at the same time ??
[18:12:35] <bjs> raxor2k: do both what?
[18:12:41] <bjs> maybe you can and you're just not writing it correctly
[18:12:52] *** Joins: Pickchea (~private@user/pickchea)
[18:12:55] <raxor2k> bjs: https://bpa.st/L2TQ
[18:13:53] <bjs> raxor2k: what do you mean by "both at the same time"
[18:14:05] <raxor2k> in one single loop
[18:14:10] <bjs> raxor2k: but you have two things
[18:14:14] <raxor2k> yes and ?
[18:14:21] <bjs> raxor2k: so... two loops? one for each thing
[18:14:32] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:14:32] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[18:14:33] <raxor2k> yes
[18:14:42] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 245 seconds)
[18:14:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:15:00] <bjs> so ... that seems fine
[18:15:11] <raxor2k> so why do i get error then ?
[18:15:17] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:15:29] <bjs> raxor2k: because you're doing it wrong?
[18:16:47] <bjs> raxor2k: if you get KeyError: 'secondary_muscle_points' it's because the thing you tried to access didn't have that key.
[18:17:13] <Fieldy> hi! I'm a python noob. Learning some things slowly though. i'm using 3.7.11. what are the functions/terms/whatever that I can search on to learn how to change this from running and exiting, to running, and then asking me if i would like to re-read the file for changes, and then run it again? https://bpa.st/UK6Q
[18:17:29] *** Joins: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net)
[18:17:40] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:18:35] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[18:20:08] <bookworm> loop? while True loop in that case (endless loop)
[18:20:16] <stealth_> raxor2k, `self.p_muscle_group_list` by the name says its a list so `if task['muscle_group_ID'] in merged:` can't be right the `task['muscle_group_ID']` part, since its a dict key loop up
[18:20:55] <Fieldy> bookworm: ok, i'll do some searching. though I would like it to ask me each time before re-reading the file for changes and running (this thing is extremely resource intensive, hence wouldn't want it looping continually on its own)
[18:21:11] <stealth_> raxor2k, maybe you mean `if 'muscle_group_ID' in merged:` ?
[18:21:11] <coraxx> jinsun: THANX for your assistance ... I'll see if I can figure out why "set_value" doesn't work with "currency" ...have a great weekend :-)
[18:21:27] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:21:32] <bookworm> while True; if input() == "y" else break ?
[18:21:36] <bookworm> pseudo code
[18:21:43] <habnabit_> Fieldy, https://linux.die.net/man/8/logtail
[18:22:00] <_SKiTZO> Fieldy, maybe what you want is a file altercation monitor
[18:22:02] <_SKiTZO> http://timgolden.me.uk/python/win32_how_do_i/watch_directory_for_changes.html
[18:22:16] <Fieldy> ahh lots of suggestions! thanks everyone, i will dive in
[18:22:20] *** Joins: damoreno (~damoreno@redhat/damoreno)
[18:22:44] <stealth_> raxor2k, ignore that, i didn't read your #ERROR comment
[18:22:56] <habnabit_> Fieldy, keeping track of how much of a log you've tailed is complicated enough that i highly recommend using logtail(8) for it
[18:23:15] <raxor2k> bjs: i just dont get it why the code snippets works perfectly when running them selves(commenting out the other part)
[18:23:19] <raxor2k> but not when i run them together
[18:23:24] <Fieldy> habnabit_: generally it's a very simple one-line file, sometimes more, but i manually edit the input file
[18:23:36] <Fieldy> habnabit_: do you think this still applies?
[18:23:55] <bjs> raxor2k: well that's easy to explain,  the error only happens if the ID exists in the merged but doesn't have "secondary_muscle_points",  if you comment out the first loop then it won't exist
[18:23:59] <habnabit_> Fieldy, oh, not at all
[18:24:01] *** Joins: yangby (~secret@115.199.101.158)
[18:24:06] <Fieldy> habnabit_: ok :)
[18:24:16] <habnabit_> Fieldy, use a unix socket or named pipe
[18:24:24] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi)
[18:24:43] <bjs> raxor2k: the problem is that generally you don't know what keys have "already" been merged into the dict,  so you should just check if the one you want to add to already exists before you try access it and update it
[18:24:46] <Fieldy> habnabit_: ok, i'll look into that too. i have several ideas i can research now, thanks
[18:24:56] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[18:25:11] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:25:45] <theprophet> can somebody help me with this?  https://pastebin.pl/view/1653d106
[18:25:55] <atrigent> for anyone using vscode - I'm having a problem where the python extension is not able to detect the existence of a function when it is imported from a module which in turn imports it from another one - for instance if I "from sqlalchemy.engine import make_url", it is not able to detect it despite it being imported here: https://github.com/sqlalchemy/sqlalchemy/blob/master/lib/sqlalchemy/engine/__init__.py#L57 is this a known issue?
[18:25:56] <atrigent>  if so, can some point me to the github issue?
[18:26:27] *** Joins: slee (~slee@user/slee)
[18:27:01] *** Joins: shabius_ (~shabius@45.15.19.195)
[18:27:03] <theprophet> it takes forever to count, and whenever i interrupt it,it gives me error.
[18:27:04] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[18:27:08] <damoreno> I have a class that holds a list with items of the same class. I need to list them all recursively starting from a single instance of that class. I have some *not working* code here https://bpa.st/L5VQ. What's the right way to do this? What I'm expecting here is "one two three" to be printed in the terminal
[18:27:10] <slee> hi, is there a way to only grab x amount of data from an requests.get(url=,,,
[18:27:26] *** Quits: zware (~zach@python/psf/zware) (Quit: Quitting)
[18:27:43] <slee> ii'm only wanting to grab like the first 2048 of the source to save on bandwidth
[18:27:47] <Wooble> theprophet: I'm not sure why it's not finishing, but KeyboardInterrupt isn't much of an error since you intentionally cause it yourself...
[18:27:56] <habnabit_> slee, send a HEAD request or use a Range header or set stream=True and stop it early
[18:28:03] <theprophet> yea but, its not finishing, and thats why i interrupt
[18:28:11] *** Joins: zware (~zach@python/psf/zware)
[18:28:29] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3474-1442-9ff3-7009.res6.spectrum.com)
[18:28:35] <slee> habnabit_, thanks, i'll look into those options
[18:28:43] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Ping timeout: 252 seconds)
[18:29:09] <raxor2k> bjs: well ok
[18:29:54] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[18:29:57] <habnabit_> damoreno, you meant `yield from foo` on L14
[18:30:02] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[18:30:11] <habnabit_> damoreno, `yield` doesn't do a recursive descent
[18:30:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:30:23] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[18:30:28] *** Joins: ogata (~textual@240d:1a:ade:8000:4c22:3acd:3c8e:b197)
[18:31:32] *** Quits: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376) (Ping timeout: 252 seconds)
[18:31:48] <damoreno> habnabit_: it seems I indeed meant `yield from foo`. It works. Thanks!
[18:32:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:32:45] <theprophet> https://pastebin.pl/view/1653d106 can somebody help me with this? its not finishing the count and takes forever, only counts to 1 if i change the number in arg.
[18:33:01] <damoreno> habnabit_: just another small question. How would you rewrite it so on L21 you don't have `from foo in foo`. It sounds weird when you read it.
[18:33:13] <habnabit_> theprophet, yes, you wrote `count = 1` on L7
[18:33:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:33:37] <bjs> theprophet: `count =+ 1` did you mean to write `count += 1`
[18:33:40] <bjs> note +=  not =+
[18:33:54] <habnabit_> damoreno, you're the one who picked the metasyntactic names ;)
[18:34:10] <habnabit_> damoreno, i don't know what these objects are
[18:34:13] <theprophet> ohhh god ok ,  i see it now
[18:34:18] <theprophet> ok thanks guys
[18:34:19] *** Quits: ulif (~nick@user/ulif) (Quit: Changing server)
[18:34:39] <foo> We have a section of our codebase called "skills" - which involve "silo'd skills" that our core chatbot can do. We can A) move all forms from all skills into a core skills/forms.py module, or B) keep all related fields forms (WTForms in flask) within respective modules/skills. Part of the value of forms.py is we only would import wtforms once. The disadvantage (at least to my thinker brain) is we "add to the
[18:34:44] <bjs> raxor2k: here's a possibility https://bpa.st/AMSQ
[18:34:45] <foo> spiderweb of imports" within the skills directory, whereas each skill is largely intended to "standalone" - does anyone have any other commentary to add to this?
[18:34:49] *** Joins: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376)
[18:34:53] <bjs> raxor2k: i quickly wrote, it's probably wrong,  but you get the idea
[18:34:54] <bjs> hopefully
[18:36:03] *** Joins: Vonter (~Vonter@user/vonter)
[18:36:03] *** Joins: eson123 (~eson123@118.69.128.37)
[18:36:27] <eson123> jean-luc: hey are you still here, i figured out how to do it and it worked but i still need some help on WebDriverWait()
[18:36:44] <damoreno> habnabit_: hahaha, totally. In the real code the class is called BundleData and other_foos is `related_bundles`. So the for loop looks like `for bundle in bundle`. Usually I would rewrite it as `from related_bundle in bundle` but as the iterator yields self also, I don't know how to rewrite it.
[18:36:45] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[18:36:51] <JimmyRustles> hi
[18:37:02] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[18:37:06] <foo> grym / habnabit_ - thanks again for the ipython recommendation. It's been a nice alternative.
[18:37:08] <JimmyRustles> if i have a python program that takes input and gives output, can i hook it up to a web page that sends input to the program, receives the output and displays it in the browser?
[18:37:20] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:37:22] <habnabit_> damoreno, tbh i'd probably just write `for b in bundle:
[18:37:35] *** Quits: Curiosity (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[18:37:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:37:54] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[18:38:39] <damoreno> habnabit_: that kinda looks worse xD I don't like single character variable names
[18:38:57] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi) (Quit: WeeChat 3.2)
[18:39:12] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Remote host closed the connection)
[18:39:42] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[18:40:40] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5cef:4200:b721:17fe:fefe:c823) (Ping timeout: 256 seconds)
[18:41:11] *** Quits: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133) (Remote host closed the connection)
[18:41:19] *** Joins: NeoCore (~neocore@195.200.221.188)
[18:42:16] <grym> JimmyRustles: probably.  you might want to look at fastAPI
[18:42:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:42:30] <damoreno> habnabit_: mmm... I don't think the solution is quite right. I've updated the example https://bpa.st/7BVQ
[18:42:33] *** Joins: magla (~gelignite@55d44ca3.access.ecotel.net)
[18:42:42] <grym> philosophically i don't see a huge difference between a command line program and a REST endpoint
[18:42:51] <grym> and it's natural enough to translate the two
[18:43:51] <habnabit_> damoreno, huh? you seem to have forgotten to do anything with foo3
[18:44:42] <JimmyRustles> thanks grym
[18:44:48] <damoreno> habnabit_: what I've forgotten is to connect my brain today. Sorry, you are right. It works
[18:44:55] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[18:44:56] *** scoobydoo_ is now known as scoobydoo
[18:44:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Excess Flood)
[18:46:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:46:20] <raxor2k> bjs: so i need both function or only the one below is enought?
[18:46:22] <raxor2k> enough
[18:46:27] <bjs> raxor2k: you don't need any functions
[18:46:41] *** Quits: yangby (~secret@115.199.101.158) (Quit: Go out for a walk and buy a drink.)
[18:46:47] <bjs> now i wish i didn't even make the other function, you can just put the code straight in the loop
[18:46:53] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:47:04] <raxor2k> hmm
[18:47:57] <bjs> raxor2k: the important thing is look how i *check* to see if the key exists, and if it doesn't, I create it. before I do the +=
[18:48:07] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[18:48:13] <raxor2k> bjs: yes i see
[18:48:23] *** Joins: ulif (~nick@user/ulif)
[18:49:32] <eson123> welp i am just gonna ask about selenium anyway, would appreciate any help :P so anyone knows how i can WebDriverWait() some certain elements that are loaded by javascript ? usually when i use WebDriverWait() it is for making sure the web is loaded in selenium but nots its extra elements
[18:50:05] <habnabit_> i would not be surprised if twitch had anti-scraping protection
[18:50:35] <eson123> habnabit_: oh no i actually made it there tho, i logged into my account and i can share my codes if you want, but i just wanna see if there is anyhow i can WebDriverWait() for elements
[18:50:40] *** Joins: mantiX (~manti7@176.10.104.94)
[18:51:26] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 256 seconds)
[18:53:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:53:19] *** Quits: blddk (~admin@185.233.252.229) (Ping timeout: 250 seconds)
[18:53:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[18:53:46] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:54:05] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[18:54:14] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:56:19] *** Gustavo6046_ is now known as Gustavo6046
[18:56:46] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[18:56:57] *** Quits: Elzington (~Elzington@68.235.43.174) (Quit: Leaving)
[18:57:53] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:58:41] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[19:00:15] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:00:53] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[19:01:21] *** Joins: ikus060 (~ikus060@96.127.228.230)
[19:01:36] *** Joins: vicfred (~vicfred@user/vicfred)
[19:02:32] *** Quits: rdvn (~rdvn@user/rdvn) (Remote host closed the connection)
[19:03:25] <raxor2k> surely it isnt only me who hate dicts in python ?
[19:03:30] <raxor2k> the worst thing that ever happened to me
[19:04:21] <JimmyRustles> i find them useful
[19:04:24] <JimmyRustles> but i'm probably using them wrong
[19:04:31] <stealth_> dict is one of the best feature of python
[19:04:34] <stealth_> raxor2k, https://www.pythonsheets.com/notes/python-dict.html
[19:04:43] *** Joins: rdvn (~rdvn@user/rdvn)
[19:04:46] *** Joins: blddk (~admin@185.233.252.229)
[19:05:06] <zware> raxor2k: I don't think dicts are your problem.  I'm not sure what exactly is, but I don't think dicts themselves are to blame
[19:06:00] <zware> raxor2k: All a dict is is a mapping between keys and values, which is incredibly useful in all kinds of places
[19:07:34] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[19:09:44] *** Joins: pro_z (~pro_z@37.214.55.6)
[19:10:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[19:10:06] <gitesh> I had a strange question to why does classes and objects usage (dot) notation to access their attr or methods
[19:10:57] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:11:15] <zware> gitesh: I have a strange answer: because it's nicer to do `object.attr` than `getattr(object, 'attr')` :)
[19:12:12] <zware> gitesh: Though I'm not certain I understood your question
[19:12:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:12:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:e913:ebf0:5b4f:bc6f)
[19:12:44] <stealth_> gitesh, dot is just a separator
[19:13:12] *** Joins: shangxiao (~davids@124.187.193.187)
[19:13:18] <jinsun> gitesh: that is what many languages do, in C you access stuff inside structs with dot notation too
[19:13:46] <raxor2k> bjs: but you understand what i tried to do, right?
[19:13:53] <jinsun> also IDEs help you with autocomplete when you press dot, not when you write getattr
[19:14:12] <bjs> raxor2k: there's no problems with dicts, yes I understand,  my code shows you
[19:16:30] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:16:36] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:16:40] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[19:16:45] *** Joins: zebrag (~chris@user/zebrag)
[19:16:59] <raxor2k> bjs: i appreciate everything i learn from you, but i hope i never use dicts again, never ever :p
[19:17:14] <u4t> um
[19:17:17] <bjs> raxor2k: none of your problems come from the dicts
[19:17:20] <zware> raxor2k: You won't do much programming without dicts :)
[19:17:20] <u4t> good luck with that (:
[19:17:37] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:17:41] <bjs> raxor2k: dicts are very useful and all languages have dict-like things that get used everywhere.
[19:18:12] <u4t> can i get a quick rehash (PUNderful) of what the issue is?
[19:18:16] <hodapp> guess I don't see what's problematic about dicts... as long as it's not like in languages where no one has ever heard of any other data structure, and they're used for things they're really not meant for and that they're bad at
[19:18:21] <grym> raxor2k: wait until you find out what's inside every object() :)
[19:18:42] * u4t throws __slots__ at grym
[19:18:54] <grym> u4t: that's just a dict in a trenchcoat, you can't fool me
[19:18:57] * foo jumps in front of grym 
[19:18:59] * hodapp throws "The Art of the Metaobject Protocol" hardcover at u4t
[19:19:03] *** Joins: The_Jag (~The_Jag@host-80-180-182-58.retail.telecomitalia.it)
[19:19:21] <u4t> true (:
[19:20:06] <u4t> dict generators are also fun
[19:20:15] <Tuju> suds __inject fails: https://stackoverflow.com/questions/69046728/suds-python3-typeerror-xxxxx-got-an-unexpected-keyword-argument-inject
[19:21:03] <u4t> so what is the supposed issue with dicts again?
[19:21:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:21:36] *** Joins: Adoi (~Adoi@user/adoi)
[19:21:49] <grym> u4t: raxor2k is learning, and getting confused and grumpy about it, that's all
[19:22:01] <u4t> yeah i gathered that bit
[19:24:03] <Fieldy> is there a way to do sed-like operations in print()? for example if i want to do something like replace newlines with a space s/\n/ /g
[19:24:22] <Fieldy> python 3.7.11
[19:24:44] <bjs> Fieldy: print() just takes a string and prints it,  you can just make the string you need.  `s = "hello\nworld";  print(s.replace("\n", " "))`
[19:24:47] <u4t> not "in print()" but you can do it with str functions
[19:24:47] <grym> "\n".replace("\n"," ")
[19:25:06] <grym> Fieldy: and if you have to do complicated stuff, there's always re
[19:25:07] <Fieldy> hmm, ok, i'll check those out thanks )
[19:25:07] *** Quits: dreadedfrog (~user@193.160.129.69) (Ping timeout: 245 seconds)
[19:25:11] <bjs> Fieldy: also see the `re` module for more complicated replacement patterns
[19:25:14] <u4t> ^
[19:25:17] <Fieldy> coolness
[19:25:18] <stealth_> Fieldy, `print(..., end=' ')`
[19:25:18] <u4t> re.sub()
[19:25:30] <Fieldy> so many solutions hehe. y'all rock
[19:26:00] <u4t> stealth_: except that doesn't replace "\n"s that appear in the arguments
[19:27:39] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[19:28:07] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[19:29:21] *** Joins: lalitmee (~lalitmee@180.94.33.98)
[19:29:49] <Tuju> suds for python3 has this in argparser.py   param_name = list(self.__kwargs.keys())[0]    that can't be right.
[19:30:01] <Wooble> grym: or type(locals()) :)
[19:32:58] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:33:33] *** Joins: georgios (~georgios@user/georgios)
[19:33:43] <u4t> Tuju: that does look odd but without context it's not clear why they've done it like that
[19:34:16] <Tuju> there are four other lines that has .keys()   which implies that it hasn't been ported at all.
[19:34:32] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[19:34:37] <u4t> ported from ...?
[19:34:44] <Tuju> python2
[19:35:03] <Wooble> Tuju: they wouldn't have called list() if it wasn't ported.
[19:35:14] *** Joins: SixxK (~SixxK@2a01:e34:ecb3:d620:408c:ff4d:4b:f96f)
[19:35:21] <Wooble> granted, it wasn't ported *well*, probably 2to3 did that.
[19:35:23] <u4t> maybe they just did a 2to3 on it
[19:35:28] <u4t> jinx
[19:35:34] <Tuju> but kwargs is a dict, it doesn't have .keys() method.
[19:35:41] <SixxK> hello
[19:35:45] <Wooble> Tuju: uh....
[19:35:51] <u4t> dicts have .keys()
[19:36:02] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[19:36:24] <SixxK> I am currently using pip-compile from pip-tools to handle dependancies of my project
[19:36:31] <Tuju> well, they do. i stand corrected.
[19:36:35] <u4t> (:
[19:36:42] <bjs> Tuju: what data structure *other* than a dict would have .keys() ? :)
[19:36:59] <u4t> bjs: collections.abc.Mappable
[19:37:07] <SixxK> but the issue I have is that it produces a directory named <myprojectname>.egg-info/
[19:37:09] <u4t> *Mapping
[19:37:10] <mefistofeles> bjs: KeyRing
[19:37:10] <bjs> u4t: heh that's an ADT but I get your point
[19:37:11] <SixxK> how can I avoid that?
[19:37:12] <mefistofeles> xD
[19:37:13] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:13] <Tuju> i've changed them to iterate over dict without calling keys()
[19:37:17] <Wooble> Tuju: been years since I needed to use SOAP, but at the time suds was badly unmaintained and I just did manual stuff with requests + lxml because it was less terrible.  YMMV.
[19:37:24] <bjs> Tuju: changed "them" ?
[19:37:38] <Tuju> for k in dict: .....
[19:37:48] *** Quits: truth (~truth@user/truth) (Remote host closed the connection)
[19:37:48] <bjs> Tuju: you mean instead of that `param_name` line?
[19:38:02] <Tuju> nope, it's suds, i can't touch that.
[19:38:30] <u4t> yah, dict.__iter__() and dict.keys() both resolve to the same datapoints, but with different structures
[19:38:38] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 252 seconds)
[19:38:49] *** Joins: tortal (~tortal@user/tortal)
[19:38:53] *** Joins: truth (~truth@user/truth)
[19:38:58] <Wooble> [the best part was when there were like 4 different pypi packages, each of which fixed a different set of bugs.]
[19:39:14] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[19:39:18] <raxor2k> bjs: i have still not figured it out
[19:39:18] <bjs> Tuju: did you just not want to call .keys()?  It should be the same as just iterating directly
[19:39:22] <bjs> raxor2k: figured what out?
[19:39:26] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Client Quit)
[19:39:26] <raxor2k> im on verge of giving it all up and outsourcing the task
[19:39:37] <u4t> at least we don't still have iterkeys() from python2 :P
[19:39:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:39:49] <Wooble> u4t: except we do, it just got renamed to .keys :P
[19:40:08] <grym> u4t: have we talked about how `for foo in mydict` should be a syntax error yet
[19:40:23] <Tuju> bjs: not sure about that keys but it's so high-flying coded that hard to understand where it goes wrong and fails
[19:40:25] <grym> (i stan the explicit .items(), none of this implicit .keys() stuff!)
[19:40:28] <u4t> Wooble: yah i know
[19:40:32] *** Joins: txtsd (~txtsd@user/txtsd)
[19:40:50] <Wooble> grym: surely a TypeError; no way to know at compile time that's a dict.
[19:40:57] <u4t> grym: yeah i definitely see the argument
[19:41:05] <grym> Wooble: sure, i'd be fine with that
[19:41:13] <u4t> also what Wooble said
[19:41:22] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Ping timeout: 245 seconds)
[19:41:23] <bjs> raxor2k: well learning to program is hard and takes a long time,  and there's a good reason people hire professionals that know how to do it when they can't
[19:41:28] <grym> look, i've had merely one cup of both coffee and tea today
[19:41:34] <grym> i can't be expected to type properly :D
[19:41:48] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:42:03] <raxor2k> bjs: i have burned enough brain cells on this
[19:42:05] <tortal> grym: one cup containing both?
[19:42:12] <raxor2k> i dont want to learn anything more about dicts
[19:42:14] <tortal> then for sure not
[19:42:16] <grym> tortal: no, thankfully
[19:42:35] <raxor2k> if im gonna burn that much braincells, than atleast i want to spend it at something big such as deeplearning or AI, not some useless dicts
[19:42:37] <tortal> awesome, was worried for you a moment there
[19:42:45] <grym> tortal: or i should say, in serial not parallel; this async caffiene stuff sound scary
[19:42:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:43:00] <u4t> so yeah, you'd have to take __iter__ out of collections.abc.Mapping for that too
[19:43:02] <Wooble> raxor2k: dicts are far from useless. the entire freakin' runtime is built out of them.
[19:43:15] <tortal> oh yes, async caffeine might end up with a race condition.. or dead lock
[19:43:31] <u4t> which would imply that a Mapping is not a Collection
[19:44:08] *** Quits: sliwkr (~kks@193.32.127.216) (Ping timeout: 252 seconds)
[19:44:28] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[19:44:29] <u4t> so that would be confusing, making a dict not a Collection but essentially a pair of Collections
[19:44:29] <tortal> aha, "i dont wwant to learn more about dicts".. then you must stop learning pythonn
[19:44:43] <bjs> raxor2k: again this really isn't anything about dicts;  it's just fairly standard programming patterns
[19:44:44] <tortal> raxor2k
[19:44:56] <bjs> loop over this, make a new thing, do some existence checks before you try access it etc
[19:46:10] *** Joins: sliwkr (~kks@c140-223.icpnet.pl)
[19:46:37] *** Quits: The_Jag (~The_Jag@host-80-180-182-58.retail.telecomitalia.it) (Quit: The_Jag)
[19:46:47] <raxor2k> thanks for suggestions
[19:46:53] <raxor2k> reddit/stackoverflow next -->
[19:47:04] * u4t glares at raxor2k
[19:47:16] * tortal glares at raxor2k 
[19:47:26] <u4t> raxor2k: what's the problem you're having again? maybe a new set of eyes on it will help
[19:47:54] <tortal> be careful, he doesn't want to burn braincells on learning more dict-stuff
[19:48:06] <bjs> raxor2k: huh?
[19:48:10] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[19:49:01] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[19:49:10] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78)
[19:50:00] <u4t> shouldn't be having this much trouble with dicts really
[19:50:12] *** dcaro is now known as dcaro_away
[19:51:11] <bjs> it's not really the dicts, I think raxor2k is just trying to do too much at once.  They know how each of the bits works it's just trying to put them all together at once.  It takes a long time to learn how to do that from scratch.
[19:51:31] <Tuju> the code where it fails is test: if '__inject' in set():  raise error      that __inject used to be argument in python2.
[19:51:49] <Tuju> i never used sets in python :-7
[19:51:52] <u4t> wat
[19:52:07] <Tuju> ineed.
[19:52:16] *** Joins: qk1z (~qk1z@193-82-233-119.tpgi.com.au)
[19:52:19] <u4t> set()? as in an empty set?
[19:52:41] <Wooble> if "__inject" is in the empty set, definitely raise an error and panic. :)
[19:52:42] *** Quits: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[19:52:43] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Read error: Connection reset by peer)
[19:52:50] <Tuju> print(param_name, self.__params_with_arguments)       givess     __inject set()
[19:52:51] <u4t> yah
[19:53:13] <u4t> Tuju: repr() may help you
[19:53:45] <Tuju> if param_name in self.__params_with_arguments:              is the test, first has '__inject' and iterable has 'set()'   - not sure what that is.
[19:53:52] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[19:53:53] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[19:54:18] <Tuju> and that fails, we got traceback.
[19:54:28] <u4t> you could think of set() as dict with keys but no values
[19:54:36] <Tuju> okay.
[19:54:52] <Tuju> sounds like a..... list.
[19:54:56] <bjs> Tuju: it's basically a list
[19:54:59] <bjs> but a bit fancy
[19:55:04] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 252 seconds)
[19:55:10] <bjs> if it's empty the difference deosn't really matter :)
[19:55:21] <u4t> yah, except the same value can't appear more than once
[19:55:36] <Tuju> not sure how it's literal would come out from print(), but 'set()' is what i get.
[19:55:38] <grym> a nonzero part of "experience" and "instincts" and "intuition" derives from "oh, god, no no no i know where this is going, this won't work, it was horrible last time!"
[19:55:56] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:56:07] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[19:56:10] <Tuju> but that's the reason why that fails.
[19:56:11] <bjs> Tuju: yes, that's the empty set
[19:56:43] <Tuju> there is some init code:      self.__params_with_arguments = set()
[19:56:53] *** Quits: vd97 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[19:57:06] <u4t> yah, that's how you create an empty set object
[19:57:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:57:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:57:24] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:57:36] <u4t> help(set)
[19:58:23] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 244 seconds)
[19:59:08] <bjs> Tuju: what exactly are you doing and what error do you get?
[19:59:14] <bjs> you mentioned something about this suds library
[19:59:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:59:28] <Tuju> https://stackoverflow.com/questions/69046728/suds-python3-typeerror-xxxxx-got-an-unexpected-keyword-argument-inject
[19:59:39] *** Joins: gggp (~textual@60.10.194.45)
[19:59:49] <Tuju> i get that responseXML from eInvoice operator that has received my invoice xml.
[19:59:57] <u4t> wat
[20:00:18] <Tuju> and response is xml, then i run it second time with this __inject to deserialize it into python object.
[20:00:58] <Tuju> maybe it should be bytes again or something.
[20:00:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[20:01:15] <bjs> Tuju: sounds like from the docs that you use suds to connect to some SOAP-y webserver and it then requests the set of methods and their arguments
[20:01:34] <bjs> Tuju: surely you should be looking at the client endpoint to ask why it doesn't have this argument not the suds code?  Unless you think suds itself has a bug?
[20:01:39] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:02:02] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[20:02:06] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 250 seconds)
[20:02:22] <u4t> self.__check_for_extra_arguments(args_required, args_allowed)   << without seeing the code, i'd start looking here
[20:02:41] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:02:55] <u4t> cos that function name suggests "__inject" is not in args_allowed
[20:02:57] <tortal> i feel the important thing about sets are that elements are unique. and that set is immensively slower because of that
[20:02:57] *** Joins: fikran (~fikran@user/fikran)
[20:03:22] <Tuju> u4t: and those arguments are 0, 3  - 0 required, 3 allowed
[20:03:26] <bjs> tortal: well it's slower for some operations and not others
[20:03:30] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:03:30] <u4t> :|
[20:03:37] <raxor2k> bjs: i still dont get why you put the two dicts in a function
[20:03:41] <raxor2k> parameter
[20:04:01] <bjs> raxor2k: for which function?
[20:04:01] <u4t> i still don't know what problem raxor2k is trying to solve (:
[20:04:05] *** Joins: theprophet (~theprophe@85.114.228.184)
[20:04:15] <bjs> Tuju: looking at https://suds-py3.readthedocs.io/en/latest/ its only mention of __inject is for some special test() method
[20:04:44] <gitesh> again i have this question, when we are creating instances of a class , are we copying all the methods for every instance?
[20:04:52] <gitesh> that will take a lot of memory
[20:04:53] <raxor2k> bjs : https://bpa.st/AMSQ
[20:04:55] <tortal> bjs: i mean, i've used set. i like that gurantee. i just mean that if you can get away without using it - then maybe one should
[20:04:59] <bjs> gitesh: no,  Python won't actually copy it
[20:05:07] *** Parts: SixxK (~SixxK@2a01:e34:ecb3:d620:408c:ff4d:4b:f96f) (WeeChat 2.3)
[20:05:14] <bjs> raxor2k: the merge_into function?
[20:05:31] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 252 seconds)
[20:05:41] <bjs> tortal: I mean sets are good,  I'm not really sure you'd use them in the same place you'd use a list.  If i had anything that "looked" like a set, I'd use set().
[20:05:42] <u4t> gitesh: class defintion happens once, and instances work by passing themselves into the instance methods
[20:05:42] <Tuju> this is the failing line https://github.com/suds-community/suds/blob/master/suds/argparser.py#L165
[20:06:11] <u4t> bjs: sets use hashes, right?
[20:06:14] <bjs> u4t: yes.
[20:06:16] <raxor2k> bjs: yes
[20:06:21] <u4t> good (:
[20:06:29] <bjs> raxor2k: well,  it's merging the two together.
[20:06:45] <tortal> anyone using hexchat? im new to it . used mirc all my life (oh yeh, WINDOWS I AM muhaha) - anyway, what is those green stuff in the bottom-right corner
[20:06:55] <bjs> raxor2k: (or rather I chose to do it so that merge_into(A,B) merges B "into" A,  there are *so many* choices here)
[20:07:02] <u4t> Tuju: ok so look at the context there
[20:07:13] <Tuju> i printed those two in if-test and they were __inject and set()
[20:07:22] <bjs> Tuju: are you saying that the python2 suds library *did* allow you to call myMethod with an __inject argument?
[20:07:25] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:07:32] <Tuju> bjs: yes
[20:07:32] <raxor2k> bjs: ok so what your`e basically saying that i need 2 different dicts first ?
[20:07:34] <bjs> but the python3 suds library connected to the same client endpoint does not?
[20:07:46] <bjs> raxor2k: what,  well,  yes that's uh,  well yes duh
[20:07:48] <tortal> what's suds
[20:07:58] <raxor2k> bjs: and you couldnt just say this from the beginning?
[20:08:00] <Tuju> __inject is like dry-running that method wiht xml as and argument, like it came from the network.
[20:08:11] <bjs> raxor2k: I don't know what you mean? I've been saying all along you needed to make a new dict
[20:08:15] <bjs> you kept refusing to listen
[20:08:18] <tortal> oh soap client
[20:08:31] <u4t> Tuju: that if statement is not what's causing your error. the error fires on line 169, which is outside the if statement
[20:08:56] <Tuju> u4t: yes, eventually.
[20:09:00] <u4t> Tuju: the actual problem appears to be line 163. the code expects self.__kwargs to be empty
[20:09:03] <Tuju> yes
[20:09:11] <bjs> raxor2k: this code does exactly what I've been saying all along: it makes a dict-per-ID, then it goes over each list of dicts to merge into it and if there isn't a dict for that ID created it makes one, and then it "merges" the dict into that per-ID-dict
[20:09:11] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[20:09:28] * tortal glares at people trying to help raxor-guy
[20:09:39] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:09:42] <Tuju> responseXml = self.client.service.sendSaleInvoice( file=iRaw, regNo=senderRegNum, Attachments=aRaw )    is my line how i get that xml
[20:09:43] <u4t> Tuju: so stop looking at param_name and __params_with_arguments. they're not relevant. you need to look at __kwargs
[20:10:00] <Tuju> maybe i should give those arguments and the __inject as well
[20:10:24] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:10:26] <Tuju> let's try that one
[20:10:28] <bjs> Tuju: hmm,  maybe suds3 just doesn't support __inject for arbitrary methods?  Or maybe the docs are confused and not giving all the cases you can use __inject or maybe your porting is broken in other ways and you're missing some other setup/arguments
[20:10:57] <bjs> It's hard to tell without seeing the python2 and python3 code side-by-side, the error and some documentation for both versions of the library (the Python 2 version and the Python 3 version you're using)
[20:11:01] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:c1e2:e9c:5ff4:bcb9) (Ping timeout: 252 seconds)
[20:11:16] <u4t> __kwargs is set on line 245 and nowhere else
[20:11:41] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:deba:ad76:cf37:e674)
[20:11:44] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[20:11:55] *** Quits: sliwkr (~kks@c140-223.icpnet.pl) (Quit: leaving)
[20:11:55] <Tuju> nope, it didn't help.
[20:12:01] *** Joins: jess (~jess@libera/staff/jess)
[20:12:06] <u4t> of course not
[20:12:26] <u4t> 206, __get_param_value()
[20:12:28] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:12:38] <u4t> that's the method which pops the values of __kwargs
[20:12:40] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[20:12:51] <Tuju> yes
[20:12:51] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[20:13:05] <bjs> Tuju: oooooooh, you're doing this inside a class aren't you
[20:13:07] <u4t> so work out why __kwargs is not getting cleared there
[20:13:18] <Tuju> bjs:  yes
[20:13:35] <Tuju> I have nothing else than classes :)
[20:13:59] <u4t> honestly this code looks like a mess
[20:14:19] <gitesh> u4t: ok
[20:14:27] <u4t> def __call__(self, args, kwargs, extra_parameter_errors)
[20:15:12] <u4t> it expects kwargs to be passed in as a dict
[20:15:20] *** Joins: kai3 (~kai@x50d24799.cust.hiper.dk)
[20:15:28] <u4t> not as and exploded dict (which would be **kwargs)
[20:15:30] <Tuju> when i ran it with original arguments and inject,   that if test and set() looked like this:    __inject {Attachments, regNo, file}
[20:15:34] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[20:15:48] <u4t> Tuju: you're still looking in the wrong place
[20:15:50] <Tuju> hmmm... but the kwargs was important
[20:16:01] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:16:10] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 240 seconds)
[20:16:49] <u4t> where's your __inject line again ...
[20:17:34] *** Quits: vats (~vats@180.149.226.8) (Ping timeout: 256 seconds)
[20:18:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[20:18:10] *** Quits: davor (~davor@user/davor) (Ping timeout: 252 seconds)
[20:18:36] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78)
[20:18:43] <Tuju> well, that self.__kwargs is not empty when i run it with only __inject:    KWARGS {'__inject': {'reply': b'<?xml version=\\'1.0\\' encoding=\\'utf-8\\'?><soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.o
[20:18:49] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[20:18:57] *** Joins: davor (~davor@user/davor)
[20:19:13] <u4t> self.client.service.myMethod(__inject={ 'reply': responseXml } )
[20:19:31] <bjs> Tuju: is the method call really the *only* place you're supposed to mention __inject?  Are you also supposed to mention it when you make the Client?
[20:19:47] <Tuju> no, it's the only place.
[20:19:49] <u4t> what does def myMethod look like?
[20:19:49] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:deba:ad76:cf37:e674) (Ping timeout: 252 seconds)
[20:20:09] <Tuju> good question, it resides in SOAP serverside.
[20:20:29] <bjs> Tuju: it's kind of weird https://suds-py3.readthedocs.io/en/latest/#message-injection-injection-diagnostics-testing because it implies it should work
[20:21:07] *** Quits: lalitmee (~lalitmee@180.94.33.98) (Ping timeout: 244 seconds)
[20:21:15] <bjs> but those docs are ... weirdly out of sync with the version of Python it claims (as you remarked earlier)
[20:21:35] <u4t> line 216 in that paste
[20:21:40] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78) (Client Quit)
[20:21:41] *** Joins: Adoi (~Adoi@user/adoi)
[20:22:20] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78)
[20:23:06] <Tuju> i need to eat, food .arrived()
[20:23:13] <u4t> good
[20:23:22] *** Joins: pycode (~pycode@2001:b07:5d28:551:952d:589f:ef36:b32)
[20:23:55] *** Joins: Adois (~Adoi@user/adoi)
[20:24:02] <u4t> i stand by my claim that this code is a mess
[20:24:31] <raxor2k> bjs: maybe i misunderstood something, but this is not working(what a surprise..) :  https://bpa.st/BN5Q
[20:24:37] <raxor2k> i tried following ur example
[20:24:39] <pycode> hello i have a big dictionary with this format: https://bpa.st/WRQQ how can i get a SET (i do not need duplicates) of all the first position of that tuple inside 'open' and 'close'? so in this case i should get: set('MovingAverage', 'Sold')
[20:25:01] <raxor2k> 45 579 brain cells burned out so far :)
[20:25:13] <bjs> raxor2k: why did you turn everything into instance attributes rather than leaving them as parameters anyway?
[20:25:22] <bjs> it's kind of weird you program without local variables
[20:26:04] <raxor2k> bjs: hwhy not ?
[20:26:12] <bjs> raxor2k: because (A) it's kind of weird and (B) you did it wrong
[20:26:16] *** Joins: Naan (~Naan@user/naan)
[20:26:23] <bjs> raxor2k: this line `if "primary_muscle_points" in self.new_groups:` is clearly wrong,  it's just checking the wrong object
[20:26:26] <bjs> the wrong dict
[20:26:27] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[20:26:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[20:27:02] <u4t> should the merge_both() really be running inside a for loop?
[20:27:07] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:27:10] *** Joins: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk)
[20:27:13] <bjs> ...yes
[20:27:21] <u4t> ok my bad
[20:27:24] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Killed (NickServ (GHOST command used by JimmyRustles2!Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)))
[20:28:00] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[20:28:37] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[20:28:55] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:28:58] <u4t> pycode: how good are you with generators?
[20:29:06] <raxor2k> bjs : ok :)
[20:29:17] <raxor2k> then i screw this part and try other examples
[20:29:29] *** Joins: lethu (~lethu@user/lethu)
[20:29:34] <bjs> raxor2k: I *really really* suggest that you try things out in blank files without classes and just play around
[20:29:48] <bjs> with literal list examples you write directly into the file, like I did last time
[20:29:51] <raxor2k> bjs : i have done it 1000 times
[20:29:55] <raxor2k> 90 hours
[20:30:05] <bjs> raxor2k: okay but you seem to have decided arbitrarily to stop now?
[20:30:10] <bjs> but you've clearly not finished learning
[20:30:14] <raxor2k> my brain has decided to stop learning dicts
[20:30:18] <raxor2k> i dont need it
[20:30:27] <bjs> raxor2k: again this really isn't anything to do with dicts
[20:30:32] <pycode> u4t, i am learning... how should i do ?
[20:30:46] <u4t> ooh ok
[20:30:55] <bjs> raxor2k: it's just standard programming patterns:  looping and making new objects and checking existence before access etc
[20:31:02] <raxor2k> bjs: nope its not
[20:31:33] <bjs> raxor2k: it really is,  you can't just arbitrarily decide that after 90 hours you must be finished learning and can just stop and everything you don't understand yet is just dumb/stupid/whatever and you can ignore it
[20:31:44] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:31:48] <bjs> It's going to take a *lot* longer than just 90 hours to learn this stuff
[20:31:55] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[20:32:03] *** Joins: n1ceAF (~Mark_Pine@84.237.231.8)
[20:32:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[20:32:46] *** Quits: n1ceAF (~Mark_Pine@84.237.231.8) (Client Quit)
[20:33:01] <raxor2k> for AI, yes i can accept it takes more way more than 90 other
[20:33:07] <raxor2k> but for some usess dict libraries? nope
[20:33:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:33:32] <bjs> this really isn't anything to do with dicts, you're not even really using the features of dicts here. It's just ... idk, looping and if statements
[20:33:37] *** Joins: kosh (~kosh@user/kosh)
[20:33:52] <bjs> raxor2k: just keep practicing and learning, it takes a long time but you'll get there eventually.
[20:34:04] *** Parts: keir (~keir@user/keir) ()
[20:35:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[20:35:44] <u4t> pycode: https://bpa.st/6ZIQ  << this is one way to do it
[20:35:57] <pycode> thanks i see
[20:36:00] <bjs> raxor2k: and 90 hours is what? like 2 weeks of full-time work? I wouldn't even expect a professional to pick up something new in only 2 weeks.  And you're a beginner and are learning things for the first time,  it's going to take a lot longer than that.
[20:36:03] <jinsun> pycode: `{y[0] for x in rules.values() for y in x}`
[20:36:11] *** Joins: Tempesta (Tempesta@183.98.39.112)
[20:36:12] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[20:36:12] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:36:12] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:36:16] <u4t> jinsun: yah i was gonna suggest that (:
[20:36:20] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:36:38] *** Joins: han-solo (~hanish@user/han-solo)
[20:36:40] <pycode> dict/list comprehesion ?
[20:36:51] <u4t> pycode: yah, that one's a set comprehension
[20:36:59] <pycode> ok
[20:37:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:37:07] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:37:26] <pycode> awesome
[20:37:46] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:37:46] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:37:56] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[20:37:58] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[20:38:08] <u4t> generator was maybe not the correct word for me to use
[20:38:10] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 244 seconds)
[20:38:11] <u4t> i am tired
[20:38:27] <u4t> and still wondering how raxor2k is so confused by dicts
[20:38:42] <pycode> thank you very much
[20:38:54] <u4t> another satisfied customer
[20:38:57] *** Joins: Tempesta (Tempesta@183.98.39.112)
[20:38:57] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[20:38:57] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:38:57] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[20:39:00] *** Joins: bidouille (~user_name@trois.potager.org)
[20:39:40] *** Joins: Tempesta (Tempesta@user/tempesta)
[20:39:45] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[20:39:47] <pycode> :D
[20:39:49] <pycode> ahah
[20:39:53] <pycode> +1
[20:40:08] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[20:40:47] *** Quits: derpadmin (~derpadmin@cloudbase2.200013.net) (Ping timeout: 250 seconds)
[20:41:40] <grym> u4t: shortcuts usually turn out to be longcuts
[20:41:50] <bjs> u4t: raxor2k is a beginner programmer and just perhaps has some optimistic estimates for how much work and time things take
[20:42:02] <u4t> yeah
[20:42:08] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:42:09] <u4t> to both of you guys (:
[20:42:10] *** Quits: ogata (~textual@240d:1a:ade:8000:4c22:3acd:3c8e:b197) (Quit: Textual IRC Client: www.textualapp.com)
[20:42:19] *** Quits: twobitsprite (~twobitspr@195.181.171.234) (Ping timeout: 252 seconds)
[20:42:35] <grym> i've done my time staring at mystery code, deeply hating it and wanting it to be just slightly different
[20:42:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[20:42:51] <grym> (i just did that in matlab, which i think makes it doubleplus ungood)
[20:43:09] <u4t> hah yeah
[20:43:25] <u4t> it's been a long time for me
[20:43:43] <u4t> i'm just not understanding what raxor2k is trying to do though
[20:44:12] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[20:44:16] *** Joins: twobitsprite (~twobitspr@66.115.166.148)
[20:44:20] <Pilate> learning pains
[20:44:30] <u4t> indeed
[20:44:45] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[20:44:52] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[20:44:59] <u4t> troubleshooting is the most important skill to learn with programming
[20:45:16] <u4t> learn how to break it down into smaller components, follow the chain of where the code goes
[20:46:16] <u4t> one program i wrote for a uni assignment, i had a comment for one line: "i have no idea why this is needed but it doesn't work without it"
[20:46:28] *** Joins: Adoi (~Adoi@user/adoi)
[20:47:46] <u4t> spent hours trying to work out why this int was one higher than expected at that point in the code. every time i stepped through it, from what i could tell, it should have been the low value
[20:48:10] *** Joins: netsan (~netsan@user/netsan)
[20:48:21] <u4t> fun times
[20:49:13] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[20:49:31] *** Quits: tga (~tga@user/tga) (Ping timeout: 252 seconds)
[20:51:21] <pycode> ahahaha
[20:51:24] <pycode> :DD
[20:51:40] *** Joins: Adois (~Adoi@user/adoi)
[20:51:56] <Staunch> u4t: incredibly relatable
[20:52:43] <Staunch> my biggest one was staring at a condition, "if not something," for actually 2 hours, tracking through the code, thinking "it's doing the *opposite* of what i want! Why?!?!"
[20:52:48] <Staunch> the answer was the condition was supposed to be "if something"
[20:53:37] <Staunch> =_=
[20:54:28] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[20:55:03] *** Joins: theprophet (~theprophe@85.114.228.184)
[20:55:15] <grym> Staunch: i really enjoy those times when i find myself testing `if foo` instead of `if foo()`
[20:55:21] <grym> "why is it always true?!!"
[20:55:23] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[20:55:25] <gitesh> How can I invoke object's methods if they are not in global frame?
[20:55:35] <grym> gitesh: thatobject.itsmethod()
[20:56:05] <gitesh> Yes but that object is passed to that method
[20:56:13] <gitesh> So how is it first invoke
[20:56:22] <gitesh> How does python gets to that method
[20:57:06] <u4t> i've fixed a couple of really obscure bugs in wine
[20:57:10] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 240 seconds)
[20:57:20] <grym> gitesh: itsmethod knows what thatobject is; that's what `self` does.
[20:57:41] <gitesh> Ok ok
[20:57:49] <u4t> bug: "winecfg isn't saving this value to the registry". fix was actually several layers deep into the virtual device mapper
[20:58:42] <Staunch> grym: ugh yes
[20:58:52] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 245 seconds)
[20:59:24] <Staunch> grym: i've introduced a new layer of that by my own hubris. I've got a library that allows you to write test steps like plain English, so i've accidentally misused code that i myself have written because it makes sense in English.
[20:59:24] *** Quits: Norore (~weechat@balder.ens.fr) (Quit: WeeChat 1.9.1)
[20:59:55] <grym> Staunch: Perlisism 114: Within a computer natural language is unnatural.
[21:00:21] <Staunch> grym: haha, very wise words
[21:00:28] <grym> he was a wise man
[21:01:12] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 256 seconds)
[21:01:48] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[21:02:07] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[21:02:25] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[21:03:07] *** Quits: hsv (~unknown@user/hsv) (Ping timeout: 240 seconds)
[21:03:12] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[21:04:40] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:08:10] *** Joins: junktext (~junktext@77.247.181.218)
[21:09:19] *** Joins: hsv (~unknown@user/hsv)
[21:10:31] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:14:20] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[21:14:44] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[21:15:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[21:15:54] *** Joins: mokulus (~mokulus@user/mokulus)
[21:18:26] *** Joins: han-solo (~hanish@user/han-solo)
[21:18:59] *** Quits: qk1z (~qk1z@193-82-233-119.tpgi.com.au) (Ping timeout: 244 seconds)
[21:20:19] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 252 seconds)
[21:22:03] *** Joins: fdan (~fdan@192.146.154.3)
[21:24:19] *** Joins: lalitmee__ (~lalitmee@180.94.33.198)
[21:24:24] <philipp64|work> Is this the right channel to discuss ssl.py?
[21:25:01] <pycode> i think i am using the class badly.... this one for example: https://bpa.st/UC5Q because i see a class like a container, that only some information but those one are just for reading, i will get those information to use them outside the scope of that class
[21:25:08] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[21:25:10] <pycode> so how can i change it? is the class correct here?
[21:25:27] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[21:25:28] <gitesh> So if I have a class Person: pass, gitesh = Person() how is the latter evaluated
[21:25:33] <pycode> i basically need to store some information (sometime with class) that i can read and use outside
[21:25:39] <bjs> gitesh: what do you mean *how* is it evaluated?
[21:25:44] <neilthereildeil> hey guys. why is the code inside
[21:25:54] <bjs> gitesh: Python goes and makes a new object of type Person and returns it for you
[21:26:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:26:05] <neilthereildeil> if _name__ == "__main__":
[21:26:10] <neilthereildeil> not executing when i run a pythoing file?
[21:26:13] <neilthereildeil> python*
[21:26:20] <pycode> for example line 4 https://bpa.st/UC5Q#1L4 there i set the class that i will need to initialize etc etc...ok it is quite explicative but maybe a "class" is wrong
[21:26:22] <gitesh> bjs: yes right
[21:26:24] *** Joins: nomic (~nomic@185.192.69.188)
[21:26:26] <pycode> what do you think?
[21:26:28] *** Joins: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net)
[21:26:30] <bjs> neilthereildeil: executing how?
[21:26:40] <neilthereildeil> i call the file from the cmdline with "python myFile.py"
[21:26:45] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:26:47] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 245 seconds)
[21:27:00] <bjs> neilthereildeil: can you share the file or something?  how do you know it's not being executed?
[21:27:02] <gitesh> bjs: let's say I have a method there, then how gitesh.changeColor() is evaluated is my real question?
[21:27:08] <neilthereildeil> my print doesnt work
[21:27:09] <bjs> neilthereildeil: is the line you pasted here *exactly* what you actually ran?
[21:27:13] <bjs> neilthereildeil: show us
[21:27:25] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[21:27:40] <bjs> gitesh: well,  python looks up the "changeColor" method on the `gitesh` object and then calls it
[21:27:52] <neilthereildeil> https://pasteboard.co/KiUVkCz.png
[21:28:11] <bjs> neilthereildeil: what happens when you run it?
[21:28:18] <gitesh> bjs: is that method in gitesh object?
[21:28:28] <philipp64|work> More than a little surprised that ssl doesn’t support TLS 1.3 yet… it was standardized in July 2018 at IETF 102…
[21:28:46] <grym> neilthereildeil: that looks like a NameError to me...
[21:28:51] <bjs> gitesh: well Python won't actually store it on the gitesh object, because that would waste space but yes
[21:29:10] <neilthereildeil> https://pasteboard.co/KiUVQRG.png
[21:29:18] *** Joins: asgas35 (~asgas@c-24-30-27-91.hsd1.ga.comcast.net)
[21:29:20] <neilthereildeil> it reutrn immediately when i run the script
[21:29:21] <gitesh> bjs: okay
[21:29:36] <neilthereildeil> why isnt pythong printing errors?
[21:29:40] <neilthereildeil> pythin*
[21:29:43] <bjs> neilthereildeil: can you https://bpaste.net/+python the actual whole agent.py file?
[21:29:50] <bjs> neilthereildeil: are you sure you're running the file you showed us? etc
[21:29:55] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[21:30:04] <neilthereildeil> i cannot copy
[21:30:06] <neilthereildeil> the text
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:10] <bjs> neilthereildeil: why?
[21:30:12] <neilthereildeil> lemme try to make a minimal example
[21:30:17] <neilthereildeil> its over a VNC session
[21:30:46] *** Quits: lalitmee__ (~lalitmee@180.94.33.198) (Ping timeout: 252 seconds)
[21:30:57] <bjs> neilthereildeil: are you sure you're editing the right file?  it's a common bug to open the file on your computer but then try run the program on the other computer (or vice-versa)
[21:31:09] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[21:31:19] *** Quits: tortal (~tortal@user/tortal) (Ping timeout: 252 seconds)
[21:31:20] <neilthereildeil> the file is open and being executed on a remote computer
[21:31:50] *** Parts: asgas35 (~asgas@c-24-30-27-91.hsd1.ga.comcast.net) ()
[21:32:23] <bjs> neilthereildeil: okay but,  maybe the file you showed me isn't the file you actually ran
[21:32:25] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[21:32:29] <bjs> or maybe there's more to the file you didn't show
[21:32:34] <neilthereildeil> hmm ok in my minimal example, that code works as expected
[21:32:48] <neilthereildeil> yea its a much bigger file where i am having this issue
[21:32:57] <neilthereildeil> i cant copy all of it cuz i have to scroll
[21:33:03] <neilthereildeil> in a screenshot
[21:33:18] <neilthereildeil> what are some reasons why that main check wouldnt get executed and python will silentely exit?
[21:33:27] *** Quits: asgas (~asgas@c-24-30-27-91.hsd1.ga.comcast.net) (Ping timeout: 256 seconds)
[21:33:39] <bjs> neilthereildeil: the main one would be not running the file you think you are,  or silently exiting the file before you get to the bit you actually showed :)
[21:34:01] *** Joins: Betal (~Betal@user/betal)
[21:34:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:35:28] <han-solo> cat <file>.py | nc termbin.com 9999
[21:35:33] <han-solo> if you have `nc` :)
[21:36:15] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[21:36:54] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[21:36:59] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[21:37:02] *** Joins: node1 (~node1@user/node1)
[21:37:04] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 244 seconds)
[21:37:07] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:37:12] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:e913:ebf0:5b4f:bc6f) (Ping timeout: 245 seconds)
[21:37:16] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[21:37:30] <jinsun> philipp64|work: TLS 1.3 support depends on the version of openssl in your system I think https://docs.python.org/3/library/ssl.html#ssl.HAS_TLSv1_3
[21:37:34] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[21:37:54] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[21:38:11] <Wooble> neilthereildeil: python -m trace yourfile.py ?
[21:38:38] <pycode> anyone?
[21:38:42] <Wooble> (err... trace --trace I guess)
[21:39:05] *** Quits: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[21:39:20] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:41:01] <Omega037> So, we are looking to hire a junior data analyst/BI/viz person, and I am going through the initial list of resumes
[21:41:13] <Omega037> What does it say to you if they keep listing the Python version in their resume
[21:41:15] <bjs> pycode: your question was over too many lines, it kinda got split up and was hard to follow
[21:41:21] <Omega037> Experience in Python 3.8
[21:41:31] <node1> Hello, what's wrong into this code? https://pastebin.com/raw/XqrrnQt2
[21:41:39] <Omega037> And each use of Python in their previous experience and such uses "Python 3.8"
[21:41:41] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[21:41:54] <pycode> bjs, i just wonder if i can use a class that way or just a dictionary where i can "declare" those things
[21:42:02] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:42:09] <bjs> pycode: if you mean, can you reference the class itself inside the class body? no.
[21:42:27] <Wooble> Omega037: "please don't ask me to fix legacy py2 code"?
[21:42:36] <bjs> pycode: the class is constructed *after* the class body is created.  If you want to do something like this you'll have to be clever or re-design
[21:42:44] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:42:49] <bjs> (clever like use a placeholder value and then after the class is made go back over and replace the placeholder for example)
[21:42:49] <Omega037> you think so, Wooble
[21:42:51] <pycode> bjs, no i mean if i create a class where i only need to "read" something without using its instance
[21:42:52] <node1> I'm using python3, and as per documentation https://docs.python.org/3/library/unittest.html it's valid to use assertEqual
[21:43:12] <han-solo> node1: `assertEqual` is a thing from `unittest.TestCase`, me thinks
[21:43:13] <bjs> pycode: then i totally misunderstood your question and you should probably try ask it again from the beginning (but in one line)
[21:43:16] <Omega037> I take it as "I am looking to get hired so I just copypasta-ed skills"
[21:43:17] <han-solo> https://docs.python.org/3/library/unittest.html#basic-example
[21:43:27] <node1> okay
[21:43:28] <Omega037> Like I get maybe saying Python3
[21:43:42] <pycode> ok
[21:43:43] <Omega037> But to keep specifying Python 3.8 as the skill seems off
[21:43:49] <han-solo> node1: it's not a builtin
[21:44:06] *** Joins: cloudbender17 (~cloudbend@user/cloudbender)
[21:44:15] <hodapp> would probably have to talk to the candidate to see if they're completely phony or not
[21:44:15] <node1> ok
[21:44:26] <cloudbender17> I am beginning to realize that python has much going on beneath surface level  code
[21:44:40] <jinsun> Omega037: that means don't even ask them to work on 3.7, 3.8 (or higher hopefully) only
[21:44:47] *** Quits: Aleks (~aleks@user/aleks) (Ping timeout: 256 seconds)
[21:44:53] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:7435:d465:48ce:7317)
[21:44:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:45:19] <Wooble> maybe they think 3.9 garbage and everything before 3.8 is practically ancient.
[21:45:44] <cloudbender17> I could spend a year mastering some of the deeper concepts
[21:45:51] <Omega037> I guess I am taking it as a sign they don't know Python well
[21:45:52] <grym> Omega037: i think mine says "3.6+"
[21:45:57] <grym> and i know python quite well
[21:46:40] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[21:46:46] <bjs> cloudbender17: or much longer :)
[21:46:54] <Omega037> ok, maybe it is just in my head
[21:46:59] <jinsun> 3.7+ for me (I go with numpy schedule)
[21:47:07] <Wooble> cloudbender17: or you could spend that year writing code and probably be more productive. :)
[21:47:23] <grym> jinsun: i'll have a one-character diff to my cv in about 3 months
[21:47:32] <Omega037> I guess I am pretty used to a lot of lying on these resumes
[21:47:33] *** Quits: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk) (Quit: Going offline, see ya! (www.adiirc.com))
[21:47:33] <cloudbender17> it's not the code which is the barrier, it's the documentation sources
[21:47:43] <Omega037> This is basically coming from body shops
[21:48:02] *** Quits: pycode (~pycode@2001:b07:5d28:551:952d:589f:ef36:b32) (Ping timeout: 245 seconds)
[21:48:21] <Omega037> Low level contractors through one of those giant places like capgemini
[21:48:24] <Wooble> Omega037: "I can fix 2015 chevy trucks"? :)
[21:48:33] *** Joins: emika8 (~emika@185.207.249.5)
[21:48:51] <jinsun> well 3.8 is an actual released version, so cannot assume it as a lie I guess
[21:48:54] <grym> Wooble: if you bring your own air tools, you're hired
[21:48:57] *** Quits: emika (~emika@185.207.249.7) (Ping timeout: 244 seconds)
[21:48:57] *** emika8 is now known as emika
[21:49:19] <Omega037> I mean lying like "I'll just add a ton of stuff to the resume to get flagged in the system for tons of jobs"
[21:49:43] *** Quits: lucad111 (~lucad111@2a02:2e02:9991:900:e96a:7f6b:edd7:c4b7) (Quit: Leaving)
[21:49:46] <Omega037> Or "I once modified a single variable in a Python script" - > experience with Python
[21:50:10] *** Quits: Slimgin (~quassel@097-071-159-126.biz.spectrum.com) (Ping timeout: 240 seconds)
[21:50:21] <Wooble> I've got 2 lines of whitespace in cpython, should I be claiming to be a core developer? :)
[21:50:30] <han-solo> i mean, if they have provided info regarding their experience in python, other than the version, then it's pretty legit, no ?
[21:50:42] <han-solo> for a call...
[21:50:49] <cloudbender17> My resume (expericens/job history) is all over the map.
[21:50:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[21:50:58] *** Joins: darksun (~darksun@user/darksun)
[21:51:27] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:51:34] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78)
[21:51:45] <bjs> Wooble: youve got your very own contributor badge already,  so greedy
[21:52:19] <Omega037> Another hard one is a person who just finished their PhD, but in like Anthropological Biology or something
[21:52:35] <bjs> Omega037: why is that hard?
[21:52:38] <bjs> do you hate biologists?
[21:52:41] <Omega037> So they have tons of research experience and are likely smart, but this is for a skilled analyst/viz position
[21:52:51] <Omega037> Have they really done a lot of ETL in SQL
[21:53:23] <Omega037> My experience with PhD students outside of tech areas is that they do some minimal statistical analysis in SAS/Matlab/R
[21:53:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:53:37] *** Joins: ferz (~ferz@93-39-140-21.ip76.fastwebnet.it)
[21:53:56] <Macuser> Sooo what would be causing my Python script's output file to stop at 86400 lines
[21:54:10] *** Joins: bpluly (Lucy@82-69-31-48.dsl.in-addr.zen.co.uk)
[21:54:11] <supakeen> well, there's 86400 seconds in a day
[21:54:22] <Macuser> i know that
[21:54:23] <han-solo> haha
[21:54:23] <Macuser> lol
[21:54:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[21:54:33] <Macuser> i'm printing sat passes
[21:54:39] * supakeen plays x-files music
[21:54:44] <Macuser> trust me I been editing C code with that number for a while
[21:54:52] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:54:53] <grym> but, can you send an email further tha 500 miles
[21:55:16] <Omega037> hiring talent is really hard without a personal rec
[21:55:27] <Omega037> there is one candidate who is currently internal, we can talk to their boss
[21:55:53] <Omega037> But none of us actually know the boss, so they might just butter us up
[21:56:04] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[21:56:37] <Jefren1> no envy here
[21:56:45] *** Jefren1 is now known as Jefren
[21:56:45] <stealth_> Macuser, do you have code?
[21:56:51] <Macuser> yeah was just about to paste it
[21:57:04] <Macuser> it uses skyfield api
[21:57:26] <Macuser> https://bpa.st/72LQ
[21:58:25] <han-solo> !check
[21:58:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:58:49] <han-solo> i wish that did a warning thing like, don't use `os.system` :D
[21:59:15] <stealth_> Macuser, do you get any error when it stops?
[21:59:39] <node1> han-solo, thank you.
[22:00:01] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:00:50] *** Joins: Akuli (~Akuli@87-94-108-135.bb.dnainternet.fi)
[22:01:20] <Macuser> stealth_ nope it hangs
[22:01:34] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:01:50] <TJ-> Macuser: where is output being written to? stdout, a file, a pipe, a socket?
[22:02:10] <Macuser> to a file .dat
[22:02:21] <Macuser> via C code
[22:02:23] *** Quits: iomari891 (~iomari891@102.91.4.147) (Ping timeout: 244 seconds)
[22:03:11] <stealth_> Macuser, something external could be blocking? maybe a lock, to get more data!
[22:03:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[22:03:35] <han-solo> that's 29 processes...
[22:04:06] <han-solo> Okay, i forgot if `os.system` blocked or not :/
[22:04:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:04:22] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:28] <han-solo> oh, it does. So just one at a time then
[22:05:03] <TJ-> So s 'predict' the C code?
[22:05:09] <TJ-> s/s/is/
[22:05:24] <Macuser> yes
[22:05:32] <Macuser> unmodified too
[22:05:38] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:05:41] <Macuser> I was modifying it but I am using the original version now
[22:06:12] <TJ-> it's command-line seems to be set to write to the same file "passes.dat" that the python script has opened for writing also
[22:06:29] <Macuser> oh shit
[22:06:33] <Macuser> i'm an idiot
[22:06:35] *** Joins: Slimgin (~quassel@097-071-159-126.biz.spectrum.com)
[22:06:39] <Macuser> wow
[22:07:06] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78)
[22:07:12] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 245 seconds)
[22:07:45] <TJ-> you said it :D
[22:07:51] <Macuser> weird I took out the write
[22:07:54] <Macuser> it's still hanging same spot
[22:08:01] <Macuser> oh right
[22:08:04] <Macuser> don't open the file either
[22:08:06] <Macuser> lol
[22:08:21] <Macuser> nope.
[22:08:27] <stealth_> well both python+C is going to be writing to the same file then
[22:08:37] <Macuser> i took out the writ
[22:08:40] <Macuser> write* to passes.dat
[22:08:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:08:43] <Macuser> and the open/close
[22:08:44] <Jefren> should you not close the file before running os.system command?
[22:08:54] <Macuser> irrelevant now
[22:08:59] <Jefren> ok
[22:08:59] <Macuser> no file being opened/close
[22:09:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:09:33] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:09:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[22:10:05] <stealth_> Macuser, first of all you should be not using `os.system`, should be using `subprocess.run(cmdln_predict)`
[22:10:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[22:10:14] <jinsun> does that -o in the command mean write or append?
[22:10:30] <Macuser> jinsun it specifies the output file in the C program
[22:10:41] <Macuser> stealth_ ok i wasn't sure which to use so I just chose popen
[22:10:44] <jinsun> if write then you are writing to the same file again and again in a loop, instead of appending
[22:10:46] *** Joins: kmikita (uid461814@id-461814.helmsley.irccloud.com)
[22:10:51] <Macuser> ok i need to append. duh
[22:10:57] <Macuser> i wrote this pretty fast...
[22:11:01] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[22:11:18] <stealth_> Macuser, well the popen is a different case
[22:11:23] *** Joins: BigShip (~BigShip@user/bigship)
[22:11:26] <TJ-> but it can't do more than 86,400 lines-per-hour!
[22:11:27] <han-solo> maybe there are only 84600 lines for each satellite ?
[22:11:47] <Macuser> lolol
[22:11:52] <stealth_> Macuser, not sure why you are using 'date -d'... python has a datetime module to do all kinds of stuff.
[22:12:11] <Macuser> that's true stealth_
[22:12:17] <Macuser> just habit because I knew it already
[22:12:18] *** Joins: fikran (~fikran@user/fikran)
[22:12:39] <Macuser> ok so I might end up writing these to separate files then combining them into single file. I've done that before.
[22:12:45] <han-solo> try writing to different files ? `for sat_name for in iridium_sats:.. f'-o passes_{sat_name}.dat'
[22:12:48] <stealth_> also taking out `os.popen` would improve
[22:13:02] <Macuser> han-solo yes.
[22:13:10] <han-solo> ah
[22:13:39] <stealth_> Macuser, what is suppose to happen when the `for` loop ends?
[22:14:02] <Macuser> han-solo that {} thing you did doesn't work in python?
[22:14:02] *** Joins: ganchan (~thomas_w@user/ganchan)
[22:14:11] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:14:15] <jinsun> it works in 3.6+
[22:14:17] <han-solo> it should, my python is a little rusty,
[22:14:19] <Macuser> stealth_ the file is filled with output data in the passes.dat
[22:14:23] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[22:14:50] <jinsun> and don't forget to put a f in front of the string
[22:14:54] <Macuser> han-solo i normally do -o passes ' + sat_name + '.dat'
[22:14:57] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[22:15:04] <grym> Macuser:  :/
[22:15:05] <jinsun> that is just ugly
[22:15:07] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[22:15:08] <Macuser> heh
[22:15:12] <grym> i dislike that style a lot
[22:15:15] <Intruder777> Is there anyone who has experience with py-pde library? I can't wrap my head of how do I define differential equations with it...
[22:15:33] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[22:15:57] *** Quits: arinov (~arinov@31.142.36.176) (Ping timeout: 245 seconds)
[22:16:19] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8)
[22:16:26] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:16:41] *** Joins: nomic (~nomic@185.192.69.188)
[22:17:04] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[22:17:08] *** Joins: vats (~vats@180.149.226.8)
[22:17:35] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a9d5:d0be:b5bd:5d78) (Ping timeout: 252 seconds)
[22:17:35] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8) (Client Quit)
[22:19:35] <Fieldy> hi! in python 3.7.11, i'm obvserving something that i'm wondering is true. does the text sent to the user when using input() go to STDERR? line 36: https://bpa.st/A6OQ   when I run that and do 2> /dev/null , i don't see the prompt. without that, I do.
[22:20:09] <stealth_> Macuser, for loops only runs like 29times
[22:20:23] <Macuser> for loops in general??
[22:20:35] <Fieldy> oi Macuser
[22:20:40] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[22:20:45] <jinsun> no for loops can run more than 29 times
[22:20:45] <stealth_> Macuser, the one you wrote, since thats how much `iridium_sats` list is
[22:20:46] <Macuser> ello Fieldy
[22:20:54] <Macuser> yes I know stealth_
[22:20:59] *** Joins: fannagoganna (~tanim@c-73-40-72-85.hsd1.va.comcast.net)
[22:21:23] <jinsun> should have put a comma after no
[22:21:42] *** Quits: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no) ()
[22:21:45] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[22:21:53] <Wooble> Fieldy: it should go to stdout
[22:21:53] <stealth_> Macuser, could you update with all the suggestion and see if it works then paste a link to it
[22:22:04] <stealth_> Macuser, how long does it normally take you to test it?
[22:22:06] <Macuser> yes. weird it's still hanging on the same sat
[22:22:15] <Macuser> test what?
[22:22:18] <Fieldy> Wooble: hmm. let me specifically redirect stdout and stderr to different files
[22:22:22] <Macuser> I've already been running the code
[22:22:38] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[22:23:00] <stealth_> Macuser, could you update with the new code, so we can see what you are running
[22:23:05] <Macuser> each file should have 86400 lines because the timestep is 1 second UTC
[22:23:15] <Macuser> ok one sec
[22:23:34] <Macuser> updated https://bpa.st/ZGUA
[22:23:39] *** Joins: raxor2k (~raxor2k@ti0043a400-5959.bb.online.no)
[22:23:53] *** Joins: pycode (~pycode@2001:b07:5d28:551:ac44:1246:4141:52d9)
[22:23:56] <raxor2k> bjs: im a beginner programmer? pardon ?
[22:24:04] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:24:07] <stealth_> Macuser, it could be that this `predict` is writing with "w" mode as well? and writing over what it wrote before?
[22:24:32] <Fieldy> Wooble: that's weird. i redirected stdout to one file, and stderr to another, and i see the prompt in the stdout file. however, if I do my usual python3.7 blah.py 2> /dev/null, i do not see the prompt text. am i crazy :P
[22:24:44] <bjs> raxor2k: Uh I'm sorry, what would be a better way to describe you?  You've only been learning for 3-4 years or something
[22:24:47] <Macuser> stealth_ they are different file names now
[22:25:10] *** Quits: cloudbender17 (~cloudbend@user/cloudbender) (Quit: Connection closed)
[22:25:18] <jinsun> Macuser: so problem solved?
[22:25:22] <Macuser> nope
[22:25:22] <Fieldy> wonder if there is some line buffering going on
[22:25:29] <Macuser> still hangs. maybe it's a problem with the particular sat?
[22:25:30] <Fieldy> i'll append a newline
[22:25:54] <stealth_> Macuser, ok, well can you use `subprocess.run` ?
[22:26:04] <Macuser> stealth_  I did and I got an error for it
[22:26:08] <Macuser> didn't feel like fixing that
[22:26:14] <Wooble> Fieldy: it's worse, python blah.py 2> some_file will write the prompt there. I... don't know why.
[22:26:14] <Macuser> and yes I imported subprocess
[22:26:28] <stealth_> Macuser, what did the error say?
[22:26:39] <ssbr> honestly so stoked about this change, I should figure out how to do a 0.2 release on pypi: https://github.com/ssbr/refex/commit/e401bcc11b1f67c58f1eeeb62219d5d9c7dba140
[22:26:43] <Fieldy> Wooble: yeah i'm really confused right now
[22:26:53] <Macuser> stealth_     raise child_exception_type(errno_num, err_msg, err_filename)
[22:26:55] <han-solo> https://bugs.python.org/issue1927 # related ?
[22:27:09] <Fieldy> han-solo: was this directed at me?
[22:27:21] <raxor2k> bjs: i cant right now, but one beautiful day i will show you all my source codes to all APIs(i will invite you to my github projects). I guess you will be absolutely shocked :)
[22:27:21] <han-solo> yes, sorry for not mentioning your handle
[22:27:31] <Fieldy> no worries :)
[22:27:33] * Fieldy reads
[22:27:37] <stealth_> Macuser, that doesn't seem like an error raised
[22:27:38] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[22:27:48] <bjs> raxor2k: hmm
[22:28:51] <bjs> raxor2k: if I'm honest from what I've seen of your abilities here, I think you'd probably benefit from some humility and introspection about the limits of your abilities.  You are still a new programmer and are struggling with learning the basics,  it takes a long time to learn something like programming. Especially if you're not doing it full-time for years
[22:29:29] <bjs> I mean think about a typical CS course (even the good ones) where people work full-time for 3-4 years at learning all this stuff and at the end they often aren't even that good at it :P
[22:29:32] <Wooble> Fieldy: han-solo: the title of that bug is annoying because the docs explicitly say it prints the prompt to stdout; making it always write to stderr would be a weird way to "fix" it.
[22:29:58] <han-solo> :D
[22:30:00] <Fieldy> Wooble: yeah i'm confused at this point and unsure what to do
[22:30:12] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[22:30:16] <Macuser> stealth_ screenshot of subprocess error: https://imgur.com/a/2Jg7B0y
[22:30:21] <Fieldy> i'm only trying to send two errors that are inconsequential to /dev/null that are on STDERR
[22:30:26] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[22:30:32] <Fieldy> but that is also taking input() text with it
[22:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:47] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[22:30:50] <stealth_> Macuser, scroll all the way down :p
[22:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:04] <raxor2k> bjs: "CS"?
[22:31:08] <Macuser> No such file or directory
[22:31:19] <Macuser> but it works with os.system...
[22:31:22] <bjs> raxor2k: computer science
[22:31:49] <Fieldy> Wooble / han-solo thought i was slick trying this but... no go  1> /dev/stdout 2> /dev/null
[22:31:55] <han-solo> Fieldy: `python3 -c 'input("You can't see me.")' 2>/dev/null` # sufficed for me
[22:32:09] <raxor2k> bjs: oh.. thought you mean counter strike
[22:32:10] <raxor2k> xD
[22:32:16] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[22:32:30] <Wooble> Macuser: you want subprocess.run(['command', 'arg1', 'arg2']), never subprocess.run("command arg1 arg2")
[22:32:32] <Fieldy> han-solo: what was your result? I do not see the text
[22:32:41] <Macuser> what are the arg's??
[22:32:46] <Macuser> I just wanna run cmdln
[22:33:05] <han-solo> Fieldy: yeah, same i am saying
[22:33:07] <stealth_> Macuser, `cmdln_predict = ['predict', '-q', 'predict.qth', '-t', 'iridium.tle', '-f', sat_name, start, end, '-o', sat_name.replace(" ", "")+'.dat']`
[22:33:10] <Fieldy> han-solo: ok
[22:33:20] <Fieldy> it's not just me then... this is... unexpected?
[22:33:28] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-ee33-baaf-ff65-1117.res6.spectrum.com)
[22:33:29] *** Joins: c10l (~c10l@89.34.167.207)
[22:33:29] <Macuser> oh i gotta format it like that
[22:33:32] <Wooble> Macuser: you can also shlex.split("full command line") to get the list.
[22:33:32] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[22:33:34] <stealth_> Macuser, `subprocess.run(cmdln_predict)`
[22:33:42] <Macuser> stealth_ ok thanks
[22:33:46] <han-solo> Fieldy: for me, atleast
[22:33:53] <Fieldy> han-solo: ok, thanks :)
[22:33:55] <stealth_> Macuser, fix it i made any typo
[22:34:02] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8)
[22:34:08] <han-solo> and the doc does say, it "If the prompt argument is present, it is written to standard output without a trailing newline. "
[22:34:23] <Fieldy> yeah. according to that bug the docs are wrong
[22:34:24] <Wooble> han-solo: yes, it's lying.
[22:34:28] <Fieldy> not cool
[22:34:45] <han-solo> Wooble: yeah
[22:34:53] <Fieldy> that bug title is confusing, did it once print to stdout, and they patched it to print to stderr?
[22:35:32] <Macuser> yes no plus sign
[22:35:35] <Wooble> Fieldy: as far as I can tell people vaguely decided the best solution was to do the opposite of what the docs say, so it's probably good they never mereged that.
[22:35:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:36:28] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:36:36] <stealth_> Macuser, ?
[22:36:40] *** Joins: y1n (~y1n@213162073074.public.t-mobile.at)
[22:36:52] <Macuser> stealth_ your typo was a plus sign
[22:36:57] <han-solo> i mean, stderr seems like a good place to output, because it won't buffer ? or something like that
[22:37:04] <Macuser> +'.dat'
[22:37:07] <Macuser> should be ,'.dat'
[22:37:10] <stealth_> Macuser, no, you can't separate those
[22:37:19] <Macuser> what was your typo then?
[22:37:28] <stealth_> Macuser, i was just saying if i made any
[22:37:31] *** Quits: jrofd (~test@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net) (Ping timeout: 244 seconds)
[22:37:33] <Macuser> oh
[22:37:40] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8) (Client Quit)
[22:37:51] <Macuser> still gets hung up...
[22:37:52] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[22:37:55] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:37:56] <Wooble> han-solo: unless, like Fieldy, you want to get rid of error output but still have a usable UI :)
[22:38:14] <han-solo> :)
[22:38:24] <Macuser> there must be something inherently wrong with the TLE
[22:38:27] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 245 seconds)
[22:38:29] <Macuser> lemme try skipping that one.
[22:38:30] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:38:30] <jinsun> Macuser: remove that one item fromthe list which hangs and try again
[22:38:33] <Macuser> yep.
[22:38:36] <Macuser> testing..
[22:38:41] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8)
[22:38:58] <Fieldy> well, i'll post the output of what i've written, and point to the stuff i'm trying to temporarily hide till i understand it, and that's why i'm doing 2> /dev/null   https://bpa.st/4CPA
[22:39:16] <Macuser> nope
[22:39:24] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[22:39:25] <Macuser> always gets stopped on 5th element
[22:39:35] <Fieldy> and this is the source https://bpa.st/A6OQ
[22:39:37] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[22:40:03] <Jefren> malformed data file?
[22:40:26] <stealth_> Macuser, `r = subprocess.run(cmdln_predict, capture_output=True); if r: print('r:', r)`
[22:40:52] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit3!thekingofb@thunix.net)))
[22:41:08] <Fieldy> updated the source, though it's not functional changes just cosmetic https://bpa.st/MMMQ
[22:41:13] <Macuser> stealth_ replace the subprocess.run() with that?
[22:41:36] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[22:41:37] <Fieldy> wonder why it stopped highlighting
[22:41:45] <Macuser> bad syntax
[22:41:50] <Macuser> oops my bad lol
[22:41:59] <Macuser> no it still says if
[22:42:08] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:e913:ebf0:5b4f:bc6f)
[22:42:10] <Macuser> invalid
[22:42:30] <stealth_> Macuser, `if r.returncode:` ?
[22:42:40] <Macuser> if r:
[22:42:58] <Macuser>     r = subprocess.run(cmdln_predict, capture_output=True); if r: print('r:', r)
[22:43:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[22:43:56] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[22:44:32] <jinsun> Fieldy: https://bpa.st/+python will highlight, https://bpa.st will not
[22:44:33] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[22:45:15] <raxor2k> bjs: it is still not working
[22:45:17] <raxor2k> hillarious
[22:45:18] <Macuser> no idea what you're trying to do there
[22:45:20] <Fieldy> jinsun: ahh
[22:45:41] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[22:45:44] <bjs> raxor2k: then you're doing it wrong
[22:45:51] <stealth_> Macuser, `r = subprocess.run(cmdln_predict); if r.stderr: print(r.stderr)`
[22:46:05] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[22:46:05] <Fieldy> alright well i've made some real progress here thanks to numerous people, i'm just gonna put it down for a while and relax
[22:46:10] <Fieldy> thanks!
[22:46:47] <gloin> Is there by chance a one-liner to get socket.getaddrinfo() to output an ipv6 address the same way as socket.gethostbyname() does? getaddrinfo returns a lot of garbage
[22:47:20] <stealth_> Macuser, `r = subprocess.run(cmdln_predict, capture_output=True); if r.stderr: print(r.stderr)` sorry
[22:47:20] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 244 seconds)
[22:47:36] <stealth_> Macuser, so ya, just trying to print error if there is any
[22:47:46] <raxor2k> ye sure.. my fault as usual
[22:47:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:ac44:1246:4141:52d9) (Ping timeout: 252 seconds)
[22:47:48] <Macuser> that if is invalid
[22:47:50] <Macuser> still
[22:48:01] <Macuser> you can't do one-liners in python?
[22:48:13] <Macuser> oops
[22:48:20] <hexology> i can't tell if i'm missing something silly, if i'm misunderstanding typing.overload, or if there's a bug in mypy. https://mypy-play.net/?mypy=latest&python=3.9&gist=cd3f675bdcbd5eeb71cdf3eaa0a77196
[22:48:25] <Macuser> stealth_ no error gets printed
[22:48:41] <stealth_> Macuser, https://bpa.st/ZLLA
[22:49:01] <gloin> I really wish socket.gethostbyname() would return ipv6 and not just ipv4 :(
[22:49:08] <Macuser> yeah stealth_
[22:49:09] <bjs> raxor2k: well whose fault would it be? :P
[22:49:30] <stealth_> Macuser, even after all that nothing eh, hmm..
[22:49:33] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[22:49:47] <hexology> gloin: it says that it returns a 5-tuple, and it says the last element is "sockaddr", which i presume is an ip address? https://docs.python.org/3/library/socket.html#socket.getaddrinfo
[22:49:50] <Macuser> yeah this is strange. And it's not because there are more than 24 TLEs. because the program won't read more than 24. but this is only the 5th
[22:49:56] <hexology> oh its an ip address and port
[22:50:02] <stealth_> gloin, ipv6 gets redirected to ipv4/localhost
[22:50:14] <hexology> socket.getaddrinfo()[4][1] ?
[22:50:27] <gloin> hexology: that's assuming not multihomed
[22:50:54] <han-solo> `next(x for x in socket.getaddrinfo('google.com', 80) if x[0] == socket.AF_INET6)[4][0]` # could break...maybe
[22:51:12] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[22:51:15] <han-solo> er, might
[22:51:44] <gloin> Right now I'm as far as socket.getaddrinfo(hostname, None, family=socket.AF_INET6
[22:51:51] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Ping timeout: 276 seconds)
[22:51:51] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:51:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[22:51:51] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 276 seconds)
[22:51:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[22:51:51] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[22:52:11] <gloin> but that leaves a lot of trash (5-tuple lol) and still does nothing to help with "which is primary interface"
[22:52:12] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 272 seconds)
[22:52:25] *** Joins: portalrat_ (~portalrat@user/portalrat)
[22:52:27] <gloin> INET6)*
[22:52:30] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 276 seconds)
[22:52:42] <hexology> the "trash" is what i was suggesting can be very easily handled with [4][0]
[22:52:50] <hexology> the rest, that i don't know
[22:52:52] *** BtbN_ is now known as BtbN
[22:53:31] <gloin> I'll have to figure out how it's working on my box - [4][0] is out of range
[22:53:41] <hexology> sorry, it returns a _sequence_ of those tuples
[22:53:50] <hexology> https://docs.python.org/3/library/socket.html#socket.getaddrinfo i'm just reading off here
[22:53:52] <ammar2> hexology: it's happening because of the default arguments, the run_exec matches both if you don't provide an `encoding` argument. See https://mypy-play.net/?mypy=latest&python=3.9&gist=7d1f4e0da0b00f7dc2ba2200e3693235
[22:53:55] <gloin> but seriously, what's up with gethostbyname not returning ipv6?
[22:54:15] <Macuser> stealth_ more interesting. Removing one of them that it gets stuck on results in 5 being printed instead of only 4
[22:54:32] *** Quits: portalrat (~portalrat@user/portalrat) (Ping timeout: 256 seconds)
[22:54:39] <hexology> ammar2: huh, that's an interseting caveat
[22:54:55] *** Joins: kdbxw (~kdbxw@94.180.185.33)
[22:55:03] <hexology> should i not be specifying default args?
[22:55:06] <hexology> (when using overload)
[22:55:11] *** Joins: Curiosity (uid511277@user/cypris)
[22:55:19] <stealth_> Macuser, cool, its not like line no is it?
[22:55:21] <raxor2k> bjs: i solved
[22:55:22] <raxor2k> I SOLVED IT
[22:55:24] <raxor2k> HAHAHAHA
[22:55:27] <bjs> raxor2k: congrats
[22:55:35] *** Joins: ledtc31 (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[22:55:57] <Macuser> maybe I should try reducing it to 24 TLEs only
[22:56:00] <Macuser> see if that makes it happy
[22:56:33] <raxor2k> bjs: thanks for advices, but i solved it in my own way :)
[22:56:43] <Macuser> nope
[22:56:43] <bjs> raxor2k: that's good
[22:56:46] <ammar2> hexology: overload does get a little messy with default arguments unfortunately
[22:56:47] <raxor2k> i might not be the smartest one here, but my hardworking mentality always lead me to the goal
[22:56:52] <Macuser> wait nevermind
[22:56:58] <Macuser> it automatically pulls eveyr time
[22:57:06] <stealth_> Macuser, something for you to debug with is a good start while dealing with weird errors.
[22:57:08] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:57:12] <kdbxw> Hi. Is there a way to read a single line of process stdout, then ignore the rest of its stdout, then wait until the process terminates? Like proc.stdout.readline(), then ignore it's stdout, then proc.wait()
[22:57:28] <stealth_> gloin, why do you think it should return ipv6 and not 4?
[22:57:49] <hexology> gloin: ipv6_addrs = [info[4][0] for info in socket.getaddrinfo('example.net', 80, family=socket.AF_INET6)]
[22:57:51] <bjs> raxor2k: that's good to hear
[22:58:27] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Ping timeout: 256 seconds)
[22:58:31] <ammar2> kdbxw: exactly what you said should work
[22:58:32] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:58:41] <hexology> i don't know how one determines which is primary, maybe you need to use psutil or something like that https://stackoverflow.com/a/43478599/2954547
[22:58:46] *** Joins: ano (~ano@user/ano)
[22:58:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:58:47] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[22:58:49] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:58:51] <hexology> ammar2: is that documented anywhere?
[22:58:52] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[22:58:53] *** Joins: mickey (~user@user/mickey)
[22:58:57] *** ledtc31 is now known as ledtc
[22:59:02] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:59:04] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[22:59:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:59:07] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:59:10] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[22:59:20] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[22:59:32] <ammar2> hexology: I don't think so, only in various issues scattered around the typing repos
[22:59:40] <Macuser> stealth_ yeah idk
[22:59:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-ee33-baaf-ff65-1117.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:59:40] <hexology> :(
[22:59:53] <kdbxw> ammar2, the rest of output will fill up the buffer and it will stuck
[22:59:54] <hexology> well now i know and i'm leaving a comment so i don't forget
[23:00:11] <Macuser> i got an idea
[23:00:19] <Macuser> debug by running the command outside of the python script
[23:00:21] <Macuser> just pure C
[23:00:45] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[23:00:52] <gloin> turns out the limitation with gethostbyname is in the relevant C library. crud. @stealth_ what if the host only has an ipv6 address, or is multihomed? For those reasons I want whichever exists (one or both) of the primary ipv4/ipv6 address for a machine
[23:00:55] <Macuser> no it's obviously the python's fault
[23:01:03] <Macuser> because I remove it and it takes the next one
[23:01:18] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:01:20] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[23:01:35] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[23:01:47] <jinsun> Macuser: what was the new problem again? the loop only runs 5 times?
[23:02:01] <stealth_> gloin, `gethostbyname()` only return ipv4, it says to use `getaddrinfo()` for either ipv4/6
[23:02:12] <Macuser> found a different problem
[23:02:18] <Macuser> sat name needs " " around it
[23:02:21] <Macuser> for the command
[23:02:29] <ammar2> kdbxw: aah, in that case you probably need to do the first read and then switch out the read end of the pipe to something like /dev/null
[23:02:30] <gloin> stealth_: am aware, but getaddrinfo doesn't say "this is primary" and our systems often have multiple valid IP addresses
[23:02:43] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[23:02:52] <stealth_> Macuser, keep at it you will get that bug!!!
[23:02:59] <Macuser> :)
[23:02:59] <ammar2> kdbxw: I don't think subprocess makes that particularly easy, since this isn't really a normal use case
[23:03:11] <ammar2> kdbxw: can you just read the output of the program and ignore it?
[23:04:32] <kdbxw> ammar2, I tried to set it to proc.stdout = subprocess.DEVNULL after reading a line, but the process then finishes with 255 status. I probably should try just reading it and discarding
[23:04:45] <gloin> huh
[23:04:48] <ammar2> oh yeah, just reassigning won't work
[23:05:21] <ammar2> you'd have to do like dup2(stdout's fileno, devnull fileno)
[23:05:21] <gloin> stealth_: that array you suggested returns the same ipv6 address three times - is there a uniq() function I can feed that into?
[23:05:43] <han-solo> gloin: just take the first one ?
[23:05:53] <stealth_> gloin, array? maybe you are thinking of someone else
[23:06:21] <gloin> oh sorry, it was hexology who suggested that. han-solo some of our hosts have multiple ipv6 addresses
[23:06:28] <han-solo> ah
[23:06:33] <han-solo> `set` then
[23:07:07] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:07:21] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[23:07:53] <Macuser> ok now it hangs on the first one...
[23:08:01] <Macuser> even after fixing the command.
[23:08:11] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8)
[23:08:50] <stealth_> gloin, https://bpa.st/KD3A
[23:09:05] <Macuser> code update. https://bpa.st/ILZQ
[23:09:23] *** Joins: acresearch (~acresearc@user/acresearch)
[23:10:19] <gloin> han-solo: set?
[23:10:40] * gloin should point out he comes from mostly only writing perl
[23:11:34] <stealth_> gloin, can you share this domain you are using?
[23:11:47] <han-solo> `set(info[4][0] for info in socket.getaddrinfo('example.net', 80,family=socket.AF_INET6))`
[23:12:04] <Macuser> i don't trust this subprocess shenanigans
[23:12:19] <stealth_> gloin, or use that code i pasted, replace the domain name
[23:12:38] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:12:39] <gloin> stealth_: this is for a general case - I'm using None for the domain right now - it could be localhost if that works
[23:12:47] <stealth_> Macuser, its much better though, `os.system` is not recommended
[23:12:49] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[23:12:55] <gloin> part of a larger thing that gathers info on a host and uses that to populate netbox
[23:13:18] <gloin> so I'm able already to get the ipv6 addresses out of it but the field I'm trying to populate here in netbox is "primary_ip6"
[23:13:32] <gloin> where gethostbyname() is perfect for primary_ip4
[23:14:24] *** Quits: magla (~gelignite@55d44ca3.access.ecotel.net) (Remote host closed the connection)
[23:14:32] <Macuser> os.system worked
[23:14:40] *** Joins: magla (~gelignite@55d44ca3.access.ecotel.net)
[23:14:41] <Macuser> but froze at the 5th again
[23:14:43] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[23:14:46] <Macuser> 4th*
[23:14:57] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:10] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:34] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[23:16:06] <Macuser> that's weird that it changed behavior just from using os.system
[23:16:10] <gloin> Am starting to think I'm going to need to parse the output of "route -6" which kinda stinks for me - I'm much more comfortable with "my $cmd = `route -6n`;" and then parsing from there than fighting through subprocess, which I still find difficult
[23:16:14] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[23:17:03] <gloin> s/difficult/much more complicated than my usual use case for system commands/
[23:17:33] <stealth_> Macuser, something else could be happening in the background!
[23:17:37] <Macuser> I found out
[23:17:40] <Macuser> it's the specific TLEs
[23:17:41] <raxor2k> bjs: btw, i also managed to run it perfectly both of them inside one loop, just sayin :
[23:17:42] <raxor2k> :)
[23:17:44] <deniska> gloin: cmd = subprocess.run(['route', '-6n']).stdout does roughly the same thing
[23:17:45] <Macuser> certain ones get stucked
[23:17:47] <bjs> raxor2k: okay?
[23:17:49] <Macuser> seems to be the ones 91x
[23:17:55] <Macuser> er 9xx
[23:17:58] <Macuser> stuck*
[23:17:59] <bjs> raxor2k: what are you trying to say
[23:18:11] <gloin> deniska++
[23:18:14] <deniska> gloin: (and by roughly I mean the same, if I remember what perl does)
[23:18:18] <Macuser> what's up with the 900 Iridium sats?
[23:18:18] <Macuser> lol
[23:18:39] <raxor2k> bjs: this works as well :) : https://bpa.st/VVCA
[23:18:44] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[23:18:53] * Macuser joins #iridium on irc.blafasel.de
[23:18:56] <stealth_> Macuser, its 4th on the list
[23:19:07] <Macuser> stealth_ no watch im gonna take out both 900s
[23:19:10] <Macuser> see if it keeps going
[23:19:38] <axisys> need some help with json payload.. the curl works fine, but feeding the same data to requests does not like the json data .. tried two ways to add the payload here
[23:19:39] <bjs> raxor2k: what's wrong with that way?  that's basically my code
[23:19:40] <axisys> https://dpaste.org/DxDY
[23:19:44] <gloin> deniska: quick run of that says you're right - how do I suppress the "CompletedProcess" output?
[23:19:44] <stealth_> Macuser, you have like 4 9xx
[23:19:51] <gloin> ah, I guess that's just from me printing it nevermind
[23:20:03] <Macuser> worked
[23:20:13] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:20:34] <stealth_> Macuser, o..
[23:20:34] <gloin> ah what the heck?
[23:20:35] <stealth_> Macuser, what does the number do internally, do they open files or something?
[23:20:35] <raxor2k> bjs; ehm no ??
[23:20:44] <raxor2k> that is not your way at all
[23:20:46] <Macuser> stealth_ the C program is just matching the name with the TLE line
[23:21:15] <bjs> raxor2k: huh, it's making a dict-per-ID and looping over each list and then if the ID doesn't exist it's creating it and if it is it's merging it into it
[23:21:21] <bjs> raxor2k: that's pretty much what I had,  it looks okay
[23:21:24] <gloin> ip6addr = subprocess.run(['route', '-6n']) && print(type(ip6addr)) <--prints out the contents of ip6addr to stdout - why?
[23:21:32] <han-solo> with `iproute2`, you can get the output formatted, easier to parse...
[23:21:35] <hexology> gloin: def uniq(lst): return list(set(lst))
[23:21:41] <stealth_> Macuser, hmm.. matching the name? anything to do with io?
[23:21:43] <han-solo> `ip -j -f inet6 r s`
[23:21:52] <Macuser> stealth_ couldn't tell ya :/
[23:22:09] <raxor2k> bjs: you said i cant run both of them inside a function
[23:22:12] *** Quits: nomic (~nomic@185.192.69.188) (Quit: Leaving)
[23:22:13] <raxor2k> hahaha
[23:22:14] <bjs> raxor2k: no i didn't?
[23:22:32] <bjs> i said it's easier to have two loops not one
[23:22:35] <bjs> and you have two loops like I did
[23:22:55] <deniska> gloin: probably my bad: ip6addr = subprocess.run(['route', '-6n'], capture_output=True).stdout
[23:23:09] <gloin> ah
[23:23:11] <gloin> sigh
[23:23:17] <gloin> that should work but ouch lol
[23:23:52] <gloin> han-solo: good advice using iproute2, although -j isn't present on centos7
[23:24:11] <stealth_> Macuser, well at least you figured out where it was getting stuck... later you can figure out why that 9xx+ issue
[23:25:03] <han-solo> gloin: not sure, but wonder why wouldn't it :/
[23:25:44] <han-solo> oh, you were asserting, i thought that was a question
[23:26:56] <Macuser> stealth_ now i'm seeing if I can output them all in one file while inserting a "title" spacer to distinguish each
[23:27:09] *** Joins: hudo (~hudo@62.68.27.70)
[23:27:26] <stealth_> Macuser, cool
[23:28:22] <jinsun> axisys: do those \n mean newlines or \n literally? that is probably what is making it invalid json, python converts them to newlines, if you want \n then write \\n
[23:28:36] <gloin> han-solo: be nice to dump it to JSON though
[23:29:22] <han-solo> i just checked, it seems to be available in centos, atleast 8 ?
[23:29:36] <Payam> Hi again guys, If you are using for instance Hexchat you see that when you open the settings a new window opens but it not a independent window. so in your lanuch bar you still see one instance of hexchat. What is this kind of window (settings) called? is it a dialog?
[23:29:42] <Macuser> yeah I don't think that's gonna work. stealth_ can't open same file the C program is trying to add to
[23:30:13] <stealth_> Macuser, you might have too many fds open!
[23:31:15] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bdc1:3f1f:8197:d9e8)
[23:31:26] *** Quits: BigShip (~BigShip@user/bigship) (Quit: Ping timeout (120 seconds))
[23:31:33] <Macuser> stealth_ fds?
[23:31:48] <stealth_> Macuser, too many files open
[23:31:57] <Macuser> too many of the same file lol
[23:32:00] *** Joins: BigShip (~BigShip@user/bigship)
[23:32:55] <stealth_> Macuser, normally system allows you to have 1024 files open per process, if you are hitting that mix, you will get weird error, so should properly close the files.
[23:33:15] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 250 seconds)
[23:33:45] <philipp64|work> What version of openssl is MacOS Python3 built against?
[23:34:12] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[23:34:13] <axisys> jinsun: so I got the '\n' based on newrelic api graphql .. it has an option to copy as curl
[23:34:45] <axisys> so curl version was copy/paste from newrelic graphql
[23:34:52] <hexology> ammar2: in the example i showed before, do you know why mypy would think that the return type of run_exec() is Any? shouldn't it be CompletedProcess[Union[str, bytes]] or Union[CompletedProcess[str], CompletedProcess[bytes]]?
[23:35:04] <Macuser> hm I thought that would work stealth_... open file, print title, close file, run predict.c, repeat
[23:35:26] <jinsun> philipp64|work: https://docs.python.org/3/library/ssl.html#ssl.OPENSSL_VERSION
[23:35:27] <axisys> and then I just use the exact query for python. I will try without '\n' and with '\\n'
[23:35:31] *** PJBoy is now known as Guest3801
[23:35:31] *** Quits: Guest3801 (~PJBoy@user/pjboy) (Killed (silver.libera.chat (Nickname regained by services)))
[23:35:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[23:36:26] *** Joins: xcm (~xcm@user/xcm)
[23:36:33] <jinsun> axisys: yeah so I am guessing bash doesn't process the \n (will have to ask #bash) but python does so you have to convert \n to \\n
[23:36:37] <stealth_> Macuser, i can't tell what you are doing without looking at the code
[23:36:39] <philipp64|work> jinsun: 'LibreSSL 2.8.3' — that was unexpected.
[23:36:48] <raxor2k> bjs: i think i cracked the code
[23:36:55] <raxor2k> now everything just seems to be easy now
[23:37:12] <Macuser> stealth_ https://bpa.st/GCGQ
[23:38:11] <han-solo> gloin: ah, centos7 only have `iproute`, sucks
[23:38:23] <axisys> jinsun: I removed all the '\n' from payload and it worked with data=json.dumps(payload)
[23:38:25] <stealth_> Macuser, o, `open(..., 'w')` you know "w" will clear your file then write
[23:38:30] <Macuser> ooooops
[23:38:32] <Macuser> knew it
[23:38:35] <axisys> jinsun: thank you so much1
[23:38:38] <axisys> much!
[23:38:41] <hexology> can't figure out why the revealed type is Any here https://mypy-play.net/?mypy=latest&python=3.9&gist=2315cf2d9f96a48171b444c93660d103
[23:38:55] <Macuser> 'a' mode
[23:38:57] <Macuser> append
[23:39:08] <stealth_> sure
[23:39:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:40:01] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[23:40:05] *** Quits: Barones (~Barones@2804:7f3:8987:d2a4:dca1:cd66:e0e9:a376) (Ping timeout: 252 seconds)
[23:40:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::c)
[23:40:31] <jinsun> hexology: you don't have type annotations for run_exec so mypy goes in dynamic mode and assumes Any
[23:40:50] <hexology> jinsun: even with the overloadsd?
[23:40:52] <hexology> overloads*
[23:41:00] <jinsun> https://mypy.readthedocs.io/en/stable/getting_started.html#function-signatures-and-dynamic-vs-static-typing
[23:41:09] *** Quits: BigShip (~BigShip@user/bigship) (Quit: Ping timeout (120 seconds))
[23:41:27] <hexology> i'm using @typing.overload
[23:41:40] *** Joins: BigShip (~BigShip@user/bigship)
[23:41:48] <hexology> i thought you weren't supposed to add type hints on the implementation, just the overloads
[23:43:04] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:43:50] <hexology> when i run in strict mode it does say the function is missing the type annotations
[23:43:59] <philipp64|work> okay, I don’t understand what I’m looking at: https://pastebin.com/bdNg2rp3
[23:44:00] <hexology> i'm kind of confused, i am pretty sure i've used this pattern before
[23:44:33] <hexology> oh, am i supposed to use Awaitable because these are async?
[23:44:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::c) (Ping timeout: 240 seconds)
[23:45:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[23:45:17] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[23:45:19] <philipp64|work> jinsun: python’s SSL is telling me it uses libressl 2.8.3…. but otool on _ssl is telling me it’s using a nonexistent version of libssl.dylib …
[23:46:13] <jinsun> hexology: hmm not sure about that, I remember when I used overloads I had to add annotations to the implemenation also, filled with unions (I was also using --strict)
[23:46:48] <hexology> interesting
[23:47:03] <hexology> i always thought this was valid but i guess i'll have to do it that way
[23:47:05] <hexology> pretty ugly
[23:47:14] <hexology> or maybe i should move the annotations to stub files
[23:47:45] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:48:12] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[23:48:24] <jinsun> ya that would kinda solve the ugly problem, or use `from __future__ import annnotations` to at least make the unions less ugly
[23:48:38] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[23:48:43] <hexology> i do have that in my real code
[23:49:08] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[23:49:09] <hexology> but why would that help with the unions? | is only in 3.10 and i want to support 3.9 at least, probably also 3.8
[23:49:38] <jinsun> that is why you use that __future__ import
[23:49:51] <jinsun> then 3.10 annotations syntax works in 3.7
[23:49:52] <hexology> afaik it still tells you no in 3.9 and below
[23:50:06] <jinsun> only if you use that in alias
[23:50:13] <hexology> ahh
[23:50:14] <hexology> let me try
[23:50:19] <jinsun> x = str | int will complain
[23:50:25] <jinsun> x: str | int wont
[23:52:13] <jinsun> the assignment complains because it happens at runtime, the : annotations are stringified before the code runs
[23:52:43] <hexology> yep, makes sense
[23:54:17] <jinsun> philipp64|work: no idea about macos or libressl really, you should probably try to ask in #python-dev also
[23:56:34] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[23:58:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[23:59:38] <hexology> i'm going to try switching to pyright
[23:59:42] <hexology> i'm kind of sick of fighting mypy
[23:59:56] <hexology> im sure pyright is broken in 100 ways too
