[00:01:22] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:01:39] <zero> half-hearted haskell will waste you more than just some evenings
[00:02:02] *** Quits: meer (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[00:05:44] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[00:06:05] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[00:11:25] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:15:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:19:38] *** Joins: alx741 (~alx741@157.100.93.160)
[00:23:50] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:24:48] *** Quits: ShmoSeph (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:25:40] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[00:28:47] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[00:30:33] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[00:30:49] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[00:36:05] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[00:38:22] *** Joins: Pickchea (~private@user/pickchea)
[00:39:12] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[00:40:34] *** Joins: alx741 (~alx741@157.100.93.160)
[00:44:10] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[00:44:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:44:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:47:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:50:33] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[00:50:36] *** Quits: iteratee_ (~kyle@162.218.222.107) (Read error: Connection reset by peer)
[00:51:04] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[00:51:56] *** Joins: iteratee (~kyle@162.218.222.107)
[00:52:28] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[00:53:22] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[00:53:31] *** Quits: hueso (~root@user/hueso) (Quit: hueso)
[00:55:02] *** Quits: Topsi (~Tobias@dyndsl-095-033-090-163.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[00:55:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[00:56:35] *** Joins: hueso (~root@user/hueso)
[01:02:11] *** Joins: alx741 (~alx741@157.100.93.160)
[01:03:36] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:04:56] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:08:00] *** Quits: cosimone` (~user@93-44-186-112.ip98.fastwebnet.it) (Remote host closed the connection)
[01:08:22] *** Joins: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738)
[01:08:59] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:11:35] *** Quits: _ht (~quassel@82-168-34-160.fixed.kpn.net) (Remote host closed the connection)
[01:12:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:12:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:12:25] *** Joins: wroathe (~wroathe@user/wroathe)
[01:15:18] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:18:44] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:911c:c4ab:2f7e:d3f1) (Remote host closed the connection)
[01:19:07] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:911c:c4ab:2f7e:d3f1)
[01:19:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[01:23:23] *** Joins: alx741 (~alx741@157.100.93.160)
[01:24:28] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[01:27:49] *** Joins: burnside_ (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[01:28:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[01:32:52] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:34:49] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:40:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:45:29] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[01:52:56] *** Joins: alx741 (~alx741@157.100.93.160)
[01:53:41] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:911c:c4ab:2f7e:d3f1) (Remote host closed the connection)
[01:53:43] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:54:51] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:55:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:56:04] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[01:56:05] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[01:56:28] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 250 seconds)
[01:56:54] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[01:58:12] *** Quits: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738) (Ping timeout: 250 seconds)
[01:59:27] *** Joins: meer (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[02:02:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:04:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[02:07:18] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:07:23] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:09:47] *** Quits: hueso (~root@user/hueso) (Quit: hueso)
[02:12:52] *** Joins: hueso (~root@user/hueso)
[02:12:57] *** Joins: alx741 (~alx741@157.100.93.160)
[02:16:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:21:14] *** Quits: briandaed (~root@185.234.208.208.r.toneticgroup.pl) (Quit: leaving)
[02:27:11] *** Joins: oldsk00l (~znc@ec2-18-185-18-199.eu-central-1.compute.amazonaws.com)
[02:28:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527) (Read error: Connection reset by peer)
[02:28:45] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Quit: Leaving)
[02:29:04] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:29:31] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Quit: Lost terminal)
[02:29:50] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Client Quit)
[02:30:00] *** Quits: hueso (~root@user/hueso) (Quit: hueso)
[02:30:34] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:30:37] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:32:11] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:00] *** Joins: hueso (~root@user/hueso)
[02:33:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:34:34] *** Joins: alx741 (~alx741@157.100.93.160)
[02:34:45] *** Quits: hueso (~root@user/hueso) (Client Quit)
[02:35:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[02:35:45] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:36:37] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:36:57] <EvanR> I suspect that whenever you start printing out infinite lists in ghci, that you have binded to a name with let xs = whatever (no "in"), the list gets consumed and discarded instead of growing in memory
[02:37:38] <EvanR> maybe it's regenerating the CAF from a seed each time you run a command
[02:37:38] *** Joins: hueso (~root@user/hueso)
[02:39:12] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[02:41:03] *** Quits: hueso (~root@user/hueso) (Client Quit)
[02:41:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[02:42:02] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[02:43:45] *** Quits: ysh (sid6017@id-6017.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:59] *** Joins: hueso (~root@user/hueso)
[02:44:02] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:44:41] *** Quits: hueso (~root@user/hueso) (Client Quit)
[02:47:43] *** Joins: hueso (~root@user/hueso)
[02:51:31] *** Quits: emad (~emad@156.214.182.157) (Quit: Leaving)
[02:55:07] *** Joins: random_ (~random@185.219.68.251)
[02:55:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:55:55] *** Quits: hueso (~root@user/hueso) (Quit: hueso)
[02:58:01] *** Quits: random__ (~random@185.219.68.251) (Ping timeout: 256 seconds)
[02:59:06] *** Joins: hueso (~root@user/hueso)
[02:59:59] <lechner> byorgey geekosaur pavonia: thanks!
[03:00:17] *** Joins: alx741 (~alx741@157.100.93.160)
[03:04:08] <lechner> geekosaur: this one is legit   https://archive.org/details/haskellschoolofe0000huda
[03:04:19] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[03:07:08] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[03:11:20] <lechner> Hi, is it acceptable to always use 'pure' instead of 'return'?
[03:12:04] *** Quits: mmhat (~mmh@55d4d469.access.ecotel.net) (Quit: WeeChat 3.4)
[03:12:13] <c_wraith> unless you're on really old versions of GHC, yes
[03:12:28] *** Joins: tzh_ (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[03:14:01] <zero> lechner: return is a wart
[03:14:02] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[03:14:49] <zero> you should use pure, and there was even a "Monad of no return" proposal, but i don't know if it went anywhere
[03:15:19] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:15:27] <lechner> thanks! i really meant from a theoretical/aestethical/whatever angle
[03:15:52] <lechner> it really does not 'return', does it?
[03:16:51] <zero> in my opinion it was a misguided attempt at making do notation familiar for people used to imperative languages
[03:17:26] <lechner> it provided five seconds of comfort
[03:17:27] <zero> but it really doesn't belng in the Monad class since AMP
[03:17:56] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Reconnecting)
[03:18:20] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[03:18:25] <c_wraith> "pure" is a pretty bad name, too
[03:18:33] <zero> i like it
[03:18:42] <c_wraith> "neutral" is a much better description of what it does
[03:18:50] <zero> how so?
[03:18:59] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Client Quit)
[03:19:17] <c_wraith> all values in Haskell are pure.
[03:19:18] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[03:19:27] <nshepperd> it should be called 'burrito'
[03:19:34] <c_wraith> (barring a few unsafe ones)
[03:20:16] <zero> if you look at it that way
[03:21:48] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Client Quit)
[03:22:03] *** Joins: mud (~mud@user/kadoban)
[03:22:07] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:22:15] <lechner> for some, burritos are a point of no return. how about 'unwrap'?
[03:22:31] <zero> i like pure because i think of it as a "pure value" that can be turned into an arbitrary Functor
[03:23:09] <zero> so it's like an essence that you can turn into anything
[03:23:17] *** Quits: max22- (~maxime@2a01cb0883359800fd5419c5ccb7ba8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:23:28] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Client Quit)
[03:23:38] <zero> neutral is good too
[03:23:42] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:23:45] <zero> in this sense
[03:23:57] <zero> whatever, they're just words
[03:24:21] <lechner> thanks!
[03:24:52] *** Joins: alx741 (~alx741@157.100.93.160)
[03:28:12] <geekosaur> I think monad of no return is still pending. there are some backward compatibility things that still need to be done in ghc?
[03:28:40] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[03:29:20] <geekosaur> because at the moment just removing return from Monad will break a lot of code, so they need a way to mark it as deprecated
[03:29:48] *** Quits: oldsk00l (~znc@ec2-18-185-18-199.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[03:31:32] <zero> the Applicative instance for pairs is interesting. it's Monoid a => Applicative (a,) where pure = (mempty,) 
[03:31:36] <zero> did not know that
[03:32:28] <geekosaur> it has to be able to get a value for the other half of the pair from somewhere
[03:32:46] <zero> yup, makes sense
[03:33:15] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Reconnecting)
[03:33:31] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:33:46] <EvanR> when I first saw return and tried to understand it, I was confused because of its name
[03:34:06] <EvanR> also for 5 seconds
[03:34:42] <geekosaur> return not being what it sounded like was one of the first things I encountered in chatter after joining #haskell
[03:35:22] <EvanR> at least pure doesn't have that kind of baggage, and you immediately know it's not making something pure because everything is pure anyway
[03:35:37] <EvanR> because this is HAASSKEELLLLLLLL
[03:35:50] <zero> (:
[03:36:11] * zero unsafely performs IO
[03:36:19] <jackdk> :o
[03:36:20] <EvanR> also who the hell named pure that
[03:36:53] <zero> i'm more upset with "otherwise"
[03:36:58] <zero> way to long
[03:37:13] <geekosaur> frankly it's better than "t"
[03:37:53] <ephemient> you could always write  | True  if you want
[03:37:56] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Client Quit)
[03:38:11] <zero> not readable, not canonical
[03:38:12] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:39:01] <geekosaur> and they couldn't get away with reusing "else"
[03:39:11] <zero> i wonder if...
[03:39:14] <zero> brb
[03:39:30] *** Joins: benin (~benin@183.82.30.17)
[03:39:30] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Client Quit)
[03:39:46] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:40:01] <EvanR> otherwise is readable
[03:40:15] <EvanR> code is read more times than it's written... unless it's my code
[03:41:51] <lechner> so true
[03:41:58] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[03:43:55] *** Quits: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860) (Remote host closed the connection)
[03:44:08] *** Joins: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860)
[03:44:52] *** Joins: alx741 (~alx741@157.100.93.160)
[03:50:09] <lechner> Hi, how can i daisy-chain the SQL statements starting in line 179 please? the error is below.   Session    vs    Session ()        https://paste.tomsmeding.com/C8cs9CTz
[03:50:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:50:39] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Quit: Reconnecting)
[03:50:57] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[03:50:58] *** Quits: Guest8449 (1000@gabilgathol.bandrate.org) (Changing host)
[03:50:58] *** Joins: Guest8449 (1000@sourcemage/mage/beowulf)
[03:51:30] *** Guest8449 is now known as |beowulf|
[03:52:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:45] <geekosaur> you're misreading the error. you're passing it a Session (), it wants a Transaction ()
[03:53:22] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[03:55:02] *** Quits: Constraintegic (~DundiDund@ppp-212-114-229-145.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[03:56:08] *** Parts: zero (~z@user/zero) (haskell)
[03:56:21] *** Joins: zzz (~z@user/zero)
[03:56:44] <zzz> is there an extension to make shadowing illegal?
[03:57:24] <zzz> or "overloading", i think it's the most used term arond here
[03:58:20] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[03:58:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[03:58:59] <geekosaur> -Wname-shadowing -Werror ?
[03:59:22] <geekosaur> (someday it will be possible to write -Werror=name-shadowing, but not currently)
[03:59:24] <ephemient> or -Werror=name-shadowing if you don't want to turn on -Werror for everything else
[03:59:26] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[03:59:30] <ephemient> isn't it possible now?
[03:59:32] <geekosaur> oh, that does work now?
[03:59:38] <geekosaur> I thought it wasn't in ghc
[03:59:52] <zzz> nice, thanks!
[03:59:54] <dmj`>  ghc --show-options | grep shadow --color
[04:00:10] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[04:00:43] <ephemient> seems to work as I expect in GHC 8.10: > Main.hs:4:19: error: [-Wname-shadowing, -Werror=name-shadowing] This binding for ‘main’ shadows the existing binding …
[04:05:22] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:09:06] *** Quits: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860) (Remote host closed the connection)
[04:09:20] *** Joins: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860)
[04:10:49] <EvanR> wat, without shadowing how do I pretend I'm overwriting vars in do notation xD
[04:11:09] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[04:11:51] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Client Quit)
[04:13:04] <geekosaur> ew
[04:13:25] <EvanR> x, x', x'', x''', x'''' is too confusing!
[04:14:39] <ephemient> mdo x <- pure $ x + 1; pure x -- 🙃
[04:14:48] <pavonia> x, x', x'', x'3, x'4 etc.
[04:15:29] <EvanR> x_i x_i+1 x_i+2
[04:15:35] <EvanR> with editor support to show fancy
[04:16:00] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Ping timeout: 250 seconds)
[04:16:17] *** Joins: alx741 (~alx741@157.100.93.160)
[04:16:28] <EvanR> and language support to make i work
[04:17:21] <ephemient> > xᵢ + xᵢ₊₁ + xᵢ₊₂
[04:17:22] <lambdabot>  <hint>:1:9: error: lexical error at character '\8321'
[04:20:31] <pavonia> Why doesn't it accept general Unicode digits in identifiers?
[04:20:31] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[04:21:46] <EvanR> > let xᵢ = 'c' in xᵢ
[04:21:47] <lambdabot>  'c'
[04:21:53] <EvanR> \o/
[04:24:41] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[04:27:53] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::55f8)
[04:30:57] * zzz facepalms
[04:31:30] <zzz> i thought no-name-shadowing would give me the warnings
[04:31:47] <zzz> but it's name-shadowing
[04:32:13] <zzz> "no" refers to the warning
[04:32:30] <zzz> not to the shadowing
[04:35:18] *** Quits: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860) (Remote host closed the connection)
[04:35:32] *** Joins: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860)
[04:36:51] *** Joins: tommd (~tommd@75-164-130-101.ptld.qwest.net)
[04:36:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[04:37:14] *** Joins: alx741 (~alx741@157.100.93.160)
[04:37:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:39:51] *** Joins: notzmv (~zmv@user/notzmv)
[04:39:51] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[04:40:38] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[04:41:24] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:47:31] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:48:30] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:b0c0:5871:210d:15db) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:49:38] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[04:50:03] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:52:02] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[04:52:21] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[04:54:35] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[04:57:42] *** Joins: alx741 (~alx741@157.100.93.160)
[04:59:39] <zzz> why does `main = pure 7` print `7`?
[05:00:12] <EvanR> in ghci ?
[05:00:48] <tommd> It doesnt' in the context of a Haskell language specification or ghc-compiled program.
[05:01:00] <zzz> ah ok
[05:01:09] <zzz> so it's a ghci quirk
[05:01:09] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[05:01:23] <lechner> geekosaur: thanks! it took ages and is ugly, but it works. best of all, it makes sense & i'm in love with it somehow
[05:01:24] <EvanR> if you type main in ghci, it'll execute the IO action and return the result, and print it
[05:01:51] <EvanR> works with any IO action in ghci (that returns something that can Show)
[05:02:38] <EvanR> and if there's no Show... it prints nothing... apparently
[05:02:50] <zzz> EvanR: ok thanks. i understand how that's useful but it caused a moment of confusion for me
[05:02:58] <geekosaur> yes. this is documented in the ghc user manual
[05:03:26] <geekosaur> along with a way to change what typeclass it uses, so in principle you could use a prettyprinting typeclass instead
[05:03:45] <zzz> that's nice
[05:04:15] <geekosaur> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/ghci.html#using-a-custom-interactive-printing-function
[05:04:20] <EvanR> oh wow
[05:04:51] <ephemient> ghc should only cares what the type of main is in the main module when it's building an executable
[05:06:52] <geekosaur> yes, i only cares about the type of Main.main (or whatever entry point is specified by -main-is)
[05:11:54] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[05:12:19] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[05:13:40] *** Quits: tzh_ (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Remote host closed the connection)
[05:13:59] *** Joins: tzh_ (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[05:16:30] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:19:19] *** Joins: alx741 (~alx741@157.100.93.160)
[05:20:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[05:20:39] *** Joins: vysn (~vysn@user/vysn)
[05:22:40] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:23:57] <justsomeguy> Why should I care that kinds exist? What are they useful for?
[05:23:57] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[05:28:36] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Remote host closed the connection)
[05:28:51] *** Quits: drewolson (~drewolson@user/drewolson) (Quit: The Lounge - https://thelounge.chat)
[05:29:01] *** Joins: drewolson (~drewolson@user/drewolson)
[05:29:15] <EvanR> probably good when you get a kind mismatch, i.e. tried to use f on a when f doesn't take any arguments
[05:29:31] <EvanR> "don't care until it saves your ass"
[05:29:53] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:29:56] <pavonia> Kinds are to types what types are to values. So they are useful for "type-safe" type-level programming
[05:30:27] <EvanR> stops you from putting wrong number of arguments to a type constructor among other things
[05:30:47] <EvanR> guides you to what sort of things can be Functor, or Monad
[05:30:53] <EvanR> or what can't be
[05:32:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:32:53] <pavonia> What do we call the next level, btw, to get type-safe kinds?
[05:33:06] *** Quits: tired (~tired@user/tired) (Quit: /)
[05:33:09] <EvanR> sorts, then snaps, then crackles, then pops
[05:33:30] <EvanR> or cumulative hierarchy of types
[05:33:44] <pavonia> Ah right, I've heard of sorts before
[05:34:04] <pavonia> Is that already a thing in GHC?
[05:34:17] <EvanR> * :: BOX ?
[05:34:29] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[05:34:38] *** Joins: tired (~tired@user/tired)
[05:37:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:37:18] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[05:38:07] *** Joins: califax- (~califax@user/califx)
[05:38:30] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[05:41:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:41:28] *** califax- is now known as califax
[05:41:51] *** Joins: alx741 (~alx741@157.100.93.160)
[05:43:54] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[05:45:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[05:48:32] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[05:48:35] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[05:54:22] *** Quits: xff0x (~xff0x@2001:1a81:5294:3100:2847:70a9:c956:fedc) (Ping timeout: 250 seconds)
[05:55:07] *** Joins: neurocyte0917095 (~neurocyte@IP-094046087042.dynamic.medianet-world.de)
[05:55:08] *** Quits: neurocyte0917095 (~neurocyte@IP-094046087042.dynamic.medianet-world.de) (Changing host)
[05:55:08] *** Joins: neurocyte0917095 (~neurocyte@user/neurocyte)
[05:56:17] *** Joins: xff0x (~xff0x@2001:1a81:52d5:6400:be64:2647:1b3d:efbf)
[05:57:10] *** Quits: tzh_ (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:57:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:57:24] *** Quits: neurocyte091709 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[05:57:24] *** neurocyte0917095 is now known as neurocyte091709
[05:57:27] *** Joins: tzh_ (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[05:58:26] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[06:00:02] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[06:03:19] *** Quits: tzh_ (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:03:28] *** Joins: alx741 (~alx741@157.100.93.160)
[06:04:53] <EvanR> that might have been removed to make way for dependent haskell
[06:05:13] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[06:06:27] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[06:08:32] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:13:00] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[06:21:00] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:22:15] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:24:42] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:26:21] <jackdk> yeah the axiom Type :: Type was added by the extension -XTypeInType
[06:27:31] <jackdk> the extension is now deprecated because it's always-on, now that the rework in GHC is solid
[06:28:05] <EvanR> the unreasonable effectiveness of Type in Type
[06:28:29] <EvanR> hey, martin lof originally defined it so
[06:31:59] <EvanR> can I take a moment to complement the base data structure Data.List.NonEmpty, it is surprisingly nice and somehow isn't hell to integrate with other stuff
[06:32:14] <EvanR> unlike anything other than Int for integers
[06:33:00] <EvanR> also it's required by sconcat
[06:39:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:43:51] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[06:44:32] *** Joins: monochrom (trebla@216.138.220.146)
[06:45:04] *** Quits: benin (~benin@183.82.30.17) (Ping timeout: 250 seconds)
[06:46:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[06:52:06] *** Joins: benin (~benin@183.82.30.17)
[06:52:41] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[06:53:45] *** Quits: tommd (~tommd@75-164-130-101.ptld.qwest.net) (Ping timeout: 256 seconds)
[07:02:10] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[07:03:11] *** Joins: nf (~n@monade.li)
[07:05:04] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:05:04] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:04] *** finn_elija is now known as FinnElija
[07:05:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:08:29] *** Quits: td_ (~td@muedsl-82-207-238-062.citykom.de) (Ping timeout: 256 seconds)
[07:08:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[07:10:08] *** Joins: td_ (~td@muedsl-82-207-238-133.citykom.de)
[07:12:59] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:13:23] *** nf is now known as yoneda
[07:13:41] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:55] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:17:08] *** Quits: burnside_ (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[07:17:41] *** Joins: burnsidesLlama (~burnsides@client-8-72.eduroam.oxuni.org.uk)
[07:21:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:21:54] *** Quits: burnsidesLlama (~burnsides@client-8-72.eduroam.oxuni.org.uk) (Ping timeout: 250 seconds)
[07:24:15] <zzz> sorts snaps crackles pops that's a joke, right? i believe anything at this point
[07:30:45] *** Joins: yauhsien_ (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[07:30:45] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:39:26] <EvanR> according to a physics book I read, the derivative of acceleration is jerk. The derivative of jerk is snap. The derivative of snap is crackle. And the derivative of crackle is pop
[07:39:43] <EvanR> so the joke is on us
[07:43:03] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:46:59] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:47:02] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:c8a9:440b:1eee:6f25)
[07:54:11] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[07:56:17] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::55f8) (Ping timeout: 240 seconds)
[07:58:54] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:59:48] <zzz> https://en.m.wikipedia.org/wiki/Fourth,_fifth,_and_sixth_derivatives_of_position
[08:00:03] *** Quits: meer (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[08:00:41] <zzz> great
[08:06:26] *** Joins: Morrow[m] (~morrowmma@2001:470:69fc:105::1d0)
[08:12:32] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:14:18] <EvanR> Char :: *
[08:14:21] <EvanR> * :: BOX
[08:14:30] <EvanR> BOX :: WithAFox
[08:14:41] <EvanR> WithAFox :: GreenEggsAndHam
[08:16:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:17:34] *** Quits: yauhsien_ (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:18:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:18:07] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[08:28:51] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[08:28:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:32:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:33:03] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:c8a9:440b:1eee:6f25) (Remote host closed the connection)
[08:33:52] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:5434:4d02:a0f8:4397)
[08:44:52] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[08:47:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[08:50:02] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[08:50:38] *** [_] is now known as [itchyjunk]
[08:54:17] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[08:57:25] *** Joins: fef (~thedawn@user/thedawn)
[08:57:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:00:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:05:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:05:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:05:37] *** Joins: wroathe (~wroathe@user/wroathe)
[09:07:12] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 250 seconds)
[09:07:12] *** Quits: gentauro (~gentauro@user/gentauro) (Read error: Connection reset by peer)
[09:09:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:10:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:10:57] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Ping timeout: 240 seconds)
[09:12:48] *** Joins: gentauro (~gentauro@user/gentauro)
[09:22:24] *** Joins: mbuf (~Shakthi@110.225.247.38)
[09:25:02] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[09:28:47] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[09:30:12] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Client Quit)
[09:38:17] <zzz> how does Solo differ from Identity?
[09:39:16] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:40:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:41:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Client Quit)
[09:41:44] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[09:45:48] *** Quits: mbuf (~Shakthi@110.225.247.38) (Quit: Leaving)
[09:46:10] <ephemient> zzz, https://hackage.haskell.org/package/base-4.16.0.0/docs/Data-Tuple.html#t:Solo explains
[09:46:31] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[09:47:41] <zzz> seems equivalent to me
[09:48:13] <zzz> oh nvm
[09:48:25] <zzz> Identity is a newtype
[09:53:39] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:5434:4d02:a0f8:4397) (Remote host closed the connection)
[09:58:56] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:01:52] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:03:20] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:07:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:09:12] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:d86c:41cf:1829:367e)
[10:13:30] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[10:17:17] *** Quits: shapr (~user@2601:7c0:c37c:46d0:fdf3:f0cd:30b3:4860) (Ping timeout: 240 seconds)
[10:22:02] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[10:22:54] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:d7a:54de:7875:5faa)
[10:31:20] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:32:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:32:54] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[10:35:32] *** Joins: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[10:35:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:38:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[10:38:09] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[10:38:12] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 250 seconds)
[10:40:16] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[10:43:07] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[10:44:24] *** Joins: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738)
[10:47:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:52:12] *** Parts: travv0 (sid293381@user/travv0) ()
[10:56:49] *** Joins: ksqsf (~user@134.209.106.31)
[11:11:12] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[11:21:47] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[11:22:32] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[11:24:24] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:31:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:31:55] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[11:35:09] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:39:55] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[11:41:03] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[11:46:40] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[11:47:20] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:47:26] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[11:50:36] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[11:51:29] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[11:53:17] *** Joins: Constraintegic (~DundiDund@ppp-212-114-229-130.dynamic.mnet-online.de)
[11:55:05] *** Joins: ysh (sid6017@id-6017.ilkley.irccloud.com)
[11:56:32] *** Joins: acidsys (~LSD@2.lsd.systems)
[11:56:38] *** Quits: incertia (~incertia@24.42.241.219) (Quit: ZNC 1.7.5 - https://znc.in)
[11:56:58] *** Joins: incertia (~incertia@24.42.241.219)
[12:05:30] *** Joins: ksqsf (~user@134.209.106.31)
[12:10:32] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[12:11:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:12:17] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[12:13:24] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[12:14:17] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[12:15:27] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[12:23:33] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 256 seconds)
[12:24:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[12:26:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[12:27:33] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[12:30:20] *** Joins: ksqsf (~user@134.209.106.31)
[12:30:26] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[12:31:56] *** Joins: notzmv (~zmv@user/notzmv)
[12:32:54] *** Quits: ksqsf (~user@134.209.106.31) (Remote host closed the connection)
[12:33:11] *** Joins: ksqsf (~user@134.209.106.31)
[12:37:14] *** Joins: _ht (~quassel@2a02:a468:b619:1:b64b:7088:4c77:6428)
[12:46:57] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:59da:fcd2:abfb:4d1d)
[12:46:59] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[12:47:18] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:47:38] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:48:11] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Quit: Leaving)
[12:48:58] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[12:49:53] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[12:52:02] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:53:32] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[12:54:18] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:54:34] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[12:54:39] *** Joins: jinsun (~quassel@user/jinsun)
[12:58:03] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:02:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:798d:4129:9f07:fe5b)
[13:02:39] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[13:05:37] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:d9b7:23d6:79dd:2e64) (Ping timeout: 240 seconds)
[13:07:49] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[13:08:25] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[13:12:24] *** Quits: jinsun (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[13:12:35] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[13:13:49] *** Joins: jinsun (~quassel@user/jinsun)
[13:15:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[13:17:51] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:d86c:41cf:1829:367e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:05] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:20:39] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:20:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:21:27] *** Joins: cosimone (~user@93-47-231-31.ip115.fastwebnet.it)
[13:27:48] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:58ff:45a7:b03e:c3bc)
[13:29:50] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[13:30:08] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:31:07] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[13:33:39] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:34:02] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[13:36:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[13:37:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:37:22] *** Joins: mmhat (~mmh@55d4c3c9.access.ecotel.net)
[13:43:07] *** Joins: Hildegunst (~luc@80.248.12.109.rev.sfr.net)
[13:43:17] *** Quits: Hildegunst (~luc@80.248.12.109.rev.sfr.net) (Client Quit)
[13:45:34] *** Joins: spaceseller (~spacesell@31.147.205.13)
[13:45:49] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[13:57:20] *** Quits: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Quit: Leaving)
[13:57:47] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[13:57:54] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:00:24] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[14:01:11] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:01:23] *** Joins: Hildegunst (~luc@80.248.12.109.rev.sfr.net)
[14:03:33] *** Quits: spaceseller (~spacesell@31.147.205.13) (Quit: Leaving)
[14:10:05] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:11:11] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[14:11:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:12:13] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[14:12:54] *** Lord_of_Life_ is now known as Lord_of_Life
[14:13:12] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[14:13:53] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:310a:887:a8c8:ed35)
[14:17:51] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:19:08] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[14:19:55] *** Joins: acidsys (~LSD@2.lsd.systems)
[14:20:09] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[14:24:56] *** Joins: max22- (~maxime@2a01cb0883359800c0130ad75708c925.ipv6.abo.wanadoo.fr)
[14:26:20] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:31:02] *** Joins: alx741 (~alx741@157.100.93.160)
[14:34:05] *** Joins: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net)
[14:34:32] *** Quits: Hildegunst (~luc@80.248.12.109.rev.sfr.net) (Quit: leaving)
[14:35:55] *** Joins: kupi_ (uid212005@id-212005.hampstead.irccloud.com)
[14:37:53] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[14:40:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[14:42:49] *** Joins: fef (~thedawn@user/thedawn)
[14:52:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:56:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:59:38] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:00:37] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[15:00:40] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[15:01:50] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:02:37] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[15:02:56] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:03:29] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[15:08:17] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[15:10:18] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[15:10:20] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[15:11:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:11:37] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:d7a:54de:7875:5faa) (Ping timeout: 240 seconds)
[15:12:10] *** kupi_ is now known as kupi
[15:12:10] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[15:18:33] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:e892:9f45:4e01:f54f)
[15:27:13] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:27:49] *** kupi is now known as Guest6690
[15:33:48] *** Joins: Hildegunst (~luc@80.248.12.109.rev.sfr.net)
[15:34:31] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:34:48] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[15:36:00] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:a006:e9af:80b4:2cf)
[15:36:56] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[15:47:32] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[15:50:02] *** Quits: Hildegunst (~luc@80.248.12.109.rev.sfr.net) (Quit: leaving)
[15:54:17] *** Joins: __monty__ (~toonn@user/toonn)
[15:57:02] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[16:03:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[16:08:54] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[16:13:27] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[16:13:36] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 250 seconds)
[16:15:31] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[16:15:55] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[16:17:13] *** Joins: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net)
[16:20:04] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[16:21:25] *** Quits: max22- (~maxime@2a01cb0883359800c0130ad75708c925.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:22:07] *** Quits: yauhsien (~yauhsien@61-231-24-192.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[16:22:29] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[16:24:30] *** Joins: FragByte (~christian@user/fragbyte)
[16:27:24] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Changing host)
[16:27:24] *** Joins: nunggu (~q@user/nunggu)
[16:31:01] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[16:32:12] *** Joins: fef (~thedawn@user/thedawn)
[16:32:20] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[16:34:23] *** Joins: FragByte (~christian@user/fragbyte)
[16:35:05] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[16:36:17] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[16:38:48] *** Joins: Guest1715 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[16:40:02] *** Quits: Constraintegic (~DundiDund@ppp-212-114-229-130.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[16:44:29] <Inst> haskell is just painful
[16:44:29] <Inst> :(
[16:45:28] <Inst> okay, even weirder stuff since very few people do winhaskell
[16:46:08] <Inst> i'm trying to figure out if hready can be used to detect keypresses (answer is no)
[16:46:18] *** Quits: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738) (Quit: Leaving)
[16:46:41] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:46:51] <Inst> but, when I try to do a function application via fmap and bool into io handle, I get false. When I try to do the same via lambda case, I get true
[16:49:42] *** Quits: atwm (~atwm@19-193-28-81.ftth.cust.kwaoo.net) (Remote host closed the connection)
[16:53:15] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a006:e9af:80b4:2cf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:54:26] <xsperry> Inst, you can foreign import c_getch and c_kbhit from conio.h
[16:55:01] <Inst> i'll try haskeline first, i was told to try that
[16:58:35] *** Quits: APic (apic@apic.name) (Quit: [TLS] Client upgrade)
[16:58:47] *** Joins: APic (apic@apic.name)
[17:00:07] <xsperry> s/c_getch/getch
[17:01:02] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 240 seconds)
[17:02:01] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[17:02:49] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:04:23] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:04:39] <sha296> Hello
[17:05:55] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Client Quit)
[17:06:42] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2032:bbef:e5a8:56de)
[17:10:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:11:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:11:43] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:11:57] <sha296> Hi
[17:12:30] <xsperry> hi
[17:13:18] <sha296> I am a beginner when it comes to Haskell
[17:13:19] *** Quits: Guest1715 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[17:13:42] <sha296> I am looking forward to benefit from you people
[17:16:55] <polyphem> sha296: whats your background, and where are you at on your journey into haskell ?
[17:17:03] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::55f8)
[17:17:47] <sha296> My background is in discrete maths and theoretical CS (algorithms specifically)
[17:18:02] <sha296> Currently, I am looking into some books
[17:18:06] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[17:18:20] <sha296> How does one quote?
[17:18:28] <sha296> I am using hexchat?
[17:19:32] <kitzman> Hm, beginner question: how can a type be in scope, but its data constructor not?
[17:20:09] *** Joins: FragByte (~christian@user/fragbyte)
[17:20:12] <polyphem> kitzman: a module exports a typename but not its constructors
[17:20:53] <polyphem> thats how encapsulation is done in haskell
[17:20:59] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[17:21:09] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Quit: Leaving)
[17:21:31] <polyphem> usually there are also some "smart constructors" i.e. functions that construct the ype for you in scope
[17:21:41] <kitzman> oh. i see - so i would have to manipulate the struct just inside the module (and probs this will be beneficial for my code as well)
[17:22:17] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:22:21] <polyphem> is it your own type/module ?
[17:22:44] <kitzman> yes. between the Endpoint and the Service layer.
[17:22:56] <geekosaur> sha296, irc doesn't have built-in quoting. you might want to try matrix.org as a more modern interface to irc
[17:23:04] <geekosaur> should be the same room name (#haskell)
[17:23:16] <sha296> Oh, I see
[17:23:23] <polyphem> in the module export list you exportet the type , and not its constructors
[17:23:30] <sha296> I do have matrix but I prefer xmpp
[17:24:44] <polyphem> module ServiceLayer (MyType) where ... exports only the type, wheras module ServiceLayer (MyType(..)) where ... exports also the constructors
[17:24:47] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Client Quit)
[17:25:01] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:25:32] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:25:35] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[17:25:51] <kitzman> polyphem: thank you, now I see my mistake
[17:26:24] <polyphem> not necessarily a mistake, it depends what you want to encapsulate/export ...
[17:26:50] <kitzman> yeah, I think it makes sense to do this in this particular case
[17:27:15] <polyphem> kitzman: thats your design desicion to make :)
[17:27:16] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Ping timeout: 250 seconds)
[17:27:25] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[17:27:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:28:15] <geekosaur> not aware of any xmpp gateways, sorry
[17:28:30] <geekosaur> just matrix and irccloud
[17:28:48] <polyphem> kitzman: check out "smart constructors" to get a broader idea ... usefull
[17:29:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:29:28] *** Joins: FragByte (~christian@user/fragbyte)
[17:30:24] *** Quits: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net) (Remote host closed the connection)
[17:30:47] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[17:30:50] *** Parts: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Leaving)
[17:31:03] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:31:21] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[17:31:29] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Quit: Leaving)
[17:31:45] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[17:32:12] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[17:32:42] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:36:20] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[17:37:46] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[17:40:13] *** Joins: max22- (~maxime@2a01cb08833598007a0a24004d47b92d.ipv6.abo.wanadoo.fr)
[17:41:04] <kitzman> thank you I will ^^
[17:41:39] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[17:43:00] *** Joins: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738)
[17:43:12] <zzz> how does `length = sum . map (const 1)` differ from the "normal" way or is it just a matter of style?
[17:43:29] <zzz> s/^how//
[17:43:48] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-157.elisa-laajakaista.fi)
[17:44:25] <polyphem> zzz: sum itself is a fold , you are adding another tracersal of the list by map
[17:44:44] <polyphem> *traversal
[17:46:38] <zzz> isn't it subject to fusion?
[17:46:48] <polyphem> so instead of just folding , you are folding after mapping , which might get optimized 
[17:47:23] <zzz> ah yes, i'm assuming optimization
[17:47:29] *** Quits: val-host (~val-host@2a02:2f0f:9108:b00:6891:37fc:a7bd:3738) (Client Quit)
[17:47:47] <polyphem> i guess , but i really dont know much about optimization , i guess so
[17:48:54] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Quit: Leaving)
[17:49:38] <zzz> i expect this kind of optimization to be trivial but am also not sure
[17:50:29] <polyphem> its a "readable" implementation which is good IMO
[17:52:00] <Sqaure> anyone know if there exist some trick (using TH presumably) to turn servant "Api" types into typeclasses. I find their approach gives horrible error messages. Every type error become a "Api type" error.  
[17:55:52] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (Read error: Connection reset by peer)
[17:59:32] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[18:00:10] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:04:43] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:05:03] *** Quits: hololeap (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[18:06:24] *** Joins: hololeap (~hololeap@user/hololeap)
[18:07:57] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2032:bbef:e5a8:56de) (Ping timeout: 240 seconds)
[18:10:16] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[18:18:32] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[18:18:49] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-084.ewe-ip-backbone.de)
[18:20:23] *** Quits: max22- (~maxime@2a01cb08833598007a0a24004d47b92d.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[18:21:36] <carbolymer> what was the name of the GHC extension which was disabling lazines? something like StrictHaskell
[18:23:00] <carbolymer> Strict
[18:23:04] <yushyin> carbolymer: https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/strict.html
[18:24:00] <geekosaur> or StrictData. note that using -XStrict means you can't use most of the Prelude, which relies on laziness
[18:24:24] *** Quits: Guest6690 (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:25:50] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[18:31:20] <carbolymer> thx
[18:32:01] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Quit: Leaving)
[18:34:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[18:34:38] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:35:58] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:38:06] *** Joins: xkuru (~xkuru@user/xkuru)
[18:40:15] *** Joins: jkaye (~jkaye@2601:281:8300:7530:ebdf:216a:24ec:ae90)
[18:43:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[18:43:32] *** Quits: xff0x (~xff0x@2001:1a81:52d5:6400:be64:2647:1b3d:efbf) (Ping timeout: 250 seconds)
[18:44:19] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[18:52:40] *** Joins: Everything (~Everythin@37.115.210.35)
[18:53:09] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[18:53:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:54:37] *** Joins: nunggu (~q@user/nunggu)
[18:57:23] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:57:38] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[18:57:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[18:57:57] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:58:47] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[18:59:10] *** Joins: nunggu (~q@user/nunggu)
[19:00:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:00:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:00:51] *** Joins: wroathe (~wroathe@user/wroathe)
[19:02:59] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[19:04:16] *** Joins: xff0x (~xff0x@2001:1a81:52d5:6400:be64:2647:1b3d:efbf)
[19:05:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:16:51] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[19:21:02] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[19:21:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:21:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:21:15] *** Joins: wroathe (~wroathe@user/wroathe)
[19:26:23] <cheater> people still haven't made a strict prelude?
[19:26:50] *** yehoshua[m] is now known as Yehoshua
[19:27:35] *** Quits: Yehoshua (~yehoshuay@2001:470:69fc:105::1:593f) (Quit: Reconnecting)
[19:27:48] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[19:27:49] *** Joins: Yehoshua (~yehoshuay@2001:470:69fc:105::1:593f)
[19:28:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:28:42] *** Quits: Yehoshua (~yehoshuay@2001:470:69fc:105::1:593f) (Client Quit)
[19:28:56] *** Joins: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f)
[19:30:12] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[19:31:17] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:31:36] *** Joins: nunggu (~q@user/nunggu)
[19:31:37] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:32:29] *** Quits: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f) (Client Quit)
[19:32:32] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:32:44] *** Joins: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f)
[19:32:50] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:33:22] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[19:35:36] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[19:35:49] <Sqaure> I guess im not seeing the obvious but i had to create this function to convert my Servant app actions to Servants context : eitherToHandler :: (e -> ServantErr) -> Either e a -> Handler a ; eitherToHandler f = Handler . withExceptT f . liftEither
[19:37:27] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[19:39:52] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 250 seconds)
[19:41:34] *** Quits: random_ (~random@185.219.68.251) (Read error: Connection reset by peer)
[19:42:16] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[19:42:37] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:42:58] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:f89b:2c73:97b1:7ba3) (Remote host closed the connection)
[19:43:17] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:9952:728:f039:79c2)
[19:45:26] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:45:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:49:23] *** Quits: LukeHoersten (~LukeHoers@user/lukehoersten) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:54:55] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[19:56:39] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[19:59:18] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Remote host closed the connection)
[20:00:59] <sprout> > nil
[20:01:00] <lambdabot>  error: Variable not in scope: nil
[20:01:19] <sprout> > []
[20:01:21] <lambdabot>  []
[20:01:27] <sprout> > head []
[20:01:29] <lambdabot>  *Exception: Prelude.head: empty list
[20:04:45] *** Joins: shapr (~user@2601:7c0:c37c:46d0:2bce:110:d6ba:469e)
[20:10:42] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[20:11:38] *** cjay- is now known as cjay
[20:13:49] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[20:17:27] *** Joins: spaceseller (~spacesell@31.147.205.13)
[20:19:31] <zzz> why would you want a strict prelude?
[20:20:53] *** Quits: spaceseller (~spacesell@31.147.205.13) (Client Quit)
[20:20:56] <EvanR> what even is a strict prelude
[20:23:32] <zzz> i never got this fixation on strictness
[20:24:45] <zzz> haskell is *the* lazy language, and actually does it well. why do people keep trying to make it strict?
[20:24:48] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (Quit: WeeChat 3.0)
[20:25:12] <jkaye> It's very easy to leak memory unintentionally with lazy semantics by default. It can be hard to find these leaks, and similarly hard to reason about them
[20:25:17] <geekosaur> because figuring out where laziness is / isn't appropriate is hard
[20:25:25] <jkaye> So, it becomes an issue for a lot of people, and they look for a solution
[20:25:41] <jkaye> These problems are well-documented and (I think) well agreed upon within the community at large
[20:25:51] <geekosaur> that said, I kinda feel like you lose the point of purity, and thereby the point of Haskell, if you lose laziness
[20:26:27] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[20:26:46] <Rembane> I'd prefer tooling that helped me with finding where my code has the wrong amount of laziness rather than throwing it all out.
[20:27:54] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:27:58] <EvanR> a visualizer of the program-in-motion, tony stark style
[20:28:11] <EvanR> you point at a hologram in space and see the space leaking in real time
[20:28:48] <jkaye> Rembane, I tend to agree. IF it somehow became easier to work with/reason about I think a lot of the questions/complaints would melt. I'd use a tool like that for sure
[20:29:09] <EvanR> ghc-vis is good but not that
[20:30:03] <geekosaur> the ghc devs and folks working woith them are still wokring on tooling based around the eventlog that is supposed to help with that
[20:30:14] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[20:30:18] <Rembane> geekosaur: That's really cool. 
[20:30:19] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:30:55] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:30:57] *** Joins: Constraintegic (~DundiDund@ppp-212-114-229-130.dynamic.mnet-online.de)
[20:32:08] <geekosaur> that said, it is notable that even ghc devs have big problems finding and reasoning about laziness leaks
[20:32:22] <geekosaur> but I have to think turning Haskell into a worse OCaml is not the solution
[20:33:08] <Rembane> Maybe laziness leaks are really hard to keep track of? 
[20:34:00] <geekosaur> they are. but that's what the eventlog is about
[20:35:26] <EvanR> if you're expecting to get away with very little heap usage, you can turn the heap limit low which acts like gutter bumpers during testing. But real code might need to use a bunch of space at some point, and not be a bug
[20:35:49] <EvanR> how does a tool know the diff
[20:35:49] *** Quits: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[20:35:54] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:36:11] <jkaye> One super naive way would be to see if the memory is being used by thunks vs. values
[20:36:34] <jkaye> 10Gb of thunks is probably not what someone meant to do. Operative word being probably, because I'm sure there are situations where that is intended
[20:36:56] <jkaye> But for the type of thing that I'm referring to, it would be strategies similar to that
[20:36:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[20:37:07] <jkaye> I'm sure smarter GHC people could come up with much better ways
[20:38:20] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[20:38:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:43:08] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-131-125.cust.tzulo.com)
[20:45:37] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:e892:9f45:4e01:f54f) (Ping timeout: 240 seconds)
[20:47:42] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[20:47:58] <geekosaur> there's some refinements to that, like you can ignore thunks that never make it out of the nursery
[20:48:02] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[20:49:43] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[20:52:15] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[20:52:21] <dmj`> Csaba's STG interpreter can detect space leaks 
[20:52:41] *** Quits: lechner (~lechner@debian/lechner) (Quit: WeeChat 3.0)
[20:54:21] *** Joins: lechner (~lechner@debian/lechner)
[20:55:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:57:33] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:59:24] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[20:59:47] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[21:01:36] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[21:02:43] *** Joins: burnsidesLlama (~burnsides@dhcp168-012.wadham.ox.ac.uk)
[21:05:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:05:07] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[21:08:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[21:08:32] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.3)
[21:09:32] *** Quits: mud (~mud@user/kadoban) (Read error: Connection reset by peer)
[21:09:58] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:10:30] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[21:10:37] *** Joins: mud (~mud@user/kadoban)
[21:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[21:13:02] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[21:16:07] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[21:21:16] *** Quits: benin (~benin@183.82.30.17) (Ping timeout: 250 seconds)
[21:22:28] *** Joins: benin (~benin@183.82.30.17)
[21:22:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:24:43] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:58ff:45a7:b03e:c3bc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:21] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[21:27:33] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[21:31:03] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[21:33:00] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[21:33:39] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:35:05] *** Joins: max22- (~maxime@2a01cb0883359800342882a7243a01c5.ipv6.abo.wanadoo.fr)
[21:38:00] *** Joins: machinedgod (~machinedg@24.105.81.50)
[21:42:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:43:53] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:45:57] *** Quits: jkaye (~jkaye@2601:281:8300:7530:ebdf:216a:24ec:ae90) (Ping timeout: 240 seconds)
[21:50:29] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[21:51:32] *** Joins: Shiranai (~Shiranai@190.237.13.17)
[21:54:54] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[21:55:05] <Shiranai> Hello, I want to do "popping" on the natural numbers, i.e., `a  = [1..]`, `a' = pop 1 a`, `a' == [1,3,4,..]`. It doesn't have to be lists, but I want this popping functionality, how to implement this?
[21:55:55] <dsal> :t splitAt
[21:55:56] <lambdabot> Int -> [a] -> ([a], [a])
[21:56:04] <dsal> splitAt 1 [1..10]
[21:56:09] <dsal> > splitAt 1 [1..10]
[21:56:10] <lambdabot>  ([1],[2,3,4,5,6,7,8,9,10])
[21:56:44] <EvanR> so this pop is more like a "lookup delete"
[21:56:56] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[21:56:57] <EvanR> Data.Map and Data.IntMap have that
[21:57:29] <EvanR> for infinite number of natural numbers, maybe use a Data.Set to track which numbers you already deleted
[21:59:30] <dsal> Yeah, doing it with lists is probably not cheap.
[21:59:32] <EvanR> a co-finite set represented by it's finite complement
[21:59:36] <dsal> > second (drop 1) $ splitAt 1 [1..10]
[21:59:37] <lambdabot>  ([1],[3,4,5,6,7,8,9,10])
[21:59:44] <EvanR> its*
[21:59:50] <sofviic[m]> the naive solution would probs be `pop n l = take n l ++ drop (n+1) l`
[21:59:53] <sofviic[m]> s/naive/naïve/
[22:00:24] <EvanR> oh, was that 1 the index of what to lookup-delete
[22:01:02] <EvanR> a jenga stack
[22:01:33] <dsal> > let pop x = uncurry (<>) . second (drop 1) . splitAt x in    pop 1  [1..10]
[22:01:35] <lambdabot>  [1,3,4,5,6,7,8,9,10]
[22:02:01] <EvanR> it's cheap if you stay near the top of the stack / list
[22:04:27] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[22:04:54] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[22:05:37] *** Joins: evocatus (~evocatus@62.182.77.224)
[22:05:39] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:05:43] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[22:06:00] <sofviic[m]>  * the naïve solution would probs be `pop n l = take n l ++ drop (n+1) l`,
[22:06:00] <sofviic[m]> without the `l` argument: `pop n = ((<>) . take n) <*> (drop (n+1))`.
[22:12:17] *** Joins: econo (uid147250@user/econo)
[22:20:17] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[22:22:41] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:24:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:26:58] <Shiranai> great, thanks guys
[22:29:54] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[22:30:19] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[22:34:21] <EvanR> if haskell pops all the boards from stack of theseus and replaces them, is it still the same stack
[22:34:50] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[22:36:32] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[22:38:43] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[22:39:37] <Shiranai> no because pushing the values into the stack again probably made them get allocated in a different part in memory :^)
[22:40:13] <EvanR> isn't the point of a ship to move around!
[22:40:20] <monochrom> hahaha
[22:41:40] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:42:00] <monochrom> But what about the point of a stack? :)
[22:44:48] <EvanR> many languages feature generators that output another value on demand, it's funny haskell gets "put value back into generator" for free, something often not in the generator API
[22:45:35] <EvanR> also KLAX was awesome
[22:46:06] <EvanR> a game made for implementing as haskell list
[22:51:55] *** Quits: Kaiepi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[22:52:49] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[22:53:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[22:53:17] *** Joins: fef (~thedawn@user/thedawn)
[22:55:00] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[22:55:33] *** Joins: Erutuon (~Erutuon@user/erutuon)
[22:57:17] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:01:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[23:01:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:01:51] *** Joins: califax (~califax@user/califx)
[23:02:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:06:12] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[23:16:24] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[23:16:56] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:17:16] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:17:38] *** Joins: fef (~thedawn@user/thedawn)
[23:18:36] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[23:18:36] *** Quits: xstill- (xstill@fimu/xstill) (Quit: Ping timeout (120 seconds))
[23:21:51] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[23:21:57] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:24:08] *** Joins: xstill- (xstill@fimu/xstill)
[23:24:29] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:1926:260a:1924:1e2)
[23:24:30] *** Joins: pavonia (~user@user/siracusa)
[23:24:37] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[23:25:46] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:25:54] *** Joins: zaquest (~notzaques@5.130.79.72)
[23:32:22] *** Joins: xsarnik (xsarnik@lounge.fi.muni.cz)
[23:33:54] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:35:27] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:35:27] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:37:14] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:38:29] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:41:25] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[23:41:28] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[23:42:37] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[23:46:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:46:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:46:14] *** Joins: wroathe (~wroathe@user/wroathe)
[23:50:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:52:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:52:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:58:51] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Ping timeout: 256 seconds)
[23:58:51] *** Quits: xstill- (xstill@fimu/xstill) (Ping timeout: 256 seconds)
