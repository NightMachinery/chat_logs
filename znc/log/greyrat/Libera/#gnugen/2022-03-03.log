[16:02:39] <Orbstheorem> For those who play factorio: When a facility is disabled through an automation wire, hovering over the disabled building shows: disabled by automation
[16:04:10] <Orbstheorem> In general: for any expert system, a user may wonder why a given variable resolved or set of variables (be a string) has a negative value (or any given value).
[16:04:43] <Orbstheorem> Disabled by automation is the weakest level of information saying: This variable is not free, and was set to false.
[16:05:42] <Orbstheorem> Are there any frameworks for reasoning about traceability?
[16:06:58] <Orbstheorem> Moreover, what about interactive solving, where given a CNF, a user can heuristically find a solution.
[16:26:55] <afontain[m]> To be honest, Factorio did a wonderful job at providing feedback
[16:27:00] <afontain[m]> I'm impressed
[16:33:10] <Orbstheorem> I would love to be able to query why a given condition in the NixOS module system did not fire.
[16:33:33] <afontain[m]> Anyone knows if there is a way to tell git to treat a branch as read-only?
[16:33:49] <Orbstheorem> A branch is a pointer.
[16:34:00] <Orbstheorem> What do you mean by read-only?
[16:34:09] <afontain[m]> for newbies, adding a commit on master is really easy, and then they're stuck
[16:34:23] <Orbstheorem> `git push HEAD:my-newbranch`?
[16:34:27] <afontain[m]> like, "don't touch that"
[16:34:45] <jonas[m]> afontain[m]: until you do `git reset HEAD~1`
[16:34:58] <Orbstheorem> Don't update a pointer? No, there's nothing for that.
[16:35:00] <afontain[m]> I mean, I know how to deal with that
[16:35:28] <afontain[m]> but someone that got in my git beginers talk doesn't
[16:35:29] <afontain[m]> s/beginers/beginners/
[16:35:49] <Orbstheorem> On the other hand, if you checkout a remote branch (not a new local branch tracking a given remote branch), the reference will not be updated upon commits since you will be in detached mode.
[16:36:04] <afontain[m]> like, I know about git fetch and git reset
[16:36:06] <jonas[m]> yeah I get it... "commit-protection" for a specific branch... not sure if something like that exists
[16:36:31] <Orbstheorem> You could add a commit hook, but my gut tells me it's only gonna bring problems...
[16:36:32] <afontain[m]> but someone who never used git makes a commit, master got forward, and then they can't push
[16:37:03] <Orbstheorem> An easier solution would be to add "how to push to a different branch" to your talk.
[16:38:05] <jonas[m]> maybe this: https://stackoverflow.com/questions/40462111/prevent-commits-in-master-branch#40465455 ?
[16:41:10] <afontain[m]> Orbstheorem: yeah, but then they borked master forever and I have to tell them heeeeh maybe use git fetch and then use origin/master but that's a detached head and huh it's complicated, or teach them about git reset which is a possibly quite dangerous command
[16:41:55] <Orbstheorem> Right.
[16:45:36] <jonas[m]> boils down to "with great power comes great responsibility"
[16:46:14] <jonas[m]> git is powerful and to use it efficiently you need to understand how it works (at some point)
[16:54:00] <Orbstheorem> Sounds like vim.
[17:01:04] *** Quits: sunyibo (~dorsch@2a04:52c0:101:443::) (*.net *.split)
[17:01:04] *** Quits: ayekat (~ayekat@user/ayekat) (*.net *.split)
[17:02:29] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[17:02:29] *** Joins: ayekat (~ayekat@user/ayekat)
[17:04:22] <Notkea> need to do a git RESET% speedrun
[17:04:37] <Orbstheorem> git rewrite-author% x)
[17:19:55] *** Joins: Guest34 (~Guest34@178.197.221.167)
[17:20:33] <Guest34> Serait-ce possible de transmettre la séance de ce soir par zoom.
[17:20:34] <Guest34> merci, salutation
[17:20:42] *** Quits: Guest34 (~Guest34@178.197.221.167) (Client Quit)
[17:22:23] <afontain[m]> ninja
[17:24:25] <Anyone[m]> <Orbstheorem> "Sounds like vim." <- My one and only God 🙏🏼
[17:24:52] <typedef[m]> Emacs D:
[17:25:27] <Anyone[m]> 😱
[17:26:13] * Orbstheorem 's opinion is as long you're efficient using it
[17:26:29] <typedef[m]> C-x M-c M-butterfly
[17:28:29] <Anyone[m]> I have no knowledge to fathom this language 
[18:32:03] <Orbstheorem> /ff ~on of my
[18:34:55] *** Joins: Guest12 (~Guest12@178.197.221.167)
[18:40:09] *** Quits: Guest12 (~Guest12@178.197.221.167) (Ping timeout: 256 seconds)
[19:30:21] *** Quits: LucasCrijns[m] (~crijnsgnu@2001:470:69fc:105::1:50c1) (Quit: You have been kicked for being idle)
[19:30:30] *** Quits: Skeetis[m] (~widmergnu@2001:470:69fc:105::f26) (Quit: You have been kicked for being idle)
[19:30:30] *** Quits: Eurydice[m] (~adonnetgn@2001:470:69fc:105::1:68a) (Quit: You have been kicked for being idle)
[19:54:31] <afontain[m]> this appservice kicking folks is really annoying
[19:55:23] <afontain[m]> for this zoom thing: anyone wants to take care of it? I don't think it's worth it tbh
[19:58:15] <typedef[m]> Probably not
[19:58:38] <typedef[m]> Definitely not if the zoom thing includes zoom
[19:58:49] <afontain[m]> can be Jitsi
[19:59:11] <typedef[m]> Yup
[20:12:10] * artectrex[m] uploaded an image: (204KiB) < https://libera.ems.host/_matrix/media/r0/download/gnugen.ch/kjnVYmBFBbXsWvQzwAqzBCQi/image.png >
[20:13:25] <artectrex[m]> hype
