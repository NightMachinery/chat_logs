[00:00:19] <nmz1> there, I'm back on caffeine, darn you yeti
[00:01:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ac97:3ea9:3561:e0d7) (Ping timeout: 240 seconds)
[00:03:20] <yeti> I need it on migraine days... have the pure caffeine at hand for this
[00:03:43] <yeti> and that allows using it in other fluids too...   tea, cocoa, ...
[00:03:56] <yeti> on other days in less big concentrations
[00:04:14] <yeti> in summer I like cold brew...
[00:04:29] <yeti> but the rest of the year I prefer caffeinated tea
[00:24:20] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[00:26:01] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[00:28:45] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[00:42:09] *** Joins: lavaball (felix@31.204.155.215)
[01:00:28] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1b3f:f726:5111:27f0)
[01:07:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1b3f:f726:5111:27f0) (Ping timeout: 240 seconds)
[01:12:57] *** Quits: user51 (~user51@176.228.151.30) (Quit: leaving)
[01:21:36] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:27:05] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a454:e6fe:6ce0:e4a4)
[01:27:27] *** Joins: Enissay (~Enissay@user/enissay)
[01:27:44] <Enissay> awk '!/^\s*\d+\s*$/ {next;} 1' ./msisdn_list.txt
[01:28:30] <Enissay> `awk '!/^\s*\d+\s*$/ {next;} 1' ./nr_list.txt` This is meant to skip all lines not containing digits only (with spaces). There are other conditions applied but this first onw fails already and cannot go further
[01:29:41] <Enissay> So this expression prints nothing, but when I remove the ! it prints all lines regardless of the condition
[01:31:29] <emanuele6> Enissay: that is not a valid ERE
[01:31:41] <emanuele6> that looks like a perl regular expression
[01:32:13] <lopid> pcre rather
[01:32:27] <emanuele6> i think you want !/^[[:space:]]*[[:digit:]]+[[:space:]]*$/
[01:33:35] <emanuele6> (and probably you want [[:blank:]] (only horizontal whitespace), instead of [[:space:]] (any space vertical or horizontal))
[01:35:12] <Enissay> haha, I think I got owned before with the same mistake
[01:36:31] <Enissay> which is not something to brag about now that I think of it
[01:43:21] *** Joins: Torr (~Torr@user/torr)
[01:51:07] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:52:22] <Enissay> Please advise if anything can be improved in: https://gist.githubusercontent.com/Enissay/2445f449d7dbba7fef30d1396a09562b/raw/1a0166031f04d2c89cb3bc6ebd8d70a9f2168fe0/input.txt
[01:53:35] <emanuele6> is that really the command you are running?
[01:53:48] <emanuele6> "\\n" will add a literal \ and an n, not a newline
[01:55:08] <emanuele6> also you are using $0 in END (as part of the !/^[[:blank:]]*[[:digit:]]{5,}[[:blank:]]*$/ check)
[01:55:17] <emanuele6> that is unspecified behaviour and is not portable
[01:56:14] <emanuele6> you should instead assign the result of !/^[[:blank:]]*[[:digit:]]{5,}[[:blank:]]*$/ in a variable and use that in end
[01:56:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a454:e6fe:6ce0:e4a4) (Ping timeout: 240 seconds)
[01:56:44] <emanuele6> e.g. invalid_line = !/^[[:space:]]*[[:digit:]]+[[:space:]]*$/ { next } .... END { if (x && invalid_line) ... }
[01:57:33] <emanuele6> # awk 'BEGIN { print "a" "\\n" "b" }'
[01:57:34] <shbot> emanuele6: a\nb
[01:57:47] <emanuele6> but are you really running that code? "\\n" does not add a newline
[01:59:52] <Enissay> yes, the literal \n is intended as it will be used later as such.
[02:00:36] <emanuele6> huh, i thought what was after the command line in your paste was the output
[02:00:51] <mknod> Enissay, I haven't parsed your awk command but it looks terrible, there must be a better way.
[02:02:12] <Enissay> emanuele6: Nah, I provided it to see the output if needed 
[02:02:17] <mknod> It's not clear what output you are expecting from your explanations in the gist, and trying it did't seem to yield the expected result.
[02:03:10] <emanuele6> Enissay: anyway, using $0 or anything that uses $0 in END is undefined behaviour
[02:03:25] <emanuele6> use a variable to keep the last result of !/^[[:space:]]*[[:digit:]]+[[:space:]]*$/
[02:04:08] <emanuele6> and BEGIN{line_count=0} is useless
[02:06:25] <Enissay> updated it
[02:06:37] <emanuele6> i don't understand the substr(line, 3)
[02:06:43] <emanuele6> why do you need that
[02:07:00] <emanuele6> especially since line could just start with 3 spaces
[02:07:21] <Enissay> well, it appends \n to each line at start, when printing the final result, I remove the first one
[02:07:41] <emanuele6> ah
[02:08:05] <Enissay> Oh, true, I was also planning to trim the result to avoid the spacing issue
[02:08:16] <emanuele6> feels a bit hacky
[02:08:40] <emanuele6> then use match :/ you don't need to trim
[02:08:51] <emanuele6> what is this script supposed to do?
[02:10:46] <Enissay> this part ? prepare some raw values to by inserted in DB
[02:11:37] <Enissay> Updated again
[02:12:35] <Enissay> I know it is not perfect, I am new to awk hence I am asking for advice...
[02:12:49] <emanuele6> but you didn't say what it is doing
[02:13:17] <emanuele6> grouping the numbers on valid lines in groups of 10 ignoring invalid lines?
[02:13:18] <Enissay> simply concatenating valid lines in groups of 10s
[02:13:23] <Enissay> exactly
[02:13:34] <emanuele6> why does it even have invalid lines?
[02:13:53] <Enissay> It shouldnt, just an extra measure
[02:14:20] <emanuele6> and why is it fine to prepend append blank characters?
[02:14:31] <emanuele6> is that expected? should that not be an error?
[02:14:40] <Enissay> the real file has millions of lines to be split up in groups of 1k, so it is impossible to check 
[02:15:22] <emanuele6> what do you mean? it is really ok to have random whitespace?
[02:15:42] <Enissay> I trimmed the space with gsub... 
[02:15:50] <Enissay> refresh the link
[02:16:18] <Enissay> no, it is not OK, but it shouldnt be an issue if I can trim it
[02:16:46] <emanuele6> you are treating lines with random whitespace as valid instead as invalid
[02:17:08] <emanuele6> anyway, i can't refresh your link, you sent a permalink
[02:17:19] <Enissay> https://gist.github.com/Enissay/2445f449d7dbba7fef30d1396a09562b
[02:17:23] <Enissay> true, my bad
[02:18:03] <emanuele6> so you are allowing any blank character, but removing only space?
[02:18:19] <Enissay> Actually I am accepting lines with leading/trailing spaces, as long as they have enough digits, I just trim and is OK
[02:18:41] <Enissay> OH no, all horizontal space should be removed
[02:18:57] <Enissay> good point
[02:20:04] <Enissay> gsub updated with `[[:blank:]]`
[02:20:04] <emanuele6> the final check really makes no sense to me
[02:20:34] <emanuele6> if you have    10    12   dksaljlksa
[02:20:49] <emanuele6> you print 10 12
[02:20:56] <emanuele6> but if you have   10    12    13
[02:21:00] <emanuele6> you don't print anything
[02:21:42] <emanuele6> i think you just want    if (line)
[02:23:17] <Enissay> Aha, I was going to ask about that: the thing is that the lines are printed at multiple of 10.... but if the last line has less than 10 values, the `END` block is supposed to print them
[02:23:41] <Enissay> And I am not sure about the logic as you correctly pointed out
[02:23:47] <emanuele6> i have to guess what you are trying to do because you are not telling me and you just send me nonsensical code
[02:25:08] <emanuele6> also the `print "Valids="line_count' should probably be outside of the if, should it not?
[02:25:15] <Enissay> ^_^"" I explained and shared the code (as lame as it looks), not sure what I can do better 
[02:25:33] <Enissay> That last one shall be removed, just using it for testing
[02:29:14] <emanuele6> this is how i would have done it http://0x0.st/-C2Y.txt
[02:29:55] <emanuele6> honestly, i would have not counted lines that have random unexpected leading and trailing whitespace as valid, but since that is what you want
[02:34:39] <mknod> awk '/^[[:digit:]]{6,}$/ { printf("%s%s%s", ++init > 1 ? "\\n" : "", $0, init == 10 ? "\n" : ""); init = init == 10 ? 0 : init } END { printf("%s", init > 0 ? "\n" : "") }'
[02:34:53] <mknod> I wouldn't work a non-sanitized input.
[02:35:48] <mknod> awk is terrible at string manipulation, so embrace the power of pipes and feed it with clean input.
[02:37:23] <emanuele6> mknod: i really don't see your point
[02:37:36] <mknod> Which point are you talking about?
[02:37:42] <emanuele6> why did you rewrite the script like that?
[02:37:54] <mknod> Because I didn't like their version?
[02:38:04] <emanuele6> but it's different
[02:39:15] <mknod> Well my above comment hasn't been replied to so I went on my own interpretation. :)
[02:40:26] <mknod> And my actual point remains. Using a buffer is overkill imho.
[02:41:58] <mknod> emanuele6, and how is it different exactly? Are you saying this because I forgot to output the valid lines count?
[02:42:35] <emanuele6> you use 6 instead of 5
[02:42:44] <Enissay> `'/^[[:blank:]]*[[:digit:]]{5,}[[:blank:]]*$/ { gsub(/[[:blank:]]+/, "", $0); printf("%s%s%s", ++init > 1 ? "\\n" : "", $0, init == 10 ? "\n" : ""); init = init == 10 ? 0 : init } END { printf("%s", init > 0 ? "\n" : "") }'`
[02:42:55] <mknod> "all lines of more than 5 digits"
[02:43:21] <mknod> That's what {6,} means.
[02:43:22] <Enissay> Yeah, I implied 5+, but it is OK, just a detail
[02:44:44] <Enissay> With this, it has identical output identical to emanuele6's... Except I dont understand the last part of it :D
[02:45:29] <Enissay> I'll keep both, thank you so much for the assistance and mostly for your patience <3
[02:45:46] <mknod> Enissay, which part exactly?
[02:50:53] <Enissay> Okay, got it... the buf disappearance confused me
[02:51:50] <mknod> Yeah, it builds the output gradually.
[03:59:16] *** Joins: armin (~armin@unix.porn)
[04:26:01] *** Joins: spawnmc (~spawnmc@192-184-144-150.fiber.dynamic.sonic.net)
[04:34:19] *** Quits: spawnmc (~spawnmc@192-184-144-150.fiber.dynamic.sonic.net) (Changing host)
[04:34:19] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[04:35:47] *** Joins: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net)
[05:55:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[05:56:42] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[06:10:50] *** Joins: junebug (~junebug@2600:1700:3db0:2540:16cd:c838:8c04:4dc4)
[06:18:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:16cd:c838:8c04:4dc4) (Ping timeout: 240 seconds)
[06:22:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6e53:addd:369e:e979)
[06:30:17] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[06:54:43] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:09:27] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[07:10:17] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[07:10:47] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:11:07] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[07:12:55] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:29:56] *** Quits: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net) (Quit: leaving)
[07:40:36] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[07:41:23] *** Joins: loganlee (~Thunderbi@user/loganlee)
[07:43:14] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:45:02] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:16:28] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[08:29:49] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[08:31:01] *** Quits: fford (~fford@p200300c6ff3b14000b31f8231a38df3b.dip0.t-ipconnect.de) (Quit: WeeChat 1.5)
[08:34:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:07:25] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6e53:addd:369e:e979) (Quit: Leaving)
[09:24:48] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:09:18] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[10:14:32] *** Joins: user51 (~user51@176.228.151.30)
[10:35:36] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:06:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:07:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:07:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:50:33] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:54:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[12:07:22] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:23:39] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[12:28:14] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:34:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[12:38:28] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[12:40:12] *** Joins: lavaball (felix@31.204.155.215)
[13:02:06] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:02:32] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:40:29] *** Joins: libc (~weechat@user/tessio)
[13:41:42] <libc> i want to be able to copy block of text that start with '[filter' and end with blank line and then append this text with a substitution on the text
[13:41:48] <libc> is it awk or sed job ?
[13:41:51] <libc> not even sure
[13:42:42] <libc> im calling the cavalry 
[13:42:45] <libc> Patsie: 
[13:42:47] <libc> emanuele6: 
[13:43:16] <Patsie> < libc> is it awk or sed job ?   -> yes
[13:43:24] <emanuele6> yes
[13:43:38] <libc> i don't know which one i
[13:43:43] <libc> is more suited for this
[13:43:53] <Patsie> the one which you know best
[13:43:59] <libc> ok let's tru it
[13:45:36] <emanuele6> to be honest, it sounds like you just want    awk -vRS='' '/^\[filter/'
[13:47:55] <libc> i need to make a substitution on the text
[13:48:02] <libc> and then append it to the same file
[13:48:47] <emanuele6> so inplace editing
[13:48:51] <emanuele6> just don't do it
[13:50:11] <libc> emanuele6: the problem with your above solution is it keep going till the end of file
[13:50:16] <libc> i need to end it with a blank line
[13:51:03] <emanuele6> do you know any awk at all?
[13:51:37] <emanuele6> or do you want me to tell you how to print an empty line?
[13:51:53] <emanuele6>   print ""
[13:51:54] <libc> both ROFL
[13:52:00] <libc> im just kidding
[13:52:06] <libc> i know a bit of awk eus
[13:52:08] <libc> yes
[13:52:19] <libc> i just not an expert
[13:52:31] <libc> like you and Patsie, which seems to dislike me for some reason 
[13:52:41] *** Joins: earnestly (~earnest@user/earnestly)
[13:57:05] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[13:57:15] <Patsie> I don't even know who you are
[13:57:23] <Patsie> I just react to comments
[13:58:05] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[13:58:23] <Patsie> and if any comments show no effort from their side, I usually dislike them
[13:59:04] <Patsie> nothing personal
[14:03:02] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[14:16:12] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[14:55:54] *** Joins: lavaball (felix@31.204.155.215)
[15:02:35] *** Joins: seninha (~seninha@user/seninha)
[15:03:29] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[15:46:19] *** jakmap is now known as paulj
[15:56:17] *** Joins: lavaball (~Melissa@31.204.155.215)
[16:18:21] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[17:03:19] <Patsie> working on this over the weekend -> https://youtu.be/uxXiSEGi6wQ
[17:03:26] <Patsie> no code yet, will come later
[17:18:44] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:29:59] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Quit: WeeChat 3.1)
[17:31:11] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Ping timeout: 245 seconds)
[17:50:06] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:16:45] *** Joins: Torr (~Torr@user/torr)
[18:20:15] *** Joins: chandoo (~chandoo@96.240.98.220)
[18:36:38] <user51> Patsie: sweet
[18:36:57] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:995c:e86e:470c:8a37) (Ping timeout: 240 seconds)
[18:36:58] <user51> last year i tried with 8080, i'm not sure how well it scales.
[18:37:55] <user51> basically my conclusio was that awk needs a lot of encouragement to do that
[18:52:06] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:28:33] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[19:28:45] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[19:37:44] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41)
[19:44:18] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[19:54:37] <Patsie> yeah, I can imagine. the whole intel instruction set is a lot bigger and the periherals _way_ more complex
[19:54:54] <Patsie> I'm still looking into a good way to do the keyboard and sound handling of the CHIP-8
[19:56:18] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[19:59:26] <user51> it was just before x86, i thik the issues were types (mix of bytes/words), overflow, awk numbers not being "interally" binary, and others
[20:00:00] <user51> gawk has binary opertions, but associative arrays are well.. not the best
[20:01:01] <user51> it's more of a 'least resistence' thing
[20:03:06] <user51> i've wrote a dissassembler once, it was pretty simple. but you need to either pipe the binary through od(1) or interpret a disassembly. don't think there's another way. well, you could break the disassembly into even smaller steps,perhaps a stack machine, but maybe that's too clever
[20:04:49] <user51> but if you interpret the assembly, you still need to convert from hex/octal/decimal, so you have a mountain of little tasks that are ironically both motivating and demotivating at the same time
[20:05:19] <user51> motivating because hey, it's possible, but demotivating because it's just being a bit too smart
[20:25:38] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[20:49:23] *** Joins: lgc (~lgc@user/lgc)
[21:09:49] *** Quits: mrlemke (~quassel@208.74.105.200) (Quit: No Ping reply in 180 seconds.)
[21:11:08] *** Joins: mrlemke (~quassel@208.74.105.200)
[22:44:55] *** Joins: mknod (~mknod@user/mknod)
[22:57:01] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 245 seconds)
[22:58:53] *** Joins: joshbaptiste (~josh@192.210.151.34)
[23:21:36] *** Joins: tercaL (~tercaL@user/tercal)
[23:22:25] <tercaL> I've got a single output line like: [{'text': ['123.123.123.12', '123.12.123.1', '124.12.6.7']}] how can I convert (with what tools) that line, having the IP addresses listed one per each line and eliminating/erasing any other chars?
[23:23:12] <emanuele6> crossposting :(
[23:23:53] <emanuele6> how are you getting that line? it looks like json except it uses ' instead of " making it invalid
[23:26:54] <tercaL> output of a security tool.
[23:26:58] <tercaL> emanuele6
[23:28:23] <nmz1> welp, if someone is already helping out in another channel
[23:29:00] <emanuele6> he's getting replies in #sed #awk #bash (maybe some other channels he's not in)
[23:29:05] <emanuele6> and he only replied here
[23:29:07] <emanuele6> so annoying
[23:29:47] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 252 seconds)
[23:31:51] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[23:35:41] *** Joins: fford (~fford@p200300c6ff3b14000b31f8231a38df3b.dip0.t-ipconnect.de)
[23:36:01] <nmz1> awk 'BEGIN {ipv4 = "(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])"} {s=$0;while( match(s,ipv4) ){print substr(s,RSTART,RLENGTH);s=substr(s,RSTART+RLENGTH) } } '
[23:36:25] <nmz1> tercaL: like that?
[23:36:29] <nmz1> ah
[23:38:10] <emanuele6> s/he's not/i'm not/
[23:38:13] <nmz1> # echo "[{'text': ['123.123.123.12', '123.12.123.1', '124.12.6.7']}]" | awk 'BEGIN {ipv4 = "(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\\.(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])"} {s=$0;while( match(s,ipv4) ){print substr(s,RSTART,RLENGTH);s=substr(s,RSTART+RLENGTH) } } '
[23:38:14] <shbot> nmz1: 123.123.123.12
[23:38:14] <shbot> nmz1: 123.12.123.1
[23:38:14] <shbot> nmz1: 124.12.6.7
[23:38:34] <nmz1> I wonder what the bash replies are
[23:38:41] <tercaL> nmz1: Now, that was AMAZING!
[23:38:46] <emanuele6> nmz1: regexes for ip addresses are stupid
[23:38:46] <nmz1> though the regex for ipv4 is portable across everywhere
[23:38:56] <nmz1> emanuele6: :(
[23:39:07] <nmz1> you know, getting that regex to work was a PITA
[23:39:16] <nmz1> making it*
[23:39:32] <emanuele6> 127.1 is equivalent to 127.0.0.1, you know?
[23:39:46] <nmz1> meh
[23:39:55] <nmz1> whoever uses that should be shot
[23:42:55] <nmz1> tercaL: by all means, let me know about false positives
[23:43:49] <tercaL> nmz1: Worked so great! Thanks a lot. A very beautiful list I got now, piece of cake, for....the firewall! :) See https://imgur.com/ERRziAX
[23:44:42] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[23:44:58] <Patsie> first code push of awk-chip8 -> https://github.com/patsie75/awk-chip8
[23:45:02] <nmz1> :)
[23:45:13] <Patsie> far from perfect, but it's a start
[23:47:40] <nmz1> emanuele6: and also no, I didn't know that, who the hell thought that was a good idea
[23:48:03] <nmz1> no wonder url parsing has so many bugs
[23:48:15] <emanuele6> i think it was in the original ip specification
[23:48:55] <emanuele6> people matching textual representation of ips in decimal are what causes the problem as far as i am concerned
[23:49:24] <emanuele6> if you want to do it, at least follow the specification and do it properly
[23:50:55] <Patsie> there's all kind of weird specs in IP, also that you can use the decimal notation of an IP octet group -> 8.8.8.8 == 134744072
[23:51:00] <Patsie> just ping 134744072 for example
[23:51:11] <emanuele6> Patsie: nice!
[23:52:08] <Patsie> patsie@nuc10i3]~>curl -vvv https://134744072
[23:52:08] <Patsie> *   Trying 8.8.8.8:443...
[23:52:11] <earnestly> emanuele6: And 0x notation, this is a glibc 'feature'
[23:52:45] <emanuele6> Patsie: cool emulator
[23:52:50] <Patsie> thanks!
[23:53:04] <Patsie> it's not finished yet, just a start, so probably full of bugs
[23:53:18] <Patsie> but it's doing something and it's my first emulator
[23:54:09] <tercaL> Patsie: that was interesting..
[23:54:48] <Patsie> I hope it still is
