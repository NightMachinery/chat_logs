[00:16:58] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:36:34] *** Quits: user51 (~user51@176.228.148.215) (Quit: leaving)
[00:43:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:48:18] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[00:54:49] *** Joins: seninha (~seninha@user/seninha)
[01:15:23] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:18:23] *** Joins: malina (~malina@user/malina)
[01:31:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:53:00] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.4)
[02:21:25] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[02:21:50] *** Joins: brw (~bas@haring.bas.sh)
[02:42:59] *** Joins: Torr (~Torr@user/torr)
[02:53:39] *** Joins: bellhyve (~bellhyve@68.160.236.29)
[02:54:23] *** Quits: bellhyve (~bellhyve@68.160.236.29) (Remote host closed the connection)
[02:54:43] *** Joins: bellhyve (~bellhyve@68.160.236.29)
[02:59:33] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[04:20:02] *** Quits: Torr (~Torr@user/torr) ()
[04:20:19] *** Joins: Torr (~Torr@user/torr)
[05:04:32] *** Quits: bellhyve (~bellhyve@68.160.236.29) (Remote host closed the connection)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:28] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:32:58] *** Joins: vlm (~vlm@user/vlm)
[05:38:36] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[05:41:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:24:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1)
[07:58:47] *** Quits: malina (~malina@user/malina) (Quit: malina)
[08:32:34] *** Joins: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com)
[08:35:01] *** Quits: waldo323__ (~waldo323@d14-69-96-170.try.wideopenwest.com) (Ping timeout: 256 seconds)
[08:53:01] *** Joins: bluedust (~bluedust@59.89.212.127)
[08:54:51] *** Joins: user51 (~user51@176.228.148.215)
[09:06:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1) (Quit: Leaving)
[09:08:12] *** Quits: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com) (*.net *.split)
[09:08:12] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (*.net *.split)
[09:08:12] *** Quits: Meli (~meli@user/meli) (*.net *.split)
[09:08:12] *** Quits: APic (~apic@apic.name) (*.net *.split)
[09:08:12] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (*.net *.split)
[09:08:12] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[09:08:12] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (*.net *.split)
[09:08:12] *** Quits: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512) (*.net *.split)
[09:08:13] *** Quits: hid3 (~arnoldas@78.157.71.116) (*.net *.split)
[09:08:13] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[09:08:13] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:08:13] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:08:13] *** Quits: Bossi (~quassel@p548379ef.dip0.t-ipconnect.de) (*.net *.split)
[09:08:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:08:13] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[09:08:14] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[09:08:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[09:08:14] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: yeti (~username@user/yeti) (*.net *.split)
[09:08:14] *** Quits: int (~int@0x4.cx) (*.net *.split)
[09:08:14] *** Quits: timlegge_ (~quassel@142.167.255.204) (*.net *.split)
[09:08:14] *** Quits: shbot (~shbot@37.139.2.101) (*.net *.split)
[09:08:15] *** Quits: DK3 (~DK3@user/DK3) (*.net *.split)
[09:08:15] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[09:08:15] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (*.net *.split)
[09:08:15] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (*.net *.split)
[09:08:15] *** Quits: milkii (~milkii@2001:19f0:7401:866a:15f3:a8f4:441d:ab86) (*.net *.split)
[09:08:16] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:08:16] *** Quits: brennen (~brennen@user/brennen) (*.net *.split)
[09:08:16] *** Quits: sptz (~aro@91.247.228.92) (*.net *.split)
[09:08:16] *** Quits: lopid (~lopid@user/lopid) (*.net *.split)
[09:08:17] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:08:17] *** heiner is now known as boreas
[09:12:25] *** Quits: user51 (~user51@176.228.148.215) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:13:51] *** Joins: user51 (~user51@176.228.148.215)
[09:16:22] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:21:14] *** Joins: brennen (~brennen@user/brennen)
[09:21:14] *** Joins: sptz (~aro@91.247.228.92)
[09:21:14] *** Joins: lopid (~lopid@user/lopid)
[09:21:14] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:22:43] *** boreas is now known as 076AAFO7U
[09:22:45] *** Joins: vlm (~vlm@user/vlm)
[09:22:45] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[09:22:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:22:45] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[09:22:45] *** Joins: yeti (~username@user/yeti)
[09:22:45] *** Joins: int (~int@0x4.cx)
[09:22:45] *** Joins: timlegge_ (~quassel@142.167.255.204)
[09:22:45] *** Joins: rkta (~rkta@2001:4ba0:cafe:eaf::1)
[09:22:45] *** Joins: shbot (~shbot@37.139.2.101)
[09:22:45] *** Joins: DK3 (~DK3@user/DK3)
[09:22:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:22:45] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[09:22:45] *** Joins: milkii (~milkii@2001:19f0:7401:866a:15f3:a8f4:441d:ab86)
[09:22:45] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:23:35] *** Joins: waldo323_ (~waldo323@d14-69-96-170.try.wideopenwest.com)
[09:23:35] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[09:23:35] *** Joins: Meli (~meli@user/meli)
[09:23:35] *** Joins: APic (~apic@apic.name)
[09:23:35] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[09:23:35] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[09:23:35] *** Joins: AJ_Z0 (~AJ_Z0@user/aj-z0/x-3780512)
[09:23:35] *** Joins: hid3 (~arnoldas@78.157.71.116)
[09:23:35] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[09:23:35] *** Joins: [R] (~rs@genoce.org)
[09:23:35] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[09:23:35] *** Joins: Bossi (~quassel@p548379ef.dip0.t-ipconnect.de)
[09:23:35] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:28:17] *** Quits: user51 (~user51@176.228.148.215) (Ping timeout: 256 seconds)
[09:28:34] *** Joins: user51 (~user51@176.228.148.215)
[09:28:51] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:29:09] *** Quits: demonbane (~demonbane@71.247.72.217) (Ping timeout: 250 seconds)
[09:30:29] *** Joins: demonbane (~demonbane@71.247.72.217)
[09:31:09] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:42:11] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:42:31] *** Quits: asdflkj_sh (asdflkj@bsdforall.org) (Changing host)
[09:42:31] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[09:48:53] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[10:13:13] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Quit: Leaving)
[10:54:11] *** Quits: bluedust (~bluedust@59.89.212.127) (Read error: Connection reset by peer)
[10:54:24] *** Joins: bluedust (~bluedust@103.160.194.110)
[11:29:08] *** Joins: lgc (~lgc@user/lgc)
[11:30:06] *** Quits: lgc (~lgc@user/lgc) (Client Quit)
[11:59:50] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[12:05:02] *** Joins: Nintendo (~smb3@user/great)
[12:07:00] <Nintendo> Is there a way to push records onto an in-progress "cmd | getline" loop?
[12:08:50] <Nintendo> set -- new_arg "$@"
[12:09:05] <Nintendo> Kind of like that in a bash "while (( $# ))" loop.
[12:09:26] <geirha> sort-of. You can change the cmd variable and it will start reading from that new command, and then when you change cmd back to its previous value, it will continue where it left off on the "original pipe"
[12:09:26] <emanuele6> function handle_record() { ... }  { cmd = "..."; while ("cmd" | getline == 1) { handle_record($0); /something/ handle_record("hi") } close(cmd)
[12:10:37] <emanuele6> or handle_record(); /something/ { $0 = "hi"; handle_record(); }
[12:11:15] <emanuele6> Nintendo: huh?
[12:11:52] <emanuele6> > set -- new_arg "$@"    Kind of like that in a bash "while (( $# ))" loop.
[12:11:58] <emanuele6> not sure i understand
[12:12:00] <emanuele6> maybe
[12:14:13] * Nintendo is processing...
[12:15:57] <Nintendo> The bash example would be a shift loop iterating over arguments, emanuele6.
[12:16:11] <emanuele6> but you said records, not arguments
[12:16:31] <Nintendo> I only meant it to be an analogy.  Sorry.
[12:19:46] <Nintendo> That is some interesting insight, geirha.  Sadly, in this particular case, the best way to stuff the records I need into a command would probably be an unwieldy echo.
[12:20:16] <Nintendo> I'll try your function-wrapping solution, emanuele6...
[12:20:34] <emanuele6> # awk -v ORS='\t' 'function handle_record() { print $1 } BEGIN { cmd = "printf %s\\\\n aa\\ xe b\\ d ab c d"; while (cmd | getline == 1) { handle_record(); if (/^a/) { $0 = "x"; handle_record() } } close(cmd) }'
[12:20:35] <shbot> emanuele6: aa      x       b       ab      x       c       d
[12:20:45] <emanuele6> why do you need something like that though?
[12:25:20] <emanuele6> you could also do something like   if (cmd | getline == 1) while (1) { ....; if (/something/) { $0 = "hello"; continue } if (/another thing/) { if (cmd | getline != 1) break; continue; }
[12:25:31] <emanuele6> but i don't understand why you would need something like that
[12:26:31] <emanuele6> ( err: if (cmd | getline == 1) while (1) { ....; if (/something/) { $0 = "hello"; continue } if (cmd | getline != 1) break; continue } )
[12:27:29] <Nintendo> I have a switchboard.  Its switches are turned on and off with input, one turning per record (-/+).  I was tasked with adding the ability to turn off all switches with a single record, and I want to change the main loop as little as possible (because it's good and fast).
[12:32:15] <emanuele6> what?
[12:33:10] <emanuele6> so you want to treat something like:   - 1,2,3   as "- 1\n- 2\n- 3\n"?
[12:35:50] <emanuele6> if that is the case, wouldn't make more sense to just change the bit of code that uses $2 from { do_something($1, $2) } to { split($2, a, /,/); for (sw in a) do_something($1, sw) }?
[12:36:27] <emanuele6> ( a[sw], not sw )
[12:36:57] <emanuele6> ( or  for (len = length(a), i = 1; i <= len; ++i) do_something($1, a[i]) }  if order matters)
[12:39:09] <emanuele6> s/for (len = length(a), i = 1/len = length(a); for( i = 1/   # multiple assignments in the initialisation part of a for loop are not legal in awk.
[12:41:18] *** Joins: bluedust (~bluedust@103.160.194.110)
[12:41:27] <Nintendo> Actually, your function encapsulation idea got me off on the right foot.
[12:41:44] <Nintendo> Thanks, emanuele6.  I think I got it.
[12:43:07] <emanuele6> you could also put a filter between the command and getline
[12:45:18] <Nintendo> You can?
[12:45:36] <Nintendo> I had no idea awk could do that...
[12:46:11] <emanuele6> cmd in `cmd | getline' is sh code
[12:46:23] <emanuele6> you can use any shell syntax you want, even pipes
[12:48:30] <emanuele6> something like: awk 'BEGIN { split("1 2 3 4 5 6", switches) } $2 == "@" { for (s in switches) print $1 " " switches[s]; next } { len = split($2, targets); for (t in targets) if (t in switches) print $1 " " targets[t] }'
[12:48:35] <emanuele6> or whatever
[12:49:02] <emanuele6> and then use:   cmd = "input_command | that_filer"; while (cmd | getline == 1) { ... }
[12:49:28] <emanuele6> but it is still hard to understand what you are actually trying to do
[12:50:44] <emanuele6> s@split(\$2, targets);@split($2, targets, /,/)@
[12:51:46] <emanuele6> s/if (t in/if (targets[t] in/
[12:52:05] *** Joins: bluedust_ (~bluedust@59.89.212.127)
[12:52:23] <emanuele6> # printf '%s\n' '+ 1' '- 10,2' '+ @' | paste -s
[12:52:24] <shbot> emanuele6: + 1     - 10,2  + @
[12:52:31] <emanuele6> # printf '%s\n' '+ 1' '- 10,2' '+ @' | awk 'BEGIN { split("1 2 3 4 5 6", switches) } $2 == "@" { for (s in switches) print $1 " " switches[s]; next } { len = split($2, targets, /,/); for (t in targets) if (targets[t] in switches) print $1 " " targets[t] }' | paste -s
[12:52:32] <shbot> emanuele6: + 1     - 2     + 2     + 3     + 4     + 5     + 6     + 1
[12:52:55] <emanuele6> ( 10 is filtered out because it is not in the list )
[12:53:53] <emanuele6> # printf '%s\n' '+ 1' '- 10,6,7,2' '+ @' | awk 'BEGIN { split("1 2 3 4 5 6", switches) } $2 == "@" { for (s in switches) print $1 " " switches[s]; next } { len = split($2, targets, /,/); for (t = 1; t <= len; ++t) if (targets[t] in switches) print $1 " " targets[t] }' | paste -s
[12:53:55] <shbot> emanuele6: + 1     - 6     - 2     + 2     + 3     + 4     + 5     + 6     + 1
[12:54:48] <emanuele6> the order of the output is only guaranteed by gawk if you use `for (t in targets)', you can use that if order matters and the code is not guaranteed to be used by gawk ^
[12:55:38] <emanuele6> s/use that/use `for (t = 1; t <= len; ++t)'/
[12:55:41] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 256 seconds)
[12:56:26] *** Joins: lavaball (felix@31.204.155.215)
[13:14:12] *** Quits: bluedust_ (~bluedust@59.89.212.127) (Remote host closed the connection)
[14:06:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:09:02] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:12:01] *** Joins: seninha (~seninha@user/seninha)
[14:12:45] *** Quits: Nintendo (~smb3@user/great) (Quit: Game over.)
[14:21:18] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[14:54:17] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:56:05] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[14:59:47] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[15:05:41] *** Quits: Meli (~meli@user/meli) (Ping timeout: 256 seconds)
[15:09:47] *** Joins: bluedust (~bluedust@59.89.212.127)
[15:11:53] *** Joins: Meli (~meli@user/meli)
[15:13:25] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[15:45:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[15:58:31] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[16:12:51] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[16:40:04] *** Joins: dmenz (~dmenz@2804:14d:5cd4:8125:3f8d:e57c:e8cf:72ea)
[16:40:07] *** Joins: seninha (~seninha@user/seninha)
[16:53:32] *** Quits: armin (~armin@unix.porn) (Ping timeout: 240 seconds)
[16:55:45] *** Joins: armin (~armin@unix.porn)
[17:01:25] *** Quits: dmenz (~dmenz@2804:14d:5cd4:8125:3f8d:e57c:e8cf:72ea) (Quit: Leaving)
[17:06:11] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:08:44] *** Joins: sagax (~sagax_nb@user/sagax)
[17:22:05] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[17:24:58] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:27:41] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:51:05] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:12:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788)
[19:36:42] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[19:39:53] *** Quits: bluedust (~bluedust@117.222.188.38) (Ping timeout: 252 seconds)
[19:44:37] *** Joins: bluedust (~bluedust@117.222.188.38)
[19:47:58] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[19:54:34] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[20:09:49] *** Joins: lavaball (felix@31.204.155.215)
[20:30:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788) (Quit: Leaving)
[21:19:02] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:19:59] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[21:22:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[21:59:24] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:59:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c)
[22:44:34] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c) (Quit: Leaving)
[22:49:22] *** Joins: smrtz (~smrtz@user/smrtz)
[22:58:37] *** Quits: demonbane (~demonbane@71.247.72.217) (Ping timeout: 256 seconds)
[22:58:51] *** Joins: demonbane (~demonbane@71.247.72.217)
