[00:20:04] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Read error: No route to host)
[00:26:12] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[00:26:12] *** ChanServ sets mode: +o MichaelRaskin
[01:20:25] *** Joins: copec (~copec@204.48.8.36)
[01:32:52] *** Quits: z147 (~z147@gateway/tor-sasl/z147) (Ping timeout: 244 seconds)
[01:37:23] *** Quits: copec (~copec@204.48.8.36) (Ping timeout: 250 seconds)
[01:37:53] *** Joins: copec (~copec@home.unaen.org)
[02:25:18] *** Quits: jealousmonk (~jealousmo@brettgilio.com) (Ping timeout: 276 seconds)
[02:53:18] <edgar-rft> pjb: thank you (no joke) - but that video doesn't even come close to an explanation of what would happen if you force an atomic nucleus into a one million times smaller space.
[02:56:38] *** Joins: selwyn (~selwyn@user/selwyn)
[03:24:34] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 240 seconds)
[03:30:37] *** Quits: copec (~copec@home.unaen.org) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:58:18] * hayley had an idea for an optimal register arrangement adaptor algorithm which probably runs in linear time.
[03:58:53] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 258 seconds)
[04:03:54] <hayley> The idea is to just chase down assignments, i.e. we found RBX <- RAX, now look for what uses RBX, and stick those in reverse order, so RCX <- RBX, RBX <- RAX. If there's a loop, we only need one extra location to break the loop.
[04:08:35] <hayley> Also a temporary (which is necessarily a register) for doing stack-stack copies, but that is also workable, as I've handled it twice (spill a register, redirect anything to its stack location, unspill at the end).
[04:13:51] <pjb> edgar-rft: well as I said what matter is the cross section, which is an abtract parameter: it grows when the speed of the neutron diminishes..
[04:14:24] <pjb> edgar-rft: assumedly with a smaller nucleus, the cross section could be reduced, but the relative speeds are the first order parameter.
[04:15:38] <pjb> edgar-rft: this is because it's enough for the neutron to be close enough to the nucleus for the weak force to start working.
[04:16:01] <pjb> edgar-rft: this force doesn't depend on the "size" of things, only on their distance.
[04:17:17] <pjb> edgar-rft: also, "size" is a strange notion in a quantum world.  I assume you could constrain a nucleus to some "size", by limiting it's freedom of movement (reducing the probabilities of its wave function to be outside some space), but this wouldn't mean much anyways: most particules cover the whole universe most of the time.
[04:21:46] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[04:31:32] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:32:37] <hayley> https://www.youtube.com/watch?v=M73XCOzZAU0
[04:32:38] -ixelp- Binging with Babish: Death by Chocolate √âclair from The Simpsons - YouTube
[04:35:11] *** Joins: makomo (~makomo@user/makomo)
[04:45:54] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[04:46:08] <pjb> 1 million calories? Real life competition eater could probably do it: https://www.youtube.com/watch?v=YheZKfcSsh8
[04:46:09] -ixelp- THE 100 POUND FIVE GUYS CHALLENGE | 14,000 CALORIES | BeardMeatsFood - YouTube
[04:47:47] <pjb> hayley: that recipe doesn't look excessive at all.
[05:10:16] <hayley> pjb: I don't know if you can fit 25 pounds of butter per square inch into a reasonable size.
[05:17:28] <pjb> hayley: to reach 1 million callories, you clearly need something more concentrated than butter‚Ä¶
[05:17:35] <pjb> s/ll/l/
[05:18:00] <hayley> to reach 1 milion callories...
[05:18:21] <sm2n> how about petrol
[05:18:28] <pjb> But say, Kouign Amann is already close enough. (it's delicious, and French people can eat some everyday).
[05:18:50] <edgar-rft> pjb: okay, thanks again, but what I really do not understand is how I get a micro-nucleus *without* making is a million times smaller
[05:19:11] <edgar-rft> *makink it...
[05:19:26] <edgar-rft> argh, making it :-)
[05:21:04] <pjb> Isn't the Macroscopic size what counts? If the nuclear power plant is micron-sized, that still leave space for up to 1e9 atoms‚Ä¶
[05:21:38] <pjb> micron-sized object can be seen by the naked eye. It's only 1/1000 a millimeter‚Ä¶
[05:23:11] <edgar-rft> but that still would not make the nuclei become micro :-)
[05:23:52] <pjb> Otherwise, as I said, size for quantum object is more a matter of speed: if you can know the speed of the object with precision, you cannot know its position and therefore the size of the object it composes. And vice-versa.  If you want to enfoce a very small size for a nucleus, that means that you will constraint very strongly the position of its components (the neutrons and protons inside), and therefore you will lose control of their
[05:23:52] <pjb> speed.
[05:24:13] <pjb> This is actually probably a good thing, since that means they will explode in a fission! :-)
[05:24:38] <pjb> edgar-rft: oh, perhaps you want to enlarge the nuclei then?
[05:24:45] <pjb> Then constraint its speed.
[05:25:01] <edgar-rft> yes, I imagine that mega-nuclei would be the core of football size atoms
[05:25:16] <pjb> Anyways, Morphea's calling.
[05:26:27] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:29:27] <edgar-rft> next topic: nuclear astrology :-)
[05:32:28] <hayley> https://www.youtube.com/watch?v=Zcsd-6KlcgQ üêÆ üêÑ
[05:32:28] -ixelp- Atom Heart Mother (BBC Radio Session, 16 July 1970) - YouTube
[06:05:46] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 258 seconds)
[06:06:18] <lotuseater> hayley: https://www.youtube.com/watch?v=U4lz8MN6MQA
[06:06:19] -ixelp- DOOM CROSSING: Eternal Horizons ‚ñ† Music Video feat. Natalia Natchan - YouTube
[06:17:16] <hayley> https://www.youtube.com/watch?v=TYsVNx5xGpo
[06:17:16] -ixelp- Echoes (BBC Radio Session, 30 September 1971) - YouTube
[06:23:42] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[06:27:55] *** Joins: humasect (~humasect@2001:1970:57e0:4100::8142)
[06:33:13] *** Quits: humasect (~humasect@2001:1970:57e0:4100::8142) (Remote host closed the connection)
[06:48:50] *** Joins: humasect (~humasect@2001:1970:57e0:4100::8142)
[06:53:17] *** Quits: humasect (~humasect@2001:1970:57e0:4100::8142) (Ping timeout: 250 seconds)
[07:02:59] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[08:30:28] *** Joins: lad (~lad@user/lad)
[08:32:30] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[08:58:39] <hayley> https://www.youtube.com/watch?v=0JFAA5dEup0
[08:58:40] -ixelp- Talking Heads - The Lady Don't Mind (Moog March Version) - YouTube
[09:04:06] *** Joins: nihaal (~nihaal@106.201.177.18)
[09:16:03] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:16:19] <dave0> maw
[09:31:21] *** Joins: easye (~user@2a01:4f8:200:8261::b0)
[09:43:53] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 258 seconds)
[10:25:19] <hayley> Hey d
[10:25:23] <hayley> Hey dave0
[10:28:22] <hayley> https://www.youtube.com/watch?v=8GZnSeGbssw
[10:28:22] -ixelp- If - YouTube
[10:28:35] <dave0> hi hayley 
[10:35:17] <sham1> Good morning all hackfolks
[10:53:47] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[10:55:24] *** Quits: silasfox (~sbv@xdsl-87-79-98-159.nc.de) (Ping timeout: 252 seconds)
[10:56:13] <hayley> https://www.youtube.com/watch?v=2bI9QEQ2pts
[10:56:14] -ixelp- Everybody Loves You When You're Dead - YouTube
[11:38:07] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:53:52] *** Joins: selwyn (~selwyn@user/selwyn)
[11:58:59] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[11:59:44] *** Joins: selwyn (~selwyn@user/selwyn)
[12:00:21] *** Joins: z147 (~z147@gateway/tor-sasl/z147)
[12:25:07] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[12:34:04] *** Joins: rt (~robin@user/terpri)
[12:48:34] *** rt is now known as robin
[12:51:20] *** Joins: makomo (~makomo@user/makomo)
[12:51:36] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:54:33] *** Joins: notzmv (~zmv@user/notzmv)
[13:09:51] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Ping timeout: 250 seconds)
[13:30:28] * hayley is about to kill a cyberdemon apparently.
[13:36:23] <hayley> Well, it is dead now.
[13:36:52] <dave0> nice
[13:37:03] <dave0> did it leave behind some treasure when it died?
[13:37:48] <hayley> Then it decided to undie. So not really.
[13:38:44] <dave0> oh
[13:38:59] <dave0> i hate it when they don't stay dead !
[13:42:14] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[13:46:17] <sham1> To hell with this!
[13:46:35] <kakuhen> phoe: the comic seems to misunderstand the definition of a random variable -- a random variable is nothing more than a (measurable) function from a sigma algebra (on some set) to another set (actually, a measurable set, but that's not important here), and in the case of the comic, it may very well be the case that we have a degenerate random variable (i.e. a constant function), and this qualifies as random (really, it does).
[13:47:58] <kakuhen> the "random" in random variable comes from choosing the point œâ‚ààŒ© rather than the image of that point; and there are a slew of statistical methods that let you obtain empirical distribution of a given RV, or even get pretty damn close to the actual distribution
[13:49:00] <kakuhen> so the "random number generator" who keeps spewing out 9, 9, 9, ... ad infinitum is indeed a random number generator -- the characters in the comic simply lack intuition for random variables.
[13:49:17] <contrapunctus> hayley: that's some fascinating music ü§î
[13:49:18] <contrapunctus> (I say that as someone who rarely ventures out of classical and musical theatre music)
[13:52:07] *** Joins: makomo_ (~makomo@user/makomo)
[13:52:44] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net)
[13:53:20] <phoe> kakuhen: yes
[13:53:55] <phoe> and the play is exactly on this, plus the common understanding of "random" and "randomness" that is a synonym of "unpredictable"
[13:53:58] <hayley> Okay, now the cyberdemon is actually dead.
[13:54:09] <phoe> did you remove doom emacs?
[13:54:20] <hayley> Years ago.
[13:55:28] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 272 seconds)
[13:58:24] <shka> kakuhen: i think that this is conflict of the practical software engineering and formal math
[13:59:13] <shka> there is a lot of places in CL where it was left as "no sane person would implement this in a crazy way, let's leave it"
[13:59:23] <phoe> ;; and then people did it anyway
[13:59:56] <shka> for instance, as i mentioned, you technically can implement cl hash-tables with linear scans on a vector
[14:00:09] <shka> phoe: i don't think they did, you know
[14:00:31] <shka> or at least i don't hear about "CCL random is useless" crowd around
[14:02:55] <kakuhen> >no sane person would implement this in a crazy way
[14:03:03] <kakuhen> thankfully Sony did not ever attempt to write their own common lisp
[14:03:37] <kakuhen> it's reassuring that their implementation wouldn't comply with the spec anyway
[14:03:58] <sham1> You'd think that a hash table specification might mention something about the expected complexity where it ought to be amortised O(1)
[14:04:23] <kakuhen> ;; in case it's not obvious, I'm referencing the incident where some RNG in the playstation 3 would constantly return 4, and this made some encryption stuff easy to crack
[14:04:42] <sham1> They actually did the XKCD thing in real life
[14:05:09] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:d560:82b8:97b4:9051)
[14:05:15] <sham1> That's horrible
[14:06:12] <kakuhen> and that's why mathematicians call degenerate random variables degenerate; it's technically a random variable, just not a "useful" one 
[14:06:30] <dave0> there's a link to a history of time and implementing it in common lisp on hacker news: https://news.ycombinator.com/item?id=28048258
[14:06:31] -ixelp- A Long, Painful History of Time (1999) | Hacker News
[14:07:52] <kakuhen> every time I see DECODE-UNIVERSAL-TIME I am reminded of the time I tried porting stumpwm outside of sbcl
[14:08:14] <kakuhen> i'm still too lazy to send the patch, and something really funny has been there unnoticed for like 4 years now
[14:08:45] <kakuhen> but there's a god awful disgusting mixture of sb-posix and encode-universal-time calls that is used just to do something functionallyy equivalent to GET-DECODED-TIME.
[14:09:34] <kakuhen> oh lovely it's still there https://github.com/stumpwm/stumpwm/blob/master/time.lisp#L126
[14:09:35] -ixelp- stumpwm/time.lisp at master ¬∑ stumpwm/stumpwm ¬∑ GitHub
[14:09:40] <hayley> dave0: Desperation is the English way...
[14:13:07] <nij-> kakuhen:  how hard was it to port stumpwm outside of sbcl?
[14:13:12] <kakuhen> im still not done yet
[14:13:29] <kakuhen> i managed to get rid of just about all of the sbcl-specific thing except for the main i/o loop and a couple of other thigns
[14:13:36] <kakuhen> things*
[14:14:03] <kakuhen> i also realized partly why people like sbcl -- it exports constants for posix signals etc in a way I really wish osicat-posix or uiop did.
[14:14:28] <kakuhen> so I have some gross workarounds to avoid writing, say, sb-posix:sigint, but I doubt upstream will like them heh
[14:15:15] <kakuhen> anyway, you'd be surprised how much code in stump is sbcl-specific just because of a minor oversight, or because people thought it'd be funny to s/bt-thread/sb-thread or something (I've seen commits in 2017 that actually did something like this)
[14:15:42] <nij-> then why not just s/sb/bt/g xD
[14:16:43] <kakuhen> ideally i'd want stump to work on more than just sbcl+ccl, but if i can get it running on ccl one day i'll be happy -- it's just that the moment I tried putting work into the main i/o loop is about the moment I lost motivation and distracted myself w/ other projects :)
[14:17:12] <nij-> :(
[14:17:59] <sham1> It's probably using something like poll or epoll/kqueue under the hood. I suppose that the FFI might not be the biggest problem here though
[14:18:26] <kakuhen> https://github.com/stumpwm/stumpwm/blob/master/ioloop.lisp#L169
[14:18:27] -ixelp- stumpwm/ioloop.lisp at master ¬∑ stumpwm/stumpwm ¬∑ GitHub
[14:18:43] <kakuhen> they're not using epoll/kqueue, but they can and they don't even know it (or rather, don't like the approach i guess)
[14:19:03] <kakuhen> iolib apparently lets you make use of kqueue (or epoll) in CL and it's actually being used in Nyxt browser iirc
[14:19:17] <kakuhen> but for whatever reason the stump ppl haven't done that yet and they're fine with their current i/o loop for the time being
[14:19:27] <sham1> Oh, select.
[14:20:12] <kakuhen> oh i selected (no pun intended) the wrong line, i meant to hit line 196
[14:20:24] <kakuhen> as you can see, it's huge and it's not obvious how one would write a portable version of it
[14:20:25] <nij-> The stumpwm development is a bit slow.. ppl could be busy @@
[14:20:54] <kakuhen> in fact, someone told me  that on the mailing lists several years back the whole show about the i/o loop is what made them decided to drop support for non-sbcl implementations
[14:21:03] <nij-> I'm using it happily, but thinking to move to a minimal WM in the future.
[14:22:16] <kakuhen> is manual tiling not minimal enough for you :p
[14:22:28] <nij-> No I mean the whole thing.
[14:22:32] <nij-> It has many lines.
[14:22:50] <nij-> At the end what I care is if I can fire a lisp command easily.
[14:23:01] <kakuhen> the only more "minimal" wm I know is dwm, but it has none of the comfy lisp features
[14:23:05] <nij-> But that seems to be taken care by other things.
[14:23:14] <nij-> What kinda lisp features will it miss?
[14:23:35] <nij-> I'm eager to talk about this with someone. Just hard to find a stumpwm user who talks xDD
[14:23:38] <kakuhen> well, you can't just reload your configuration on demand (bspwm lets you do this by sending signals iirc)
[14:23:52] <kakuhen> and any modification to the wm itself will require you to exit and recompile it all
[14:24:04] <nij-> I remember yes.. you just change the src, make, and use a command that reloads. 
[14:24:19] <kakuhen> if your wm crashes, it crashes, no debugger to drop down to :)
[14:24:20] <nij-> IIRC you don't really have to exit .. maybe im wrong
[14:24:34] <kakuhen> but crashes in stump aren't easy to recover from so it's not a huge downgrade anyway
[14:25:20] <nij-> Does it crash much on you?
[14:25:35] <kakuhen> with swm-gaps extension, yes.
[14:25:55] <kakuhen> emacs is very unruly about its window canvas and will cause some random xlib calls to get negative integers in them
[14:26:24] <kakuhen> this makes xlib very unhappy and you quickly find yourself with a looong backtrace and a debugger that you cant access since X won't let you give any input
[14:26:42] <kakuhen> and even if you had slynk server set up and tried connecting to your lisp image remotely, well, good luck fixing anything. I know I can't fix these errors.
[14:27:04] <nij-> seems like to be a nasty bug no one wants to fix
[14:27:29] <kakuhen> there is a patch that makes swm-gaps crash stump less often, but emacs in general is very unruly and will cause the bug 
[14:27:30] <nij-> I also notice that stumpwm doesn't play well with dmenu.
[14:27:36] <nij-> Or some other kind of special windows.
[14:27:56] <nij-> After using that, it loses focus. And while the modeline indicates that it's still working, all keybinds are off.
[14:28:04] <nij-> I thus have to pkill stumpwm....
[14:28:36] <kakuhen> if you send the lisp image a SIGINT it should force restart 
[14:28:59] <kakuhen> that way you don't have to type startx yourself :)
[14:29:41] <nij-> (Damn.. just checked.. bspwm has ~13000 lines of c code too not so small :( )
[14:29:54] <nij-> oh really?
[14:30:10] <nij-> lemme try it now!
[14:30:18] <kakuhen> SIGHUP
[14:30:20] <kakuhen> not SIGINT im sorry
[14:30:35] <kakuhen> https://github.com/stumpwm/stumpwm/blob/7fe59c00810b35843139194525db444a2c26aa72/stumpwm.lisp#L318
[14:30:36] -ixelp- stumpwm/stumpwm.lisp at 7fe59c00810b35843139194525db444a2c26aa72 ¬∑ stumpwm/stumpwm ¬∑ GitHub
[14:31:49] <nij-> Oh yay indeed!
[14:31:58] <nij-> It just took some time. So I didn't think it'd work.
[14:32:05] <nij-> Glad you are here today, kakuhen
[14:32:23] <kakuhen> i'm glad phoe introduced me to this channel
[14:32:29] <kakuhen> i've always wondered where I could find a sort of #lisp-offtopic
[14:32:45] <nij-> hehe
[14:34:16] <nij-> https://old.reddit.com/r/Common_Lisp/comments/owgrie/ways_to_talk_to_a_lisp_repl_a_brief_survey/
[14:34:17] -ixelp- Ways to talk to a Lisp repl - a brief survey : Common_Lisp
[14:34:39] <nij-> With this thread you can dump stumpwm.. and move into a new wm and "talks to" lisp smoothly.
[14:35:22] <kakuhen> but i'm already so far into an attempted port of stump to ccl...
[14:35:33] <kakuhen> granted, i havent worked on it since mid-june, but...
[14:36:01] <nij-> oh come on you talked about that like you have been dumping it for months xD
[14:36:12] <nij-> I still have faith in you and stumpwm! Just kkep the work xD
[14:36:14] <nij-> (Thanks )
[14:36:44] *** Joins: selwyn (~selwyn@user/selwyn)
[14:39:22] <kakuhen> well, i guess I have "dumped" it in the sense that only my non-apple computers use stump, and I mostly just tinker on those computers or use them to test the "portability" of my emacs config
[14:40:09] *** Quits: z147 (~z147@gateway/tor-sasl/z147) (Quit: z147)
[14:40:10] <kakuhen> but i love the concept, and commits don't grow on trees, so hopefully I can get something done in the near future.
[14:40:47] <kakuhen> i want to see if it'd be possible to refactor the main io loop using some stuff from iolib, but I know it's going to be a very difficult task (I mean, there's a reason they're doing what they are right now)
[14:41:47] <kakuhen> with that said, I'm going to bed, good night.
[14:42:42] <nij-> GN :)
[14:43:09] *** Parts: nij- (~jin@2001-48F8-9021-806-0-0-0-EC96-dynamic.midco.net) (#lispcafe)
[14:45:14] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:51:31] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:28:17] <selwyn> https://www.youtube.com/watch?v=t17O2AKa2FU
[15:28:17] -ixelp- Australian man interrupts PM Morrison to say 'get off my lawn' - BBC News - YouTube
[15:28:54] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:33:12] <dave0> haha i gotta click that!
[15:35:59] <dave0> fuck we're dumb!
[15:36:06] <dave0> and we're all like that haha
[15:40:05] <selwyn> the comments claim that it is great evidence of australian democracy
[16:18:55] <pjb> So he can tell the PM to get off his lawn, but the PM can send the cops to force him to be injected experimental chemicals and RNAm‚Ä¶
[16:18:59] <pjb> great democracy.
[16:21:59] <dave0> nite all
[16:22:27] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[16:33:33] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 276 seconds)
[16:42:40] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 272 seconds)
[16:44:08] *** Joins: aeth (~aeth@user/aeth)
[16:47:23] * hayley thinks the new Doom is very stingy with checkpoints. Or she sucks at the game. Or both.
[17:03:34] <hayley> Another note on the pinkies: if their butts face a wall, it still counts as damage from behind if you get splash damage from a rocket at the wall.
[17:04:38] <ck_> which doom is that now? 5?
[17:05:20] <selwyn> sigh
[17:05:52] <selwyn> how involved would it be to write a discord bot in lisp
[17:07:34] <hayley> ck_: I bought 4.
[17:07:47] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 258 seconds)
[17:09:44] *** Joins: aeth (~aeth@user/aeth)
[17:10:13] *** Quits: clothespin (~awolven@2601:246:4000:1030:49a3:942:26fc:752c) (Remote host closed the connection)
[17:10:22] *** Joins: makomo_ (~makomo@user/makomo)
[17:15:33] * hayley beat the game.
[17:31:10] <lotuseater> hayley: nice, grats
[17:31:15] <lotuseater> wtf "Having your language designed by a committee is a big pitfall, and not just for the reasons everyone knows about."
[17:31:35] * hayley uploaded an image: (67KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/EncixfvQhfiXJQujIXxsyNNa/numan-cringe-department.jpg >
[17:32:04] <hayley> Generally I think of committee languages as better than BDFL languages.
[17:32:38] <lotuseater> this is from a post by paul graham
[17:32:56] <hayley> Why did he write a book on a committee language then?
[17:32:57] <lotuseater> the last paragraph: http://www.paulgraham.com/langdes.html
[17:32:58] -ixelp- Five Questions about Language Design
[17:33:12] <lotuseater> I don't know.
[17:35:52] <hayley> As for the other two pitfalls: 1. You aren't getting rid of network delay, and P2P is usually a good idea. 2. I actually do like to name things - I made a structure class which holds one list of things and that's all it does.
[17:36:17] <lotuseater> :)
[17:36:39] <hayley> Right 'ere: https://github.com/no-defun-allowed/SICL/blob/master/Code/Compiler/MIR-to-LIR/Register-allocation/adapt-arrangement.lisp#L54
[17:36:40] -ixelp- SICL/adapt-arrangement.lisp at master ¬∑ no-defun-allowed/SICL ¬∑ GitHub
[17:37:03] <lotuseater> i see
[17:37:09] <hayley> I'd need a wrapper object of some sort to have identity in any case.
[17:41:05] <lotuseater> register allocation sounds hard
[17:41:47] <sham1> It's a graph colouring problem, so NP
[17:42:31] <lotuseater> :(
[17:53:28] <lotuseater> phew didn't hear this in a long time: https://www.youtube.com/watch?v=wVfUimq2KeI
[17:53:28] -ixelp- BLACK SABBATH - 'God Is Dead?' (Official Audio) - YouTube
[18:12:55] *** Joins: silasfox (~sbv@xdsl-87-79-98-159.nc.de)
[18:22:27] *** Quits: silasfox (~sbv@xdsl-87-79-98-159.nc.de) (Quit: WeeChat 3.2)
[18:40:06] <gilberth> Good morning #lispcafe!
[18:40:28] <hayley> Good morning gilberth!
[18:41:04] <gilberth> Still up, milady?
[18:41:31] <hayley> Yes.
[18:50:15] <shka> hayley: was there any interesting compiler written in smalltalk?
[18:51:38] <hayley> I don't know of any.
[18:52:14] <shka> ok
[18:52:14] <hayley> The Squeak VM and JIT are written in a subset of Smalltalk, but I don't think it shows off Smalltalk well.
[18:52:21] <lotuseater> hi gilberth
[18:53:03] <lotuseater> shka: the smalltalk compiler itself? or this Pharo thingy
[18:54:12] <shka> compiler iteslf
[18:54:55] <hayley> Technically the Smalltalk compiler (which generates bytecode) is written in full Smalltalk, but it is not awfully interesting.
[19:08:08] <selwyn> today i went to get my second jab and all i got was this shoulder that hurts
[19:15:31] <ck_> that's what I got as well!
[19:15:37] <ck_> what a ripoff, for that price!!11 etc
[19:16:30] <selwyn> well, they also gave me two free tests
[19:18:18] <ck_> "damn brexit, favouring the british again", I got no such thing. Not even a blue passport
[19:18:52] <ck_> gave me a sensible chuckle: https://www.youtube.com/watch?v=RRkaWQJFkBQ#t=30s
[19:18:53] -ixelp- Vaccine Magnetic Powers #Shorts - YouTube
[19:22:08] <selwyn> imo the blue passport is fairly well designed but it fails at looking like it was from 1950s britain
[19:22:16] <selwyn> which was the sole purpose of introducing it
[19:35:16] <shka> dream hack europe SC2 online 
[19:35:35] <shka> go elazer, go! :D
[19:36:49] <selwyn> link?
[19:40:30] <shka> selwyn: https://pro.eslgaming.com/tour/sc2/schedule/
[19:40:31] -ixelp- Schedule - SC2 - ESL Pro Tour
[19:41:41] <selwyn> ty
[19:41:52] <shka> group C today
[19:42:40] <shka> huh, not just group C
[19:47:13] <selwyn> rush c
[20:00:28] *** Joins: copec (~copec@home.unaen.org)
[20:06:37] <shka> well no rush 
[20:06:45] <shka> because i am still waiting for the first match
[20:15:28] <gilberth> This literal programming of TeX uses so called modules. Like e.g. WHILE TRUE DO BEGIN @<Check for EOF@> ... END; And later @<Check for EOF@> is defined as some text to insert. Perhaps I turn that into local procedures, which Pascal has. Most modules are only used once or a few times within one procedure. I could do analysis and check, whether the module refers to any lexicals, and if not turn into a global procedure.
[20:16:34] <gilberth> I believe this sounds like a plan.
[20:19:49] <lotuseater> seems to do so
[20:22:22] <gilberth> Knuth only uses a subset of Pascal. No local procedures, no pointers, no VAR parameters and a lot of macros could just have been functions. And he works around that CONST A = 10; B = A-1; does not work in Pascal, constants could only be defined as a number (or string literal).
[20:23:35] <gilberth> And it's only constants, types, vars. No way to define them in a different order. WEB works around this.
[20:24:32] <gilberth> And labels are identified by non-negative integers, not by identifiers.
[20:29:31] <lotuseater> oh I didn't knew they isn't possible there
[20:33:04] *** Quits: makomo_ (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[20:33:12] *** Joins: makomo (~makomo@user/makomo)
[20:40:18] * lotuseater grabs out "Algorithms" by Sedgewick of his bookshelf and looks up some Pascal code
[20:40:47] <lotuseater> there are also C/C++/Java versions of this book. someone should do a competent CL translation
[20:48:23] <lotuseater> did you know Sedewick's PhD advisor was Knuth? he wrote about Quicksort
[20:52:43] <lotuseater> what does this "type link=‚Üënode" mean?
[20:57:08] <gilberth> In Pascal?
[20:57:28] <gilberth> typedef node *link;
[20:57:47] <lotuseater> ah so a pointer
[20:59:28] <lotuseater> time for spaghetti ice cream
[21:27:28] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[21:34:36] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[21:47:14] <gilberth> $AMD on the rise for a few days. That is great!
[21:49:46] <lotuseater> you mean in their financial course?
[21:50:20] <gilberth> The stock quote.
[21:50:28] <lotuseater> yes
[21:51:52] <gilberth> I have generate an income on the stock market as I don't work.
[21:53:02] <gilberth> Well, I do work, but not for money.
[21:55:14] *** Joins: sonnaz (~sonnaz@45.33.93.30)
[21:58:43] *** Quits: sonnaz (~sonnaz@45.33.93.30) (Remote host closed the connection)
[22:00:06] <selwyn> am tempted to relate a joke about germans
[22:00:15] <lotuseater> do it :)
[22:01:00] <selwyn> a german says to a turk ¬¥we germans work for our honour and pride whereas you turks only work for money¬¥ the turk replies ¬¥indeed everyone works to earn what he doesn¬¥t yet have¬¥
[22:06:52] <lotuseater> this C# guy tried to provoke me again "language nobody needs". then i claimed "so my feedback also to last week is we BOTH seem have to learn much" but just laughter about it, so again wasted energy to someone who is so narrow-minded
[22:10:17] <shka> oh, you get it all wrong
[22:10:25] <gilberth> So Germans have money and no honour and turks are poor?
[22:10:30] <shka> lotuseater: you don't know how to fight of C# guys!
[22:10:38] <lotuseater> shka: sure
[22:10:45] <shka> lotuseater: it is simple
[22:10:58] <lotuseater> and this guy is 10 years so "what do I know"
[22:11:04] <shka> you don't acknowledge that C# exists 
[22:11:16] <shka> and insists that they are programming MS java
[22:11:26] <lotuseater> :D
[22:11:34] <shka> this works 100% of the time :P
[22:11:50] <gilberth> What is Swing then? Apple Java?
[22:12:00] <shka> Swing or Swift?
[22:12:17] <gilberth> Oh dear, yes Swift of course.
[22:12:31] <lotuseater> i also told last week that C is a special purpose language, and stand behind it, cause it makes sense. first read about that in the beginning of PAIP, as C is "just" for dealing with register machines
[22:12:34] * gilberth apparently needs more coffee.
[22:12:46] <shka> no swift is cool, it is good that it exists
[22:12:55] <lotuseater> i thought Swift is more functional on top of Obj-C
[22:12:59] <shka> because otherwise they would have to continue to use obj-c
[22:13:05] <lotuseater> gilberth: or mate
[22:13:09] <gilberth> shka: Never looked into it.
[22:13:14] <shka> obj-C?
[22:13:18] <shka> obj-C is horrible
[22:13:29] <gilberth> It's bearable.
[22:13:38] <lotuseater> wasn't ID tech 1 also in obj-C?
[22:13:40] <shka> Obj-C is on the short list of languages that i consider to be worse then C++
[22:13:45] <shka> lotuseater: no, C
[22:13:52] <gilberth> The CCL Objective C bridge is pretty nice.
[22:13:57] <shka> same as ID tech 2
[22:14:02] <shka> and ID tech 3
[22:14:08] <lotuseater> shka: a right, i got something else from IDs history in confusion
[22:14:18] <shka> the first ID tech that was not just C was Doom 3 
[22:14:33] <shka> and even that was just very conservative subset of C++
[22:14:34] <lotuseater> and then John Carmack left :D
[22:14:45] <shka> not quite!
[22:14:53] <shka> there was that rage game in the meantime 
[22:14:58] <gilberth> C is a PDP-11 assembler.
[22:15:00] <lotuseater> i showed gilberth yesterday a repo with a CLOS subset for C
[22:15:57] <gilberth> B was word oriented and as they moved to the PDP-11 which is byte oriented, they added types to B and called it C.
[22:16:23] <lotuseater> shka: is C# even standardized? as I'm also not too bad in functional thinking F# would be more friendly. just maybe
[22:16:50] <shka> F# is AFAIK like ocaml
[22:16:56] <lotuseater> yes it is!
[22:17:04] <lotuseater> let alone the syntax
[22:17:44] <lotuseater> and Microsoft got some of the Haskell dudes for their Research Group in Cambridge. isn't there also this LINQ?
[22:18:19] <shka> yeah, but i don't know why people get so worked up about linq being functional
[22:18:29] <lotuseater> but Ocaml stays of course being the better OCaml
[22:18:47] <mariari> F#. They took ocaml, removed the object system (good), then removed the functor system for modules
[22:18:57] <mariari> so it's mostly a worse ocaml
[22:19:16] <lotuseater> I don't know, isn't it also a DSL? Turing completeness or not
[22:19:48] <mariari> LINQ is just sugar over map, filter, etc. with odd names, no and special syntax that mirrors sql or something?
[22:20:25] <lotuseater> ah hmm
[22:26:41] <shka> mariari: well, it can compile to SQL iirc
[22:26:47] <shka> which is somewhat useful
[22:26:51] <mariari> can it actually?
[22:26:54] <shka> and is lazy evaluated
[22:26:59] <shka> subset of it
[22:27:02] <shka> obviously
[22:27:10] <mariari> well it's just using streams as the representation at that point, like java's stream
[22:27:19] <shka> yes
[22:27:30] <lotuseater> i have to learn how to do SQL stuff with CLSQL
[22:27:42] <mariari> they probably just have it be a C# type, then ship that off to an SQL lib they have around
[22:27:48] <shka> but java streams came later so there was a moment where linq was the hot shit
[22:28:01] <mariari> I guess, but F# existed at the time
[22:28:08] <mariari> so it was really for just those people who liked java/c#
[22:28:14] <shka> yes
[22:28:30] <shka> anyway, i also made java streams for common lisp
[22:28:30] <mariari> I've always found it confusing, as I have to remember which one is map
[22:28:35] <shka> and it is useful
[22:28:40] <mariari> yeah, streams are a nice structure in general
[22:28:42] <mariari> they give you fusion
[22:29:25] <mariari> in ocaml a lot of my code uses the Jane Street's Core with streams being my generic processor
[22:30:03] <lotuseater> oh java streams for cl
[22:30:22] <lotuseater> but i don't know what makes java streams different
[22:30:53] <lotuseater> mariari: ah yes Jane Street profits from OCaml
[22:30:59] <mariari> Streams typically we can view as some sort of lazy list, CL uses it for a different purpose 
[22:31:02] <mariari> well they use ocaml a lot
[22:31:06] <lotuseater> and there is this Mirage OS for unikernels
[22:31:07] <mariari> if they used SML it would be the same story
[22:31:30] <mariari> OCaml is a rather nice language, my biggest complaint is that it's not a lisp nor image based
[22:31:32] *** Joins: OlCe (~user@amontpellier-658-1-232-244.w109-210.abo.wanadoo.fr)
[22:31:41] <lotuseater> ah hmm
[22:32:51] <lotuseater> but saying directly to me something like "nobody needs that" gives me the feeling of an underlying message "so nobody needs you"
[22:33:41] <mariari> what do you mean?
[22:34:10] <lotuseater> from such people like the C# guy i told you about. a member of the hacker space where I'm active
[22:34:52] <mariari> Oh, I didn't scroll that far back, I saw  the F# comment and mentioned how it is different from ocaml
[22:34:58] <lotuseater> no problem :)
[22:34:59] <selwyn> good thing i never committed to learning obj c then
[22:35:18] <selwyn> it seems powerful but maybe in a bad way
[22:35:57] <lotuseater> selwyn: there is also this Dylan. funny because one of my former padawans has this name :D
[22:37:11] <selwyn> what is that like
[22:37:48] <lotuseater> hm it's also from Apple, more ideas of lisp and a subset of CLOS afaik
[22:45:08] <gilberth> It's Common Lisp with funny syntax.
[22:45:15] <lotuseater> :D
[22:45:57] <gilberth> I always wonder what would have happened, if they would have used a curly syntax instead.
[22:45:57] <lotuseater> gosh even that is older than me, but noch much
[22:46:36] <lotuseater> "Influenced by: CLOS, ALGOL, Scheme, EuLisp"
[22:52:02] <shka> gilberth: same result
[22:52:05] <mariari> I always mix up D with dylan
[22:52:09] <mariari> no wonder why I'm wrong
[22:52:37] <shka> dylan failed because of no fault of it's own
[22:52:38] <lotuseater> so is D a better C++? :)
[22:52:52] <shka> lotuseater: it is, but is also really dead
[22:53:15] <mariari> moon went on to come up with interesting languages
[22:53:15] <lotuseater> okay many like Rust or go
[22:53:20] <mariari> sadly they never got implemented
[22:54:51] <shka> of go, rust and D i liked D the most
[22:55:21] <mariari> out of go, rust and D, I throw my hat with Cyclone (Cyclone is rust before rust with regions instead of linearity)
[22:55:22] <shka> regarding go vs rust, i have not decided yet
[22:55:37] <shka> but i think i would rather go with go
[22:56:48] <shka> *sigh*
[22:57:19] <shka> C# kids at work are happy because they figured out how to download part of the youtube video
[22:57:27] <shka> they consider this to be achievement 
[22:58:13] <shka> and they even want to blog about it
[22:58:30] <shka> i pasted youtube-dl https://www.youtube.com/watch\?v\=dQw4w9WgXcQ -o - | ffmpeg -i pipe: -ss 00:00:18 -to 00:0:30 -c copy output_video.mp4 
[22:59:30] <shka> i just don't get how someone can get so worked up about "we figured out that we can save PART of the stream"
[22:59:33] <shka> wtf dudes
[22:59:38] <lotuseater> :D
[22:59:43] <lotuseater> "C# kids"
[22:59:52] <shka> yeah
[23:00:02] <shka> i mean, they are kinda annoying bunch 
[23:00:17] <shka> i think that they are doing good job in the company
[23:00:32] <lotuseater> yes I don't doubt that too :)
[23:00:33] <shka> but why the hell they are getting so worked up about the most trivial things?
[23:01:05] <lotuseater> don't know
[23:01:28] <shka> at least no discussions about tabs vs spaces... yet
[23:02:29] <mariari> at least they solved the braces argument....
[23:03:02] <shka> oh, right
[23:03:18] <shka> they simply do as MS tells them in that regard
[23:03:20] <shka> so that's nice
[23:04:23] <selwyn> are they downloading youtube with a c# framework or sth
[23:05:04] <shka> i don't know honestly, but probably youtube-dl
[23:05:11] <shka> what else is there?
[23:05:57] <shka> i wonder about one thing though...
[23:07:29] <shka> nah, youtube-dl won't do anything with &t
[23:07:41] <shka> i was expecting it, but still...
[23:09:29] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:10:14] <selwyn> shka: idk, i mean i actually remember capturing youtube content and feeling really proud as a relative newbie
[23:10:33] <shka> i guess
[23:10:53] <shka> but they have a few years of programming job behind the belt 
[23:10:56] <selwyn> i guess that as you get better at something, the amount of pleasure you get from doing it goes down
[23:10:59] <selwyn> diminishing returns
[23:11:03] <selwyn> shka: i see
[23:20:44] <selwyn> shka: what do they think of your cs go analytics
[23:21:11] <shka> i don't actually do analytics at the moment 
[23:21:32] <shka> i spent last month and a half working on new data pipeline
[23:21:41] <shka> i just managed to deploy it yesterday 
[23:22:08] <shka> that unholy mix of go and lisp
[23:22:50] <shka> which is nice because finally we don't need twice as much memory as the demo file size to actually process it
[23:23:12] <shka> and much less time required as well
[23:23:22] <shka> and perhaps results are finally correct :P
[23:23:52] * selwyn would like correct results as well
[23:24:37] <shka> there were problems in the old system that were difficult to fix
[23:25:12] <shka> for instance entity id was used as an unique identifier of entity 
[23:25:45] <shka> this caused a few problems, for instance when player disconnects and reconnects again
[23:26:11] <shka> and some bugs were just mind boggling
[23:27:55] <shka> in general dudes didn't knew the elementary low level stuff, lacked insight into how game engines work, and they seem to work mostly on web apps
[23:28:42] <shka> and mostly with django so they didn't knew how to properly make use of transactions
[23:29:41] <shka> in general, it is great that this old system is finally gone
[23:29:49] <shka> but i barely started working on something different 
[23:30:13] <shka> right now i aim to do graph based rounds visualizations
[23:30:31] <shka> but i have sneaky plan to also make a search engine 
[23:31:09] <shka> which would allow to find other instances when a given team rotates in particular fashion 
[23:31:18] <shka> or enter bombsite
[23:33:10] <shka> selwyn: which is funny but i plan to use methods very much like those i used for the covid drugs
[23:33:11] <shka> :P
[23:34:01] <selwyn> i hope they are paying you enough for this shit
[23:34:22] <selwyn> though i suspect not, as you are applying for ravenpack
[23:34:39] <shka> well, it is no longer shit, because i managed to remove the bane of my existance
[23:34:53] <ck_> Bane?!
[23:35:08] <shka> and ravenpack does not want to hire me anyway
[23:35:54] <lotuseater> selwyn: how do you see it, what would be the minimal payment per hour for serious coding? or pain compensation when one does Java or Co.
[23:36:03] <lotuseater> shka: :/
[23:36:10] <shka> selwyn: oh, and since yesterday already 500 demos processed 
[23:36:45] <shka> lotuseater: gonna need a lot $$$ for hookers and coke 
[23:36:58] <lotuseater> haha like in this bender meme
[23:37:00] <shka> #rockstar-programmer
[23:37:11] <selwyn> i have no idea, i never had a job actually
[23:37:11] <lotuseater> shka: sure oyu are :)
[23:37:23] <selwyn> but shka seems to go above and beyond in doing data things
[23:37:42] <shka> lotuseater: not really, i just find the term to be so silly
[23:37:43] <lotuseater> i said 10 bugs an hour would be enough, but others seem to discard that
[23:37:56] <lotuseater> of course it is :D
[23:38:16] <shka> the only thing which is funnier is perhaps code ninja
[23:38:27] <shka> who the fucks comes up with those
[23:38:28] <lotuseater> for someone who's so bloated he says "i know and can do everything"
[23:38:53] <lotuseater> or magician :) but I use to call myself "magician's apprentice"
[23:40:33] <shka> https://www.youtube.com/watch?v=4hR7S3lLP28
[23:40:34] -ixelp- Opeth - Master's Apprentices (Audio) - YouTube
[23:41:03] <lotuseater> i read "Master" and thought of Doctor Who ^^
[23:41:18] <selwyn> i liked brogrammer
[23:41:29] <selwyn> was that even a real thing
[23:41:33] <shka> brogrammer xD
[23:41:36] <shka> good one
[23:41:42] <lotuseater> but i think as magician's apprentice more of the Disney adaption from long ago of Goethes novel
[23:41:45] <shka> programmer, but bro
[23:42:05] <lotuseater> or the south park parody of the Disney thing with Mr Hankey the christmas poo :D
[23:42:14] <lotuseater> lol
[23:42:43] <lotuseater> ah damn it's "Sorcerer's Apprentice"
[23:43:07] <lotuseater> https://www.youtube.com/watch?v=VErKCq1IGIU
[23:43:08] -ixelp- Fantasia(1940) - The Sorcerer's Apprentice, First Part - YouTube
[23:43:46] <shka> SICP vibes
[23:44:09] <lotuseater> shka: that's also one of the intentions :)
[23:44:14] *** Quits: copec (~copec@home.unaen.org) (Remote host closed the connection)
[23:44:51] *** Joins: copec (~copec@home.unaen.org)
[23:49:06] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:d560:82b8:97b4:9051) (Remote host closed the connection)
[23:49:29] <shka> damn, i forgot how sick this opeth track is
[23:51:33] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[23:51:48] <shka> on other topic
[23:51:59] <shka> anybody owning system76 machine?
[23:52:55] <lotuseater> no but I would like to hear about what that is
[23:53:42] <lotuseater> and shka, for which position did you apply at ravenpack?
[23:54:00] <shka> common lisp programmer
[23:54:12] <lotuseater> makes sense :)
[23:55:34] <mariari> what does ravenpack do?
[23:55:38] <lotuseater> often a circular problem with the "you should have 3 years of experience" and they just count experience of (payed) employment
[23:55:53] <lotuseater> mariari: it seems they do analytical stuff
[23:56:30] <shka> well, it is weird because i have like 10 years sunk into cl
[23:56:39] <shka> but still no cigar
[23:56:40] <shka> eh
[23:56:41] <mariari> that's quite a bit!
[23:56:47] <lotuseater> then it makes it muuuch weirder
[23:57:29] <lotuseater> or when there stands "you should have a PhD". ooooh of course, I can just do awesome and really good work by having a PhD
[23:57:58] <mariari> phds just mean you are specialized in some area. It's really nice in some cases
[23:58:08] <mariari> I work with type theory phds and they tend to know quite a bit about that subject
[23:58:17] <mariari> but for general work, it seems to be an overkill requirement
[23:59:00] <lotuseater> mariari: oh sounds great. type theory can be interesting (or at least category theory)
[23:59:10] *** Joins: ec (~ec@gateway/tor-sasl/ec)
