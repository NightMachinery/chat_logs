[00:00:27] <White_Flame> selwyn: I don't think so.  reddit is more about subcommunities than a general broadcast thing
[00:00:40] <White_Flame> although there are people who browse r/all or whatever
[00:00:57] <White_Flame> and with communities comes moderation :-P
[00:01:26] <White_Flame> I don't even know what twitter counts as, other than bad ;)
[00:01:43] <White_Flame> (like everything, there is a reasonable way to use it, and that would be for making business/personal announcements to followers)
[00:07:59] <hayley> Good morning everyone!
[00:08:05] <selwyn> good morning
[00:16:37] <sm2n> White_Flame: Reddit actually stopped providing default subscriptions a couple years ago because it was going out of control
[00:17:09] <sm2n> There absolutely was a "reddit community/culture" from that sort of thing
[00:44:38] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[00:50:05] <aeth> reddit was the driver of nerd culture, not culture in general, around 2010 or so
[00:50:26] <aeth> but as they go more mobile and more casual and more meme/image over time (a very gradual trend), it becomes more and more of just a generic social media site
[00:51:09] <aeth> 2008-2010 Reddit was basically what Hacker News is today (except with a broader range of topics and eventually the existence of subreddits... idk when that started, maybe 2009?)
[00:51:28] <aeth> (HN is basically just startups+tech+California)
[00:51:40] <aeth> (with a bit of /r/lisp that becomes less and less prominent over time)
[00:51:55] <aeth> and nothing is like 2008-2010 HN
[00:52:35] <aeth> You could lose all day in /r/askreddit back in the day, but now that Reddit is a meme/mobile site, nobody writes extensive, interesting stories (even if they were probably false). The long-form comment is dead on Reddit.
[00:52:59] <aeth> r/bestof isn't ery active these days and I doubt anything in r/bestof would have stood out on reddit pre-2012
[00:53:29] *** Joins: Alfr (~Alfr@user/alfr)
[00:53:55] <aeth> r/atheism was one of the first cringe subreddits, but ironically, r/atheism has improved considerably because these days, it's mostly like what old Reddit used to be (news stories) and new Reddit is like what old r/atheism used to be (memes and low-quality images)
[00:54:09] * hayley was 1000th subscriber to r/dankmemes back in the day
[00:54:14] <aeth> I think r/atheism sold its soul to trade places with the rest of /r/all
[00:54:26] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[00:57:48] <aeth> speaking of "nerd culture"
[00:57:56] <aeth> after the '10s, I'm not even sure if nerd culture is a thing anymore
[00:58:17] <selwyn> it is
[00:58:30] <selwyn> but there is little positive about it imo
[00:59:03] <aeth> speaking as an '00s nerd, everyone outnerds me these days. D&D is mainstream. Hell, even anime is mainstream. I stayed away from that because I didn't want to be *too* uncool in high school. And every big movie is a superhero movie
[01:01:01] <aeth> but it's more geek than nerd, I guess
[01:03:06] <aeth> The difference: A nerd will tell you about how (actual) physics works. A geek will tell you about how The Force in Star Wars works.
[01:16:04] <gilberth> Good morning #lispcafe!
[01:16:22] <hayley> Good morning gilberth!
[01:17:04] <hayley> I sent <https://github.com/no-defun-allowed/re-benchmarks> to burntsushi, so we'll get to find out how he reacts.
[01:17:05] -ixelp- GitHub - no-defun-allowed/re-benchmarks: Some regular expression benchmarks
[01:17:16] <White_Flame> hayley: neat
[01:17:35] <White_Flame> shattering people's perceptions about lisp & performance is always nice to see
[01:17:45] <hayley> (It's really just variations on one regex I like, because it actually exercises the DFA, rather than just a substring search.)
[01:18:51] <gilberth> I wonder, given a machine with a very expensive stack, could I apply sth like register allocation to the whole program? I have an unlimited number of registers. Without recursion, you could make all local variables and parameters as being declared 'static' in C. However, when FOO never is active while BAR also is active, both could share the same registers for its locals.
[01:19:08] <copec> This seems like something hayley would share, if she hasn't already: https://youtu.be/KvOoR8m0oms
[01:19:09] -ixelp- Laurie Anderson - Language Is A Virus (From Outer Space) - YouTube
[01:20:00] <White_Flame> gilberth: a "software stack" is not an uncommon thing when running high level languages on limited CPUs
[01:20:26] <White_Flame> I know some 6502 C compilers default to static, and you have to declare functions as reentrant
[01:20:28] <gilberth> hayley: Your 7GC/s are impressive. I wonder if it would help with a say JSON scanner. Also given that I perhaps could be faster still as I could use sentinels for end-of-buffer as I wish.
[01:20:48] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[01:21:50] <gilberth> White_Flame: Well, I want a compiler, which doing analysis on the whole program could recognize that certain functions are never re-entered and allocate the locals to global (static) "registers" that is memory locations.
[01:22:08] <White_Flame> do you support function pointers?
[01:24:17] <gilberth> White_Flame: Turbo Pascal for the 8080 also is like that. There is a compiler switch for enabling and disabling re-entrancy, as it is a pain with the 8080 to address relative to SP. It's not that bad with the 8080 as you have a real stack with a 16-bit stack pointer and PUSH and POP, but relative addressing to a stack or frame pointer is expensive. When writing assembly this often is suffice as you have a handful of registers.
[01:25:09] <gilberth> But a compiler would need pretty good register allocation there to do without stack relative addressing.
[01:26:16] <gilberth> It's less severe with the Z80 though. And the 8085, which is the 5V version of the 8080 had undocumented, but always implemented, instructions for stack relative addressing. Incompatible to the Z80 and therefore perhaps never used.
[01:28:38] <gilberth> Anyhow, for my ISA having a software stack is no problem, it just is very expensive. I need seven instructions for a push operation. I just wonder if a compiler could eliminate the need for a stack for some subroutines. I mean, in actual code, a surprisingly large number of functions are not re-entered ever.
[01:29:24] <gilberth> Also note that FORTRAN has no recursion either. ;-)
[01:29:46] <White_Flame> right
[01:31:27] <hayley> gilberth: Done before, so "probably": https://simdjson.org/
[01:31:28] -ixelp- The simdjson library
[01:32:51] <gilberth> Bah! I can do 3GB/s without SIMD for scanning alone. But then I also would need to hash as I would want to intern the JSON object keys.
[01:33:59] <gilberth> That SIMD JSON is perhaps handwritten. I wonder, if using CLEX2 could be made that fast.
[01:36:06] <hayley> That's the lexing part though. simdjson makes a parsed result too.
[01:36:28] <hayley> https://arxiv.org/pdf/1902.08318.pdf
[01:37:05] <gilberth> Are keys interned?
[01:39:02] <hayley> Not sure.
[01:40:02] <sm2n> hayley: I find it amusing how much more verbose the rust benchmark is vs the CL one
[01:40:23] <gilberth> And floating point "interning" is pretty expensive, too.
[01:40:40] <hayley> sm2n: IIRC they were about the same length, though I also chose to FFI out to Hyperscan from Rust.
[01:41:25] <hayley> Well, RegexBuilder::new("([0-9]+)x([0-9]+)").unicode(false).build().unwrap(); is a stinky mess. Too bad they don't have compiler macros.
[01:41:27] <sm2n> oh, that explains it
[01:41:32] <hayley> ...or keyword arguments, which would help.
[01:41:57] <sm2n> I think my perception of how verbose it was was coloured by the syntax approaching linenoise
[01:42:11] <sm2n> just need some sigils
[01:42:41] <hayley> As opposed to (one-more-re-nightmare:all-matches "[0-9]+x[0-9]+" *log*) it's pretty unfair, yes.
[01:42:41] <sm2n> Obviously I'm biased since I spend much more time reading CL than rust
[01:42:59] <hayley> .oO(eRgOnOmIcS)
[01:45:17] *** Joins: Alfr (~Alfr@user/alfr)
[01:45:22] <drakonis> perhaps it should be posted on hn or lobsters that omrn is faster than ripgrep :v
[01:46:23] <sm2n> lol
[01:51:47] <gilberth> At the end of the day this is about using a DFA, which nobody else could do once you have submatch addressing, as you can see with (a|aa)*. It's the complexity, stupid!
[02:00:08] <clothespin> what's a DFA?
[02:01:06] <Inline> deterministic fake antagonist
[02:01:11] <Inline> lol
[02:04:03] <selwyn> discrete finite automaton (?)
[02:05:41] <Inline> and NFA is neverending fucking compiler
[02:06:06] <Inline> compila
[02:06:09] <Inline> lol
[02:09:39] <White_Flame> dingleberry follicle attachment
[02:22:02] <hayley> Data Flow Analysis
[02:23:32] <gilberth> Right.
[02:24:21] <gilberth> clothespin, selwyn: DFA = deterministic finite automaton
[02:24:51] <gilberth> NFA is a non-deterministic finite automaton.
[02:25:11] * selwyn prefers nft
[02:25:34] <gilberth> The former is at a single state at each time, while the latter is in a set of states at any given time.
[02:25:51] <hayley> gilberth: And the compiler, and some SIMD for decoration.
[02:26:10] <selwyn> we have had this conversation before, but this rather suggests a quantum finite automaton
[02:26:58] <gilberth> Kind of. Point is, with a classical machine, you can only simulate an NFA. Backtracking is a common strategy for that.
[02:27:16] <selwyn> yes
[02:28:04] <gilberth> An NFA without output could be turned into a DFA. This is the subset construction method. lex(1) uses that e.g.
[02:28:31] <selwyn> why would you use an nfa? ease of applicability?
[02:30:01] <gilberth> selwyn: When the NFA has output you can't turn that to an DFA. This output is the submatch addressing. Like in say (a*)(b*) where you not only get accepted/not-accepted, but also \1 and \2 being the as, and bs.
[02:30:10] <selwyn> oh
[02:30:50] <Inline> hmmmm
[02:30:59] <gilberth> My invention is to use the RE derivatives to turn (a*)(b*) into an DFA.
[02:32:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[02:32:56] <gilberth> Also note that while an DFA without output has an equivalent minimal DFA, a DFA with output has not. Rather, it's not decidable, to be precise.
[02:34:50] <gilberth> Anyhow, any RE engine besides ours, need to have an NFA for figuring out the \1 and \2 parts. Thus matching time not only depends on the size of the input, but could also be exponential to the size of the RE. With an DFA the matching time is linear to the size of the input. The size of the RE does not matter.
[02:35:18] <moon-child> gilberth: I thought you have infinite registers?  Why do you care about reusing them?
[02:35:54] <gilberth> moon-child: Because those registers still have costs.
[02:37:27] <gilberth> I just wante to be clear about that with register I mean just a memory word somewhere at a fixed address. The old meaning of "register" and not some very limited set of CPU registers.
[02:38:24] <moon-child> anyway: if f never calls g, or calls a function that calls g, and g never calls f, or calls a function that calls f, then they can never overlap
[02:38:41] <moon-child> or do you want some kind of fancy flow-based graph colouring thing?
[02:39:26] <gilberth> Yes, I ponder if I could do sth like global [whole program] register allocation using that analysis.
[02:39:28] <moon-child> (like: a { if (cond) f(); }; f { b(); } b { if (!cond) { g(); } }
[02:39:42] <moon-child> )
[02:41:35] <gilberth> And I wonder how fancy compilers for crippled 8-bit MCUs are here.
[02:41:49] <moon-child> I think the gains would be slim
[02:41:58] <moon-child> vs just assuming a function always calls everything it calls
[02:42:20] <gilberth> Including itself?
[02:42:40] <moon-child> well, no, but a recursive function has to use the stack anyway
[02:44:07] <gilberth> Yeah, that's trivial. But still I could imagine some gains. It's not that relevant today. But consider MCUs of the 90s with very little RAM where every bit counts.
[02:46:46] <moon-child> I think traditional interference-graph colouring would probably work
[02:50:04] <gilberth> It's somewhat relevant still with those tiny MCUs like the MSP430. There are devices with just 512 bytes SRAM, which you could get for like $0.40 a piece. (Perhaps modulo chip crisis).
[02:51:04] <gilberth> And as you can't really effort a possible stack overflow with embedded devices, that kind of compiler might have use.
[02:52:13] <gilberth> But with time as SRAM gets cheaper slowly, this gets less and less relevant. /me shrugs.
[02:53:53] <hayley> https://twitter.com/QuotesOfJGB/status/1479386544876269568
[02:54:00] <moon-child> (defun f (cond) (if cond (let ((x 5)) (g cond)) (g cond))) (defun g (cond) (unless cond (let ((x 5)))))
[02:54:32] <moon-child> supposing you didn't kill your exes.  i bet with graph colouring you could allocate them to the same place
[02:55:12] <gilberth> Yep, this is what I am after.
[03:00:14] <gilberth> Wow. The MCU my former company uses quintupled in price and has a lead time of 95 weeks. Fun.
[03:01:01] <gilberth> quindrupled, perhaps? Anyhow, a 400% increase.
[03:07:04] <moon-child> give it a couple years, it'll be back to normal
[03:09:23] <gilberth> Sure. While that my ex business partner will have fun.
[03:13:32] <selwyn> gilberth: see if they are in stock over here
[03:13:33] <gilberth> I am more concerned about general inflation rates. Don't bother me personally so such, as I have little money. But heating and electricity will get unaffordable for the poor. Last I checked we are at EUR 0.42/kWh.
[03:14:40] <gilberth> selwyn: Heh. Nah, I just indulge in schadenfreude.
[03:15:41] <moon-child> inflation is _supposed to_ apply to wages too
[03:15:43] <moon-child> :/
[03:16:55] <gilberth> moon-child: Yes, increase wages => more inflation still. And I won't hold my breath for increased wages.
[03:18:27] <gilberth> I rather wait for a real estate crisis, so I could afford to buy some nice flat.
[03:19:50] <moon-child> lol
[03:23:31] <gilberth> Well, inflation might prompt the central bank to increase interest. This will lead to people not being able to pay the mortage anymore and the houses being auctioned en masse.
[03:24:34] <gilberth> Anyhow, when I build a flow graph such that a RET instruction has successors being all the call sites, that should work by the book, shouldn't it?
[03:26:11] <gilberth> However, as I want function pointers, too, this gets more complicated. Hmm.
[03:26:22] <selwyn> if anyone is weird and enjoys this sort of thing
[03:26:49] <selwyn> i would appreciate a cv/resume review for an upcoming application if you have the time
[03:27:33] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[03:27:59] <gilberth> I'm not qualified.
[03:33:50] <moon-child> I don't think function pointers complicate things that much
[03:34:24] <moon-child> assume an indirect call could be a call to any function with a matching signature
[03:34:33] <moon-child> do some flow analysis to figure out otherwise if you care to
[03:34:53] <gilberth> It's easier even: Every function whose pointer is taken off.
[03:35:29] <gilberth> I mean, if you don't say #'FOO anywhere, FOO could not be invoked with (FUNCALL F ...)
[03:35:34] <moon-child> sure, yes
[03:35:39] <moon-child> but flow analysis would give that to you as well
[03:35:51] <moon-child> because #'FOO would not be in the set of functions that could be called at that point
[03:37:05] <gilberth> Yep. As in: Suppose you have no function pointers, you could turn a (FUNCALL F ..) into a (CASE F (FOO (FOO ...)) (BAR (BAR ...)) ...)
[03:37:33] <gilberth> And I am not compiling a dynamic language or one that would offer reflection of any kind.
[03:40:16] <moon-child> oh, this is the c compiler?
[03:41:09] <gilberth> B with s-expressions, essentially.
[03:41:13] <moon-child> ok
[03:44:17] <gilberth> I need a name. I called that PLZ like "programming language zero", but I don't like it.
[03:46:00] <moon-child> it has s-expressions.  As anything can be called 'lisp' these days, I suggest 'bisp'
[03:46:31] <moon-child> (b)-(i)nspired (s)-ex(p)ressions
[03:47:04] <Inline> bexp
[03:47:22] <gilberth> Heh! And I have macros written in CL. And in contrast to B, there is no distinction between statements and expressions.
[03:47:46] <Inline> bexpressive
[03:47:51] <gilberth> B is not a Lisp = BINAL?
[03:49:35] <moon-child> sounds like 'banal'
[03:49:43] <moon-child> B Ain't No Lisp--still need another 'a'.  Hmm
[03:50:00] <hayley> Someone: "I parallelised some code, and I think it could scale to hundreds of threads" Me: "Wanna bet?" 
[03:50:14] <gilberth> Hey! I like "banal" as this lanuage really is trivial.
[03:51:24] <gilberth> Trouble is: At the end of day it should be self-hosting and as such would need a Lisp inside the compiler.
[03:51:54] <gilberth> As I want to retain being able to use Lisp in macros.
[03:51:55] <moon-child> yeah, cl macros seem strange.  If you are going to have a separate macro language you might as well use m4 ;)
[03:52:14] <hayley> OTOH, hey, free parallel GC benchmark.
[03:52:31] <gilberth> Right. Everything is a string, isn't it?
[03:53:11] <gilberth> Nah, a simple Lisp is not hard. It doesn't need to be a full CL with all bells and whistles.
[03:53:17] <hayley> .oO(Apparently all metadata in Rust is.)
[03:53:35] <moon-child> well, fair enough.  And I guess you can skip on gc also since you throw everything away at the end
[03:54:18] <hayley> .oO(Thread local GC when)
[03:54:30] <gilberth> moon-child: For a compiler, yes. But a simple mark-and-sweep collector isn't exactly hard.
[03:54:47] <moon-child> sure
[03:55:00] <gilberth> I want to boot a Lisp anyway.
[03:55:03] <hayley> Writing a non-bump allocator is a little hard.
[03:55:24] <gilberth> I should be less lazy and gather what I need for a workshop and build the damn thing.
[03:55:29] <moon-child> hayley: you can do a buddy allocator in 12 lines of code, if you are whitney
[03:56:39] <hayley> https://www.youtube.com/watch?v=OK6MCxEETB4
[03:56:40] -ixelp- Bombers ('79 Live Original Mix) - YouTube
[03:56:46] <gilberth> At the end of day, I want that machine being useful without a host. I want a file system, a compiler, and an editor. The file system could be on a file server, that would be fine with me. Perhaps I'll use Chaosnet :-)
[03:56:47] <moon-child> and: conses are easy, just put them on a freelist
[03:57:20] <gilberth> moon-child: Yep. And with mark and sweep I don't even need to be precise.
[03:57:40] <moon-child> gilberth: if you care to be self-sufficient, why bother with the 'b' part?  Just write the lisp
[03:58:39] <gilberth> moon-child: Because I want an easy "system programming" language. Like B, a very thin layer above assembly.
[03:58:54] <hayley> https://www.youtube.com/watch?v=jWu9SOExJqw
[03:58:55] -ixelp- Flamin' Hot Cheetos Sausage - YouTube
[03:59:09] <hayley> Port LLVM to B32, so you can run Rust programs. lol
[04:00:01] <moon-child> gilberth: I would rather give optional static typing to lisp.  (defun f ((x fixnum)) (+ x 2)).  That way you do not have to be stratified like unix
[04:00:34] <moon-child> that way, you can easily call b from lisp and vice versa
[04:00:35] <hayley> You have declared concrete types, prepare to lose subscriber
[04:00:39] <moon-child> so the system is more composable
[04:01:11] <hayley> https://www.igorslab.de/en/intel-deactivated-avx-512-on-alder-lake-but-fully-questionable-interpretation-of-efficiency-news-editorial/ Fucking what
[04:01:12] -ixelp- Intel completely disables AVX-512 on Alder Lake after all - Questionable interpretation of “efficiency” | News / Editori [...]
[04:01:16] <gilberth> hayley: With 512kW of memory? With the current design the whole address space is only 16MW. The ISA is good for 256MW.
[04:01:27] <moon-child> hayley: yeah I saw that :<
[04:01:44] <moon-child> gilberth: memory is measured in watts now?
[04:02:03] <gilberth> moon-child: Yep, I'll get there. I consider to declare variables being a Lisp object for a precise GC. Then the Lisp compiler could target BANAL.
[04:02:20] <gilberth> moon-child: words. I am word-oriented.
[04:09:29] *** Quits: waleee (~waleee@h-98-128-229-110.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[04:11:43] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:23:51] <gilberth> Memory is a concern. I wonder how hard it would be to use old SIMM modules considering that would need to build a memory controller with TTL chips. And that memory is pretty slow. But fast (10ns) 512kB SRAM chips are readily available and affordable, so sth like 2MW would be feasible. And you can go a long way with that, I guess.
[04:24:20] <hayley> Just use a lot of swap.
[04:24:51] <hayley> You wanted a GC memory controller, right? Might as well design that as part of the MMU.
[04:25:07] <gilberth> hayley: You design the MMU!
[04:25:27] <hayley> Fine.
[04:26:03] <hayley> Just use the SRAM as a cache, and have enough logic to do PIO interfacing with a PATA drive. Easy.
[04:26:10] <gilberth> And you solder the TLB. It shouldn't slow down memory access by more than perhaps 10ns. Have fun.
[04:26:47] <gilberth> hayley: Cache? You solder.
[04:27:04] <hayley> 10ns!?
[04:27:15] <gilberth> Yep.
[04:27:34] <hayley> Shove it, then.
[04:27:53] <gilberth> I need 20ns for a 32-bit ALU op. I need to fetch two memory words for one instruction.
[04:28:45] <gilberth> So you better be fast. This is not an 70s microcode design.
[04:29:56] <gilberth> The memory latency is my bottleneck. No surprise there.
[04:33:30] <hayley> https://www.youtube.com/watch?v=Y2sTQl25rW0
[04:33:31] -ixelp- Sparks - My Way + This Town Ain't Big Enough For Both Of Us (Live In Germany 1995 pt 6/6) - YouTube
[04:34:32] <gilberth> But actually an MMU could be feasible. I do not need be concerned about context switches, There are no context switches and I won't run a UNIX. Those 512kB chips are available and affordable. With 10ns access time. 512kB is 19 address lines. With an 28 bit address space, this leaves me with 9 bit offsets within a page for 512W pages.
[04:37:00] <gilberth> Hence I could get away with a one-level page table. Just route the top 19 address bits though the page table. Logic around will be tricky, like writing that page memory and act on page faults. The latter would complicate the CPU.
[04:39:37] <gilberth> Still. 2MW is plenty. That is 16MB, suffice for X11 + Emacs + CLISP.
[04:40:21] <gilberth> Nah, 8MB. Okay, I extend to 4MW then. That's 32 chips, still feasible.
[04:40:54] <moon-child> 640x480 framebuffer is already 1mb
[04:41:14] <moon-child> since you compare with x
[04:41:39] <gilberth> Who needs color?
[04:41:51] <moon-child> lol
[04:42:11] <gilberth> At that time I used 800x600 monochrome. The best my poor graphics board could do.
[04:44:17] <gilberth> Would I build a "TV" board for my itty CPU, I would go with 1280x720 monochrome. The video bandwidth of 1280x720@60Hz is still manageable with TTL.
[04:45:04] <gilberth> BTW the CADR used ECL logic for its TV board.
[04:47:38] <gilberth> And I always favored pixel count over color. The information content of color is neglectable.
[04:50:51] *** Quits: OlCe (~user@amarseille-657-1-5-245.w90-8.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:53:25] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:56:16] <moon-child> is information content your only priority?
[04:56:21] <moon-child> coloured displays are nicer to look at
[04:56:24] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[04:58:14] <gilberth> moon-child: When I have the choice between 640x480 256 colours on a 15" screen and sth like 1200x900 monochrome or so on a 19" screen, I pick the latter.
[05:00:44] <gilberth> And with CRTs, the monochrome CRTs also provide for a crispier display as there is no mask to separate the three electron beams.
[05:02:02] <gilberth> Not a concern these days, granted.
[05:03:52] <gilberth> Anyhow, for my TTL machine, I would go monochrome anyway. For cost and for speed. No need to increase costs by 24x to go truecolor. Blittering speed will be slow already, no need to slow it down by that 24x, too.
[05:04:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:04:41] *** Joins: notzmv (~zmv@user/notzmv)
[05:29:18] <gilberth> How embeddable is ECL? Could I turn some Lisp library into a dynamic library to be used from C?
[05:34:26] <aeth> yes
[05:35:35] <gilberth> Ok. Thanks. I'll figure out how, then.
[05:39:46] <moon-child> you could do that with sbcl, too, I bet
[05:40:08] <moon-child> make it a wrapper around sbcl that makes function pointers to lisp functions and then passes them back
[05:41:10] <moon-child> (or your favourite batch compiler, cmucl)
[05:41:30] <gilberth> I doubt I could do that in a fashion, that my Lisp lib is a drop-in replacement for some C library. As a dynamic library.
[05:42:26] <moon-child> there is some concept of a constructor
[05:42:34] <moon-child> a function that will be run when your library is loaded
[05:42:50] <moon-child> that could be a c shim that calls another shim that does the actual loading
[05:44:06] <gilberth> How would I turn sbcl into an .so file?
[05:48:52] <moon-child> you wouldn't, you would write your own .so file which would load sbcl
[05:49:31] <moon-child> say, dlopen it, pass it a function pointer as a command-line argument; then it goes and passes to that function pointer the addresses of its own functions, which you can install globally
[05:50:50] <gilberth> And perhaps taking all sorts of bets too, while booting SBCL. This is too much of a hassle for me. And I want a standalone .so file.
[05:51:24] <gilberth> I mean, then I could also just fork() and use some quick and dirty RPC.
[06:14:43] <gilberth> I wonder, if I could outpace libc with using libtcc as my compiler. Given, that tcc isn't optimizing.
[06:34:13] <hayley> https://www.youtube.com/watch?v=OtuIaHSMM2w
[06:34:13] -ixelp- Sparks - National Crime Awareness Week - YouTube
[06:37:45] <gilberth> hayley: Do you now another C library besides tre, which has the POSIX regex(3) API?
[06:37:56] <hayley> Nope, sorry.
[06:38:15] <hayley> I only know libc, libtre and PCRE2 (the latter of course being busted by design).
[06:38:58] <gilberth> Yeah, has pcre2 a POSIX API? Even if semantics are different.
[06:39:51] <hayley> I don't believe so.
[06:39:57] <hayley> https://www.youtube.com/watch?v=x8B5FiVg5HA Frank Zappa on copying GC
[06:39:58] -ixelp- Frank Zappa - Broken Hearts Are For Assholes (Sync Fixed) - YouTube
[06:40:53] <gilberth> Well, I'd like to run my BFI tests again, when I could afford the power bill.
[06:42:56] <hayley> I don't have a working POSIX RE engine (I still need to redo the assignment representation so that I can have T_n <- NIL, among other things like T_n <- P - i unfortunately) so nothing to compare with.
[06:45:13] <gilberth> Well, there also is lex(1) and flex(1).
[06:45:28] <gilberth> But these don't do submatch addressing.
[06:50:01] <gilberth> Where is my >100 cores machine?
[06:51:40] <gilberth> What's the cheapest option in terms of instructs per second per EUR?
[06:51:58] <gilberth> * instructions
[06:53:50] <hayley> A GPU? scnr
[06:55:05] <gilberth> I have no experience in hacking a GPU. Don't even own a proper.
[06:55:52] <gilberth> Nah, it would need to run other RE engines.
[06:56:59] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[06:59:38] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[07:00:16] *** Joins: Alfr (~Alfr@user/alfr)
[07:00:28] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[07:01:01] *** Joins: Alfr (~Alfr@user/alfr)
[07:02:58] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[07:03:19] <gilberth> And given our insane power costs, would it be cheaper to buy cycles from someone else?
[07:05:57] <aeth> buy cycles?
[07:06:13] <aeth> sounds like something the Dutch would like
[07:06:20] <aeth> they could build buy cycle lanes everywhere
[07:07:05] *** Joins: Alfr (~Alfr@user/alfr)
[07:08:06] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[07:10:35] *** Joins: Alfr (~Alfr@user/alfr)
[07:10:46] <gilberth> aeth: Yeah, right.
[07:13:19] <aeth> wouldn't be confusing at all because the pun only works in English
[07:19:52] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[07:23:54] *** Joins: Alfr (~Alfr@user/alfr)
[07:25:18] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[07:28:07] *** Joins: Alfr (~Alfr@user/alfr)
[07:28:54] <gilberth> aeth: Hugh? We use English here, don't we?
[07:30:03] <hayley> I wish I had made my tag assignments in the form ((variable replica) . source) rather than (variable replica source), so that I could (mapcar #'car ...) to get targets and (mapcar #'cdr ...) to get sources.
[07:30:24] <hayley> ...I can fix it whenever, of course, but there is a lot of code that looks stupid because of it.
[07:34:10] <gilberth> What is that with the replica of yours?
[07:34:53] <hayley> gilberth: clintm told me that basic block positioning also improved the performance of his parser by 30% to 50% or so, though it doesn't make a TAGBODY. Guess I need to investigate better.
[07:35:03] <hayley> https://www.youtube.com/watch?v=3kdefBY9-PU
[07:35:04] -ixelp- Replicas (Remastered) - YouTube
[07:35:26] <hayley> I call the duplicated/replicated register a "replica".
[07:37:17] <gilberth> hayley: Yeah, I wonder why for decades nobody bothered with block placement. Or do we face some bitrot?
[07:38:29] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[07:40:09] <hayley> gilberth: There is already a test for more normal-looking loops. Though I now use the results of one loop analysis which had bitrotted before being re-introduced to SBCL. 
[07:42:39] <gilberth> ok. So LOOP is fine?
[07:43:29] <hayley> Yes. Or, at least, basically everything that isn't a DFA or clintm's parser only runs like 0.5% to 1% faster, so it can't be that bad.
[07:44:39] <gilberth> I see. So, the interesting question is: Does it do any harm?
[07:45:42] <hayley> I haven't found any. And IMO being faster with no analysis, rather than some analysis, means you just got lucky.
[07:46:41] <hayley> Some simpler DFAs were more dependent on ordering of the COND clauses, when one clause was part of a tight loop. Now the variance is gone, as SBCL does the right thing.
[07:46:51] <gilberth> What have you tested?
[07:47:16] <hayley> CL-BENCH, the Netfarm tests, one-more-re-nightmare and regular-type-expressions.
[07:50:27] <hayley> https://www.youtube.com/watch?v=v-RDi1na3KA Portal 1 in 5:57
[07:50:28] -ixelp- Portal any% WORLD RECORD SPEEDRUN in Under 6 Minutes! - YouTube
[07:51:41] *** Joins: semz (~none@user/semz)
[07:54:00] <gilberth> I doubt that my machine could even load all levels in under six minutes.
[07:54:58] <hayley> Yes, loading times aren't counted.
[07:57:30] * gilberth is bored and tries to crack his own passwords with John the Ripper.
[07:58:11] <hayley> It runs faster on hashcat (in my day it was oclHashcat) and a GPU, but you don't have one.
[07:58:53] <gilberth> Which is silly. I know my password. Can I run it with a the identity as hash function?
[08:02:12] <gilberth> But this software is illegal, anyway. It's a "hacker tool"! Call the police, if you wish.
[08:05:39] <hayley> IIRC someone in Germany described a MD5 cracking machine but only provided sources for the MD5 core, as the rest is probably illegal. 
[08:06:20] <hayley> Might not have been MD5, but the story was the same.
[08:07:04] <gilberth> Those laws are that silly, I just ignore them.
[08:07:23] <hayley> https://scatteredsecrets.medium.com/bcrypt-password-cracking-extremely-slow-not-if-you-are-using-hundreds-of-fpgas-7ae42e3272f6 says such a machine with FPGAs uses about 1/43 the power of GPUs.
[08:07:24] -ixelp- Bcrypt password cracking extremely slow? Not if you are using hundreds of FPGAs! | Medium
[08:07:34] <hayley> Guess I should buy a FPGA board.
[08:07:55] <gilberth> For greping or cracking?
[08:08:29] <hayley> Both? It's reprogrammable.
[08:08:39] <hayley> And maybe my stupid lookup table instruction CPU idea.
[08:09:35] <gilberth> Somebody build a CPU with using only EPROMs. No flip flops either, just EPROMs.
[08:10:17] <hayley> So, every EPROM just ran a lookup table?
[08:10:38] <gilberth> What else is an EPROM?
[08:11:18] <gilberth> The trick is, how to build D-type flip flops at the end of the day.
[08:11:22] <hayley> Point made.
[08:12:15] <gilberth> But since you could build a d-type flip flop from RS flip flops and RS flips could be build from NAND gates, and EPROMs could be programmed to act as a NAND gate, this is doable.
[08:14:52] <gilberth> Google is not smart enough to find relevant pointer for me how to use john as a password checker. It just throws pages at me, which perhaps are popular, but not relevant to what I search.
[08:21:08] <gilberth> EPROMs are still very slow. Most homebrew TTL designs are microcoded designs and a common complain is that the EPROM is the bottleneck. Nobody had the idea to just copy that damn microcode to SRAM, which is way faster.
[08:21:59] <hayley> Flash?
[08:22:09] <gilberth> Isn't any faster either.
[08:22:26] * hayley tried
[08:23:12] <hayley> I forgot, are all flash chips page addressed, rather than word?
[08:24:08] <gilberth> 10ns and even sub 10ns SRAM is readily available. You don't find flash chips that fast. Most are still at 70ns.
[08:24:56] <hayley> Reminds me that I had put myself on a waiting list for a new RISC-V board. and /me got the purchasing link.
[08:25:32] <gilberth> hayley: All I saw allow you to flip a single bit from erased to programed. But erasure is page-wise.
[08:25:38] <hayley> "The hardware is experimental and strictly for engineering and development purposes only!" What the hell else would you do? Put it in production?
[08:25:39] <hayley> Very funny.
[08:26:19] <gilberth> Somebody might do that, hayley. And then complain.
[08:26:29] <hayley> And I'm very tempted to port to ARM first, since I can get more than 2 1GHz cores for US$175. 
[08:28:08] <gilberth> Since "can flip a single bit from erased to programmed" might be interesting for Lisp on an MCU. You could place forwarding pointers that way at the flash. That is: Keep your static area in cheap and plenty flash, but still allow for it to be written from the perspective of Lisp.
[08:31:58] <moon-child> hayley: (mapcar #'butlast)?
[08:32:28] <hayley> Good call.
[08:32:42] <hayley> Still, I'd rather just make it alist-shaped.
[08:43:41] <gilberth> I mean this would be trivial. Just connect the microcode EPROM and SRAM in parallel. When booting, let the ucode PC run freely, disable the microcode latch, and clock the /WR line of the SRAM. Let the ucode PC have one more bit than the microcode address. Let the counter wrap there and use MSB to select between this copy on boot and regular operation.
[08:44:52] <gilberth> When done, enable your micro instruction latch, drop /OE of EPROM, pull /OE of SRAM, switch the clock to full speed. Set. Minimal glue HW needed. Not a loadable microcode though, but you then have a fast microcode store.
[08:47:28] <gilberth> But for some reason, I don't like microcode. It feels like cheating.
[08:52:07] *** Joins: epony (~epony@user/epony)
[08:58:29] <sm2n> hayley: I was bored so I looked some more
[08:58:50] <sm2n> the main interface by which people interact with "web3 blockchains" is via wallets
[08:59:03] <sm2n> all the solana ones listed on their website are proprietary as far as I can tell
[08:59:34] <hayley> Lovely.
[09:00:05] <sm2n> I would run away as soon as possible
[09:00:33] <sm2n> Here is the list, if you were curious: <https://docs.solana.com/wallet-guide>
[09:00:33] -ixelp- Solana Wallet Guide | Solana Docs
[09:10:53] <hayley> "10 files changed, 53 insertions(+), 69 deletions(-)" Nice
[09:13:02] * moon-child deletes an extra line
[09:15:00] <hayley> Somehow I'm reminded that I should test trying to copy a list with CDRs all lined up in my GC test program.
[09:17:30] <ck_> hope it wasn't a load-bearing newline
[09:21:08] <hayley> Hm, it's always worse. /me tries CARs next.
[09:22:09] <hayley> CARs are even worse. My derivative program must stink.
[09:53:19] <gilberth> Try CAR CAAR CDR :-)
[09:56:44] <hayley> Hooray, more performance regressions. Probably not one-more-re-nightmare, probably not my CPU scheduler, I haven't touched SBCL.
[10:05:31] <hayley> It appears that being more precise with SIMD loops actually makes this a bit slower. How odd.
[10:10:41] <hayley> What the hell, I was only generating a loop for the first character before? I guess it'd still be faster as we have the grep[] machine to skip over the rest of each number, and no one else does.
[10:16:47] <hayley> Guess my repetitions aren't that long, sadly. Some runtime feedback would be nice, but I don't know how to design it.
[10:19:49] <ck_> are you still at your family members place, gilberth? how is it going. post your weight ;).
[10:26:03] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Remote host closed the connection)
[10:36:10] <hayley> https://twitter.com/LouisThibault87/status/1479710907999604738 lol
[10:36:45] <moon-child> hayley: power management again?
[10:36:55] <moon-child> oh I should read more scrollback
[10:37:18] <hayley> moon-child: Nope. Just that the strings are too short for SIMD to benefit.
[10:42:02] <moon-child> https://moxie.org/2022/01/07/web3-first-impressions.html
[10:42:21] <moon-child> moxie marlinspike impressions of 'web 3'.  Somewhat prescient, but ring hollow considering his chat app has a cryptocurrency integrated
[10:42:51] * hayley uploaded an image: (158KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/hXfalRqALKmFVkldnQMovYpO/stfu-moxie.png >
[10:42:59] <moon-child> *rings
[10:43:16] <moon-child> how do you make these so fast?
[10:43:30] <hayley> It's olde.
[10:44:23] <hayley> Apparently I made it on 2020-02-02, probably cause https://signal.org/blog/the-ecosystem-is-moving/ cracked me up so much.
[10:46:24] <hayley> (FWIW about string length: I'm trying to look for screen resolutions, and indeed no integers involved are longer than 4 digits.)
[10:46:53] <moon-child> 16k when
[10:47:59] <hayley> Given that it was 30% slower with too much SIMD, I would guess we need a few more characters still.
[10:58:26] <hayley> gilberth: There is now another Gilbert in the Coffee Compiler Club.
[10:59:58] <selwyn> good morning everyone
[11:00:38] <hayley> Good morning beach!
[11:01:00] <selwyn> 🏖️
[11:01:17] <ck_> hello selwyn 
[11:01:41] * ck_ continental time is one hour ahead to uk time
[11:01:51] <ck_> why so early on the weekend?
[11:02:04] <ck_> forgot the .oO( )
[11:02:32] <selwyn> i simply decided to get up earlier
[11:02:51] <selwyn> might do a lot of cooking today
[11:03:21] <ck_> very nice, what's on the list?
[11:03:42] <selwyn> idk
[11:04:02] <selwyn> maybe more pies
[11:04:48] <gilberth> ck_: Yes, I am. I have no intentions to leave. And why should my weight change here?
[11:05:04] <gilberth> hayley: First name or surname?
[11:05:09] <ck_> gilberth: because you, too, speak of using the kitchen often.
[11:05:11] <hayley> First.
[11:06:21] <gilberth> ck_: Yes, I try to have a proper, cooked meal each day. I am too lazy to put myself on a scale right now, but I would be very surprised, if it would have changed much.
[11:06:22] <ck_> also you were talking about wanting to gain weight, getting more healthy. I was looking for something to celebrate
[11:06:29] <gilberth> hayley: That's rare.
[11:07:13] <gilberth> ck_: I want many things. Weight is none of the things I could change though.
[11:07:55] <ck_> are you an absolute determinist?
[11:08:19] <gilberth> What's a determinist?
[11:08:21] <selwyn> very happy that i lost my lockdown weight
[11:09:06] <ck_> the philosophical stance that everything follows from physical laws, "no free will" if you will
[11:09:42] <ck_> gilberth: https://en.wikipedia.org/wiki/Determinism
[11:10:42] <gilberth> That's an interesting question. I believe in randomness, but that is also within physicals laws. There is no actual free will, our brain tricks us to believe that there is free will. So: Yes, I am.
[11:11:24] <ck_> I see. I'm interested in the answer to this then: do you ever feel regret for a wrong choice or something like that?
[11:12:16] <gilberth> At times. But I won't call it regret proper.
[11:12:40] <ck_> selwyn: you must've replaced most volume you lost with muscle, if i recall you said you'd become very fit by 'intermittent training' :) good on you
[11:12:58] <selwyn> well, the first stage was simply losing a lot of fat
[11:13:01] *** Quits: sp (~sp@user/susam) (Ping timeout: 240 seconds)
[11:13:20] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[11:13:31] <selwyn> i have only really been training for 2 months
[11:13:47] *** Joins: sp (~sp@user/susam)
[11:13:58] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:13:59] <selwyn> maybe its enough time to gain muscle idk
[11:15:23] <ck_> I think that's definitely enough time, on the basis of absolutely guessing out of the blue
[11:15:43] <gilberth> ck_: Most of the time there are reasons, not to be confused with reasoning, why I behaved in a certain way, I wish I didn't.
[11:15:59] <ck_> (it's enough time to become fit, increase stamina, go on longer runs and all that, but I have no idea whether that means actual muscle is built, or existing muscle becomes more efficient)
[11:16:01] <selwyn> these days, i am tending to believe as a consequence of thought experiments that physics will have to be modified in some way to account for consciousness
[11:16:20] <gilberth> Anyhow, weight is nothing that I could change. I better concentrate on the things, I could.
[11:16:44] <ck_> gilberth: I was asking because in my mind, a belief in absolute determinism means there can't really be regret, because there couldn't have been a different outcome in the first place. we're just watching a movie play out in real time
[11:16:45] <selwyn> so i reject determinism, since we don't even know what the altered laws would be (and we had better use those if we want to talk about things like free will)
[11:16:48] <gilberth> selwyn: That's spooky.
[11:16:57] <selwyn> it is pretty crazy
[11:18:15] <selwyn> ck: well, this is a huge question
[11:18:27] <selwyn> you can get adaptations at the cellular level
[11:18:31] <gilberth> Well I know very physics, but if I think that through, I can come to the solution, that I can't be sure, anything else than me exists. Or put otherwise: The universe only exists because of me. That's crazy.
[11:19:05] <selwyn> which are responsible for endurance
[11:19:15] <ck_> yes, you're talking about atp storage and all that?
[11:19:29] <selwyn> i guess
[11:19:34] <selwyn> not familiar with the details
[11:19:53] <gilberth> ck_: Well, there is no reason to feel bad about something. And not regretting does not imply to make others responsible. Things are as they are, all I could do is to try to react differently and hopefully better next time.
[11:20:47] * hayley writes DO-MATCHES and very much dislikes what she wrote.
[11:21:21] <selwyn> gilberth: consciousness and quantum mechanics get a bad rap because there is a lot of pseudoscience out there on the subject, caused by misunderstandings
[11:21:28] <selwyn> but there are some really serious people who work on the matter
[11:21:50] <gilberth> And there are things in life, you better just accept, if you have no realistic chance to change it. You can change a lot of things, but you can't change everything.
[11:21:59] <selwyn> it's very difficult to deal with, because for a start we don't have any theory of consciousness, let alone a quantum one
[11:22:50] <gilberth> selwyn: Yes, I am aware about those non-valid links between quantum physics and consciousness.
[11:22:54] <selwyn> imo the lesson of various thought experiments is that consciousness simply doesn't make sense when you introduce quantum physics into the picture in a macroscopic way
[11:23:49] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Ping timeout: 240 seconds)
[11:24:01] * hayley uploaded an image: (254KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/JUwYZJoyFFSOoadmfqsOLvnV/Screenshot_2022-01-08_19-02-57.png >
[11:24:04] <hayley> FWIW I am pretty sure this means Intel is making another Lisp machine
[11:24:19] <gilberth> selwyn: Consciousness is spooky as it is. Why I am me and not you? Why do I experience my life movie, but not yours? You get crazy, when you think about that.
[11:25:23] <selwyn> so you have to throw out one or the other. and we certainly can't scrap the idea of consciousness
[11:25:35] <ck_> you're you and not someone else because the mechanism that makes you act in the world reacts to qualia that you, and not that someone, perceive
[11:25:54] <selwyn> should stress that these are only my own musings though, the quantum foundations people have much more interesting things to say
[11:26:23] <gilberth> ck_: Still, where is this movie coming from?
[11:26:45] <ck_> gilberth: stock answer: "epiphenomenon"
[11:26:58] <selwyn> gilberth: well we have some ability to experience other peoples lives via empathy, or via some kinds of personality disorder
[11:27:18] <hayley> Now I can write (one-more-re-nightmare:do-matches ((s e) "[0-9]+x[0-9]+" *log*) (print (- e s))) at the least.
[11:27:19] <selwyn> though i agree it is weird. the fact that it can go wrong suggests that it is not a trivial mechanism?
[11:27:25] <ck_> selwyn: isn't it all a holographic projection on the boundary surface of a singularity anyway?  add sarcasm-" as required
[11:27:35] <selwyn> lol
[11:28:11] <selwyn> i still don't know anything about the holographic principle..
[11:28:36] <gilberth> selwyn: Well, I believe that is a false sensation. As the sensation you have, when you feel like not being in your body, but being next to your body.
[11:30:05] <gilberth> I mean, have you ever had the experience to be outside your body and be at some few meters distance from it?
[11:30:15] <selwyn> personally no
[11:30:23] <gilberth> I don't believe that is real in anyway.
[11:30:41] <gilberth> selwyn: I have a few times. More often when I was young.
[11:31:01] <selwyn> it's real enough to you, which is what counts
[11:32:14] <selwyn> i am one of those who believes that reality lies more in your perception of the world as opposed to being objective
[11:32:19] * hayley uses DO-MATCHES and goes from 7GC/s to almost 9GC/s.
[11:32:22] <gilberth> It felt real at that moment. I don't believe that it just was by brain playing tricks on me. Severe fever helps, but is not necessary. I also had that, when not sick.
[11:32:33] <selwyn> what's a gc/s?
[11:32:48] <hayley> Either garbage collections per second, or giga-characters per second.
[11:34:33] <gilberth> selwyn: Interesting. So my experience, which is far from being unique, would by your reason indicate, that one could indeed perhaps by chance make his life movie picture sth different.
[11:35:19] <gilberth> Oh. I negated wrong: I DO believe it was my brain playing tricks. Sorry.
[11:36:38] <gilberth> Drugs can do that, the say. Dreams could feel pretty real, too.
[11:37:10] <selwyn> well, yeah
[11:37:38] <selwyn> do you perceive reality different now you are sober?
[11:37:51] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[11:38:01] <gilberth> I'd say no.
[11:38:32] <selwyn> hm
[11:38:44] <selwyn> probably not the best example of drug to use for this
[11:39:14] <ck_> you can perceive reality differently without introducing drugs at all -- priming to pay attention only to certain things (gorilla ball game), severe grief, euphoria .. all make you not interpret, but *perceive* a different reality
[11:39:14] <selwyn> of course, you can hallucinate on alcohol, though it is extremely inadvisable and few manage it
[11:39:46] <selwyn> i would certainly pay attention to a gorilla ball game
[11:40:04] <ck_> which also is a counter argument, I think anyway, to the "reality lies more in your perception"
[11:40:10] <ck_> selwyn: well you know what I mean, no?
[11:40:20] <gilberth> My adrenaline response is higher being sober. And I think a bit clearer, that's it. The former sucks, but when it get too worse, I have beta-blockers, which some doctor should have administer to me some 30 or 35 before, it would have been a life-changer.
[11:41:12] <selwyn> ck: yeah i see
[11:41:36] <selwyn> somewhat regret using 'perception'
[11:41:53] <selwyn> i would love to investigate quantum foundations one day and look into this sort of thing
[11:41:57] <ck_> for the record I was referring to https://www.youtube.com/watch?v=Ahg6qcgoay4
[11:41:58] -ixelp- Test Your Awareness: Do The Test - YouTube
[11:42:02] <gilberth> ck_: Well, yes. When I am in flow, most of the world ceases to exists. But I won't call it a different perception. Not the kind I experienced with me standed next to me. (Which is a saying in German, which is a real existing condition).
[11:42:27] <ck_> gilberth: yes, the term is 'out of body experience' afaik
[11:44:45] <gilberth> Yep. One what that also works well to induce it, I read is to deprive of sensations. Put people into a bath tub, make it pitch dark, and absolute silent. So I read. Many will have that sensation after like 10 minutes or so. But I am not sure, if this isn't more like dreaming. That is the brain trying to make sense from the little noise left at the senses.
[11:45:00] <gilberth> * One way
[11:46:27] <selwyn> https://arxiv.org/abs/2009.13224
[11:48:24] <gilberth> ck_: Back to topic. Free will also ends, when you are trained by your experience you made induced by others. In the extreme it's a trauma. In mild cases, it's you trying to avoid certain situations, because you learned --- perhaps as a child --- that it's dangerous and harmful to you.
[11:49:10] <ck_> yeah I'd like a switch for the amygdala for my next life, if I have to ever experience one again
[11:49:24] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[11:50:09] <gilberth> ck_: There is a switch, it's called depression.
[11:50:50] <ck_> I know, but that's not really a convenient implementation is it. I want at will, push-button operation
[11:50:57] <gilberth> Trouble is: Once you pulled that lever, it is pretty hard to put it back.
[11:51:00] <ck_> selwyn: "I know some of those words"
[11:51:08] <ck_> gilberth: I know, believe me
[11:52:22] <selwyn> > the idea that consciousness causes collapse has some motivation, was taken seriously by
[11:52:24] <selwyn> 2
[11:52:26] <selwyn> some of the pioneers of quantum theory, and, given that there is no consensus solution to the quantum measurement
[11:52:28] <selwyn> problem, seems worth keeping on the table for now and examining more carefullyy
[11:52:37] <selwyn> sorry
[11:52:40] <gilberth> ck_: Did you at least get the t-shirt?
[11:53:02] <ck_> gilberth: no t-shirt. whole thing is a rip off, would not recommend
[11:53:22] <gilberth> ck_: lol. A rip off? Right.
[11:53:22] <ck_> selwyn: collapse as in wave function collapse, yes? q-shapes in an eeg, or where?
[11:53:37] <selwyn> collapse is wavefunction collapse
[11:54:15] <gilberth> Does it really collapse? And when it does, was lazy evaluation applied before?
[11:54:57] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:56:20] <selwyn> open to interpretation
[11:56:30] <selwyn> some believe it never collapses, but this is a minority opinion
[11:57:32] <gilberth> Well, I believe, it is silly to assume that it really collapses. I mean who is it to yell at the universe: "Collapase! Now."
[11:57:55] <ck_> no shouting necessary, you just have to pay attention
[11:57:55] <selwyn> we don't understand collapse
[11:58:09] <ck_> so it's a needy child or romantic partner
[11:58:17] <gilberth> It might feel different, when you're part of that quantum system.
[11:58:32] <selwyn> there are models of wavefunction collapse which the paper i linked to criticises in brief detail
[11:59:45] <gilberth> Or: Why is Schrödinger's cat said to be alive and dead at the same time? Why isn't it two of me, one who saw the cat dead and one alive. Is there nesting? But who am I? I'm a complete noob with those things.
[12:00:55] <gilberth> What if I put myself into that box. Would that change things? That would be strange.
[12:01:50] <selwyn> well, if you put yourself into the box, then you are in the state of seeing the cat dead and alive at the same time
[12:01:59] <selwyn> (assuming the poison only kills the cat)
[12:03:39] <gilberth> selwyn: Yes, so there are two collapses. One that I see, when the cat dies or survives. And one, when you pop up open the box and ask me.
[12:04:32] <selwyn> by the time that i ask you, the collapse already happened
[12:04:33] <gilberth> Hence, this must nest. But perhaps there is an error in my reasoning.
[12:04:50] <selwyn> the state in question is no longer 'cat' but 'cat+gilberth'
[12:05:05] <gilberth> selwyn: Yes, but you said there is a me with the memory of a cat dying and one of a cat surviving, right?
[12:06:02] <gilberth> selwyn: Isn't it rather that from your perspective the cat and me consitute one system?
[12:06:30] <selwyn> taken together you form one system
[12:06:47] <ck_> .. indivisible .. and quantum for all
[12:06:51] <selwyn> and this system is the correct one to consider when analysing the experiment, owing to how it is setup
[12:07:10] <selwyn> with a box completely isolated from the outside, except for the two-level system you measure to set off the poison
[12:08:02] <selwyn> yes, so during the experiment you are in a superposition of seeing a dead cat and an alive cat
[12:08:09] <gilberth> selwyn: Well, /me exists. That is my conscience and the experience I have. There may be many of me, but each individual has a binary cat dead/alive experience.
[12:08:31] <selwyn> yes
[12:08:51] <selwyn> the thought experiment does not contradict that afaict
[12:09:21] <selwyn> however, this is very similar to the thought experiment that convinced me that something is going on with consciousness and qm
[12:09:47] <gilberth> Well, what happens --- I always forget that name --- if you don't believe in the universe fork(2)ing constantly?
[12:10:05] <selwyn> the many worlds hypothesis?
[12:10:42] <gilberth> selwyn: When I first learned about the double-slit experiement, I thought .oO(So, it's me forcing the damn electron to decide). And I believe that is naïve.
[12:11:00] <moon-child> bayesianism?
[12:11:30] <moon-child> selwyn: no, many worlds is that the universe _does_ fork
[12:11:32] <gilberth> selwyn: Yes. But it has a name.
[12:11:58] <selwyn> well, you have to believe in something else
[12:12:09] <hayley> Very nice that we have a STYLE-WARNING condition type. And I'm already told "An `unused variable' warning must be of type style-warning." So a dead RE should be a style-warning?
[12:12:21] <moon-child> gilberth: copenhagen interpretation?
[12:12:32] <selwyn> collapse theories, bohmian mechanics (lol), copenhagen (a bit dated)
[12:13:51] <gilberth> selwyn: Well, I believe, at this point we can't know and have to believe. I take the many-world hypothesis as a model. I don't believe things really work that way. Not in the sense, that there is a real fork(2), but perhaps in the sense of lazy evaluation. What confuses me, is that nesting thing.
[12:14:30] <hayley> Also, how nice that DEFINE-CONDITION has a cheap case for a literal string, so I can just write (define-condition expression-not-matchable (style-warning) () (:report "This expression can never be matched."))
[12:14:45] <gilberth> selwyn: København! Thanks.
[12:16:12] <gilberth> With the many world hypothesis there isn't this nesting problem of mine.
[12:17:53] <selwyn> not sure what you mean by nesting
[12:18:17] <selwyn> is the issue that: it could be the cat that's dead or alive, you seeing it dead or alive, me asking you if you saw it dead or alive, etc.
[12:18:31] <selwyn> and you don't know which one to choose
[12:18:42] <gilberth> selwyn: With nesting I mean, that I have this binary dead/alive cat experience, before you open the box with the superposition of multiple mes.
[12:19:32] <gilberth> I try to put it otherwise: Me and the cat form a system from your perspective. It collapses the moment you ask me about the cat.
[12:20:14] <gilberth> From my perspective I am not in superposition at any time. Only the cat is until I look after the cat.
[12:20:54] <selwyn> you and the cat do form a physical system, but the internal details of it are relatively uninteresting
[12:21:38] <gilberth> Somehow this seems to be about information, doesn't it? I am getting crazy and think in circles and perhaps most of my believes or ideas are wrong anyway.
[12:21:42] <pjb> purring and petting.
[12:21:45] <selwyn> the two states in question are 'cat alive and gilberth observing that it is alive' and the counterpart
[12:21:55] <selwyn> however
[12:22:04] <gilberth> Yes, so much I got.
[12:22:19] <selwyn> right
[12:22:28] <pjb> there's also cat alive and gilberth dead, and cat dead and gilbert dead, not observing the cat, so remains in superposition.
[12:22:46] <pjb> Also, you need to count them, for it changes the stats.
[12:22:47] * hayley uploaded an image: (5KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/XqJXbjkkrTYVcWcklnLtvuOV/Screenshot_2022-01-08_20-01-45.png >
[12:22:53] <selwyn> i also agree that you never are in superposition
[12:23:14] <gilberth> But me doesn't experience being in two states. From my perspective the cat/apparatus system collapses earlier to the collapse you observe.
[12:23:47] <selwyn> well
[12:23:48] <gilberth> As you observe gilberth+cat. Or gilberth+cat+apparatus, or gilbert+(cat+apparatus).
[12:24:03] <selwyn> this is now very close to the thought experiment that motivated me to think more about consciousness
[12:24:33] * hayley uploaded an image: (5KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/jggZbIDbxfwrztrvdiQomhUI/Screenshot_2022-01-08_20-03-34.png >
[12:24:39] <selwyn> let us assume that the cat emerges alive
[12:24:44] <hayley> gilberth: Here you go, "The first group in this expression is impossible to match."
[12:24:52] <selwyn> if i ask you 'was the cat alive or dead while you were inside the box'
[12:25:19] <gilberth> selwyn, I fear I am in general too little educated about quantum physics that is about effects observed or not, to not having crazy false ideas all the time.
[12:25:21] <selwyn> the answer must surely be 'alive', because it is not possible for someone to observe life and death at the same time, and the cat clearly cannot come back to life
[12:25:29] <selwyn> however
[12:26:22] <selwyn> if you observed that the cat was alive while you were in the box - how is it possible for the cat to have been alive while it was in a state of superposition
[12:26:28] <selwyn> before the apparatus was measured!
[12:26:42] <gilberth> selwyn: Yes, the cat not coming back to life has something to do with a collapse perhaps. There aren't uncollapses, are they?
[12:26:51] <selwyn> uh
[12:26:58] <selwyn> not in any meaningful sense
[12:27:44] <gilberth> selwyn: Ok. I believe I got what you said.
[12:27:48] <selwyn> right
[12:28:00] <selwyn> you could argue that memory is unreliable in this kind of experiment
[12:28:08] <selwyn> but it is a fudge in my opinion
[12:28:36] <selwyn> and in any case, it is an attempt to resolve the paradox by making a statement about gilberth's consciousness (or at least his memory)
[12:28:38] <gilberth> selwyn: Yep. I could take records. That doesn't change a thing.
[12:29:12] <gilberth> selwyn: Now it gets spooky.
[12:29:15] <selwyn> well, i meant unreliable in the sense that brain processes might function unreliably, or in a way that doesn't make sense to us, in superposition
[12:29:43] <selwyn> the moral lesson i take from this thought experiment is that clearly something is going on with consciousness and quantum mechanics
[12:30:02] <gilberth> selwyn: Yes, but as I said, I could make pictures.
[12:30:15] <selwyn> schrodingers cat is a perfectly acceptable thought experiment, yet as soon as we put a human observer in the box, it becomes very very difficult to resolve satisfactorily
[12:30:36] <selwyn> gilberth: and would the pictures make sense?
[12:31:28] <gilberth> selwyn: This is funny. Because I always had the hunch that consciousness is connected to quantum physics. Somehow I believe that a fully deterministic system cannot have consciousness. Earned me full marks in philosophy at grammar school once. :-)
[12:31:59] <selwyn> gj lol
[12:32:19] <gilberth> selwyn: What do you mean by "make sense"? Is there a reason to believe say flash memory could be "tricked"?
[12:32:37] <selwyn> no
[12:32:57] <selwyn> but the brain, which doesn't use flash memory, is regularly tricked
[12:33:14] <gilberth> Sure, but I believe that's a red herring here.
[12:33:15] <selwyn> even without having to put it in superposition with a two-level system together with a cat
[12:33:45] <selwyn> if you are thinking of doing the experiment with a camera and flash memory - ok, but in that case we cannot ask the memory what it saw while it was in the box
[12:33:50] <gilberth> Not so easy actually, as I also believe that free will is faked.
[12:34:16] <selwyn> point i am making is that the human observer is a really key ingredient of this
[12:34:29] <gilberth> selwyn: Ok. The flash card won't mind being in superposition. Right.
[12:35:50] <gilberth> But: When you pass that flash memory to say hayley, what he reads must be consistent to what I tell you.
[12:36:06] <gilberth> * she even, sorry.
[12:36:08] <selwyn> https://en.wikipedia.org/wiki/Wigner%27s_friend this is a similar thought experiment again
[12:36:15] <gilberth> But that all is no problem.
[12:36:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:38:48] <gilberth> selwyn: Yes, this is what I was pondering. Thanks for the pointer. /me reads further.
[12:38:58] <selwyn> happy to help
[12:39:06] <selwyn> its hard for me to understand this stuff at times
[12:39:23] <selwyn> as i say i would like to look into quantum foundations one day
[12:39:31] <selwyn> but it is hard to get funding, and its a real rabbit hole
[12:40:23] <hayley> Ouch, /me now has 2001 lines of code.
[12:41:04] <gilberth> I would love that I would be less lazy and learn more about quantum physics in general, so I could make more educated guesses.
[12:41:25] <gilberth> hayley: Port to HAL, when?
[12:41:48] <hayley> I'm afraid I can't do that, gilberth.
[12:44:24] <hayley> The Rust regex doesn't lint, due to not having compiler macros. Apparently there is an external linter. /me wonders if it can detect dead expressions and groups.
[12:45:28] <hayley> No, it only detects invalid syntax, and regexes that are just literal strings. Pity, because that is what the regex engine is best at.
[12:46:15] <gilberth> selwyn: btw this "Quantum healing" stuff made it a bit tricky to wonder about these things without being put into that snake oil corner.
[12:46:22] <selwyn> yeah
[12:46:26] <selwyn> its a real minefield
[12:48:00] <selwyn> imo too many physicists went too far the other direction and adopted a copenhagen-style mentality where you just pretend that there are no problems
[12:48:02] <gilberth> My wife once believed in the somewhat related "the secret" until she learned how this actually works.
[12:48:10] <selwyn> but this is philistinism, and they should have known better
[12:48:23] <ck_> pretending there are no problems is a very human trait
[12:48:28] <ck_> I'm an expert
[12:49:39] <gilberth> Seeing problems all around and being called pessimistic is what I am expert in.
[12:50:26] <gilberth> The misconception here is that a problem would be a problem for me.
[12:51:00] <hayley> I wonder if having the compiler macro do some linting is a bit like that elevator mirror story.
[12:52:36] <hayley> You have to wait a little longer than reaction time for it to generate specialized code, but it also does some cheap style checks based on testing the DFA. The style checks are very cheap in comparison, but are tangible feedback.
[12:55:08] <hayley> A bit like checking yourself out in the mirror, while the elevator takes its time to arrive.
[12:55:31] <gilberth> selwyn; Well, what I see is open questions due to the hunch that something is going on. We might have good models to make predictions, but that does not imply we know what is going on. Perhaps there is little going on or something surprising. Who knows? /me shrugs.
[13:04:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[13:49:07] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[13:50:17] <dave0> maw
[13:55:20] <ck_> hello dave zero
[13:57:56] <dave0> hey ck_ underscore!
[13:58:27] <edgar-rft> I'm the one with the minus sign :-)
[13:59:44] <ck_> we can be 0, -, and _, less typing
[14:29:34] <moon-child> 'Saving a Third of Our Memory by Re-ordering Go Struct Fields'  imagine using row stores
[14:35:56] <epony> imagine un-terminated strings and "invent" asm to c history
[14:37:07] <epony> memory is expensive and wasting it is inefficient and results in loss of business
[15:07:40] <edgar-rft> wasting memory seems to be the most popular thing today
[15:09:00] <hayley> This is so sad can we have a struct of arrays
[15:10:27] <pjb> (defstruct soa (a (make-array 3)) (b (make-array 4)))
[15:10:52] <pjb> (make-soa) #| --> #S(soa :a #(0 0 0) :b #(0 0 0 0)) |# 
[15:11:35] <hayley> I have an environment of arrays using the MOP somewhere.
[15:11:37] <ck_> our saviour
[15:12:41] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[15:13:06] <moon-child> 'soa' is what happened when game devs in the 90s-early 2000s discovered what quants had known since the 50s-70s :P
[15:16:15] <hayley> Data oriented design is when Self and the more hidden classes, the more data oriented it is /s
[15:17:01] <hayley> (True story, <https://old.reddit.com/r/EnoughRustSpam/comments/ma9w53/crabs_discover_self_the_lang_data_oriented_design/>)
[15:17:02] -ixelp- Crabs discover.. Self: the lang-- Data oriented design : EnoughRustSpam
[15:18:11] <moon-child> hahaha omg
[15:19:02] <moon-child> I once encountered a c++ dev who was doing 'ecs', and a bad reimplementation of compacting gc (all pointers doubly-indirect...)
[15:19:31] <hayley> Real Baker hours
[15:22:34] <hayley> Well. Brooks had forwarding pointers in every object, but you get the damn joke.
[15:23:44] <hayley> https://www.youtube.com/watch?v=eUJ_ifjKopM
[15:23:45] -ixelp- Sparks - "This Town Ain't Big Enough For Both Of Us" (official video) - YouTube
[15:39:55] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.4)
[15:49:09] <hayley> https://old.reddit.com/r/lisp/comments/ryyg0t/what_lisp_dialect_has_the_most_readable_code/ I'm not allowed to comment, right?
[15:49:10] -ixelp- What lisp dialect has the most readable code? : lisp
[15:49:48] <hayley> inb4 "language specifications don't have much normative code in them"
[15:50:47] <moon-child> ‘Minus the semantics of what constitutes readable or what constitutes a lisp dialect’  sooo we're not allowed to define our terms...how are we supposed to get anywhere then?
[15:52:14] <selwyn> gilberth: this area of physics is under heavy investigation and none of the theories have all the desired features
[15:52:16] <hayley> I mean, I'm tempted to say SICL looks the nicest, in part by intentionally designing bootstrapping to avoid special cases, but it's also very wrong for me to comment, when I wrote some of it.
[15:52:24] <moon-child> personally, I think java is the most readable lisp dialect.  But that's just me
[15:53:35] <hayley> Whatever I write up my notes in is the most readable. Unless my handwriting is that bad, of course.
[15:54:43] <hayley> My first day enrolled at a university involved sitting in a park and writing M-expressions for linearity checking. Probably the only good day I had there.
[15:57:09] <hayley> If you say Java, then I either have to say Self or COBOL (due to its inclusion in By The Pound). Speaking of, what should one expect when buying APL by the pound?
[15:59:16] <moon-child> futhark
[15:59:49] <moon-child> rankshape
[15:59:52] <moon-child> numpy, even
[16:01:19] <hayley> Ouch. Though rankshape doesn't ring a bell...unless that's Bracha's one, in which case double ouch.
[16:01:55] <hayley> Shaperank?
[16:02:22] <moon-child> yeah, that was it
[16:02:50] <hayley> Ouch!
[16:04:39] <hayley> I guess numpy cause it's stuck in a sea of pointers, and shaperank cause it does weird reactive stream-ish stuff, but why Futhark?
[16:07:14] <hayley> .oO(Another fun sort of answer: programs are graphs of things and not dead text, if code really is data (an abuse of terms, of course, but it sounds funny). So readability is not a priority for myself.)
[16:07:50] <moon-child> no rank polymorphism.  No rank, period.  Bad syntax.  Over-emphasis on higher-order computation
[16:08:01] <hayley> Damn.
[16:08:45] <moon-child> Static typing, for that matter.  Types don't do much for apl in most cases cuz the only meaningful types are dependent 'is the same length as this other array' 'is all 1 or 0' 'is an unknown length of indices into that other array'
[16:09:36] <moon-child> 'has shape m x n, where m is the rank of that other array'
[16:09:45] <moon-child> quickly gets out of hand
[16:10:37] <hayley> FWIW I've though Petalisp could be nicer with some sort of filter/select/remove-if thing, but it'd probably screw with the strided array model too much. Oh well.
[16:13:09] <moon-child> (I actually think sql is in some respects a better apl--or perhaps k--than many other languages.  The primary difference, per https://outerproduct.net/boring/2021-12-01_pointers.html, is whether the pointers are implicit or explicit)
[16:13:10] -ixelp- Programing languages characterised by their attitude towards pointers
[16:13:17] <moon-child> petalisp is cool, I have been meaning to look into it seriously
[16:13:18] <hayley> Not saying you should write APL By The Pound in any particular way, but I think finding my way to complaining about the "awesome Lisp language list", Clojure, overuse of CFFI was incidental, coming from hearing common and annoying attitudes. But you sound like you have an idea of what works and what doesn't for array processing.
[16:14:21] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:14:54] <moon-child> you mistake me; I merely have a habit of sounding as though I know what I am talking about
[16:15:29] * hayley takes notes
[16:17:24] <selwyn> what is fortran actually like
[16:17:45] <hayley> Someone told me that they wanted to contribute to Netfarm, but didn't study anything. I guessed all of it for two years, then learnt how to use sci-hub. Well, guess that's why I haven't been working on it. I'm not qualified.
[16:18:09] <selwyn> i can't recall hearing a bad word said about it
[16:18:41] <moon-child> recently I read kahan 'much ado about nothing's sign bit'.  Found it very unconvincing, but was forced to admit I am not qualified to have an opinion on it
[16:18:50] <moon-child> perhaps I should go to uni and get a math degree
[16:19:32] <hayley> Arguably I don't know much about Lisp either, but mfiano found my enraged scribblings interesting.
[16:19:53] * selwyn looks up 'much ado about nothing's sign bit'
[16:20:37] <selwyn> looks really interesting
[16:20:47] <selwyn> did the suggestions get implemented?
[16:22:44] <moon-child> selwyn: that paper is by prof w kahan, who was one of the primary designers of ieee 754
[16:22:46] <moon-child> so: yes :)
[16:23:03] <hayley> Damn!
[16:23:13] <selwyn> i am only part way through it
[16:23:23] <moon-child> hayley: oh?
[16:23:31] <selwyn> but it seems very nice from the abstract
[16:24:20] <hayley> Still mad that someone's argument for not signaling on overflows and weirdness (by default) was that it's what IEEE 754 does. What a great way to make a decision.
[16:25:20] <hayley> And "where do you put an error if not a sort of float like NaN"? idk, the bottom type? A machine trap, like integer divide by 0 does? What an imagination!
[16:25:57] <moon-child> selwyn: two main problems I have with it: 1) it only gives you _some_ branch cuts. What, for instance, is tan(pi/2)?  2) why is the 'default' sign of 0 +?  (He acknowledges the latter, at least, but offers no remedy)
[16:26:12] <hayley> Hence 754 does not spark joy. But I'll read tomorrow.
[16:26:47] <selwyn> tan x doesn't have any branch cuts?
[16:27:09] <moon-child> hayley: I think it makes some sense if you consider it a special-purpose format for scientific computation.  Not a general-purpose number type
[16:27:13] <moon-child> *cough* js *cough* lua
[16:27:56] <moon-child> selwyn: look at a graph of tan x.  The point at pi/2 could be inf, or -inf
[16:28:11] <moon-child> as cos pi/2 is 0
[16:28:12] <selwyn> sure
[16:28:39] <selwyn> it's not a branch cut though, just a singularity
[16:29:19] <hayley> moon-child: Also, notably Racket. Damn Racket weenies again. Whereas CL and Erlang fail fast(er) by default.
[16:29:25] <selwyn> if you take the limit from other directions in the complex plane, i'm fairly sure you can get things like i * Inf
[16:30:21] <moon-child> selwyn: fair enough.  That doesn't really address the general problem, though
[16:30:27] <moon-child> hayley: I still want symbolic representations :/
[16:30:45] <selwyn> well
[16:31:22] <selwyn> imo its expecting a lot of a floating point proposal to assign meaningful values to singularities of analytic functions
[16:31:32] <selwyn> even limited to simple combinations of elementary ones
[16:31:37] <semz> I wished that "FP is special-purpose" remark was more widely understood.
[16:31:40] <selwyn> ah
[16:31:48] <moon-child> selwyn: yes, and this is why I would rather it simply not bother
[16:31:48] <selwyn> well, the function has to return something
[16:31:50] <moon-child> and not give 0 a sign
[16:35:35] <selwyn> the way i read the paper so far: 1) zero appears to have a sign - be multivalued - on the computer, which is awkward 2) analytic functions are often multivalued and have to have branch cuts, which is awkward
[16:37:09] <selwyn> we may as well reconcile these problems in order to define elementary functions on floating point numbers that enjoy at least some more internal consistency than would otherwise be the case
[16:39:33] <selwyn> if you want floating point cleverness, there is a good explainer of the quake inverse square root floating point hack
[16:40:28] <selwyn> next level shit https://www.youtube.com/watch?v=p8u_k2LIZyo
[16:40:28] -ixelp- Fast Inverse Square Root — A Quake III Algorithm - YouTube
[16:42:35] <ck_> classic
[16:44:28] <selwyn> i heard about it when i was ~12 and thought it was the maddest leet trick ever
[16:45:22] <ck_> "that carmack dude knows a thing or two about programming"
[16:45:30] <selwyn> and i still respect it. i can see how you would be able to come up with it if you knew a hell of a lot about floating point numbers
[16:45:54] <selwyn> but being able to spot how it can be used to generate a fast inverse square root - idk
[16:50:54] <semz> I'd imagine somebody idly wondered what a conversion between float and int looked like mathematically, noticed it's roughly log/exp, and then things slowly developed from this.
[16:52:32] <semz> But iirc the actual source is unknown so we'll never know
[16:53:19] <selwyn> it's not carmack
[17:01:34] <dave0> nite all
[17:02:32] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:17:06] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:479:e10b:25ac:9e6f)
[17:22:38] <selwyn> do people often use 'dear sir or madam' in the usa
[17:23:40] <moon-child> not often.  But often enough.  Why?
[17:23:54] <edgar-rft> if they have slaves then probably yes
[17:23:55] <selwyn> i am writing a cover letter
[17:24:31] <moon-child> ah, I see.  In that case I might go with 'to whom it may concern'
[17:24:38] <selwyn> for an american company
[17:24:50] <moon-child> slightly less formal, bit stiffer, way less old-fashioned
[17:25:40] <selwyn> wondering whether i should brit it up
[17:26:54] <edgar-rft> selwyn: treat them as if they were a colony of your empire :-)
[17:26:59] <moon-child> lol
[17:27:45] <selwyn> hopefully they will not act like one
[17:27:48] <selwyn> and prosecute prince andrew
[17:28:18] <edgar-rft> make them pay tea tax
[17:41:20] <ck_> selwyn: I got the kind of gym ring that has straps with carabiners. significant improvement, would recommend
[17:41:26] <selwyn> great
[17:41:46] <ck_> also good luck with the quantum job application
[17:41:50] <selwyn> ty
[17:41:55] <selwyn> planning to send it off today
[17:41:58] <ck_> just send a couple -- have them observe the correct one
[17:42:24] <selwyn> will you use the rings indoors or outdoors?
[17:42:41] <ck_> outdoors, there's some beams over my balcony that I can hang them from
[17:42:56] <selwyn> cool
[17:43:00] <selwyn> hm
[17:43:14] <selwyn> i haven't really found a suitable location yet
[17:44:16] <ck_> all of the makeshift "door anchor" things are crap in my experience, you'd be better of drilling and anchoring into the ceiling if that's possible
[17:46:37] <selwyn> i use one of these https://i5.walmartimages.com/asr/70df0d5d-3c54-4635-8e8c-515213b615c9_1.d174dad284f40d1f54c741e86c9fb2bc.jpeg
[17:47:10] <selwyn> its served me really well though people say the doorframe can't take the weight
[17:48:12] <ck_> sure it depends on how sturdy your building is of course. My frames can't handle anything like that unfortunately
[18:11:16] <ck_> how are those pies coming along?
[18:11:31] <selwyn> not started yet
[18:11:46] <ck_> I'm first then, but you'll win the bakeout in the end
[18:11:57] <ck_> had fewer eggs than I thought, so the quiche will be a little anemic
[18:12:07] <selwyn> glhf
[18:12:16] <ck_> gg no re
[18:18:57] <Gnuxie> how are door frames even held together 
[18:19:19] <selwyn> idk
[18:19:27] <Gnuxie> mine look like someone glued skirting board to the wall 
[18:19:28] <selwyn> but if you are meant to shelter in them in case of earthquakes
[18:19:36] <ck_> symbiotic relationship with the wall (a), or they're just glued in pl.. what you said
[18:19:42] <selwyn> hm
[18:19:45] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[18:20:13] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:20:13] <ck_> I'm looking up the term, there's a word for that type of beam
[18:20:26] <ck_> "lintel" ?
[18:23:13] <selwyn> never heard of that
[18:25:15] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[18:27:39] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:33:03] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[18:35:17] <epony> it's not the door frame, it's the bar above it on brick structures, or the sheer vertical wall on concrete buildings that keep you from harm and the doors are usually around thrusses and traeggers
[18:35:26] <epony> damn.. people
[18:35:43] <epony> think
[18:36:31] <epony> less likely that horizontal planes will fracture there and injure you vertically or sideways
[18:37:01] <epony> create "boxes of air" on collapes buildings
[18:37:05] <epony> etc
[18:42:43] <epony> the door in the field does not indicate there was a building there and the door is the only thing that remained, if that was the case, it would be a chimney or a vertical column
[18:45:36] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:47:51] <selwyn> https://www.youtube.com/watch?v=tlGTem8vkB0
[18:47:52] -ixelp- James Webb Space Telescope: Primary Mirror Deployment – Mission Control Live - YouTube
[18:48:21] <pl> Lintel sounds like linux variant of wintel, which was portmanteau for "windows in x86" 
[18:50:11] <selwyn> lintel would be a good name for a late 80s phone shop chain
[18:50:21] <selwyn> acquired by vodafone in 1993
[18:50:30] <White_Flame> lintel sounds like a good brand name for lentils
[18:52:26] <selwyn> they say the jwst will last for longer than 10 years
[18:56:09] <ck_> sounds conservative, isn't hubble over 20 years old now
[18:56:35] <ck_> ok, it has a lid and all that
[18:56:36] <selwyn> they are very cagey about putting a number on it
[18:56:58] <selwyn> perhaps they are worried that they would have to revise any estimate before it arrives at its destination
[19:00:23] <selwyn> i assume they refuel the hubble?
[19:03:14] <ck_> I'm not aware of any visits there other than the one to fix the optical system
[19:04:33] <ck_> and actually, is there even engines on that thing? I thought it only reorients itself with reaction wheels, never repositioning
[19:05:10] <ck_> makes sense that jwst has a shorter lifespan then, with its active orbit
[19:32:36] *** Joins: shka (~herr@109.231.0.226)
[19:33:24] *** Joins: johnjaye (~pi@154.6.152.74)
[19:38:21] <Alfr> ck_, last one to Hubble was around 2009, on that occasion a bunch of components were replaced.
[19:40:19] <ck_> Alfr: ah, including batteries, I see. So that counds as a bit of refuelling maybe
[19:49:57] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:54:13] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[19:54:16] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[19:55:09] *** Joins: aeth (~aeth@user/aeth)
[19:59:43] <selwyn> reaction wheels must have to go very fast
[20:00:48] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[20:05:18] <ck_> yeah, I remember a video that showed a testing facility for them. Sounded like a seagate barracuda
[20:06:41] <ck_> https://www.youtube.com/watch?v=7AR4yntqLsQ#t=6m20s
[20:06:42] -ixelp- Space Telescopes Maneuver like CATS - Smarter Every Day 59 - YouTube
[20:07:37] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[20:07:49] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[20:07:59] <shka> selwyn: not really 
[20:08:10] <shka> either go very fast, or have a lot of mass
[20:08:26] <shka> but since it is SPACE, going fast is preferable 
[20:08:27] <selwyn> but its a 10 ton telescope
[20:09:10] <shka> selwyn: it is a satellite, and there were heavier ones then this before 
[20:09:17] <shka> also, lol@https://www.youtube.com/watch?v=QZaRfNjTPx8
[20:09:18] -ixelp- HE FIXED TRAFFIC - YouTube
[20:10:50] <shka> traffic jams, now underground
[20:11:10] <selwyn>  i assume that the safety issues have never been resolved
[20:11:34] <shka> dunno, those tunnels were really weird idea from the start
[20:11:46] <shka> because it will bottleneck hardcore on the exit 
[20:11:48] <selwyn> i have probably mentioned it before
[20:12:21] <selwyn> but a meme proposal to build a bridge from britain to ireland became a minor election issue
[20:12:38] <shka> selwyn: i wonder now why subway trains are so big, perhaps building smaller tunnels with smaller trains would be more feasible?
[20:12:55] <selwyn> later on, the proposal was upgraded to not one but several tunnels all connecting in the isle of man
[20:12:56] <shka> bridge?
[20:13:16] <selwyn> my favourite bit is that there would be a huge underground roundabout
[20:13:20] <shka> oh, so it won't unite that easily 
[20:13:21] <selwyn> connecting ireland england and scotland
[20:14:03] <selwyn> wrt subway trains, i think that the requirement to have compatibility with contemporary rail gauge is a dealbreaker
[20:14:35] <shka> i just wonder about the cost
[20:15:10] <shka> because it seems that smaller the tunnel, the cheaper it is
[20:15:15] <selwyn> there was a nazi plan to massively increase the rail gauge
[20:15:24] <shka> maybe, never digged into that
[20:15:36] <selwyn>  trans-european trains with swimming pools
[20:15:43] <pl> selwyn: I think Denmark built an underground roundabout connecting tunnels from 3 islands (Faroe?) 
[20:16:06] <selwyn> isn't it dangerous to build an underground roundabout
[20:16:07] <selwyn> hm
[20:16:20] <selwyn> actually, the scariest uk roundabouts are actually the safest, contrary to public perception
[20:16:34] <shka> yes
[20:16:41] <shka> that's how you avoid accidents
[20:16:46] <shka> a healthy does of fear
[20:16:48] <shka> :D
[20:16:58] <ck_> there are underground roundabouts in scandinavia, finland I believe
[20:17:16] <ck_> looks pretty cool, too
[20:17:26] <selwyn> it seems that 3 metre gauge (!) is not practical after all
[20:17:34] <ck_> I was wrong, norway, not finland: https://i.insider.com/57bb8479ce38f2d6038b844b?width=2000
[20:18:08] <shka> selwyn: dunno, it sounds excessive, but it could be useful for transporting large objects on the rail
[20:19:20] <ck_> what does "3 metre gauge" mean
[20:19:46] <selwyn> in the context of railways, it is the distance between the rails
[20:21:19] <selwyn> although there are different ones, they are basically based off of the original gauge that a horse drawn wagon would require
[20:21:33] <selwyn> which has endured for compatibility reasons through the centuries
[20:22:07] <shka> so it is not only IT
[20:22:10] <shka> :P
[20:22:20] <selwyn> i was under the impression that road tunnels were just dangerous, huh
[20:22:36] <selwyn> maybe just the really long ones
[20:23:05] <selwyn> cause the gotthard base tunnel is a pita iirc
[20:23:45] <selwyn> oh its a rail tunnel. i must have another one in mind
[20:27:14] <ck_> brenner?
[20:27:37] <ck_> no, that's rail too
[20:28:07] <ck_> oh, both actually -- https://www.autobrennero.it/en/the-motorway/infrastructure/tunnels/
[20:28:09] -ixelp- Tunnels
[20:29:41] *** Quits: phantomics (~phantomic@97-118-150-246.hlrn.qwest.net) (Excess Flood)
[20:40:22] <shka> selwyn:  https://9gag.com/gag/azeXPBm
[20:41:57] <selwyn> haha
[21:07:25] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[21:09:30] *** Joins: aeth (~aeth@user/aeth)
[21:22:58] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:25:43] <pl> shka: healthy dose of fear? sounds like british-style PSAs: https://youtu.be/mKHY69AFstE
[21:25:43] -ixelp- Julie knew her killer - seatbelt road safety advert - YouTube
[21:26:22] <shka> pl: yes, be afraid, be very much afraid
[21:27:03] <pl> I like that seatbelt safety vid. Highlights usually silent part
[21:27:21] <shka> i like it too
[21:28:04] <shka> if you don't teach people about the danger without the fear, you are doing it wrong 
[21:28:08] <shka> *if you teach
[21:30:58] <shka> anybody interested in a draft for my blog post?
[21:31:54] <pl> About? 
[21:32:03] <shka> machine learning
[21:32:27] <shka> and a trick that can be used when encoding hierarchical codes as features 
[21:33:23] <shka> based on the ICD10D codes 
[21:33:56] <shka> which are hilarious https://www.icd10data.com/ICD10CM/Codes/V00-Y99/W50-W64/W61-/W61.33XD
[21:33:57] -ixelp- 2022 ICD-10-CM Diagnosis Code W61.33XD: Pecked by chicken, subsequent encounter
[21:36:41] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[21:37:11] <pl> Damn, getting a dinosaur to attack yiu twice, badly enough to visit hospital again 
[21:38:20] <shka> anyway
[21:38:23] *** Joins: johnjaye (~pi@154.6.152.74)
[21:38:27] <shka> pl: it is still a draft https://gist.github.com/sirherrbatka/e284c111f336b154cd53e1e37403c8c3
[21:38:27] -ixelp- gist:e284c111f336b154cd53e1e37403c8c3 · GitHub
[21:39:11] <shka> i plan to add some of the most oddly specific ICD10d codes as a bonus
[21:39:28] <shka> there is one for being sucked into a jet engine
[21:39:44] <shka> F-8: Omnomnomnom
[21:40:23] <shka> or X-32 i guess :D
[21:46:10] *** Quits: ck_ (~ck@plskthx.org) (Quit: leaving)
[21:47:25] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[21:49:51] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:49:56] *** Joins: ck_ (~ck@plskthx.org)
[21:53:05] <ck_> "ping reply from ck_: 3.4 seconds", is that just me?
[21:53:08] <selwyn> how can psas not be fear based :p
[21:54:47] <ck_> you wouldn't download a fear
[21:55:04] <selwyn> lolol
[21:55:05] <shka> FEAR is a good game
[21:55:10] <shka> you would download it
[21:55:32] <selwyn> the rail ones are the scariest imo
[22:06:45] <shka> as for the subways 
[22:06:59] <shka> you could have rails commonality with trams
[22:08:44] <shka> wiki says that modern trams use standard gauge
[22:08:46] <shka> meh
[22:12:57] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:13:45] <pl> gauge depends on tram system, as narrower gauge allows better turning radii
[22:14:15] <shka> thing is
[22:14:33] <shka> subways use way bigger tunnels then i would call "required"
[22:14:38] *** Joins: johnjaye (~pi@154.6.152.74)
[22:14:47] <shka> and i wonder how expensive those bigger tunnels are
[22:16:03] <pl> shka: there's air resistance and evacuation capability to consider
[22:16:46] <pl> old London Tube tunnels are kinda ... "fitted", and that requires special rolling stock and means that there are areas where you're shit out of luck if you have to evacuate
[22:16:52] <shka> yes, but if you would have thinner, slimmer train...?
[22:18:01] <pl> shka: then you have again similar disparity between tunnel and train size
[22:18:19] <pl> and bigger trains are better for quality of service and ease of acquiring rolling stock
[22:18:51] <shka> i guess
[22:18:58] <gilberth> Good morning #lispcafe!
[22:19:52] <selwyn> they prefer to build bigger tunnels for the newer lines
[22:19:54] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:20:05] <selwyn> as pl says the old ones are a pain
[22:21:24] <selwyn> in london there is not really a clear distinction between 'subway' and 'proper' rail
[22:22:10] <pl> The big distinction is "is it the special small tube tunnel or anything newer" 
[22:22:12] <selwyn> as a very large part of the tube is built from standard rail that was rebranded over time, and some lines still share track with the national rail network
[22:22:21] <gilberth> Are you talking about subways? As Hamburg wanted to have new cars some 20 years ago, they measured the tunnels to make the cars just barely fit through. One olde line has narrower tunnels than the other and therefore smaller cars.
[22:22:22] <selwyn> with respect to gauge, that is
[22:24:21] <selwyn> they upgraded my local line to use much longer stock but i don't think it was that helpful in the circumstances
[22:24:44] <pl> Also, I suspect using tunnel gauge similar to normal railway would allow you to reuse equipment to build it, but I do not know how that would impact costs 
[22:25:08] <pl> We took something like 70 years to build first subway line in Poland 
[22:25:10] <selwyn> reuse the tunnel boring machines?
[22:25:59] <shka> Warsaw is pretty horrible city of the subways though
[22:26:15] <ck_> reminds me of the one buried below the euro tunnel. what happened to that by the way? is there a border crossing below the channel now
[22:26:28] <selwyn> uh
[22:27:17] <pl> ck_: there are border crossings on both sides of the tunnel 
[22:27:19] <selwyn> the border crossings were always at the point of departure i.e. you cross into france at dover
[22:27:48] <selwyn> but iirc this is no longer the case for passenger trains
[22:28:10] <selwyn> eurostar is broke though
[22:29:08] <selwyn> it was also going to be the case that there would have to be massive customs infrastructure built at dover
[22:29:12] <selwyn> unsure what happened to that
[22:29:42] <pl> shka: you know of the mostly-forgotten subway tunnel under Wisła that got damnatio memorae treatment? 
[22:30:02] <shka> no
[22:30:41] <gilberth> In Hamburg the subway is using a different gauge than the regular trains; they are incompatible. This is the distinction between the "U-Bahn" and the "S-Bahn". Both can go under ground. The U-Bahn does more often, though.
[22:31:14] <selwyn> gilberth: no longer possible here
[22:31:37] <pl> There's a flooded subway tunnel under Vistula River, built in 1950s for dual purposes 
[22:31:37] <selwyn> it is easier to repurpose an existing line, or reuse a former closed alignment, than it is to build an entirely new line
[22:32:15] <pl> Its flooding caused the subway building process to get erases from history, pretty much, just like origin of "information superhighway" 
[22:32:22] <selwyn> what was the other purpose
[22:32:42] <pl> selwyn: crossing Vistula after American nuke the city 
[22:32:53] <selwyn> right
[22:33:39] *** Joins: johnjaye (~pi@154.6.152.74)
[22:33:47] <pl> At the time Warsaw was second on nuclear target list, with US military seriously considering plans that would start ww3 with nukes 
[22:35:11] <gilberth> There is one subway station in Hamburg, where at two platform on one side each there is a tunnel but no tracks. This is a line they started building once, but never finished for some reasons. Otherwise the city is busy building new lines all the time, which is great.
[22:36:13] <pl> One of the second line stations in Warsaw has similar setup, because it also has platforms for third line which does not have full plan yet 
[22:37:09] <selwyn> metro 2033 except set below the vistula, with only one tunnel
[22:37:55] <shka> Warsaw geological conditions are such that it does not lend itself towards underground tunnels
[22:37:59] <shka> also, bombs
[22:38:13] <pl> selwyn: that tunnel failed due to flooding. Some buildings on west side reused bits to make wine cellars 
[22:38:23] <selwyn> theres a big chunk of london that can't have the tube, its very annoying to get there
[22:38:25] <pl> shka: less bombs than in the west, despite greater destruction 
[22:38:36] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:39:36] <pl> (for non poles: Dresden got off /easy/ compared to Warsaw) 
[22:40:16] <selwyn> in london toxic waste seems to be a bigger issue than unexploded bombs these days
[22:40:46] <selwyn> when they did the olympics they had to disturb some kind of pit where they put lots of wartime rubble
[22:41:05] <pl> Few years ago we wondered how there are signs of buildings where current hackerspace warsaw is, in 1945
[22:41:29] <pl> Turns out we probably have bits and pieces of Gestapo office incorporated in the building 
[22:42:20] <pl> selwyn: considerable areas of "Silicon Valley" are superfund sites 
[22:42:25] *** Joins: johnjaye (~pi@154.6.152.74)
[22:42:54] <selwyn> at
[22:42:56] <selwyn> what
[22:43:06] <selwyn> how healthy is it to live there
[22:43:38] <pl> The superfund sites are closed off and you can't build new stuff there, but well... It's shitty unsafe place to live for other reasons 
[22:44:15] <aeth> Poland has some nice architecture. I guess large parts of the country doesn't have good access to stone or something? Lots of old brick buildings. Including the largest brick castle... https://en.wikipedia.org/wiki/Malbork_Castle
[22:44:17] <pl> And there's history of American (though somewhere else) local government ignoring outright confession from company that the land is polluted to hell, and building a housing and school there 
[22:44:38] <aeth> I like the look of old brick buildings. Bright red stands out compared to the dull gray of stone
[22:44:52] <pl> aeth: not too many quarries, so we quickly jumped over to brick 
[22:45:04] <selwyn> aeth: do they not really have them in america
[22:45:17] <pl> Unlike say Aberdeen, which built from brick up till around early 1900s
[22:45:36] <aeth> selwyn: where I am, brick's kind of the main traditional style, too. https://en.wikipedia.org/wiki/Federal_architecture
[22:45:48] <aeth> selwyn: but it's more boring than a gigantic f'ing brick castle that's hundreds of years older
[22:45:57] <selwyn> right
[22:46:44] <selwyn> aeth: you might enjoy this https://en.wikipedia.org/wiki/Battersea_Power_Station#/media/File:Battersea_Power_Station_from_the_river.jpg
[22:47:03] <selwyn> the story is that it was built out of brick in the 1930s to deliberately provide more employment
[22:47:09] <aeth> Maryland and Virginia are full of brick Georgian/Federal (pre/post Revolution). https://en.wikipedia.org/wiki/Georgian_architecture
[22:47:25] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[22:48:17] <aeth> but Poland has a more exotic take on using brick
[22:48:33] <aeth> selwyn: and, yeah, lots of old power plants and factories are their own, beautiful styles of brick
[22:48:48] <aeth> I just want to play a video game set in one of those locations, personally
[22:49:03] <aeth> your link's a good example, although that's way too big for a game setting
[22:49:18] <pl> aeth: how is it exotic? 
[22:49:28] <selwyn> til america has regency architecture. wtf
[22:49:39] *** Joins: johnjaye (~pi@154.6.152.74)
[22:50:05] <aeth> the big historic mansion/park in central Maryland is https://en.wikipedia.org/wiki/Hampton_National_Historic_Site
[22:50:12] <aeth> you can see other ones on Zillow, though, because the other ones are privately owned still
[22:50:23] <aeth> https://upload.wikimedia.org/wikipedia/commons/0/0e/Hampton_Natl_Historic_Site.jpg
[22:50:39] <aeth> strangely, that's plastered over, but otherwise looks fairly typical for the style, which usually has exposed brick
[22:51:00] <selwyn> yeah it looks a bit ugly like that
[22:52:44] <aeth> selwyn: I found this searching around for this sort of architecture... it's eastern Maryland, but it looks closest to the Platonic Form of this kind of mansion. https://www.kimmelstudio.com/historic-house-renovation
[22:52:46] -ixelp- Colonial Restoration — KIMMEL STUDIO ARCHITECTS
[22:53:05] <aeth> I mean, the extra shutters with no windows on either side of the facade are a bit weird
[22:53:05] <selwyn> interesting
[22:53:27] <selwyn> its very difficult for me to picture georgian architecture outside of like 10 towns in england
[22:53:34] <selwyn> this does look different somehow though
[22:53:39] <aeth> https://images.squarespace-cdn.com/content/v1/57c837262e69cf6dc3c7ef62/1629314420089-YC540NYOR7UH8312NYXB/Cloverfields-Aerial2.jpg?format=2500w
[22:54:03] <aeth> I mean, there are houses that are way more notable, but they all try to do something different and less bland and boring with the facade
[22:54:33] <aeth> but that's... kind of the average traditional form that doesn't try to do anything odd with it
[22:54:36] <selwyn> pl: is there really a lot of granite in aberdeen
[22:54:44] <aeth> lots of surburban houses in the 1970s were built in that style, too.
[22:54:48] <aeth> so it's all over the place
[22:55:36] <aeth> The most notable is probably Monticello
[22:56:04] <pl> selwyn: YES
[22:56:09] <aeth> but Monticello is actually very unique-looking because Jefferson was creative, so while it's part of that architecture family, it's not really representative of it. At least, from all of the various buildings I've looked at
[22:56:36] <pl> selwyn: also, if you want to freak out an anti-nuclear energy person, take a geiger counter with you on a trip
[22:56:41] <selwyn> i was going to say
[22:57:00] <pl> after marking fukushima's level of background radiation from just beside the power station
[22:57:02] <pl> IIRC
[22:57:24] <selwyn> great place for radon enjoyers
[22:57:38] <aeth> These examples are mostly plantation houses, but all of the old houses look like this, it's just that that's where the pre-1860s wealth was south of Pennsylvania. Other houses just copied the rich people's style, cheaply. I've seen some that look like the restored colonial house, but with siding instead of brick, including siding on the portico, and it looks horrible
[22:58:09] <pl> funnily enough, when I was given responsibility over first year students as tutor, we were given an extra lecture on safety of one of the buildings
[22:58:24] <pl> the lecture was "run upwind, don't look back, fuck any official gathering points"
[22:58:49] <aeth> pl: Warsaw or SV?
[22:59:01] <pl> aeth: University of Aberdeen :D
[22:59:08] <pl> for the running upwind
[22:59:10] <aeth> ah
[22:59:39] <pl> I think the list of nasties that weren't visible *started* at asbestos cladding
[23:00:12] <pl> the nasties that were visible were signs like "danger: high energy EM field", "Biohazard level 2", "radiation"
[23:01:30] <pl> joys of old STEM courses buildings ;)
[23:02:14] <pl> (I still envy MIT for having a reactor, having failed admissions there the closest I got was keeping myself warm with its heat exchanger)
[23:02:20] <selwyn> many of our buildings are listed, so it is very difficult to improve/repair them
[23:04:08] <pl> especially when you consider that a "recent" for an ancient university might mean "built in late 19th century"
[23:04:50] <pl> (as alum of University of Aberdeen, it's my honorable obligation to dunk on England having two universities total when we had two just in Aberdeen)
[23:05:04] <selwyn> i enjoy being told that there has been a 'failure of the sewage injectors'
[23:05:55] <pl> selwyn: is that due to dumping untreated sewage into rivers that Johnson started when chemicals for treatment started running out?
[23:06:03] <selwyn> lol
[23:06:20] <selwyn> well, this example is why i can't be shocked at the superfund stuff
[23:06:23] <selwyn> we are going that direction
[23:06:31] <pl> (serious issue in UK, last I checked, as imports became problematic and there's not enough local production)
[23:07:05] <selwyn> the main issue is that there is no governmental or (to an extent) societal pressure to sort out the problem
[23:07:18] <selwyn> policies can be changed, chemicals bought (at a high price if necessary) etc.
[23:07:58] <pl> we lack necessary feedbacks in Poland too
[23:08:00] <selwyn> if no fucks are given then none of that matters any more
[23:09:11] <pl> the kind of scandal that marked the end of SLD (Alliance of Democratic Left, descendant of communist party) government in ~2005 is today one of dozens... a day
[23:09:38] <selwyn> hm
[23:10:22] <shka> we are currently going trough our own Watergate scandal
[23:10:25] <shka> literally 
[23:10:36] <pl> We had scandals become somewhat standard memes ("it's a forest ranger's daughter", for example) that had near absolutely zero effect
[23:11:05] <pl> yeah, with it throwing shade on legitimacy of last elections
[23:11:05] <shka> but it is funny because the ruling party could not even pull this shit out
[23:11:16] <shka> at least, not right
[23:11:41] <pl> they stole my idea, and fucked it up, I'd love to file for copyright infringement!
[23:12:03] <shka> "sure, we will simply send our ILLEGALLY OBTAINED, SENSITIVE DATA TO SERVERS LOCATED ABROAD"
[23:12:08] <shka> you fucking morons
[23:12:17] <selwyn> lol
[23:12:47] <shka> this government can't even do authoritarian state right 
[23:12:48] <selwyn> juries have been criticised by conservative party mps recently
[23:12:52] <pl> i mean, let's be honest, NSO Group wasn't making software to fight legitimate targets
[23:13:03] <selwyn> obviously not
[23:13:14] <shka> pl: it was making software to sell 
[23:13:53] <pl> shka: nothing beats head honcho admitting to them having Pegasus in 2019, when formally he shouldn't have access to that data, after his minions spent weeks ridiculing the idea
[23:14:13] <shka> yeah 
[23:14:17] <shka> that as well
[23:14:27] <pl> shka: it was making software for removal of palestine, that would ensure steady source of funding anyway
[23:14:40] <shka> as I said, they can't even do authoritarianism right
[23:15:12] <pl> They can't get anything right :/
[23:16:02] <shka> pl: i mean, yeah, thinking and planning is for the LGBT or something
[23:16:13] <shka> true alpha strait man does not think
[23:16:26] <shka> just swing that club
[23:16:27] <pl> also, apparently the right is full of semi-closeted gays
[23:17:01] <shka> oh, sorry, you had to buy that club from THE ISRAEL?
[23:17:07] <selwyn> brussels police busted a gay orgy for covid reasons
[23:17:35] <selwyn> and the participants were right wing meps from poland hungary etc.
[23:17:36] <shka> honestly it is fucking depressing
[23:17:39] <shka> politics aside
[23:17:53] <shka> those people are fucking idiots
[23:17:59] <pl> selwyn: yeah, it was a bit famous here among those who watch anything other than propaganda outlets
[23:19:36] <selwyn> i don't get what they got out of nso group? spying on an opposition that is useless anyway?
[23:19:37] <shka> in many ways, polish gov is trying to mimic hungarian
[23:20:09] <pl> selwyn: they used it to spy on election team leader
[23:20:24] <shka> but while Orban is actually cunning, Law and Justice is just a bunch of idiots
[23:20:26] <pl> selwyn: also on prosecutor that dared to go after them
[23:21:03] <pl> and while the opposition doesn't have enough votes... at their dumbest, they are levels above top-line minds of Law and Justice
[23:21:10] <selwyn> right
[23:21:49] <shka> the thing is... while the opposition has to fight each other for votes
[23:22:08] <shka> Law and Justice is the only large party on the right side 
[23:22:22] <shka> meme-worthy Confederation can be ignored
[23:22:30] <pl> shka: not exactly only one, but their "coalition" is formed of its own spin-offs, so...
[23:22:36] <shka> at least for now
[23:24:32] <shka> so anyway, it is not like they are getting that many votes
[23:25:53] <shka> and without changing the election into something more gerrymanderable they will loose
[23:26:12] <shka> but given how they want to mimic Orban, that is not out of the question 
[23:27:05] <pl> they manage to hold position by having stranglehold on media that are the only source followed by considerable portion of population (let's say about 15%~20% of voters)
[23:27:37] <pl> and maybe ~15% so called "concrete electorate" (people who will vote for them and won't think anything else)
[23:30:41] <shka> hard to say, large fraction of old people 
[23:30:51] <shka> and they have a tendency to, well, die
[23:34:39] <pl> that too
[23:34:47] <selwyn> takes a while though
[23:34:53] <pl> a lot of the older people is due to lacking other sources of information
[23:35:04] <shka> selwyn: have you heard about that COVID19
[23:35:23] <shka> pretty amazing thing
[23:36:27] <pl> yeah...
[23:36:43] <pl> you know what's one of the most annoying things?
[23:36:43] <selwyn> i heard about it
[23:36:49] <selwyn> but can it get >100k votes
[23:37:11] <selwyn> in countries with tens of millions of people
[23:37:20] <shka> selwyn: sure
[23:37:26] <pl> The Chinese system that led to them maintaining closes to 0 covid infections for majority of 2020-2021, was test driven in Poland (Wrocław) and USSR (Moscow)
[23:37:53] <pl> selwyn: in Poland, direct covid deaths reached 100k recently, I think
[23:38:22] <shka> oh, and 36% of deaths in Poland are of "unknown reason"
[23:38:23] <pl> and overall mortality (which involves issues from longcovid, non-covid deaths caused by blocked health system, etc) reached WW2 levels
[23:38:24] <shka> :P
[23:38:34] <selwyn> shka: wtf
[23:38:47] <selwyn> i suppose covid did manage to get china's life expectancy to overtake the usa's
[23:38:58] <pl> shka: have you heard of recent research in USA for possible covid-caused deaths, done by insurance industry?
[23:39:14] <shka> pl: not in the medical sector anymore
[23:39:20] <shka> despite my blog post
[23:39:24] <shka> so no
[23:39:52] <pl> which covered things that don't count as covid deaths officially, like death attributed to lowered mental capability in recovered people, or damaged vascular system, etc.
[23:40:06] <pl> stuff that happened later than 2 weeks from recovery
[23:40:28] <pl> and involved long-term reduction in helth
[23:40:28] <shka> oh right
[23:40:30] <pl> *health
[23:41:31] <shka> yeah, flue also kills surprising number of people and I heard from friends that this is because they got hit by covid hard, and before they could get back on track flue got'em
[23:41:55] <pl> shka: funnily enough, 2020 lockdowns nearly stopped normal influenza dead
[23:42:11] <pl> because western response was designed with influenza in mind, not SARS
[23:43:08] <shka> not in Poland
[23:43:09] <shka> http://wwwold.pzh.gov.pl/oldpage/epimeld/grypa/Ryc_3.jpg
[23:43:31] <shka> 2018/2019 was actually pretty nasty strain of flue 
[23:43:44] <pl> anyway, lockdowns, with contact tracing, is something Poland did in 1968 iirc, and USSR around similar time
[23:45:12] <shka> anyway, do what you will with this information, but official number of covid deaths is rather high, flue this year is also record high, and 36% of deaths was because of "garbage codes"
[23:45:15] <pl> I really doubt that Chinese govt didn't have the same playbooks available when designing responses after SARS hit them
[23:45:23] <shka> so situation here is... not great
[23:46:21] <shka> and the true extent of the problem is actually obfuscated 
[23:47:10] <pl> obfuscated implies it was done on purpose... ok, half on purpose it is
[23:47:22] <shka> pl: it was
[23:47:33] <shka> i have said it
[23:47:56] <shka> shots fired
[23:48:26] <pl> I say half on purpose, because they couldn't organize a trip to brothel without failing
[23:49:14] *** Joins: algae (~algernon@170.10.246.117)
[23:50:47] <shka> so anyway, number of deaths picked in he 2020 as it seemed
[23:51:03] <shka> but numbers from 2021 absolutely CRUSHED it 
[23:51:53] <shka> selwyn: so in summary, covid directly and indirectly killed 200 thousands people in the country  
[23:52:12] <selwyn> damn
[23:52:15] <pl> yeah, as I mentioned, we got mortality at the same level as during WW2 (average)
[23:52:57] <shka> 2018/2019 800k thousands people have died
[23:53:06] <shka> 2020/2021 over 1 million
[23:53:27] <shka> you can obfuscate any way you want, but no way around that number 
[23:55:08] <shka> and omicron APPEARS to have mostly mild symptoms but fuck if i know how it interacts with the flue for instance
[23:57:22] <shka> especially if another dangerous flu strain hits, like another avian one
[23:58:48] <pl> it hits milder... but it's infection rate is crazy high in comparison, so just from law of large numbers you're going to have more ICU/ER load
[23:59:09] <shka> internet is calling it "flurona' and apparently it is a thing now
[23:59:16] <gilberth> Well, it may have mild symptoms, but it is more infectious. That is the death toll still will be high. As the pressure on the health system. And we don't know about long-covid with even mild Omicron infections. I'm not optimistic here.
[23:59:38] <pl> my symptoms were like getting a particularly annoying cold
[23:59:57] <pl> but I don't know if it was Delta or Omicron
