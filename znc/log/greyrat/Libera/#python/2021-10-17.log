[00:00:30] *** Joins: wyclif (~wyclif@user/wyclif)
[00:00:48] <aphysically> but it clearly shouldn't be None because of the assert, and then why is it different from un-stringized?
[00:00:58] <aphysically> I reported here https://github.com/microsoft/pyright/issues/2442
[00:01:32] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:02:04] <jinsun> yeah that is not really clear, let's see what thhey say
[00:02:18] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[00:02:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[00:02:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[00:03:09] <jinsun> in the rich code, that function is only used on line 586
[00:03:34] <jinsun> which is inside the elif condition where  _is_attr_object(obj) is True
[00:03:50] <jinsun> which means inside the elif it is definitely not None
[00:04:07] <jinsun> so you can assert there, and put the def inside the elif block I guess
[00:04:18] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:04:52] <jinsun> and use it unquoted so that pyright doesn't do that weird thing
[00:05:10] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:05:14] <aphysically> maybe, we'll see what pyright says first about the bug
[00:05:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:05:27] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[00:05:31] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[00:06:02] *** Joins: wyclif (~wyclif@user/wyclif)
[00:06:35] *** Joins: seednode (~seednode@user/seednode)
[00:07:28] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[00:09:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:10:40] <jinsun> aphysically: this seems to solve it https://bpa.st/CBRA
[00:11:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:11:33] <aphysically> yeah that's what you were saying, the double assert is needed though?
[00:11:34] *** Joins: wyclif (~wyclif@user/wyclif)
[00:11:47] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[00:12:38] <aphysically> I mean if we're doing that we might as well get rid of the function entirely
[00:12:59] <jinsun> yeah weirdly inside the function it again started treating it as attr | None so had to asssert there also
[00:13:07] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:13:24] <jinsun> and outside tthe function had to assert so that it doesn't complain about the return annotation
[00:13:36] *** Joins: Vonter (~Vonter@user/vonter)
[00:13:53] <jinsun> lol yeah it is just one line that can be copy paste to the place where it is used
[00:13:59] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[00:14:07] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[00:14:07] <jinsun> then one assert will do
[00:14:35] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:15:45] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:16:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:17:05] *** Joins: wyclif (~wyclif@user/wyclif)
[00:18:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:18:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[00:18:29] <jinsun> defining that general function is probably too dynamic hackery that static type checkers cannot handle
[00:19:10] *** Quits: vimart (~vimart@85.255.233.156) (Quit: WeeChat 2.8)
[00:19:20] <aphysically> pyright maintainer has this attitude about a lot of things which is why I was iffy to report, but it seems so clearly a bug anyway
[00:19:26] <jinsun> (mypy seemed to work only because of its limitations and bugs)
[00:19:58] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[00:20:20] <jinsun> seems like you got a reply already
[00:20:36] <jinsun> as designed :D
[00:20:45] <aphysically> yes
[00:21:00] <aphysically> I'm not sure I understand how this interacts with the proposed 3.11 behavior though
[00:21:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:22:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:22:48] <jinsun> hmm yeah good point then asserts would stop working for pyright?
[00:22:51] <aphysically> jinsun: yep, with from __future__ import annotations stop working
[00:22:58] <aphysically> yes that's the case jinsun
[00:23:01] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[00:23:12] <aphysically> I don't know how the separate proposal for future behavior interacts with this
[00:23:19] <jinsun> ah hwell it is consistent with what he replied
[00:23:21] *** Joins: Vonter (~Vonter@user/vonter)
[00:23:48] <jinsun> another reason to postpone it I guess
[00:23:52] <jinsun> :D
[00:25:37] <aphysically> does the alternative proposal have the same problem?
[00:25:48] <aphysically> I don't remember the PEP for the alternative proposal
[00:26:02] <jinsun> 649?
[00:27:53] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[00:27:53] <aphysically> they're still deferred? so it would still break this type of codeflow with asserts
[00:28:11] <aphysically> by the way his workaround is fine, idk why I didn't think of that
[00:28:47] <jinsun> not sure, seems like 649 would have the same problem, if it would be processed as a forward declaration, which probably it would
[00:29:21] <jinsun> yeah the workaround is great, solves the # type ignore required for mypy also
[00:31:26] <aphysically> yes
[00:31:29] <jinsun> though it prevents the type checker helping us with the None checks (well mypy was not helping already, so not much loss)
[00:32:11] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[00:32:35] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[00:32:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:32:54] <aphysically> ah, eric replied again so he must not be completely frustrated by me :)
[00:33:05] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:33:07] *** Joins: Vonter (~Vonter@user/vonter)
[00:33:39] *** Joins: wyclif (~wyclif@user/wyclif)
[00:33:50] *** Quits: stockholm (~Andreas@p200300d2c72b7e00500fc1b050d6deb4.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[00:34:02] <aphysically> interesting example too
[00:34:45] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[00:36:24] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[00:36:43] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 252 seconds)
[00:36:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:37:12] <jinsun> oh hmm really weird, never thought there will be so obvious differences with the future import
[00:37:14] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[00:37:45] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[00:37:47] <alzgh> I was solving a problem that creates H-Trees like the ones you see in this pictures https://i.imgur.com/GNuJj1P.png based on an initial coordinate, initial length of the line and depth of the tree. I have the code working where it correctly writes out the points of the lines that need to be drawn. I was wondering what method packages is best for me to use to visualize it?
[00:37:48] *** Joins: extropiator (~extropiat@user/extropiator)
[00:37:49] <jinsun> mypy seems to be fine with that though
[00:38:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:38:35] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[00:38:50] *** Joins: Naan (~naan@user/naan)
[00:39:11] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:21] <aphysically> I'm just thankful the pyright maintainer is patient with me
[00:41:33] <aphysically> I'm down to only 50/50 on bugs vs as designed
[00:41:37] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[00:42:10] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[00:42:25] <aphysically> anyway, down to only 18 pyright errors on the codebase; like ~4 of those are shared with mypy if you actually install the pygments typing stub so mypy can see it
[00:42:33] <aphysically> a few days ago it was like 150
[00:42:45] <energizer> alzgh: maybe matplotlib or gizeh
[00:43:19] *** Joins: Vonter (~Vonter@user/vonter)
[00:44:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[00:44:41] *** Joins: wyclif (~wyclif@user/wyclif)
[00:46:49] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:47:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[00:48:17] <alzgh> thank you energizer I'm going to look them up. On a similar note I was also thinking about drawing the trees to the console by putting simple dots together and taking care of remainders and stuff. Is there a package or method that would facilitate drawing to the terminal?
[00:49:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:50:02] <energizer> alzgh: there are a bunch of terminal-drawing libraries but idk the state of the art
[00:50:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:50:24] <alzgh> I'm happy with any suggestions, I'm noob :D
[00:50:24] <raek> alzgh: this is a good place to look: https://awesome-python.com/#command-line-interface-development
[00:50:37] <alzgh> thanks raek
[00:50:39] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[00:51:38] <alzgh> haha, I remember having starred that repo a while back, raek
[00:51:53] <alzgh> thank you for suggesting it now because this will remind me next time where to look :)
[00:52:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[00:52:38] <aphysically> jinsun: look at the new reply from Eric :D, there's a new issue from a typeshed contributor
[00:53:05] *** Joins: Venhal (sid515085@uxbridge.irccloud.com)
[00:53:23] <jinsun> aphysically: ah by Akuli
[00:53:38] <aphysically> they hang out here? hi :)
[00:53:53] <Akuli> hi
[00:53:58] *** Joins: Vonter (~Vonter@user/vonter)
[00:54:08] <Akuli> yeah we're really annoying eric today :D
[00:54:22] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[00:54:24] <Venhal> Hello! how do I get python not to print `^C` when I press Ctrl-C ?
[00:54:25] <jinsun> we were just discussing the future import behavior :D
[00:55:09] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[00:55:09] <energizer> i've seen some of you talking about typechecking in here, i'm curious what you're doing
[00:55:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:55:44] *** Joins: wyclif (~wyclif@user/wyclif)
[00:57:03] <aphysically> at the very moment I'm going through the rich codebase and validating its typing annotation through a combination of mypy and pyright and me
[00:57:14] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[00:57:22] <aphysically> it's not quite pyright compatible so I've been making sure I understand each of the issues and working on PRs to adjust if needed
[00:58:00] <energizer> are you author of rich?
[00:58:06] <aphysically> I am not
[00:58:16] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Remote host closed the connection)
[00:58:35] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[00:59:00] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[00:59:01] <aphysically> jinsun: there's a few cases in the rich codebase that run into the problem of "for x in y; do stuff" -> outside of loop use x
[01:00:07] <jinsun> yeah there the type checker can be really dumb, even if the loop is guaranteed to run it thinks it might not
[01:00:13] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[01:00:16] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:00:23] <The-Compiler> Venhal: I'm pretty sure that's your terminal, you'll see the same if you do so in, say, cat
[01:00:33] <aphysically> jinsun: yeah, see this file for example https://github.com/willmcgugan/rich/blob/master/rich/_pick.py
[01:00:38] <The-Compiler> not sure how to prevent it, though
[01:00:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:00:59] *** Quits: beterraba (~beterraba@185.183.107.221) (Ping timeout: 264 seconds)
[01:01:16] *** Joins: wyclif (~wyclif@user/wyclif)
[01:02:53] <Akuli> Venhal, apparently you can do this to see lol instead of ^C:   except KeyboardInterrupt: print("\b\blol")
[01:04:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:04:40] *** Joins: Vonter (~Vonter@user/vonter)
[01:05:04] <Venhal> Thank you both! I will try \b\b :)
[01:05:19] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:05:21] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[01:06:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:06:33] <aphysically> I'm not sure if upstream will be receptive to fixing those kinds of typing errors though
[01:06:46] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[01:06:47] *** Joins: wyclif (~wyclif@user/wyclif)
[01:06:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:07:51] <Akuli> aphysically, isn't that just "return any(values)", since it will always do bool(None) at the end?
[01:08:16] <jinsun_> <aphysically> "jinsun: yeah, see this file..." <- can be solved by doing an unnecessary value = None before the loop, better than not using the type checker I guess
[01:08:17] <Venhal> \b\b doesn't work
[01:08:31] <Akuli> \b\b moves cursor two characters back, you still need to print something
[01:08:50] <aphysically> Akuli: uhhh, let me look I was focused on the typing and not hte function
[01:08:52] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[01:09:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[01:09:37] <Akuli> ah no it's not the same
[01:09:48] <Akuli> for [False, True] that will return False but my thing would return True
[01:10:13] <Venhal> Akuli: \b\b does not remove ^C
[01:10:31] <Akuli> right, it does not remove anything, it only moves the cursor
[01:11:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:12:17] <Venhal> Akuli: got it, thanks!!
[01:12:19] *** Joins: wyclif (~wyclif@user/wyclif)
[01:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[01:15:06] *** Joins: portalrat (~portalrat@user/portalrat)
[01:16:48] *** Joins: fikran (~fikran@user/fikran)
[01:18:30] *** Quits: hudo__ (~hudo@62.68.20.210) (Ping timeout: 260 seconds)
[01:18:35] <aphysically> Akuli: I think i will replace the function with     return next(bool(val) for val in values if val is not None)
[01:19:08] <Akuli> you will need a fallback for next(), otherwise it fails when the sequence contains only Nones
[01:19:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:19:17] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:19:23] *** Joins: Lazenca (~lazenca@user/lazenca)
[01:19:43] <aphysically> yep
[01:20:11] *** Quits: y1n (~y1n@77.119.197.188.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[01:20:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:20:49] <jinsun> aphysically: next(val for val in values if val is not None, False)
[01:20:58] <jinsun> bool() is not required
[01:21:02] <aphysically> it's not quite that
[01:21:10] <Akuli> yeah that's a syntax error
[01:21:30] <aphysically> that's just cause of the parentheses he needed in the gnerator expression, but that's not what i mean
[01:21:32] <aphysically> t
[01:21:55] <jinsun> ugh yeah parens
[01:22:07] <aphysically>     return next((bool(val) for val in values if val is not None), bool(values[-1])) it's more like this, and we still need to throw an error if no values are passed
[01:22:13] <aphysically> but I guess the values[-1] will do that
[01:22:17] <ColonelJ> alzgh: I wrote a H tree https://bpa.st/YNQQ
[01:22:54] <aphysically> oh, well I guess if values[-1] was there and truthy then it would have been not none derp
[01:23:19] <jinsun> yeah then it won't go in the fallback case
[01:23:40] <aphysically> but then I can fix his function by just changing bool(value) to False
[01:23:51] <Akuli> yeah that's always False
[01:23:56] <aphysically> yeah
[01:24:00] <Akuli> it only gets there when all arguments are Nones
[01:24:26] <Akuli> the docstring might need some clarification too :D
[01:24:33] *** Joins: Vonter (~Vonter@user/vonter)
[01:25:03] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[01:25:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:25:49] <aphysically> yeah making the adjustment
[01:25:54] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:26:05] *** Joins: wyclif (~wyclif@user/wyclif)
[01:28:32] <aphysically> down to 16 pyright errors
[01:29:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[01:29:41] <alzgh> nice ColonelJ The problem statement asked to divide the length (in your case the width and height) at each level by root(2). Other than that it's pretty similar to my code. Here's mine https://bpa.st/4I5A
[01:30:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:30:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:31:10] <aphysically> one of them is a getter/setter incongruency that I'm not sure how to cleanly solve
[01:31:35] *** Joins: wyclif (~wyclif@user/wyclif)
[01:31:50] <CoderGuy> why does tkinter call it's textbox an entrybox?
[01:32:37] <aphysically> I think maybe it can't be fixed because it's external API
[01:33:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:34:05] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:35:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:35:31] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[01:35:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:35:35] <aphysically> jinsun: I can never find the documentation for the syntax of the pyright-specific file ignores
[01:36:16] <aphysically> ah found it
[01:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:37:00] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[01:37:08] *** Joins: wyclif (~wyclif@user/wyclif)
[01:37:26] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[01:37:32] *** Joins: indie (~indie@176.119.157.217)
[01:37:57] *** Quits: indie (~indie@176.119.157.217) ()
[01:38:54] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:39:20] <CoderGuy> oh ic they called an inputbox an entrybox
[01:39:22] *** Joins: indie (~indie@176.119.157.217)
[01:39:23] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 264 seconds)
[01:39:24] <CoderGuy> interesting
[01:39:29] *** Joins: Bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[01:39:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:39:32] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:40:11] <jinsun> aphysically: this one? https://github.com/microsoft/pyright/blob/main/docs/comments.md
[01:40:25] <aphysically> ye
[01:40:32] <aphysically> didn't seem to work anyway
[01:41:03] <aphysically> # pyright: reportPropertyTypeMismatch=False doesn't suppress that error for that file (maybe cause it involves classes from other files too?)
[01:41:05] <aphysically> who knows
[01:41:12] *** Joins: lethu (~lethu@user/lethu)
[01:41:37] <jinsun> aphysically: in the rich code? where?
[01:41:52] <aphysically> where'st he error?
[01:41:55] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Excess Flood)
[01:42:02] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Quit: Leaving)
[01:42:13] <jinsun> ya
[01:43:00] <aphysically> jinsun: okay, paddingdimensions can be a variety of different types, and it gets processed into the tuple[..] of the getter https://github.com/willmcgugan/rich/blob/eb673d1204340738d3084ebc2e4c789a35a4e49b/rich/table.py#L323
[01:43:17] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[01:43:29] <aphysically> users of hte getter expect the proper tuple type; pyright warns here because getter type != setter
[01:43:39] <aphysically> I don't think refactoring is an option because this is part of the public API
[01:44:10] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:44:10] <aphysically> so I figured the pyright ignore was best but didn't seem to do anything
[01:44:12] *** Joins: Player001 (~Player001@user/player001)
[01:45:12] *** Joins: Cindsmape (~Lindis@user/lindis)
[01:45:12] *** Quits: Bakunin (~Lindis@user/lindis) (Killed (NickServ (GHOST command used by Cindsmape)))
[01:45:31] *** Cindsmape is now known as Bakunin
[01:47:05] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[01:47:08] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[01:47:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:47:37] *** Quits: ColonelJ (~ColonelJ@user/colonelj) (Quit: leaving)
[01:47:46] *** Quits: magla (~gelignite@55d4f7e4.access.ecotel.net) (Quit: Stay safe!)
[01:48:11] *** Joins: wyclif (~wyclif@user/wyclif)
[01:49:47] <jinsun> hmm yeah so pyright wants that you use a method there instead of setter, but obviously that will break the api
[01:49:58] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:50:18] *** Joins: OPK (~OPK@user/opk)
[01:52:24] <jinsun> aphysically: what will go wrong if you just change the annotation for padding to Tuple[int, int, int, int]
[01:52:53] <aphysically> padding is a union of stuff that's not that type, so it throws type errors when you try to use it, *including* type errors for users of the library
[01:53:02] <aphysically> because those alternative types are part of the public API
[01:53:03] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:53:07] *** Quits: akinode (~akinode@2a02:908:1394:cce0:97:9583:231f:daba) (Quit: Client closed)
[01:53:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:53:31] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[01:53:42] *** Joins: wyclif (~wyclif@user/wyclif)
[01:54:07] <jinsun> oh right now users don't get type errors if they supply anything other than Tuple[int, int, int, int]
[01:54:46] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 252 seconds)
[01:57:16] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[01:57:28] <aphysically> right now I"m looking at a really weird one
[01:57:32] *** Joins: metaace (~metaace@user/metaace)
[01:58:10] <aphysically> jinsun: I"m not sure what's really going on here https://github.com/willmcgugan/rich/blob/eb673d1204340738d3084ebc2e4c789a35a4e49b/rich/pretty.py#L658
[01:58:12] <aphysically> look at the type of _CONTAINERS
[01:58:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:58:46] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[01:59:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:59:56] <aphysically> it's tuple(type, ...)
[02:00:27] <jinsun> yeah
[02:00:44] <jinsun> and the problem?
[02:01:46] <aphysically> if you reveal_type inside that isinstance,
[02:01:48] <aphysically>   /home/gregory/Documents/open/rich/rich/pretty.py:660:25 - info: Type of "obj" is "Any | type"
[02:02:11] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:b210:b5ce:6253:365b) (Ping timeout: 264 seconds)
[02:02:14] <aphysically> obj is Any waaaaay up, but okay it's inside an isinstance whatever if pyright wants to narrow, but where is it even getting this narrowing from?
[02:02:29] <aphysically> shouldn't it be Any | tuple[type, ...] at best?
[02:02:38] <aphysically> Is it time to bother Eric again? D:
[02:03:58] <aphysically> like after line 259 add a reveal_type for _CONTAINERS and a reveal_type for obj jinsun
[02:04:04] <aphysically> 659 I mean
[02:04:26] <aphysically> and if you reveal_type(obj) anywhere before that line you get Any
[02:04:30] <jinsun> isinstance(something, tuple_of_types) means it is one of those types in the tuple isn't it?
[02:05:14] <aphysically> oooooo I see, you're right
[02:05:22] <aphysically> I was being dumb :D
[02:05:36] <aphysically> yeah okay, so then back to it
[02:05:47] *** Quits: Akuli (~Akuli@82-203-166-158.bb.dnainternet.fi) (Quit: Leaving)
[02:06:19] <jinsun> so actually Any makes sense, not sure if Any | type makes sense though
[02:07:17] <aphysically> that seems something that will definiely be as designed
[02:07:20] <aphysically> :P
[02:07:46] *** Quits: indie (~indie@176.119.157.217) (Remote host closed the connection)
[02:07:50] <aphysically> oh wait, yeah you're right
[02:07:56] <aphysically> it should be an *instance* of type not type
[02:08:18] *** Joins: Cindsmape (~Lindis@user/lindis)
[02:08:18] *** Quits: Bakunin (~Lindis@user/lindis) (Killed (NickServ (GHOST command used by Cindsmape)))
[02:08:23] *** Cindsmape is now known as Bakunin
[02:08:30] <aphysically> wow this is a mess
[02:09:09] *** Joins: Vonter_ (~Vonter@user/vonter)
[02:09:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:10:16] *** Joins: wyclif (~wyclif@user/wyclif)
[02:11:03] <aphysically> jinsun: okay but, barring that bug(?), the problem is that len() is used on something only declared to be a type
[02:11:36] <aphysically> and iter()
[02:11:59] *** Quits: extropiator (~extropiat@user/extropiator) (Ping timeout: 256 seconds)
[02:12:05] <aphysically> argh one moment
[02:12:35] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[02:12:50] <Roey> hey nedbat
[02:13:35] <Roey> nedbat: another article that I remember reading back around May talked about Guido van Rossum endeavoring to get Python 2x as fast
[02:13:35] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[02:13:37] <Roey> https://www.theregister.com/2021/05/13/guido_van_rossum_cpython_3_11/
[02:13:41] <Roey> by Python 3.11
[02:13:52] <jinsun> aphysically: not clear to me where the | type is coming from though
[02:13:56] <nedbat> Roey: yup, he has a few people at microsoft working on that.
[02:13:59] <Roey> Although Shannon envisages a JIT compiler eventually, this would not come until Python 3.12 in his plan. The changes for Python 3.11 would be based on "lots of tweaks" such as better memory layout, improved performance for small integers, faster calls and returns, and zero overhead exception handling.
[02:14:08] <Roey> nedbat: yeah GvR among them, aye
[02:14:35] <aphysically> I got it figured out jinsun
[02:14:42] *** Parts: CoderGuy (~CoderGuy@user/coderguy) (Leaving)
[02:14:43] <Roey> oh wow, 5x speedup as a long-term goal
[02:15:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:15:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:15:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:16:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[02:16:47] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:17:10] <jinsun> aphysically: how?
[02:17:56] <aphysically> ill show u one moment
[02:18:08] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:18:43] <nedbat> Roey: 5x seems super-aggressive to me, but i don't know anything about what they are attempting
[02:19:21] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:19:28] *** Joins: jabojangles (~jabojangl@c-73-72-192-126.hsd1.in.comcast.net)
[02:19:37] <energizer> is there a benchmark suite that they're averaging over?
[02:19:48] *** Joins: Vonter_ (~Vonter@user/vonter)
[02:20:30] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 265 seconds)
[02:20:30] *** Quits: nips (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 265 seconds)
[02:20:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:20:49] <nedbat> energizer: no idea how they are assessing the performance
[02:20:50] *** Joins: nips (~nips@abv84.internetdsl.tpnet.pl)
[02:21:19] <jinsun> https://github.com/python/pyperformance maybe
[02:21:21] *** Joins: wyclif (~wyclif@user/wyclif)
[02:21:43] <jinsun> (no idea, I just saw this randomly recently)
[02:22:12] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:22:23] *** Joins: Klinda (~superleag@user/klinda)
[02:23:09] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:24:12] <aphysically> it's working fine and it just seem slike th at's it's way of representing it jinsun
[02:24:23] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[02:24:25] <aphysically> but anyway the actual errors come up later when it tries to do len() and iter() on it
[02:25:06] <jinsun> aphysically: yesh but the problem comes because of the | type right?
[02:25:21] <aphysically> oh, yeah, you mean why it's doing that in the first place when it's declared Any?
[02:25:34] <aphysically> I think that's just a general behavior of pyright when you use isinstance
[02:25:51] <jinsun> yeah if it ws any there would be no problem in that block
[02:26:07] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 252 seconds)
[02:26:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:26:24] <jinsun> I don't think that happens generally
[02:26:51] *** Joins: wyclif (~wyclif@user/wyclif)
[02:26:55] *** Joins: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com)
[02:26:55] <Roey> nedbat: sensible to say; I agree
[02:26:59] <jinsun> maybe it is because of the `and not isinstance(obj, type)` in line 629 here
[02:27:36] <Roey> are there any good ideas from other languages that any of you see making sense in python?
[02:28:00] <aphysically> jinsun: idk, if you make a testcase or a pyright bug let me know
[02:28:37] <aphysically> I assumed that *did* happen generally
[02:28:44] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[02:28:49] <aphysically> so maybe making a comparison would be useful
[02:29:40] <jinsun> you can just add `and not isinstance(obj, type)` on line 658 to make it Any
[02:29:53] <jinsun> and solve your len and iter problems
[02:30:01] *** Quits: emerent (~quassel@p200300cd574855b6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:30:15] *** Joins: emerent (~quassel@p200300cd57485576ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:30:22] <jinsun> the code there seems to be asssuming that anyway
[02:30:29] *** Joins: Vonter_ (~Vonter@user/vonter)
[02:30:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:31:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:31:34] *** Quits: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it) (Read error: Connection reset by peer)
[02:31:39] <aphysically> oh then pyright isn't getting the | type from where I thought
[02:32:00] <aphysically> making _BRACES be of type Any instead of type doesn't stop pyright narrowing it to Any | type
[02:32:03] <aphysically> surely that's a bug then?
[02:32:22] *** Joins: wyclif (~wyclif@user/wyclif)
[02:33:18] *** Joins: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it)
[02:33:59] *** Quits: Hazza (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[02:34:35] <jinsun> aphysically: my guess is line 629
[02:35:00] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[02:35:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[02:35:44] <aphysically> what I don't understand is if I change the key type of _BRACES to be Type[Sized], for example, pyright narrows the type of obj to "Sized" after the check
[02:35:53] <aphysically> if I leave it as type it's Any | type
[02:36:01] <aphysically> and if I change it to Any it's *still* Any | type
[02:36:38] <jinsun> well instance if sized must be sized and nor type
[02:36:51] <jinsun> s/if/of
[02:37:06] <jinsun> ugh I can't type
[02:37:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:37:25] <jinsun> anyway when you give sized it can narrow down better
[02:37:53] *** Joins: wyclif (~wyclif@user/wyclif)
[02:37:55] <aphysically> yeah, but why when I give it Any does it still do type if it *is* narrowing based on it
[02:38:05] <jinsun> both type and Any are useless for narrowing down, so it tries to be smart and narrows down froom elsewhhere
[02:38:42] *** Joins: Dan39 (~dan@user/dan39)
[02:38:45] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Remote host closed the connection)
[02:39:22] <jinsun> based on the previous if conditions
[02:39:22] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:40:09] <aphysically> and that you believe that narrowing down is buggy?
[02:40:19] *** Quits: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it) (Read error: Connection reset by peer)
[02:40:38] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[02:41:06] <aphysically> yeah sure enough if we comment out that line it works
[02:41:07] *** Joins: Vonter_ (~Vonter@user/vonter)
[02:41:37] <aphysically> but surely it's wrong to infer the type is type from that line
[02:41:42] <aphysically> it's not even run unless it's a dataclass
[02:41:57] <aphysically> why should it be doing anything based on the behavior there?
[02:42:15] *** Quits: bjb (~bjb@sourcerer.ca) (Ping timeout: 265 seconds)
[02:42:35] *** Joins: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it)
[02:42:40] <aphysically> one sec I"m going to try to make a minimal example
[02:42:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:42:59] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[02:43:24] *** Joins: wyclif (~wyclif@user/wyclif)
[02:43:54] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:44:47] *** Joins: audiophile_ (~audiophil@user/audiophile)
[02:45:23] *** Joins: bukata (~lev@user/bukata)
[02:45:23] <aphysically> I'm going to annoy eric? surely this is wrong https://bpa.st/TXNA
[02:45:59] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[02:46:08] <aphysically> I mean I can see where it could be as designed?
[02:46:38] <aphysically> what do you think
[02:47:03] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:47:07] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:47:26] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:47:58] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[02:48:03] <aphysically> I think the real problem is maybe that pyright doesn't support isdataclass for type narrowing?
[02:48:03] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[02:48:26] *** Quits: flyback (~flyback@2601:540:8201:1e60:2596:f16c:6dfd:8410) (Ping timeout: 245 seconds)
[02:48:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:49:06] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 268 seconds)
[02:50:06] <aphysically> wait how is this even working on 3.6 aren't dataclasses 3.7+?
[02:50:32] <jinsun> isdataclass doesn't narrow down to a real type so it can't be used I think
[02:51:37] <jinsun> there is some backport of dataclass
[02:52:13] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:52:22] <jinsun> aphysically: https://github.com/willmcgugan/rich/blob/master/pyproject.toml#L31
[02:52:37] <aphysically> ah
[02:52:51] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:53:07] *** Quits: Squatch (~Squatch@c-71-193-161-16.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[02:54:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:54:40] <aphysically> jinsun: but I have another problem with it, I don't understand why pyright should assume it gets typing information here: https://bpa.st/QQHA
[02:55:35] *** Quits: punkgeek (~punkgeek@151.245.157.114) (Ping timeout: 264 seconds)
[02:57:04] <jinsun> yeah that is a bit weird that it is not just Any, might be worth annoying Eric again :D
[02:57:19] <aphysically> like here https://bpa.st/3L5Q
[02:57:29] *** Joins: MikZyth (~MikZyth@188.65.242.210)
[02:57:43] <aphysically> I mean I feel like it's going to be an "as designed" but this feels like such a dumb thing to have to work around
[02:57:58] *** Joins: flyback (~flyback@2601:540:8201:1e60:21e9:6d01:129c:8ca5)
[02:58:00] *** Joins: georgios (~georgios@user/georgios)
[02:58:29] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[02:58:42] <aphysically> but I've annoyed him enough Q_Q
[02:58:52] <jinsun> the False case could be accepted as bug probably
[02:59:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:59:24] <jinsun> the other one might be reasonable but False must be a bug
[02:59:39] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[02:59:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:59:49] <aphysically> the False case is basically the one in rich - it's not literally false but it could be so it's useless
[02:59:55] <aphysically> (to use for narrowing)
[03:00:22] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:00:29] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[03:01:22] *** Joins: Wulf (~Wulf@user/wulf)
[03:01:33] <aphysically> jinsun: I could open a "Discussion" :P
[03:02:15] <jinsun> hmm now I'm thinking False case is not special again, both cases are bugs or not
[03:02:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:02:50] <aphysically> because the is_dataclass
[03:02:57] <aphysically> (which could be false)
[03:03:14] <jinsun> aphysically: yes discussion can be good too, we are not sure if it is a bug
[03:03:16] *** Joins: wyclif (~wyclif@user/wyclif)
[03:05:22] <aphysically> it's not *wrong* since it's | Any, if I remove the is_dataclass then it narrows it fully to type
[03:05:53] <aphysically> and I'm pretty sure the behavior to allow | types with Any is going to be intended
[03:06:47] <aphysically> I keep searching for issues about unions with Any types but I can't find anything
[03:06:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:07:19] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:07:21] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[03:07:25] <Soni> so uh you can't range(datefrom, dateto, timedelta(1)) we guess?
[03:07:52] <BtbN> Use unix timestamps
[03:07:55] *** Quits: flyback (~flyback@2601:540:8201:1e60:21e9:6d01:129c:8ca5) (Remote host closed the connection)
[03:07:59] <Soni> how do you iterate datefrom, dateto in timedelta(1) steps?
[03:08:02] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:08:19] <BtbN> Or write your own range function that does that
[03:08:20] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:2c35:c0a7:d572:acbe)
[03:08:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:08:49] *** Joins: wyclif (~wyclif@user/wyclif)
[03:08:50] <jinsun> if you can use pandas it has date_range which covers lots of deltas
[03:09:01] <aphysically> jinsun: can you think of any reason unioning with Any and not dropping the other types is useful?
[03:09:20] *** Joins: flyback (~flyback@2601:540:8201:1e60:117:3ae2:a60e:6ba0)
[03:09:23] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[03:09:43] <aphysically> err
[03:09:47] <aphysically> I'm just gonna open a discussion
[03:09:59] *** Joins: ethrl (~morty@user/doforlove33)
[03:10:17] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[03:11:40] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[03:11:45] <jinsun> aphysically: it makes it more strict than plain Any, which is probably useful somewhere, it is just confusing where it is inferring things from and randomly unioning types onto the Any
[03:11:55] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[03:12:00] *** Joins: Vonter_ (~Vonter@user/vonter)
[03:12:16] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[03:12:54] <pycurious> Anyone who uses pylint + click - how do i get this fixed: https://dpaste.org/t2F7 ? Seems like pylint does not line click code?
[03:13:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:13:49] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[03:13:53] <aphysically> jinsun: https://github.com/microsoft/pyright/discussions/2444
[03:14:20] *** Joins: wyclif (~wyclif@user/wyclif)
[03:15:00] *** Quits: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[03:15:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:15:56] <pycurious> aphysically: do you use pyright on your codebase?
[03:16:10] <aphysically> yes
[03:16:21] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[03:17:38] <jinsun> pycurious: change `x` to `_` and give some default values to count and name just to satisfy pylint (or otherwise # pylint comment to disable the message)
[03:18:45] <deltab> pycurious: yeah, looks like click produces a different function to the one after def, but pylint doesn't understand that
[03:18:47] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[03:18:51] *** Quits: Jong (~Jong@2620:10d:c090:400::5:81bd) (Ping timeout: 245 seconds)
[03:19:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[03:19:43] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[03:19:51] *** Joins: wyclif (~wyclif@user/wyclif)
[03:20:18] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[03:20:55] *** Joins: Snyp (~Snyp@49.207.216.206)
[03:22:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[03:22:39] *** Joins: Vonter_ (~Vonter@user/vonter)
[03:23:57] *** Joins: squatch (~squatch@c-71-193-161-16.hsd1.or.comcast.net)
[03:24:22] <jinsun> aphysically: in the short example it kinda makes sense actually, opposite of `if is_dataclass(obj) and not isinstance(obj, type) and False` is `if True or isinstance(obj, type) or not is_dataclass(obj)` which reads like type | Any
[03:24:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[03:24:39] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[03:24:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:24:56] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[03:25:21] *** Joins: wyclif (~wyclif@user/wyclif)
[03:26:09] *** Joins: fikran (~fikran@user/fikran)
[03:26:48] <deltab> pycurious: issue #259
[03:27:10] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[03:27:14] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:27:35] <deltab> looks like they added an option to ignore it, but haven't fixed it
[03:27:48] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Quit: Haxxa flies away.)
[03:28:59] <deltab> pycurious: does it help to rewrite it to define the function first then call the decorators?
[03:29:08] *** Quits: RoyK (~roy@user/royk) (Ping timeout: 265 seconds)
[03:29:10] *** Quits: Snyp (~Snyp@49.207.216.206) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:29:18] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[03:29:45] <jinsun> tht sounds more annoying than disabling the message
[03:29:46] *** Joins: RoyK (~roy@user/royk)
[03:30:02] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:12] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:14] *** Joins: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com)
[03:30:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:30:37] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:30:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:30:53] *** Joins: wyclif (~wyclif@user/wyclif)
[03:30:56] *** Joins: zoitub (~AdminUser@191.95.21.72)
[03:31:08] <deltab> yeah, I'm just curious as to whether it'd handle it correctly; if so, pylint could apply a similar transformation as it checks
[03:31:34] <jinsun> but seems to work
[03:32:31] *** Quits: bukata (~lev@user/bukata) (Ping timeout: 265 seconds)
[03:32:35] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:32:52] <jinsun> this gives 10.00/10 https://bpa.st/JTWQ
[03:34:26] *** Quits: MikZyth (~MikZyth@188.65.242.210) (Quit: WeeChat 3.3)
[03:35:20] <jinsun> but I guess what is really happening is that at that point pylint just gives up and treats hello like Any, doesn't actually treat it like a new function with different signature
[03:35:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[03:36:08] <jinsun>  which could be a solution for decorators too, you lose some True positives to get rid of some False positives
[03:36:23] *** Quits: RoyK (~roy@user/royk) (Ping timeout: 264 seconds)
[03:36:23] *** Quits: flokuehn (~flokuehn@i5E86B311.versanet.de) (Ping timeout: 265 seconds)
[03:36:25] *** Joins: wyclif (~wyclif@user/wyclif)
[03:36:58] *** Joins: RoyK (~roy@user/royk)
[03:37:06] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:38:13] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-198.citykom.de)
[03:40:18] <deltab> one of the comments on #259 says that it is checking properly, and that you can test it by adding an argument to the call
[03:40:40] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[03:40:45] <jinsun> aphysically: so eric kinda gave the same logic that I also saw just after you posted that
[03:40:56] <aphysically> yeah I just responded if you refresh
[03:41:11] <aphysically> he's totally right, it's probably wrong for mypy to not do this type of narrowing too
[03:41:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:41:23] <aphysically> the actual tricky part is the way it interacts with the isinstance check
[03:41:37] <aphysically> which is completely nonintuitive
[03:41:57] *** Joins: wyclif (~wyclif@user/wyclif)
[03:42:13] *** Joins: jazzy (~jaziz@user/jaziz)
[03:43:27] *** Joins: Vonter_ (~Vonter@user/vonter)
[03:43:27] <jinsun> yeah, but at least the solution is easy just put a not isinstance(obj, type) after the _CONTAINERS check
[03:45:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:46:24] <jinsun> deltab: doesn't seem to check for the click decorators, in that 10/10 code I called hello with some random arguments and pylint was still fine with the code
[03:46:42] *** Quits: driib (~driib@185.195.233.168) (Read error: Connection reset by peer)
[03:46:55] *** Joins: driib (~driib@185.195.233.168)
[03:47:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:47:28] *** Joins: wyclif (~wyclif@user/wyclif)
[03:48:08] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[03:48:57] *** Quits: zoitub (~AdminUser@191.95.21.72) (Ping timeout: 265 seconds)
[03:49:56] <deltab> ah, thanks for testing it
[03:52:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:52:59] *** Joins: wyclif (~wyclif@user/wyclif)
[03:53:06] <aphysically> jinsun: I don't know, I'm still not sure about the narrowing :D
[03:53:52] <aphysically> if pyright knows it's tuple(listoftypes)
[03:54:09] *** Joins: Vonter_ (~Vonter@user/vonter)
[03:54:28] <aphysically> I guess because type is an instance of type
[03:54:35] <aphysically> good lord that's confusing :D
[03:55:19] <jinsun_> yes type is still possible
[03:56:39] <aphysically> I would need to annotate the dict with type(except type type) somehow to narrow it
[03:56:54] <aphysically> yeah okay I completely understand what's going on here now
[03:57:09] <aphysically> that's such an obscure tricky edge case
[03:57:21] *** Joins: y1n (~y1n@178.165.205.127.wireless.dyn.drei.com)
[03:57:43] <jinsun_> aphysically: why not simply and not isinstance (obj, type) in the line with containers check
[03:57:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:58:06] <aphysically> I think assert is better; I added assert not isinstance(obj, type) to the next line
[03:58:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:58:21] <aphysically> because it has no runtime significance, and asserts get removed in stuff like -O and such
[03:58:30] *** Joins: wyclif (~wyclif@user/wyclif)
[03:58:35] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[03:58:40] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:58:52] <aphysically> this is going to be a really long commit message
[03:59:07] <aphysically> for one assert :D
[03:59:11] *** Joins: mickey8 (~user@user/mickey)
[03:59:28] <jinsun_> eh it is the same thing to me (and assert getting removed with -O makes it worse actually)
[03:59:54] <aphysically> but it signals pretty clearly "this is for the benefit of type checkers" I think
[04:02:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[04:02:37] <foo> Anyone happen to know a python plugin that can do something like this? This seems like something to add to a git hook. https://marketplace.visualstudio.com/items?itemName=SimonSiefke.html-language-features
[04:03:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:03:58] <grym> foo: it's not clear what feature(s) in this plugin interest you
[04:04:02] *** Joins: wyclif (~wyclif@user/wyclif)
[04:04:20] <jinsun_> aphysically yeah, but I think that is similar to shutting up the type checker because we know more (and in this case we do (for now)), I like to let the type checker do the thinking instead of me
[04:04:48] *** Joins: Vonter_ (~Vonter@user/vonter)
[04:06:12] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[04:06:18] *** Joins: stpz (~stpz@240e:341:2281:9200:8cb:7092:b5f9:5be4)
[04:06:21] *** Quits: Haxxa (~Haxxa@122-199-44-183.ip4.superloop.com) (Ping timeout: 245 seconds)
[04:06:40] <deltab> foo: what does it do? I see a list of things it no longer does
[04:07:20] <deltab> oh, and it has a "wrap selection with tag" command
[04:07:27] *** Quits: audiophile_ (~audiophil@user/audiophile) (Remote host closed the connection)
[04:07:44] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:08:22] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[04:09:21] *** Quits: orbatos (~orbatos@user/orbatos) (Remote host closed the connection)
[04:09:23] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[04:10:07] *** Bakunin is now known as Butterknuckler
[04:10:16] *** Butterknuckler is now known as Bakunin
[04:11:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:14:26] *** Joins: nicode (~nic@157.52.13.25)
[04:15:05] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[04:15:27] *** Joins: Vonter_ (~Vonter@user/vonter)
[04:16:50] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[04:18:51] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 245 seconds)
[04:19:16] <aphysically> jinsun_: okay the *only* things left in rich codebase are 1) some possibly unbound stuff 2) the pygments errors that will require me to look into pygments internals (but these also error with mypy as long as you have the typing package installed), some warnings for typevars only used once, and a couple cases where there's some typing thing with LRU caches that I haven't looked into yet
[04:20:11] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[04:20:36] <foo> grym / deltab - oh, excuse my vagueness. Something to clean up HTML/CSS is what I'm after. Black and Prettier might be enough?
[04:20:46] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:20:55] <jinsun> aphysically: nice, soon you will be able to add pyright to the rich CI
[04:21:58] <aphysically> yeah
[04:22:50] *** Quits: y1n (~y1n@178.165.205.127.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[04:28:53] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:29:37] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 268 seconds)
[04:29:55] *** Joins: Vonter_ (~Vonter@user/vonter)
[04:30:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:30:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:30:49] *** Quits: stpz (~stpz@240e:341:2281:9200:8cb:7092:b5f9:5be4) (Quit: Client closed)
[04:32:13] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:32:35] *** Joins: Joco (~Joco@modemcable177.112-161-184.mc.videotron.ca)
[04:34:23] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[04:34:32] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[04:35:25] *** Joins: y1n (~y1n@91.141.43.230.wireless.dyn.drei.com)
[04:35:56] <aphysically> this LRU class was all kinds of messed up jinsun
[04:35:58] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[04:36:05] *** Joins: The_Jag_ (~The_Jag@host-87-17-20-94.retail.telecomitalia.it)
[04:36:45] *** Joins: metaace_ (~metaace@user/metaace)
[04:36:45] *** Joins: vlm (~vlm@user/vlm)
[04:36:59] *** Quits: The_Jag (~The_Jag@host-79-35-46-54.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[04:37:24] *** Joins: llh (~llh@user/llh)
[04:38:11] *** Joins: lethu (~lethu@user/lethu)
[04:39:32] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[04:40:35] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[04:43:17] *** Joins: fluter- (~fluter@user/fluter)
[04:44:17] *** Joins: Vonter_ (~Vonter@user/vonter)
[04:44:43] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 252 seconds)
[04:44:51] <aphysically> jinsun: hey can you review my suggested change here; I don't normally use nested classes a lot
[04:44:56] <aphysically> errr, you'll see
[04:46:17] <aphysically> here's the current class https://github.com/willmcgugan/rich/blob/master/rich/_lru_cache.py
[04:46:25] <aphysically> and I want to change it to this I think? https://bpa.st/TU5Q
[04:46:43] <aphysically> I believe the super() is actually needed so the typing is correct for the returned value otherwise there will be errors
[04:47:08] <aphysically> diff: https://bpa.st/WDEQ
[04:48:41] <aphysically> the generic was obviously wrong but I'm more concerned about the stuff I changed to super()
[04:48:53] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[04:49:57] <aphysically> should I be doing super(LRUCache, self) instead?
[04:49:58] *** Joins: gitly2 (~gitly@148.252.128.175)
[04:50:07] <aphysically> the difference is the type of inheritance supported right?
[04:50:11] *** Joins: nomic (~nomic@185.217.117.88)
[04:50:50] *** Joins: Snyp (~Snyp@49.207.216.206)
[04:51:36] *** Quits: gitly (~gitly@185.69.144.188) (Ping timeout: 268 seconds)
[04:51:41] *** gitly2 is now known as gitly
[04:51:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:52:31] *** Joins: whatsupdoc (~whatsupdo@148.64.20.117)
[04:52:52] *** Joins: jcbjoe2021 (sid520195@lymington.irccloud.com)
[04:53:01] <aphysically> the only difference between super() and super(LRUCache, self) here is what happens when/if this class is subclassed?
[04:53:23] *** Parts: jcbjoe2021 (sid520195@lymington.irccloud.com) ()
[04:53:47] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Ping timeout: 264 seconds)
[04:53:48] *** Joins: whatsupdoc9 (94401475@67.205.143.82)
[04:54:03] *** Quits: whatsupdoc9 (94401475@67.205.143.82) (Client Quit)
[04:54:46] <whatsupdoc> what type does combinations(nums, 3) return?
[04:54:56] <nedbat> whatsupdoc: an iterable
[04:54:59] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:2c35:c0a7:d572:acbe) (Ping timeout: 264 seconds)
[04:55:05] <whatsupdoc> which one?
[04:55:14] <nedbat> whatsupdoc: i don't know, does it matter?
[04:55:15] *** Joins: xiongxin (~quassel@113.116.224.79)
[04:55:19] <nedbat> whatsupdoc: probably a combinations object
[04:55:33] <aphysically> It never even occurred to me the use of super() had implications for type checkers
[04:55:35] <aphysically> (until now)
[04:56:27] <whatsupdoc> If I would specifically need a list, wouldn't that matter?
[04:56:54] <nedbat> whatsupdoc: list(combinations(...))  will give you a list.  but why do you need the list?
[04:57:00] <whatsupdoc> I just don't want to unnecesarily convert things if I don't need to
[04:57:06] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:57:23] <nedbat> whatsupdoc: are you sure you need a list?
[04:57:34] <grym> whatsupdoc: the joy of duck typing is that usually you avoid that conversion
[04:57:43] *** Joins: noarb (~noarb@user/noarb)
[04:57:56] <Togra> usually you can type() something to see what it is, though I'm sure that can get complex in some situations
[04:58:01] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[04:58:24] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[04:58:29] <nedbat> whatsupdoc: combinations definitely doesn't return a list.
[04:58:44] *** Joins: Vonter (~Vonter@user/vonter)
[05:00:00] *** Quits: Snyp (~Snyp@49.207.216.206) (Ping timeout: 265 seconds)
[05:00:05] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[05:00:27] *** Bakunin is now known as chrysalis
[05:00:38] <whatsupdoc> I was trying to solve 3sum
[05:00:39] <whatsupdoc> https://leetcode.com/problems/3sum/submissions/
[05:01:05] *** Joins: rhardy98 (~Guest2@2600:1700:bb0:4010:5968:8f4b:3e80:2348)
[05:01:07] <rhardy98> hello everybody I am looking for some help on a project I have due for college. A text based game in python.
[05:01:11] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:01:12] *** Quits: jabojangles (~jabojangl@c-73-72-192-126.hsd1.in.comcast.net) (Remote host closed the connection)
[05:01:16] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:01:19] <whatsupdoc> But can only pass 315/318 test cases
[05:01:21] <whatsupdoc> https://dpaste.org/ResO
[05:01:40] <rhardy98> Can anybody help me ?
[05:02:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:02:15] <rhardy98> I have almost the whole program completed but am stuck on one line of code that is causing my program not to work properly
[05:02:29] <mefistofeles> rhardy98: sure, welcome
[05:02:47] <mefistofeles> rhardy98: you can paste the code and the error/problem you are getting, use something like bpaste.net for sharing code
[05:02:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 264 seconds)
[05:02:47] *** brabrax_ is now known as brabrax
[05:03:03] <rhardy98> thank you i have been looking for a online chat to be able to talk to other python programmers
[05:03:17] <SnoopJ> you've found one :)
[05:03:21] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:03:22] <whatsupdoc> best one
[05:03:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[05:03:56] <rhardy98> Thats awesome !!!
[05:03:58] <rhardy98> https://bpa.st/M5EQ
[05:04:12] <rhardy98> this is the code I have so far for my program
[05:04:55] <rhardy98> It is supposed to be a simple text based game with 8 rooms 6 rooms have one item in it and one room has zombies in it. I have to collect all the items to be able to beat the zombies and win the game
[05:05:40] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[05:06:52] <whatsupdoc> I think my code is failing because it's too slow smh
[05:06:52] <nedbat> whatsupdoc: you don't need a list there, do you?
[05:07:15] <rhardy98> https://bpa.st/XH2Q
[05:07:23] <rhardy98> i do need the list dont i ?
[05:07:26] <whatsupdoc> I don't remember what filter() takes
[05:07:28] <rhardy98> Unless
[05:07:31] <whatsupdoc> I thought it was a list
[05:07:35] <nedbat> whatsupdoc: this is an example of what we were talking about: combinations returns an iterable, and filter takes an iterable.
[05:07:40] <SnoopJ> it takes any iterable and a function
[05:07:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[05:07:56] <whatsupdoc> Yea, I guess it can take a list()
[05:08:03] <whatsupdoc> I guess I can remove list() lol
[05:08:15] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 268 seconds)
[05:08:46] <SnoopJ> it can, but sometimes the full scan involved in building the list is wasteful work
[05:08:54] *** Joins: noarb (~noarb@user/noarb)
[05:08:58] <whatsupdoc> Which is better code? https://dpaste.org/5HM2 or https://dpaste.org/ResO ?
[05:09:22] *** Joins: Vonter (~Vonter@user/vonter)
[05:11:45] <nedbat> whatsupdoc: the second
[05:12:03] <whatsupdoc> without the list ;)
[05:12:12] <nedbat> whatsupdoc: if your code is too slow, it's because it's doing too much work.  there are faster ways to solve this than just checking all the combinations of three elements.
[05:12:48] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[05:13:16] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[05:14:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[05:14:28] <whatsupdoc> Yes, there must be, but I'm still trying to think of it
[05:15:40] <nedbat> whatsupdoc: let's say you pick two elements to be the first two of your three.  What's the fastest way to see if those two could become a triple that sums to zero?
[05:16:29] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[05:16:30] <whatsupdoc> If you picked i and j, find -(i+j)
[05:19:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:19:20] <rhardy98> https://bpa.st/46FA
[05:19:33] <rhardy98> anybody have any input on this for me ?
[05:19:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[05:19:49] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[05:20:00] *** Joins: Vonter (~Vonter@user/vonter)
[05:20:20] <whatsupdoc> rhardy98 you didn't really ask a question
[05:21:07] *** Joins: semeion (~semeion@user/semeion)
[05:21:26] <rhardy98> moving between rooms works fine for me as my last project i had to that and it was susccesful but now adding the inventory and items to the room is where I am having problems. I guess my question is where did i make the mistake for the items not being found in the room and not being added to the inventory list ?
[05:22:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:22:41] <deltab> rhardy98: there's no get command
[05:23:12] <deltab> nothing to check for the command or update the inventory
[05:24:13] <rhardy98> ok but with the code i have now it should still display which item is in each room as i move through the rooms correct ?
[05:24:13] *** Quits: nunggu (q@gateway/vpn/protonvpn/nunggu) (Quit: WeeChat 3.3)
[05:24:18] <whatsupdoc> Is it valid python to put the else statement before the elif?
[05:24:39] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[05:25:00] <whatsupdoc> You're not adding anything to the inventory list
[05:25:37] <whatsupdoc> I don't see any inventory.append()
[05:25:57] <deltab> whatsupdoc: you can only use elif after if; you can't use it after else
[05:26:33] <deltab> it's short for "else if", but without the extra level of indentation
[05:26:43] <whatsupdoc> oh lol maybe an indentation error lol rhardy98
[05:26:48] <nedbat> whatsupdoc: "if you picked i and j, find -(i+j)"  right! and finding a number is fast in a set.
[05:27:16] <whatsupdoc> I don't see how that's any faster than picking 3 numbers randomly
[05:27:30] <whatsupdoc> Idk
[05:27:49] <deltab> rhardy98: you need to be careful with your indentation
[05:28:00] <whatsupdoc> rhardy98: line 63 remove indent
[05:28:06] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790:f8ec:5e67:76c6:e1c2)
[05:28:11] *** Joins: Warped (~Warped@user/warped)
[05:28:11] <nedbat> whatsupdoc: you aren't picking them randomly, for each pair of numbers, you are checking every number in the set.
[05:28:27] <whatsupdoc> So you're picking 2 numbers randomly instead of 3?
[05:28:30] <nedbat> whatsupdoc: but you don't need to check every number. You know what number will work. You just need to see if that number is in the set.
[05:28:39] <deltab> lines 55 onward should be indented so that they're part of the loop
[05:28:42] <nedbat> whatsupdoc: yes, picking every combination of 2 numbers
[05:28:55] <whatsupdoc> What's the time complexity of checking if something is in a set()?
[05:29:00] <nedbat> whatsupdoc: O(1)
[05:29:10] *** Joins: klu_ (~klu@user/klu)
[05:29:13] <rhardy98> ohh ok i see what you are saying
[05:29:18] <whatsupdoc> rhardy98: yea listen to deltab lol
[05:29:19] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790:f8ec:5e67:76c6:e1c2) (Client Quit)
[05:29:35] <rhardy98> i am still very new to this still just started learning a few weeks ago b
[05:29:42] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[05:29:47] <whatsupdoc> rhardy98: and actually add stuff to your inventory list if you want stuff to be in there
[05:30:42] *** Joins: Vonter (~Vonter@user/vonter)
[05:31:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:31:12] <whatsupdoc> Is this scalable? What if you had 4 sums? Would you have to select 3 numbers and then see if the 4th one exists in your set? There is no faster way?
[05:32:54] *** Joins: noarb (~noarb@user/noarb)
[05:33:08] *** Joins: extropiator (~extropiat@user/extropiator)
[05:33:30] <nedbat> whatsupdoc: idk if there is a faster way. i know that picking 2 and finding the 3rd is faster than picking 3.
[05:33:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[05:34:27] *** Quits: extropiator (~extropiat@user/extropiator) (Client Quit)
[05:35:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[05:35:30] *** Joins: fikran (~fikran@user/fikran)
[05:37:17] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:39:01] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:39:31] <deltab> rhardy98: that's okay, it'll take some time to learn but you'll get there
[05:39:33] *** Quits: klu_ (~klu@user/klu) (Remote host closed the connection)
[05:41:07] <deltab> one very important thing to know is that the computer will do exactly what you tell it to, whether that's what you intended or not
[05:41:13] <rhardy98> yes i know it wont happen over night I am determined to learn it and get good using it
[05:41:18] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:41:21] *** Joins: Vonter (~Vonter@user/vonter)
[05:41:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:42:20] *** Joins: klu (~klu@user/klu)
[05:42:49] <deltab> so here in "if 'item' in [current_room]:" it'll make a list containing the current room
[05:43:07] <deltab> then it will check whether the string 'item' is in the list
[05:43:37] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 252 seconds)
[05:43:38] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[05:43:49] <deltab> but the only thing in the list is the current room, so it'll say no, the string 'item' is not in the list
[05:43:57] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:44:11] *** Joins: aknot (~aknot@2603:900a:1503:17bb:ad09:2852:1217:3267)
[05:44:30] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:45:15] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:45:26] <aphysically> "if default != ..."
[05:45:28] <aphysically> what
[05:45:31] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:45:50] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Client Quit)
[05:45:55] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[05:47:55] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:48:04] <SnoopJ> aphysically, what is the question about that expression? Is the ... the Ellipsis literal, or are you eliding code?
[05:48:20] <aphysically> literal! I found it in the rich codebase
[05:48:48] <SnoopJ> Perhaps Ellipsis is a sentinel for this value?
[05:48:52] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[05:48:52] *** Joins: noarb (~noarb@user/noarb)
[05:48:59] <aphysically> yeah, it looks like it
[05:49:12] <aphysically> I was surprised I've not seen it used as a sentinel before
[05:49:14] <SnoopJ> It's not a bad thing to use for, say, deferring to behavior elsewhere
[05:49:28] <SnoopJ> aphysically, it's not a sentinel per se in numpy but it's expressive
[05:49:48] <SnoopJ> `arr[1, 2, ...]  # I care about only two of these axes, just gimme all the rest`
[05:50:05] <aphysically> I've almost finished completely fixing every pyright issue in the rich codebase, down from about 150 to 8 right now
[05:50:22] <aphysically> my PRs fixing the majority of it already landed; I'm only doing the harder edge case stuff now
[05:50:47] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 264 seconds)
[05:51:39] <SnoopJ> aphysically, seems like it's been a busy time!
[05:51:47] <aphysically> yeah, but I've learned a lot
[05:51:58] <SnoopJ> Funny how those two come together sometimes :)
[05:52:14] *** Joins: orbatos (~orbatos@user/orbatos)
[05:52:22] <aphysically> about to make a PR with this round of changes since I think the remaining changes will need some sort of feedback from the maintainer about what they *want* done about it
[05:53:11] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[05:53:15] *** Quits: ethrl (~morty@user/doforlove33) (Remote host closed the connection)
[05:53:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[05:55:09] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:56:20] <whatsupdoc> omg 316 / 318
[05:56:53] <whatsupdoc> still too slow, but faster enough to pass test case 315
[05:58:19] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:58:29] *** Hash is now known as HelloNewman
[05:59:20] *** Quits: ornxka (~ornxka@user/ornxka) (Quit: WeeChat 3.0)
[06:00:52] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[06:00:55] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[06:01:29] <deltab> rhardy98: how's it going?
[06:02:34] <rhardy98> im getting there changing some things around. taking in some feedback from everybody and changing a few things up to make it simple
[06:03:59] *** Joins: redrum88 (~redrum88@user/redrum88)
[06:04:17] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[06:04:26] *** Joins: xiongxin_ (~quassel@113.116.32.200)
[06:05:43] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:05:57] <whatsupdoc> lmao i passed
[06:06:06] <whatsupdoc> But I probably wrote the worst solution ever
[06:06:57] <whatsupdoc> https://dpaste.org/K0DX
[06:08:09] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Ping timeout: 265 seconds)
[06:09:05] <whatsupdoc> Is there a better way to write a double for-loop where the inner for-loop loops started from the i+1th element?
[06:09:09] <whatsupdoc> *starting
[06:09:30] <whatsupdoc> I always use range(len(mylist)) to do it
[06:10:12] <energizer> eww range(len(
[06:10:27] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:10:34] *** Quits: Joco (~Joco@modemcable177.112-161-184.mc.videotron.ca) (Ping timeout: 252 seconds)
[06:10:34] <KirkMcDonald> You could slice it.
[06:10:36] <whatsupdoc> lol
[06:10:43] <energizer> whatsupdoc: https://nedbatchelder.com/text/iter.html
[06:10:53] <whatsupdoc> Slicing returns a copy, is that not memory wasteful?
[06:11:18] <KirkMcDonald> Eh.
[06:12:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:13:24] *** Joins: mickey8 (~user@user/mickey)
[06:13:45] <whatsupdoc> https://dpaste.org/JwuF
[06:17:41] *** Joins: nomic (~nomic@185.217.117.88)
[06:18:19] <whatsupdoc> I feel like I'm writing mutex locks
[06:18:34] <SnoopJ> whatsupdoc, in CPython, it returns a copy of references. The cost is ~N*sizeof(PyObject*)
[06:18:45] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:18:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[06:19:25] <energizer> i would think of the time cost before the memory cost
[06:20:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:21:15] *** Joins: ST47 (~ST47@wikimedia/st47)
[06:23:00] <whatsupdoc> Technically sephamores, gosh I miss cs
[06:23:17] *** Joins: Vonter (~Vonter@user/vonter)
[06:24:03] <SnoopJ> whatsupdoc, did they shut it off near you?
[06:24:20] *** Quits: flyback (~flyback@2601:540:8201:1e60:117:3ae2:a60e:6ba0) (Quit: Leaving)
[06:24:22] <whatsupdoc> idk what you mean
[06:25:07] <SnoopJ> whatsupdoc, well, computer science is still there :)
[06:25:30] <whatsupdoc> yes, but the time for it isn't always there
[06:27:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:59] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[06:28:12] <whatsupdoc> The for(range(len code was faster than the slicing btw lol
[06:28:37] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[06:28:49] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:29:15] *** Joins: mickey8 (~user@user/mickey)
[06:29:38] <SnoopJ> Faster than direct iteration?
[06:30:15] <whatsupdoc> that's not really possible i think
[06:30:32] *** Joins: de-facto (~de-facto@user/de-facto)
[06:30:33] <fluter-> hi
[06:30:44] <fluter-> how can i let os.remove not fail if file does not exist,
[06:30:49] <fluter-> and delete it if exist
[06:30:52] *** fluter- is now known as fluter
[06:31:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:32:48] <whatsupdoc> try catch
[06:34:16] <aphysically> last big chunk of fixes for rich https://github.com/willmcgugan/rich/pull/1604
[06:34:55] <whatsupdoc> fluter: https://stackoverflow.com/questions/10840533/most-pythonic-way-to-delete-a-file-which-may-not-exist
[06:34:58] *** Joins: flyback (~flyback@2601:540:8201:1e60:117:3ae2:a60e:6ba0)
[06:35:30] <fluter> whatsupdoc: the issue is OSError / FileNotFoundError for 2 and 3 :(
[06:35:47] <fluter> so i need to catch two exceptions depends on sys.version_info.major
[06:37:02] <whatsupdoc> Have multiple except blocks?
[06:37:20] <fluter> okay
[06:39:46] <energizer> that's not really doable is it
[06:39:56] *** Joins: bloody (~bloody@user/bloody)
[06:40:17] <energizer> oh i guess you can put a ternary in the exception type place
[06:40:47] <energizer> except OSError if PY3 else FileNotFoundError:
[06:40:53] <energizer> or vice versa
[06:40:57] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[06:41:00] *** Quits: computeiro (~Wender@189.37.68.145) (Read error: Connection reset by peer)
[06:41:04] *** Quits: rhardy98 (~Guest2@2600:1700:bb0:4010:5968:8f4b:3e80:2348) (Quit: Client closed)
[06:41:07] <energizer> never seen that before but dunno why not
[06:41:18] *** Joins: computeiro (~Wender@189.37.68.145)
[06:44:14] <fluter> i think that is a syntax error
[06:44:40] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 268 seconds)
[06:44:46] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:44:58] *** Joins: roro (~roro@user/roro)
[06:45:14] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:45:33] <energizer> it isn't
[06:47:26] <whatsupdoc> only thing I wish python had was ++ and --
[06:48:08] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260)
[06:48:28] <energizer> yeah, need a good catenation operator and dogenation operator
[06:50:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:50:59] *** Joins: wender (~Wender@189.37.68.145)
[06:51:09] *** Quits: computeiro (~Wender@189.37.68.145) (Remote host closed the connection)
[06:51:21] <whatsupdoc> I don't get your joke
[06:51:38] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[06:51:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com)
[06:52:26] <energizer> in haskell ++ is the list-catenation operator, and then i extended the cat operator ++ to a dog operator --
[06:54:24] <hodapp> jokes are automatically optimized out by the haskell compiler because no one called for them
[06:54:47] <deltab> ^^
[06:56:06] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[06:57:13] <aphysically> jinsun: https://github.com/willmcgugan/rich/pull/1604 :)
[06:57:16] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[06:57:59] *** Quits: roro (~roro@user/roro) (Ping timeout: 264 seconds)
[06:59:09] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:59:09] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[07:03:11] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[07:04:23] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:04:55] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:05:16] *** Joins: Vonter (~Vonter@user/vonter)
[07:06:06] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:07:02] *** Joins: Haxxa (~Haxxa@122.199.47.223)
[07:10:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[07:10:35] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[07:10:44] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[07:10:59] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:11:19] *** Joins: p-i- (~Ohmu@223.206.71.4)
[07:14:15] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[07:15:56] *** Quits: chrysalis (~Lindis@user/lindis) (Remote host closed the connection)
[07:18:08] *** Joins: bjb (~bjb@sourcerer.ca)
[07:19:19] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[07:20:43] *** Quits: Haxxa (~Haxxa@122.199.47.223) (Quit: Haxxa flies away.)
[07:21:07] *** Joins: Haxxa (~Haxxa@122.199.47.223)
[07:21:52] <fluter> energizer: OSError is a type
[07:21:59] <fluter> can you do expression with types, not values
[07:23:26] <whatsupdoc> omg i solved it https://dpaste.org/GyLq#L
[07:23:29] *** Joins: punkgeek (~punkgeek@151.245.131.176)
[07:26:26] *** Quits: Haxxa (~Haxxa@122.199.47.223) (Remote host closed the connection)
[07:26:49] *** Joins: extropiator (~extropiat@user/extropiator)
[07:28:35] *** Quits: xiongxin_ (~quassel@113.116.32.200) (Ping timeout: 264 seconds)
[07:30:31] <whatsupdoc> Is it really that bad to be using range(len())? how else would you do index manipulation in python if you need to?
[07:31:01] <meejah> whatsupdoc: enumerate()
[07:31:39] <deltab> enumerate(iterable) yields (index, value) pairs
[07:32:11] <deltab> >>> list(enumerate('spam'))
[07:32:11] <deltab> [(0, 's'), (1, 'p'), (2, 'a'), (3, 'm')]
[07:32:32] *** Quits: extropiator (~extropiat@user/extropiator) (Quit: Client closed)
[07:32:42] <deltab> and you can unpack in a for statement:  for index, value in enumerate(items): ...
[07:32:56] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:33:01] *** Quits: aknot (~aknot@2603:900a:1503:17bb:ad09:2852:1217:3267) (Ping timeout: 245 seconds)
[07:33:09] *** Joins: extropiator (~adam@user/extropiator)
[07:34:53] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[07:34:54] <deltab> fluter: yes, in Python they're values too
[07:35:08] <SnoopJ> whatsupdoc, it's not bad, no
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:14] <deltab> it's neater if you can use enumerate because you get both the index and the value, so you don't need container[index]
[07:36:24] <SnoopJ> deltab, assuming that all you need is that one value, anyway
[07:36:30] <deltab> right
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:51] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:37:31] <deltab> also it works on any iterable, whether it has a known length or not
[07:37:36] <punkgeek>  have a challenge, and I explained it on this script. anyone can help to solve it? https://paste.ofcode.org/b2x6hpgUNM4kBHQaEeNtqQ
[07:39:11] <deltab> for i, p in enumerate(generate_primes()): if p > 100: break
[07:39:31] *** Quits: whatsupdoc (~whatsupdo@148.64.20.117) (Ping timeout: 256 seconds)
[07:40:11] <SnoopJ> deltab, but also: `for n in range(len(grid)): compute_stencil(grid, n)`
[07:40:56] <SnoopJ> although `for n, central_val in enumerate(grid): compute_stencil(grid, n)` would likely express just as much, except you already did one of your index ops
[07:41:39] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:41:45] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[07:42:05] *** Joins: tkazi (~tkazi@user/tkazi)
[07:42:34] <SnoopJ> on the other hand, if I'm computing stencils, why am I not using numpy :)
[07:42:48] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:42:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:43:34] *** Joins: rudrab (~rudrab@2402:e280:215f:228:82f5:71db:8757:da83)
[07:44:31] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[07:44:32] *** Joins: frost (~frost@59.71.244.189)
[07:44:51] *** Joins: fikran (~fikran@user/fikran)
[07:46:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:49:02] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:49:24] *** Joins: orbatos_ (~orbatos@user/orbatos)
[07:49:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[07:49:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:50:02] *** Joins: xiongxin (~quassel@113.116.224.79)
[07:50:30] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:51:27] <energizer> fluter: types are values in python
[07:51:46] *** Joins: whatsupdoc (~whatsupdo@148.64.20.102)
[07:51:55] <whatsupdoc> But enumerate() is useless
[07:51:59] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 264 seconds)
[07:52:20] *** Joins: whatsupdoc40 (~whatsupdo@148.64.20.27)
[07:52:26] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[07:52:38] <SnoopJ> whatsupdoc, it is useful if you want to enumerate an iterable, producing (num, value) pairs.
[07:53:02] <SnoopJ> useful example: 00:09 <deltab> for i, p in enumerate(generate_primes()): if p > 100: break
[07:53:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:53:27] <whatsupdoc40> Like what if you're trying to write a for loop that increments +2 items normally and then inside the for loop, you want to change the index to half of what it is when it reaches a certain condition or maybe decrement by 3 when it reaches another condition
[07:53:36] <whatsupdoc40> That isn't going to work with enumerate()
[07:53:41] <SnoopJ> whatsupdoc40, you don't have to use enumerate() if you don't want to
[07:53:55] <SnoopJ> But to say it is useless is I think too bold
[07:54:07] <whatsupdoc40> Useless in scenarios like this
[07:54:13] <SnoopJ> Perhaps it is more accurate to say it is not useful to you
[07:54:48] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[07:55:02] <energizer> no, if you're using `for i in range(len(xs)):  xs[i]` that's what enumerate is for. that's what you're doing, so i'd use it
[07:56:03] <energizer> if you need a different iterator over your numbers, you can make a generator function that yields the right values for your situation
[07:56:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[07:56:31] *** Quits: whatsupdoc (~whatsupdo@148.64.20.102) (Ping timeout: 256 seconds)
[07:56:34] *** Joins: computeiro (~Wender@189.37.65.166)
[07:56:44] <SnoopJ> Let's put it this way: mappings to the integers are a common operation in association with the concept of iteration. A builtin to represent these mappings will not be neglected.
[07:56:46] *** Quits: extropiator (~adam@user/extropiator) (Ping timeout: 245 seconds)
[07:56:47] <whatsupdoc40> How do you get the value right before? if you're using enumerate()?
[07:56:49] <jinsun> aphysically: nice, super is the right way there yes, the difference betwen super with args and super without args is that super without args is better but doesn't work in python 2 (which means just use super() like you did)
[07:56:57] <SnoopJ> whatsupdoc40, you still have the index if you need to use it.
[07:56:57] <whatsupdoc40> suppose you have s[i] and you need s[i-1]
[07:57:30] <energizer> whatsupdoc40: i linked to a tutorial earlier. you can look at it
[07:57:31] <SnoopJ> If you _don't_ need the value, then maybe you do want to iterate over a range. This is not entirely common, but it does happen.
[07:57:34] <whatsupdoc40> So why not just use indexing everywhere for consistency?
[07:57:39] *** Joins: Haxxa (~Haxxa@122.199.47.21)
[07:58:02] <SnoopJ> Because it is useful to let the runtime do whatever is appropriate by explicitly telling it you're enumerating.
[07:58:04] *** Quits: jamwil (~jamwil@user/jamwil) (Quit: leaving)
[07:58:34] <SnoopJ> The difference is not a large one, but it helps legibility too, etc. if you're looking for reasons why other people use enumerate().
[07:58:50] <whatsupdoc40> lol it's faster
[07:59:01] <SnoopJ> whatsupdoc40, you don't have to use it.
[07:59:17] <SnoopJ> If you want to tut-tut at anyone who uses it, I would say you have found some of the time you are missing to pursue things you find meaningful.
[07:59:19] <energizer> in the case of nums[i-i], nums[i], a pythonista would write `for this, prev in zip(xs[1:], xs)`
[07:59:19] *** Quits: wender (~Wender@189.37.68.145) (Ping timeout: 265 seconds)
[07:59:21] <whatsupdoc40> bruh i've spent 4 hours on this single leetcode lmao
[08:00:21] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:00:22] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[08:00:32] <whatsupdoc40> Is indexing really that much slower in terms of performance? i'm a little bit surprised
[08:00:39] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[08:00:40] *** Quits: Haxxa (~Haxxa@122.199.47.21) (Remote host closed the connection)
[08:00:46] <energizer> it's not about performance. don't microoptimize python
[08:01:16] *** Joins: Haxxa (~Haxxa@122.199.47.21)
[08:01:19] <SnoopJ> Yea, it's more about expressing what you're doing. If what you're doing is enumeration, there is enumerate(). If you really really really don't like enumerate(), don't use it.
[08:01:28] *** Quits: subopt (~subopt@2603-8081-2302-459a-440b-995f-5377-b6c9.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:01:30] <whatsupdoc40> https://dpaste.org/6w1B
[08:01:45] <whatsupdoc40> I don't think I micro-optimized
[08:01:49] <whatsupdoc40> But I don't like readability
[08:01:55] <SnoopJ> Yes, that's very clear.
[08:01:59] <energizer> nah
[08:02:01] <whatsupdoc40> ^ the readability of this code
[08:02:05] <energizer> i'm getting pretty frustrated whatsupdoc40
[08:02:15] <whatsupdoc40> about what?
[08:02:22] <punkgeek> I have a challenge, and I explained it on this script. anyone can help to solve it? https://paste.ofcode.org/b2x6hpgUNM4kBHQaEeNtqQ
[08:02:30] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[08:02:58] <SnoopJ> punkgeek, there is not a question in this paste. What kind of feedback are you asking the channel for?
[08:03:49] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 252 seconds)
[08:03:49] <whatsupdoc40> How would you restructure my solution then?
[08:03:59] <punkgeek> SnoopJ: I'm search for a solution that I can make a remote access to the remote machine python console to use libvirt://localhost rather that libvirt://ip
[08:04:00] <energizer> whatsupdoc40: an expert spent a long time developing a presentation on exactly this topic, i linked it above
[08:04:28] <whatsupdoc40> I skimmed over it and I couldn't find anything that applied to my problem
[08:04:34] <SnoopJ> Perhaps you should not skim.
[08:05:58] <whatsupdoc40> How would you write it?
[08:08:24] <energizer> i'd have to get into it to understand what it's actually trying to do
[08:08:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:08:49] <whatsupdoc40> https://leetcode.com/problems/3sum/submissions/
[08:09:04] <whatsupdoc40> https://leetcode.com/problems/3sum/
[08:10:04] <energizer> indexing like C is the style you often see among Leetcoders
[08:10:54] <whatsupdoc40> The problem is mixing incrementing/decrementing indices with conditions
[08:11:11] <energizer> so if that's the style you're comfortable with, that's fine. there's another style that some python people prefer.
[08:11:11] <whatsupdoc40> Enumerate just does everything in order
[08:11:56] <whatsupdoc40> I feel like I'm doing this not because I hate enumerate(), I'm doing it this way because I don't think it's possible to do it with enumerate()
[08:11:57] <SnoopJ> whatsupdoc40, `return [(a,b,c) for (a,b,c) in combinations(nums, r=3) if a+b+c == 0]`
[08:11:57] <energizer> if you want to try the functional/generator style you can try first using something like enumerate(xs[1:], xs)
[08:12:03] <energizer> typo
[08:12:07] <energizer> if you want to try the functional/generator style you can try first using something like enumerate(zip(xs[1:], xs))
[08:12:08] <SnoopJ> or maybe it should be a set of those
[08:12:10] <whatsupdoc40> SnoopJ: rejected too slow
[08:12:10] <SnoopJ> since it says no dupes
[08:12:18] <SnoopJ> whatsupdoc40, lol okay sure
[08:12:21] <whatsupdoc40> It is
[08:12:29] <SnoopJ> I bet it is, I just don't care what leetcode thinks about speed tbqh
[08:12:34] <whatsupdoc40> That's kinda what I tried for my search solution
[08:12:39] <whatsupdoc40> *first
[08:12:54] <whatsupdoc40> That's why I'm doing the indexing thing
[08:13:16] <whatsupdoc40> Because sorting the numbers allows you to eliminate some of the combinations you'll need to check
[08:14:45] <whatsupdoc40> I feel like I know everything in https://nedbatchelder.com/text/iter.html
[08:14:51] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[08:15:19] <whatsupdoc40> Although that range_2d() thing is kinda interesting
[08:15:20] <energizer> alright
[08:15:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[08:15:26] *** Joins: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[08:15:48] <SnoopJ> hmm `set(c for c in combinations(nums, r=3) if sum(c) == 0)` may be an improvement
[08:15:52] *** Joins: redrum88_ (~redrum88@user/redrum88)
[08:16:03] <SnoopJ> although I guess you're still iterating those, so you're still paying for that
[08:16:12] *** Quits: Haxxa (~Haxxa@122.199.47.21) (Quit: Haxxa flies away.)
[08:16:14] *** Joins: wyclif (~wyclif@user/wyclif)
[08:16:22] <whatsupdoc40> It won't work technically because the numbers aren't sorted
[08:16:36] <whatsupdoc40> You'll have duplicates which you need to remove
[08:16:50] <SnoopJ> You seem very sure about that.
[08:16:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:16:55] <whatsupdoc40> [-1,0,1] and [0, 1, -1] are treated the same
[08:17:01] *** Quits: punkgeek (~punkgeek@151.245.131.176) (Ping timeout: 252 seconds)
[08:17:10] <whatsupdoc40> Your solution I think will keep both
[08:17:12] *** Joins: punkgeek (~punkgeek@151.245.203.91)
[08:17:21] *** Joins: mickey8 (~user@user/mickey)
[08:17:30] <SnoopJ> It would, I didn't realize that this was a constraint of the problem, I thought the things duplicated were triplets
[08:17:35] <SnoopJ> i.e. 3-tuples
[08:18:02] <whatsupdoc40> Yea, so what I did was sort the tuples
[08:18:11] * SnoopJ shrugs
[08:18:11] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:18:16] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:18:52] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[08:19:16] <energizer> why does the combinations one run out of time?
[08:19:37] *** Quits: redrum88 (~redrum88@user/redrum88) (Ping timeout: 265 seconds)
[08:19:39] *** redrum88_ is now known as redrum88
[08:19:39] *** Joins: Haxxa (~Haxxa@122.199.47.21)
[08:19:57] <whatsupdoc40> return set(tuple(sorted(c)) for c in combinations(nums, r=3) if sum(c) == 0)
[08:20:01] <whatsupdoc40> Because it's too slow
[08:20:31] <whatsupdoc40> You're unnecessarily checking all combinations
[08:20:49] <SnoopJ> whatsupdoc40, do you have any other questions?
[08:20:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:21:07] <energizer> what combinations should it not be checking?
[08:21:43] *** Joins: wyclif (~wyclif@user/wyclif)
[08:22:35] <whatsupdoc40> Not really, just curious in seeing energizer's solution with enumerate()
[08:23:25] <whatsupdoc40> [1,0,-1], [0, 1, -1], [-1, 0, 1], [1, -1, 0], [0, -1, 1], [-1, 1, 0]
[08:23:37] <whatsupdoc40> ^ you only need one of these, so no point to check all 6
[08:23:51] <energizer> ok so what's going on with `if i > 0`
[08:24:03] <energizer> ah i see
[08:24:06] <SnoopJ> I guess "triplet" to leetcode means "order doesn't matter"
[08:24:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:24:31] <aphysically> jinsun: that class looks a little weird because rich is python 3.6 compatible; as soon as 3.6 is dropped you can properly subclass ordereddict[keytype,valuetype] instead of the generic hack
[08:24:51] <whatsupdoc40> energizer: you technically don't need that if statement, just an optimzation
[08:25:09] <whatsupdoc40> I'm just skipping rechecking stuff
[08:25:43] *** Parts: ikwyl6 (~ikwyl6@2.58.44.226) (WeeChat 3.2)
[08:26:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:26:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:26:12] <whatsupdoc40> Why ws something so basic being presented in PyCon 2013?
[08:26:21] <SnoopJ> Because many people have misunderstood basic things.
[08:26:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:26:42] <SnoopJ> And because some people like the basics :)
[08:27:12] <SnoopJ> A lot of people who came to Python from languages that have only C-style iteration don't really 'get' the other style.
[08:27:13] *** Joins: wyclif (~wyclif@user/wyclif)
[08:27:14] <whatsupdoc40> That's like the heart of the language. If you don't understand for-loops in Python, like damn...
[08:27:27] <energizer> as he says in the talk, you can think of it as the fundamentals
[08:27:28] <SnoopJ> Then what?
[08:27:29] <jinsun> aphysically: oh, typing.OrderedDict was added in 3.7, TIL, weird that it was skipped before
[08:27:38] <whatsupdoc40> You don't know Python at all thne
[08:27:41] <energizer> always good to review the fundamentals
[08:27:52] <SnoopJ> whatsupdoc40, quelle horreur
[08:27:56] <whatsupdoc40> Idk I thought PyCon was for like die hard Python fans, maybe not
[08:27:58] <SnoopJ> if only there were some way to learn the fundamentals :)
[08:28:06] <whatsupdoc40> Maybe just a bunch of high school nerds
[08:28:08] <SnoopJ> like, say, good talks given by language experts
[08:28:28] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[08:28:31] <SnoopJ> You've made it very clear that it's not for you, so let's move on?
[08:28:50] <aphysically> jinsun: yeah, odd. anyway I listed all the remaining typing bugs in the PR that aren't yet fixed for feedback so we'll see what maintainer thinks/wants to do
[08:28:52] <whatsupdoc40> Oh i'd still go, i needed it 2 weeks ago lmao
[08:28:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:28:56] <SnoopJ> the talk, I mean, not PyCon
[08:28:59] <SnoopJ> PyCon is for everybody
[08:29:14] <SnoopJ> uh, everybody who is planning to be part of the community anyhow
[08:29:16] <aphysically> even with just this stuff fixed pyright is usable by poeple now at least; it's not a sea of over a hundred errors that's meaningless to notice what you changed in
[08:29:43] <energizer> anyway whatsupdoc40 i'd have to fiddle with it for a while to figure it out
[08:29:45] <whatsupdoc40> damn like seriously energizer should have showed me this a few weeks ago when I was hella lost, good summary
[08:30:19] *** Joins: sbrown (~sbrown@66.44.16.44)
[08:30:21] <aphysically> looking at just the changes it seems like so little for how much I changed; I guess it's because we spent a lot of time understanding each individual error to figure out what's actually going on instead of blindly shooting for workarounds
[08:30:32] <whatsupdoc40> Talking about this https://nedbatchelder.com/text/iter.html
[08:31:54] <whatsupdoc40> energizer don't waste your time
[08:32:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:32:49] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Quit: WeeChat 3.1)
[08:33:06] *** Joins: mickey8 (~user@user/mickey)
[08:33:17] *** Quits: whatsupdoc40 (~whatsupdo@148.64.20.27) (Quit: Client closed)
[08:33:20] <jinsun> aphysically: what about typing_extensions? looks like that is a dependency already
[08:33:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:34:06] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:34:19] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[08:34:49] <Pi-sistance> In juoyter notebook how do I see the keyboard shortcuts next to the menu command?
[08:35:00] *** Quits: rudrab (~rudrab@2402:e280:215f:228:82f5:71db:8757:da83) (Quit: rudrab)
[08:36:42] *** Joins: Vonter (~Vonter@user/vonter)
[08:37:15] <Pi-sistance> I mean if I hover over "insert cell above" in the meny, how can I set the program to show the letter A (the shortcut key) next to the command in the menu?
[08:37:38] *** Quits: Haxxa (~Haxxa@122.199.47.21) (Quit: Haxxa flies away.)
[08:39:21] <aphysically> jinsun: I tried but it didn't work right and I wasn't sure why
[08:39:47] <aphysically> I don't have 3.6 installed at the moment to figure out why the CI is failing so I didn't look into it further
[08:40:20] <jinsun> aphysically: maybe because it is a requirement only for 3.74 to <3.8 https://github.com/willmcgugan/rich/blob/master/pyproject.toml#L30
[08:40:31] <jinsun> no idea why that constraint is there
[08:40:54] <aphysically> that's the typing-extensions package version ain't it?
[08:40:57] *** Joins: Haxxa (~Haxxa@122.199.47.21)
[08:41:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[08:41:51] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[08:42:03] *** Parts: MTecknology (~Mike@user/mtecknology) (You saw me, but now you don't.)
[08:43:33] <jinsun> oh then even weirder, I can't read poetry config well
[08:44:35] <jinsun> ah version= and python =, I can't read at all
[08:44:55] *** Quits: Haxxa (~Haxxa@122.199.47.21) (Remote host closed the connection)
[08:45:41] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[08:48:52] <Pi-sistance> any clue?
[08:49:07] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[08:49:42] *** Joins: stockholm (~Andreas@p200300d2c73c8700758a6e4ffb56a5c9.dip0.t-ipconnect.de)
[08:51:06] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Remote host closed the connection)
[08:53:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:53:47] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[08:56:47] <foo> Offtopic: I had posted an issue on a github repo. Someone closed it and I then asked another question. Does anyone happen to know if they'll still receive email notification?
[09:00:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[09:00:38] *** Joins: Haxxa (~Haxxa@122.199.47.21)
[09:01:35] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[09:02:07] <energizer> foo: i think yes by default
[09:02:15] <energizer> foo: #python-offtopic
[09:02:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:02:43] <tcsilver> is python the best language for games ? :D
[09:02:49] <tcsilver> or is it C++ or something else
[09:02:57] <tcsilver> simple games
[09:02:57] <energizer> depends what kind of game probably
[09:03:16] <energizer> like, tic-tac-toe?
[09:03:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[09:03:22] <tcsilver> well... like an rpg
[09:03:26] <energizer> with graphics?
[09:03:36] <tcsilver> yeah with 2d or 3d graphics
[09:03:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:03:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:04:16] <SnoopJ> tcsilver, what does "best" mean to you?
[09:04:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:04:19] <energizer> tcsilver: 3D graphics games are mostly made in C++ afaik
[09:04:34] <tcsilver> ok : )
[09:04:54] <aphysically> jinsun: I made the project's codecov real angry in my prior PR
[09:05:07] <tcsilver> SnoopJ: I'm switching to 3d. I guess I mean which languages are more-so 3d friendly
[09:05:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[09:05:08] <foo> energizer: thank you.
[09:05:11] <aphysically> the lambda that got changed to a def caused a ""new"" uncovered line
[09:05:24] <SnoopJ> tcsilver, you can certainly do 3D graphics in PyGame (e.g. Frets on Fire) but it's kind of a bother as I understand it.
[09:05:39] <tcsilver> oh wow thanks SnoopJ
[09:06:20] <tcsilver> thanks guys
[09:06:48] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:07:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:07:58] <Pi-sistance> anyone know the option in jupyter notebooks to show the keyboard shortcut in the menu next to the command please?
[09:08:33] <mefistofeles> SnoopJ: oh, I really miss FoF :P good times
[09:09:22] <jinsun> aphysically: ah, yeah lambdas and ternary expressions sometimes are a good way to cheat and get more coverage than you have (and also good way to break the type checkers) :D
[09:11:25] *** Joins: Gerlo (~Gerlo@static.79.2.181.135.clients.your-server.de)
[09:13:11] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:15:06] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[09:15:38] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:15:52] *** Quits: Haxxa (~Haxxa@122.199.47.21) (Ping timeout: 252 seconds)
[09:17:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:22:02] *** Joins: yeirr (~yeirr@user/yeirr)
[09:22:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[09:22:57] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[09:23:12] *** Joins: whatsupdoc (~whatsupdo@148.64.20.72)
[09:23:18] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[09:23:23] <Pi-sistance> a,b,c,d=3,5,"rte",6
[09:23:23] <Pi-sistance>  
[09:23:23] <Pi-sistance> print(a,b\nc)
[09:23:36] <Pi-sistance> whyd i get an error :S
[09:23:54] <Pi-sistance> I was trying to print a then b then c on a new line
[09:25:48] <Pi-sistance> a comma didnt help
[09:25:51] *** Quits: loki_val (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[09:26:08] *** Joins: yeirr (~yeirr@user/yeirr)
[09:26:17] <mefistofeles> Pi-sistance: try f-strings, so it would be something like print(f"{a},{b}\n{c}")
[09:26:24] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[09:26:36] <energizer> Pi-sistance: print(a,b,"\n",c)
[09:26:41] <mefistofeles> or that
[09:26:50] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[09:26:53] <deltab> print(a, b); print(c)
[09:26:58] <whatsupdoc> print(a, b); print(c)
[09:27:00] <whatsupdoc> damn
[09:27:04] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:27:15] <whatsupdoc> beat me to it
[09:27:17] * deltab high-fives
[09:27:23] *** Quits: punkgeek (~punkgeek@151.245.203.91) (Ping timeout: 264 seconds)
[09:27:23] <energizer> yeh i like that one better
[09:28:05] <mefistofeles> I prefer f-strings :P
[09:28:07] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[09:28:41] <whatsupdoc> I prefer C style strings
[09:29:00] <whatsupdoc> jk lol
[09:29:00] *** Joins: punkgeek (~punkgeek@151.245.203.91)
[09:29:24] <deltab> Pi-sistance: about keyboard shortcuts, I'm reading that you can use Help > Keyboard Shortcuts, H in command mode, or Ctrl/Cmd+Shift+P
[09:30:50] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 260 seconds)
[09:31:07] <Pi-sistance> energizer: I dont understand why it needs the quotes though, i dont understand why what I did failed
[09:31:33] *** Quits: Gerlo (~Gerlo@static.79.2.181.135.clients.your-server.de) (Changing host)
[09:31:33] *** Joins: Gerlo (~Gerlo@user/gerlo)
[09:31:38] <energizer> Pi-sistance: when you tried it, did you put literally \n or did you put a newline?
[09:32:03] <whatsupdoc> Bad syntax
[09:32:16] <energizer> Pi-sistance:  like, did you try print(a,b,\n,c) or
[09:32:20] <energizer> print(a,b,
[09:32:23] <energizer> c)
[09:32:44] <energizer> which one are you asking about
[09:33:13] <jinsun_> latter wouldn't give an error (well maybe indentation error)
[09:33:25] <deltab> unless you missed out the comma
[09:33:27] <energizer> i dont think it can give an indentation error
[09:33:44] <Pi-sistance> energizer:  I did print(a,b,\nc)
[09:33:57] <deltab> right, indentation is ignored inside ( ), [ ], { }
[09:34:05] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[09:34:09] <whatsupdoc> smh
[09:34:14] <Pi-sistance> gave unexpected character after line continuation character
[09:34:25] <whatsupdoc> like what do you think was gonna happen?
[09:34:36] <Pi-sistance> when I did print("testing\ncakes") I had no errors
[09:34:49] <whatsupdoc> has to be a troll
[09:34:57] <energizer> whatsupdoc: take it easy bud
[09:35:05] <Pi-sistance> im like day 1 , not a troll
[09:35:24] <mefistofeles> Pi-sistance: that's fine, basically \n only makes sense in a string because the interpreter decodes them
[09:35:42] <deltab> Pi-sistance: \n etc. are only valid inside string literals; outside them, \ is only used to continue one line onto the next
[09:35:52] <Pi-sistance> mefistofeles: ok thanks
[09:36:06] *** Joins: yeirr (~yeirr@user/yeirr)
[09:36:14] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[09:36:18] <energizer> ah "unexpected character after line continuation character" would be confusing there
[09:36:19] <whatsupdoc> characters need quotes around them
[09:36:21] *** Joins: nickodd (~nickodd@user/nickodd)
[09:36:30] <energizer> because "line continuation" sounds like it understood what you meant
[09:36:54] <energizer> but it's actually referring to \ as the line continuation character, and n as the unexpected character
[09:37:01] <mefistofeles> hah, yes
[09:37:21] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:37:29] <deltab> \ as line continuation can only appear at the end of the line
[09:38:06] <deltab> so anything after is unexpected
[09:38:49] *** Joins: greedom (~greedom@2001:16b8:2e4f:6100:c3ff:18cc:5f9d:eb74)
[09:40:23] *** Joins: Vonter (~Vonter@user/vonter)
[09:43:01] <Pi-sistance> ok ty all i should be able to remember. and that a semicolon will print on a new line
[09:44:26] *** Joins: yeirr (~yeirr@user/yeirr)
[09:44:32] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[09:44:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[09:45:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:46:45] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:13] *** Joins: rendar (~rendar@user/rendar)
[09:47:26] *** Joins: seednode (~seednode@user/seednode)
[09:47:34] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[09:49:13] *** Joins: royaljelly (~royaljell@user/royaljelly)
[09:49:20] <foo>  /lastlog foo
[09:50:09] *** Joins: Vonter (~Vonter@user/vonter)
[09:51:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[09:51:26] *** Quits: sbrown (~sbrown@66.44.16.44) (Quit: Leaving…)
[09:52:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[09:54:12] *** Joins: fikran (~fikran@user/fikran)
[09:54:31] *** Joins: Haxxa (~Haxxa@122-199-10-65.ip4.superloop.com)
[09:54:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[09:57:56] *** Joins: Vonter (~Vonter@user/vonter)
[09:58:13] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:59:04] <royaljelly> So I updated python after a long time, and mysqlclient (https://mysqlclient.readthedocs.io/user_guide.html) doesn't work. Running any .query command throws out this error:
[09:59:04] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[09:59:10] <royaljelly> SystemError: PY_SSIZE_T_CLEAN macro must be defined for '#' formats
[10:00:07] *** Joins: doc (~doc@user/doc)
[10:00:17] <royaljelly> is there any way to fix this? I can't downgrade python since i deleted my cache
[10:00:46] *** Quits: Haxxa (~Haxxa@122-199-10-65.ip4.superloop.com) (Ping timeout: 268 seconds)
[10:01:31] <royaljelly> this seems like a mysqlclient problem
[10:01:57] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:02:02] <royaljelly> i will try building the latest github version of mysqlclient and see if that fixes this
[10:02:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[10:03:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[10:04:26] *** Joins: Vonter (~Vonter@user/vonter)
[10:04:50] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:06:02] *** Joins: upsala (~zcb@185.213.155.160)
[10:06:56] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[10:07:26] *** Joins: Haxxa (~Haxxa@122-199-10-65.ip4.superloop.com)
[10:08:15] *** Joins: Sky_Net (~Sky_Net@176.14.213.149)
[10:08:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[10:10:13] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[10:10:24] *** Joins: nunggu (q@gateway/vpn/protonvpn/nunggu)
[10:10:34] *** Joins: subopt (~subopt@2603-8081-2302-459a-440b-995f-5377-b6c9.res6.spectrum.com)
[10:10:34] *** subopt is now known as _subopt
[10:11:26] *** Joins: manti7 (~manti7@176.10.104.94)
[10:12:00] *** Quits: nunggu (q@gateway/vpn/protonvpn/nunggu) (Client Quit)
[10:14:13] *** Joins: Vonter (~Vonter@user/vonter)
[10:14:46] *** Quits: Haxxa (~Haxxa@122-199-10-65.ip4.superloop.com) (Ping timeout: 252 seconds)
[10:15:28] *** Joins: parv (~quass@user/parv)
[10:16:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:17:04] <royaljelly> yeah, fixed it
[10:17:11] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[10:17:13] <royaljelly> the version of mysqlclient in my repos was outdated
[10:17:50] *** Parts: royaljelly (~royaljell@user/royaljelly) ()
[10:18:59] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[10:20:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:24:16] *** Joins: teut (~teut@182.68.178.118)
[10:24:53] *** Quits: teut (~teut@182.68.178.118) (Client Quit)
[10:25:13] *** Joins: Vonter (~Vonter@user/vonter)
[10:27:11] *** Joins: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com)
[10:28:12] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:29:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[10:30:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:31:22] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:32:58] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Quit: Leaving)
[10:33:07] *** Quits: greedom (~greedom@2001:16b8:2e4f:6100:c3ff:18cc:5f9d:eb74) (Remote host closed the connection)
[10:33:29] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:34:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:35:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[10:36:19] *** Joins: Vonter (~Vonter@user/vonter)
[10:36:23] *** Quits: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com) (Ping timeout: 264 seconds)
[10:39:49] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[10:40:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[10:40:59] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:c50b:d813:5283:e43a)
[10:40:59] *** Quits: whatsupdoc (~whatsupdo@148.64.20.72) (Quit: Client closed)
[10:43:16] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:43:49] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:46:29] *** Joins: Vonter (~Vonter@user/vonter)
[10:48:02] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[10:48:44] *** Joins: xiongxin (~quassel@113.116.224.79)
[10:49:53] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[10:50:28] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[10:51:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[10:51:41] *** Joins: CoolerX (~CoolerX@user/coolerx)
[10:53:32] *** Quits: Memory (sid459764@user/memory) ()
[10:55:15] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Ping timeout: 265 seconds)
[10:55:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[10:55:38] *** Joins: Memory (sid459764@user/memory)
[10:56:03] *** Quits: Memory (sid459764@user/memory) (Client Quit)
[10:56:07] *** Joins: teut (~teut@182.68.178.118)
[10:56:17] *** Joins: Vonter (~Vonter@user/vonter)
[10:56:34] *** Quits: squatch (~squatch@c-71-193-161-16.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[10:58:13] *** Quits: stockholm (~Andreas@p200300d2c73c8700758a6e4ffb56a5c9.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:59:32] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:00:00] *** Joins: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com)
[11:00:04] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:00:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[11:01:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:03:14] *** Quits: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com) (Remote host closed the connection)
[11:03:28] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[11:03:49] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[11:06:59] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[11:07:03] *** Joins: greedom (~greedom@2001:16b8:2e4f:6100:c3ff:18cc:5f9d:eb74)
[11:07:17] *** Joins: Vonter (~Vonter@user/vonter)
[11:09:11] *** Joins: jazzy (~jaziz@user/jaziz)
[11:09:27] *** Joins: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com)
[11:11:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[11:11:52] *** Joins: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr)
[11:12:25] *** Joins: hudo__ (~hudo@62.68.20.210)
[11:14:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:15:26] *** Joins: orbatos__ (~orbatos@user/orbatos)
[11:15:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:15:57] *** Joins: SteveR (~SteveR@103.215.168.1)
[11:17:02] <SteveR> what is a monitor
[11:17:04] *** Joins: Vonter (~Vonter@user/vonter)
[11:17:19] <SteveR> what problem does it solve in concurrency
[11:18:23] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 264 seconds)
[11:19:05] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:20:55] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:20:56] *** Quits: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com) (Ping timeout: 268 seconds)
[11:21:23] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[11:26:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:28:38] *** Joins: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com)
[11:29:35] <SteveR> anyone?
[11:31:10] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:31:49] *** Joins: stockholm (~Andreas@p200300d2c73c8700758a6e4ffb56a5c9.dip0.t-ipconnect.de)
[11:32:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:32:19] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Quit: Leaving)
[11:33:55] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:33:58] *** Quits: Haxxa (~Haxxa@103-21-0-105.ip4.superloop.com) (Quit: Haxxa flies away.)
[11:34:16] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[11:34:36] *** Joins: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp)
[11:34:37] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:36:12] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:32] *** Joins: kosh (~kosh@user/kosh)
[11:36:38] *** Joins: Snyp (~Snyp@49.207.222.119)
[11:36:51] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:38:41] *** Quits: Snyp (~Snyp@49.207.222.119) (Client Quit)
[11:39:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:39:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:45] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[11:41:38] <tsujp> I have a boolean `did_win` and a `score`, score is a constant value of `10` and I want my method to return `10` if `did_win` is True, and `-10` if `did_win` is false. What's the most concise way to do this? I know I can just if else but I am curious how compact such functionality can be
[11:42:11] *** Joins: brickfat (~brickfat@user/brickfat)
[11:43:19] <energizer> tsujp: 10 if won else -10
[11:43:23] <parv> tsujp, if-else is the closest thing for lack of ternary operator (?: e.g.). Or, you could have a dict
[11:43:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[11:44:22] <jinsun> score * [-1, 1][did_win]
[11:44:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:44:38] <energizer> jinsun -= 1
[11:45:08] <tsujp> I can do ~score to multiply it by -1 right?
[11:45:20] <deniska> -score
[11:45:35] <deniska> ~ is a binary inversion
[11:46:44] <tsujp> ah okay, that makes sense beause I saw -11 hehe
[11:47:00] <hexnewbie> I accept jinsun's challenge and offer: int(copysign(score, did_win * 2 - 1))
[11:47:23] <parv> lol
[11:47:26] <tsujp> ive inadvertently started a code golf hehe
[11:47:40] <deniska> `score * (did_win * 2 - 1)` :)
[11:48:18] <energizer> deniska: i feel like that's how math people would do it
[11:49:39] <tsujp> False == 0 so it'd expand to `10 * (0 * 2 - 1)` => `10 * -1`
[11:49:39] <tsujp> neat
[11:49:47] <parv> score = True ; { 'True' : 1 , 'False' : 2 }.get( f'{score}' )
[11:50:01] <parv> s/score/did_win/
[11:50:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[11:51:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:52:48] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:53:00] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[11:53:17] <parv> Frankly I prefer jinsun's response
[11:53:29] <energizer> yknow i kinda do too
[11:53:32] *** Joins: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com)
[11:53:49] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[11:53:50] <jinsun> it is the shortest (yet) :D
[11:53:59] *** Joins: Laibsch (~leggewie@93.152.184.249)
[11:54:17] *** Joins: fearnothing (~fearnothi@user/fearnothing)
[11:54:23] *** Joins: xiongxin (~quassel@113.116.224.79)
[11:54:31] <parv> Not for being shortest but for being terse & clear
[11:57:00] <deniska> it's inside a method, I'd just write 4 lines of if-else code
[11:57:01] <hexnewbie> There will always be something weird about the order of operands in x if cond else y. I only seem to have it make sense when y is a simple fallback (rebooting universe back to Python 2.4)
[11:57:51] <energizer> i dont like c ? a : b much
[11:57:53] <deniska> hexnewbie: that's just a matter of familiarity, I always trip a bit on ?: syntax C-esque languages have
[11:58:13] <energizer> dont like a if c else b either
[11:58:38] <energizer> but the order of c a b seems much better than the other
[11:59:03] *** Quits: Dantalion (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (Quit: Bye)
[11:59:13] <energizer> `if c then a else b` aint bad
[11:59:32] *** Quits: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com) (Ping timeout: 265 seconds)
[12:00:14] <hexnewbie> Especially if it gets split on multiple lines, a simple if statement becomes automatically better because of the order
[12:00:45] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[12:00:54] <energizer> yeah i gotta disagree on the familiarity claim
[12:01:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:01:53] *** Joins: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com)
[12:02:53] <energizer> in array languages they don't special-case the two-option conditional
[12:03:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:03:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:03:17] <energizer> it's more like [x,y,z][cond]
[12:03:33] *** Joins: fikran (~fikran@user/fikran)
[12:03:43] *** Joins: wyclif (~wyclif@user/wyclif)
[12:04:07] <energizer> except they have better syntax for making vectors a‿b‿c
[12:04:33] <hexnewbie> Short-circuiting is important though, especially when you have like: x / y if y else 0
[12:04:44] <hexnewbie> or else None
[12:05:24] <energizer> for a long time in python it was `cond and x or y`
[12:05:43] <energizer> but that does the wrong thing if x is falsy
[12:05:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:05:50] <tsujp> is this the best way to limit a method call to X seconds of runtime before force-returning? It looks okay but if doStuff() runs for say 10 seconds it wont be caught because the check is on each While iteration only no? Short snippet here: http://ix.io/3BYJ
[12:06:37] *** Quits: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com) (Remote host closed the connection)
[12:06:39] <energizer> tsujp: that's fine
[12:07:32] <energizer> the other options are more complicated so if that works for you then use it
[12:07:52] *** Joins: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com)
[12:07:52] *** Joins: brelod (~me@90.244.150.142)
[12:08:25] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Remote host closed the connection)
[12:08:25] <tsujp> im implementing MCTS which is an anytime algorithm so if some threshold of time is exceeded I want that method to be killed but still return the best result it's seen thus far
[12:08:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[12:08:50] <parv> I do not see how the while-loop will cause to end doStuff() early.
[12:08:57] *** Joins: slav0nic (slav0nic@python.su)
[12:09:12] *** Joins: wyclif (~wyclif@user/wyclif)
[12:10:10] <tsujp> yeah that's what I think, if I put doStuff to sleep for 10 seconds while wont end for 10 seconds when it has a chance to do the check of the time
[12:10:20] <tsujp> how can I make this check the time? Use a thread to make it async and kill the other thread?
[12:10:27] <parv> Loop would end only after doStuff() returns & past the end of time
[12:10:33] <energizer> oh i was assuming doStuff() mutates state on each iteration
[12:10:45] <energizer> if your whole logic is in doStuff that's not gonna work
[12:11:11] <tsujp> yeah that's right energizer and parv, any advice on good approaches here then?
[12:11:35] <energizer> tsujp: inside of dostuff you can check the time
[12:11:47] <energizer> or you can do it in a subprocess with a timeout
[12:12:00] <energizer> or you can use signal.signal
[12:12:47] <energizer> or uh maybe there's something with threads but i can't think of how it would work
[12:13:58] <parv> Only suggestion I have is what energizer had already mentioned (subprocess). I have not explored threads, async, & signal yet.
[12:14:09] <tsujp> Gotcha
[12:14:22] <tsujp> One more question here, I cannot find documentation on this for-try pattern here, it's a short snippet: https://github.com/maksimKorzh/tictactoe-mtcs/blob/master/src/tictactoe/mcts.py#L49-L61
[12:14:22] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:8128:764a:89ad:5c22)
[12:14:28] <tsujp> how is 'try' working here?
[12:14:45] <energizer> that's not for/try
[12:14:55] <energizer> those are two separate things
[12:15:03] <energizer> it's for
[12:15:06] <energizer> and then try/except
[12:15:22] <tsujp> oh okay
[12:15:33] <energizer> btw `except:` is bad practice. always specify which exception you're catching
[12:15:45] <tsujp> gotcha
[12:15:56] *** Quits: greedom (~greedom@2001:16b8:2e4f:6100:c3ff:18cc:5f9d:eb74) (Remote host closed the connection)
[12:16:02] <energizer> and `class MCTS():` parens arent necessary
[12:16:06] <PamiPetteri> do you people code threads by hand?
[12:17:09] <energizer> tsujp: line 17-24 should be `self.is_terminal = self.board.is_win() or self.board.is_draw()`
[12:17:34] *** Quits: stockholm (~Andreas@p200300d2c73c8700758a6e4ffb56a5c9.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[12:17:37] <energizer> but i guess this probably  isnt your code
[12:17:51] <tsujp> it's not my code hehe
[12:17:57] <tsujp> but good to know so I dont develop bad habits
[12:19:55] <PamiPetteri> I was told in the other channel that I should not code threads by hand unless a teacher forces me to or unless I get paid a lot for it, to write some low-level stuff. I am interested in the "mutex" concept. I first ran into it in the book Modern Operating Systems by Tanenbaum, and once in a while I look at actual code snippet examples where it is used. Apparently a mutex is meant to make a "mutual
[12:20:01] <PamiPetteri> exclusion" to a resource so 2 threads do not write into a global resource at the same time - only 1 of them can write and access the resource at a time. There might be a sequence, a counter, that lets thread 1 write 0 1 2 3 4 5 and then lets thread 2 write 5 4 3 2 1 0 instead of the "without mutex" situation where the global counter values can be jumbled like 0 1 0 2 3 2 3 etc.
[12:20:09] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:21:46] <tsujp> how are you going to get paid to write threads if you've never written threads and therefore have no experience writing threads to get a job writing threads
[12:21:55] <tsujp> unless this paid-for-job is purely an internship
[12:22:00] <tsujp> sounds like bad advice tome
[12:22:59] <tsujp> replace threads with anything else, python, x feature, y feature etc
[12:23:05] <tsujp> dont write python unless you're getting paid to write python
[12:23:14] <tsujp> ok? so how do you get paid to write a language you have 0 experience using
[12:23:17] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[12:23:31] <hexnewbie> And pitfalls of threads should be a learned experience, you may heed advice regarding their complexity and avoid them in real personal projects, but while learning you may experiment with them to see how non-deterministic behaviour can lead to issues, how careless locks can lead to deadlocks, etc.
[12:23:35] <graingert[m]> threads by hand? other channel?
[12:24:00] <hexnewbie> Though what I said might be impossible, you need a pretty complex personal project to experience such pains 😃
[12:24:18] <graingert[m]> you can't avoid the main thread
[12:24:48] <parv> tsujp, Get a job with on-the-job training/time (learned Rexx on mainframe; then Python at current job)
[12:24:59] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[12:25:18] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[12:25:26] <tsujp> parv sure you can but that's purposefully limiting yourself for no reason
[12:25:40] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[12:26:20] <parv> tsujp, I am not advocating to avoid learning; only answered the part about how to get a job with 0 experience
[12:26:34] <energizer> parv: how's python compared to rexx?
[12:26:40] <tsujp> parv absolutely
[12:27:49] *** Quits: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com) (Ping timeout: 252 seconds)
[12:27:55] *** Joins: Hazza (~Haxxa@122-199-44-175.ip4.superloop.com)
[12:28:17] <parv> energizer, I has been 20 some years since I last used Rexx. It did not have regex -- that's the main point I remember after coming from self-learned Perl
[12:29:39] <energizer> wikipedia says that one of Rexx's features is that it has "Few artificial limitations" https://en.wikipedia.org/wiki/Rexx
[12:29:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[12:31:40] *** Joins: Xeago (~Xeago@user/xeago)
[12:32:36] *** Quits: Hazza (~Haxxa@122-199-44-175.ip4.superloop.com) (Remote host closed the connection)
[12:32:49] <parv> On OS/390 Perl & "Unix" tools were horribly hobbled; Rexx, short of writing C programs (may be assembly), was the next best thing in terms of a high level language.
[12:33:24] *** Joins: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com)
[12:33:26] *** Joins: knoxx (~abhi@223.186.94.197)
[12:33:47] <parv> ... getting offtopic ...
[12:34:14] <knoxx> hello!
[12:35:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[12:36:28] *** Quits: knoxx (~abhi@223.186.94.197) (Quit: WeeChat 3.3)
[12:36:53] *** Joins: ravan (~ravan@user/ravan)
[12:38:36] *** Quits: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com) (Read error: Connection reset by peer)
[12:38:41] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[12:40:09] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:42:58] *** Joins: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com)
[12:42:59] *** Quits: y1n (~y1n@91.141.43.230.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[12:45:41] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[12:45:59] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[12:47:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:47:15] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:47:41] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:48:59] *** Quits: LuKaRo (~LuKaRo@p4fc335b2.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[12:49:44] *** Quits: Haxxa (~Haxxa@122-199-44-175.ip4.superloop.com) (Ping timeout: 268 seconds)
[12:50:24] *** Joins: LuKaRo (~LuKaRo@p4fc32951.dip0.t-ipconnect.de)
[12:52:34] *** Quits: AM (~techman@82-203-161-159.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[12:54:14] *** Joins: AM (~techman@82-203-162-39.bb.dnainternet.fi)
[12:55:23] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:56:47] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:00:12] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:00:38] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:02:10] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[13:03:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:06:12] *** PJBoy is now known as Guest2229
[13:06:12] *** Quits: Guest2229 (~PJBoy@user/pjboy) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[13:06:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:07:14] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:57] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:11:04] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Ping timeout: 265 seconds)
[13:12:08] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[13:12:28] *** Joins: esro (~esro@2a02:120b:2c3a:4620:b492:c3df:9d32:54)
[13:12:35] *** Quits: esro (~esro@2a02:120b:2c3a:4620:b492:c3df:9d32:54) (Client Quit)
[13:13:16] *** Quits: mermaid (aoei@nethackscoreboard/aoei) (Quit: brb server reboot)
[13:14:16] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:15:29] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[13:15:52] *** Joins: Brocker (~NoBody@user/brocker)
[13:16:45] *** Joins: src (~src@user/src)
[13:17:11] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:17:35] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:22:28] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[13:22:29] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[13:22:51] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:23:40] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[13:24:03] *** Joins: CoolerY (~CoolerX@user/coolerx)
[13:24:54] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:25:18] *** Joins: EGH (~EGH@185.25.195.104)
[13:26:06] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:26:18] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[13:26:50] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:27:22] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[13:27:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:30:12] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:33:59] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[13:35:10] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[13:35:14] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[13:39:08] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[13:41:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:45:01] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[13:45:31] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[13:45:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[13:46:13] <rendar> well, isn't python very similar to Rexx?
[13:47:47] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[13:48:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[13:48:21] *** Joins: Lazenca (Lazenca@user/lazenca)
[13:48:46] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 265 seconds)
[13:49:15] *** Quits: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[13:49:31] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[13:50:33] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:50:40] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[13:50:47] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[13:51:19] *** Joins: mickey8 (~user@user/mickey)
[13:51:23] *** Joins: gulzar (~gulzar@175.100.139.39)
[13:51:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:52:39] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[13:53:13] <gulzar> Hi. In argparse, how to check if argument with default option is passed from cli or not. I have a option --iterations, default 25. If user doesn't use it, use 25 but print a warning. Doing,  if not args.iterations doesn't print anythinig. It seems the default is passed.
[13:53:15] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:55:06] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: No route to host)
[13:55:10] <hexnewbie> gulzar: Keep the default at None, print the warning, and explicitly use 25 iterations when None?
[13:55:20] <gulzar> hexnewbie: Ah, ok
[13:55:40] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[13:56:25] *** Joins: dez (uid92154@user/dez)
[13:56:39] <gulzar> hexnewbie: Thank You
[13:56:56] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:59:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[14:00:59] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 264 seconds)
[14:01:03] *** Joins: mickey85 (~user@user/mickey)
[14:02:10] *** Joins: Laibsch (~leggewie@93.152.184.249)
[14:02:36] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[14:02:37] *** mickey85 is now known as mickey8
[14:04:57] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:05:48] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:07:51] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:10:53] *** Quits: src (~src@user/src) (Quit: Leaving)
[14:10:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[14:12:54] *** Joins: fikran (~fikran@user/fikran)
[14:19:19] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:19:42] *** Quits: davor (~davor@user/davor) (Ping timeout: 265 seconds)
[14:20:04] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 252 seconds)
[14:20:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[14:21:49] *** Joins: davor (~davor@user/davor)
[14:26:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:28:57] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[14:29:11] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[14:29:22] *** rexbinary_ is now known as rexbinary
[14:30:31] *** Quits: Jefren1 (~Jefren@70.35.67.111) (Ping timeout: 245 seconds)
[14:30:33] *** Joins: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-69b5-49d8-6658-8e8a.fixed6.kpn.net)
[14:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:59] *** Joins: Jefren1 (~Jefren@70.35.67.111)
[14:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:54] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[14:32:15] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[14:32:23] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[14:33:14] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 265 seconds)
[14:33:29] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:34:09] *** Joins: ravan (~ravan@user/ravan)
[14:34:16] <Ghosts3301> Hey guys, I had a question about recursion/calling a function from another function. In my first function I've got to find a json file which contains data (and which I have to save later to a list). In my second function I have to get certain values from the indices, since it's a file containing numbers; e.g. get the sum of certain indices etc. I
[14:34:17] <Ghosts3301> have to combine both functions so that the calculations in the 2nd function can be done in the first function, but idk how, any help?
[14:34:18] <Ghosts3301> https://bpa.st/2D4A
[14:34:44] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[14:35:45] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[14:35:54] <ChrisWarrick> Ghosts3301: are you sure this code is complete and that it works?
[14:36:15] <Ghosts3301> The first function works completely
[14:36:26] <Ghosts3301> It's able to find the json files and open the data within them
[14:36:29] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:36:35] <Ghosts3301> It doesn't work yet since I have to combine the both
[14:37:05] <tsujp> im getting `math.sqrt(math.log(node.visits) / child.visits) ValueError: math domain error` does anyone know why?
[14:37:06] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:37:13] <tsujp> division by zero possibly?
[14:37:27] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:38:16] <ChrisWarrick> tsujp: you have three different math occurrences here that all have possible invalid arguments to them
[14:38:44] <ChrisWarrick> tsujp: split this into three lines and you’ll know which one
[14:38:45] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[14:38:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:39:10] *** Joins: _zipper (~zipper@static.222.158.90.157.clients.your-server.de)
[14:39:52] <ChrisWarrick> Ghosts3301: first, get rid of the `listofdata` global variable. Then rethink the order — perhaps you should start with `jayson` (which doesn’t need to take `data` as an argument) and it then could call `valueofindex` on the data it finds?
[14:40:35] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:41:02] <Ghosts3301> ChrisWarrick yeah I removed the data argument, but where would I call valueofindex in the jayson function?
[14:41:05] <blurry> Ghosts3301: you can return the data from jayson()
[14:41:32] *** Joins: magla (~gelignite@55d43f3a.access.ecotel.net)
[14:41:48] <Ghosts3301> And if I don't give valueofindex() the data argument i get loads of errors
[14:41:48] *** Quits: _zipper (~zipper@static.222.158.90.157.clients.your-server.de) (Read error: Connection reset by peer)
[14:42:05] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[14:42:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:42:35] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[14:42:56] <Ghosts3301> When I call valueofindex(data) it says 'data' isnt defined, but wouldnt that be weird since i called json() and within json() data is in fact defined?
[14:43:02] <jinsun> tsujp: not zeo division for sure that is a different error, probably node.visits is negative or zero but log works only for >0 inputs
[14:43:34] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[14:44:26] <blurry> Ghosts3301: you are right, it's defined _within json_, not outside
[14:45:00] <Ghosts3301> I need to keep that within the json function though..
[14:45:04] <blurry> Ghosts3301: you either want json to parse the data and return it and then valueofindex to work with this returned data, or parse data within json() and work with this local data and call valueofindex on that
[14:45:07] <jinsun> tsujp: or it is between 0 and 1, in that case log is negative, which sqrt cannot accept
[14:46:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[14:46:55] <Ghosts3301> blurry The assignments wants me to: 1. Write a function that can get the wanted value from a specified index and 2. Write a function that processes a single .json file making use of your first function
[14:46:57] <tsujp> Got it, used the debugger and node.visits was indeed 0
[14:47:12] <tsujp> turns out I wasn't setting the parent on my tree data structure so when I set those values they didn't backpropogate
[14:47:16] <tsujp> fixed that and viola it works
[14:47:18] <tsujp> thanks all
[14:47:20] <Ghosts3301> So the 1. would be valueofindex() and the 2nd jayson()
[14:47:48] <Ghosts3301> It says to use the 1st function
[14:49:18] <blurry> you can "use it" (json()) by: you can call the function from within valueofindex() or you can call the function and use the data it returns
[14:49:54] <Ghosts3301> yeah thats what i did; i called json() within valueofindex(data)
[14:49:55] <blurry> python is not very friendly towards passing in/out arguments to functions -- like you wanted to use `data` in jayson()
[14:50:04] <Ghosts3301> yeah i got rid of that
[14:50:20] <blurry> so what do you have and what doesn't work?
[14:50:33] <blurry> are you returning the data from jayson()?
[14:50:33] <Ghosts3301> but if i didnt use the data argument in valueofindex i wouldve gotten loads of errors saying data isnt defined
[14:50:40] <Ghosts3301> yes the data is in jayson()
[14:50:47] <Ghosts3301> cause i opened the files there
[14:51:10] <blurry> well you need to get the data into valueofindex
[14:51:39] <blurry> you process whatever you need in jayson() and `return` it, so you can use it in other functions
[14:51:44] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[14:52:01] <Ghosts3301> oh how would i write that down in my code?
[14:52:14] <Ghosts3301> return data = json.load(jsonfile)?
[14:52:24] <blurry> literally use `return data` at the end of the function
[14:52:40] <blurry> no, jayson need to declare that it returns the data
[14:52:57] <blurry> then you can assign the output of it into a variable data = jayson()
[14:53:27] <Ghosts3301> https://bpa.st/EEZA like this?
[14:53:41] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[14:54:31] <blurry> the return is correct, but you need to get the variable within scope
[14:54:39] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[14:54:46] <blurry> you still append to listofdata, remove that
[14:54:58] <Ghosts3301> i need that tho lol
[14:55:15] <blurry> was it specified in the assignment?
[14:55:17] <Ghosts3301> i have to keep a list of the absolute path
[14:55:17] <Ghosts3301> yes
[14:55:47] <blurry> was it specified that it needs to be a global variable or is it the `data`
[14:55:52] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[14:56:08] <Ghosts3301>  For each File that does in fact contain a List,
[14:56:08] <Ghosts3301> your program creates a tuple consisting of: Absolute Filepath and a list with
[14:56:09] <Ghosts3301> five numbers (below).
[14:56:13] <Ghosts3301> this is what it says
[14:56:26] <Ghosts3301> and the five numbers are the calculations done in valueofindex(data)
[14:59:37] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[15:00:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:02:19] <gulzar> Hi. I am getting "A value is trying to be set on a copy of a slice from a DataFrame"   but can't pin point exactly which line is doing this. Any ideas
[15:03:55] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:04:04] <gulzar> got it iloc ig doinig it
[15:06:15] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[15:06:42] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[15:06:59] *** Joins: Tier (~tier@37.214.39.208)
[15:07:16] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Remote host closed the connection)
[15:07:39] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[15:08:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:12:54] *** Joins: _zipper (~zipper@static.222.158.90.157.clients.your-server.de)
[15:13:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Remote host closed the connection)
[15:13:25] *** Quits: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-69b5-49d8-6658-8e8a.fixed6.kpn.net) (Ping timeout: 256 seconds)
[15:14:27] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:15:08] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Remote host closed the connection)
[15:15:33] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[15:17:20] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[15:18:11] <fluter> hi, how do i fix this lint error: Constant name "group" doesn't conform to UPPER_CASE naming style (invalid-name)
[15:18:19] <fluter> where group is not a constant
[15:18:39] <fluter> it's sth like this: group = 'FOOBAR'; if cond: group = update(...)
[15:19:52] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[15:20:07] <ChrisWarrick> fluter: pylint expects that all module-level variables are constants
[15:20:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[15:20:58] <ChrisWarrick> fluter: if you’re running pylint on “scripts”, then this check makes no sense
[15:21:40] <fluter> ChrisWarrick: i'm doing pylint on setup.py xD
[15:21:49] <ChrisWarrick> I wouldn’t
[15:22:07] <fluter> ok ;-)
[15:22:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:23:34] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:23:35] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[15:25:49] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[15:26:41] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[15:27:02] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[15:27:19] *** Joins: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-a087-1c3c-e75-e99a.fixed6.kpn.net)
[15:27:38] *** Joins: p-i- (~Ohmu@223.206.71.4)
[15:27:53] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[15:28:37] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:30:16] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[15:30:56] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:31:18] *** Joins: pycurious (~Adium@user/pycurious)
[15:31:50] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:31:55] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 268 seconds)
[15:33:23] *** Quits: _zipper (~zipper@static.222.158.90.157.clients.your-server.de) (Ping timeout: 264 seconds)
[15:35:31] *** Quits: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-a087-1c3c-e75-e99a.fixed6.kpn.net) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:05] *** Leonarbro_ is now known as Leonarbro
[15:37:34] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[15:37:41] *** Joins: roxfan2 (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[15:38:05] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[15:38:52] *** Joins: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-a087-1c3c-e75-e99a.fixed6.kpn.net)
[15:39:42] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[15:40:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[15:41:15] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[15:41:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:41:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:42:30] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:42:34] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:42:37] *** Joins: maxxe (~maxxe@user/maxxe)
[15:43:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:43:07] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[15:43:20] *** Quits: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[15:45:39] *** Joins: cutotopo (~cutotopo@151.49.184.234)
[15:45:53] *** Joins: jay-m1262 (~jay-m@129.0.77.220)
[15:47:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[15:48:50] *** Quits: dMartian (~dMartian@2a0d:5600:24:a80::a77d) (Ping timeout: 260 seconds)
[15:50:34] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:50:36] *** Quits: imp (~imp@192-141-191-231.alternativaip.net.br) (Quit: imp)
[15:51:36] *** Quits: cutotopo (~cutotopo@151.49.184.234) (Quit: cutotopo)
[15:51:56] *** Quits: Kaya (~KC@2a01:4f9:c010:3917::1) (Quit: Solsys 0.03)
[15:52:56] <tsujp> if anyone here familiar with monte carlo tree search?
[15:53:07] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[15:53:11] *** Quits: jay-m1262 (~jay-m@129.0.77.220) (Ping timeout: 264 seconds)
[15:53:14] <tsujp> you do UCB1 to find a node to expand but when returning the best move you ignore nodes with visits = 0 right
[15:53:38] *** Joins: jay-m1262 (~jay-m@129.0.77.220)
[15:53:54] <Ghosts3301> Guys i have a data list in which i need to get the amount of uneven numbers from index 20 to index 40; this is what ive got: https://bpa.st/IW6A
[15:54:02] <Ghosts3301> how would i be able to do the rest?
[15:55:44] *** Quits: dalan6236 (~dalan@59-102-54-91.tpgi.com.au) (Quit: dalan6236)
[15:58:00] *** Joins: Naan (~naan@user/naan)
[15:59:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[15:59:32] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:03:11] *** Joins: esro (~esro@2a02:120b:2c3a:4620:71fc:13d0:53da:d85d)
[16:05:05] <Wulf> Ghosts3301: your question is unclear. Got an example for "data" and the desired result?
[16:05:42] *** Joins: mat001 (~mat001@213.143.69.121)
[16:05:52] <Pi-sistance> If I use this command print(a,b),print(c) It prints a, then b. It then prints c on the next line. but  it then prints on another new line (none, none)     whats going on?
[16:06:17] <Ghosts3301> Wulf well to be clear the data contains 3 lists, each of which contains numbers (so something like [1,2,3,4,354, 342, etc])
[16:06:54] <Ghosts3301> the desired results is as i said; gathered uneven numbers from index 20 to 40
[16:07:03] <Pi-sistance> if its in curved brackets, thats a tuple I think (im a noob)
[16:07:21] <Pi-sistance> I dont understand why it appeared though .
[16:07:52] <Wulf> Ghosts3301: that's not clear to me, sorry.  data = ##actual_values_here##;  result = f(data); result == ##actual_value##
[16:08:03] <Wulf> Ghosts3301: fill in the blanks!
[16:08:41] *** Quits: Tier (~tier@37.214.39.208) (Quit: Leaving)
[16:08:45] <Ghosts3301> idk what you mean with result = f(data)
[16:09:12] <Wulf> Ghosts3301: assume a function `f' exists which does what you want.
[16:09:25] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[16:09:33] <Wulf> Pi-sistance: Type "None, None". What happens?
[16:10:11] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[16:10:42] <Wulf> Ghosts3301: you can show your code on https://bpa.st/+python ; no need for a private chat.
[16:10:47] <Pi-sistance> Wulf: : it prints it out, no idea why
[16:11:01] *** Joins: Atque (~Atque@user/atque)
[16:11:11] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[16:11:17] <Wulf> Pi-sistance: it's what the python REPL does. You type in a statement, the REPL prints it out. Unless it's `None'.
[16:11:42] <Ghosts3301>  bruh
[16:11:44] <Wulf> Pi-sistance: def foo: return None    foo(), foo()
[16:11:50] <Wulf> Pi-sistance: or just foo()
[16:12:08] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[16:13:46] <Pi-sistance> Wulf: I think thats  a function, I havnt got to the stage where I learn functions yet. I have no idea why it printed none when i didnt use a print command or with what i posted earlier
[16:13:58] <Wulf> Pi-sistance: print is a function too.
[16:14:02] <Yhg1s> Pi-sistance: print() is a function. It returns None.
[16:14:24] <Pi-sistance> it returns whats in the bracket after I type print?
[16:14:24] <Yhg1s> Pi-sistance: if you do 'print(), print()', you create the tuple (None, None). The REPL prints out that tuple.
[16:14:31] <Yhg1s> Pi-sistance: no, it returns None.
[16:14:45] <Yhg1s> It *prints* what you tell it to print, and returns None.
[16:14:55] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Remote host closed the connection)
[16:15:25] <Pi-sistance> print() doesnt return none, the screen is blank after
[16:15:46] <Wulf> Pi-sistance: the REPL doesn't print the return value of the expression iff it's None
[16:15:51] <Yhg1s> Pi-sistance: print() does return None. Try 'x = print(); print("print() returned", x)'
[16:15:57] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[16:16:27] <Pi-sistance> returned?
[16:16:37] <Yhg1s> Pi-sistance: yes. Functions returna value.
[16:16:43] *** Joins: palasso (~palasso@user/palasso)
[16:16:54] <Pi-sistance> so it wont display none, but it will display the tuple (none,none)
[16:17:38] <Yhg1s> The REPL will, yes.
[16:18:08] <Pi-sistance> well why is it printing the none none tuple after It print a b and c. I didnt select an empty print box
[16:18:50] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:19:07] <Yhg1s> Pi-sistance: 'print(a), print(b)' means 'call print(a), call print(b), put the results of those two calls in a tuple'
[16:19:28] <Yhg1s> Pi-sistance: so the result is (None, None). The REPL prints that result.
[16:20:13] *** Quits: esro (~esro@2a02:120b:2c3a:4620:71fc:13d0:53da:d85d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:20:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[16:21:02] <Pi-sistance> but the results of the tuple should be a,b,c not none, none oh lawd
[16:21:28] <Yhg1s> Pi-sistance: no, print() always returns None.
[16:21:47] <Yhg1s> Pi-sistance: if you want a tuple with a and b, don't call print().
[16:21:55] <Pi-sistance> wait whats the difference between calling and returning
[16:22:01] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[16:22:07] <Yhg1s> Pretty much everything.
[16:22:15] *** Joins: fikran (~fikran@user/fikran)
[16:22:37] <Yhg1s> Pi-sistance: you call a function, which causes it to execute. The function returns something, which is the *result* of calling the function.
[16:23:30] *** Joins: rsx (~dummy@ppp-188-174-130-95.dynamic.mnet-online.de)
[16:23:47] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 264 seconds)
[16:24:59] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[16:25:18] <Pi-sistance> you said print() always returns none. but I didnt use empty brackes when I called print
[16:25:53] <Pi-sistance> so I still dont see how I ended up with  a none, none tuple
[16:25:55] <Yhg1s> Pi-sistance: 'print()' just means 'the function called print'. I don't mean 'if you pass it no arguments'. I mean 'it always returns None, regardless of what arguments you pass'
[16:26:10] <Yhg1s> Pi-sistance: you did 'print(a, b), print(c)', yes?
[16:26:26] <Pi-sistance> yes
[16:26:30] <Yhg1s> Pi-sistance: those two print() calls returned None. The comma created a tuple. It's not the same as 'print(a, b)' followed by 'print(c)'.
[16:27:53] <Pi-sistance> ok, how does print() always return none? It prints out what I put in the bracket?
[16:28:16] <Pi-sistance> or rather it returns what I type in the bracket
[16:28:19] <Yhg1s> Pi-sistance: Yes, it prints the arguments you pass it. Then it returns None. That's what print does.
[16:28:26] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:28:32] <Yhg1s> No, it does not return the arguments you pass. It always returns None.
[16:29:29] *** Joins: esro (~esro@98.164.195.178.dynamic.wline.res.cust.swisscom.ch)
[16:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:30:57] <Pi-sistance> you said returning something is the result of calling the function. But the result of calling print() is to print whats in the bracket, not "none"
[16:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:29] <Yhg1s> Pi-sistance: The *effect* of calling print() is that it prints the arguments. The value it returns, the result of the function call, is None.
[16:31:46] <Pi-sistance> do you mean returning something as in something is stored somewhere. thats the only way it makes sense to me, when I use print, im not storing information anywhere.
[16:32:00] <Wulf> Pi-sistance: perhaps you should write some simple functions to grasp the meaning of "return value"
[16:32:06] <Yhg1s> Pi-sistance: print() causes things to be printed to the screen. That's an effect outside of the program. The return value is the result inside the program. It's the value returned to the rest of the program.
[16:32:21] *** Quits: jay-m1262 (~jay-m@129.0.77.220) (Ping timeout: 268 seconds)
[16:32:37] <Yhg1s> Pi-sistance: yes, you can think of it as 'storing a result', which the calling code receives. In the case of print, that result is None.
[16:32:38] <Wulf> Pi-sistance: def foo(a, b): print(f"I got {a} and {b}"); return a * 8 + b + 3
[16:33:43] *** Joins: jay-m1262 (~jay-m@154.72.161.113)
[16:34:43] *** Quits: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:34:45] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[16:34:50] <Pi-sistance> when you say an effect outside of the program, you mean outside of the program called print?
[16:34:52] <Wulf> Pi-sistance: c = foo(7, 11) + foo(4, 5); print(f"sum is {c}")
[16:36:00] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[16:36:37] <Yhg1s> Pi-sistance: 'print' is not a separate program. The program, in the case of the REPL, is the REPL.
[16:37:12] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[16:38:50] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:19cf:f76e:b6a:6783)
[16:39:01] <Pi-sistance> Ok thanks, I think I somewhat understand it, I'll mess about with it for a bit. Thanks for your inhuman impatience Yhg1s
[16:41:37] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:42:23] *** Quits: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-a087-1c3c-e75-e99a.fixed6.kpn.net) (Ping timeout: 256 seconds)
[16:42:53] *** Joins: Jong (~Jong@174.27.107.153)
[16:43:31] <Zweimer> I have two custom Widget-Classes in pyqt5 containing Buttons, LineEdits and other UI elements. These two classes are instantiated and added to the layout within my MainUI class. These two classes should now be connected over signals and slots. How could I do this? I could define the singals as global variables inside my package or I could add
[16:43:31] <Zweimer> another class, that is just handeling the signals.
[16:43:35] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[16:44:53] *** Joins: nomic (~nomic@185.217.117.88)
[16:44:56] *** Quits: nomic (~nomic@185.217.117.88) (Read error: Connection reset by peer)
[16:45:02] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:47:19] *** Joins: src (~src@user/src)
[16:47:36] *** Quits: Jong (~Jong@174.27.107.153) (Ping timeout: 265 seconds)
[16:49:08] *** Joins: pro_z (~pro_z@37.214.47.106)
[16:50:08] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[16:50:40] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:51:00] *** Quits: frost (~frost@59.71.244.189) (Quit: Ping timeout (120 seconds))
[16:56:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:56:39] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[17:01:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[17:01:53] *** Quits: brelod (~me@90.244.150.142) (Quit: Lost terminal)
[17:05:28] *** Joins: aknot (~aknot@2603:900a:1503:17bb:e05a:3a47:b752:f631)
[17:06:13] <hexnewbie> Why should publishing a project be harder than writing it. I can't even get PyPI to render my markdown, or figure out what a git tag is, let alone anything more significant. 😃 Whatever, 33 commits are enough for Sunday. Bad markdown will have to do.
[17:07:18] *** Joins: semeion (~semeion@user/semeion)
[17:08:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:09:34] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[17:10:12] *** Joins: wyclif (~wyclif@user/wyclif)
[17:10:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:11:19] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:11:32] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:14:33] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[17:15:57] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:68b3:8d3:3c48:9f8a)
[17:17:52] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[17:19:58] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[17:20:06] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:68b3:8d3:3c48:9f8a) (Ping timeout: 245 seconds)
[17:21:53] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-48d0-0004-7e9c-d196.res6.spectrum.com)
[17:22:08] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:22:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:22:41] *** Joins: Polyinsecure (~Polyinsec@125.160.157.53)
[17:23:40] *** Joins: sedeki (~textual@user/sedeki)
[17:23:49] *** Quits: Polyinsecure (~Polyinsec@125.160.157.53) (Client Quit)
[17:24:18] *** Reinhilde is now known as MelanieMalik
[17:24:29] *** Joins: Polyinsecure (~Polyinsec@125.160.157.53)
[17:24:30] <Payam> can some one teach me how to send a request to gitlab using request library?
[17:24:30] *** MelanieMalik is now known as MelMalik
[17:24:37] <Payam> just a very simple example
[17:25:54] <sedeki> response = requests.get('url')
[17:25:58] *** Quits: punkgeek (~punkgeek@151.245.203.91) (Remote host closed the connection)
[17:26:51] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[17:27:16] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[17:27:41] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[17:29:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:29:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:30:40] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[17:30:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[17:31:05] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:11] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[17:31:39] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:32:19] <Payam> how do I set the token?
[17:32:58] *** Quits: maxxe (~maxxe@user/maxxe) (Quit: bbl)
[17:33:21] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[17:33:29] <Payam> in curl I do `curl --header "PRIVATE-TOKEN: MYTOKEN" "https://gitlab.com/api/v4/projects/:id" ` the id is the project id
[17:33:46] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[17:33:51] *** Quits: lucidreamachine (~brian@2600:1700:1c60:16c0:4f3b:1c3a:9c44:d067) (Ping timeout: 245 seconds)
[17:33:53] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:34:14] <sedeki> requests.get('url', headers={'PRIVATE-TOKEN': 'MYTOKEN'})
[17:34:31] <Payam> is that all?
[17:34:31] <sedeki> i think. you should look this up
[17:34:49] <sedeki> yes, you pass the headers as a param
[17:35:48] <phy1729> If you're doing more than one request to the same server, you could make a session object and set the header there, but it's not necessary.
[17:35:48] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:36:30] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[17:36:50] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:37:06] *** Joins: ethrl (~morty@user/doforlove33)
[17:37:33] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[17:37:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:37:56] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[17:38:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:40:13] *** Quits: jay-m1262 (~jay-m@154.72.161.113) (Ping timeout: 252 seconds)
[17:40:54] *** Joins: Azin (~Azin@user/azin)
[17:42:21] *** Joins: jay-m1262 (~jay-m@129.0.77.220)
[17:42:46] *** Quits: Azin (~Azin@user/azin) (Remote host closed the connection)
[17:43:00] *** Joins: akk (~akk@75.161.146.115)
[17:44:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:45:32] *** Joins: oldguy (~oldguy@user/oldguy)
[17:45:55] *** Joins: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-1154-d960-f614-3f63.fixed6.kpn.net)
[17:46:06] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[17:46:22] *** Joins: mostafa (~Thunderbi@151.235.80.239)
[17:47:47] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 264 seconds)
[17:48:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[17:49:23] *** Quits: voirnox_ (~voirnox@xor.moe) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:49:44] *** Joins: voirnox (~voirnox@xor.moe)
[17:50:51] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[17:51:16] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[17:52:25] <grym> requests is very sensible
[17:52:37] <grym> as are things that use its API, more or less
[17:52:40] <grym> (httpx, e.g.)
[17:53:57] *** Joins: osxtra (~root@136.49.108.80)
[17:54:29] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[17:55:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:56:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:57:33] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[17:59:00] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Client Quit)
[17:59:06] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:59:14] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[18:01:31] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:01:38] *** Quits: Polyinsecure (~Polyinsec@125.160.157.53) (Quit: Leaving)
[18:01:40] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[18:02:06] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:02:40] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[18:03:41] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[18:04:55] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[18:06:01] *** Quits: esro (~esro@98.164.195.178.dynamic.wline.res.cust.swisscom.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:07:34] *** Joins: Azin (~Azin@user/azin)
[18:07:51] *** Joins: y1n (~y1n@91.141.44.131.wireless.dyn.drei.com)
[18:08:43] *** Joins: zebrag (~chris@user/zebrag)
[18:09:00] *** Quits: computeiro (~Wender@189.37.65.166) (Quit: Leaving)
[18:10:00] *** Joins: marcello42 (~marcello4@p200300dfaf409c014cf6635be2d5a763.dip0.t-ipconnect.de)
[18:10:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[18:10:18] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:44c2:aa1a:e398:8ebf)
[18:10:33] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:12:01] *** Quits: Azin (~Azin@user/azin) (Remote host closed the connection)
[18:13:53] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[18:16:23] *** Quits: rsx (~dummy@ppp-188-174-130-95.dynamic.mnet-online.de) (Quit: rsx)
[18:16:50] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:19:35] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:19:53] *** Joins: brelod (~me@90.244.150.142)
[18:21:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:21:56] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[18:22:09] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[18:22:40] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[18:22:41] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[18:23:49] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[18:24:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:10] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:25:32] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[18:25:53] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[18:26:07] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:28:46] *** Quits: ethrl (~morty@user/doforlove33) (Quit: WeeChat 3.0)
[18:29:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:30:52] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[18:31:22] *** Joins: Socra (~Socra@206.217.216.27)
[18:31:36] *** Joins: fikran (~fikran@user/fikran)
[18:32:38] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 265 seconds)
[18:33:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:33:44] <gulzar> Generic question. How is the comment guideline followed majorly? I looked at some github codes and realized thaht poeple needs to explain logic/algo. So I do comments like this https://paste.debian.net/1215738/    Which doesn't look elegant. Anh suggestions please.
[18:34:21] *** Quits: Socra (~Socra@206.217.216.27) (Client Quit)
[18:34:40] *** Joins: Socra (~Socra@206.217.216.27)
[18:38:05] *** Joins: semeion (~semeion@user/semeion)
[18:38:25] <Pi-sistance> I think I forgot to mention that I am using jupyter notebooks, which may have made things less obvious for me Yhg1s
[18:38:46] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 265 seconds)
[18:38:56] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[18:39:04] <Ghosts3301> read https://google.github.io/styleguide/pyguide.html#s3.8-comments-and-docstrings gulzar there are enough examples there!
[18:40:10] *** Quits: roxfan2 (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[18:41:34] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[18:42:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:42:34] <gulzar> Ghosts3301: Thank You
[18:43:05] *** Joins: wyclif (~wyclif@user/wyclif)
[18:44:19] *** Joins: Klinda (~superleag@user/klinda)
[18:46:00] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[18:46:17] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:47:15] *** Joins: xiongxin (~quassel@113.116.32.200)
[18:48:08] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[18:49:41] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[18:49:42] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[18:50:05] *** Quits: mostafa (~Thunderbi@151.235.80.239) (Quit: mostafa)
[18:51:16] <marcello42> gulzar, I'd recommend stick to whatever your team does use. Especially in a professional setting. This also refers to styling in general.
[18:51:18] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[18:51:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:52:27] <marcello42> From my experience you often spend more time on fixing and/or updating code than on writing new code, so explaining algos in the comments helps yourself in the future ;)
[18:53:47] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[18:54:17] <gulzar> marcello42: I am the only team :)
[18:54:50] <gulzar> marcello42: yes, explaining algo section wise is helpful even when we read our code after 6 months.
[18:55:11] <marcello42> gulzar, then the most important (if not only if you are not planning on working in a team) that YOU understand it :)
[18:55:20] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[18:55:55] <marcello42> yes this will truly happen .. when I started I had a lot of moments where I was just saying to my self.. what the heck did I do here and why does it even work lol
[18:56:08] <gulzar> marcello42: yes, so wanted a standard commenting guide. That google one looks good
[18:57:59] *** Joins: zeden (~zeden@user/zeden)
[18:58:38] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Remote host closed the connection)
[18:58:39] <tsujp> does the __init__ of a class return None or an object of that class?
[18:59:05] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[19:03:48] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[19:04:00] <nedbat> tsujp: you don't have to include a return statement, if that is what you are asking
[19:04:11] <tsujp> im asking for type annotation
[19:04:34] <tsujp> is def __init__() -> None: correct or should it be the class name i.e. def __init__() -> Foo:
[19:04:35] <nedbat> it's ridiculous to have to add a type annotation to __init__, but it should be -> None
[19:04:38] <Julian> tsujp: __init__ always returns None
[19:04:43] <Julian> But also yeah that.
[19:06:23] *** Quits: y1n (~y1n@91.141.44.131.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[19:06:43] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Remote host closed the connection)
[19:07:53] *** HelloNewman is now known as Hash
[19:11:49] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:11:50] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:13:13] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[19:13:49] *** Quits: nicode (~nic@157.52.13.25) (Remote host closed the connection)
[19:13:51] *** Quits: xiongxin (~quassel@113.116.32.200) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:15:23] *** Quits: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-1154-d960-f614-3f63.fixed6.kpn.net) (Ping timeout: 256 seconds)
[19:15:39] *** Quits: jay-m1262 (~jay-m@129.0.77.220) (Ping timeout: 265 seconds)
[19:15:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:18:02] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:18:52] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:19:28] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:20:26] *** Joins: Azin (~Azin@user/azin)
[19:20:38] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.3)
[19:20:57] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[19:21:03] *** Joins: mobius (sid478273@uxbridge.irccloud.com)
[19:21:27] *** Joins: teut (~teut@182.68.178.118)
[19:23:25] *** Quits: brachamh (~brachamh@user/brachamh) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:23:26] *** Quits: kurfen (~kurfen@37.120.204.67) (Ping timeout: 245 seconds)
[19:23:47] *** Quits: Azin (~Azin@user/azin) (Remote host closed the connection)
[19:25:47] *** Joins: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr)
[19:27:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:27:17] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[19:28:00] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:28:12] *** Quits: Ergo^ (~ergo@91.238.59.144) (Quit: WeeChat 2.8)
[19:28:25] *** Joins: Memory (sid459764@user/memory)
[19:30:16] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[19:30:33] <dodo> ew.. i've stuffed a python one-liner into a shell script and just found it again. now i feel dirty :p
[19:30:42] *** Quits: doc (~doc@user/doc) (Remote host closed the connection)
[19:30:57] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:31:10] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:31:27] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:29] <Soni> we'd like to learn how to write PEPs at some point :<
[19:31:33] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[19:31:36] <graingert[m]> <nedbat> "it's ridiculous to have to add a..." <- You don't have to if `__init__` takes parameters
[19:31:38] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[19:34:02] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:34:22] *** Joins: Klinda (~superleag@user/klinda)
[19:35:31] *** Joins: nomic (~nomic@185.217.117.88)
[19:36:18] <hexnewbie> I think I've abused __init__ at least once to do things like “if not super().__init__(*a, **kw): return”, but I would most definitely leave those un-annotated ugliness is hidden from someone not looking closely 😜
[19:36:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:36:23] *** Quits: gulzar (~gulzar@175.100.139.39) (Ping timeout: 264 seconds)
[19:36:37] *** Joins: Celeo (~Celeo@user/celeo)
[19:36:43] <hexnewbie> Er, so that the ugliness is hidden
[19:36:52] *** Quits: Celeo (~Celeo@user/celeo) (Client Quit)
[19:37:04] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[19:37:14] *** Joins: Celeo (~Celeo@user/celeo)
[19:37:28] *** Quits: nomic (~nomic@185.217.117.88) (Client Quit)
[19:37:48] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2003)
[19:41:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[19:42:22] *** Joins: bloody (~bloody@user/bloody)
[19:42:27] *** Joins: esro (~esro@98.164.195.178.dynamic.wline.res.cust.swisscom.ch)
[19:42:28] *** Joins: jamwil (~jamwil@user/jamwil)
[19:43:57] <grym> Soni: technical writing is a skill best learned through experience
[19:44:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:44:19] <grym> and practice
[19:45:28] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:46:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[19:47:46] <Soni> grym: yes
[19:48:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[19:50:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:51:37] *** Joins: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[19:51:57] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[19:52:44] *** Joins: thiras (~thiras@user/thiras)
[19:53:01] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Ping timeout: 245 seconds)
[19:53:02] *** Joins: Vonter (~Vonter@user/vonter)
[19:53:39] *** Joins: nuala2 (~nuala@user/nuala)
[19:54:03] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 250 seconds)
[19:54:48] *** Joins: doc (~doc@user/doc)
[19:57:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:57:13] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[19:57:23] *** Parts: wyclif (~wyclif@user/wyclif) ()
[19:57:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[19:58:05] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[19:58:09] *** Quits: Intruder777 (~Intruder7@user/intruder777) (Remote host closed the connection)
[19:58:16] *** Quits: dontyouloveshort (~dontyoulo@185.181.10.29) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:58:53] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[19:58:56] *** Joins: gadius (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[19:58:56] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[20:00:24] <grym> ... and shameless mimcry
[20:00:34] *** Joins: Akuli (~Akuli@82-203-166-30.bb.dnainternet.fi)
[20:01:28] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:01:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[20:02:04] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[20:02:05] *** Joins: alzgh (~alzgh@user/alzgh)
[20:02:09] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[20:03:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:03:43] *** Joins: Vonter (~Vonter@user/vonter)
[20:03:47] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[20:04:36] *** Quits: SuperLag (~akulbe@user/superlag) (Read error: Connection reset by peer)
[20:05:11] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[20:06:37] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:07:27] *** Joins: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb)
[20:07:45] *** Parts: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb) ()
[20:08:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[20:09:04] *** Joins: dontyouloveshort (~dontyoulo@2a07:3b80:1::efeb)
[20:09:06] <dontyouloveshort> hi
[20:10:40] *** Joins: SuperLag (~akulbe@user/superlag)
[20:10:40] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:12:39] *** Joins: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-4501-18b6-18c8-7a18.fixed6.kpn.net)
[20:13:19] <Ghosts3301> is there anyone i could ask my question to who was knowledge about recursion with data in multiple functions privately?
[20:14:32] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[20:14:51] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[20:15:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:15:25] *** Joins: nomic (~nomic@185.217.117.88)
[20:15:32] <Swayze> see the topic, paste your code and ask your question ehre
[20:15:55] *** Joins: gulzar (~gulzar@175.100.139.39)
[20:16:02] *** Quits: gulzar (~gulzar@175.100.139.39) (Client Quit)
[20:16:38] <ChrisWarrick> (we prefer to help in the channel, not in private)
[20:16:49] <Soni> grym: lmao okay
[20:17:01] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 252 seconds)
[20:17:22] <Ghosts3301> alright hold on
[20:19:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:19:43] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:19:54] <grym> Soni: i'm dead serious
[20:20:30] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[20:21:01] <aphysically> nedbat: yeah even if mypy won't (or can't?) infer return types in general I really wish they'd special case __init__ since it's a bit silly
[20:21:26] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[20:21:36] <Ghosts3301> https://bpa.st/YYZA so basically i scan for a .json file in jayson(), then i use the data from the .json files in valueofindex(data) to do calculations. the 'data' is 2 lists containing numbers and one empty list. withing those lists there are also letters and floats, so i created a 3rd function with exceptions, but it doesnt seem like it works
[20:22:00] <Ghosts3301> Any value might be at an index, so in case it is not possible to obtain one of
[20:22:00] <Ghosts3301> the numbers (e.g. list too short, wrong value type at index), set its value to
[20:22:01] <Ghosts3301> -sys.maxsize instead. But in case there is another list at the checked index, then
[20:22:01] <Ghosts3301> use its sum. <--- this is what im trying to do
[20:22:24] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[20:22:34] *** Joins: ub (~Thunderbi@77.119.216.214.wireless.dyn.drei.com)
[20:22:42] <Ghosts3301> pls help :)  ive been stuck for hours
[20:23:46] *** Joins: jazzy (~jaziz@user/jaziz)
[20:24:28] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[20:24:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:24:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:25:20] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:29:20] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:404b:4a6f:740e:a236)
[20:29:41] <mefistofeles> Ghosts3301: Can you clarify what is that you want and what is failing exactly?
[20:30:28] <mefistofeles> maybe even give an example of an input json file and the expected output
[20:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[20:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:31:07] <Ghosts3301> well right now i get: ValueError: [0, 4, 20, -1] is not in list; which I think is because the 3rd exceptions function isnt working i.e. because there's an empty list. idk how to set its value to sys.maxsize correctly
[20:31:20] <Ghosts3301> mefistofeles
[20:31:48] <Ghosts3301> mefistofeles the json file contains 3 lists, one of which is empty
[20:31:53] <mefistofeles> Ghosts3301: can you share the exact error message? It should help us tracing the call that is failing
[20:31:53] *** Joins: alnr (~alnr@38.125.204.99)
[20:32:14] <Ghosts3301> line 26, in valueofindex
[20:32:15] <Ghosts3301>     average = sum(data.index(indices)) //4
[20:32:15] <Ghosts3301> ValueError: [0, 4, 20, -1] is not in list
[20:33:11] <Ghosts3301> I also tried with this code, but it doesnt print anything except for the things from the 1st function https://bpa.st/35AA
[20:34:22] <mefistofeles> Ghosts3301: so coming back to my original question, I think you need to clarify what is that you are trying to accomplish and give us some example onout and output data
[20:34:25] <mefistofeles> *input
[20:34:42] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[20:35:01] *** Joins: Vonter (~Vonter@user/vonter)
[20:35:08] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[20:36:02] <BrenBarn> you keep saying "the JSON file" but your code is scanning through all the JSON files in a directory
[20:36:11] <BrenBarn> also you append to listofdata but you only return data, and you never use listofdata
[20:36:42] <alnr> i have an app that writes to /var/log/mail.log using syslog.LOG_MAIL. I want to convert it to using the logging module. what is the best way to allow the app permission to write to it
[20:36:52] <Ghosts3301> BrenBarn yes that was the point; to search through the cwd
[20:37:16] <Ghosts3301> my code isnt finished yet but the plan is to print out listofdata in the first function
[20:37:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:38:01] <Ghosts3301> mefistofeles there's an empty list as I said which is why I get the ValueError, im trying to avoid that with the whole sys.maxsize thing described above but idk how
[20:38:20] <Ghosts3301> I tried with the exceptions() function but it doesnt work
[20:38:51] *** Quits: aknot (~aknot@2603:900a:1503:17bb:e05a:3a47:b752:f631) (Ping timeout: 245 seconds)
[20:38:53] <BrenBarn> that's not really explaining what you're trying to do
[20:38:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[20:39:04] <BrenBarn> how many JSON files do you intend to process?  one?  or more than one?
[20:39:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[20:39:45] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[20:39:48] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:40:00] <Ghosts3301> The part where I processed the json files was correct though so it wouldnt matter
[20:40:28] <Ghosts3301> There are json files containing lists of i need to do calculations with
[20:40:57] *** Joins: fikran (~fikran@user/fikran)
[20:41:07] <Ghosts3301> there's an empty list and lists containing numbers+words so this is what i need to do: Any value might be at an index, so in case it is not possible to obtain one of
[20:41:07] <Ghosts3301> the numbers (e.g. list too short, wrong value type at index), set its value to
[20:41:08] <Ghosts3301> -sys.maxsize instead. But in case there is another list at the checked index, then
[20:41:08] <Ghosts3301> use its sum.
[20:42:03] <BrenBarn> how
[20:42:03] <BrenBarn> many
[20:42:04] <BrenBarn> JSON
[20:42:05] <BrenBarn> files
[20:42:05] <BrenBarn> do
[20:42:07] <BrenBarn> you
[20:42:07] *** litharge sets mode: +q $a:BrenBarn
[20:42:22] <Ghosts3301> bruh
[20:42:27] <Ghosts3301> lmaooo
[20:42:34] *** Gustavo6046_ is now known as Gustavo6046
[20:42:35] <Ghosts3301> its scanning through the cwd so
[20:42:37] <Ghosts3301> every
[20:42:38] <Ghosts3301> one
[20:42:39] *** litharge sets mode: -q $a:BrenBarn
[20:42:58] <BrenBarn> ok, so let's start with what you want to do with one JSON file
[20:43:06] <BrenBarn> What do you expect to be in one of these JSON files?
[20:43:35] <Ghosts3301> omg lol
[20:43:47] <Ghosts3301> sooo there are 3 lists
[20:44:00] <Ghosts3301> within 2 of those lists are numbers and letters
[20:44:03] <BrenBarn> where?
[20:44:04] <BrenBarn> in one JSON file?
[20:44:07] <Ghosts3301> yes
[20:44:10] <Ghosts3301> or multiple
[20:44:12] <Ghosts3301> i wouldnt know
[20:44:19] <Ghosts3301> it scans through the path
[20:44:22] <Ghosts3301> there are folders
[20:44:24] <BrenBarn> ok so that is a problem
[20:44:34] <BrenBarn> I think you need to back up and slow down
[20:44:43] <BrenBarn> just based on what you said your code is not even close to doing what you want it to do
[20:45:01] <BrenBarn> you code scans through all the files and looks for a single list in any JSON file, and if it finds one, it throws away any that it found before and only keeps the new one
[20:45:06] *** Joins: Pickchea (~private@user/pickchea)
[20:45:06] <Ghosts3301> i think it is though cause my data is correct
[20:45:13] <Ghosts3301> i checked with the teacher
[20:45:33] <Ghosts3301> BrenBarn no it's a loop so it gets everything
[20:45:55] <Ghosts3301> a for loop
[20:46:20] <BrenBarn> just because it's a loop doesn't mean it will keep everything from each run through the loop
[20:46:26] <BrenBarn> in your loop you do `data = json.load(jsonfile)`
[20:46:39] <BrenBarn> every time the loop runs, it will *replace* the value in `data` with the new result of loading the JSON from a new file
[20:46:45] <BrenBarn> discarding whatever was already in `data`
[20:47:09] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[20:47:34] <Ghosts3301> yeah cause the data was serialized
[20:47:38] <Ghosts3301> i deserialize that
[20:47:45] *** Parts: alnr (~alnr@38.125.204.99) ()
[20:47:56] *** Joins: upsala (~zcb@185.213.155.160)
[20:47:58] *** Joins: alnr (~alnr@38.125.204.99)
[20:48:16] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:44c2:aa1a:e398:8ebf) (Read error: Connection reset by peer)
[20:48:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[20:49:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-148d-18f4-b880-9c05.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:51:05] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:51:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:51:41] *** Joins: jay-m1262 (~jay-m@129.0.204.216)
[20:52:14] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[20:52:20] *** Joins: c_89 (~c_89@151.74.4.102)
[20:53:50] *** Gustavo6046_ is now known as Gustavo6046
[20:54:50] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[20:55:16] *** Joins: stockholm (~Andreas@p200300d2c73c8700bdd703a4fcd50f3b.dip0.t-ipconnect.de)
[20:55:52] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[20:58:54] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:6094:3c0:9f71:d454)
[20:59:20] *** Joins: markb_one (~markb1@2600:1700:eb40:7ecf:c01:f667:d964:c018)
[20:59:24] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[21:00:23] <mefistofeles> Ghosts3301: I gues what BrenBarn is trying to say is that maybe you should divide this in simpler problems, so make a function that deals with a single json file or data in a expected way, then make another that calls this one many times to deal with many and so on
[21:00:32] <mefistofeles> like a modular and unit-based approach
[21:00:56] <mefistofeles> and in that sense, you then can tell us what's your "smaller" problem and start from there, if you are still having trouble with it
[21:03:03] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Ping timeout: 256 seconds)
[21:04:04] *** Joins: s33ker (~s33ker@cpe-31-15-146-122.cable.telemach.net)
[21:04:22] *** Quits: markb_one (~markb1@2600:1700:eb40:7ecf:c01:f667:d964:c018) (Quit: Leaving)
[21:04:35] *** Quits: flyback (~flyback@2601:540:8201:1e60:117:3ae2:a60e:6ba0) (Ping timeout: 264 seconds)
[21:04:44] <s33ker> hi does anyone know any free or very cheap cloud instances to use python on
[21:05:26] <s33ker> something in the likes of droplet from digitalocean just want to know if there anything better
[21:07:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[21:07:39] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:07:46] <mefistofeles> s33ker: I've seen hetzner come up as a very affordable alterntaive, specially in Europe... maybe you want to check that one
[21:07:50] <mefistofeles> other than that, no idea
[21:07:51] *** Joins: Pickchea (~private@user/pickchea)
[21:08:31] <phy1729> GCP has a forever free tier that might be sufficient
[21:08:55] <s33ker> thx guys
[21:09:40] *** Joins: Laibsch (~leggewie@93.152.184.249)
[21:09:47] <s33ker> will check them out from what i have read droplet is also very simple since i never used them would like to start on something simplistic
[21:10:05] *** Joins: kurfen_ (~kurfen@37.120.204.67)
[21:12:31] *** Quits: kurfen (~kurfen@lfbn-ann-1-215-215.w86-200.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[21:12:55] *** Joins: Narrat (~omnius@p200300df5f377c7f06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:13:17] *** Joins: modlin (modlin@user/modlin)
[21:13:47] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:13:54] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[21:14:34] *** Joins: nomic (~nomic@185.217.117.88)
[21:15:31] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:15:33] *** Joins: sekiro (~sekiro@125-85.iitb.ac.in)
[21:15:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com)
[21:16:33] *** Joins: flyback (~flyback@2601:540:8201:1e60::5706)
[21:16:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com) (Client Quit)
[21:16:58] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:17:15] *** Quits: pro_z (~pro_z@37.214.47.106) (Ping timeout: 260 seconds)
[21:18:28] <s33ker> phy1729 do i need to enter free trial to be eligible for free tier
[21:19:17] <phy1729> I don't think so?
[21:22:21] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[21:23:12] *** Joins: MercilessDeth (~brad@136.49.61.2)
[21:23:13] *** Joins: nomic (~nomic@185.217.117.88)
[21:23:40] <s33ker> hmm ok
[21:24:02] *** Quits: jay-m1262 (~jay-m@129.0.204.216) (Ping timeout: 268 seconds)
[21:24:20] *** Quits: esro (~esro@98.164.195.178.dynamic.wline.res.cust.swisscom.ch) (Quit: Textual IRC Client: www.textualapp.com)
[21:25:24] *** Joins: Chex (~Chex@user/chex)
[21:26:16] *** Quits: nomic (~nomic@185.217.117.88) (Client Quit)
[21:27:39] <s33ker> i think gcp is good to play around and test i think i will use Hetzner later on thx again for suggestons
[21:28:45] *** Quits: Ghosts3301 (~Ghosts330@2a02-a458-57a-1-4501-18b6-18c8-7a18.fixed6.kpn.net) (Quit: Client closed)
[21:28:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:30:03] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:c01:f667:d964:c018)
[21:30:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d584-6e57-f98b-0941.res6.spectrum.com)
[21:30:53] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[21:31:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[21:31:17] *** Joins: jazzy (~jaziz@user/jaziz)
[21:31:40] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:32:29] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[21:35:00] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[21:35:37] *** Joins: jay-m1262 (~jay-m@154.72.161.113)
[21:37:43] *** Quits: c_89 (~c_89@151.74.4.102) (Quit: Connection closed)
[21:38:11] *** Quits: s33ker (~s33ker@cpe-31-15-146-122.cable.telemach.net) (Ping timeout: 256 seconds)
[21:38:37] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[21:40:18] *** Joins: sedeki (~textual@user/sedeki)
[21:41:22] *** Joins: nomic (~nomic@185.217.117.88)
[21:41:47] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 264 seconds)
[21:43:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[21:43:33] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[21:44:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:45:48] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:49] *** Quits: tracey (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[21:46:44] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[21:49:28] *** Joins: Vonter (~Vonter@user/vonter)
[21:50:01] *** Joins: palasso (~palasso@user/palasso)
[21:50:52] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:51:17] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[21:52:34] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[21:53:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[21:55:22] *** Joins: Laibsch (~leggewie@93.152.184.249)
[21:55:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:56:45] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:57:25] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[21:57:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:57:56] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[22:00:23] *** Joins: akk (~akk@75.161.146.115)
[22:01:30] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[22:01:46] *** Joins: yaw (~yiadom@37.228.233.226)
[22:02:43] *** Joins: Alleria (~textual@user/alleria)
[22:05:14] *** Joins: Azin (~Azin@user/azin)
[22:06:30] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[22:09:15] *** Joins: darksun (~darksun@user/darksun)
[22:10:35] *** Quits: yaw (~yiadom@37.228.233.226) (Ping timeout: 264 seconds)
[22:11:18] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[22:11:24] *** Joins: stats464_ (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:13:45] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[22:14:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[22:14:04] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:14:40] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[22:14:55] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[22:20:41] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[22:27:30] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:28:44] *** gizmo1 is now known as gizmo_
[22:29:29] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[22:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:45] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[22:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:38] *** Joins: Klinda (~superleag@user/klinda)
[22:32:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[22:33:09] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[22:34:35] *** Quits: jay-m1262 (~jay-m@154.72.161.113) (Ping timeout: 264 seconds)
[22:34:44] <deniska> They left, but I've heard oracle is giving away some free vps services
[22:35:05] *** Joins: y1n (~y1n@178.165.193.65.wireless.dyn.drei.com)
[22:36:15] *** Joins: jay-m1262 (~jay-m@129.0.204.216)
[22:39:37] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[22:39:41] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[22:41:16] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[22:42:43] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[22:44:12] *** Quits: y1n (~y1n@178.165.193.65.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[22:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[22:45:53] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[22:46:03] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[22:47:34] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[22:48:12] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Client Quit)
[22:48:14] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:48:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:50:18] *** Joins: fikran (~fikran@user/fikran)
[22:50:31] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:50:37] *** Quits: flyback (~flyback@2601:540:8201:1e60::5706) (Quit: Leaving)
[22:52:17] *** Quits: jay-m1262 (~jay-m@129.0.204.216) (Ping timeout: 264 seconds)
[22:52:18] *** Joins: flyback (~flyback@2601:540:8201:1e60::5706)
[22:54:03] *** Joins: Auron (~Auron956@user/auron)
[22:54:03] *** Joins: jay-m1262 (~jay-m@154.72.161.113)
[22:54:27] *** Quits: flyback (~flyback@2601:540:8201:1e60::5706) (Read error: Connection reset by peer)
[22:54:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[22:54:40] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[22:55:23] *** Quits: ub (~Thunderbi@77.119.216.214.wireless.dyn.drei.com) (Quit: ub)
[22:55:57] *** Joins: mistery (~mistery@96.59.174.9)
[22:56:18] *** Joins: daimbag (daimbag@2607:5300:60:21b::1)
[22:59:08] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[23:00:06] *** Joins: flyback (~flyback@2601:540:8201:1e60::5706)
[23:00:55] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 252 seconds)
[23:00:59] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[23:01:01] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:03:18] *** Joins: nomic (~nomic@185.217.117.88)
[23:03:19] *** Quits: Azin (~Azin@user/azin) (Read error: Connection reset by peer)
[23:04:26] *** Joins: Vonter_ (~Vonter@user/vonter)
[23:04:54] *** Joins: extropiator (~adam@user/extropiator)
[23:04:55] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:04:56] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[23:06:26] <be3uykpy> deniska, free?
[23:06:32] <be3uykpy> as in no creditcard required?
[23:06:50] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[23:08:37] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[23:08:43] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:09:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:10:07] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[23:11:47] *** Joins: ColonelJ (~ColonelJ@user/colonelj)
[23:12:01] *** Joins: Sabinno (~Sabinno@75.26.52.152)
[23:12:36] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[23:15:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:16:22] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:18:21] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:19:04] *** Quits: jay-m1262 (~jay-m@154.72.161.113) (Ping timeout: 252 seconds)
[23:19:14] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[23:19:59] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:21:57] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[23:22:05] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[23:24:00] <hrob> hi o/
[23:24:41] <mefistofeles> hello
[23:25:08] <hrob> Im forced to use mypy in a project Im taking part in - I'm on ubuntu 20.04 python 3.8  using venv --- mypy fails to install due to it seems a network timeout of some sort?
[23:25:10] <hrob> https://pastebin.com/8kxe3ype
[23:25:11] <infobob> https://bpaste.net/ZXVQ (repasted for hrob)
[23:25:35] *** Quits: Alleria (~textual@user/alleria) (Ping timeout: 264 seconds)
[23:26:27] <mefistofeles> hrob: Did you try again? is it happening everytime?
[23:27:41] *** Joins: Klinda (~superleag@user/klinda)
[23:28:23] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[23:28:34] *** Joins: eem (~eem@user/eem)
[23:30:15] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[23:30:23] *** Quits: extropiator (~adam@user/extropiator) (Ping timeout: 264 seconds)
[23:30:23] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Ping timeout: 256 seconds)
[23:30:35] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[23:30:37] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 252 seconds)
[23:30:56] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[23:31:28] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:35] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[23:32:03] <aphysically> wow ellipsis sentinel is impossible to type ;( (unless you're in 3.10)
[23:32:48] <mefistofeles> I guess they have real network issues :P
[23:33:26] *** Quits: stockholm (~Andreas@p200300d2c73c8700bdd703a4fcd50f3b.dip0.t-ipconnect.de) (Quit: Leaving)
[23:34:07] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Quit: Leaving)
[23:34:52] *** Joins: Azin (~Azin@user/azin)
[23:35:05] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:36:11] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:9899:c474:c3b6:1ce9) (Quit: Leaving)
[23:39:12] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[23:40:53] *** Quits: AM (~techman@82-203-162-39.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[23:40:56] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Ping timeout: 245 seconds)
[23:42:08] *** Joins: Haxxa (~Haxxa@122.199.45.224)
[23:42:15] <grym> aphysically: ...
[23:42:33] *** Joins: AM (~techman@82-203-162-208.bb.dnainternet.fi)
[23:43:16] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 265 seconds)
[23:44:22] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[23:44:27] *** Quits: mumixam (~m@user/mumixam) (Remote host closed the connection)
[23:44:57] *** Quits: Azin (~Azin@user/azin) (Quit: Leaving...)
[23:45:03] *** Quits: hudo__ (~hudo@62.68.20.210) (Quit: Leaving)
[23:45:07] <causa_sui> I'm building a module for a small cli tool with poetry. pyproject.toml has a version property. Is there some way the installed app can know its own version without me having to set the version somewhere else (and ensure they are kept consistent)?
[23:45:07] *** Quits: magla (~gelignite@55d43f3a.access.ecotel.net) (Quit: Stay safe!)
[23:45:12] *** Joins: lethu (~lethu@user/lethu)
[23:46:04] <dontyouloveshort> someone got an example on howto tell pytest to use a sqlite as db instead of the normal mariadbserver?
[23:46:21] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:46:31] *** Joins: georgios (~georgios@user/georgios)
[23:46:59] *** Joins: srhm (~srhm@user/srhm)
[23:51:00] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[23:52:34] *** Quits: Sabinno (~Sabinno@75.26.52.152) (Quit: Client closed)
[23:53:56] <SnoopJ> causa_sui, I've done this with `try: __version__ = importlib.metadata.version(__name__); except importlib.metadata.PackageNotFoundError: __version__ = "UNKNOWN"` in the resulting package's top-level __init__.py
[23:54:23] *** Quits: p-i- (~Ohmu@223.206.71.4) (Ping timeout: 264 seconds)
[23:55:02] *** Quits: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f) (Quit: System Rebooting..)
[23:55:29] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:55:40] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Quit:  HydraIRC -> http://www.hydrairc.com <- The alternative IRC client)
[23:55:53] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:55:55] *** Joins: kindablue (znc@2001:19f0:6001:175a:5400:3ff:fe51:d77f)
[23:56:09] *** Joins: extropiator (~adam@user/extropiator)
[23:56:36] *** Quits: Haxxa (~Haxxa@122.199.45.224) (Quit: Haxxa flies away.)
[23:59:03] *** Joins: Haxxa (~Haxxa@122.199.45.224)
