[00:00:01] *** Quits: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:02:02] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[00:03:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Client Quit)
[00:03:51] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[00:06:50] *** Quits: karlosz (~karlosz@5.9.160.72) (Quit: karlosz)
[00:10:52] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 245 seconds)
[00:17:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:17:43] *** Joins: qhong (~igloo@DN200ouhk.stanford.edu)
[00:24:42] *** Joins: karlosz (~karlosz@5.9.160.72)
[00:28:00] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:29:10] *** Quits: qhong (~igloo@DN200ouhk.stanford.edu) (Ping timeout: 252 seconds)
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:31:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:33:52] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Ping timeout: 244 seconds)
[00:36:49] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[00:40:46] *** Quits: karlosz (~karlosz@5.9.160.72) (Quit: karlosz)
[00:42:39] *** Joins: karlosz (~karlosz@5.9.160.72)
[00:48:49] *** Quits: karlosz (~karlosz@5.9.160.72) (Quit: karlosz)
[00:56:10] *** Joins: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de)
[01:01:42] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:04:42] *** Parts: khoa (~khoa@user/khoa) ()
[01:05:27] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:09:17] *** Quits: scymtym_ (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 245 seconds)
[01:11:56] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:19:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:21:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[01:21:17] *** Lord_of_Life_ is now known as Lord_of_Life
[01:27:21] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Remote host closed the connection)
[01:28:10] *** Joins: SystemFFan (~SystemFFa@188.70.6.7)
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:29:33] *** Joins: scymtym_ (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[01:30:34] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:ddf9:80b9:e2b8:78e1) (Ping timeout: 256 seconds)
[01:30:47] *** Quits: scymtym_ (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Client Quit)
[01:31:19] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[01:33:28] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:36:49] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[01:38:30] *** Quits: amb007 (~a_bakic@229.15.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[01:39:08] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[01:47:12] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:52:05] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:52:15] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:21:31] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[02:21:31] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[02:22:42] *** Joins: specbot (~specbot@common-lisp.net)
[02:23:19] *** Joins: minion (~minion@common-lisp.net)
[02:25:42] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[02:29:13] <hayley> All I need to know about CL21 is they removed ROOM because it was "useless".
[02:30:10] <hayley> No, actually I like opening another program to watch the heap usage of my program. And I'm fine without statistics on object counts and sizes.
[02:32:42] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:37:46] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:48:04] * aeth can't wait for CL22 next year
[02:48:05] *** Quits: frgo (~frgo@p200300deef0cee00243a9d25d68de739.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:48:29] * hayley thought it was for the 21st century.
[02:48:33] *** Joins: frgo (~frgo@p200300deef0cee00243a9d25d68de739.dip0.t-ipconnect.de)
[02:48:41] <hayley> I wonder how they got by in the 00's with no CL21 then.
[02:51:18] *** Joins: Oladon (~olad@98.43.81.226)
[02:55:53] *** Quits: markthom_ (~markthom_@2604:3d09:3e7e:e32e:3b:371e:5b3f:2887) (Quit: Client closed)
[02:56:16] *** Joins: markthom_ (~markthom_@2604:3d09:3e7e:e32e:3b:371e:5b3f:2887)
[03:03:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:03:32] <akater[m]> salt rock lamp: There are plenty of destructuring macros.  See `trivia` and other pattern-matching libraries.  Elisp has `pcase-let`.
[03:03:48] <White_Flame> I thought it was supposed to mean Common Lisp v2.1
[03:07:19] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[03:07:23] <moon-child> hmm, if we had cltl1 and cltl2, then does that mean dpans is ~cltl3?  So cl21 is actually out of date
[03:08:16] <hayley> CLtL 2 Episode 1
[03:17:22] *** Joins: Yehowshua (~Yehowshua@2601:c9:8000:14b8:8173:28f0:847f:4408)
[03:18:08] <Yehowshua> I'm trying to build a loop that runs a certain function and breaks if that function returns true.
[03:18:09] <Yehowshua> https://paste.debian.net/1209988/
[03:18:20] <Yehowshua> But it doesn't seem to be quite right
[03:19:38] <hayley> RETURN TOKEN probably should be in parentheses, i.e. (IF TOKEN (RETURN TOKEN))
[03:20:11] <moon-child> you can do that much mroe directly though
[03:20:28] <Yehowshua> more directly?
[03:20:29] <moon-child> (loop for tokenizer in tokenizers thereis (funcall tokenizer string-seq cursor))
[03:20:29] <Yehowshua> how?
[03:21:44] <Yehowshua> thx
[03:25:43] *** Quits: Yehowshua (~Yehowshua@2601:c9:8000:14b8:8173:28f0:847f:4408) (Quit: Client closed)
[03:31:04] *** Joins: icer (~eric@107-218-253-217.lightspeed.tukrga.sbcglobal.net)
[03:34:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[03:35:44] *** Quits: icer (~eric@107-218-253-217.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 244 seconds)
[03:36:08] *** Joins: icer (eric@gateway/vpn/protonvpn/icer)
[03:38:40] <dieggsy> thereis. i continue to learn new loop clauses
[03:38:59] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:39:40] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[03:39:59] <dieggsy> could you just use find-if for that too?
[03:42:13] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:42:31] <saltrocklamp[m]> <akater[m]> "salt rock lamp: There are plenty..." <- thanks i forgot about trivia
[03:43:38] <moon-child> dieggsy: you could 'just' use lambda and funcall, for everything
[03:54:36] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[03:54:49] *** Joins: montxero (~user@149.167.149.74)
[03:57:25] * moon-child idly wonders if #n=/#n# is turing-complete
[03:59:16] *** Quits: VincentVega (~user@212.241.16.18) (Ping timeout: 252 seconds)
[04:04:06] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[04:15:57] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 245 seconds)
[04:16:36] *** Joins: lad (~lad@user/lad)
[04:17:09] *** Joins: srhm (~srhm@user/srhm)
[04:17:25] *** Quits: icer (eric@gateway/vpn/protonvpn/icer) (Ping timeout: 252 seconds)
[04:24:31] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[04:28:23] <lad> My SLIME/Emacs integration seems wonky. I seem to get this message more often that I'd like: cond: Error: DEFINITION-SOURCE of function SOME-FUNCTION did not contain meaningful information.
[04:28:25] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[04:29:25] <lad> this is when I Use M-. to jump to a function definition
[04:29:59] <lad> sometimes it works, and then it ends up not. Also, it doesn't seem to work with definitions in the current file. le sigh
[04:31:10] *** Quits: SystemFFan (~SystemFFa@188.70.6.7) (Ping timeout: 240 seconds)
[04:31:27] *** Joins: igemnace (~ian@user/igemnace)
[04:33:01] <_death> that could happen if you redefine a function.. you need to compile the file to get the source locations
[04:36:29] <_death> I guess C-c C-c can also work in some cases
[04:36:59] *** Joins: khoa (~khoa@user/khoa)
[04:54:36] <lad> _death, thanks, that helps
[04:54:54] *** Joins: witchuer (uid515958@id-515958.charlton.irccloud.com)
[05:30:28] <raeda_> Is there a de facto collections library? I'm looking for a vector that automatically adjusts as I insert at the end
[05:30:50] <hayley> vector-push-extend?
[05:32:09] <raeda_> Nice, didn't know that was in the standard
[05:39:44] <pjb> raeda_: make-array :fill-pointer 0 :adjustable t ; vector-push-extend doesn't work if there's no fill-pointer, and won't work long if the array is not adjustable.
[05:42:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[05:46:03] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Quit: leaving)
[05:59:39] <dieggsy> moon-child: apologies, i meant no condescension, i guess i was just saying that was the first thing that came to mind for me
[06:00:50] <moon-child> :)
[06:01:46] <moon-child> I didn't think you were being condescending.  Now that I reread my own message, I think it may have come off as slighted; that was definitely not my intention
[06:09:30] <dieggsy> no worries. it's weird, I started off with elisp and then CL, so loop was very natural to me. Then I switched to scheme for years, and loop became the weird way. Now I'm doing both and re-learning my old ways, re-de-mystifying loop lol, but also learning a lot i never learned in the first place
[06:10:39] <moon-child> I recently ported an implementation of loop to scheme
[06:10:42] <moon-child> 'why not both?'
[06:11:13] <dieggsy> absolutely! moon-child mind sharing? chicken has an egg for it, but it's not a complete implementation
[06:11:36] <dieggsy> afaict at least
[06:11:52] <moon-child> https://github.com/moon-chilled/loop/
[06:12:27] <moon-child> so I ended up being very familiar with all the clauses and weird corners.  (loop for x in '(1 2 3) if (f x) collect it)
[06:12:50] <dieggsy> moon-chilled is an excellent username lol
[06:12:59] <dieggsy> woah, it?
[06:14:32] <dieggsy> keywords! great. that was also missing in the chicken impl heh
[06:15:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[06:15:30] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[06:15:43] *** Joins: montxero (~user@149.167.149.74)
[06:16:29] <moon-child> yeah.  I don't use them myself, but the scheme impl I use supports them so ¯\_(ツ)_/¯
[06:16:57] <dieggsy> boy is that a serious bit of code heh
[06:17:04] <dieggsy> I like to use the keywords for loop in CL
[06:17:25] <dieggsy> ....mostly for the syntax highlighting, which could/should just be handled by emacs when they're in loop and not keywords as well
[06:17:39] <dieggsy> but alas it isn't. maybe there's a package for that
[06:18:01] *** Joins: srhm (~srhm@user/srhm)
[06:19:10] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[06:25:47] <aeth> well
[06:25:56] <aeth> using CL keywords as LOOP keywords is clever
[06:26:07] <aeth> it also stands out more without syntax highlighting, e.g. IRC one liners
[06:26:29] <aeth> e.g. (loop :for i :from 0 :below 10 :collect i) vs (loop for i from 0 below 10 collect i)
[06:27:53] <moon-child> I don't think I have any special highlighting for loop keywords, and I don't have any trouble reading them.  I find it harder with the keywords, because they break up the flow of the text
[06:29:20] <dieggsy> aeth: right, that's what i normally do
[06:34:43] *** Joins: srhm (~srhm@user/srhm)
[06:38:09] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:48:06] *** Joins: john__ (~john@dynamic-095-117-104-039.95.117.pool.telefonica.de)
[06:50:11] *** Joins: srhm (~srhm@user/srhm)
[06:50:52] *** Quits: gaqwas (~john@dynamic-077-002-189-054.77.2.pool.telefonica.de) (Ping timeout: 252 seconds)
[06:54:16] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[06:57:47] *** Joins: srhm (~srhm@user/srhm)
[06:59:40] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:00:05] *** Joins: srhm (~srhm@user/srhm)
[07:00:10] *** Quits: silasfox (~sbv@2001-4dd6-4b95-0-383d-e94d-aa82-1e8f.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[07:00:28] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[07:11:14] <hayley> Another slightly esoteric question: if one wants to show off their multithreaded Java implementation, they might use SpecJBB results. Are there any similar tests for Common Lisp?
[07:12:13] <hayley> I wouldn't mind porting code, but I am not aware of any CL benchmarks which use parallelism.
[07:13:30] <moon-child> I wonder how hard it would be to make a compiler from jvm bytecode to cl (probably not very)
[07:13:44] <moon-child> and how well the performance of the resulting code would reflect the performance of th eimplementation at regular code (no idea)
[07:15:36] <hayley> If you are asking, no I am not going to pay the US$1,650 for SPECjbb 2015. Apparently they want another $7.69 to be able to download it from their servers again. Sheesh.
[07:17:07] <hayley> Though they implemented Java in Self once, with some minor hacking to the VM (probably double floats?) and it was the fastest Java then.
[07:19:36] <hayley> https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.22.1089&rep=rep1&type=pdf
[07:20:31] <markthom_> lol, really?
[07:22:30] <hayley> Yes. Though the other problem was that the Self VM doesn't expose goto, only structured control flow.
[07:31:39] <beach> Good morning everyone!
[07:47:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[07:55:13] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:55:20] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[07:57:11] *** Joins: aeth (~aeth@user/aeth)
[08:08:25] *** Joins: semz (~none@user/semz)
[08:33:20] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Ping timeout: 244 seconds)
[08:33:22] *** Joins: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com)
[08:44:06] *** Joins: Skyfire (~pyon@user/pyon)
[08:47:42] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[08:55:18] <lotuseater> Good morning from me, too.
[08:56:03] *** Joins: Oladon (~olad@98.43.81.226)
[09:12:35] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[09:17:23] <hayley> While horrendously unscientific, I suppose running Hunchentoot with some stress test program is close enough to a benchmark of parallel CL code.
[09:24:23] <dieggsy> is there by random chance some convenience function/macro in allegro that would allow me to run lisp code in a separate lisp process (i.e. not a thread)? Something like emacs's async package
[09:25:19] <dieggsy> or should i just write it myself with existing external command functions + input/argument munging
[09:25:46] <hayley> Forgive me for asking, why do you want it in another process?
[09:27:09] <dieggsy> *no-defun-allowed*: the code i want to run in it isn't my own and builds a bunch of packages and does some weird things i don't want changing the state of the current image
[09:27:48] <hayley> Strange code then. But I can't think of any convenience function for the problem, no.
[09:29:40] <dieggsy> *no-defun-allowed*: oh it's extremely strange code jaja. the situation is kind of "this is an absolute abomination, don't fight it, find ways to make it better veeeeery slowly in baby steps"
[09:34:15] <hayley> Okay, I hit a snag with my benchmark idea. I can make latency due to GC and whatever else arbitrarily bad by overloading the server, so there needs to be some "standard" way to pick a load amount.
[09:35:40] <hayley> What if, say, I took the maximum throughput, then ran the system at 75% load to get latency figures?
[09:42:27] *** Joins: silasfox36 (~silasfox@xdsl-85-197-57-82.nc.de)
[09:42:34] *** Quits: silasfox36 (~silasfox@xdsl-85-197-57-82.nc.de) (Client Quit)
[10:03:57] <dieggsy> *no-defun-allowed*: lol, i think i just found out a way to do away with all the weird code alltogether. with more abominable code, but way cleaner. place your bets on whether they'll accept it heh
[10:04:10] <hayley> Do I want to know who "they" are?
[10:05:19] <dieggsy> just my team
[10:05:20] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:06:29] <dieggsy> it's essentially just exporting all symbols from a package (i know, i know lol). but they're doing it in an extremely roundabout way by inserting symbols into the defpackage file. i figured if you're going to do that anyway... why not just iterate and do (export symbol) within the package itself as a last build step
[10:07:00] <dieggsy> now yes, ideally we'd just keep track of what symbols we want to export, but that's never going to happen so lol
[10:07:14] <dieggsy> well, who knows
[10:29:02] *** Joins: shka (~herr@109.231.62.239)
[10:53:07] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:55:02] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[10:55:28] *** Joins: amb007 (~a_bakic@90.15.23.93.rev.sfr.net)
[11:01:37] *** Joins: rgherdt (~rgherdt@ip5f5af1eb.dynamic.kabel-deutschland.de)
[11:05:01] *** Quits: rgherdt (~rgherdt@ip5f5af1eb.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[11:24:51] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:27:10] *** Quits: amb007 (~a_bakic@90.15.23.93.rev.sfr.net) (Ping timeout: 240 seconds)
[11:27:41] *** Joins: amb007 (~a_bakic@144.36.22.93.rev.sfr.net)
[11:35:08] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[11:48:14] *** Quits: amb007 (~a_bakic@144.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:48:35] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:58:30] *** Joins: pve (~pve@178-55-196-182.bb.dnainternet.fi)
[12:02:12] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[12:04:55] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[12:06:27] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:21:54] *** Joins: heisig (~heisig@p508b531b.dip0.t-ipconnect.de)
[12:32:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:34:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:55:10] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Ping timeout: 240 seconds)
[13:50:09] *** Quits: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[13:50:33] *** Joins: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com)
[13:59:10] *** Quits: yitzi_ (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[14:16:43] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[14:16:57] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[14:23:00] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[14:27:47] *** Quits: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa) (Ping timeout: 240 seconds)
[14:47:20] *** Joins: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa)
[14:48:06] *** Quits: frgo (~frgo@p200300deef0cee00243a9d25d68de739.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:48:33] *** Joins: frgo (~frgo@p200300deef0cee007cf7494187de1fef.dip0.t-ipconnect.de)
[14:50:30] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 244 seconds)
[14:54:41] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:04:46] *** Quits: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa) (Ping timeout: 252 seconds)
[15:08:36] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:09:23] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:11:36] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:13:34] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 252 seconds)
[15:15:51] *** Joins: amb007 (~a_bakic@144.36.22.93.rev.sfr.net)
[15:18:37] *** Joins: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa)
[15:22:22] *** Quits: amb007 (~a_bakic@144.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:23:33] *** Joins: amb007 (~a_bakic@144.36.22.93.rev.sfr.net)
[15:33:44] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Read error: Connection reset by peer)
[15:33:58] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[15:48:10] *** Quits: amb007 (~a_bakic@144.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:49:03] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:52:24] *** Joins: santiagopim (~user@90.167.66.93)
[15:57:13] *** Joins: keir (~keir@user/keir)
[16:02:32] *** Joins: random-nick (~random-ni@87.116.183.125)
[16:08:49] *** Joins: scymtym (~user@ip6-2001-638-504-20d4-1000-0-0-4.VPN.Dyn.CIT-EC.NET)
[16:10:56] *** Joins: yitzi (~yitzi@97-64-230-163.client.mchsi.com)
[16:21:46] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[16:23:08] <pjb> semz: the point of that is making cl21 closer to python or ruby.  Pure idiocy: if you want python or ruby and never know if your vector is freshly allocated or an immutable literial, just use puthon or ruby!
[16:33:28] <edgar-rft> ...and what if I never want to know python or ruby?
[16:36:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[16:36:46] <pjb> edgar-rft: then don't consider cl21; stay with ANSI-CL.
[16:48:37] <edgar-rft> maybe it's because I never considered cl21 that I don't know python or ruby
[16:50:16] *** Joins: slyrus_ (~slyrus@192-184-223-165.static.sonic.net)
[16:50:17] *** Quits: slyrus (~slyrus@192-184-223-165.static.sonic.net) (Ping timeout: 250 seconds)
[16:50:35] <shka> make libs
[16:50:38] <shka> duh
[16:53:18] *** Joins: tfeb (tfb@gateway/vpn/protonvpn/tfb)
[16:56:22] *** Joins: slyrus (~slyrus@192-184-223-165.static.sonic.net)
[16:57:36] *** Quits: slyrus_ (~slyrus@192-184-223-165.static.sonic.net) (Ping timeout: 244 seconds)
[17:07:10] *** Joins: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it)
[17:19:18] *** Quits: tfeb (tfb@gateway/vpn/protonvpn/tfb) (Remote host closed the connection)
[17:20:39] *** Joins: Bike (~Glossina@71.69.170.70)
[17:20:39] *** ChanServ sets mode: +o Bike
[17:33:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:36:02] *** Quits: heisig (~heisig@p508b531b.dip0.t-ipconnect.de) (Quit: Leaving)
[17:37:35] *** Quits: jhi (sid81469@tooting.irccloud.com) ()
[17:37:51] *** Joins: jhi (sid81469@id-81469.lymington.irccloud.com)
[17:40:42] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:45:42] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:46:18] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:53:40] *** Joins: makomo (~makomo@user/makomo)
[17:55:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:55:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[17:56:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:06:51] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[18:09:02] *** Quits: lad (~lad@user/lad) (Ping timeout: 256 seconds)
[18:11:14] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:22:10] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:01] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:39:49] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:44:28] <dieggsy> Is there a way to ensure an asdf system component is built last short of specifying all others as dependencies ?
[18:44:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[18:45:18] <dieggsy> or is the right way to do this to define a new system depending on the last and load that
[18:46:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:47:07] <lisp123> You can use :serial t
[18:47:15] <lisp123> and then place it at the end of your component list
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:34] <Bike> i mean, yeah, if building something depends on everything else already being built, the everything else are dependencies.
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:48:01] <dieggsy> lisp123: oh, that's awesome
[18:50:16] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 252 seconds)
[18:51:49] <lisp123> dieggsy: Great, let us know if any issues. I believe best practices says to avoid doing :serial t, but I see a lot of people doing it
[18:52:38] <lisp123> (with :serial t, its a little bit unclear on which dependencies are required for each file - the option simply tells to load in the order specified)
[18:53:19] <Bike> it's not unclear. what :serial t does it make it so that each component depends on each of the components before it.
[18:53:21] <dieggsy> lisp123: it wouldn't be necessary if we followed best practices anyway heh, it's just to alleviate an already messy situation. it should be fine, since i really do need just one file to be loaded last
[18:54:44] <lisp123> Bike: Yes that's true :) But if you have (in order) A, B, C and C & B both depend on A only, then that wouldn't be clear as one can only assume that C depends on A and/or B (or nothing)
[18:54:59] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[18:55:15] <Bike> oh, you just mean in an abstract way, not asdf actually does. sure.
[18:55:20] <lisp123> I find it annoying having to put all the :depends-on, but apparently its best practice
[18:55:46] <Bike> it helps with the parallel compilation systems that sort of exist.
[18:55:56] <Bike> if all the dependencies are serial, you can't build any of them in parallel.
[18:55:58] <lisp123> Oh yes, sorry, wasn't as clear originally
[18:56:14] <lisp123> Ah so that's the reason why it says its sometimes slower to use :setial t
[18:56:40] <lisp123> dieggsy: Great, (ignore me btw, I just wanted to give some additional color, but not important in the grand scheme of things)
[18:56:53] <dieggsy> lisp123:
[18:56:59] <dieggsy> whoops. eh, i appreciate the note regardless
[18:57:08] <lisp123> Great :)
[18:57:40] <dieggsy> i've recently had to do a good bit of "by the way, we shouldn't be doing this in the first place, but if we do want to do this, there's a slightly better way"
[18:57:44] <dieggsy> usually leaving out the first part
[18:58:19] <lisp123> After all, rules are meant to be broken ;) :P
[18:58:22] <dieggsy> so it's good to hear about standards and best practices for my own sanity as well lol
[18:58:25] <jmercouris> No, rules are not meant to be broken
[18:58:29] <lisp123> loll
[18:58:31] <jmercouris> rules are actually meant to be followed
[18:58:34] <jmercouris> otherwise they wouldn't be rules
[18:58:46] <dieggsy> lmao  we're programmers, rules literally must be followed eh
[18:59:38] <lisp123> jmercouris: While you are here, do you think its possible to build GUI apps in the future with Nyxt's framework?
[19:00:00] <lisp123> I was thinking of going down the Electron route, but then I wondered if it would be possible
[19:01:12] *** Joins: woozong (~user@212.239-245-81.adsl-dyn.isp.belgacom.be)
[19:01:13] *** Joins: VincentVega (~user@212.241.16.18)
[19:03:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:18:31] <jmercouris> lisp123: yes, in fact it is
[19:18:54] *** Quits: yitzi (~yitzi@97-64-230-163.client.mchsi.com) (Quit: Leaving)
[19:19:02] <jmercouris> You can look at Nyxtmuch for an example, notmuch written for Nyxt
[19:19:58] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Ping timeout: 252 seconds)
[19:21:56] <lisp123> jmercouris: Great, thanks, will have a look
[19:23:54] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[19:27:16] <jmercouris> :-)
[19:28:38] *** Quits: lukego (sid312033@id-312033.tooting.irccloud.com) ()
[19:28:53] *** Joins: lukego (sid312033@id-312033.lymington.irccloud.com)
[19:28:56] *** Quits: markthom_ (~markthom_@2604:3d09:3e7e:e32e:3b:371e:5b3f:2887) (Quit: Client closed)
[19:28:58] *** Joins: lisp123_ (~lisp123@45.86.202.23)
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:32:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[19:36:00] *** Joins: markthom_ (~markthom_@2604:3d09:3e7e:e32e:3b:371e:5b3f:2887)
[19:38:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[19:40:56] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[19:44:14] *** Quits: woozong (~user@212.239-245-81.adsl-dyn.isp.belgacom.be) (Ping timeout: 252 seconds)
[19:44:56] *** Joins: tfeb (~tfb@88.98.95.237)
[19:46:19] *** Joins: cosimone (~user@93-47-230-75.ip115.fastwebnet.it)
[20:00:19] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[20:04:25] *** Quits: micro (~micro@user/micro) (Ping timeout: 248 seconds)
[20:05:18] *** Joins: micro (~micro@user/micro)
[20:06:10] *** Quits: lisp123_ (~lisp123@45.86.202.23) (Ping timeout: 240 seconds)
[20:38:24] *** Joins: karlosz (~karlosz@5.9.160.72)
[20:39:35] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[20:40:38] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[20:44:40] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 240 seconds)
[20:44:55] *** Joins: amb007 (~a_bakic@160.36.22.93.rev.sfr.net)
[20:47:18] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:56:25] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[20:58:28] *** Quits: amb007 (~a_bakic@160.36.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[20:59:04] *** Joins: amb007 (~a_bakic@226.132.22.93.rev.sfr.net)
[21:02:49] *** Quits: cosimone (~user@93-47-230-75.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[21:05:38] *** Quits: amb007 (~a_bakic@226.132.22.93.rev.sfr.net) (Ping timeout: 252 seconds)
[21:06:13] *** Joins: lad (~lad@user/lad)
[21:06:30] *** Joins: amb007 (~a_bakic@69.14.23.93.rev.sfr.net)
[21:08:13] <kagevf> jmercouris: what's nyxtmuch? couldn't ddg it ...
[21:25:04] <jmercouris> kagevf: https://github.com/atlas-engineer/nyxt/issues/1190
[21:31:33] <etimmons> borodust: do you think this change would help claw/libresect work on SBCL? https://github.com/sbcl/sbcl/commit/54cd65a7fc8d5038bb4e6cb8b0285898df822779
[21:32:17] <kagevf> ohhh, it's a play on "not much" emails ... like the opening quote too :)
[21:37:35] *** Quits: karlosz (~karlosz@5.9.160.72) (Quit: karlosz)
[21:37:54] *** Joins: karlosz (~karlosz@5.9.160.72)
[21:40:03] <kagevf> jmercouris: wow interesting thread :)
[21:40:28] <jmercouris> Indeed
[21:44:38] *** Quits: amb007 (~a_bakic@69.14.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:44:58] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:46:23] *** Quits: karlosz (~karlosz@5.9.160.72) (Quit: karlosz)
[21:47:30] <Fade> what happens when you obviate greenspun's tenth by delivering the application in lisp to begin with?
[21:48:01] <Fade> is zawinski's law a corrolary? :)
[21:54:10] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 240 seconds)
[21:54:49] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[21:59:28] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[22:00:15] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:01:16] *** Joins: Oladon (~olad@98.43.81.226)
[22:03:52] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net)
[22:05:54] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Ping timeout: 256 seconds)
[22:07:46] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:07:48] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[22:08:52] <borodust> etimmons: hmm, this is indeed might help, although i'm not actually sure what exactly was the reason in the first place ;p
[22:09:07] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Client Quit)
[22:10:47] <borodust> although it seems one would need to recompile sbcl to use this change which is actually won't help, cuz i can't ask usesrs to compile sbcl from scrach just to use claw ;p
[22:11:21] <borodust> or
[22:12:56] <borodust> yeh, it seems so
[22:14:57] <borodust> but it is certainly a nice thing, cuz maybe that's another step to allow running sbcl on android natively
[22:17:19] <etimmons> yeah, but I always compile my own SBCL anyways, so I can just change that signal and be able to use claw it sounds like :)
[22:17:25] *** Joins: silasfox (~sbv@p200300cec704065cdb41befe26522709.dip0.t-ipconnect.de)
[22:19:27] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net) (Ping timeout: 256 seconds)
[22:21:24] <borodust> etimmons: pls let me know if this actually helps, i might as well just go this route
[22:22:07] <etimmons> I will let you know when I give it a try!
[22:23:54] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[22:31:23] *** Joins: ec__ (~ec@gateway/tor-sasl/ec)
[22:32:32] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 256 seconds)
[22:33:39] <pjb> Fade: exactly. Zawinski's.
[22:34:32] <hendursaga> jmercouris: nyxtmuch will be integrated into Nyxt proper or as an addon..?
[22:35:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:36:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:36:17] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:36:41] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:37:09] *** Quits: ec__ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:37:37] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[22:38:38] *** Joins: amb007 (~a_bakic@69.14.23.93.rev.sfr.net)
[22:40:51] *** Joins: scymtym_ (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[22:41:53] *** Quits: scymtym (~user@ip6-2001-638-504-20d4-1000-0-0-4.VPN.Dyn.CIT-EC.NET) (Ping timeout: 252 seconds)
[22:53:53] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Quit: WeeChat 3.0.1)
[22:53:59] *** Joins: ec__ (~ec@gateway/tor-sasl/ec)
[22:55:37] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[23:12:04] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 252 seconds)
[23:15:30] *** Quits: ec__ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:20:44] *** Joins: ec__ (~ec@gateway/tor-sasl/ec)
[23:21:11] <jmercouris> Hard to say, perhaps as an addon
[23:33:11] *** Quits: amb007 (~a_bakic@69.14.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[23:33:46] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[23:35:39] *** Quits: ec__ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:40:28] *** Joins: ec__ (~ec@gateway/tor-sasl/ec)
[23:40:55] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[23:50:36] *** Quits: ec__ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:53:16] *** Quits: dbotton (sid492350@id-492350.tooting.irccloud.com) ()
[23:53:32] *** Joins: dbotton (sid492350@id-492350.lymington.irccloud.com)
[23:55:17] *** Joins: ec__ (~ec@gateway/tor-sasl/ec)
[23:55:39] <borodust> etimmons: thanks!
[23:56:47] *** Joins: z3t07 (~z3t0@107-159-3-27.on.dsl.ebox.net)
[23:57:39] *** Quits: z3t0 (~z3t0@107-159-7-145.on.dsl.ebox.net) (Ping timeout: 244 seconds)
[23:57:39] *** z3t07 is now known as z3t0
[23:58:59] *** Joins: karlosz (~karlosz@5.9.160.72)
