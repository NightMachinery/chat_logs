[00:00:07] <varrg> only way I can think of is calling next(), haven't tried it yet though. FilterIterator is exactly what I need with its accept() method, but I can't see how it works
[00:00:27] <varrg> I tried reading the source in C, but I'm not familiar with php source and it's a lot to take in
[00:00:48] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[00:01:22] <judah> So, pro tip, you can call $this->next() from within current()
[00:01:34] <judah> No idea if its "best practice" but I have done that in the past to skip over bad elements
[00:01:39] *** Joins: put_in (~put_somew@113.173.227.246)
[00:01:51] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[00:03:01] *** Joins: de-facto (~de-facto@user/de-facto)
[00:03:03] <varrg> https://3v4l.org/lCOSd#v8.1.0 seems to do the trick
[00:03:32] <varrg> So, current() returns null for invalid elements. And so behind the scene, foreach is checking for some nullish return and skips it?
[00:03:56] <varrg> I'd assume it would print NULL in the loop
[00:05:14] <varrg> actually, my code will call $this->next(), then move out of the condition and return parent::current(), ah yes. It has changed position... right!
[00:06:24] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[00:06:36] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[00:06:42] <varrg> judah, it won't work with 2 adjacent invalid keys: https://3v4l.org/MGjNn#v8.1.0
[00:07:42] <varrg> I guess it's the parent::current() in current(), it will always yield the following item after an invalid one. Tried returning null, but it won't have it: https://3v4l.org/mHq51#v8.1.0
[00:07:51] *** Quits: guido (~guido@host-79-53-249-131.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[00:07:55] <varrg> Sorry: up2date: https://3v4l.org/6ZI7M#v8.1.0
[00:08:26] <varrg> Scratch that, first link is correct. Confused myself
[00:10:00] *** Joins: guido (~guido@host-87-21-248-238.retail.telecomitalia.it)
[00:12:13] <varrg> judah, yes, recursion, of course: https://3v4l.org/7f5Od#v8.1.0 now it works!
[00:12:43] <judah> Woo! Glad its working :D
[00:12:51] <judah> I was tinkering with it myself but you got there faster
[00:12:54] <varrg> difficult to tell if I messed something up by calling the iterator methods inside iterator methods..
[00:13:31] *** Joins: GreyXor (~GreyXor@37.171.232.97)
[00:16:04] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[00:16:10] *** Joins: thiras_ (~thiras@user/thiras)
[00:17:19] <varrg> Thanks for helping judah. I will put this to test and see if it blows up
[00:17:49] <judah> Just remember, cool people dont look at explosions
[00:18:10] <judah> happy to give it a peek though
[00:18:23] *** Quits: GreyXor (~GreyXor@37.171.232.97) (Client Quit)
[00:27:24] <put_in> is there a native FTP class in PHP? like PDO for databases, all I found was a connection object for the FTP resource
[00:30:16] *** AmyMalik is now known as Reinhilde
[00:30:35] <stenno> https://www.php.net/manual/en/book.ftp.php ?
[00:30:45] <da_wunder> ^
[00:31:19] <stenno> seems it has to be enabled during compile time
[00:32:36] <da_wunder> or use eg. https://github.com/thephpleague/flysystem
[00:33:03] <da_wunder> there is FTP adapter - https://flysystem.thephpleague.com/v2/docs/adapter/ftp/
[00:33:08] <relipse> Do most senior developers develop with: declare(strict_types=1); on?
[00:33:35] <Albright> relipse: I'd say it depends more on the project than the developer.
[00:34:09] <Albright> If you're starting a new project and either not using a library or using a very up-to-date one, I'd say enable it. it can only help.
[00:35:50] <judah> +1 to flysystem
[00:36:31] <judah> relipse, I absolutely do. I would prefer it to be the default and have declare(buggy_code=1) be the exception, but this is what we got
[00:36:33] <stenno> or use sftp over ssh :)
[00:37:27] <da_wunder> stenno: I think that flysystem covers that too...
[00:37:31] <judah> Unpopular opinion: I firmly believe that PHP "Editions" should have been a thing. Nightmare to maintain maybe, but I think the people who want buggy code should have buggy code and everyone else can move on with their life
[00:38:22] <stenno> being ruthlessly backward-comp breaking would be a thing
[00:38:26] <stenno> it would be like python 3000
[00:38:45] <stenno> or perl 6
[00:40:39] <judah> Maybe PHP should go the route kinda like EcmaScript. You can declare that you are using ES5, ES6, whatever. Then just have an interpreter backport what you are trying to accomplish to the lowest you are willing to support
[00:40:47] <put_in> stenno: yes thank you :) but i dont see any class there apart from FTP\Connection
[00:41:26] <put_in> isn't that just that PHP is using an object instead of a resource for the connection?
[00:42:22] <put_in> i am using PHP 8.1 with --enable-ftp compiled
[00:42:39] <stenno> judah: you mean like babel?
[00:43:13] <judah> stenno, exactly like babel. Imagine being able to write modern and secure code, but still be able to support WordPress. So many possibilities
[00:43:20] <AllenJB> People can have buggy, vulnerable code now. There's tons of options to allow running multiple PHP versions now - PHP-FPM, Containers, etc. And Rector and other tools can "backport" code.
[00:43:42] <da_wunder> put_in: I really recommend you to use that flysystem library
[00:46:45] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[00:49:38] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[00:50:43] *** Quits: pmercado (~pmercado@186.107.34.136) (Ping timeout: 256 seconds)
[00:50:58] <relipse> is there a benefit to doing this: filter_has_var(INPUT_GET, 'id'); instead of just this: isset($_GET['id'])
[00:51:44] <relipse> other than the fact that the $_GET array may be modified
[00:55:14] <__adrian> no. though filter_var(), with the FILTER_VALIDATE_* filters, can be quite useful
[00:57:00] <relipse> i have this feeling that upper level programmers use the filter_var()'s a lot
[00:57:28] <__adrian> probably not really. they're underutilized
[00:57:34] <__adrian> ime
[00:58:48] <relipse> i have rarely used them
[00:59:09] *** Joins: keypusher (keypusher@user/keypusher)
[01:02:18] <judah> I only use them if I am trying to impress a recruiter who doesnt know better
[01:05:28] *** Joins: onichomp (~onichomp@2806:264:4404:8241:2856:9f40:5f12:9565)
[01:09:27] <relipse> right
[01:11:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30)
[01:16:26] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30) (Ping timeout: 260 seconds)
[01:18:39] <varrg> I just typecast shit to int, no injecting left
[01:18:52] <__adrian> no
[01:18:54] <relipse> please no cursing
[01:18:57] <relipse> family friendly
[01:19:11] <relipse> !rules
[01:19:15] <__adrian> that's also true, but more importantly, no.
[01:19:25] <varrg> relipse, got it!
[01:19:30] <relipse> yo rock
[01:19:34] <relipse> you~
[01:19:56] <relipse> typecasting to int was always a quick way to prevent sql injection
[01:20:00] <varrg> __adrian, well, if it's all you need, it's a quick and safe way to handle user data
[01:20:18] <varrg> but I reckon nowdays, even ids are base64, so can't typecast that
[01:20:32] <__adrian> no, it's not necessarily. also it leaves 0's everywhere. sql injection is solved by using parameters, full stop.
[01:21:05] <relipse> the best programmers use prepared statements
[01:21:10] <relipse> or the compentant ones rather
[01:21:16] <relipse> competant~
[01:21:30] <__adrian> s/best/reasonably competent/
[01:21:35] <stenno> i learned very late that 'prepared statements' are actually a thing on database level
[01:21:41] <__adrian> yep
[01:21:51] <stenno> i thought it was just concerning escaping
[01:21:51] <relipse> i was around when mysql_functions were
[01:22:27] <varrg> I began with mysql_query(SELECT * FROM) then processed the whole table with php :D
[01:22:37] <varrg> that's why I never taught myself sql
[01:23:16] <varrg> that's one way to prevent injections though
[01:23:30] <relipse> yeah now adays learning good sql before processing in php is the way to go
[01:23:36] <judah> Ha, glad to know im not alone. I figured I could just grab what data I needed and sort it out in PHP, with only minimal "where" clauses in the queries
[01:23:37] <__adrian> "don't learn sql" is not a good way to prevent injections
[01:24:12] <varrg> you can't inject if you can't inject at anything at all
[01:24:18] <relipse> $fv = filter_var('aBc!+@gma+il.com', FILTER_VALIDATE_EMAIL);
[01:25:33] <varrg> relipse, about email verification, I read an article a long time ago. It stated email verification is a hassle, just send them a verification link in a mail, if it's used - the email was valid
[01:25:51] <relipse> haha i used to only check for an @ sign since it is so complex
[01:25:57] <stenno> proper email validation is almost impossible
[01:25:59] <relipse> and sdo what you said
[01:26:11] <stenno> without reasonable effort
[01:26:29] <relipse> filter_var('aBc!+@gma+il.com', FILTER_VALIDATE_EMAIL); is not too much effort stenno, are you saying that function is broke?
[01:26:30] <stenno> which probably introduces more problems than it solves
[01:26:56] <biberu> varrg o/
[01:27:03] <varrg> \o
[01:27:14] <AllenJB> According to the docs, FILTER_VALIDATE_EMAIL uses RFC822, which is obsolete, twice over. I usually only validate as far as /^.+@.+\..+$/
[01:27:23] <stenno> ^
[01:27:27] <__adrian> relipse: it's ok for most cases, but (like any regex-based solution) there are some valid emails it won't validate and vice versa
[01:27:30] <stenno> this is exactly the sensible approach
[01:27:39] <biberu> AllenJB: that will block valid addresses
[01:27:40] <relipse> tha'ts lame, i thought filter_var() was all the rage
[01:27:57] <varrg> relipse, it's good for other validations
[01:28:02] <biberu> AllenJB: someone@tld
[01:28:02] <relipse> i'll just continue checking for an @ sign
[01:28:16] <stenno> biberu: the people getting blocked for that must be well aware of that fact that their email is exotic
[01:28:19] <AllenJB> Also, the "send them an email" (and record the link click) will confirm that the email address belongs to someone who wants to receive your emails.
[01:28:32] <stenno> and probably cannot login to a lot of other places
[01:28:43] <biberu> stenno: they shouldn't have to be blocked at all
[01:28:44] <relipse> yeah AllenJB but nice to stop that on the client side, and then on the server side
[01:29:00] <TinoDidriksen> There are no used-in-the-wild addresses that will fail /^.+@.+\..+$/
[01:29:07] <varrg> just do input type=email, and let the browser devs handle it
[01:29:34] <relipse> right varrg
[01:29:35] <AllenJB> biberu: Yeah yeah, but the likelihood of someone who's not using that just to be a pain wanting to register on your site is basically zero.
[01:29:44] <stenno> browser devs hate the new input types
[01:30:04] <relipse> the date ones can be annoying and cumbersome
[01:31:18] <stenno> styling and user interface of the new input types like email and number are not standardized so they differ from browser to browser
[01:31:34] <AllenJB> varrg: An malicious user can bypass any client side checks. You _always_ do some checks server-side too
[01:31:50] <relipse> i think he knows that allen
[01:31:52] <TinoDidriksen> gTLDs are not allowed to have MX records. ccTLDs may, but that's not used in the wild.
[01:31:57] <stenno> ^ client side validation is always just a convenience
[01:32:03] <varrg> AllenJB, not for email in my opinion.
[01:32:12] <relipse> client side validation is amazing
[01:32:19] <relipse> every site should use client side
[01:32:25] <relipse> it prevents a page reload
[01:32:30] <relipse> which can be a huge hassle
[01:32:46] <stenno> yes, a convenience
[01:32:55] <relipse> yep
[01:34:41] <varrg> what's a name for a list of already visited nodes?
[01:34:53] <varrg> thought of using cache, but it's not for storing, just to avoid visiting again
[01:34:59] <biberu> TinoDidriksen: i may be misremembering because it's been a long time, but i'm pretty sure i encountered that in the wild myself
[01:35:22] <biberu> TinoDidriksen: for a cctld
[01:35:49] * CoJaBo just spent ~3 hours adding error-checking to one of our tools, to ensure that the STDOUT isn't redirected to an inappropriate place thus causing substantial chaos
[01:37:56] <varrg> I'll go with accumulator
[01:38:21] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[01:38:27] <__adrian> ...why not "visited" ?
[01:39:09] <varrg> fine for local vars, but this is a constructor parameter, I'd rather have it sound more fancy
[01:39:24] <biberu> varrg: besoekta?
[01:39:36] <varrg> haha
[01:39:54] <varrg> brings back memories from college
[01:39:55] <biberu> seriously though, make it obvious, not fancy
[01:40:26] <__adrian> fancy = nonobvious
[01:40:29] <varrg> well, accumulator is a standard word in programming from reduce(), so it should sit nicely
[01:40:52] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[01:40:56] <__adrian> yes. also not the specific thing you're actually doing
[01:41:16] <__adrian> (so far as i've understood it)
[01:41:46] <mithrin> Hello. I am compiling php from source - is there a way to find out with which flags php that is installed via apt-get install php was configured before compilation?
[01:41:47] <varrg> maybe. $accumulator = list of already visited nodes
[01:42:12] <biberu> i'd just call that visited
[01:44:25] <__adrian> it's things you've chosen to keep
[01:44:54] <__adrian> it doesn't mean you've "visited" them (you could have blindly decided to keep them), and it doesn't mean there aren't things you _did_ visit elsewhere
[01:45:24] <varrg> yeah, that's true. I'll hear you and go with visited in the meantime
[01:46:14] <varrg> but now it's a callable that checks for existence in the list. maybe $hasVisited is better then
[01:46:27] <varrg> I don't like camelcase though
[01:47:19] <__adrian> protected array $visited = []; public function hasVisited(string $name) : bool { return isset($this->visited[$name]); }
[01:47:56] <__adrian> re: camelcase: whatever; codestyle
[01:48:08] <__adrian> it's pretty mainstream nowadays tho  ;)
[01:48:15] <varrg> yeah. Now that you paste that exact code there. For a list that will only ever be checked for existence, should I do like that, or add items as values and use in_array() ?
[01:48:38] <varrg> I figure hash lookup is faster, but it looks funky to use like ['foo' => 'foo', 'bar' => 'bar']
[01:49:01] <__adrian> again, i'm not totally clear on your requirements, but note that that's substantially different behavior. everything i've seen so far implies it's the key that matters
[01:49:13] <__adrian> *has implied
[01:49:28] <__adrian> so, tl;dr: do the one that's the thing you need to do
[01:49:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:49:39] <varrg> yeah, it's a list of keys, but at the moment I add them as values and check with in_array
[01:49:57] <__adrian> ah
[01:50:16] <varrg> I only need a Set and Set::has, so there's never a key and value
[01:50:22] <varrg> nor is there order
[01:50:28] <__adrian> so, (a) yes, isset is faster. (b) this difference is not all that likely to matter.
[01:50:51] <__adrian> if you need a set, https://php.net/ds-set
[01:51:05] <varrg> yeah, list will be added to in a loop, all at once. And list will be like a 100 items
[01:51:14] <__adrian> 100 items is nothing
[01:51:32] <__adrian> (presumably.)
[01:52:32] <varrg> yeah, most definitely. My webhost don't have any fancy stuff, so I doubt it has the set you linked. I'm just anxious about doing $visited['foo'] = 'foo'; but performance over syntax right
[01:54:05] *** Quits: tercaL (~tercaL@user/tercal) (Remote host closed the connection)
[01:54:14] <__adrian> pretty straightforward to make a very-simple Set class
[01:55:14] <__adrian> also, get a better host  ;)
[01:56:52] <varrg> unfortunately, I can't afford a dedicated one - too many streaming site subscriptions ;)
[01:57:06] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[01:58:44] *** Quits: onichomp (~onichomp@2806:264:4404:8241:2856:9f40:5f12:9565) (Read error: Connection reset by peer)
[01:59:23] *** Joins: onichomp (~onichomp@2806:264:4404:8241:2856:9f40:5f12:9565)
[01:59:26] <Albright> mithrin: That's more of an apt question than a PHP question.
[02:00:14] <__adrian> mithrin: https://php.net/phpinfo
[02:00:26] <Albright> Can't call phpinfo() before compilation. :P
[02:00:56] <__adrian> hm... before  ._·
[02:01:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[02:02:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:02:53] *** Quits: magla (~gelignite@55d4970c.access.ecotel.net) (Quit: Stay safe!)
[02:05:00] *** Joins: zerosum (~zerosum@user/zerosum)
[02:05:44] <zerosum> hey all, so I have a php contact form behind nginx as a reverse proxy but I'm getting a 405 bessage every time I submit it and I have no idea why
[02:06:13] <__adrian> 405 means "method not allowed"
[02:06:38] <__adrian> e.g., you're trying to GET something that you're supposed to POST
[02:06:52] <zerosum> "POST /sendemail.php HTTP/1.1" 405 559
[02:07:12] <zerosum> hmm the log says that it's a POST request though
[02:07:52] <__adrian> i can't answer why - i know nothing about your configuration. that's just what it means. if you have config questions, you shuold ask on an nginx-focused channel
[02:08:11] <__adrian> unless your php script is setting the response code, which seems unlikely
[02:08:17] <Albright> Yeah, it's not clear that that error is coming from the PHP script rather than Nginx..
[02:08:21] <__adrian> (unlikely *you wouldn't know about)
[02:09:08] <zerosum> yeah that's whats confusing, the script runs fine when I run it manually
[02:09:52] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 268 seconds)
[02:11:44] <varrg> check the http header in the browser
[02:20:00] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:34:02] *** Joins: wyre_ (~wyre@user/wyre)
[02:35:17] *** Quits: wyre (~wyre@user/wyre) (Ping timeout: 265 seconds)
[02:37:25] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:39:54] *** Joins: ferdna (~ferdna@user/ferdna)
[02:45:04] *** Quits: guido (~guido@host-87-21-248-238.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[02:49:23] *** Quits: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[02:51:59] *** Joins: sagax (~sagax_nb@user/sagax)
[03:03:01] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:70c1:9fe1:6fd0:997)
[03:06:59] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:07:30] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:70c1:9fe1:6fd0:997) (Ping timeout: 260 seconds)
[03:11:42] *** Quits: judah (~Judah@2603-90d8-063e-8f2b-b534-ffc2-e6bf-e02c.res6.spectrum.com) (Quit: Leaving)
[03:24:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b)
[03:24:51] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 256 seconds)
[03:29:36] *** Joins: TML (~tml@user/tml)
[03:29:36] *** ChanServ sets mode: +v TML
[03:30:03] *** Quits: TML (~tml@user/tml) (*.net *.split)
[03:30:03] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (*.net *.split)
[03:30:03] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (*.net *.split)
[03:30:03] *** Quits: echoSMILE (uid504326@user/echosmile) (*.net *.split)
[03:30:03] *** Quits: h_ (~rootveget@fsf/member/hays) (*.net *.split)
[03:30:03] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (*.net *.split)
[03:30:03] *** Quits: bobdobbs (~user@2406:5a00:4434:4c00:53e0:b41c:2f13:609a) (*.net *.split)
[03:30:03] *** Quits: travisghansen (~travisgha@192.74.130.86) (*.net *.split)
[03:30:03] *** Quits: luva (~luva@37.120.197.45) (*.net *.split)
[03:30:03] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[03:30:03] *** Quits: nexgen2 (~nexgen@li614-178.members.linode.com) (*.net *.split)
[03:30:04] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (*.net *.split)
[03:30:04] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (*.net *.split)
[03:30:04] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[03:30:04] *** Quits: CyberCr33p (~chris@bnc.cretaforce.gr) (*.net *.split)
[03:30:04] *** Quits: BlackBishop (dexter@user/blackbishop) (*.net *.split)
[03:30:04] *** Quits: w\W (code@192.99.249.211) (*.net *.split)
[03:30:04] *** Quits: universumi (~universum@5.2.64.62) (*.net *.split)
[03:30:04] *** Quits: Woet_ (~me@irc.woet.me) (*.net *.split)
[03:30:04] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (*.net *.split)
[03:30:04] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[03:30:05] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[03:30:05] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[03:30:05] *** Quits: FESTIVUS-MAXIMUS (~thelounge@user/mif) (*.net *.split)
[03:30:05] *** Quits: zerosum (~zerosum@user/zerosum) (*.net *.split)
[03:30:05] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (*.net *.split)
[03:30:05] *** Quits: belak (~belak@user/belak) (*.net *.split)
[03:30:05] *** Quits: ialokin (znc@user/ialokin) (*.net *.split)
[03:30:05] *** Quits: Togra (~Togra@user/togra) (*.net *.split)
[03:30:05] *** Quits: onichomp (~onichomp@2806:264:4404:8241:2856:9f40:5f12:9565) (*.net *.split)
[03:30:05] *** Quits: stenno (~stenno@user/stenno) (*.net *.split)
[03:30:05] *** Quits: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au) (*.net *.split)
[03:30:06] *** Quits: FloridaMan (~FloridaMa@user/floridaman) (*.net *.split)
[03:30:06] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[03:30:06] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[03:30:06] *** Quits: adsr (~adsr@45.58.35.250) (*.net *.split)
[03:30:06] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[03:30:06] *** Quits: c17r_ (~c17r@c17r.com) (*.net *.split)
[03:30:06] *** Quits: Icedream (~icedream@144.76.223.175) (*.net *.split)
[03:30:06] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (*.net *.split)
[03:30:06] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[03:30:06] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (*.net *.split)
[03:30:06] *** Quits: xSavitar (~xSavitar@user/xsavitar) (*.net *.split)
[03:30:13] *** Joins: deltab (~deltab@user/deltab)
[03:30:39] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b) (Ping timeout: 268 seconds)
[03:31:27] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:31:48] *** Joins: TML (~tml@user/tml)
[03:32:19] *** ChanServ sets mode: +v TML
[03:32:47] *** Joins: c17r (~c17r@c17r.com)
[03:33:07] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[03:33:19] *** Joins: Woet (~me@irc.woet.me)
[03:33:28] *** Joins: Colt (~Colt@user/colt)
[03:33:30] *** Joins: belak (~belak@user/belak)
[03:33:51] *** Joins: mr_gant (~mr_gant@203-206-182-122.perm.iinet.net.au)
[03:33:52] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[03:33:54] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[03:34:04] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[03:34:07] *** Joins: hays (rootvegeta@fsf/member/hays)
[03:34:07] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[03:34:19] *** Joins: Pixi (~Pixi@user/pixi)
[03:34:29] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[03:34:33] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[03:34:44] *** Joins: ialokin (znc@user/ialokin)
[03:34:48] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[03:34:51] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[03:34:52] *** Joins: FloridaMan (~FloridaMa@user/floridaman)
[03:35:14] *** Joins: Togra (~Togra@user/togra)
[03:35:30] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[03:36:10] *** Joins: Cork (~Cork@user/cork)
[03:36:33] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[03:37:29] *** Joins: stenno (~stenno@user/stenno)
[03:37:38] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[03:37:47] *** Joins: stenno (~stenno@user/stenno)
[03:56:00] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[04:00:12] *** Joins: infernix (~nix@155.137.21.90)
[04:00:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b)
[04:04:54] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[04:05:11] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b) (Ping timeout: 268 seconds)
[04:09:34] *** Quits: tex (~super@user/dix) (Ping timeout: 260 seconds)
[04:09:37] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[04:11:12] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:17:12] *** Joins: FESTIVUS-MAXIMUS (~thelounge@user/mif)
[04:27:13] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[04:31:06] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[04:40:45] *** pizzaiolo is now known as pizza
[04:53:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b)
[04:58:13] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b) (Ping timeout: 268 seconds)
[05:01:43] *** Joins: bobdobbs (~user@2406:5a00:4434:4c00:ee43:d1b7:981c:669)
[05:07:46] *** Quits: sfields (~sfields@2605:a601:adea:7a00:b908:8b7:c380:7652) (Remote host closed the connection)
[05:10:51] *** Joins: Vision (~Vision@023-084-134-149.res.spectrum.com)
[05:11:26] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:13:13] *** Joins: pmercado (~pmercado@186.107.34.136)
[05:20:19] *** Joins: sfields (~sfields@2605:a601:adea:7a00:2b70:ef9e:5d20:bc77)
[05:28:51] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b)
[05:31:15] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[05:31:33] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[05:33:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:562:b7aa:30df:66b) (Ping timeout: 268 seconds)
[05:38:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:38:37] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[05:43:48] *** Joins: Anom (~Anom@2804:d4b:8072:100:d8:3533:2815:ac95)
[05:44:18] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[05:54:27] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[05:54:50] *** Joins: keypusher (keypusher@user/keypusher)
[06:04:26] *** Quits: put_in (~put_somew@113.173.227.246) (Remote host closed the connection)
[06:04:50] *** Joins: put_in (~put_somew@113.173.227.246)
[06:05:33] <Anom> What's wrong with this snippet of code? https://rebrand.ly/vniqcwk
[06:08:44] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[06:08:46] <Anom> Replacing line 10 with `$return = $return . "\\$thisWordCodeVerdeeld[$i]";` the error continues.
[06:08:49] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[06:08:55] *** Joins: Hiccup (cHoy@user/hiccup)
[06:11:58] <Anom> replace by `$return = $return . "\\" . $thisWordCodeVerdeeld[$i];` success, thank you
[06:28:16] *** Joins: Rockwood (~Rocky@user/rocky)
[06:28:32] *** Joins: thiras_ (~thiras@user/thiras)
[06:28:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:30:06] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[06:39:46] *** Joins: luva (~luva@37.120.197.45)
[06:45:50] *** Quits: Anom (~Anom@2804:d4b:8072:100:d8:3533:2815:ac95) (Quit: Client closed)
[06:45:53] *** Quits: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net) (Ping timeout: 252 seconds)
[06:46:06] *** Joins: mishehu (~mishehu@mira001.eyepeeveesicks.shavedgoats.net)
[06:51:03] *** Joins: paule32_ (~paule32@user/paule32)
[06:53:07] *** Joins: paule32__ (~paule32@user/paule32)
[06:53:39] <Rockwood> is correct approach ? --> https://stackoverflow.com/questions/46016139/best-user-role-permissions-database-design-practice/46016930
[06:54:35] <Rockwood> but i have lots of modules too in extra curriculum
[06:54:46] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:55:44] <Rockwood> like admin and owner have the right for edit normal user details
[06:56:37] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 268 seconds)
[06:57:51] *** Joins: paule32 (~paule32@user/paule32)
[06:58:38] <Rockwood> should i mention module name too in permission table? is the correct option for accessibility?
[06:59:37] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 240 seconds)
[07:11:02] <Nekomander> Rockwood, that approach looks good. It depends on how much flexibility want.
[07:11:56] <Rockwood> [09:09:59] <Rockwood> like my game module (UserDetails->(Del + Edit + access every page access area by admin ))
[07:11:56] <Rockwood> [09:11:15] <Rockwood> Moderator have the right of only forums management
[07:11:56] <Rockwood> [09:11:34] <Rockwood> like stop user to spamming and monitoring content
[07:13:40] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[07:16:24] <Rockwood> Nekomander, ty
[07:17:02] *** nbin_ is now known as nbin
[07:22:14] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[07:24:07] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Remote host closed the connection)
[07:24:11] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:25:20] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[07:26:15] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[07:26:23] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[07:27:03] *** Joins: de-facto (~de-facto@user/de-facto)
[07:30:26] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[07:38:07] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[07:40:22] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:52:53] *** Joins: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net)
[08:09:15] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[08:09:21] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[08:17:12] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[08:18:06] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Quit: Leaving)
[08:54:45] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:57:30] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[09:00:18] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (Ping timeout: 260 seconds)
[09:00:55] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[09:16:23] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:45:09] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[09:46:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[09:47:31] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:52:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:52:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[09:54:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[09:55:47] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[09:56:04] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Client Quit)
[10:00:23] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:02:08] *** wyre_ is now known as wyre
[10:10:39] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:11:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[10:15:07] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:22:29] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:22:31] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[10:26:24] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:36:32] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[10:37:13] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:37:17] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[10:48:27] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:50:42] *** Joins: tercaL (~tercaL@user/tercal)
[10:58:55] *** Joins: silv3r_m00n2 (~acerlight@122.163.70.204)
[10:59:04] <silv3r_m00n2> hi there
[10:59:32] <silv3r_m00n2> is it a good idea to merge $_POST and $_FILES data into a single array and then give it to a submission processing function ?
[10:59:53] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[11:03:00] <TinoDidriksen> No
[11:03:29] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:03:35] <TinoDidriksen> Well, if you mean $arr = ['post' => $_POST, 'files' => $_FILES] then it's fine.
[11:03:54] <TinoDidriksen> But not $_POST + $_FILES
[11:09:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:09:57] *** Quits: pmercado (~pmercado@186.107.34.136) (Ping timeout: 240 seconds)
[11:10:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[11:10:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[11:10:42] <silv3r_m00n2> TinoDidriksen: if i use html input names like this form[media_file] then the $_FILES array contains data like form => array(name => array('media_file' => '...'), 'error' => array('media_file' => ....
[11:10:55] <silv3r_m00n2> ideally the media_file index should come first and then name, filetype etc
[11:11:00] <silv3r_m00n2> is there a way to fix this ?
[11:12:11] *** Joins: luigibu (~luigi@80.30.201.209)
[11:12:12] <TinoDidriksen> You can write a bit of code to fix it, but there's no configuration option to invert the array.
[11:12:22] <silv3r_m00n2> many ppl have commented the same here, https://www.php.net/manual/en/reserved.variables.files.php
[11:12:28] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[11:12:43] <biberu> why does the order in that array matter to you?
[11:14:14] <TinoDidriksen> It can matter when iterating over multiple files. The inversion / indirection gets cumbersome. But it's easy enough to fix in code.
[11:15:23] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:17:05] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:18:42] *** Joins: tex (~super@user/dix)
[11:22:00] *** Joins: BlackBishop (dexter@user/blackbishop)
[11:24:57] <biberu> ah, right, it's that odd format
[11:33:37] *** Quits: silv3r_m00n2 (~acerlight@122.163.70.204) (Ping timeout: 240 seconds)
[11:35:45] *** Joins: Deuchnord (~deuchnord@user/deuchnord)
[11:39:11] *** Quits: ianthrive (~ianthrive@166.70.191.9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:45:43] *** Quits: tw2113 (~tw2113@2001-48F8-6-1318-D2AB-D5FF-FE77-2BD5-dynamic.midco.net) (Remote host closed the connection)
[11:46:53] *** Joins: ms49434 (~ms49434@user/ms49434)
[11:50:40] *** Joins: stenno (~stenno@user/stenno)
[11:55:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[11:56:52] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[11:57:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:04:00] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:04:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[12:11:27] *** Joins: silv3r_m00n2 (~acerlight@122.163.70.204)
[12:11:33] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3)
[12:11:49] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:14:33] *** Joins: poncha (~poncha@user/poncha)
[12:14:53] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Read error: Connection reset by peer)
[12:15:03] <silv3r_m00n2> TinoDidriksen: what could go wrong if i do $_POST + $_FILES
[12:15:04] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:15:38] <TinoDidriksen> It's just semantically awful. Don't mix types of data.
[12:16:59] <silv3r_m00n2> i see
[12:17:23] *** guenhael1 is now known as guenhael
[12:24:38] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::dc6e)
[12:32:07] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[12:32:37] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[12:32:37] *** guenhael1 is now known as guenhael
[12:37:38] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[12:42:06] *** Quits: silv3r_m00n2 (~acerlight@122.163.70.204) (Quit: Leaving.)
[12:44:47] *** Joins: stenno (~stenno@user/stenno)
[12:49:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[12:50:04] *** Joins: silv3r_m00n2 (~acerlight@122.163.70.204)
[12:50:04] *** Pokey is now known as ahorner
[12:50:09] *** ahorner is now known as Pokey
[12:56:17] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:57:17] *** Quits: silv3r_m00n2 (~acerlight@122.163.70.204) (Ping timeout: 240 seconds)
[12:59:15] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:01:06] *** Joins: luigibu (~luigi@80.30.201.209)
[13:03:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Read error: Connection reset by peer)
[13:03:41] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 245 seconds)
[13:10:55] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:11:46] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:25:47] *** Joins: operateur (~operateur@91.143.220.230)
[13:27:37] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[13:30:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[13:31:02] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 240 seconds)
[13:31:46] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:32:15] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:35:43] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[13:38:54] *** Joins: stenno (~stenno@user/stenno)
[13:40:23] *** Joins: silv3r_m00n2 (~acerlight@122.163.70.204)
[13:42:48] *** Parts: silv3r_m00n2 (~acerlight@122.163.70.204) ()
[13:43:00] *** Joins: operateur (~operateur@91.143.220.230)
[13:43:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[13:48:44] *** Joins: zlg (~zlg@user/zlg)
[13:49:17] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[13:49:18] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[13:49:19] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[13:50:21] *** Joins: Hash (~Hash@hashsecurity.org)
[13:51:10] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[13:51:33] *** Joins: luigibu (~luigi@80.30.201.209)
[13:52:50] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:55:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[13:56:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:56:17] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[13:56:36] *** Joins: tccki (~tccki@box.webslate.co.nz)
[14:03:11] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:03:30] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:06:03] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[14:11:39] *** Joins: Simplar (~quassel@188.163.93.76)
[14:21:04] *** Quits: operateur (~operateur@91.143.220.230) (Quit: WeeChat 3.3)
[14:21:24] *** Joins: operateur (~operateur@91.143.220.230)
[14:22:51] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[14:25:01] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[14:25:01] *** guenhael1 is now known as guenhael
[14:25:17] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::dc6e) (Ping timeout: 240 seconds)
[14:27:03] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:27:22] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:29:17] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[14:33:01] *** Joins: stenno (~stenno@user/stenno)
[14:37:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:40:17] *** Joins: Hash (~Hash@hashsecurity.org)
[14:44:27] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[14:44:56] *** Joins: sbrothy (~sbrothy@192038130164.mbb.telenor.dk)
[14:57:17] *** Quits: Deuchnord (~deuchnord@user/deuchnord) (Ping timeout: 240 seconds)
[15:01:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:23:06] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[15:24:24] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[15:26:29] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:27:09] *** Joins: stenno (~stenno@user/stenno)
[15:32:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[15:32:35] *** Joins: stenno (~stenno@user/stenno)
[15:37:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[15:46:33] *** Joins: fef (~thedawn@user/thedawn)
[15:49:20] *** Joins: pmercado (~pmercado@186.107.34.136)
[15:50:43] *** Quits: jgrim6669 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Quit: Buh bye!)
[15:53:04] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:53:54] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[15:56:58] *** Joins: Deuchnord (~deuchnord@user/deuchnord)
[15:59:52] *** Joins: guido (~guido@host-79-43-248-171.retail.telecomitalia.it)
[16:09:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:12:36] *** Joins: stenno (~stenno@user/stenno)
[16:13:58] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::dc6e)
[16:34:17] *** Quits: operateur (~operateur@91.143.220.230) (Quit: WeeChat 3.3)
[16:34:49] *** Joins: operateur (~operateur@91.143.220.230)
[16:46:37] *** Quits: sbrothy (~sbrothy@192038130164.mbb.telenor.dk) (Quit: leaving)
[16:53:16] *** Joins: silv3r_m00n (~enlighten@122.163.70.204)
[16:53:20] <silv3r_m00n> hi
[16:54:44] *** Joins: sbrothy (~sbrothy@192038130164.mbb.telenor.dk)
[16:55:28] *** Joins: thiras_ (~thiras@user/thiras)
[17:00:20] <undefined_bob> if I have something like @ini_set('default_charset','utf-8');  Does the 'default_charset' override the 'utf-8'?
[17:05:08] <Naktibalda> I can't parse your question
[17:05:40] <Naktibalda> ini_set sets value of setting named default_charset to utf-8
[17:10:35] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:10:48] *** Joins: DaNeenjah (~jake@adsl-74-230-7-13.hsv.bellsouth.net)
[17:11:14] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[17:17:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:18:19] *** Joins: faktor (~factor@72.192.71.12)
[17:18:25] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[17:21:59] *** Quits: silv3r_m00n (~enlighten@122.163.70.204) (Quit: Leaving.)
[17:26:07] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 250 seconds)
[17:26:36] <undefined_bob> ohh
[17:26:47] <undefined_bob> that makes sense
[17:26:51] <undefined_bob> I didnt know, thank you
[17:28:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:28:18] *** Joins: nshepperd2 (~nshepperd@li364-218.members.linode.com)
[17:28:56] *** Parts: nshepperd2 (~nshepperd@li364-218.members.linode.com) (The Lounge - https://thelounge.chat)
[17:30:35] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[17:31:48] <relipse> https://www.irccloud.com/pastebin/fwhM8mX0/
[17:31:56] <relipse> Guess the output
[17:32:59] *** Joins: Tach (~Tach@user/tach)
[17:35:38] *** Quits: sbrothy (~sbrothy@192038130164.mbb.telenor.dk) (Read error: Connection reset by peer)
[17:36:17] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[17:36:39] <biberu> relipse?
[17:37:07] <relipse> yes
[17:37:40] <biberu> what about it?
[17:40:57] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[17:43:39] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[17:43:39] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[17:46:32] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:48:19] <jwpapi> `$responseSentToReceiver = $fue_api->make_custom_endpoint_call($endpoint, $sendParamsToReceiver, 'POST');` will the call happen if I don’t use the variable again?
[17:50:33] <Naktibalda> it will
[17:51:52] *** Joins: deltab (~deltab@user/deltab)
[17:51:53] <Naktibalda> there is an interesting case that if method returns Generator and you don't read from result, then the code inside method won't be executed.
[18:02:44] *** Joins: vit (~vit@chello085216193138.chello.sk)
[18:03:08] *** vit is now known as Guest7318
[18:04:22] *** Joins: judah (~Judah@2603-90d8-063e-8f2b-25dc-58c8-6bbe-ac18.res6.spectrum.com)
[18:05:24] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[18:07:09] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[18:07:33] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:12:29] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[18:14:12] <jwpapi> Naktibalda: interesting
[18:19:27] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:28:43] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:34:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:34:57] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[18:35:18] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:36:01] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[18:37:00] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[18:38:11] *** Quits: poncha (~poncha@user/poncha) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:39:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:45:18] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:45:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[18:46:37] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[18:46:37] *** guenhael1 is now known as guenhael
[18:47:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:47:05] *** Joins: Flikker (~mattnospa@pool-173-62-249-190.phlapa.fios.verizon.net)
[18:47:23] *** Parts: Flikker (~mattnospa@pool-173-62-249-190.phlapa.fios.verizon.net) ()
[19:11:29] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:14:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[19:15:38] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:16:17] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[19:16:17] *** guenhael1 is now known as guenhael
[19:17:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:18:59] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Client Quit)
[19:19:50] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:22:32] *** guenhael1 is now known as guenhael
[19:26:48] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[19:27:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:27:06] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 268 seconds)
[19:33:33] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:34:25] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:36:34] *** Quits: pmercado (~pmercado@186.107.34.136) (Read error: Connection reset by peer)
[19:36:45] *** Joins: pmercado_ (~pmercado@186.107.34.136)
[19:37:37] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 240 seconds)
[19:42:57] *** Quits: guido (~guido@host-79-43-248-171.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[19:45:05] *** Joins: guido (~guido@host-80-182-126-132.pool80182.interbusiness.it)
[19:46:53] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[19:51:43] *** Quits: Deuchnord (~deuchnord@user/deuchnord) (Remote host closed the connection)
[19:53:03] *** Joins: michele_ (~eraser@user/michele)
[19:53:07] *** Quits: michele (~eraser@user/michele) (Read error: Connection reset by peer)
[19:54:00] *** Joins: chao (~stenno@user/stenno)
[19:56:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[19:57:01] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 245 seconds)
[20:03:19] *** Quits: guido (~guido@host-80-182-126-132.pool80182.interbusiness.it) (Read error: Connection reset by peer)
[20:03:35] *** Joins: guido (~guido@host-80-182-126-132.pool80182.interbusiness.it)
[20:03:44] *** Joins: ianthrive (~ianthrive@166.70.191.9)
[20:05:02] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:05:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3) (Remote host closed the connection)
[20:05:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:05:20] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:05:50] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3)
[20:07:03] *** Joins: chao (~stenno@user/stenno)
[20:09:13] *** Quits: guido (~guido@host-80-182-126-132.pool80182.interbusiness.it) (Read error: Connection reset by peer)
[20:09:28] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[20:09:37] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[20:10:32] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3) (Ping timeout: 252 seconds)
[20:12:03] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:13:31] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[20:18:36] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[20:20:45] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::dc6e) (Ping timeout: 268 seconds)
[20:23:20] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:26:30] *** chao is now known as stenno
[20:26:33] *** Joins: Simplar (~quassel@188.163.93.76)
[20:27:13] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3)
[20:32:28] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:249d:f05e:dc7f:81f3) (Ping timeout: 268 seconds)
[20:35:57] *** Joins: Rockwood (~Rocky@user/rocky)
[20:40:11] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[20:42:36] *** Quits: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:47:12] *** Joins: guido (~guido@host-80-182-126-132.pool80182.interbusiness.it)
[20:49:28] *** Joins: xep (~xep@76-210-4-7.lightspeed.sntcca.sbcglobal.net)
[20:59:27] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[20:59:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[21:03:01] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:31:53] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:32:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:38:05] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:38:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:47:33] *** Quits: sfields (~sfields@2605:a601:adea:7a00:2b70:ef9e:5d20:bc77) (Read error: Connection reset by peer)
[21:51:00] *** Joins: chao (~stenno@user/stenno)
[21:52:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[21:56:50] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[22:04:00] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Quit: Never put off till tomorrow, what you can do the day after tomorrow)
[22:12:31] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[22:15:32] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[22:16:27] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[22:19:06] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[22:20:26] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[22:21:12] *** Joins: hh (~g@37.214.46.113)
[22:22:20] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[22:26:30] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[22:27:02] *** Joins: d[-_-]b (~stenno@user/stenno)
[22:28:25] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 268 seconds)
[22:30:37] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 240 seconds)
[22:30:57] *** Quits: bobdobbs (~user@2406:5a00:4434:4c00:ee43:d1b7:981c:669) (Ping timeout: 240 seconds)
[22:33:36] *** Joins: de-facto_ (~de-facto@user/de-facto)
[22:33:59] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[22:34:39] *** d[-_-]b is now known as stenno
[22:37:45] *** de-facto_ is now known as de-facto
[22:38:20] *** Joins: magla (~gelignite@55d46610.access.ecotel.net)
[22:40:36] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[22:49:17] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:49:21] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[22:52:11] *** Joins: guenhael1 (~Thunderbi@2a01cb008c3d5800793a285520014903.ipv6.abo.wanadoo.fr)
[22:52:13] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 240 seconds)
[22:52:13] *** guenhael1 is now known as guenhael
[22:52:57] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:59:07] *** Joins: Tach (~Tach@user/tach)
[23:00:52] *** Joins: chazy (~chazy@2a0c:5a84:d103:8400:1ac0:4dff:fe96:16ad)
[23:01:19] <chazy> can constants have type hint? like const string myString = '';?
[23:06:22] <judah> I dont think so
[23:06:36] <judah> I tried it and got a syntax error, though I could also be doing it wrong
[23:06:57] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 240 seconds)
[23:07:01] <chazy> i also got an error and thought the syntax may be wrong, but maybe it's just not possible
[23:07:20] <__adrian> no
[23:07:42] <__adrian> there's no reason for it - the value/type can't change
[23:08:38] <chazy> oh ok, what about assigning it what a (helper) function returns?
[23:09:20] <chazy> shouldn't it be possible since it's not a class member?
[23:13:05] <chazy> like const myConst = myFunction(); it says: "Constant expression contains invalid operations"
[23:13:14] <__adrian> no. constants have to be constant expressions. they're evaluated at compile time, not at runtime. funcyions don't exist yet.
[23:13:35] <__adrian> if you need to assign at runtime, then you probably don't want a constant
[23:13:47] <chazy> oh ok, so... i need to create a static method then
[23:13:53] <__adrian> maybe
[23:14:23] <__adrian> but remember, !+static class
[23:14:23] <php-bot> but remember, anything useful that you can do with a static class, you can also do with a non-static class that you make only one instance of. AND you get to stop worrying about side-effects.
[23:14:28] <chazy> maybe they did it wrong (laravel), the login/store method does this return redirect()->intended(RouteServiceProvider::HOME);
[23:14:50] <__adrian> what's wrong with that?
[23:14:52] <chazy> and that HOME constant is a normal string, i can't use const HOME = route('home');
[23:15:14] <judah> yeah the way they implemented that is strange, but if it works I wont question it
[23:15:19] <chazy> i mean, i have multiple subdomains, so that's a problem now
[23:16:37] <chazy> or just public static HOME = route('home');?
[23:17:02] <__adrian> sounds more like you're trying to do multiple sites on a system that only expects one
[23:17:22] <__adrian> or maybe they have an approach you haven't discovered yet.
[23:17:34] <__adrian> i think laravel support is on discord (but not sure)
[23:17:46] <chazy> that's probably it, but it must involve tweaking the RouteServiceProvider class
[23:17:50] <__adrian> public static HOME = route('home')  // no, that's the same problem
[23:18:31] <chazy> or i can just modify the return from the store method and replace the constant with route()
[23:26:26] <__adrian> i'm not clear on exactly what you're doing, and i don't know what other consequences that may have
[23:26:30] <__adrian> but you _could_, yes
[23:28:17] *** pmercado_ is now known as pmercado
[23:29:09] <chazy> i think it's safe to assume the constant gives a default fallback to intended when users go straight to /login and laravel has no return point
[23:34:48] <relipse> I want to make a user login framework
[23:35:00] <relipse> because it's so redundant, doing the same thing almost exactly 3 times
[23:37:07] <relipse> off topic: why is https://phpfiddle.org/ so ugly?
[23:37:32] <relipse> I love the featureality
[23:37:40] <relipse> but man it needs a makeover
[23:38:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:55:22] *** Quits: DaNeenjah (~jake@adsl-74-230-7-13.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[23:56:38] <chazy> should "private object $myObj;" give an error? "syntax error, unexpected 'object' (T_STRING), expecting variable (T_VARIABLE)
[23:56:53] <relipse> yes object means nothing
[23:56:55] <__adrian> you need to use a classname
[23:57:05] <relipse> what type of object is it?
[23:57:13] <chazy> i mean a type hint
[23:57:24] <relipse> yeah it needs to know what class it is
[23:57:29] <relipse> like __adrian said
[23:58:14] <chazy> it's for json
[23:58:59] <chazy> like $obj = json_decode('{}');
[23:59:08] <chazy> what type should $obj be?
[23:59:30] <chazy> stdClass?
[23:59:32] <relipse> https://3v4l.org/HtGG6
[23:59:35] <relipse> stdClass
[23:59:51] <relipse> but you could also do (object)[];
[23:59:57] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 240 seconds)
