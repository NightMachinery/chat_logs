[00:09:03] *** Joins: serghei (~egrep@user/serghei)
[00:11:06] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[00:15:39] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Ping timeout: 258 seconds)
[00:50:09] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-e83e-f8c6-9aa2-28bc.res6.spectrum.com)
[00:55:23] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[00:59:10] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[01:27:54] *** Quits: CrowX- (~CrowX-@185.167.46.134) (Remote host closed the connection)
[01:29:49] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[01:45:07] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[01:45:39] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[01:46:28] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:56:51] *** Joins: combengue (~Thunderbi@207.191.249.160)
[01:58:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 252 seconds)
[01:58:25] *** combengue is now known as cmbengue
[01:59:46] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[02:00:12] *** Quits: fgau (~fgau@mail.berliner-termindienst.de) (Ping timeout: 256 seconds)
[02:01:23] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:07:37] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:12:12] *** Joins: barrios (~barrios@2a02:3030:408:bc12:738c:e58a:d90e:8abe)
[02:30:31] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Remote host closed the connection)
[02:37:39] *** Quits: barrios (~barrios@2a02:3030:408:bc12:738c:e58a:d90e:8abe) (Read error: Connection reset by peer)
[02:37:58] *** Joins: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de)
[02:44:39] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[02:45:52] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[02:50:45] *** Joins: fgau (~fgau@mail.berliner-termindienst.de)
[02:51:14] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[02:55:08] *** Quits: barrios (~barrios@dynamic-046-114-141-057.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[02:56:15] *** Joins: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de)
[02:59:18] *** Joins: schinckel (uid38120@id-38120.charlton.irccloud.com)
[03:05:29] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Remote host closed the connection)
[03:09:31] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:09:49] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:12:43] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[03:15:21] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[03:15:25] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[03:16:08] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[03:20:02] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Ping timeout: 258 seconds)
[03:23:02] *** Joins: Qwerky (~Qwerky@37.164.180.130)
[03:23:07] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 252 seconds)
[03:28:37] *** Quits: Qwerky (~Qwerky@37.164.180.130) (Ping timeout: 252 seconds)
[03:29:10] *** Joins: Qwerky (~Qwerky@37.164.79.213)
[03:30:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:31:10] *** Joins: flynn (~mcbloch@user/flynn)
[03:33:27] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 258 seconds)
[03:35:46] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[03:38:44] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Quit: Ping timeout (120 seconds))
[03:39:05] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[03:39:10] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[03:39:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:41:29] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:43:01] *** Quits: Qwerky (~Qwerky@37.164.79.213) (Remote host closed the connection)
[03:44:22] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[03:51:09] *** Joins: rob4226 (~Thunderbi@64.64.117.170)
[03:52:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:52:52] *** Joins: Qwerky (~Qwerky@37.164.79.213)
[03:53:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:56:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:56:09] *** ChanServ sets mode: +v EvilDMP
[03:57:13] *** Quits: Qwerky (~Qwerky@37.164.79.213) (Ping timeout: 252 seconds)
[04:02:04] *** Quits: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de) (Remote host closed the connection)
[04:07:35] <moldy> esaym153: my managers are a bit skeptical regarding remote-only employees, though i am not sure if they rule them out completely
[04:09:47] <moldy> (i don't decide whom we hire, i just give my opinion to the CTO)
[04:17:50] *** Quits: rob4226 (~Thunderbi@64.64.117.170) (Quit: rob4226)
[04:23:12] *** Joins: rob4226 (~Thunderbi@64.64.117.170)
[04:26:02] *** Joins: combengue (~Thunderbi@207.191.249.160)
[04:29:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[04:29:40] *** combengue is now known as cmbengue
[04:35:39] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[04:36:14] <wallbroken> FunkyBob: i'm still in problems with signals.py
[04:39:12] <FunkyBob> and?
[04:43:45] <wallbroken> could you give me some support?
[04:44:09] <FunkyBob> sure
[04:44:18] <FunkyBob> could you provide... _any_ details?
[04:44:23] <FunkyBob> instead of making me ask for them
[04:44:41] <FunkyBob> there's also dozens of other peoiple here who might be able to help you
[04:44:45] <moldy> esaym153: also, some number of applicants are ruled out before i even get to interview them or see their CVs, which might be a problem yes
[04:44:48] <FunkyBob> but won't know because you didn't say anything
[04:45:17] <esaym153> moldy: yea, figured
[04:45:53] <moldy> esaym153: i'm not sure if i could land a job at my current company nowadays :) back when i joined, i got a call by the CEO, went to their office, we talkes for 5 minutes, i fixed a trivial config problem and was basically hired
[04:46:20] <moldy> (in other words: sometimes you just need a bit of luck)
[04:46:41] <esaym153> moldy: yea, sadly every job I've ever had mostly has no interview process other than a few questions and then "When can you start"
[04:48:04] <moldy> i'm not a fan of HR / management filtering applicants based on their CVs, but OTOH somebody has to do some kind of filtering i guess
[04:48:28] <FunkyBob> it's automated filtering I find most egregious
[04:48:35] <wallbroken> https://dpaste.org/qsLQ
[04:48:40] <wallbroken> this is my signals.py
[04:48:45] <moldy> when i was hired nobody looked my CV
[04:49:02] <moldy> *at my CV
[04:49:05] <FunkyBob> wallbroken: ok
[04:54:39] <FunkyBob> wallbroken: is there a question?
[04:54:43] <FunkyBob> or more details?
[04:56:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[04:57:58] <wallbroken> FunkyBob: do you remember what my goal is?
[04:58:03] <FunkyBob> yes
[04:58:16] <FunkyBob> you said there was a problem... you haven't said what it is
[04:58:19] <FunkyBob> or what evidence you have of it
[04:58:25] <dre> lmao
[04:58:35] <wallbroken> ok. how to fix that code to reach my goal?
[04:58:43] <FunkyBob> what makes you think that code needs fixing?
[04:58:56] <FunkyBob> what is your _evidence_
[04:59:29] <wallbroken> the evidence is that i made it
[04:59:36] <wallbroken> and the code i make never works
[04:59:41] <FunkyBob> from what I can see, that function is correct.
[04:59:45] <FunkyBob> so what makes you think it is not?
[05:00:17] <FunkyBob> beyond self doubt
[05:02:11] <FunkyBob> wallbroken: this isn't a trick question
[05:02:29] <FunkyBob> you think there's a problem... ok.. why? what is or is not happening that makes you think there is a problem?
[05:02:53] <wallbroken> https://dpaste.org/hqYb
[05:02:57] <wallbroken> this is the entire code
[05:03:03] <wallbroken> do you think i need something else?
[05:03:21] <FunkyBob> you certainly do... but you refuse to tell me why
[05:03:46] <FunkyBob> why do you think there might be more needed?
[05:03:52] <FunkyBob> please... answer my questions
[05:03:53] <wallbroken> i don't think
[05:03:58] <wallbroken> i'm just asking
[05:04:08] <FunkyBob> you don't think there's a problem... but you're asking for help to solve the problem anyway?
[05:04:14] <FunkyBob> 23:22 < wallbroken> FunkyBob: i'm still in problems with signals.py
[05:04:20] <FunkyBob> except... you opened by saying  there were problems
[05:04:36] <wallbroken> the problem is that i'm building it up
[05:04:38] <wallbroken> for example
[05:04:51] <wallbroken> do i need to say somewhere to execute what is in signals.py?
[05:04:57] <FunkyBob> yes
[05:05:25] <FunkyBob> until that file is imported, the signal handler is not registered.
[05:05:34] <FunkyBob> but you need to register it _after_ the models have been loaded
[05:05:45] <FunkyBob> the safest place to do this is in the 'ready' hook in your AppConfig
[05:06:08] <FunkyBob> and here I was expecting you to say "Well, I tried it and it didn't create the record"...
[05:08:07] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/applications/#django.apps.AppConfig.ready
[05:10:18] <wallbroken> "receiver" is not defined
[05:10:36] <FunkyBob> ok?
[05:10:53] <FunkyBob> since that's not mentioned at all in the code you've shown us...
[05:10:59] <FunkyBob> i have no idea what that is in reference to
[05:11:08] <wallbroken> it's in the link you geave me
[05:11:24] <wallbroken>       # registering signals with the model's string label
[05:11:35] <FunkyBob> yeah, you weren't supposed to cut'n'paste their example
[05:11:42] <FunkyBob> you were supposed to use your brain
[05:11:52] <FunkyBob> all your ready method needs to do is import the signals module
[05:12:01] *** Joins: Guddu (~Guddu@190.84.88.92)
[05:12:31] <FunkyBob> the link was to explain what the ready method was, where to find it, how it's called.
[05:12:54] <wallbroken> so, what do i need to do?
[05:17:41] <FunkyBob> what I said
[05:17:59] <FunkyBob> import the signals module in your ready method
[05:18:16] <FunkyBob> since the signal registration is executed top level in that module, importing it is enough
[05:18:39] <FunkyBob> but you can't import it until django's done its startup stuff, hence being in the ready hook
[05:27:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:43:41] *** Joins: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl)
[05:46:15] <wallbroken> FunkyBob: i understood nothing
[05:48:30] <wallbroken> FunkyBob: your error with me is that to make me understand things, you need to use a top-down approach
[05:49:26] <FunkyBob> if you're not interested in understanding things, you're in the wrong place
[05:51:45] <wallbroken> FunkyBob: in fact i'm telling why i don't understand what you say
[05:51:50] <wallbroken> you just say: do this
[05:52:09] <wallbroken> you should tell what i should do but first of all: why
[05:52:14] <FunkyBob> ask questions when you don't understand
[05:52:31] <FunkyBob> have told you that repeatedly
[05:52:44] <FunkyBob> I've given you plenty of why...
[06:09:40] <FunkyBob> but, again, if y ou don't feel there is enough why... ASK
[06:11:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-e83e-f8c6-9aa2-28bc.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:20:11] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-ecc4-2df9-195d-cbcb.res6.spectrum.com)
[06:20:26] <wallbroken> well, for me this signals.py is something completely new
[06:20:34] <wallbroken> so i come in understanding logic
[06:21:39] <FunkyBob> I linked you to the Signals docs so you could get an introduction to what they were, and how to use them.
[06:21:48] <FunkyBob> and... you came up with a valid looking signal receiver function
[06:21:51] <FunkyBob> so that seemed to work
[06:22:12] <wallbroken> yes, but there is the other side to implement
[06:22:13] <wallbroken> appconfig
[06:22:19] <FunkyBob> yes
[06:22:24] <wallbroken> and there i have no clue on how to do that
[06:22:27] <FunkyBob> sure
[06:22:42] <FunkyBob> so I told you waht you needed to do, and a link to the relevant docs..
[06:23:01] <FunkyBob> what I told you you needed to do was "import your signals module"
[06:23:54] <FunkyBob> and even explained why it needed to be in the ready hook
[06:24:05] <wallbroken> i alread did that
[06:24:06] <wallbroken> from shoes.signals import AccountConfig
[06:24:22] <FunkyBob> inside the ready method?
[06:24:33] <wallbroken> outside
[06:24:34] <FunkyBob> I don't know what you did because you never showed us
[06:24:50] <FunkyBob> yeah, that's not going to work... for the reasons I stated
[06:24:56] <wallbroken> https://dpaste.org/USNR
[06:25:02] <wallbroken> i added it also inside
[06:25:04] <FunkyBob> 1. your signals will tryo to access models as soon as it's imported
[06:25:13] <FunkyBob> 2. django won't be ready, so it will fail
[06:25:30] <FunkyBob> instead, import it only inside your ready method, so it's guaranteed to happen _after_ django is ready
[06:25:40] <wallbroken> ok
[06:25:48] <FunkyBob> no, see, you have all that other stuff in  your ready method
[06:25:50] <FunkyBob> ONLY the import
[06:26:18] <FunkyBob> you cut and pasted code again that YOU DID NOT KNOW WHAT IT WAS DOING
[06:26:29] <FunkyBob> how many times do we have to tell you to NEVER DO THAT?
[06:26:44] <wallbroken> https://dpaste.org/yRfM
[06:27:03] <FunkyBob> that's even worse
[06:27:10] <wallbroken> why?
[06:27:14] <FunkyBob> all your indenting is munted... and ... no
[06:27:18] <FunkyBob> that's not what I said to do
[06:27:27] <FunkyBob> take the EXISTING app config class
[06:27:30] <FunkyBob> add a ready method to it
[06:27:30] <wallbroken> you told me to put only import inside the ready()
[06:27:33] <FunkyBob>  and in the ready method
[06:27:39] <FunkyBob> import your signals module
[06:27:48] <FunkyBob> wallbroken: yes,... but you kept all the other bullshit
[06:28:20] <FunkyBob> the file you pasted is shoes/app.py yes?
[06:28:21] <wallbroken> 03:57:27 AM - FunkyBob: take the EXISTING app config class
[06:28:26] <wallbroken> which one are you referring to?
[06:28:47] <FunkyBob> which one was there before you messed with the file?
[06:29:14] <FunkyBob> also... NOWHERE in that code do you import your signals module...
[06:29:18] <FunkyBob> so you haven't done what I said
[06:29:48] <FunkyBob> from the default app.py that django gave you, you needed to add only two lines of code
[06:30:12] <FunkyBob> instead you've copy'n'pasted  stuff from examples... without understanding any of it
[06:30:17] <FunkyBob> and not done the one thing you needed to do
[06:31:07] <wallbroken> https://dpaste.org/sFK5
[06:31:10] <FunkyBob> ... is that paste showing the content of _two_ files?  is that why ther's two AppConfig classes?
[06:32:04] <FunkyBob> why are you importing pre_save? why id that a ready function, not a method?  why are you importing the model, not the signals module?
[06:32:19] <FunkyBob> s/id/is/
[06:32:32] <wallbroken> https://dpaste.org/amYw
[06:32:36] <wallbroken> this is the original file
[06:32:49] <FunkyBob> right
[06:32:56] <FunkyBob> from there you need add ONLY 2 lines
[06:33:06] <wallbroken> ok, as we said
[06:33:11] <FunkyBob> one declaring your custom ready method... and its body being to import your signals module
[06:33:14] <wallbroken> the first one is to import signal class
[06:33:15] <wallbroken> rght?
[06:33:17] <FunkyBob> no
[06:33:41] <FunkyBob> the import MUST be inside the ready method, so it only happens when django is ready
[06:34:42] <wallbroken> https://dpaste.org/yH4s
[06:34:59] <wallbroken> wait
[06:35:02] <wallbroken> you call it "method"
[06:35:05] <FunkyBob> yes
[06:35:09] <wallbroken> method is supposed to be inside a class
[06:35:11] <FunkyBob> yes
[06:35:13] <wallbroken> that is not a method
[06:35:14] <wallbroken> it's a function
[06:35:15] <FunkyBob> no
[06:35:17] <FunkyBob> correct
[06:35:24] <wallbroken> it must be a method or a function?
[06:35:27] <FunkyBob> method
[06:35:35] <wallbroken> then i need to place it inside the class
[06:35:37] <CapnKernel> Don't know if this helps, wallbroken, but imports are just statements.  They don't have to be just at the top of a file.  They can be at any point in your code, and be executed during your program run (not just when the program starts)
[06:35:44] <FunkyBob> wallbroken: correct
[06:35:52] <FunkyBob> CapnKernel: morning, good sir!
[06:35:56] <wallbroken> FunkyBob: ok, did that
[06:36:00] <CapnKernel> FunkyBob: G'day mate.
[06:36:11] <FunkyBob> CapnKernel: how fare you this tiresome lockdown?
[06:36:26] <FunkyBob> wallbroken: code?
[06:36:44] <wallbroken> https://dpaste.org/7VKe
[06:37:04] <CapnKernel> FunkyBob: Pretty good, all things considered.  I'm not a go-out-and-socialise person, so my style isn't cramped.
[06:37:09] <FunkyBob> wallbroken: ok... better.. and so very close to right
[06:37:16] <CapnKernel> And I get to work on lots of projects I usually wouldn't have the time for
[06:37:17] <FunkyBob> wallbroken: however... you don't need the "from ...."
[06:37:27] <FunkyBob> wallbroken: you just need to ensure the module is imported, so its code is run
[06:37:29] <CapnKernel> And I can still study, so all good
[06:37:40] <FunkyBob> CapnKernel: nice
[06:37:50] *** Joins: barrios (~barrios@2a02:3030:40a:209b:e814:7f2a:3d35:65b0)
[06:37:51] <CapnKernel> And you?
[06:37:55] <wallbroken> to import the module i need "from"
[06:38:06] <FunkyBob> wallbroken: no, you need 'import'
[06:38:12] *** Quits: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:38:30] <wallbroken> import AccountConfig
[06:38:34] <FunkyBob> wallbroken: "from ... import ..." is a way to selectively import things into the local namespace
[06:38:35] <wallbroken> just this?
[06:38:37] <FunkyBob> wallbroken: no
[06:38:46] <FunkyBob> you don't want the AccountConfig from signals
[06:38:55] <FunkyBob> you just want to tell Python to import the signals package
[06:39:04] <FunkyBob> "import .signals"  or "import shoes.signals" is enough
[06:39:09] <FunkyBob> that's it.
[06:39:25] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[06:39:32] <wallbroken> without the dot
[06:39:36] <FunkyBob> with the dot
[06:39:41] <wallbroken> i get error
[06:39:44] <FunkyBob> "import .signals" is a relative import
[06:39:54] <FunkyBob> where is signals.py ? in which app?
[06:39:58] <wallbroken> shoes
[06:40:11] <FunkyBob> so it's shoes/signals.py and you're editing shoes/app.py ?
[06:40:18] <wallbroken> exactly
[06:40:25] <FunkyBob> and what error do you get?
[06:41:07] <wallbroken> https://www.dropbox.com/s/ea7ju3smqv8sglw/Untitleuud.png?dl=0
[06:41:18] <CapnKernel> Just want to check, since I last asked, has there emerged a "thing" for Django which can help with the "simultaneous editing of the same data from two web clients" problem?  For example, two users pull up a form for the same object, change different fields, then both save?
[06:41:33] <FunkyBob> wallbroken: does Python give you the same error?
[06:41:45] <FunkyBob> if so, sure, do "from . import signals"
[06:41:58] <wallbroken> yes
[06:42:15] <wallbroken> ok
[06:42:17] <wallbroken> now it's correct
[06:42:18] <CapnKernel> Conceptually I know of three solutions: 1) locking model, where one user gets exclusive access for up to N seconds 2) merge on clash 3) something based on operational transformation
[06:42:21] <FunkyBob> CapnKernel: there's a few different solutions depending on the UX you want
[06:43:07] <FunkyBob> wallbroken: sadly, my python is a little rusty, as $DAYJOB has me doing javascript all the time
[06:43:10] <FunkyBob> :(
[06:43:15] <CapnKernel> FunkyBob: I'm sorry
[06:43:26] <wallbroken> FunkyBob: don't worry
[06:43:35] <wallbroken> now what is the next step?
[06:43:46] <FunkyBob> wallbroken: test it
[06:43:54] <FunkyBob> create a new user
[06:44:00] <FunkyBob> see if they were given a config record
[06:44:29] *** Joins: combengue (~Thunderbi@207.191.249.160)
[06:45:35] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 268 seconds)
[06:45:36] *** combengue is now known as cmbengue
[06:46:22] <wallbroken> https://dpaste.org/bBO7
[06:47:09] <wallbroken> maybe i need a default
[06:48:40] <FunkyBob> either set a default on the field, or in the code, yes.
[06:48:47] <FunkyBob> but that means everything else appears to have worked
[06:48:53] <wallbroken> yes
[06:48:54] <wallbroken> thanks
[06:54:45] <CapnKernel> FunkyBob: Interesting: https://djangopackages.org/grids/g/concurrent-edit/
[06:55:22] <FunkyBob> yah... one of the solutions is 'backoff'... catch that the user is editing an 'old' version, and ask them to try again
[07:01:10] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-ecc4-2df9-195d-cbcb.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:04:03] <CapnKernel> FunkyBob: Thanks
[07:04:48] *** Joins: yanchai (~yanchai@203.177.194.130)
[07:11:14] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[07:12:46] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[07:13:20] *** Joins: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl)
[07:14:05] *** Quits: twomanytacos (uid366386@id-366386.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[07:14:50] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-27c8-a94a-768a-c5a3.res6.spectrum.com)
[07:16:45] <FunkyBob> audiobirb: how'd the inspectdb go?
[07:21:09] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:23:08] *** Quits: Guddu (~Guddu@190.84.88.92) (Read error: Connection reset by peer)
[07:31:44] *** Quits: barrios (~barrios@2a02:3030:40a:209b:e814:7f2a:3d35:65b0) (Read error: Connection reset by peer)
[07:32:05] *** Joins: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de)
[07:34:34] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 258 seconds)
[07:40:51] *** Quits: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[07:59:36] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Ping timeout: 268 seconds)
[08:07:23] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[08:09:28] <Guest67> If I do something like dial.number(request.POST['phoneNumber']) is request.POST literally sending a POST to the browser?
[08:12:50] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:16:21] <CapnKernel> Guest67: Is this in a view?
[08:16:26] <Guest67> yes
[08:16:33] <Guest67> https://www.twilio.com/docs/voice/tutorials/browser-calls-python-django
[08:16:53] <Guest67> https://github.com/TwilioDevEd/browser-calls-django/blob/main/browser_calls/views.py#L60
[08:17:04] <CapnKernel> A view is called when a request comes from the web browser back to the server.  The view handles the information sent from the browser to the server.
[08:17:05] <FunkyBob> Guest67: request.POST is the parsed post data from the request
[08:17:11] <CapnKernel> Yep that
[08:17:44] <CapnKernel> That information can be sent as a GET request or a POST request.  If it was a POST request (usual for a form), request.POST is a dict containing the information sent from the browser.
[08:17:46] <Guest67> so it is not POSTing to the server to make a call to that phoneNumber when i click the call button?
[08:17:54] <FunkyBob> no
[08:18:04] <Guest67> it just gets the phoneNumber from the form input?
[08:18:06] <CapnKernel> So no, request.POST does not "send a POST to the browser"
[08:18:08] <FunkyBob> it's getting the value of the 'phoneNumber' field that was posted to this server
[08:18:12] <FunkyBob> that  this view is processing
[08:18:35] <FunkyBob> are you confusing the request object wit hthe requests library?
[08:18:45] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/request-response/#httprequest-objects
[08:18:48] <CapnKernel> dial.number() may do calling
[08:18:53] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/request-response/#django.http.HttpRequest.POST
[08:18:59] <Guest67> so if i just do dial.number('+12345678909') it is the same thing?
[08:19:40] <Guest67> it isn't calling though idk what i am doing wrong in the tutorial :/
[08:19:40] <FunkyBob> Guest67: request.POST['phoneNumber'] is getting the 'phoneNumber' field value from the posted form
[08:19:47] <FunkyBob> dial.number() is... your other libs API
[08:19:51] <CapnKernel> If dial.number('+12345678909') calls a number for you, and requests.POST['phoneNumber'] contains '+12345678909', then dial.number('+12345678909') and dial.number(request.POST['phoneNumber']) will do the same thing
[08:19:52] <Guest67> right
[08:20:06] <Guest67> ok cool
[08:20:18] <Guest67> so here i will show you my code compared to those 2 links
[08:20:37] <Guest67> for some reason i get an XML page but it isn't dialing the phone numbers
[08:20:38] <CapnKernel> For example: phoneNumber = requests.POST['phoneNumber']; dial.number(phoneNumber)
[08:20:47] *** Quits: ente_ (~ente@p200300dc5f0e88004800c925eda717c4.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:20:53] <CapnKernel> _what_ gets an XML page?  You personally?
[08:21:06] <Guest67> no twilio uses XML they call it TwML
[08:21:20] <Guest67> TwiML *
[08:21:45] <CapnKernel> What do you mean "get"?
[08:21:51] <Guest67> oh and the javascript i have no clue either maybe that has something to do with it
[08:22:01] <CapnKernel> You are confused
[08:22:05] <Guest67> but i will explain one moment to get the dpaste ready
[08:22:19] <CapnKernel> Javascript runs in your web browser, Python runs on your server
[08:22:45] <Guest67> no i know that but the javascript in the tutorial i mean maybe that is not doing anything
[08:22:47] *** Joins: ente_ (~ente@p200300dc5f14f500b681f952e085d8f4.dip0.t-ipconnect.de)
[08:23:07] <CapnKernel> I'm starting to walk away, backwards, and slowly.
[08:23:08] <FunkyBob> how did you prove it's not doing anything?
[08:24:20] <FunkyBob> did you test the value you were getting from request.POST?
[08:26:16] <Guest67> i replaced request.POST with an actual number to make it easier
[08:26:34] <FunkyBob> ok
[08:26:45] <Guest67> well the javascript ajax token grab works but then after that idk what to do
[08:27:05] <Guest67> i just have the device.on stuff in the tutorial but i don't think it is being utilized
[08:33:16] <Guest67> https://dpaste.org/v0cC
[08:33:21] <Guest67> ok so lettme explain
[08:33:59] <Guest67> I am passing in the {{token}} into the javascript ajax and that works
[08:34:21] <Guest67> but I am not getting "Twilio Ready" from the console logs
[08:35:17] <Guest67> When I click the call button I get <reasonse> <dial callerId="+12345678909"><Number>+19876543212</Number></Dial></Response>
[08:35:28] <Guest67> which is XML
[08:35:33] <Guest67> or TwiML
[08:36:42] <Guest67> I am combining things from the tutorial into 1 django function/method because i couldn't find where the function/method gets calleed
[08:36:53] <Guest67> the docs seem to be outdated with the github
[08:37:32] <Guest67> I found https://anvil.works/articles/twilio-browser-call
[08:37:51] <Guest67> which is what I want to do but it uses Anvil and import Twilio does not work
[08:38:36] <Guest67> i also setup a webhook as well and am using ngrok
[08:40:12] <wallbroken> FunkyBob: in the case i want to track every single item, my model is correct?
[08:40:53] <Guest67> i don't need all the support dashboard stuff in the tutorial i just want to setup what the anvil link shows but with a form instead. I am not tying into the form for now instead I am just forcing the numbers into the django when the call button is clicked
[08:41:13] <Guest67> in the twilio docs client token is now called access token
[08:41:48] <Guest67> the whole feature i want out of this is to literally make a call through the browser and use my mic to talk to people
[08:45:10] <Guest67> https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python
[08:45:17] <Guest67> this is another thing i found which looks similar
[08:45:57] <Guest67> but it seems to be in flask X)
[08:48:43] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[08:56:48] <CapnKernel> Guest67: The server where you run Django might be in one room, but your browser might be in one room (or on another continent).  If dial.number() runs on the server, what do you want to happen?
[08:57:08] <CapnKernel> Coz it seems like you need to do the dialing where the client is (ie, javascript land), not where the server is.
[08:57:44] <Guest67> hmm that could be
[08:57:51] <CapnKernel> Can you say with 100% certainty "the browser and server are the same machine"?
[08:58:04] <Guest67> right now i am on localhost testing with a bunch of burner phones
[08:58:17] <Guest67> and the free trial twilio number
[08:58:31] <CapnKernel> Can you say with 100% certainty "the browser and server are the same machine"?
[08:58:43] <Guest67> yes
[08:58:46] <CapnKernel> Ok good.
[08:59:15] <CapnKernel> Then what you're after is feasible, _however_ "literally make a call through the browser" is impossible
[08:59:33] <CapnKernel> It will be the server, via Django and twilio, that makes the call, not the browser
[08:59:51] <CapnKernel> The browser just acts as a trigger for making the call.  The call is done on the server.
[09:00:53] <CapnKernel> Something like this: 1. Client requests web page.  2. Server prepares web form, sends it back to the client.  3. User fills out phone number, hits "call".  4. Server receives the form data, and makes the call.
[09:00:53] <Guest67> ah yes you are right
[09:02:08] <CapnKernel> Does that line up with what you want?
[09:02:53] <Guest67> yes
[09:03:34] <CapnKernel> Ok, then your template doesn't need {{token}}.  The token never gets sent to the browser.  The token is just needed server-side to make the call.
[09:05:13] <CapnKernel> I'm still not sure where the TwiML comes in.
[09:05:29] <CapnKernel> And you say "for some reason i get an XML page but it isn't dialing the phone numbers".  Please tell me more about that.
[09:05:57] <CapnKernel> Is TwiML something your code produces, and passes to the Twilio lib?  Or is it something that comes from the Twilio lib?
[09:06:16] <Guest67> so i don't need any of that javascript code?
[09:07:09] <Guest67> my understanding is twiml is like an XML equivalent of the django code
[09:07:23] <Guest67> but it is supposedly easier for people to make
[09:07:38] <CapnKernel> currently looking at https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python
[09:08:06] <Guest67> i am not a fan of the twiml i'd rather have the python code to call instead but the tutorial uses it
[09:08:12] <CapnKernel> What I'm trying to work out is how much of their example is twilio doing in the browser, and how much is in server code.
[09:08:33] *** Joins: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl)
[09:09:40] <Guest67> yes the twiml is produced by the code via  response = VoiceResponse()
[09:10:19] <Guest67> but maybe you have to use that for what they call through the browser but is actually the server from what you said
[09:11:48] <CapnKernel> This code?  https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/app.py
[09:12:30] <Guest67> it is similar but written in flask
[09:12:46] <CapnKernel> That page is call the Javascript SDK.  My guess is it's a full JS lib running in the browser that operates the twilio lib on the server.
[09:12:49] <Guest67> I was working off of this https://github.com/TwilioDevEd/browser-calls-django/blob/main/browser_calls/views.py
[09:13:04] <Guest67> which is the tutorial
[09:13:21] <Guest67> but yea that makes sense what you said
[09:13:28] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:13:49] *** Joins: flynn (~mcbloch@user/flynn)
[09:13:53] <CapnKernel> Yeah they look roughly equivalent
[09:17:00] <CapnKernel> My guess is that the result of the dial.number() call on line 60 gets secretly tucked away inside twilio, then str(response) on line 67 magically retrieves it.  That's where the "Twilio Ready" message you're hoping would come from.
[09:17:25] *** Joins: fikran (~fikran@user/fikran)
[09:17:33] <Guest67> are you referring to my code or the link i just sent?
[09:17:44] <CapnKernel> Something in the JS pulls apart the response, and puts the result into the Event Log panel
[09:17:51] <CapnKernel> https://github.com/TwilioDevEd/voice-javascript-sdk-quickstart-python/blob/main/app.py
[09:18:25] *** Joins: sandeepk (~sandeepk@223.130.30.53)
[09:19:04] <Guest67> yea what you say makes sense but idk why it isn't doing that lol
[09:19:07] <CapnKernel> If you change your server call to "just do dial.number('+12345678909')", does it dial the number?
[09:19:26] <Guest67> no
[09:19:36] <Guest67> but the twiml gets generated
[09:19:44] <Guest67> and i redirect to that twiml xml
[09:19:57] <CapnKernel> Not surprising, that's where the lib's response goes
[09:20:49] <CapnKernel> Tell me more about this: <reasonse> <dial callerId="+12345678909"><Number>+19876543212</Number></Dial></Response>
[09:21:15] <Guest67> that is the twiml that gets created and i redirect to after clicking my call button
[09:21:16] <CapnKernel> What is <"reasonse">?  Is it a mistyped <Response>?
[09:21:23] <Guest67> yes it is a typo
[09:21:41] <Guest67> https://dpaste.org/TMTr
[09:21:45] <CapnKernel> When you say "I redirect to", do you mean you, Guest67?  Or something in your computer?  It's very confusion
[09:21:50] <CapnKernel> *confusing
[09:22:43] <CapnKernel> Where does that TwiML show up?  I mean, you're copying it into dpaste, but where are you copying it FROM?
[09:23:00] *** Joins: foo (~foo@user/foo/x-8763512)
[09:23:11] <CapnKernel> From your browser?  From where you ran manage.py runserver?
[09:23:25] <Guest67> i click my call button on 127.0.0.1:8000/phone then i get redirected to 127.0.0.1:8000/phone but the network tab in inspect says XML document ->  This XML file does not appear to have any style information associated with it. The document tree is shown below.
[09:23:49] <CapnKernel> Ok, so it's what gets sent from the server back to the client, yeah?
[09:23:56] <Guest67> yes
[09:24:28] <CapnKernel> And re "i get redirected to 127.0.0.1:8000/phone", it's not you that gets redirected, but your web browser, in response to the request to "127.0.0.1:8000/phone"?
[09:24:51] <Guest67> yes sorry the browser
[09:25:19] <foo> I was helping Guest67 in #twilio, moving here.
[09:25:23] <CapnKernel> When asking for help, it helps us if you can be really specific about stuff.  "it" or "I" is really unhelpful
[09:25:27] <CapnKernel> foo: Welcome
[09:25:55] <foo> Where I left it is, I'd like to ask Guest67 where they think the TwiML gets sent to Twilio. We already verified the TwiML that's being generated is accurate
[09:26:14] <CapnKernel> foo: Have you seen this?  https://github.com/TwilioDevEd/browser-calls-django/blob/main/browser_calls/views.py
[09:26:23] <Guest67> sorry capnkernel
[09:26:42] <foo> CapnKernel: I'm semi-busy and was trying to see if I could help Guest67 resolve it on their own simply by asking questions.
[09:26:50] <CapnKernel> Yeah
[09:27:50] <foo> It sounds to me like his app is not sending the TwiML to the Twilio system to be executed.
[09:28:07] <foo> Guest67, I imagine you can follow the code to see where the TwiML should be getting sent to Twilio.
[09:28:42] <CapnKernel> My guess is that line 54 seems to generate some kind of object.  In line 60, some magic happens behind the scenes, and there's some internal logging or state or something.  The evaluation of response on line 67 scrapes that saved stuff, and it gets returned to the browser
[09:29:01] <Guest67> hmmm maybe it is because i am on an XML page but my javascript is not?
[09:29:17] <Guest67> i need the xml and javascript to be on the same page?
[09:29:28] <Guest67> or output of the xml to be on the same page as the javascript
[09:29:37] <CapnKernel> foo: Here is the generated TwiML: https://dpaste.org/TMTr
[09:29:52] <audiobirb> FunkyBob, haven't tried it yet
[09:29:54] <foo> CapnKernel: Yup, Guest67 manually processed that in Twilio's console so we know that works.
[09:30:00] <CapnKernel> foo: Are you saying that needs to be sent to Twilio, that it's reception of that by Twilio that actually does the call?
[09:30:31] <foo> Guest67: You're trying to make an outbound call, not process an inbound call, right?
[09:30:45] <Guest67> yes outbound for right now
[09:30:56] <Guest67> accepting inbound would be a future thing
[09:31:04] <CapnKernel> foo: At present, his code is returning the XML to the browser.  Is that what you'd expect?
[09:31:24] <foo> CapnKernel: My hunch is that XML (per that dpaste) needs to get sent to the Twilio server.
[09:31:46] <CapnKernel> To me, I'd either expect the twilio lib on the server to send that to Twilio, or if it's returned to the browser, the browser would then need to forward that on
[09:31:53] <Guest67> webhook?
[09:32:05] <CapnKernel> And somewhere in there, something needs to control the attached mobile phone
[09:32:27] <foo> CapnKernel: I think you're correct.
[09:32:38] <foo> Guest67: A webhook would not be used for an outbound call, that would be used to process an inbound call.
[09:32:46] <Guest67> ooh
[09:33:07] <foo> Guest67: I suggest reading up on webhooks, might just take you a few minutes to get the concept
[09:33:25] <Guest67> no i know them i just didn't know they were used for inbound
[09:33:33] <Guest67> i used stripe webhooks before
[09:34:17] <CapnKernel> Guest67: See this code?  Between line 59 and 60 you could put print('phoneNumber=', request.POST['phoneNumber'])
[09:34:20] <foo> Guest67: Think about it: outbound is when you talk to Twilio and it initiates something. Inbound would mean Twilio is talking to your system, via a webhook. Maybe that flow helps.
[09:34:38] <CapnKernel> Let's park inbound for today, and think about getting outbound working :-)
[09:34:50] <foo> CapnKernel: Fair enough. ;)
[09:35:06] <CapnKernel> Obviously you have to work out how to integrate the print() into your own code
[09:35:22] <CapnKernel> But I'd be interested to know what you see at the django console.
[09:35:50] <CapnKernel> Should be something like: phoneNumber= +19876543212
[09:35:53] *** Joins: zBeeble42 (~zBeeble@2001:1928:1::35)
[09:35:55] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[09:35:57] <Guest67> well the problem is I don't have phoneNumber anywhere in my forms.py or template which is why I hard code the number into dial()
[09:46:11] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[09:49:51] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[09:51:05] <CapnKernel> Guest67: If you're hardcoding the number, then request.POST['phoneNumber'] is a bit further down the track.  Getting the hard coded number working is the first step
[09:51:25] <Guest67> right
[09:51:33] <Guest67> https://www.twilio.com/docs/voice/twiml
[09:51:37] <Guest67> for your reference
[09:54:18] <foo> Guest67: can you link me to the code again and let me know where you think your code/the library should be sending the TwiML to Twilio?
[09:54:46] <Guest67> https://dpaste.org/v0cC
[09:55:36] <Guest67> line 68 - 74 in the javascript
[09:55:43] <foo> Guest67: Are you thinking 146 conditional does everything?
[09:56:02] <Guest67> i did at first but i think the js lines have something to do with it
[09:56:12] <Guest67> because stripe works like that
[09:56:15] <Guest67> very similar
[09:56:50] <Guest67> stripe has stripe.js which is javascript that takes the credit card input from the form and sends it to stripe
[09:57:49] <Guest67> let me try a few things bc i don't have phoneNumber in my forms or template
[09:57:49] <foo> Guest67: I'm not sure I'd draw any correlations to stripe here, we're not talking about stripe.
[09:58:00] <foo> Guest67: I would simplify this until you can get it working
[09:58:03] <Guest67> yes but i imagine it is similar to how stripe does it with their api
[09:58:05] <foo> Guest67: Can you get into a regular python shell and initiate a call?
[09:58:20] <Guest67> i could but what should i call?
[09:59:35] <Guest67> console.log(device); shows undefined for the device
[10:04:21] *** Quits: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de) (Remote host closed the connection)
[10:04:40] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[10:04:51] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:05:37] <Guest67> https://www.twilio.com/docs/voice/sdks/javascript/migrating-to-js-voice-sdk-20#stop-listening-for-deviceonready
[10:05:52] <Guest67> the twilio docs X)
[10:06:00] <Guest67> maybe that has something to do with it
[10:08:00] <Guest67> i think the tutorial and github page is way outdated
[10:19:10] <serafeim> how would you do authentication in an API if you did not want to use session auth and you also did not want to use DRF ?
[10:20:47] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[10:28:40] *** Joins: gcain (~gcain@158.140.192.220)
[10:31:14] <gcain> Is anyone here any more? It seems super quiet these days...
[10:31:54] <FunkyBob> you're kidding, right?
[10:32:07] <serafeim> ha ha
[10:32:21] <serafeim> FunkyBob: how do you do authentication in django-nap without using the sessions
[10:32:32] <wallbroken> Melbourne and Victoria are two different city ?
[10:32:41] <wallbroken> or Victoria is the region?
[10:32:51] <gcain> FunnkyBob!
[10:33:05] <gcain> I've been in and out the last week or two and it's been super quiet!
[10:33:15] <gcain> Glad to see you guys are actually around. :)
[10:33:47] <FunkyBob> serafeim: umm... same way any other django app would, I guess.
[10:33:54] <FunkyBob> serafeim: why wouldn't IIi use session auth?
[10:34:05] <FunkyBob> wallbroken: Victoria is the state, Melbourne is the capital city of Victoria
[10:34:16] <wallbroken> ok, thank you
[10:34:23] <FunkyBob> gcain: indeed, it's not what it once was
[10:34:30] <wallbroken> i need to come there for work in the next month
[10:34:32] <FunkyBob> what with the discord, and forum...
[10:34:41] <FunkyBob> wallbroken: oh, really? and they're lettin you in??
[10:34:49] <gcain> Yeh, all the cool kids are on discord now...
[10:34:51] <serafeim> FunkyBob: because you may wanted to call your api from an android app ?
[10:34:57] <FunkyBob> serafeim: so?
[10:35:06] <FunkyBob> serafeim: android apps can stiill do session based auth
[10:35:14] <wallbroken> FunkyBob: my company has some offices there
[10:35:15] <FunkyBob> my i key is randomly repeating
[10:35:38] <serafeim> ha ha. so you would save the sesion cookie and pass it for every request ?
[10:35:39] <FunkyBob> wallbroken: likely nowhere near  in Melbourne where I live
[10:35:56] <FunkyBob> serafeim: if your http lib doesn't manage cookies properly, get a working one instead
[10:36:13] *** Quits: jfoster (~textual@c-71-236-195-25.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[10:36:31] <serafeim> yes ok. but if you can do session authentication what's the purpose of TokenAuthentication, JWT and all that stuff ?
[10:36:41] <FunkyBob> ah, well
[10:36:47] <serafeim> i mean why use all that things if you can just stick the cookie and be done with it ?
[10:36:55] <FunkyBob> JWT is so you can make yourself vulnerable to some crypto attacks
[10:37:01] <serafeim> lol ok
[10:37:06] <FunkyBob> token auths have their roles... I have a series of blog posts on it
[10:37:20] <FunkyBob> https://blog.tinbrain.net/blog/index.html
[10:37:26] <FunkyBob> top 3 posts, in fact
[10:37:41] <serafeim> yes i see it thanks
[10:38:01] <wallbroken> FunkyBob: i guess that my company should care about visa access
[10:38:13] <FunkyBob> serafeim: primarily the second post
[10:41:28] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[10:41:55] *** Joins: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de)
[10:43:22] <serafeim> so tokens are useful for automated agents and 3rd party authnetication
[10:45:22] <serafeim> ok i'll go on with the session cookie approach
[10:45:28] <FunkyBob> most useful for cases of delegation, yes
[10:53:05] <gcain> I have a table of strings call A; and I have a table of keywords called B; I can't wrap my head around how to all the records from B that match each record in A. I'm using fulltext search for this. Previously in SQL I used the following "SELECT category_regex.category_id, category_regex.id, transaction.id, transaction.account_id FROM category_regex INNER JOIN transaction ON transaction.descr @@ to_tsquery('simple',category_regex.filterwords)" bu
[10:53:05] <gcain> t I want to do this with Django.
[10:53:46] <gcain> I was able to get it to work with a nested loop; but its super slow.
[10:55:20] <FunkyBob> this sounds familiar
[10:55:39] <gcain> :)
[10:55:51] <FunkyBob> so  you want to join on a non fkey term
[10:56:02] <FunkyBob> perhaps this might help? https://devblog.kogan.com/blog/custom-relationships-in-django
[10:56:05] <gcain> It would be very familiar to you... You saved me last time....
[10:56:41] <gcain> I don't know if I want to join... All I want are a list of the records from table B that match on table A.
[10:56:53] <FunkyBob> ... you have a join in your example sql
[10:56:54] <gcain> But a join is how I did it in SQL.
[10:57:03] <FunkyBob> well, that's what the ORM produces... SQL
[10:57:35] <gcain> Yes, but I'm not sure if that is the correct way; it's just how I got it to work last time.
[10:57:41] <CapnKernel> wallbroken: good luck getting into Australia/Victoria
[10:58:02] <FunkyBob> gcain: well, then that's a question for #postgresql :)
[10:58:26] <FunkyBob> CapnKernel: they're vaxed, and it's for business... so the feds wiill probably welcome them :/
[10:58:41] <CapnKernel> Still have to go through quarantine
[10:58:50] <CapnKernel> And good luck getting a flight
[10:59:03] <FunkyBob> yah
[10:59:09] <FunkyBob> unless you're a "sports star'...
[10:59:10] <CapnKernel> wallbroken: Flights booked?  It takes months to get flights, at the moment
[10:59:19] <gcain> FunkyBob: Not any more because I want to do it using Django now. I'm pretty sure Django will have a more elegant solution than my hacky SQL.
[10:59:19] <CapnKernel> Don't get me started.  Just don't.
[10:59:25] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Read error: No route to host)
[10:59:32] <FunkyBob> gcain: you seem to keep skipping over the important part
[10:59:48] <FunkyBob> why _wouldn't_ you have django get the DB to do the work?
[10:59:54] <FunkyBob> or do y ou mean you want _python_ to do the work?
[11:00:03] <gcain> Yeh, it totally should!
[11:00:09] <FunkyBob> ...
[11:00:10] <gcain> But I can't even imagine how to do it.
[11:00:15] <FunkyBob> you
[11:00:17] <FunkyBob> you just said how
[11:00:20] <FunkyBob> wtf?
[11:00:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[11:00:35] <FunkyBob> SELECT category_regex.category_id, category_regex.id, transaction.id, transaction.account_id FROM category_regex INNER JOIN transaction ON transaction.descr @@ to_tsquery('simple',category_regex.filterwords)
[11:00:59] <gcain> I don't know how to write that using Django.
[11:01:09] <FunkyBob> that's a different issue entierly
[11:01:12] <FunkyBob> entirely
[11:01:33] <gcain> I feel like I've missed something seriously obvious here...
[11:01:45] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/contrib/postgres/search/
[11:02:07] <FunkyBob> django has built in support for tsquery and friends
[11:02:10] <CapnKernel> He did say "but I want to do this with Django."
[11:02:17] <gcain> I've read that.
[11:02:29] <gcain> And it gets me close, except my key words are in a different table.
[11:02:35] <FunkyBob> gcain: so the other part you need for your non-fkey join ... is the article I linked to before
[11:03:07] <gcain> OK, let me dig a little and I'll report back. Looks like I didn't pick up what you were linking me to.
[11:03:29] <wallbroken> CapnKernel: my company cares about burocracy stuff to come there
[11:03:36] <wallbroken> i don't need to worry about that
[11:05:00] <CapnKernel> You must have speshal skillz, because flights currently cost around USD9000 one way
[11:07:30] <wallbroken> i need to get requirement from a customer for a solution design
[11:07:37] <wallbroken> *requirements
[11:08:09] <wallbroken> it's the customer that makes payments, not me, not my company
[11:08:42] <gcain> FunkyBob: so what this is doing, is giving me a runtime relationship between two tables that don't otherwise have one?
[11:09:03] <FunkyBob> gcain: right, like the join you described above
[11:10:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:10:24] <gcain> OK, cool. And then I'd just use search using this... I'm guessing it's a lot better to have a SearchVectorField and a GIN index on it too?
[11:11:10] <FunkyBob> if you can pre-calculate the to_tsquery into an index, yeah, that should make it faster
[11:11:36] <FunkyBob> again, django iis just using the DBMS... how best to do it in PG is how best to do it
[11:12:39] <gcain> Thanks.
[11:17:49] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[11:22:15] *** Quits: gcain (~gcain@158.140.192.220) (Remote host closed the connection)
[11:24:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[11:25:41] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:f6cb:b062:73b7:c13b)
[11:26:48] *** Joins: fikran (~fikran@user/fikran)
[11:33:25] <audiobirb> FunkyBob, haven't tried it yet
[11:39:42] *** Quits: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:44:12] <FunkyBob> so you said
[11:48:44] *** Quits: rob4226 (~Thunderbi@64.64.117.170) (Quit: rob4226)
[11:49:13] *** Joins: Atque (~Atque@user/atque)
[11:49:26] *** Joins: Guddu (~Guddu@190.84.88.92)
[11:50:15] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[11:52:16] *** Joins: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl)
[11:52:27] *** Joins: gcain (~gcain@158.140.192.220)
[11:57:14] *** Joins: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro)
[11:57:40] *** Parts: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro) ()
[11:57:45] *** Joins: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro)
[11:57:48] *** Parts: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro) ()
[11:58:00] *** Joins: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro)
[12:01:52] <mad_moses> Hi, I am looking for a tool for e-mail automation. Currently I use MailJet as my e-mail gateway and implement all logic for e-mail events in my django backend on my own. I am wondering if there is allready a nice tool which I can reuse
[12:08:40] *** Quits: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro) (Quit: ciurca)
[12:12:56] *** Joins: slav0nic (slav0nic@python.su)
[12:19:58] *** Joins: Gudddu (~Guddu@190.84.88.92)
[12:22:28] <FunkyBob> mad_moses: that's a little... vague
[12:22:41] <FunkyBob> what sort of 'automation' are you after? what functionality do you need?
[12:23:13] *** Quits: Guddu (~Guddu@190.84.88.92) (Ping timeout: 252 seconds)
[12:24:20] <mad_moses> FunkyBob: Something like: A user has not logged in for a while => send an e-mail; A user don't uploaded an image => send an e-mail; A user has not filled out all informations for his profil => send an e-mail: But don't send more then one email every 3 days
[12:24:24] <mad_moses> something like that.
[12:25:39] <FunkyBob> so not so much the email sending side, but the logic for "condition has arisen, send-but-don't-flood"
[12:25:48] <mad_moses> FunkyBob: yes
[12:25:50] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 250 seconds)
[12:26:35] *** Quits: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de) (Remote host closed the connection)
[12:27:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:28:11] <gcain> Hey FunkyBob, what would the keywords field be, a SearchQueryField?
[12:28:34] <gcain> I'm seeing ProgrammingError: operator does not exist: tsvector = text which makes me think it needs a field type change.
[12:28:52] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
[12:30:32] <FunkyBob> SearchVector is the functoin which expresses as to_tsvector
[12:30:53] <FunkyBob> SearchVectorField iis a field type for those alues
[12:30:55] <FunkyBob> values
[12:31:18] <FunkyBob> see https://github.com/django/django/blob/main/django/contrib/postgres/search.py
[12:32:15] <gcain> So, the I have the string I want to match on as a SearchVectorField, it looks right. What field would the filterwords be that I want to match to?
[12:33:02] <gcain> I see now.
[12:34:34] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[12:34:51] *** Joins: rob4226 (~Thunderbi@64.64.117.170)
[12:36:46] *** Quits: Gudddu (~Guddu@190.84.88.92) (Quit: Leaving)
[12:37:01] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[12:37:12] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:38:04] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:43:38] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:46:01] <gcain> If I try change the keywords field to SearchVectorField I get a syntax error on the very first record. It doesn't seem to like the keywords; so it must be wrong because they work in SQL.
[12:46:42] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Quit: Lost terminal)
[12:46:55] <gcain> It's trying to case a textfield to a SearchVectorField when it fails.
[12:49:46] <mad_moses> FunkyBob: do you think this is something I have to build on my own?
[12:51:04] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:f6cb:b062:73b7:c13b) (Remote host closed the connection)
[12:53:59] <duoi> gcain you can always write it in raw sql
[12:54:15] <duoi> the .raw() operator is still an option that will give you django objects back
[12:54:38] <gcain> duoi: That is where I am coming from. I decided I wanted it in Django so I didn't have raw bits of magic sql in the middle of the app.
[12:55:14] <duoi> gcain you end up with equally magical bits of fringe django
[12:55:43] <gcain> True, but at least it's all the same language.
[12:56:30] <gcain> I'm pretty sure I've just misunderstood the types the fields need to be to make it work.
[12:56:43] <gcain> It's trying and failing on the cast; which it shouldn't need to do.
[13:02:37] *** Joins: rob4227 (~Thunderbi@136.144.35.9)
[13:03:10] *** Quits: rob4226 (~Thunderbi@64.64.117.170) (Ping timeout: 240 seconds)
[13:03:10] *** rob4227 is now known as rob4226
[13:07:19] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[13:08:17] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:33:45] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:34:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[13:35:16] *** Quits: WayToDoor7 (~WayToDoor@user/waytodoor) (Quit: See you later :))
[13:36:09] *** Joins: fikran (~fikran@user/fikran)
[13:36:19] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:39:43] *** Joins: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de)
[13:45:22] <gcain> The query being generated is incorrect, actually. I can get it to create the correct one, but not how I want to use it for text search.
[13:45:38] *** Quits: bambanxx (~bambanx@181-163-47-199.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:47:40] <gcain> Matching with fields of the same type it works as expected. Hmmmm.
[13:54:31] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[13:55:37] <bandit_za> can someone help me with an issue with INSTALLED_APPS? https://dpaste.org/x948
[13:58:49] <bandit_za> hmm, seems like an issue with the way I'm importing the model in the view: https://dpaste.org/WpOE
[14:02:23] <bandit_za> okay tracing back, it seems to go to the urlconf, where the view is imported
[14:03:53] <bandit_za> is this a circular import kinda thing?
[14:07:53] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:08:40] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[14:08:47] <CapnKernel> bandit_za: If no-one here is responding, you may need to start a fresh project, and copy across your existing code bit by bit until you've isolated where it breaks.  On Windows, WinMerge may help.  On Linux/MacOS, meld may help.
[14:09:20] <CapnKernel> Start with a working app, and each cycle, copy across the smallest amount of change you can.
[14:09:42] <bandit_za> CapnKernel that is a poor suggestion
[14:09:51] <CapnKernel> How much did you pay for it?
[14:09:59] <bandit_za> it is a suggestion which applies to every single problem and is completely impractical
[14:10:16] <CapnKernel> Exactly.  It's a generalised technique
[14:10:29] <bandit_za> i'm not completely materialistic to believe that the worth of all things is what you pay for them
[14:10:33] <CapnKernel> We're not going to hand you your solution on a plate
[14:10:40] <bandit_za> but, seriously, what is the point of posting a solution like that?
[14:11:05] <CapnKernel> It's not a solution.  It's a technique you can use to HELP YOURSELF, if no-one here offers anything better.
[14:11:28] <bandit_za> there's this newer technique called version control
[14:11:32] <CapnKernel> If someone does actually offer you some focused help, you won't need my suggestion.  More power to you!
[14:11:47] <CapnKernel> It's not dissimilar to things like git bisect, yes.
[14:11:51] <bandit_za> it's an excellent solution to the class of problems your solution solves. unfotunlately, that's not my issue
[14:12:07] <bandit_za> *unfortunately
[14:12:07] <CapnKernel> Not going to fight you, got better things to do.  Enjoy.
[14:13:15] <CapnKernel> If you're able to say "it works when I do A, but with this small change to B", then we may be able to help you
[14:13:31] <CapnKernel> *but with this small change to B it stops working"
[14:18:42] *** Joins: bandit_za39 (~bandit_za@2c0f:ed28:b016:7760::1ed)
[14:19:04] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Killed (NickServ (GHOST command used by bandit_za39)))
[14:19:09] *** bandit_za39 is now known as bandit_za
[14:21:28] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[14:25:08] <GinFuyou> bandit_za, that's still pretty practical to find out what you did with this model to get that error
[14:26:42] <GinFuyou> There are a few pits like circular model import or using db access before apps is ready, I don't remember what are exact errors in those
[14:27:12] *** Quits: barrios (~barrios@dynamic-046-114-142-069.46.114.pool.telefonica.de) (Remote host closed the connection)
[14:27:19] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[14:27:31] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[14:27:42] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:27:42] <GinFuyou> well, here I notice suspicious import  `from mtgl.live.models import Match` - what is mtgl.live ?
[14:27:51] <bandit_za> the problem is that I am an idiot and the solution was to read the error message, not copy out the whole model into a NEW project. is that the kind of pain people would be willing to subject themselves to? anyways the solution in this case was to explicitly define `app_label` on `Meta`
[14:28:05] <bandit_za> thanks for the help, GinFuyou
[14:28:30] <bandit_za> GinFuyou I am using django-cookiecutter and the way it lays out apps is slightly different to the django standard.
[14:28:37] <GinFuyou> No really, you usually don't define app label explicitly
[14:29:01] <gcain> bandit_za: Isolation testing is the first tool we're all taught in engineering... The suggestion was 100% valid.
[14:29:13] <GinFuyou> Well, yeah, this one could be the case
[14:29:24] <bandit_za> gcain I'm not attacking isolation testing, that's a strawmamn
[14:31:22] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[14:33:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:33:48] <bandit_za> GinFuyou, you were right. I investigated this further and the issue was incorrectly configured `AppConfig`
[14:39:44] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Quit: Quit)
[14:39:57] *** Joins: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de)
[14:44:36] *** Quits: barrios (~barrios@ip5f5aba17.dynamic.kabel-deutschland.de) (Client Quit)
[14:52:07] <serafeim> hey FunkyBob in your code here: https://blog.tinbrain.net/blog/session-auth-spa.html i can't udnerstand where you get the value from the csrf_token you pass in your login ajax code
[14:59:28] <knbk> serafeim: that's described here: https://docs.djangoproject.com/en/3.2/ref/csrf/#ajax (it's linked in the "Problems" section)
[15:01:15] <serafeim> knbk: this doesn't help me that much
[15:02:17] <knbk> anything specific that's unclear?
[15:02:50] <serafeim> yes you have to read the blog post i posted before to understand
[15:03:20] <serafeim> in it you'll see that it has some ajax code for loggin in. where it passes a csrf_token
[15:03:37] <serafeim> however there's no place where that csrf_token can be retrieved
[15:03:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-27c8-a94a-768a-c5a3.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:03:45] <serafeim> i know how to retrieve it if i have a normal django page.
[15:04:51] <knbk> the first part describes how to ensure the csrf cookie is set. The django docs then describe how you can retrieve the cookie value in JS. All you have to do is replace the literal `csrf_token` in the ajax call with the value retrieved from the cookie
[15:06:11] <serafeim> knbk: but i don't have that cookie anywhere. i haven't login normally
[15:06:46] <serafeim> my only transaction with the server is getting and posting that view
[15:06:56] <knbk> that's explained in the blog post.... in "The Endpoint"
[15:07:42] <serafeim> i've read it
[15:07:57] <serafeim> it doesn't say anything on where to retriegve the csrf_token
[15:08:23] <knbk> you do a GET request to an endpoint that has `@ensure_csrf_cookie` to ensure the cookie is set. After that you can use the snippet from the django docs to get the csrf token value from the cookie
[15:08:27] <serafeim> this thing `const user = await fetch('/user/', { credentials: 'same-origin' }).then(resp => resp.json())` will return a 403 if the user hasn't been logged in
[15:09:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:09:18] <serafeim> the 403 doesn't set the cookie.
[15:10:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:11:50] <serafeim> here's my login code: https://dpaste.org/XwvG
[15:11:54] <knbk> it should... the decorator doesn't care what the response code is
[15:12:05] <serafeim> i'm doing the get. and then the post. but i can't find the cookie anywhere
[15:12:29] <serafeim> knbk: yes i have observed that the cookie is not set even if it returns a 200-ok response
[15:12:35] <knbk> are you running django and the frontend on the same port or a different one?
[15:12:41] <serafeim> different port
[15:12:47] <knbk> well, there's your problem
[15:12:48] <serafeim> 8000 django 8001 f-e
[15:12:50] <serafeim> knbk: :)
[15:12:53] <serafeim> so
[15:13:05] <serafeim> how can i pick the csrf token value ?
[15:13:57] <knbk> you'll need more to get cookie-based sessions working cross-origin
[15:15:20] <knbk> hm, I can't find any good resources on that right now
[15:16:13] <knbk> this package would be a good starting point, seems like they also link some other resources: https://github.com/adamchainz/django-cors-headers
[15:16:23] <serafeim> uh oh
[15:16:48] <knbk> it might be easier to run everything on the same host/port :)
[15:17:08] <serafeim> ha ha yes i know
[15:17:10] <serafeim> thanks
[15:18:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[15:19:04] *** Quits: gcain (~gcain@158.140.192.220) (Remote host closed the connection)
[15:19:45] <carlorat1> do you know of any ecommmerce app where the user can make offers for items?
[15:25:29] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 248 seconds)
[15:33:19] *** Joins: mikkel (~mike@208.110.120.167)
[15:34:39] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[15:43:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[15:45:31] *** Joins: fikran (~fikran@user/fikran)
[15:55:04] *** Joins: kostkon (~kostkon@2a02:587:a110:6f20:b1f0:6beb:6b69:cf32)
[15:59:10] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[16:04:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:08:34] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:16:24] *** Joins: Qwerky (~Qwerky@37.170.7.5)
[16:20:07] *** Quits: dre (~dre@2001:8003:c932:c301:2c3:7064:672c:648) (Ping timeout: 258 seconds)
[16:22:54] *** Joins: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro)
[16:23:02] *** Quits: ciurca (~Thunderbi@5-15-3-125.residential.rdsnet.ro) (Client Quit)
[16:24:45] *** Joins: dez (uid92154@user/dez)
[16:27:54] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[16:35:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:42:00] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Quit: WeeChat 3.2)
[16:46:11] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-65bf-4803-7300-cd0a.res6.spectrum.com)
[16:46:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:50:57] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Ping timeout: 245 seconds)
[16:53:39] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:55:29] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
[16:59:04] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[16:59:42] *** Quits: hyper_dave (~hyper_dav@197.156.103.172) (Ping timeout: 250 seconds)
[17:09:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-65bf-4803-7300-cd0a.res6.spectrum.com) (Ping timeout: 240 seconds)
[17:11:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[17:14:40] *** Joins: hyper_dave (~hyper_dav@197.156.103.172)
[17:22:36] *** Joins: bss (bss@rie.incorporeal.org)
[17:27:11] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[17:27:26] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 250 seconds)
[17:32:24] *** Joins: Elzington_ (~Elzington@68.235.43.100)
[17:34:40] *** Quits: Elzington (~Elzington@68.235.43.14) (Ping timeout: 240 seconds)
[17:43:59] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[17:44:26] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[17:50:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:53:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:54:53] *** Joins: fikran (~fikran@user/fikran)
[17:56:17] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[17:57:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi)
[18:01:55] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[18:03:53] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 248 seconds)
[18:05:19] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 252 seconds)
[18:09:50] *** Joins: thiras (~thiras@user/thiras)
[18:10:09] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[18:22:22] *** Joins: leElvyn (~leElvyn@user/leelvyn)
[18:23:42] <leElvyn> Hi, i would like to compare a django datetime to datetime.datetime.utcnow(), but since one is aware, how can i compare a django datetime to a naive datetime ?
[18:24:04] <leElvyn> convert, not compare, sorry
[18:24:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:24:25] *** Joins: flynn (~mcbloch@user/flynn)
[18:33:19] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:34:00] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[18:35:59] *** Joins: Goury (~Goury@46-116-233-111.bb.netvision.net.il)
[18:39:29] <Goury> So I have a model with custom primary_key and when I try to use it as FK in another model I get "Alter table `db`.`app_table` with foreign key `app_model_alsomodel_id_24d0f0bd_fk_app_alsomodel` constraint failed. Field type or character set for column 'alsomodel_id' does not mach referenced column 'alias'"
[18:40:03] <Goury> what am I supposed to do about it?
[18:40:42] <Goury> how do I even start debugging this?
[18:51:58] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[19:04:53] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Remote host closed the connection)
[19:05:02] *** Quits: sandeepk (~sandeepk@223.130.30.53) (Quit: Leaving)
[19:07:58] *** Quits: Elzington_ (~Elzington@68.235.43.100) (Ping timeout: 250 seconds)
[19:11:12] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[19:21:25] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[19:28:08] *** Quits: Qwerky (~Qwerky@37.170.7.5) (Remote host closed the connection)
[19:32:51] *** Joins: Qwerky (~Qwerky@37.170.7.5)
[19:37:26] *** Quits: Qwerky (~Qwerky@37.170.7.5) (Ping timeout: 250 seconds)
[19:42:03] *** Joins: Siecje (~Siecje@216.154.5.117)
[19:42:17] <Siecje> Does migrations.RenameModel() keep the data in the table? It changes the table name.
[19:43:09] <hylje> it does
[19:44:57] <Siecje> Thanks
[19:51:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56739f-227.dhcp.inet.fi) (Quit: Leaving)
[19:52:25] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:57:13] *** Quits: matthewwilkes (sid500242@highgate.irccloud.com) (Read error: Connection reset by peer)
[19:57:14] *** Quits: pierrepaul (sid504261@id-504261.highgate.irccloud.com) (Read error: Connection reset by peer)
[20:02:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[20:04:14] *** Joins: fikran (~fikran@user/fikran)
[20:09:13] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Read error: Connection reset by peer)
[20:09:40] *** Joins: matthewwilkes (sid500242@id-500242.highgate.irccloud.com)
[20:18:19] *** Joins: jess (~jess@libera/staff/jess)
[20:33:40] *** Joins: rob4227 (~Thunderbi@136.144.35.21)
[20:36:15] *** Quits: rob4226 (~Thunderbi@136.144.35.9) (Ping timeout: 268 seconds)
[20:36:15] *** rob4227 is now known as rob4226
[20:47:34] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:48:02] *** Quits: zBeeble42 (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[20:48:31] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[20:50:18] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[20:50:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[20:51:22] *** Joins: simplicity (~yti@user/simplicity)
[21:00:16] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:05:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[21:05:24] <dlam> these days, when overriding 'objects' on a model, do you still do the manager way?  or is it with the newer subclass-QuerySet-way?
[21:13:49] <knbk> dlam: depends on what you need. What exactly do you mean with manager/subclass-queryset way?
[21:18:30] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:19:41] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[21:23:35] <dlam> I just want to make a method  Book.objects.has.been_read()!    And I meant by manager,  subclassing django.db.models.Manager vs. django.db.models.QuerySet !
[21:33:07] <knbk> dlam: does that just filter the queryset? If so, it makes sense to subclass QuerySet and use `objects = YourCustomQuerySet.as_manager()()` so you can chain it before/after other qs methods
[21:33:30] <dlam> yeah it just filters it, kk ill do taht way
[21:55:14] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 250 seconds)
[22:10:07] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[22:10:10] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[22:10:50] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[22:10:53] *** Joins: cellofellow (~user@166.70.50.58)
[22:12:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[22:13:36] *** Joins: fikran (~fikran@user/fikran)
[22:15:08] *** Quits: mikkel (~mike@208.110.120.167) (Quit: leaving)
[22:22:13] *** Quits: routebee (~norman@103-205-28-236.dyn.launtel.net.au) (Ping timeout: 256 seconds)
[22:22:46] *** Joins: djacobs (~IceChat95@241.171-133-109.adsl-dyn.isp.belgacom.be)
[22:23:30] *** Quits: djacobs (~IceChat95@241.171-133-109.adsl-dyn.isp.belgacom.be) (Client Quit)
[22:25:06] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Read error: Connection reset by peer)
[22:26:05] *** Joins: djacobs (~IceChat95@109.133.171.241)
[22:27:50] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:30:05] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[22:30:46] *** Joins: routebee (~norman@103-205-28-236.dyn.launtel.net.au)
[22:34:49] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Ping timeout: 252 seconds)
[22:37:28] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[22:39:05] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 248 seconds)
[22:46:33] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[22:58:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:58:10] *** ChanServ sets mode: +v EvilDMP
[23:07:00] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:08:57] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:10:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:21:02] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:23:24] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:26:20] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:28:37] *** Joins: pro_z (~pro_z@37.214.32.238)
[23:31:02] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:31:51] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:32:49] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[23:33:39] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:38:38] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[23:39:41] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:40:16] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[23:41:26] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[23:41:55] *** Joins: djapo (~archangel@user/djapo)
[23:42:14] *** Joins: Qwerky (~Qwerky@37.170.7.5)
[23:45:10] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:45:28] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[23:49:13] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
