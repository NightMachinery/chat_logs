[00:01:38] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[00:07:16] *** Quits: mrcom (~msouth@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: Konversation terminated!)
[00:09:50] *** Joins: akoana (~ah@user/akoana)
[00:11:21] *** Joins: lad (~lad@user/lad)
[00:14:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[00:22:01] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:35:06] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[00:35:15] *** Joins: amb007 (~a_bakic@79.101.103.130)
[00:35:32] *** Quits: Guest12 (~Guest12@72.92.132.99) (Quit: Client closed)
[00:37:59] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:46:01] *** Quits: amb007 (~a_bakic@79.101.103.130) (Ping timeout: 248 seconds)
[00:46:28] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[00:47:39] <mfiano> jcowan: There is a (semi-; 3 popular implementations) portability library for true global variables.
[00:48:01] <jcowan> Yes, that depends on symbol-macro, right?
[00:48:05] <mfiano> No
[00:48:11] <mfiano> Implementation-specific features
[00:48:16] <mfiano> Like threads etc
[00:48:29] <mfiano> I mean, just as threads are not standard
[00:49:10] <mfiano> On the implementations lacking support it will fall back to what you speak of, though.
[00:51:37] <mfiano> But I would say SBCL, CCL, and LispWorks is a decent start for implementation support.
[00:52:19] <mfiano> Maybe more have it these daya, as the library is fairly old, in which case the library needs to be updated to wrap them too.
[00:52:32] <mfiano> jackdaniel should know if ECL supports such a thing.
[00:55:25] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[00:57:39] <mfiano> But, I do use global-vars in my own codes fairly often when I need global state without such a runtime overhead as dynavars.
[00:57:43] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[00:57:53] <mfiano> Night all!
[00:57:59] <Josh_2> G'night
[00:59:27] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:06:38] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:08:34] *** Quits: scymtym (~user@2001:638:504:20e5:e269:db37:7338:d52) (Ping timeout: 272 seconds)
[01:16:57] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[01:18:54] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[01:20:54] *** Joins: lisp123_ (~lisp123@45.130.83.200)
[01:24:20] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[01:28:51] *** Joins: lisp123__ (~lisp123@45.130.83.200)
[01:29:51] *** Joins: nirnam (~nirnam@1.46.28.192)
[01:30:09] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[01:30:12] <jasom> Does anyone else wince in pain when they see a commit that adds code that uses "ignore-errors" /
[01:30:40] <phoe> (ignore-errors (say "No, not at all"))
[01:31:03] *** Quits: lisp123_ (~lisp123@45.130.83.200) (Read error: Connection reset by peer)
[01:34:12] <_death> it doesn't actually ignore the errors, and can return them as the secondary value, so may be ok
[01:37:32] *** Joins: pve (~pve@87-93-200-16.bb.dnainternet.fi)
[01:39:44] <kakuhen> jasom: i havent seen that yet, but i do find extraneous DECLAREs amusing
[01:39:58] <kakuhen> ive ran into some lisp code where a function takes in arguments foo, bar, baz, yet they (declare (ignorable foo bar baz))
[01:40:19] <kakuhen> presumably the original writer of the function was testing some things and forgot to remove the declare
[01:40:25] *** Quits: pve_ (~pve@176-93-71-25.bb.dnainternet.fi) (Ping timeout: 248 seconds)
[01:40:31] <jasom> _death: it's actually (ignore-errors ..) (values)
[01:41:07] <phoe> kakuhen: or the API passes in more arguments that the function actually makes use of
[01:41:12] <phoe> oh wait, IGNORABLE and not IGNORE
[01:41:24] <kakuhen> :3c
[01:42:28] <_death> jasom: yeah, that may be nasty
[01:44:23] *** Joins: pillton (~user@2405:b000:600:b0::36a)
[01:44:56] <jasom> the body is just (delete-file (pathname stream)) I'd have to look up what errors those can throw
[01:45:18] <phoe> clhs delete-file
[01:45:18] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_del_fi.htm
[01:45:29] <phoe> oh right, it signals a file-error if it fails to delete the file
[01:45:57] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[01:50:16] *** Joins: ahc (~ahc@121.98.229.241)
[01:53:17] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 258 seconds)
[01:53:18] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:56:40] *** Quits: lisp123__ (~lisp123@45.130.83.200) (Remote host closed the connection)
[01:57:20] *** Joins: lisp123 (~lisp123@45.130.83.200)
[01:58:09] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[01:58:26] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:01:55] *** Quits: lisp123 (~lisp123@45.130.83.200) (Read error: Connection reset by peer)
[02:03:57] <phoe> that's why uiop:delete-file-if-exists is a thing
[02:04:09] <jasom> Right, I would be okay if it silently consumed a file-error, but this could hide bugs like the stream not actually being a stream
[02:04:25] <phoe> yes
[02:04:53] <jasom> That's my bigger issue with ignore-errors is that it only works if you only get the errors you expect, and if you know which errors you expect, you can handler-case those away
[02:12:30] *** Parts: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (#commonlisp)
[02:15:18] <_death> sigh.. seems cl-sqlite doesn't call sqlite3_close() when sqlite3_open()'s error code is not :ok
[02:18:08] *** Quits: Guest5143 (~Guest51@72.92.132.99) (Quit: Client closed)
[02:19:13] *** Quits: nirnam (~nirnam@1.46.28.192) (Remote host closed the connection)
[02:20:25] <lotuseater> oh does it need an UNWIND-PROTECT ? ^^
[02:21:41] <_death> it needs code to do that before signaling an error
[02:22:25] <lotuseater> :)
[02:24:55] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[02:26:17] *** Quits: lad (~lad@user/lad) (Ping timeout: 248 seconds)
[02:28:48] <Alfr> phoe, I always thought that is just a remedy for the implementation dependence of deleting a non-existing file.
[02:30:29] *** Joins: byleth (~user@exc222.neoplus.adsl.tpnet.pl)
[02:30:54] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[02:32:59] *** Joins: lisp123 (~lisp123@45.130.83.200)
[02:33:25] *** Joins: nirnam (~nirnam@1.46.28.192)
[02:34:34] <pjb> phoe: why does a name such as delete-file-if-exists starts the red alert in my mind?  (uiop:delete-file-if-exists "/etc/passwd") -> nil which is wrong, you want a file-error in that case!
[02:35:02] <pjb> phoe: note: (progn (uiop:delete-file-if-exists "/etc/passwd") (probe-file "/etc/passwd")) #| --> #P"/private/etc/passwd" |#  and no other process created it in between!
[02:38:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:39:50] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[02:42:03] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[02:42:04] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[02:42:21] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 258 seconds)
[02:42:24] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 276 seconds)
[02:43:12] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[02:43:30] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Ping timeout: 258 seconds)
[02:43:44] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:46:00] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[02:47:44] *** Joins: karlosz (~karlosz@router.cloyne.org)
[02:48:06] *** Quits: gaqwas (~john@dynamic-095-118-114-085.95.118.pool.telefonica.de) (Ping timeout: 258 seconds)
[02:48:52] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651)
[02:49:36] *** Quits: pve (~pve@87-93-200-16.bb.dnainternet.fi) (Quit: leaving)
[02:50:17] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 248 seconds)
[03:01:22] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651) (Ping timeout: 272 seconds)
[03:01:23] *** Joins: raeda (~raeda@72.49.219.33)
[03:06:55] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Remote host closed the connection)
[03:07:30] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[03:10:33] *** Quits: byleth (~user@exc222.neoplus.adsl.tpnet.pl) (Ping timeout: 248 seconds)
[03:11:24] *** Quits: frgo (~frgo@p200300deef181d0098d569c215f9f88e.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:11:34] *** Joins: frgo (~frgo@p200300deef181d00e13f7bdeb1305ddd.dip0.t-ipconnect.de)
[03:13:47] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[03:14:40] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 272 seconds)
[03:20:05] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[03:21:38] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:23:06] *** Joins: lisp123 (~lisp123@45.130.83.200)
[03:27:46] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 268 seconds)
[03:36:42] *** Joins: gaqwas (~john@dynamic-095-118-114-085.95.118.pool.telefonica.de)
[03:43:45] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[03:45:46] *** Joins: khrbt_ (~khrbt@user/khrbt)
[03:46:44] *** khrbt_ is now known as khrbt
[03:51:10] *** Joins: tyson2 (~user@toroon12-3096782363.sdsl.bell.ca)
[03:52:25] *** khrbt is now known as khrbt_
[03:58:13] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[04:00:49] *** Joins: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7)
[04:02:05] *** Quits: gaqwas (~john@dynamic-095-118-114-085.95.118.pool.telefonica.de) (Ping timeout: 258 seconds)
[04:03:00] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[04:11:32] *** Quits: PinealGl1ndOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[04:21:04] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[04:21:57] *** Quits: tyson2 (~user@toroon12-3096782363.sdsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[04:22:40] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 268 seconds)
[04:32:41] *** Quits: random-nick (~random-ni@87.116.182.190) (Ping timeout: 248 seconds)
[04:34:40] *** Quits: khrbt_ (~khrbt@user/khrbt) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:35:50] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:36:30] *** Joins: makomo (~makomo@user/makomo)
[04:37:38] *** Joins: khrbt (~khrbt@user/khrbt)
[04:39:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[04:47:20] *** Quits: nirnam (~nirnam@1.46.28.192) (Ping timeout: 268 seconds)
[04:53:49] *** Joins: derelict (~derelict@user/derelict)
[04:54:01] *** Quits: khrbt (~khrbt@user/khrbt) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:56:13] *** Joins: khrbt (~khrbt@user/khrbt)
[04:59:35] *** Quits: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7) (Ping timeout: 258 seconds)
[05:16:52] *** Joins: karlosz (~karlosz@router.cloyne.org)
[05:24:48] *** Joins: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7)
[05:26:24] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 272 seconds)
[05:26:25] *** Quits: djuber` (~user@65.79.128.64) (Ping timeout: 258 seconds)
[05:28:56] *** Parts: akoana (~ah@user/akoana) ()
[05:29:38] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 252 seconds)
[05:29:57] *** Joins: dsk (~dsk@user/dsk)
[05:36:22] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[05:49:32] *** Quits: beach (~user@2a01:cb19:150:3400:bf91:f21a:87da:7f64) (Read error: Connection reset by peer)
[05:50:26] *** Joins: beach (~user@2a01:cb19:150:3400:2606:4cb6:32f2:ab73)
[05:50:26] *** ChanServ sets mode: +o beach
[06:25:41] *** Joins: cladur (~cladur@user-5-173-146-9.play-internet.pl)
[06:31:44] *** Quits: khrbt (~khrbt@user/khrbt) (Quit: Textual IRC Client: www.textualapp.com)
[07:02:26] *** Joins: prxq_ (~quassel@x4db46964.dyn.telefonica.de)
[07:04:33] *** Quits: taiju (~taiju@240b:253:ec40:2400:7d70:b78b:4932:3d5a) (Ping timeout: 258 seconds)
[07:06:28] *** Quits: prxq (~quassel@x4dbedc88.dyn.telefonica.de) (Ping timeout: 272 seconds)
[07:06:54] *** Quits: remexre (~nathan@user/remexre) (Ping timeout: 250 seconds)
[07:10:54] *** Quits: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7) (Ping timeout: 272 seconds)
[07:11:38] *** Quits: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:13:13] *** Joins: taiju (~taiju@240b:253:ec40:2400:7d70:b78b:4932:3d5a)
[07:21:58] *** Joins: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7)
[07:26:44] *** Quits: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7) (Ping timeout: 272 seconds)
[07:26:55] *** Joins: ldb (~user@user/ldb)
[07:30:51] *** beach sets mode: -o beach
[07:32:25] *** Joins: remexre (~nathan@user/remexre)
[07:32:38] <beach> Good morning everyone!
[07:33:36] <ldb> good morning
[07:35:01] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[07:35:27] <Qwnavery> Hello I'm having some trouble getting static-vectors to compile on SBCL + Quicklisp standard installaion.
[07:39:18] <hayley> What happens rather than successful compilation?
[07:41:13] <jeosol> beach: Good morning. Have you had your coffee yet? Wanted to pick your brain a little
[07:41:58] <Qwnavery> https://pastebin.com/QPtp4tvy
[07:43:10] <hayley> Have you updated your libraries recently? It appears static-vectors was updated in June.
[07:44:30] <ldb> Try get a full update of quicklisp dists
[07:44:53] <Qwnavery> I just ran (ql:update-dist "quicklisp")
[07:44:57] <Qwnavery> Just tried recompile
[07:45:05] <Qwnavery> It werks.
[07:45:31] <Qwnavery> Sorry, very new to common lisp.
[07:46:40] <hayley> No stress. It is usually a good idea to check and update libraries when you update your Lisp implementation (rarely vice versa helps too).
[07:47:45] <ldb> what is your SBCL version? It might be that you are using an old one.
[07:47:55] <Qwnavery> 2.1.6
[07:47:56] <lotuseater> Qwnavery: Did you already discover some CL capabilities for dealing with (multidimensional) arrays outside of static-vectors? :)
[07:48:22] <Qwnavery> lotuseater: it was a dependency for cffi
[07:48:30] <Qwnavery> which is required by mcclim
[07:49:04] <lotuseater> oh I thought it's the other way around
[07:49:13] <lotuseater> okay for McCLIM :)
[07:49:29] <lotuseater> which platform do you run on?
[07:49:34] <Qwnavery> linux
[07:49:36] <Qwnavery> sbcl
[07:50:21] <lotuseater> which Linux? just saying Linux is a bit generic ^^
[07:50:28] <Qwnavery> voidlinux
[07:50:34] <Qwnavery> w/ muslibc
[07:50:35] <lotuseater> yeah the implementation I read
[07:50:49] <Qwnavery> Everything werks now lotuseater
[07:50:50] <lotuseater> okay .. voidlinux ..
[07:50:52] <Qwnavery> It's good.
[07:50:57] <ldb> hmm, could be a limitation of musl
[07:51:11] <lotuseater> oh that's great! I should try voidlinux some time too.
[07:51:22] <Qwnavery> ldb: it werks, the problem was outdated deps
[07:51:27] <Qwnavery> in quicklisp
[07:52:11] <Qwnavery> lotuseater: distrohopping?
[07:52:37] <lotuseater> Qwnavery: no why? one can have things in parallel
[07:52:53] <Qwnavery> KVM?
[07:53:29] <ldb> Qwnavery: could you figure what happens if type "#'sb-kernel:system-area-ub8-fill" in a fresh plain SBCL repl?
[07:53:33] <lotuseater> hm no. my main system is with NixOS for example
[07:53:49] <hayley> https://i.redd.it/o5at8k0h7go61.jpg
[07:54:07] <hayley> ldb: The conclusion is that the symbol would not be found.
[07:54:43] <lotuseater> hayley: wtf? :D
[07:55:16] <kakuhen> Qwnavery: sbcl 2.1.7 released recently iirc, so i'd recommend updating (not that you have to)
[07:55:38] <kakuhen> but based on my own anecdotal evidence, newer releases of sbcl tend to make it even better
[07:55:56] <beach> jeosol: Working on it.  Go ahead.
[07:56:24] <jeosol> oh ok, I recall you make comments about your coffee and your brain firing, haha
[07:56:43] <beach> True.
[07:57:14] <jeosol> question is mostly on design with clos classes and mutability vs. immutability - point being design close to only have mutable classes, what's your take
[07:58:09] <beach> Only mutable?
[07:58:24] <jeosol> In my application, I have classes that contain other classes and their state can change depending on other operations - some times I am access shared resource and recently went through a nasty debugging period to identify the bug then
[07:58:32] <beach> And do you mean that the classes are mutable or their instances?
[07:58:46] <jeosol> I am referring to instances
[07:58:56] <jeosol> My question is mostly in the context of designing code and algorithms
[07:59:18] <jeosol> I have things a bit all over the place as I quench fires to meet a deadline
[07:59:52] <Qwnavery> kakuhen: will do when I'm off mobile data.
[08:00:04] <jeosol> The video I recently watch, author was using Java so I guess they have some constructs to enforce it for some for slot parameters, but that's not my issue to compare, it's more of a design philosophy
[08:00:09] <beach> jeosol: I don't see why mutable instances would be controversial.  That's the norm.
[08:00:51] <Qwnavery> ldb: system-area-ub8-fill not found in the sb-kernel package
[08:01:15] <jeosol> beach: that's what I was think. The guy seem to propose immutable as much as possible but then one is copying objects, etc. One of their main arguments seems to be easier debugging and concurency application
[08:02:03] <jeosol> beach: but it's good you don't see an issue with it, as I update my objects in place to update state and then copy if needed for parallel calls
[08:02:40] <beach> jeosol: That argument probably has some truth to it, but there are huge disadvantages with immutable stuff as well.  Performance is one.  And the very reason for using object-oriented programming seems to be to manipulate state.
[08:02:41] <hayley> Which guy?
[08:03:18] <jeosol> hayley: was that question for me?
[08:03:23] <hayley> Yes.
[08:03:46] <Qwnavery> is the lisp community still growing?
[08:04:17] <hayley> As with all things, performance with immutable stuff All Depends. Some sorts of persistent structures are good for hash consing, and for lock-free algorithms.
[08:04:31] <jeosol> It's Joshua Block (some Java architect) guy I think he wrote Effective Java. I am not a Java programmer, just the the author on the algorithms course Sedgewick (Princeton professor) mentioned it since he uses Java for his course
[08:04:34] <beach> Qwnavery: I don't think anybody is keeping count.
[08:04:59] <Qwnavery> beach: fair.
[08:05:02] <kakuhen> Qwnavery: I think it'd be very difficult to measure how many people use some lisp dialect somewhere
[08:05:30] <kakuhen> any reasonable definition of "size" and "lisp community" quickly leaves me at a loss of how one could obtain any information on it
[08:05:54] <lotuseater> jeosol: the newer version of "Algorithms" is in Java from what I saw recently. I have an older version in German ^^
[08:05:56] <Qwnavery> bad question. sorry.
[08:06:01] <hayley> If I lied and said yes, would you be more inclined to (continue to) use Lisp?
[08:06:07] <kakuhen> Qwnavery: it's not a bad question -- it's just hard to answer.
[08:06:36] <jeosol> But I don't really subscribe to that much, hence my question to beach. I had something similar when I started but I had performance issues so I updated my design and made some slot variables to be use allocation :class
[08:06:44] <Qwnavery> I might lurk a bit more.
[08:07:10] <lotuseater> Qwnavery: but look at how many things coming from lisp now are taken granted in mainstream languages. or are weird adapted
[08:07:34] <Qwnavery> lol python lambda functions.
[08:07:40] <jeosol> lotuseater: yes, that is correct, I am going through his Algorithms course as a refresher, I did code C/C++ in the past, and Java being similar, I didn't mind much. But I am not following the course for Java, I have not interest, just basic concepts rea;;u
[08:07:45] <moon-child> python is a cheap strawman
[08:07:58] <Qwnavery> I only know python. :(
[08:08:01] <hayley> I don't really care, because they are still not Lisp. And then most Lisps are not Common Lisp, which I admit I struggle to care about.
[08:08:02] <jeosol> I am also looking at vseloved's(?) book on Common Lisp algorithms
[08:08:09] <Josh_2> Qwnavery: poor you :(
[08:08:26] <jeosol> to check some of his implementations e.g., quicksort and what he called "production sort"
[08:08:56] <lotuseater> jeosol: oh I wish I could do that too. but learning from the book is also nice and the Pascal is for me better to understand than the C/C++ or the Java port
[08:09:06] <moon-child> 'production' referring to the idea that this is something you would be willing to use 'in production'?  Something akin to timsort in which respect?
[08:09:41] <Qwnavery> Josh_2: should have no pity for those who do not learn.
[08:09:53] <lotuseater> Qwnavery: I wonder why such functional things came to Python as Guido van Rossum doesn't like it.
[08:09:58] <jeosol> lotuseater: Segdewick has many books on algorithms I guess, but the one the course follows is this one Algorithms 4th/Edition: https://www.barnesandnoble.com/w/algorithms-robert-sedgewick/1100835588?ean=9780321573513
[08:10:53] <Qwnavery> lotuseater: I don't know, I've been reading onlisp and lisp just makes sense.
[08:11:04] <lotuseater> exactly what I meant
[08:11:10] <Josh_2> Qwnavery: I dont take pity on those without the capacity
[08:11:37] <jeosol> lotuseater: My goal is to pay closer attention to aspects of the code I can improve, e.g., where I could take advantage of better search, use better data structures or better algorithms - with time and space complexity in mind
[08:11:59] <Qwnavery> Josh_2: that's a knife wound to the chest. jeez.
[08:12:05] <Josh_2> What
[08:12:05] <kakuhen> Qwnavery: this is off-topic, but a few days ago I found someone implement a minimal lisp in python and I found it pretty cool; https://github.com/6502/pylisp
[08:12:11] <Josh_2> Well it wasn't meant that way, sorry :P
[08:12:17] <Qwnavery> :P
[08:12:25] <jeosol> of course, I will like to tie that to some styles of CL coding - what are bad styles or less efficient ways of doing operations, e.g., looping constructs etc
[08:12:38] <Qwnavery> kakuhen: that's cursed.
[08:12:59] <Qwnavery> I've seen there is a version of python that has lisp syntax
[08:13:05] <lotuseater> okay
[08:13:17] <hayley> The world's slowest CL implementation?
[08:13:22] <lotuseater> ah this Hy dialect
[08:13:25] <kakuhen> Qwnavery: let's take this discussion to #lispcafe maybe
[08:13:47] <Bike> i wish when people did "minimal" lisp implementations they'd come up with an interesting spec rather than mash whatever crap together
[08:13:48] <hayley> The world's slowest Lisp which struggles with a LET form?
[08:13:48] <jeosol> My application is very large so I am trying to focus more on performance and speed as I try to move to one of these cloud vendors - not sure which for now
[08:13:51] <kakuhen> i noticed someone above was asking questions and I sort of talked over them
[08:15:30] <jeosol> Btw, any one running Lisp application on either GCP, Azure, AWS, or heroku -- i have seen some posts about heroku and may be it's the easiest to go to now sure, of course my initial focus is to have less dependence on vendor offerings for now
[08:16:06] <lotuseater> jeosol: so investing effort in the right algorithms and data structures is the right way. or in some situations using techniques like dynamic programming
[08:16:38] <hayley> I used to run on Heroku for..about a week. It was fine, but writing up a shell script to start Lisp and then never touch it again did not fit with how I liked to run programs.
[08:16:47] *** Joins: loke (~loke@junk.nocrew.org)
[08:17:33] <jeosol> lotuseater: good point, I think it depends on the application - search, sort, divide-and-conquer etc. I have different such operations all over the place and never profiled the code. But since I started taking that course, I began looking at quadratic time operations and what I can do to eliminate them
[08:17:48] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[08:17:49] <Josh_2> I have a few applications running on a VPS, most of which I haven't touched for ages
[08:18:01] <Josh_2> just make the systemd service file and off you go
[08:18:13] <jeosol> of course my main bottle neck is not the CL code, it's calling an .exe for some computation but I'll still like to make the CL part as fast as possible
[08:18:46] <Josh_2> maybe you could use a FFI instead of the .exe
[08:18:50] <Josh_2> (assuming you can)
[08:18:55] <jeosol> hayley: thanks for that input. you mean you don't like to write a shell scrip to start Lisp
[08:19:28] <hayley> jeosol: That, and I'd like to be able to poke it from a REPL when things go wrong.
[08:19:52] <Josh_2> You can do that on any VPS
[08:20:00] <jeosol> Josh_2: I don't think I can - not sure. It's a windows Fortran exe application by a vendor, and I develop on linux primary so I use wine to call it
[08:20:04] <lotuseater> of course :)
[08:20:13] <Josh_2> jeosol: oh thats unfortunate
[08:20:16] <jeosol> hayley: I see your point, makes sense
[08:21:08] <jeosol> Josh_2: yes, really unfortunately, It's a serious limitation for application - some tests take days instead of say a day if I have a GPU and the source code of the application. For now, I use use it as black box, so it's not too bad
[08:21:40] <hayley> Josh_2: Well, Heroku doesn't give you a VPS, it's one of those "serverless" things. I don't know if patching on the run conceptually fits in.
[08:21:47] <Josh_2> oh I see
[08:21:50] <lotuseater> these days if you can save operation complexity by using more memory, you can do. but I don't mean of course this mess with eg Electron. but for memoization or such
[08:22:57] *** Quits: wheelsucker (~user@2600:8801:8c03:1f00::8165) (Remote host closed the connection)
[08:23:09] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Ping timeout: 268 seconds)
[08:23:10] *** Joins: wheelsucker (~user@2600:8801:8c03:1f00::8165)
[08:23:18] <jeosol> hayley: your application on heroku has a web interface to the Cl application?
[08:23:47] <Josh_2> If you want to host on the internet you should get a VPS, not a half way VPS like hayley has described
[08:23:52] <Josh_2> They are cheap as chips
[08:24:11] <jeosol> hayley: while I could use CL, I tried django + react in the past and have it talk to the CL application. It's a pain to main three languages for one application ...
[08:24:53] <jeosol> Josh_2: which vendors have you used for the full VPS
[08:25:24] <Josh_2> I use Iniz, but I would use someone else if I didn't have such a good deal
[08:25:24] <hayley> jeosol: Well, that's even worse as now you couldn't even debug the Python program on the fly if you wanted to.
[08:25:31] *** Joins: Qwnavery (~Qwnavery@1.128.105.195)
[08:25:53] *** Quits: Qwnavery (~Qwnavery@1.128.105.195) (Changing host)
[08:25:53] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[08:26:18] <jeosol> hayley: tell me about it, it was a pain working with django - started out okay but things grew out of. I can live with react and CL I think
[08:26:38] <hayley> A friend got us a server from https://capsul.org/. The pricing isn't great on paper, but someone was willing to help me when I couldn't tell if my email server was working.
[08:27:14] *** Parts: Qwnavery (~Qwnavery@user/qwnavery) ()
[08:27:17] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[08:27:18] *** Joins: z3t02 (~z3t0@107-159-14-254.on.dsl.ebox.net)
[08:28:51] <Josh_2> I'd probably choose Vultr if I wasn't already well established
[08:29:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 248 seconds)
[08:30:09] *** Quits: z3t0 (~z3t0@107-159-10-134.on.dsl.ebox.net) (Ping timeout: 276 seconds)
[08:30:09] *** z3t02 is now known as z3t0
[08:30:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:31:26] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[08:32:09] <hayley> I don't think I even have SBCL installed on the server still. Oh well.
[08:34:06] <hayley> There'll be something noteworthy Very Soon™️.
[08:35:47] *** Quits: robin (~robin@user/terpri) (Ping timeout: 258 seconds)
[08:38:17] *** Joins: robin (~robin@user/terpri)
[08:40:51] *** Joins: lad (~lad@user/lad)
[08:44:34] *** Joins: lisp123 (~lisp123@45.130.83.200)
[09:00:13] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[09:31:51] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[09:45:54] *** Quits: lisp123 (~lisp123@45.130.83.200) (Remote host closed the connection)
[09:46:56] *** Joins: lisp123 (~lisp123@45.130.83.200)
[09:51:58] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 268 seconds)
[09:52:50] *** Joins: lisp123 (~lisp123@45.130.83.200)
[09:55:43] *** Quits: lisp123 (~lisp123@45.130.83.200) (Read error: Connection reset by peer)
[09:56:30] *** Parts: ldb (~user@user/ldb) (ERC (IRC client for Emacs 27.2))
[10:01:23] *** Joins: shka (~herr@109.231.62.239)
[10:02:48] *** Joins: lisp123 (~lisp123@45.130.83.200)
[10:05:21] *** Quits: copec (~copec@home.unaen.org) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:07:24] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 258 seconds)
[10:18:53] *** Joins: nirnam (~nirnam@1.46.13.87)
[10:30:40] *** Joins: lisp123 (~lisp123@45.130.83.200)
[10:31:55] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[10:57:33] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:58:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:58:48] *** Lord_of_Life_ is now known as Lord_of_Life
[10:59:16] <mfiano> Morning all. I'm trying to find an elegant solution to transform a list in a particular way.
[11:00:51] <mfiano> I have a list of numbers, and I want to reduce it to a shorter list of numbers in the following way. If I have a 9 element list, I might want to divide it into 3 groups, and take the max of each group: (21 3 82 8 20 6 9 11 4) ; => (21 20 11). The caller of the function supplies the flat list and the divisor.
[11:01:16] <moon-child> is the length of the list guaranteed to be divisible by the divisor?
[11:01:23] <mfiano> Yes
[11:01:56] <mfiano> oops
[11:02:13] <mfiano> example is wrong. result should be (82 20 11)
[11:03:01] *** Joins: pve (~pve@188-67-205-112.bb.dnainternet.fi)
[11:03:39] <moon-child> maybe (loop for x on list by (lambda (x) (nthcdr x divisor)) collect (apply #'max x))
[11:04:06] *** Joins: gaqwas (~john@dynamic-077-004-093-153.77.4.pool.telefonica.de)
[11:04:19] <moon-child> err, wait, that's wrong
[11:05:26] <mfiano> Can I change the specification slightly? :)
[11:05:35] *** Quits: hafat (~hafat@159.146.87.68) (Remote host closed the connection)
[11:06:01] <moon-child> sure
[11:06:01] <beach> mfiano: (loop for rest on list by (lambda (x) (nthcdr divisor x)) collect (loop for i in rest repeat divisor maximize i))
[11:06:02] <mfiano> The input is technically a 1d array of numbers. I don't mind coercing it to a list though.
[11:06:33] *** Joins: khrbt (~znc@user/khrbt)
[11:06:51] <mfiano> Let me see
[11:09:17] <mfiano> Yes, that is elegant enough. Thank you for the help.
[11:09:26] <beach> Pleasure.
[11:20:13] *** Joins: selwyn (~selwyn@user/selwyn)
[11:24:50] *** Quits: lad (~lad@user/lad) (Ping timeout: 258 seconds)
[11:34:57] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 268 seconds)
[12:09:00] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651)
[12:16:53] *** Quits: gaqwas (~john@dynamic-077-004-093-153.77.4.pool.telefonica.de) (Ping timeout: 268 seconds)
[12:18:02] *** Joins: froggey (~froggey@82-132-232-219.dab.02.net)
[12:28:19] <akater[m]> mfiano: `(use-package :series) (multiple-value-call #'map-fn 'integer #'max (chunk 3 3 (scan #(1 2 3 4 5 6 7 8 9))))`
[12:29:55] *** Quits: froggey (~froggey@82-132-232-219.dab.02.net) (Read error: Connection reset by peer)
[12:30:01] *** Joins: froggey-2 (~froggey@82-132-232-219.dab.02.net)
[12:35:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:50:15] <lsip123_win10> Trivia question for today, why is it called maplist and not mapcdr?
[12:51:20] <beach> Probably for hysterical raisins.
[12:51:50] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[12:51:53] <phoe> should actually be called mapcons
[12:53:08] <mfiano> Is there a way to access the identity identifier in #'print-unreadable-object, for purposes of placing it in a different part of the stream instead of the end?
[12:53:21] <phoe> no portable way of doing that
[12:53:46] <phoe> the best you can do is call print-unreadable-object inside with-output-to-string and then try to parse that
[12:53:52] <mfiano> Ok
[12:53:54] <lsip123_win10> beach: lol (but I also suspent that is true)
[12:55:32] <mfiano> TIL it's not a function.
[12:55:45] *** Joins: selwyn_ (~selwyn@user/selwyn)
[12:56:01] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Client Quit)
[12:56:20] <mfiano> Makes sense though, given the signature. I'm not sure why I was thinking it was a function.
[12:56:21] <beach> lsip123_win10: You may want to check what it was named in Maclisp for instance.
[12:58:12] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[12:59:14] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 272 seconds)
[13:01:30] <lsip123_win10> beach: I will, thakns
[13:01:54] *** Joins: ane (ane@shell.wilan.org)
[13:03:05] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Ping timeout: 248 seconds)
[13:04:00] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:04:55] *** Joins: khrbt (~znc@2601:646:8600:2f6:3fa:485d:475e:2130)
[13:06:27] <lsip123_win10> CLTL23: Compatibility note: In MacLisp, Lisp Machine Lisp, Interlisp, and indeed even Lisp 1.5, the function map has always meant a non-value-returning version. However, standard computer science literature, including in particular the recent wave of papers on ``functional programming,'' have come to use map to mean what in the past Lisp implementations have called mapcar. To simplify things henceforth, Common Lisp follows current
[13:06:27] <lsip123_win10> usage, and what was formerly called map is named mapl in Common Lisp.
[13:06:50] *** Quits: char (~charles@cpe-76-186-124-165.tx.res.rr.com) (Ping timeout: 268 seconds)
[13:06:59] <lsip123_win10> Does GLS mean that functions should generally return a value and hence the change?
[13:10:13] <mfiano> Functions in functional programming should, as "functional" usually means having referential transparency.
[13:10:21] <mfiano> A function in the mathematical sense maps from one value to another.
[13:10:28] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[13:11:11] <mfiano> But Lisp is not a functional programming language, so...
[13:11:35] <lotuseater> indeed. had to tell other people that though
[13:17:50] <mfiano> I guess it depends on your definition of "functional". Some people take it to mean languages which have map/filter/reduce.
[13:18:22] *** Quits: khrbt (~znc@2601:646:8600:2f6:3fa:485d:475e:2130) (Changing host)
[13:18:22] *** Joins: khrbt (~znc@user/khrbt)
[13:18:25] <mfiano> No language can be completely functional in the mathematical sense though, so it's unsurprising this is blurry.
[13:19:17] <lsip123_win10> mfiano: thanks for that, helpful to know that some expect map/filter/reduce
[13:19:29] <Qwnavery> mfiano: not even lambda calculus?
[13:19:40] <hayley> Once I told someone that Lisp was considered "functional" once upon a time, and they blew up at me accusing me of never having used a "real" functional language (I've written some Haskell, OCaml, Standard ML, so yeah nah) and called me a few names.
[13:20:32] <hayley> Qwnavery: I'm not sure if the lambda calculus is a useful programming language. Most people would say that you need side effects to observe the output of a program, and to provide input to make it useful for more than one use.
[13:20:50] <mfiano> ^
[13:22:08] <hayley> sigh So the winning moves are to either not discuss programming languages ever, or (as I do) come up with reasons why some language simultaneously uses and does not use some paradigm to confuse people.
[13:22:08] <mfiano> Just because "real" languages hide state with monads, doesn't make them any more functional imo.
[13:22:12] <Qwnavery> I was just suggesting from the statement that no language can be completely functional in the mathematical sense.
[13:22:42] <Qwnavery> From an actually useable language pure lambda calculus is not useful without side effects.
[13:22:47] <lotuseater> type theory can also be seen as a programminglanguage
[13:23:15] <hayley> mfiano: The catch is supposed to be that you can still perform equational reasoning with IO monads. Not sure what equations apply though.
[13:23:26] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:24:52] <hayley> The latter goes something like this: "Object oriented languages suck, use pure FP or you are a baby eater!" "Well, it says in 'How to make ad-hoc polymorphism less ad hoc' that the authors wanted to reuse OO concepts, and we agree type classes are used in functional languages?" "AAAAAAAA"
[13:25:26] <lotuseater> i understand functional as having functions as first class objects. that doesn't if a language has this it's automatically just functional
[13:25:49] <mfiano> That is another valid definition
[13:26:02] <mfiano> The term is too blurry to have a meaningful conversation without more context.
[13:26:39] <lotuseater> things are often one and the same, but from other points of view
[13:26:47] <hayley> Also, as per something Alan Kay said once upon a time, for "functional" languages, Lisp and what we call functional today have a lot of not-function special forms. So, as any eager functional language does not define an IF form using functions, but Smalltalk does...
[13:26:49] <mfiano> Welcome to programming, where even the terminology is over-overloaded
[13:27:31] <lotuseater> hehe
[13:27:56] <phoe> welcome to erlang, the only object-oriented language which is object-oriented because it's functional and actor-based
[13:28:01] * phoe gently opens the #lispcafe door
[13:29:54] *** Joins: dim (~dimlibera@2a02:2178:2:4:1658:d0ff:fe49:408c)
[13:34:22] *** Joins: montxero (~user@149.167.149.74)
[13:34:50] <pl> phoe: there's no more #lispcafe though or is there?
[13:35:09] <phoe> pl: what?
[13:35:10] <phoe> of course it is
[13:35:11] <pl> oh, there is
[13:35:14] <phoe> of course there is
[13:37:20] *** Joins: silasfox (~silasfox@62.159.27.1)
[13:40:09] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 258 seconds)
[13:40:26] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[13:46:07] *** Joins: makomo (~makomo@user/makomo)
[13:51:55] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[13:52:21] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[13:54:20] *** Quits: taiju (~taiju@240b:253:ec40:2400:7d70:b78b:4932:3d5a) (Ping timeout: 258 seconds)
[13:54:20] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:54:40] *** Joins: khrbt (~znc@2601:646:8600:2f6:3fa:485d:475e:2130)
[13:56:05] *** Quits: silasfox (~silasfox@62.159.27.1) (Quit: Connection closed)
[13:58:14] *** Joins: taiju (~taiju@240b:253:ec40:2400:7d70:b78b:4932:3d5a)
[13:58:15] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[13:58:32] *** Joins: silasfox (~silasfox@62.159.27.1)
[14:02:46] *** Quits: khrbt (~znc@2601:646:8600:2f6:3fa:485d:475e:2130) (Changing host)
[14:02:46] *** Joins: khrbt (~znc@user/khrbt)
[14:04:11] *** Quits: prxq_ (~quassel@x4db46964.dyn.telefonica.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:04:32] *** Quits: silasfox (~silasfox@62.159.27.1) (Quit: Connection closed)
[14:05:25] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[14:07:16] *** Joins: silasfox (~silasfox@62.159.27.1)
[14:10:26] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[14:15:14] *** Quits: froggey-2 (~froggey@82-132-232-219.dab.02.net) (Ping timeout: 272 seconds)
[14:16:39] *** Joins: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net)
[14:17:03] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[14:18:02] *** Joins: Andi23 (~Guest85@94.231.255.221)
[14:20:43] <Andi23> Hi @luis, phoe from discord pointed me to you. I'm trying to load the CoreFoundation macos system lib through cffi. It seems that macos libs are not available on the file system anymore and my code is not working
[14:20:43] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[14:20:48] <Andi23> (cffi:define-foreign-library corefoundation
[14:20:48] <Andi23>   (T (:framework "/System/Library/Frameworks/CoreFoundation.framework/Versions/Current/CoreFoundation")))
[14:20:52] *** Joins: amb007 (~a_bakic@87.116.175.56)
[14:20:53] <Andi23> this is what I wrote
[14:22:46] <lotuseater> isn't it with :default ?
[14:23:05] <lotuseater> but ok I don't know so much of cffi
[14:23:59] <Andi23> :default gives a different but very similar error, it looks for CoreFoundation.dylib and says image not found
[14:24:10] <Andi23> with :framework it says that the framework was not found
[14:25:05] <lotuseater> hmmm :/
[14:25:29] <Andi23> i've seen mentioned for other languages that you have to use a dlopen system call or something like that, for example in python https://www.reddit.com/r/MacOSBeta/comments/hfknpa/is_corefoundation_missing_for_everyone_on_big_sur/
[14:25:49] <lotuseater> do you have to use cffi?
[14:26:22] *** Joins: prxq (~quassel@x4db5a3fe.dyn.telefonica.de)
[14:26:38] <Andi23> i'm trying to use this library https://github.com/Shinmera/file-notify and the implementation for macos uses fsevent system calls
[14:27:00] <Andi23> but i'm stuck at making the library load CoreFoundation
[14:27:39] <Andi23> if you know any file watcher in pure CL that would also be good for now, though i would like to know how to solve the cffi problem since i'll run into it at some point anyway
[14:27:59] <Shinmera> there's no way to do it in "pure CL"
[14:28:18] <Shinmera> using Apple's core libraries is as pure as you're gonna get.
[14:28:21] <Andi23> yeah that's waht i figured cause you need to interact with the os at some level
[14:29:05] <Shinmera> iirc there was a problem with loading libs on cffi/sbcl on macos, so make sure both are up to date.
[14:30:39] <kakuhen> i havent tried messing with corefoundation libs yet, but CFFI has generally been fine for me
[14:31:34] <kakuhen> i've only had issues with cl-sdl2 while on ccl; you can't properly quit the sdl event loop since you get stuck on a syscall
[14:31:42] <Andi23> ok will try to update sbcl first and then see
[14:32:29] <pjb> Andi23: this is what I used: https://gitlab.com/patchwork/patchwork/-/blob/master/src/macosx/load-libraries.lisp
[14:32:41] <pjb> Andi23: but this has bitrotten a little with BigSur…
[14:32:43] <Shinmera> MacOS in general is a lost platform. Apple will just keep making the environment more hostile every year.
[14:33:05] <pjb> Indeed. With more resources, I'd have moved to Linux already.
[14:33:20] <kakuhen> i got a mac just as things seemed to have gone very very bad heh
[14:33:39] <Andi23> yeah it's kinda sad, i still need to use it because of some art / music software i have
[14:34:00] <kakuhen> that reminds me i should eventually finish rewriting the cocoa ide installer -- since it's super annoying to deal with if you install ccl from macports (or homebrew) unless you do something really dumb from a security standpoint
[14:34:02] <mfiano> Damnit, my patchwork library is no longer uniquely named
[14:34:41] <Andi23> thanks pjb will try it
[14:36:19] <pjb> mfiano: my patchwork is IRCAM Patchwork from the late 80s, early 90s…
[14:36:45] <mfiano> Doesn't mean the bindings need to be :)
[14:36:50] <mfiano> Mine is pure Lisp
[14:36:54] <mfiano> But I'm just joking
[14:37:33] *** Joins: montxero (~user@149.167.149.74)
[14:40:47] <pl> Andi23: UFFI/CFFI and everything has assumptions that got broken by further iOSization where they put all system libs into one file
[14:42:15] <Andi23> pl: so does that mean cffi is just broken on macos rn for system libs?
[14:43:07] <pl> Andi23: possibly, might depend on exact implementation and parameter combination
[14:43:09] <kakuhen> it definitely works with at least libc -- i'm trying it out right now, but idk about the other stuff.
[14:43:24] <Andi23> maybe i'll find a C library for file watching and write a cffi wrapper around it instead
[14:43:29] *** Quits: amb007 (~a_bakic@87.116.175.56) (Read error: Connection reset by peer)
[14:43:33] <Andi23> let C handle loading and calling system libs
[14:43:41] <pjb> Andi23: not exactly.  ccl used cdb files built with ffigen4 (totally bitrotten) to get a definition of the API that it can use with its reader macros #_ #/ #$.  So this is mostly dead (apart for the few surviving cdb).
[14:44:19] <pjb> Andi23: but otherwise a C library is a C library even when called framework, and if you define the API with cffi:defcfun etc, by hand, you can still call core functions.
[14:44:23] *** Joins: amb007 (~a_bakic@87.116.175.56)
[14:44:32] <kakuhen> oh yeah i was trying out the objecitve-c bridge in ccl the other day and uh
[14:44:41] <kakuhen> I was getting some non-sensical results by just initializing an NSNumber
[14:44:50] <pjb> I say by hand, because tools like swig won't take into account some details like #pragma pack, so they'll generate wrong definitions.
[14:44:51] <kakuhen> not sure if they added optimizations to it recently or if ccl's objc bridge is broken or both
[14:45:28] <kakuhen> i vaguely recall NSNumber and friends becoming tagged pointers in some case, but I just get null macptrs everywhere unless I initialize them in a very specific way.
[14:45:34] <pjb> kakuhen: careful, Apple play trick with NSNumber; they're not all pointers!  Like in CL, they have typetags and immediate values.
[14:47:31] <Andi23> pjb: a bit out of my element with interacting with c libraries, if i use the cffi:defcfun and only define the functions I care about, don't I need to do some type of linking with the system? or how does it know exactly where to call that function
[14:47:39] *** Quits: pillton (~user@2405:b000:600:b0::36a) (Ping timeout: 260 seconds)
[14:48:11] <pjb> Andi23: this is done by load-library, loading and linking the dynamically loaded library.
[14:48:41] <pl> You need to declare the library iirc
[14:48:46] *** Quits: amb007 (~a_bakic@87.116.175.56) (Ping timeout: 258 seconds)
[14:49:06] <pl> Normally it would do dlopen() like dance for you then
[14:49:18] <pjb> well, cffi:load-foreign-library
[14:49:29] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[14:50:31] *** Quits: nirnam (~nirnam@1.46.13.87) (Read error: Connection reset by peer)
[14:50:39] *** Joins: nirnam (~nirnam@1.46.13.87)
[14:51:04] *** Quits: nirnam (~nirnam@1.46.13.87) (Client Quit)
[14:51:05] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[14:51:49] *** Joins: amb007 (~a_bakic@87.116.175.56)
[14:51:57] *** Joins: nirnam (~nirnam@1.46.13.87)
[14:58:04] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:59:46] *** Joins: karlosz (~karlosz@router.cloyne.org)
[15:01:41] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[15:04:28] *** Joins: trriplex (~trriplex@user/trriplex)
[15:05:55] *** Quits: trriplex (~trriplex@user/trriplex) (Remote host closed the connection)
[15:11:04] *** Quits: frgo (~frgo@p200300deef181d00e13f7bdeb1305ddd.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:11:31] *** Joins: frgo (~frgo@p200300deef181d00e13f7bdeb1305ddd.dip0.t-ipconnect.de)
[15:12:33] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[15:12:33] *** ChanServ sets mode: +o MichaelRaskin
[15:14:50] *** Quits: amb007 (~a_bakic@87.116.175.56) (Ping timeout: 258 seconds)
[15:15:51] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[15:17:31] *** Joins: random-nick (~random-ni@87.116.177.228)
[15:18:09] *** Joins: lisp123 (~lisp123@45.130.83.200)
[15:18:40] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[15:22:53] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 258 seconds)
[15:23:16] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 258 seconds)
[15:24:40] *** Joins: trriplex (~trriplex@user/trriplex)
[15:25:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:25:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 258 seconds)
[15:28:38] *** Quits: Oddity (Oddity@user/oddity) (Ping timeout: 258 seconds)
[15:28:39] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[15:29:26] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[15:31:15] <luis> Andi23: what version of CFFI are you using? 0.24.0 fixed an issue related to OSX framework loading
[15:31:34] <luis> https://bugs.launchpad.net/cffi/+bug/1906982
[15:32:10] *** Quits: trriplex (~trriplex@user/trriplex) (Ping timeout: 240 seconds)
[15:34:02] *** Joins: dlowe (~dlowe@user/dlowe)
[15:35:19] *** Joins: Oddity (Oddity@user/oddity)
[15:36:26] *** Quits: ahc (~ahc@121.98.229.241) (Quit: Client closed)
[15:39:19] <jackdaniel> mfiano: ecl could easily support that but nobody bothered to implement and document such extension
[15:39:36] <mfiano> I see
[15:40:54] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[15:42:13] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[15:43:25] *** Joins: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7)
[15:45:14] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[15:52:11] *** Joins: lisp123 (~lisp123@45.130.83.200)
[15:58:09] *** Quits: fizbin (~dtm@2601:82:c380:87a:d8e5:78df:ef65:49a7) (Ping timeout: 258 seconds)
[15:59:37] *** Quits: lisp123 (~lisp123@45.130.83.200) (Ping timeout: 248 seconds)
[16:10:11] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651) (Ping timeout: 268 seconds)
[16:14:57] *** Joins: Guest51 (~Guest51@72.92.132.99)
[16:25:40] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[16:32:37] *** Quits: Guest51 (~Guest51@72.92.132.99) (Quit: Client closed)
[16:42:12] <Andi23> luis: I have 0.24.1 but it's still a problem
[16:47:49] *** Joins: akoana (~ah@user/akoana)
[16:48:24] *** Joins: trriplex (~trriplex@user/trriplex)
[16:49:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 272 seconds)
[17:03:12] *** Joins: selwyn (~selwyn@user/selwyn)
[17:05:52] <luis> Andi23: maybe you can remove the probe-file call from cffi::find-darwin-framework
[17:06:20] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (Read error: Connection reset by peer)
[17:06:36] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[17:13:21] *** Quits: trriplex (~trriplex@user/trriplex) (Remote host closed the connection)
[17:18:18] <Andi23> luis: thanks for the help but I think I'll give up on file watching for now and focus on the main work of my thing
[17:18:39] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 258 seconds)
[17:19:08] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[17:20:09] *** Quits: cladur (~cladur@user-5-173-146-9.play-internet.pl) (Ping timeout: 248 seconds)
[17:28:56] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:29:02] *** Joins: Bike (~Glossina@71.69.170.70)
[17:29:02] *** ChanServ sets mode: +o Bike
[17:29:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:42:19] *** Joins: euclid9 (~jrpilotte@bras-base-sbcypq6202w-grc-31-70-24-122-14.dsl.bell.ca)
[17:42:24] <luis> Andi23: sure. anyway, if I understand that Reddit discussion correctly, you can probably do (cffi:load-foreign-library "/System/Library/Frameworks/CoreFoundation.framework/Versions/Current/CoreFoundation") and that should work
[17:43:56] *** Quits: Andi23 (~Guest85@94.231.255.221) (Quit: Client closed)
[17:52:04] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:52:16] *** Parts: akoana (~ah@user/akoana) ()
[17:54:19] *** Joins: Guest85 (~Guest85@94.231.255.221)
[17:58:29] *** Guest85 is now known as Andi23
[17:59:03] <Andi23> luis: true, it works to load it like that
[18:03:44] *** Joins: lisp123 (~lisp123@45.130.83.200)
[18:07:03] *** Parts: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Using Circe, the loveliest of all IRC clients)
[18:07:17] <Andi23> luis: nice, thanks so much, finally working 😅
[18:07:20] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[18:07:30] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Remote host closed the connection)
[18:07:54] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[18:07:59] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Remote host closed the connection)
[18:11:36] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[18:14:03] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:21:54] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[18:26:15] *** Quits: silasfox (~silasfox@62.159.27.1) (Quit: Connection closed)
[18:32:42] *** Quits: Andi23 (~Guest85@94.231.255.221) (Quit: Client closed)
[18:50:35] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:03:24] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:04:05] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[19:06:44] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Remote host closed the connection)
[19:09:09] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[19:11:41] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[19:11:41] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[19:11:43] *** Quits: lisp123 (~lisp123@45.130.83.200) (Quit: Leaving...)
[19:11:50] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[19:15:52] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[19:16:53] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[19:19:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:28:54] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[19:32:20] <akater[m]> Suppose I define a `(setf s)` method that does not actually set the value of the slot s.  It does set some other place (“in” the corresponding object, even) and returns that value.  This looks like a good interface in my case because slots actually represent those other entities.  But is this an acceptable practice?
[19:32:53] <Bike> Sure.
[19:33:18] *** Joins: djuber (~user@65.79.128.64)
[19:33:40] <Bike> I don't see any problem with that. Accessors to the object generally shouldn't care how the storage is actually implemented (as slots, external tables, whatever)
[19:34:08] <Bike> The exception would be if you're using slot-value and stuff that actually do care, but I assume you aren't
[19:35:28] <Bike> there are a few things that use slots directly, like shared-initialize and make-load-form-saving-slots's result
[19:36:38] <akater[m]> Thanks.  Oh, even that broad: accessor could query some external entity merely to read the value.  Good.
[19:36:58] <akater[m]> BTW, I did not realize that (setf ..) generic functions can be assigned custom method-combinations.  Almost did that --- but I needed to prevent the evaluation of default value so it wasn't acceptable in the end.
[19:38:31] *** Joins: Skyfire (~pyon@user/pyon)
[19:40:27] <Bike> the thing to understand is that the rest of the language doesn't use accessor functions you define, so their behavior can be whatever as long as it makes sense with your pgoram, and if it comports with the few things that do deal with underlying slots
[19:50:27] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[19:51:00] *** Joins: tfb (~tfb@88.98.95.237)
[19:57:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[20:01:38] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[20:02:08] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:15:02] *** Joins: copec (~copec@home.unaen.org)
[20:18:49] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:22:36] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[20:41:14] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[20:41:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[20:42:27] *** Joins: retropikel_ (~retropike@83-245-241-195-nat-p.elisa-mobile.fi)
[20:44:30] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[20:45:18] *** Quits: retropikel (~retropike@2001:999:200:1f35:f194:c1b5:4044:270e) (Ping timeout: 272 seconds)
[20:49:06] *** Quits: retropikel_ (~retropike@83-245-241-195-nat-p.elisa-mobile.fi) (Quit: Leaving)
[20:49:24] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:49:45] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Ping timeout: 248 seconds)
[20:52:53] *** Joins: jon89 (~jon89@24-233-185-117.miami.fl.bluestreamcable.net)
[20:55:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:56:57] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[20:58:47] *** Joins: lad (~lad@user/lad)
[21:05:32] <hendursaga> There a REST client for CL anyone can recommend?
[21:07:04] <nij-> I want to get started with networking. To learn, I might start with a binder in CL.
[21:07:29] <nij-> Is there any CL library that allows me to inspect one IP package one at a time, and to view a stats for the flow of IP packages?
[21:08:58] <rain3> hendursaga: would drakma do the job ?
[21:09:46] <rain3> nij- https://github.com/olewhalehunter/schnoz  ?
[21:14:21] <nij-> Thanks rain3 :)
[21:15:54] <hendursaga> rain3: drakma might do, yeah
[21:17:26] <rain3> hendursaga: I've been using it for all kinds of fancy requests, so I'm recommending it from experience. I struggled a bit in the beginning but eventually I understood how to pass the parameters the right way (for my limited usecases)
[21:24:28] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[21:26:38] <jon89> just curious: what are you all using Common Lisp for? Fun personal projects? Work?
[21:27:01] <jon89> I've always had fun with Lisp but don't see it used a lot nowadays — maybe I'm just looking in the wrong places
[21:27:31] *** Joins: dlowe (~dlowe@user/dlowe)
[21:27:39] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Quit: Leaving)
[21:27:54] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[21:28:31] *** Joins: ircseeker3 (~nodebot@108.62.52.153)
[21:30:49] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[21:32:45] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:34:20] <pl> Consider that Lisp Works has enough clients to continue selling 4.2k EUR a seat licences
[21:47:30] <jcowan> But how many of them?
[21:54:06] <mfiano> roughly 50 in the last year it seems
[21:58:40] *** Joins: trriplex (~trriplex@user/trriplex)
[21:59:39] *** Quits: trriplex (~trriplex@user/trriplex) (Client Quit)
[22:00:55] *** Joins: lisp123 (~lisp123@45.130.83.200)
[22:02:53] <gabc> I almost bought a license just to make guis and .exe on windows :|
[22:05:04] <nij-> Do you need lispworks to develop on windows?
[22:05:20] <mfiano> No
[22:05:41] <gabc> Nah but GUIs are nice sometimes, and lisp isn't in general the best for that
[22:06:25] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 268 seconds)
[22:06:50] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[22:06:54] <mfiano> best is a subjective term. CLIM is considered better than traditional toolkits by many around these parts :)
[22:07:01] *** Joins: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs)
[22:07:35] <gabc> mfiano: as far as I know it doesn't work on windows does it?
[22:07:49] <mfiano> X runs on Windows, so it does
[22:08:10] <gabc> yeah but erf, it /technically/ does but erf
[22:08:16] <nij-> WHAT? X runs on Windows?
[22:08:21] <mfiano> and there are SDL, broadway, etc backends
[22:08:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 256 seconds)
[22:09:10] <nij-> ... seems to be.... does that mean I can run stumpwm on windows?!?!
[22:09:42] <gabc> I don't think you can run a wm, except maybe in WSL but then that's a bit different
[22:09:55] <gabc> mfiano: hm I never checked out the other backends other than X
[22:12:50] <hendursaga> jon89: right now, mostly for Nyxt
[22:13:40] <hendursaga> Anyone have troubles mixing QuickLisp with Repo?
[22:15:02] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:17:52] <moon-child> I expect you can trivially run a wm, but it will only be able to manage x windows, not win32 windows
[22:18:49] <nij-> moon-child: Haven't used windows in a decade.
[22:18:59] <nij-> Does that mean many applications in windows will break?
[22:19:57] <moon-child> I have no idea, that was just my assumption
[22:20:00] *** Quits: amb007 (~a_bakic@net233-35-245-109.mbb.telenor.rs) (Ping timeout: 256 seconds)
[22:20:18] <moon-child> I would guess that non-x applications will just continue to be managed by windows as they otherwise would be
[22:20:32] <gabc> nij-: nah it means that your X applications will not integrate nicely with the windows ones
[22:20:56] <gabc> Like WSL is nice and all but doesn't understand windows path and windows line termination so it's a bit of a hassle
[22:21:07] *** Joins: amb007 (~a_bakic@87.116.175.34)
[22:21:27] <lisp123> Is there an alternative to (- 0 x) to take negative of a number?
[22:21:32] <moon-child> (- x)
[22:21:39] <lisp123> moon-child: thanks
[22:29:40] <hendursaga> Never mind I don't think I'm going with repo.
[22:30:24] *** Quits: amb007 (~a_bakic@87.116.175.34) (Read error: Connection reset by peer)
[22:30:51] *** Joins: amb007 (~a_bakic@net124-35-245-109.mbb.telenor.rs)
[22:31:07] <nij-> :(
[22:34:07] *** Quits: wheelsucker (~user@2600:8801:8c03:1f00::8165) (Remote host closed the connection)
[22:42:32] <gabc> What's repo?
[22:50:12] *** Quits: amb007 (~a_bakic@net124-35-245-109.mbb.telenor.rs) (Read error: Connection reset by peer)
[22:50:29] *** Joins: amb007 (~a_bakic@109.245.227.26)
[22:51:52] <lisp123> Should I avoid use-package in general?
[22:52:00] <lisp123> Seems a bit sloppy vs :use
[22:53:45] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[22:54:04] *** Joins: robin (~robin@user/terpri)
[22:54:48] *** Quits: jon89 (~jon89@24-233-185-117.miami.fl.bluestreamcable.net) (Quit: Client closed)
[22:55:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[22:55:44] <akater[m]> jon89: As Elisp gets closer to Common Lisp, I apply CL skills and code in everyday Emacs usage.  So, I use Lisp for everything, routinely.  I'd love to do a startup with CL, too but gotta close some gestalts first.
[22:55:45] *** Quits: amb007 (~a_bakic@109.245.227.26) (Ping timeout: 268 seconds)
[22:55:51] <lotuseater> I think that's a good idea lisp123
[22:56:51] <lotuseater> Someone also gave me advice it's good giving short nicknames for other packages your package uses like #:a for alexandria, then you definitely can track directly where this symbol comes from.
[22:57:21] *** Joins: amb007 (~a_bakic@net124-35-245-109.mbb.telenor.rs)
[22:57:25] <lisp123> lotuseater: thanks, and thats a good idea too
[22:57:55] <lotuseater> Was just repeating what I learned from someone in this channel. ^^
[22:58:14] <lisp123> :)
[23:01:46] <lotuseater> Found that feature of DrRacket useful from the first time on, it shows you by a line from which package a symbol is.
[23:03:06] <lotuseater> and sure when experimenting in REPL you can also use use-package, even if symbol names clash each other
[23:03:33] <lisp123> Nice
[23:04:52] <lotuseater> it'll ask you if you want to store the new meaning or keeping the old
[23:05:17] <lisp123> That's true, thats a good use for use-package
[23:05:44] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[23:10:26] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 256 seconds)
[23:12:58] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:14:57] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:15:08] *** Joins: tfb (~tfb@88.98.95.237)
[23:15:43] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:15:54] *** Joins: tfb (~tfb@88.98.95.237)
[23:16:28] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:f4a8:187b:951a:2344)
[23:16:29] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:16:40] *** Joins: tfb (~tfb@88.98.95.237)
[23:17:16] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:17:26] *** Joins: tfb (~tfb@88.98.95.237)
[23:18:02] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:18:12] *** Joins: tfb (~tfb@88.98.95.237)
[23:18:48] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:18:58] *** Joins: tfb (~tfb@88.98.95.237)
[23:19:34] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[23:22:18] *** Quits: euclid9 (~jrpilotte@bras-base-sbcypq6202w-grc-31-70-24-122-14.dsl.bell.ca) (Quit: WeeChat 2.8)
[23:22:59] *** Joins: jrpilotte (~euclid9@bras-base-sbcypq6202w-grc-31-70-24-122-14.dsl.bell.ca)
[23:23:07] *** Joins: tfb (~tfb@88.98.95.237)
[23:23:43] <jcowan> I've often run X on Windows, but I use rootless mode, in which each top-level Window is a Windows window and you use Windows decorations to deal with it.
[23:25:22] *** Quits: jrpilotte (~euclid9@bras-base-sbcypq6202w-grc-31-70-24-122-14.dsl.bell.ca) (Client Quit)
[23:28:00] *** Quits: tfb (~tfb@88.98.95.237) (Ping timeout: 256 seconds)
[23:30:44] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[23:32:45] <nij-> jcowan can you embed window's windows into x, and therefore handled by Stumpwm/
[23:32:48] <nij-> ?
[23:33:09] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[23:33:38] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[23:35:21] <edgar-rft> Let's try running Windows from WSL through wine :-)
[23:35:25] *** Joins: gethuen (uid502979@id-502979.stonehaven.irccloud.com)
[23:36:45] *** Joins: karlosz (~karlosz@router.cloyne.org)
[23:36:46] *** Quits: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu) (Quit: Leaving)
[23:38:21] *** Joins: attila_lendvai (~alendvai@catv-86-101-74-70.catv.broadband.hu)
[23:39:50] <jcowan> I don't think so. You can use RDP or VNC to capture the WIndows desktop, but then you have the whole Windows desktop inside a single X window, the converse situation.
[23:42:25] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[23:43:19] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:45:30] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[23:45:45] *** Joins: montxero (~user@149.167.149.74)
[23:49:10] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[23:50:35] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[23:50:41] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[23:56:13] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[23:57:34] *** Joins: dlowe (~dlowe@user/dlowe)
[23:57:54] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
