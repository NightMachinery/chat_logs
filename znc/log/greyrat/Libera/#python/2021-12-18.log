[00:00:03] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:8da7:5620:b53e:f8f4)
[00:00:53] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[00:01:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[00:01:42] <SnoopJ> what sort of thing?
[00:02:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:02:45] <grym> finding myself ever getting stuck with a terminal that i can't detach
[00:02:54] <SnoopJ> I think you're solving a different problem than the one that was asked about
[00:02:56] <grym> (or having to remember how to disown, or)
[00:02:58] <grym> maybe
[00:03:40] *** Quits: sidro (~sidro@86.121.200.249) (Quit: Konversation terminated!)
[00:06:04] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:07:09] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:07:47] *** Quits: akahs (~Shaka@user/shaka) (Quit: .)
[00:08:06] *** Quits: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:08:49] *** Quits: StickyIcky2 (~StickyIck@2806:107e:7:7914:f7a0:4c2a:69b7:fbf) (Quit: Leaving)
[00:08:50] *** Quits: StickyIcky (~StickyIck@2806:107e:7:7914:f7a0:4c2a:69b7:fbf) (Quit: Leaving)
[00:09:17] *** Quits: walrus_man (~Thunderbi@2601:154:8103:7990:9a8:4236:8b4d:8cef) (Quit: walrus_man)
[00:09:53] *** Joins: adeliktas (~adeliktas@i59F52741.versanet.de)
[00:10:14] *** Joins: grandrew (~grandrew@2600:1700:42f3:9180:f22f:74ff:feac:90a3)
[00:10:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:10:48] *** Joins: Warped (~Warped@user/warped)
[00:10:57] *** Joins: dob1 (~dob1@user/dob1)
[00:12:02] *** Joins: matsaman (~matsaman@user/matsaman)
[00:12:05] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[00:12:21] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:12:50] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[00:12:54] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:13:00] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[00:13:07] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Ping timeout: 256 seconds)
[00:13:17] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 240 seconds)
[00:13:19] <xheimlich> what is meant by "upgrade to python 3.(n+1)?" usually?
[00:13:32] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:13:34] *** Joins: grooverman (~grooverma@177.102.119.40)
[00:13:44] <grym> xheimlich: well, i `pyenv install <theversion>`
[00:13:45] <xheimlich> what I know how to do is to apt install python3.xx pip3.xx etc. and then I have to remake my virtualenvs.
[00:14:11] <xheimlich> (that I make with python -m venv.)
[00:14:31] <grym> i have ... 14? base interpreter versions installed right now.
[00:14:43] <xheimlich> I think I have five.
[00:14:52] <grym> it's been a while, i haven't tidied up
[00:14:58] <grym> i have lots of disk, i don't care
[00:15:43] <xheimlich> thing is I have "tight" venvs prepared for something that will be deployed and "kitchen sink" venvs which are basically one for neural net stuff, one for general data science, one for web projects etc.
[00:16:05] <grym> i typically have one venv per project, and i have one kitchen sink
[00:16:14] <grym> (a pipx-managed ipython+crap)
[00:16:28] <lembron> hi, am i missing something or is there kinda no way to force utf8-headers on a simple `python -m http.server 8080`?
[00:16:40] <xheimlich> I want Python 3.9 or 3.10 (I'm on 3.8 and sick of from typing import) but I don't want to remake my damn chaos venvs.
[00:16:51] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:16:58] <grym> xheimlich: so leave the old ones alone, don't uninstall their base interpreter, and install 3.10 too
[00:17:11] <grym> no biggie, that's totally normal
[00:17:26] <SnoopJ> xheimlich, venvs are always the version of the interpreter that created them.
[00:17:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8) (Ping timeout: 256 seconds)
[00:17:35] <xheimlich> yeah. I guess pip freeze > kitchen sink covers it.
[00:17:44] <xheimlich> SnoopJ: yes, I was moaning about that.
[00:17:55] <Helenah> pip squeek
[00:17:58] *** Joins: mickey8 (~user@user/mickey)
[00:17:59] * SnoopJ isn't sure how it could be any other way, since a venv *contains* an interpreter
[00:18:00] <grym> xheimlich: not even; you shouldn't need to recreate them unless you want those venvs to also have 3.10, in which case of course you must
[00:18:04] <SnoopJ> (or a symlink to one)
[00:18:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:18:13] <lembron> speaking python installation - whats the deal with that windows-store-python that jacks PATH but doesnt seem to actually useable (managed to disable it already, but woot)
[00:18:24] <mickey8> i need to plot some stuff with pandas, and i get no errors, but how do i actually see the plot? i run the script from cli with python file.py
[00:18:32] *** Quits: adeliktas (~adeliktas@i59F52741.versanet.de) (Quit: Client closed)
[00:18:37] <xheimlich> there's another annoying edge that's pickles.
[00:18:40] <grym> mickey8: usually `import matplotlib.pyplot as plt; plt.show()`
[00:18:59] <grym> mickey8: put the plt.show() after you plot something, of course :)
[00:19:12] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[00:19:13] <mickey8> perfect. thank you
[00:19:13] <SnoopJ> lembron, particular OS distributions do all kinds of silly things with Python. I know the less-than-stellar Windows experience is something the core devs are interested in addressing, but I'm not sure how much of it comes from MS's side (OTOH, more than a few of them *work* there)
[00:19:17] <grym> or plt.savefig(....) if you want to dump it to a file
[00:19:25] <xheimlich> I have one production thing that's stuck on 3.6 because it unpickles something whose creation is not really automated and why would I break what's already working.
[00:19:47] <SnoopJ> xheimlich, pickles are basically all edge, yep. They are an abysmal choice for backwards compatibility, although they're generally forward-compatible
[00:19:49] <grym> xheimlich: i have a 3.7 project that's stuck there for the forseeable future
[00:19:50] <xheimlich> the path of least resistance on windows is WSL.
[00:20:57] *** Quits: p3lim (~p3lim@ti0006q161-2971.bb.online.no) (Ping timeout: 240 seconds)
[00:21:05] <xheimlich> I'm very annoyed by certain Java GUI applications that just-work on Windows and plain-don't on consumer Linux.
[00:21:18] <xheimlich> like Gephi, and something called Concept Explorer.
[00:21:19] <SnoopJ> #java would be a better place to whinge about it
[00:21:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:21:35] <xheimlich> I guess. Wires got crossed.
[00:21:52] *** Quits: teut90 (~teut@2401:4900:1c69:421b:f107:3d30:9c1e:abd3) (Quit: Client closed)
[00:22:24] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 268 seconds)
[00:22:51] <lembron> SnoopJ interesting - guess id have to say that i didnt look into ich much further (as i use gitbash/mingw) and from there it "didnt work at all, access denied" (but it also still showed as "uninstalled" in the store so i think that exe was just a store-launcher VERY strange)
[00:23:15] *** Joins: lethu (~lethu@user/lethu)
[00:23:15] *** Joins: evocatus (~evocatus@62.182.78.42)
[00:23:27] <lembron> well, in the end i got a C:\Python310 as usual so im all good anyhow, just gave me a kinda wtf-moment =)
[00:23:47] <SnoopJ> I think the concern is that there are a lot of people who don't know how to get themselves out of the wtf-moment :(
[00:24:17] <xheimlich> again, the path of least resistance on Windows is WSL.
[00:24:29] <SnoopJ> you have said that, yes
[00:25:08] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[00:25:59] *** Joins: userHeni (~userHeni@31.22.203.81)
[00:26:17] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:26:22] *** Joins: PointThink (~PointThin@abze179.neoplus.adsl.tpnet.pl)
[00:27:25] *** Quits: PointThink (~PointThin@abze179.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[00:27:27] *** userHeni is now known as userMorgado
[00:27:29] *** Quits: moogs (~moogs@12.146.254.146) (Quit: Connection closed)
[00:27:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[00:28:19] <xheimlich> sometimes my home internet starts using ipv6 addresses and I can't use apt.
[00:28:19] <xheimlich> not something for here, yes.
[00:28:19] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[00:28:39] *** Joins: d3sync (~d3sync@gateway/vpn/pia/d3sync)
[00:29:28] *** Quits: d3sync (~d3sync@gateway/vpn/pia/d3sync) (Client Quit)
[00:30:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[00:30:20] <axisys_> to run some of the codes where subprocess uses linux bin which is not in path. I can easily add that in my shell env .. but trying to see how to add it in the python code so anyone can run this code and it will find the command
[00:30:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:31:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:31:10] *** Joins: Naan` (~Naan@user/naan)
[00:31:18] *** Quits: giusb (~giusb@user/giusb) (Remote host closed the connection)
[00:31:31] <axisys_> so subprocess calls for example call foo .. which is in /path/to/bin/ path .. like to see if I can add all the necessary paths on top of the code and subprocess will find it
[00:31:32] <phy1729> Can you fix the parent process to not run you with a broken environment?
[00:31:48] *** Joins: giusb (~giusb@user/giusb)
[00:32:21] *** Joins: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353)
[00:32:52] <phy1729> you can modify os.environ['PATH'], but that really shouldn't be necessary
[00:32:54] *** Joins: nomic2 (~nomic@85.203.34.35)
[00:33:12] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[00:34:05] *** Joins: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[00:34:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[00:34:33] *** Quits: userMorgado (~userHeni@31.22.203.81) (Read error: Connection reset by peer)
[00:35:47] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 256 seconds)
[00:35:55] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:35:57] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[00:36:43] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[00:37:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Read error: Connection reset by peer)
[00:37:39] *** Joins: grooverman (~grooverma@177.102.117.95)
[00:38:55] *** Joins: pilyn (~pilyn@user/pilyn)
[00:40:38] <axisys_> in this env, can rely on env as much but code is closely guarded and revd .. so looking to add the path in the code. so os.environ is the way to go?
[00:40:52] <axisys_> can't* rely..
[00:40:55] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:41:36] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 245 seconds)
[00:41:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[00:41:42] *** Joins: visl (visl@user/visl)
[00:41:57] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:42:45] *** Joins: dob1 (~dob1@user/dob1)
[00:46:33] *** Quits: giusb (~giusb@user/giusb) (Quit: WeeChat 3.3)
[00:46:50] *** Joins: giusb (~giusb@user/giusb)
[00:47:08] <parv> axisys_, Cannot you use absolute paths?
[00:47:33] *** Joins: binary011 (~binary01@cpe-74-71-15-170.nyc.res.rr.com)
[00:47:46] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:48:04] <Swayze> https://docs.airbyte.io/
[00:48:06] <Swayze> this looks great
[00:48:13] <Swayze> i do a bunch of ETL
[00:48:30] *** Joins: magla (~gelignite@55d47454.access.ecotel.net)
[00:48:34] *** Quits: binary011 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Client Quit)
[00:48:39] *** Quits: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Quit: Leaving)
[00:49:10] *** Joins: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com)
[00:52:35] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9cf7:81e1:27ea:9c34:dfc6)
[00:54:10] *** Quits: Guest4245 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[00:54:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:9416:ed6b:453a:58c2:af6b) (Ping timeout: 240 seconds)
[00:55:40] *** Joins: qwert (~qwert@208.78.214.5)
[00:56:21] *** Joins: rond_ (~rond_@100.42.200.146.dyn.plus.net)
[00:56:56] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[00:57:28] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[00:57:40] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:57:42] *** Joins: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt)
[00:58:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8)
[00:58:43] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:58:49] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:99ac:998a:aa29:be27)
[00:59:15] *** Joins: upsala (~zcb@185.209.196.166)
[01:02:33] *** Quits: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt) (Remote host closed the connection)
[01:03:32] *** Joins: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt)
[01:05:17] *** Quits: upsala (~zcb@185.209.196.166) (Ping timeout: 240 seconds)
[01:05:24] *** Quits: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt) (Remote host closed the connection)
[01:07:28] *** Joins: upsala (~zcb@185.209.196.169)
[01:09:30] <mmercer> as there still isnt a functional 'pip search', what is the current python equivalent that people are using?  can't be doing web ui lookups...  but i still dont see any solutions other than that online
[01:10:24] <deniska> Dunno, I just remember the names of the packages I use
[01:10:55] <mmercer> its not just about remembering the package names.  an example is ansible, which has the old/legacy versions, and the newer modular versions... and i dont remember which names are what in that case
[01:11:14] <mmercer> granted, i can look it up in the web-ui, but thats where pip search would be pretty handy/convenient
[01:12:25] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[01:13:16] <mmercer> looks like there is at least the beautiful soup alternatives, etc... so guess ill use pypisearch for now
[01:14:26] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:14:37] *** Quits: emf (~emf@2620:10d:c091:480::1:7a0e) (Ping timeout: 240 seconds)
[01:15:10] <grym> mmercer: well, there's https://pypi.org/project/pip-search/
[01:16:01] <grym> but i usually google for stuff
[01:17:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:18:03] <Staunch> i was so excited for the recent MyPy update, thinking i would finally be able to commit code without having to skip mypy for pre-commit since i use match statements. Imagine my surprise when instead of the explosion error i'm used to seeing, i get: "error: Match statement is not supported" instead.
[01:18:19] <Staunch> MyPy *still* blocks commit, so i *still* have to `SKIP=mypy git commit...` :sob:
[01:18:45] <capn> What's the best way to retrieve a password stored in `pass` (passwordstore.org) for python scripts?
[01:18:48] <grym> comes a time when you just pop the rull off, frankly
[01:18:53] <grym> rule*
[01:19:35] <capn> Ansible has a passwordstore lookup module: https://github.com/ansible-collections/community.general/blob/main/plugins/lookup/passwordstore.py
[01:19:36] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:19:53] <capn> Could I somehow make an import from that?
[01:20:54] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[01:22:38] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:23:36] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:23:57] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[01:24:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:24:31] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:85b8:9078:b4ac:ca26)
[01:24:51] <Staunch> grym: yeeeah i'm real close
[01:26:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:26:09] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:26:18] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:27:29] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:27:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:29:25] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:30:34] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:30:40] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[01:31:51] *** Joins: onichomp (~onichomp@2806:264:4404:8056:8166:af11:6347:16c7)
[01:34:43] *** Quits: magla (~gelignite@55d47454.access.ecotel.net) (Quit: Stay safe!)
[01:35:09] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[01:36:04] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:36:28] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[01:36:41] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[01:38:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[01:39:12] <axisys_> parv: there is be lot of those bins and long path.. code will have these a lot places :-(
[01:39:18] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[01:39:19] <axisys_> there will*
[01:40:43] <parv> axisys_, Not optimal indeed. I would personally go with setting PATH environment variable in Python; cannot rely on external environment
[01:42:40] <axisys_> parv: and use os.environ ?
[01:43:39] <axisys_> what is python equivalent of PATH=$PATH:/path/to/new/bin ?
[01:44:15] <axisys_> os.environ['PATH'].append('/path/to/new/bin') ?
[01:44:25] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[01:44:42] <parv> phy1729 ahad mentioned above; yes, seems like that
[01:45:29] <axisys_> never mind that is a str.. I will need to use '+'
[01:45:33] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:45:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3705:6def:beff:fd) (Ping timeout: 240 seconds)
[01:46:19] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[01:46:53] <axisys_> this will work, but that is ugly .. os.environ['PATH'] = os.environ['PATH'] + ':' + '/path/to/foo'
[01:46:57] *** nomic2 is now known as nomic
[01:47:13] <parv> axisys_, If I had a "large" collection of commands & paths, I would create a module & assign command paths to variables. Then there would be only one location to adjust paths/commands in future.
[01:47:31] <axisys_> ah.. sys.path.append('..') works
[01:47:51] *** Joins: asa22 (~asa22@84.125.126.60.dyn.user.ono.com)
[01:48:05] <asa22> with open("test.bin", "rb") as f:
[01:48:06] <asa22>     byte = f.read()
[01:48:06] <asa22>     print(byte)
[01:48:18] <asa22> this prints b'this is a test'
[01:48:33] <asa22> how do I print all the bytes
[01:48:35] <asa22> as bytes
[01:48:53] <grym> those are bytes, printed as bytes
[01:49:17] <asa22> well I want the bytes in binary
[01:49:42] <grym> binascii.hexlify, possibly
[01:49:50] <axisys_> parv: excellent idea.. I should look for a python way to do it.
[01:49:55] <KirkMcDonald> byte.hex() is a thing.
[01:51:18] *** Joins: luigibu (~luigi@80.30.201.209)
[01:51:19] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[01:52:17] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[01:52:57] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:53:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:54:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:55:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:55:51] *** Joins: jdmark (~jdmark@user/jdmark)
[01:57:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:57:53] <SnoopJ> I am trying to port a script full of GNU sed expressions to Python, is there a good equivalent spelling of \U (turns the replacement text to uppercase)?  I get the feeling I need to use finditer() and a bunch of manual string manipulation
[01:58:17] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[01:58:54] *** Quits: asa22 (~asa22@84.125.126.60.dyn.user.ono.com) (Quit: Client closed)
[01:59:26] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:59:49] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[02:00:11] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:85b8:9078:b4ac:ca26) (Quit: Konversation terminated!)
[02:00:29] <wootehfoot> just call sed, from inside python, python is a bash replacement™
[02:00:40] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[02:01:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:01:23] <[itchyjunk]> Hi, what does virtual mean in this context? " In C++ terminology, normally class members (including the data members) are public (except see below Private Variables), and all member functions are virtual."
[02:01:42] <SnoopJ> wootehfoot, sed will not necessarily be available in the runtime environment, so that's unfortunately not an option here.
[02:01:52] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Quit: KvL)
[02:02:12] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[02:02:14] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:02:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:02:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:02:51] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[02:03:08] <ChrisWarrick> [itchyjunk]: a resource that assumes knowledge of C++ to teach python cannot be good
[02:03:19] <SnoopJ> That's Doc/tutorial/classes.rst :/
[02:03:35] <[itchyjunk]> I was just trying to learn about classes here https://docs.python.org/3/tutorial/classes.html
[02:03:40] *** Joins: fikran (~fikran@user/fikran)
[02:03:41] *** Joins: Pickchea (~private@user/pickchea)
[02:03:43] <ChrisWarrick> the tutorial is garbage for new programmers
[02:03:48] <[itchyjunk]> I want to learn "data structures"
[02:04:06] <ChrisWarrick> [itchyjunk]: what do you mean by “data structures”?
[02:04:08] <SnoopJ> ChrisWarrick, agreed, but the question was soliciting something else
[02:04:11] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:04:19] <[itchyjunk]> I would like to learn about things like trees and graphs.
[02:04:25] <[itchyjunk]> Also how to traverse them and such
[02:04:27] <ChrisWarrick> SnoopJ: I would consider an explanation of C++’s virtual fairly off-topic for this channel
[02:04:29] <SnoopJ> I don't think the doc is even *correct*, virtual functions don't have an implementation, and member functions generally do...?
[02:04:46] <SnoopJ> ChrisWarrick, I would agree, except that the tutorial does mention it, and we're discussing the meaning of the tutorial
[02:04:51] <[itchyjunk]> hmm, should i ignore that sentence and move on?
[02:04:56] <ChrisWarrick> [itchyjunk]: yes
[02:04:59] <SnoopJ> [itchyjunk], yea, it's hurting more than it's helping
[02:04:59] <[itchyjunk]> okay
[02:05:19] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[02:05:33] <ChrisWarrick> SnoopJ: my rusty C++ knowledge says virtual functions have an implementation, you need a `virtual` if you want to override it
[02:05:38] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:06:01] <ChrisWarrick> s/have/can have/
[02:06:02] <SnoopJ> yea, as I look at cppreference that's what it's referring to
[02:06:26] <SnoopJ> [itchyjunk], so, translating that out of C++ jargon: methods can be overridden by subclasses
[02:06:47] <SnoopJ> ChrisWarrick, at least it's not *wrong*, but it's still definitely not helpful
[02:07:01] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[02:07:01] <SnoopJ> at least not to anyone who isn't familiar with C++
[02:07:48] <ChrisWarrick> SnoopJ: well, at least a noteworthy portion of readers would be familiar with C++. The next sentences talk about the very popular and known languages of Modula-3 and Smalltalk.
[02:07:52] <[itchyjunk]> Ah, okay methods being overridden is understandable from generic oop concepts
[02:08:22] <[itchyjunk]> Yes I decided to ignore that entire paragraph since i am not familiar with any of the languages
[02:08:34] <SnoopJ> [itchyjunk], that sentence is pointing out that you don't have to do anything special to override a method, but in C++ you have to declare this specifically (by making something virtual)
[02:08:50] *** Quits: rond_ (~rond_@100.42.200.146.dyn.plus.net) (Quit: Client closed)
[02:09:05] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:09:50] <[itchyjunk]> Ahhh
[02:10:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:11:42] <ChrisWarrick> [itchyjunk]: as for your quetsion regarding trees and graphs — you need generic OOP concepts for that and Python OOP basics, but I’d focus on a language-agnostic resource on those data structures
[02:12:30] <[itchyjunk]> I had a brief experience with "OOP" with Java recently. But i would like to use python moving forward for this i think
[02:13:43] <ChrisWarrick> [itchyjunk]: if you pick up a classic book such as https://en.wikipedia.org/wiki/Introduction_to_Algorithms , you’ll find it is language-agnostic (uses custom pseudo-code) and doesn’t use OOP
[02:13:47] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[02:14:01] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-000a.res6.spectrum.com)
[02:14:16] <[itchyjunk]> "Objects have individuality, and multiple names (in multiple scopes) can be bound to the same object."
[02:14:17] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[02:14:27] <[itchyjunk]> This just means I can create multiple refrences to the same object right?
[02:15:12] <ChrisWarrick> [itchyjunk]: yes
[02:15:39] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[02:15:46] <bjs> [itchyjunk]: `a = b = []` here are 2 names for the same object
[02:15:47] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:15:53] <bjs> [itchyjunk]: (or `a = [] ; b = a`)
[02:17:27] <[itchyjunk]> for `a=b=[]` its evaluated rhs to lhs so `b=[]` followed by `a = []` ?
[02:17:42] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-000a.res6.spectrum.com) (Client Quit)
[02:18:11] <bjs> [itchyjunk]: no it's like `b = []` followed by `a = b`
[02:19:00] <[itchyjunk]> hmm right
[02:19:06] <bjs> [itchyjunk]: I shouldn't have picked the fancy syntax first sorry.  Just imagine `x = [];  y = x`  now there are two references to the list object
[02:19:10] <bjs> one called "x" and one called "y"
[02:19:46] <[itchyjunk]> I was curious about the fancy syntax as well (seen it elsewhere).
[02:20:17] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[02:20:42] *** Joins: Andrynet1 (~Andrynet@190.152.210.224)
[02:20:48] <phy1729> This is when the obligatory https://nedbatchelder.com/text/names.html link goes right?
[02:20:58] *** Quits: Saxtheowl (~roro@78.192.226.182) (Read error: Connection reset by peer)
[02:21:10] <SnoopJ> yep
[02:21:16] *** Quits: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:21:53] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:22:28] *** Joins: vlm (~vlm@user/vlm)
[02:22:37] *** Quits: onichomp (~onichomp@2806:264:4404:8056:8166:af11:6347:16c7) (Ping timeout: 240 seconds)
[02:25:43] *** Quits: bim9262 (~bim9262@user/bim9262) (Ping timeout: 256 seconds)
[02:26:01] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[02:26:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com)
[02:26:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:26] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:27:21] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:27:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[02:29:52] *** lastshell is now known as lastshell_afk
[02:31:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:31:59] *** Quits: parv (~quass@user/parv) (Quit: parv)
[02:32:00] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:31] *** Joins: asa22 (~asa22@84.125.126.60.dyn.user.ono.com)
[02:33:37] <asa22> how do I convert a tuple with a single item into a string
[02:33:55] <asa22> something like ('asdasdasd',)
[02:34:19] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:35:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:35:49] <phy1729> that_tuple[0]
[02:36:08] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[02:36:11] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[02:36:27] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[02:36:46] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[02:37:24] <asa22> TypeError: 'NoneType' object is not subscriptable wtf am I doing
[02:37:43] <frat3rius> guys is there any difference in str(some_object) vs f"{some_object}", which should I use when and why?
[02:38:00] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[02:38:23] <zamba> i have a script that should read in x number of bytes off a network socket and then output this to file
[02:38:59] <zamba> if i just do s.recv(SOMESIZE) and then just move on, then it's blazingly fast, but if i try and compare the number of bytes read and try and make any sort of calculation, then the performance goes down the drain
[02:39:06] *** Joins: rond_ (~rond_@100.42.200.146.dyn.plus.net)
[02:39:29] <zamba> i also notice that the cpu utilization on one of the cpu cores on the (virtual) machine goes to 100% and is set there constantly
[02:39:32] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[02:39:36] <zamba> so it's evident that it's doing something
[02:40:41] <zamba> this is "network-slow" (only getting around 4-5Mbps): https://dpaste.org/uXtt
[02:41:03] <SnoopJ> asa22, you're doing `someobj[i]` somewhere where `someobj` is None. If you show us the complete error report, we can tell you more.
[02:42:30] <SnoopJ> frat3rius, there isn't a difference in the result. f"" is ususally for when you want to build a string from multiple bits of data, like f"Dear {prefix} {lastname},". I would use str() for just converting a value.
[02:42:37] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Client Quit)
[02:42:43] <zamba> this, for comparision, is very fast (pushing 1Gbps): https://dpaste.org/Sb73
[02:42:55] <frat3rius> SnoopJ thx a lot
[02:43:04] <zamba> i realize that .recv() has no guarantee on how much data it actually reads out
[02:43:22] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3946:1e3:b608:aa87)
[02:43:29] <zamba> but as soon as i want to compare/make sure i've read the number of bytes i need, then the performace goes down the drain
[02:43:35] <zen_coder> is pytest-mock installed by default with pytest?
[02:43:59] <SnoopJ> zen_coder, no
[02:46:33] <[itchyjunk]> "Note that “i = x” assigns to the name i, but “i[0] = x” doesn’t, it assigns to the first element of i’s value." so here `i[0]` itself is a name that is refrencing to some value and it not the same refrence as `i` is what is being said?
[02:46:57] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[02:47:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[02:47:49] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:48:36] <SnoopJ> [itchyjunk], `i[0]` is a method call in disguise, not a name
[02:48:44] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[02:48:45] <[itchyjunk]> hmmmmm
[02:48:57] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:49:06] *** Joins: tejr (~tejr@user/tejr)
[02:49:10] <SnoopJ> think of `i[0]` as `i.__getitem__(0)` and `i[0] = -1` as `i.__setitem__(0, -1)`
[02:49:58] <[itchyjunk]> interesting.. i thought it was a refrence to something but its sugarsyntax for special methods!
[02:50:01] *** Quits: bote (~bote@user/bote) (Quit: bote)
[02:50:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:50:40] <SnoopJ> it does emit different code so it's not quiiiite right to say it's sugar (I think), but it's close enough to understand it
[02:50:50] <asa22> is this the correct way of getting characters 0 to 7 from a string
[02:50:54] <asa22> string[0:7]
[02:51:15] <SnoopJ> asa22, try it and see
[02:51:16] <bjs> asa22: "012345678"[0:7] returns "0..6"
[02:51:28] <asa22> ah yes that I meant
[02:51:38] <nedbat> asa22: you can omit the 0:  string[:7]
[02:51:43] <asa22> oh thanks
[02:51:58] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[02:52:08] <zen_coder> SnoopJ: why is it not bundled with pytest?
[02:52:15] <SnoopJ> regarding my question about porting sed \U to `re`, this is what I ended up doing 😞 https://bpa.st/ZDBQ
[02:52:18] <SnoopJ> zen_coder, because it's a plugin
[02:52:36] <nedbat> zen_coder: pytest provides its own way to do mocking: "monkeypatch"
[02:52:52] <nedbat> zen_coder: https://docs.pytest.org/en/6.2.x/monkeypatch.html
[02:54:01] <SnoopJ> err, don't mind the `cnt` there, it's debugging cruft
[02:54:02] <nedbat> zen_coder: you can install pytest-mock if you prefer that approach
[02:55:56] *** Quits: asa22 (~asa22@84.125.126.60.dyn.user.ono.com) (Quit: Client closed)
[02:57:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9cfe:df4c:f084:d8eb)
[02:57:14] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9cfe:df4c:f084:d8eb) (Remote host closed the connection)
[02:58:01] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:58:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:58:17] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:58:52] *** Joins: Oddity (~Oddity@user/oddity)
[02:59:02] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 268 seconds)
[02:59:26] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[02:59:45] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:00:44] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-216.pool.digikabel.hu) (Quit: leaving)
[03:01:57] *** Quits: rond_ (~rond_@100.42.200.146.dyn.plus.net) (Quit: Client closed)
[03:03:27] *** Joins: pabogr (uid27497@id-27497.tinside.irccloud.com)
[03:05:22] *** Joins: Ergo^ (~ergo@91.238.59.144)
[03:06:40] *** Quits: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53) (Remote host closed the connection)
[03:07:03] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[03:07:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:08:31] <stewie925> hey guys, I am getting undefined variable for my cust variable in line 7 - https://bpa.st/VIBQ - although I have declared it as a global variable
[03:09:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[03:09:01] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[03:09:02] <bjs> stewie925: it's global in solution not in getBill
[03:09:32] <stewie925> oh
[03:09:36] <stewie925> thank you
[03:10:17] <stewie925> so I just need to move it inside getBill
[03:11:08] <bjs> stewie925: well if you move it inside getBill it won't be global in solution :)
[03:11:14] <bjs> maybe you want a global statement in both functions?
[03:11:14] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[03:11:26] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:11:47] <stewie925> what if I put the global statement at the top
[03:12:11] *** Joins: oli_b (~oli_b@20014C4E100CB20014FEA5DDB2CA195A.dsl.pool.telekom.hu)
[03:12:15] <oli_b> Hi
[03:12:18] <stewie925> wait... maybe I just declare it no need for global
[03:12:56] <stewie925> doesn't work, either
[03:13:00] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:13:03] <SnoopJ> hmm, my solution is wrong, it fails for "foo2bar" :(
[03:13:52] <SnoopJ> I'm guessing [a-zA-Z]*\|[0-9]* isn't quite the same
[03:14:25] <SnoopJ> (I don't know why it's qualified with *, to say the source script is cryptic is understating it)
[03:15:04] <zen_coder> I am doing a mock "with patch('A.some_method') as mocked_method:" which doesnt give me an error. However the method is not mocked at all
[03:15:40] <nedbat> zen_coder: the short answer is: patch where the method is used, not where it's defined.
[03:15:58] <zen_coder> in the module where the method is used it is imported like that: "from .some_method import some_method"
[03:16:00] <nedbat> zen_coder: is A a class or a module?
[03:16:08] <zen_coder> A is a module
[03:16:23] <nedbat> zen_coder: then you should do: patch("module_where_its_used.some_method")
[03:16:25] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.3)
[03:16:37] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[03:16:43] <nedbat> zen_coder: the longer answer: https://nedbatchelder.com/blog/201908/why_your_mock_doesnt_work.html
[03:17:03] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[03:17:14] <zen_coder> what is "module_where_its_used" ?
[03:17:23] <zen_coder> is guess it is not my Module A
[03:17:31] <zen_coder> it is the python filename where the function is used?
[03:17:35] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[03:17:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:18:03] <SnoopJ> oh, I got it, [a-zA-Z]*\|[0-9]* is working by capturing contiguous runs of alpha/numeric chars
[03:18:13] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Ping timeout: 240 seconds)
[03:18:43] *** Joins: emf (~emf@2600:1700:841:cc20:184c:c9e0:41bd:a50)
[03:18:58] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:19:11] *** Joins: mickey8 (~user@user/mickey)
[03:19:23] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:19:45] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:20:05] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:20:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:20:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:21:06] <nedbat> zen_coder: you said, "in the module where the method is used it is imported like that".  That module.
[03:22:24] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:22:30] *** Joins: emf_ (~emf@2620:10d:c091:480::1:2a01)
[03:22:49] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:22:57] *** Quits: emf (~emf@2600:1700:841:cc20:184c:c9e0:41bd:a50) (Ping timeout: 240 seconds)
[03:23:04] <[itchyjunk]> "Fact: Python passes function arguments by assigning to them." this means if i have `def fun(x)` somewhere and i call `fun(3)`, `x=3` happens somewhere?
[03:23:45] <SnoopJ> sooooorta
[03:23:49] <zen_coder> with module you mean python file?
[03:23:57] *** Leonarbro_ is now known as Leonarbro
[03:24:04] <bjs> [itchyjunk]: yes,  it happens during the call
[03:24:43] *** Joins: Viewday117 (~Viewday@user/viewday)
[03:24:46] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:26:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:26:22] *** Viewday117 is now known as Viewday11
[03:26:49] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[03:27:05] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[03:28:01] <SnoopJ> [disassembly warning]: if you look at the emitted code, the function body of fun() contains a LOAD_ for the value of x: https://bpa.st/C3JQ
[03:28:24] <zen_coder> with patch('Module.Python_File.some_method') as mocked_method:
[03:28:33] <zen_coder> now this is finally working
[03:28:37] <nedbat> zen_coder: great
[03:29:00] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Quit: Leaving)
[03:29:38] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:29:54] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:37] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6af8:e1a0:7d14:3e3d) (Ping timeout: 240 seconds)
[03:31:43] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[03:32:09] <[itchyjunk]> oh interesting. i didn't know you could look at assembly code for any given code like that
[03:32:51] <[itchyjunk]> Is there some distinction between what `LOAD_CONST` does and what assignment means?
[03:32:53] <nedbat> [itchyjunk]: it's not assembly exactly, it's disassembled bytecode (which sounds like a dumb thing for me to say!)
[03:33:33] <SnoopJ> [itchyjunk], do you know what a closure is?
[03:33:39] <[itchyjunk]> Ah, bytecode. so someting for the interpreter
[03:34:09] <[itchyjunk]> Like a function having closure means result of application of that function still being in my codomain?
[03:34:10] <SnoopJ> yea, a compiled CPython program is a stream of bytes that refer to virtual instructions
[03:34:20] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:35:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:35:29] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:36:45] <zen_coder> nedbat: is this the same for classes?
[03:36:57] *** Quits: emf_ (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[03:37:46] <nedbat> zen_coder: if A was a class, the original patch would probably work
[03:38:03] <oli_b> Is there a separate channel specificly for beginners? Like for example #python-beginner ?
[03:38:05] <nedbat> zen_coder: and if you imported your function differently, it would have worked for a module also
[03:38:13] <oli_b> Just not to bother the pros with lammah questions
[03:38:14] <nedbat> oli_b: here is fine. welcome!
[03:38:45] *** Joins: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53)
[03:39:27] <zen_coder> how can I import a function in the module with the module prefix?
[03:39:30] <zen_coder> is this possible?
[03:39:39] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[03:40:04] <oli_b> nedbat: thanks... I am currently going all against the advices of the python tutorials: although I am quite new to python, but in parallel I am trying to discover the pygame library just to have an easier access to graphics and sound...
[03:40:26] <nedbat> zen_coder: instead of `from .some_module import some_function; .. some_function()`, you can do: `from . import some_module;  some_module.some_function()`
[03:40:39] <nedbat> oli_b: what advice does that go against?
[03:40:40] *** Quits: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53) (Remote host closed the connection)
[03:41:03] <oli_b> nedbat: learn the basics first before You dig Yourself into a specific library...
[03:41:07] <SnoopJ> [itchyjunk], "codomain" is a little beyond my CS-fu, but I think the answer is yes. LOAD_CONST pulls the name from co_consts, which is as the name suggests a tuple of constants associated with a code object. LOAD_FAST pulls them from co_varnames, which is a tuple of local variables
[03:41:18] *** Joins: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53)
[03:41:24] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[03:41:57] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Remote host closed the connection)
[03:42:08] <nedbat> oli_b: if the library is what keeps you interested, it can be a good way to go. You just need to recognize when to back up a little bit and get some fundamentals too.
[03:42:15] *** Joins: spider_pilas420 (~spider_pi@bl19-204-103.dsl.telepac.pt)
[03:42:24] *** Quits: spider_pilas420 (~spider_pi@bl19-204-103.dsl.telepac.pt) (Remote host closed the connection)
[03:42:36] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[03:42:56] <SnoopJ> I think the distinction that makes LOAD_FAST faster hinges on "pushes a reference" but I'm not intimately familiar with the distinction
[03:43:04] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Quit: Client closed)
[03:43:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:43:52] <oli_b> nedbat: I've been programming in TCL since '96 and there is a handy library that is Tk that makes graphics easy. The same library is also available in python via an interpreter: tkinter. I started to write a game using tkinter in python but it is a hard work
[03:43:52] *** Joins: adeliktas (~adeliktas@i59F52741.versanet.de)
[03:44:37] <SnoopJ> oli_b, PyGame is a great library, I don't think there's anything wrong with learning Python while also learning PyGame. Just remember that the language and the library are distinct from each other.
[03:44:46] *** Joins: Fiji (~Fiji@user/fiji)
[03:44:57] <ThePhilgrim> Are there any tkinter wizards in this channel?
[03:45:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[03:45:17] <SnoopJ> ThePhilgrim, if the answer were yes, do you have another question queued up for them?
[03:45:34] <ThePhilgrim> I know, don't ask to ask xD
[03:45:37] <ThePhilgrim> but yes
[03:45:43] *** Joins: Wulf (~Wulf@user/wulf)
[03:46:23] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[03:46:50] <ThePhilgrim> I have 8 rows of entries. And I'm trying to get the values with self.grid_foo.grid_slaves(row=current_row)[0]. Printing this just gives me widgets tho, not the value of what's in them
[03:48:19] <bjs> nedbat: why isn't it assembly then?  We even call the thing that runs it a _virtual machine_
[03:48:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:48:25] <bjs> ;)
[03:48:51] <zen_coder> nedbat: I think this doesnt work, or I am doing something wrong
[03:48:53] <zen_coder> https://bpa.st/ITUQ
[03:49:20] <SnoopJ> bjs, `$ ag assembler Python/compile.c | wc -l` -> 31 :)
[03:49:57] <nedbat> bjs: because people talk about "programming in assembly" or "knowing assembly", and this is different.
[03:50:01] <oli_b> SnoopJ: yepp, i know... it is just a handy extension. But I wanted to have some easy success at the graphics and sound, so after having painful days with tkinter I found pygame. And I think let's leave Tk for TCL, they are more hand in hand
[03:50:15] <bjs> nedbat: sigh you always make incredibly good points
[03:50:16] <bjs> that's no fun
[03:50:31] <nedbat> :P
[03:50:37] <SnoopJ> nedbat, was responding to the question that was asked rather than the text ;P
[03:50:46] * SnoopJ squints at errant ','
[03:52:03] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:54:46] *** Joins: luva9 (~luva@37.120.197.44)
[03:55:13] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[03:56:15] *** Quits: qwert (~qwert@208.78.214.5) (Quit: Client closed)
[03:56:17] *** Quits: luva (~luva@37.120.197.45) (Ping timeout: 240 seconds)
[03:56:17] *** luva9 is now known as luva
[03:56:29] <zen_coder> does anybody how to import a module inside of the module?
[03:56:37] <zen_coder> itself
[03:56:50] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 252 seconds)
[03:57:11] <bjs> zen_coder: you mean like in the module foo importing foo ?
[03:57:24] <zen_coder> yes
[03:57:32] <zen_coder> foo is importing itself
[03:57:39] <bjs> zen_coder: well if you know the name you can just import it, `import mypackage.whatever.foo`
[03:57:57] <bjs> like you do elsewhere
[03:58:14] *** Quits: luva (~luva@37.120.197.44) (Remote host closed the connection)
[03:58:29] *** Quits: traptrip (trip@brigaid.xs4all.nl) (Ping timeout: 252 seconds)
[03:59:00] *** Joins: luva (~luva@37.120.197.44)
[03:59:15] <zen_coder> this doesnt work, remember i am in the  module itself
[03:59:22] <bjs> zen_coder: why doesn't it work?
[03:59:28] <bjs> zen_coder: what are you trying to do?
[03:59:39] <bjs> these kind of cyclic imports are... fraught with difficulty
[03:59:45] <zen_coder> https://bpa.st/ITUQ
[04:00:08] <zen_coder> I want to mock a method in this module, and I do not want to patch the method per file
[04:00:15] <zen_coder> I want to patch it globally
[04:00:18] <bjs> zen_coder: what is ModuleA?
[04:00:33] <zen_coder> the folder name of the module
[04:00:43] <zen_coder> this is a treet structure
[04:00:47] <zen_coder> file tree
[04:00:59] <bjs> Oh I see, Iw as confused the line "import . import ModuleA" was confusing me
[04:01:04] <[itchyjunk]> "For example, del modname.the_answer will remove the attribute the_answer from the object named by modname." does this mean modname.the_answer will go back to having the default value before my assignment or that there will no longer be the attribute called the_answer in the object modname?
[04:01:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:25] <zen_coder> ahh sorry, this should be "from . import ModuleA"
[04:01:49] <bjs> zen_coder: I'm not sure what you mean by "patch the method per file"? are you referring to mocking libraries?
[04:02:28] <bjs> zen_coder: if File1 does `from . import File2` and then it patches File2.some_method then later accesses to `File2.some_method` should see the patch
[04:03:12] <bjs> [itchyjunk]: it removes the attribute
[04:03:35] <[itchyjunk]> hmm interesting
[04:04:07] <zen_coder> the testing is in a completely different folder
[04:04:12] <bjs> zen_coder: so?
[04:04:21] <zen_coder> it only has access via "import ModuleA"
[04:04:23] <bjs> zen_coder: I'm not seeing what the problem is you're trying to solve
[04:04:37] <bjs> zen_coder: sure
[04:04:49] <bjs> your tests can patch "ModuleA.FileB.some_method" or whatever
[04:05:32] <bjs> and then anyone who later accesses FileB.some_method will see the new patch (but people who *already* accessed the name earlier on will still have the old one)
[04:05:46] <nedbat> zen_coder: do you understand why the style of import can affect this?
[04:05:58] <zen_coder> I have a moduleA with a python file "some_file.py" with a method "some_method()" I want to patch now "ModuleA.some_method" instead of "ModuleA.some_other_file.some_method"
[04:06:17] <zen_coder> so nedbat, said this would be possilbe
[04:06:19] *** Joins: Terexen (~terexen@user/terexen)
[04:06:21] <bjs> zen_coder: ModuleA has an __init__.py which is importing it or something?
[04:06:22] <zen_coder> see his comments above
[04:06:27] *** Joins: rvgate (~rvgate@user/rvgate)
[04:06:33] <zen_coder> yes there is a "__init__.py"
[04:06:38] <bjs> and what does it do?
[04:06:39] <nedbat> zen_coder: that will work if elsewhere you use `import ModuleA;  ModuleA.some_function()`
[04:07:28] <zen_coder> nedbat: I get an error when executing the test " AttributeError: module 'ModuleA' has no attribute 'some_method'"
[04:07:59] <zen_coder> __init__.py looks like this. "from .some_file import (some_method)"
[04:08:37] <bjs> then ModuleA should have a some_method attribute
[04:08:45] <bjs> I'm confused :)
[04:08:50] <SnoopJ> [itchyjunk], names in the same scope don't have any "memory" like that; when you assign, you clobber the current name entirely if it's already defined
[04:09:11] <[itchyjunk]> ah
[04:09:50] <nedbat> zen_coder: btw, you are talking about functions, not methods (not that that changes these details)
[04:09:55] <[itchyjunk]> So if i create some apple object from some Apple class, i shouldn't expect it to always have some attribute because the class defines it
[04:10:06] <SnoopJ> but name lookup can go outside the local scope of execution, so local scopes are kind of "overlaid" onto the module that defines them
[04:10:58] <SnoopJ> [itchyjunk], that would be a fairly reasonable expectation imo, but I'd also say `del apple.foo` is worse than `apple.foo = None  # or other appropriate sentinel value`
[04:11:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:11:41] <[itchyjunk]> ah
[04:12:05] <SnoopJ> if the attribute is part of the object's (public) state, then the object isn't really complete without it
[04:13:00] *** Joins: fikran (~fikran@user/fikran)
[04:13:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[04:13:39] *** Quits: Andrynet1 (~Andrynet@190.152.210.224) (Quit: WeeChat 3.3)
[04:14:13] *** Joins: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com)
[04:14:51] <zen_coder> bjs: how can I print what utils has in the file?
[04:15:02] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[04:15:06] <bjs> zen_coder: what is utils?
[04:15:12] <zen_coder> ahh sorry
[04:15:16] <zen_coder> I mean ModuleA
[04:15:18] <bjs> Now I'm confused again :)
[04:15:53] <zen_coder> I mean how can print all the attributes of ModuleA in the file where I get the attribute error
[04:16:07] <bjs> zen_coder: the attributes of the module are the same in all files
[04:16:17] <bjs> but you can import the module, then print(dir(ModuleA)) (or whatever name you imported it as)
[04:16:33] *** Joins: arinov (~arinov@213.194.126.155)
[04:17:29] *** Quits: Vision (~Vision@023-084-134-149.res.spectrum.com) (Quit: Leaving)
[04:18:42] *** lastshell_afk is now known as lastshell
[04:20:15] <zen_coder> I stop for now, it doesnt work
[04:20:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[04:20:41] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3946:1e3:b608:aa87) (Quit: Konversation terminated!)
[04:20:50] <bjs> okay
[04:21:02] <bjs> nedbat: I was thinking about the bytecode stuff I did the other day; did you have any opinions
[04:21:19] <bjs> adding a parser seems like too much, do you think there's a middle ground?
[04:21:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:21:30] <nedbat> bjs: i'm torn: it would be interesting to do more phases, but yes, it would be a lot.
[04:21:49] <SnoopJ> bytecode stuff? 👀
[04:22:08] <nedbat> SnoopJ: https://gist.github.com/bensimner/bae76d72c2c7f8fe3c346606855f97dd
[04:22:34] <bjs> SnoopJ: gitesh was asking about how the bytecode worked, so i wrote a little .py file that pretended to be a bytecode interpreter to see if that would help make sense of the compiler+interpreter
[04:23:54] <bjs> sadly with these things it's not clear how much it actually helps
[04:24:30] *** Joins: onichomp (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8)
[04:24:41] <SnoopJ> hmm, it's a pedagogical device?
[04:24:59] <SnoopJ> s/pedagogical/teaching/, I can at least not use obtuse terminology when asking a bunch of questions :)
[04:25:14] <bjs> SnoopJ: it's ok, yes it was.
[04:25:18] <bjs> or at least, an attempt at one :)
[04:26:41] *** Joins: emf_ (~emf@2620:10d:c091:480::1:2a01)
[04:27:28] *** Joins: zebrag (~chris@user/zebrag)
[04:28:37] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[04:30:36] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[04:31:13] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[04:32:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:32:17] *** Quits: emf_ (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[04:32:17] <SnoopJ> bjs, my first thought looking at this is that it would be neat to see a visualization of the state of the stack. I wonder how much doing that would take.
[04:32:46] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[04:33:26] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[04:34:08] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:34:20] *** Quits: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:34:37] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 268 seconds)
[04:34:50] *** Joins: cdown (~cdown@163.114.131.1)
[04:35:56] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Remote host closed the connection)
[04:36:04] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[04:36:15] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[04:36:47] <SnoopJ> It also reminds me of looking at something in PyPy/RPython a long time ago, so that's probably good
[04:37:32] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[04:37:45] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[04:37:45] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[04:38:24] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:39:33] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[04:39:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:40:18] *** Quits: darksun (~darksun@user/darksun) (Quit: g'night)
[04:40:21] <nedbat> SnoopJ: i had suggested adding parsing and ast to it, to have a tiny example of each phase. but it would clutter things too, depending on what people wanted to understand.
[04:42:26] <SnoopJ> As usual, deciding what to build is one of the hardest parts :)
[04:42:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:43:41] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[04:44:33] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 256 seconds)
[04:46:21] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:46:50] <bjs> nedbat: I updated the gist to include a little parser, tell me what you think
[04:48:35] <lantech19446> just saw this on linkedin and the guy made it open source, not sure if any of you would make use of it and maybe expand it. I don't have the knowledge to do it yet https://github.com/automateyournetwork/mind_nmap
[04:50:19] <nedbat> bjs: you're very fast with these things. i'm surprised you don't do aoc
[04:50:44] <nedbat> bjs: if you want to make it shorter, drop - and / , since they don't add more concepts.
[04:52:30] <SnoopJ> enumerating the potential OPERATORs might be worth doing, too, there's a little duplication between parse() and compile() ?
[04:52:39] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:53:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:53:44] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:53:49] <bjs> SnoopJ: the duplication is deliberate
[04:54:42] <SnoopJ> I'd agree with the idea of dropping the inverse operators for clarity. I do like that you abstracted it to a general binary operator, just as Python does :)
[04:55:07] <bjs> nedbat: there I simplified a bit, I should sleep, I'd be interested to see if something like this would actually help anyone understand things though
[04:55:56] <bjs> SnoopJ: the idea is to sort of look like what Python does
[04:56:22] <nedbat> bjs: that is the hard part, knowing if it clarifies things for someone
[04:58:32] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[04:59:22] <velix> Hmm, is this normal for Python? I find it pretty hard to read: `print("Color palette used in image:%s"%colorPalette)` ... I better like `%s" % colorPalette)`
[04:59:37] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[04:59:56] <velix> I know, there are f-strings and stuff right now. But that's not my code. I just wonder about the missing spaces ;)
[05:00:16] <InPhase> velix: Spaces are good.
[05:00:24] <velix> InPhase: good ;)
[05:00:30] <InPhase> velix: f-strings are even better.
[05:00:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[05:01:20] <velix> yeah, of course. but that's not my code and I don't want to rewite the whole library. I just wondered, if it's common to skip the spaces.
[05:02:50] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:99ac:998a:aa29:be27) (Quit: Client closed)
[05:02:55] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[05:03:00] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 268 seconds)
[05:03:50] <SnoopJ> it's a convention of sorts to use spaces to separate operators and operands, but it isn't mandatory. PEP 8's guidance is a pretty good survey of "common" https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements
[05:05:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[05:07:26] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:09:29] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[05:10:14] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:10:19] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[05:10:21] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 245 seconds)
[05:10:30] *** Joins: esv (~esv@74.124.178.154)
[05:11:14] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[05:11:48] <velix> okay, thanks :D
[05:11:53] *** Joins: pycurious (~Adium@user/pycurious)
[05:13:30] <pycurious> looking for an easy way to do websockets. Any suggestions? (I currently use tornado)
[05:13:51] *** Joins: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:14:01] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[05:14:07] <grym> pycurious: starlette/uvicorn, perhaps
[05:14:22] <grym> or fastAPI, which sits on top
[05:15:12] <pycurious> grym: I'm using tornado + nginx to listen to 443 - can one do fastapi for websocket on the same port?
[05:15:44] <grym> pycurious: i don't know enough to tell you one way or the other
[05:15:57] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[05:16:53] <SnoopJ> pycurious, the `websockets` library is actively maintained as far as I know, have you looked at that?
[05:17:37] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Ping timeout: 240 seconds)
[05:17:39] *** Joins: cheater (~Username@user/cheater)
[05:17:43] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[05:21:01] *** Joins: emf (~emf@2620:10d:c091:480::1:2a01)
[05:21:04] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: Lost terminal)
[05:22:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[05:22:57] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Ping timeout: 240 seconds)
[05:23:22] *** Joins: cheater (~Username@user/cheater)
[05:24:21] *** Joins: Viewday118 (~Viewday@user/viewday)
[05:25:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:25:55] *** Viewday118 is now known as Viewday11
[05:27:17] *** Quits: emf (~emf@2620:10d:c091:480::1:2a01) (Ping timeout: 240 seconds)
[05:28:05] <pycurious> SnoopJ: I think I'm more needing plumbing help - how do i make a 443 port talk to nginx -> tornado and then do websockets on top of this communication
[05:28:41] *** Quits: flokuehn (~flokuehn@87.123.247.66) (Ping timeout: 252 seconds)
[05:28:53] <grym> there appears to be tornado.websocket
[05:29:02] <grym> so perhaps just that.  i misread your desire at first
[05:30:16] <pycurious> grym: I would like to try to goto fastapi for example with tornado still running the https part of things.
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:39] *** Joins: flokuehn (~flokuehn@87.123.247.37)
[05:33:40] <grym> i think that's fine? but i don't know how to tell nginx or any equivalent tool what to do in that case
[05:33:48] <grym> i'm kind of a clod :)
[05:34:53] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:8da7:5620:b53e:f8f4) (Quit: Client closed)
[05:35:00] <SnoopJ> https://www.nginx.com/blog/websocket-nginx/ ?
[05:35:23] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c42c-abd2-59fd-dcb8.res6.spectrum.com) (Read error: Connection reset by peer)
[05:36:47] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[05:38:20] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:39:17] *** Joins: lethu (~lethu@user/lethu)
[05:40:20] *** Joins: Vision (~Vision@023-084-134-149.res.spectrum.com)
[05:41:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:41:42] *** Quits: ilmostro (~ilmostro@user/ilmostro) (Quit: WeeChat 3.3)
[05:43:05] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[05:45:11] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[05:47:31] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 250 seconds)
[05:47:35] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[05:47:55] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4842:27af:1a14:1502)
[05:47:56] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 252 seconds)
[05:49:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[05:51:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:52:52] <Guest00> Hi I would love to know if any of you know how to solve this. https://github.com/incuna/django-pgcrypto-fields/issues/135 and https://github.com/incuna/django-pgcrypto-fields/issues/135
[05:53:29] *** Quits: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:53:38] <InPhase> Guest00: If you solve the problem at the first link, I'm pretty sure it will automatically take care of the problem at the second link.
[05:54:10] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[05:54:11] <Guest00> the second link is setting it up for the first link
[05:54:19] <Guest00> I don't know how to pass stuff into {}
[05:54:20] <InPhase> Guest00: (That was a joke.  They are the same link.)
[05:54:21] *** Joins: pycurious (~Adium@user/pycurious)
[05:54:27] <Guest00> oh good one
[05:54:50] <Guest00> oh they are the same link dang
[05:55:03] <Guest00> https://github.com/incuna/django-pgcrypto-fields/commit/68565a65f03cb59033b9c1fc0978f0ce69e7359c
[05:55:10] <Guest00> There is the second link i meant
[05:55:59] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[05:56:34] <InPhase> Guest00: Now you need to distill it down to what the outstanding problem is before someone could help.
[05:56:42] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[05:56:44] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Quit: Leaving)
[05:57:21] <Guest00> from what i can tell, it seems that the lines that we care about are mainly PGP_SYM_ENCRYPT_SQL = "pgp_sym_encrypt(%s, '{}', '{}')"
[05:57:40] <Guest00> and  self.encrypt_options if self.encrypt_options else get_setting(connection, 'PUB_ENCRYPT_OPTIONS', '')
[05:57:57] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[05:58:07] <Guest00> PUB_ENCRYPT_OPTIONS I would imagine would get passed into the {} of the first one
[05:58:26] <Guest00> But the question is how does that happen
[05:59:44] <Guest00> well we are only dealing with SYM ones not PUB ones for now
[05:59:55] <InPhase> Guest00: Well I don't know the intended method, but this works:  ("pgp_sym_decrypt(%s, '{}', '{}')::%s" % ("foo", "bar")).format(2, 3)
[06:00:42] <Guest00> ok let me see in the command line I think I know what it is doing but I want to check
[06:01:01] <InPhase> .format picks up the {}, % picks up the %s
[06:01:03] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[06:01:07] <Guest00> ah yes you are right
[06:01:11] <Guest00> very cool
[06:01:16] <Guest00> you're a genius
[06:01:27] <Guest00> maybe that is all the owner of the project needs hopefully
[06:01:40] *** Joins: emf (~emf@2620:10d:c091:480::1:2e5a)
[06:02:05] <velix> meh, pillow can't draw anti-aliased, can it? Seems like I need to do it on my own now with averaging.
[06:02:19] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:02:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:02:40] *** Joins: ub (~Thunderbi@p200300ecdf0a5d68805dbf0fab6de770.dip0.t-ipconnect.de)
[06:02:48] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[06:04:02] *** Quits: ubert (~Thunderbi@p200300ecdf0a5db5805dbf0fab6de770.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:04:02] *** ub is now known as ubert
[06:05:15] *** Quits: onichomp (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8) (Read error: Connection reset by peer)
[06:05:52] *** Joins: onichomp (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8)
[06:06:05] <Guest00> Thanks inphase hopefully you just gave us the key to improving everybody's security for their django app a whole lot better
[06:06:52] <InPhase> Guest00: Well good.  I like things secure.  ;)
[06:07:17] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[06:07:17] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 256 seconds)
[06:07:26] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[06:07:48] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:07:57] *** Quits: emf (~emf@2620:10d:c091:480::1:2e5a) (Ping timeout: 240 seconds)
[06:08:11] *** Quits: horner (~horner@host86-141-1-192.range86-141.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:13] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[06:08:58] <Guest00> Yea same here. I need something like this to encrypt email addresses in my database but I still need to be able to run SQL queries that can decrypt the column
[06:08:59] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[06:08:59] *** brabrax_ is now known as brabrax
[06:09:33] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[06:10:41] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[06:11:23] *** Joins: iomari891 (~iomari891@197.210.76.160)
[06:11:37] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[06:11:44] <oli_b> SnoopJ: still here?
[06:12:10] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[06:12:38] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:12:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:13:15] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:16:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[06:17:01] <SnoopJ> oli_b, indeed I am
[06:17:17] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[06:17:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8) (Ping timeout: 256 seconds)
[06:17:41] *** Joins: nicode (~nic@2607:f2c0:9422:4500:c3a0:cf3e:273a:1698)
[06:18:03] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[06:18:05] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:18:09] <oli_b> SnoopJ: can I bother You with one quick check? I just wrote my first pygame program: it draws a recursive fractal tree as an eye candy, waits 3 seconds and draws a new one
[06:18:17] *** Joins: Auratelience (~auratelie@124.191.165.201)
[06:18:25] <oli_b> SnoopJ: pasted the code here: https://bpa.st/3AWA
[06:19:11] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[06:19:24] <oli_b> SnoopJ: this is basically a function that is able to draw one single line and then recursively call itself with slightly modified parameters, so calling the line drawing function once will end up in a colorful recursive tree
[06:20:00] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:20:06] <SnoopJ> velix, I think you can "antialias" by resampling an image using PIL.Image.LANCZOS; it used to be called PIL.Image.ANTIALIAS. I don't know how that would compare to other forms of AA though.
[06:20:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:20:23] <oli_b> SnoopJ: in the first 30 lines of the code there are 7 variable that can be finetuned to change the result of the program
[06:20:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[06:21:29] <SnoopJ> ooh, an L-system :)
[06:22:20] *** Joins: fikran (~fikran@user/fikran)
[06:22:31] <SnoopJ> oli_b, it looks very nice!
[06:23:36] *** Joins: qpdb (~qpdb@user/qpdb)
[06:24:14] <aphysically> nedbat: I got in a code battle with today AoC
[06:24:35] <aphysically> I managed to make a brute force solution an order of magnitude faster than every 'smarter' solution someone could come up with \o/
[06:25:01] <nedbat> aphysically: idk if mine was too smart, but it's about .5sec
[06:25:02] <Togra> brute forcing with code is hilarious and amazing
[06:25:30] <aphysically> nedbat: https://bpa.st/QL5A mine is reaaaaaly tricky
[06:25:38] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:39] <aphysically> it should be under 1 ms in python for the usual inputs
[06:25:56] <aphysically> but it's definitely still brute forcing (trying every vx/vy combo - just very smartly)
[06:26:33] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[06:27:17] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[06:27:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:27:40] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[06:27:55] <nedbat> aphysically: i don't understand what the heapq is for?
[06:28:22] <aphysically> I 1) find all time ranges where y overlaps bounds 2) find all time ranges where x overlaps bounds 3) sum all the points where ranges overlap
[06:28:23] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:28:44] <aphysically> 1) is done a bit tricky with a closed form solution, 2) is done naively because it's so fast it doesn't matter
[06:28:50] <aphysically> 3) is where the heapq comes in
[06:29:13] <aphysically> the condition of "x t range" overlaps "y t range" lets us do trickiness
[06:29:29] <aphysically> if I sort *all* the ranges together, I can maintain stuff in a binary heap
[06:29:41] <aphysically> and avoid looping over most of the elements, vastly reducing the complexity of the summation
[06:30:02] <aphysically> it's like an order of magnitude improvement over using a Counter() (which is an order of magnitude over naive summing)
[06:30:16] <oli_b> SnoopJ: Thanks... reminds me on the old school screen savers...
[06:30:47] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:06] <aphysically> nedbat: here's an old version where I summed with a Counter that should make it easier to tell at least what's going on https://bpa.st/L2CQ
[06:31:49] <aphysically> the condition is just the one for the t ranges to overlap, and then I've exploited that condition to construct a binary heap that allows much faster summation
[06:32:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:32:51] <oli_b> Goodnite, All!
[06:33:01] *** Parts: oli_b (~oli_b@20014C4E100CB20014FEA5DDB2CA195A.dsl.pool.telekom.hu) (WeeChat 2.8)
[06:35:46] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[06:36:03] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:36:03] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:36:03] *** finn_elija is now known as FinnElija
[06:36:04] <nedbat> aphysically: i'd like to understand, but I have to be elsewhere...
[06:37:55] <aphysically> :P
[06:37:58] <aphysically> night!
[06:37:59] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 252 seconds)
[06:37:59] *** Joins: x_kuru (xkuru@user/xkuru)
[06:38:27] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[06:39:37] *** Joins: millido (~millido@84.210.150.128)
[06:39:43] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:41:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[06:42:19] *** Quits: adeliktas (~adeliktas@i59F52741.versanet.de) (Ping timeout: 256 seconds)
[06:43:05] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[06:44:41] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[06:45:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:46:03] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[06:48:09] <Reinhilde> Can't be rejected if you have no friends 🥲
[06:50:10] *** Joins: jazzy (~jaziz@user/jaziz)
[06:51:17] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:51:54] *** Quits: jazzy (~jaziz@user/jaziz) (Client Quit)
[06:52:01] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[06:54:03] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:54:36] *** Joins: Y4kuzi (~provision@vps-22269a67.vps.ovh.net)
[06:54:43] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[06:56:42] *** Joins: buzzard (~quassel@23.19.141.101)
[06:58:55] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 268 seconds)
[07:02:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:03:06] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:05:35] *** Quits: pabogr (uid27497@id-27497.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:06:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[07:06:17] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[07:06:17] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[07:06:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:06:47] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[07:08:28] *** Quits: Y4kuzi (~provision@vps-22269a67.vps.ovh.net) (Quit: The Lounge - https://thelounge.chat)
[07:08:43] *** Quits: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:08:44] *** Joins: Y4kuzi (~provision@85.159.233.183)
[07:08:44] *** Joins: kevgao (~kevgao@user/kevgao)
[07:11:02] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Ping timeout: 240 seconds)
[07:12:08] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[07:12:47] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[07:18:17] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[07:23:56] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[07:24:39] *** Quits: Jong (~Jong@2620:10d:c090:400::5:3f74) (Read error: Connection reset by peer)
[07:25:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4842:27af:1a14:1502) (Ping timeout: 240 seconds)
[07:28:49] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ee63:f8fc:d0ef:a125)
[07:32:09] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[07:34:17] *** Joins: aniketgm (~Aniket@49.36.105.213)
[07:34:36] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[07:35:31] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:35:57] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[07:35:59] <nicode> Does anyone know of a library that can split a word into syllables for splitting it using hyphenation at the end of a line?
[07:36:00] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:26] <nicode> I found a library to estimate the number of syllables, but nothing to actually split it.
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:37:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[07:37:48] <Guest00> https://stackoverflow.com/questions/405161/detecting-syllables-in-a-word
[07:39:21] *** Joins: onichomp666 (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8)
[07:39:49] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[07:40:54] <nicode> Thanks Guest00
[07:41:18] <Guest00> you're welcome. There are a few python libraries in there plus some other programming languages
[07:41:39] <mike18_> hi anybody html knowledge here?
[07:41:57] *** Quits: onichomp (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8) (Ping timeout: 240 seconds)
[07:42:12] *** Quits: moog (~moog@107.77.244.45) (Remote host closed the connection)
[07:42:16] <Guest00> Sure most do I assume otherwise ask #html channel
[07:42:28] <nicode> mike18_: yeah, what's the question?
[07:42:51] <mike18_> i have a table with a non editable text field / div or label
[07:42:57] <mike18_> how to avoid resizing the entire row?
[07:43:03] <mike18_> i have an example here:
[07:45:53] <nicode> mike18_: you mean like a CSS min-height + max-height?
[07:46:12] *** Quits: onichomp666 (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8) (Read error: Connection reset by peer)
[07:46:27] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[07:46:50] *** Joins: onichomp666 (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8)
[07:47:42] *** Joins: ckdCreations (~ckdCreati@2607:fb90:b2e7:dd5b:9592:7533:58de:cc70)
[07:48:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:48:20] <mike18_> nicode: https://jsfiddle.net/qb39Luha/1/
[07:48:25] <mike18_> here the demo
[07:48:33] <mike18_> click the start button please to see it
[07:48:50] <aphysically> nedbat: the 30 second version is. Consider x and y separate. brute force to find every range of times t that y falls in the target area. ditto for y. Now we need to sum up every combination of overlapping time ranges. But we can do this *way* faster than naively summing over nested loops of the list: imagine sorting a big list that contains all the x t ranges that hit and all the y t-ranges that
[07:48:52] <aphysically> hit the target. If you do a sweep line algorithm over these ranges, you add up all the overlapping ranges at every integer in your sweep line. So after sorting (nlogn) it's like n or nlogn to sweep across depending on how you do it
[07:49:14] <aphysically> this is far faster than nested summing to check every pair of ranges to see if they overlap
[07:49:38] <aphysically> and means I brute force the entire n^3 or whatever nonsense search space in nlogn
[07:50:11] <aphysically> because finding the t ranges for y/x is only n
[07:50:14] <mike18_> nicode: or: https://jsfiddle.net/qb39Luha/2/
[07:50:41] <aphysically> so it's all really really REALLY fast, despite technically still being a brute force over all the possible velocities
[07:50:52] <mike18_> any idea how to add a scroll bar for the manual_run_status_text_ and dont resize the entire row in the table than?
[07:52:24] <nicode> mike18_: You should read up on CSS -> overflow-x: scroll
[07:52:35] <mike18_> thats it all?
[07:52:58] <nicode> Not to judge but probably not the best UX solution, but it'll work :)
[07:54:05] <nicode> mike18_: if the content of a div is bigger than it's max-width and you indicate overflow-x: scroll it'll just scroll the content left-right
[07:54:18] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[07:54:23] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[07:54:31] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[07:55:13] <nicode> mike18_: and the reason I say it's not good UX is that you want to keep the number of scrollbars on a page to a minimum.
[07:55:27] <nicode> aphysically: what are you brute forcing?
[07:55:44] <aphysically> https://adventofcode.com/2021/day/17 part 2
[07:55:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:b2e7:dd5b:9592:7533:58de:cc70) (Ping timeout: 240 seconds)
[07:56:47] <mike18_> nicode: i set the style but still not working: https://jsfiddle.net/qb39Luha/3/
[07:57:15] <mike18_> any idea what i did wrong?
[08:01:39] <nicode> yeah, you didn't set a max-width or max-height
[08:02:20] <nicode> the container of what you want to have scroll needs to be constrained to a given size
[08:02:36] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[08:02:40] <nicode> e.g. max-width: 100px (or whatever width you want your column to be)
[08:02:53] *** Quits: iomari891 (~iomari891@197.210.76.160) (Ping timeout: 256 seconds)
[08:04:07] *** Joins: iomari891 (~iomari891@197.210.53.158)
[08:04:51] <mike18_> i used: max-height: 50px; max-width: 200px; overflow-y: scroll;
[08:05:59] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:07:06] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:07:07] *** Joins: slipp3d (~slipp3d@216.228.47.103)
[08:07:47] <mike18_> nicode: but you said its not good?
[08:07:58] <mike18_> how you deal with it if there is tons of text in that field?
[08:08:12] <mike18_> lets say 30 lines
[08:10:55] <nicode> mike18_: I'd probably try a few things to see what feels best - maybe start with truncating after 2 lines (or whatever fits) and having a read more button that opens a modal w/ the whole 30 lines.
[08:11:22] <mike18_> what would read more do>
[08:11:23] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:11:24] <mike18_> ?
[08:11:50] <nicode> mike18_: ^^
[08:12:17] <mike18_> i mean is it another button in the table?
[08:12:21] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:12:26] <mike18_> and opens a message box?
[08:12:27] *** Quits: aniketgm (~Aniket@49.36.105.213) (Quit: leaving)
[08:12:29] <mike18_> or another view?
[08:12:42] <nicode> mike18_: a hyperlink to a modal wherere you show the full message
[08:13:05] <mike18_> popup box?
[08:13:41] <mike18_>  thats much better
[08:13:56] <nicode> https://getbootstrap.com/docs/4.0/components/modal/
[08:13:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:14:19] <mike18_> i could just show that instead of any text?
[08:15:04] <nicode> try stuff out and see what feels better, get other people's opinion of how easy it is to use.
[08:15:54] <mike18_> is the  Modal content part of the table btw?
[08:16:14] <mike18_> div id="myModal" class="modal" ... does that need to be in the table same row?
[08:16:48] <nicode> mike18_: please go try stuff, that's how you learn.
[08:16:57] *** Quits: iomari891 (~iomari891@197.210.53.158) (Ping timeout: 240 seconds)
[08:17:00] <mike18_> doing
[08:17:03] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:18:06] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:18:13] *** Quits: sreve (~quassel@p4ff44eaf.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:18:37] *** Joins: aniketgm (~Aniket@49.36.105.213)
[08:18:57] *** Joins: sreve (~quassel@p54a7049d.dip0.t-ipconnect.de)
[08:19:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[08:20:42] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:20:56] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[08:21:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ee63:f8fc:d0ef:a125) (Ping timeout: 240 seconds)
[08:22:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[08:23:01] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[08:24:25] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[08:25:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5800:8ee1:a322:7be5)
[08:28:43] *** Joins: yitz (~yitz@exercism/yitz)
[08:28:57] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[08:29:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:31:40] *** Joins: fikran (~fikran@user/fikran)
[08:31:57] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[08:34:38] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[08:35:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:35:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8)
[08:36:14] <nicode> Hah! I didn't specifically look for it but found an answer from someone in here :) https://nedbatchelder.com/code/modules/hyphenate.html
[08:36:57] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[08:36:57] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[08:38:49] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[08:39:34] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:40:28] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[08:41:29] *** Joins: iomari891 (~iomari891@197.210.76.160)
[08:43:51] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:45:07] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[08:46:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:47:34] *** Joins: pycurious (~Adium@user/pycurious)
[08:51:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[08:52:26] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[08:57:13] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:57:38] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[08:59:28] *** Quits: aniketgm (~Aniket@49.36.105.213) (Quit: leaving)
[09:01:26] *** Joins: aniketgm (~Aniket@49.36.105.213)
[09:02:33] *** Quits: aniketgm (~Aniket@49.36.105.213) (Read error: No route to host)
[09:02:51] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Ping timeout: 256 seconds)
[09:03:24] *** Joins: pycurious (~Adium@user/pycurious)
[09:04:07] *** Joins: aniketgm (~Aniket@49.36.105.213)
[09:05:06] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:05:08] *** Quits: aniketgm (~Aniket@49.36.105.213) (Client Quit)
[09:06:46] *** Quits: Auratelience (~auratelie@124.191.165.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[09:09:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[09:10:03] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[09:10:46] *** Quits: zepolen (~zepolen@ppp-94-66-223-207.home.otenet.gr) (Ping timeout: 245 seconds)
[09:12:12] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[09:12:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:17:15] *** Joins: jayray (~jayray@user/jayray)
[09:18:12] *** Quits: onichomp666 (~onichomp@2806:264:4404:8056:69b7:4fb8:e9de:6da8) (Ping timeout: 240 seconds)
[09:24:26] *** Joins: zepolen (~zepolen@ppp-94-66-223-207.home.otenet.gr)
[09:24:30] *** Joins: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:25:00] *** Joins: Viewday113 (~Viewday@user/viewday)
[09:25:37] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:25:37] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[09:26:33] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:26:33] *** Viewday113 is now known as Viewday11
[09:27:35] *** Joins: analoq (~yashi@user/dies)
[09:28:57] <SnoopJ> bjs, nedbat I might be getting carried away: https://imgur.com/a/EJp8ECQ
[09:29:10] *** Quits: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[09:29:21] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:29:29] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[09:29:33] *** Quits: ATAD (~ATAD@user/atad) (Remote host closed the connection)
[09:30:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[09:30:29] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[09:30:41] *** Joins: ATAD (~ATAD@user/atad)
[09:31:02] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:31:28] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5800:8ee1:a322:7be5) (Quit: Leaving)
[09:32:38] <SnoopJ> I tried to limit the number of changes I made to the existing code to make it steppable: https://gist.github.com/SnoopJeDi/c61239a418c2382205d5320f0fe05dac
[09:32:48] <nicode> SnoopJ: cool stuff
[09:33:16] <SnoopJ> The TextInput thingy is definitely more complicated than I strictly needed for a proof of concept, I just happened to find one that was IME-compatible and thought that was neat
[09:33:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:34:43] *** Joins: Samian (~s@user/samian)
[09:36:29] *** Joins: pycurious (~Adium@user/pycurious)
[09:36:41] *** Quits: sfields (~sfields@2605:a601:adea:7a00:4c78:85c4:4fc6:ab53) (Read error: Connection reset by peer)
[09:40:10] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:2c87:a93a:77a4:2952)
[09:40:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[09:48:30] *** Joins: nicko (~iClass@222.211.28.110)
[09:49:16] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:49:47] *** Joins: parv (~quass@user/parv)
[09:50:22] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[09:51:57] *** Joins: djapo (~archangel@user/djapo)
[09:52:25] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:56:13] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[09:57:21] *** Quits: Samian (~s@user/samian) (Ping timeout: 256 seconds)
[09:57:30] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[09:59:08] *** Joins: pycurious (~Adium@user/pycurious)
[10:03:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[10:06:25] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:07:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:07:38] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Client Quit)
[10:07:53] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:09:49] *** Quits: iomari891 (~iomari891@197.210.76.160) (Ping timeout: 256 seconds)
[10:10:50] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[10:11:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[10:12:39] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:13:13] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:14:14] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:14:41] <cluelessperson> I have a question.   I'm capable of making python interact with a database.  I'm capable of making a web / api thing through flask, maybe django
[10:14:55] <cluelessperson> but I don't know how to manage tasks based on that database
[10:15:31] <cluelessperson> So the question is.  How?   How can I effectively observe.  "oh hey, I need to run a handful of operations" ?
[10:16:07] *** Quits: slipp3d (~slipp3d@216.228.47.103) (Remote host closed the connection)
[10:16:34] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[10:18:53] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:20:00] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:22:16] <parv> cluelessperson, Could you possibly rephrase? Is it that you would want to know/learn how to use interact with database when something happens on a webpage?
[10:22:33] *** Joins: onichomp (~onichomp@2806:264:4404:8056:dc2f:189:62d5:17df)
[10:22:51] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[10:23:19] *** Quits: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[10:24:00] *** Joins: slipp3d (~slipp3d@216.228.47.103)
[10:24:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[10:24:53] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[10:25:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9cf7:81e1:27ea:9c34:dfc6) (Ping timeout: 240 seconds)
[10:25:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:25:48] <cluelessperson> parv, I suppose I'm asking how to have an application observe the database and act on changes, queue and handle things that need to be done.
[10:26:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[10:26:47] *** Joins: onichomp666 (~onichomp@2806:264:4404:8056:985:15f7:f77e:3f69)
[10:28:07] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:3b55:7c2e:5164:be06)
[10:28:25] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[10:30:26] *** Quits: onichomp (~onichomp@2806:264:4404:8056:dc2f:189:62d5:17df) (Ping timeout: 268 seconds)
[10:30:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:30:42] *** Quits: OPK (~OPK@user/opk) (Remote host closed the connection)
[10:31:54] <parv> One example model: - a database table with things to be done, say email a file to an address, another table with address where file has been sent (with expiry on a row); some application checks if there are any address in first table; if yes, the email file; move that address+file to the second table
[10:32:00] *** Joins: fikran (~fikran@user/fikran)
[10:33:01] <parv>  ... that application could be either kicked off via cron; or, when a request comes, that kicks the application
[10:34:48] *** Joins: pycurious (~Adium@user/pycurious)
[10:36:39] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[10:36:43] *** Joins: falk689_ (~falk689-q@gateway/tor-sasl/falk689)
[10:37:37] <parv> Instead of a database, could use queue software, eg https://www.rabbitmq.com/getstarted.html
[10:38:27] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[10:39:43] <parv> ... have not used any queues myself
[10:39:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[10:40:12] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[10:42:03] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:42:12] *** Quits: onichomp666 (~onichomp@2806:264:4404:8056:985:15f7:f77e:3f69) (Ping timeout: 240 seconds)
[10:43:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:43:58] *** Joins: onichomp (~onichomp@177.231.43.15)
[10:44:58] <Affliction> Yeah, seems like a message queue would be a better tool, but if you have to use a database, as far as I know, you have to poll periodically.
[10:46:05] *** Quits: buzzard (~quassel@23.19.141.101) (Ping timeout: 256 seconds)
[10:46:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[10:47:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[10:47:14] *** Quits: greentree (~greentree@pool-74-101-99-157.nycmny.fios.verizon.net) (Quit: greentree)
[10:47:57] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Ping timeout: 240 seconds)
[10:49:53] *** Joins: Maikel (~Maikel@130.61.63.136)
[10:52:39] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[10:52:45] *** Joins: upsala (~zcb@185.209.196.169)
[10:54:31] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[10:55:28] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:56:19] *** Joins: seednode (~seednode@user/seednode)
[10:56:35] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:57:03] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[10:58:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:58:55] <stewie925> I have this python problem that says get the product of the last k elements of a list
[11:00:05] <dodo> stewie925: cool
[11:00:23] <stewie925> I know I could do a reverse of the whole list by doing ` for i in range(len(list), -1) `
[11:00:33] *** Quits: nicko (~iClass@222.211.28.110) (Quit: Konversation terminated!)
[11:01:08] <stewie925> but how do I tell it to just reverse loop through the 2nd last element?
[11:01:16] *** Quits: gdd1 (~gdd@129.199.146.230) (Ping timeout: 268 seconds)
[11:02:11] <dodo> stewie925: python lists can be sliced
[11:02:28] <dodo> no need to reverse
[11:02:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:03:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[11:03:12] <stewie925> the problem says to do o(1) linear
[11:03:37] <skipper> O(1) is constant O(n) is linear
[11:04:17] <skipper> You can just slice from the kth element and multiplythem?
[11:04:21] <stewie925> Keep all prefix products of numbers in an array, then calculate the product of last K elements in O(1) complexity.
[11:05:12] <stewie925> so I was wrong in saying linear:) . but yeah it says o(1) complexity
[11:06:16] <dodo> i'd do it O(n) first, and optimize later
[11:07:18] <stewie925> I tried a trick to just do list.reverse() and iterate to get the product of the n elements , then do a list.reverse() again -  and  I get time limit exceeded
[11:07:30] <dodo> oh wait, O(1) for constant k? or what..
[11:07:48] <dodo> stewie925: why a second reverse?
[11:07:53] <dodo> show some code please
[11:08:32] <stewie925> dodo: https://bpa.st/C52A. -
[11:08:35] <Affliction> stewie925: look into the slicing notation, you'll find it quite useful here
[11:08:54] <stewie925> I am trying to solve this problem - https://leetcode.com/problems/product-of-the-last-k-numbers/
[11:09:09] <dodo> see also https://docs.python.org/3/tutorial/introduction.html#lists and https://docs.python.org/3/reference/expressions.html?highlight=slicing#slicings
[11:09:12] <stewie925> I think its easy, I just need to make it more efficient to avoid time limit exceeded
[11:09:52] <stewie925> yeah I know forward slicing, will need to work on the backward slicing then, I guess
[11:10:04] <stewie925> thank you dodo
[11:10:08] <dodo> that code seems to do more than the question asked for
[11:10:27] <Affliction> I'll just say it: a[k:]
[11:10:34] <rindolf> stewie925: lst[-k:]
[11:10:36] <stewie925> dodo - cause it is for this leetcode problem :D https://leetcode.com/problems/product-of-the-last-k-numbers/
[11:11:02] <Affliction> oh, yeah, use rindolf's
[11:11:18] <stewie925> hey thanks Affliction, and rindolf
[11:11:28] <stewie925> I will try that
[11:11:32] <Affliction> (remember to validate answers you get over the internet :))
[11:11:35] * dodo passes [] into stewie925's getProduct
[11:11:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[11:11:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[11:12:06] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:12:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:12:43] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:14:34] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[11:15:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[11:15:24] <stewie925> hey dodo
[11:15:36] <rindolf> Affliction: i can get used to being used [sketchy]: https://www.youtube.com/watch?v=5BROilhxod8 ;)
[11:16:14] <Affliction> heh
[11:16:39] *** Joins: sudomann (~sudomann@98.219.211.182)
[11:18:49] *** Joins: kosh (~kosh@user/kosh)
[11:20:34] *** Joins: pycurious (~Adium@user/pycurious)
[11:20:35] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:21:14] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[11:22:11] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[11:22:29] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[11:22:42] *** Joins: cYmen (~simon@squint.a-oben.org)
[11:23:27] <cYmen> Where can I find the functions that work on a file object?
[11:23:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[11:23:48] <cYmen> When I search in the docs for file object I seem to only get a glossary entry.
[11:24:48] *** Joins: manti7 (~manti7@176.10.104.94)
[11:25:08] <rindolf> cYmen: https://www.geeksforgeeks.org/python-dir-function/
[11:25:09] *** Joins: Viewday110 (~Viewday@user/viewday)
[11:26:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:26:11] *** Viewday110 is now known as Viewday11
[11:26:13] <KirkMcDonald> cYmen: The io module: https://docs.python.org/3/library/io.html
[11:26:17] <cYmen> rindolf: okay, maybe I was not clear enough, I am looking for documentation. :)
[11:27:27] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[11:27:49] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Ping timeout: 240 seconds)
[11:27:59] <cYmen> KirkMcDonald: thanks, I am not sure why this is so hard to find
[11:28:17] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[11:28:39] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Excess Flood)
[11:28:40] *** Joins: jay-m126 (~jay-m@129.0.204.210)
[11:28:48] <KirkMcDonald> cYmen: There's also the documentation for the open() builtin: https://docs.python.org/3/library/functions.html#open
[11:29:15] <skipper> cYmen: most of the time you can also make use of interpreter example help(open) give you documentation
[11:29:18] <cYmen> Yes, I was there
[11:29:27] <cYmen> Then I clicked on "file object" and landed myself in the glossary.
[11:29:34] <KirkMcDonald> cYmen: There are links to the io module buried in there.
[11:30:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:30:44] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[11:31:17] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Ping timeout: 240 seconds)
[11:31:17] *** Quits: slipp3d (~slipp3d@216.228.47.103) (Ping timeout: 240 seconds)
[11:33:10] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:33:16] <parv> Could someone explain the use of os._exit() in except block: (search for "__main__") https://www.rabbitmq.com/tutorials/tutorial-one-python.html ?
[11:33:28] *** Joins: sudomann (~sudomann@98.219.211.182)
[11:33:51] <parv> ... point is to exit with 0 code?
[11:33:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:34:03] <KirkMcDonald> parv: That's... really odd code.
[11:34:15] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[11:34:28] <KirkMcDonald> sys.exit just raises SystemExit. That's the thing that it does. So it's really odd to call it just to catch that exception.
[11:34:48] *** Joins: ano (~ano@user/ano)
[11:34:49] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:24] <KirkMcDonald> It is not clear to me why this code would use os._exit(0).
[11:35:47] <KirkMcDonald> That function is for pretty narrow purposes.
[11:36:05] <parv> Hey, there is disclaimer later "Please keep in mind that this and other tutorials are, well, tutorials" so 🤷‍
[11:37:13] <KirkMcDonald> Just at a glance, I don't see why os._exit() would apply.
[11:38:16] <KirkMcDonald> (It is almost exclusively for exiting from a child process after calling os.fork().)
[11:38:39] <KirkMcDonald> (Or other unusual circumstances where you just want to shoot the process dead.)
[11:38:41] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[11:39:35] <KirkMcDonald> (As a general rule, if you are doing shenanigans related to processes themselves, you don't need os._exit().)
[11:39:38] <KirkMcDonald> aren't*
[11:40:14] <parv> In case anyone else want to see in doc: https://docs.python.org/3/library/os.html?highlight=os._exit#os._exit
[11:40:26] <parv> KirkMcDonald, Thanks for your time
[11:40:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[11:44:06] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[11:44:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4dcb:8b07:71c2:cbc8) (Quit: Client closed)
[11:45:13] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:45:59] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Ping timeout: 252 seconds)
[11:48:09] *** Quits: c4017w (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:48:59] *** Joins: pycurious (~Adium@user/pycurious)
[11:49:54] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[11:52:08] *** Joins: jmd (~user@de.cellform.com)
[11:52:13] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:52:19] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:52:23] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[11:52:36] *** Joins: jmd (~user@de.cellform.com)
[11:52:53] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[11:52:57] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[11:55:51] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:56:08] *** Joins: jmd (~user@de.cellform.com)
[11:57:32] *** Joins: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de)
[11:58:11] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:58:28] *** Joins: jmd (~user@de.cellform.com)
[11:59:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:59:36] *** Joins: jmd (~user@de.cellform.com)
[12:00:38] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[12:01:11] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:01:39] *** Joins: delvian (~delvian@41.13.250.169)
[12:03:25] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Ping timeout: 263 seconds)
[12:03:41] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.73)
[12:04:20] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:05:33] *** Quits: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:06:26] *** Joins: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de)
[12:06:53] *** Joins: pycurious (~Adium@user/pycurious)
[12:09:17] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Ping timeout: 240 seconds)
[12:10:04] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[12:11:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:11:39] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[12:12:03] *** Quits: delvian (~delvian@41.13.250.169) (Read error: Connection reset by peer)
[12:14:01] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Read error: Connection reset by peer)
[12:14:26] *** Joins: delvian (~delvian@41.13.250.169)
[12:15:24] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[12:16:14] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:18:11] *** jazzy2 is now known as JingleJazzy
[12:19:07] *** Joins: rendar (~rendar@user/rendar)
[12:19:08] *** Joins: tobybl (~tobybl@213.31.132.151)
[12:20:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[12:24:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[12:25:07] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[12:25:26] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[12:25:42] *** Parts: lxwulf (~lxwulf@user/lxwulf) ()
[12:26:57] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[12:28:58] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[12:29:48] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:30:02] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Quit: Read error: Connection reset by beer)
[12:32:01] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Ping timeout: 245 seconds)
[12:32:35] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:32:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[12:33:01] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[12:33:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[12:34:18] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 260 seconds)
[12:35:37] *** Quits: jay-m126 (~jay-m@129.0.204.210) (Ping timeout: 268 seconds)
[12:36:17] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[12:38:11] *** Joins: pycurious (~Adium@user/pycurious)
[12:38:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:39:17] *** Quits: mat001 (~mat001@c-69-181-157-203.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:39:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[12:40:54] *** Joins: palasso (~palasso@user/palasso)
[12:41:20] *** Joins: fikran (~fikran@user/fikran)
[12:42:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[12:43:03] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:44:46] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[12:45:40] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:49:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:27] *** Joins: sudomann (~sudomann@98.219.211.182)
[12:53:21] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[12:54:17] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[12:54:43] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Quit: Ping timeout (120 seconds))
[12:54:54] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[12:55:01] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[12:55:19] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[12:56:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[12:57:01] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[12:57:17] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[12:58:34] *** Joins: cyphase (~cyphase@user/cyphase)
[12:58:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[13:00:15] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:00:47] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:02:02] *** Joins: LimeOn (~user@user/limeon)
[13:05:13] *** Quits: pilyn (~pilyn@user/pilyn) (Remote host closed the connection)
[13:07:52] *** Joins: iomari891 (~iomari891@197.210.52.58)
[13:08:48] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Quit: Leaving)
[13:09:48] *** Joins: pycurious (~Adium@user/pycurious)
[13:10:37] *** Quits: andi_ (~andi@user/andi/x-3467420) (Quit: WeeChat 3.2)
[13:14:18] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:14:27] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[13:14:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[13:17:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[13:17:45] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[13:17:56] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:18:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[13:19:14] *** Joins: Colt (~Colt@user/colt)
[13:21:32] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 240 seconds)
[13:21:41] *** Quits: slackcals (~slackcals@user/slackcals) (Read error: Connection reset by peer)
[13:23:27] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:23:56] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:24:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:24:14] *** Joins: Viewday112 (~Viewday@user/viewday)
[13:24:40] *** Joins: rdg (~rdg@user/rdg)
[13:24:42] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:24:56] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:25:08] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:25:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:25:48] *** Viewday112 is now known as Viewday11
[13:27:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:28:58] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:31:20] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:37:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:37:21] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:38:06] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:38:55] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[13:40:22] *** Quits: iomari891 (~iomari891@197.210.52.58) (Ping timeout: 268 seconds)
[13:40:54] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[13:41:19] *** Joins: pycurious (~Adium@user/pycurious)
[13:42:06] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[13:42:28] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:42:46] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[13:42:56] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:43:15] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Remote host closed the connection)
[13:44:19] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:45:22] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:45:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:45:40] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:45:43] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:46:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[13:47:12] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:47:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:48:15] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[13:48:29] *** Lord_of_Life_ is now known as Lord_of_Life
[13:50:19] *** Joins: guardian (~guardian@planet-d.net)
[13:51:03] *** Quits: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:52:52] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[13:59:18] *** Joins: slav0nic (slav0nic@python.su)
[14:01:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:03:02] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:10:06] *** Quits: onichomp (~onichomp@177.231.43.15) (Read error: Connection reset by peer)
[14:10:26] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Ping timeout: 260 seconds)
[14:11:03] *** Joins: jmd (~user@de.cellform.com)
[14:11:55] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[14:12:03] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[14:12:39] <mickey8> i cant find a solution on google, so trying my luck although it's not purely a python question. i'm trying to plot a graph with matplotlib. i need to draw 2 lines there of a time series. the thing is, one line is drawing fine, but the other starts from the beginning of the x-axis while i need it to start from the middle (or "stick to the right" if
[14:12:39] <mickey8> you will)
[14:15:18] <mickey8> uhm seems like using plot(x[100:], ...) makes it start from interval 100. weird :z
[14:15:43] *** Joins: ice9 (~ice9@user/ice9)
[14:17:07] <bluss> mickey8: so it seems you just need to make sure the x/y values match what you want to draw, does it work now?
[14:17:29] <mickey8> seems like it, at least for now :)
[14:17:39] *** Joins: pycurious (~Adium@user/pycurious)
[14:18:45] *** Joins: rito_ (~rito_gh@45.112.243.172)
[14:20:37] <petaflot> hello! I have this code that was working quite nicely using threads, reading values from a file and writing logs to another. but now I need too use asyncpg for logging and reading the values, so I changed my code to use asyncio.create_task() instead of threading.Thread()... everything is broken because of blockig IOs! (reading from stdin and waiting for GPIOs). does anyone have a suggestion?
[14:22:00] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[14:24:44] *** Joins: Socra (~Socra@206.217.216.27)
[14:25:25] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[14:25:50] *** Quits: rito_ (~rito_gh@45.112.243.172) (Quit: Leaving)
[14:25:52] *** Joins: mokulus (~mokulus@user/mokulus)
[14:27:08] *** Joins: Auron (~Auron956@user/auron)
[14:27:39] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[14:27:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:29:44] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[14:30:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:33:13] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Quit: Leaving)
[14:33:26] <Affliction> I'm not familiar with asyncio, but does it provide a method to asynchronusly read from an fd?
[14:34:14] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[14:35:07] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[14:35:26] <Affliction> If not, you could perhaps have a thread do blocking I/O outside of asyncio's event loop
[14:37:51] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[14:38:02] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[14:38:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[14:38:38] *** Joins: Auratelience (~auratelie@120.147.212.29)
[14:39:58] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[14:42:15] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[14:42:36] <joel135> hi i am running some computations in a jupyter notebook
[14:42:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:43:02] <joel135> i am stumbling on a performance bottleneck for a thing i want to try implementing
[14:43:05] *** Quits: Auratelience (~auratelie@120.147.212.29) (Quit: Textual IRC Client: www.textualapp.com)
[14:43:31] <joel135> do you think it would be possible to mix python and c++ cells in the notebook somehow, to improve performance in those critical parts?
[14:44:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:45:39] <Affliction> If it's number crunching, you could probably benefit from numpy
[14:45:52] <Affliction> Otherwise, you could write a C module with the perf critical functions
[14:46:56] *** Joins: luigibu1 (~luigibu@80.30.200.2)
[14:47:44] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[14:48:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:48:52] <joel135> i am already using numpy but this is some slightly too tricky for-loop business that would be very inelegant in numpy
[14:49:22] <joel135> i was hoping i could write a module like that inside my current notebook
[14:49:36] <petaflot> Affliction: thanks.. that's what I started doing. I'll to do some refactoring though...
[14:50:41] *** Joins: fikran (~fikran@user/fikran)
[14:50:47] <jinsun> I don't think you can write c++ in jupyter (especally if you want to mix it with python cells), but writing cython seems to be possible https://cython.readthedocs.io/en/latest/src/quickstart/build.html#using-the-jupyter-notebook
[14:50:49] *** Quits: nomic (~nomic@85.203.34.35) (Quit: Leaving)
[14:51:08] *** Joins: nomic (~nomic@85.203.34.35)
[14:51:17] *** Quits: luigibu1 (~luigibu@80.30.200.2) (Ping timeout: 240 seconds)
[14:51:50] <joel135> good idea. that seems similar to this approach by the way https://ipython-books.github.io/58-writing-massively-parallel-code-for-nvidia-graphics-cards-gpus-with-cuda/
[14:52:42] <joel135> cython would be roughly as fast as c++ unless i do something stupid right?
[14:53:04] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[14:54:41] *** Joins: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de)
[14:54:51] <jinsun> depends on how you write it, if you just try to compile unannotated python function and use complicated python classes, then it won't be much faster than python
[14:54:57] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[14:55:16] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Quit: WeeChat 3.3)
[14:55:47] <jinsun> but if yu use cdefs and annotate every variable and stick to simple numeric types (including numpy arrays) then it should give good speed up, close to C/C++ levels
[14:57:19] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[14:57:33] <jinsun> if you have a nvidia GPU then trying cuda is also good idea, but that is even harder to get right
[14:57:56] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:58:00] <joel135> thanks for the tips
[14:59:09] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[15:00:57] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Ping timeout: 240 seconds)
[15:01:09] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[15:04:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[15:04:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:05:42] *** Quits: greedom (~greedom@p200300de673cbf0048efee1d737dc49e.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:06:33] <jinsun> joel135: another thing to try, which is much easier than cython or cuda is numba https://numba.pydata.org/, you get speed up while writing normal python code with just a decorator, I would try this first and go for the complicated appoaches only if it is still not fast enough
[15:06:40] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[15:06:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:07:11] <joel135> actually my link uses numba :)
[15:07:27] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:07:45] *** Joins: cdown (~cdown@163.114.131.1)
[15:08:20] <jinsun> ah I noticed the cuda part and not numba part, so yeah start with numba
[15:09:21] <joel135> thanks
[15:10:39] *** Joins: Reffter (~Reffter@2001:818:dea5:2b00:68ed:af79:e810:20f5)
[15:14:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:15:02] *** Parts: Reffter (~Reffter@2001:818:dea5:2b00:68ed:af79:e810:20f5) ()
[15:15:38] *** Joins: Klinda (~superleag@user/klinda)
[15:17:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:18:30] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:22:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[15:23:10] *** Joins: wilk (~wilk@user/wilk)
[15:23:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:25:26] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 252 seconds)
[15:26:50] <jmd> I have an integer, which has (unfortunately) been given to me as a string.  I need to zero-pad that integer so that it's no less than 5 digits wide (like "00002").  What's the most elegent way to do this?
[15:27:19] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[15:27:40] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[15:27:56] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[15:28:25] <ali1234> "{:05d}".format(int("123"))
[15:30:27] <joel135> unfortunately this gives the wrong number of digits if there is a minus sign
[15:30:46] <jmd> That's ok.  These are non-negative integers.
[15:31:06] <joel135> ok
[15:31:16] <ali1234> yes - seems to count as a digit
[15:31:29] <grawity> if it's always a non-negative integer
[15:31:35] <grawity> "123".rjust(5, "0")
[15:31:46] <grawity> just treat it as a string
[15:33:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[15:34:34] <jmd> Hmm.  Now I'm confused. It seems not to be a string after all.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:15] *** Joins: plastico (~plastico@neomutt/plastico)
[15:38:17] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[15:38:31] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:38:32] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[15:38:37] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Ping timeout: 240 seconds)
[15:40:37] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[15:41:20] *** Joins: water_27300935_ (~xe@182.90.128.165)
[15:45:12] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:45:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[15:46:05] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:46:58] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[15:48:52] <water_27300935_> Can I store object as numpy.array's element? likes a list store as dictionary value?
[15:49:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:49:43] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:49:48] <joel135> dtype can be object, yes
[15:50:23] <joel135> https://pastebin.com/raw/45QRhaTQ
[15:51:22] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[15:51:26] *** Joins: gitly (~gitly@185.69.144.157)
[15:51:36] *** Joins: xardas (~xardas@149.233.51.127)
[15:52:27] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:53:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[15:53:14] *** Quits: gitly2 (~gitly@85.255.236.137) (Ping timeout: 256 seconds)
[15:54:24] *** Joins: pepper (~pepper@user/pepper)
[15:54:51] *** Quits: Strom (strom@fedora/strom) ()
[15:56:56] *** Joins: Strom (strom@fedora/strom)
[15:57:00] <water_27300935_> :)
[15:57:29] *** Parts: xardas (~xardas@149.233.51.127) ()
[16:01:29] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Read error: Connection reset by peer)
[16:02:21] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:02:31] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:02:39] *** Joins: spiri__ (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:03:47] *** Joins: Hackerpcs (~user@user/hackerpcs)
[16:03:53] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:04:15] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[16:05:04] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Quit: IRC Client)
[16:05:32] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[16:06:47] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[16:07:06] *** Joins: tejr (~tejr@user/tejr)
[16:09:02] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[16:10:25] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[16:13:11] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:14:34] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[16:14:37] <moha> Hi
[16:14:46] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[16:14:47] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[16:15:24] <rindolf> moha: hey
[16:15:46] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:16:04] <moha> I can not break the for-loop : https://p.teknik.io/b2I2w if the find a correct value for the second if-condition, returns to while again!
[16:16:16] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:16:17] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[16:17:00] *** Quits: supay (adas@adas.shelltalk.net) (Ping timeout: 268 seconds)
[16:17:17] <moha> I want to exit the code when it find the lower value
[16:18:27] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:18:44] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:18:49] *** Joins: mickey8 (~user@user/mickey)
[16:19:08] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:19:47] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[16:20:25] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:21:17] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[16:21:30] *** Joins: KvL (KvL@gateway/vpn/protonvpn/kvl)
[16:21:53] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:22:58] <millido> moha: You could create e flag outside that for-loop, an set it to true if the condition is true, and have a check outside that for-loop on wether the flag is set
[16:23:56] <millido> or put the whole thing inside a function and use a return to break
[16:24:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:25:17] *** Joins: naranja (~orange@user/orangeboxcutter)
[16:25:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:26:17] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[16:26:52] *** Joins: asa22 (~asa22@84.125.126.158.dyn.user.ono.com)
[16:27:08] <asa22> how do I import a .js script to a html page that my flask app serves
[16:27:19] <asa22> using the html script tag doesnt work
[16:27:24] <asa22> its a local file
[16:27:32] *** Joins: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:28:05] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:28:08] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[16:28:24] <moha> millido: Worked; Thank you
[16:28:25] *** Quits: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[16:28:35] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:29:17] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[16:30:28] *** Quits: asa22 (~asa22@84.125.126.158.dyn.user.ono.com) (Client Quit)
[16:31:49] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[16:32:11] *** Parts: water_27300935_ (~xe@182.90.128.165) (WeeChat 3.3)
[16:35:26] *** Joins: slackcals (~slackcals@user/slackcals)
[16:38:02] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[16:38:29] *** Joins: mat001 (~mat001@c-69-181-156-140.hsd1.ca.comcast.net)
[16:41:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:41:24] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:41:58] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Client Quit)
[16:42:04] *** Joins: cheater (~Username@user/cheater)
[16:44:01] *** Joins: toastloop (toastloop@user/toastloop)
[16:46:54] *** Joins: kosh (~kosh@user/kosh)
[16:48:34] *** Quits: KvL (KvL@gateway/vpn/protonvpn/kvl) (Quit: KvL)
[16:48:39] *** Joins: darksun (~darksun@user/darksun)
[16:52:56] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[16:54:10] *** falk689_ is now known as falk689
[16:56:59] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[16:57:22] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[16:58:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[16:58:36] *** icyphox is now known as icy
[16:58:41] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[17:00:00] *** Joins: fikran (~fikran@user/fikran)
[17:01:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:01:12] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[17:01:48] *** Joins: ice9 (~ice9@user/ice9)
[17:01:54] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[17:02:18] *** Joins: ice9 (~ice9@user/ice9)
[17:05:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:09:10] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:f513:8ec2:c177:cae8)
[17:12:24] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:12:34] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[17:13:56] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:15:06] <petaflot> hey! I thought I could do `import logging ; class MetaLog(logging.getLogger): pass` but I get TypeError: function() argument 'code' must be code, not str. I aim to re-use the logger class to get it to log normally to a file, and also to postgres (depending on the message type)
[17:15:58] *** Joins: Warped (~Warped@user/warped)
[17:21:06] <nedbat> petaflot: getLogger is a function, not a class, so it can't be a base class
[17:21:26] <nedbat> petaflot: this sounds like something you'd do by implementing a handler, and setting the handler in the logger
[17:22:20] <petaflot> nedbat: thanks
[17:22:36] <petaflot> not sure I understood everything though ;-)
[17:22:47] <petaflot> I will read...
[17:24:00] <nedbat> petaflot: logging is very configurable.  You probably don't have to write any code.
[17:24:27] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[17:25:11] *** Joins: Viewday115 (~Viewday@user/viewday)
[17:26:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:26:44] *** Viewday115 is now known as Viewday11
[17:29:46] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:29:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[17:32:02] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Ping timeout: 260 seconds)
[17:33:17] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[17:34:09] *** henistein is now known as spider_pilas_69
[17:34:22] <petaflot> like... just talking to my computer will make it magically work? this is sooo cool!
[17:34:45] *** spider_pilas_69 is now known as henistein
[17:34:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:35:42] <petaflot> actually I think I'll just make some sort of wrapper around it... mostly because asyncpg is well... async
[17:36:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[17:36:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:37:18] *** Joins: andi_ (~andi@user/andi/x-3467420)
[17:38:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:40:33] <jmd> I have written a new class extended an existing class.  However when I come to use that class, python insists it doesn't exist: "Unknown component name: CustomFileUpload"  What have I forgotten to do?
[17:40:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:40:51] <nedbat> jmd: "component name"?  How are you using it?
[17:41:28] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[17:42:33] <jmd> I'm just calling its constructor, like: steps.CustomFileUpload(...
[17:42:47] <jmd> (this is part of a buildbot config)
[17:43:36] *** Joins: Deknos (~someone@user/menace)
[17:44:11] *** henistein is now known as nuno_garcia
[17:44:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[17:44:57] *** Joins: Klinda (~superleag@user/klinda)
[17:45:02] *** nuno_garcia is now known as simao_barrico
[17:45:31] <nedbat> jmd: ok, buildbot was the thing I was looking for.  I don't know how buildbot finds components.
[17:46:02] *** simao_barrico is now known as henistein
[17:47:26] *** Joins: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt)
[17:49:37] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:49:56] <xheimlich> what's the dunder method name governing what happens when someone does myobj["access like this"]?
[17:50:42] <jmd> nedbat: Okay, thanks for trying anyway (I'm having to learn both buildbot and python concurrently)
[17:51:57] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[17:53:03] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[17:53:49] <xheimlich> also, when overriding a method from an inherited class, caaaan I change the type of an argument (I know this sounds bad)
[17:54:12] *** Quits: nomic (~nomic@85.203.34.35) (Remote host closed the connection)
[17:55:28] <xheimlich> One class is like "CorrelationNetwork", with a "compute_network" method that receives a dataframe. But then I have a CorrelationMultiNetwork that receives a list of Datasets which is a custom class. Has some stuff attached, but imagine it's just that each dataset now has a name.
[17:56:08] <xheimlich> but: when used from the outside (after computation) a CorrelationMultiNetwork behaves just the same, because the graphs have been merged.
[17:57:17] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[17:57:42] <xheimlich> it has the additional behavior that we can retrieve the individual graphs etc. but that's transparent to someone who doesn't know what a CorrelationMultiNetwork is. That's Liskov, right?
[18:02:20] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:02:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:03:06] <nedbat> xheimlich: x[v] is x.__getitem__(v)
[18:03:47] <nedbat> xheimlich: a method in a child can do whatever it wants. Python is very malleable (much to the dismay of static-type-thinkers)
[18:04:51] <xheimlich> I mean, it's not Liskov at compute time, but someone who doesn't know what a CorrelationMultiNetwork shouldn't go around fitting one -- there's some brain-stressing concepts behind it. When one is fitted and presented to the user, it is indistinguishable from a CorrelationNetwork.
[18:05:53] <xheimlich> I could adopt a custom data type for the CorrelationNetwork dataset input rather than just accept pandas dataframes, but that would needlessly complicate the interface for basic usage and break code that other people have written against it.
[18:07:22] *** Quits: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt) (Remote host closed the connection)
[18:08:23] <xheimlich> I could also just copy and paste lots of code and have independent classes. But I feel like I'll continue to add functionality to CorrelationNetwork.
[18:08:54] <xheimlich> OO is handy, but filled with dilemmas.
[18:09:40] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:11:06] *** Joins: SteveR (~SteveR@103.215.168.1)
[18:13:49] *** Joins: cheater (~Username@user/cheater)
[18:15:16] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[18:16:58] *** Joins: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt)
[18:17:29] *** Joins: jug (~jug@user/jug)
[18:18:05] *** Quits: aeadio (~aead@user/aead) (Read error: Connection reset by peer)
[18:18:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:18:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:18:54] *** Joins: aead (~aead@user/aead)
[18:19:15] *** Quits: userHeni (~userHeni@bl19-204-103.dsl.telepac.pt) (Remote host closed the connection)
[18:20:02] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[18:20:34] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:21:26] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:23:37] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:23:51] *** Joins: zebrag (~chris@user/zebrag)
[18:24:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:24:56] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:04] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:26:31] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[18:27:11] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[18:27:24] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:27:57] <leitz> Is there a cleaner way to test against the type of something than:     if type(a).__name__ == "list":
[18:30:12] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:31:16] *** Joins: davor_ (~davor@user/davor)
[18:31:21] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:31:48] <jinsun> leitz: isinstance(a, list)
[18:32:09] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[18:32:36] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b966-c1ca-e4da-0762.res6.spectrum.com)
[18:32:50] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[18:33:05] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:24] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[18:33:32] *** Quits: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8) (Ping timeout: 240 seconds)
[18:33:48] <leitz> jinsun, thanks!
[18:34:05] *** Quits: davor (~davor@user/davor) (Ping timeout: 250 seconds)
[18:34:10] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[18:34:19] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Remote host closed the connection)
[18:35:58] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:40:14] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:41:05] <arkanoid> when I try to apply typing (for pylance/mypy) I quite often find myself not capable of identifying the correct type for something. How can I help myself identifying the type of something?
[18:41:58] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:44:03] *** Joins: ice9 (~ice9@user/ice9)
[18:44:10] <jinsun> not sure if I understood the problem, but you can do `type(x)` to find the runtime type of x, and `reveal_type(x)` to find the type inferred by the type checker
[18:44:13] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:45:15] *** Quits: evocatus (~evocatus@62.182.78.42) (Client Quit)
[18:45:33] <arkanoid> how to import reveal_type?
[18:46:40] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[18:46:49] <jinsun> you don't have to import it, when you run the type checker it knows what reveal_type means, it is not supposed to be used in real code, delete/comment out that line before you actually run the code
[18:48:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:48:45] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[18:48:55] <arkanoid> if I use "type()" it would say only class 'dict' and not Dict[foo,bar]
[18:49:43] <jinsun> yes, then look at the type of the keys and values to find out what foo and bar you have
[18:50:45] <jinsun> or instead of trying to figure out the types, you can just use object
[18:51:17] <thevishy> Is there a more idiomatic way to write this? https://bpa.st/E2PA
[18:51:22] <arkanoid> use object?
[18:51:31] <arkanoid> do you mean type Any?
[18:51:33] <jinsun> if your code is so general that you don't have a type in mind when you write it, it probably works for all objects
[18:51:44] <jinsun> no Any will disable type checking
[18:51:51] <jinsun> dict[object, object]
[18:51:53] <thevishy> it is a simple retry logic that prints out retry exceeded or else proceeds
[18:52:53] <thevishy> I am able to express this more beautifully(?) using recursion, but iteration seems to be a mess :)
[18:52:57] <arkanoid> ok thanks
[18:53:01] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[18:54:22] <thevishy> The reason I didn't feel good about that paste is that for else doesn't seem intuitive to me
[18:54:37] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[18:54:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:54:50] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com)
[18:56:44] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[18:57:22] <bjs> thevishy: else isn't intuitive sadly,  maybe you can make it a function?
[18:57:58] <bjs> thevishy: then the `break` can be a `return` and the print can come after the for loop normally
[18:58:51] <thevishy> bjs, yeah else doesn't some good. can you refresh the paste?
[18:59:09] <bjs> thevishy: refresh?
[18:59:11] <thevishy> if it was a language that supported tail recursion, i would have gone for that.
[18:59:23] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 252 seconds)
[18:59:27] <thevishy> I repasted an alternative snippet: https://bpa.st/E2PA
[18:59:28] <bjs> thevishy: no I mean, you can make this a function and then instead of break you can just `return` from the function
[18:59:38] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:59:39] <bjs> thevishy: oh, repasting makes a second paste with a new link
[18:59:42] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[18:59:45] <thevishy> :)
[18:59:51] <thevishy> https://bpa.st/OZ7A
[18:59:53] *** Joins: jay-m126 (~jay-m@129.0.204.210)
[19:00:04] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:00:07] *** Joins: Amnesia (~Amnesia@user/amnesia)
[19:00:10] *** Joins: Betal (~Betal@user/betal)
[19:00:13] <thevishy> I forgot to add a return at the eend
[19:00:37] <bjs> thevishy: that's not what I meant.  I meant like `def retry(): for _ in range(max_tries): if success: return True` then at the end of the function you can print
[19:00:37] <thevishy> bjs, I will try with function like you suggested (without recursion)
[19:00:38] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[19:00:57] <thevishy> ah okay, so avoiding the else :)
[19:01:23] <thevishy> yeah i think that is better than having an else. i know you didn't my snippet btw :)
[19:01:23] <Amnesia> question, I'm dealing with a synchronous function, that's (indirectly) called by async code, but now I'd like to run an async function inside of the sync part..
[19:01:27] <Amnesia> how would I be able to do this?
[19:01:39] <Amnesia> (so there's already a running event loop)
[19:01:53] <thevishy> i mean i knew you didn't mean my second snippet :)
[19:03:34] <arkanoid> pd.Series[str] pylint says "Value 'pd.Series' is unsubscriptablepylint(unsubscriptable-object)"
[19:04:02] *** Joins: monkey_ (~user@190.104.116.153)
[19:04:06] <bjs> Amnesia: are you using asyncio?  you can loop.create_task or loop.call_soon to add things to the scheduler loop
[19:04:12] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800741d9bed66a89939.ipv6.abo.wanadoo.fr)
[19:04:23] <arkanoid> pylint==2.11.1
[19:04:25] <bjs> Amnesia: but it won't actually start running until your sync function ends
[19:05:06] <bjs> Amnesia: "run this async function and then wait for it to finish" inside a sync function isn't possible (after all, that would be an async thing to do). If you want that then you need to make your functions async too
[19:05:21] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[19:05:37] <jinsun> arkanoid: well it really isn't subscriptable, it will throw errors if you run your code
[19:06:44] <Amnesia> bjs: tyvm!
[19:06:54] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[19:06:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:07:07] <arkanoid> jinsun: but if I remove the [str] part I get "Type of "Series" is "Type[Series[Unknown]]" Pylance report UnknownMemberType"
[19:07:36] *** Joins: cosimone (~user@93-34-133-159.ip49.fastwebnet.it)
[19:08:26] <arkanoid> jinsun: and if I do pd.Series[object] I'm getting "Type "object" is incompatible with constrained type variable "S1@Series"PylancereportGeneralTypeIssues"
[19:09:21] *** Joins: fikran (~fikran@user/fikran)
[19:09:32] <jinsun> hmm doesn't complain about unknown types here, pd is pandas right?
[19:09:45] <arkanoid> import pandas as pd
[19:09:51] *** Joins: yaalon (~yaalon@187.144.31.213)
[19:10:53] <arkanoid> pandas==1.3.4
[19:11:37] <jinsun> okay and you are using pylance to check?
[19:11:51] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Quit: leaving)
[19:12:03] <jinsun> okay yeah the errors say pylance
[19:12:16] *** Joins: bloody (~bloody@user/bloody)
[19:13:03] *** Quits: _0ne (~one@user/0ne/x-2101768) (Quit: _0ne)
[19:14:21] *** Quits: cosimone (~user@93-34-133-159.ip49.fastwebnet.it) (Remote host closed the connection)
[19:14:42] *** Quits: jay-m126 (~jay-m@129.0.204.210) (Ping timeout: 260 seconds)
[19:15:25] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:15:46] <Amnesia> bjs: if create_task is used however, won't asyncio complain that the resulting future is not awaited?
[19:16:01] <arkanoid> jinsun: yes I'm using both pylance and pylint, but that error is from pylance
[19:16:11] <arkanoid> should I switch to mypy?
[19:16:21] *** Joins: jay-m126 (~jay-m@129.0.204.219)
[19:17:02] *** Quits: yaalon (~yaalon@187.144.31.213) (Remote host closed the connection)
[19:18:59] *** Joins: _0ne (~one@user/0ne/x-2101768)
[19:20:55] <jinsun> pylance has some bundled type stubs that treat it like a generic class, https://github.com/microsoft/python-type-stubs/blob/1515c4aee7de00c90cc0d17d0486f35fc06b9b82/pandas/core/series.pyi#L54
[19:21:00] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[19:21:31] <bjs> Apparently re.split() can return a list that contains None.
[19:21:39] <bjs> Where do the docs say this?
[19:22:10] <jinsun> if it is generic it should have been subscriptable, no? so the stubs are wrong probably
[19:23:14] <jinsun> arkanoid: a solution is to override the pylance stubs by installing https://pypi.org/project/pandas-stubs/
[19:23:38] <jinsun> I had that installed that is why I was not seeing the pylance errors that you were seeing
[19:23:42] *** Joins: buzzard (~quassel@23.19.141.103)
[19:24:02] <jinsun> and it makes mypy happy too
[19:24:04] <arkanoid> jinsun: done. It fixed that, thanks
[19:24:42] <arkanoid> no, I was wrong
[19:25:10] <arkanoid> still getting "Value 'pd.Series' is unsubscriptablepylint(unsubscriptable-object)"
[19:25:14] *** Joins: Viewday111 (~Viewday@user/viewday)
[19:25:16] <arkanoid> but pylint here
[19:25:30] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[19:25:31] <arkanoid> signature is "def gen_to_field(row: pd.Series[str]) -> str:"
[19:25:40] <jinsun> yes it isn't, just write pd.Series
[19:25:50] <jinsun> now pylance shouldn't complain like ti was doing before
[19:26:11] <jinsun> (might have to restart vscode for it to use the new stubs)
[19:26:15] <arkanoid> without that it gives "  Parameter type is "Series[Unknown]"PylancereportUnknownParameterType"
[19:26:17] <arkanoid> ok, restarting
[19:26:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:26:18] *** Viewday111 is now known as Viewday11
[19:27:13] <arkanoid> hooray! It is working now
[19:28:48] *** Joins: monkey_ (~user@190.104.116.153)
[19:29:26] <arkanoid> I am dealing with a lib that doesn't have stubs (networkx). I know the type of the result of function (for example pos: Layout2D = nx.spring_layout(G, weight='count', k=2.0)) but pylance says that "Type of "spring_layout" is partially unknown"
[19:29:31] <jinsun> you will probably run into more issues later, typing and pandas are still a pain, pandas isn't fully typed yet and they haven't documented the few typing features they have, and these stubs are maintained by a third party
[19:30:12] <arkanoid> jinsun: sure, I'm also trying to learn how to override typing erros the right way
[19:30:37] <arkanoid> for example, writing stubs seems an overkill for just a couple of functions, moreover I know the resulting type, so I'd like to just skip the errorr
[19:31:24] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[19:31:26] *** Joins: yaalon (~yaalon@187.144.31.213)
[19:32:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:32:33] <jinsun> this unknown type thing can only be solved by fixing the stubs unfortunately, or by putting a comment beside it to disable type checking on that line (which doesn't work well for pyright/pylance apparently, it disables it for the entire file)
[19:33:10] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:33:21] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[19:33:57] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[19:34:05] *** Quits: toastloop (toastloop@user/toastloop) (Remote host closed the connection)
[19:34:07] <palasso> I am also having multiple issues with typing in pylance as well. It is quite common for multiple libraries
[19:34:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:35:54] *** Joins: yotsuba420 (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:35:55] *** Quits: yaalon (~yaalon@187.144.31.213) (Remote host closed the connection)
[19:36:17] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com)
[19:36:17] *** yotsuba420 is now known as yotsuba
[19:36:18] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[19:36:45] <palasso> Plus with the debate on PEP 563 vs PEP 649 I am still using the typing library (the verbose way) and waiting for if and when one of these PEPs will become a language feature (I don't want to depend on something that will potentially become a feature in the future or change or not ever become a feature)
[19:36:46] <arkanoid> jinsun: the # type: ignore on single line seems working to me
[19:37:57] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 240 seconds)
[19:38:29] <jinsun> arkanoid: hmm yeah I think # type ignore works for one line because the PEP says so? (but it ignores all errors), to ignore only speicfic errors you need # pyright comment as described here https://github.com/microsoft/pyright/blob/main/docs/comments.md and that disables it for the entire file
[19:38:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:38:43] *** Joins: mokulus (~mokulus@user/mokulus)
[19:39:50] <jinsun> and if you use mypy also, the #type ignore can cause problems there, if mypy thinks it is not needed
[19:39:51] *** Joins: xkuru (~xkuru@user/xkuru)
[19:40:27] <arkanoid> jinsun: well, does it make sense to use both pylance and mypy?
[19:41:09] <arkanoid> actually as you may have relized I'm new to typing in python and I'm not yet sure which tool I should stick on
[19:41:35] <arkanoid> I'm using pylance now because of vscode and because mypy doesn't work in ipython notebooks but pylance does
[19:42:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[19:42:04] <jinsun> you can stick with pylance only, I use both because for some rare cases, only one of them catches the problems
[19:44:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:44:09] <jinsun> also because I am too lazy to set up node to get pyright from command line, so I need  mypy for command line and leave pylance for editing in vsocde only
[19:47:16] <jinsun> and if you are writing a library, it would make sense to check and get rid of any mypy errors because the packages that depend on your lib will start seeing those mypy errors even if you don't and they will complain to you
[19:48:01] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[19:48:18] <arkanoid> jinsun: makes sense
[19:48:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[19:48:27] <jinsun> so mypy is kinda mandatory because everyone uses mypy, and pylance because it is actually good
[19:48:42] <arkanoid> I can tell vscode to use both
[19:48:44] <bparker> never heard of either
[19:49:01] <arkanoid> I mean, all three, pylance, mypy, pylint
[19:51:13] *** Joins: ham5urg_ (~ham5urg@185.232.35.105.dynamic-pppoe.dt.ipv4.wtnet.de)
[19:51:54] *** Joins: ano (~ano@user/ano)
[19:52:22] *** Quits: buzzard (~quassel@23.19.141.103) (Ping timeout: 256 seconds)
[19:52:25] <arkanoid> when doing stubs is it better to use union types like Dict|None, or is better Optional[Dict]
[19:52:52] *** Joins: sandb0y (~pirate@user/sandb0y)
[19:53:35] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:53:54] *** Quits: Vision (~Vision@023-084-134-149.res.spectrum.com) (Read error: Connection reset by peer)
[19:53:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:54:13] <jinsun> dict | None is preferred
[19:54:34] <jinsun> don't use Dict when dict is possible
[19:54:58] <jinsun> Dict is for pre python 3.9 and if you don't use the future import
[19:55:50] <arkanoid> oh! is it the same for list?
[19:56:01] <arkanoid> I've been using import typing everywhere
[19:56:20] <arkanoid> same for Set, List, Optional
[19:56:21] <jinsun> yeah lots of stuff in typing got deprecated in 3.9
[19:57:37] <arkanoid> ok, now next question, how can I update to latest python in ubuntu 20.04? I'm still using 3.8.10 as that is what comes with the OS, and I'm spawning venv with it, but it's time to stay on the edge as I'm fiddling with tooling
[19:57:53] *** Joins: Vision (~Vision@023-084-134-149.res.spectrum.com)
[19:58:13] <arkanoid> the best options would be to be able to create venv of python version X without messing with the system version
[19:58:14] <bparker> well they don't exactly provide newer packages afaik
[19:58:30] <bparker> maybe via some ppa
[19:58:37] <ham5urg_> I have a terrible CSV file which I want to read with module csv. The file has a comma (,) as delimiter but ... some entries (not all) are having a quote sign at the beginning and end. Such entries do have a comma in between. E.g. 0,"abc","this is an entry with an comma (,)" is possible. Can I handle such with module csv?
[19:58:45] <arkanoid> well, so it's time to docker
[19:58:54] <bparker> ham5urg_: yep.
[19:59:14] <ham5urg_> bparker, can you point me to the right point in the docs?
[19:59:39] <bparker> https://docs.python.org/3/library/csv.html#csv.reader
[19:59:55] <bparker> the default 'excel' dialect handles your case
[20:00:00] <jinsun> arkanoid: pyenv is good for getting new python versions, https://github.com/pyenv/pyenv which you can install easily with pyenv-installer https://github.com/pyenv/pyenv#automatic-installer
[20:00:04] <bparker> you can also use DictReader if you prefer
[20:00:33] <jinsun> arkanoid: for ubuntu you also have the option of deadsnakes ppa https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa
[20:00:35] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:01:08] <arkanoid> jinsun: sure, but I fear changing the system python as many things can go bad
[20:01:21] <arkanoid> I prefer staying with the apt one and use a local
[20:01:26] <arkanoid> for venv
[20:01:27] <jinsun> so use pyenv, it installs in ~/.pyenv
[20:01:49] <grym> ^ pyenv is great
[20:01:55] <arkanoid> doing now! Thanks, seems exactly what I was looking for
[20:02:55] <ham5urg_> bparker, I think "quotechar" is my friend if I have to handle other characters as well.
[20:03:02] <ham5urg_> I try
[20:05:17] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[20:05:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:05:34] *** Quits: andi_ (~andi@user/andi/x-3467420) (Quit: WeeChat 3.3)
[20:07:03] *** Joins: andi_ (~andi@user/andi/x-3467420)
[20:07:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:08:43] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[20:09:06] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[20:09:28] <bparker> does anybody here currently use the eBay API or SDK for the US version of the store? I need an output of the "GetCategories" API call (with all the default options) that lists every possible category and subcategory for all possible items you can list on the site.
[20:09:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[20:09:38] <bparker> s/store/site/
[20:10:11] *** Joins: Sadale (~Sadale@user/sadale)
[20:10:21] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:12:37] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[20:14:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d5a4-1687-e9ec-e2fe.res6.spectrum.com)
[20:16:50] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[20:17:30] *** Joins: Sadale (~Sadale@user/sadale)
[20:18:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:19:07] *** Joins: Numerlor (~Numerlor@whydoyouhate.me)
[20:20:57] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[20:20:59] *** Quits: NeuroWinter (~neuro@107.172.219.235) (Quit: ZNC 1.8.2 - https://znc.in)
[20:21:25] *** Joins: aniketgm (~Aniket@49.36.109.169)
[20:22:58] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:23:19] *** Joins: tobybl (~tobybl@213.31.132.151)
[20:24:37] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[20:27:51] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.73) (Ping timeout: 245 seconds)
[20:27:58] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[20:29:50] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[20:30:58] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[20:32:35] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[20:33:26] *** Joins: ice9 (~ice9@user/ice9)
[20:34:14] *** Joins: rsx (~dummy@ppp-188-174-146-169.dynamic.mnet-online.de)
[20:34:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:35:13] *** Joins: ionface (~ionface@user/ionface)
[20:35:40] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[20:37:12] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:38:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:39:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[20:39:42] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[20:41:20] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[20:41:33] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 268 seconds)
[20:44:54] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:46:24] *** Joins: ionface (~ionface@user/ionface)
[20:47:40] *** Quits: ionface (~ionface@user/ionface) (Remote host closed the connection)
[20:50:07] *** Joins: pepper (~pepper@user/pepper)
[20:50:08] *** Joins: buzzard (~quassel@23.19.141.101)
[20:50:18] <ham5urg_> Is it possible with module csv to check a csv file for correct amount of columns in each row?
[20:50:49] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 268 seconds)
[20:51:34] <dodo> ham5urg_: i think it might throw an exception on errors, not sure though
[20:52:15] <dodo> fwiw, could be a dictreader thing.. again, not sure
[20:52:40] <ham5urg_> Yes, I was just thinking to tell the user where the amount of columns does not match. But I will do it in a try except manner
[20:52:43] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[20:55:30] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[20:56:02] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:2c87:a93a:77a4:2952) (Quit: Leaving)
[20:56:22] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[20:56:50] *** Joins: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com)
[20:57:29] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:58:20] *** Joins: Deknos (~someone@user/menace)
[21:01:58] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:d452:58a8:99b1:46c1)
[21:02:09] *** Quits: buzzard (~quassel@23.19.141.101) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:02:40] *** Joins: thiras_ (~thiras@user/thiras)
[21:03:29] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:05:30] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[21:05:44] *** Joins: Sadale (~Sadale@user/sadale)
[21:06:26] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[21:06:46] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:06:57] *** Joins: eN_Joy_ (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[21:07:11] *** Quits: eN_Joy_ (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Client Quit)
[21:07:32] *** Joins: eN_Joy_ (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[21:09:26] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[21:09:37] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:f513:8ec2:c177:cae8) (Quit: Ping timeout (120 seconds))
[21:10:17] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[21:11:03] *** Joins: brainfunnel (~brainfunn@68.184.198.146.dyn.plus.net)
[21:11:11] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[21:11:42] <coc0nut> is it best to use windows for developing ? and only use linux for servers etc ? or is python better in linux generally?
[21:13:49] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800741d9bed66a89939.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:14:25] <brainfunnel> it would probably be best for you to use whatever is most comfortable and available to you. like thats a broad question without any definition of better
[21:14:33] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[21:16:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:16:55] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[21:17:18] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[21:18:00] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:61c5:23ec:fc28:4a80)
[21:18:17] <Vornicus> a common saying in photography: "the best camera is the one that's with you".  unless you're building a thing that's specific to a particular platform, you can do whatever you want on whatever platform you want.  install python on your phone, you will find a use for it.
[21:18:30] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[21:18:40] *** Joins: fikran (~fikran@user/fikran)
[21:20:43] *** Quits: eN_Joy_ (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Quit: leaving)
[21:20:50] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[21:21:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[21:22:27] *** Joins: Sadale (~Sadale@user/sadale)
[21:22:37] *** Joins: loadedanvils (uid128751@id-128751.uxbridge.irccloud.com)
[21:22:41] <loadedanvils> hello all
[21:23:12] <loadedanvils> how do you go about figuring out a python codebase that you’ve never seen before?
[21:23:28] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[21:23:56] <Wulf> loadedanvils: start with the docs
[21:24:06] *** Joins: Viewday113 (~Viewday@user/viewday)
[21:24:12] <Wulf> loadedanvils: hopefully it says what the code is all about
[21:24:15] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[21:24:47] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:25:01] *** Quits: rsx (~dummy@ppp-188-174-146-169.dynamic.mnet-online.de) (Quit: rsx)
[21:25:18] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[21:25:30] <loadedanvils> Wulf: I should have been more specific, I’m trying to untagle some logic that I don’t have prior understanding of how it works
[21:25:47] <loadedanvils> it’s not super well documented
[21:25:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:25:52] *** Viewday113 is now known as Viewday11
[21:26:14] <jinsun> bjs: on that re.split thing, it is possible to have funny capturing groups that give None, https://github.com/python/typeshed/pull/5269, and the docs say that if there are capturing groups then it is included in the list
[21:27:09] <Wulf> loadedanvils: is it only about a few code lines? Or a larger project with many packages+modules?
[21:27:12] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[21:27:37] <loadedanvils> it’s a large project with many packages and modules, and it’s not open source (built mostly in-house)
[21:27:51] <loadedanvils> ETL pipeline
[21:27:55] <Wulf> loadedanvils: you could start documenting it piece by piece.
[21:28:05] <loadedanvils> yeah, I’m trying
[21:28:15] <Wulf> loadedanvils: ETL?
[21:28:17] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[21:28:35] <bjs> jinsun: yeah I have examples, and I can see why it's doing it -- but the docs are very not clear.  It says "then the text of all groups in the pattern are also returned as part of the resulting list". I can see why the non-matching groups get included,  and why they're None
[21:28:35] <Wulf> urban dict isn't helpful in this case.
[21:28:41] <bjs> but the word "text" sort of implied it'd be a string ...
[21:28:56] <oz4ga> Extract, transform, load
[21:28:58] <loadedanvils> extract-transform-load, basically business logic for pulling data from some source, changing it, and pushing it somewhere else
[21:29:14] <bjs> jinsun: it's pretty obvious why the API is like this, the docs should say it though :P
[21:29:18] <ham5urg_> How do I something like: if a in array: return "the element second element right next to a" ?
[21:29:30] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[21:29:35] <Amnesia> bjs: hmkay, going for the create_task / call_soon approach triggers a race condition. Is it perhaps possible to write (synchronously) to a pipe, and read from it (asynchronously) from async code ?
[21:29:38] <loadedanvils> ham5urg_: you would probably want something like enumerate
[21:29:52] <Wulf> loadedanvils: Oh. I've got one of those at my current job, but written in C, C++, Bash and Java. And horrible docs too.
[21:30:10] <ham5urg_> loadedanvils, a for loop with enumerate?
[21:30:10] <AhmedAmerican> I developed a Python script using selenium which query a website with a pattern and if that pattern found, then it's will download a pdf file. now I'm into an issue where i don't know how i can check if the pattern has a file to be downloaded or not.
[21:30:16] <loadedanvils> for idx, val in enumerate(array): if val == a: return array[idx+1]
[21:31:02] <loadedanvils> or also, ham5urg_, you could try writing a manual iterator
[21:31:24] <loadedanvils> basically calling iter(array) and then returning next element
[21:31:32] <loadedanvils> my syntax might be off
[21:31:54] <jinsun> bjs: yeah because it says text, it would seem it always gives strings, that part could be clearer (I used to think it would be always list[str] too, I just looked at the stubs after you told it could be None too)
[21:33:20] <Wulf> loadedanvils: I'd first try to find out how the code is started, how it pulls a new job, how it's processed, etc.
[21:33:21] <loadedanvils> any tricks you have for cleaning up certain methods? I’ve been staring at the code for a while
[21:33:48] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[21:34:08] <Wulf> loadedanvils: if the code formatting is a mess, reformat it using some tool (black, yapf, etc.)
[21:34:25] <loadedanvils> it’s technically formatted fine but there’s a lot of variables that I don’t know what they mean
[21:34:56] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[21:35:18] <Wulf> loadedanvils: document them, add type hints.
[21:35:30] <Wulf> loadedanvils: fix the code and eventually you'll understand it
[21:35:50] <jinsun> bjs: and even in typeshed they decided to not make it list[str | None] and chose list[str | Any] there because otherwise it would emit lot of "false posiives" in most code that assumes list[str]
[21:36:25] <Amnesia> or anyone else for that matter:p
[21:36:33] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[21:36:48] <arkanoid> pyenv is great!
[21:36:51] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:37:16] <Amnesia> what's the best way to send data from synchronous code to asynchronous code (or vice versa). unix pipes tend to come to my mind, but dunno if that's the best approach
[21:37:52] <loadedanvils> Amnesia: I’m not an expert but that’s the approach I would do because you would be able to interchange the transport method as needed.
[21:38:35] <loadedanvils> So, if you needed to switch from shell to some other orchestrator, having it broken up would be easy.
[21:38:40] <loadedanvils> easy-ish
[21:39:04] <loadedanvils> The other approach is maybe to use something like a message queue?
[21:40:18] <Amnesia> hm comprende; tyvm
[21:40:30] <arkanoid> not sure if it's better to use pyenv + venv or use the pyenv-virtualenv plugin, the second seems to be cluttering
[21:41:46] <SnoopJ> arkanoid, a third option: direnv (a separate tool) is capable of managing venvs for you. I often do something like `layout python ~/.pyenv/versions/3.X.Y/bin/python3` in my .envrc
[21:42:08] <SnoopJ> (there's a direnv plugin that makes it more pyenv-aware but I never bother with it)
[21:42:54] <jinsun> arkanoid: cluttering?
[21:43:03] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:d452:58a8:99b1:46c1) (Quit: Textual IRC Client: www.textualapp.com)
[21:43:30] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:85b9:726f:4e9b:a090)
[21:43:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[21:43:44] <arkanoid> jinsun: yes, it seems to put all venvs in $pyenv_root and not locally in project root, this means that I cannot have 2 venv with same name
[21:44:17] <arkanoid> I tend to do "python -m venv venv" in every project so I would end up with same venv name
[21:44:53] <jinsun> ah okay, then better go with direnv or manually making venv instead of pyenv-virtualenv
[21:45:34] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[21:45:54] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[21:48:36] <bjs> jinsun: you mean positive positives :)
[21:48:41] <bjs> but yes i know
[21:49:23] <SnoopJ> direnv stashes them in .direnv/ in the project directory unless you tell it otherwise (which I think is a thing you can do?)
[21:49:43] <jinsun> bjs: ideally it would be some fancy type annotation that
[21:49:51] <jinsun> oops
[21:50:26] <jinsun> ideally it would be some fancy annotation that looks at the regex and decides whether it can give None or not, but that is asking too much from the type system
[21:50:36] <bjs> dependently typed Python!
[21:50:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[21:51:10] <arkanoid> I don't like the direnv approach, just reading
[21:52:50] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[21:52:50] *** Quits: jay-m126 (~jay-m@129.0.204.219) (Read error: Connection reset by peer)
[21:52:52] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[21:52:58] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:53:07] *** Joins: daex (~daex@user/daex)
[21:54:46] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[21:56:14] <loadedanvils> hey SnoopJ, thanks for helping me that one time
[21:56:45] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[21:56:53] <SnoopJ> sure :)
[21:58:57] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Ping timeout: 240 seconds)
[22:02:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:02:58] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Quit: Client closed)
[22:04:26] *** Quits: thevishy (~Nishant@2405:201:f005:c007:4c69:b93c:3bc3:9ff2) (Quit: Leaving)
[22:05:42] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[22:05:59] *** Joins: tmus (~tmus@88.83.26.21)
[22:06:00] *** Joins: magla (~gelignite@55d4d5f7.access.ecotel.net)
[22:08:27] *** Quits: Y4kuzi (~provision@85.159.233.183) (Remote host closed the connection)
[22:08:37] *** Joins: Y4kuzi (~provision@85.159.233.183)
[22:08:49] *** Joins: srhm (~srhm@user/srhm)
[22:09:22] *** Quits: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353) (Quit: Leaving)
[22:10:15] *** Joins: Barones (~Barones@2804:7f3:8988:d62d:da66:4c3c:c4b1:20e8)
[22:11:17] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 240 seconds)
[22:12:59] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[22:13:55] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:14:21] <loadedanvils> I have a feeling the right move would be to rewrite that particular piece of code from scratch
[22:14:29] <loadedanvils> dreading it a bit…
[22:14:41] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800741d9bed66a89939.ipv6.abo.wanadoo.fr)
[22:15:00] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[22:15:07] *** Joins: asa22 (~asa22@84.125.126.153.dyn.user.ono.com)
[22:18:57] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800741d9bed66a89939.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:20:24] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[22:20:34] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:20:38] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Client Quit)
[22:20:53] <Helenah> What's the best way to check if a string both starts with and ends with something at the same time, bare in might that the start and end are not the same character.
[22:22:01] <loadedanvils> Helenah: can you give an example?
[22:23:18] <hexnewbie> ‘s.startswith('x') and s.endswith('y')’ or re.fullmatch('x.*y', s)
[22:23:30] *** Quits: aniketgm (~Aniket@49.36.109.169) (Read error: Connection reset by peer)
[22:23:43] <hexnewbie> Only startswith/endswith can be (easily) used if your 'x' and 'y' are variables
[22:23:47] *** Joins: aniketgm (~Aniket@49.36.109.169)
[22:25:07] <hexnewbie> re.fullmatch() will also break if 'x' and 'y' *are* the same thing (or at least it will do something different, which may be correct for your problem, depending on what it is)
[22:25:13] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[22:25:25] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[22:28:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[22:29:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:31:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[22:34:37] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[22:35:55] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:36:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:36:24] <arkanoid> do I have to set default values for function arguments in stubs?
[22:36:46] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[22:37:38] <Amnesia> question, does anyone understand why fdopen() does return bytes, but open() hangs @ http://ix.io/3IMu ?
[22:38:57] <SnoopJ> arkanoid, do you mean type stubs? You shouldn't have to worry about defaults for those
[22:39:09] <arkanoid> ok, thanks
[22:39:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[22:39:23] <AhmedAmerican> how to solve such case ? https://stackoverflow.com/q/70405990/7658985
[22:39:48] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[22:40:33] *** Joins: icmor (~icmor@user/icmor)
[22:40:44] <Amnesia> I'm probably missing out on the obvious >.>
[22:41:15] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:41:25] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[22:41:48] *** Quits: ede (~ede@user/ede) (Ping timeout: 268 seconds)
[22:42:11] <hexnewbie> Amnesia: The write end is never closed. The with clause causes the fd opened with os.fdopen() to be closed when it concludes. When you open a new file with open('/dev/fd/...'), that opens a new fd, which is closed, but the original pipe write end remains open. The reading process gets stuck waiting for it to close
[22:42:29] *** Quits: icmor (~icmor@user/icmor) (Client Quit)
[22:43:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:44:46] *** Joins: weedmic (~weedmic@109-186-195-63.bb.netvision.net.il)
[22:45:06] <Amnesia> hexnewbie: so I should use /proc/$pid/fd/$fd ?
[22:45:11] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800741d9bed66a89939.ipv6.abo.wanadoo.fr)
[22:46:38] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:47:44] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[22:47:57] <Amnesia> cause with that I'm getting the same behaviour :p
[22:49:17] <arkanoid> is writing type stubs for decorators a thing?
[22:49:40] <SnoopJ> yep
[22:50:09] <SnoopJ> there's currently an annoying bug in the typestubs for click related to just that
[22:51:50] *** Quits: srhm (~srhm@user/srhm) (Remote host closed the connection)
[22:52:13] <arkanoid> what do you mean with "typestubs for click related to just that"
[22:52:27] *** Joins: srhm (~srhm@user/srhm)
[22:53:05] <bjs> arkanoid: sure it's a thing, decorators are just normal functions that accept callable arguments after all
[22:53:56] <stwange> I have an issue where I'm trying to commit to an sqlite database, and sometimes it's in use (manual checking) and gives sqlite3.OperationalError: database is locked, crashing the program. Is there a better way to handle this than while True: try: conn.commit()   pass    catch sqlite3.OperationalError as e: pass  ?
[22:55:13] <SnoopJ> arkanoid, https://github.com/python/typeshed/issues/6156
[22:56:16] *** Joins: tobybl (~tobybl@213.31.132.151)
[22:56:28] *** Quits: srhm (~srhm@user/srhm) (Remote host closed the connection)
[22:56:37] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[22:56:42] <arkanoid> what is click?
[22:56:49] <bjs> a library that has decorators in it
[22:56:55] <SnoopJ> a library for building CLIs, that yes uses decorators a lot
[22:57:01] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 240 seconds)
[22:57:01] *** Joins: srhm (~srhm@user/srhm)
[22:57:03] <arkanoid> oh! command line thing
[22:57:06] <arkanoid> ok  thanks
[22:57:15] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.4-dev)
[22:57:35] <arkanoid> now I need an example on how to write a type stub for a decorator that accepts an optional parameter
[22:57:40] <SnoopJ> bjs, did you see the dumb little stack visualization I did with your toy interpreter? :)
[22:57:48] <bjs> SnoopJ: no
[22:58:25] <SnoopJ> bjs, https://imgur.com/a/EJp8ECQ
[22:58:44] <SnoopJ> https://gist.github.com/SnoopJeDi/c61239a418c2382205d5320f0fe05dac
[22:58:45] <bjs> neat
[22:58:49] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[22:59:10] <SnoopJ> Yea it took less doing than I would have thought, although I did have to intrude into the interpreter's guts a bit to make it steppable
[22:59:13] *** Joins: r3m (~launch@user/r3m)
[22:59:29] <bjs> never seen someone use pygame before :D
[23:00:19] <arkanoid> I have to write a stub for a decorator that adds an argument to wrapped func https://networkx.org/documentation/stable/reference/generated/networkx.utils.decorators.random_state.html#networkx.utils.decorators.random_state
[23:01:00] <Amnesia> hexnewbie: the way I interpreted your response is '/dev/fd/' copies fd, and only the copy is closed, but the original one not.
[23:01:37] <Amnesia> but if that's the core reason why it keeps hanging, then /proc/$pid/fd/$fd_num should work right?
[23:02:46] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Ping timeout: 268 seconds)
[23:02:55] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[23:03:20] *** Joins: r3m (~launch@user/r3m)
[23:04:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[23:05:00] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[23:05:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:06:11] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[23:07:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[23:07:45] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:11:47] *** Quits: weedmic (~weedmic@109-186-195-63.bb.netvision.net.il) (Quit: Konversation terminated!)
[23:14:13] <ham5urg_> Is there a shortcut for for i,v in enumerate(a_list)_with_i_mod_n==0 ?
[23:14:50] <bjs> ham5urg_: you mean, every n'th element? like [(0, "a"), (2, "c"), (4, "e")] etc for n=2 ?
[23:15:11] *** Joins: janolaf (~janolaf@9050ca66efa3.cpe.westmancom.com)
[23:15:34] <ham5urg_> bjs, yes but I need the index and the value. I can do it with index only but would be nice if I can get the value too
[23:15:54] <bjs> ham5urg_: itertools.islice(enumerate(...), None, None, n)
[23:16:02] *** Quits: asa22 (~asa22@84.125.126.153.dyn.user.ono.com) (Quit: Client closed)
[23:17:56] *** Quits: aniketgm (~Aniket@49.36.109.169) (Quit: leaving)
[23:18:12] <ham5urg_> Ahh, I understand, thanks.
[23:18:21] <nedbat> ham5urg_: and you can put that into a function:  def enumerate_mod(seq, n): ...
[23:18:29] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:18:58] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[23:19:21] *** Quits: aead (~aead@user/aead) (Quit: ZNC - https://znc.in)
[23:19:24] <hexnewbie> Amnesia: No, /dev/fd is a symink to /proc/self/fd. Also, saying it's copied is effectively correct, but actual ‘copying’ of a fd would occur when you used os.dup() or os.dup2() on it. This opens a new file that happens to correspond to the old open file, and unlike dup, can be done by another process with privileges
[23:20:02] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[23:20:13] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[23:20:15] *** Joins: FishByte (~fishbyte@2601:984:4100:fed0:1e56:c099:e5c7:60be)
[23:20:37] *** Joins: luigibu1 (~luigibu@80.30.200.2)
[23:20:47] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[23:20:50] <Amnesia> hexnewbie: hm so "Opening the file /dev/fd/n is equivalent to duplicating descriptor n (assuming that descriptor n is open).
[23:20:56] <Amnesia> is false? (https://www.informit.com/articles/article.aspx?p=99706&seqNum=15)
[23:21:09] <hexnewbie> Amnesia: Duplicating the descriptor with dup() may copy the current position in the file, whereas opening it anew might now (unless some magic is done when opening regular files from /dev/fd, but that doesn't sound like something one should be doing for anything beyond finding all open files of your process quickly)
[23:21:16] <aphysically> nedbat: I came up with a different scanline algorithm to do the same thing that's less confusing :P
[23:21:59] <nedbat> aphysically: you are putting a lot of effort into this, i am impressed
[23:22:15] <hexnewbie> Amnesia: I would generally test both claims, since I've never used dup() on regular files for which tell() wasn't 0, and I've similarly avoided /dev/fd altogether
[23:23:01] <Amnesia> hexnewbie: hm ack
[23:23:10] <aphysically> nedbat: I think it's a bit shocking you can reduce the n^3 or whatever search space down to n log(n) *without* being clever with diophantine equations or nonsense
[23:23:13] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[23:23:16] <Amnesia> my async code's blocking, but I don't have a clue why ><
[23:23:17] <aphysically> as in, still generally just brute forcing it
[23:23:21] <Amnesia> shit's annoying af
[23:23:42] *** Joins: srhm (~srhm@user/srhm)
[23:24:32] *** Joins: Viewday119 (~Viewday@user/viewday)
[23:25:09] *** Parts: nickodd (~nickodd@user/nickodd) ()
[23:25:26] *** Quits: luigibu1 (~luigibu@80.30.200.2) (Ping timeout: 256 seconds)
[23:25:36] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:25:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:25:51] <hexnewbie> Amnesia: Um, no, opening /dev/fd/n is definitely not equivalent to dup(): https://bpa.st/IDMA (there's some additional confusion due to the buffering of file object, but that's irrelevant to the question - dup() does something different)
[23:26:06] <Amnesia> hm ack
[23:26:24] <Amnesia> then I still don't get your remark regarding the difference between open() vs fdopen() :p
[23:26:34] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 256 seconds)
[23:26:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:26:34] *** Viewday119 is now known as Viewday11
[23:26:48] <hexnewbie> Amnesia: I never made such a remark. open() does the same as os.fdopen() when passed an integer
[23:26:54] *** Joins: zebrag (~chris@user/zebrag)
[23:28:01] *** Joins: fikran (~fikran@user/fikran)
[23:28:01] <Amnesia> there is however some discrepancy between http://ix.io/3IMu :p
[23:28:07] *** Joins: jay-m126 (~jay-m@129.0.204.216)
[23:28:07] <hexnewbie> os.fdopen(fd) or open(fd) would not open a new file, they would just create a new file object for the *already open* file, hence when the file object is closed, so is the file
[23:28:13] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[23:28:49] <hexnewbie> open('/dev/fd/3') opens a completely new file descriptor, the original one wouldn't be closed
[23:29:35] <Amnesia> also if /dev/fd/3 already exists o0?
[23:29:36] <aphysically> nedbat: I do have python question though
[23:29:54] <nedbat> aphysically: finally, a way i *might* be able to help
[23:30:10] <aphysically> if you look at my code here https://bpa.st/JM4A (don't worry this question doesn't really require understanding the code really at all)
[23:30:28] <nedbat> (...unless it's about typing)
[23:30:31] <aphysically> you can see I'm just calling the x_ts and y_ts functions to mutate the global ranges thing
[23:30:40] <aphysically> so I can just get rid of these functions
[23:30:56] <aphysically> in fact, in this case it's easy
[23:31:03] <aphysically> get rid of the two def lines, remove the indentions, and remove the two calls
[23:31:08] <aphysically> then the code is doing the exact same thing
[23:31:10] <nedbat> aphysically: yes
[23:31:12] <aphysically> except it's 20% slower
[23:31:26] <nedbat> because now you are working with globals instead of locals
[23:31:28] <aphysically> what's different about removing the functions that would cause a performance differnece
[23:31:43] <hexnewbie> Amnesia: Anyway, since opening '/dev/fd/3' is all sorts of odd unless doing non-standard (e.g. resurrecting deleted files with linkat()), so not doing it would get rid of any unwanted side-effects
[23:31:44] <aphysically> you sniped my question
[23:31:53] <aphysically> I discovered this by accident
[23:31:53] <nedbat> aphysically: the question was apparent :)
[23:31:59] <hexnewbie> Amnesia: Unless doing something non-standard.
[23:32:15] *** Joins: aead (~aead@user/aead)
[23:32:19] <aphysically> why are working with globals slower, what's the technical reason in the cpython implementation detail?
[23:32:42] <nedbat> aphysically: i think because globals are always by name in a dict, but locals are by index in a pre-compiled list of locals
[23:33:03] <nedbat> aphysically: i wouldn't have thought it would be 20%, but there you are
[23:33:10] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[23:33:15] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Ping timeout: 256 seconds)
[23:33:24] <aphysically> I think it's so large because everything else is optimized to the point where the silly stuff has started to bubble up
[23:33:45] <aphysically> expanding a **2 saved me like 5-10%
[23:33:47] <aphysically> lol
[23:34:18] <aphysically> but I was just really shocked by the difference
[23:34:27] <aphysically> I guess this knowledge won't help me much in the real world because when I'm not making toy scripts I'm not using globals anyway
[23:34:40] <Amnesia> hexnewbie: http://ix.io/3IMS is this non standard?
[23:35:03] <Amnesia> cause that blocks as well o0
[23:35:40] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:36:12] <hexnewbie> Amnesia: So, can you clarify, your original code, with os.fdopen(fd, ...) instead of /dev/fd juggling *DIDN'T* block, correct?
[23:36:24] <aphysically> i can *gain* another 10% in performance by moving the last summation into a function
[23:36:35] <Amnesia> hexnewbie: correct
[23:36:36] <nedbat> aphysically: put the whole thing into main() and be done
[23:36:50] <nedbat> aphysically: run it with Python 3.11, you'll get another 10% probably
[23:37:12] <hexnewbie> Amnesia: Does the new code block *after* saying ‘received xxx bytes’?
[23:37:16] <Amnesia> using fdopen() instead of open() requires me to monkeypatch an upstream lib though, hence my preference to do the thing with open()
[23:37:25] <Amnesia> hexnewbie: no, before
[23:37:44] <hexnewbie> You can just do: with open(fd, 'w') as f:
[23:38:06] <Amnesia> lowering the amount of iterations does 'solve' it though
[23:38:17] <nedbat> aphysically: if you have a complete version I can run, i'll run it on 3.10 and 3.11
[23:38:21] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[23:39:01] <aphysically> let me put it in main and I'll give it to you
[23:39:05] <hexnewbie> Amnesia: Well, a major problem with the code is that your ‘foo’ function is not async at all, hence it would break all async functionality
[23:40:02] <hexnewbie> Amnesia: The writes are synchronous, nothing is awaited, so if you write too much data, it will wait for the reader to read some of it. But since you never await, your writing code will never be interrupted to allow the reader to read
[23:40:58] <Amnesia> hexnewbie: well, that's the whole rationale behind this endeavour; I'm trying to use monkeypatch https://github.com/gawel/irc3/blob/2d7d65ca753fdd13b686d0ba5d4c180131ada6f6/irc3/dcc/client.py#L131 to send data to a websocket
[23:41:00] <hexnewbie> the f.write() will just hang there until someone reads from the pipe, but since that will only happen after foo() completes and allows main() to run, that never happens
[23:41:07] <Amnesia> but the websocket api is asynchronous
[23:41:33] *** Joins: nickodd (~nickodd@user/nickodd)
[23:41:55] <aphysically> nedbat: okay, https://bpa.st/GULQ it's self contained, the target bounds are hardcoded at the top to be large ones
[23:42:15] <aphysically> you could change those xmin/xmax ymin/ymax to be the ones from your problem if you wanted to see how fast it is with those
[23:42:17] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[23:42:48] <aphysically> pretty sure it's too fast to be very meaningful without more careful benchmarking so the large input is good
[23:42:55] <arkanoid> what's the proper way to typeshed **kwds^
[23:43:09] <Amnesia> 'loop.create_task(foo(pipe_tx))' isn't blocking though, right?
[23:43:23] <Amnesia> so why would main only run when foo() is done?
[23:43:30] <nedbat> aphysically: 3.10: 2.80sec; 3.11: 2.25sec
[23:43:44] <aphysically> more significant than I expected
[23:43:54] <SnoopJ> arkanoid, you mean to type-annotate it? `**kwargs: ValueType` I believe (the keys are necessarily strings)
[23:44:22] <nedbat> aphysically: yes, and running it more seems to only widen the gap
[23:44:32] <nedbat> aphysically: they are putting serious work into speeding up 3.11
[23:44:34] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[23:44:56] <aphysically> very cool
[23:45:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:45:40] <aphysically> nedbat: if you uncomment the top set of xmin and such
[23:45:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:45:47] <aphysically> and comment out the ones used, those were my actual problem input
[23:45:57] <aphysically> I'm not sure if the difference will be measurable there
[23:46:14] <arkanoid> SnoopJ: mmm ok
[23:46:44] <nedbat> aphysically: yes, that's much faster
[23:47:59] <aphysically> I think I need to be more clever than the "time" command once I want to benchmark something with time that small
[23:49:04] <Amnesia> does anyone over here know what the 3.8(+) approach would be to https://stackoverflow.com/questions/29126340/calling-a-coroutine-from-asyncio-protocol-data-received ?
[23:50:12] <nedbat> aphysically: increasing your numbers a bit, and running three times each, 3.11 is 74% of the time of 3.10
[23:51:01] <aphysically> quite good
[23:52:32] *** Quits: Andrynet (~Andrynet@190.152.210.224) (Ping timeout: 240 seconds)
[23:54:28] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[23:55:16] *** Joins: Andrynet (~Andrynet@190.152.210.224)
[23:57:26] *** Joins: audiobirb (~audio@user/audio)
[23:58:32] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
