[00:00:03] <oldlaptop> it's not like (say) a stack or queue where the means of faking random read access involves writes
[00:00:04] <apotheon> hmm, constant time
[00:00:08] <pyzozord> but generally you don't need index
[00:00:12] <pyzozord> you need next
[00:00:18] <apotheon> Yeah, I don't think a linked list will help with constant-time random access.
[00:00:20] <pyzozord> (if you want to make a linked list)
[00:00:21] <[itchyjunk]> next would be linked list
[00:00:31] <[itchyjunk]> someone said linked list need not be the way to do this
[00:00:59] <pyzozord> if you want just key-value store you can use python's dict
[00:01:16] <pyzozord> or if you want an array-like behavior you can use python's list
[00:01:21] <[itchyjunk]> i want to implement data structures as sonny suggested earlier
[00:01:34] <oldlaptop> Linked lists as such aren't very widely used, really, compared to alternatives - often built up from the same linked node primitives as linked lists
[00:01:52] <pyzozord> forgot what his suggestion was, can't find it
[00:01:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ac97:3ea9:3561:e0d7) (Ping timeout: 240 seconds)
[00:02:07] <[itchyjunk]> he suggest i implement list data structure
[00:02:10] <sonny> list, set, tree, graph
[00:02:24] <[itchyjunk]> sonny, i can't seem to implement list that is not linked list
[00:02:33] <pyzozord> list as an array?
[00:02:36] <[itchyjunk]> are you sure non linked list list exists!?
[00:02:47] <oldlaptop> Yes, arrays are such lists.
[00:02:48] <GeDaMo> [itchyjunk]: https://ideone.com/HYCxJe
[00:02:48] <sonny> yeah, the pair method
[00:02:51] <bayaz> Title: Ideone.com 
[00:02:52] <[itchyjunk]> list as in data structure that holds multiple index value
[00:02:58] <[itchyjunk]> right pair method
[00:03:17] <pyzozord> I don't think you can implement an array
[00:03:32] <pyzozord> it's already there
[00:03:35] <[itchyjunk]> clearly i can't! that's why i need help
[00:03:36] <macaw> Lists don't need to know their index to retrieve them by index.
[00:03:36] <sonny> [itchyjunk] <http://infolab.stanford.edu/~ullman/focs/ch06.pdf>
[00:03:41] <apotheon> Actually . . . one might be able to get constant-time random access with a linked list implemented in a way that allows arithmetic reference to node "location".
[00:03:44] <[itchyjunk]> it already being there doesn't mean i can't make new objects
[00:03:53] <pyzozord> no I mean there is no way to reimplement an array
[00:03:54] <apotheon> It'd just be a lot of work.
[00:03:54] <sonny> pyzozord sure you can, array is just a data strucutre like any other
[00:04:06] <GeDaMo> You can implement arrays on top of existing data structures (or raw memory pointers)
[00:04:10] <oldlaptop> apotheon: that strikes me as not really a linked list anymore
[00:04:19] <[itchyjunk]> GeDaMo, is that linked lists?
[00:04:21] <apotheon> well . . . *built on* a linked list
[00:04:27] <sonny> array is just mapping to indices
[00:04:28] <[itchyjunk]> i did a "stack of box" in java which was linked list
[00:04:34] <GeDaMo> [itchyjunk]: in a way
[00:04:40] <pyzozord> you could use a bytearray in python if you want
[00:04:53] <pyzozord> then you get down to almost raw memory and you can reimplement an array
[00:05:10] *** Quits: we3fan (~we3fan@89.185.206.82) (Quit: Leaving)
[00:05:11] <oldlaptop> GeDaMo: The tricky bit there is that pretty much all machines model memory as one or more arrays (along with a few to a few dozen registers that hold either atomic values or, effectively, small arrays)
[00:05:12] <[itchyjunk]> GeDaMo, so using pointers but not creating linked list, is tehre a way to implement list?
[00:05:15] <apotheon> . . . but at that point you're probably better off doing something that isn't a linked list in the first place.
[00:05:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[00:05:20] <[itchyjunk]> i don't need precise answer, i'll think about it some more
[00:05:27] <[itchyjunk]> just need to make sure this task is at least possible
[00:05:28] <oldlaptop> in that sense they really, truly, fundamentally are already there
[00:05:33] <GeDaMo> [itchyjunk]: yeah, you could use an array
[00:05:44] <[itchyjunk]> does py have such a thing?
[00:05:47] <[itchyjunk]> or is array just list?
[00:05:54] <sonny> py has arrays yeah
[00:06:00] <pyzozord> but reimplementing an array is pretty pointless, you just literally use an index/offset to write to / read from memory location
[00:06:08] <pyzozord> it's too simple
[00:06:12] <oldlaptop> Python has a type called "list" that is an array by the definition I would use
[00:06:23] <[itchyjunk]> so i would need some inbuilt primitive data structure that can hold pairs
[00:06:30] <sonny> https://docs.python.org/3/library/array.html
[00:06:30] <bayaz> Title: array — Efficient arrays of numeric values — Python 3.10.1 documentation 
[00:06:33] <nomagno> ^ Arrays are too simple
[00:06:36] <oldlaptop> It also has a type called "tuple" that similar, but immutable
[00:06:39] <GeDaMo> [itchyjunk]: like a tuple! :P
[00:06:42] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[00:06:46] <pyzozord> implementing a linked list on that other hand is a good entry point into data structures
[00:06:58] <sonny> array as well
[00:07:08] <macaw> [itchyjunk]: Yes. You can build up linked lists out of pairs. It's the best way, usually.
[00:07:21] <[itchyjunk]> macaw, what about non linked lists?
[00:07:24] <sonny> some argue impl should not have details like memory acceses 
[00:07:26] <macaw> s/best/standard/
[00:07:34] <[itchyjunk]> i can think of a solution for linked lists already so that's a little less interesting currently
[00:07:50] <oldlaptop> sonny: That's distinct from python "lists" not in an abstract sense, but in the concrete sense that it can only store one type at a time (and uses that constraint to be more efficient)
[00:07:50] <macaw> [itchyjunk]: Arrays.
[00:07:52] <pyzozord> array is really [memory_start_location + array_index * array_element_size] then read or write that address, that's it
[00:08:07] <[itchyjunk]> hmmmmmmmmmmm
[00:08:20] <sonny> oldlaptop: ah
[00:08:25] <GeDaMo> "Engineering is the art of making what you want out of what you have"
[00:08:33] <oldlaptop> both the "list" type and array.array are "arrays" in the sense I'm using
[00:08:44] <apotheon> GeDaMo: That's a good quote.
[00:09:01] <GeDaMo> I don't remember where I saw it
[00:09:02] <oldlaptop> (but of course if you were discussing python nuts and bolts instead of abstract data structures, you would use python's language instead)
[00:09:31] * [itchyjunk] scratches
[00:09:33] <[itchyjunk]> head..
[00:09:47] <macaw> [itchyjunk]: I could spoil you the simplest implementation, but I don't think you want to.
[00:09:59] <[itchyjunk]> oh its simple enough?
[00:10:09] <[itchyjunk]> okay then i'll try it for a day or two, using arrays
[00:10:15] <[itchyjunk]> if i can't figure it out, i'll ask for spoilers
[00:10:35] *** Joins: Pickchea (~private@user/pickchea)
[00:10:55] <pyzozord> i thought I just spoiled arrays completely
[00:11:01] <oldlaptop> "implement a linked list backed by an array" is a pretty common form of the (pretty common) "implement a linked list" exercise
[00:11:07] <[itchyjunk]> its jsut that this array already looks like list i am trying to make :P
[00:11:13] <macaw> [itchyjunk]: GeDaMo basically spoiled linked lists with the (Cons ...) thing.
[00:11:18] <GeDaMo> In C, you tend to use pointers for everything because that's what you've got :P
[00:11:25] <[itchyjunk]> oldlaptop, made a linked list without arrays even
[00:11:37] <[itchyjunk]> each object held a refrence to the object "below it"
[00:11:59] <[itchyjunk]> macaw, i already implemented linked list in java for my class so that part is fine
[00:12:03] <pyzozord> arrays aren't really a data structure other than "multiple values next to each other in memory"
[00:12:17] <[itchyjunk]> but arrays are also refrenced by index no?
[00:12:24] <[itchyjunk]> array[0] = blah?
[00:12:27] <macaw> Aaah. I see. For arrays, I'd agree with pyzozord above.
[00:12:33] <pyzozord> "have memory address and then increment/decrement it to adress specific elements in the array"
[00:13:03] <apotheon> Yeah, it's simple arithmetic to refer to memory-adjacent storage by "index".
[00:13:10] <oldlaptop> pyzozord: I would argue that's an implementation detail
[00:13:32] <pyzozord> oldlaptop: yeah but he wants to implement an array
[00:13:33] <[itchyjunk]> okay, lets say this array exercise is pointless.. guess i'll just do linked list then. its settled! ItchyList is a linked list now
[00:13:47] <oldlaptop> the intimate link between pointers, pointer arithmetic, and arrays is largely a distinctive feature of C
[00:13:50] <apotheon> . . . but, as oldlaptop said, the memory-adjacent characteristic seems like an implementation detail.
[00:13:51] <[itchyjunk]> pyzozord, no i don't anymore. that was the old me, now i am reformed
[00:13:53] <macaw> [itchyjunk]: For example, after you compile, the array_instance[i] becomes "get the address of the first element (= array_instance) and move the pointer i sizeof(array_instance-type)" in Assembler.
[00:14:31] <oldlaptop> (in an HLL context anyway)
[00:14:35] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:14:43] <pyzozord> [itchyjunk]: implementing an array doesn't make sense even in c. In c arrays and pointers are essentially the same thing
[00:14:45] <macaw> Oops, forgot to clarify I was talking about C.
[00:15:01] <pyzozord> [itchyjunk]: meaning arrays are just pointer to the first location of the array
[00:15:04] <[itchyjunk]> yeah i am going to make a linked list instead using no arrays whatsoever
[00:15:11] <GeDaMo> base + index * size(element)
[00:15:51] <EdFletcher> linked lists are very commonly implemented without arrays... the `next` pointer is all you need (for singly-linked, `next` and `prev` for doubly-linked)
[00:16:08] <Decker> *next and **me
[00:16:15] <Decker> and make next the first element
[00:16:17] <pyzozord> however implementing a linked list in an array is an exercise worht doing too I think
[00:16:19] *** Joins: pocketpixie (~pixel2pix@2601:182:280:bde0:a998:f68c:dd57:c24a)
[00:16:24] *** Quits: pocketpixie (~pixel2pix@2601:182:280:bde0:a998:f68c:dd57:c24a) (Client Quit)
[00:16:25] <EdFletcher> it definitely is
[00:16:27] <apotheon> Implementing a linked list by way of linked arrays is a bit of overkill.
[00:16:30] <oldlaptop> For practical purposes they're probably almost universally implemented without arrays (except in the sense that the machine's memory model somewhere down there is probably one giant array)
[00:16:38] <pyzozord> to understand how linked lists (and by extensions pointers) behave in memory
[00:16:41] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:16:53] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:16:53] <oldlaptop> but implementing one explicitly backed by an HLL-level "array" is a common exercise nonetheless
[00:17:15] <[itchyjunk]> linked list in array?
[00:17:21] <pyzozord> yes
[00:17:23] <[itchyjunk]> okay maybe that will have to happen in future
[00:17:32] <pyzozord> I did both linked list with next pointer and linked list in an array
[00:17:34] <[itchyjunk]> i'll do the linked list by itself, which seems easiest first
[00:17:51] <apotheon> The reason for implementing a linked list with an array is simply as an exercise for learning in a context where a more limited construct than an array is not available for the same implementation approach.
[00:18:09] <[itchyjunk]> hmm
[00:18:12] <Decker> just instead of string a pointer to the next element you store the index of the next element 
[00:18:13] <oldlaptop> the major exception, things like GPUs that expose the memory hierarchy directly to the programmer, still represents memory as a collection of large arrays
[00:18:19] <[itchyjunk]> how can array be the simplest thing available?
[00:18:20] <EdFletcher> yeah i was just going to say that it's "fitting a square peg into a round hole", so beyond the learning exercise it's useless
[00:18:42] <Decker> makes it more network portable - since the index is always based against a known beginning (though could be relatively different in different programs)
[00:18:44] <apotheon> If you have tuples, that's a more directly suitable primitive on which to implement a linked list.
[00:19:06] <[itchyjunk]> "tuple" as a primitive data structure? interesting
[00:19:10] <EdFletcher> tuples! there's a great little data struct
[00:19:20] <GeDaMo> Hmmm ... I wonder if implementing a list in an array would be easier if you put the end of the list at the beginning of the array and stored the items in reverse order
[00:19:22] <oldlaptop> python has a type named "tuple" - it is basically an immutable array :P
[00:19:23] <[itchyjunk]> i'll add that to my list of things to implement
[00:19:27] <[itchyjunk]> get it? haHAA
[00:19:35] <nomagno> I'm wondering how I can better integrate subroutines and jmps in my VM...
[00:19:46] <pyzozord> I remember I implemented my first (doubly) linked when I was 15. It was in c++ (using pointers) and I made a 4 room text game. That was cool
[00:20:26] <apotheon> cool
[00:20:35] <vdamewood> nomagno: Do you have call and return operations?
[00:20:36] <nomagno> Currently you're lowkey screwed if you want to refer to the subroutine's local program counter, instead of the global one
[00:20:56] <nomagno> vdamewood: only call, it's stackless
[00:21:03] <vdamewood> nomagno: local program counter?
[00:21:29] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:21:34] <nomagno> Let me do a little implementation writeup, sec. Very concise
[00:22:34] <vdamewood> Well, I mean, the x86 only has one instruction pointer, there is no global/local distinction for it.
[00:23:01] <nomagno> And how do you do jmps inside subroutines without adjusting for the surrounding code?
[00:23:03] <pyzozord> GeDaMo: not sure if reversing it does any help, you'll end up scrambling the order with the first delete or move
[00:23:10] <nomagno> vdamewood, ^
[00:23:40] <vdamewood> nomagno: Adjusting how?
[00:24:06] <GeDaMo> pyzozord: you just move things in reverse but I was thinking about most lists using prepend which would mean shuffling down every time
[00:24:16] <vdamewood> I mean, if I want to jmp to foo: and foo is 12 bytes before the location of the jmp instruction, it gets translates to something like jmp -15
[00:24:41] <vdamewood> (-12 for the different, -3 for the size of a jmp instruction)
[00:24:44] <vdamewood> difference
[00:24:50] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 256 seconds)
[00:25:38] <vdamewood> And if I insert instructions between foo and the jmp instruction, I'll need to adjust the jmp instruction. This is usually taken care of by the assembler when reassembling the program.
[00:25:47] <oldlaptop> I gather nomagnoVM is not very much like x86.
[00:25:54] *** Quits: Geolykt (~Geolykt@94.46.93.245) (Quit: leaving)
[00:26:01] *** Joins: inky (~inky@46.36.117.221)
[00:26:08] *** Joins: Klinda (~superleag@user/klinda)
[00:26:17] <vdamewood> oldlaptop: Indeed not, and to be fair, the only ISA's I'm all that familiar with are the 6502 and the x86.
[00:26:21] *** Joins: Geolykt (~Geolykt@94.46.93.245)
[00:26:46] <vdamewood> And both of them have stacks, which is not helpful in this situation.
[00:27:12] <apotheon> oldlaptop: No, it isn't much like x86.
[00:27:17] <Decker> I'm not sure I could see a benefit from 2 program counters - maybe 2 stacks for contexts of functions...
[00:27:33] <apotheon> (judging by what I've seen)
[00:27:45] <GeDaMo> Fast task switching maybe?
[00:27:58] <Decker> that'd be another global and local
[00:28:26] *** Quits: inky_ (~inky@5.77.200.82) (Ping timeout: 260 seconds)
[00:28:41] <pyzozord> wow I love this https://www.youtube.com/watch?v=z-Ng5ZvrDm4
[00:28:42] <bayaz> Title: Dear Alice 
[00:29:40] * vdamewood writes a counter program for a program counter.
[00:30:06] <apotheon> Dear Prudence:
[00:30:26] <nomagno> vdamwood: My VM is indeed very dissimilar to x86. So, the way this works is subroutines are declared using the "subs" and "sube" instructions. ALL instructions in the program are numbered linearly, The subs instruction annotates its own instruction number, and its corresponding sube's number. Then the "call" instruction annotates its own number, looks for the "subs" number, and jumps to the next instruction after that. When the program
[00:30:26] <nomagno> counter reaches the "sube", it jumps to the main execution path (since "call" marked it). Issue is, all of this happens on a non-memory-mapped location, and is independent of the actual "jmp" instruction. So I'm not sure how to enable the programs to say "jmp to the third instruction inside the subroutine".
[00:30:38] <vdamewood> Are there stock insertable pin interfaces I could use ti implement my own cartridge system?
[00:30:56] <GeDaMo> Edge connectors?
[00:31:03] <vdamewood> Yeah, those.
[00:31:10] <nomagno> ... OH. I do make the program counter available as read-only
[00:31:10] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[00:31:37] <nomagno> I can actually set a memory address at the start of the subroutine with the program counter, and operate relative to it.
[00:31:48] <GeDaMo> https://en.wikipedia.org/wiki/Edge_connector
[00:31:48] <bayaz> Title: Edge connector - Wikipedia 
[00:31:59] <oldlaptop> Digikey sells all the edge connectors you could ever want.
[00:32:03] <EdFletcher> aliexpress.com has entire shops of these
[00:32:12] *** Joins: FoodMan (~glucose@user/foodman)
[00:32:13] <EdFletcher> haha yup or digikey, mouser, etc.
[00:32:14] <GeDaMo> https://en.wikipedia.org/wiki/Pin_header
[00:32:15] <bayaz> Title: Pin header - Wikipedia 
[00:32:20] <apotheon> pyzozord: You love Chobani ads . . . ?
[00:32:28] <nomagno> Actually, this doesn't need any implementation changes! I can just adopt it as a recommended coding practice
[00:32:43] <pyzozord> apotheon: don't know what Chobani is, but that is a future to look forward to
[00:32:45] <oldlaptop> I know for a fact they sell the one that you plug Atari VCS cartridges into. (That was a weird project.)
[00:33:03] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[00:33:07] <EdFletcher> if just using bare pin headers, grab some Dupont connector leads to make life a lot easier
[00:33:08] <apotheon> It's a dairy-related company most known in the US as a yogurt brand.
[00:33:16] <vdamewood> Ah, okay. So yes, these things are so stock I can just buy them off the shelf.
[00:33:27] <oldlaptop> (most of the VCS cartridges are just breakout boards for a 2K or 4K ROM IC, incidentally. groovy stuff)
[00:33:39] <sonny> heh, neat
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:21] <apotheon> A lot of people think of Chobani as "that Greek yogurt company", except it tampers heavily with the Greek style of yogurt it's pretending to offer.
[00:34:26] <vdamewood> oldlaptop: Is a 'breakout' board a bord that's just an interface for a soldered on ROM chip, or do you mean like the same board as the one Steve Wozniak made for the game Breakout?
[00:34:34] <oldlaptop> the ones that aren't are generally the kind of thing you'd implement with a few gates and a couple of ROM ICs - the common tricks involved switching chips when the machine accesses some magic memory addresses
[00:35:13] <oldlaptop> vdamewood: breakout board meaning "a printed circuit board that provides easier access to the pins of an IC package or other inconvenient component"
[00:35:34] <vdamewood> oldlaptop: Ah, okay.
[00:35:36] <oldlaptop> Though of course they sold breakout boards for a ROM cartridge containing an implementation of breakout for the VCS
[00:35:41] <oldlaptop> s/cartridge/chip
[00:36:08] <apotheon> pyzozord: You could pretty much have that future today, if you can get some people to join a farming collective with you and invest in a bunch of land and tooling.
[00:36:11] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:36:47] <oldlaptop> most VCS cartridges, and basically all of the early ones, just route the pins of the ROM chip's DIP to the edge connector contacts AIUI.
[00:36:47] <vdamewood> oldlaptop: I'm thinking of trying to design my own 8-bit computer with replaceable cartridges, FWIW.
[00:37:21] <vdamewood> And hey, if it works, maybe a Famiclone.
[00:37:32] <GeDaMo> apotheon: * good soil, clean water / air not guaranteed
[00:37:47] <oldlaptop> That cartridge interface is, erm, not a simple BoB
[00:37:56] <apotheon> GeDaMo: Good soil plus clean water and air wasn't guaranteed by that ad, either.
[00:38:07] <GeDaMo> No, but it looks pretty :P
[00:38:22] <apotheon> true
[00:39:02] <vdamewood> BoB?
[00:39:11] <oldlaptop> Breakout Board.
[00:39:13] <user51> GeDaMo: crazy idea for trees with dicts: each dict entry is a string. the string has 2 components: node id, and number of nodes
[00:39:28] * vdamewood wonders why he didn't catch that.
[00:39:33] <oldlaptop> c.f. https://www.sparkfun.com/search/results?term=BoB
[00:39:34] <bayaz> Title: Search Results for BoB - SparkFun Electronics 
[00:39:36] <GeDaMo> Why a string and not, say, a tuple?
[00:40:10] <nomagno> vdamewood: Designing an 8-bit computer with a custom CPU?
[00:40:10] <nomagno> Count me in, IF you figure out how to do it without spending a fortune on chip manufacturing, or Chinese sketchy FPGA drivers.
[00:40:12] <user51> i assumed we only had dicts, tho i suppose that's functionally a tupl, no?
[00:40:17] <oldlaptop> BOB-13773 is fun. https://www.sparkfun.com/products/13773
[00:40:19] <bayaz> Title: Cherry MX Switch Breakout - BOB-13773 - SparkFun Electronics 
[00:40:28] <GeDaMo> Well make it a dict then
[00:40:30] <vdamewood> nomagno: No, I'm probably going with a stock 6502.
[00:40:56] <nomagno> Reasonable choice
[00:41:30] <user51> yeah, i'm being too smart here
[00:42:03] <vdamewood> oldlaptop: Well, looks like I have more actual research to do.
[00:42:10] <user51> changing the number of nodes would be pretty painful, as you'd need to extract the number from the string, increment, rebuild
[00:42:12] <GeDaMo> Storing anything other than text in a string usually involves 'parsing' :P
[00:43:10] <user51> well, since parsing was mentioned, does parsing usually imply a tree structure?
[00:43:17] <vdamewood> oldlaptop: But I'm guessing a BoB is *not* what I want if I want to support something complex like allowing a cart to include an NVRAM for game saves, or such, right?
[00:43:36] <oldlaptop> I would assume not
[00:43:52] <vdamewood> ie, having two (or more) separate ICs for whatever the card does.
[00:43:54] *** Joins: wildo (~lain6141@119.224.72.222)
[00:43:56] <oldlaptop> It wasn't even what Atari VCS game developers wanted by the end.
[00:44:45] <oldlaptop> (given that they were making those dratted things do stuff they were never supposed to do by the end, with insanely large amounts of memory - 8K! even more! D:
[00:44:56] <vdamewood> I figured 14 address pins, and 8 data pins would do what I want.
[00:47:04] <vdamewood> So, 22 pins it is.
[00:47:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:47:48] <oldlaptop> The VCS has 24, IIRC.
[00:47:53] <GeDaMo> user51: if you see a string as a list and a list as a tree then sure :P
[00:47:56] <nomagno> How do I calculate this kind of stuff? Say I want a 32KBs ROM cartridge. How do I figure out how many pins to use?
[00:48:03] <oldlaptop> no, 26
[00:48:19] *** Joins: _inky (~inky_@46.36.117.221)
[00:48:48] <GeDaMo> 2^15 = 32768
[00:49:23] <oldlaptop> 14 address lines, eight data lines, a couple grounds, VCC, and a chip-enable (that was just wired up as another address line; the whole cartridge slot was just on the machine's memory bus, and the range mapped to ROM was that range in which the address line wired to the chip-select pin was hot)
[00:49:26] <vdamewood> nomagno: You will need 10 pins for every jump to kilo, mega, giga, etc.
[00:49:34] <user51> GeDaMo: i asked because i had a thought about that earlier today. to my non-native english, 'terminals/tokens' and 'nonterminals' feel a bit artificial. 
[00:49:58] <vdamewood> nomagno: The one's digits is the base2 log of how everymany of those units you want, log2(16) = 4, so 16 kb is 14.
[00:49:58] <InPhase> nomagno: 3 pins is sufficient with a serialized protocol.  For an efficient bus you need a word size, enough pins for that word size, and enough pins to address that amount of memory across that word size of elements.  (Or across bytes if you don't want memory alignment.)
[00:50:01] <GeDaMo> user51: the PEG paper I habitually post is basically tree re-writing
[00:51:22] <vdamewood> oldlaptop: That's the route I was thinking of.
[00:51:49] <vdamewood> nomagno: Also, add two pins for power and ground.
[00:52:00] <user51> i want to call tokens 'letters' and nonterminals 'labels' from now on, but i'm not sure how much that would contribute
[00:52:17] <python476> oh peg
[00:52:18] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:ad42:342e:63a6:aad9)
[00:52:32] <nomagno> InPhase, vdamewdood: how do your different answers compare?
[00:52:38] <vdamewood> oldlaptop: Though, I figured the address lines could take care of the chip-select, and the select part could be on the motherboard.
[00:53:19] <Decker> there's memory I/O signals
[00:53:29] <InPhase> nomagno: They're compatible.  vdamewood is discussing addressing.  But you will also need data pins.
[00:53:32] *** Quits: sh1r4s3 (~sh1r4s3@109.252.75.9) (Ping timeout: 240 seconds)
[00:53:32] <vdamewood> nomagno: I described how you figure out hoe many pins for your word size. a serial bus has a 1-bit word, so 1-wire for data, and two for ground and power = 3.
[00:53:37] <Decker> to distinguis addresses from PORT io which use he same address lines
[00:53:50] <Decker> oh n/m
[00:54:06] <Decker> 6502's one of them memory mapped things
[00:54:25] <user51> GeDaMo: you don't have a 2nd favorite PEG paper? :P
[00:54:27] <vdamewood> nomagno: Oh yeah, and you need data pins, hence my above thing about 14 pins for addressing (16kb), and 8 for data. (one byte per address.)
[00:54:59] <nomagno> Aaaah, got it
[00:55:02] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:ad42:342e:63a6:aad9) (Ping timeout: 240 seconds)
[00:55:14] <GeDaMo> Well, the paper which originally described PEGs is pretty good :P
[00:55:34] <GeDaMo> And the papers on the LPEG implementation are good too
[00:55:42] <nomagno> Wait, why 14 pins for addressing?
[00:55:44] <GeDaMo> They describe a VM for PEGs
[00:55:50] <vdamewood> nomagno: Also, that thing about needing 10 pins for each jump in kilo, mega, giga, etc. That's just a short cut, you really need log2(n) wires to transfer n bits.
[00:56:02] <user51> my god, PEGs are going to save the world from now on.
[00:56:06] <vdamewood> nomagno: What's s^14 = 16*1024
[00:56:10] <vdamewood> s/What's//
[00:56:15] <vdamewood> 2^14 =
[00:56:20] <oldlaptop> vdamewood: IIRC the ROM ICs had a chip-enable themselves
[00:56:24] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[00:56:26] <oldlaptop> (I meant to say chip-enable line)
[00:56:54] <oldlaptop> cartridges >4K had logic inside to select between multiple ROM ICs, and were therefore not boring BoBs
[00:56:57] <vdamewood> oldlaptop: Hmm... I was thinking I could do some magic with the address parts.
[00:57:12] <vdamewood> But maybe not.
[00:57:20] <oldlaptop> The bankswitched cartridges generally switched chips when the machine accessed a magic address
[00:57:50] <python476> [warning:controversial and maybe useless] anybody here finished leetcode ?
[00:57:53] <nomagno> Ah, so I need 10 bits to address each individual memory address in a kilobyte, which makes sense. So, 14 bits for 16KBs, which also makes sense. And 8 bits to transfer one at a time, makes for 22 + ground + power = 24
[00:57:54] <oldlaptop> something like 0xFF8 to see the low 4K and 0xFF9 to see the high 4K was the most common, IIRC
[00:58:11] <oldlaptop> (only you don't say 0x in 6502 assembler, do you? :P)
[00:58:16] * python476 is trying to measure the low/medium entry bar to land a coding gig
[00:58:16] <nomagno> IF I want to address 32KBs, that's 1 more, so 25
[00:58:36] <vdamewood> nomagno: You get it, but "8 bits to transfer one at a time" seems a bit not-clear.
[00:58:57] *** Joins: kaivai (~kaivai@user/kaivai)
[00:59:19] <user51> GeDaMo: what's the appeal of PEGs, btw?
[00:59:34] <nomagno> 8 bits to transfer one byte at a time. I guess the operation would be technically non-atomic, but hard to see it desyncing on such a simple interface
[00:59:40] <GeDaMo> https://wiki.nesdev.org/w/index.php/Cartridge_connector
[00:59:43] <bayaz> Title: Cartridge connector - Nesdev wiki 
[00:59:52] <user51> lack of ambiguity?
[00:59:57] <GeDaMo> user51: they're simple enough that I feel like I understand them :P
[00:59:59] <vdamewood> nomagno: That desyncing is why nearly every bus we have these days is serial.
[01:00:16] <user51> GeDaMo: excellent reason :)
[01:00:23] <vdamewood> nomagno: USB, Thunderbolt, PCIe, SAtA, NVMe, all serial.
[01:00:28] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1b3f:f726:5111:27f0)
[01:00:35] <GeDaMo> It's basically recursive descent
[01:01:06] <nomagno> So would I notice a speed slowdown if I only use one pin? And does it make the implementation for the memory mapping more complex?
[01:01:12] <sonny> what?
[01:01:13] <user51> maybe i'll make it my end of week goal to write a recursive descent parser
[01:01:15] <python476> user51: near direct translation of grammers in your language, also easy testing
[01:01:17] <sonny> usb is serial??
[01:01:24] <python476> uSb
[01:01:24] <oldlaptop> Universal Serial Bus.
[01:01:25] <nomagno> Universal Serial Bus
[01:01:27] <python476> heh
[01:01:40] <vdamewood> nomagno: If you only used one pin, you'd burn your circuit or it wouldn't work at all.
[01:01:43] <python476> thank you sonny for this moment
[01:02:05] <sonny> I thought only rs232 was serial, suprising
[01:02:07] <nomagno> ah right, I'm working with dumb ROM
[01:02:17] <python476> sonny: i believe usb evolved from rs232
[01:02:49] <nomagno> 25 bits it is then. Is there anything I could use a 26th for? Just to make the number nice and round
[01:02:50] <oldlaptop> "serial" is a general term opposed to "parallel", not some specific standard for serial communications
[01:02:50] <GeDaMo> The disk interface SATA is also serial
[01:02:57] <nomagno> pins*
[01:03:03] <vdamewood> nomagno: Enable/Disable line?
[01:03:05] <oldlaptop> although "serial port" colloquially almost always means something derived from RS232
[01:03:08] <flakland> HDMI is serial too
[01:03:37] <oldlaptop> (a nine-pin port is by definition not a conforming RS232 interface - I believe that standard explicitly specifies DE25)
[01:03:55] <oldlaptop> dammit, DB25 - the nine-pin one is E
[01:04:01] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:04:10] <python476> we need usp 
[01:04:11] * oldlaptop can't keep the Dx-N straight
[01:04:11] <nomagno> So, the way this works is basically you use the 15 address pins to set the address, and the 8 data pins to receive the data. Right?
[01:05:01] <oldlaptop> nomagno: On something like the atari VCS interface, you pull the address lines to the appropriate levels, and the cartridge pulls the data lines to the appropriate levels after a while.
[01:05:49] <flakland> do you want to error check/correct the bus ?
[01:06:16] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:06:28] *** Quits: Burgundy (~yomon@79.115.213.171) (Remote host closed the connection)
[01:06:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:07:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1b3f:f726:5111:27f0) (Ping timeout: 240 seconds)
[01:07:18] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ad42:342e:63a6:aad9)
[01:07:30] <nomagno> flakland: Well, to do that the 26th pin would contain if the addition of the other bits is even or uneven, or something, right?
[01:07:56] <nomagno> not correct electrical terms, I'm aware
[01:08:48] <flakland> i don't know, all i knkow is pcie devices do it which is why they measure capabilities in giga transfers and not gigabytes
[01:08:51] <oldlaptop> That's one way to do error detection.
[01:09:56] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:ad42:342e:63a6:aad9) (Ping timeout: 245 seconds)
[01:11:28] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:12:57] *** Quits: user51 (~user51@176.228.151.30) (Quit: leaving)
[01:13:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:16:31] <pulse> Why are so many things in life FILO, for example the sock drawer
[01:16:47] <vdamewood> oldlaptop: To clarify, I figured I'd use the address lines to select the address on a simple ROM chip, then for something more complex the cart PCB could be wired to select different chips on the board based on their addressing. So, the enable pin for each IC could just be some and/nand logic on the upper few bits or something like that.
[01:16:56] <vdamewood> pulse: gravity
[01:17:20] <vdamewood> It's easier to set things down on the top of a stack, than to figure out a vertical queue.
[01:17:30] <pulse> vdamewood, Works with a narrow horizontal drawer too
[01:17:49] <pyzozord> FILO isn't that just stack?
[01:17:52] <vdamewood> I still say gravity.
[01:18:24] <vdamewood> Well, It's usually LIFO, and yes.
[01:18:31] <pulse> Is there a word for a structure that is first in random out
[01:18:39] <vdamewood> GIGO
[01:18:53] <vdamewood> (Garbage in, Garbage out)
[01:18:54] *** Joins: jlindgren_ (~Srain@ip68-13-121-194.om.om.cox.net)
[01:18:57] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:20:27] <nomagno> pulse: That's called a gambling machine
[01:21:05] <nomagno> Except the "random" part is unclear
[01:21:41] <pyzozord> I think gambling machine is more FIMO first-in maybe-out
[01:21:43] <pulse> Suppose you had a bag of oranges, you can put oranges on top but they can wiggle their way all the way to the bottom too
[01:21:57] <pulse> So you always put one on top but what you get out is a random one
[01:21:59] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:22:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:22:42] <Decker> LILO
[01:22:51] *** Joins: immibis (~hexchat@62.156.144.218)
[01:23:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:23:39] <pyzozord> I prefer my oranges to be already dead when I by them. Killing oranges myself is just too much
[01:23:57] <nomagno> Oh, I know! Bingo bingo cage
[01:24:29] <nomagno> Bingo mechanical cage or however you want to call it, you put the ball in, they get sorted randomly and chaotically, and one comes out
[01:24:41] <pyzozord> I am going to buy many oranges and psitachios for christmas though
[01:25:05] <pyzozord> and make the traditional slav mayo salad
[01:25:12] <nomagno> you don't need to do that for christmas, you can do it tomorrow :D
[01:25:13] <pyzozord> potato salad it's called I think
[01:25:45] <pulse> https://www.kickstarter.com/projects/zackdangerbrown/potato-salad
[01:25:46] <nomagno> Oranges are too good to miss out on
[01:25:46] <bayaz> Title: Potato Salad 
[01:26:05] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Quit: No Ping reply in 180 seconds.)
[01:26:20] <pyzozord> no that potato salad
[01:26:24] <pyzozord> that one https://www.allrecipes.com/recipe/234949/authentic-russian-salad-olivye/
[01:26:24] <bayaz> Title: Authentic Russian Salad 'Olivye' 
[01:26:33] <pyzozord> except not with olives
[01:26:45] <[itchyjunk]> hey, how do i initialize a variable as a null ?
[01:26:46] <[itchyjunk]> erro
[01:26:53] <pulse> That looks like what we call French salad here
[01:26:55] <[itchyjunk]> i need to refrence to an object that doesn't exist
[01:26:57] <[itchyjunk]> in python
[01:27:01] <[itchyjunk]> does that make sense?
[01:27:04] <pyzozord> I think there is no null in python, but there is a None
[01:27:05] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a454:e6fe:6ce0:e4a4)
[01:27:06] <[itchyjunk]> itchyItem = null type thing
[01:27:15] <[itchyjunk]> can i use None as a place holder?
[01:27:24] <[itchyjunk]> for a variable that points to nothing for now and something later?
[01:27:26] <pyzozord> itchyItem = None
[01:27:27] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[01:27:31] <[itchyjunk]> great
[01:28:35] <pyzozord> hmm and some apple pie and icecream
[01:29:06] *** Joins: jojo_ (uid532473@id-532473.helmsley.irccloud.com)
[01:29:17] *** Quits: jlindgren_ (~Srain@ip68-13-121-194.om.om.cox.net) (Remote host closed the connection)
[01:30:56] <vdamewood> Hmm... I might want to include a pin for the clock signal.
[01:31:36] *** Joins: zaher_ (~zaher@37.48.146.99)
[01:31:55] <pyzozord> vdamewood: are you making a breadboard computer or breadboard cpu?
[01:32:18] <pulse> Or a breadboard bread
[01:32:24] <vdamewood> pyzozord: Thinking about a computer.
[01:34:03] *** Quits: jojo_ (uid532473@id-532473.helmsley.irccloud.com) ()
[01:34:23] *** Quits: zaher (~zaher@37.48.156.155) (Ping timeout: 268 seconds)
[01:34:50] <[itchyjunk]> (py) in my ItchyItem class, can i create an item: ItchyItem ?
[01:35:07] <[itchyjunk]> I get a `Unresolved refrence `itchyItem` error
[01:35:42] <pyzozord> [itchyjunk]: share code
[01:36:13] <pyzozord> best in some paste bin that can evaluate
[01:36:20] <[itchyjunk]> https://bpa.st/4DDQ
[01:36:21] <bayaz> Title: View paste 4DDQ 
[01:37:08] *** Joins: ynnos (~sonny@2a09:bac0:14::806:90fc)
[01:37:08] <[itchyjunk]> oops that thing on line should be link not index
[01:37:24] <pyzozord> oh I don't know how type hits work
[01:37:36] <[itchyjunk]> but line 4 is where the error seems to be
[01:37:58] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 260 seconds)
[01:38:04] *** ynnos is now known as sonny
[01:39:11] <pyzozord> https://stackoverflow.com/questions/33533148/how-do-i-type-hint-a-method-with-the-type-of-the-enclosing-class
[01:39:12] <bayaz> Title: How do I type hint a method with the type of the enclosing class? 
[01:39:45] <pyzozord> add from __future__ import annotations in the first line
[01:40:17] <[itchyjunk]> woha, i need access to future now?
[01:40:33] <pyzozord> type hints are relatively new in python from what I understand
[01:40:50] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9842-5cec-cc8e-369b.res6.spectrum.com) (Quit: jarthur)
[01:40:56] <pyzozord> python is perfectly fine if you do not define what type are your variables
[01:42:02] *** zaher_ is now known as zaher
[01:44:12] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) ()
[01:45:24] *** Quits: python476 (~user@88.160.31.174) (Ping timeout: 240 seconds)
[01:45:46] <vdamewood> Well, time for more food.
[01:46:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:47:19] <Inst_> @whatsupdoc
[01:47:22] <Inst_> you around?
[01:47:27] <Inst_> or did he run away in shame? Coward.
[01:48:44] <gry> Inst_: he left because he is using the spambot called 'irccloud' instead of keeping his pc open. unless you pay, irccloud closes the chat after around two hours of inactivity. not a very robust piece of software
[01:49:11] *** Quits: Akuli (~Akuli@213.216.211.142) (Quit: Akuli)
[01:49:24] <[itchyjunk]> I need my pycharm to see py3.9 which i have
[01:49:33] <[itchyjunk]> its using py3.6 :(
[01:49:48] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[01:51:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ad42:342e:63a6:aad9) (Ping timeout: 240 seconds)
[01:52:40] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:52:42] <vdamewood> gry: Oh, I never realized that it was a 'feature'.
[01:53:01] <gry> they just want people to pay
[01:53:18] <gry> and they are unnecessarily centralized
[01:53:25] <gry> with all chats logged etc
[01:53:26] *** Quits: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 252 seconds)
[01:53:38] <gry> it's so much more pleasant to self-host thelounge, gamja, glowing bear, or convod
[01:53:42] <gry> convos
[01:53:46] <pyzozord> [itchyjunk]: https://www.jetbrains.com/help/pycharm/configuring-python-interpreter.html
[01:53:47] <bayaz> Title: Configure a Python interpreter | PyCharm 
[01:54:07] <pyzozord> intelijs always have nice and extensive settings
[01:54:45] *** Joins: jojo_ (uid532476@id-532476.helmsley.irccloud.com)
[01:55:05] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:56:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a454:e6fe:6ce0:e4a4) (Ping timeout: 240 seconds)
[01:56:45] <maxzor_> why are electron apps opening a keyring entry?
[01:57:18] <flakland> checking certs?
[01:58:53] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:59:02] <maxzor_> What is a cert? why do they want to check a cert?
[01:59:52] <flakland> why would any app open a keyring
[02:00:22] <maxzor_> to provide security for  valuable information
[02:02:22] <maxzor_> why would a text editor or an IDE be opinionated about itself holding valuable data by default?
[02:02:43] <Decker> to check to see if it didn't have malicious (unexpected) content added
[02:02:44] <flakland> sounds like a pretty obvious bottom of the barrel text editor
[02:03:10] <Decker> sure - an editor that can freely run JS that has access to all system facilities
[02:03:11] *** Quits: jojo_ (uid532476@id-532476.helmsley.irccloud.com) (Changing host)
[02:03:11] *** Joins: jojo_ (uid532476@user/jojo/x-7248806)
[02:03:14] <flakland> telemetry data to feed clippy's ego
[02:03:15] <Decker> IE electron is not a sandbox :)
[02:04:16] <pyzozord> "Every program attempts to expand until it can read mail."
[02:04:45] <Decker> I sorta stopped at order pizza
[02:05:57] *** Quits: Kuleshov_ (Kuleshov@46.138.252.54) (Ping timeout: 240 seconds)
[02:06:17] *** Quits: magla (~gelignite@55d4bf95.access.ecotel.net) (Quit: Stay safe!)
[02:08:03] <pyzozord> I love Terry Prachet
[02:08:08] <pyzozord> I must read more of him
[02:09:34] <pyzozord> I wonder if his work is under IP license or are we free to make games based on diskworld
[02:09:44] <pyzozord> discworld*
[02:09:51] <pyzozord> diskworld is appropriate for video games though :P
[02:10:21] *** Joins: blueteeth (~blueteeth@185.111.74.14)
[02:12:13] <vdamewood> pyzozord: Steve Jackson Games holds the license to make Games based on Discworld. (or at least, table-top RPGs.)
[02:12:26] <apotheon> pyzozord: lots of copyright
[02:12:45] <pyzozord> aw :(
[02:12:51] <vdamewood> pyzozord: http://www.sjgames.com/discworld/
[02:12:54] <bayaz> Title: Discworld Roleplaying Game 
[02:13:32] *** Quits: triplesl1 (~sagan@2a02:6ea0:dc05::a15d) (Ping timeout: 240 seconds)
[02:14:05] <pyzozord> I especially likes the stories about the Unseen University
[02:18:06] *** Joins: jkk (~jkk@213.180.39.162)
[02:19:09] <maxzor_> I understand that for chromium opening a keyring is useful. How is it useful to Atom or Vscode?
[02:19:26] <flakland> how is it useful for chromium
[02:20:46] <maxzor_> it could allow to access passwords only during a time frame, after what you have to reenter your keyring password again 
[02:21:10] <flakland> for a plugin?
[02:21:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:21:31] <maxzor_> for the built-in password manager?
[02:21:47] <[itchyjunk]> ahhhh
[02:21:50] * [itchyjunk] rips hair
[02:22:04] <[itchyjunk]> this whole ide evev shit always pisses me off
[02:22:07] <[itchyjunk]> no idea what's going on
[02:22:57] <flakland> the builtin pass mnager makes you generate a key?
[02:23:33] <maxzor_> here no. But that's a use of a keyring that I can see. No idea if this is actually implemented in chromium.
[02:23:49] <flakland> it's probably for revenue augmentation
[02:24:02] <flakland> they snatch up your key fingerprints, etc
[02:24:23] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:24:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:25:49] <sonny> [itchyjunk] sign of a bad ide imo
[02:26:02] <sonny> what's the problem?
[02:26:15] <apotheon> "bad IDE" is almost redundant
[02:26:19] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[02:26:25] <maxzor_> https://github.com/atom/github/issues/2384
[02:26:27] <bayaz> Title: Prompt to unlock login keyring on startup · Issue #2384 · atom/github 
[02:26:38] *** Quits: Guest3076 (~Guest30@66.115.252.46) (Quit: Client closed)
[02:27:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:99a1:2e9:3437:7fc2) (Remote host closed the connection)
[02:27:30] *** Joins: inomoz (~inomoz@85.26.165.145)
[02:27:35] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:99a1:2e9:3437:7fc2)
[02:27:58] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[02:29:06] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157) (Ping timeout: 245 seconds)
[02:30:15] <flakland> a better question is, why woudl anyone use atom or vscode or anything requiring such a gargantuan runtime
[02:30:46] <maxzor_> that's a great question
[02:30:56] <maxzor_> (it does not help with mine :) )
[02:31:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[02:31:38] <flakland> this to me is clearly a spyware feature
[02:32:02] <flakland> the type of people using such text editors will just go along with the prompts
[02:32:11] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[02:32:34] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec1f:86d0:99a1:2e9:3437:7fc2) (Ping timeout: 260 seconds)
[02:32:49] <flakland> your safest option is to create a user account just for atom or whatever, and don't let it near your real keyring
[02:33:11] <maxzor_> https://askubuntu.com/a/1034053
[02:33:12] <bayaz> Title: How to disable the "unlock your keyring" popup? 
[02:33:30] *** Quits: pizdets_ (~pizdets@183.182.111.198) (Ping timeout: 260 seconds)
[02:33:37] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[02:33:38] <maxzor_> So far the reason to me is, chrome decided to do it, and no one down the opensource chain bothered with this decision
[02:33:56] *** Joins: pizdets (~pizdets@183.182.111.2)
[02:34:47] <flakland> if you uninstall the "github package" does it persist?
[02:34:58] *** Joins: adran_ (~primalz@2607:fcd0:aa80:1304::bf2d)
[02:35:32] <maxzor_> I am not interested that much in workarounds
[02:35:46] <maxzor_> I am interested in people up the chain fixing their broken software
[02:35:57] <flakland> well you asked "why"
[02:36:01] <flakland> thats how you find out
[02:36:44] <flakland> if it stops then you contact authors of "github package"
[02:38:45] <maxzor_> today I compiled and ran vcg for apt-rdepends. I am not sure the old way is better. https://github.com/deadcodesoc/vcg
[02:38:46] <bayaz> Title: GitHub - deadcodesoc/vcg: A Visualization Tool for compiler graphs 
[02:39:00] * Thedarkb1 ponders how his start function can relocate the .data section from ROM to RAM and have everything work.
[02:39:00] <maxzor_> https://i.imgur.com/8eJZ6Kc.png
[02:39:01] <bayaz> Type: image/png Size: 466.2 kB 
[02:39:19] <Thedarkb1> I assume this is a linker issue and I need to know something about the linker script that I'm not privy to.
[02:44:26] <maxzor_> thanks flakland that's it for atom, so the problem is not in electron. I'll investigate/report, and if you have any idea for vscode I'm all ears
[02:45:00] <jkk> :P
[02:45:20] <flakland> i strongly advise you remove all your eggs from the chrome basket
[02:47:21] <maxzor_> Do you have reads for such an advice? I know about fuking Manifest V3
[02:48:09] <flakland> use notepad++ instead
[02:48:14] <flakland> it's way better
[02:48:50] <maxzor_> notepad++ and the mess of xml prettify is why i went to atom
[02:48:58] <flakland> even regular notepad might be considered an upgrade
[02:48:59] <maxzor_> the no extensions and all that
[02:49:19] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:49:19] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Remote host closed the connection)
[02:50:20] <maxzor_> I'm not fine with full vi, I never will, too much complexity
[02:50:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:51:03] * kveroneau has always found solice in the Kate editor.
[02:51:10] <flakland> vi has too much complexity but running a browser based text editor is fine?
[02:51:29] <flakland> one that demands you unlock your keyring to save / open files
[02:51:49] <vdamewood> I never did like atom. Any editor that has 3 seconds of lag isn't worth it in my book.
[02:51:51] <maxzor_> hehe, I am talking about user experience
[02:51:59] <kveroneau> I like that Kate when editing remote files just uses my local Linux ssh-agent.
[02:52:30] <kveroneau> I just run `ssh-add` then launch my previous Kate session, and bam, I'm good to go. :)
[02:52:31] <pyzozord> there are different kinds of complexity. They are probably talking about initial learning curve of vi, not about technology stack used to implement vi
[02:53:37] <pyzozord> i am more and more planning to drop vi and write my own editor
[02:53:52] <kveroneau> Yet another editor?
[02:53:55] * maxzor_ another one
[02:54:10] <pyzozord> i mean from scratch
[02:54:23] <pyzozord> also considering writing my own. terminal emulator from scratch
[02:54:26] <kveroneau> People say they are too many Linux distros, I think there are too many programmer editors out there.
[02:55:04] <pyzozord> but I'm not going to share my stuff. My stuff is for me. And well if someone asks I may share it with them
[02:55:34] * kveroneau goes onto their hands and knees and begs.
[02:56:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:56:07] <pyzozord> but it makes sense. if I'm going to be coding for the redt of my life which is hopefully at least 30 more years. Then it makes sense to write my own tool and make it work exactly how I want
[02:56:25] *** Quits: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:56:26] <pyzozord> redt=rest
[02:56:26] <kveroneau> I wrote a Todo List app for my own personal purposes, and don't expect anybody else to use it, but I did share the code onto my GitHub in-case anybody else did want to use it.
[02:56:55] <pyzozord> i deleted my GitHub
[02:57:02] * kveroneau gasps
[02:57:10] <pyzozord> LinkedIn too
[02:57:16] * kveroneau faints
[02:57:36] <pyzozord> that one was more scary because i had a very strong profile that landed me few jobs
[02:58:10] <pyzozord> but I found the best job yet recently without LinkedIn pr GitHub, so meh
[02:58:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[02:58:52] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:58:56] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:58:57] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:59:02] <pyzozord> social media is for social people. I am by enlarge antisocial :P
[02:59:15] <pyzozord> or social-once-every-blue-moon
[03:00:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:01:21] <kveroneau> I can fully understand that.  I do on my social "spurts" from time to time, but mostly just like staying home these cold winter days coding, and playing the odd video game.
[03:01:34] <kveroneau> s/do/go/
[03:01:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:02:39] <kveroneau> I don't really "socialize" on LinkedIn though.  It's just kinda there.  I rarely even open LinkedIn.
[03:03:13] <kveroneau> GitHub was never a social media platform, it's common place to share code which Microsoft owns.
[03:03:24] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e) (Quit: Lost terminal)
[03:03:27] <gry> i self host cgit instead
[03:03:47] <wildo> I always thought LinkedIn as a self-mastrubation platform. 
[03:03:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e)
[03:04:08] <wildo> Look what I did or look what I accomplished - now clap everybody. 
[03:04:34] <maxzor_> "but please don't dislike that shitpost. Matter of fact you can't."
[03:04:47] <kveroneau> That's not a bad idea.  If I am the only one going to use a specific codebase, and I never plan to share it with the world, then I just use a Subversion server I set-up.  I find Subversion is better suited for private repos that I will never collaborate with others on.
[03:05:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:05:36] <kveroneau> Subversion is extremely lightweight, and it's super easy to create and maintain repos on a private server.
[03:05:50] <mspe> I find git way easier
[03:05:59] <kveroneau> To each their own.
[03:06:43] <kveroneau> I don't care for a web interface for my private repos either.
[03:06:54] <oldlaptop> git and the other DVCSes don't require a server of any kind whatsoever
[03:07:01] <mspe> kveroneau: that, I agree
[03:07:16] <oldlaptop> (although fossil comes with its server in the same binary)
[03:07:25] <mspe> oldlaptop: that's why I preferred git over svn for private stuff
[03:07:40] <kveroneau> Subversion doesn't run a server, it's a misconception.
[03:07:49] <mspe> never tried fossil though, even if I read a lot about it
[03:07:58] <kveroneau> It can be pulled over ssh+svn:// protocol easily.
[03:08:02] *** Quits: newpy (~newpy@pool-74-101-15-126.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[03:08:23] <oldlaptop> kveroneau: "of any kind whatsoever"
[03:08:26] <kveroneau> No special "SVN" server software is persistently running on my server.
[03:08:39] <oldlaptop> there need not exist a server, at all, of any kind, anywhere
[03:09:00] <kveroneau> All that's needed for my repos is good old SSH :)
[03:09:09] <mspe> kveroneau: you mean that all these years businesses bullshitted us with annoying useless http frontends for no reason? oO
[03:09:23] <kveroneau> Yup! haha
[03:09:25] <oldlaptop> the DVCSes *do not even need an ssh server*
[03:09:35] <pyzozord> I'm honestly less and less interested in bettering my work programming skills and more and more going off on my own programming path. Studying things that interest me and writing Mt own tools
[03:09:36] <mspe> kveroneau: ok, you blew my mind
[03:10:00] <kveroneau> Then how do you pull remote repos without even an ssh server?
[03:10:19] <KillerWasp> buuuuuh, They told me that PHP and JS served to brag, that it served to attract girls they told me! They are liars!!
[03:10:38] <oldlaptop> For private repositories, one need not "pull" anything from anywhere, because nothing needs to be remote, because it's private.
[03:10:47] <jkk> exactly
[03:11:10] <pyzozord> i have local git repos that i upload to dropbox. I wrote a small tool on python that uses incremental archives in gnu tar and then uploads them
[03:11:16] <kveroneau> mspe, yeah, that's what I was saying, Subversion is really extremely lightweight when it comes down it, and for a single dev, it works really well.  Never a need to do a specific "push" action, a "svn commit -m ..." will push.
[03:11:20] <mspe> I used to play a lot simulating repos with just local “remote” urls
[03:11:23] <mspe> works fine
[03:12:09] <oldlaptop> There fundamentally *is* no distinction between "client" or "server" for the DVCSes, you have a repository, and there may exist some other repository somewhere you synchronize yours with
[03:12:16] <oldlaptop> or there might not
[03:12:27] <mspe> yeah, basically
[03:12:47] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:7557:fe28:3fc1:cd8)
[03:12:56] <kveroneau> Also, with SVN, it works better on low storage devices if needed, whereas Git will clone the entire repo with all history.  I guess, it's nice to have all history, but sometimes you don't want to download all that.
[03:13:17] * oldlaptop marvels at the power of deliberate point-missing
[03:13:44] <mspe> I prefer full history, I had too many network issues preventing me from accessing some branch I didn't have locally
[03:14:04] <pyzozord> i know git is distributed but I'm still not sure how git servers work
[03:14:17] <kveroneau> Ah, then Git is best for your use-case. :)
[03:14:48] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:15:04] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Quit: Leaving)
[03:15:09] <mspe> also it makes fetch&push the only 2 commands involving network
[03:15:12] <oldlaptop> pyzozord: They are very little more than file and/or shell servers, when the remote host has any specific "git server" software at all
[03:15:19] <pyzozord> but git is
[03:15:26] *** Fauto_ is now known as Fausto
[03:15:37] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:7557:fe28:3fc1:cd8) (Ping timeout: 240 seconds)
[03:15:41] <pyzozord> meh. i think most can be done with diff tool and few bash scripts
[03:15:55] <oldlaptop> the "server" is just another repository somewhere, and to synchronize with it, all you need is read and/or write access to the files that back it
[03:15:57] *** Joins: BorgoMatic (~KC0LR@136.32.12.209)
[03:15:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[03:16:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:16:57] *** Quits: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:7557:fe28:3fc1:cd8) (Ping timeout: 240 seconds)
[03:17:28] <pyzozord> hmm i guess sshd is used somehow to connect to local git binary directly and local git binary just talks to remote hit binary
[03:17:33] <oldlaptop> the usual flow for ssh clones/pushes does involve calling utility workers to process git's goofy packed formats and such things on the remote end
[03:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:18:05] <mspe> the extra software server-side are just for bonus fancy stuff like merge-requests, code-review, branches protections, etc.
[03:18:40] *** Joins: rexar89_ (~Kenroy@216.48.99.2)
[03:18:41] <oldlaptop> on pyzozord's desktop, git opens an ssh connection to pyzozord's ssh server, and executes shell commands, some of which are git commands (git send-pack, git recieve-pack, things like that)
[03:18:43] <kveroneau> Yup, the essential web front-ends to Git.
[03:19:03] <oldlaptop> "git servers" often also have some web nonsense, but do not need it
[03:20:10] <oldlaptop> (fossil kind of does require the web stuff owing to how it works, though in fossil's case it's all built in - including stuff like the issue tracker and forums)
[03:20:17] *** Joins: rexv (~Kenroy@216.48.99.2)
[03:21:17] *** Quits: rexar89 (~Kenroy@216.48.99.2) (Ping timeout: 240 seconds)
[03:21:27] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:23:12] <oldlaptop> incidentally, one way of providing a read-only "git server" (meaning publishing a copy of a repository such that others can synchronize with it) is to simply plunk the entire .git directory under a boring static HTTP server's document tree. (Probably name it something other than .git. Probably also plunk it in there by push-ing to a bare repo than by doing cp -R .git /wherever/htdocs/foo.git, but cp -R would work.)
[03:23:32] *** Quits: rexar89_ (~Kenroy@216.48.99.2) (Ping timeout: 268 seconds)
[03:28:24] <mspe> ↑ I thought so, you have to configure somethign specific so some specific command can be run
[03:28:37] <mspe> I don't remember exactly but it annoyed me very much
[03:29:00] <mspe> otherwise the clone wouldn't go through
[03:29:14] *** Joins: pavonia (~user@user/siracusa)
[03:30:34] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[03:30:49] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[03:31:09] *** Joins: newpy (~newpy@pool-74-101-15-126.nycmny.fios.verizon.net)
[03:31:53] <oldlaptop> The ordinary ssh:// URL requires the same git "client" software be installed, if that's what you mean
[03:32:07] <oldlaptop> (and accessible to the shell user, obviously)
[03:32:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:32:41] <oldlaptop> ISTR there is sftp:// support in some way as well that does not require git on the remote side.
[03:32:54] <oldlaptop> (and obviously a plain HTTP server requires a plain HTTP server)
[03:33:01] *** Quits: blueteeth (~blueteeth@185.111.74.14) (Ping timeout: 240 seconds)
[03:34:48] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:40:03] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:42:40] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:43:05] *** Quits: Djoobstil (~djoobstil@144.91.111.212) (Quit: Djoobstil)
[03:43:17] *** Quits: _inky (~inky_@46.36.117.221) (Ping timeout: 240 seconds)
[03:43:19] *** Joins: Djoobstil (~djoobstil@djoobstil.online)
[03:43:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:44:20] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:47:39] <BurumaSerafuku> You'll pay ten bucks to see me
[03:47:39] <BurumaSerafuku> On a fifteen foot high stage
[03:47:39] <BurumaSerafuku> Fatass bouncers kick the shit
[03:47:39] <BurumaSerafuku> Out of kids who try to dance
[03:48:19] *** Joins: maxzor (~maxzor@2a01cb04054faa0029a0dff1d49b32a3.ipv6.abo.wanadoo.fr)
[03:48:35] *** Joins: stackstat (~stackstat@pool-98-116-81-186.nycmny.fios.verizon.net)
[03:48:35] *** Quits: maxzor (~maxzor@2a01cb04054faa0029a0dff1d49b32a3.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:48:59] *** Joins: maxzor (~maxzor@2a01cb04054faa0029a0dff1d49b32a3.ipv6.abo.wanadoo.fr)
[03:49:03] *** Quits: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu) (Remote host closed the connection)
[03:49:33] <jkk> :)
[03:50:47] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[03:51:08] *** Quits: maxzor_ (~maxzor@2a01cb04054faa005a6f4a80d6cc1e0f.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:51:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:51:54] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 268 seconds)
[03:52:17] *** Joins: Teckla (~Teckla@user/teckla)
[03:53:18] *** Quits: txhc4lif- (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[03:53:36] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[03:53:39] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[03:55:06] <jkk> hi amigojapan 
[03:55:22] <jkk> amigojapan, do you know much about zaibatsu ?
[03:59:14] <amigojapan> Sorry jkk I don't
[03:59:40] <amigojapan> Jkk I could ask my wife of she knows
[04:00:16] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:05:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[04:07:01] *** Quits: stagas (~stagas@2a02:587:c424:d1a:10f:49be:e6ce:9a78) (Ping timeout: 245 seconds)
[04:07:19] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:12:09] *** Joins: xsperry (~xs@user/xsperry)
[04:13:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:14:03] *** Joins: rickybob (~rickybob@35.143.255.39)
[04:14:28] *** Joins: rickybobby (~rickybob@gateway/vpn/pia/rickybob)
[04:15:14] *** Joins: blueteeth (~blueteeth@185.111.74.14)
[04:17:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:19:02] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 268 seconds)
[04:20:02] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:21:55] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:30:05] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:31:43] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:35] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:06] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[04:34:44] *** Quits: blueteeth (~blueteeth@185.111.74.14) (Quit: WeeChat 3.4)
[04:35:28] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[04:35:47] <[itchyjunk]> sonny, my venv is using py3.6
[04:35:53] <[itchyjunk]> i have py3.9
[04:35:59] <[itchyjunk]> i need venv with 3.9
[04:36:04] <[itchyjunk]> but when i create a new one, it fails
[04:36:45] <sonny> py3.6 is on your system somewhere?
[04:36:52] <[itchyjunk]> yes
[04:36:57] <[itchyjunk]> ubuntu 18.04, came with it
[04:37:06] <[itchyjunk]> the py3.6 venv works, that is what i was using
[04:37:13] <[itchyjunk]> but i need from __future__ import annotations
[04:37:18] <[itchyjunk]> to make my linked list work the way i want
[04:37:23] <[itchyjunk]> but for that i need newer py
[04:37:29] <[itchyjunk]> i have py3.9 which is good enough
[04:37:34] <[itchyjunk]> but i can't get pycharm to work with it
[04:37:52] <[itchyjunk]> someone recommended learning anaconda but idk wtf that is either
[04:38:09] <[itchyjunk]> pycharm sees the py3.9
[04:38:15] <[itchyjunk]> just fails to create a venv
[04:38:30] <[itchyjunk]> "Failed to create virtual environment"
[04:38:35] <[itchyjunk]> this is all it says, no detail
[04:39:16] *** Quits: rickybobby (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[04:39:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:40:53] <sonny> hmm
[04:41:28] <sonny> py3.9 is from pycharm? or installed by you?
[04:42:43] <smallville7123> hai
[04:42:49] <[itchyjunk]> i dont remember
[04:42:56] <sonny> #python has a lot of experts btw
[04:43:24] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[04:43:39] <sonny> launch pycharm from ~ and see if you get the same error, sounds like a permission thing
[04:43:56] <sonny> oh wait, how did you install it?
[04:46:21] <[itchyjunk]> what does it mean it launch it from ~
[04:46:34] <[itchyjunk]> i don't remember how i installed anything, either apt or pip3 though
[04:46:38] <[itchyjunk]> that's how i generally install things
[04:47:24] <sonny> ok
[04:47:27] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:47:52] <sonny> launch from ~ means: $ cd ~; ./pycharm
[04:48:14] <sonny> ~ is your home directory
[04:48:43] <[itchyjunk]> i installed some weird packaeg based on some shady internet comment
[04:48:48] <[itchyjunk]> let me see if that fixes it
[04:49:13] <sonny> lol
[04:50:30] <[itchyjunk]> lmfao
[04:50:33] <[itchyjunk]> that actually worked
[04:51:01] <sonny> nice
[04:51:33] <InPhase> [itchyjunk]: Whatever you do, don't confirm when it suggests it's going to uninstall your entire graphical interface.  ;)
[04:51:36] <[itchyjunk]> I asked how to change my username in ubuntu 18.04 in #ubuntu and i got the classic dId yOu gOgGlE iT?
[04:51:49] <[itchyjunk]> then he tells me to edit /etc/shadow or someshit
[04:51:57] <[itchyjunk]> then he tells me probably better to use some utility
[04:51:58] <flakland> /etc/passwd
[04:52:05] <[itchyjunk]> what utility though? fucker
[04:52:12] <[itchyjunk]> if i knew what utility to use, i wouldn't be asking
[04:52:21] <[itchyjunk]> gui is a crutch anyways
[04:52:32] *** Joins: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net)
[04:52:36] <[itchyjunk]> created by government to control us
[04:53:10] <[itchyjunk]> I'll try ##linux tomorrow i guess
[04:53:16] <InPhase> [itchyjunk]: Well there's usermod...
[04:53:27] <flakland> shadow is for passwords, weird naming i kno
[04:53:32] <InPhase> [itchyjunk]: Or you can just edit /etc/passwd with a text editor.  It's not rocket science.
[04:54:01] <oldlaptop> [itchyjunk]: see the -l option: https://manpages.debian.org/bullseye/passwd/usermod.8.en.html
[04:54:03] <bayaz> Title: usermod(8) — passwd — Debian bullseye — Debian Manpages 
[04:54:04] <InPhase> And /etc/shadow.
[04:54:10] <[itchyjunk]> InPhase, i saw the usermod thing but it told me to log out of user and drop into terminal and do stuff
[04:54:16] <[itchyjunk]> is there no GUI way of doing it?
[04:54:30] <oldlaptop> I would be surprised if ubuntu has such a thing.
[04:54:33] <[itchyjunk]> also, it warned that usermod doesn't change the names of home directory so i'd have to do few more stuff
[04:54:39] <oldlaptop> Yes indeed.
[04:54:42] <InPhase> [itchyjunk]: Correct.
[04:54:48] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[04:54:53] <[itchyjunk]> Oh.. i thought changing username would be like click a gui and type a new name and it's all good :(
[04:54:58] <InPhase> [itchyjunk]: Changing the home directory can disrupt more than you might want to deal with.
[04:55:03] <jkk> yes some 'gov' put a lot of effort in spying
[04:55:04] <[itchyjunk]> ah..
[04:55:08] *** Quits: stackstat (~stackstat@pool-98-116-81-186.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:55:09] <jkk> esp fingerprinting
[04:55:10] <[itchyjunk]> surprising
[04:55:21] <InPhase> [itchyjunk]: LOTS of programs hard code paths into the home directory when they set themselves up.  For example, many python environments.
[04:55:26] <[itchyjunk]> thought it was something people would do all the time, like changing irc nick
[04:55:34] <[itchyjunk]> ahh
[04:55:35] <oldlaptop> It's not
[04:55:42] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[04:55:43] <[itchyjunk]> TIL, i guess
[04:55:46] <oldlaptop> (for that matter changing IRC nick isn't something people do all the time, not really)
[04:56:03] <[itchyjunk]> I do it billions of times per second
[04:56:09] <[itchyjunk]> i happens so fast, you generally don't notice
[04:56:15] <oldlaptop> SUSE's YaST probably has UI for that, though I wouldn't remember that offhand.
[04:56:30] <sonny> there is a gui method, under settings in gnome or kde
[04:56:43] <sonny> but it's only for your user, not a general interface
[04:56:49] <[itchyjunk]> sonny, that changed my root user name or such
[04:56:52] <[itchyjunk]> but nothing really changed
[04:57:04] <oldlaptop> (Windows "power users" may find SUSE a better way to learn simply because of YaST.)
[04:57:06] <[itchyjunk]> enter password for "new root name here" is the only difference i notice
[04:57:18] <sonny> why change root name lol
[04:57:32] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157) (Ping timeout: 240 seconds)
[04:57:33] <[itchyjunk]> i set this computer up for someone else initially
[04:57:39] <oldlaptop> but of course using something like YaST necessarily limits what you will learn about Linux and UNIX, as opposed to what you learn about YaST.
[04:57:43] <[itchyjunk]> but they gave it to me and bought a new one after some time
[04:57:53] <[itchyjunk]> so it has their name and such as user
[04:58:00] <sonny> how is that related to root?
[04:58:04] <[itchyjunk]> and it's annoying for me because it pops up in paste and such
[04:58:06] <[itchyjunk]> root user
[04:58:10] <sonny> ah no
[04:58:12] <[itchyjunk]> not literal `root`
[04:58:16] <oldlaptop> Changing the "display" name is less complicated than changing logins.
[04:58:24] <sonny> yeah, that's bad terminology
[04:58:29] <sonny> root is a well known user
[04:58:47] <[itchyjunk]> it goes "make a root user" during setup pretty sure or somesuch
[04:58:57] <[itchyjunk]> in anycase, i guess i am stuck with this setup for now
[04:58:59] <[itchyjunk]> and thats fine
[04:59:06] <sonny> stuck with what?
[04:59:06] <[itchyjunk]> at least i got this even bs figured out
[04:59:17] <sonny> username change is right in settings ...
[04:59:21] <[itchyjunk]> stuck with home folder being called something other than what i want to be called
[04:59:23] <oldlaptop> If ubuntu describes that in such a way as to confuse your user with "root", that is indeed a pretty nasty thing to do.
[04:59:26] <[itchyjunk]> it doesn't change shit, brah
[04:59:29] <[itchyjunk]> i've tried it
[04:59:31] <sonny> oh
[04:59:42] <oldlaptop> It changes your display name.
[04:59:45] <sonny> yeah, that is just linux being unix
[05:00:04] <sonny> you have to update that info with another tool, command line required
[05:00:20] <[itchyjunk]> yeah can't risk breaking my only functional machine
[05:00:25] <[itchyjunk]> so i am stuck with this setup
[05:00:30] <sonny> afk
[05:03:19] <jkk> the more I chat here the more it seems that most us and especially canada and eu based developers are anti human Xd
[05:03:20] <jkk> its ok
[05:03:25] <jkk> at least it is clear
[05:03:52] <apotheon> jkk: What's the common factor in all these interactions?
[05:04:13] <flakland> lol
[05:04:29] <flakland> XD
[05:04:36] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 240 seconds)
[05:07:01] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:11:18] <KillerWasp> hello flatland
[05:11:36] <flakland> yo wasperino
[05:12:04] <KillerWasp> *GASP*! don't callme wasperino!! DDDDx
[05:12:38] <jkk> very soon huge waves will wipe out most geeks Xd
[05:12:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:13:00] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[05:13:15] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[05:13:16] <flakland> the waves will be slow and easy to evade at least
[05:13:30] <KillerWasp> jkk: impossible! Geeks have bunkers!
[05:13:44] <jkk> very possible
[05:14:03] *** Joins: frost (~frost@user/frost)
[05:14:05] <jkk> plus funny thing is geeks only knew who runs 'govs'
[05:14:07] <jkk> if
[05:14:27] <KillerWasp> who's govs??
[05:14:36] <jkk> well its well known right
[05:14:38] <flakland> the govn'a
[05:15:06] <KillerWasp> i guess govs is santa.
[05:15:10] <jkk> do you know that diana husband for example had a male 'lover' lol
[05:15:32] <jkk> who used to sell knighthoods for cash :P
[05:15:33] <flakland> diana ross?
[05:15:36] <apotheon> So what?
[05:15:41] <jkk> diana from uk
[05:15:43] <apotheon> flakland: nice
[05:15:46] <jkk> :P
[05:16:05] <jkk> and he killed her becouse she busted him with it Xd
[05:16:14] <jkk> ahaha
[05:16:27] <jkk> its ok flakland if you like to kill people
[05:16:33] <apotheon> I'm sure you have all the proof you need, too.  Maybe you can get that published in the Enquirer.
[05:16:35] <jkk> cause tjey are cool
[05:16:43] <KillerWasp> bah, pure offtopic here...
[05:16:51] <apotheon> KillerWasp: hi
[05:16:55] <KillerWasp> apotheon: hi
[05:16:58] <flakland> tru but when is jkk ever on-toipic
[05:17:01] <apotheon> How's ig going?
[05:17:09] <Square> Anyone know of a query-able object database that isnt just .json but have proper types? 
[05:17:29] <KillerWasp> jkk: always is offtopic, but by complex math, are in ontopic here.
[05:17:32] <Decker> mongo?
[05:17:48] <KillerWasp> jkk always in offtopic*
[05:17:50] <Square> query-able is reduntant i guess 
[05:17:58] <Square> Decker, doesnt everybody hate mongo?
[05:18:04] <Decker> ya
[05:18:13] <[itchyjunk]> someone say math?
[05:18:20] <KillerWasp> [itchyjunk]: me
[05:18:27] <[itchyjunk]> isn't sql also a data structure?
[05:18:32] <[itchyjunk]> or something like that?
[05:18:37] <apotheon> Square: https://en.wikipedia.org/wiki/Comparison_of_object_database_management_systems
[05:18:38] <bayaz> Title: Comparison of object database management systems - Wikipedia 
[05:19:30] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Ping timeout: 256 seconds)
[05:19:47] <KillerWasp> in youtube you can found a nice gazelle eating a tiger.
[05:20:20] <Square> sql requires so much quirks to actually map proper object to them. Ive solved this problem with tree like sql tables. But yeah, comes with tradeoffs. And would explode in the amount of tables for many object types
[05:20:42] <Square> apotheon, thanks
[05:20:52] * KillerWasp get a WARNING: PURE OFFTOPIC
[05:20:58] <arahael> Square: Depends on the variant and the way you're doing the mapping.  In some, like postgresql, you can map pretty directly if you want.
[05:21:25] <Decker> *shrug*  I find SQL results map quite well to objects and even contain their own type information
[05:21:28] <apotheon> Square: glad to help
[05:21:48] <arahael> Decker: Same, The main problem is when people want to do 'inheritance'.
[05:21:57] <arahael> Which I think is making it unneccessarily complex.
[05:22:00] <Square> arahael, what features does postgres have to accomodate that. That normal sql dbs dont have? 
[05:22:20] <arahael> Square: Native b-tree data structures, native json formats, custom (arbitrary) types, etc.
[05:22:41] <arahael> Square: Oh, and it's object-relational, though that's more in terms of table schema rather than table values.
[05:23:06] <apotheon> Yeah, PostgreSQL is pretty nice.
[05:23:51] <apotheon> I'd be inclined to just go object-relational with PostgreSQL.
[05:23:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[05:24:46] <arahael> I feel it's making it overly complex, though.  The majority of use cases can be expressed perfectly and clearly with boring old relations.
[05:27:30] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 268 seconds)
[05:29:19] <Square> arahael, i know mysql/mariadb has some json support. I got the impression its *fair* storing the json (still just text) but not so great querying it
[05:29:50] <arahael> Square: It's not just text in pg, it's practically a first class citizen there.
[05:29:59] <Square> Cool
[05:30:31] <Decker> sqlite inerherited that too
[05:30:39] <apotheon> Yeah, PostgreSQL is *much* better for that than anything MySQLish.
[05:31:13] <apotheon> . . . and Decker beat me to pointing out that even SQLite is better at it than anything MySQLish.
[05:31:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:31:24] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[05:31:59] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[05:32:03] <[itchyjunk]> tf is this?
[05:32:05] <[itchyjunk]> https://www.cs.yale.edu/homes/hudak/Papers/HSoM.pdf
[05:32:05] <bayaz> Type: application/pdf Size: 2.4 MB 
[05:32:21] <jkk> apotheon, it's a well know fact https://www.dailymail.co.uk/news/article-10225321/Cash-honours-scandal-probe-brought-Charless-closest-ally-complete.html
[05:32:22] <bayaz> Title: Cash-for-honours scandal probe that brought down Charles's ally 
[05:32:33] <jkk> that ally is his 'bf' Xd
[05:32:46] <apotheon> okay
[05:32:49] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786)
[05:32:54] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:33:07] <jkk> most people in UK have very little illusions as to what 'gov' is
[05:34:43] <[itchyjunk]> Hm, do you guys use that substack thing? if so, how do you navigate it?
[05:35:04] <flakland> push/pop !
[05:36:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:38:17] *** Quits: Kev_ (~Kev@2a01cb0400149f00541631b2d06f6e60.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:40:22] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:41:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[05:41:50] *** Quits: LjL (~ljl@user/ljl) (Read error: Connection reset by peer)
[05:42:26] <apotheon> [itchyjunk]: By the way, that looks like a PDF.
[05:42:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:42:38] <apotheon> (re: "tf is this")
[05:42:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:42:50] <[itchyjunk]> well its a book
[05:42:52] <[itchyjunk]> for a course
[05:43:00] <[itchyjunk]> but it all looks for fancy and advanced
[05:43:07] *** Joins: LjL (~ljl@user/ljl)
[05:45:05] <KillerWasp> push/pop is a tool of god.
[05:45:24] <KillerWasp> You can control the world!
[05:46:08] <KillerWasp> or virtual world...
[05:46:11] *** Quits: Pook (~Pook@2001:8a0:f996:1400:8110:cdd5:5f21:6ca9) (Quit: Leaving)
[05:46:19] <KillerWasp> of your virtual life...
[05:46:28] <KillerWasp> because all is a lie...
[05:46:36] <apotheon> Forth, much?
[05:46:37] <KillerWasp> time to sleep, good night...
[05:46:39] <KillerWasp> :)
[05:46:45] <apotheon> g'night
[05:48:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:52:45] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:00:26] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[06:00:26] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[06:02:22] *** Joins: Teckla (~Teckla@user/teckla)
[06:02:37] *** Joins: zaher_ (~zaher@188.229.249.68)
[06:05:37] *** Quits: zaher (~zaher@37.48.146.99) (Ping timeout: 240 seconds)
[06:06:23] *** Quits: src (~src@user/src) (Quit: Leaving)
[06:06:47] *** Joins: src (~src@user/src)
[06:07:01] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:07:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:08:14] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[06:08:14] *** brabrax_ is now known as brabrax
[06:08:42] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[06:10:50] *** Joins: junebug (~junebug@2600:1700:3db0:2540:16cd:c838:8c04:4dc4)
[06:11:16] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Ping timeout: 268 seconds)
[06:12:24] *** Joins: squidrin (~squidrin@75.165.136.107)
[06:13:57] <maxzor> Is this a normal ratio for a project? c++ 2 735 999 cmake 46 450 ... For 50 c++ lines, there is 1 line of cmake.
[06:14:45] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[06:14:51] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[06:16:22] *** Joins: Jong (~Jong@2620:10d:c090:400::5:a269)
[06:16:44] *** Jigsy` is now known as Jigsy
[06:18:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:16cd:c838:8c04:4dc4) (Ping timeout: 240 seconds)
[06:20:22] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[06:21:37] <PlanckWalk> I gave up on the possibility of cmake ever beign any good more than a decade ago, so I don't know.
[06:21:54] <PlanckWalk> That ratio does not look good for projects in general, though.
[06:22:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[06:22:37] * PlanckWalk checks the most recent decent-sized project ...
[06:22:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6e53:addd:369e:e979)
[06:23:27] <PlanckWalk> Hmm, looks like ~400 lines of build/test config for ~300k lines of code.
[06:23:30] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[06:23:54] *** Joins: Jigsy (~Jigsy@user/jigsy)
[06:23:56] <maxzor> y 1% on normal project
[06:24:07] *** Quits: kveroneau (~kveroneau@node1.veroneau.net) (Quit: Follow my Nick on Twitter and YouTube!)
[06:24:13] <maxzor> those guys are 2% are spitting too much config
[06:24:40] <maxzor> ah 1/1000 lol
[06:24:44] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:25:05] <PlanckWalk> I don't know if cmake does test config as well.  The build config alone would be < 100 lines.
[06:25:05] <maxzor> llvm is 1%
[06:25:31] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:25:53] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[06:27:18] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:27:20] *** Quits: xff0x (~xff0x@2001:1a81:53d2:9000:941d:3a25:9fc5:6e77) (Ping timeout: 252 seconds)
[06:27:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[06:29:21] *** Joins: xff0x (~xff0x@2001:1a81:5214:2e00:5b16:4ef1:d67d:4f66)
[06:30:17] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[06:30:30] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:30:52] *** Quits: zaher_ (~zaher@188.229.249.68) (Read error: Connection reset by peer)
[06:31:17] *** Joins: zaher_ (~zaher@188.229.249.68)
[06:33:22] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2c53:f3e6:ebd:1d0e) (Ping timeout: 260 seconds)
[06:34:43] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:37:26] *** Quits: squidrin (~squidrin@75.165.136.107) (Quit: Leaving)
[06:39:52] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ab00:3631:96fa:4872)
[06:44:35] *** Joins: dead1 (~dead@user/dead1)
[06:45:28] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:45:40] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[06:46:11] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:54:43] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:00:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:02:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[07:09:12] *** Joins: audiobirb (~audio@user/audio)
[07:10:17] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[07:10:47] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:11:07] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[07:12:55] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:16:06] <Jong> Does anyone here think they've mastered being as productive on a macbook laptop as on a dual-monitor desktop ?
[07:19:01] <sonny> what's the relation?
[07:19:06] <flakland> nah those keyboards on the macbooks are rather pathetic
[07:19:40] <flakland> i'd rather have an old clunky IBM era thinkpad
[07:21:47] <Trashlord> I haven't. Because I've never even used a dual monitor desktop
[07:23:42] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:c8c6:e8a3:3411:7416)
[07:24:22] *** Joins: zaher__ (~zaher@37.48.144.139)
[07:25:21] <InPhase> Jong: A dual-monitor setup does not make me more productive.  But avoiding using a macbook makes me more productive.  :)
[07:25:54] <Jong> too late for me to switch
[07:26:19] <dodo> sell macbook, buy two monitors
[07:26:23] <InPhase> Jong: With a good Linux laptop, with good keyboard shortcuts setup and a multiple virtual desktop arrangement, I'm at peak productivity.
[07:26:54] <Jong> I use virtual desktops on Apple's BigSur OS
[07:26:56] <InPhase> Jong: Virtual desktops attached to shortcuts basically give you everthing a dual monitor setup would provide.
[07:27:08] <InPhase> Provided your system can switch between them rapidly.
[07:27:17] <InPhase> (Turn off any transition effects.)
[07:27:19] <Jong> it's a 4 finger swipe for me
[07:27:50] <InPhase> Well if you setup 6 or so of them, with different shortcuts for each, then it's like having 6 monitors.
[07:28:02] <InPhase> Except without the kink in your neck.
[07:28:08] *** Quits: zaher_ (~zaher@188.229.249.68) (Ping timeout: 256 seconds)
[07:31:05] <EdFletcher> Jong: Mac virtual desktops also have a keyboard shortcut, alt+Apple+arrows IIRC (not using mine right now) 
[07:32:04] <Jong> If only I could turn off or speed up the motion effects
[07:32:20] <Jong> I tried to by following some online tutorial but it didn't work
[07:32:30] <Jong> I couldn't find anything that worked with Big Sur
[07:33:21] <flakland> the old powerbooks are nice at least
[07:35:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:36:02] <flakland> https://upload.wikimedia.org/wikipedia/commons/1/1f/Powerbook_150.jpg
[07:36:02] <bayaz> Type: image/jpeg Size: 176.5 kB 
[07:37:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[07:39:14] <flakland> and don't forget the powerbook 5300 saved us from that alien invasion  https://www.cultofmac.com/443297/today-in-apple-history-meet-the-world-saving-powerbook-5300/
[07:39:15] <bayaz> Title: Today in Apple history: Meet the 'world-saving' PowerBook 5300 
[07:40:06] *** Quits: BorgoMatic (~KC0LR@136.32.12.209) (Ping timeout: 260 seconds)
[07:41:23] *** Joins: loganlee (~Thunderbi@user/loganlee)
[07:43:14] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:45:02] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[07:45:34] <flakland> actually wait no, WHY IS THE M KEY NEXT TO L !?
[07:47:00] *** Joins: Akiva (~Akiva@user/Akiva)
[07:47:11] <flakland> were they trying to change standard keyboar layout, wtf is this?? https://upload.wikimedia.org/wikipedia/commons/e/e1/Powebook5300cs.jpg
[07:47:11] <bayaz> Type: image/jpeg Size: 653.1 kB 
[07:49:31] <flakland> i think someone on wikipedia is just trying to prank me and swapped the keys around
[07:54:06] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[07:57:36] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[08:06:04] *** Quits: jkk (~jkk@213.180.39.162) (Quit: Leaving)
[08:06:38] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:06:51] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:09:11] <oldlaptop> AZERTY is a standard keyboard layout in some places.
[08:09:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:09:42] <oldlaptop> In one of them, PowerBooks say "Demarrage en cours..."
[08:10:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:11:39] <flakland> of course oldlaptop would know
[08:11:58] <flakland> yeah wiki says apple had that layout for france/belgium
[08:12:56] <smallville7123> what am i doing wrong here? https://gist.github.com/mgood7123/429fbb2e15c3a1577e1891720f193238
[08:12:57] <bayaz> Title: gist:429fbb2e15c3a1577e1891720f193238 
[08:16:39] <flakland> it's hard to say smallville7123
[08:18:58] <flakland> can you distill the code down to exactly what is causing the issue?
[08:19:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:19:13] <flakland> with some kind of description of the problem
[08:21:19] <flakland> and what is st/sc supposed to mean?
[08:21:28] <flakland> and pack
[08:21:59] <flakland> st is start and sc is ?
[08:22:10] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:c8c6:e8a3:3411:7416) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[08:28:11] *** Quits: maxzor (~maxzor@2a01cb04054faa0029a0dff1d49b32a3.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[08:28:16] <flakland> pack-len ?  what are these values supposed to be
[08:28:34] *** Joins: Gentpup (~Gentpup@217.75.212.43)
[08:29:49] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[08:30:03] <flakland> and how is length = 10
[08:31:56] <flakland> are those 3byte unicode chars and you are assuming they are  4 bytes?
[08:34:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:34:53] *** Quits: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:35:36] <smallville7123> sorry i was in #C++
[08:36:14] <smallville7123> st is the start position for extracting the hex string, eg f0, 9f, 8d, 8e
[08:36:21] <smallville7123> sc is the position of the carrot
[08:36:57] <smallville7123> pack is the packing length of the parsed unicode sequence
[08:37:02] <flakland> whats up with the unicode chars?
[08:37:04] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[08:37:12] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[08:37:27] <smallville7123> eg 🍎 is made up of 4 unicode byte sequences
[08:37:38] <smallville7123> and so is 🍌
[08:37:39] <flakland> it's 3bytes in my browser
[08:38:17] <flakland> in the raw text file
[08:38:29] <smallville7123> not according to https://www.fileformat.info/info/unicode/char/1f34e/index.htm
[08:38:41] <smallville7123> UTF-8 (hex) 	0xF0 0x9F 0x8D 0x8E (f09f8d8e)
[08:39:12] <flakland> damn i don't have that unicode stuff installed so i won't be of much help here, sorry
[08:39:20] <smallville7123> its ok lol
[08:39:22] <smallville7123> :)
[08:39:22] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[08:39:41] <smallville7123> and length is the total length in bytes
[08:39:41] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[08:41:03] <deniska> pyzozord: it's possible to multiply any a×b matrix by b×c matrix
[08:41:29] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[08:42:41] *** Joins: maxzor (~maxzor@2a01cb04054faa00b51889f1790ff5db.ipv6.abo.wanadoo.fr)
[08:42:48] *** Quits: maxzor (~maxzor@2a01cb04054faa00b51889f1790ff5db.ipv6.abo.wanadoo.fr) (Client Quit)
[08:42:48] *** Joins: ravan (~ravan@42.201.198.151)
[08:42:48] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[08:42:48] *** Joins: ravan (~ravan@user/ravan)
[08:43:51] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[08:44:16] *** Joins: ravan (~ravan@user/ravan)
[08:46:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:47:42] <smallville7123> flakland: https://gist.github.com/mgood7123/429fbb2e15c3a1577e1891720f193238 how about this?
[08:47:43] <bayaz> Title: gist:429fbb2e15c3a1577e1891720f193238 
[08:48:35] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:49:26] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[08:49:46] *** Joins: AsenMx (~AsenMx@user/asenmx)
[08:50:34] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 260 seconds)
[08:51:37] <smallville7123> how do i correctly compute my carrot position? https://gist.github.com/mgood7123/429fbb2e15c3a1577e1891720f193238
[08:51:38] <bayaz> Title: gist:429fbb2e15c3a1577e1891720f193238 
[08:53:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:57:21] <flakland> why isn't "current byte position" on the first one 0 ?
[08:57:52] <flakland> and why multiply by 4 ?
[09:03:50] <flakland> is this UTF32?
[09:05:36] <flakland> either way, the 1 and the 2 are only a single byte so *4 is very suspicious to me
[09:05:56] <flakland> in the raw file at least
[09:07:25] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6e53:addd:369e:e979) (Quit: Leaving)
[09:20:41] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Quit: Going offline, see ya! (www.adiirc.com))
[09:26:18] <smallville7123> back
[09:26:44] <smallville7123> flakland: current byte position is the current byte position of the input stream
[09:27:22] <smallville7123> flakland: to padd by the hex format "xx, " -> "xxxx"
[09:28:18] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:29:17] <flakland> none of this is obvious, still not sure what the problem is
[09:29:30] <flakland> couldn't the caret just be the current chars read?
[09:30:01] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:47] <flakland> or bytes read AND chars read
[09:31:15] <smallville7123> len?
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[09:31:41] *** Joins: mishugana (~mishugana@user/mishugana)
[09:31:43] <smallville7123> if we are at here
[09:31:46] <smallville7123>               source 🍎1🍌2
[09:31:46] <smallville7123>                         ^
[09:31:57] <flakland> not len because  it needs to be renamed
[09:32:00] <smallville7123> :( no monospace font for irc
[09:32:12] <flakland> which len, byte stream len, or string len
[09:33:07] <smallville7123> if we are at first byte of 🍌, then byte_seq_start_position is 5 and len is 4
[09:33:56] *** Joins: stagas (~stagas@2a02:587:c424:d1a:4f9c:a9f:3654:e1af)
[09:34:21] <smallville7123> we cannot subtract *byte_seq_start_position* from *len* since this yeilds 1, and in the case * byte_seq_start_position* is 0 it will yeild -4 or 4
[09:35:55] <smallville7123> and we know that pack - len is 0 as both are 4
[09:35:57] *** Joins: fling (~fling@user/fling)
[09:37:05] <flakland> OH you're trying to highlight / point at a specific char?
[09:37:25] <smallville7123> i wonder if it will be fixed if i simply use location.pack-len and just ignore the byte_seq_start_position ?
[09:37:32] <smallville7123> flakland: yea
[09:38:12] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[09:38:23] <flakland> you have to check the character width for the unicode code thing
[09:38:44] <smallville7123> and it does fix it
[09:38:49] <flakland> utf8 can be  1,2,3 or 4
[09:38:52] <smallville7123> std::size_t st = location.pack-len;
[09:39:10] <smallville7123> and NOT std::size_t st = location.byte_seq_start_position + (location.pack-len);
[09:39:20] <smallville7123> im stupid
[09:40:43] <smallville7123> "16:08:23 flakland: you have to check the character width for the unicode code thing" hmm ok
[09:41:14] <flakland> still though, the first one should just be 0
[09:41:32] <flakland> + whatever tabbing/padding which is static i'd assume
[09:43:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:45:02] <smallvil_> o.o       ﷽
[09:45:12] <flakland> step1) rename all of these variables
[09:45:50] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[09:45:51] *** Quits: soapsudsxx_ (~soapsudsx@209.221.40.139) (Remote host closed the connection)
[09:45:59] <flakland> none of it makes any sense its only going to hurt you debugging
[09:46:49] <flakland> char pos  jumps from 0 to 3
[09:46:54] <flakland> whyyy
[09:47:23] <flakland> and you have length, which is the BYTE length,   and another len which is ????? who knows
[09:47:51] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 245 seconds)
[09:48:24] <flakland> and why's history count starting at 8
[09:48:33] <flakland> then jumps to 10
[09:48:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:a269) (Ping timeout: 240 seconds)
[09:48:50] <flakland> if you rename this stuff someone might be able to help
[09:49:18] <flakland> pack is extremely nondescriptive as well
[09:50:22] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 256 seconds)
[09:50:22] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[09:50:42] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Quit: Quit)
[09:50:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:51:19] <smallvil_> rip my terminal cannot display the entire ﷽
[09:51:58] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:52:18] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[09:52:23] <smallvil_> it only displays https://imgur.com/a/dpNsIuQ
[09:55:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:57:59] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[10:00:57] *** Joins: python476 (~user@88.160.31.174)
[10:04:08] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[10:04:29] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[10:06:58] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:08:17] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[10:09:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[10:11:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:11:22] *** Joins: mishugana (~mishugana@user/mishugana)
[10:14:32] *** Joins: user51 (~user51@176.228.151.30)
[10:14:53] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Remote host closed the connection)
[10:16:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:17:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:21:17] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[10:21:29] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[10:24:57] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 240 seconds)
[10:25:40] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[10:29:13] *** Joins: toastloop (toastloop@user/toastloop)
[10:31:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:32:11] *** Joins: Pixi_ (~Pixi@user/pixi)
[10:33:26] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[10:33:35] *** Quits: Pixi_ (~Pixi@user/pixi) (Client Quit)
[10:34:35] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 268 seconds)
[10:34:53] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[10:35:36] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:37:17] *** Joins: thevishy (~Nishant@2405:201:f005:c007:48b2:97f1:a252:93a6)
[10:38:37] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:38:48] *** Joins: _inky (~inky_@46.36.117.221)
[10:44:29] *** Joins: Pixi (~Pixi@user/pixi)
[10:45:42] *** Joins: Intelo (~Intelo@88.244.89.107)
[10:48:54] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:49:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:04:08] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[11:05:44] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:06:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:07:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:07:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[11:07:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:07:39] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:07:56] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[11:10:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:11:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[11:12:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[11:12:39] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[11:15:37] *** Quits: python476 (~user@88.160.31.174) (Ping timeout: 240 seconds)
[11:16:33] *** Joins: Libero (~Libero@77.49.184.64.dsl.dyn.forthnet.gr)
[11:17:56] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:18:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:19:02] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[11:19:06] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[11:20:16] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[11:23:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:28:05] *** Quits: newpy (~newpy@pool-74-101-15-126.nycmny.fios.verizon.net) (Quit: Leaving)
[11:29:23] *** Joins: palasso (~palasso@user/palasso)
[11:31:32] *** Joins: absc (~absc@81.31.144.28)
[11:34:34] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:34:55] *** Joins: takyon (~takyon@242.53.168.109.cust.ip.kpnqwest.it)
[11:35:09] *** takyon is now known as machine56
[11:37:36] *** machine56 is now known as edantes
[11:37:58] *** Quits: edantes (~takyon@242.53.168.109.cust.ip.kpnqwest.it) (Client Quit)
[11:38:18] *** Joins: edantes (~edantes@242.53.168.109.cust.ip.kpnqwest.it)
[11:38:24] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.3)
[11:38:55] *** Quits: edantes (~edantes@242.53.168.109.cust.ip.kpnqwest.it) (Client Quit)
[11:39:25] *** Joins: mrig (~AdiIRC@user/mrig)
[11:39:28] *** Joins: edantes (~edantes@242.53.168.109.cust.ip.kpnqwest.it)
[11:39:30] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 260 seconds)
[11:40:22] <Matt|home> If i have a C struct and one of the struct elements (members?) is a smaller data type than a value im trying to assign it, what happens precisely? undefined behavior or will it just cram as much data as can fit into the element and ignore the rest?
[11:41:08] <Decker> well you'll need to do a cast otherwise there'd be a warning probably... but yes it usually truncates the top and leaves the low bit
[11:42:22] <Matt|home> hm. in that case there's a possibility that i'll get a false positive
[11:43:03] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[11:44:16] <Matt|home> in general when you're coding for two different architectures what's the correct way to do so.. like for example, im reading data from an elf file and there are two different structs i can read data into: one for 32 and 64 bit. is there an easy way to check for which is which before reading from fields?
[11:44:41] <Decker> elf header has an indiciator if it is 32 or 64 bit
[11:45:05] <Decker> and then you'll either need 2 versions 1 32 1 64 or variables that can contain the worst case
[11:45:11] <Matt|home> yes, but im looking at elf.h and there are two different structs: https://man7.org/linux/man-pages/man5/elf.5.html
[11:45:13] <bayaz> Title: elf(5) - Linux manual page 
[11:45:40] <Matt|home> right
[11:45:48] *** Joins: Rounin (~david@84.212.130.215)
[11:46:28] <Decker> ELF header (Ehdr)  there's only 1 header though which has EI_CLASS bit in the first e_ident field
[11:46:47] <Matt|home> so before reading the whole data into the struct i can just check that individual field, that's what i was thinking
[11:46:59] <Decker> ya
[11:47:06] <Matt|home> because even if i ran code to check the system architecture it's still possible to compile a 32-bit binary on a 64-bit system right?
[11:47:18] <Decker> then it would be a 32 it binary
[11:47:27] <deniska> pyzozord: I did day 19 \o/
[11:47:28] <mercenary> Matt|home: or you define a union of both, read into that, treat as one or the other later
[11:48:09] <Matt|home> so: check EI_CLASS , if 32 then read into 32 struct else if 64 read into 64 struct
[11:48:10] <Matt|home> rite?
[11:48:17] <Decker> looks that way
[11:48:28] <Matt|home> objdump does it kinda differently i think.. lemme see..
[11:48:30] <Decker> and you could put the strcuts in a union...
[11:50:01] *** Joins: Klinda (~superleag@user/klinda)
[11:50:08] <Matt|home> hm. when you do something like: struct stat newstruct
[11:50:10] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:50:16] <Matt|home> are the values of newstruct undefined?
[11:50:30] <Decker> yes 
[11:50:33] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:50:47] <Decker> unless in a global space in which they get initialized to 0; or if you add = {}; which will fill 0's
[11:50:57] <Matt|home> is there an easy way to set all the values at once/
[11:51:08] <Decker> ={}
[11:51:15] <Matt|home> so struct stat newstruct = {}; ?
[11:51:19] <Matt|home> awesome thank you Decker <3
[11:51:40] <Decker> if that fails it might need {0}
[11:53:23] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:54:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[11:54:33] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[11:56:47] *** Joins: diamondbond (~diamondbo@175.157.107.97)
[11:58:06] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[11:58:23] *** Joins: chenqisu1 (~bhca7d@183.217.201.63)
[11:59:02] *** Joins: chenqisu12 (~bhca7d@183.217.201.63)
[12:05:16] *** Joins: node1 (~hex@user/node1)
[12:05:40] *** Joins: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[12:06:15] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:06:56] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[12:07:22] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:08:57] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Ping timeout: 240 seconds)
[12:09:22] *** Quits: zaher__ (~zaher@37.48.144.139) (Read error: Connection reset by peer)
[12:10:43] *** Joins: zaher (~zaher@37.48.187.203)
[12:11:03] *** Quits: zaher (~zaher@37.48.187.203) (Read error: Connection reset by peer)
[12:11:09] *** Joins: zaher_ (~zaher@37.48.187.203)
[12:13:03] *** Quits: chenqisu1 (~bhca7d@183.217.201.63) (Quit: Leaving)
[12:15:55] *** Joins: Auron (~Auron956@user/auron)
[12:16:39] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:16:49] *** Joins: zaher__ (~zaher@46.58.217.237)
[12:16:55] *** zaher__ is now known as zaher
[12:17:56] *** Joins: absc (~absc@81.31.144.28)
[12:20:01] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:20:17] *** Quits: zaher_ (~zaher@37.48.187.203) (Ping timeout: 240 seconds)
[12:20:29] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[12:23:39] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[12:26:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[12:28:14] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:28:16] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[12:28:47] *** Joins: DevAntoine (~DevAntoin@185.31.151.122)
[12:30:06] *** Quits: M2dgx[m] (~M2dgxmatr@2001:470:69fc:105::1:22b3) (Quit: You have been kicked for being idle)
[12:32:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:32:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[12:34:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[12:36:27] <deniska> pyzozord: and day 20 :)
[12:38:28] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[12:40:52] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[12:42:51] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 268 seconds)
[12:42:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:45:17] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[12:46:16] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Remote host closed the connection)
[12:46:28] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[12:46:31] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[12:46:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi)
[12:47:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:48:08] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[12:48:25] *** Joins: frost (~frost@user/frost)
[12:48:58] *** Joins: jaysicks (~jaysicks@178-164-226-74.pool.digikabel.hu)
[12:49:30] <pyzozord> deniska: I'm not even really half done with day 19
[12:49:38] <pyzozord> deniska: did you do day 19?
[12:49:42] <deniska> pyzozord: yeah
[12:49:51] <deniska> pyzozord: #nomatrix #redpill
[12:49:57] <pyzozord> lol
[12:50:15] <pyzozord> I bet it took some time to work out all the transformations by hand
[12:50:31] <pyzozord> (not like I spent 6h figuring out matrices and failed or anything)
[12:51:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:55] <deniska> pyzozord: I started doing that process by hand (almost literally, left hand rule yada yada), but then I just stumbled upon already written out list of transformations and went "oh well, yoink"
[12:53:14] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[12:53:18] <deniska> pyzozord: that's just fiddly work. What I spent much more effort on is thinking about various coordinate systems and offsets between them, I had to write pseudocode for that as if python isn't pseudo enough
[12:54:05] <pyzozord> yes I'm worried about the maching part two
[12:54:07] <pyzozord> *too
[12:54:20] <pyzozord> the matching part of the part 1 
[12:57:01] *** Joins: independent56 (~independe@148.252.132.132)
[12:57:38] <deniska> day 20 is quite simpler
[12:58:54] *** Quits: chenqisu12 (~bhca7d@183.217.201.63) (Read error: Connection reset by peer)
[12:58:58] <pyzozord> i gave up yesterday because I think my 2d matrix rotation doesn't work as it should and I don't know why
[12:59:25] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[13:00:08] <pyzozord> and it's hard for me to let go of all the work I did yesterday
[13:00:14] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[13:00:17] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[13:01:22] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Quit: ---)
[13:01:29] <pyzozord> I think point at [1,2] rotated 90 degrees counter clock wise does not produce [-1,2]
[13:01:32] <pyzozord> https://ideone.com/yfC593
[13:01:36] <bayaz> Title: Ideone.com 
[13:01:55] *** Joins: aradesh (~aradesh@user/aradesh)
[13:02:12] <pyzozord> oh wait! unless... Unless these whole matrix thing expects (y,x) cords not (x,y)
[13:02:55] *** Quits: independent56 (~independe@148.252.132.132) (Ping timeout: 256 seconds)
[13:03:38] <pyzozord> in math they talk about y×x matrices
[13:03:45] <pyzozord> so that could be it
[13:04:01] <pyzozord> why the hell do they do that though, that's counter intuitive
[13:05:02] <pyzozord> I think I need to refactor my matrix code to have the wierd [col, col, col] structure instead of what programmers normally do [row, row, row]
[13:05:35] <deniska> pyzozord: Erm, I mean, first you refer to the row, then you refer to the column, X Y
[13:05:40] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:05:48] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:05:54] <pyzozord> in programming you usually say table[y][x]
[13:05:57] <deniska> pyzozord: but then if you write your matrix as a list of lists, then yeah, you're writing it wrong
[13:06:02] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:f0e6:2590:bdb3:d101)
[13:06:09] <pyzozord> matrices kind of assume table[x][y]
[13:06:16] <mawk> write your matrix as an array of int[n*m]
[13:06:20] <deniska> matrices assume matrix[X, Y]
[13:06:30] <mawk> then you index it as a[m*j+i]
[13:06:39] <deniska> matrices are not some nested mumbo jumbo, they are a 2d grid of numbers :)
[13:06:57] <pyzozord> i was thinking about that, but that is more logic, then matrix needs to keep it's shape separately and stuff
[13:07:07] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[13:07:15] <deniska> if you are using matrices, may as well import some numpy
[13:07:49] <pyzozord> I think I know how to keep going for now
[13:07:56] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[13:08:07] <pyzozord> sleeping on a problem really does help 
[13:09:45] <deniska> pyzozord: My first language was VisualBasic, and amazing thing about it (and a lot of other Basic dialects) is built-in support for multidimensional arrays
[13:09:55] <deniska> every language without them felt like a downgrade :)
[13:10:55] <deniska> array of arrays leads to ugliness like [y][x], complex allocation loops etc
[13:11:19] <pyzozord> yes I am finding more and more things that python should have built-in but doesn't
[13:11:21] <deniska> python at least allows syntax like a[x, y], which works in 3rd party libraries, and naturally works with sets and dicts
[13:11:50] <deniska> C++ recently gained n-d indexing I think?
[13:12:24] <pyzozord> python's syntax folds ont itself very nicely
[13:12:36] <pyzozord> with hashables, iterables, generators, opreators
[13:12:52] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:12:54] <pyzozord> under the hood it seems to be a fair small set of rules that synergize a lot
[13:13:20] <deniska> pyzozord: some advent of codes are really nicely solved with numpy, but this year I don't think there was a single one for which numpy would be really benefitial
[13:13:49] <pyzozord> thanks for the advice but I want to see if I can power through this without any libraries
[13:14:27] <pyzozord> if there would be one built in to the language I'd feel I got a free ticket, but if it isn't I feel it's a good opportunity practice matrices, something I'm really not good at
[13:14:30] <deniska> yeah, I didn't use anything 3rd party so far this year
[13:16:10] <deniska> pyzozord: collections, itertools, json, math, operator, re, statistics, sys are built-in modules I imported this year so far
[13:17:06] <deniska> I guess I import sys each day to get argv[1] :)
[13:17:08] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[13:17:17] *** Joins: independent56 (~independe@148.252.132.132)
[13:17:38] *** Quits: diamondbond (~diamondbo@175.157.107.97) (Quit: Leaving)
[13:17:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:19:40] <pyzozord> there is a module for stats
[13:19:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[13:20:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:20:44] <pyzozord> that's cool
[13:21:03] <pyzozord> they have module for stats but not for linear algebra
[13:21:06] *** Joins: Akiva (~Akiva@user/Akiva)
[13:21:15] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:22:20] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[13:23:09] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:24:23] <deniska> linear algebra kinda requires 2d arrays, and python has no built-in that either
[13:25:05] <deniska> pyzozord: there's a push lately in PL design for leaner standard libraries
[13:25:26] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 260 seconds)
[13:25:54] <deniska> only defining basic data structures, error handling, primitive types/interfaces etc which every program or library would use
[13:26:04] *** Quits: swp (~Thunderbi@143.176.249.0) (Read error: Connection reset by peer)
[13:26:13] <deniska> I see the benefits, but I don't like the spirit :)
[13:26:18] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:26:21] *** Joins: swp (~Thunderbi@143.176.249.0)
[13:28:19] *** Joins: Twipply (~Twipply@user/twipply)
[13:31:25] *** Quits: Intelo (~Intelo@88.244.89.107) (Quit: Client closed)
[13:39:23] *** Quits: jojo_ (uid532476@user/jojo/x-7248806) ()
[13:40:31] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[13:41:38] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:45:03] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1) (Quit: Client closed)
[13:45:37] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Ping timeout: 240 seconds)
[13:48:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:48:23] <deniska> pyzozord: https://i.redd.it/giz8yklp9m681.jpg people on reddit used various tools to visualize the transforms :)
[13:48:24] <bayaz> Type: image/jpeg Size: 1.0 MB 
[13:49:14] *** Quits: independent56 (~independe@148.252.132.132) (Quit: Ping timeout (120 seconds))
[13:49:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:50:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[13:51:36] <Decker> deniska https://github.com/d3x0r/AoC-2020/blob/main/2021-19/doit.mjs#L25 somehting like this... but I suppose it's safe to assume I can't expand the maps to full size? (without TB of memory?)
[13:51:37] <bayaz> Title: AoC-2020/doit.mjs at main · d3x0r/AoC-2020 
[13:52:45] <deniska> Decker: yeah, I calculated most things during the iteration, not sure how much you can store
[13:54:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:54:17] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:55:36] *** Joins: anthk_ (~anthk_@92.176.105.30)
[13:56:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a)
[13:56:59] *** Joins: independent56 (~independe@148.252.132.132)
[13:58:05] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[14:01:51] *** Quits: independent56 (~independe@148.252.132.132) (Ping timeout: 256 seconds)
[14:07:05] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[14:10:16] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Read error: Connection reset by peer)
[14:10:39] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[14:12:25] *** Quits: dead1 (~dead@user/dead1) (Quit: Leaving)
[14:13:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:14:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[14:15:17] *** Joins: FoodMan (~glucose@user/foodman)
[14:15:27] *** Quits: kmh (~kmh@2a00:6020:5004:6800:dd57:97da:f1c6:63d9) (Quit: Leaving)
[14:16:12] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[14:17:47] <pyzozord> deniska: haha yes I've been twisting my hand and fingers in many ways yesterday
[14:17:50] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:17:53] *** Joins: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11)
[14:18:02] *** Quits: bauripalash (~bauripala@2401:4900:382e:8809:1:1:e2e2:7d11) (Client Quit)
[14:21:21] <deniska> pyzozord: and I was spinning a default cube in blender for a while
[14:21:34] <Decker> I grabbed some geomags.. https://github.com/d3x0r/DualMarchingTetrahedra/blob/master/sm20200506_094548.jpg?raw=true 
[14:21:35] <bayaz> Domain: raw.githubusercontent.com Type: image/jpeg Size: 41.7 kB 
[14:22:55] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c8e6:77cf:be69:aec9)
[14:24:39] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[14:25:58] <Decker> then I realized the loop was just +/- each axis for 6 * 4 of each rotation around one axis in each direction
[14:27:27] *** Joins: swp1 (~Thunderbi@37.203.60.116)
[14:32:45] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[14:33:18] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[14:33:33] *** Joins: img (~img@user/img)
[14:34:59] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[14:35:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[14:35:41] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:38:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[14:39:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:40:47] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:42:29] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:42:29] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:42:29] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:43:38] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:43:50] *** Quits: xff0x (~xff0x@2001:1a81:5214:2e00:5b16:4ef1:d67d:4f66) (Ping timeout: 260 seconds)
[14:44:29] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[14:44:41] *** Joins: xff0x (~xff0x@2001:1a81:5214:2e00:39f0:aaaf:c001:5cae)
[14:44:52] *** Quits: toastloop (toastloop@user/toastloop) (Quit: Leaving)
[14:46:11] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Client Quit)
[14:46:19] *** Joins: ravan_ (~ravan@user/ravan)
[14:47:45] *** Joins: cursey (~cursey@user/cursey)
[14:49:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:50:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[14:53:24] *** Joins: omr (~omr@user/omr)
[14:53:27] <Stefan26> I want to come back to a question i asked earlier; about log4shell; suppose your vulnerable application X runs on a company server Y that's only allowed to talk to (through network/firewall blocks) trusted external ip-address 1.1.1.1 ... What damage can an attacked do on X/Y? (he can't make it fetch bad code from his evil service Z?)
[14:53:41] <Stefan26> attacker*
[14:54:34] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 260 seconds)
[14:55:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[14:57:35] <deniska> Stefan26: it can expand env variables, so if one of these trusted addresses is a DNS server (which the actual 1.1.1.1 is), it can make a dns query for ${AWS_SECRET_KEY}.some.domain.you.control
[14:57:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:57:50] <deniska> and if you control a name service on that domain, you can see which subdomain it hit
[15:01:47] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[15:02:50] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[15:04:26] <Stefan26> good extra point; (i meant the outbound-block is in some company firewall) what can the attacker do? (fine say 123.123.44.44 then, no DNS thing?)
[15:06:16] <deniska> maybe denial of service? Make the service busy doing requests. Not sure
[15:08:20] <Stefan26> oh yeah maybe dos... i find it interesting. most log4shell for dummies videos I've found describes the typical scenario as the server connecting to some evil hacker-hosted place... Do most enterprise-services not run in server-environments X with "block outbound traffic by default except explicit IP-exceptions" as above?
[15:09:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi)
[15:14:55] *** Joins: zaher_ (~zaher@37.48.154.34)
[15:15:06] <davros> wow,
[15:15:47] <davros>  i just got an email from someone called "warren buffet" saying he's randomly giving people 2.5million dollars, and i've been selected
[15:15:53] <davros> think it's legit?
[15:18:36] <rawplayer> yes
[15:18:37] *** Quits: zaher (~zaher@46.58.217.237) (Ping timeout: 240 seconds)
[15:19:11] <mrig> Na, if they've not asked for any money up front to cover the legalese; It must be a scam!
[15:19:11] <mawk> yes it's legit davros 
[15:19:17] *** Quits: zaher_ (~zaher@37.48.154.34) (Ping timeout: 240 seconds)
[15:19:37] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[15:20:07] <davros> that reminds me i had to help someone getting their oil to market aswell
[15:22:45] <Jck_true> Stefan26: Maintaining such a whitelist system is a pain though...
[15:25:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:26:20] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[15:26:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:28:53] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[15:31:21] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:35:46] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 245 seconds)
[15:37:02] <DnzAtWrk> god
[15:37:10] <DnzAtWrk> windows 11 is like windows 10, but with extra clicks
[15:37:20] <DnzAtWrk> I thought we were past this
[15:37:25] <DnzAtWrk> no wait, why would I ever think such a thing
[15:39:43] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:41:48] <deniska> Stefan26: I assume that security practices of most orgs range fron non-existent to barely-not-awful
[15:42:24] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:42:37] <mrig> I heard it suggested the other day that the worst people for security are devs.
[15:43:12] <deniska> devs will do things they know are bad but think that they'll get by this time :)
[15:43:16] <mrig> Implication being that they, we, are worse at it than the general public.
[15:43:27] <deniska> (and most of the time they actually do)
[15:43:45] <mrig> just stick a monkey patch on it :)
[15:43:55] <deniska> General public is easier to get caught into "normal" scams like fishing attacks, or sharing their password with someone
[15:44:13] <deniska> A dev will generate a separate API key before sharing it with someone
[15:44:41] <mrig> you could make an argument that this is safer than going for all out full security, using the forest fire analogy.
[15:44:50] <deniska> a user may install candy crush from a questionable source
[15:44:58] <deniska> a dev will install 500 questionable NPM packages :)
[15:45:05] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[15:45:18] <mrig> The rarer the fire is, the worse it is when it does happen.
[15:46:27] <mrig> yes the user will just use the repo, the dev will want the latest shiny version.
[15:46:37] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[15:48:17] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:51:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:54:56] <arahael> deniska: this is why i use physically separate computers for dev vs services - and argue that devs should not be on the same network as production services in large enterprise.
[15:55:22] <arahael> deniska: but it seems i speak nonsense :(
[15:56:50] <mspe> it became dumb to the point that some devs say bullshit like “just put docker images in production, and get rid of those useless sysadmins”, and really believe it
[15:57:17] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[15:58:56] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:59:22] <deniska> arahael: oh, it's a perfectly reasonable thing, it's just… hard
[15:59:32] <mspe> or the literal 1) error 2) copy-paste error in google 3) visit 1st result 4) copy-paste 1st block code of web page into terminal as root on prod
[16:00:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157) (Ping timeout: 240 seconds)
[16:00:05] <mspe> sometimes 3rd step is 1st STACKOVERFLOW result
[16:00:27] <deniska> arahael: to test a big system you need a sufficient amount of test data, and it's way too tempting to copy production databases over
[16:00:37] <mspe> because I'm a professional, I won't copy-paste random shit from the Internet, I'll copy-paste random shit from StackOverflow
[16:00:37] <deniska> arahael: the bigger the database, the bigger the temptation :)
[16:01:19] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[16:01:39] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[16:01:59] <arahael> deniska: generating data is easier than people realise though. just we devs are lazy!
[16:02:36] <deniska> arahael: real data often has things which randomly generated data won't
[16:02:48] <deniska> like unusual distributions which break your indexing and such
[16:03:17] <deniska> Also all big enterprises start small
[16:03:30] <deniska> when the separation is not too useful because the team of 1 is doing all the work
[16:04:00] <deniska> but then as a project goes on, and a team grows, splitting it properly becomes harder and harder each day :)
[16:04:06] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157) (Ping timeout: 245 seconds)
[16:04:11] <DnzAtWrk> is this a reliable weighted random method:
[16:04:15] <DnzAtWrk> left = random() * sum(weighted); i = 0; while (i < weighted.length - 1 && left > 0) left -= weights[i++]; return i;
[16:04:21] <DnzAtWrk> or did I miss something
[16:04:30] <DnzAtWrk> sum(weights)*
[16:05:21] <DnzAtWrk> I've seen a weighted random using the sum of all previous weights, but wouldn't this work just as well?
[16:05:29] <GeDaMo> https://en.wikipedia.org/wiki/Fitness_proportionate_selection
[16:05:30] <bayaz> Title: Fitness proportionate selection - Wikipedia 
[16:06:05] <DnzAtWrk> the difference is in this method you don't need an extra array
[16:06:09] <DnzAtWrk> if it works
[16:06:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:08:42] *** Joins: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru)
[16:11:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:12:38] <mrig> I have an allergy to stack overflow, not sure if this is a good or a bad thing really.
[16:13:00] <mrig> prefer to go slow and code stuff myself.
[16:13:42] *** Joins: mishugana (~mishugana@user/mishugana)
[16:14:20] <pyzozord> going slow is a luxury
[16:14:34] <pyzozord> untill they don't let you go fast when you want to, then it becomes annoying :P
[16:14:38] <mrig> is it? Seems like a hardship from where I'm sitting.
[16:14:58] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: Leaving)
[16:15:08] <mrig> It's not like I have a choice in the matter, is the thing.
[16:15:46] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:15:53] <mrig> I'm a slow learner because I refuse to rush over things that I do not understand.
[16:16:49] <Matt|home> ... jesus, is it just me or is the stackoverflow UI cluttered as all hell
[16:18:13] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi)
[16:18:21] <pyzozord> it's not bad, especially if you turn off the js
[16:18:42] <pyzozord> and use some browser extension to turn on dark mode
[16:19:02] <arahael> deniska: i'm aware of all that.
[16:20:04] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[16:21:50] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:23:17] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[16:24:54] *** Joins: inky_ (~inky@188.115.252.175)
[16:24:57] *** Quits: _inky (~inky_@46.36.117.221) (Ping timeout: 240 seconds)
[16:25:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:25:23] <mrig> Matt|home I agree, find it pretty cluttered.
[16:25:33] <mrig> could be my JS blockers though.
[16:26:07] * mrig slaps JS back into the sandbox, tries to anyhow.
[16:26:23] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:27:13] <mrig> Sorry to any JS lovers, I'm sure that it is beautiful in the right lighting and under the correct circumstances :P
[16:27:36] *** Quits: inky (~inky@46.36.117.221) (Ping timeout: 256 seconds)
[16:31:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:32:06] *** Joins: maxzor (~maxzor@2a01cb04054faa000ab82400411ea70d.ipv6.abo.wanadoo.fr)
[16:32:10] * mrig makes a note to force self to use JS for a length of time sometime in the near future.
[16:32:37] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:33:21] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[16:33:26] *** Joins: Kev_ (~Kev@2a01cb0400149f005804b7059195ba5a.ipv6.abo.wanadoo.fr)
[16:33:30] <Ronalds_Mazitis_> https://stackoverflow.com/questions/70395116/collisions-dont-get-detected-in-my-three-js-game-code
[16:33:31] <bayaz> Title: Collisions don't get detected in my three.js game code-- 
[16:35:38] <pyzozord> hey I have problem figuring out how to write a function that multiplies a vector by a matrix for rotating left but it doesn't work right I think
[16:35:45] <pyzozord> can someone help me out? https://ideone.com/GFrVJF
[16:35:48] <bayaz> Title: Ideone.com 
[16:36:03] *** Joins: macer181 (~macer181@61.52.246.142)
[16:38:54] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:39:57] *** Joins: pulse (~pulse@user/pulse)
[16:41:21] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786) (Read error: Connection reset by peer)
[16:41:26] *** Joins: _inky (~inky_@188.115.252.175)
[16:41:51] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786)
[16:47:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[16:48:13] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[16:52:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:53:25] *** Joins: Leone (~Leo@69-165-148-197.dsl.teksavvy.com)
[16:53:34] *** Joins: fling (~fling@user/fling)
[16:54:11] <pavonia> pyzozord: I think your indices in b = B[i][j] are flipped
[16:54:44] <pavonia> Also the result for the first left rotation should be [-5, 1]
[16:58:20] <pyzozord> [1,5] -> rot90 -> [-5,1] ?
[16:58:33] <pyzozord> that doesn't make sense to me
[16:58:43] <pyzozord> oh no sorry it does
[16:58:48] <pyzozord> assuming [x, y]
[16:59:21] <pyzozord> but then flipping i and j doesn't help
[16:59:32] *** Joins: null4bl3 (~null4bl3@192.38.81.6)
[16:59:40] *** Joins: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de)
[16:59:41] *** Quits: immibis (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[16:59:43] *** Joins: immibis_ (~hexchat@62.156.144.218)
[17:00:02] <mrig> oh nice pavonia, yes that seems ok.
[17:00:56] *** Joins: Leonard (~Administr@114.55.127.80)
[17:01:02] <pavonia> pyzozord: Are you only dealing with 2D vectors? You could just hardcode the calculations then
[17:02:53] *** Quits: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de) (Client Quit)
[17:02:53] <mrig> not sure what it is that is making it subtract, this got me to thinking as I'm just doing rotation but using trig so it's cool to ponder in this light. I think it's the signs that are applied to the functions, to get each specific quadrant.
[17:03:14] <pyzozord> here is version with corrected expectations and fillped i and j https://ideone.com/JuACRy
[17:03:14] <mrig> that are being used to speed things up here.
[17:03:17] <bayaz> Title: Ideone.com 
[17:03:34] <pyzozord> pavonia: no, that's just a lower dimmention test, the real problem is in 3d
[17:03:50] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 260 seconds)
[17:07:00] *** Joins: Jong (~Jong@163.114.132.6)
[17:08:48] <Stefan26> deniska many companies have good security practices I think
[17:09:39] <Stefan26> the ones I've worked for in the financial sector have had many layers of defense and InfoSec-department with high authority
[17:09:55] <Stefan26> (but it-security's never been my own expertise)
[17:09:59] <pyzozord> ooh someone helped
[17:10:11] <pyzozord> I had problem with A[i], it should have been A[j]
[17:10:19] <pyzozord> no idea why though
[17:10:44] <pyzozord> apparently vect-mat multiplication works different than I understand it
[17:11:37] <pyzozord> fully me failing on basic linear algebra, as usual
[17:12:17] *** Quits: omr (~omr@user/omr) (Quit: WeeChat 3.3)
[17:12:30] <smallville7123> https://gist.github.com/mgood7123/46bd884cc4c86810d2eea6ae65b547b3   how do i handle the case where the byte position has been advanced by more than one ?
[17:12:31] <bayaz> Title: unicode.cpp 
[17:12:59] <leduyquang753> I have linear algebra exam in 10 hours...
[17:13:59] <pyzozord> well, don't mix up order of things this stuff can kill ya
[17:14:09] <[itchyjunk]> basic linear alg class?
[17:14:37] <leduyquang753> Yeah elementary.
[17:14:51] <[itchyjunk]> vectors aren't matrices
[17:14:54] <pyzozord> what's in basic linear algebra? I assume vector and matrices?
[17:15:05] <[itchyjunk]> you transpose a vector and its equivalent to a nx1 matrix
[17:15:27] <pyzozord> yes I think essentially I wasn't doing the transpose
[17:15:41] <leduyquang753> Series of linear equations, matrices, linear projections.
[17:15:48] <leduyquang753> Vector spaces.
[17:15:57] <[itchyjunk]> None of them is too bad
[17:16:02] <[itchyjunk]> eigen value stuff is imp
[17:16:03] <pyzozord> series of linear equation as in math series?
[17:16:05] <[itchyjunk]> if you've covered that
[17:16:16] <[itchyjunk]> no as in multiple linear equations to solve
[17:16:33] <leduyquang753> It's "system" to be precise.
[17:17:14] <[itchyjunk]> You're "system"!
[17:17:15] <pyzozord> so the equations are just the symbolic manipulation right? This cancels with this, I can get this on the other side of the equation etc
[17:17:32] <pyzozord> this is commutative, this is not
[17:17:35] <pyzozord> etc
[17:17:49] <[itchyjunk]> equation could be a symbolic representation
[17:17:58] <[itchyjunk]> then you can do the manupulations you mentioned
[17:18:14] <[itchyjunk]> you can also work with multiple equations with multiple unknowns
[17:18:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:18:37] <[itchyjunk]> not sure what you mean my commutative there
[17:18:42] <pyzozord> linear projections require trigonometry right?
[17:18:44] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:18:53] <[itchyjunk]> unless you include matrices, most things are commutative in lin equations
[17:18:57] <deniska> Stefan26: finance sector can be extreme about security, understandably so
[17:19:02] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[17:19:27] <deniska> some are required by law, some just don't want to lose their clients' money :)
[17:19:32] <[itchyjunk]> uh, certain projection can be derived with trig functions
[17:19:41] <[itchyjunk]> not sure if that's always the case
[17:19:56] <user51> i want to build a radix tree from lists. what algorithm to use?
[17:20:02] <[itchyjunk]> projection ends up being a pretty big topic at some point
[17:20:06] <[itchyjunk]> beyond my paygrade
[17:21:49] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:22:25] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:23:59] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:24:43] <[itchyjunk]> Apparently projection is an endomorphism
[17:24:46] * [itchyjunk] sighs
[17:24:51] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Client Quit)
[17:26:06] *** Joins: inlight (~inlight@157.35.56.242)
[17:26:06] *** Quits: inlight (~inlight@157.35.56.242) (Changing host)
[17:26:06] *** Joins: inlight (~inlight@user/inlight)
[17:27:02] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:27:10] *** Quits: null4bl3 (~null4bl3@192.38.81.6) (Ping timeout: 260 seconds)
[17:29:21] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:f0e6:2590:bdb3:d101)
[17:29:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[17:31:06] <pyzozord> god now finding 24 different orientations
[17:31:18] <pyzozord> not less and not more
[17:32:17] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:f0e6:2590:bdb3:d101) (Ping timeout: 240 seconds)
[17:32:21] <deniska> pyzozord: there're 6 sides you can point to, and each side has 4 orientation you can be in
[17:32:31] *** Joins: BorgoMatic (~KC0LR@136.32.12.209)
[17:33:37] *** Quits: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:f0e6:2590:bdb3:d101) (Ping timeout: 240 seconds)
[17:33:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:35:06] <pyzozord> deniska: does this look good to you? https://ideone.com/F0Kxjs
[17:35:08] <bayaz> Title: Ideone.com 
[17:35:41] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:35:55] <pyzozord> I'm not good with cubes
[17:36:04] <deniska> pyzozord: looks like 24 things
[17:36:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:36:09] <pyzozord> yeah :D
[17:36:26] <deniska> pyzozord: you can try computing them and check that all are unique
[17:36:30] <pyzozord> that's how for I went, 24 things and all have different instructions
[17:36:46] <pyzozord> good call will use power of computers to do the work for me
[17:39:07] *** Quits: swp1 (~Thunderbi@37.203.60.116) (Quit: swp1)
[17:39:20] <pyzozord> yes, when I put a [1,2,3] point through all of these, they all produce unique results, in total 24 unique results
[17:39:37] *** Joins: Satin (uid193953@user/Seten)
[17:39:47] <pyzozord> that's kind of a miracle, I did not think at all writing these orients, I just tried making 24 of them
[17:40:13] *** Joins: null4bl3 (~null4bl3@192.38.81.6)
[17:40:39] <pyzozord> oh wait, I can make a 25th one, that is a bad sign
[17:41:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[17:45:38] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[17:48:30] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:48:35] *** Joins: tofran (~tofran@37.189.158.134)
[17:49:13] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d6a:7a2d:1310:3be6) (Read error: Connection reset by peer)
[17:50:06] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[17:53:30] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:f099:fed8:dc03:6b60) (Read error: Connection reset by peer)
[17:53:43] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:54:29] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[17:54:59] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[17:55:06] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:57:02] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[18:01:11] *** Joins: vin (~vin@user/crash)
[18:02:13] <[itchyjunk]> https://www.youtube.com/watch?v=VqeNSZqiBzc
[18:02:14] <bayaz> Title: A Simulation That Looks Like Reality! 🤯 
[18:07:00] <[itchyjunk]> https://www.youtube.com/watch?v=-SL_oG78ruk
[18:07:01] <bayaz> Title: desmos is a game engine 
[18:07:26] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:07:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[18:10:45] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:15:25] <pyzozord> I tried with duck
[18:15:37] <pyzozord> I cannot figure out which directions are the 24 directions
[18:16:02] <DnzAtWrk> I need to render 3D stuff on a real map
[18:16:07] <DnzAtWrk> I have previously used NASA world wind
[18:16:13] <DnzAtWrk> is there a more modern tool for it?
[18:16:20] <DnzAtWrk> something web-based
[18:17:44] <pyzozord> oh wait, maybe I know
[18:17:55] <pyzozord> turn in each direction and then spin around
[18:18:07] <[itchyjunk]> geogebra?
[18:18:27] <pyzozord> deniska: have you used any flips or just rotates?
[18:18:43] <pyzozord> maybe I shouldn't use filps at all
[18:18:51] *** Quits: edantes (~edantes@242.53.168.109.cust.ip.kpnqwest.it) (Quit: Client closed)
[18:19:25] <DnzAtWrk> https://www.openglobus.org/
[18:19:26] <DnzAtWrk> seems good
[18:19:28] <DnzAtWrk> any other choices?
[18:20:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[18:21:18] *** Joins: inlight (~inlight@user/inlight)
[18:21:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:21:59] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[18:21:59] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[18:21:59] *** Joins: tane (~tane@user/tane)
[18:24:17] *** Quits: _inky (~inky_@188.115.252.175) (Ping timeout: 240 seconds)
[18:25:29] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[18:27:02] *** Joins: sonny (~sonny@8.6.144.252)
[18:27:10] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[18:28:21] <smallville7123> https://gist.github.com/mgood7123/46bd884cc4c86810d2eea6ae65b547b3   how do i handle the case where the byte position has been advanced by more than one ?
[18:28:21] <bayaz> Title: unicode.cpp 
[18:29:12] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[18:29:41] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:32:03] <pyzozord> Ok, after two days I think I can finally start solving the real problem of the day 19
[18:33:16] <beaky> nice im still stuck on day 14
[18:33:37] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[18:33:42] *** Joins: Narrat (~omnius@p200300df5f0c230506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[18:33:48] <pyzozord> so I am like you beaky, except I don't try to prove anything, just prove to myself I can even finish this :P
[18:34:18] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:34:38] <InPhase> smallville7123: Honestly I can discern no logic to what you are doing in that function.  Are you just trying to unpack unicode codepoints?
[18:34:41] <beaky> in rust
[18:36:55] *** Joins: rsx (~dummy@ppp-188-174-129-142.dynamic.mnet-online.de)
[18:37:03] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:37:43] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:38:20] <smallville7123> yes
[18:39:16] <pyzozord> deniska: are you around, can I ask for another tip?
[18:39:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:40:59] *** Joins: _inky (~inky_@141.136.79.122)
[18:41:58] <pyzozord> lol I just remembered a story from school
[18:41:58] *** Joins: terminalpusher (~terminalp@2a01:586:968a:1:760a:53e8:676:373a)
[18:42:12] <smallville7123> as this works perfectly except when the position skips forwards more than once
[18:42:27] <smallville7123> eg when it jumps from 2 to 5
[18:43:00] <pyzozord> there was an exam, I and didn't know anything so I was determined to cheat by copying my desk-neighbors work. I was so determined that I, honest, copied his name on my exam!
[18:43:03] *** Joins: src (~src@user/src)
[18:43:29] <smallville7123> pyzozord: lol
[18:43:35] <pyzozord> it wasn't intentional I was just mindlessly coping all words I saw
[18:43:44] <smallville7123> lmao
[18:44:17] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 240 seconds)
[18:44:23] <smallville7123> InPhase: this works perfectly except when the position skips forwards more than once, eg when it jumps from 2 to 5
[18:45:25] <smallville7123> i tried makign my own advance() function thing but i ended up breaking my code
[18:45:31] <pyzozord> deniska: nevermind, I found the answer to my question in the problem description "there are at least 12 beacons that both scanners detect within the overlap" this makes it somewhat more managable
[18:45:57] *** Quits: maxzor (~maxzor@2a01cb04054faa000ab82400411ea70d.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:48:40] <InPhase> smallville7123: This example of mine is missing the routine which pre-validates that it's valid utf-8 while computing the length, but it demonstrates the part of converting utf8 to utf32 codepoints.  This is a straightforward sequential process, where you just build up the 32-bit codepoints in order, and valid utf-8 tells you exactly how many bytes are going to be in each codepoint.  
[18:48:46] <InPhase> https://bpa.st/RSUQ
[18:48:47] <bayaz> Title: View paste RSUQ 
[18:50:09] <InPhase> smallville7123: Actually displaying unicode directly is a little tricky, but converting to codepoints should be a pretty straight linear process.
[18:50:41] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:50:42] <smallville7123> i know
[18:51:10] <InPhase> smallville7123: So I'm confused that your code is going forward and backward over the data.
[18:51:13] *** Joins: evbo (~bosats@2601:47:4383:560:cd46:e119:54f6:fb49)
[18:51:31] <smallville7123> basically im trying to ensure the cursor position remains consitant when the input is seeked forwards by more than one byte
[18:52:11] <smallville7123> assuming there are no lines between the previous position and the new position
[18:52:27] <pyzozord> ooh it sounds like you are trying to do the brittle thing and treat unicode as same-size cell grid
[18:52:36] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[18:52:58] <pyzozord> and added some correcting code on top of that
[18:53:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df08b-217.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:53:13] <smallville7123> ?
[18:53:59] <pyzozord> I heaven't read your code but from this conversation and "basically im trying to ensure the cursor position remains consitant"
[18:54:01] <InPhase> smallville7123: Why are you moving around by bytes and mapping this to a cursor position if your display is unicode and not bytes?
[18:54:10] <nomagno> You can't actually move the cursor per-byte, only epr character
[18:54:24] <nomagno> You have multibyte characters, and bytes that represent invisible characters.
[18:55:15] <pyzozord> you cannot do uniceodeString[17] and be sure that's 17th letter
[18:55:37] <smallville7123> tho this might not be worth it since it COULD skip multiple lines in which everything in the middle is lost
[18:55:58] <pyzozord> must walk from the beggining of the string / line and count each character as you go until you find the one you need, more like linked list really
[18:56:01] <pyzozord> no jumps
[18:56:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:56:13] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 2.8)
[18:56:17] <nomagno> pyzozord: you can't do that with ASCII either. A tab is very unpredictable width-wise
[18:56:25] <smallville7123> wait no that does not matter since the position is not line dependant
[18:56:36] <smallville7123> multi-line dependant*
[18:56:50] <pyzozord> nomagno: fair, I guess I was talking about characters not what's visible on screen and what position it is in
[18:57:01] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[18:57:37] <pyzozord> smallville7123: keep separate pointer to each line, and then walk the line
[18:57:45] <smallville7123> eg the column counts from the begining of the line, while the byte position counts from the literal byte size/position/point of whatever input
[18:58:33] <smallville7123> so yay it is worth it
[18:58:42] <pyzozord> character read in unicode is O(n) not O(1)
[18:58:57] <pyzozord> really is more like linked list than an array
[18:59:56] <smallville7123> so, assuming i have access to the entire line, and only column jumps are important
[19:00:28] <InPhase> If you want a bidirectional mapping, it is probably a better idea to generate a look-up table for each line than to try to walk along the utf-8.
[19:00:42] <pyzozord> smallville7123: no jumps are possible
[19:00:46] <smallville7123> i still need to be able to seek my unicode parsing through the string without fucking it up like i did for my advance() function
[19:01:16] *** Joins: anthk_ (~anthk_@92.176.105.30)
[19:01:39] <pyzozord> you can do that by walking
[19:01:42] *** Joins: Guest52 (~Guest52@host-95-235-232-206.retail.telecomitalia.it)
[19:01:43] <smallville7123> InPhase: im not doing bidirectional mapping
[19:01:52] <pyzozord> like we suggest split the text into lines and then just walk the one line you need
[19:02:06] <smallville7123> pyzozord: yes but the hard part is trying to walk correctly
[19:02:15] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b58d:8599:673d:813)
[19:02:16] <pyzozord> no, that's easy
[19:02:43] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b58d:8599:673d:813) (Client Quit)
[19:02:54] <pyzozord> you read the first byte of the line and it tells you how many more byts you need to read for this character, you read that another byte and it tells you how many more bytes to read next character
[19:02:58] *** Quits: rsx (~dummy@ppp-188-174-129-142.dynamic.mnet-online.de) (Quit: rsx)
[19:03:12] <smallville7123> yes but i need to keep additional info for each byte
[19:03:41] <pyzozord> utf8 is made of [len, data...][len, data...][len, data...] each data is of len size
[19:04:10] <pyzozord> no, you just always walk the line from the beggining, it's ok
[19:04:15] *** Joins: maxzor (~maxzor@2a01cb04054faa00eb9924cabbbfe442.ipv6.abo.wanadoo.fr)
[19:04:17] <smallville7123> basically i have two situations
[19:04:17] <pyzozord> unless you expect very very long lines
[19:04:22] *** Joins: zaher (~zaher@37.48.152.151)
[19:04:35] <smallville7123> 1. i need only walk a single byte
[19:04:46] <smallville7123> 2. i need to walk backwards,
[19:04:57] <pyzozord> walking backwards I don't know how to do tbh
[19:05:08] <smallville7123> for 2 i simple pop the location stack to the desired location given to me
[19:05:15] <nomagno> pyzozord: double linked list
[19:05:17] <pyzozord> I'd just walk from the begging to position - 1
[19:05:40] *** Parts: Guest52 (~Guest52@host-95-235-232-206.retail.telecomitalia.it) ()
[19:05:47] <smallville7123> for both 2 and 1 i parse the current byte and the accumulated location data
[19:06:01] <pyzozord> nomagno: yes but then indeed he needs to keep extra info for each code point
[19:06:19] <pyzozord> utf8 is singly linked list as far as I can tell
[19:07:45] <nomagno> You should be able to use a FILO/Queue to build a UTF8 codepoint backwards, but it might need previous sanitizing
[19:07:51] <smallville7123> which involves replacing certain unicode bytes with replacement symbol, eg all control characters, and detecting the unicode byte sequence length and advancing the cursor appropriately
[19:07:52] *** Joins: premultiplied (~premultip@69-84-3-189.mxu.aerioconnect.net)
[19:07:53] <nomagno> Stack*
[19:08:00] <InPhase> smallville7123: You still haven't clarified why you're trying to walk bytes instead of walking something else.
[19:08:17] <smallville7123> InPhase: because my input is given as a byte stream
[19:08:32] <smallville7123> eg std::string_view
[19:08:38] <nomagno> Well what kind of input is it?
[19:08:43] <smallville7123> string
[19:08:44] <nomagno> For what purpose
[19:08:51] <pyzozord> btw not sure if walking is the proper technical term for it, but hopefully it's clear
[19:08:53] <smallville7123> parser
[19:08:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:08:57] *** Joins: bytefire (~bytefire@li1531-193.members.linode.com)
[19:09:04] <pyzozord> I heard also terms like "linear scan" and "marching"
[19:09:12] <nomagno> Does the parser support UTF-8?
[19:09:16] <smallville7123> yes
[19:09:54] <bytefire> hi, does anyone know a lightweight flask-based CMS for static websites?
[19:10:07] <smallville7123> specifically i am creating a line/position tracker for it to aid in debugging parsing errors
[19:10:35] *** Joins: diophantoz (~diophanto@user/diophantoz)
[19:11:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[19:11:40] <smallville7123> position tesst input:2:22
[19:11:40] <smallville7123> source #define foo(bar) bar()
[19:11:40] <smallville7123>                             ^
[19:11:47] <smallville7123> eg that
[19:11:56] <pyzozord> bytefire: here is a list https://www.fullstackpython.com/static-site-generator.html
[19:11:56] <bayaz> Title: Static Site Generators 
[19:12:27] <bytefire> pyzozord: thanks, checking it!
[19:12:34] <bytefire> btw have you used it before?
[19:13:06] <pyzozord> no, I mostly use Gatsby for static generator needs. Or write small generator myself
[19:13:35] <smallville7123> InPhase: 
[19:13:52] <deniska> pyzozord: you mean like mirror flips? No, that's like, not allowed in physics :D
[19:14:07] <pyzozord> deniska: yes
[19:14:12] <deniska> unless scanners are seriously broken :)
[19:14:25] <deniska> pyzozord: flips would increase the whole possible transforms to 48
[19:14:32] <pyzozord> yes hahah, I suspected it doesn't make sens in real world to turn scanners inside-out
[19:14:35] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:15:08] <pyzozord> I kind of realized it after I tried to filp my rubber duck
[19:15:17] <pyzozord> and I realized all I can do is turn it
[19:15:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:19:56] <smallville7123> im not sure what to do
[19:20:20] *** Joins: rtypo (~alex@user/rtypo)
[19:20:37] *** Quits: null4bl3 (~null4bl3@192.38.81.6) (Ping timeout: 268 seconds)
[19:20:38] <InPhase> smallville7123: You're not parsing bytes are you?
[19:20:45] <smallville7123> yup
[19:21:00] <smallville7123> i am
[19:21:14] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[19:21:37] <InPhase> smallville7123: Why parse bytes instead of codepoints if you have a unicode code parser?
[19:22:19] <smallville7123> cus i dont need to do any unicode validation
[19:23:03] <smallville7123> nor do i want to
[19:23:29] <InPhase> So it's an ascii language where you are closing your eyes and allowing utf-8 content, and then patching up the display?
[19:23:51] <KillerWasp> It seems that Microsoft's tyranny has sabotaged gcc, now mingw and its dlls are broken.
[19:24:29] *** Quits: wuldor__ (~mummy@84.71.242.153) (Quit: Lost terminal)
[19:24:32] <smallville7123> no
[19:25:03] <smallville7123> i simply patch up all byte sequences that could affect the terminal if outputted
[19:25:50] <smallville7123> (basically 0x0 to 0x9F
[19:26:13] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 240 seconds)
[19:26:41] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:27:31] <smallville7123> but that a very small step and does not actually need to be done if you want your terminal to possible break due to parsing terminal input such as ascii colors and io mode and such
[19:28:51] <smallville7123> (eg the given data could be an executable file for whatever reason, thus is not wise to simply dump everything unfiltered to terminal)
[19:29:21] <smallville7123> (basically same as never cat an executable, eg $ cat /bin/sh
[19:29:33] <Trashlord> I don't think "outputted" is the correct past tense
[19:29:53] <smallville7123> :)
[19:29:57] <Trashlord> ah, it can be
[19:30:07] <Trashlord> both "output" and "-putted" are valid according to Wiktionary
[19:30:12] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Quit: You have been kicked for being idle)
[19:30:12] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: You have been kicked for being idle)
[19:31:13] <smallville7123> anyway, apart from this, i need only parse the codepoint sequences to determine length and then adjust cursor and skip accordingly
[19:31:13] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[19:31:13] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[19:31:32] *** Parts: kikijiki[m] (~kikijiki@user/kikijiki) ()
[19:31:32] *** Parts: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) ()
[19:31:39] <smallville7123> eg if the cursor is in the muddle of a codepoint then the cursor should not be updated
[19:31:42] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:32:12] <smallville7123> middle*
[19:33:17] *** Joins: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net)
[19:34:36] *** Joins: arcatech (~arcatech@user/arcatech)
[19:35:35] <InPhase> smallville7123: And if it enters a codepoint which is a zero-width space?
[19:36:36] <smallville7123> then ill fix that :)
[19:36:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:37:02] <smallville7123> (or probably just replace it which is easier)
[19:38:06] <InPhase> What if it enters a codepoint which is one which has been marked up by the preceding codepoint and thus is not a separate display glyph?
[19:38:29] <Stefan26> what's your favorite code point?
[19:38:32] <smallville7123> ill replace that too
[19:38:47] <smallville7123> wait what
[19:38:49] <InPhase> smallville7123: That's going to be a lot of replacing as there are a lot of those.
[19:39:24] <smallville7123> " a codepoint which is one which has been marked up by the preceding codepoint" what do you mean
[19:39:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:39:57] <InPhase> smallville7123: You should pause and read up on unicode.  :)  You've fallen into a classic blunder that is in all the intro documents about how to not handle unicode data.  :)
[19:41:00] <InPhase> I suspected we were at this point when it started with scanning along by bytes and trying to map to position by looking forward and backward, because this is very difficult to do.
[19:41:48] <InPhase> You could imagine a unicode system where this is relatively simple, but that's not the unicode system we have.  Codepoints are not characters.
[19:41:56] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:42:14] *** Joins: inlight (~inlight@157.35.8.6)
[19:42:14] *** Quits: inlight (~inlight@157.35.8.6) (Changing host)
[19:42:14] *** Joins: inlight (~inlight@user/inlight)
[19:43:47] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157) (Remote host closed the connection)
[19:44:27] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5914:60df:9257:a157)
[19:47:32] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:52:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:52:45] <pyzozord> so you can't really check unicode glyph visual width in terminal emulators
[19:52:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:53:01] <pyzozord> it varies on font and you don't have access to font in from cli
[19:54:28] <smallville7123> would 0x63 0xCC 0x88 be a multi-codepoint unicode?
[19:54:29] <pyzozord> some codepoints are tagged with east asian width but there are also many that are tagged as ambiguous http://www.unicode.org/reports/tr11/
[19:54:30] <bayaz> Title: UAX #11: East Asian Width 
[19:55:18] <pyzozord> smallville7123: https://en.wikipedia.org/wiki/UTF-8#Encoding
[19:55:18] <bayaz> Title: UTF-8 - Wikipedia 
[19:56:40] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[19:59:42] <pyzozord> note that multi-byte code point is different then multi-code-point creating a single glyph
[19:59:48] *** Joins: magla (~gelignite@55d4e80d.access.ecotel.net)
[20:00:49] <pyzozord> you can have multiple multi-byte code points creating a single glyph or do even more stuff
[20:02:18] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[20:02:26] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[20:04:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[20:06:42] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[20:07:30] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:09:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:09:44] *** Joins: adroitmachine (uid532177@id-532177.hampstead.irccloud.com)
[20:10:37] *** Joins: sonny (~sonny@8.6.144.252)
[20:11:22] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:7963:39ed:da28:8786) (Quit: fe23)
[20:13:41] *** Joins: emf (~emf@2603-6080-9403-11bf-1471-5d14-4db5-bab4.res6.spectrum.com)
[20:13:44] <pyzozord> "In particular, sorting and string comparison algorithms cannot
[20:13:44] <pyzozord> assume that the assignment of Unicode character code numbers provides an alphabetical
[20:13:47] <pyzozord> ordering for lexicographic string comparison."
[20:14:00] <pyzozord> from The Unicode Standard Version 14.0
[20:14:18] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Read error: Connection reset by peer)
[20:14:18] <pyzozord> you are not sorting, but I think it's relevant
[20:14:44] <KillerWasp> Attention, I warn that some laboratory rats thirsty for revenge have escaped and seek to enslave and test all the humans that come across. If you ever meet them, just pray for your life, even if they will be useless.
[20:14:51] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[20:16:44] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 268 seconds)
[20:17:29] <pyzozord> I don't really get how vim and lisp handle unicode
[20:17:37] <pyzozord> do they even handle all of it correctly?
[20:17:57] *** Quits: emf (~emf@2603-6080-9403-11bf-1471-5d14-4db5-bab4.res6.spectrum.com) (Ping timeout: 240 seconds)
[20:18:04] *** Quits: DevAntoine (~DevAntoin@185.31.151.122) (Remote host closed the connection)
[20:18:08] *** Joins: emf_ (~emf@2620:10d:c091:480::1:4a0)
[20:21:11] <pyzozord> my terminal emulator doesn't handle anything besides most europe and emojis
[20:21:36] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[20:21:57] <pyzozord> none of the nonlinear stuff like arabic or devanagari
[20:22:35] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[20:22:37] <Tech_8> sup
[20:23:14] <smallville7123> so  0x63 0xCC 0x88 = multi-code-point and  0xCC 0x88 = multi-byte code-point ?
[20:23:33] <Kuleshov> http://streamer.psyradio.org:8010/progressive/ MUSIC
[20:23:33] <bayaz> Type: audio/mpeg 
[20:25:11] <smallville7123> pyzozord: 
[20:25:19] <pyzozord> don't know
[20:25:27] <pyzozord> there are 3 byte multi-byte code points
[20:25:44] <KillerWasp> smallville7123: for me all are multi-byte code point
[20:26:04] <pyzozord> as far as I understand there is no code for multi-code-point, it's just multiple code points in a row that are interpreted a specific way
[20:26:08] <KillerWasp> but 0x63 have other name where you add it.
[20:26:15] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[20:26:16] <beaky> what are some good hints to solve advent of code 2021 day 14 part 1
[20:26:17] <smallville7123> eg
[20:26:24] <smallville7123> g̈ 	
[20:26:24] <smallville7123> 0067 ( g ) LATIN SMALL LETTER G
[20:26:24] <smallville7123> 0308 ( ◌̈ ) COMBINING DIAERESIS 
[20:26:49] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Client Quit)
[20:27:02] <pyzozord> my terminal emulator does not render this correctly
[20:27:14] <pyzozord> but yeah that would be a multi-code-point I think
[20:27:14] <pulse> ◌̈_◌̈
[20:27:15] <smallville7123> pyzozord: does it render this correctly?
[20:27:30] <KillerWasp> in hexchat select like two characters.
[20:27:32] <beaky> nice eyelashes
[20:27:50] <pyzozord> I don't think my terminal emulator is a good example to follow :P I did it in two weeks, without knowing anything about unicode
[20:28:02] <pyzozord> actually all I know I learned then
[20:28:03] <smallville7123> pyzozord: ﷽
[20:28:06] <smallville7123> :)
[20:28:15] <pyzozord> no, that's just a rectangle for me
[20:28:28] <smallville7123> XD
[20:28:33] <pyzozord> unless you indended a rectangle :P
[20:28:38] <smallville7123> mine renders a quarrter of it lol
[20:28:49] <smallville7123> https://imgur.com/a/dpNsIuQ
[20:29:24] <pyzozord> https://imgur.com/a/s5KVU43
[20:29:42] <smallville7123> XD
[20:30:00] <pyzozord> what is that thing?
[20:30:14] <smallville7123> https://www.compart.com/en/unicode/U+FDFD
[20:30:15] <bayaz> Title: “﷽” U+FDFD Arabic Ligature Bismillah Ar-Rahman Ar-Raheem Unicode Character 
[20:30:16] <pyzozord> looks like octopus tenticles without the octopus
[20:30:35] <pyzozord> screenshot? my browser render a rectangle too
[20:30:40] <pyzozord> I don't think I have a font for that
[20:30:42] <smallville7123> https://www.fileformat.info/info/unicode/char/FDFD/index.htm
[20:31:45] <pyzozord> yeah probably don't have a font for that
[20:32:20] <smallville7123> :)
[20:32:22] <mrig> This is such a fascinating insight on probability https://www.youtube.com/watch?v=pJyKM-7IgAU
[20:32:23] <bayaz> Title: More on Bertrand's Paradox (with 3blue1brown) - Numberphile 
[20:32:57] <mrig> oh that's the second one, from the latest numberphile
[20:33:35] <smallville7123> i dont know what you mean by this but it handles the above correctly "What if it enters a codepoint which is one which has been marked up by the preceding codepoint and thus is not a separate display glyph?"
[20:33:45] <mrig> Seems that there is still so much that we do not understand about probability.
[20:33:49] <pyzozord> I think even vim doesn't support arabic text correctly
[20:34:14] <smallville7123> which was g̈ which is 0x67 0xCC 0x88
[20:34:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:34:37] <smallville7123> which was g̈ which is 0x67 and 0xCC 0x88 *
[20:35:21] <smallville7123> https://gist.github.com/mgood7123/168bb2f7a01241f45db02d2e7295f66e
[20:35:21] <bayaz> Title: gist:168bb2f7a01241f45db02d2e7295f66e 
[20:35:44] *** Quits: thevishy (~Nishant@2405:201:f005:c007:48b2:97f1:a252:93a6) (Quit: Leaving)
[20:36:15] <pyzozord> for me this displayes as g and then dots
[20:36:34] <pyzozord> but that's because i don't support any multi-codepoint glyphs in my terminal emulator
[20:36:35] <mrig> pyzozord I've not worked out how to get vim to work with devanagari, not convinced that it can but may be wrong. You can start vim in arabic mode in which it writes from right to left.
[20:37:01] <mrig> You need to be first in a terminal that is able that is for sure.
[20:37:12] <pyzozord> is a full-on arabic mode or just rtl text order?
[20:37:34] <mrig> I'm not sure, it is a flag that I happen upon the other day by accident.
[20:37:52] <smallville7123> aside from the carrot since 0x67 is techinally a single valid UTF8 character on it's own that merges with 0xCC 0x88 which is also a valid UTF8 sequence
[20:38:18] <smallville7123> but other than that it does correctly handle the sequence
[20:39:40] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[20:39:57] <GeDaMo> There are codepoints for right-to-left override
[20:39:58] *** Joins: Deknos (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[20:40:06] <smallville7123> yea
[20:40:11] <GeDaMo> ‮Like this
[20:40:18] <pyzozord> I just learned that there are codepoints for changing size too
[20:40:19] *** Quits: Deknos (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Remote host closed the connection)
[20:40:32] <GeDaMo> That showed up on the right for me
[20:41:17] <pyzozord> my terminal ofcurse doesn't support it, but I see it in chrome reversed
[20:41:51] <mrig> Well I say not convinced it can, I think my conclusion was that I would need to create a font for it.
[20:42:51] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[20:44:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[20:45:43] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[20:47:24] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[20:48:12] *** Parts: sonny (~sonny@8.6.144.252) (Closing Window)
[20:49:04] *** Quits: Narrat (~omnius@p200300df5f0c230506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[20:50:26] *** Joins: img (~img@user/img)
[20:52:28] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.3)
[20:53:51] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:53:55] <mrig> oh you can set up a mirror symmetry in vim with :vsp and then set rightleft :)
[20:54:13] *** Joins: Rayke (rayke@user/rayke)
[20:54:59] <mrig> not that this is likely to assist in coding, it could be useful for solving DiVinci code puzzles
[20:55:28] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:55:58] *** Joins: exvicesindaco_ (~exvicio@host-79-40-145-145.business.telecomitalia.it)
[20:56:14] *** Joins: sonny (~sonny@8.6.144.252)
[20:57:01] *** Joins: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it)
[20:57:24] *** Quits: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:57:50] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:58:17] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[20:59:02] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 256 seconds)
[20:59:05] *** exvicesindaco_ is now known as exvicesindaco
[21:00:21] *** Joins: mrig (~mrig@user/mrig)
[21:00:57] <sonny> There is a 12 bit bus going to the data table, which I assume is being used to index data. Is it a mistake for the data table to have 14 rows? <https://ibb.co/hf3KFrw>
[21:01:17] *** Quits: zaher (~zaher@37.48.152.151) (Ping timeout: 240 seconds)
[21:01:24] *** Quits: maxzor (~maxzor@2a01cb04054faa00eb9924cabbbfe442.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:02:33] <GeDaMo> 2^12 = 4096
[21:03:05] <GeDaMo> I suspect the 14 is just a random number
[21:03:44] <pyzozord> mrig: cool video thanks
[21:04:05] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[21:04:49] <sonny> GeDaMo: oh, your right
[21:05:04] <sonny> data would have 4096 rows
[21:05:17] *** Joins: Kuleshov_ (Kuleshov@46.138.252.54)
[21:05:20] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Read error: Connection reset by peer)
[21:05:20] <beaky> nice day 12 of advent of code is using 5 gigabytes of ram
[21:05:24] <beaky> day 14*
[21:05:28] <sonny> o.O
[21:05:59] <sonny> aoc gone wrong :P
[21:06:09] <pyzozord> beaky: how many teas can your database hold? 
[21:06:39] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[21:07:19] <sonny> if it's a database wouldn't that just be a memory limitation?
[21:07:59] <mrig> pyzozord: oh did I like a video? :O
[21:09:06] <mrig> Dang english fonts are a pain in the proverbial behind on this modern interweb thing when you don not use a smart phone and people insist on texting you https links for websites :|
[21:09:17] <mrig> Is that an I or an L no idea \o/
[21:09:28] <mrig> an O or a 0
[21:09:44] <mrig> capital p or small P
[21:09:49] *** Quits: mrlemke (~quassel@208.74.105.200) (Quit: No Ping reply in 180 seconds.)
[21:10:07] <pyzozord> confusing font for sure ;)
[21:10:18] <beaky> pyzozord: enought that can fit in 128 bits i think which is billions of teas
[21:10:25] <mrig> oh well, I shall never know what was at the end of that cryptic message from amazon.
[21:10:53] <mrig> Im not going to go through and manually try all the possible combinations :|
[21:11:08] *** Joins: mrlemke (~quassel@208.74.105.200)
[21:11:11] <pyzozord> beaky: ok, I thought, judging by your aoc memory consumption, that maybe your tea database could store 1 tea at a time
[21:11:14] <mrig> I should say latin fonts
[21:11:21] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:11:34] <pyzozord> wait that felt like undercover jab, it wasn't meant that way
[21:12:01] <mrig> Are you making tea jibes at beaky pyzozord? :PO
[21:12:46] <pyzozord> if it makes it any better I don't know how to use matrices so I am stuck on day 19 and will be stuck there for forseeable future
[21:13:03] <pyzozord> (done in python, not rust or agda)
[21:14:44] <pyzozord> ugh I made everything too awkward
[21:14:47] <beaky> i think i know why it is using so much ram it is because i am making it print the entire gigabyte polymer in emacs 
[21:15:42] <pyzozord> that doesnt sound like a good idea
[21:17:43] <mrig> beaky: you could try booting to emacs to see if that will free up some memory?
[21:18:57] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 240 seconds)
[21:20:12] <pyzozord> I think I realized why I don't like scientists too much
[21:20:40] <pyzozord> because I feel stupid around them because I don't know what they are talking about
[21:20:46] <beaky> emacs as init
[21:20:53] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[21:21:14] <pyzozord> but then I realized the annoying thing about science that it is supposed to be used by normal people
[21:21:17] <mrig> just the linux kernel and emacs should be more than enough I think.
[21:21:40] <pyzozord> but in pratice it is produces by scientists for scientists. So if you want to use science you must become a scientist
[21:22:04] <mrig> pyzozord: science is a method that is used to rationalise human creativity and exploration; Anyone can apply it.
[21:22:25] <mrig> forget that you are human though, and it all goes very wrong.
[21:22:30] <mrig> :D
[21:22:32] <pyzozord> I mean using the already accumulated knowledge
[21:22:37] *** Joins: maxzor (~maxzor@2a01cb04054faa0099bcdb78fc1deb85.ipv6.abo.wanadoo.fr)
[21:22:44] <pyzozord> it is encoded and only scientists can decode it to use it
[21:22:45] <mrig> oh hearsay?
[21:22:50] <mrig> always check.
[21:23:27] <pyzozord> I realized it by the way of reading the definition of word code
[21:24:21] <mrig> I dislike bigoted people, no mater their system of rationalisation, of measurement.
[21:24:23] <nomagno> Well science is highly specialized, you can find explanations for the layman of most stuff but it won't be very useful without the surrounding knowledge.
[21:24:39] <pyzozord> it's really just some kind of transformation of the message so that it's either easier to access for people who know how or harder to access by people who don't know how
[21:25:35] <pyzozord> I think in case of science it's just message encoded so that it's easier for other scientists to retrive it (aka shorter and more unambiguous)
[21:25:46] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[21:26:08] <mrig> you can be blinded by your own knowledge too; Which creates quite a delicate situation when there is a vast amount of it.
[21:26:14] <pyzozord> but that makes it less approachable by people who are not familiar with all the notations, symbols and other shorthands and mappings
[21:27:01] <pyzozord> and that is annoying me because I need to dedicate a lot of time to learn "the language" in order to access the knoweledge. Essentially science demands of me to become a scientist to access what it has built
[21:27:27] <mrig> Thinking that you are knowledgeable in THE truth, is always an issue no matter the field.
[21:28:12] <deniska> pyzozord: apply chesterson's fence, why is science full of jargon?
[21:28:21] <pyzozord> and for people who are not interested in communicating or creating more science learning the jargon is a poor investment just to get the knoweledge
[21:28:46] <deniska> pyzozord: because jargon makes inner communication more efficient and precise
[21:28:48] <mrig> pyzozord: best knowledge is always simple and elegant, it is arguably a sign that the language being used in a field is not well constructed when it is really cumbersome, that something is missing.
[21:28:58] <pyzozord> deniska: yes yes, that's my point
[21:29:26] <mrig> something important has not yet been understood, that my 2 cnts anyhow.
[21:29:31] <pyzozord> jargon is the encoding, and it makes science more for scientists and less for non-scientists
[21:29:55] <deniska> pyzozord: it's a trade-off. There're pop-sci authors which make science accessable to non-scientists
[21:30:04] <nomagno> pyzozord: It's probably too much to ask to drop jargon, because you're requesting boilerplate to be added to papers
[21:30:18] <deniska> pyzozord: any occupation is full of jargon, inside jokes, etc, science isn't something special
[21:30:21] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d808:8e39:472e:6a7d)
[21:30:35] <nomagno> Everyone makes terminology for the things they discover/invent/create
[21:30:43] <pyzozord> yeah I haven't thought it exhausitvely, this is how far I got
[21:31:47] <mrig> pyzozord: some approach science by doing not by reading too, then worry about the nomenclature afterwards.
[21:32:19] <pyzozord> nomagno: yeah but naming things after the person who discovered them is not very informative
[21:32:21] <nomagno> The issue is probably that the jargon encodes an amount of knowledge that requires a big time investment to study and understand, no matter how you look at it. Last time you could arguably know "all of science" profoundly was around a century ago.
[21:32:56] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:33:07] <pyzozord> nomagno: or after ather highly complex ideas from different fields that themselves are built on many other ideas
[21:33:18] *** Joins: user_ (~user@213.134.189.60)
[21:33:18] <pyzozord> it's like a npm packages in science
[21:33:22] *** Quits: user_ (~user@213.134.189.60) (Remote host closed the connection)
[21:33:41] <pyzozord> you want a simple website but you must download 500mb of javascript
[21:34:08] <pyzozord> because it's all dependent even if it doesn't have to be, and all encoded with meaningless names
[21:34:08] *** Joins: Akuli (~Akuli@82-203-166-212.bb.dnainternet.fi)
[21:34:46] <nomagno> Well, you know, its not dependent without need
[21:35:00] <pyzozord> isn't it?
[21:35:04] <deniska> Calculus: leftpad of math :D
[21:35:22] <pyzozord> why call if [condition] is called "predicate"
[21:35:36] <pyzozord> it's "condition", why fancy this up
[21:35:40] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[21:35:59] <pyzozord> it's not elegant [knowledge] engineering to use overkill solutions
[21:36:29] <deniska> condition is a fairly broad word with many meaning
[21:36:56] <deniska> like the current temperature and atmospheric pressure
[21:37:30] *** Quits: Decker (~d3x0r@user/d3x0r) (Ping timeout: 268 seconds)
[21:37:45] <deniska> or it's a process of training somebody's reflexes :)
[21:38:06] *** Joins: lilgopher (~textual@2601:241:8000:38f0:6d8c:fef2:66e4:637f)
[21:38:22] <deniska> also it's short for air-condition :)
[21:38:52] <pyzozord> hmm
[21:39:15] <deniska> "Normal" words have many meanings, that's why sciences either use weirder words, or give very weird meaning to existing one
[21:39:34] <pyzozord> yeah but you are "overloading" "predicate" too, then why not overload the simpler term that rings bell in more heads
[21:39:45] <Stefan26> the word "Normal" has a lot of weird meanings in mathematics
[21:40:09] <pyzozord> "normal vector" for example I think it's not a bad name
[21:40:09] <deniska> Like an astrophysicist idea of what a "metal" is, is fairly different from other sciences :)
[21:40:41] *** Joins: Akiva (~Akiva@user/Akiva)
[21:40:41] <pyzozord> maybe all special names and words should be marked somehow
[21:40:51] <deniska> pyzozord: I have no problem with the word "predicate", but the term "normal (vector)" tripped me out for a while when I was younger :)
[21:40:55] <Stefan26> yeah name-spaces
[21:41:07] <pyzozord> like there is special science font that everyone in the entire world uses, only for science names
[21:41:25] <pyzozord> and when you see words in this font you know you need to look them up because they have precise meaning ascribed to them
[21:42:15] <pyzozord> I am intimidated by "predicate" when I hear words like this I am never sure if I understand everything and in the right context
[21:42:16] <deniska> "The ::normal way to calculate a algebra::linear::normal of a geometry::face…
[21:42:24] <pyzozord> yes!
[21:42:27] <pyzozord> that would be good
[21:42:30] <pyzozord> I'd like that
[21:42:33] <deniska> meh, too noisy
[21:42:41] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:42:55] <pyzozord> there could be syntax for including namespaces
[21:43:24] <pyzozord> "Using algebra::linear as L: The ::normal way to calculate L::nomral of geometry::face..."
[21:44:00] <deniska> yeah, we just go from geometry import * and roll with it, because it's a paper on geometry
[21:44:02] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[21:44:10] *** Joins: inky (~inky@141.136.79.122)
[21:44:41] <pyzozord> and, and! I'd argue that it is more important to allow access to basic science to more people than to make advance science easier for scientists
[21:45:05] <pyzozord> because that way we get more people who know stuff in general, and higher probability for more advanced scientists in the future
[21:45:34] <pyzozord> it is the more long term startegy that benefits everyone more
[21:45:51] <pyzozord> and I can use knoweledge I want without downloading 500 of leftpads
[21:45:53] <pyzozord> 500mb
[21:47:37] *** Quits: inky_ (~inky@188.115.252.175) (Ping timeout: 240 seconds)
[21:48:54] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 256 seconds)
[21:49:47] *** Joins: Decker (~d3x0r@user/d3x0r)
[21:49:54] *** Quits: stagas (~stagas@2a02:587:c424:d1a:4f9c:a9f:3654:e1af) (Ping timeout: 260 seconds)
[21:50:12] <nomagno> ... Can I memory map an NFC tag to a cartridge trough an active reader inside the cartridge?
[21:50:29] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[21:51:01] <nomagno> Just imagine, you drop an NFC tag onto NomagnoCPU and boom, new program!
[21:52:01] *** Joins: stagas (~stagas@2a02:587:c40a:fddf:a408:9965:b846:4b9)
[21:52:30] <pulse> Sometimes I wish I could go back in time, find whoever invented the blockchain, and feed them to hungry sharks
[21:52:53] <sonny> NFC?
[21:53:10] <sonny> pulse: sometimes I wonder if he was a genius
[21:53:15] <pulse> Nintendo Fight Championship
[21:53:24] <sonny> oh
[21:53:51] <nomagno> Near-Field Communication. NFC is used by Nintendo, however
[21:53:55] <nomagno> Extensively.
[21:54:14] <pulse> My bad, I read NFC and I immediately thought it said NFT
[21:54:28] <mrig> pyzozord: lets not forget that we can still not square a circle!
[21:54:55] <pulse> Can we triangle a circle
[21:55:01] <mrig> and it is not through lack of trying ;)
[21:55:06] <nomagno> sonny: You drop a powerless, batteryless chip onto a reader, and it is powered wirelessly just long enough to transfer its contents
[21:55:39] <nomagno> It's basically wireless charging, applied to PCBs capable of storing up to a few KBs of data
[21:55:46] <mrig> pulse a triangle is nought but a straight lines first attempt at becoming a circle.
[21:55:59] <sonny> sounds cool, but I can't really follow :/
[21:56:03] <pulse> Is there a twoangle
[21:56:48] <Decker> ya but only on a sphere
[21:57:04] <pyzozord> lol pulse contributing :D
[21:57:12] <nomagno> sonny: So, usually you need either physical contact or a small battery to power a persistent read/write memory, like a USB or a GameBoy cartridge's save data
[21:57:13] <pyzozord> Nintendo Fight Chempion and twoangle :D
[21:57:42] <pyzozord> wouldn't that be a duoangle though?
[21:58:13] <nomagno> NFC basically allows you to burn data onto a thin sheet of circuits, and retrieve data from it, without wires or batteries
[21:58:37] *** Quits: emf_ (~emf@2620:10d:c091:480::1:4a0) (Ping timeout: 240 seconds)
[21:58:53] <sonny> oh interesting
[21:58:55] <pyzozord> I think debitcards use nfc's or similar technology?
[21:59:10] <nomagno> They use NFC, specifically.
[21:59:24] *** Joins: emf (~emf@2620:10d:c091:480::1:4a0)
[21:59:35] <deniska> I think NFC is an umbrella term for short range wireless? Or is it a specific one?
[21:59:49] <apotheon> pulse: What's up with your hatred for blockchains?
[21:59:58] <nomagno> It is a specific one
[22:00:03] <nomagno> The general one is RFID
[22:00:15] <deniska> heh, I thought rfid is a specific standard :)
[22:00:53] <[itchyjunk]> why does a phone come with nfc?
[22:01:01] <[itchyjunk]> i've seen icons for it though
[22:01:02] <pulse> apotheon, Listening to my overly annoying crypto friends every single day
[22:01:19] <pyzozord> good question, I think it's because that way they can track you
[22:01:24] <mrig> pulse: I think otherwise known as an argument :D
[22:01:24] <deniska> [itchyjunk]: nfc payment, reading tags, exchanging bits of info with nearby devices
[22:01:25] <apotheon> nothing to do with the tech, then; a social problem
[22:01:36] <nomagno> [itchyjunk]: You can use it to transfer data between phones, or to use specific NFC tags for phone/home automation
[22:01:40] <deniska> pyzozord: wifi and bluetooth are much more useful for tracking than nfc
[22:01:43] <[itchyjunk]> oh the phone swiping to pay is nfc?
[22:01:49] *** Joins: python476 (~user@88.160.31.174)
[22:01:50] <apotheon> pulse: Don't take that out on poor Satoshi.
[22:01:52] <pulse> apotheon, If that tech wouldn't exist, I would be spared
[22:01:53] <[itchyjunk]> is that also the thing used in japanese train stops?
[22:02:05] <nomagno> Yes
[22:02:05] <[itchyjunk]> where y ou can use it for train tickets
[22:02:10] <pyzozord> deniska: that is true, I really must downgrade to a dumb phone
[22:02:12] <nomagno> And probably yes
[22:02:15] <pulse> Behold. A twoangle. https://i.imgur.com/S1RMeQk.png
[22:02:16] <bayaz> Type: image/png Size: 7.5 kB 
[22:02:19] <apotheon> pulse: Stop having crypto friends like that, instead.
[22:02:21] <[itchyjunk]> oh that answers a few things
[22:02:26] <deniska> pyzozord: but nothing is as good at tracking as GSM et al
[22:02:29] <apotheon> You can actually do something about that.
[22:02:29] *** Joins: xkuru (~xkuru@user/xkuru)
[22:02:31] <pyzozord> oh wait nevermind, you can triangulate somones location with gsm
[22:02:33] <[itchyjunk]> blockchain 2.0 with web 3.0 is the future.
[22:02:34] <deniska> pyzozord: it's, like, built into how they operate
[22:02:38] <nomagno> The reader produces a very small electromagnetic field, so whenever you bring an NFC tag like a credit card near it (1-2 centimeters max) it produces a small energy burst that lasts just long enough to dumb the memory
[22:02:54] <nomagno> That's passive-active protocol. The active-actice protocol is much simpler and powerful
[22:03:07] <nomagno> Which is what is used for phone paying, indeed
[22:03:15] <pulse> apotheon, "There is no single person in existence who had a problem they wanted to solve, discovered that an available blockchain solution was the best way to solve it, and therefore became a blockchain enthusiast."
[22:03:20] <nomagno> With a layer of proprietary encryption, of course ;)
[22:03:25] <pulse> Blockchain is the stupidest tech in existence
[22:03:41] <pulse> Centralized is far better in almost every single context
[22:03:41] <nomagno> PS: I wouldn't trust Google or Apple to do my payings
[22:03:46] <pyzozord> pulse: ugh that does sound annyoing to hear every day
[22:04:01] <pyzozord> even though blockchain as a tech is not bad (like most any tech)
[22:04:11] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[22:04:16] <pulse> It's nowhere near as useful as it's hyped
[22:04:16] <apotheon> pulse: It solves the problem of having a trustless decentralized database.
[22:04:18] <pulse> It's a hyped tech
[22:04:19] <[itchyjunk]> nfc sounds like rfid then?
[22:04:23] <pulse> apotheon, Which isn't a problem
[22:04:26] *** Joins: rickybob (~rickybob@35.143.255.39)
[22:04:28] <[itchyjunk]> blockchain isn't stupid.
[22:04:29] <pulse> It both creates and solves a problem
[22:04:31] <[itchyjunk]> it's a great concept.
[22:04:34] <apotheon> pulse: maybe not for you
[22:04:40] <[itchyjunk]> just because the use is limited doesn't make the tech stupid
[22:04:43] <deniska> Dunno, I used bitcoin to send and receive payments a few times, was nice
[22:04:48] <apotheon> s/having/needing/
[22:04:49] <pyzozord> no I think pulse just reacts to the hype more than the tech itself
[22:04:52] <pyzozord> I understand that
[22:04:53] <pulse> It's like saying to someone, hey you don't have any bananas! But look, I have bananas to sell!
[22:04:54] <apotheon> dunno why I misphrased it that way
[22:05:20] <[itchyjunk]> whats wrong with selling bananas to someone who doesn't have bananas?
[22:05:29] <pulse> If they didn't know about bananas they could just eat apples :P
[22:05:36] <pyzozord> pulse: it must feel like this https://knowyourmeme.com/photos/1481232-homer-simpson-in-a-lesbian-bar
[22:05:36] <bayaz> Title: bitcoin bar | Homer Simpson in a Lesbian Bar 
[22:05:49] <pulse> pyzozord, Ugh :p
[22:06:03] <apotheon> By that reasoning, nobody should sell anything because if you didn't know about the product in question you wouldn't seek it out to buy it.
[22:06:11] <pyzozord> I don't have many friends on repeat about blockchain
[22:06:20] <pulse> pyzozord, It's actually almost exactly like this https://www.youtube.com/watch?v=TUB9jgMuC7U
[22:06:20] <[itchyjunk]> neither do i
[22:06:22] <bayaz> Title: my crypto friend calls me every day and this is what he sound like 
[22:06:22] <pyzozord> so I don't get the worst of the hype
[22:06:28] <[itchyjunk]> i know people really into blockchains
[22:06:29] <apotheon> suddenly we're all hunter-gatherer people again
[22:06:41] <[itchyjunk]> but 90% of the time, they are talking about some obscure hard math problem
[22:06:42] <pyzozord> pulse: lol :D
[22:06:47] <[itchyjunk]> not hur dur block chain
[22:06:52] <deniska> all people excited about something can be unbearable
[22:07:00] <[itchyjunk]> like the layer 2 problem on block chains is extremly cool
[22:07:00] <deniska> like people who use arch btw :D
[22:07:16] <[itchyjunk]> like people who like programming
[22:07:17] * [itchyjunk] hides
[22:07:43] <user51> deniska: i'm gonna say 'btw i use awk' from now on :P
[22:07:44] *** Quits: rickybob (~rickybob@35.143.255.39) (Read error: Connection reset by peer)
[22:07:46] * pyzozord compiles [itchyjunk] and ships him to the cloud
[22:07:51] <nomagno> Decentralization, in the distributed computing sense, means you can't wipe data off earth by cutting power to a server.
[22:08:21] <[itchyjunk]> distributed verification of work is also very interesting
[22:08:26] <apotheon> user51: d it
[22:08:30] <nomagno> In the P2P software networking design sense, it means no one gets to be on a position of power over anyone else
[22:08:32] <apotheon> s/d /do /
[22:08:34] <pyzozord> user51: I kinda do say "my terminal emulator" and "my code editor" too often :P
[22:08:37] <pulse> nomagno, Which is nice for all sorts of bad guys
[22:08:42] <[itchyjunk]> once compute/power is less of an issue, that might have some nice byproducts
[22:08:53] <sonny> what's hard?
[22:09:03] <sonny> you can use keys / certs
[22:09:08] <[itchyjunk]> you don't wanna know what's hard
[22:09:17] <[itchyjunk]> bad guys also read book 
[22:09:21] <[itchyjunk]> lets ban books!
[22:09:24] <sonny> lol
[22:09:28] <pulse> Books aren't active
[22:09:33] <nomagno> A blockchain is literally a distributed hard drive
[22:09:37] *** Quits: emf (~emf@2620:10d:c091:480::1:4a0) (Ping timeout: 240 seconds)
[22:09:40] <nomagno> It can't be bad or good by itself
[22:09:47] <user51> a.. blokechain?
[22:09:48] <pulse> If you have bitcoin and access to dark web, you can do anything illegal and the gov can't do anything about it
[22:09:52] <user51> wait, i didnt iread it right
[22:10:00] <[itchyjunk]> if you have $10 and a few working neuron
[22:10:02] <apotheon> pulse: good
[22:10:03] <sonny> what application does blockchain have?
[22:10:06] <[itchyjunk]> you can walk around and find meth
[22:10:10] <[itchyjunk]> lets ban $10?
[22:10:14] <pulse> apotheon, Good, except for all the cases where it's horribly bad ...
[22:10:39] <user51> apotheon: awks advantage really feels like portability
[22:10:41] <nomagno> You're just being fear monger at this point
[22:10:44] <apotheon> Don't punish oppressed people being persecuted by their governments just because some people are assholes.
[22:10:48] <user51> doing anything serious in it is.. too much effort
[22:10:57] <[itchyjunk]> libgen and sci hub's both illegal
[22:10:57] <user51>  @patsie75
[22:10:57] <user51> patsie75 add puzzle text
[22:10:57] <user51> Latest commit a8c31b9 on Dec 6, 2020
[22:11:01] <apotheon> user51: yes, exactly
[22:11:02] <user51> crap,
[22:11:03] <[itchyjunk]> both get donations in crypto
[22:11:05] <pulse> You can't get underage female slaves abducted from Taiwan with paypal, that's all I'm sayin
[22:11:07] <[itchyjunk]> those evil people!
[22:11:08] <user51> https://www.youtube.com/watch?v=uxXiSEGi6wQ
[22:11:09] <bayaz> Title: awk chip8 
[22:11:11] <[itchyjunk]> providing science for free
[22:11:13] <user51> thats what i meant to paste
[22:11:13] <apotheon> user51: portability is king
[22:11:16] <[itchyjunk]> curse you, bit coins!
[22:11:19] <sonny> just wanted to say distributed verification sounds like it's kinda done already
[22:11:19] <apotheon> (for awk's context
[22:11:20] <apotheon> )
[22:11:40] <[itchyjunk]> sonny, one you mentioned are trustful
[22:11:45] <user51> apotheon: it's to build things around the associative arrays
[22:11:47] <[itchyjunk]> blockchains require low trust
[22:11:56] <[itchyjunk]> (maybe even no trust )
[22:11:57] *** Quits: Jong (~Jong@163.114.132.6) (Ping timeout: 240 seconds)
[22:12:16] <sonny> hmm
[22:12:17] <user51> i think i'll one day do a binary tree by concatenating: tree[prefix (x>y)]
[22:12:21] <apotheon> user51: The key value of awk is that it adds a lot of capability to sh without using a less-portable, buggier, more exploitable shell.
[22:12:45] <sonny> [itchyjunk] what's the crypto part for then?
[22:12:57] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[22:13:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:13:25] *** Quits: X-Scale (~ARM@31.22.167.116) (Ping timeout: 265 seconds)
[22:13:42] <apotheon> 11:42 < sonny> [itchyjunk] what's the crypto part for then?
[22:13:45] <user51> apotheon: still planning to do some lisp in awk?
[22:13:46] <apotheon> What does that question mean?
[22:13:54] <pyzozord> I'd like to make some blockchain app and get rich
[22:13:58] <[itchyjunk]> you mean like crypto in cryptocurrency?
[22:14:04] <[itchyjunk]> encrypted tokens
[22:14:05] <apotheon> user51: I don't think I said I was going to "do some lisp in awk".
[22:14:09] <[itchyjunk]> you can't forge new tokens
[22:14:10] *** Joins: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt)
[22:14:14] <sonny> blockchain uses crypto right?
[22:14:16] <pyzozord> but it seems all blockchain apps are really financial services
[22:14:18] <[itchyjunk]> like government can't print a trillion dollars
[22:14:19] <user51> apotheon: i meant implement, my bad
[22:14:24] <[itchyjunk]> blockchaing uses cryptography
[22:14:31] <sonny> yeah, what for?
[22:14:36] <[itchyjunk]> sonny, you should stop saying "crypto" by itself
[22:14:38] <[itchyjunk]> it isn't a word
[22:14:40] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[22:14:48] <[itchyjunk]> either cryptography, cryptocurrency etc etc
[22:14:49] <sonny> ok
[22:14:51] <apotheon> Yeah, it's confusing when people say "crypto" by itself.
[22:14:58] <pyzozord> https://en.wikipedia.org/wiki/Merkle_tree
[22:14:59] <bayaz> Title: Merkle tree - Wikipedia 
[22:15:03] <EdFletcher> cryptographers hate it 
[22:15:06] <[itchyjunk]> sonny, to mathematicians, "crypto" stands for "cryptography"
[22:15:22] <[itchyjunk]> to hip kids "crypto" means "cryptocurrency like things"
[22:15:29] <pulse> EdFletcher, "Learn this one weird trick and become a crypto millionaire overnight?"
[22:15:30] <pyzozord> do they use cryptography or really "hash functions"? :P
[22:15:35] <[itchyjunk]> any digital token for some
[22:16:00] <EdFletcher> pulse: 1. crypto 2. ??? 3. profit!! 😆 
[22:16:13] <pyzozord> accurate
[22:16:15] <apotheon> pyzozord: Hash functions are cryptographic.
[22:16:19] <pulse> In my friend's case, more like 1. have money 2. crypto 3. have less money
[22:16:27] <EdFletcher> also accurate! 
[22:16:41] <sonny> I thought hash functions can be cryptographic
[22:16:42] <pyzozord> apotheon: yeah but using hash function can't be really called "using cryptography" in my opinion
[22:16:49] <apotheon> pyzozord: . . . to the extent they aren't vulnerable to collisions that undermine their utility.
[22:16:50] <[itchyjunk]> sonny, yes
[22:16:57] <apotheon> pyzozord: Why not?
[22:17:11] <apotheon> Verification functionality is right up cryptography's alley.
[22:17:23] <pyzozord> apotheon: hash function are pretty popular outside cryptographical circles, we must use them to make hashmaps
[22:17:28] <apotheon> Hash functions are verification tools.
[22:17:40] <sonny> pyzozord so how does this merkle tree work, and what for?
[22:17:42] *** Joins: X-Scale` (~ARM@83.223.243.175)
[22:17:51] <[itchyjunk]> sonny, hashing is cryptographic act in some sense
[22:18:00] *** Quits: macer181 (~macer181@61.52.246.142) (Quit: Leaving)
[22:18:12] <[itchyjunk]> hashing is cryptography
[22:18:26] <[itchyjunk]> you can communicate by turning plain text into cypher text
[22:18:30] <apotheon> pyzozord: Do you think that a cipher is cryptography?
[22:18:36] <[itchyjunk]> thats really the bare minimum requirement
[22:18:47] <pyzozord> apotheon: hmm, I think yes
[22:18:54] <apotheon> pyzozord: . . . because a cipher is, in some sense, essentially a two-way hash function.
[22:18:56] <sonny> I thought cryptography was the science of sharing secrets :P
[22:19:06] <pyzozord> apotheon: yeah i know
[22:19:16] <apotheon> but for some reason a hash function doesn't count
[22:19:20] <pyzozord> apotheon: i'm not fully consistant in my views :P
[22:19:23] <apotheon> Your standards are weird.
[22:19:40] <pyzozord> its all about who knows what
[22:19:41] <[itchyjunk]> sonny, you can share secrets with one way hash too
[22:19:48] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[22:19:49] *** X-Scale` is now known as X-Scale
[22:19:53] <pyzozord> everyone knows hashfunctions
[22:20:03] <[itchyjunk]> so?
[22:20:27] <sonny> git is a blockchain 
[22:20:28] <apotheon> "Everyone" knows Rot13 and the caesar cipher, too, but they're still cryptographic functions.
[22:20:45] <apotheon> shit, something wrong with my brain today
[22:20:45] <pyzozord> so calling using hashfunctions calling using cryptography in my view is like jumping and calling it using physics
[22:20:47] <[itchyjunk]> yeah having shared secret is a small niche in cryptography
[22:20:50] <pyzozord> (hyperbole)
[22:20:51] <sonny> I thought rot13 is the ceasar cupher?
[22:20:51] <apotheon> "rot13 and the Caesar cipher"
[22:21:03] <[itchyjunk]> i think you're confusing a small subset of cryptogrpahy with cryptography
[22:21:08] <pulse> I think it's accurate that hash functions aren't strictly cryptography
[22:21:10] <apotheon> pyzozord: I guess it's fine if your position is "I know I'm wrong, but I like it that way."
[22:21:14] <pulse> There's https://en.wikipedia.org/wiki/Cryptographic_hash_function
[22:21:14] <bayaz> Title: Cryptographic hash function - Wikipedia 
[22:21:14] <[itchyjunk]> and calling actual cryptography a hyperbole which is halarious
[22:21:18] <pulse> Which is used strictly in cryptography
[22:21:30] <pulse> But a "normal" hash function can easily be used outside of cryptography
[22:21:32] <[itchyjunk]> what is "strictly cryptography" ? 
[22:21:45] <[itchyjunk]> a cryptographic system can have a lot of non cryptographic part.
[22:21:52] <pyzozord> apotheon: I wouldn't really call it wrong, just has inner logic that's harder to figure out
[22:22:01] <pulse> [itchyjunk], Cryptography is establishing a secure communication medium
[22:22:16] <pulse> Hashing is just a way of ensuring stuff on the medium
[22:22:21] <apotheon> pyzozord: Perhaps it helps to realize the distinction made between a cryptographic tool anyone can understand and one only a cryptographer can undertand is that the latter is "strong" cryptography.
[22:22:25] <[itchyjunk]> cryptography is study of secure communication
[22:22:29] <[itchyjunk]> not establishing it
[22:22:41] <[itchyjunk]> a cryto system can be used to establish it.
[22:22:44] <pulse> [itchyjunk], Nitpicking :P
[22:22:45] <[itchyjunk]> but a system can have many parts
[22:22:56] <[itchyjunk]> most of it without any cryptography related things
[22:23:11] <pulse> The point is that hashing isn't necessarily used for cryptography
[22:23:25] <[itchyjunk]> it is though, 2 way hashes
[22:23:27] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[22:23:32] <pyzozord> apotheon: yeah just a matter of naming I guess
[22:23:33] <[itchyjunk]> or hashtable based refrencing 
[22:23:41] <pulse> A hash is a very specific function with very specific results [itchyjunk] 
[22:23:47] <pulse> "2 way hash" seems like a silly idea
[22:23:55] <[itchyjunk]> https://en.wikipedia.org/wiki/Hash-based_cryptography
[22:23:55] <bayaz> Title: Hash-based cryptography - Wikipedia 
[22:24:00] <apotheon> Ciphers aren't necessarily used for cryptography, either.
[22:24:07] <apotheon> Nothing is necessarily used for cryptography.
[22:24:13] <apotheon> . . . except math.
[22:24:16] <[itchyjunk]> pulse, hash based crypto is studied as much as any other system.
[22:24:27] <[itchyjunk]> a standard mathematical crypto book covers it.
[22:24:33] <[itchyjunk]> it's not some esotoric niche idea.
[22:24:45] <pulse> Saying "two way hash" literally defeats the purpose of a hash
[22:24:49] <[itchyjunk]> you can check out silvermans book
[22:24:54] <pulse> Whose sole purpose is to be one way
[22:25:07] <[itchyjunk]> "A hash function is a mathematical function that converts a numerical input value into another compressed numerical value."
[22:25:13] <[itchyjunk]>  i think you're confusing one way functions and hash.
[22:25:24] <[itchyjunk]> Some hash are one "trap door" functions.
[22:25:29] <[itchyjunk]> Not all hashes are one way functions
[22:25:40] <pulse> [itchyjunk], Every single hash function is designed with minimal reversibility in mind
[22:25:41] <[itchyjunk]> Not all one way functions can be used to create hash.
[22:25:47] <pulse> The sole purpose of a hash function is to be irreversible
[22:25:49] <[itchyjunk]> pulse, not ture.
[22:25:49] <apotheon> Apparently, it's not true that "everyone" knows hashes.
[22:25:53] <[itchyjunk]> No.
[22:26:06] <[itchyjunk]> https://www.technipages.com/definition/one-way-hash-function
[22:26:13] <[itchyjunk]> One way hash function has literal books on it.
[22:26:49] <pyzozord> ok back to day 19
[22:26:56] <[itchyjunk]> there are all sorts of use for trapdoor functions
[22:27:33] <pulse> All hash functions are one way hash functions [itchyjunk] 
[22:27:38] <[itchyjunk]> lol
[22:27:39] <[itchyjunk]> no
[22:28:11] <potatoxel[m]> isnt it if it was reversible it would be just encryption
[22:28:39] <apotheon> I suspect there's no such thing as a truly irreversible hash function that doesn't have collisions, now or at any time in the future.
[22:28:49] <pulse> No, there can't be
[22:28:50] <[itchyjunk]> all hash functions are designed to be trapdoor functions
[22:28:59] <pulse> But every hash function is designed with as little reversibility as you can possibly get
[22:29:02] <[itchyjunk]> one way functions are HARD to come by and are rare as fuck
[22:29:14] <pulse> [itchyjunk], I don't think you know what you're talking about honestly
[22:29:16] <[itchyjunk]> you're using one way to mean trapdoor
[22:29:32] <[itchyjunk]> pulse, i don't think you know what you're talking about as well.
[22:29:38] <[itchyjunk]> https://en.wikipedia.org/wiki/Trapdoor_function
[22:29:38] <bayaz> Title: Trapdoor function - Wikipedia 
[22:29:57] <potatoxel[m]> f(x) =0
[22:29:57] <potatoxel[m]> here is a one way function
[22:30:13] <[itchyjunk]> :( yes you found one
[22:30:22] <[itchyjunk]> i kinda mean useful one but you got me
[22:30:23] <pulse> [itchyjunk], The idea of a hash is to _not_ be able to get back the original value
[22:30:28] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:30:46] <[itchyjunk]> pulse, yes the idea of hash is to want to be a one way function.
[22:30:51] <[itchyjunk]> Not all hashing functions are one way functions.
[22:30:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:30:59] <[itchyjunk]> You can have trapdoor functions as hash
[22:31:07] <[itchyjunk]> there are cryptographic systems using this principle.
[22:31:23] <[itchyjunk]> Like I said, silvermans "Introduction to mathematical cryptogrpahy" touches on this.
[22:31:36] <potatoxel[m]> what is ur definition of hash [itchyjunk] 
[22:31:41] <pulse> Doesn't really change the fact that a hash function can be used outside of cryptographic contexts
[22:32:05] <apotheon> In any case, in practice, the difference between a one-way hash function and a two-way hash function is not a difference between being outside the realm of cryptography and within that realm; it's a difference in degrees of difficulty.
[22:32:41] <[itchyjunk]> potatoxel[m], map from arbitrary sized domains to fixed size codomain.
[22:32:53] <apotheon> There is no magic number that defines the cut-off point, in part because that's absurd in concept, and in part because it would be invalidated the next time someone broke a hash.
[22:32:53] <[itchyjunk]> no one said hash function cannot be used outside cryptography.
[22:33:02] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:33:02] <[itchyjunk]> Every mathematical function can be used outside of cryptography.
[22:33:31] <pulse> So then you agree with what I originally said? :P
[22:33:33] <[itchyjunk]> potatoxel[m], whatabout you?
[22:33:33] <pulse> <pulse> I think it's accurate that hash functions aren't strictly cryptography
[22:33:52] <[itchyjunk]> nothing is "strictly" cryptogrpahy
[22:34:02] <apotheon> The actual definition of a hash function is that it's a function that maps arbitrary data to a value of fixed data size.
[22:34:05] <[itchyjunk]> elliptical curves are studied more outside of crypto than in there.
[22:34:07] <potatoxel[m]> but if the codomain is fixed size, there will always be collisions, thus it cant be reversible.
[22:34:07] <pulse> No, there is definitely things that are strictly cryptography
[22:34:08] *** Joins: rickybob (~rickybob@35.143.255.39)
[22:34:12] <[itchyjunk]> next EEC isnt' cryptography.
[22:34:15] <[itchyjunk]> Oh yeah?
[22:34:20] <[itchyjunk]> What's "strictly cryptographic" ?
[22:34:22] <pyzozord> i thought "codomain" would be category theory term, but it looks like it's a set theory term
[22:34:25] <apotheon> 12:03 < pulse> <pulse> I think it's accurate that hash functions aren't strictly cryptography
[22:34:26] <pulse> [itchyjunk], SHA256 :P
[22:34:32] <[itchyjunk]> pyzozord, yes its a set theory term
[22:34:36] <apotheon> pyzozord: One might as well say "cryptography isn't strictly cryptography".
[22:34:42] <apotheon> err
[22:34:46] <apotheon> pulse: not pyzozord 
[22:34:47] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[22:34:54] <pyzozord> you guys are arguing semantics
[22:34:55] *** Joins: eXistenZ (~biskit@2a02:14c:2a4:8000:35c8:8264:8848:4c4b)
[22:34:59] <[itchyjunk]> sha256 is used outside cryptogrpahy.
[22:35:02] <pyzozord> and i started it again :(
[22:35:16] <[itchyjunk]> sha family existed pre use by cryptography heh
[22:35:17] <pulse> apotheon, No, that's ... I don't even understand what you guys aren't getting here. Cryptography involves a secure medium. Hashes don't necessarily.
[22:35:20] <pulse> It's not that complicated
[22:35:26] <apotheon> Hashes are a subject of study within the field of cryptography.
[22:35:30] <[itchyjunk]> pulse, the place where the function can map to is its codomain
[22:35:36] <pulse> apotheon, That's definitely true
[22:35:50] <[itchyjunk]> <pulse> apotheon, No, that's ... I don't even understand what you guys aren't getting here. Cryptography involves a secure medium. Hashes don't necessarily.
[22:35:51] <apotheon> The same is true of ciphers, and cryptanalysis . . .
[22:35:56] <[itchyjunk]> no cryptography is the study
[22:36:06] <[itchyjunk]> a cryptographic system "may" involved "secure medium"
[22:36:15] <[itchyjunk]> zero knowladge means you don't need medium to be secure
[22:36:25] <[itchyjunk]> thats the whole idea behind quantum encryption
[22:36:34] <[itchyjunk]> (which is also covered in silvermans book, last chapter)
[22:36:49] <pulse> I have no idea what quantum cryptography is, gonna have to look that up
[22:36:54] *** Joins: ravan (~ravan@user/ravan)
[22:36:59] <pyzozord> have you read the previous chapters too or just the last one? :P
[22:37:31] <[itchyjunk]> https://link.springer.com/chapter/10.1007/978-3-319-78372-7_16
[22:37:34] <bayaz> Title: Unforgeable Quantum Encryption 
[22:37:42] <Decker> it's using the fact that photons don't spin when they move at the speed of ligt - so any signal emitted should be the exact same state as when sent; but if someone uses something inbetween to check the polarization of the signal, it will change the signal
[22:37:45] <apotheon> If hashes are a subject of study within the field of cryptography, hashes are . . . a subject of study within the field of cryptography.  I'm not sure what pulse is trying to argue if pulse agrees with that.
[22:38:13] <[itchyjunk]> Decker, yeah i've head of that one
[22:38:17] <pulse> apotheon, They can be studied in other domains too
[22:38:18] <[itchyjunk]> i think google is interested in that one
[22:38:22] <GeDaMo> Can photons travel slower than the speed of light?
[22:38:26] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 260 seconds)
[22:38:26] <Decker> the cryptography in bitcoin isn't about the hashing though - there's also a digitial signature public/private key so you can prove you made the transaction against your wallet
[22:38:27] *** Quits: exvicesindaco (~exvicio@host-79-40-145-145.business.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[22:38:33] <apotheon> pulse: So can everything else in cryptography.
[22:38:33] <[itchyjunk]> i saw some other one where they used entanglement to solve 3 color problem
[22:38:39] <pulse> apotheon, That's like saying ... xor functions are studied within cryptography, that means that xor is cryptography!
[22:38:40] <pulse> It's wrong
[22:38:45] <Decker> GeDaMo moving through a medium they can  -also if interfered with 
[22:38:48] <[itchyjunk]> GeDaMo, yes they can!
[22:38:49] <GeDaMo> Ah
[22:39:04] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[22:39:05] <[itchyjunk]> GeDaMo, https://www.sciencedaily.com/releases/2015/01/150123144158.htm#:~:text=Scientists%20have%20managed%20to%20slow,structure%20can%20reduce%20their%20speed.
[22:39:08] <[itchyjunk]> oops
[22:39:15] <[itchyjunk]> https://www.sciencedaily.com/releases/2015/01/150123144158.htm
[22:39:15] <Decker> OTP with xor IS crytpography :)
[22:39:20] <apotheon> pulse: xor *is* cryptgraphy
[22:39:27] <pulse> Hash functions are independent of the field of study. They are interesting functions with nice math properties that turn out to be very useful in cryptography. But to say they themselves _are_ cryptography is abit silly
[22:39:29] <apotheon> pulse: The fact it's also something else doesn't mean it isn't cryptography.
[22:39:31] <[itchyjunk]> Decker, exactly
[22:39:41] <[itchyjunk]> pulse seems to have this weird idea of what cryptography is
[22:39:52] <pulse> apotheon, No, it's also logic, and math, and ...
[22:40:02] <apotheon> A trike with an internal combustion engine delivering power to the wheels is not just a trike; it's also a motor vehicle.
[22:40:05] *** Quits: rickybob (~rickybob@35.143.255.39) (Quit: rickybob)
[22:40:16] <[itchyjunk]> everything is also studied outside crypto
[22:40:24] <pulse> Just because you need a steering wheel for a car, doesn't mean steering wheel is always a part of a car :P
[22:40:27] <[itchyjunk]> not sure where you got this idea that some topics are exclusive to crypto
[22:40:29] <apotheon> The fact it has three wheels doesn't make it not a motor vehicle.
[22:40:39] <[itchyjunk]> crypto borrows a lot of preexisting math to study this
[22:40:44] <apotheon> "Trike is also a term for something that is powered by pedals!"
[22:41:04] <apotheon> . . . and yet trike design is also a motor vehicle subject.
[22:41:23] <pulse> Listen, this is the internet, and this means I'm right and you're wrong :P
[22:41:36] <apotheon> pulse: Nobody said hashes are *only* cryptography.
[22:41:45] <pulse> Well you certainly strongly implied it
[22:41:49] <apotheon> No, I did not.
[22:41:55] <apotheon> I said they're cryptography.
[22:41:58] <apotheon> I did not say "only".
[22:42:04] <pyzozord> I don't think i "do cryptography" when I am writing a hasmap implementation with hashing function that is strlen
[22:42:21] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:42:25] <apotheon> pyzozord: and yet hashes are a subject of cryptography
[22:42:43] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:42:50] <pyzozord> yes, but that doesn't matter in the context of my statement
[22:42:52] <[itchyjunk]> pyzozord, right
[22:42:55] <apotheon> The context of this whole stupid thing started with *cryptographic* hashes used in blockchain technology.
[22:43:15] <[itchyjunk]> but if you do the same thing with intention of studying secure communication, you are doing cryptoraphy
[22:43:19] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[22:43:20] <apotheon> pyzozord: Are you changing the subject to things specifically not employed in cryptographic studies, then?
[22:43:44] <pyzozord> well you guys are pointing out something interesting, the intent
[22:43:55] <apotheon> The point of contention was pulse claiming hashes aren't cryptography.
[22:44:04] <pyzozord> so if it my intent is to be cryptographic then my strlen may be considered cryptography
[22:44:08] <[itchyjunk]> cryptography produces very little original math (don't hurt me)
[22:44:13] <apotheon> (as far as I recall, that was the point)
[22:44:15] <[itchyjunk]> it uses a lot of algebra and probability
[22:44:36] <[itchyjunk]> claiming some functions are "purely cryptographic" is silly
[22:44:40] <[itchyjunk]> and not useful
[22:44:43] <pyzozord> in that sense, the question is if blockchain creators intend to be "cryptographic"
[22:44:52] <apotheon> The argument was that blockchain use of hashes is somehow not qualification for anyone using cryptography.
[22:44:58] <[itchyjunk]> pyzozord, they did
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:26] <Decker> that doesn't make the block chain encrypted though
[22:45:27] <apotheon> Considering that blockchain hashes were employed for cryptographically strong verification purposes, fuck yes, it's intended to be "cryptographic".
[22:45:57] <[itchyjunk]> right
[22:45:59] <pyzozord> my argument was that it's just using hashfunction and calling it cryptography is an exaduration in my opinion
[22:46:14] <[itchyjunk]> in general, maybe. but in context of blockchains
[22:46:15] <Decker> exageration :)
[22:46:18] <apotheon> Decker: I think you mean "enciphered".  Using "encrypted" there either means your statement is incorrect or you're misusing the term "encrypted".
[22:46:19] <pyzozord> yes thanks
[22:46:27] <[itchyjunk]> its being used for some very specific purpose
[22:46:54] <Decker> apotheon it's not encrypted every record's data is clear and readable.  The only thing that's cryptographic is the signature and the computed hash
[22:46:56] <apotheon> exaggeration
[22:46:57] <pyzozord> in the same sens using strlen as a hashfunction I don't think is cryptography even if I intend it to be cryptography
[22:46:58] <apotheon> two Gs
[22:47:20] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:28] <apotheon> Decker: The *hash* itself is an encrypted form of some other value.
[22:47:34] <[itchyjunk]> pyzozord, i can use falling rocks as communication medium
[22:47:42] <Decker> the data, and a nonce that results with a hash
[22:47:44] <GeDaMo> A hash can be cryptographically strong even if it's not being used for cryptography
[22:47:53] <Decker> but that's not ecyrpting the data... just hashing it
[22:47:56] <[itchyjunk]> and its cryptography if i am studying how to restrict information loss from the communciation
[22:48:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:48:19] <apotheon> Decker: The original, non-hash value is obfuscated ("encrypted"), but not enciphered.
[22:48:22] <pulse> All this jibberjabber and no one even saw my twoangle https://i.imgur.com/S1RMeQk.png
[22:48:23] <bayaz> Type: image/png Size: 7.5 kB 
[22:48:40] <pyzozord> i think the whole problem is coming from my loose term of "doing cryptography"
[22:48:53] *** Quits: terminalpusher (~terminalp@2a01:586:968a:1:760a:53e8:676:373a) (Remote host closed the connection)
[22:49:02] <pyzozord> and as a creator of the term I get to decide :P
[22:49:17] <Decker> apotheon what value?
[22:49:28] <apotheon> pyzozord: You can have your conversation with yourself, then, while those of us who use a more generally accepted definition will talk about that.
[22:49:31] <Decker> the data of the transaction?
[22:49:46] <pyzozord> and I decide if you haven't published at least 2 papers in cryptographics scientific journals you are hereby officially NOT "doing cryptography"
[22:49:47] <apotheon> Decker: A blockchain hashes the state of the blockchain at every step.
[22:50:05] <apotheon> Decker: Each block depends on the state of the preceding block.
[22:50:11] <apotheon> Decker: That's why it's a block *chain*.
[22:50:16] *** Joins: Pook (~Pook@2001:8a0:f996:1400:4c3:84d2:e243:90cb)
[22:50:16] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[22:50:34] <Decker> right... which is just part of the data that's clear and you can read and chase the hash values referenced
[22:50:38] <pyzozord> apotheon: I don't think "doing cryptography" is a generally accepted term. For me it's clearly a colloquial coinage done on a spot
[22:51:03] <apotheon> Decker: I'm not talking about the information encoded in the blockchain about transactions being encrypted.  I'm talking about a cryptographic verification of the fact one block follows from another.
[22:51:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:51:18] <pyzozord> which then you then you guys tend to somehow try and categorize into some formal scientific language, and it turns out bad as usual
[22:51:34] <pyzozord> because it is not taken in the context it is intended in
[22:51:43] <Decker> sure... which is there - but there is no encryption of the transaction 
[22:51:47] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:52:04] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:52:14] <apotheon> pyzozord: Cryptography is a field of study.  If you're engaging in that field of study, you're "doing cryptography".
[22:52:29] <pyzozord> I don't think so
[22:52:36] <pulse> apotheon, So if I'm hashing something, am I "doing cryptography"? :p
[22:52:38] <pyzozord> well yes I agree
[22:52:59] <pyzozord> but I don't think I'm "doing cryptography" when I create a hashmap with strlen as the hash function
[22:53:08] <apotheon> Decker: Take the hash out of the blockchain.  Eyeball it.  Tell me the original information that was hashed just by looking at it.  Tell me that isn't cryptic, that you could just read it directly.
[22:53:29] <apotheon> pyzozord: If you're doing it by hand, probably so.
[22:53:44] <pyzozord> eh, I am not so sure
[22:53:45] <apotheon> pyzozord: No, you're just using software.
[22:53:47] <Decker> apotheon you can you don't need the hash to read it, just validate it
[22:54:02] <pyzozord> see? semantic discussion, pretty pointles
[22:54:16] <apotheon> pyzozord: . . . and strlen is not, in principle, a fixed data size, even if the standard says your *implementation* must be.
[22:54:35] <apotheon> or rather must produce results that fit within a fixed data size
[22:54:35] *** Quits: Kuleshov_ (Kuleshov@46.138.252.54) (Ping timeout: 268 seconds)
[22:54:48] <pyzozord> f(x) { return 0 } is a hash function, with many collisions, no?
[22:55:04] <apotheon> pyzozord: If you don't want a semantic discussion, don't start one.
[22:55:20] <pyzozord> well I don't think I did but maybe I did
[22:55:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[22:55:31] <pyzozord> if I did I appologize
[22:55:43] <apotheon> This all started with some kind of ludicrous claim that blockchain technology isn't related to cryptography.
[22:55:56] <pyzozord> I was just expressing that, I'm questioning if blockchain people engage a lot in cryptography
[22:55:57] <apotheon> Everything that followed was a semantic discussion by definition.
[22:56:07] *** Joins: CoderGuy2 (~CoderGuy@2601:644:102:2820:7ceb:8b9:5ed3:1f84)
[22:56:09] <apotheon> define "blockchain people" and "a lot"
[22:56:23] <apotheon> and note that you did not in any way phrase it like that when establishing your position
[22:56:30] <pyzozord> I mean people who create blockchain algorithms and a lot as in, every day :P
[22:56:36] <[itchyjunk]> i think it was sonny who started it lol
[22:56:47] <[itchyjunk]> think he dipped off after starting it 
[22:56:51] <apotheon> Yeah, they do tend to "do cryptography" a lot.
[22:57:07] <apotheon> Creating a blockchain algorithm is more than just applying strlen().
[22:57:12] <pyzozord> do they use more things than hash functions?
[22:57:18] <apotheon> usually
[22:57:22] <[itchyjunk]> yeah you need pretty strong cryptography knowladge to "do blockchain" at the ground level
[22:57:25] *** Quits: eXistenZ (~biskit@2a02:14c:2a4:8000:35c8:8264:8848:4c4b) (Quit: Leaving)
[22:57:39] <[itchyjunk]> but i think the crazy fun part is in layer two
[22:57:45] <apotheon> I imagine there may be some that only use a hash function, but those cases are trivial, beginner-level BS.
[22:57:46] <[itchyjunk]> they use some insane graph theory
[22:57:59] <[itchyjunk]> i was reading it and realized that those people are ultra hard core mathematicians
[22:58:05] <pyzozord> graph theory I can understand
[22:58:11] <[itchyjunk]> not me
[22:58:15] <apotheon> [itchyjunk]: Let me know when someone's working on layer two stuff that is actually needed in a layer two implementation.
[22:58:15] <user51> are keyboards on topic?
[22:58:17] <pyzozord> I mean that they use it
[22:58:22] <[itchyjunk]> edges,nodes can't keep track of it all
[22:58:23] <pulse> user51, Yes, I like keyboards
[22:58:28] <apotheon> user51: sure
[22:58:34] * pulse hugs his Das Keyboard 4 Ultimate
[22:58:39] <apotheon> ugh, 4
[22:58:45] <[itchyjunk]> apotheon, all the work done in lightning network
[22:58:49] *** Joins: kish` (~sid742412@user/aqua)
[22:58:50] <pulse> 4 has the volume knob and is therefore the superior DK
[22:58:50] <user51> ok, i need anew one. using a wireless thats getting stuck keys
[22:58:54] <[itchyjunk]> the graph theory they implement is all needed there
[22:59:06] <Stefan26> what kind of graph theory
[22:59:06] <apotheon> [itchyjunk]: Let me know when it's useful.
[22:59:08] <pyzozord> but also Buterin is one of those annoying people who intentionally shows off everything he learned and makes things more complex
[22:59:13] <[itchyjunk]> apotheon, it's been useful.
[22:59:17] <apotheon> How so?
[22:59:18] <[itchyjunk]> Consider yourself notified.
[22:59:25] <[itchyjunk]> By reducing the cost of transactions.
[22:59:26] <pyzozord> just to give impression of being smarter than you are
[22:59:26] <pulse> user51, I avoid wireless everything
[22:59:28] <apotheon> err
[22:59:37] *** Quits: CoderGuy (~CoderGuy@2601:644:102:2820:8dcd:55e0:e024:64ff) (Ping timeout: 240 seconds)
[22:59:44] <Stefan26> graph theory is fun as well as useful
[22:59:46] <apotheon> It's a solution to a problem that was imposed internally and pointlessly.
[22:59:56] <pulse> apotheon, Kind of like the blockchain xD
[23:00:02] * pulse strafe-walks away
[23:00:08] <apotheon> Well . . . not exactly pointlessly.  The point seems, to some degree, to have been to *increase* the cost of transaction.
[23:00:09] <[itchyjunk]> yes its a solution to a problem
[23:00:11] <user51> pulse: why?
[23:00:11] <Stefan26> speaking of graph theory, anyone heard of https://en.wikipedia.org/wiki/Stable_marriage_problem ?
[23:00:11] <bayaz> Title: Stable marriage problem - Wikipedia 
[23:00:14] <[itchyjunk]> that's precisely right
[23:00:20] <[itchyjunk]> that's what makes it useful
[23:00:29] <Stefan26> I wonder if there are applications of that
[23:00:31] <apotheon> user51: pulse is just bigoted about blockchain technologies
[23:00:47] <apotheon> [itchyjunk]: Just use a blockchain that hasn't been intentionally made more costly.
[23:00:58] <[itchyjunk]> or use layer 2.
[23:01:02] <apotheon> Why?
[23:01:04] <apotheon> Why bother?
[23:01:05] <[itchyjunk]> why not?
[23:01:06] <pulse> user51, I had a Logitech wireless mouse way back and it was annoying me quite a lot
[23:01:16] <user51> anyway,is there a guide on how to choose a keyboard?
[23:01:17] <[itchyjunk]> Stefan26, nope, whats the just?
[23:01:26] <apotheon> "I like extra complexity.  It makes things more error-prone and vulnerable, and generally worse."
[23:01:26] <pulse> user51, Since then wireless mice and keyboards apparently have gotten better but I just prefer wires. Wires are 100%
[23:01:36] <[itchyjunk]> Stefan26, oh i have heard of this
[23:01:39] <apotheon> That's the tinyblocks+lightning "solution".
[23:01:42] <GeDaMo> I also prefer wired
[23:01:43] <[itchyjunk]> didn't they guy get a nobel prize or something?
[23:02:09] <apotheon> [itchyjunk]: Explain to me why anyone should prefer LN over a blockchain that doesn't need it.
[23:02:14] <[itchyjunk]> complexity scaling has very many usage in layer one.
[23:02:19] *** Joins: sonny (~sonny@8.6.144.252)
[23:02:23] <[itchyjunk]> Because you miss out on complexity scaling at layer one.
[23:02:28] <GeDaMo> user51: there's #mechboards
[23:02:42] <user51> GeDaMo: thanks, wil look
[23:02:56] <apotheon> [itchyjunk]: Explain how that is beneficial, rather than just saying "complexity scaling".
[23:02:59] <pulse> user51, Step 1. pick one you like step 2. buy it
[23:03:22] <user51> pulse: if we skip the first step we get o(1)
[23:03:27] <pulse> I recommend Cherry browns if you're new to mech boards
[23:03:34] <pulse> A smooth introduction
[23:03:53] <[itchyjunk]> apotheon, benifitial by introducing complexity. by restriction tarnsaction, you allow normalization of verification. everyone can keep up as opposed to only trillion compute per second can.
[23:03:56] <pyzozord> apotheon: generally things on the higher level are more expressive, you can do more faster often (but also more brittle)
[23:03:57] <apotheon> user51: Cherry MX Blues are the tin standard in keyboards.  Anything better than that will tend to be more rarified and expensive.
[23:04:19] <[itchyjunk]> by introducing it at layer two, layer cna still allow normalization and moves the issue of scalabiality away
[23:04:23] <pulse> I'm on blue rn and they're amazing for typing
[23:04:24] <EdFletcher> can second Cherry Browns as being a great transitional choice 
[23:04:26] <pulse> But horrible for noise
[23:04:32] <[itchyjunk]> Stefan26, this guy
[23:04:33] <[itchyjunk]> https://en.wikipedia.org/wiki/Lloyd_Shapley
[23:04:33] <bayaz> Title: Lloyd Shapley - Wikipedia 
[23:04:44] <apotheon> user51: Cherry MX Browns are "we don't want it to be as noisy, and we're willing to sacrifice quality of the experience to make it quieter than Blues".
[23:04:47] <pyzozord> but I like Tech Lead's vision of blockchain in his latest vision. Where it becomes just a protocol like http
[23:04:48] <[itchyjunk]> i came across that marriage stuff via this guys stuff
[23:04:52] <nomagno> Just adopted a NomagnoAssembly coding style that allows me to do position independent jmps!
[23:04:55] <pyzozord> that's very interesting
[23:04:56] <pulse> apotheon, Browns are way better for gaming imo
[23:05:01] <pulse> Blues kinda suck for gaming
[23:05:05] <apotheon> [itchyjunk]: Complexity is not beneficial.
[23:05:08] <pulse> They are amazing for typing though
[23:05:13] <[itchyjunk]> apotheon, if its not to you, don't use it.
[23:05:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:05:27] <pyzozord> nomagno: position independent?
[23:05:32] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[23:05:46] *** Joins: inlight (~inlight@157.35.8.6)
[23:05:46] *** Quits: inlight (~inlight@157.35.8.6) (Changing host)
[23:05:46] *** Joins: inlight (~inlight@user/inlight)
[23:06:10] <apotheon> pulse: It's a keyboard.  Typing is the primary purpose of a keyboard.
[23:06:21] <pulse> apotheon, Lol
[23:06:29] <user51> this is a horrible tim for thunderstorms :(
[23:06:30] <apotheon> [itchyjunk]: If you can do the exact same thing more simply . . .
[23:06:33] <pulse> Can't hear you over these rocket jumps I'm doing in Quake
[23:06:43] <sonny> lol
[23:06:53] <[itchyjunk]> apotheon, yes, adding extra premised like "if you can do x the same way" then sure
[23:06:59] <apotheon> "I just like to have to do more work with more opportunity for something to blow up in my face!"
[23:07:01] <user51> guess this teaches me about redundancy tho
[23:07:08] <[itchyjunk]> if you can not use computer and solve PDE's why use computer?
[23:07:14] <[itchyjunk]> good argument to stop using computer
[23:07:18] <[itchyjunk]> only the premise doesn't hold.
[23:07:22] <pulse> user51, What do you want to do with your new keyboard? Type? Game? Self defense?
[23:07:23] <apotheon> [itchyjunk]: You have yet to say anything substantive about being able to do something else just because you added complexity.
[23:07:23] <[itchyjunk]> so that's not saying much
[23:07:36] <[itchyjunk]> apotheon, i already have. you not liking it is a you problem.
[23:07:42] <[itchyjunk]> You don't like it? Don't use it.
[23:07:43] <user51> pulse: mass destruction
[23:07:50] <apotheon> [itchyjunk]: No, you just implied that more complexity is good.
[23:07:57] <[itchyjunk]> I sure did.
[23:07:58] <apotheon> [itchyjunk]: That seems to be the entirety of your argument.
[23:08:06] <pulse> user51, Try IBM Model M
[23:08:06] <[itchyjunk]> And gave you a reason.
[23:08:11] <[itchyjunk]> You didn't like it.
[23:08:13] <apotheon> I said that if complexity is the only difference, that's bad.
[23:08:15] <[itchyjunk]> So don't use it.
[23:08:23] <[itchyjunk]> Sure, you said a lot of things.
[23:08:26] <apotheon> You then agreed with that.
[23:08:30] <Thedarkb1-Deskto> I just got the idea of giving Vulkan a try, and saw that the hello world is 2000 lines.
[23:08:31] <[itchyjunk]> But that wasn't the part of original premise.
[23:08:34] <apotheon> . . . so you're arguing that complexity is good but it's bad.
[23:08:39] <Thedarkb1-Deskto> I no longer think of trying to use it.
[23:08:48] <[itchyjunk]> "Whales can fly" no
[23:08:53] <[itchyjunk]> "2+2 = 4" yes
[23:08:55] <apotheon> [itchyjunk]: I think there must be a lot of stuff you're not saying.
[23:08:58] <pulse> Thedarkb1-Deskto, Only 2000, be glad it's not 3000
[23:08:58] <[itchyjunk]> but you agreed to the second thing i siad!
[23:09:06] <[itchyjunk]> that implies the first thing i said too!
[23:09:07] <apotheon> What second thing was that?
[23:09:16] <apotheon> . . . and what was the first thing?
[23:09:23] *** Quits: joev (~joev@pool-108-34-251-123.prvdri.fios.verizon.net) (Changing host)
[23:09:23] *** Joins: joev (~joev@user/joev)
[23:09:23] <apotheon> You said hundreds of things in the last few minutes.
[23:09:25] <[itchyjunk]> your original claim wasn't that tast can be done with and without complexity equally.
[23:09:28] <[itchyjunk]> You added that.
[23:09:38] <[itchyjunk]> I explained the same thing a few time.
[23:09:42] <[itchyjunk]> Not 100 of different things.
[23:09:51] <[itchyjunk]> You changed your point subtly.
[23:10:02] <[itchyjunk]> You claim is complexity adds nothing.
[23:10:04] <apotheon> I said that you can get lower cost without LN by just doing away with the asinine block size limit that seems to exist just to increase cost.
[23:10:08] <[itchyjunk]> I never agreed to that.
[23:10:18] <[itchyjunk]> you then said "If it didn't add anything, blah blah"
[23:10:18] <apotheon> . . . or rather to convey that cost to specific people, perhaps.
[23:10:19] <[itchyjunk]> i agreed
[23:10:28] <[itchyjunk]> then you said "Ah! so complexity adds nothing!"
[23:10:33] <[itchyjunk]> to which i say no.
[23:10:36] <pyzozord> geez
[23:10:41] <apotheon> Complexity in and of itself adds nothing you should want.
[23:10:46] <pyzozord> stahp with the semantics
[23:10:50] <[itchyjunk]> That's your claim.
[23:10:56] <[itchyjunk]> To which i never agreed.
[23:10:57] <apotheon> If you can't explain the actual benefit of *this particular complexity*, you haven't made your point.
[23:11:00] <pyzozord> (or don't I can't stop you)
[23:11:05] <[itchyjunk]> I can give you a very easy example.
[23:11:14] <[itchyjunk]> Complexity of a formal system is the number of assumed axioms.
[23:11:18] <apotheon> WHY HAVEN'T YOU ALREADY DONE SO?
[23:11:22] <[itchyjunk]> Increasing the number of axiom increases complexity.
[23:11:32] <[itchyjunk]> But also improves probability of theorems.
[23:11:36] <[itchyjunk]> It's a tradeoff.
[23:11:44] <[itchyjunk]> Sometimes you want more compelxity and sometimes you dont.
[23:11:47] <apotheon> Adding axioms does not improve provability.
[23:11:49] <[itchyjunk]> If you don't want it, dont use it.
[23:11:54] <[itchyjunk]> It does.
[23:12:06] <[itchyjunk]> Some theorems are eaxiser to prove with added axioms.
[23:12:11] <[itchyjunk]> Want an example for that too?
[23:12:12] <apotheon> I think you need to learn more about either English or logic; I'm not sure which is where you're falling off the edge.
[23:12:20] <nomagno> pyzozord: Yeah, as in, instructions are numbered sequentially. The naive approach to jmps requires you to readjust almost all jmps whenever you add/remove LoC from the assembly file
[23:12:24] <[itchyjunk]> Field axioms doesn't need zero devisors.
[23:12:29] <apotheon> Oh, "some" theorems.  Now you're changing your argument.
[23:12:31] <[itchyjunk]> But a lot of books use it as axioms
[23:12:32] <nomagno> So I am coding relative to the program counter now
[23:12:43] <[itchyjunk]> Walter rudins introduction to mathematical analysis, for example.
[23:12:47] <[itchyjunk]> I have not changed my argument.
[23:13:00] <[itchyjunk]> You simply don't like it.
[23:13:03] <[itchyjunk]> Which is fine.
[23:13:06] <pyzozord> you guys need to accept that human language is not precise and try to take other peopls message best you can
[23:13:06] <apotheon> If by "more" you mean "a specific number that is more than some other specific number", then sure, maybe it gets easier to prove with *the right number*, but just endlessly adding more axioms doesn't make anything easier to prove.
[23:13:16] <[itchyjunk]> By more, I mean more.
[23:13:29] <[itchyjunk]> I can introduces theorems as axioms.
[23:13:38] <[itchyjunk]> And that makes proving additional theorems easier.
[23:13:42] <[itchyjunk]> It's a trade off.
[23:13:43] <KillerWasp> I program my games to block WASD with any movement key, so you learn to use the arrow keys accordingly. A healthy mind uses arrow keys.
[23:14:10] <apotheon> If you literally think that an infinite number of axioms makes something more provable, I guess I understand why you think an infinite amount of complexity makes a blockchain better.
[23:14:14] <apotheon> . . . but it's not correct.
[23:14:37] <KillerWasp> And if you hack the game to force the use of WASD, I've also cursed it to make your eleven fingers fall off.
[23:14:39] <pyzozord> nomagno: I'm not following, can you give an example?
[23:14:40] <[itchyjunk]> Feel free to digest what I have said already.
[23:14:47] <apotheon> For one thing, with an infinite number of axioms you will literally never get to the point where you and your interlocutor agree on all axioms, because it takes infinite time.
[23:14:53] <[itchyjunk]> You can tarde of complexity for other things.
[23:15:04] <[itchyjunk]> Your claim "complexity never adds anything" didn't hold up.
[23:15:08] <[itchyjunk]> We can move on now.
[23:15:13] <apotheon> I never said "complexity never adds anything".
[23:15:25] <nomagno> Hm, alright, let me try to explain with an example
[23:15:28] <apotheon> I said that complexity *in and of itself* does not make things better.
[23:15:39] <apotheon> All else being equal, the simpler solution is more robust, period.
[23:15:43] <[itchyjunk]> apotheon> Complexity in and of itself adds nothing you should want.
[23:15:49] <[itchyjunk]> Lets not play this game.
[23:15:49] <pyzozord> nomagno: don't waste time on me, just simple explanation here on irc will do
[23:15:52] <apotheon> "in and of itself"
[23:15:54] <[itchyjunk]> You said shit. It didn't hold.
[23:15:56] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1)
[23:16:02] <apotheon> not the same t all as "never adds anything" without reference to being the only change
[23:16:05] <[itchyjunk]> yes, compelxity, in and of itself, gave me easier theorems.
[23:16:10] <apotheon> s/ t / at /
[23:16:13] <[itchyjunk]> In my examples.
[23:16:14] <apotheon> wtf
[23:16:18] <[itchyjunk]> Ergo, your claim doesn't hold.
[23:16:22] <apotheon> Okay.
[23:16:25] <apotheon> Here we go:
[23:16:25] *** Joins: jkk (~lenovo@213.180.39.162)
[23:16:28] <[itchyjunk]> If you want more example, i can point you to it.
[23:16:42] <[itchyjunk]> See: Wolframs cellular automata.
[23:16:44] <apotheon> The bible exists.  A tramway exists.  Boats exist.  Therefore, God exists.
[23:16:48] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:16:50] <[itchyjunk]> He trades complexity for computability.
[23:16:54] <jkk> soon moving to brazil to do code in pairs with brazilians :)
[23:16:55] <apotheon> That's a stronger argument than: The bible exists.
[23:16:59] <apotheon> . . . according to you.
[23:17:06] <[itchyjunk]> Please don't strawman me.
[23:17:13] <apotheon> "more axioms"
[23:17:17] <jkk> jkk religion says libera is ancient land of jkks
[23:17:18] <jkk> :)
[23:17:23] <apotheon> It's not a strawman.
[23:17:24] <jkk> pass keys to me
[23:17:25] <[itchyjunk]> Kindly fuck off if you want to get to personal attacks.
[23:17:27] <[itchyjunk]> It is.
[23:17:32] <jkk> apotheon: is smart
[23:17:34] <apotheon> Where's a personal attack?
[23:17:35] <[itchyjunk]> You're attributing shit to me i didn't say.
[23:17:41] <[itchyjunk]> "according to you"
[23:17:43] <[itchyjunk]> Please stop that.
[23:17:45] <apotheon> 12:46 < [itchyjunk]> He trades complexity for computability.
[23:17:50] <[itchyjunk]> Yes.
[23:17:52] <apotheon> That's not "complexity in and of itself".
[23:17:52] <[itchyjunk]> He does.
[23:17:56] <[itchyjunk]> It is.
[23:18:10] <apotheon> That's "specific things that add complexity in exchange for other benefits".
[23:18:15] <[itchyjunk]> No.
[23:18:19] <[itchyjunk]> He introduces complexity.
[23:18:24] <[itchyjunk]> Not "specific things"
[23:18:32] <pyzozord> moments ago you were both trying to eat me alive for saying "hashfunctions alone is not doing cryptography"
[23:18:43] <[itchyjunk]> introducing complexity to axioms produces different computale systems.
[23:18:48] <jkk> pyzozord: they dont have a gf :P
[23:18:49] <jkk> Xd
[23:18:52] <[itchyjunk]> pyzozord, its a eat or be eaten world
[23:18:59] <[itchyjunk]> couldn't eat you so everyone is hungry
[23:18:59] <pyzozord> [itchyjunk]: it's not though
[23:19:01] <[itchyjunk]> i blame you
[23:19:03] <apotheon> I'm trying to figure out why [itchyjunk] thinks that taking a driving route from one place to another is *necessarily* better if it has *more turns* in it.
[23:19:07] *** Joins: emf (~emf@2620:10d:c091:480::1:8fa6)
[23:19:13] <apotheon> all else being equal
[23:19:17] <pyzozord> [itchyjunk]: I do feel partially responsible
[23:19:23] <[itchyjunk]> you better!
[23:19:28] <pyzozord> but you guys need to staph
[23:19:35] <[itchyjunk]> apotheon, once you stop coming up with tangential example that i didn't mention
[23:19:39] <[itchyjunk]> i might try again.
[23:19:45] <[itchyjunk]> but as is, this is done.
[23:19:50] <pyzozord> [itchyjunk]: to stop requires effort from both parties
[23:19:56] <apotheon> pyzozord: I think you mean stahp, not staphylococcus.
[23:20:09] <pyzozord> [itchyjunk]: saying "I stop when he stops" is counter productive
[23:20:17] <[itchyjunk]> pyzozord, i never said that.
[23:20:19] <pyzozord> apotheon: yes thank you :D
[23:20:20] <apotheon> [itchyjunk]: You literally said that *complexity in and of itself* makes things better.
[23:20:23] <[itchyjunk]> Not sure why you are directing that to me.
[23:20:30] <[itchyjunk]> apotheon, no your siad the opposite
[23:20:32] <[itchyjunk]> and i disagreed
[23:20:37] <apotheon> [itchyjunk]: That means that adding more moving parts to something just to make it more complicated would make it better.
[23:20:38] <[itchyjunk]> i didn't *literally* say it.
[23:20:48] <[itchyjunk]> Stop misusing the word *literal*
[23:20:51] <[itchyjunk]> this isn't the mall
[23:21:08] <apotheon> I think maybe [itchyjunk] doesn't know what "in and of itself" means.
[23:21:09] <pyzozord> [itchyjunk]: also I feel you are the more argumentative one. You are very combative whenver someone else presents an opinion you don't agree with
[23:21:11] <[itchyjunk]> GR adds more moving parts
[23:21:20] <[itchyjunk]> newtonian mechanics is a special case of GR
[23:21:25] <[itchyjunk]> GR is better.
[23:21:29] <jkk> pyzozord: he is learning thanks to you to LISTEN Xd
[23:21:43] <[itchyjunk]> pyzozord, what opinion?
[23:21:51] <apotheon> [itchyjunk]: When I refer to complexity in and of itself making things worse and you say no, it makes it better, that's you literally saying it makes it better.
[23:21:57] <[itchyjunk]> pyzozord, half the time people misquote me and claim they are taking apart my argument
[23:22:14] <[itchyjunk]> No, it makes me disagreeying with your claim.
[23:22:20] <[itchyjunk]> Not making a claim myself.
[23:22:28] <apotheon> [itchyjunk]: GR adds moving parts that are carefully selected for their trade-offs.  It doesn't just add moving parts it found on the sidewalk.
[23:22:28] <[itchyjunk]> The proof of burden is still on the person making the claim.
[23:22:32] <[itchyjunk]> Not the one disagreeying.
[23:22:43] <[itchyjunk]> On the other hand, if i did make a counter claim, the proof of burden would be on me.
[23:22:54] <[itchyjunk]> No true scotts man.
[23:23:02] <[itchyjunk]> Not matter what complexity aided system i define
[23:23:11] <dan01[m]> Guys, can you believe minix 3 has 12 000 lines of code, and Linux has 27 million?
[23:23:15] <[itchyjunk]> you'll find some excuse to say "oh but that's not in and of itself, its something else!"
[23:23:20] <mrig> [itchyjunk]: Please refrain from speaking to other with such foul language, it is not at all conducive to a pleasant community.
[23:23:24] <apotheon> Claiming that complexity in and of itself necessarily improves things is a pretty bold claim.
[23:23:26] <mrig> this is not the mall
[23:23:27] <[itchyjunk]> mrig, what foul language?
[23:23:28] <apotheon> Ask an engineer.
[23:23:31] <dan01[m]> [itchyjunk]: talking about atheist?
[23:23:44] <[itchyjunk]> dan01[m], not sure what you mean.
[23:23:53] <[itchyjunk]> mrig, we went over this in pm once before right?
[23:23:56] <apotheon> [itchyjunk]: "in and of itself" has a very specific meaning
[23:23:57] *** Quits: emf (~emf@2620:10d:c091:480::1:8fa6) (Ping timeout: 240 seconds)
[23:23:57] <mrig> telling other to fuck off is particularly crass even by your standards.
[23:24:06] <apotheon> I also said "all else being equal" to clarify.
[23:24:06] <dan01[m]> [itchyjunk]: burden of proof 
[23:24:11] <jkk> mrig: why why not to say it!\
[23:24:16] <[itchyjunk]> mrig, i told anyone attacking my character to fuckoff.
[23:24:19] <mrig> no need for it.
[23:24:24] <pyzozord> jkk: look at /topic
[23:24:27] <[itchyjunk]> mrig, if you wanna be the hand of justice, amybe follow along better.
[23:24:38] <mrig> [itchyjunk]: well dont, please.
[23:24:41] <apotheon> Did someone attack [itchyjunk]'s character, by the way?
[23:24:45] <jkk> expressing your feelings is what a friend would do Xd
[23:24:48] <mrig> !q [itchyjunk] 
[23:24:49] *** bayaz sets mode: +q $a:[itchyjunk]
[23:25:05] <apotheon> oh, well
[23:25:08] <mrig> !uq [itchyjunk] 
[23:25:08] *** bayaz sets mode: -q $a:[itchyjunk]
[23:25:15] <pyzozord> ehh I think it's partially my fault
[23:25:21] <[itchyjunk]> mrig, do you want to continue your last pm with me?
[23:25:22] <jkk> do you experiment with mozilla developer tools?
[23:25:22] <apotheon> I think I'm going to design a bridge with as many moving parts as possible now, to make it better.
[23:25:26] <mrig> [itchyjunk]: please refrain from personal attacks
[23:25:27] <[itchyjunk]> I thought yo uagreed you would stop this sthi
[23:25:32] <[itchyjunk]> and i would not have to post logs to InPhase 
[23:25:45] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Quit: ZNC - https://znc.in)
[23:25:48] <[itchyjunk]> seems like you don't wanna keep your end of the bargin.
[23:25:53] <[itchyjunk]> mrig, i was personally attacked.
[23:26:01] <[itchyjunk]> telling someone who attecked me to fuck off isn't personal attack.
[23:26:04] <apotheon> [itchyjunk]: Who personally attacked you, and how?
[23:26:08] <mrig> [itchyjunk]: your use of context will not wash hear eather.
[23:26:10] <mrig> either
[23:26:10] <[itchyjunk]> Unless yo uwanna clarify how it's a personal attack.
[23:26:25] <pyzozord> ok I'm off for a moment
[23:26:26] <[itchyjunk]> mrig, please explain how "fuck off" is a personal attack.
[23:26:26] <mrig> here too :D
[23:26:32] <pyzozord> nomagno: catch me later
[23:26:32] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[23:26:48] *** Joins: emf (~emf@2620:10d:c091:480::1:8fa6)
[23:26:49] <apotheon> mrig: Like me, you catch your own errors.
[23:26:57] <apotheon> mrig: That's admirable.
[23:26:57] <[itchyjunk]> InPhase, please explain how "fuck off" is a personal attack.
[23:27:30] <mrig> [itchyjunk]: it is fouls language which i dont particularly like, but that is not the point, it is when you direct your foul language at someone else, that I think that you have gone to far.
[23:27:38] <[itchyjunk]> that is the point.
[23:27:41] <[itchyjunk]> You siad personal attack.
[23:27:43] <[itchyjunk]> When it's not.
[23:27:49] <[itchyjunk]> But when i get strawmanned, you don't care.
[23:27:50] <mrig> [itchyjunk]: If you have an issue with this take it up in programming-ops
[23:27:55] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[23:28:02] <apotheon> I looked at logs and still don't see what personal attack someone directed at [itchyjunk].
[23:28:17] <[itchyjunk]> what personal attack did i direct to you?
[23:28:26] <apotheon> Do you think that a claim made by you that someone's argument was a straw man is a "personal attack"?
[23:28:28] <[itchyjunk]> i thought you better than this.
[23:28:33] <apotheon> It's a fallacy, if it even happend, which it didn't.
[23:29:03] <apotheon> An ad hominem fallacy is also a personal attack; a strawman is just a misdirected attack.
[23:29:32] <apotheon> . . . a misdirected attack on an *argument*, not on a person.
[23:29:45] <apotheon> Ad hominem is an attack on a *person*.
[23:29:47] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 252 seconds)
[23:29:52] <pyzozord> [itchyjunk]: we like you and you are awesome, there is no need to get hypercombative here
[23:30:09] <[itchyjunk]> pyzozord, this isn't the first time that op has done this.
[23:30:15] <[itchyjunk]> in anycase, i've pm'ed.
[23:30:21] <jkk> its normal in libera
[23:30:21] <pyzozord> (I have similar problem to lesser degree at work env, I understand)
[23:30:25] <[itchyjunk]> I'll either take a perma ban or not take that shit from him.
[23:30:33] <jkk> in other programming chats you can say whatever
[23:30:40] <[itchyjunk]> which other chat?
[23:30:48] <mrig> [itchyjunk]: from who?
[23:30:53] <[itchyjunk]> From you.
[23:30:57] <jkk> [itchyjunk]:  you also like to ban people in channels you are mod :P
[23:31:01] <jkk> so stay here Xd
[23:31:11] <mrig> [itchyjunk]: dont be so silly.
[23:31:14] <[itchyjunk]> jkk, you posted a porn website and called it "research".
[23:31:35] <jkk> you can talk and that all :P
[23:31:38] <jkk> and stay here Xd
[23:32:32] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[23:32:47] <pyzozord> its all good, it's really all fine everyone gets heated up once in a while I did recently too
[23:32:48] <mrig> [itchyjunk]: what publicly called you up for being unduly rude in a public forum?
[23:33:17] <pyzozord> well not everone some folks amaizngly manage to avoid it, wish I had that skill
[23:33:32] <jkk> pyzozord: they dont avoid they simmer silently Xd
[23:33:37] *** Joins: steam (~steam@user/steam)
[23:33:46] <pyzozord> jkk: hah, I need to learn that skill still
[23:34:39] <jkk> who here is using trisquel?
[23:34:41] <jkk> anyone? )
[23:35:12] <jkk> dude we used to fight for real offline in 'coders' club Xd
[23:35:22] <pyzozord> oh it sounds intersting
[23:35:26] <jkk> people would jump and start shouting etc
[23:36:06] <pyzozord> well it's inevitable in a room full of passionate people
[23:36:18] <pyzozord> but i'd still go with passionate people over people who don't care
[23:36:29] *** Joins: tofran (~tofran@37.189.158.134)
[23:37:35] <pyzozord> having a all-free-software ubuntu os would be cool
[23:37:42] <jkk> well it does exist
[23:37:44] <pyzozord> but I'd be afraid that stuff would break
[23:38:21] <jkk> well then we learn by fixing it Xd
[23:39:15] <pyzozord> looks like ubuntu has normal shell utils
[23:39:17] <sonny> what do you mean by free?
[23:39:30] <pyzozord> but I kind of don't see the point of not using busybox nowadays
[23:39:42] <sonny> ubuntu is already free??
[23:40:05] <pyzozord> it's free as freedom not gratis
[23:40:07] <nomagno> pyzozord: https://termbin.com/0fcd
[23:40:08] <bayaz> Type: text/plain; charset=utf-8 
[23:41:16] <nomagno> pyzozord: All-free-software Ubuntu sounds self-defeating, but I reckon Debian is fairly close :D
[23:41:29] *** Quits: Hax0r (~Hax0r@46.38.81.225) (Remote host closed the connection)
[23:41:40] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:41:53] <nomagno> At least I have been on the Debian/Devuan main (only free software) repo without enabling nonfree for a few years without any real issues
[23:42:12] <pyzozord> nomagno: ooh I see so not jumping to specific address but rather to [pc-5]
[23:42:22] <nomagno> Yes
[23:42:37] <pyzozord> nomagno: does that mean you can now jmp [FF]?
[23:42:46] <pyzozord> meaning jump to adress stored at address FF?
[23:42:57] <pyzozord> or are you limiting it to just pc?
[23:43:17] <pyzozord> I have to say that your assembly looks kinda legit :D
[23:43:23] <nomagno> pyzozord: Bracket-enclosed is literal, non-enclosed is address. You can jump to the instruction pointed to by any address
[23:43:26] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Remote host closed the connection)
[23:43:41] <nomagno> So, jmp [FF] sets the program counter to 255
[23:43:46] <pyzozord> I see, so you have chosen the dark side :P
[23:43:52] <nomagno> jmp FF sets it to the contents of address 255
[23:44:10] <nomagno> I think x86 does it the way around?
[23:44:20] <nomagno> literal by default, address with a symbol
[23:44:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[23:44:38] <pyzozord> depends if you are talking about intel or att syntax
[23:44:42] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[23:44:50] <pyzozord> i think in att literals are prefixed with $ but I might be wrong
[23:44:55] <nomagno> Well, between you and me, the comments cause the assembler to crash :D
[23:45:07] <pyzozord> lol :D
[23:45:09] <nomagno> the assembler barely does any real word other than the C stdlib's default whitespace trim
[23:45:15] <pyzozord> that should be easy to add to the parser though
[23:45:16] <nomagno> s/word/work/
[23:45:41] <nomagno> Yeah, but it's currently like 50 lines
[23:45:47] <nomagno> Just have to make it a bit bigger :D
[23:46:23] <pyzozord> for more real life usage I think adding labels would be cool
[23:46:23] *** Quits: Kays (Kays@user/kays) (Ping timeout: 268 seconds)
[23:46:37] <pyzozord> unless you indent the assembler to be only generated by higher level compiler
[23:46:54] <nomagno> Well, you have subroutines, and can use a preprocessor for naming them
[23:47:15] <pyzozord> oh ok, so that's kinda there already
[23:47:16] <nomagno> The assembler is pretty much a 1:1 machine code representation
[23:47:19] *** Joins: CaCode (~CaCode@user/cacode)
[23:47:28] <nomagno> https://gitea.com/Nomagno/Half-World/src/branch/master/src/hwvm/hwasm.c
[23:47:31] <bayaz> Title: Half-World 
[23:47:34] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:49] <pyzozord> I don't think that's what I want to do with my language
[23:48:07] *** Joins: Kays (Kays@user/kays)
[23:48:17] <pyzozord> I was thinking about it, and coming up with ideas about how I want language that takes code address and variable address and stuff
[23:48:30] <nomagno> See how it does... zero work at all other than determining if it read a valid hex uppercase digit or a bracket
[23:48:31] <nomagno> Well don't :)
[23:48:43] <pyzozord> but I've changed my mind, I now think that I will not come up with more meta and dynamic language than lisp
[23:48:51] <pyzozord> lisp was perfect from it's conception
[23:48:52] <nomagno> Oh you wanted to make it stack-only right?
[23:48:58] <pyzozord> yeah
[23:49:11] <pyzozord> but what I want is ultra static language, the reverse of lisp
[23:49:22] <pyzozord> ultra static, stack-only language
[23:49:33] <pyzozord> no pointers at all
[23:49:40] <nomagno> Well you have Ada if you want to take a look. Not sure it's tack only, but it's the most static language I know of
[23:49:47] <user51> pyzozord: you're making a language?
[23:50:00] <pyzozord> user51: not now, but thinking about it
[23:50:01] <sonny> what do you use if you have no pointers or references?
[23:50:22] <nomagno> you return everything by value, with data structures as return
[23:50:31] <pyzozord> nomagno: it's not, it has heap and pointers (but very restricted)
[23:50:46] <nomagno> so, func().errcode, func().retval, etc
[23:50:46] <sonny> nomagno that's a lot of copying :P
[23:50:48] <nomagno> right?
[23:51:03] <user51> pyzozord: general purpose, dsl?
[23:51:13] <pyzozord> somehere in between
[23:51:18] <pyzozord> more dsl I suppose
[23:51:27] <pyzozord> for interactive fiction
[23:51:27] <nomagno> It can work fine, I'm sure. your idea was something like that wasn't it?
[23:51:37] <nomagno> You return data structures by value with all necessary information
[23:51:38] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:51:40] <sonny> you want a strict language, not ultra static*
[23:51:44] <nomagno> and hence get rid of the need of pointer arguments
[23:51:46] <user51> pyzozord: good luck
[23:51:59] <sonny> you will quickly see that is no fun :P
[23:52:15] <pyzozord> yeah quite possibly
[23:52:44] <pyzozord> I was considering one allowance: a powerful very dynamic preprocessor
[23:52:48] <nomagno> add(arg1, arg2) { return [OK, (arg1 + arg2)] }
[23:52:50] <pyzozord> maybe even lisp
[23:52:58] <[itchyjunk]> Ah, fuck.
[23:53:09] <[itchyjunk]> sonny, why not ultra strick?
[23:53:09] <nomagno> So basically all return values are structures, and you're good to go
[23:53:35] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.3)
[23:53:53] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[23:54:00] *** Quits: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it) (Quit: Leaving)
[23:54:04] <pyzozord> generally strict as in strict typing? I'm not a big fan of types, in practice I end up fighting the dumb typing systems a lot
[23:54:23] <[itchyjunk]> yes strict typing
[23:54:33] <sonny> [itchyjunk] it might make the implementation a bit tricky and computations tedius but otherwise there's no problem
[23:54:34] <[itchyjunk]> i didn't think i would like types
[23:54:36] <[itchyjunk]> but they seem useful
[23:54:43] <nomagno> everything is an unsigned integer :D
[23:54:46] <[itchyjunk]> sonny, yeah i feel the same
[23:55:14] <sonny> yes, there is a specific case with arrays and pointers that comes up quickly but I forgot what it was
[23:55:25] <nomagno> I find C's approach to types to be fairly comfortable. A type only exists where it makes sense to have distinct underlying memory representations
[23:55:25] <GeDaMo> In Forth, everything is a cell :P
[23:55:39] <nomagno> If you don't like that, you simulate everything with unsigned ints :D
[23:55:41] <pyzozord> you don't necessairly need to copy everything. You can declare an array in upper scope and then nested functions can use that array from the upper scope
[23:55:53] <nomagno> The unsigned character, the fully defined powerhouse of theC programming language
[23:56:02] <sonny> the error reporting would be great though :)
[23:56:02] <user51> GeDaMo: feels diagrammatic
[23:56:08] <pyzozord> and that array can be essentially thought of as static memory allocation on stack
[23:56:12] <GeDaMo> A cell is basically a machine word
[23:56:25] <[itchyjunk]> cell like array cell?
[23:56:26] <sonny> yeah, I like that
[23:56:32] *** Joins: frm (~frm@user/frm)
[23:56:36] <sonny> cell like machine word :P
[23:56:44] <user51> i think my language will be stringly typed
[23:56:56] <pyzozord> only strings?
[23:57:11] <user51> arrays as well, but strings only
[23:57:21] <nomagno> Strings are a very opinionated data type
[23:57:28] <nomagno> They're just a fancy way of representing integer arrays
[23:57:31] <user51> the basis is awk
[23:57:38] *** Joins: Hax0r (~Hax0r@46.38.81.225)
[23:58:26] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[23:58:31] *** Joins: average (uid473595@user/average)
[23:58:38] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:58:52] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[23:59:11] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[23:59:34] <user51> i'm just writing a list of features for now
[23:59:50] *** Joins: pncl1 (~Hax0r@46.38.81.225)
[23:59:55] *** Quits: pncl1 (~Hax0r@46.38.81.225) (Remote host closed the connection)
