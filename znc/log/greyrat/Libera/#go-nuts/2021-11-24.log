[00:04:24] *** Quits: rbn (~rbn@user/rbn) (Read error: Connection reset by peer)
[00:04:36] *** Joins: rbn (~rbn@user/rbn)
[00:08:28] *** Quits: resamvi (~resamvi@user/resamvi) (Quit: resamvi)
[00:11:07] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[00:11:55] <mickey8> what do you guys use to auto-generate api docs? i saw swagger but i dont need a "server" and stuff, but rather just some json or markdown of the endpoints and stuff
[00:12:48] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[00:13:37] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:14:35] <noord> mickey8: maintaining docs is time consuming task
[00:22:33] *** Joins: mtebeka (~tebeka@2a10:8008:5a94:0:127e:be4b:31d8:5a25)
[00:23:49] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[00:24:11] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:24:59] <mickey8> no doubt, but im hoping for something that can take comments from the code and generate that part
[00:25:39] *** Quits: lazy1 (~tebeka@2a10:800e:bb4b:0:9d4:a1d3:b7a9:97bb) (Ping timeout: 268 seconds)
[00:26:23] <mickey8> i guess go-swagger is the only relevant option so ill try to work it out
[00:28:56] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Ping timeout: 260 seconds)
[00:30:44] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:31:10] <whoami> Having a tough time wrapping my head around some json.Unmarshal stuff wrt undefined/null. I have complex structures (e.g. structs which contain slices of structs) and want to determine undefined/null for each field, including the slices and structs themselves.
[00:32:06] <whoami> NVM, I think I know where I went wrong.
[00:33:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:36:14] *** Quits: nabaiste^ (~nabaiste@68.101.63.101) (Ping timeout: 260 seconds)
[00:39:33] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[00:41:15] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Ping timeout: 264 seconds)
[00:42:52] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[00:45:27] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[00:46:26] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[00:47:01] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[00:50:46] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[00:52:38] *** Quits: mtebeka (~tebeka@2a10:8008:5a94:0:127e:be4b:31d8:5a25) (Quit: Leaving)
[00:56:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:56:47] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:01:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c8eb-bc7c-9a6e-e932.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[01:03:24] *** Quits: endigma (~endigma@134.41.131.85) (Quit: The Lounge - https://thelounge.chat)
[01:03:42] *** Joins: endigma (~endigma@134.41.131.85)
[01:11:56] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[01:12:17] *** Joins: michele (~eraser@user/michele)
[01:15:40] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[01:19:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:19:56] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[01:20:15] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[01:21:01] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[01:21:30] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[01:21:33] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[01:22:52] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[01:25:09] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[01:30:40] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[01:30:53] *** Joins: marcel (~marcel@user/marcel)
[01:31:26] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249)
[01:35:12] <dostoyevsky2> Is there a json parser that is significantly faster than the builtin json parser but also supports the full JSON spec?
[01:36:21] *** Joins: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net)
[01:36:25] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[01:37:59] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[01:39:33] <j416> dostoyevsky2: you could try to do it manually using the tokenizer? https://pkg.go.dev/encoding/json#example-Decoder.Token
[01:39:49] <j416> dostoyevsky2: I haven't compared, but I'd assume that'd be a bit faster.
[01:40:24] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:44:43] <b0nn> dostoyevsky2: there are so many people asking for that that I am surprised the standard library one doesn't get more love
[01:44:57] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[01:45:12] *** Joins: mickey81 (~user@user/mickey)
[01:45:46] <b0nn> dostoyevsky2: https://www.reddit.com/r/golang/comments/qyocbt/sonic_a_blazingly_fast_json_serializing/
[01:46:03] <dostoyevsky2> b0nn: I think parsing json is like the arch nemesis of go performance... it just can't be improved much... so might be better to use a binary format instead.  Other languages can just use c libraries but that's not an option for go
[01:47:03] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[01:47:04] *** mickey81 is now known as mickey8
[01:47:10] <b0nn> json needs to die a sudden and painful death :)
[01:47:51] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249) (Ping timeout: 264 seconds)
[01:48:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:49:53] <dostoyevsky2> I guess it makes sense why e.g. minio uses msgp now internally for the S3 metadata....  I was wondering why they switched when I read the code the other day
[01:50:07] *** Joins: fikran (~fikran@user/fikran)
[01:51:22] <dostoyevsky2> and I switched to a memtar format for some https uploads..... takes ages to upload a 40M binary via the json serializer, even for a POC
[01:51:46] <bpalmer> dostoyevsky2: why isn't it an option? cgo exists
[01:52:43] *** Quits: hgl (hgl@user/hgl) (Remote host closed the connection)
[01:52:47] <bpalmer> I'm not sure that it would speed things up, but ...
[01:52:49] <dostoyevsky2> bpalmer: I think the switching from go to c is expensive, so not a good use case for json
[01:53:03] *** Joins: hgl (hgl@67.230.181.248)
[01:53:07] <dostoyevsky2> unless one could batch the parsing
[01:54:37] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 256 seconds)
[01:54:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[01:55:47] *** Quits: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net) (Quit: Client closed)
[01:56:25] *** Quits: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32) (Quit: Leaving)
[01:56:35] *** Joins: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32)
[01:56:40] <dostoyevsky2> and I guess on the Go side you need lots of reflection to build all those objects ...  which you can't avoid
[01:57:21] <dostoyevsky2> but that would be similar for binary formats
[01:57:34] *** Quits: greypw254 (~greypw2@grey.pw) (Quit: I'll be back!)
[01:57:52] <dostoyevsky2> but there the types are a given and you don't need to convert them
[01:57:58] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Quit: Textual IRC Client: www.textualapp.com)
[01:58:06] <b0nn> is it reflection? I mean if I get a json blob over the wire, isn't it all string that has to then be converted to a type?
[01:58:10] *** Joins: greypw254 (~greypw2@grey.pw)
[01:59:04] <dostoyevsky2> b0nn: if you want to match structs to the json, and show and error if you can't convert e.g. a string to a bool -- can this be done without reflection?
[02:00:07] <dostoyevsky2> whereas if you have msgp (e.g.) I don't think they do any type checking, you just compile the msgp spec and then there are no more type checks
[02:00:07] * b0nn shrugs
[02:00:13] <b0nn> I honestly don't know
[02:01:34] *** Joins: rockyh (~rockyh@user/rockyh)
[02:05:46] <fizzie> I imagine you could hypothetically generate a JSON parser from some sort of a schema just as well, instead of using reflection to parse based on a Go data type. Not sure if anyone's doing that.
[02:06:17] <fizzie> A quick search finds at least github.com/mailru/easyjson does that.
[02:06:55] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:07:31] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[02:08:21] <b0nn> so the standard library is using reflect https://github.com/golang/go/blob/2ebe77a2fda1ee9ff6fd9a3e08933ad1ebaea039/src/encoding/json/decode.go#L170 but I cannot see how reflect determines the value from a string
[02:09:45] *** Quits: jpw_ (~jpw@user/jpw) (Remote host closed the connection)
[02:09:52] *** Joins: hgl (hgl@67.230.181.248)
[02:11:25] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[02:11:49] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[02:13:57] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:14:00] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[02:15:46] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[02:16:40] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:16:54] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[02:17:33] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:20:20] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[02:22:53] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[02:24:13] *** Joins: hgl (hgl@67.230.181.248)
[02:26:08] <rawtaz> so there's os.Create() which uses mode 0666 before umask. seems like a simplified wrapper of os.OpenFile(). is there some similar method for creating a directory, where you just give it the dir name and dont have to specify the mode?
[02:27:27] *** Quits: sav_ (~savio@177.12.48.155) (Ping timeout: 250 seconds)
[02:30:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:32:05] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c8eb-bc7c-9a6e-e932.res6.spectrum.com)
[02:37:58] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249)
[02:40:50] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[02:41:37] <rawtaz> never ind
[02:41:39] <rawtaz> +m
[02:43:41] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[02:44:34] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:44:40] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[02:45:06] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[02:45:08] <rawtaz> hm i sometimes mistype := with :P and find that Go would have been funnier if they used that instead of :=
[02:45:11] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:45:13] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:46:03] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:fd93:ef48:b582:e249) (Ping timeout: 264 seconds)
[02:52:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:53:51] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 264 seconds)
[02:54:29] *** Quits: jjonah (~jjonah@p200300d5d7378b00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:55:36] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[02:55:56] *** Joins: hgl (hgl@67.230.181.248)
[03:04:07] <j416> fizzie: is that not what stdlib already does?
[03:04:59] <fizzie> No, "encoding/json" does reflection at runtime to look at what you're unmarshalling to.
[03:05:22] <j416> fizzie: referring to https://pkg.go.dev/encoding/json#Decoder.Token
[03:05:46] <j416> (as linked above)
[03:05:57] <fizzie> Well, that's again different, that's just an API for getting the low-level JSON tokens.
[03:06:24] <fizzie> I was referring to automatically generating a dedicated unmarshaller for each struct type at build time, so that no reflection is needed, but you don't have to manually write those functions either.
[03:06:32] <j416> ah, I see.
[03:08:01] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[03:11:07] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[03:11:51] *** Joins: arinov (~arinov@213.194.126.155)
[03:13:03] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[03:15:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:15:06] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:f0cc:7ce1:5401:36db)
[03:15:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:17:49] *** Joins: rcernin (~rcernin@124.190.139.235)
[03:20:15] *** Quits: kinduff (~kinduff@user/kinduff) (Ping timeout: 264 seconds)
[03:20:46] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:f0cc:7ce1:5401:36db) (Ping timeout: 268 seconds)
[03:21:49] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:23:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:24:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:25:10] *** Joins: arinov (~arinov@31.142.25.49)
[03:26:06] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[03:27:00] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[03:27:01] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[03:31:09] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:31:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[03:34:09] *** Joins: rcernin (~rcernin@124.190.139.235)
[03:35:46] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 245 seconds)
[03:42:41] <rawtaz> so i have a package named foo and in there is a func (without receiver) i want to call. but i also have a variable named foo which is an "instance" of a struct, and when i try to do foo.theFunc() i get an error that the struct doesnt have a function named theFunc(). is there any way around that (resolving the conflct) without having to rename or alias either the variable or the package name?
[03:43:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[03:43:59] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Ping timeout: 256 seconds)
[03:46:03] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 268 seconds)
[03:49:57] * rawtaz is almost done with his second real Go application :P
[03:50:19] <rawtaz> or well, third. but the first one hardly counts, it was just a htpasswd cli tool
[03:51:42] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[03:53:09] *** Quits: muesli (~muesli@fribbledom.com) (Quit: NO CARRIER)
[03:53:09] *** Quits: penguwin (~penguwin@fribbledom.com) (Quit: NO CARRIER)
[03:53:23] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[03:53:40] *** Joins: muesli (~muesli@fribbledom.com)
[03:53:42] *** Joins: penguwin (~penguwin@fribbledom.com)
[03:53:59] <lazyreader> rawtaz if you're shadowing the package name with a variable you can't "look through" to the original package name
[03:54:46] <rawtaz> yeah. so the only (reasonable) options are to rename the variable, or alias the package, i take it
[03:55:15] *** Quits: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net) (Remote host closed the connection)
[03:56:22] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:57:09] *** Quits: lazyreader (~lazyreade@user/lazyreader) (Quit: The Lounge - https://thelounge.chat)
[03:57:27] *** Joins: lazyreader (~lazyreade@user/lazyreader)
[03:57:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:58:51] *** Joins: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net)
[03:59:00] <rawtaz> oh my, just noticed that the Go docs use the term "layout" instead of "format" for the datetime syntax/format. just have to be special dont they :P
[03:59:27] *** Joins: fikran (~fikran@user/fikran)
[03:59:33] <bpalmer> rawtaz: Right. The next closest thing to reasonable is to have separately have a separate variable for the function
[03:59:58] <bpalmer> rawtaz: e.g., func main() { p := fmt.Println; fmt := MyStruct{}; p(fmt) }
[04:00:08] <bpalmer> but that's on the other side of the "reasonable" line
[04:00:17] <rawtaz> i agree :D
[04:01:03] *** Quits: arinov (~arinov@31.142.25.49) (Ping timeout: 264 seconds)
[04:01:13] <bpalmer> as for the other, it's not format for a reason; there are no format specifiers.
[04:01:31] <bpalmer> it *is* its own special thing that no other language uses, as far as I know, for better or worse.
[04:04:13] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5)
[04:05:45] <rawtaz> right
[04:06:06] <rawtaz> yes, unfortunately IMO. but im going with the same term. with Go it's all or nothing
[04:06:24] <rawtaz> except one thing, i dont buy the "dont start error messages with a capital letter". thats just taking it too far :-)
[04:08:23] <b0nn> hrm, functions should be verbs, and structs nouns
[04:09:15] <rawtaz> +1
[04:11:45] <bpalmer> it all goes well until you come to set.
[04:13:13] <lazyreader> rawtaz I believe they push that one because error messages often get consumed into other strings, So you don't want random capitals. or punctuation.
[04:14:38] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:17:28] <rawtaz> yeah.. im just a bit disturbed by the non-capitalism after colons, e.g.  Unable to write data: unable to open file: open foo.txt: permission denied
[04:17:53] <rawtaz> IMO it would be much nicer grammar if each first char after colons were capitalized
[04:18:06] <rawtaz> i wonder if anyone else thinks that or if its just me :P
[04:18:10] <lazyreader> That's grammatically correct, though. Colons don't start new sentences.
[04:19:10] <rawtaz> yeah i think youre right. i just dont like it at all :> i wish grammar rulels were different on that part
[04:19:11] <bpalmer> well, perhaps orthographically correct rather than grammatically correct.
[04:19:50] <lazyreader> orthodontically correct
[04:19:57] <bpalmer> and even then, there are some style disagreements about it.
[04:19:59] <rawtaz> but there's a bunch of those fishy things in grammar. it's quite enjoyable to read about those that have been debated for decades, where even the major houses of typography and grammar etc cant find a conclusive "this is THE way" :)
[04:20:33] <lazyreader> anyway my advice is always "don't fight the formatter" when it comes to go
[04:20:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c8eb-bc7c-9a6e-e932.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:20:39] <rawtaz> for example the good ol' whether to put an s after some types of words. and whether to make it s, s' or 's
[04:20:41] <bpalmer> e.g., https://writingcenter.unc.edu/tips-and-tools/semi-colons-colons-and-dashes/#:~:text=Here's%20our%20suggestion%3A%20generally%2C%20the,to%20capitalize%20it%20or%20not.
[04:20:44] <rawtaz> lazyreader: yeah youre right
[04:20:47] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:22:36] *** Joins: kinduff (~kinduff@user/kinduff)
[04:22:45] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:26:10] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[04:26:27] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:27:01] *** Joins: hgl (hgl@67.230.181.248)
[04:27:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:27:47] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[04:28:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:28:07] *** Joins: hgl (hgl@67.230.181.248)
[04:28:43] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: The Lounge - https://thelounge.chat)
[04:28:56] *** Joins: kinduff (~kinduff@user/kinduff)
[04:30:04] <yonson> I am struggling with how to assign a variable outside of a closure. Any good references on this?  The db pointer is what is confusing me here: https://go.dev/play/p/DgzAC9aw4ZS
[04:30:29] <bpalmer> don't use :=
[04:30:43] <b0nn> https://go.dev/play/p/BP2USkfqMoJ
[04:30:46] <bpalmer> if it gets a chance to, := will create a new variable of that name, which shadows the outer one.
[04:31:18] <bpalmer> You get the same bug if you have something like 'var i int; if X() { i, err := Y(); ... } return i'   <-- you'll always return the value 0
[04:31:43] <yonson> ah, thanks. I was using it to init the err, didn't realize it was greedy
[04:32:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[04:44:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5f3-cb73-b3d1-f2ab.res6.spectrum.com)
[04:45:10] *** Quits: kremlin (~kremlin@uglyman.kremlin.cc) (Quit: WeeChat 3.1)
[04:45:22] *** Joins: kremlin (~kremlin@uglyman.kremlin.cc)
[04:45:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5f3-cb73-b3d1-f2ab.res6.spectrum.com) (Client Quit)
[04:47:39] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:48] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:58:46] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:00:02] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[05:00:52] *** Joins: hgl (hgl@67.230.181.248)
[05:03:05] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:12:28] *** Joins: jbauer (~jbauer@146.71.11.98)
[05:14:19] *** Quits: jbauer (~jbauer@146.71.11.98) (Client Quit)
[05:21:27] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[05:25:06] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[05:28:39] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[05:29:56] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[05:32:51] *** Joins: cskr (~cskr@49.207.205.71)
[05:33:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:36:51] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:37:17] *** Joins: moonface (~moonface@45.133.4.190)
[05:37:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[05:38:20] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5f3-cb73-b3d1-f2ab.res6.spectrum.com)
[05:41:17] *** Quits: moonface (~moonface@45.133.4.190) (Client Quit)
[05:41:35] *** Joins: moonface (~moonface@45.133.4.190)
[05:42:20] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[05:44:10] *** Joins: hgl (hgl@67.230.181.248)
[05:49:06] *** Quits: moonface (~moonface@45.133.4.190) (Ping timeout: 245 seconds)
[05:50:17] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:52:37] *** Quits: anticw (~anticw@157-131-246-230.fiber.dynamic.sonic.net) (Ping timeout: 256 seconds)
[06:04:11] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[06:04:37] *** Quits: cskr (~cskr@49.207.205.71) (Quit: Leaving)
[06:04:50] *** Joins: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[06:06:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:07:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:08:48] *** Joins: fikran (~fikran@user/fikran)
[06:11:37] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:13:41] *** Quits: cobber (~protorom@213.240.182.77) (Quit: cobber)
[06:14:07] *** Joins: kiril (~kiril@85.91.153.163)
[06:14:24] *** Joins: frost (~frost@user/frost)
[06:17:18] *** Quits: Kane (~Kane@vps-546dd2ef.vps.ovh.net) (Ping timeout: 260 seconds)
[06:17:47] *** Quits: jezebel (jezebel@user/jezebel) (Ping timeout: 250 seconds)
[06:17:53] *** Joins: L1Cafe1 (~L1Cafe@user/l1cafe)
[06:18:08] *** Joins: Kane (~Kane@vps-546dd2ef.vps.ovh.net)
[06:18:41] *** Quits: j00n (~mario@user/j00n) (Ping timeout: 246 seconds)
[06:19:02] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (Ping timeout: 246 seconds)
[06:19:02] *** L1Cafe1 is now known as L1Cafe
[06:20:03] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:d196:146d:5b42:1188)
[06:20:29] *** Quits: nj (nicholas@stop.disconnecting.me) (Ping timeout: 265 seconds)
[06:20:36] *** Joins: nj (nicholas@stop.disconnecting.me)
[06:22:00] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[06:22:36] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[06:22:58] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[06:24:56] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:d196:146d:5b42:1188) (Ping timeout: 245 seconds)
[06:25:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:29:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e5f3-cb73-b3d1-f2ab.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[06:33:48] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[06:39:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:43:58] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:45:09] *** Joins: moonface (~moonface@45.133.4.190)
[06:46:50] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:52:11] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[06:52:26] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5) (Ping timeout: 245 seconds)
[06:52:31] *** Joins: hgl (hgl@67.230.181.248)
[06:52:53] *** Joins: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net)
[06:56:57] *** Quits: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net) (Client Quit)
[06:57:50] *** Quits: moonface (~moonface@45.133.4.190) (Ping timeout: 268 seconds)
[07:00:26] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:01:43] *** Joins: arinov (~arinov@213.194.126.155)
[07:07:34] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[07:09:49] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:3003:223d:cc92:2ba8) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:11:24] *** Joins: hgl (hgl@67.230.181.248)
[07:13:38] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[07:15:27] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[07:15:46] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[07:18:06] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:18:40] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 260 seconds)
[07:19:22] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[07:19:33] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[07:34:01] *** Joins: andlabs (~andlabs@2604:ca00:178:9c33:e54a:4377:d5c7:927d)
[07:35:40] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[07:41:44] *** Joins: ox (~oz@crystal/user/oz)
[07:42:29] *** ox is now known as oz
[07:44:51] *** Quits: andlabs (~andlabs@2604:ca00:178:9c33:e54a:4377:d5c7:927d) (Ping timeout: 264 seconds)
[07:46:33] *** Joins: Batzy (~quassel@user/batzy)
[07:46:52] *** Joins: crazymax (~crazymax@195.154.253.234)
[07:46:52] *** Quits: crazymax (~crazymax@195.154.253.234) (Changing host)
[07:46:52] *** Joins: crazymax (~crazymax@user/crazymax)
[07:48:12] *** Joins: andlabs (~andlabs@209.107.182.134)
[07:48:32] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 260 seconds)
[07:51:23] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[07:56:25] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 268 seconds)
[07:57:16] *** Quits: andlabs (~andlabs@209.107.182.134) (Read error: Connection reset by peer)
[07:57:22] *** Joins: andlabs_ (~andlabs@2604:ca00:178:46d:3dc7:68e0:e78c:d036)
[07:59:34] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[08:01:24] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:01:54] *** Joins: hgl (hgl@67.230.181.248)
[08:07:46] *** Quits: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0) (Quit: Textual IRC Client: www.textualapp.com)
[08:09:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:09:29] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[08:10:46] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[08:11:15] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[08:11:43] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[08:12:55] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[08:13:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:13:10] *** Joins: andlabs (~andlabs@2604:ca00:178:46d:4cc2:da3d:ead8:1270)
[08:13:16] *** Joins: hgl (hgl@67.230.181.248)
[08:13:39] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[08:13:44] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:15:38] *** Joins: Batzy_ (~quassel@user/batzy)
[08:16:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[08:17:16] *** Quits: andlabs_ (~andlabs@2604:ca00:178:46d:3dc7:68e0:e78c:d036) (Ping timeout: 264 seconds)
[08:17:51] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 264 seconds)
[08:17:56] *** Joins: andlabs_ (~andlabs@2604:ca00:178:46d:21d5:9c38:ead4:6a31)
[08:18:10] *** Joins: fikran (~fikran@user/fikran)
[08:18:38] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 268 seconds)
[08:19:33] *** Joins: moonface (~moonface@45.133.4.190)
[08:20:28] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:21:15] *** Quits: Kane (~Kane@vps-546dd2ef.vps.ovh.net) (Quit: quit)
[08:21:32] *** Quits: andlabs (~andlabs@2604:ca00:178:46d:4cc2:da3d:ead8:1270) (Ping timeout: 264 seconds)
[08:21:36] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[08:22:43] *** Joins: Atque (~Atque@user/atque)
[08:22:46] *** Joins: Kane (~Kane@portal.yarg.fr)
[08:22:51] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 245 seconds)
[08:22:57] *** Joins: darkapex (~darkapex@user/darkapex)
[08:24:12] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[08:24:13] *** Joins: moonface__ (~moonface@118.208.134.145)
[08:24:33] *** Joins: hgl (hgl@67.230.181.248)
[08:26:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[08:26:34] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[08:26:38] *** Quits: moonface (~moonface@45.133.4.190) (Ping timeout: 260 seconds)
[08:37:18] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[08:37:39] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[08:38:28] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[08:39:16] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[08:41:04] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:42:08] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[08:43:59] *** Joins: hgl (hgl@67.230.181.248)
[08:45:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[08:45:36] *** Joins: arinov (~arinov@213.194.126.155)
[08:47:19] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[08:47:42] *** Joins: sav_ (~savio@177.12.48.155)
[08:48:39] *** Joins: hgl (hgl@67.230.181.248)
[08:52:48] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[08:54:33] *** Quits: andlabs_ (~andlabs@2604:ca00:178:46d:21d5:9c38:ead4:6a31) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:58:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:59:06] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[09:03:42] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:04:32] *** Joins: hgl (hgl@67.230.181.248)
[09:05:43] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[09:05:49] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:06:09] *** Joins: hgl (hgl@67.230.181.248)
[09:09:59] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:10:50] *** Joins: hgl (hgl@67.230.181.248)
[09:13:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:13:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:13:49] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:16:36] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[09:16:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[09:18:24] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:19:27] *** Quits: sav_ (~savio@177.12.48.155) (Quit: Leaving)
[09:20:57] *** Joins: andlabs_ (~andlabs@70.107.171.168)
[09:23:15] *** Quits: andlabs (~andlabs@70.107.171.168) (Ping timeout: 264 seconds)
[09:25:22] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:26:12] *** Joins: hgl (hgl@67.230.181.248)
[09:27:30] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:27:51] *** Joins: hgl (hgl@67.230.181.248)
[09:28:14] *** Quits: moonface__ (~moonface@118.208.134.145) (Ping timeout: 260 seconds)
[09:28:42] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[09:30:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:34:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[09:34:43] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:35:03] *** Joins: hgl (hgl@67.230.181.248)
[09:36:38] *** Quits: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[09:37:09] *** Joins: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw)
[09:45:35] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:46:26] *** Quits: andlabs_ (~andlabs@70.107.171.168) (Ping timeout: 260 seconds)
[09:48:03] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[09:48:23] *** Joins: hgl (hgl@67.230.181.248)
[09:51:05] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:51:35] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[09:53:16] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[10:02:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:02:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:04:59] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[10:07:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:10:02] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[10:10:22] *** Joins: hgl (hgl@67.230.181.248)
[10:10:59] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:6947:7886:fc1e:c88d) (Quit: WeeChat 3.1)
[10:12:39] *** Joins: moonface__ (~moonface@118.208.134.145)
[10:15:57] *** Quits: dozn (uid249292@user/dozn) (Quit: Connection closed for inactivity)
[10:18:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:20:30] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[10:20:36] *** Joins: normen (~normen@p200300d7172e390041946308ded54eb8.dip0.t-ipconnect.de)
[10:21:29] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[10:21:54] *** Joins: danmurf (uid480399@user/danmurf)
[10:22:09] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[10:22:25] *** Joins: cim (~cim@205.185.117.110)
[10:23:22] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[10:24:12] *** Joins: hgl (hgl@67.230.181.248)
[10:25:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:26:44] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[10:27:31] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[10:27:31] *** Joins: fikran (~fikran@user/fikran)
[10:31:52] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[10:31:52] *** Joins: mei (~mei@user/mei)
[10:32:40] *** Quits: mei (~mei@user/mei) (Client Quit)
[10:33:07] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:7d4b:5bcc:1e0c:b0d2) (Read error: Connection reset by peer)
[10:33:13] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:34:26] *** Joins: mei (~mei@user/mei)
[10:34:30] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[10:37:20] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[10:37:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:38:40] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[10:43:41] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 245 seconds)
[10:46:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:51:28] *** Joins: sav_ (~savio@177.12.48.155)
[10:51:46] *** Quits: sav_ (~savio@177.12.48.155) (Remote host closed the connection)
[10:52:51] *** Quits: normen (~normen@p200300d7172e390041946308ded54eb8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[10:54:27] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:55:13] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:55:31] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[10:55:50] *** Joins: hgl (hgl@67.230.181.248)
[10:58:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:02:15] *** Quits: moonface__ (~moonface@118.208.134.145) (Ping timeout: 264 seconds)
[11:04:14] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:08:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:14:39] *** Joins: mrig (~AdiIRC@user/mrig)
[11:14:58] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[11:16:48] *** Joins: hgl (hgl@67.230.181.248)
[11:19:36] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Quit: Reconnecting)
[11:19:50] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[11:23:09] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[11:23:20] *** Joins: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net)
[11:23:21] *** Quits: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net) (Changing host)
[11:23:21] *** Joins: mitt3ns (~agent_whi@user/mitt3ns)
[11:23:59] *** Joins: hgl (hgl@67.230.181.248)
[11:28:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[11:29:20] *** Joins: rendar (~rendar@user/rendar)
[11:34:43] *** Joins: moonface__ (~moonface@118.208.134.145)
[11:34:59] *** Quits: cfebs (~cfebs@user/cfebs) (Ping timeout: 250 seconds)
[11:35:25] *** Quits: prime (~prime@user/prime) (Ping timeout: 250 seconds)
[11:35:49] *** Joins: cfebs (~cfebs@user/cfebs)
[11:35:51] *** Quits: rewt (~default@user/rewt) (Ping timeout: 250 seconds)
[11:35:54] *** Joins: nitrix_ (~nitrix@user/nitrix)
[11:36:17] *** Quits: seebs (~seebs@24.196.59.174) (Ping timeout: 250 seconds)
[11:36:17] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 250 seconds)
[11:36:23] *** Quits: nitrix (~nitrix@user/nitrix) (Ping timeout: 264 seconds)
[11:36:23] *** Quits: joshbaptiste (~josh@192.210.151.34) (Ping timeout: 264 seconds)
[11:36:23] *** nitrix_ is now known as nitrix
[11:36:36] *** Joins: seebs (~seebs@24.196.59.174)
[11:36:38] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:36:58] *** Joins: rewt (~default@user/rewt)
[11:38:09] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[11:39:44] *** Joins: prime (~prime@user/prime)
[11:40:01] *** Quits: moonface__ (~moonface@118.208.134.145) (Remote host closed the connection)
[11:40:25] *** Joins: mastardet (~mastardet@user/mastardet)
[11:43:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:43:38] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[11:44:58] *** Joins: hgl (hgl@67.230.181.248)
[11:50:25] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:50:45] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:53:19] *** Quits: Xjs (~jannis@user/xjs) (Quit: Bye.)
[11:53:48] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[11:53:52] *** Joins: Xjs (~jannis@user/xjs)
[11:54:53] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[11:55:12] *** Joins: hgl (hgl@67.230.181.248)
[11:55:53] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:57:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:57:51] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 245 seconds)
[11:59:31] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 245 seconds)
[12:01:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:01:57] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[12:03:50] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:04:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[12:05:09] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[12:05:39] *** Joins: normen (~normen@p200300d7172e390041946308ded54eb8.dip0.t-ipconnect.de)
[12:12:19] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[12:14:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:14:08] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:16:39] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 264 seconds)
[12:16:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[12:17:51] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 264 seconds)
[12:20:04] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:21:25] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[12:22:15] *** Joins: hgl (hgl@67.230.181.248)
[12:24:04] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[12:24:23] *** Joins: hgl (hgl@67.230.181.248)
[12:29:33] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:29:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:30:06] *** Quits: enick_741 (~dngray@user/dngray) (Quit: You have been kicked for being idle)
[12:30:44] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[12:31:04] *** Joins: hgl (hgl@67.230.181.248)
[12:32:52] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[12:33:12] *** Joins: hgl (hgl@67.230.181.248)
[12:33:45] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.133)
[12:33:45] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.133) (Changing host)
[12:33:45] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:34:03] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[12:34:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:36:52] *** Joins: fikran (~fikran@user/fikran)
[12:41:54] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[12:44:05] *** Joins: chripell (~chripell@147.80.76.34.bc.googleusercontent.com)
[12:45:02] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[12:47:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:47:28] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:48:29] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:49:37] *** Joins: jla (~jordi@2.154.174.13.dyn.user.ono.com)
[12:52:34] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 260 seconds)
[12:53:50] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[12:54:27] *** Quits: jla (~jordi@2.154.174.13.dyn.user.ono.com) (Ping timeout: 264 seconds)
[12:54:40] *** Joins: hgl (hgl@67.230.181.248)
[12:54:55] *** Joins: jla (~jordi@64.225.79.195)
[12:55:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[12:57:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[12:59:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:08:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:08:36] *** Joins: alzgh (~alzgh@user/alzgh)
[13:08:41] *** Joins: cobber (~protorom@213.240.182.77)
[13:10:43] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[13:11:33] *** Joins: hgl (hgl@67.230.181.248)
[13:12:12] *** Joins: fputs0 (~fputs@67.59.83.166)
[13:14:06] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 245 seconds)
[13:14:06] *** fputs0 is now known as fputs
[13:18:26] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[13:20:58] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[13:21:18] *** Joins: hgl (hgl@67.230.181.248)
[13:21:24] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:21:47] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[13:22:08] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[13:22:45] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.133)
[13:22:45] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.133) (Changing host)
[13:22:45] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[13:24:00] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:26:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[13:26:33] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 250 seconds)
[13:30:35] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[13:32:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10)
[13:34:48] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[13:36:38] *** Joins: hgl (hgl@67.230.181.248)
[13:37:26] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:34f6:60c4:597d:3a10) (Ping timeout: 268 seconds)
[13:38:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:40:23] *** Quits: mitt3ns (~agent_whi@user/mitt3ns) (Quit: bbl)
[13:42:57] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[13:44:03] *** Quits: sailorCat (~sailorCat@mail2.gajsin.name) (Quit: ZNC 1.8.2 - https://znc.in)
[13:44:19] *** Joins: sailorCat (~sailorCat@mail2.gajsin.name)
[13:45:04] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[13:45:54] *** Joins: hgl (hgl@67.230.181.248)
[13:47:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:47:57] *** Joins: popey4 (~popey@ubuntu/member/popey)
[13:49:08] *** Joins: jla (~jordi@2.154.174.13.dyn.user.ono.com)
[13:50:24] *** Quits: popey (~popey@ubuntu/member/popey) (Ping timeout: 268 seconds)
[13:50:24] *** popey4 is now known as popey
[13:51:16] *** Quits: jla (~jordi@2.154.174.13.dyn.user.ono.com) (Client Quit)
[13:51:34] *** Joins: jla (~jordi@2.154.174.13.dyn.user.ono.com)
[13:52:15] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[13:56:16] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:56:30] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[13:57:32] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Quit: Leaving)
[13:57:47] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:58:15] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[13:58:43] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[13:59:39] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:00:23] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[14:00:43] *** Joins: hgl (hgl@67.230.181.248)
[14:04:57] *** Quits: kinduff (~kinduff@user/kinduff) (Quit: Ping timeout (120 seconds))
[14:05:09] *** Joins: kinduff (~kinduff@user/kinduff)
[14:05:44] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[14:10:39] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 264 seconds)
[14:14:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[14:21:57] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:22:23] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[14:24:14] *** Joins: hgl (hgl@67.230.181.248)
[14:25:15] *** Joins: sav_ (~savio@177.12.48.155)
[14:25:40] <mikoto-chan> https://dpaste.com/FNFQVFAUB
[14:25:44] <mikoto-chan> why wouldn't this work?
[14:26:05] <mikoto-chan> nvm
[14:26:08] <mikoto-chan> uint vs int =_=
[14:26:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:27:54] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16)
[14:29:54] *** Joins: rcernin (~rcernin@124.190.139.235)
[14:30:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[14:32:26] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c49:92a9:2718:4a16) (Ping timeout: 245 seconds)
[14:32:51] *** Parts: jla (~jordi@2.154.174.13.dyn.user.ono.com) ()
[14:35:43] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[14:36:04] *** Joins: hgl (hgl@67.230.181.248)
[14:41:04] *** Quits: flughafen (~flughafen@p2e55d406.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:43:07] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[14:43:32] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[14:44:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:46:13] *** Joins: fikran (~fikran@user/fikran)
[14:49:14] *** Quits: sav_ (~savio@177.12.48.155) (Quit: Leaving)
[14:53:06] *** Joins: flughafen (~flughafen@p2e55de0e.dip0.t-ipconnect.de)
[14:56:01] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[14:59:29] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:03:50] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[15:05:10] *** Joins: hgl (hgl@67.230.181.248)
[15:06:59] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[15:07:19] *** Joins: hgl (hgl@67.230.181.248)
[15:10:33] *** Joins: Batzy (~quassel@user/batzy)
[15:10:34] *** Joins: michele (~eraser@user/michele)
[15:12:10] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[15:12:27] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 264 seconds)
[15:13:00] *** Joins: hgl (hgl@67.230.181.248)
[15:14:45] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5)
[15:18:09] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[15:25:50] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:26:13] *** Joins: mohan43u (~mohan@user/mohan43u)
[15:28:19] *** Joins: sav_ (~savio@177.12.48.155)
[15:28:34] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[15:28:54] *** Joins: hgl (hgl@67.230.181.248)
[15:30:29] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:32:14] *** Quits: rcernin (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[15:34:57] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:35:00] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[15:35:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[15:38:50] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:5a42:d076:26ef:e77)
[15:42:30] <neiluj> Hi! Trying to achieve the following, functions can send packets with a specific ID and store a condition var in a hash map indexed by the ID. Then there's a goroutine waiting for incoming messages, and upon reception of a message with the right ID, it broadcasts a signal to notify the other thread and returns the packet as well.
[15:42:41] <neiluj> Is there a library to achieve that?
[15:43:07] *** Joins: jla (~jordi@2.154.174.13.dyn.user.ono.com)
[15:43:12] *** Parts: jla (~jordi@2.154.174.13.dyn.user.ono.com) ()
[15:45:08] <neiluj> Oh, there's sync.Cond :)
[15:46:03] *** Quits: erani (erani@kapsi.fi) (Ping timeout: 264 seconds)
[15:46:10] <A_Dragon> a channel may be better if you move data around anyway
[15:47:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:48:42] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[15:52:31] <neiluj> A_Dragon: thanks, that's much easier!
[15:52:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[15:53:16] *** Joins: krux02 (~krux02@194.8.199.29)
[15:58:03] *** Joins: erani (erani@kapsi.fi)
[16:02:13] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[16:03:03] *** Joins: hgl (hgl@67.230.181.248)
[16:03:20] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[16:03:39] *** Joins: hgl (hgl@67.230.181.248)
[16:04:18] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:04:41] <krux02> I have a problem processing a query using go
[16:05:07] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:05:09] <krux02> for some reason all the dates are 0001-01-01 00:00:00 +0000 UTC
[16:05:11] <krux02> https://play.golang.org/p/LQtwu0tu8O5
[16:06:32] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:06:34] <krux02> When I do the exact same query in mysql on the terminal, I get correct dates
[16:08:45] <A_Dragon> mmmm maybe time parsing is broken. I dont remember what the zero value for a Time is
[16:09:44] <krux02> what do you suggest?
[16:09:51] <krux02> this looks like I get a zero value
[16:09:55] <A_Dragon> Im not sure
[16:10:01] <krux02> but I did call Scan on it
[16:10:04] <A_Dragon> I dont know much about the sql stuff at all
[16:10:10] <krux02> maybe I did something wrong with the API
[16:10:19] <krux02> me neither, that I why I am asking
[16:12:05] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[16:12:10] <krux02> I figured it out
[16:12:26] *** Joins: hgl (hgl@67.230.181.248)
[16:12:35] <krux02> for some reason this is required: "root@/production_backup?parseTime=true"
[16:14:17] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:14:40] <cobber> I'm stumbling on merging slices and variadics - is there any way to flatten a slice so that it can be used within a variadic list? e.g. line 24 https://go.dev/play/p/JpO1Zo6LK7U
[16:17:54] <fizzie> You can only call `Variadic(x, y, z)` or `Variadic(xs...)`, you can't mix and match. If you want to combine a bunch of values and slices, you'll have to do it explicitly, with append. Or possibly make it a `func Variadic(opts ...[]T)`, but then you'd have to wrap single values in slices explicitly.
[16:19:26] <cobber> and I thought I just didn't grok it :-) thanks for the clarification
[16:19:28] <fizzie> https://go.dev/play/p/7KWGjGsctxI as a single expression, though it gets a little unreadable that way.
[16:20:19] <cobber> yep - I've seen that done... was trying to avoid it :-)
[16:21:10] <siXy> "a little" :)
[16:22:48] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[16:24:21] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:26] <gluon> krux02: i was going to tell you that you needed to parse the time manually and use the right format string, but your solution does it automatically
[16:24:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:25:40] <siXy> For the ones that are individual values you can do s = append(s, []T{v1, v2, v3, v4}...) if you want to be a bit more conscise, but I'd suggest doing each s = append(s, sN...) on a separate line, otherwise it's hard to read.
[16:27:43] <cobber> true, but if they were all individual values, I could just use them directly: Variadic(s1,s2,s3,s4)
[16:27:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[16:28:16] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c)
[16:28:18] <cobber> it just breaks when some of the vallues are tucked away in a slice (with unknown length)
[16:35:54] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:37:37] <neiluj> what is the value of a 'zero'/nil channel?
[16:39:33] <siXy> neiluj: nil
[16:40:08] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[16:40:28] *** Joins: hgl (hgl@67.230.181.248)
[16:40:39] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[16:41:17] <neiluj> siXy: thanks, I'm trying to write: for v = nil; v == nil; v = <-node.incomingPackets[id] {} (wait until the channel v is not nil)
[16:41:48] <neiluj> my bad, the <- isn't correct
[16:41:51] <siXy> er, yeah, that's not how you want to do it.
[16:42:14] <neiluj> I removed the extra <-, and stored in a variable <-v
[16:43:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:43:20] <siXy> right, but you probably want to be using select here
[16:43:58] *** Joins: arinov (~arinov@77.67.129.200)
[16:51:07] <siXy> or indeed in the simple case where you're just looping through a single channel until closed, range. But either way, not that.
[16:52:16] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:53:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:55:29] <neiluj> siXy: Thanks, trying to write it with a select, but it looks like node.incomingPackets[id] is a nil channel, so it crashes
[16:55:33] *** Joins: fikran (~fikran@user/fikran)
[16:55:56] <neiluj> it works if I set this entry with a channel though
[16:56:21] <neiluj> But I have to treat the case of the empty entry, before the select on the channel
[16:56:22] <siXy> neiluj: https://go.dev/play/p/ZJ_jx6WERih
[16:56:29] <siXy> there's an example of both approaches
[16:58:04] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[16:58:37] <siXy> By the way - does anyone else find the new playground wierdly laggy compared to the old one?
[16:58:55] *** Joins: hgl (hgl@67.230.181.248)
[17:00:06] <cobber> siXy: can't say anything about the performance, but the "The article "Inside the Go Playground"" link is broken => to, err := human()
[17:00:06] <cobber> open playground: file does not exist
[17:00:28] <fizzie> The share button's enforced reload of the page is something that I noticed as being not as smooth. Program execution seemed to be about as fast as before.
[17:01:37] <siXy> I noticed wierd lag when editing code. Sometimes keystrokes would take a bit to have an effect.
[17:02:03] <siXy> Might be that my crappy laptop CPU is struggling I guess
[17:04:33] <neiluj> siXy: thanks very helpful, here is my problem: https://go.dev/play/p/peQLqeXfG0B
[17:04:54] <neiluj> The problem is that the chm[2] is not always defined
[17:05:10] <neiluj> so you have to initialize it before the select
[17:06:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:06:28] <siXy> neiluj: What's the usecase for a map of channels? It's pretty unusual that this is the correct answer to a problem
[17:08:04] <neiluj> There's a main routine which listen to incoming UDP packets, and it looks for an entry in the map of channels (map of callbacks) with the ID of the packet corresponding to a previous sent packet.
[17:08:17] <neiluj> so that it notifies the other thread that sent the initial packet.
[17:08:27] <neiluj> and gets the packet
[17:08:52] *** Joins: jjonah (~jjonah@p200300d5d7378b00dea632fffeb3342f.dip0.t-ipconnect.de)
[17:13:03] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[17:14:27] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:15:29] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:15:52] <bookworm> siXy: can't even see the share button on mobile devices... noce work of whomever wrote / (hasn't) tested that
[17:17:02] <fizzie> Works for me on mobile.
[17:17:19] *** Joins: hgl (hgl@67.230.181.248)
[17:17:22] <neiluj> siXy: sorted it out
[17:18:19] <neiluj> thanks :)
[17:18:46] <bookworm> https://labrat.space/irc/ac87ecb969cd5deb/Screenshot_20211124-144740.png my phone is large enough for the share button but the drop down is in the nirvana... can't scroll there either
[17:19:33] <bookworm> responsive layout mr and misses google, you coined half of the term iirc with material and so forth
[17:19:51] <siXy> neiluj: for reference, https://go.dev/play/p/x3rWHGmzr5I is an example of how you could do it a bit more robustly.
[17:20:18] <siXy> (sorry, kinda distracted with emails)
[17:21:40] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:22:25] <neiluj> siXy: oh yeah, to wait for the execution of all routines, thx!
[17:22:44] <neiluj> In my case, it's a node, so there's a infinite loop at the end.
[17:24:00] *** Joins: hgl (hgl@67.230.181.248)
[17:25:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:25:00] <neiluj> Do you store network addresses or UDP.conn records in your applications? With the network addresses, you always have to resolve the address each time you send a packet.
[17:27:35] <fizzie> bookworm: Well FWIW https://zem.fi/tmp/playground.png is what it looks like for me.
[17:28:01] <siXy> Probably best to store the UDPConn, so you keep the local addr etc
[17:28:07] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Quit: Leaving)
[17:28:53] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:29:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[17:29:41] <neiluj> siXy: oh yeah you can also retrieve the net address from this struct, thanks again :)
[17:32:15] *** Joins: hgl (hgl@67.230.181.248)
[17:36:51] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:37:06] <siXy> neiluj: it's probably worth pointing out that this is fairly vulnerable to OOMing. That map can fill up pretty fast with lots of packets, which will break your server in time.
[17:38:02] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[17:41:38] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[17:41:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:41:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:42:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:44:33] <krux02> does go have some form of unwrap/get rid of error value?
[17:44:39] <krux02> rows.ColumnTypes()[0].ScanType()
[17:44:49] <krux02> multiple-value rows.ColumnTypes() in single-value context
[17:46:24] <krux02> function returns two value, I only need one, is there a way to pass this vaule without explicity assigning it to a new variables
[17:46:28] <fizzie> No, though sometimes you see helper functions called `Must` that strip off error values (and panic if they're not nil) for cases where you're doing something like initializing package-level variables with a compiled regular expression / parsed template / whatnot.
[17:47:30] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6cb9:78ac:9c8d:f1d5) (Ping timeout: 260 seconds)
[17:47:48] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:48:09] *** Joins: hgl (hgl@67.230.181.248)
[17:53:59] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:54:49] *** Joins: hgl (hgl@67.230.181.248)
[17:57:39] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[17:57:59] *** Joins: hgl (hgl@67.230.181.248)
[17:57:59] <neiluj> siXy: regarding the map of channels?
[17:58:23] <neiluj> I'm thinking of implementing some kind of LRU cache
[17:59:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[17:59:45] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[17:59:59] *** Joins: BUSY (~BUSY@user/busy)
[18:00:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:01:07] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:02:49] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[18:06:09] *** Joins: hgl (hgl@67.230.181.248)
[18:06:13] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:07:13] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Remote host closed the connection)
[18:12:42] *** Quits: _nuke (~nuke@50-193-103-211-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[18:12:51] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8853:5f49:ed58:b880) (Ping timeout: 245 seconds)
[18:13:35] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[18:13:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:14:55] *** Joins: hgl (hgl@67.230.181.248)
[18:16:14] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Remote host closed the connection)
[18:16:53] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[18:19:33] *** Joins: _nuke (~nuke@50-193-103-211-static.hfc.comcastbusiness.net)
[18:21:38] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[18:22:14] *** Joins: darkapex (~darkapex@user/darkapex)
[18:22:45] *** Quits: normen (~normen@p200300d7172e390041946308ded54eb8.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:23:20] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:29:02] *** Joins: normen (~normen@p200300d7172e390041946308ded54eb8.dip0.t-ipconnect.de)
[18:35:54] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[18:39:57] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:47:18] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[18:48:38] *** Joins: hgl (hgl@67.230.181.248)
[18:51:56] *** Joins: lilgopher (~textual@2601:241:8000:38f0:6d00:a92d:3e37:105d)
[18:51:59] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[18:54:21] *** Joins: hgl (hgl@67.230.181.248)
[18:57:04] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[19:02:20] <dostoyevsky2> https://github.com/golang/go/blob/master/src/crypto/tls/conn.go#L650
[19:03:00] <dostoyevsky2> > return c.in.setErrorLocked(c.newRecordHeaderError(c.conn, "first record does not look like a TLS handshake")) <- any idea how I could suppress this error message from my stdout?
[19:03:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:04:54] *** Joins: fikran (~fikran@user/fikran)
[19:04:58] <dostoyevsky2> could I somehow define a custom error logger that will filter out this message?
[19:05:45] *** Joins: zwr (~zwr@2804:d45:b966:fb00:143e:d40:ce1d:b6a4)
[19:07:19] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[19:07:39] *** Joins: hgl (hgl@67.230.181.248)
[19:07:56] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:10:50] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:4c2d:8074:ff8b:55dd)
[19:11:37] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 256 seconds)
[19:11:59] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[19:19:30] <rewt> dostoyevsky2, that looks like a return statement; follow it back to where that return value gets printed, and see if there's anything you can do there
[19:21:28] *** Joins: pepee (~pepee@user/pepee)
[19:22:08] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[19:25:30] *** Joins: crdpa (~crdpa@186.250.140.65)
[19:26:20] *** Joins: jla (~jordi@64.225.79.195)
[19:26:56] *** Joins: mrig (~mrig@user/mrig)
[19:27:49] <crdpa> I made a bulk file renamer that reads all the filenames in the current directory and opens up a text editor with the filenames in a list so you can rename, save and quit and the program renames every file you changed the names. It's working great. But i have a problem with filenames that have the \n characters in it. The ioutil.ReadDir() function puts the file.Name() in double quotes as
[19:27:51] <crdpa> interpreted strings
[19:27:57] *** Parts: jla (~jordi@64.225.79.195) ()
[19:28:49] *** Joins: arinov (~arinov@77.67.129.200)
[19:28:49] <crdpa> How can i make the \n not interpreted as newline? Is there a way to make ioutil.ReadDir to use raw string literals? Or is there any way to convert to raw string literals?
[19:31:17] <siXy> crdpa: the ioutil package is deprecated - I'd encourage you to use os.ReadDir instead.
[19:31:44] <crdpa> I'm going to check it
[19:31:51] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[19:32:23] <Tv_> crdpa: i seriously doubt ReadDir performs any quoting, that'd be a huge surprise
[19:32:41] <Tv_> crdpa: i think you're just confused about strings and string literals
[19:32:44] <dostoyevsky2> rewt: the err object is passed on over 20 calls so far...
[19:33:12] *** Joins: hgl (hgl@67.230.181.248)
[19:34:04] <Tv_> crdpa: try talking about concrete things. "if i create a file like this, then run this, it shows this"
[19:34:46] <Tv_> also, <3 emacs dired C-x C-q
[19:35:08] <crdpa> Tv_: my code reads the current directory. Then it ranges over the output which is a fs.DirEntry and saves the file.Name() on a slice
[19:35:08] <Tv_> especially combined with multiple cursor mode
[19:35:55] <crdpa> Tv_: the file.Name() is a string. Then i put the contents of this slice in a temporary text file appending "\n" to the end of each entry
[19:35:56] <Tv_> okay, let's say you're looking at `[]string{"long\nfile name.txt"}`, now what
[19:36:00] <siXy> seperately I'd also encourage you to stop putting newlines in file names.
[19:36:27] <crdpa> Tv_: it's easier if you see it in action, here: https://github.com/crdpa/gore
[19:36:29] <siXy> I get that fuzzing bash scripts is fun and all, but....
[19:37:01] <Tv_> looks like you're just refusing to handle them: https://github.com/crdpa/gore/blob/main/main.go#L33
[19:37:27] <crdpa> Tv: in that case, the filename with \n in it is interpreted as a newline and the text file breaks the filename
[19:37:33] <crdpa> Tv_: yeah it's temporary
[19:37:50] <crdpa> Tv_: if you grab the release in the right you'll see what happens, the release was before i ignored the newlines
[19:38:17] <Tv_> before that, you mishandled them ;)
[19:38:24] <crdpa> Yes
[19:38:45] <Tv_> how did we get from there to " The ioutil.ReadDir() function puts the file.Name() in double quotes as"
[19:38:49] <Tv_> that's a *wild* leap
[19:39:43] <crdpa> ioutil.ReadDir() reads the content of the directory and save the name as a string, right? https://pkg.go.dev/io/fs#FileInfo
[19:39:51] <crdpa> Now os.ReadDir(), i just changed
[19:40:03] <Tv_> crdpa: maybe you want to just encode the filenames in your temp file, so they are always one line, regardless of the actual filename. https://pkg.go.dev/strconv#hdr-String_Conversions is the easiest way but you could make a custom escaper that only deals with \n
[19:40:24] <Tv_> crdpa: none of that "puts the file.Name() in double quotes"
[19:41:07] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[19:41:24] <Tv_> well, until you call the strconv functions, and do it yourself
[19:42:15] <crdpa> There's no strconv there. The code grabs the file.Name() and appends to a []string
[19:42:25] <crdpa> And the \n are interpreted as newlines
[19:42:27] *** Joins: hgl (hgl@67.230.181.248)
[19:42:44] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[19:43:05] <crdpa> Maybe converting \n to \\n works ?
[19:43:09] <seebs> i don't know what you think is happening
[19:43:29] <seebs> okay, so, like.
[19:43:47] <seebs> imagine that you had a file with a name that this is happening to, and the file's name on disk was just an a, and either a \n or a newline, and a b.
[19:43:49] <crdpa> Sorry, english is not my main language and sometimes i get confused speaking
[19:44:09] <seebs> what would be the raw ASCII values of the characters stored on the disk in the directory entry?
[19:44:34] <seebs> Would it be 61 0a 62, or would it be 61 5c 6e 62
[19:44:37] *** Joins: hgl (hgl@67.230.181.248)
[19:45:12] <seebs> because what it sounds like you're describing is that you believe that the actual name stored on the disk is 61 5c 6e 62, but somehow that ReadDir is translating it into 61 0a 62.
[19:45:17] <seebs> And that is not happening.
[19:45:25] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:45:57] <seebs> What COULD be happening is that the actual name on disk is 61 0a 62, and ReadDir is reporting that, but some other tool you're using is *displaying* it as if it were 61 5c 6e 62, because it is concerned that otherwise it'll be impossible to distinguish it from two files named a and b.
[19:46:21] <crdpa> The text editor is doing it?
[19:46:22] *** Joins: koo5_ (~quassel@51.140.155.227)
[19:46:43] <seebs> maybe
[19:46:57] <seebs> ReadDir is not altering file names.
[19:47:04] <seebs> It *can't*, it wouldn't work at all.
[19:47:28] <crdpa> Yeah
[19:47:31] <crdpa> "this is\na silly\nfile"
[19:47:37] <crdpa> When i cat the temp file it is like this
[19:47:43] <krux02> does anybody know how to sql query a list of keys?
[19:47:58] <crdpa> Hmmmm
[19:48:31] <krux02> I know select has arguments so I can insert a single key, but I don't know yet how a slice of keys can be used
[19:48:54] <krux02> it is probably some form of join
[19:48:59] <seebs> If you're getting back strings with a backslash-n in them, I'm pretty sure that the actual on-disk file names have a literal backslash n in them.
[19:50:37] <crdpa> Yes, the files have the \n. I created the files to see what would happen
[19:50:49] <crdpa> But i checked now and it's the text editor that is interpreting it as newlines
[19:51:18] <Tv_> crdpa: it's all about what you're doing with the []string
[19:51:34] <LambdaComplex> krux02: primary keys? foreign keys? does it even _matter_ that they're keys?
[19:51:42] *** Quits: __alex (~alex@ip5f5be3c9.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[19:51:42] <Tv_> crdpa: i think you're still confused about what "foo\nbar" means
[19:52:38] <Tv_> krux02: SQL in general cannot express that nicely, you have `SELECT x FROM y WHERE ID IN (1,2,3)` but you can't use bind parameters with that, e.g. Postgres has arrays
[19:52:43] <LambdaComplex> also "select has arguments so I can insert a single key" sounds wrong, considering SELECT statements don't insert data
[19:53:00] <Tv_> LambdaComplex: i think he meant bind params
[19:53:29] <Tv_> never forget: SQL was meant to be typed by hand, not used by computers
[19:53:33] <LambdaComplex> ohhhh. yeah that would make more sense
[19:54:02] <LambdaComplex> Tv_: are you saying you can't do "WHERE id IN ($1, $2, $3)"?
[19:54:22] <Tv_> LambdaComplex: variable length list -> no, you can't
[19:54:30] <Tv_> you can construct that string on the fly, but gah
[19:54:41] <krux02> LambdaComplex, it is primary key, but the question is more in general
[19:54:46] <Tv_> krux02: that's irrelevant
[19:54:53] <LambdaComplex> Tv_: oh, so what i typed would work, but it would only support exactly 3 items?
[19:55:04] <Tv_> yup
[19:55:07] <LambdaComplex> you're saying you can do "WHERE id IN $1" and then pass an array as $1?
[19:55:11] <LambdaComplex> *can't
[19:55:22] <LambdaComplex> okay yeah that sounds 100% right
[19:55:58] <Tv_> SQL has no arrays ;)
[19:56:02] <Tv_> Postgres does
[19:56:07] <Tv_> (they suck too, but at least they exist)
[19:56:08] <LambdaComplex> krux02: so you're trying to get the values of primary keys from multiple tables? or what?
[19:56:26] <LambdaComplex> Tv_: postgres is literally one of the greatest pieces of software on the planet though :P
[19:56:41] <Tv_> ehh only in the sense of cobol
[19:56:44] <siXy> ehhhh
[19:56:55] <Tv_> great as in we are in aww that it works so well and runs so much of the world
[19:56:55] <siXy> postgres is great if you believe a single server will never break
[19:56:59] <Tv_> but do *not* look at the details
[19:57:13] <Tv_> s/aww/awe/
[19:57:14] <siXy> it's much less good if you realise that it may break, and thus want to have multiple servers
[19:57:27] <LambdaComplex> also, fun fact, i found a book on sqlite at barnes and noble. it's in german. i live in the usa. apparently a custom (print-on-demand) order that never got picked up. i bought it. :^)
[19:57:51] <Tv_> postgres is pretty much exactly how you expect 25-year old software to look like
[19:58:15] <LambdaComplex> i'm just happy to have a decent relational database that also has decent enough json support, okay? ;-;
[19:58:25] <LambdaComplex> but yeah its sharding/HA story is definitely not the best
[19:59:14] <LambdaComplex> krux02: it'd probably be helpful if you could show us your schema and tell us what rows you want returned by your query
[20:02:16] <Tv_> krux02: to be concrete, for postgres you want something like `SELECT x FROM y WHERE z = ANY(?::INT[])`, then pass a Go slice as bind param, and hope your database driver converts it to a postgres array for you
[20:02:45] <Tv_> outside of postgres, it's duct tape all the way
[20:02:47] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:e825:d8ae:9f6e:237c) (Quit: smeeagle)
[20:03:27] <Tv_> and only the database driver part has anything to do with Go
[20:03:54] *** Quits: jjonah (~jjonah@p200300d5d7378b00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:05:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[20:15:44] *** Quits: krux02 (~krux02@194.8.199.29) (Remote host closed the connection)
[20:19:01] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[20:19:51] *** Joins: hgl (hgl@67.230.181.248)
[20:27:14] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[20:27:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:27:51] *** Quits: arinov (~arinov@77.67.129.200) (Ping timeout: 245 seconds)
[20:28:34] *** Joins: hgl (hgl@67.230.181.248)
[20:30:05] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[20:31:36] *** Quits: seds (sid492514@user/seds) (Ping timeout: 245 seconds)
[20:31:57] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.133)
[20:31:58] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.133) (Changing host)
[20:31:58] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:32:01] *** Quits: liam_ (sid7517@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[20:33:02] *** Joins: seds (sid492514@user/seds)
[20:33:11] *** Quits: et (~et@user/et) (Excess Flood)
[20:34:26] *** Joins: liam_ (sid7517@id-7517.helmsley.irccloud.com)
[20:37:05] *** Joins: mei8 (~mei@user/mei)
[20:37:15] *** Quits: rewt (~default@user/rewt) (Killed (NickServ (GHOST command used by rewt__)))
[20:37:30] *** Joins: rewt (~default@user/rewt)
[20:37:38] *** Joins: aLeSD_ (~aLeSD@139.47.114.114)
[20:37:47] *** Joins: chripell_ (~chripell@147.80.76.34.bc.googleusercontent.com)
[20:38:10] *** Joins: marcel8 (~marcel@user/marcel)
[20:38:13] *** Joins: dalan623673 (~dalan@14-202-182-202.tpgi.com.au)
[20:38:15] *** Joins: kn1000 (~kn100@wireguard/tunneler/kn100)
[20:38:32] *** Joins: c10l2 (~c10l@user/c10l)
[20:38:33] *** Joins: monoxane0 (~monoxane@user/monoxane)
[20:38:39] *** Joins: popey6 (~popey@ubuntu/member/popey)
[20:38:43] *** Joins: henry404089 (~henry4040@112.104.114.35)
[20:38:44] *** Joins: scjosh1 (~scjosh@206.189.79.69)
[20:39:03] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[20:39:05] *** Joins: nitrix_ (~nitrix@user/nitrix)
[20:39:07] *** Joins: kipukun_ (~kipukun@207.244.104.227)
[20:39:11] *** Joins: salem_ (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[20:39:13] *** Joins: flynn6 (~mcbloch@user/flynn)
[20:39:23] *** Joins: cfebs_ (~cfebs@user/cfebs)
[20:39:24] *** Joins: a1paca_ (~a1paca@user/a1paca)
[20:39:36] *** Joins: X-Scale` (~ARM@92.250.97.112)
[20:40:09] *** Joins: jannis (~jannis@user/xjs)
[20:40:11] *** Joins: nj- (nicholas@stop.disconnecting.me)
[20:40:23] *** Joins: hgl (hgl@67.230.181.248)
[20:40:52] *** Joins: NotKyros (~kyros@user/kyros)
[20:41:12] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:41:27] *** Joins: rabbitear_ (~juice@142.93.115.104)
[20:41:28] *** Joins: mohan43u_ (~mohan@user/mohan43u)
[20:41:31] *** Joins: sailorTheCat (~sailorCat@mail2.gajsin.name)
[20:41:46] *** Joins: Icycle (~icedream@hzn-b.serverkomplex.de)
[20:41:53] *** Joins: Teckla_ (~Teckla@user/teckla)
[20:41:53] *** Joins: adip_ (~adip@dhy92.neoplus.adsl.tpnet.pl)
[20:42:00] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[20:42:02] *** Joins: anticw_ (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[20:42:10] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[20:42:14] *** Joins: prime- (~prime@user/prime)
[20:42:26] *** Quits: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[20:44:20] *** Joins: Batzy_ (~quassel@user/batzy)
[20:45:50] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Read error: Connection reset by peer)
[20:46:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:143e:d40:ce1d:b6a4) (*.net *.split)
[20:46:43] *** Quits: lilgopher (~textual@2601:241:8000:38f0:6d00:a92d:3e37:105d) (*.net *.split)
[20:46:43] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (*.net *.split)
[20:46:43] *** Quits: mohan43u (~mohan@user/mohan43u) (*.net *.split)
[20:46:43] *** Quits: Batzy (~quassel@user/batzy) (*.net *.split)
[20:46:43] *** Quits: aLeSD (~aLeSD@139.47.114.114) (*.net *.split)
[20:46:43] *** Quits: popey (~popey@ubuntu/member/popey) (*.net *.split)
[20:46:43] *** Quits: sailorCat (~sailorCat@mail2.gajsin.name) (*.net *.split)
[20:46:43] *** Quits: chripell (~chripell@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[20:46:43] *** Quits: Xjs (~jannis@user/xjs) (*.net *.split)
[20:46:43] *** Quits: prime (~prime@user/prime) (*.net *.split)
[20:46:43] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[20:46:43] *** Quits: cfebs (~cfebs@user/cfebs) (*.net *.split)
[20:46:43] *** Quits: mei (~mei@user/mei) (*.net *.split)
[20:46:43] *** Quits: henry40408 (~henry4040@112-104-114-35.adsl.dynamic.seed.net.tw) (*.net *.split)
[20:46:43] *** Quits: dsrt^ (~dsrt@68.101.63.101) (*.net *.split)
[20:46:43] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (*.net *.split)
[20:46:43] *** Quits: oz (~oz@crystal/user/oz) (*.net *.split)
[20:46:43] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (*.net *.split)
[20:46:43] *** Quits: nj (nicholas@stop.disconnecting.me) (*.net *.split)
[20:46:44] *** Quits: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net) (*.net *.split)
[20:46:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[20:46:44] *** Quits: marcel (~marcel@user/marcel) (*.net *.split)
[20:46:44] *** Quits: X-Scale (~ARM@92.250.97.112) (*.net *.split)
[20:46:44] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (*.net *.split)
[20:46:44] *** Quits: cespare (sid330206@id-330206.hampstead.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: monoxane (~monoxane@user/monoxane) (*.net *.split)
[20:46:44] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[20:46:44] *** Quits: justicefries (sid26447@id-26447.tinside.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: Balooga (sid407689@id-407689.lymington.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (*.net *.split)
[20:46:44] *** Quits: Kyros (~kyros@user/kyros) (*.net *.split)
[20:46:44] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[20:46:44] *** Quits: dale (dale@user/dale) (*.net *.split)
[20:46:44] *** Quits: dalan62367 (~dalan@14-202-182-202.tpgi.com.au) (*.net *.split)
[20:46:44] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (*.net *.split)
[20:46:44] *** Quits: c10l (~c10l@user/c10l) (*.net *.split)
[20:46:44] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[20:46:44] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (*.net *.split)
[20:46:44] *** Quits: bpalmer (~user@user/bpalmer) (*.net *.split)
[20:46:44] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[20:46:44] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[20:46:44] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[20:46:45] *** Quits: dreistadt (sid501648@id-501648.lymington.irccloud.com) (*.net *.split)
[20:46:45] *** Quits: chimeracoder_ (sid230642@id-230642.helmsley.irccloud.com) (*.net *.split)
[20:46:45] *** Quits: fdv (sid27570@helmsley.irccloud.com) (*.net *.split)
[20:46:45] *** Quits: kipukun (~kipukun@207.244.104.227) (*.net *.split)
[20:46:45] *** Quits: imm_ (~imm_@user/imm/x-3405860) (*.net *.split)
[20:46:45] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[20:46:45] *** Quits: rabbitear (~juice@142.93.115.104) (*.net *.split)
[20:46:45] *** popey6 is now known as popey
[20:46:45] *** henry404089 is now known as henry40408
[20:46:45] *** cfebs_ is now known as cfebs
[20:46:45] *** monoxane0 is now known as monoxane
[20:46:45] *** scjosh1 is now known as scjosh
[20:46:45] *** NotKyros is now known as Kyros
[20:46:45] *** nitrix_ is now known as nitrix
[20:46:45] *** mei8 is now known as mei
[20:46:45] *** kn1000 is now known as kn100
[20:46:45] *** marcel8 is now known as marcel
[20:46:45] *** c10l2 is now known as c10l
[20:46:45] *** dalan623673 is now known as dalan62367
[20:46:45] *** flynn6 is now known as flynn
[20:46:58] *** X-Scale` is now known as X-Scale
[20:47:17] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[20:48:16] *** Quits: recursion (sid504862@id-504862.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[20:48:47] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[20:49:23] *** Joins: recursion (sid504862@id-504862.ilkley.irccloud.com)
[20:50:07] *** Joins: hgl (hgl@67.230.181.248)
[20:52:41] *** Joins: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com)
[20:52:55] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[20:52:55] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[20:52:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:143e:d40:ce1d:b6a4)
[20:52:55] *** Joins: lilgopher (~textual@2601:241:8000:38f0:6d00:a92d:3e37:105d)
[20:52:55] *** Joins: oz (~oz@crystal/user/oz)
[20:52:55] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[20:52:55] *** Joins: bpalmer (~user@user/bpalmer)
[20:52:55] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[20:52:55] *** Joins: cespare (sid330206@id-330206.hampstead.irccloud.com)
[20:52:55] *** Joins: justicefries (sid26447@id-26447.tinside.irccloud.com)
[20:52:55] *** Joins: Balooga (sid407689@id-407689.lymington.irccloud.com)
[20:52:55] *** Joins: dale (dale@user/dale)
[20:52:55] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[20:52:55] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[20:52:55] *** Joins: V (~v@anomalous.eu)
[20:52:55] *** Joins: dreistadt (sid501648@id-501648.lymington.irccloud.com)
[20:52:55] *** Joins: chimeracoder_ (sid230642@id-230642.helmsley.irccloud.com)
[20:53:12] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:e84c:31fa:24ac:a92f)
[20:53:18] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Max SendQ exceeded)
[20:53:53] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[20:54:08] *** Joins: et (~et@user/et)
[20:54:11] *** Joins: fdv (sid27570@id-27570.helmsley.irccloud.com)
[20:54:20] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[20:57:58] *** Joins: neurocyte0132889 (~neurocyte@212.232.84.133)
[20:57:59] *** Quits: neurocyte0132889 (~neurocyte@212.232.84.133) (Changing host)
[20:57:59] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:58:34] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[21:00:12] *** Joins: __alex (~alex@ip5f5be3c9.dynamic.kabel-deutschland.de)
[21:00:24] *** Joins: hgl (~hgl@67.230.181.248)
[21:02:00] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:02:10] *** Quits: crdpa (~crdpa@186.250.140.65) (Quit: WeeChat 3.3)
[21:03:32] *** Joins: sav__ (~savio@177.12.48.155)
[21:05:29] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[21:06:18] *** Quits: sav_ (~savio@177.12.48.155) (Ping timeout: 260 seconds)
[21:07:13] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (Remote host closed the connection)
[21:08:11] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:12:01] *** Joins: arinov (~arinov@213.194.126.155)
[21:12:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[21:14:08] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:14:14] *** Joins: fikran (~fikran@user/fikran)
[21:15:21] *** Quits: sav__ (~savio@177.12.48.155) (Ping timeout: 245 seconds)
[21:16:06] *** Quits: X-Scale (~ARM@92.250.97.112) (Ping timeout: 265 seconds)
[21:17:32] *** X-Scale` is now known as X-Scale
[21:18:46] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:24:42] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[21:24:59] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[21:26:36] *** Quits: __alex (~alex@ip5f5be3c9.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[21:28:34] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[21:28:48] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[21:29:02] *** Joins: andlabs (~andlabs@2604:ca00:178:46d:389a:79e5:9762:bf97)
[21:29:09] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:29:43] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[21:29:57] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[21:31:02] *** Joins: jpw (~jpw@user/jpw)
[21:31:44] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[21:34:06] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[21:35:08] *** Quits: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[21:35:23] *** Joins: bch_x (~bch@S01069050ca2cbf63.ok.shawcable.net)
[21:36:16] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[21:36:19] *** Joins: arinov (~arinov@31.142.60.102)
[21:36:20] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:36:36] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (Ping timeout: 268 seconds)
[21:38:57] *** Quits: hgl (~hgl@67.230.181.248) (Remote host closed the connection)
[21:39:18] *** Joins: hgl (hgl@67.230.181.248)
[21:40:04] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[21:40:25] *** Joins: hgl (hgl@67.230.181.248)
[21:42:34] *** Quits: shtirlic (~shtirlic@pppoe.95-55-139-91.dynamic.avangarddsl.ru) (Remote host closed the connection)
[21:42:42] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[21:43:32] *** Joins: hgl (hgl@67.230.181.248)
[21:47:30] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[21:48:58] *** Joins: andlabs_ (~andlabs@2604:ca00:178:46d:4870:c46f:ba2:bd81)
[21:52:26] *** Quits: andlabs (~andlabs@2604:ca00:178:46d:389a:79e5:9762:bf97) (Ping timeout: 245 seconds)
[21:54:01] *** Joins: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net)
[21:54:01] *** Quits: mitt3ns (~agent_whi@c-73-181-78-96.hsd1.co.comcast.net) (Changing host)
[21:54:01] *** Joins: mitt3ns (~agent_whi@user/mitt3ns)
[21:54:04] *** Joins: andlabs (~andlabs@2604:ca00:178:46d:16f:ca26:d621:1e99)
[21:54:46] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[21:54:46] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[21:54:46] *** Joins: tane (~tane@user/tane)
[21:57:20] *** Joins: jla (~jordi@64.225.79.195)
[21:57:30] *** Parts: jla (~jordi@64.225.79.195) ()
[21:57:38] *** Quits: andlabs_ (~andlabs@2604:ca00:178:46d:4870:c46f:ba2:bd81) (Ping timeout: 260 seconds)
[22:00:27] *** Joins: andlabs_ (~andlabs@209.107.182.134)
[22:01:06] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[22:02:45] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 256 seconds)
[22:03:42] *** Quits: andlabs (~andlabs@2604:ca00:178:46d:16f:ca26:d621:1e99) (Ping timeout: 260 seconds)
[22:05:04] *** Joins: hgl (hgl@67.230.181.248)
[22:05:35] *** Quits: andlabs_ (~andlabs@209.107.182.134) (Read error: Connection reset by peer)
[22:06:00] *** Joins: andlabs (~andlabs@2604:ca00:178:46d:fd31:9f70:7474:3f16)
[22:08:07] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[22:09:12] *** Joins: brooks (~brooks@23.157.160.131)
[22:10:32] *** Quits: brooks79 (~bswinnert@23.157.160.131) (Ping timeout: 240 seconds)
[22:11:19] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:d47c:2e8:8aeb:4a8)
[22:13:02] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[22:15:06] *** Joins: andlabs_ (~andlabs@2604:ca00:178:46d:c8e1:8976:95b9:6008)
[22:16:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:16:06] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:16:27] *** Joins: Atque (~Atque@user/atque)
[22:16:33] *** Joins: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net)
[22:16:46] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[22:17:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:17:13] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[22:17:22] *** Joins: andlabs__ (~andlabs@2604:ca00:178:46d:7414:b26a:d31e:9310)
[22:17:32] *** Quits: andlabs (~andlabs@2604:ca00:178:46d:fd31:9f70:7474:3f16) (Ping timeout: 240 seconds)
[22:19:29] <dostoyevsky2> I read on reddit today that google doesn't use Go for larger projects, only for smaller ones, microservices, as it doesn't have the tools to manage the complexity of larger projects
[22:20:21] *** Quits: andlabs_ (~andlabs@2604:ca00:178:46d:c8e1:8976:95b9:6008) (Ping timeout: 245 seconds)
[22:20:29] <smrtz> Heyo! I'm writing a Makefile for a go project and I'm having trouble finding a "best practice" for `make install`? The GNU Make documentation says the `install` target shouldn't build, just move files. Is there any real reason I shouldn't just `go install` in the `install` target and let Go build the package?
[22:20:59] <siXy> dostoyevsky2: I wouldn't believe everything you read on reddit ;)
[22:21:19] <smrtz> Convention is to `make; sudo make install` and I'd like to avoid doing the build as root if possible?
[22:21:28] <dostoyevsky2> siXy: I only believe things I read on irc ;-)
[22:22:13] <siXy> smrtz: Generally go projects only use makefiles if they have a bunch of other complicated things they need to do. If all you're doing is go install - why use a makefile?
[22:22:22] <deniska> the less a language compilation process looks like C's, the less sense to use `make` for it
[22:23:22] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[22:23:24] <smrtz> That's a good point. I'm doing some updates to an existing system (where users are already running `make; sudo make install`) and would like to avoid changing their process if possible.
[22:24:13] <ikke> And not every one wants to install things in $GOPATH
[22:24:21] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:27] <ikke> prefix / DESTDIR are things
[22:24:33] <cobber> personally I just use the Makefile as a collection of "here's how I work with this project" - e.g. how I run tests, generate docs etc. - mostly just simple commands, nothing in the way of dependencies - go does all that
[22:24:59] <smrtz> Also, t's quite a few `go install` lines with multiple differing arguments...
[22:25:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:25:17] *** Joins: andlabs (~andlabs@2604:ca00:178:46d:5c3c:213:8665:c78d)
[22:25:20] <siXy> dostoyevsky2: I'd also add that what google does internally is a bad fit for basically everyone else - doing X because google does X is usually a terrible idea. Google has problems almost zero other companies on earth have to solve, and thus have reasons for choosing to do X that don't apply to anyone other than google.
[22:25:22] <avemestr> Who cares what Google (or any other FAANG) is using?
[22:25:47] <dostoyevsky2> I think the correct way is to consider Makefiles and then reimplement a half-assed make during a weekend because tabs...
[22:25:49] <avemestr> https://blog.bradfieldcs.com/you-are-not-google-84912cf44afb
[22:25:52] <siXy> If you're asking "can go be used for larger projects?" the answer to that is definitely yes.
[22:27:31] <siXy> ikke: to me that sounds like an argument for shipping a .deb/.rpm, not a makefile
[22:27:41] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[22:27:48] *** Joins: X-Scale` (~ARM@31.22.167.95)
[22:27:56] *** Joins: andlabs_ (~andlabs@2604:ca00:178:46d:7dc0:55e9:7bd8:f5c7)
[22:28:06] <ikke> Not everyone uses deb / rpms
[22:28:35] <siXy> oh well? those users can figure it out for themselves :)
[22:28:41] *** Quits: andlabs__ (~andlabs@2604:ca00:178:46d:7414:b26a:d31e:9310) (Ping timeout: 245 seconds)
[22:28:45] <smrtz> It's true there maybe better tools for the job normally, but in this situation I'm pretty locked in to the existing process.
[22:28:57] <ikke> you can use go build to build a binary
[22:29:03] <dostoyevsky2> Well, turns out, when it comes to tls/encryption I am Google.  Just give me the current standard algorithms all in the base languages, not in some obscure libraries
[22:29:05] <fizzie> smrtz: If you want a `make; sudo make install` style build, you might consider using `go build -o foo ./cmd/foo` to build your binaries, and then just plain old-fashioned `install` in the install target to put them where they need to go.
[22:29:07] <siXy> smrtz: in that case just use go build as your BUILD step.
[22:29:15] *** X-Scale` is now known as X-Scale
[22:29:27] *** Quits: arinov (~arinov@31.142.60.102) (Read error: Connection reset by peer)
[22:29:56] <smrtz> That was actually my initial thought, but I've never used go before and it looked like `go install` also did some dependency management stuff?
[22:30:05] <ikke> go build as well
[22:30:10] <smrtz> Oh!
[22:30:19] <smrtz> Well that just fixes my whole problem.
[22:30:31] <smrtz> Great advice, I'll test it now. Thanks!
[22:31:11] *** Quits: andlabs (~andlabs@2604:ca00:178:46d:5c3c:213:8665:c78d) (Ping timeout: 245 seconds)
[22:31:17] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[22:31:18] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:31:49] <dostoyevsky2> I wrote a go program that reads a build.yaml and then will compile/build supporting different programming languages
[22:32:37] *** Joins: hgl (hgl@67.230.181.248)
[22:33:17] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[22:34:03] *** Teckla_ is now known as Teckla
[22:34:43] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[22:35:30] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[22:36:53] *** Quits: andlabs_ (~andlabs@2604:ca00:178:46d:7dc0:55e9:7bd8:f5c7) (Ping timeout: 250 seconds)
[22:37:22] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[22:37:28] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[22:37:47] *** Joins: hgl (hgl@67.230.181.248)
[22:40:06] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[22:41:26] *** Joins: hgl (hgl@67.230.181.248)
[22:43:45] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[22:45:08] *** Joins: Teckla (~Teckla@user/teckla)
[22:46:06] *** Joins: hgl (hgl@67.230.181.248)
[22:47:45] *** Joins: ajfriesen0 (~ajfriesen@cable-78-35-98-50.nc.de)
[22:48:24] *** Quits: ajfriesen (~ajfriesen@cable-78-35-98-50.nc.de) (Read error: Connection reset by peer)
[22:48:24] *** ajfriesen0 is now known as ajfriesen
[22:52:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:52:35] <dostoyevsky2> > w := FilterWriter{ignore: StringArray{"tls: first record does not look like a TLS handshake"} }; log.SetOutput(w)
[22:52:45] <dostoyevsky2> I think I got rid of that message now
[22:53:05] *** rabbitear_ is now known as rabbitear
[22:54:42] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[22:56:09] *** Joins: shtirlic (~shtirlic@pppoe.95-55-139-91.dynamic.avangarddsl.ru)
[23:05:42] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[23:05:42] *** Joins: particleflux_ (~particlef@ircb.hackthe.codes)
[23:06:32] *** Joins: hgl (hgl@67.230.181.248)
[23:06:47] *** Quits: particleflux (~particlef@ircb.hackthe.codes) (Ping timeout: 265 seconds)
[23:07:56] *** particleflux_ is now known as particleflux
[23:09:18] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:16:53] *** Joins: lollipopman (~jhathaway@c-73-73-44-208.hsd1.il.comcast.net)
[23:19:03] *** Quits: hgl (hgl@67.230.181.248) (Remote host closed the connection)
[23:19:53] *** Joins: hgl (hgl@67.230.181.248)
[23:21:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:23:35] *** Joins: fikran (~fikran@user/fikran)
[23:24:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0074-2ca5-a34e-fe74.res6.spectrum.com)
[23:25:53] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[23:25:54] *** Quits: adip_ (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[23:26:04] *** Quits: smrtz (~smrtz@pool-173-53-99-179.rcmdva.fios.verizon.net) (Quit: Client closed)
[23:27:08] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Quit: exiting 3.3)
[23:27:58] *** Joins: adip (~adip@deq245.neoplus.adsl.tpnet.pl)
[23:28:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:30:18] *** Quits: lollipopman (~jhathaway@c-73-73-44-208.hsd1.il.comcast.net) (Quit: leaving)
[23:31:02] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:35:45] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Remote host closed the connection)
[23:36:12] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:37:03] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:39:22] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Ping timeout: 260 seconds)
[23:39:52] *** Joins: tyson2`` (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:41:42] *** Quits: flughafen (~flughafen@p2e55de0e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:44:51] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:f5cb:e3d2:82ef:da0)
[23:46:23] *** Joins: andlabs_ (~andlabs@2a00:79e1:abc:1a0a:3c35:5fc:22d6:e2c2)
[23:48:34] *** Quits: tyson2`` (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Ping timeout: 268 seconds)
[23:49:48] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:f5cb:e3d2:82ef:da0) (Ping timeout: 268 seconds)
[23:54:40] *** Joins: flughafen (~flughafen@p57969b97.dip0.t-ipconnect.de)
[23:55:21] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Ping timeout: 245 seconds)
