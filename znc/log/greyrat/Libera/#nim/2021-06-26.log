[00:06:42] *** Quits: cyraxjoe (~joe@201.159.96.13) (Ping timeout: 265 seconds)
[00:07:07] *** Joins: cyraxjoe (~joe@190.123.43.35)
[00:08:33] *** Joins: MightyJoe (~joe@201.159.96.13)
[00:12:06] *** Quits: cyraxjoe (~joe@190.123.43.35) (Ping timeout: 252 seconds)
[00:15:12] <FromDiscord> <checkersai> In reply to @checkersai "Just curious, is there": Found the answer to my question last night btw for anyone else that's curious: https://nim-lang.org/docs/system.html#compileOption%2Cstring
[00:17:23] <FromDiscord> <Traveler> Hello ðŸ‘‹ , I am exploring nim a bit and I am wondering if anybody could help me pas std::string to nim. How does one achieve this?â†µtypeâ†µ  String {.importcpp: "std::string", header: "string".} = object This would give me the type, but do I also have to provide a proc for mapping nim strings to string and back?
[00:27:49] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3r7K
[00:28:39] <FromDiscord> <haxscramper> In reply to @haxscramper "I linked it mostly": There are also couple of libraries that provide `std::string` wrappers
[00:29:07] <FromDiscord> <haxscramper> In reply to @Traveler "Hello ðŸ‘‹ , I": You need to wrap corresponding methods, first example does that for `c_str()`
[00:32:33] <FromDiscord> <Kermithos> does nim has an inbuilt function to convert a bool to an int?
[00:32:45] <FromDiscord> <Kermithos> couldnt find any docs
[00:32:59] <FromDiscord> <@bracketmaster-5a708063d73408ce4> !eval true.int
[00:33:02] <NimBot> Compile failed: /usercode/in.nim(1, 5) Error: expression 'int(true)' is of type 'int' and has to be used (or discarded)
[00:33:21] <FromDiscord> <@bracketmaster-5a708063d73408ce4> !eval echo true.int
[00:33:23] <NimBot> 1
[00:33:28] <FromDiscord> <Kermithos> ah nice
[00:33:33] <FromDiscord> <Kermithos> I only checked toInt()
[00:33:34] <FromDiscord> <Kermithos> thanks
[00:33:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yes - in this case, `int()` is an initializer
[00:39:00] <FromDiscord> <Avahe> Where are people relaying from that are "bots" in discord that isn't irc?
[00:39:23] <FromDiscord> <Traveler> @haxscramper  thanks! What libraries do this by default?
[00:39:28] <FromDiscord> <leorize> matrixâ†µ(@Avahe)
[00:39:47] <FromDiscord> <Avahe> Oh are there two matrix channels now?
[00:40:04] <FromDiscord> <leorize> there's only one matrix channel that's active
[00:42:43] <FromDiscord> <Traveler> @haxscramper  i see in the chat from the first link indeed a similar issue I have that if I bind a class to nim and init it with a cstr the field of that class is empty; I can set it manually, but cannot construct it the way nim types are initialized
[00:44:57] <FromDiscord> <haxscramper> You mean what libraries wrap `std::string`? I think there are several in addtion to what I linker earlierâ†µ(@Traveler)
[00:45:08] <FromDiscord> <haxscramper> But I don't use them, so I can't comment really
[00:45:32] <FromDiscord> <haxscramper> You have nim type with `std::string` field and want to construct it on the nim side?â†µ(@Traveler)
[00:47:46] <FromDiscord> <haxscramper> Or you have C++-class and your problem is that you can't construct it using `Object(field: <std::string-expression>)` for field init?
[00:50:38] <FromDiscord> <Avahe> Oh I think I'm in the right one now
[00:55:45] <FromDiscord> <Traveler> In reply to @haxscramper "Or you have C++-class": I have a cpp class that I want to use inside nim
[00:56:52] <FromDiscord> <Traveler> It is a super simple class that has a `std::string` as a property. From the docs c_strings are no problem (which I can confirm); but wrapping it is, however i don't want to "reinvent" the wheel if already people have done the heavy lifting ðŸ˜‰
[00:58:29] <FromDiscord> <Traveler> sent a code paste, see https://play.nim-lang.org/#ix=3r7W
[00:59:18] <FromDiscord> <Traveler> changing the type from `string` to `cstring` in nim type (and cpp class) it works, but im stuborn and want my std::strings to work :P!
[00:59:25] <FromDiscord> <Traveler> also initializing it with cstring yields empty
[00:59:57] <FromDiscord> <Traveler> i.e. `var obj = SomeClass(name: "test"); echo obj.name` yields `''`
[01:00:13] <FromDiscord> <Traveler> but setting it after the fact works normally
[01:01:13] <FromDiscord> <kaushalmodi> In reply to @Traveler "It is a super": Are you looking for this? https://github.com/Clonkk/nim-cppstl/blob/master/cppstl/std_string.nim
[01:01:43] <FromDiscord> <kaushalmodi> See the example usages in https://github.com/Clonkk/nim-cppstl/blob/master/tests/tstring.nim
[01:03:49] <FromDiscord> <Traveler> epic
[01:03:56] <FromDiscord> <Traveler> that looks good thanks @kaushalmodi
[01:36:09] <FromDiscord> <xDd> yo guys are there some objective c tutorials/blog posts i wanna import few libs from objc to nim can someone point me there ðŸ˜›
[01:36:46] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#implementation-specific-pragmas-importobjc-pragma there is this showcase which should help, but no clue about tutorials
[01:38:09] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I was able to do this sometime ago - how do I access the name of a variable in nim?
[01:38:30] <FromDiscord> <xDd> Thanks @ElegantBeef i see this before but its very basic stuff ðŸ˜„
[01:40:27] <FromDiscord> <Elegantbeef> what do you mean access the name of a variable, dump the name into a string?
[01:40:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yes
[01:40:39] <FromDiscord> <@bracketmaster-5a708063d73408ce4> essentially, I have a proc, and it needs to print the name of the variable passed it
[01:40:45] <FromDiscord> <Elegantbeef> `astToStr`
[01:41:45] <FromDiscord> <Elegantbeef> !eval var a = 100; echo astToStr(a)
[01:41:45] <FromDiscord> <Elegantbeef> Damn nimbot letting me down
[01:41:49] <NimBot> a
[01:41:55] <FromDiscord> <Elegantbeef> Ah actually that doesnt work, that just converts the ident
[01:42:55] <FromDiscord> <Elegantbeef> Even if a wasnt in scope it'd output `a`
[01:43:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I remember having to use repr
[01:45:34] <FromDiscord> <Elegantbeef> So you want invoke a proc, and for it to print out the variables names passed in?
[01:45:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yeah
[01:45:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> although proc may not be the way to go
[01:45:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I wonder if I'd have to more or less go with macro
[01:49:42] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r87
[01:49:42] <FromDiscord> <Elegantbeef> That will only echo out parameters which were passed as variables, so a literal wouldnt be printed
[01:49:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> hm - that's a neat idea
[01:52:41] <FromDiscord> <Elegantbeef> That's why they keep me around, that and i dont break any rules ðŸ˜›
[01:52:42] <FromDiscord> <Elegantbeef> mostly the latter
[01:52:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how long have you been nimming?
[01:59:49] <FromDiscord> <Elegantbeef> A year or 2
[01:59:50] <FromDiscord> <Elegantbeef> I write more macros than probably good for my health
[01:59:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> you know what they say
[01:59:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> a macro a day keeps the doctor away
[02:06:00] <FromDiscord> <Elegantbeef> The issue is the doctor it keeps away is the brain doctor
[02:08:06] <FromDiscord> <deech> How do I use the `[: T]` syntax for things like `ref` and `ptr`, `[: ptr T]`  doesn't seem to work.
[02:09:09] <FromDiscord> <Elegantbeef> You sure? https://play.nim-lang.org/#ix=3r8b
[02:09:27] <FromDiscord> <Elegantbeef> that `[: T]` is for the method call syntax not procedure definitions
[02:11:03] <FromDiscord> <deech> https://play.nim-lang.org/#ix=3r8c
[02:12:09] <FromDiscord> <Elegantbeef> What are you even trying to do convert it back to `ptr int`?
[02:12:41] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @elegantbeef\:matrix.org \: how can I change your doSomething proc to have the following signature `proc doSomething(a: int, name="default") = echo name`, and then have echoParams call `doSomething(a, name=`str`)`?
[02:13:38] <FromDiscord> <Elegantbeef> this how can i sounds more like "how can you" ðŸ˜›
[02:13:54] <FromDiscord> <@bracketmaster-5a708063d73408ce4> well...
[02:14:21] <FromDiscord> <deech> The equivalent of `MyInt(10).cint` but of the type of `MyInt` was `MyInt = distinct ref int`.
[02:14:51] <FromDiscord> <deech> Or `distinct ptr int`.
[02:15:47] <FromDiscord> <Elegantbeef> Just changing it to `varargs[untyped]` works for that
[02:15:48] <FromDiscord> <Elegantbeef> Nah that's not the equivlent
[02:15:48] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r8f
[02:15:57] <FromDiscord> <Elegantbeef> The `[: T]` is specifically for method call syntax for passing generics which is why it doesnt work here, you arent passing generics you're attempting to convert
[02:16:20] <FromDiscord> <deech> Ah makes sense.
[02:16:30] <FromDiscord> <deech> Thought I'd try my luck
[02:16:59] <FromDiscord> <Elegantbeef> cause when you do `a.someProc[T]()` it's evaluated as \`\`[]`(someproc(a), T)` not `someProc[T](a)`
[02:17:57] <FromDiscord> <Elegantbeef> Well i fucked the formatting but either way, it's not a conversion method, it's a specifically for generic method calls
[02:18:55] <FromDiscord> <Elegantbeef> one of the most simple examples i can talk about is something like `10.newSeq[: float]()` cs `10.newSeq[float]`
[02:20:12] <FromDiscord> <Elegantbeef> The first one compiles properly, the second one fails due to it trying `[](newSeq(10), float)` instead of the proper `newSeq[float](10)`
[02:20:44] <FromDiscord> <Elegantbeef> Hopefully that's not overly redundant and actually explains what's going on
[02:21:30] <FromDiscord> <deech> Makes a ton of sense. Thanks1
[02:21:37] <FromDiscord> <deech> (edit) "Thanks1" => "Thanks!"
[02:23:08] <FromDiscord> <Elegantbeef> [BracketMaster (Yehowshua Immanuel)](https://matrix.to/#/@bracketmaster-5a708063d73408ce4f8ad7ee:gitter.im)\: The untyped version working for you?
[02:23:21] <FromDiscord> <@bracketmaster-5a708063d73408ce4> the untyped version?
[02:23:38] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a code paste, see https://play.nim-lang.org/#ix=3r8i
[02:23:40] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm trying to do something like that
[02:24:11] <FromDiscord> <@bracketmaster-5a708063d73408ce4> oh - I didn't try that? is that what I need?
[02:24:12] <FromDiscord> <Elegantbeef> replacing `varargs[typed]` with `varargs[untyped]`
[02:24:18] <FromDiscord> <@bracketmaster-5a708063d73408ce4> typed/untyped doesn't seem to be my issue
[02:24:44] <FromDiscord> <Elegantbeef> Well `name` isnt a parameter so `name =` will fail
[02:25:02] <FromDiscord> <Elegantbeef> if it's untyped you'll be able to use named parameter calls with no issue
[02:25:31] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm afraid I don't quite follow
[02:26:00] <FromDiscord> <Elegantbeef> when doing `echoParams(doSomething, a, name = "hmm")` name isnt a parameter of the macro so it'll fail
[02:26:07] <FromDiscord> <Elegantbeef> due to being a typed macro
[02:26:24] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r8j but as soon as you make it untyped, you can use the same syntax you'd use in a procedure and it just works https://play.nim-lang.org/#ix=3r8j
[02:26:27] <FromDiscord> <Elegantbeef> Lol double paste
[02:26:30] <FromDiscord> <Elegantbeef> I'm good at life
[02:26:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I don't want to pass name to the macro
[02:26:41] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I want the macro to pass name to doSomething
[02:26:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> lol
[02:26:48] <FromDiscord> <Elegantbeef> That's my point
[02:27:24] <FromDiscord> <Elegantbeef> `name =` will not work due to the macro not having a parameter of name if the args are typed, but if it's untyped it's just grabbed as is and can be passed along
[02:27:53] <FromDiscord> <Elegantbeef> Just look at that new link and run it, it does what you want without any effort
[02:28:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> what I mean is that we should be calling `echoParams(doSomething, a)` not `echoParams(doSomething, a, name = "hmmmm")`
[02:28:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> echoParams then calls doSomething and overides the name default
[02:29:15] <FromDiscord> <Elegantbeef> I dont see what the issue is?
[02:29:35] <FromDiscord> <Elegantbeef> You want echo params to have a default name parameter?
[02:30:28] *** Quits: max22- (~maxime@2a01cb088335980044631fd924fbcf81.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:30:41] <FromDiscord> <@bracketmaster-5a708063d73408ce4> calling `echoParams(doSomething, a)` should call `doSomething(a, name="a")`
[02:30:48] <FromDiscord> <Elegantbeef> ok
[02:30:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> calling `echoParams(doSomething, b)` should call `doSomething(b, name="b")`
[02:30:51] <FromDiscord> <@bracketmaster-5a708063d73408ce4> so on and so forth
[02:31:00] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sorry - I wasn't very clear
[02:33:26] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r8m
[02:34:27] <FromDiscord> <Elegantbeef> I am wondering if there is even a point to this macro to allow any procedure since it seems like you're using `doSomething` only
[02:34:45] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'll send you a snippet of how I actually end up using it
[02:34:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thanks
[02:34:51] <FromDiscord> <@bracketmaster-5a708063d73408ce4> it will make sense
[02:35:02] <FromDiscord> <Elegantbeef> I wouldnt be so sure of myself
[02:36:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[02:53:57] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[02:54:20] *** Joins: supakeen (~user@python/site-packages/supakeen)
[03:18:14] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @elegantbeef\:matrix.org  \: https://play.nim-lang.org/#ix=3r8s
[03:18:37] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm making a simulator for the POWERPC architecture\: https://github.com/BracketMaster/nimulatorPPC/tree/ad362bd0376a12ae829592ea5e6b8003f0cea214
[03:18:49] <FromDiscord> <@bracketmaster-5a708063d73408ce4> oops\: https://github.com/BracketMaster/nimulatorPPC
[03:18:52] <fn> <12R2D299> 4GitHub: 7"A POWER9 emulator written in nim."
[03:19:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> To help debug, I need to be able to see what registers have changed between instructions
[03:19:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> so that's why
[03:19:22] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I hope it makes sense now
[03:20:10] <FromDiscord> <Elegantbeef> How large is the state?
[03:20:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> power has roughly 2000 general purpose registers
[03:20:46] <FromDiscord> <@bracketmaster-5a708063d73408ce4> but only up to 5 change every instruction
[03:20:49] <FromDiscord> <Elegantbeef> Ah you're holding state anyway
[03:21:07] <FromDiscord> <Elegantbeef> i can show you what i'd do
[03:21:13] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sure
[03:26:07] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r8t this might be better
[03:27:23] <FromDiscord> <Elegantbeef> Well obviously changing it so it prints the index ðŸ˜€
[03:28:13] <FromDiscord> <Elegantbeef> And you can always define a debug switch
[03:29:00] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r8u as such here
[03:29:10] <FromDiscord> <Elegantbeef> without `-d:debugRegs` it does nothing, but with  it will print out reg changes
[03:30:01] <FromDiscord> <Elegantbeef> and of course i made a typo, should be `defined`
[03:30:02] <FromDiscord> <@bracketmaster-5a708063d73408ce4> this is actually very elegant
[03:30:18] <FromDiscord> <@bracketmaster-5a708063d73408ce4> you should change your name to elegantNim
[03:30:30] <FromDiscord> <Elegantbeef> Lol
[03:31:00] <FromDiscord> <Elegantbeef> I mean it's about doing the most with the least, the simplest solution is often the most elegant
[03:31:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> one slight problem
[03:31:20] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://github.com/BracketMaster/nimulatorPPC/blob/main/src/cpu/regfiles.nim#L6
[03:31:25] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I have 15 other regfiles
[03:31:42] <FromDiscord> <Elegantbeef> They're all `openArray[int]`
[03:32:13] <FromDiscord> <Elegantbeef> Unless the implication is that they can all change inside a single block
[03:32:42] <FromDiscord> <Elegantbeef> If that's the case you can cache all of them before hand, which will ofc be tedious to setup but be the exact same logic
[03:33:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> they can all change in a single block
[03:33:50] <FromDiscord> <Elegantbeef> Ok so time for macro magic then cause i'm a lazy curmudgen
[03:34:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> hah - its ok. I think you're solution would work quite well if I wasn't doing such a niche thing
[03:34:44] <FromDiscord> <Elegantbeef> Nyet, my solution will be used! ðŸ˜›
[03:34:59] <FromDiscord> <@bracketmaster-5a708063d73408ce4> alrighty then!
[03:35:32] <FromDiscord> <@bracketmaster-5a708063d73408ce4> feel free to make a pull request on the simulator once I upstream the diffRegfile implementation
[03:35:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> prefferrably after I get the UART-\>Terminal fully working
[03:56:41] <FromDiscord> <pyautogui> NimConf 2021 is going to be interesting. Really looking forward to https://www.youtube.com/Min-implementing-a-programming-languag-with-Nim-(NimConf-2021).
[03:57:10] <FromDiscord> <Elegantbeef> [BracketMaster (Yehowshua Immanuel)](https://matrix.to/#/@bracketmaster-5a708063d73408ce4f8ad7ee:gitter.im)\: Well here's what i got https://play.nim-lang.org/#ix=3r8z ðŸ˜›
[03:57:21] <FromDiscord> <Elegantbeef> Aw shit it doesnt do the defined check
[03:58:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I should mention that I would need to run regChangeBase at some root level
[03:58:54] <FromDiscord> <Elegantbeef> There https://play.nim-lang.org/#ix=3r8B
[03:58:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> regs could be changed throughout many files
[03:59:12] <FromDiscord> <Elegantbeef> Ah then this doesnt track each change
[03:59:18] <FromDiscord> <Elegantbeef> It just tracks total changes
[03:59:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> well that's fine
[04:00:07] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I would probably insert regChangeBase right here\: https://github.com/BracketMaster/nimulatorPPC/blob/main/src/nimulatorPPC.nim#L11
[04:00:14] <FromDiscord> <Elegantbeef> Well then this should work
[04:00:36] <FromDiscord> <Elegantbeef> When the entire block changes it'll output all the register changes
[04:01:12] <FromDiscord> <Elegantbeef> and of course you can use it nested for specific debugging
[04:01:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> the actually reg change statements occur in these files\: https://github.com/BracketMaster/nimulatorPPC/tree/main/src/instructions/implementations
[04:01:17] <FromDiscord> <checkersai> sent a code paste, see https://play.nim-lang.org/#ix=3r8C
[04:01:36] <FromDiscord> <checkersai> (edit) "https://play.nim-lang.org/#ix=3r8C" => "https://play.nim-lang.org/#ix=3r8D"
[04:01:57] <FromDiscord> <checkersai> Also when I run with `nim c -r --gc:arc`
[04:01:58] <FromDiscord> <leorize> to check for gcArc you should use `defined(gcArc)`
[04:02:08] <FromDiscord> <leorize> compileOption is a bit unreliable at times
[04:02:47] <FromDiscord> <Elegantbeef> Yea i think a nice feature is two option strings for start/end message for a sort of stacktrace
[04:03:16] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[04:03:40] *** Joins: supakeen (~user@python/site-packages/supakeen)
[04:04:23] <FromDiscord> <checkersai> In reply to @leorize "to check for gcArc": that still returns false
[04:05:57] <FromDiscord> <leorize> do you happen to have a config file that set --gc\:refc? and what Nim version are you using?â†µ(@checkersai)
[04:10:48] <FromDiscord> <Elegantbeef> Well this is my promise to be last change, https://play.nim-lang.org/#ix=3r8F i'm now stopping the progression ðŸ˜›
[04:11:07] <FromDiscord> <Elegantbeef> If i continue working on this someone needs to ban me ðŸ˜€
[04:14:27] <FromDiscord> <checkersai> In reply to @leorize "do you happen to": I'm using 1.4.4
[04:14:42] <FromDiscord> <checkersai> And to my knowledge I haven't set refc in any config
[04:14:46] <FromDiscord> <retkid> Have anyone done stuff with nim in gamebox or unreal
[04:16:28] <fn> <11ForumUpdaterBot99> New post on r/nim by RattleyCooper: Is there a list of weird nim rules for noobs?, see https://reddit.com/r/nim/comments/o7zflk/is_there_a_list_of_weird_nim_rules_for_noobs/
[04:19:47] <FromDiscord> <checkersai> Also I'm on windows currently if that matters
[04:20:14] <FromDiscord> <Elegantbeef> What's gamebox
[04:20:15] <FromDiscord> <@bracketmaster-5a708063d73408ce4> mordern ones anyways
[04:20:20] <FromDiscord> <@bracketmaster-5a708063d73408ce4> 10,000 lines of code so far
[04:20:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> nimulatorPPC is possibly my largest nim project yet
[04:20:32] <FromDiscord> <checkersai> oh wait
[04:20:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> CPUs are kinda complex
[04:20:45] <FromDiscord> <checkersai> shuffling the argument fixed it
[04:20:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> modern ones anyways
[04:21:04] <FromDiscord> <Elegantbeef> Larger than anything i have
[04:21:06] <FromDiscord> <@bracketmaster-5a708063d73408ce4> to be fair, I generated the largest files - such as the decoder\: https://github.com/BracketMaster/nimulatorPPC/blob/main/src/isa/bitpat_pairings.nim
[04:21:10] <FromDiscord> <checkersai> running `nim c -r --gc:arc .\src\oatmeal.nim` gets the expected behavior
[04:21:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> by manually parsing the POWER manual\: https://ibm.ent.box.com/s/1hzcwkwf8rbju5h9iyf44wm94amnlcrv
[04:21:39] <FromDiscord> <checkersai> so does `nimble --gc:arc run`
[04:21:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> oh yes - it needs to go before not after
[04:21:54] <FromDiscord> <@bracketmaster-5a708063d73408ce4> good catch
[04:21:59] <FromDiscord> <@bracketmaster-5a708063d73408ce4> i overlooked that
[04:22:09] <FromDiscord> <gogolxdong (liuxiaodong)> @retsyo what are you going to do?
[04:22:53] <FromDiscord> <retkid> In reply to @Elegantbeef "What's gamebox": An engine
[04:23:04] <FromDiscord> <Elegantbeef> I figured that but i couldnt find anything on it ðŸ˜€
[04:23:26] <FromDiscord> <leorize> sounds like a nimble and/or compiler bug, you should file an issue for itâ†µ(@checkersai)
[04:24:11] <FromDiscord> <retkid> In reply to @Elegantbeef "I figured that but": Think I got the engines name confused in my brain
[04:24:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> before, you were trying to do\: `nim c -r .\src\oatmeal.nim --gc:arc`
[04:25:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I read in the nim manual that args pass after the file name are passed to the program
[04:25:22] <FromDiscord> <@bracketmaster-5a708063d73408ce4> if this is the case - seems like expected behavior?
[04:25:39] <FromDiscord> <leorize> yea that's expected if nim was called like that
[04:30:42] <FromDiscord> <checkersai> In reply to @@bracketmaster-5a708063d73408ce4 "I read in the": Oh that makes sense actually
[04:31:05] <FromDiscord> <checkersai> So it's not a bug, it was just ignorance on my part
[04:34:28] <FromDiscord> <gogolxdong (liuxiaodong)> cool,what kind of engine?
[04:36:07] <FromDiscord> <gogolxdong (liuxiaodong)> what tools have you used for developping games, unity, unreal, blender, etc.
[04:47:47] <FromDiscord> <retkid> Iâ€™ve used Magicavoxel to model things
[04:47:55] <FromDiscord> <retkid> Thatâ€™s really it
[04:48:04] <FromDiscord> <retkid> Iâ€™ve been to afraid to program games
[04:48:11] <FromDiscord> <retkid> But now I think I should just start
[04:52:55] <FromDiscord> <retkid> Thinking about just plugging c executables in and using whatever language I want
[05:22:11] <FromDiscord> <retkid> In reply to @Elegantbeef "I figured that but": I somehow confused gamebox for godot
[05:58:10] <FromDiscord> <Bung> is there any common format for outlines ? I want generate html pages with sidebar.
[06:14:20] *** Quits: Derbycat (uid229420@id-229420.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:15:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm pretty sure my dog has 1KB of memory
[06:25:45] *** Joins: deshordash (~textual@li2214-92.members.linode.com)
[06:26:36] *** Quits: deshordash (~textual@li2214-92.members.linode.com) (Remote host closed the connection)
[06:51:58] <FromDiscord> <hamidb80> In reply to @@bracketmaster-5a708063d73408ce4 "I'm pretty sure my": LOL, why?
[06:53:56] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:24:28] <FromDiscord> <deech> Apparently it's possible to have object inheritance that mixes `ref` , `ptr` and plain objects like: `type O = ptr object of RootObj; OO = ref object of O; OOO = object of OO` . What are the semantics of parents that have mixed memory management?
[07:53:59] <FromDiscord> <whorf> I ask for help in #main?
[07:55:51] <FromDiscord> <whorf> sent a code paste, see https://play.nim-lang.org/#ix=3r9u
[07:58:21] <FromDiscord> <Elegantbeef> You can indeed ask fo help here ðŸ˜€
[07:59:01] <FromDiscord> <Elegantbeef> Would've made life easier if you gave a full runnable example ðŸ˜›
[08:00:18] <FromDiscord> <whorf> oh sorryâ†µaddedâ†µI think it's just because sorted doesn't include an impl for CountedTable?
[08:00:39] <FromDiscord> <Elegantbeef> yep
[08:01:46] <FromDiscord> <Elegantbeef> What are you trying to sort by the count of the entry?
[08:02:37] <FromDiscord> <whorf> yes
[08:07:03] <FromDiscord> <Elegantbeef> The sugar module has a perfect macro for you here `dup` it allows you to turn an procedure that that takes a `var T` and give it a `T` inline https://play.nim-lang.org/#ix=3r9v
[08:08:02] <FromDiscord> <Elegantbeef> and worth noting `pairs` is technically redundant since that's what is invoked for a tuple afaik
[08:18:51] <FromDiscord> <whorf> I'm getting `undeclared identifier` for `dup` and `collect` when I try to use them, but I have everything imported that needs to be imported
[08:19:15] <FromDiscord> <Elegantbeef> `nim -v`?
[08:19:48] <FromDiscord> <whorf> 1.0.6
[08:19:59] <FromDiscord> <Elegantbeef> Ah yea you're just a little behind
[08:20:09] <FromDiscord> <Elegantbeef> stable is 1.4.8 you're on a LTS
[08:20:31] <FromDiscord> <whorf> ah okayâ†µtime to figure that out on ubuntu then
[08:20:34] <FromDiscord> <whorf> appreciate it
[08:20:49] <FromDiscord> <Elegantbeef> Assuming you dont have any reason to be there, uninstall nim from apt, and use choosenim to install it
[08:21:03] <FromDiscord> <Elegantbeef> https://github.com/dom96/choosenim#unix
[08:21:05] <fn> <12R2D299> 4GitHub: 7"Tool for easily installing and managing multiple versions of the Nim programming language."
[08:21:14] <FromDiscord> <Elegantbeef> What the bot said ðŸ˜›
[08:21:52] <FromDiscord> <Elegantbeef> Let's you switch between versions of nim easily, so even if you needed 1.0.6 for whatever you could `choosenim 1.0.6` to work on it then `choosenim stable` to come back
[08:28:03] <FromDiscord> <whorf> alright sweet your fix works now
[08:28:05] <FromDiscord> <whorf> appreciate it!
[08:28:21] <FromDiscord> <Elegantbeef> No problem
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:39] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:02:41] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Remote host closed the connection)
[09:14:21] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[09:31:04] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Remote host closed the connection)
[09:33:08] <FromDiscord> <whorf> why can't I use a subrange to limit the output of this?â†µhttps://play.nim-lang.org/#ix=3r9K
[09:33:55] <FromDiscord> <whorf> even if I use `.pairs` (which creates an iterator) `[0..2]` just causes an error
[09:34:14] <FromDiscord> <whorf> (edit) "even if I use `.pairs` (which ... createsthe" 03added "explicitly" | "an iterator)" => "the iterator?)"
[09:34:40] <FromDiscord> <Elegantbeef> sort returns a `CountTable` it doesnt have a slice operator
[09:36:42] <FromDiscord> <whorf> but this happens even if I use `.pairs` first
[09:37:48] <FromDiscord> <Elegantbeef> Pairs is an iterator
[09:37:56] <FromDiscord> <whorf> https://play.nim-lang.org/#ix=3r9O
[09:38:31] <FromDiscord> <whorf> I don't get why it thinks `.values` is undefined when I try to subrange
[09:38:31] <FromDiscord> <Elegantbeef> I'm getting you alternatives ðŸ˜›
[09:38:35] <FromDiscord> <whorf> okay ty
[09:39:06] <FromDiscord> <Elegantbeef> well it's cause you're doing `.values[]` which means it's `[](theExpr.values, 0..2)`
[09:44:51] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r9U
[09:44:55] <FromDiscord> <Elegantbeef> There you go two options
[09:45:43] <FromDiscord> <whorf> you rock!â†µthanks again
[09:46:02] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3r9W left out the breaking cause i'm a dummy for the custom iterator
[09:50:23] <FromDiscord> <whorf> sent a code paste, see https://play.nim-lang.org/#ix=3r9Y
[09:50:42] <FromDiscord> <whorf> It's probably better for me to get into the habit of creating custom iterators early on for stuff like this
[09:50:59] <FromDiscord> <Elegantbeef> Well when the language doesnt provide for you, your provide for you ðŸ˜›
[09:51:28] <FromDiscord> <whorf> There's certainly a lot of nice stuff built in, but I can tell I'm going to find holes for impls all over the place lol
[09:51:31] <FromDiscord> <Elegantbeef> It's super easy to do which encourages you to do it, plus it can be cheaper than the alternatives
[09:52:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:56:52] <FromDiscord> <Elegantbeef> Hmm i think devel has a new feature which would enable this to be even cleaner
[10:04:35] <FromDiscord> <Elegantbeef> Nevermind i was wrong, thought a general itertable `[]` operator could've been made
[10:06:18] <FromDiscord> <whorf> can `[0..10]` be used instead of `slice(0..10)`?
[10:06:37] <FromDiscord> <Elegantbeef> That's what i was investigating with devel
[10:07:47] <FromDiscord> <whorf> ah okay
[10:11:58] <FromDiscord> <Elegantbeef> So seems the only way to use `[]` is the ``[]`(a, 0..2)` for an iterator
[10:12:13] <FromDiscord> <Elegantbeef> So nope it's worse
[10:21:54] <FromDiscord> <Elegantbeef> @whorf\: Well congrats you encouraged me to make this monstrosity ðŸ˜› https://play.nim-lang.org/#ix=3ra7
[10:23:29] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[11:13:33] <FromDiscord> <Varriount> Can anyone think of a legitimate reason for Clang to use Visual C++'s (`cl.exe`'s) linker, rather than its own?
[11:30:37] <FromDiscord> <Araq> I cannot
[11:59:46] <FromDiscord> <Kermithos> can a boolean be NULL in nim?
[12:04:49] <FromDiscord> <Elegantbeef> No only reference types can be nil
[12:05:10] <FromDiscord> <Elegantbeef> if you want a trinary value look at `options`
[12:06:52] <FromDiscord> <Kermithos> okay, thanks
[12:06:58] <FromDiscord> <Elegantbeef> Unless you want a reference bool of course, though that's unlikely
[12:15:05] <FromDiscord> <Varriount> @Araq Ok. Currently, LLVM on Windows, when using the Windows SDK, will using `link.exe` (which is the linker for `cl.exe`) rather than `lld.exe`. This "works", except for the fact that it's completely unintuitive - If you pass certain options that depend on `lld.exe` capabilities (like link-time optimization) then Clang spits out a "cannot read object" error (from `link.exe`).
[12:22:26] <FromDiscord> <haxscramper> @treeform are there any plans to add input validation to jsony? At least something like unexpected fields?
[12:48:35] *** Joins: max22- (~maxime@2a01cb0883359800e8e5b3ef40d436ca.ipv6.abo.wanadoo.fr)
[12:56:09] <FromDiscord> <planetis> good stuff https://github.com/rigtorp/MPMCQueue
[12:56:11] <fn> <12R2D299> 4GitHub: 7"A bounded multi-producer multi-consumer concurrent queue written in C++11"
[12:57:51] <FromDiscord> <planetis> his stuff are all gold
[12:58:18] <FromDiscord> <planetis> I just realised its the same guy who posted about fuzzing floating point and spinlocks
[12:58:27] <FromDiscord> <planetis> mind blown
[13:14:47] *** Quits: max22- (~maxime@2a01cb0883359800e8e5b3ef40d436ca.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[13:36:59] *** Joins: max22- (~maxime@2a01cb0883359800dd292fb855b9b78b.ipv6.abo.wanadoo.fr)
[14:17:02] *** Joins: sschwarzer (~schwa@55d45176.access.ecotel.net)
[14:28:28] <FromDiscord> <carpal> does the nim's vm for macros walk the ast?
[14:28:32] <FromDiscord> <carpal> (edit) "walk" => "interpret"
[14:32:13] <sschwarzer> carpal: What do you mean by "interpreting" an AST?
[14:32:30] <FromDiscord> <carpal> macros are compiletime execute
[14:32:34] <FromDiscord> <carpal> (edit) "macros are compiletime execute ... " 03added "right?"
[14:32:56] <FromDiscord> <leorize> yes
[14:33:25] <sschwarzer> carpal: Yes, macros execute at compile time, and they can call functions as helpers.
[14:33:58] <sschwarzer> carpal: You can do most of the things in the VM that you can do in compiled Nim.
[14:34:24] <FromDiscord> <carpal> sent a code paste, see https://play.nim-lang.org/#ix=3rb7
[14:34:39] <FromDiscord> <carpal> this uses the macros' vm?
[14:34:44] <FromDiscord> <carpal> (edit) "this uses" => "does that use"
[14:34:45] <FromDiscord> <leorize> yes
[14:35:35] <FromDiscord> <leorize> Nim's VM can execute any chunk of Nim that's not using FFI
[14:36:11] <FromDiscord> <carpal> aka extern functions
[14:36:40] <FromDiscord> <Varriount> Araq: Regarding the reported string mutation slowdown, the original example is invoking undefined behavior, so I ran some tests with an alternative: https://github.com/nim-lang/Nim/issues/18339#issuecomment-868979061
[14:36:56] <FromDiscord> <carpal> ok so those pieces of code executed by the vm, does it execute the ast nodes?
[14:37:00] <FromDiscord> <Varriount> @Araq : See above
[14:37:27] <FromDiscord> <leorize> noâ†µ(@carpal)
[14:37:43] <FromDiscord> <leorize> well, sorta
[14:37:44] <FromDiscord> <carpal> so how does it work
[14:38:03] <FromDiscord> <leorize> the AST is compiled into VM opcodes
[14:38:17] <FromDiscord> <leorize> which the VM then runs
[14:38:41] <FromDiscord> <leorize> data in VM are the AST nodes
[14:38:52] <FromDiscord> <carpal> ah ok
[14:38:58] <FromDiscord> <carpal> why not directly executed?
[14:39:02] <FromDiscord> <carpal> (the ast nodes=
[14:39:04] <FromDiscord> <carpal> (edit) "nodes=" => "nodes)"
[14:39:38] <FromDiscord> <leorize> the types gotta be correct so there's a semantic pass for it
[14:40:10] <FromDiscord> <carpal> so macros are executed before semantic checks=
[14:40:11] <FromDiscord> <carpal> (edit) "checks=" => "checks?"
[14:40:15] <FromDiscord> <carpal> (edit) "so" => "then"
[14:40:58] <FromDiscord> <leorize> once they're correct then it's easier to generates opcode so you don't end up with data & executed code being the same thing
[14:41:23] <FromDiscord> <leorize> after semantic checks for the macro, that isâ†µ(@carpal)
[14:41:52] <FromDiscord> <haxscramper> In reply to @carpal "why not directly executed?": If you are talking about direct AST interpreters - those are usually slower compared to register-based VM
[14:42:07] <FromDiscord> <carpal> even stack-based
[14:42:27] <FromDiscord> <carpal> yes but there's no need to create something fast right?
[14:42:42] <FromDiscord> <haxscramper> slow macros ==  slow compilation times
[14:42:51] <FromDiscord> <haxscramper> there is a need to create fast compiler
[14:43:23] <FromDiscord> <carpal> ok thanks ðŸ’š
[15:02:42] <FromDiscord> <willyboar> come on, half hour left
[15:02:50] <FromDiscord> <willyboar> lets make some noise
[15:03:14] <FromDiscord> <hamidb80> i have some `nnkInfix` with `and` operator
[15:04:12] <FromDiscord> <hamidb80> magically the `and` turns from `nnkIndent` into `nnkOpenSymChoice` after couple of assingmnet
[15:04:35] <FromDiscord> <hamidb80> (edit) "`and` turns" => "`and`s turn" | "`nnkIndent`" => "`nnkIndent`s" | "`nnkOpenSymChoice`" => "`nnkOpenSymChoice`s" | "assingmnet" => "assingmnets"
[15:04:44] <FromDiscord> <leorize> it depends on what you were doing
[15:05:09] <FromDiscord> <hamidb80> what do you mean?
[15:05:15] <FromDiscord> <hamidb80> their just NimNode
[15:05:20] <FromDiscord> <hamidb80> (edit) "NimNode" => "NimNodes"
[15:06:04] <FromDiscord> <richard stallmen(crazy GNU guy)> <this is noise>
[15:06:04] <FromDiscord> <leorize> so you are wondering how your ident turned into OpenSymChoice?
[15:06:36] <FromDiscord> <leorize> usually the only way for that to happen within a single macro is via `bindSym`
[15:08:59] <FromDiscord> <willyboar> In reply to @richard stallmen(crazy GNU guy) "<this is noise>": i don't have this kind of noise in my mind but nevermind
[15:31:15] <FromDiscord> <dom96> @here NimConf starting now https://www.youtube.com/watch?v=D_G9h7DcIqM&list=PLxLdEZg8DRwRXNrY7yyGU0-g_GRSyRGKo&index=1
[15:31:29] <FromDiscord> <Rika> Wish I could watch
[15:31:47] <FromDiscord> <bloatoo> Server needs more wojak emojis
[15:32:07] <FromDiscord> <carpal> :zig:
[15:32:51] <FromDiscord> <acek7> whats the state of nim, havent checked in a while
[15:33:29] <FromDiscord> <willyboar> In reply to @acek7 "whats the state of": A lot of good things happens
[15:33:49] <FromDiscord> <willyboar> like IC and CPS
[15:33:52] <FromDiscord> <acek7> progress on GUI, Game Dev, other stuff
[15:33:58] <FromDiscord> <carpal> @madman wtf
[15:34:01] <FromDiscord> <carpal> sei italiano
[15:34:12] <FromDiscord> <Cypheriel> I just wish for good jetbrains support already
[15:34:17] <FromDiscord> <carpal> (edit) "wtf" => "are you italian"
[15:34:19] <FromDiscord> <Sabena Sema> it's maturing @acek7, many of the features that have historically been unstable are still unstable but experimental, but the core language is stabilizing, the compiler is becoming more robust, and so on
[15:34:55] <FromDiscord> <Sabena Sema> the jetbrains plugin is first party right? or at least by someone from jetbrains
[15:35:32] <FromDiscord> <leorize> it's made by a jetbrains dev, but not sure how official is it
[15:35:45] <FromDiscord> <madman> In reply to @carpal "<@!166641471573721089> are you italian": no why ðŸ˜‚
[15:36:04] <FromDiscord> <carpal> ah ok
[15:36:06] <FromDiscord> <carpal> for the name
[15:36:24] <FromDiscord> <carpal> In reply to @x19 "no why ðŸ˜‚": <https://www.youtube.com/watch?v=TvnTUOjgGyQ>
[15:36:25] <FromDiscord> <Sabena Sema> In reply to @leorize "it's made by a": I'm sure it's not quite as bas as with Visual Studio (not code) plugins, but being in the org can definitely make it way easier to develop plugins ðŸ˜„
[15:36:37] <FromDiscord> <Sabena Sema> (edit) "bas" => "bad"
[15:36:49] <FromDiscord> <Cypheriel> the Nim Jetbrains plugin was unusable for me
[15:37:00] <FromDiscord> <Cypheriel> no syntax highlighting and wouldn't let me press enter
[15:37:08] <FromDiscord> <Cypheriel> strange bug, but like... obviously that's a no from me
[15:37:31] <FromDiscord> <Sabena Sema> huh, sounds like the api might be similar to VS (not code)
[15:37:36] <FromDiscord> <Yardanico> it's better now, but still far from vscode nim plugin (which uses nimsuggest extensively)
[15:37:46] <FromDiscord> <Sabena Sema> it was very easy to create such bugs in VS language plugins
[15:38:18] <FromDiscord> <Yardanico> and the jetbrains plugin doesn't use nimsuggest (at least yet), the author wants it to be mainly based on the APIs of their own jetbrains IDEs
[15:38:58] <FromDiscord> <Sabena Sema> a LSP would be pretty nice, but I get that it's evolved around VScode and the languages code supports in house
[15:39:09] <FromDiscord> <Yardanico> nimlsp is there
[15:39:20] <FromDiscord> <Yardanico> and you can use it in jetbrains IDEs together with the nim plugin
[15:40:25] <FromDiscord> <Sabena Sema> is nimlsp a wrapper around nimsuggest? I haven't used it yet
[15:41:11] <FromDiscord> <leorize> yea
[15:49:44] <FromDiscord> <acek7> so whats the go to coding tool for nim
[15:50:14] <FromDiscord> <leorize> neovim and vscode have the most mature plugins afaik
[15:50:26] <FromDiscord> <leorize> (disclaimer\: I wrote the neovim plugin)
[15:51:45] <FromDiscord> <talaing> Can anyone help me with passing sequence to the thread proc? Possibly in DMs.
[15:52:15] <FromDiscord> <talaing> (edit) "Can anyone help me with passing sequence ... to" 03added "argument"
[15:52:50] <FromDiscord> <leorize> you can also just ask here \:)
[15:54:19] *** Joins: SebastianM (~seba@user/sebastianm)
[15:54:25] <FromDiscord> <acek7> any new books or other good tutorials for nim thats come out
[15:55:09] <FromDiscord> <Sabena Sema> dom96's book remains good
[15:56:01] <fn> <11ForumUpdaterBot99> New post on r/nim by XxDiCaprioxX: Nim Conf online, see https://reddit.com/r/nim/comments/o88yrx/nim_conf_online/
[15:56:41] <FromDiscord> <acek7> link the book? i bought one of the only ones available a while back
[15:57:29] <FromDiscord> <talaing> sent a code paste, see https://play.nim-lang.org/#ix=3rbl
[15:57:49] <FromDiscord> <willyboar> In reply to @acek7 "link the book? i": http://ssalewski.de/nimprogramming.html also this
[16:02:29] <FromDiscord> <leorize> @talaing\: if you want to share the mutable seq between multiple threads you can use `ref seq[Socket]`
[16:02:48] <FromDiscord> <talaing> Thank you, I'll definitely try it out in a moment ðŸ™‚
[16:02:48] <FromDiscord> <leorize> however that's not very... safe, so to speak
[16:03:04] <FromDiscord> <leorize> Nim's seq are not "synchronized"
[16:03:32] <FromDiscord> <leorize> for practical usage you will want to put the seq in an object with a lock
[16:05:07] <FromDiscord> <acek7> do those tutorials help with people who are new to programming as well
[16:06:06] <FromDiscord> <hotdog> @acek7 There is at least one tutorial for Nim aimed at new developers, I don't remember where tho
[16:06:37] <FromDiscord> <willyboar> https://narimiran.github.io/nim-basics/ i guess that
[16:06:59] <FromDiscord> <hotdog> In reply to @willyboar "http://ssalewski.de/nimprogramming.html also this": This one also looks good for beginners
[16:07:09] <FromDiscord> <willyboar> also that https://nim-by-example.github.io/getting_started/
[16:08:04] <FromDiscord> <planetis> if you have at least one concurrent writer, you need a read-write lock or RCUâ†µ(@talaing)
[16:10:01] <FromDiscord> <planetis> or just a Lock if youre fine with making everything sequential
[16:32:48] *** Joins: Guest8 (~Guest8@ip-86-49-119-22.net.upcbroadband.cz)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:44:03] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[16:45:05] *** Quits: sschwarzer (~schwa@55d45176.access.ecotel.net) (Quit: leaving)
[17:00:07] <FromDiscord> <dom96> @talaing any particular reason for using threads? Note that async is likely to be what you want
[17:00:15] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[17:00:23] <FromDiscord> <dom96> In reply to @leorize "<@450293018910654464>\: if you want": that will only work for arc/orc I think
[17:02:17] <FromDiscord> <dom96> but then even with arc/orc I think you can just use `seq`
[17:02:21] <FromDiscord> <dom96> not sure why you'd need the `ref`
[17:04:34] <FromDiscord> <leorize> you need it if you want something that's not one global
[17:09:50] <FromDiscord> <planetis> well dont use ref either make it a global or use smartptrs
[17:10:33] *** Joins: arkurious (~arkurious@user/arkurious)
[17:16:57] <fn> <6Prestige99> @dom96 using async for my relay bot worked well btw, thanks. I do think I still need to restructure it, though..
[17:18:09] <FromDiscord> <dom96> Awesome, glad it's working ðŸ™‚
[17:52:03] <fn> <11ForumUpdaterBot99> New Nimble package! awsSTS - AWS Security Token Service API in Nim, see https://github.com/ThomasTJdev/nim_awsSTS
[17:52:04] <fn> <12R2D299> 4GitHub: 7"AWS Security Token Service API in Nim"
[17:59:02] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3rbK
[17:59:09] <FromDiscord> <impbox [ftsf]> False positive virus maybe
[18:00:10] <FromDiscord> <impbox [ftsf]> also detected when downloading zip via chrome on windows https://media.discordapp.net/attachments/371759389889003532/858338347289411604/unknown.png
[18:00:22] <FromDiscord> <hotdog> The recent AV false hits for Nim really suck
[18:00:54] <FromDiscord> <hotdog> I'm guessing it's due to that malware that was apparently written in Nim
[18:01:02] <FromDiscord> <impbox [ftsf]> (edit) "https://play.nim-lang.org/#ix=3rbK" => "https://play.nim-lang.org/#ix=3rbL"
[18:06:05] <fn> <11ForumUpdaterBot99> New Nimble package! mcd - Application to detect which commit generates malicious code detection by antivirus software., see https://gitlab.com/malicious-commit-detector/mcd
[18:06:05] <fn> <11ForumUpdaterBot99> New Nimble package! awsS3 - Amazon Simple Storage Service (AWS S3) basic API support., see https://github.com/ThomasTJdev/nim_awsS3
[18:06:06] <fn> <12R2D299> 4GitHub: 7"Amazon Simple Storage Service (AWS S3) basic API support"
[18:07:58] *** Quits: max22- (~maxime@2a01cb0883359800dd292fb855b9b78b.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[18:29:08] <FromDiscord> <planetis> here is an idea, write a post about it (Nim is falsely flagged by AV), make it sound dramatic and post it on HN
[18:35:30] <FromDiscord> <Rika> Thatâ€™s legitimately a good idea
[19:00:10] *** Joins: sschwarzer (~schwa@55d45176.access.ecotel.net)
[19:13:17] *** Joins: max22- (~maxime@2a01cb08833598003d6258fcd75234a5.ipv6.abo.wanadoo.fr)
[19:14:15] <FromDiscord> <deech> Is there any way for a `distinct` type to "borrow" the inheritance chain of the type it's distinct from?  eg. here I'd like to have `OODistinct is O` be `true` without having to do `OODistinct.distinctBase is O`. https://play.nim-lang.org/#ix=3rbU
[19:15:05] *** Quits: max22- (~maxime@2a01cb08833598003d6258fcd75234a5.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:17:05] <FromDiscord> <planetis> without? like how?
[19:17:23] <FromDiscord> <planetis> just remove distinct
[19:18:02] <FromDiscord> <deech> I want the distinct type to have it's own set of orc/arc hooks.
[19:18:59] <FromDiscord> <deech> In the same way `distinct` types can borrow operations seems like we should be able to borrow inheritance semantics as well.
[19:20:22] <FromDiscord> <leorize> might be a bug, please open an issue
[19:21:10] *** Joins: max22- (~maxime@2a01cb0883359800d562bda03e318f28.ipv6.abo.wanadoo.fr)
[19:28:53] <FromDiscord> <treeform> In reply to @haxscramper "<@!107140179025735680> are there any": Right now I ignored unexpected fields, that was one of the features I wanted. I could add a check, that has been asked before.
[19:34:03] *** Quits: max22- (~maxime@2a01cb0883359800d562bda03e318f28.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:39:51] <FromDiscord> <sclee15 (Sung-Chul Lee)> NimConf! I love it.
[19:40:27] <sschwarzer> I haven't watched all talks, but I liked the ones I watched! :-)
[19:41:07] <sschwarzer> I haven't worked with Nim for a while, but from time to time I check what's going on. :)
[19:41:58] <sschwarzer> I had thought people would talk more about the conference here while it's going on.
[19:42:13] <sschwarzer> (here on #nim, I mean)
[19:43:29] <FromDiscord> <zetashift> most of it is in the yt chat
[19:43:46] <FromDiscord> <zetashift> I missed the first few talks sadly, I'm catching up on them now
[19:43:49] <federico3> yes, that's a pity
[19:44:24] <sschwarzer> zetashift: I saw some chat over there. At the time of the last conference, you needed a YT channel (not just an account) to chat. I don't know what the current state is.
[19:44:46] <sschwarzer> federico: And that. I log into Google as little as possible.
[19:45:36] <federico3> sschwarzer: +1, FLOSS projects should use open platforms. 
[19:45:50] <sschwarzer> federico: This!
[19:46:57] <sschwarzer> There's something similar with Racket. Most of the day-to-day questions and answers happen on a Slack instance.
[19:48:41] <federico3> same problem with discord :(
[19:50:40] *** Joins: vicfred (~vicfred@user/vicfred)
[19:52:19] <FromDiscord> <Rika> its not much of an issue in this case since its bridged though innit
[19:53:05] <sschwarzer> Rika: yes, that's at least something.
[19:56:39] <sschwarzer> Rika: It's ok for the group chat, but kind of a hassle when you want to chat privately with someone. In this case, you have to use the service where the other user is logged in. But I see that if we didn't have the bridging, we wouldn't see people from other services at all. :-D So I'm glad we have the bridges.
[19:57:23] <sschwarzer> Or we would see other people, if they were forced to use the same service. ;-) But I think it's good to have choices.
[20:03:11] <FromDiscord> <richard stallmen(crazy GNU guy)> 2 7more minutes
[20:03:15] <FromDiscord> <richard stallmen(crazy GNU guy)> aaaa
[20:03:19] <FromDiscord> <richard stallmen(crazy GNU guy)> (edit) "2 7more" => "27more"
[20:11:19] <FromDiscord> <jtarchie (JT Archie)> sent a long message, see http://ix.io/3rcl
[20:12:34] <FromDiscord> <Rika> tables are not js objects so
[20:12:34] <FromDiscord> <leorize> are you working with a js object?
[20:12:52] <FromDiscord> <leorize> `import jsffi; js{"headers": {"content-type": "application/json"}}`
[20:20:13] *** Quits: Guest8 (~Guest8@ip-86-49-119-22.net.upcbroadband.cz) (Ping timeout: 246 seconds)
[20:21:39] <FromDiscord> <jtarchie (JT Archie)> It appears this represents it correctly. `js{"headers": js{"content-type": cstring"application/json"}}`
[20:22:17] <FromDiscord> <jtarchie (JT Archie)> Without the nested types (`js` and `cstring`) they get represented as nimlang strings and `Field, Value` array pairs.
[20:22:54] <FromDiscord> <jtarchie (JT Archie)> That seems like a lot ðŸ˜• It works... but....
[20:24:26] *** Joins: max22- (~maxime@2a01cb0883359800db43d28201f0fd37.ipv6.abo.wanadoo.fr)
[20:25:51] <FromDiscord> <Rika> macro time xd
[20:27:20] <FromDiscord> <jtarchie (JT Archie)> sent a long message, see http://ix.io/3rco
[20:32:26] <fn> <11ForumUpdaterBot99> New thread by Fredj: Using streams in Nim?, see https://forum.nim-lang.org/t/8156
[20:46:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:56:32] *** Joins: deshordash (~textual@li2214-92.members.linode.com)
[21:08:04] <FromDiscord> <zetashift> Okay so nicoru looks very cool
[21:09:27] *** Joins: bobby-code (~bobby-cod@host109-154-57-112.range109-154.btcentralplus.com)
[21:09:29] *** Quits: bobby-code (~bobby-cod@host109-154-57-112.range109-154.btcentralplus.com) (Client Quit)
[21:18:17] *** Joins: leehbi109 (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com)
[21:20:31] <fn> <11ForumUpdaterBot99> New thread by Schneiderfelipe: Trouble comparing proc types, see https://forum.nim-lang.org/t/8157
[21:22:32] *** leehbi109 is now known as leehbi-109
[21:22:52] *** leehbi-109 is now known as leehbi
[21:23:29] *** Quits: leehbi (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[21:23:42] *** Joins: leehbi109 (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com)
[21:23:49] *** leehbi109 is now known as leehbi
[21:25:51] *** Quits: leehbi (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[21:26:43] *** Joins: leehbi109 (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com)
[21:26:49] *** leehbi109 is now known as leehbi
[21:27:27] *** Quits: leehbi (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com) (Client Quit)
[21:27:42] *** Joins: leehbi109 (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com)
[21:28:42] *** Quits: leehbi109 (~leehbi109@host109-154-57-112.range109-154.btcentralplus.com) (Client Quit)
[21:29:08] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[21:36:51] <FromDiscord> <Ricky Spanish> is there a way to sort a count table from most common occurences to least?
[21:38:22] <FromDiscord> <Ricky Spanish> nvm found it
[21:39:01] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[21:39:34] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[21:40:47] <FromDiscord> <Ricky Spanish> some pretty sweet features in nim out of the box im used to having to write myself in other languages
[21:41:02] <FromDiscord> <hamidb80> Min - implementing a programming language with Nim (NimConf 2021)
[21:41:04] <FromDiscord> <hamidb80> LOL
[21:42:13] <FromDiscord> <hamidb80> wow
[21:42:40] <FromDiscord> <hamidb80> i can spend this night watching nim conf 2021
[21:43:28] <sschwarzer> hamidb: do! :-)
[21:44:34] <sschwarzer> hamidb: There's at least one other programming language developed with Nim: https://github.com/arturo-lang/arturo
[21:44:37] <fn> <12R2D299> 4GitHub: 7"Simple, expressive & portable programming language for efficient scripting"
[21:44:47] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Quit: Leaving)
[21:45:03] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[22:05:41] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[22:12:04] <FromDiscord> <hamidb80> In reply to @sschwarzer "hamidb: There's at least": yeah, i've seen that
[22:33:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:33:57] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:43:28] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Changing host)
[22:43:28] *** Joins: xet7 (~xet7@user/xet7)
[22:48:29] *** Joins: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com)
[22:51:57] *** xet7 is now known as xet7b
[22:52:35] *** xet7b is now known as xet7c
[22:53:11] *** xet7c is now known as xet7
[22:54:12] *** Joins: SebastianM (~seba@user/sebastianm)
[22:54:18] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[22:55:14] *** Quits: leehbi (~leehbi@host109-154-57-112.range109-154.btcentralplus.com) (Remote host closed the connection)
[23:35:35] *** Quits: deshordash (~textual@li2214-92.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:44:02] <FromDiscord> <whorf> After installing nim through `choosenim` instead of through Ubuntu, all nim linting in VSCode has broken. I've tried uninstalling and reinstalling the official extension but can't figure out what's wrong. Anyone else had this problem or know where I can get help for it?
[23:44:41] <FromDiscord> <Rika> nimsuggest not in path
[23:44:43] <FromDiscord> <Rika> most likely
[23:45:06] <FromDiscord> <Rika> did you see the message regarding your path variable when you installed via choosenim?
[23:47:13] <FromDiscord> <whorf> everything is in path I think: nim, nimsuggest, nimpretty, nimgrep
[23:47:28] <FromDiscord> <whorf> I tried playing around with nimsuggest to see why VSCode wasn't talking with it
[23:48:54] <FromDiscord> <whorf> (edit) "everything is in path I think: nim, ... nimsuggest," 03added "nimble,"
[23:49:18] <FromDiscord> <Rika> restart vsc
[23:56:30] <FromDiscord> <whorf> after 15 restarts and doing the same things over and over it suddenly works
[23:56:33] <FromDiscord> <whorf> okay
