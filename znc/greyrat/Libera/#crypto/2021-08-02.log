[00:01:25] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[00:10:01] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[00:11:14] *** Joins: boosterrooster (~boosterro@dynamic-077-003-025-071.77.3.pool.telefonica.de)
[00:12:08] *** Joins: caveman_ (~caveman@gateway/tor-sasl/caveman)
[00:15:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Killed (NickServ (GHOST command used by caveman_)))
[00:15:28] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[00:15:49] *** caveman_ is now known as cvmn
[00:15:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:22:35] *** Quits: dusk_ (~quassel@2a01:4f8:231:3ac7:2702::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:23:03] *** Joins: dusk (~quassel@2a01:4f8:231:3ac7:2702::1)
[00:45:04] *** Quits: boosterrooster (~boosterro@dynamic-077-003-025-071.77.3.pool.telefonica.de) (Remote host closed the connection)
[01:05:54] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[01:18:12] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[01:30:59] *** PJBoy is now known as Guest96
[01:31:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:31:56] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 244 seconds)
[01:34:42] *** Quits: Guest96 (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[01:37:14] *** Quits: SoundOfSilence (~jab@p200300de1732b92db8b39eb86f9c9fe9.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[01:37:39] *** Joins: SoundOfSilence (~jab@p200300de1732b92d1972f24b78ef080e.dip0.t-ipconnect.de)
[01:40:19] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:45:15] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[02:02:04] *** Joins: instantp10neer_ (~instantp1@user/instantp10neer)
[02:02:23] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Read error: Connection reset by peer)
[02:11:06] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 255 seconds)
[02:18:45] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[02:23:17] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[02:35:31] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[02:41:24] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:47:26] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[02:47:38] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Remote host closed the connection)
[02:48:00] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[02:48:58] *** Quits: Narrat (~omnius@p200300df5f45d8d906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:53:45] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Remote host closed the connection)
[02:54:05] *** Joins: Klotz (~Klotzoman@gateway/tor-sasl/klotz)
[02:55:19] *** Joins: Flux (~Fluxx@user/fluxx)
[02:55:42] *** Quits: SoundOfSilence (~jab@p200300de1732b92d1972f24b78ef080e.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[03:00:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[03:03:05] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[04:07:19] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[04:11:22] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:11:27] *** Joins: aqua (~aqua@user/aqua)
[04:14:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:14:57] *** Wulf4 is now known as Wulf
[04:16:55] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5893:5530:e8e9:98f1) (Quit: WeeChat 3.2)
[04:17:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: switching pcs..  bbl in 15 min.  sry)
[04:20:54] <onelegend> what does control flow integrity do?
[04:21:44] *** Joins: twinsignal (~twinsigna@68.235.43.20)
[04:24:31] *** Quits: twinsignal (~twinsigna@68.235.43.20) (Client Quit)
[04:31:40] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[04:33:53] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[04:34:43] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[04:59:51] *** Joins: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[05:06:14] *** aqua is now known as kish`
[05:06:58] <int-e> it provides rails for the instruction pointer
[06:18:45] *** Joins: gggp_ (~gggp@123.113.184.133)
[06:20:08] *** Quits: gggp_ (~gggp@123.113.184.133) (Read error: Connection reset by peer)
[06:20:32] *** Joins: gggp_ (~gggp@123.113.184.133)
[07:01:40] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[07:02:05] *** Joins: kish` (~aqua@user/aqua)
[07:31:45] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a953:dec7:8375:3a9f)
[07:36:13] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:00:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:14:02] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[08:14:28] *** Joins: thunder (~thunder@user/thunder)
[08:14:42] *** Joins: moose` (~moose@user/moose)
[08:18:46] *** Quits: moose (~moose@user/moose) (Ping timeout: 272 seconds)
[08:31:24] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[08:32:02] *** Joins: kish` (~aqua@user/aqua)
[08:33:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[08:34:02] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:35:22] *** Joins: BOKALDO (~BOKALDO@46.109.203.213)
[09:06:41] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit1!thekingofb@thunix.net)))
[09:06:58] *** Joins: tkob (tkob@user/thekingofbandit)
[09:11:34] *** Joins: reumeth (~reumeth@user/reumeth)
[09:15:16] *** Joins: moose (~moose@user/moose)
[09:17:40] *** Quits: moose` (~moose@user/moose) (Ping timeout: 272 seconds)
[09:23:22] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[09:24:06] *** Joins: moose (~moose@user/moose)
[09:33:10] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[09:33:36] *** Joins: moose (~moose@user/moose)
[09:37:59] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[09:38:29] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:42:55] *** Joins: moose` (~moose@user/moose)
[09:46:10] *** Quits: moose (~moose@user/moose) (Ping timeout: 272 seconds)
[09:51:13] *** Joins: moose (~moose@user/moose)
[09:51:37] *** Quits: moose (~moose@user/moose) (Client Quit)
[09:54:24] *** Quits: moose` (~moose@user/moose) (Ping timeout: 272 seconds)
[09:56:12] *** Quits: ua_ (~ua@public-gprs219039.centertel.pl) (Excess Flood)
[09:57:37] *** Joins: ua_ (~ua@public-gprs219039.centertel.pl)
[10:07:07] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:10:52] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[10:40:59] *** Joins: fanhako (~fanhako@38.213.74.41-ip-dyn.orange.mg)
[10:43:11] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:46:03] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[10:48:58] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[10:51:02] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[10:52:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:53:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[10:53:34] *** Lord_of_Life_ is now known as Lord_of_Life
[11:21:05] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:24:16] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:50:24] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:52:08] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[11:52:57] *** Joins: Warped (~Warped@user/warped)
[12:00:31] *** gggp_ is now known as gggp
[12:02:17] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:23:52] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:27:28] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:28:54] *** Quits: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Remote host closed the connection)
[12:36:06] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:26] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:49:37] *** Quits: gggp (~gggp@123.113.184.133) (Read error: Connection reset by peer)
[12:49:47] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[12:50:11] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:53:57] *** Joins: gggp (~gggp@123.113.179.243)
[13:10:26] *** Quits: gggp (~gggp@123.113.179.243) (Read error: Connection reset by peer)
[13:11:14] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[13:30:44] *** Joins: reumeth (~reumeth@user/reumeth)
[13:35:20] *** Joins: gggp (~gggp@123.113.179.243)
[13:36:31] *** Quits: gggp (~gggp@123.113.179.243) (Read error: Connection reset by peer)
[13:41:20] *** Joins: rustycl01k (~ircuser@gateway/tor-sasl/rustycl0ck)
[13:43:01] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 244 seconds)
[13:50:30] *** Joins: mei (~mei@user/mei)
[13:57:12] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:8488:6924:165f:f790)
[14:14:42] *** Quits: mei (~mei@user/mei) (Ping timeout: 272 seconds)
[14:18:19] *** Joins: jc_denton[m] (~raiichika@2001:470:69fc:105::ce06)
[14:22:11] *** Joins: gggp (~gggp@60.10.194.46)
[14:22:51] *** Joins: fakuve (~fakuve@192.210.243.250)
[14:27:53] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 258 seconds)
[14:28:29] *** Quits: rustycl01k (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[14:28:44] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[14:29:02] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:37:06] *** Joins: gggp_ (~gggp@123.113.185.191)
[14:40:20] *** Quits: gggp (~gggp@60.10.194.46) (Ping timeout: 265 seconds)
[14:42:13] *** Joins: dez (uid92154@user/dez)
[15:00:41] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[15:01:26] *** Joins: vernaz_ (~vernaz@148.63.127.167)
[15:02:57] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[15:04:26] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[15:04:48] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:05:18] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:8488:6924:165f:f790) (Ping timeout: 272 seconds)
[15:16:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:16:34] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 240 seconds)
[15:16:54] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:19:27] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[15:30:00] *** Quits: gggp_ (~gggp@123.113.185.191) (Read error: Connection reset by peer)
[15:30:04] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 272 seconds)
[15:32:10] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[15:32:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:33:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:41:01] *** Joins: gggp (~gggp@60.10.23.170)
[15:42:07] *** Joins: gggp_ (~gggp@123.113.179.243)
[15:42:44] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 272 seconds)
[15:44:20] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[15:45:42] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[15:57:03] *** Quits: BOKALDO (~BOKALDO@46.109.203.213) (Quit: Leaving)
[16:04:42] *** Quits: Bonstra (~Bonstra@val.bonstra.fr.eu.org) (Ping timeout: 252 seconds)
[16:08:27] *** Joins: Bonstra (~Bonstra@val.bonstra.fr.eu.org)
[16:10:38] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[16:12:55] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[16:13:20] *** Joins: fakuve (~fakuve@192.210.243.250)
[16:14:52] *** Quits: Flux (~Fluxx@user/fluxx) (Remote host closed the connection)
[16:19:08] *** Joins: gggp__ (~gggp@60.10.23.170)
[16:19:45] *** Joins: reumeth (~reumeth@user/reumeth)
[16:20:27] *** Quits: fakuve (~fakuve@192.210.243.250) (Quit: Connection closed)
[16:22:38] *** Quits: gggp_ (~gggp@123.113.179.243) (Ping timeout: 272 seconds)
[16:23:46] *** Joins: gggp (~gggp@123.113.188.14)
[16:26:10] *** Quits: gggp__ (~gggp@60.10.23.170) (Ping timeout: 256 seconds)
[16:28:25] *** Joins: fakuve (~fakuve@192.210.243.250)
[16:40:18] *** Quits: schubisu (~schubisu@dgplug/schubisu) (Ping timeout: 272 seconds)
[16:42:47] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[16:44:12] <Gurkenglas> If I "Use your Google Account to save and fill passwords?", does it become cryptographically possible for google to have my passwords on their servers?
[16:45:08] <Gurkenglas> Like, I expect that if they transmitted passwords without someone turning that on, someone would notice that with wireshark and blow the whistle. But does this feature put all the data on their servers that they'd need to read those passwords?
[16:45:52] <Gurkenglas> or do they only get encrypted data such that once they can crack that encryption my passwords are worthless anyway?
[16:46:07] *** Joins: gggp_ (~gggp@60.10.194.46)
[16:46:09] <ms7821> they literally show up at https://passwords.google.com/
[16:46:55] <piou> Gurkenglas: they are on their servers since they're available on all devices, and since Google is the one verifying that someone has legitimate access to them they can view them and show them to anyone they want
[16:47:27] <piou> Gurkenglas: if you use a Google service you better trust Google
[16:49:52] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[16:50:09] <Gurkenglas> ms7821, that could technically be done by decrypting on your device
[16:50:29] <ms7821> no it can't
[16:50:38] <Gurkenglas> how so?
[16:51:45] *** Joins: frost (~frost@59.71.241.179)
[16:52:15] <ms7821> because it shows up on other devices?
[16:52:51] <piou> Google could send the client encrypted passwords that are decrypted on the device with a user-supplied secret (password) that is never sent to google
[16:52:54] <piou> But they don't
[16:54:24] <Gurkenglas> Thanks. Could google have my passwords even before I enable such syncing, or did people use sysadmin tools to check and failed to find such transmissions?
[16:55:15] <wasamasa> lol
[16:55:27] <wasamasa> you do realize that when you sign into a google service, you send them passwords
[16:55:44] <Gurkenglas> sure, but only the passwords to google accounts
[16:55:47] <Gurkenglas> right?
[16:55:49] <piou> I'm sure people check from time to time, but I'm also sure google could have sneaked something past them. You don't even need to modify the application itself to get a keylogger, you can do that in JS.
[16:56:01] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.2)
[16:56:28] <wasamasa> and you do realize that to fill in passwords, they need to be stored in a reversible form
[16:56:32] <piou> Given all the google code that runs in your browser at any given time, even just considering JS code, if they want to capture your passwords they probably can
[16:56:44] <Gurkenglas> they only need to find one time when no one's looking, but a whistleblower would only need to catch one instance
[16:56:58] <ms7821> why would they bother
[16:57:15] <ms7821> they use dark patterns to push syncing on you, so if they have your password it's probably because you clicked through the first-run dialogue in chrome
[16:57:18] *** Joins: BOKALDO (~BOKALDO@46.109.203.213)
[16:57:24] <ms7821> dark UI*
[16:57:27] <Gurkenglas> why would a whistleblower bother? bc it sounds cool, i might try that myself given the time
[16:57:35] <ms7821> I meant why would google bother
[16:58:01] <Gurkenglas> since they use dark patterns, they apparently would like to have the passwords
[16:58:12] <piou> Gurkenglas: To the question is "could google already have my passwords" the answer is yes. But I don't really know what they'd do with it.
[16:58:12] <Gurkenglas> perhaps they have other techniques to get them anyway, which are marginally risky
[16:58:23] <ms7821> they want syncing, and passwords are part of that
[16:59:34] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[17:02:52] <Gurkenglas> hmm i suppose if google transmits those passwords even without syncing, someone could be recording all the wireshark traffic and all the ram/cpu states, and then 10 years later when we have better sysadmin tools we could find whether it was sending passwords
[17:03:19] <Gurkenglas> are there sysadmin tools today that record all such data in hopes of future magic analysis?
[17:05:30] <Gurkenglas> ah, that wouldn't be enough - perhaps google has simply "accidentally" put in a security vulnerability that allows arbitrary code execution, and then the magic analysis tool will find that someone anonymous exploited that vulnerability to get everyone's passwords
[17:05:57] <wasamasa> it's called memory-unsafe languages
[17:06:20] <wasamasa> no need to go all tinfoil hat over those
[17:06:50] <Gurkenglas> how's this crackery? seems like pretty basic crypto reasoning
[17:08:42] <wasamasa> no need to put intentional vulnerabilities anywhere when memory-unsafe languages are still around
[17:08:52] <piou> "Can the big company that writes most of the code effectively running the website see sensitive information" -> yes. There's no point speculating about subltely intruduced backdoor vulnerabilites really. The question isn't there.
[17:09:38] <piou> "Do I need to care about it" and "What can I do to avoid it" are more relevant
[17:09:51] <wasamasa> yeah
[17:09:54] <wasamasa> threat modeling
[17:10:06] <piou> There's no security without a threat model, only paranoïa
[17:10:49] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[17:13:48] <Gurkenglas> paranoia is fun! how does "-> yes" follow?
[17:15:02] <piou> Gurkenglas: everything you mentionned as well as much simpler explainations
[17:15:43] <Gurkenglas> like, assume that google code does precisely what google meant it to, so they can't "accidentally" put in a vulnerability. How do you get from "Google code runs on your machine" to "Google has your passwords" without "a sysadmin can figure this out"?
[17:16:21] *** Quits: gggp_ (~gggp@60.10.194.46) (Read error: Connection reset by peer)
[17:16:24] <piou> Gurkenglas: what's the point of this speculation based on an impossible hypothetical situation?
[17:16:36] <Gurkenglas> fun
[17:16:49] <wasamasa> from contradiction, everything follows
[17:16:49] <piou> Ok, I'm out then
[17:17:50] <Gurkenglas> piou, in this case I have another reason: You claimed that subtly introduced backwards are irrelevant. Therefore I asked you how, by ruling out subtly introduced backdoors.
[17:18:32] *** Joins: gggp (~gggp@60.10.23.170)
[17:18:56] <Gurkenglas> -backwards+backdoors
[17:19:50] <Gurkenglas> That's an allowed move in the conversation, right? One says "forall x, y" and the other says "for x=a, how y?"
[17:20:00] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[17:21:59] <piou> Gurkenglas: I'm saying that there are so many different ways to do things that looking for the specific way is irrelevant. Assume they do then move on from there. This is not the right question and it's frankly not that fun. If you want assume that one of the encrypted blobs within chrome sends encrypted data to a google server during updates. Who cares. That's neither the interesting part (to me
[17:22:05] <piou> at least) nor the useful one.
[17:23:25] *** Quits: vernaz_ (~vernaz@148.63.127.167) (Remote host closed the connection)
[17:24:01] *** Joins: vernaz (~vernaz@148.63.127.167)
[17:24:59] <Gurkenglas> Is it not interesting because a sysadmin noticing this and blowing the whistle wouldnt be interesting?
[17:25:30] <wasamasa> occam's razor applies
[17:26:10] <wasamasa> something commonly seen when dissecting wild conspiracy theories is that they prefer the more convoluted and unlikely theory over the easier one that explains the phenomenon equally well
[17:27:38] <piou> It's about as interesting as asking whether alien teapots are shaped like english teapots: you're bound to make so many baseless suppositions that it loses all ties with reality. Besides google is able to put a physical microphone in a thermostat and say it was a mistake so there's really no bound to what they're prepared to do.
[17:27:39] *** Joins: gggp_ (~gggp@123.113.188.14)
[17:28:11] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 250 seconds)
[17:28:43] <piou> And it's ultimately mostly useless: if you're worried about google getting your stuff then you start by not using google product, you don't spend hours agonizing about whether Chrome can send unknown data
[17:30:44] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[17:35:20] <sonOfRa> Ooooh, there's popcorn available on the CFRG mailing list again!
[17:35:21] *** Quits: gggp_ (~gggp@123.113.188.14) (Read error: Connection reset by peer)
[17:35:36] <sonOfRa> I quote: "Long-term, we do not know anyone who survived 2 years or more after taking these vaccines. Please try to refute that statement."
[17:35:44] *** Joins: gggp_ (~gggp@60.10.23.170)
[17:36:59] <wasamasa> lol
[17:37:26] <wasamasa> just like the marketing department looking for someone with 30 years of experience with nodejs programming
[17:40:23] <fxrh> (the mail: https://mailarchive.ietf.org/arch/msg/cfrg/qjCipfm0pcx_l9LvUwgXAO7oHBY/ )
[17:41:23] <yawkat> oh it's this person https://lkml.org/lkml/2021/6/17/101
[17:41:43] <piou> The dude's blog is full of either antivax stuff or discussions about Hitler's fascism, nothing to see really
[17:41:58] <sonOfRa> "Dr. Peter McCullough and Reiner Fuellmich are serious people. They are not a joke" :D :D
[17:43:55] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:49:07] <yawkat> he has twitter too https://twitter.com/denisbider
[17:49:45] <ms7821> lol, his first tweet
[17:50:17] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[17:55:44] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:55:54] *** Joins: vernaz (~vernaz@148.63.127.167)
[17:56:47] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:01:17] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[18:01:33] *** Joins: vernaz (~vernaz@148.63.127.167)
[18:06:28] *** Joins: frost (~frost@59.71.241.179)
[18:08:54] *** Quits: fanhako (~fanhako@38.213.74.41-ip-dyn.orange.mg) (Quit: Leaving)
[18:10:23] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[18:12:06] *** Joins: citizen_stig (~citizen_s@2001:982:9f64:1:1d45:717d:c4b3:32d9)
[18:24:59] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a953:dec7:8375:3a9f) (Quit: WeeChat 3.2)
[18:50:59] *** gggp_ is now known as gggp
[19:00:12] <onelegend> wats poppin'
[19:01:57] <wasamasa> pimples
[19:12:25] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[19:13:44] <onelegend> ugh
[19:15:54] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[19:16:04] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:22:58] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[19:24:32] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 244 seconds)
[19:34:20] *** Joins: SoundOfSilence (~jab@p200300de1732b936f3e55e1dc4e1288d.dip0.t-ipconnect.de)
[19:52:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:01:09] *** Joins: gggp_ (~gggp@111.193.85.86)
[20:02:46] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[20:04:04] *** Quits: gggp (~gggp@60.10.23.170) (Ping timeout: 258 seconds)
[20:04:09] *** Joins: gggp__ (~gggp@123.113.188.14)
[20:07:33] *** Quits: gggp_ (~gggp@111.193.85.86) (Ping timeout: 265 seconds)
[20:14:42] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-55f9-cce3-ab9e-b140.res6.spectrum.com)
[20:16:41] *** Joins: riv (~river@tilde.team/user/river)
[20:17:59] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[20:17:59] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-e09d-5ac8-afbf-2237.res6.spectrum.com)
[20:18:34] *** Joins: mei (~mei@user/mei)
[20:19:39] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:20:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-55f9-cce3-ab9e-b140.res6.spectrum.com) (Ping timeout: 272 seconds)
[20:23:55] *** Quits: mei (~mei@user/mei) (Quit: mei)
[20:28:29] *** Quits: instantp10neer_ (~instantp1@user/instantp10neer) (Read error: Connection reset by peer)
[20:29:08] *** Joins: instantp10neer_ (~instantp1@user/instantp10neer)
[20:54:05] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:12:06] *** jarthur_ is now known as jarthur
[21:15:52] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[21:16:42] *** Joins: reumeth (~reumeth@user/reumeth)
[21:24:03] *** Joins: mei (~mei@user/mei)
[21:38:30] *** gggp__ is now known as gggp
[21:39:08] *** Quits: ua_ (~ua@public-gprs219039.centertel.pl) (Ping timeout: 258 seconds)
[22:06:07] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:06:35] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[22:07:06] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:08:26] *** Quits: Colti (Miramar-FL@user/host-pond) (Excess Flood)
[22:08:41] *** Joins: Colti (Miramar-FL@user/host-pond)
[22:09:23] *** Joins: aleck1 (~aleck@user/aleck)
[22:13:30] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 272 seconds)
[22:15:15] *** Joins: zro (~zro@user/zro)
[22:34:27] <kish`> how do you guys generate passphrases
[22:39:36] <onelegend> KeePassXC has a tool to generate passphrases, and I use that to generate my master password for the vault
[22:39:44] <yawkat> i dm atoponce on twitter
[22:40:25] <yawkat> he then uses his pw generator https://ae7.st/g/
[22:44:00] *** Quits: srikavin (~srikavin@user/srikavin) (Quit: Ping timeout (120 seconds))
[22:44:19] *** Joins: srikavin (~srikavin@user/srikavin)
[22:49:18] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[22:58:28] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[22:58:56] *** Joins: Narrat (~omnius@p200300df5f45d8ce06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:03:57] <maroon> riastradh's diceware list, where each randomly chosen word from a list is worth 12.something bits of entropy, so 10 random words is 128-bit pass https://mumble.net/~campbell/js/pwgen/
[23:16:32] *** Joins: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net)
[23:16:40] <jbis> Hello
[23:17:16] <jbis> Anyone familiar with iMessage? iMessage is supposed to be e2ee. But if you send a url, a preview is generated, but that preview is fetched by Apple, not by the user. So that means Apple is reading (or being sent) every URL sent over iMessage, right?
[23:19:12] <jbis> nvm seems this has been discussed before
[23:25:45] *** Quits: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net) (Read error: Connection reset by peer)
[23:27:48] *** Joins: CryptoClub (~fafs@static-182-3-7-89.ipcom.comunitel.net)
[23:39:48] *** Joins: riv (~river@tilde.team/user/river)
[23:41:14] *** Joins: ua_ (~ua@public-gprs228323.centertel.pl)
[23:47:41] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Ping timeout: 252 seconds)
[23:50:22] *** Quits: jbis (~jbis@pool-71-190-180-229.nycmny.fios.verizon.net) (Quit: Leaving...)
[23:52:43] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[23:56:29] *** Quits: BOKALDO (~BOKALDO@46.109.203.213) (Quit: Leaving)
