[00:00:02] *** Joins: minion (~minion@common-lisp.net)
[00:14:00] <gilberth> This is broken IMHO, but I am too lazy to read ISO C99 now. Won't change anything.
[00:14:52] <selwyn> will you try to get a knuth check
[00:28:50] <gilberth> It seems to be hard to reach Knuth. He writes on his website, that you should use snail mail to his university address as he mentioned that he doesn't read email and all mail (snail or not) is filtered by his secretary. Yet he is retired, I wonder if that would work. His home page seems stale.
[00:30:47] <gilberth> And he doesn't write checks anymore, as the (account?) number printed on it would be suffice to withdraw all the funds on that account. sigh
[00:31:10] <gilberth> But: Yes, I should probably try.
[00:32:27] <gilberth> However this is a minor bug, as it will only corrupt the output in the .log file with glue ratios printed as just "?.?", when they perhaps shouldn't.
[00:42:00] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 276 seconds)
[00:57:19] *** Joins: notzmv (~zmv@user/notzmv)
[01:07:00] <gilberth> p2c as an AST for the C code, which is nice. Each expression node carries its type. Yet it messed up with files, It would construct an file.f expression, with 'file' being the struct used for Pascal and '.f' being the FILE* and this sets the type wrong. Bugs! More bugs!
[01:08:41] *** Quits: mariari (~mariari@user/mariari) (Ping timeout: 258 seconds)
[01:08:48] <SAL9000> gilberth: according to Knuth's page he still cuts checks from an imaginary bank, which can be converted to real money upon request given that he apparently noticed lots of people "caching, rather than cashing" his checks :-)
[01:12:27] <gilberth> SAL9000: Yes, I could frame that check as most others did. $ 2^15 / 100 won't buy me much :)
[01:18:16] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:20:06] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:20:12] *** Joins: mariari (~mariari@user/mariari)
[01:21:48] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[01:22:42] <SAL9000> :)
[01:23:36] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 276 seconds)
[01:43:23] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 255 seconds)
[01:50:14] *** Joins: elflng (~elflng@5.28.137.182)
[02:18:42] *** Joins: christophergray (~christoph@190.148.52.250)
[02:49:47] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:06:13] <hayley> Huh, the ocaml GC hacker replied to me.
[04:06:50] <hayley> So they do visit objects more than once apparently; though I thought they would look at some mark bitmap and decide they don't need to visit again.
[04:17:33] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[04:23:06] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[04:39:58] *** Quits: random-nick (~random-ni@87.116.182.181) (Ping timeout: 265 seconds)
[05:05:58] *** Joins: zacts (~zacts@user/zacts)
[05:08:27] *** Joins: zacts17 (~zacts@user/zacts)
[05:12:01] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[05:23:25] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[05:33:03] *** zacts17 is now known as zacts
[05:40:58] *** Joins: notzmv (~zmv@user/notzmv)
[06:12:12] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[06:12:37] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[06:17:30] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 240 seconds)
[06:19:06] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[06:25:42] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[06:25:46] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[06:28:23] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[06:29:09] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[06:29:27] *** Joins: derelict (~derelict@user/derelict)
[06:33:30] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 240 seconds)
[06:34:01] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[06:45:02] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:45:09] <dave0> maw
[06:45:47] *** Joins: derelict_ (~derelict@user/derelict)
[06:47:02] <hayley> Hey dave0
[06:47:20] <dave0> maw hayley 
[06:49:15] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 276 seconds)
[06:51:00] <hayley> https://www.youtube.com/watch?v=1YXu7vRJ5tA
[06:51:00] -ixelp- Pretending To See The Future (2003 Digital Remaster) - YouTube
[06:52:47] <dave0> hayley: you were up late last night
[06:53:08] <hayley> dave0: Indeed.
[06:56:22] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 258 seconds)
[06:57:22] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[06:59:21] <hayley> So the weird assignment was made by bad caching logic for DUPLICATE (I forgot the name lol) - we memoize iff there are no tags in the RE, and I incorrectly computed that any GREP expression didn't have tags.
[07:02:52] * hayley uploaded an image: (137KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/VjkHMLarZZbjJNEOkHsOoojE/ab.png >
[07:05:28] * hayley uploaded an image: (141KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/YvHSOysAnTtyfgBdJcxBOhgP/ab.png >
[07:05:29] <hayley> I think I won with the second one.
[07:05:36] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[07:05:57] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[07:08:19] *** Quits: christophergray (~christoph@190.148.52.250) (Quit: WeeChat 3.2)
[07:13:57] *** Joins: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk)
[07:14:03] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[07:15:04] <hayley> The current compiler appears to compile correctly, and the output for my test case matches the interpreter.
[07:18:52] *** Quits: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 245 seconds)
[07:18:56] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[07:21:18] <hayley> And it runs like 9x faster than CL-PPCRE:CREATE-SCANNER, which isn't awfully fast to be fair.
[07:24:26] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[07:27:06] *** Joins: derelict (~derelict@user/derelict)
[07:28:15] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:30:06] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 258 seconds)
[07:31:06] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:33:57] *** Joins: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk)
[07:34:15] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[07:36:29] <hayley> But my damn compiler now takes 30ms to compile ca(ab)* which is abysmal.
[07:36:40] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[07:37:35] <hayley> Then again, all but 600µs are SBCL and so it is mostly not my problem.
[07:43:02] *** Quits: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 245 seconds)
[07:44:42] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[07:47:26] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 255 seconds)
[07:48:07] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[07:48:17] *** Joins: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk)
[08:06:58] *** Quits: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 240 seconds)
[08:14:02] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[08:14:57] <hayley> gilberth: https://gist.github.com/no-defun-allowed/7e3e238c959e27d4919bb4272487d7ad#appendix-a-fun-bug-in-the-cello-benchmarks
[08:14:57] -ixelp- Don't Build Your Own Lisp · GitHub
[08:16:06] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[08:16:26] *** Joins: derelict_ (~derelict@user/derelict)
[08:19:23] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 255 seconds)
[08:30:11] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 255 seconds)
[08:31:41] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[08:42:12] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[08:47:22] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[08:55:42] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 256 seconds)
[08:56:29] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[09:07:25] *** Joins: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk)
[09:07:28] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 258 seconds)
[09:07:31] <hayley> https://www.youtube.com/watch?v=kz05CnUF49Q
[09:07:31] -ixelp- Gary Numan (London 1981) [06]. Complex - YouTube
[09:09:33] <hayley> Though I have problems with «a|aa»* not doing the even/odd thing, and I admit I find the trace unreadable.
[09:10:49] *** Quits: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk) (Client Quit)
[09:11:26] <hayley> Hm, seems I have problems with assignments being sequential and not parallel.
[09:14:25] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[09:15:09] <hayley> No, it shouldn't matter. The problem is rather that I have an assignment to an already-assigned tag which is bad.
[09:17:50] * hayley rather runs the original Kleene stuff through UNIQUE-TAGS, which seems to work.
[09:20:01] <hayley> .oO( Still, any optimization I have done and will do to tags pertain to being clever about not duplicating. Maybe I call it a linear-tag regular expression. )
[09:21:37] <hayley> Funny that before gilberth's evil RE technique, I had only 27 commits, now I have 67.
[09:25:21] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[09:25:46] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[09:30:21] <gilberth> heyley: Hey! My algorithm is not evil and works like a charm.
[09:30:32] *** Joins: nihaal (~nihaal@106.201.177.18)
[09:31:36] <gilberth> hayley: Ah! The famous i33 bug.
[09:32:44] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 255 seconds)
[09:32:47] <gilberth> You could have mentioned me, as IIRC I discovered that unused variable.
[09:33:43] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[09:34:03] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[09:35:20] <gilberth> Anyhow, why doesn't bash do a FRESH-LINE before showing the prompt?
[09:37:20] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:37:58] <dave0> re maw
[09:38:39] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 252 seconds)
[09:39:28] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[09:55:14] *** Quits: nihaal (~nihaal@106.201.177.18) (Ping timeout: 255 seconds)
[09:58:54] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[09:58:56] <hayley> gilberth: Well, yes, that and the poor volatile int and the memory leak caused by an early return.
[09:59:13] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:00:16] <hayley> I could have mentioned you for like half the article, to be fair.
[10:04:44] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[10:08:17] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:12:46] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 256 seconds)
[10:15:50] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:23:37] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[10:23:57] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:24:20] * gilberth has quick and dirty FRESH-LINE for bash now. As UNIX lacks this, he queries the terminal for its cursor position.
[10:25:02] <gilberth> This really is a readline issue. And is there a terminfo/termcap entry for 'query cursor position'?
[10:27:06] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Client Quit)
[10:27:09] <gilberth> It also could only be properly implemented there because before I send <ESC>[6n to query the cursor position, there could be real keystrokes still on the way to me. I can't unread them for readline to get them.
[10:30:50] <dave0> you get an escape sequence back, so you should be able to distinguish it from keystrokes
[10:35:43] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:40:32] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 265 seconds)
[10:42:01] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:42:04] <hayley> https://www.youtube.com/watch?v=oiduuZChCMM
[10:42:04] -ixelp- DOOM 2 Too Many Super Shotguns All Weapon Animations - YouTube
[10:44:17] *** Joins: domovod (~domovod@176.196.122.197)
[10:46:43] <dave0> gilberth: i'm slowly looking through this: https://man.netbsd.org/terminfo.5
[10:46:44] -ixelp- terminfo(5) - NetBSD Manual Pages
[10:49:00] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[10:49:24] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[10:56:15] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 276 seconds)
[10:56:43] <dave0> is terminfo considered a good design?
[10:57:36] <dave0> the capability database seems complicated
[10:58:16] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:02:14] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[11:02:32] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:03:25] * hayley wonders what to do about SBCL taking 27ms to compile a RE now.
[11:09:10] <hayley> 80% is SB-C::IR1-PHASES. I did optimize (speed 3) (space 0) (compilation-speed 0) but the latter two don't change much. Though if there isn't much to type infer I could remove (speed 3).
[11:11:11] <hayley> Nope, it does want (speed 3) :(
[11:17:25] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Quit: ZNC 1.7.5 - https://znc.in)
[11:17:43] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:23:19] *** Joins: selwyn (~selwyn@user/selwyn)
[11:25:40] * hayley thinks she found another case of the (LOOP FOR x = ... FINALLY (USE x)) problem.
[11:30:06] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[11:30:27] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:35:28] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[11:35:48] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:36:35] *** Joins: shka (~herr@109.231.62.239)
[11:37:21] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Ping timeout: 258 seconds)
[11:38:25] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[11:40:25] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[11:43:57] <gilberth> dave0: I could, but only in readline, not in bash.
[11:44:17] <hayley> https://www.youtube.com/watch?v=1uuorcrtmNY
[11:44:17] -ixelp- Ashes to Ashes (2017 Remaster) - YouTube
[11:44:41] <gilberth> I mean, I could do it all the way, but I can't pass input on the way to readline.
[11:49:25] * hayley wonders what takes SBCL so long to compile things nowadays.
[11:50:19] <hayley> It's not type inference as such; with (let* ((a x) (b a) (c b) ....) ...) it isn't much slower between 1 and 100 bogus variables. Probably harder when you throw in a nice FSM for control flow.
[11:51:56] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 256 seconds)
[11:52:40] <hayley> (Still I think this idea of linear variables is a good guide for deciding what we duplicate to be safe, and what we can avoid duplicating.)
[11:53:13] <hayley> (Perhaps eliminating variables with linearity also cuts down on the number of constraints. But I have to write a damn compiler first.)
[11:53:46] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[11:58:39] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 276 seconds)
[11:59:56] <gilberth> Joys of UNIX: http://clim.rocks/gilbert/bash-5.1.diff.txt
[12:00:31] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:00:47] <gilberth> You could easily overrun this by hitting RET on auto-repeat, but it is suffice for now for me and should be pretty robust.
[12:00:58] * hayley is reading https://www.multicians.org/lcp.html
[12:04:42] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 245 seconds)
[12:08:21] <gilberth> hayley: You want to run MULTICS?
[12:08:25] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:09:51] <gilberth> And note again: Also here it would be nice to give back some input.
[12:10:07] <dave0> https://ban.ai/multics/
[12:10:08] -ixelp- BAN.AI Public Access Multics
[12:10:42] <gilberth> But then the whole tty interface of UNIX is primitive. And: Why isn't readline in the kernel? After all tty's have an editing mode already.
[12:11:44] <gilberth> libreadline made CLISP GPL. So much for the glory "G". Bruno was sorta bullied to change his license. I would just have ditched readline and be set.
[12:13:12] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 252 seconds)
[12:14:58] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:17:05] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[12:17:29] *** Joins: lad (~lad@user/lad)
[12:22:35] * gilberth installs his new bash and changes his login shell to it.
[12:23:02] <selwyn> a softwaree update? from gilberth?
[12:25:16] <dave0> gilberth: i don't have any evidence to back this up, but after the clisp/readline thing, the BSD's made libedit
[12:27:14] <dave0> oh it's not called that.. https://man.netbsd.org/editline.3
[12:27:15] -ixelp- editline(3) - NetBSD Manual Pages
[12:32:40] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 265 seconds)
[12:32:44] *** Joins: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk)
[12:39:30] *** Quits: jurov_ (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 240 seconds)
[12:40:55] <pjb> gilberth: not bullied, convinced.  He could probably have chosen GPL even without using readline…
[12:41:57] <pjb> gilberth: we can say it's a success story for GPL, but notice there's linedit and there's the option (-I) to use clisp without readline (eg, when you use it from emacs, where emacs is doing its own line editing).
[12:42:13] <pjb> there's even an explicit -disable-readline option…
[12:42:31] <pjb> So clearly, it could be argued that clisp is not a readline derivative.
[12:42:57] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:43:54] <pjb> gilberth: otherwise the idea behind unix is that it is simple. vs. multics which is a complex kernel.  So no, readline and all services should not be put in the kernel, but in userspace libraries.
[12:44:25] <pjb> gilberth: in unix, we put in the kernel only the (parts of the) services that cannot be implemented in userspace processes.
[12:44:39] <pjb> (linux is already big enough like that).
[12:46:12] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Read error: Connection reset by peer)
[12:46:32] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:46:51] <gilberth> pjb: And why is there line editing in the kernel then?
[12:48:53] <gilberth> pjb: CLISP was not always like that. And was linedit available in early 90s?
[12:49:36] <gilberth> Anyhow, a primitive line editor is written in a day.
[12:50:57] <hayley> This is so sad can we have ITS 2
[12:51:00] <gilberth> selwyn: I regulary install new software. It goes into /opt/. For instance I have whole host of different gcc versions.
[12:51:14] <selwyn> oh
[12:51:18] *** Quits: jurov (~jurov@rev-81-92-255-34.radiolan.sk) (Ping timeout: 276 seconds)
[12:52:05] <gilberth> So there always is a backup path. I won't update Linux, nor Emacs though. Especially not Emacs.
[12:52:40] <gilberth> And certainly not SLIME, as my version still works with CMUCL 18e.
[12:53:04] <selwyn> i see
[12:53:45] <gilberth> That CMUCL runs bauhh.dyndns.org:8000 aka clim.rocks aka the clim-spec.
[12:54:15] *** Joins: jurov (~jurov@rev-81-92-255-34.radiolan.sk)
[12:55:43] <gilberth> pjb: Or networking? It could be done in user space, too.
[12:58:49] <hayley> Memory management and every other driver could be done in userspace.
[12:58:58] <hayley> With a real language we could do isolation in userspace.
[13:02:04] <gilberth> I once thought about what is ld.so to be run as service. But that was at a time Linux shared libraries were linked to a fixed address and needed to be loaded at that very address. A system-wide linker would solve that without the need for PIC.
[13:04:17] <gilberth> Anyhow, what I really miss a system-wide editor and kill ring. Why don't all applications could share that. Give me Emacs in GUI text boxes. Another one may prefer vi there. Or sth like WordStar :)
[13:11:16] <gilberth> I don't even like it when applications have their own scrollbars that behave different, like Emacs does.
[13:13:03] <gilberth> selwyn: BTW I ought to downgrade bash as the completion is broken since quite some time.
[13:33:28] * hayley wonders if there is a real definition of "wait free garbage collection". IIRC C4 is "wait free" once you get past scanning for roots.
[13:35:25] <hayley> Seems not, it all comes up with reclamation schemes without a GC and refcounting (same shit, different stick).
[13:35:32] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[13:45:32] <hayley> Still, any thread can mark, and any thread can copy and fix up references, thus my plan is wait free to me.
[13:48:56] <hayley> https://renato.athaydes.com/posts/revisiting-prechelt-paper-comparing-languages.html Lisp faster than Rust confirmed
[13:48:57] -ixelp- Renato Athaydes
[13:50:08] <pjb> gilberth: the (very rustic) line editing implemented in the kernel (ie. basically, handing of BS/DEL) is there as an optimization of the line-buffered input.
[13:51:16] <pjb> It was important for response time when the context switches were much slower in real-time than they are nowadays.  On current hardware, this could probably be removed from the kernel, and indeed, readline could be integrated into stdio (fread/gets).
[13:52:03] <pjb> indeed, in the extrem, you can have a microkernel and do everything in userspace.
[14:17:29] <hayley> Funny, most of the PL nerds around my age like types. I don't.
[14:27:10] *** Quits: lad (~lad@user/lad) (Ping timeout: 258 seconds)
[14:35:48] <dave0> spaceballs 2 - the quest for more money
[14:37:55] <selwyn> academic boogaloo
[14:42:16] <hayley> "look at my type system" "yeah but can u do 100,000,000 hash table reads/second" "..."
[14:45:32] <dave0> if it's too slow, just make it multithreaded :-p
[14:46:50] <dave0> now you've got 2 problems :-(
[14:50:13] <hayley> Okay, guess if I had to like any formal methods, it would be for concurrent programs.
[14:51:38] <hayley> Though such methods are basically "ok you CASed this, now you're at this state, CAS another, you're at this state..."
[15:00:05] <hayley> Still, better write up a few for decentralise2. The interactions between storing into the interesting block table and mailbox are pretty fun.
[15:34:07] *** Joins: random-nick (~random-ni@87.116.182.181)
[15:38:29] *** Joins: nihaal (~nihaal@106.201.177.18)
[16:04:54] * hayley uploaded an image: (53KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/gItoXnlZYFswpJVwHRUKYpyM/decentralise2-interesting-block.png >
[16:04:59] <hayley> decentralise2: 1 formal method
[16:04:59] <hayley> libp2p: 0 formal methods
[16:05:01] <hayley> Conclusion: decentralise2 wins
[16:09:11] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 255 seconds)
[16:11:22] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 240 seconds)
[16:18:55] *** Joins: elflng (~elflng@5.28.137.182)
[16:23:34] <hayley> https://www.youtube.com/watch?v=Zcsd-6KlcgQ
[16:23:35] -ixelp- Atom Heart Mother (BBC Radio Session, 16 July 1970) - YouTube
[17:37:07] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:11:23] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:21:50] *** Joins: domovod (~domovod@176.196.122.197)
[18:39:45] *** Joins: zacts (~zacts@user/zacts)
[18:47:53] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:57:19] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[19:13:12] *** Joins: selwyn (~selwyn@user/selwyn)
[19:14:08] *** Joins: zacts (~zacts@user/zacts)
[19:14:53] *** Joins: ullbeking (sid5364@2001:67c:2f08:3::14f4)
[19:18:46] <ullbeking> hello all
[19:19:02] * ullbeking is still in the process of moving channels from Freenode
[19:35:01] <shka> ullbeking: hi
[19:56:21] <selwyn> is there still activity on freenode?
[20:04:45] <ullbeking> shka: hello!
[21:01:57] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[21:29:04] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[21:43:04] *** Joins: lad (~lad@user/lad)
[22:00:11] *** Joins: Alfr (~Alfr@user/alfr)
[22:21:05] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.2)
[22:58:49] <White_Flame> selwyn: moving channels doesn't mean that the channels are actually occupied!
[23:05:18] <selwyn> yes i agree?
[23:07:53] <White_Flame> (re activity on freenode)
[23:08:13] <selwyn> right
[23:08:16] <White_Flame> anyway, has all the drama basically died down and it's just a few people proverbially staring at each other in #freenode?
[23:08:36] <selwyn> that´s what i´m wondering
[23:20:22] *** Joins: zacts (~zacts@user/zacts)
[23:25:50] <gilberth> Good morning #lispcafe!
[23:28:12] <selwyn> hi
[23:28:46] <ck_> selwyn: I tried looking at activity graphs a few days ago
[23:29:26] <ck_> like this one https://www.hinner.com/ircstat/Socip_F.html 
[23:29:27] -ixelp- Kajetan Hinner, IRC Statistics Freenode
[23:29:47] <White_Flame> those are just counts of connections, not actual chat activity
[23:30:21] <ck_> I'm not classically trained of course and only an amateur at these things but I believe if red line is above blue line that means something
[23:30:31] <White_Flame> yep, fewer users than channels
[23:30:53] <ck_> I knew an expert would be able to divine the true meaning
[23:30:55] <White_Flame> so lots of freenode staffers squatting many channels to appear intact, or something
[23:31:29] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[23:53:26] <selwyn> potemkin irc network
