[00:02:13] <ormaaj> and ofc obligatory warning that pkill implies you're hunting for "patterns" and don't care that process names don't necessarily mean what people think on probably most platforms.
[00:03:10] *** Quits: pystardust (~pystardus@223.226.119.16) (Quit: nyaa~)
[00:05:14] *** Joins: schmillin (~schmillin@user/schmillin)
[00:05:43] <ormaaj> (usually people that know enough to use pkill already know all this, I think.)
[00:06:22] *** Quits: LanDi (~landi@187.19.138.79) (Remote host closed the connection)
[00:07:35] <Maxattax> wtf ormaaj my system is broken now this is your fault why didn't you tell me my command could randomly kill my most important process that randomly matched my string, it didn't even give it a chance to save, I just like 30 hours of work
[00:09:13] <ormaaj> feature request: pkill --ask
[00:09:14] <koala_man> haha
[00:11:21] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[00:11:45] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:12:16] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[00:14:11] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[00:14:29] *** Joins: lavaball (felix@31.204.155.215)
[00:17:24] *** Quits: unixman_home (~unixman2@216.137.241.98) (Read error: No route to host)
[00:18:16] *** Quits: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[00:18:55] <geirha> time to play psdoom
[00:25:35] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[00:26:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[00:27:44] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:27:59] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[00:28:01] *** Joins: tejr (~tejr@user/tejr)
[00:29:05] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[00:30:53] <bionade24> Hi, I want try to do "[[ -e  ~/path/to/{write_ros.py,WriteROS/} ]] && echo true" but it echoes false despite the path is correct.
[00:30:54] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[00:31:06] <bionade24> Where is my misstake?
[00:31:41] <geirha> [[ ]] does not do brace expansion
[00:32:20] <geirha> it's also ambiguous. Is it supposed to test if at least one of those files exist (OR), or test if both exists (AND)?
[00:33:28] <bionade24> geirha: Both. Makes sense that -e can only test for one path. *facepalm*
[00:35:44] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[00:35:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 250 seconds)
[00:36:14] <earnestly> How can it be both AND and OR?
[00:36:41] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-45.prtc.net)
[00:36:59] <earnestly> Socrates was a mistake
[00:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:37:51] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:37:53] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:38:03] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[00:38:06] <wiscii> this and that or these or those
[00:38:14] <ormaaj> socrates hates material implication paradoxen
[00:39:21] <wiscii> linguistical skid marks left on tarmac
[00:40:11] *** Joins: seninha (~seninha@user/seninha)
[00:40:40] *** Quits: plitter (~plitter@user/plitter) (Read error: Connection reset by peer)
[00:40:40] <ormaaj> I believe in santa claus yet no skid marks left on roof. What gives?
[00:41:19] <ljharb> skid marks require friction, santa lubricates his sled with the oil derived from elf carcasses
[00:42:41] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[00:42:47] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:59] *** Quits: morningbreeze_ (~morningbr@84.245.121.124) (Remote host closed the connection)
[00:43:00] <earnestly> ormaaj: The bigger lies require more faith
[00:43:02] <wiscii> The words "socrates hates" left a skid mark here 
[00:44:20] <wiscii> i'm drawn to Bill's pronounciation of "socrates" rather than pronouncing the other as "hatties"
[00:45:05] <earnestly> so-crates are the new name for rust's shared objects when it gains a stable ABI
[00:47:57] <ormaaj> (I trust that went /r/woosh for no one, but in case I'm wrong https://en.wikipedia.org/wiki/Curry's_paradox )
[00:48:32] *** Joins: The_Tablet (Tablet@user/the-tablet)
[00:49:09] *** Quits: benjwadams (~benjwadam@96.238.4.28) (Quit: Client closed)
[00:49:36] *** Parts: The_Tablet (Tablet@user/the-tablet) ()
[00:51:10] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 240 seconds)
[00:51:28] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[00:52:46] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[00:53:55] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:54:05] *** Joins: humky (~humky@user/humky)
[00:55:45] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: Leaving)
[00:55:54] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:56:03] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[00:56:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:56:12] *** boreas is now known as heiner
[00:59:36] <earnestly> ormaaj: I was trying to make a reference to terry pratchet
[01:01:30] *** Joins: gpe (~gpe@2603-8081-7201-5984-291c-0428-f0ec-bf30.res6.spectrum.com)
[01:01:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[01:01:52] <FreeBDSM> Hi. Should envs get passed (inherited by child script from parent script) if parent script exports some var=value pairs and then does `exec child.sh`?
[01:02:04] <earnestly> ormaaj: That is a nice paradox though, very simple
[01:02:16] <earnestly> FreeBDSM: Yep
[01:02:48] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[01:03:04] <FreeBDSM> earnestly: thanks.
[01:03:10] <gpe> What is the term for <() in e.g. cat <(echo hello)?
[01:03:17] <koala_man> gpe: process substitution
[01:03:40] <earnestly> !ps > gpe 
[01:03:40] <greybot> gpe: Don't use ps(1) in scripts. Its output can't be reliably parsed, and will often leave you vulnerable to TOCTOU (race) bugs. Use $! to get the PID of the last asynchronous command. See http://mywiki.wooledge.org/ProcessManagement for anything more complex.
[01:03:43] <earnestly> :(
[01:03:47] <earnestly> !<( > gpe 
[01:03:47] <greybot> gpe: Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[01:04:18] *** Quits: gpe (~gpe@2603-8081-7201-5984-291c-0428-f0ec-bf30.res6.spectrum.com) (Client Quit)
[01:04:22] *** Joins: gpe61 (~gpe@2607:fb90:e679:66b0:cfd4:2caf:e683:8572)
[01:04:46] *** Quits: gpe61 (~gpe@2607:fb90:e679:66b0:cfd4:2caf:e683:8572) (Client Quit)
[01:05:16] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[01:05:56] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-45.prtc.net) (Quit: Client closed)
[01:06:02] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[01:06:06] <izabera> !procsub
[01:06:08] <izabera> damn
[01:07:11] <wiscii> !ps
[01:07:11] <greybot> Don't use ps(1) in scripts. Its output can't be reliably parsed, and will often leave you vulnerable to TOCTOU (race) bugs. Use $! to get the PID of the last asynchronous command. See http://mywiki.wooledge.org/ProcessManagement for anything more complex.
[01:07:23] <koala_man> FreeBDSM: I see why you'd ask. "Inherited" is not the most technically accurate description because it's unrelated to process hierarchies. They're passed via the `execve` call.
[01:07:23] *** Joins: Raguile (~Raguile@user/raguile)
[01:08:00] *** Quits: macodra (~quassel@user/macodra) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[01:08:41] <koala_man> So execve without fork still gets them
[01:09:36] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:10:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[01:10:54] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[01:11:56] <earnestly> koala_man: How is it not related directly to the hierarchical relationship between the parent and child process?
[01:11:56] <FreeBDSM> koala_man: thanks for giving more details
[01:12:06] <FreeBDSM> !TOCTOU
[01:12:09] <koala_man> earnestly: because there may not be a child process
[01:12:14] *** Joins: amatz (~thavin@49.49.244.37)
[01:12:55] <FreeBDSM> even in case of exec?
[01:13:03] <earnestly> Hm, are you making the distinction between forking and replacing the process?
[01:13:23] <koala_man> exec doesn't create a child process, it reuses the same process and loads a new executable into it
[01:13:50] <earnestly> Ah I see what you're trying to hint at
[01:14:49] <earnestly> FreeBDSM: Essentially the exec replaces the current process with the new one without creating a new PID, it happens to be left with the environment the parent had
[01:15:29] <earnestly> Rather than the environment (and other things) being copied such as in the case with fork
[01:15:46] <geirha> no, execve is where the copy happens
[01:15:49] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[01:15:55] <koala_man> "left with" in the sense of "conventionally receiving a copy of the previous process's environment"
[01:15:56] <FreeBDSM> I'd still call that inheritance process. Logical inheritance. New process inherits some remnant bits (envs) from its ancestors
[01:16:03] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[01:16:08] <koala_man> err. previous running executable's environment
[01:16:23] <earnestly> geirha: Hm, does it?  I must have forgotten.  I read about this long ago into TLPI
[01:16:25] <earnestly> in*
[01:16:28] <earnestly> Or UPE, idk
[01:16:32] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[01:16:35] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[01:16:46] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[01:16:58] <earnestly> FreeBDSM: Yeah, it's a fair abstraction
[01:17:29] *** ghost_sublim20 is now known as sublim20
[01:17:37] <earnestly> Somewhat what makes unix unique compared to windows or others, that it's not possible to create a new process wholecloth except pid1
[01:18:02] <FreeBDSM> how so?
[01:18:11] <earnestly> FreeBDSM: Can only exec or fork
[01:18:21] <geirha> or, well, the word environment was ambiguous in that sentence
[01:18:43] <FreeBDSM> I meant env vars 
[01:20:47] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[01:21:18] <geirha> the bash process' environment variables are static; they never change. When you export a new variable, it is just "tagged" so that when bash calls execve(2) later on, it will include it in the envp argument
[01:22:09] *** Quits: zoe (~zoe@fsf/member/zoe) (Read error: Connection reset by peer)
[01:22:21] <earnestly> This is quite annoying because it makes /proc//environ less helpful
[01:22:30] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[01:22:38] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:25:53] *** Quits: schmillin (~schmillin@user/schmillin) (Remote host closed the connection)
[01:27:13] *** Joins: schmillin (~schmillin@user/schmillin)
[01:28:52] *** Quits: Lutin (~Lutin@lfbn-lyo-1-1349-50.w86-207.abo.wanadoo.fr) (Quit: Lutin)
[01:31:04] <FreeBDSM> geirha: why do you call them static? can't I `export myvar=a; export myvar=b;`?
[01:32:01] *** Joins: uc50ic4more (~uc50ic4mo@dyn216-8-172-151.ADSL.mnsi.net)
[01:32:37] <FreeBDSM> oh, I was probably thinking about 'constant' rather than 'static variable'. terms...
[01:33:52] <brelod> I think the reason is that all the proccesses are passed an env list to their main function, but once the memory is allocated by kernel no additional variables added by the program. So when you export a variable in the shell it wont be an environment variable of the shell but only the env variable of its subprocesses
[01:35:56] <wiscii> is that effected by the interactive switch ?
[01:36:00] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:36:03] *** Joins: nick (~nick@213.237.90.40)
[01:36:10] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[01:36:49] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[01:37:02] *** Joins: tp43_ (~ndeem@2001:1970:501d:3e01:a199:1a3e:abd1:ac4c)
[01:37:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 250 seconds)
[01:37:55] <brelod> I think it's independent from the interactive switch (correct me if I'm wrong)
[01:38:10] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[01:38:37] <FreeBDSM> brelod: wait, did you mean that if I do `export myvar=x` and `grep 'myvar' /proc/${pid}/environ` I will get no results?
[01:38:51] <FreeBDSM> just tested it, looks like you are right
[01:39:01] *** Joins: akoana (~ah@user/akoana)
[01:39:26] <brelod> that's my theory, yes :)
[01:39:44] <FreeBDSM> I wonder if there's a command or some trick/signal to tell to 'rebuild environ file for this process' and it would then write all exported vars there
[01:40:05] <geirha> exec bash
[01:41:16] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:42:35] *** Joins: mongy (~mongy@user/mongy)
[01:43:07] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[01:43:47] <FreeBDSM> geirha: ha, it works indeed like you say. Weirdly zsh has different behavior here :/
[01:43:49] *** Joins: plitter (~plitter@78.31.86.243)
[01:43:49] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[01:43:49] *** Joins: plitter (~plitter@user/plitter)
[01:46:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 250 seconds)
[01:46:26] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[01:46:46] <wiscii> brelod: tested, not effected by -i
[01:48:08] <wiscii> bash history persists though
[01:48:45] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 250 seconds)
[01:49:14] *** Quits: uc50ic4more (~uc50ic4mo@dyn216-8-172-151.ADSL.mnsi.net) (Quit: uc50ic4more)
[01:49:16] <wiscii> pfft, ofc it does 
[01:51:54] *** Quits: sazawal (~sazawal@182.64.58.123) (Quit: Leaving)
[01:51:55] *** Joins: diamondbond (~diamondbo@175.157.84.92)
[01:54:14] *** Quits: diamondbond (~diamondbo@175.157.84.92) (Client Quit)
[01:54:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:55:15] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[01:56:48] *** Joins: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net)
[01:57:38] *** Quits: nick (~nick@213.237.90.40) (Remote host closed the connection)
[01:58:44] *** Joins: nick (~nick@213.237.90.40)
[01:58:46] *** Quits: nick (~nick@213.237.90.40) (Read error: Connection reset by peer)
[01:59:14] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[01:59:51] *** Joins: nick (~nick@213.237.90.40)
[02:02:02] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[02:05:38] *** Quits: Yssk (~Yssk@newt-41-b2-v4wan-162231-cust52.vm11.cable.virginm.net) (Quit: Yssk)
[02:10:17] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:12:30] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[02:14:38] *** Quits: n4dir (~user@mue-88-130-57-069.dsl.tropolys.de) (Ping timeout: 250 seconds)
[02:14:46] *** Quits: rendar (~rendar@user/rendar) (Quit: linux = fucking OS.)
[02:15:11] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 250 seconds)
[02:16:42] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[02:17:06] <xx> how do I write in bash: if "/usr/bin/something symlink points to /usr/bin/somethingelse"
[02:17:14] <xx> I thought about parsing ls output, but that's clearly wrong
[02:17:48] <xx> is `realpath` the tool to use?
[02:22:22] <brelod> xx: I think realpath is the best. An alternative is the readlink but the manual of it actually states that you should use realpath instead :)
[02:22:33] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 250 seconds)
[02:23:46] <xx> if [[ -L /usr/bin/something ]] && [[ $(realpath /usr/bin/something) == "/usr/bin/somethingelse" ]]; then echo "yes"
[02:23:48] <xx> good?
[02:25:53] <brelod> You can go even simpler like: if [[ "$(realpath /my/posible/link)" == "/other/path" ]]; then echo match; fi
[02:25:54] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:27:02] <brelod> also note the quotation marks around the $(realpath...) to avoid the trouble with spaces in the resolved path.
[02:29:48] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:30:02] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:31:37] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:31:39] *** Quits: amatz (~thavin@49.49.244.37) (Ping timeout: 250 seconds)
[02:31:51] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[02:34:10] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 240 seconds)
[02:34:33] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[02:36:18] <neshpion> # touch 'a b c.txt'; ln -s 'a b c.txt' abc; [[ $(realpath abc) == "$PWD/a b c.txt" ]]; echo $?
[02:36:19] *** Quits: grondilu (~grondilu@91-164-198-91.subs.proxad.net) (Ping timeout: 252 seconds)
[02:36:20] <shbot> neshpion: 0
[02:37:45] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:38:00] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:39:08] *** Joins: totenkoph (~scythe@user/totenkoph)
[02:40:53] <brelod> nice. good to know 
[02:43:41] <neshpion> with [ it would matter, but inside [[ ]] the left operand isn't subject to word splitting IIRC
[02:43:59] <neshpion> !quotes
[02:43:59] <greybot> https://mywiki.wooledge.org/Quotes
[02:45:16] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:47:48] *** Quits: brelod (~me@90.251.226.93) (Quit: leaving)
[02:49:23] <natechan> i'm writing a wrapper script around an executable.  i would like the wrapper to be transparent as far as return codes and traps go.  so i think i want to handle all legal traps and kill $$ with them.  am i right to think that?
[02:49:41] <izabera> no
[02:49:43] <izabera> !next
[02:49:43] <greybot> Another satisfied customer! Next please!
[02:49:52] <natechan> hah
[02:50:16] <natechan> is anything at all necessary?
[02:51:06] <izabera> what does the wrapper do?
[02:51:09] <wiscii> you could just have your wrapper exit 0
[02:51:17] <neshpion> $$ is PID, $? is return code
[02:51:53] <natechan> let's say the wrapper logs invocations to a file (this is kinda true)
[02:52:30] <natechan> yeah so i'm doing <<exit $?>> and in the signal handler <<kill -$signal $$>>
[02:52:41] <neshpion> but i would think `set -e` would do most of the work for you
[02:52:56] * wiscii chortles
[02:53:06] <natechan> i thought so too :-/ but it seems that not to
[02:53:38] <wiscii> using set -e is like holding up a mirror and trying to read backwards
[02:53:47] <natechan> having the wrapper exit 0 however is the opposite of the goal here
[02:53:47] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Read error: Connection reset by peer)
[02:53:59] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[02:54:05] <neshpion> what does the executable do?
[02:54:06] <wiscii> exit 0 was a joke
[02:54:09] <natechan> ah
[02:54:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:54:21] <natechan> i'm afraid you're not going to be able to A/B this particular problem
[02:54:54] <natechan> a number of processes expect to find this binary at a location on disk.  i need to change its behavior some of the time for Reasons TM
[02:55:56] <natechan> and the launching processes care about the way that the executable exits
[02:56:24] <wiscii> that is the normal way of things ..
[02:57:10] <neshpion> what about `exec <binary>` ?  wouldn't that cause the binary to replace the shell process and when it exits with its return codes it sends the code to the process who invoked the wrapper?
[02:58:18] <neshpion> # bash -c "exec bash -c 'exit 11'"; echo $?
[02:58:20] <shbot> neshpion: 11
[02:58:26] <natechan> crap, there is one other wrinkle (not that it means that exec won't work (to my knowledge)), on a particular exit code, i need to do something else entirely
[03:00:04] <natechan> what i'm doing currently is checking the exit code.  if the code == 42 (or whatever), do special stuff, else exit $code.  it seems like that's getting the exit codes through properly
[03:02:43] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:02:58] *** Joins: kill (~killown@user/killown)
[03:04:18] <natechan> from what i can tell, the trouble i'm seeing is that if the executable process raises a signal, the bash process does not.  so parents don't get see the bash process raise the signal they're expecting from the child.  maybe i'm making an incorrect inference here, though.
[03:06:18] <wiscii> do you mean: you are not catching the signal in your wrapper ?
[03:08:02] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[03:08:54] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[03:09:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[03:11:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[03:11:10] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net)
[03:11:34] <natechan> at first, i didn't have any lines "trap ..." in the script.  then i saw the behavior which i inferred to mean that the wrapper wasn't raising the same signals as the executable.  so i added a bunch of lines <<trap 'my_handler SIGBLAH' SIGBLAH>> to the script where my_handler consists of <<kill -$1 $$>>.
[03:12:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:12:57] *** Joins: keypushe- (keypusher@user/keypusher)
[03:13:24] <wiscii> trap is not the door you are looking for
[03:13:39] <natechan> lol nice
[03:13:40] <wiscii> !trap
[03:13:41] <greybot> http://mywiki.wooledge.org/SignalTrap ## To clean up on exit, don't trap a bunch of signals. Instead, trap cleanupFunc EXIT
[03:13:55] <natechan> okay, so i return to the previous room
[03:14:18] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[03:14:21] <wiscii> if i understand you then you are trying to trap signals from subprocesses ?
[03:14:23] <natechan> there i see...a grue, and the behavior where parent processes still don't seem to get the signal they're expecting
[03:14:37] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[03:14:49] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[03:15:49] *** Joins: thiras (~thiras@user/thiras)
[03:15:52] <natechan> my impression (perhaps incorrect) of what i'm seeing.. parent -> executable: executable raises signal and parent sees it, which it was expecting.  parent -> wrapper -> executable: executable raises signal and ... parent does not see the signal it was expecting and all is not well.
[03:16:10] *** keypushe- is now known as keypusher
[03:16:43] <wiscii> i know 'exactly' what you mean
[03:16:58] *** Joins: RUNNINGMAN (~IceChat95@c-73-67-172-190.hsd1.or.comcast.net)
[03:17:10] *** Quits: RUNNINGMAN (~IceChat95@c-73-67-172-190.hsd1.or.comcast.net) (Client Quit)
[03:17:18] * wiscii bashes bahs
[03:19:54] <natechan> i can't tell if you're joking..  are you saying that my explanation isn't scrutable or that you're familiar with this behavior and wish it were otherwise?  (if the latter, is there a way to make it behave otherwise?)
[03:21:32] <wiscii> i am joking a little but i do see what you are trying to explain, i am trying to work out a suitable example which you may be familiar with
[03:21:57] <natechan> thank you!
[03:22:38] <wiscii> can you post a snippet of the code in question ?
[03:22:57] <wiscii> have you tried shellcheck'ing it ?
[03:23:05] <wiscii> !shellcheck
[03:23:05] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[03:23:06] <natechan> i can try to recreate it...one minute
[03:23:11] <wiscii> yay :)
[03:23:17] <natechan> yeah, i've used shellcheck on it
[03:23:34] <wiscii> and it can't find the problem, right ?
[03:23:41] <natechan> :-)
[03:23:48] <natechan> i'll just try again right quick
[03:24:02] <wiscii> shellcheck is awesome but scripot is awsomer
[03:24:46] <natechan> i'm not familiar with that one...same idea but better?
[03:25:01] <wiscii> more or less
[03:25:18] *** Joins: n4dir (~user@mue-88-130-57-069.dsl.tropolys.de)
[03:26:02] <wiscii> shellcheck *is* awesome .. but linux is awesomer
[03:26:22] <wiscii> *nix.. pick your favour
[03:27:03] <natechan> can't we have both shellcheck and *nix?
[03:27:40] <wiscii> # { [ $t ] && echo poo; } || echo ok
[03:27:42] <shbot> wiscii: ok
[03:27:58] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:28:03] <wiscii> # { [ $t ]; } || echo ok
[03:28:05] <shbot> wiscii: ok
[03:28:06] <natechan> all right, shellcheck runs "cleanly"
[03:28:24] <natechan> (except for my non-constant source directive but that's in all my scripts and isn't the problem)
[03:29:57] <wiscii> # set -e; { [ $t ] || echo poo; } || echo ok
[03:29:58] <shbot> wiscii: poo
[03:30:14] <wiscii> # set -e; { [ $t ] } || echo ok
[03:30:21] <shbot> wiscii: Missing terminating quote, bracket or keyword
[03:30:23] <wiscii> # set -e; { [ $t ]; } || echo ok
[03:30:24] <shbot> wiscii: ok
[03:30:35] <wiscii> # set -e; { [ $t ]; }
[03:30:36] <shbot> wiscii: (shell exited with 1)
[03:31:20] <wiscii> well .. enough of that sort of abuse
[03:32:43] *** Quits: jsrnop1 (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:33:10] *** Joins: jsrnop1 (~mark@user/jsrnop)
[03:33:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:34:03] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:34:09] *** Joins: xiao (~xiao@37.170.210.135)
[03:35:17] <wiscii> # t=1; { [ $t ]; } || echo ok
[03:35:18] <shbot> wiscii: no output
[03:36:12] <natechan> i don't know how to write the parent process in such a way as to get ahold of the signal that the child (whether wrapper or executable) uses, but this is my attempt to reproduce the issue: https://pastebin.com/z4RVkGc0
[03:36:12] <pasteban> Paste is available without ads on https://pastebin.com/raw/z4RVkGc0
[03:36:39] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[03:37:16] <wiscii> # t=1; { [ $t ] && echo poo; } || echo ok
[03:37:18] <shbot> wiscii: poo
[03:37:29] <wiscii> # { [ $t ] && echo poo; } || echo ok
[03:37:30] <shbot> wiscii: ok
[03:37:45] <wiscii> that's the one ^
[03:38:17] <natechan> i can't say i understand what you mean
[03:38:34] <wiscii> you are using bash ?
[03:38:54] <natechan> ...yes?
[03:39:51] <wiscii> so .. you are using bash and you think that bash is doing something wrong and your wrapper is all tickety-boo ?
[03:39:58] <natechan> no
[03:40:01] <natechan> i'm sure the error is mine
[03:40:10] <natechan> but i don't know what it is :-)
[03:40:13] <wiscii> well .. lets see it then ..
[03:40:24] <natechan> i think i pasted it a few lines up
[03:40:33] <natechan> well, obviously, an attempt to shrink it down
[03:40:38] <wiscii> unless you want more crytal ball predictions 
[03:40:53] <wiscii> crystal-ball *
[03:41:07] <natechan> depends on the clarity of the glass orb i guess
[03:41:29] <wiscii> Lecture: Ask not wjhat bash can do for you ..
[03:41:57] <wiscii> the j is in place
[03:42:17] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[03:47:47] <wiscii> !$$
[03:47:47] <greybot> $$ expands to the PID of the shell. In a ( ) subshell, it expands to the process ID of the original shell, not the subshell. (Bash 4.0 and above have BASHPID for that.)
[03:47:57] *** Joins: superboot (~agentgasm@user/superboot)
[03:48:14] <FreeBDSM> this is weird behavior
[03:48:31] <wiscii> mine or other ?
[03:48:55] <FreeBDSM> I mean $$ in sub-shell returning parent's PID
[03:49:02] <wiscii> ok
[03:50:16] <wiscii> how is: "executable.sh" called ..
[03:51:49] <natechan> in this example, it's called like ./executable.sh by the parent.  that doesn't exactly correspond to the actual situation in my case, unfortunately
[03:51:56] <wiscii> my divining point is pointing $(outh)
[03:54:45] <wiscii> that is totally full of holes .. if I had an AK47 and shot for a month at that then i would still miss
[03:54:49] *** Quits: Drek45 (~jrept371@129.59.122.18) (Read error: Connection reset by peer)
[03:57:44] <wiscii> # set -e; { [ $t ]; } || echo ok
[03:57:46] <shbot> wiscii: ok
[03:58:11] <wiscii> blisterin'
[03:58:47] <wiscii> # set -e; { [ $t ]; } && echo ok
[03:58:48] <shbot> wiscii: no output
[03:58:53] <wiscii> # set -e; { [ $t ]; }
[03:58:55] <shbot> wiscii: (shell exited with 1)
[03:59:47] <wiscii> # set -e; { [ $t ] && echo ok; }
[03:59:48] <shbot> wiscii: no output
[04:00:03] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[04:00:24] <wiscii> that is wht -e is borken
[04:01:04] <wiscii> only happens with &&
[04:02:16] <wiscii> koala_man: ^ thoughts ? i'm just curious .. no adgenda
[04:05:59] <wiscii> # { [ $t ] && echo ok; }
[04:06:00] <shbot> wiscii: no output
[04:06:15] <wiscii> # { [ $t ]; }
[04:06:17] <shbot> wiscii: no output
[04:06:21] <koala_man> yup, set -e is a weird beast. someone offered to write a PR for this exact issue
[04:06:34] <wiscii> i read it :)
[04:06:49] <wiscii> it bit me on the ass recently too
[04:07:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:13:21] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:37] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:39] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[04:17:03] <wiscii> # { [ ! $t ] || echo ok; }
[04:17:05] <shbot> wiscii: no output
[04:17:49] *** Joins: grondilu (~grondilu@91-164-198-91.subs.proxad.net)
[04:18:04] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[04:18:22] <wiscii> !help
[04:18:23] <greybot> I can do: !faq {number|string}, !pf {number|string}, !learn key value, !meta key, !metaurl key, !forget key, !searchkeys string, !factstats, !faqstats, !faqpages, !date, !version. For help with Bash builtins, use "help command" in bash.
[04:18:37] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:37] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:22:35] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[04:23:14] <wiscii> # { [ ] && echo true; }
[04:23:16] <shbot> wiscii: no output
[04:23:24] <wiscii> # { [ : ] && echo true; }
[04:23:25] <shbot> wiscii: true
[04:23:46] <wiscii> # { set -e; [ ] && echo true; }
[04:23:48] <shbot> wiscii: no output
[04:24:25] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:24:39] <wiscii> # { set -e; [ ] && echo true; set -e; }
[04:24:40] <shbot> wiscii: no output
[04:25:27] *** Joins: jess (~jess@libera/staff/jess)
[04:25:28] <twkm> if you are just fiddling you can do that privately.  public is when you want to discuss something.
[04:25:34] *** Quits: tangy (tangy@user/tangy) (Quit: Quit)
[04:25:58] *** Joins: tangy (~tangy@user/tangy)
[04:26:15] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- Connection Timed Out)
[04:27:47] <wiscii> # { set -x; [ ] && echo true; }
[04:27:49] <shbot> wiscii: + '[' ']'
[04:28:21] <wiscii> # { set -x; [ ] && echo true; } || echo poo
[04:28:22] <shbot> wiscii: + '[' ']'
[04:28:22] <shbot> wiscii: + echo poo
[04:28:22] <shbot> wiscii: poo
[04:28:38] <wiscii> # { set -x; [ ] && echo true; set -x; } || echo poo
[04:28:40] <shbot> wiscii: + '[' ']'
[04:28:40] <shbot> wiscii: + set -x
[04:28:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[04:28:49] <wiscii> done
[04:29:17] <wiscii> that is the wee bugger that caught me by surprise
[04:29:55] <wiscii> # { set -x; [ ] && echo true; set +x; } || echo poo
[04:29:56] <shbot> wiscii: + '[' ']'
[04:29:56] <shbot> wiscii: + set +x
[04:30:46] <wiscii> that is the correct version of my bug - not the previous versions
[04:31:52] <wiscii> 'set +x' won
[04:33:44] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 268 seconds)
[04:37:30] <wiscii> so .. while 'set -x' might be dodgy, 'set +x' is even dodgier ;-)
[04:37:35] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[04:38:06] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:38:11] <wiscii> especially for the purpose of debugging
[04:38:17] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:38:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[04:39:05] *** Joins: arinov (~arinov@213.194.126.155)
[04:39:27] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 240 seconds)
[04:39:33] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[04:41:36] <wiscii> !notabug
[04:42:47] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[04:42:54] <wiscii> !bug
[04:42:55] <greybot> Use the bashbug script to report bugs. It sends reports to bug-bash@gnu.org. Bug fixes, answers to questions, and new release announcements are posted to the usenet group gnu.bash.bug.
[04:49:53] *** Quits: nick (~nick@213.237.90.40) (Ping timeout: 250 seconds)
[04:52:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:53:08] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:56:24] <ormaaj> hunting for bugs in set -e? bug-bash collectively rolls eyes i'm sure.
[04:56:59] *** Joins: autopsy (~autopsy@ip70-190-125-167.ph.ph.cox.net)
[04:58:19] <wiscii> ormaaj: set -x; but the bug is a code style issue not a true bug, i was just harrassing greybot 
[05:02:01] <FreeBDSM> I don't get cp's --dereference / --no-dereference keys: if I need to copy A -> B and A is a symlink and I want B to be a normal file (not any kind of link) which key do I need?
[05:02:11] <FreeBDSM> or should I just use --copy-contents instead?
[05:04:35] <ormaaj> That's a confusing one. I just avoid the issue by using readlink or find.
[05:06:06] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[05:06:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[05:06:51] *** Joins: Bhavuk (~BTaneja@122.173.24.36)
[05:07:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:07:36] <ormaaj> Especially because `cp`'s behavior is modified by `set -P` IIRC. Finding out how will take more experimentation than just using different tools. ðŸ™‚
[05:08:03] <ormaaj> or reading. bleh reading.
[05:08:17] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[05:08:24] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:09:02] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[05:09:49] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 250 seconds)
[05:11:08] *** Joins: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp)
[05:11:19] *** Joins: plitter (~plitter@78.31.86.243)
[05:11:19] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[05:11:19] *** Joins: plitter (~plitter@user/plitter)
[05:11:29] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:11:50] *** Joins: seninha (~seninha@user/seninha)
[05:12:30] *** Quits: ogis_ (~Android@p1927250-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[05:12:41] *** Joins: ferdna (~ferdna@user/ferdna)
[05:12:56] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[05:13:17] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 250 seconds)
[05:15:01] *** Quits: hendrix (~hendrix@user/hendrix) (Ping timeout: 250 seconds)
[05:15:40] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[05:22:34] *** Joins: shimbles (~shimbles@209.201.38.106)
[05:23:15] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[05:23:47] <FreeBDSM> -H
[05:23:50] <FreeBDSM> the damn -H
[05:24:17] <ormaaj> find? yeah.
[05:24:28] <FreeBDSM> no, `cp -H`
[05:24:35] <ormaaj> oh
[05:24:50] *** Quits: burrows (burrows@user/burrows) (Quit: Quitting)
[05:26:13] *** Joins: burrows (burrows@user/burrows)
[05:28:17] <wiscii> # set -o pipefail; { set -x; [ ] && echo true; set -x; } || echo poo
[05:28:19] <shbot> wiscii: + '[' ']'
[05:28:19] <shbot> wiscii: + set -x
[05:29:08] <wiscii> no pipe .. 
[05:30:23] <twkm> still not discussing what you are spewing.  perhaps msg shbot directly, or use your own shell.
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:17] <twkm> but i'll bite: there's no pipe in your attempt, so the pipefail is fail.
[05:32:33] <wiscii> twkm: i should use my own shell .. sorry, sometimes bits are addictive
[05:33:21] <wiscii> bots*
[05:33:32] *** Joins: lq (~lq@210.72.8.210)
[05:33:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[05:34:26] *** Joins: vlm (~vlm@user/vlm)
[05:35:07] *** Quits: lq820105 (~lq@180.167.42.6) (Ping timeout: 240 seconds)
[05:37:47] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[05:38:44] *** Quits: n4dir (~user@mue-88-130-57-069.dsl.tropolys.de) (Ping timeout: 250 seconds)
[05:39:36] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[05:40:32] *** Joins: n4dir (~user@mue-88-130-57-116.dsl.tropolys.de)
[05:43:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:44:39] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[05:46:19] *** Joins: clime (~clime@37-48-8-143.nat.epc.tmcz.cz)
[05:47:00] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 244 seconds)
[05:47:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[05:48:07] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:48:32] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[05:50:04] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:53:58] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[05:56:00] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:56:08] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[05:56:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:56:33] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[05:59:26] *** Joins: thiras (~thiras@user/thiras)
[05:59:39] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:00:07] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 240 seconds)
[06:00:21] *** Joins: lq820105 (~lq@210.72.8.209)
[06:00:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[06:00:25] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:00:40] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[06:00:49] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:02:00] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[06:02:07] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[06:02:40] *** Quits: lq (~lq@210.72.8.210) (Ping timeout: 240 seconds)
[06:02:49] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[06:03:04] *** Quits: clime (~clime@37-48-8-143.nat.epc.tmcz.cz) (Quit: WeeChat 3.2)
[06:03:59] *** Joins: lq (~lq@116.228.78.178)
[06:05:17] *** Quits: lq820105 (~lq@210.72.8.209) (Ping timeout: 250 seconds)
[06:05:17] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[06:11:08] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Quit: -a- Connection Timed Out)
[06:11:28] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[06:12:28] *** Joins: schmillin_ (~schmillin@user/schmillin)
[06:12:58] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 250 seconds)
[06:15:44] *** Quits: n4dir (~user@mue-88-130-57-116.dsl.tropolys.de) (Remote host closed the connection)
[06:16:19] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[06:19:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:20:49] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[06:21:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[06:23:55] *** Joins: schmillin (~schmillin@user/schmillin)
[06:24:09] *** Quits: r00t|home (~r00t@ip4d17075f.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[06:24:30] *** Quits: r00t^ (~foobar@ip4d17075f.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[06:25:17] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[06:26:27] *** Quits: schmillin_ (~schmillin@user/schmillin) (Ping timeout: 240 seconds)
[06:27:00] <chiselfuse> I want a utility as follows: /usr/local/bin/strip_color
[06:27:05] <chiselfuse> With contents:
[06:27:23] <chiselfuse> sed 's/\x1b\[[0-9;]*m//g'
[06:27:40] <chiselfuse> That's it, supposed to strip ansi colors from STDIN
[06:27:58] <chiselfuse> Could I add a /bin/sh shebang?
[06:28:23] <chiselfuse> Also, am I re-inventing something and could be done easier maybe?
[06:28:35] <chiselfuse> *Should* I add a shebang?
[06:29:03] <chiselfuse> /usr/local/bin/strip-color looks better.
[06:29:57] *** Joins: r00t^ (~foobar@ip4d17075f.dynamic.kabel-deutschland.de)
[06:30:48] *** Joins: unixman_home (~unixman2@216.137.241.98)
[06:31:08] <chiselfuse> Should be used like this: $ color-output-command | strip-color
[06:31:24] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[06:31:25] <e36freak> yes, you could put that in a script with a /bin/sh shebang
[06:31:38] <e36freak> i'd personally put a "$@" after it so you can also provide filenames to it if you want
[06:32:02] <e36freak> sed 'blah' "$@"
[06:32:11] <e36freak> it'll work as is with no arguments given, or you can pass it a filename
[06:32:30] *** Quits: xiao (~xiao@37.170.210.135) (Remote host closed the connection)
[06:32:49] *** Joins: xiao (~xiao@37.170.210.135)
[06:33:25] <shimbles> https://github.com/tunz/afl-fuzz-js/blob/master/experimental/bash_harness/bash-harness.c
[06:34:36] <chiselfuse> e36freak: Good idea
[06:34:48] <chiselfuse> Works nicely
[06:36:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[06:37:09] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[06:37:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[06:37:45] *** Joins: betelgeuse2 (~betelgeus@94-225-47-8.access.telenet.be)
[06:37:48] *** Joins: cuppajoe (~joe@ip70-171-95-234.no.no.cox.net)
[06:38:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:38:40] *** Quits: xx (~xx@user/xx) (Quit: xx)
[06:38:54] <cuppajoe> so i am reading the BashGuide and am one page 29. There has been a lot of information so far, but not a lot of practice. Is that just because it is early in the guide, or should I practice what I learn some other way?
[06:39:41] <Shanzem> https://overthewire.org/wargames/bandit/
[06:39:42] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[06:39:52] <Shanzem> is a good resource... :)
[06:40:05] <chiselfuse> shimbles: Did/found anything interesting with that fuzzer?
[06:40:44] <shimbles> I was going to run it, didn't see it in the normal AFL
[06:41:01] <cuppajoe> Shanzem: Looks cool, i'll definitely try it!
[06:41:27] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Quit: Konversation terminated!)
[06:41:37] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 252 seconds)
[06:41:56] <shimbles> cuppajoe will this program exit successfully?
[06:42:00] <shimbles> mkdir -p ~/bin && echo 'echo Hello, world!' > ~/bin/hello_world && chmod +x ~/bin/hello_world && hello_world
[06:42:27] <cuppajoe> yes
[06:42:29] <cuppajoe> ?
[06:42:38] <cuppajoe> looks good to me
[06:42:48] <shimbles> you have to set up your PATH first. export PATH=/bin:/usr/bin:/usr/local/bin:~/bin
[06:42:58] <cuppajoe> oh i thought that was asssumed
[06:43:14] <cuppajoe> i have bin in my PATH so
[06:43:29] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[06:44:21] *** Joins: lq820105 (~lq@116.228.78.181)
[06:44:34] <shimbles> we'll count it
[06:44:47] <cuppajoe> +1 for cuppajoe :)
[06:45:57] *** Quits: Superstars111 (~jared@li227-215.members.linode.com) (Read error: Connection reset by peer)
[06:46:20] *** Quits: lq (~lq@116.228.78.178) (Read error: Connection reset by peer)
[06:46:59] <cuppajoe> any other practice resources to test what I learn? 
[06:48:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[06:48:49] <shimbles> practice PCRE regular expressions for sed and grep, and find, xargs and parallel
[06:48:51] <cuppajoe> Shanzem: the overthewire wargames is not working. i can't connect to the ssh server
[06:49:15] <shimbles> you need a big dataset to wrangle. install jq and create a dataset out of https://www.gharchive.org/ or http://ghtorrent-downloads.ewi.tudelft.nl/
[06:49:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:49:46] <cuppajoe> interesting, ill give it a look
[06:52:52] *** Quits: cuppajoe (~joe@ip70-171-95-234.no.no.cox.net) (Quit: WeeChat 3.2)
[06:56:36] <Shanzem> @Cuppajoe really?
[06:58:04] <jmcantrell> How can I test if an associative array contains a key?
[06:58:24] *** Quits: burrows (burrows@user/burrows) (Quit: Quitting)
[06:58:27] *** Quits: jos1 (~jos3@dyndsl-091-248-052-050.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[06:58:45] <e36freak> test -n or test -v
[06:58:54] *** Joins: burrows (burrows@user/burrows)
[06:59:46] <jmcantrell> oh, that does seem to work. i was thrown off because shellcheck is complaining about the syntax for some reason
[06:59:51] <shimbles> connect like so. ssh ssh://bandit0@bandit.labs.overthewire.org:2220
[06:59:52] <Shanzem> Cuppa joe if you are there it works for me
[07:00:18] <Shanzem> ssh bandit0@bandit.labs.overthewire.org -p 2220
[07:00:23] <Shanzem> password bandit0
[07:00:45] <Shanzem> logs in first time :D
[07:01:18] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[07:02:12] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:03:21] *** Quits: CoderCop (~CoderCop@134.209.34.45) (Changing host)
[07:03:21] *** Joins: CoderCop (~CoderCop@user/codercop)
[07:03:36] <shimbles> this looks to have successfully killed 6 bash processes on that bandit server. wonder what they were for. kill -9 $(ps ax | grep bash | sed 's/^ //;s/^ //' | cut -f1 -d' ') 
[07:03:59] *** Joins: YaoNai (~YaoNai@user/yaonai)
[07:04:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:06:47] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[07:10:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[07:10:54] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:11:37] *** Joins: jos1 (~jos3@dyndsl-091-248-050-028.ewe-ip-backbone.de)
[07:15:19] *** Joins: gnoo (~gnoo@user/gnoo)
[07:20:55] *** Joins: amatz (~thavin@49.49.244.37)
[07:21:47] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[07:22:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[07:24:44] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[07:25:09] *** Joins: randm (~randm@user/randm)
[07:27:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:31:07] *** Quits: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com) (Ping timeout: 240 seconds)
[07:33:27] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:35:16] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[07:35:59] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[07:37:46] *** Quits: CoderCop (~CoderCop@user/codercop) (Quit: WeeChat 3.0.1)
[07:38:46] *** Joins: CoderCop (~CoderCop@user/codercop)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:40] <nitro_> pgrep bash
[07:40:40] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 240 seconds)
[07:41:16] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[07:42:08] <shimbles> tx that has been driving me nuts forever
[07:42:13] <nitro_> also, the "grep bash" will find the grep process and try to kill that
[07:42:28] <shimbles> oh yeah
[07:43:39] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[07:43:50] <nitro_> side not, nie comsound sed, but sed '
[07:44:42] <shimbles> say what
[07:45:25] *** Joins: YaoNai (~YaoNai@user/yaonai)
[07:45:29] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[07:45:37] <nitro_> gah, side note, nice compounded sed, but in one swoop, sed 's/^ *//'
[07:45:54] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:46:36] <nitro_> moot point w pgrep, but always nice to hone skills
[07:47:54] *** Joins: sublim20 (~sublim20@user/sublim20)
[07:49:07] *** Joins: jab416171 (~jab416171@c-174-52-49-199.hsd1.ut.comcast.net)
[07:49:18] *** Quits: jab416171 (~jab416171@c-174-52-49-199.hsd1.ut.comcast.net) (Remote host closed the connection)
[07:49:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:50:09] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[07:51:17] *** Joins: minted (~minted@user/qzulu)
[07:51:27] <akoana> could even omit grep and cut
[07:51:30] <akoana> ps ax | sed -En '/bash/s/^[ ]*([^ ]+).*/\1/p'
[07:51:37] *** Joins: schmillin_ (~schmillin@user/schmillin)
[07:51:56] <akoana> but yeah, pgrep
[07:51:57] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[07:52:21] <nitro_> - regex is strong with this one -
[07:53:06] *** Joins: YaoNai (~YaoNai@user/yaonai)
[07:54:18] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[07:54:37] *** Joins: jab416171 (~jab416171@c-174-52-49-199.hsd1.ut.comcast.net)
[07:55:07] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 240 seconds)
[07:55:17] <nitro_> akoana, your solution still finds itself;  i encapsulate a letter so it gets interpreted; ie /[b]ash/ as opposed to /bash/; so it doesnt literally show in the process que
[07:56:30] <akoana> right, /[b]ash/ would avoid that
[07:58:48] *** Joins: minted (~minted@user/qzulu)
[08:00:30] <pj> also, if you're just going to kill the results then just use pkill...
[08:00:43] <pj> also(2): don't kill -9
[08:00:45] <pj> !-9
[08:00:45] <greybot> Do NOT use SIGKILL (kill -9) to terminate processes. All processes will terminate in response to the default SIGTERM. If they don't terminate instantly, that's because they're busy cleaning up. If you interrupt them, you break them. See http://stackoverflow.com/a/690631/347411 and http://turnoff.us/geek/dont-sigkill/
[08:04:11] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:04:47] <pj> that's not entirely true, imo, but -9 should be a last resort, so many people nowadays, only when nothing else works to kill the process.
[08:05:06] <pj> bleh, so many people just use kill -9 without trying kill first.
[08:06:16] *** Quits: setesat (~setesat@94.4.156.220) (Quit: Ping timeout (120 seconds))
[08:06:36] *** Joins: setesat (~setesat@94.4.156.220)
[08:07:02] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:07:37] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[08:08:54] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[08:09:11] <akoana> also xkill can have similar issues...
[08:11:46] *** Quits: xiao (~xiao@37.170.210.135) (Remote host closed the connection)
[08:11:48] <shimbles> kill -9 `ps ax | sed -r 's/ {0,2}([0-9]+) .*bash.*/\1/g;s/.*([A-Za-z]|grep).*//g;/^$/d;'`
[08:13:13] *** Quits: Gamma (~Gamma@zsh/user/Gamma) (Ping timeout: 244 seconds)
[08:16:59] <akoana> that won't work for pids < 100
[08:19:19] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[08:20:10] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:21:37] <akoana> # ps ax | awk '/[b]ash/ {print $1}'
[08:21:39] <shbot> akoana: 1
[08:21:39] <shbot> akoana: 44
[08:22:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:22:18] <akoana> # ps ax | sed -r 's/ {0,2}([0-9]+) .*bash.*/\1/g;s/.*([A-Za-z]|grep).*//g;/^$/d;'
[08:22:20] <shbot> akoana:  1
[08:22:20] <shbot> akoana: 44
[08:22:20] <shbot> akoana: 52
[08:24:32] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:25:38] <shimbles> # ps ax | sed -r 's/( +[0-9]+)[ ]{1}.*bash.*/\1/;s/.*[A-Za-z].*//;/^$/d;s/ *//'
[08:25:40] <shbot> shimbles: 1
[08:25:40] <shbot> shimbles: 44
[08:25:40] <shbot> shimbles: 52
[08:26:09] <akoana> shimbles: sorry, your solution works (I misread)
[08:26:16] *** Joins: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5)
[08:27:16] <pj> wow, are you trying to find the worst possible way to do that?
[08:27:43] <shimbles> # ps ax | sed -r 's/( +[0-9]+) .*bash.*/\1/;s/.*[A-Z(?i)].*//;/^$/d;s/ *//'  # is that your final answer?
[08:27:45] <shbot> shimbles: 1
[08:27:45] <shbot> shimbles: 44
[08:27:45] <shbot> shimbles: 52
[08:28:27] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[08:28:31] <shimbles> my answer has the benefit of being fairly legible
[08:28:42] <pj> you call that legible?
[08:29:05] <shimbles> yes, it tells you basically exactly what is being matched. akoana's answer is opaque
[08:29:35] <pj> anything that attempts to parse the output of ps is wrong.
[08:29:50] <akoana> my answer is pgrep :)
[08:29:57] <pj> actually pkill
[08:30:00] <pj> pkill bash
[08:30:02] <pj> done.
[08:30:21] <akoana> yes, and pkill for killing
[08:31:07] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[08:31:15] <akoana> I'd rather not kill all bash processes without looking at them before :)
[08:31:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[08:31:28] <pj> okay, then pgrep, certainly
[08:31:39] <pj> although proiper process management is best.
[08:31:41] <pj> !pm
[08:31:41] <greybot> http://mywiki.wooledge.org/ProcessManagement
[08:31:49] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:32:37] *** Joins: Atque (~Atque@user/atque)
[08:35:28] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 268 seconds)
[08:35:44] *** Joins: Milos (~Milos@user/milos)
[08:36:05] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 250 seconds)
[08:36:15] <akoana> # printf ' 1234 ?        Sl     0:00 /usr/local/bin/this-is-not-bash\n' | sed -r 's/( +[0-9]+) .*bash.*/\1/;s/.*[A-Z(?i)].*//;/^$/d;s/ *//'
[08:36:17] <shbot> akoana: 1234
[08:36:24] <akoana> shimbles: ^
[08:37:42] <shimbles> # ps ax | sed -r '/bash/!d;/sed/d;s/^ *//;s/([0-9]+) .*/\1/'
[08:37:43] <shbot> shimbles: 1
[08:37:44] <shbot> shimbles: 44
[08:38:34] *** Quits: gschanuel2 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[08:38:35] <akoana> # printf ' 1234 ?        Sl     0:00 /usr/local/bin/this-is-not-bash\n' | sed -r '/bash/!d;/sed/d;s/^ *//;s/([0-9]+) .*/\1/' # same problem
[08:38:36] <shbot> akoana: 1234
[08:39:15] <akoana> there is a reason why pgrep/pkill exists :)
[08:42:32] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:42:33] <shimbles> # ps ax | sed -r '/ -bash$/!d;/sed/d;s/^ *//;s/([0-9]+) .*/\1/'
[08:42:34] <shbot> shimbles: no output
[08:42:54] <shimbles> ah well; i did learn a few tricks. parsing ps should be our favorite past time, since its illegal
[08:44:11] *** Joins: binary01 (~binary01@192.110.171.216)
[08:44:34] *** Joins: thebombzen (~thebombze@587232493.guest.umich.net)
[08:45:14] <akoana> well I'm sure you could do it with a lot of regex magic, but that won't be neither readable nor portable nor withstanding ps output changes...
[08:45:31] <shimbles> # ps ax | sed '/bash/!d;/sed/d' | colrm 6 | tr -d ' '
[08:45:33] <shbot> shimbles: bash: colrm: command not found
[08:46:01] <thebombzen> Does something like this have a potential to break or be unsafe due to weird environmental factors like an exported IFS?
[08:46:05] <thebombzen> input_extension="${input_filename#"${input_filename%.*}"}"
[08:47:19] <thebombzen> (I don't want to use input_extension="${input_filename##*.}" because I want to treat files like Makefile as having an empty extension)
[08:51:15] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[08:52:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[08:52:48] <thebombzen> the task I want to solve involves batch renaming files to their shasum, so by doing this i'm getting the extension, including the ., and appending it to the shasum, so foo.txt becomes 58476894376.txt
[08:53:13] <thebombzen> just occurred to me I can't think of any ways the above line can break but I want to be extra sure
[08:54:04] <pj> # input_filename=Makefile; echo "${input_filename##.*}"
[08:54:06] <shbot> pj: Makefile
[08:56:55] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net) (Quit: zzzz)
[08:59:22] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Ping timeout (120 seconds))
[08:59:33] *** Joins: minted (~minted@user/qzulu)
[09:00:46] *** Joins: lq (~lq@180.167.42.6)
[09:00:48] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:01:53] *** Joins: minted (~minted@user/qzulu)
[09:02:17] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[09:02:24] *** Quits: lq820105 (~lq@116.228.78.181) (Ping timeout: 250 seconds)
[09:03:03] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:08:46] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Remote host closed the connection)
[09:08:54] *** Quits: tp43_ (~ndeem@2001:1970:501d:3e01:a199:1a3e:abd1:ac4c) (Ping timeout: 250 seconds)
[09:11:25] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:11:54] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:14:36] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:14:52] *** Joins: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt)
[09:14:55] <kurahaupo_> shimbles: is there a reason for using ps|sed-or-grep rather than pgrep?
[09:15:08] <AntonioPt> hello everyone
[09:15:09] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[09:15:14] <shimbles> yes
[09:15:19] <shimbles> i have a tiny hippocampus
[09:15:57] <kurahaupo_> thebombzen: That idiom is common and reliable. The only potential sticking point is if your filename is "foo.bar/Makefile"
[09:16:08] <AntonioPt> need an example of a bash script where i select a folder then i do what ever can anyone provide me a basic code dialog 
[09:16:14] <AntonioPt> thxx in advance 
[09:16:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:16:52] <shimbles> cd my_folder && nano my_file
[09:16:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:17:40] <AntonioPt> shimbles, i wanna use a Gui interface 
[09:17:44] <kurahaupo_> AntonioPt: When you say "select", how would you envisage that working
[09:17:52] <AntonioPt> sorry i wasnt explicite
[09:18:25] <AntonioPt> kurahaupo_, let me see if i can explain better
[09:18:37] <AntonioPt> gonna share a basic script i found
[09:18:48] <kurahaupo_> AntonioPt: As a general rule, CLI programs simply take filenames as command line arguments
[09:18:58] <thebombzen> kurahaupo_: is this something I can solve first by doing input_filename="${input_filename##*/}" first? (suppose it's already passed [ -f ] so directories are not a problem)
[09:19:23] <shimbles> AntonioPt use Kate
[09:19:32] *** Quits: binary01 (~binary01@192.110.171.216) (Quit: Leaving)
[09:19:50] <AntonioPt> sorry im fresh with all this 
[09:20:06] <thebombzen> AntonioPt: what are you trying to accomplish? are you trying to open a GUI editor for a particular file? which file?
[09:20:12] <thebombzen> er, which editor?
[09:20:30] <kurahaupo_> thebombzen: Yes, that's the more complete solution. You wind up with a directory (including trailing /), a basename, and a suffix (including leading dot)
[09:20:45] *** Quits: w0ng (~w0ng@185.218.127.67) (Ping timeout: 256 seconds)
[09:20:54] *** Joins: pystardust (~pystardus@223.226.119.16)
[09:20:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:21:01] *** Joins: binary01 (~binary01@192.110.171.216)
[09:21:06] *** Joins: totenkoph (~scythe@user/totenkoph)
[09:21:26] <thebombzen> kurahaupo_: in my case the directory name itself is unimportant, basically the script takes a file, calculates its sha256sum, and then SCPs it somewhere as HASH.ext
[09:21:36] <pystardust> is there a way to compile regex and use it again (i wanna match the same pattern again and again)
[09:21:43] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[09:21:47] <kurahaupo_> thebombzen: That way there's no special case logic to handle the cases when the directory or suffix are empty
[09:21:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:22:05] <AntonioPt> i wanna pop up a window where im gonna select a folder and inside that folder im do a playlist using bash and gtkdialog
[09:22:13] <thebombzen> yea, the reason I watch to match empty suffix as empty is so I can do "$hash$ext" regardless of whether it's empty or not
[09:22:27] <AntonioPt> thebombzen 
[09:22:28] <shimbles> pystardust use python from the CLI
[09:22:35] *** Joins: minted (~minted@user/qzulu)
[09:22:36] <shimbles> or perl
[09:22:51] <pystardust> shimbles: okay thanks
[09:23:24] <kurahaupo_> pystardust: If you run say, a sed script, then any regexes are compiled once, and used for every line of input, but there is in general no specific mechanism for "compiling a regex without using it"
[09:23:24] <thebombzen> AntonioPt: what do you mean by "do a playlist"?
[09:23:47] <AntonioPt> i all ready got the main part that is select the folder now i need to know how to grab variantes,... 
[09:23:54] <thebombzen> what are you actually trying to accomplish
[09:24:05] <thebombzen> if you want the user to provide a directory name, they can pass it as a command-line argument
[09:24:10] <AntonioPt> thebombzen, gonna share my code
[09:24:19] <thebombzen> if you force a user calling a bash script to pick a directory with a GUI they will be very very annoyed
[09:24:21] <AntonioPt> give me a second
[09:24:30] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:24:36] <thebombzen> if you're writing a GUI itself then BASH is probably the wrong tool
[09:24:42] <kurahaupo_> AntonioPt: Ok, popping up a window is outside the scope of portable shell programming. Ask your OS channel if there's a utility for doing that
[09:24:55] <AntonioPt> ok
[09:25:00] <kurahaupo_> Maybe TCL would suit better?
[09:25:03] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:25:10] <AntonioPt> but puppy use it 
[09:25:23] <thebombzen> TCL/tk could work, and if you don't use TCL you can try tkinter from python
[09:25:26] *** Joins: w0ng (~w0ng@185.218.127.67)
[09:25:29] <kurahaupo_> (For Linux there are tools like xmessage )
[09:25:30] <AntonioPt> and im trying to learn some basic :) maybe im doing in the wrong way lol 
[09:26:06] <kurahaupo_> AntonioPt: "windows" are not the most basic; there are MANY layers underneath that
[09:26:15] <thebombzen> basic stuff is on the CLI itself. a lot of "introductory programming courses" involve direct interaction with programs but the real world doesn't make programs ask you "enter a number" you just pass it as an argument on the CLI
[09:26:38] *** Quits: totenkoph (~scythe@user/totenkoph) (*.net *.split)
[09:26:38] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[09:26:38] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[09:26:38] *** Quits: gnoo (~gnoo@user/gnoo) (*.net *.split)
[09:26:38] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[09:26:38] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (*.net *.split)
[09:26:38] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (*.net *.split)
[09:26:38] *** Quits: tejr (~tejr@user/tejr) (*.net *.split)
[09:26:38] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[09:26:38] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (*.net *.split)
[09:26:38] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (*.net *.split)
[09:26:38] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[09:26:38] *** Quits: ano (~weechat@user/ano) (*.net *.split)
[09:26:38] *** Quits: vaio (~gary@user/ghost) (*.net *.split)
[09:26:38] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (*.net *.split)
[09:26:44] <thebombzen> for the most part, all configurability is done via CLI arguments or config files, and the program is minimally interactive during execution. at least on the CLI.
[09:26:57] <shimbles> you can use read to expect an argument from the user in bash
[09:27:11] <thebombzen> you can but you usually don't
[09:27:45] <thebombzen> intro courses will do things like "enter a number: " and then force the user to enter it, when in practice you're just gonna pass that as a CLI argument most of the time
[09:27:57] <shimbles> you can also use the tool expect, which is a good practice
[09:28:06] *** Joins: minted (~minted@user/qzulu)
[09:28:28] <AntonioPt> thxx for the tip kurahaupo_ 
[09:28:35] <AntonioPt> thebombzen, https://pastebin.com/raw/Y5VDFYyB
[09:28:44] <kurahaupo_> Or you're going to read an arbitrary list of numbers, one per line, and perform some argregation or transformation on them.
[09:28:44] <AntonioPt> i got this code right 
[09:28:55] <kurahaupo_> *aggregation
[09:28:59] <thebombzen> kurahaupo_: in that case you're probably piping another command tho
[09:29:09] <kurahaupo_> Yes exactly
[09:29:17] <AntonioPt> now i need to get it how im gonna get the variants from here 
[09:29:24] <kurahaupo_> But it's "read from stdin"
[09:29:31] *** Quits: sandb0y (pirate@user/sandb0y) (Quit: WeeChat 3.2)
[09:29:32] *** Joins: tp43_ (~ndeem@2001:1970:501d:3e01:a199:1a3e:abd1:ac4c)
[09:30:00] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:15] <kurahaupo_> AntonioPt: Is displaying a list of files actually the important part, or is it what you do with a chosen file that's important?
[09:30:52] <AntonioPt> i select the folder  then i will scan and do a playlist
[09:31:07] <AntonioPt> but i dont get it who i grab the variants 
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:21] <AntonioPt> to check if folder is correct,... 
[09:31:28] <thebombzen> kurahaupo_: it's read from FILE, if FILE is - or omitted, read from stdin instead ;-)
[09:31:43] <kurahaupo_> So you want to take a list of filenames, and then filter it, selecting some and omitting some?
[09:31:53] <AntonioPt> sorry im very new in all this kurahaupo_ 
[09:32:12] <thebombzen> AntonioPt: what are you actually trying to do
[09:32:28] <kurahaupo_> thebombzen: cat - <<<agreed
[09:32:29] <AntonioPt> no i want user to select a folder where he has music 
[09:32:47] <thebombzen> and what do you want to do with that directory once you have it
[09:33:04] <AntonioPt> then im gonna check if he select a folder with music,... 
[09:33:13] <kurahaupo_> AntonioPt: Why not just type in the name of the folder?
[09:33:29] <thebombzen> and okay, so if the folder has music in it, then what?
[09:33:29] <shimbles> yeah show them the output of tree and have them type one in
[09:33:35] <kurahaupo_> (or partly type and partly use tab completion)
[09:33:51] <AntonioPt> kurahaupo_, because will be a folder of user where he gots his music,...
[09:34:09] <thebombzen> okay, but what are you going to do if the folder has music in it?
[09:34:19] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:34:25] <AntonioPt> im gonna create a play list
[09:34:28] <AntonioPt> and play it 
[09:35:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:35:19] <thebombzen> play it with what?
[09:35:25] <AntonioPt> i got the part of scaning and creating the play list  i just need how to grab the info from gtk 
[09:35:28] <kurahaupo_> AntonioPt: The guiding maxim for writing useful shell commands is "don't try to do too much". "Interactively choose a folder" and "build a playlist from a given folder" seen to me like ideal candidates to be completely separate programs
[09:35:51] <thebombzen> AntonioPt: play it with what?
[09:35:56] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:35:59] <AntonioPt> mpv in this case
[09:36:13] <AntonioPt> thebombzen, and kurahaupo_ 
[09:36:24] <kurahaupo_> AntonioPt: And 'playing a playlist' would be a third program
[09:36:31] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[09:36:32] <shimbles> find . -type -f -regex '.*\.mpv$' -exec mplayer '{}' \;
[09:36:43] <minted> mpv is awesome
[09:36:46] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:36:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:36:52] *** Joins: tejr (~tejr@user/tejr)
[09:36:54] <thebombzen> AntonioPt: mpv can open directories directly so there's absolutely no reason to write this
[09:37:11] <AntonioPt> thebombzen, yes i know,... 
[09:37:17] *** Joins: vaio (~gary@user/ghost)
[09:37:20] *** Joins: gnoo (~gnoo@user/gnoo)
[09:37:20] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[09:37:22] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:37:24] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:37:27] *** Joins: ano (~weechat@user/ano)
[09:37:35] <AntonioPt> my idea is to understand how i grab info from MAINPROGAM 
[09:37:47] <AntonioPt> info == Variants
[09:37:51] <thebombzen> if your goal is simply as an exercise in GUI programming then bash is definitely the wrong tool for it
[09:38:07] <AntonioPt> well i dont say know 
[09:38:16] <kurahaupo_> shimbles: That's just "play in sequence", whereas Â« find â€¦ -exec â€¦ {} + Â» would show the user the entire playlist at once (or in chunks of 10000 songs)
[09:38:17] <AntonioPt> im just playing 
[09:38:28] <AntonioPt> kurahaupo_, i know 
[09:38:50] <thebombzen> what are you trying to do then? are you trying to play around with GUI programming or are you trying to make mpv open a directory?
[09:39:28] <AntonioPt> im just playing around GUI stuff even beeing a wrong option,... 
[09:39:46] <AntonioPt> i got that example write
[09:40:14] <AntonioPt> now i need to creat a function to grab info but dont get it how i manager thats all 
[09:40:57] <AntonioPt> i bet it may be the wrong option,.. but .. thxx
[09:43:03] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:43:39] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:43:57] *** Joins: minted (~minted@user/qzulu)
[09:43:59] *** Quits: w0ng (~w0ng@185.218.127.67) (Ping timeout: 256 seconds)
[09:44:51] <thebombzen> AntonioPt: just have the user pass the directory name as a command-line argument
[09:45:03] <thebombzen> although at that point you can just run mpv from the command-line, so I'm not sure what the point is
[09:45:29] <thebombzen> as I said, if your goal is to just experiment with creating GUIs, then bash is the wrong tool and I recommend you use a different language, one more suited for the job
[09:45:30] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- Connection Timed Out)
[09:45:49] <AntonioPt> just playing around here and be more lazy with my self 
[09:46:18] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:46:34] *** Joins: w0ng (~w0ng@185.218.127.67)
[09:46:48] <AntonioPt> since my ideia is to popup a windows where im gonna select a folder then i do playlist then play it 
[09:46:49] *** Joins: minted (~minted@user/qzulu)
[09:46:57] <AntonioPt> but ok thxx thebombzen 
[09:47:18] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[09:48:40] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 240 seconds)
[09:53:55] <shimbles> try this https://en.wikipedia.org/wiki/Zenity
[09:54:05] *** Quits: amatz (~thavin@49.49.244.37) (Ping timeout: 250 seconds)
[09:55:11] <shimbles> its exactly what you want, i think. it was already installed on my systme
[09:55:35] <AntonioPt> okok 
[09:55:40] <AntonioPt> gonna try it 
[09:55:46] <AntonioPt> thxx 
[09:57:03] <shimbles> zenity looks like a key ingredient to a sweet fork bomb recipe
[09:57:28] <AntonioPt> ok
[09:57:33] <AntonioPt> gonna check it 
[09:57:39] <AntonioPt> and see some examples
[09:57:51] <AntonioPt> maybe some works for me 
[09:58:27] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Ping timeout: 240 seconds)
[09:58:37] <shimbles> BTW i found that tool by going to https://hn.algolia.com/ and searching for bash gui
[09:59:01] <shimbles> an abomination in terms; yet, whither mc
[09:59:10] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: -all)
[09:59:42] <AntonioPt> ok
[09:59:48] *** Quits: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5) (Quit: Client closed)
[09:59:51] <AntonioPt> i get it 
[09:59:52] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2)
[10:00:06] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:00:15] <AntonioPt> but since i get it a bit bash,...  my goal was to combine both
[10:00:27] <AntonioPt> and since im playing around here 
[10:00:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:01:21] <shimbles> i assure you that all of your code will fit on just one line
[10:01:58] <AntonioPt> ohh yes if i understand de basic :)
[10:02:13] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[10:02:27] <AntonioPt> i could just do it bash lol but since i wanna grab a path 
[10:04:58] <thebombzen> kurahaupo_: anyway, this is the script that I had written
[10:05:04] <thebombzen> https://buzo.us/q
[10:05:11] <shimbles> find $(zenity --file-selection --directory) -type f -regex '.*\.avi$' -exec mpv '{}' \;
[10:05:20] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[10:05:48] <Soliton> -name '*.avi'
[10:05:50] <shimbles> mpv $(zenity --file-selection --directory)
[10:05:50] <thebombzen> the command sha384-base64 just calculates a file's sha384sum but encodes it as base64 instead of as hexadecimal (to save characters)
[10:06:08] <AntonioPt> thxx shimbles 
[10:06:14] <thebombzen> you should quote that
[10:06:32] <shimbles> mpv "$(zenity --file-selection --directory)"
[10:06:39] <AntonioPt> right right
[10:07:09] <thebombzen> in this event the directory name will probably have spaces in it, since names like Dark Side Of The Moon are common directory names that hold music
[10:07:29] <AntonioPt> yes yes :)
[10:07:38] <Soliton> just quote regardless and you don't have to worry about the input.
[10:07:54] <thebombzen> you don't need to do -regex btw, you can do `find -name '*.avi'`
[10:08:05] <thebombzen> the basic glob with -name '*.avi' is good enough in this context
[10:08:42] <shimbles> find "$(zenity --file-selection --directory)" -type f -name '*.avi' -exec mpv '{}' \;
[10:08:52] <thebombzen> that will execute one copy of mpv for each file. you don't want that
[10:09:04] <shimbles> sorry about that, my file system does not allow spaces, so i never use quotes. https://en.wikipedia.org/wiki/A_Void
[10:09:20] <Soliton> spaces are not the only issue.
[10:09:25] <b0nn> I have a file of data that I /was/ using cut on to get a couple of field, then pout into a second file, but I am now wanting to transform the data from one of those fields into something else (think from foo to http://foo), what's the right tool to be using here, I think Iam beyond what cut can do
[10:09:26] <shimbles> you might. mpv is still playing a 3GB csv file i happened to have there
[10:09:31] <Soliton> pathname expansion happens as well.
[10:09:52] <thebombzen> one copy of mpv for each file is not what you want because find makes no promise as to the order it returns the files
[10:10:04] <AntonioPt> ok
[10:10:10] <Soliton> b0nn: perhaps sed or awk.
[10:10:17] <AntonioPt> have to check it and make some condition now
[10:11:16] <thebombzen> mpv also accepts multiple filenames as arguments and it'll treat it as aplaylist internally
[10:11:28] <thebombzen> so once you have the list of files, just pass them all to mpv as arguments
[10:11:57] <shimbles> mpv $(find $(zenity --file-selection --directory) -type f -regex '.*\.avi$' | sort)
[10:12:07] <b0nn> Soliton: it's well past time I learnt awk or sed properly, thanks
[10:12:30] <thebombzen> nah, just use xargs
[10:12:34] <AntonioPt> thxx shimbles 
[10:12:35] <AntonioPt> and all
[10:12:38] <thebombzen> and please remember to quote
[10:13:04] <Soliton> !xargs
[10:13:04] <greybot> xargs(1) is dangerous (broken, exploitable, etc.) when reading non-NUL-delimited input. If you're working with filenames, use find's -exec [command] {} + instead. If you can get NUL-delimited output, use xargs -0. Otherwise, you probably want a while read or for loop instead.
[10:13:18] <thebombzen> oh, yea, find -print0
[10:13:20] <Soliton> if you use find there is barely a use for xargs at all.
[10:13:33] <thebombzen> true, since find has {} +
[10:13:44] <shimbles> xargs is an extreme option, and can result in some seriously gnarly code
[10:14:08] <thebombzen> find "$(zenity --file-selection --directory)" -type f -name '*.avi' -exec mpv -- '{}' +
[10:14:40] <thebombzen> and yea dont' use xargs with find unless you can couple it with -print0
[10:15:26] <thebombzen> and in general that's only useful if you're planning on saving it for later, piping it to xargs is a bit pointless with {} +
[10:17:32] <thebombzen> If you needed sorted find output, you can also try something like: find stuff_here_foo -print0 | sort -z | xargs -0 .....
[10:17:38] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[10:17:40] <thebombzen> which does the same thing but sorts
[10:17:52] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[10:18:10] *** Joins: codebam (~codebam@user/codebam)
[10:18:20] <thebombzen> if you want to be extra careful then you can do find ... -print0 | LC_ALL=C sort -z | xargs -0 ....
[10:21:35] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:21:45] *** Joins: amatz (~thavin@49.49.244.37)
[10:23:16] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 252 seconds)
[10:24:08] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[10:24:52] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[10:27:38] *** Joins: sublim20 (~sublim20@user/sublim20)
[10:27:46] *** Quits: tp43_ (~ndeem@2001:1970:501d:3e01:a199:1a3e:abd1:ac4c) (Ping timeout: 250 seconds)
[10:30:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[10:31:32] *** Joins: manin (~X@185.242.190.95)
[10:31:47] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[10:32:32] *** Quits: Bhavuk (~BTaneja@122.173.24.36) (Ping timeout: 250 seconds)
[10:32:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[10:36:32] *** Joins: Bhavuk (~BTaneja@122.173.27.78)
[10:37:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[10:37:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:37:51] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:41:08] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[10:41:28] *** Joins: earendel (uid498179@user/earendel)
[10:41:39] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:44:50] *** Joins: Gothiclown (uid512238@id-512238.tinside.irccloud.com)
[10:46:11] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[10:47:56] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[10:49:26] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[10:51:27] *** Quits: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt) (Quit: Leaving)
[10:55:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[10:56:13] *** Joins: vysn (~vysn@user/vysn)
[10:59:25] *** Joins: zxd (~zxd@2a00:a040:195:d0a6:55e7:d582:f3a3:a45)
[10:59:55] *** Joins: Lutin (~Lutin@user/lutin)
[11:00:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Ping timeout: 240 seconds)
[11:02:10] *** Joins: macodra (~quassel@p200300e49f03b00011fef03b4e194c2f.dip0.t-ipconnect.de)
[11:02:10] *** Quits: macodra (~quassel@p200300e49f03b00011fef03b4e194c2f.dip0.t-ipconnect.de) (Changing host)
[11:02:10] *** Joins: macodra (~quassel@user/macodra)
[11:04:05] *** Quits: macodra (~quassel@user/macodra) (Client Quit)
[11:04:20] *** Joins: KombuchaKip (~kip@192.252.230.5)
[11:05:04] *** Quits: r00t^ (~foobar@ip4d17075f.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[11:05:15] *** Joins: nutron (~nutron@user/nutron)
[11:06:54] *** Joins: lq820105 (~lq@210.72.8.214)
[11:07:16] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 252 seconds)
[11:07:21] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[11:08:07] *** Quits: lq (~lq@180.167.42.6) (Ping timeout: 240 seconds)
[11:09:35] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: Leaving)
[11:09:56] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[11:10:45] *** Joins: rendar (~rendar@user/rendar)
[11:11:01] *** Joins: minted (~minted@user/qzulu)
[11:11:18] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[11:14:20] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[11:15:01] *** Joins: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0)
[11:25:59] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:30:22] *** Joins: user217_ (~andrii@68.183.215.143)
[11:35:39] *** Quits: user217_ (~andrii@68.183.215.143) (Quit: Konversation terminated!)
[11:36:21] *** Quits: richardm75 (~richardm7@2600:8801:c502:1000:70c5:5041:9890:8de7) (Ping timeout: 250 seconds)
[11:37:07] *** Quits: lq820105 (~lq@210.72.8.214) (Ping timeout: 240 seconds)
[11:37:50] *** Joins: lq (~lq@116.228.78.178)
[11:42:50] *** Joins: binary01 (~binary01@192.110.171.216)
[11:45:08] *** Joins: brelod (~me@90.251.226.93)
[11:47:03] *** Quits: lq (~lq@116.228.78.178) (Read error: Connection reset by peer)
[11:47:58] *** Joins: frostwork (~frostwork@user/frostwork)
[11:48:50] *** Joins: lq (~lq@180.167.42.5)
[11:49:32] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:52:01] *** Joins: nobody_ (~nobody@host-79-46-246-104.retail.telecomitalia.it)
[11:54:15] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:56:54] *** Joins: lavaball (felix@31.204.155.215)
[11:57:07] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 240 seconds)
[11:58:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:59:15] *** Quits: roadie (~user@2a02:8108:ec0:1427:f4b4:1859:774:15c0) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[12:02:37] *** Joins: ponies (~ponies@203.111.95.26)
[12:04:34] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[12:04:47] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 240 seconds)
[12:06:10] *** Quits: unary (unary@ternary.ca) (Ping timeout: 240 seconds)
[12:06:27] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[12:06:53] *** Joins: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi)
[12:06:53] *** Quits: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi) (Changing host)
[12:06:53] *** Joins: hendrix (~hendrix@user/hendrix)
[12:07:18] *** Joins: unary (unary@ternary.ca)
[12:08:56] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:10:50] *** Joins: Mo (~Mo@dynamic-095-112-253-179.95.112.pool.telefonica.de)
[12:11:51] *** Joins: lq820105 (~lq@210.72.8.209)
[12:13:03] *** Joins: earnestly (~earnest@user/earnestly)
[12:14:22] *** Quits: lq (~lq@180.167.42.5) (Ping timeout: 250 seconds)
[12:14:24] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[12:17:40] *** Quits: betelgeuse2 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[12:18:22] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[12:19:03] *** Quits: ano (~weechat@user/ano) (Quit: ano)
[12:19:23] *** Joins: ano (~weechat@user/ano)
[12:21:26] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-60.prtc.net)
[12:23:01] *** Quits: ano (~weechat@user/ano) (Client Quit)
[12:25:00] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[12:25:24] *** Joins: ano (~weechat@user/ano)
[12:27:01] *** Quits: ano (~weechat@user/ano) (Client Quit)
[12:28:06] *** Joins: ano (~ano@user/ano)
[12:30:34] *** Quits: ano (~ano@user/ano) (Client Quit)
[12:33:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:35:17] *** Joins: lavaball (felix@31.204.155.215)
[12:36:15] *** Joins: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5)
[12:36:43] <mihael> I have a command that returns a JSON array and when looping through it, it literally includes the '[' and ']'. How do I have bash parse it properly?
[12:37:03] <Soliton> !jq
[12:37:04] <greybot> jq is a flexible and lightweight JSON processor: http://stedolan.github.com/jq/ . See #jq. Also, query JSON data with jshon: http://kmkeen.com/jshon/
[12:37:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:37:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:40:10] <mihael> I tried piping it to jq with $(command | jq -r .) but also includes the [ and ] in the array
[12:40:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[12:40:26] <mihael> I might be parsing it wrong though
[12:40:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[12:40:55] <Soliton> what do you want to do with the array?
[12:42:14] <mihael> I loop right through it and run commands using it as an argument
[12:42:17] <twkm> bash doesn't handle json itself, so there's no javashit like arrays, only bash arrays.  you need to decide how to map the former to the latter, which jq can do via more than the "make it pretty json" you asked for.
[12:42:51] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[12:43:10] <mihael> the return of the command is like [ "asdsaf", "asdfasdf", "asdfasdf" ], how do I parse it with jq so that bash will consider only the string elmeents as the value of the array?
[12:44:14] <Soliton> # eval "array=($(jq -r @sh <<< '[ "foo", "bar", 42 ]'))"; declare -p array
[12:44:16] <shbot> Soliton: declare -a array=([0]="foo" [1]="bar" [2]="42")
[12:46:46] <mihael> I tried declare -a buckets =$(aws s3api list-buckets \ --query "Buckets[].Name" | jq -r .) but when looping through it, the [ and ] are considered as elements of the array
[12:47:06] <twkm> naturally.
[12:47:11] <Soliton> your jq call does nothing.
[12:47:27] <twkm> it isn't like you asked jq to transform json syntax to shell syntax.
[12:47:42] <twkm> . means, effectively, "make it pretty".
[12:48:07] <mihael> Ah I see,
[12:48:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:48:25] *** Joins: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de)
[12:48:28] <Soliton> eval "buckets=($(aws s3api list-buckets --query "Buckets[].Name" | jq -r @sh))"
[12:48:37] <twkm> you might want what Soliton showed.  also there's a #jq.
[12:49:15] <mihael> Soliton that worked, thanks
[12:49:36] <mihael> I should really dig deeper into jq, it's my first time seeing the 
[12:49:48] <mihael> '@sh'. Thanks again Soliton twkm
[12:50:54] *** Joins: kurahaupo (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au)
[12:53:29] *** Quits: kurahaupo_ (~kurahaupo@58.84.89.180) (Ping timeout: 248 seconds)
[12:54:57] *** Joins: Gamma (~Gamma@zsh/user/Gamma)
[12:57:08] *** Joins: ano (~ano@user/ano)
[12:59:23] *** Joins: Atque (~Atque@user/atque)
[13:00:54] *** Quits: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5) (Quit: Client closed)
[13:04:31] *** Quits: Gothiclown (uid512238@id-512238.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[13:06:29] *** Quits: lq820105 (~lq@210.72.8.209) (Ping timeout: 250 seconds)
[13:09:10] *** Joins: lq (~lq@210.72.8.204)
[13:09:28] *** Quits: rkta (~kt@62.113.246.111) (Read error: Connection reset by peer)
[13:09:42] *** Joins: rkta (~kt@62.113.246.111)
[13:09:45] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:09:52] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[13:10:04] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:12:23] *** Joins: Lutine_ (~Lutin@lfbn-lyo-1-1349-50.w86-207.abo.wanadoo.fr)
[13:12:37] *** Joins: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[13:13:25] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[13:14:18] *** Joins: xx (~xx@user/xx)
[13:15:25] *** Quits: Lutin (~Lutin@user/lutin) (Ping timeout: 252 seconds)
[13:18:38] *** Quits: dre (~dre@2001:8003:c932:c301:f2dc:20c8:e2c8:6a40) (Quit: Leaving)
[13:21:32] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:23:28] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[13:38:15] *** Quits: jrofd (~test@185.198.243.174) (Quit: Leaving)
[13:38:28] *** Joins: jrofd (~test@185.198.243.174)
[13:38:47] *** Quits: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[13:39:10] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:39:11] *** Quits: jrofd (~test@185.198.243.174) (Client Quit)
[13:39:29] *** Joins: jrofd (~test@185.198.243.174)
[13:40:57] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[13:46:34] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:49:18] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[13:51:27] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[13:52:17] *** Quits: uzee (~uzee@86.36.37.198) (Quit: Leaving)
[13:57:05] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[13:57:33] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[13:57:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:00:27] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[14:02:09] *** Joins: minted (~minted@user/qzulu)
[14:04:26] *** Quits: minted (~minted@user/qzulu) (Remote host closed the connection)
[14:07:33] *** Joins: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de)
[14:08:05] *** Joins: Karatsuba (~jamer05@user/jamer05)
[14:08:19] <Karatsuba> hi
[14:19:51] *** Joins: lousiF (~lousiF@user/lousif)
[14:26:08] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[14:30:16] *** Joins: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5)
[14:31:15] *** Joins: selckin (~selckin@user/selckin)
[14:33:02] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:35:10] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:35:12] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:35:39] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:35:41] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:36:09] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:36:11] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Max SendQ exceeded)
[14:36:38] *** Joins: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp)
[14:36:40] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 240 seconds)
[14:36:47] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[14:37:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[14:38:05] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:38:06] *** Quits: zxd (~zxd@2a00:a040:195:d0a6:55e7:d582:f3a3:a45) (Quit: Client closed)
[14:40:19] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[14:41:49] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[14:43:26] *** Quits: kurahaupo (~kurahaupo@pa49-195-177-144.pa.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[14:44:16] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[14:48:45] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[14:49:11] <drd> !qefs
[14:49:11] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[14:49:52] *** Joins: lq820105 (~lq@210.72.8.210)
[14:50:18] *** Joins: keypusher (~keypusher@user/keypusher)
[14:50:22] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-60.prtc.net) (Ping timeout: 246 seconds)
[14:51:43] *** Quits: lq (~lq@210.72.8.204) (Read error: Connection reset by peer)
[14:52:07] *** Quits: ogis_ (~Android@neoau1-133-202-120-36.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[14:52:15] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[14:52:32] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[14:52:36] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[14:53:04] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[14:54:40] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 240 seconds)
[14:54:41] *** Joins: keypushe- (keypusher@user/keypusher)
[14:54:41] *** Joins: manin (~X@185.242.190.95)
[14:57:56] *** keypushe- is now known as keypusher
[15:00:55] *** Quits: mihael (~mihael@2001:4454:2cd:8b00:a0f5:6c2b:7d6d:fcc5) (Quit: Client closed)
[15:01:19] *** Quits: Bhavuk (~BTaneja@122.173.27.78) (Quit: Leaving)
[15:17:34] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[15:18:04] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 252 seconds)
[15:18:31] *** Joins: Enissay (~Enissay@user/enissay)
[15:25:54] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[15:27:37] *** Quits: nobody_ (~nobody@host-79-46-246-104.retail.telecomitalia.it) (Ping timeout: 248 seconds)
[15:29:06] *** Joins: seninha (~seninha@user/seninha)
[15:30:04] *** Joins: manin (~X@185.242.190.95)
[15:32:47] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:32:57] *** Quits: roadt__ (~roadt@117.64.147.227) (Ping timeout: 250 seconds)
[15:32:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:37:47] *** Quits: amatz (~thavin@49.49.244.37) (Ping timeout: 240 seconds)
[15:43:22] *** Quits: Karatsuba (~jamer05@user/jamer05) (Ping timeout: 252 seconds)
[15:46:05] *** Joins: Dotz0cat_ (~Dotz0cat@h53.242.19.98.static.ip.windstream.net)
[15:46:14] *** Joins: roadt__ (~roadt@60.166.84.108)
[15:46:16] *** Quits: Dotz0cat (~Dotz0cat@h171.71.29.71.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[15:46:20] *** Joins: vinosec (~vinosec@user/vinosec)
[15:46:24] *** Joins: gnoo_ (~gnoo@user/gnoo)
[15:46:51] *** Dotz0cat_ is now known as Dotz0cat
[15:50:10] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[15:50:42] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[15:56:09] *** Quits: furrymcgee (~devuan@31.179.186.66) (Remote host closed the connection)
[15:57:22] *** Joins: besnn (~besnn@user/besnn)
[15:58:46] *** Joins: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk)
[16:00:58] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[16:01:44] *** Quits: ponies (~ponies@203.111.95.26) (Quit: Lost terminal)
[16:02:02] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[16:02:52] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:06:08] *** Quits: gnoo_ (~gnoo@user/gnoo) (Remote host closed the connection)
[16:06:15] *** Joins: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt)
[16:06:30] *** Joins: gnoo_ (~gnoo@user/gnoo)
[16:08:07] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 252 seconds)
[16:09:16] *** Joins: legola (~legola@46.235.100.27)
[16:11:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:16:09] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 248 seconds)
[16:20:29] *** Quits: op0x0f05 (uid512716@id-512716.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[16:20:47] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[16:22:55] *** Joins: amatz (~thavin@49.49.244.37)
[16:23:36] <CrtxReavr> I assume there's a perhaps an awk routine to set the target_dir variable here?: https://bpa.st/PIUQ
[16:24:33] <Soliton> !awk
[16:24:33] <greybot> Check the topic of #awk and also http://www.grymoire.com/Unix/Awk.html -- awk questions belong to #awk. Note: If you are piping through more than one (grep|sed|awk), you're likely doing it wrong.
[16:27:03] *** Joins: riskoir (~karaixx@148.87.23.5)
[16:28:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:28:53] <riskoir> I have a message in some logs that looks like this: "Total used: 123 bytes. Total consumed: 248 bytes" What's the easiest way to extract 123 and 248 to bash variables? 
[16:29:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:29:41] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:30:51] <Soliton> !faq 1
[16:30:51] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[16:33:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:33:29] *** Joins: manin (~X@185.242.190.95)
[16:35:16] *** Joins: frostwork (~frostwork@user/frostwork)
[16:37:35] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:38:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:42:20] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:47:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[16:51:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[16:52:34] *** Joins: nobody_ (~nobody@host-79-46-246-104.retail.telecomitalia.it)
[16:52:47] *** Parts: amatz (~thavin@49.49.244.37) (WeeChat 3.2)
[16:55:43] *** Quits: Mo (~Mo@dynamic-095-112-253-179.95.112.pool.telefonica.de) (Ping timeout: 250 seconds)
[16:56:28] *** Joins: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[16:56:30] *** Quits: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Max SendQ exceeded)
[16:56:57] *** Joins: ogis_ (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[16:57:00] *** Quits: ogis_ (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Max SendQ exceeded)
[16:57:27] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:57:34] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[16:58:06] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:58:07] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Max SendQ exceeded)
[16:58:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[16:58:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:58:35] *** Joins: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[16:58:43] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 252 seconds)
[16:59:02] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[16:59:37] *** Quits: dsrt^ (~dsrt@12.16.129.111) (Ping timeout: 250 seconds)
[16:59:40] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 240 seconds)
[17:00:06] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[17:02:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:05:29] *** Joins: diamondbond (~diamondbo@175.157.119.87)
[17:06:07] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[17:07:27] *** Joins: furrymcgee (~devuan@31.179.186.66)
[17:07:31] *** Quits: jrofd (~test@185.198.243.174) (Ping timeout: 252 seconds)
[17:07:50] *** Joins: ogis (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[17:08:08] *** Quits: ogis (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[17:08:34] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[17:08:47] *** Joins: gtz (~gtz@185.12.215.241)
[17:10:17] *** Joins: besnn (~besnn@user/besnn)
[17:10:34] <gtz> I have a script that does little other than launching a subshell followed by the ampersand command. It appears to me that the shell wait for the subshell to finish even though I give the ampersand command. Can this happen under any circumstance?
[17:10:50] <gtz> s/command/character
[17:11:10] *** Quits: ogis_ (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Ping timeout: 240 seconds)
[17:11:38] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 250 seconds)
[17:12:20] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[17:13:54] *** Joins: kill (~killown@user/killown)
[17:15:02] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:15:23] <Soliton> what makes you think the shell is waiting?
[17:15:47] <gtz> I can see the process listed when I run "ps" and until the caller kills it.
[17:18:52] *** Joins: laibach (~laibach@2404:e801:2001:579:a9d8:be03:5572:5561)
[17:19:40] <gtz> I must be doing something stupid
[17:20:24] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[17:20:49] *** Joins: jrofd (~test@185.198.243.174)
[17:21:33] *** Joins: thiras (~thiras@user/thiras)
[17:22:03] *** Joins: earendel (uid498179@user/earendel)
[17:22:53] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:24:46] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:25:16] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[17:25:35] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[17:27:19] *** Quits: jrofd (~test@185.198.243.174) (Ping timeout: 252 seconds)
[17:31:31] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:98ef:b39c:3fde:debc)
[17:31:31] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:98ef:b39c:3fde:debc) (Changing host)
[17:31:31] *** Joins: skapata (~Skapata@user/skapata)
[17:32:17] <Soliton> well, what's the issue? surely seeing the background process listed with ps is not it.
[17:36:15] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[17:40:14] *** Joins: user217_ (~andrii@68.183.215.143)
[17:40:47] *** Joins: jrofd (~test@185.198.243.174)
[17:41:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 240 seconds)
[17:43:56] *** Joins: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp)
[17:43:57] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Read error: Connection reset by peer)
[17:44:12] *** Quits: ogis_ (~Android@neoau1-133-203-99-62.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[17:44:38] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[17:44:43] *** Joins: binary01 (~binary01@192.110.171.216)
[17:47:42] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[17:47:59] *** Joins: tangy (tangy@user/tangy)
[17:49:11] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:49:31] *** Quits: laibach (~laibach@2404:e801:2001:579:a9d8:be03:5572:5561) (Quit: WeeChat 3.2)
[17:50:23] *** Joins: zenloading (~zenloadin@user/zenloading)
[17:52:12] *** Joins: n4dir (~user@mue-88-130-57-116.dsl.tropolys.de)
[17:54:58] *** Quits: diamondbond (~diamondbo@175.157.119.87) (Quit: Leaving)
[17:56:55] *** Joins: roadie (~user@2a02:8108:ec0:1427:20c5:d7fa:fcce:f864)
[17:57:50] *** Joins: jmd (~user@de.cellform.com)
[17:58:27] *** Quits: Dotz0cat (~Dotz0cat@h53.242.19.98.static.ip.windstream.net) (Ping timeout: 240 seconds)
[18:01:42] *** Joins: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr)
[18:03:21] *** Joins: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[18:04:40] *** Quits: juhop (~anon@192.3.81.147) (Ping timeout: 268 seconds)
[18:04:42] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[18:04:57] *** Joins: afernandez (~Wiilliam@12.187.181.32)
[18:05:46] *** Joins: legola (~legola@46.235.100.27)
[18:06:30] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:06:31] *** Quits: afernandez (~Wiilliam@12.187.181.32) (Client Quit)
[18:09:09] *** Quits: gnoo_ (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[18:09:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:10:08] *** Quits: legola (~legola@46.235.100.27) (Ping timeout: 250 seconds)
[18:11:02] *** Joins: juhop (~anon@192.3.81.147)
[18:15:48] *** Joins: touraine (~igloo@109.131.229.44)
[18:17:01] *** Quits: touraine (~igloo@109.131.229.44) (Remote host closed the connection)
[18:18:24] <yates_home> when in a bash shell, and a string e.g. "ls" is typed followed by <enter>, what program does bash use to load the dynamic executable ls?
[18:19:04] <autopsy> yates_home it uses ld.so and then libc.so.6
[18:19:28] *** Joins: Guest58 (~Guest58@2603-8081-7201-5984-291c-0428-f0ec-bf30.res6.spectrum.com)
[18:19:43] <emanuele6> it first does a path lookup
[18:19:44] <yates_home> so bash itself is dynamically linked to ld.so?
[18:20:04] <yates_home> autopsy: ^^^^
[18:20:21] <autopsy> emanuele6 a path lookup using what, its own machine code?
[18:20:42] <autopsy> yates_home ldd.
[18:21:35] *** Quits: user217_ (~andrii@68.183.215.143) (Quit: Konversation terminated!)
[18:21:46] *** Joins: gnoo_ (~gnoo@user/gnoo)
[18:22:31] <autopsy> yates_home https://medium.com/meatandmachines/what-really-happens-when-you-type-ls-l-in-the-shell-a8914950fd73
[18:23:47] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:24:39] *** Quits: Guest58 (~Guest58@2603-8081-7201-5984-291c-0428-f0ec-bf30.res6.spectrum.com) (Quit: Client closed)
[18:25:55] *** Quits: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk) (Quit: Leaving)
[18:27:25] *** Quits: jsrnop1 (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[18:27:44] *** Joins: jsrnop1 (~mark@user/jsrnop)
[18:27:44] *** jsrnop1 is now known as jsrnop
[18:28:51] <Soliton> # strace -ff -e process bash -c ls
[18:28:52] <emanuele6> autopsy: you mean bash's code? yes, see the findcmd.c source file
[18:29:05] *** Joins: legola (~legola@46.235.100.27)
[18:29:10] <shbot> Soliton: execve("/bin/bash", ["bash", "-c", "ls"], 0x7fff25dc2808 /* 13 vars */) = 0
[18:29:10] <shbot> Soliton: arch_prctl(ARCH_SET_FS, 0x7fa63da27740) = 0
[18:29:10] <shbot> Soliton: etc... ( http://ix.io/3x1c )
[18:30:56] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[18:31:08] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[18:32:35] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[18:33:34] <autopsy> I wrote a small C program that iterates through memory reading and printing it out for each byte and incrementally the next byte and what it ends up doing is getting into the shell's 'env' data prints it and walks up to the last _=env then prints the damn executables name [345] ./memtest [0x77ef115239]
[18:33:36] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:33:39] <autopsy> Then segfaults
[18:33:40] *** Joins: greycat (~greg@209.142.155.49)
[18:33:59] <autopsy> Thats pretty close to shell code escalation status.
[18:34:27] <Soliton> what's shell code escalation?
[18:34:50] <autopsy> Well. Shell code. Execution privilege escalation.
[18:35:06] <autopsy> Its like an escaltor Soliton 
[18:35:11] <autopsy> Escalator
[18:35:35] <Soliton> so you wrote a program that reads its environment and tries to read memory it isn't allowed to and that has what to do with a shell?
[18:35:39] <autopsy> Its like an ice cream without the i and c.
[18:35:56] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:36:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[18:36:19] <autopsy> I'm not sure actually. Its fine that it does do what I intended though as I'm new to programming.
[18:37:18] <autopsy> I didn't know the memory space that was chosen began like 1024 bytes right before the shell's environment data block.. s and then it seg faults for some reason unknown to me.. but this is #bash not #C sorry.
[18:37:34] <autopsy> I'm in BitchX trying to decipher the channel I'[m in.
[18:37:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:37:45] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:37:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[18:38:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:38:31] <greycat> ... *plonk*
[18:38:40] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[18:38:44] <autopsy> Hey Soliton is there any chance I could come across the code that shbot is comprised of? Is it free and clear and GNU too?
[18:38:54] <Soliton> !shbot
[18:38:55] <greybot> shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[18:39:28] <autopsy> Oh. Wow thats awesome.
[18:39:44] <autopsy> Well I surely appreciate it. Anyhow.
[18:40:43] <autopsy> I thought he said he was a meat eater and would not put up with poeple playing with the bot.
[18:42:09] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[18:43:46] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[18:44:33] <autopsy> Thats cool. I'm sure so much work went into coding shbot.
[18:45:19] <autopsy> It would be a short tragedy to lose the code he is made of or she.. you know.. just trying to include everyone in this game of life.. as it is a transvestite I guess.
[18:48:26] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[18:50:18] *** Joins: WinterStar (~IceLight@user/icelight)
[18:54:22] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[18:56:17] *** Quits: vinosec (~vinosec@user/vinosec) (Quit: WeeChat 3.2)
[18:56:36] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[18:57:50] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[18:59:10] *** Joins: afernandez (~Wiilliam@12.187.181.32)
[19:01:55] *** Quits: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[19:04:29] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:05:23] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:05:36] <yates_home> autopsy: i see no ld.so here: http://paste.debian.net/1209159/
[19:07:18] <emanuele6> yates_home: lib64/ld-linux-x86-64.so.2
[19:07:41] <emanuele6> read `man 8 ld.so`
[19:08:58] *** Joins: toad-x (~quassel@31.223.78.243)
[19:12:01] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:14:58] *** Joins: superboot (~agentgasm@user/superboot)
[19:18:04] *** Joins: et_ (~et@user/et)
[19:18:10] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[19:18:58] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[19:18:58] *** et_ is now known as et
[19:20:19] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[19:23:58] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Quit: leaving)
[19:25:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[19:25:13] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:25:13] *** Quits: djph (~dpurgert@cpe-107-10-244-220.neo.res.rr.com) (Ping timeout: 258 seconds)
[19:26:17] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:26:33] *** Joins: binary01 (~binary01@192.110.171.216)
[19:26:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:30:50] *** Joins: sinaowolabi (~SinaOwola@160.152.6.58)
[19:32:35] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 250 seconds)
[19:32:46] *** Joins: r00t|work (~r00t@82-198-216-115.briteline.de)
[19:33:53] *** Joins: richardm75 (~richardm7@2600:8801:c507:2900:c8a3:b2d2:c09d:7762)
[19:34:50] *** Joins: zebrag (~chris@user/zebrag)
[19:35:17] <FreeBDSM> suppose I have text '.envs' file with var=value pairs and would like to export all of them (as envs). Is there anything better than `while read -r line; do ...; done <<< $(cat .envs)` approach with some extra parsing inside?
[19:35:36] <greycat> set -a; source ./.env; set +a
[19:35:36] <Soliton> !<<<$(
[19:35:37] <greybot> This creates a temporary file and dumps the entire output of the command substitution into it before beginning execution of any command that reads from the herestring. It is almost always a useless construct. You probably want to use a simple pipe instead unless you have some specific reason for wanting this. A proper equivalent is < <(
[19:35:50] *** Joins: blingrang (~blingrang@user/blingrang)
[19:36:04] <greycat> or are you saying the file can't be sourced because of internal whitespace in the values?
[19:36:33] <FreeBDSM> greycat: not sure yet, so spaces are a problem?
[19:36:47] <greycat> They completely change the approach you must use.
[19:36:50] *** Joins: djph (~dpurgert@cpe-107-10-244-220.neo.res.rr.com)
[19:36:57] <Soliton> the question is if this file uses shell syntax or not.
[19:37:11] <FreeBDSM> I don't have the file yet
[19:37:19] <greycat> parentheses and & and so on will also be a problem if you're sourcing it
[19:37:53] <FreeBDSM> 99% of the time there won't be any spaces, not to even mention & and other shell-related stuff
[19:38:10] <greycat> so 1% of the time there WILL be?
[19:38:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[19:38:41] <FreeBDSM> don't know yet. What if I will need some spaces for a value? won't declaring `myvar="double quoted"` help?
[19:38:56] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[19:39:06] *** Joins: hentai (~hentai@user/hentai)
[19:39:14] <greycat> You're asking us to solve TWO completely separate problems for you, just in case your future you gets a different input file.
[19:39:52] <hentai> What is the best way to query for the presence of lm flag in /proc/cpuinfo?
[19:40:37] <greycat> given that this file only exists on Linux, you can probably assume GNU grep will be available, so grep -w or something.
[19:40:40] <hentai> (using bash, avoiding non-coreutils dependencies)
[19:40:47] <greycat> ...
[19:41:03] <greycat> YOU SEE WHY I GET UPSET?!?!
[19:41:08] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Quit: Client closed)
[19:41:15] <FreeBDSM> greycat: no, I'm asking about caveats on the way to choose. As with most solutions, I have to at least think about future, not always solve the problem I have right here and now.
[19:41:42] <greycat> FreeBDSM: it's not about "caveats".  The format of the input file DETERMINES THE ENTIRE APPROACH you use.
[19:41:53] <greycat> If the input format changes, you have to THROW AWAY YOUR SCRIPT AND START OVER.
[19:41:53] <hentai> greycat, This is similar to my current solution using sed. I wondered if there are more "proper" ways to query whether the CPU supports long mode from bash
[19:42:01] *** Joins: blingrang_ (~blingrang@user/blingrang)
[19:42:07] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[19:42:09] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[19:42:19] <FreeBDSM> greycat: that's exactly what I need to know: possible approaches and the limitations they imply
[19:42:42] <FreeBDSM> "values spaces are a problem, avoid them and then you're fine with just `set -a; source ./.env; set +a`" -is an okay answer
[19:42:47] <greycat> I AM NOT GONIG TO SOLVE EVERY FUCKING SHELL PROBLEM FOR YOU SO YOU CAN DROP THE RIGHT ONE IN LATER
[19:42:50] <greycat> *PLONK*
[19:43:03] <FreeBDSM> you definitely have rage problems
[19:43:14] <FreeBDSM> too much capslock out from nowhere
[19:43:41] <hentai> Sorry, should have probably asked the question in #linux
[19:44:33] <FreeBDSM> I don't think so, it's purely shell-related
[19:45:09] <FreeBDSM> the systems will 'communicate' (one directional, happening once per deploy of the system) via a file
[19:45:28] <greycat> hentai: what is your *actual* set of restrictions?
[19:45:28] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:45:38] <FreeBDSM> I can organize it as JSON or whatever, I just thought that the simplest form would be `var=value`
[19:45:43] *** Joins: binary01 (~binary01@192.110.171.216)
[19:46:06] <emanuele6> FreeBDSM: you said there is whitespace between key and value
[19:46:17] <FreeBDSM> for now I don't have any values with spaces, but hell, that's not something quite out of touch to imagine I might need one day
[19:46:29] *** Joins: austin987 (~null@100.42.98.196)
[19:46:37] <emanuele6> ...
[19:46:53] *** Joins: zeden (~zeden@user/zeden)
[19:46:59] <emanuele6> why?
[19:47:35] <hentai> greycat, I don't trust /proc/cpuinfo to always be the same format, as such, I am asking whether there are more stable ways to determine whether the CPU supports long mode. However, I realized that this has hardly anything to do with bash, and I probably should move this questions to a different channel
[19:47:59] <djph> grep 'lm' /proc/cpuinfo
[19:47:59] <greycat> Is he still asking you to write every conceivable variant of the "I have a file and I want to create env variables from its content" problem for him, because he can't just fucking ask the other person what the file's format is?
[19:48:00] <FreeBDSM> emanuele6: for example I might need to pass a set of separate args as JAVA_OPTS env
[19:48:04] <emanuele6> FreeBDSM: why would you one day need to use `var = value` instead of `var=value`?
[19:48:10] <djph> if it's not listed, then the cpu doesn't support long mode
[19:48:42] <greycat> djph: what happens if the word "Palm" appears in some other part of the file?
[19:48:51] <hentai> djph, ^
[19:48:54] <FreeBDSM> emanuele6: no, I mean I would use `JAVA_OPTS="-Djava.security.krb5.conf=/etc/kafka/krb5.conf -Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"`
[19:49:08] <greycat> hentai: it's totally on topic here if we can just figure out what your restrictions are
[19:49:18] <emanuele6> FreeBDSM: then why is that not source-able?...
[19:49:25] <emanuele6> i see quotes
[19:49:46] <greycat> I gave an answer for what I thought was a totally rational set of restrictions given the nature of the input and then you sliced it apart by saying you didn't want ANY non-coreutils tools to be used...
[19:49:49] <FreeBDSM> emanuele6: I didn't claim it was not, I asked if that is a problem and by space I meant a space in value, not around equals sign
[19:49:58] <greycat> But *why* do you have that restriction?
[19:50:17] <hentai> greycat, Not much - needs to work on most lsb systems, and be at least somewhat future-proof
[19:50:20] <djph> greycat: that'd be in terestin gto ... oh crap ... 'grep -w lm [...]' (cue portability issues).
[19:51:02] <greycat> I proposed grep -w
[19:51:24] <djph> yeah, I think my IRC died for a bit here ; sorry
[19:51:45] <FreeBDSM> emanuele6: I get it that it's not a problem if the value will have a space if it is wrapped with double quotes?
[19:52:04] <emanuele6> !source > FreeBDSM 
[19:52:04] <greybot> FreeBDSM: ''. scriptname''99,99 (or ''source scriptname''99,99, which is not portable) reads and executes the commands from scriptname99,99 in the current99,99 shell, as opposed to a separate instance of the shell. If scriptname99,99 does not contain a slash (/), it will be searched for in $PATH.
[19:52:15] <greycat> hentai: You could ask ##linux how many distributions lack GNU grep, but I imagine it will be what you end up with.  It's *extremely* likely to be present.
[19:52:28] <FreeBDSM> !set -a
[19:54:25] <FreeBDSM> how to invoke a manual page where I could read about 'set -a' ?
[19:54:48] <llua>  man bash
[19:54:58] <brelod> FreeBDSM: or you can use `help test`
[19:55:31] <llua> so, like, ignore that person.
[19:55:31] <emanuele6> brelod: no
[19:55:32] <FreeBDSM> brelod: I think it's not about test / [[
[19:55:48] <emanuele6> help set
[19:55:57] <brelod> oh sorry. `help set` (dunno why I typed test...)
[19:55:58] <hentai> greycat, I absolutely expect grep, but my concern is whether it is sufficient. My current solution is `grep -E 'flags.*:.* lm( |$)' /proc/cpuinfo`
[19:55:59] <FreeBDSM> thanks
[19:56:02] <greycat> if for some reason you *really* want to target POSIX grep, it would be something like   grep -E '^flags.* lm( |$)'
[19:56:11] *** Quits: toad-x (~quassel@31.223.78.243) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:56:25] <emanuele6> is /proc/cpuinfo posix?
[19:56:28] <greycat> no
[19:56:34] <hentai> But I have a gut feeling that /proc/cpuinfo can break, and as such, want to know whether more reliable ways can be found
[19:56:54] <emanuele6> hentai: /proc/cpuinfo is not posix
[19:56:55] <hentai> I only target LSB
[19:57:19] <greycat> so you're just a paranoid nut... fine, use the POSIX grep answer
[19:57:22] <hentai> So being very posix compliant is not needed. Also I target at least coreutils and bash
[19:57:38] *** Joins: SuperLag (~akulbe@user/superlag)
[19:58:37] <FreeBDSM> man has weird wording: `-a  Mark variables which are modified or created for export.` mark? mark for what?
[19:58:47] <hentai> As I said, I realized that this question does not relate to bash, but to whether there are any way to get this info on linux, other than parsing /proc/cpuinfo
[19:59:18] <FreeBDSM> I interpret this option as `your sources shell script doesn't need to have 'export ' prefix before vars to export them`
[19:59:32] <FreeBDSM> sourced*
[19:59:41] <hentai> But, maybe I worry too much, and my solution won't break in the foreseeable future
[19:59:58] <hentai> Thank you for your proposals. Good bye
[20:00:12] <FreeBDSM> hentai: that's a common problem: to foresee future
[20:01:29] <djph> hentai: I missed it -- but why do you care if the architecture is 64 bit or not?
[20:02:12] <hentai> djph, I care whether the platform supports 64, even if it's currently running 32-bit kernel
[20:02:20] *** Joins: clime (~clime@37-48-8-143.nat.epc.tmcz.cz)
[20:03:18] <Soliton> FreeBDSM: mark for export. it say it right there.
[20:03:24] <djph> hentai: okay ... so the end goal is double checking you didn't make an oops and installed i386 on a 64bit CPU?
[20:03:28] <hentai> So I can suggest to user as to whether he wants to unpack a 64-bit or 32-bit rootfs. Given that the end-user here isn't expected to know what rootfs is, I find it important
[20:04:12] <djph> hentai: um ... if the kernel is 32-bit ... you cannot use 64-bit anything, by definiton.
[20:04:40] <hentai> djph, But, we are going to change the kernel with this script
[20:04:47] <djph> err
[20:05:00] <djph> you kinda have to reinstall the entire thing from scratch ... 
[20:05:12] <hentai> djph, Exactly the whole purpose of my script
[20:05:43] <hentai> I am unpacking a 64-bit rootfs, compile a 64-bit kernel, and reboot
[20:05:46] <djph> hentai: no, I mean you need to go get the 64bit installation media for $distro
[20:05:56] <djph> anyway, have fun with the attempts
[20:06:22] <greycat> seemed pretty clear they're the one *writing* the installation medium
[20:06:23] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[20:06:39] <hentai> All that covered in sanity checks and additional features to make life easier for the end user
[20:07:13] *** Joins: r00t^ (~foobar@ip4d16cd89.dynamic.kabel-deutschland.de)
[20:07:20] <greycat> anyway, given that you're writing an OS installer, you are the one choosing the kernel, so you would be the one to know if its /proc/cpuinfo pseudo-file "breaks" in some bizarre way
[20:07:42] <hentai> However, the script is intended to be run from most existing Linux distributions, and this distribution just might happen to be 32-bit while running on a 64-bit capable platform
[20:08:07] <greycat> oh, not a from-scratch installer -- a "debootstrap" type installer
[20:08:14] <thebombzen> how do you embed ! in a string? quoting doesn't appear to work
[20:08:17] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[20:08:22] <greycat> quotes
[20:08:22] <ormaaj> https://github.com/mgorny/cpuid2cpuflags
[20:08:46] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[20:08:51] <greycat> # echo 'foo|bar'
[20:08:52] <shbot> greycat: foo|bar
[20:08:59] <thebombzen> that's an exclamation point, not a pipe
[20:09:06] <hentai> I know that checking for lm flag is not a guarantee of being 64-bit capable, but I also check dmidecode and some other internals for signs of it.
[20:09:09] <greycat> !!
[20:09:09] <greybot> event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand (set +H) to disable it, and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
[20:09:18] <FreeBDSM> Soliton: thanks, I just didn't like wording. IMO `export all newly created or modified variables` sounds simpler.
[20:09:19] <thebombzen> $ printf "Hello World!\n" <- this fails with: bash: !\n: event not found
[20:09:31] <emanuele6> even expansion occurs in double quotes, but not in single quotes
[20:09:36] <neshpion> # printf 'Hello World!\n'
[20:09:37] <shbot> neshpion: Hello World!
[20:09:37] <emanuele6> or if you use \!
[20:09:44] *** Quits: Bit_MCP (~Bit_MCP43@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 250 seconds)
[20:09:45] <greycat> or if you turn of histexpand
[20:09:48] <greycat> off*
[20:09:49] <hentai> greycat, I am the one compiling the *NEW* kernel, but the script is to run on *OLD* kernel which I can't make much assumptions about
[20:10:03] <thebombzen> I mean in this case single quotes works, but I'd like to be able to expand a parameter in the same line without hte uglines that is "'!'"
[20:10:08] <greycat> !!
[20:10:08] <greybot> event not found -- These errors only happen in *interactive* shells when you run commands with ! in them with history expansion enabled. Run set +o histexpand (set +H) to disable it, and put it in your ~/.bashrc to disable it in future shell sessions, too. Regardless, it won't affect scripts.
[20:10:45] <neshpion> # printf "Hello World\!\n"
[20:10:46] <shbot> neshpion: Hello World\!
[20:10:50] <neshpion> :O
[20:11:02] <greycat> That's why so many of us disabled histexpand.  With prejudice.
[20:11:16] <greycat> More recent versions of bash "fixed" some of the cases, but not all.
[20:11:27] <greycat> But back in the 3.2 days?  Fucking hell, you couldn't get ANYTHING done.
[20:11:36] <neshpion> # var=yes; printf 'Hello world! %s is in my var...!\n' "$var"
[20:11:38] <shbot> neshpion: Hello world! yes is in my var...!
[20:11:42] <thebombzen> I see bash continues its strong philosophy of "it works until it doesn't"
[20:11:49] <hentai> ormaaj, I am aware of this, especially given that what I am doing is (don't laugh) a Gentoo installer :)
[20:12:04] <emanuele6> histexpand is good
[20:12:08] <greycat> "inventing debootstrap for Gentoo" apparently
[20:12:13] <greycat> I wonder if Gentoo already has one
[20:12:18] <emanuele6> gentoo
[20:12:21] <emanuele6> !gentoo
[20:12:21] <greybot> We do not care for derivation war!
[20:12:45] <thebombzen> is it considered a "bad idea" to edit /etc/bash.bashrc instead of ~/.bashrc
[20:12:55] <hentai> greybot, They had an official one back in the days YouTube was an independent company
[20:13:10] <thebombzen> in this case I'm the only human user on the system, but i'm not sure if best practices are considered differently there
[20:13:10] <hentai> I doubt it was updated since :)
[20:13:32] <greycat> then why the hell can't you just edit .bashrc
[20:13:54] <hentai> thebombzen, Depends on what you want
[20:14:12] <thebombzen> in this case, set +o histexpand :)
[20:16:15] <autopsy> bash.bashrc is goo dto edit in case you want to deploy config.
[20:16:17] <autopsy> DEPLOY
[20:16:22] <autopsy> NOT EMPLOY
[20:16:40] <autopsy> EMPLOY: To be a served a config.
[20:16:41] <thebombzen> greycat: oh, I can, and I can edit both of them, just wondering if it's considered bad practice to edit /etc/bash.bashrc
[20:16:48] <greycat> Yes.
[20:17:32] <autopsy> I will be th efirst to say that is a lie. It really only matters if you're not already using -k /etc/skel
[20:17:45] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 248 seconds)
[20:17:51] <thebombzen> If it's bad practice, what is the recommended substitute for a single-user system? (meaning, just me and root basically)
[20:17:58] *** Quits: roadie (~user@2a02:8108:ec0:1427:20c5:d7fa:fcce:f864) (Ping timeout: 250 seconds)
[20:18:19] <thebombzen> cause I'd like this change to apply to the root interactive shell as well, should I just add it to ~root/.bashrc as well?
[20:18:40] <greycat> you aren't normally running a shell as root, and when you are, you aren't normally manipulating MP3 files with apostrophes and exclamation points in their filenames.
[20:18:43] <autopsy> It should be sourced as a useradd or adduser directive from /etc/skel
[20:18:48] <greycat> so there's no need to do this as anyone *but* yourself
[20:19:06] <autopsy> You don't even know the changes he could have some good ideas.
[20:19:15] <autopsy> SERIOUSLY WHO ARE YOU PEOPLE
[20:19:20] <autopsy> GET OUT OF HERE
[20:19:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:20c5:d7fa:fcce:f864)
[20:19:50] <autopsy> No wait.. let me get out of here.. there. There.
[20:20:21] <thebombzen> another question I'm wondering is the difference between .profile and .bash_profile
[20:20:36] <greycat> !dotfiles
[20:20:36] <greybot> Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
[20:20:45] <thebombzen> let me actually ask my question please
[20:20:54] <greycat> if .bash_profile exists, .profile won't be used, except by other shells of course
[20:21:02] <thebombzen> let me actually ask my question please
[20:21:18] <greycat> You stopped typing.  So a question was asked, and then we answered it.
[20:21:44] <autopsy> You guys want to be advocates of open source yet closed to ideas and such.. its not becoingin of a working community at all.
[20:21:55] <autopsy> This is why the COPS want you to STOP.
[20:22:08] <thebombzen> I'm aware that bash ignores .profile if .bash_profile is found, but what's standard practice to reconcile this difference on a system where someone has multiple login shells
[20:22:35] <autopsy> Multiple orgasms of course.
[20:22:52] <lopid> source .profile from .bash_profile?
[20:22:53] <thebombzen> I'm considering putting all shell-agnotsic code in .profile and then, inside .bash_profile, add a line [ -f ~/.profile ] && . ~/.profile
[20:22:54] <greycat> It's not "reconciliation".  It's a tool that lets you set up different profiles for different shells, in case you switch between them, or in case your HOME is shared by NFS across systems with different shells, etc.
[20:22:57] <autopsy> You get to muck around in your mess by yourself and nobody will help you when you explain.
[20:23:18] <jmd> thebombzen: How can a user have multiple login shells. Only one can be listed in /etc/passwd?
[20:23:28] <greycat> Imagine you have two computers.
[20:23:37] <neshpion> rich people
[20:23:49] <autopsy> Imagine you change shells using usermod.
[20:23:55] <autopsy> Root does thyat for you.
[20:23:58] <autopsy> Not YOU.
[20:24:06] <autopsy> YOU can execute /.bin/dash
[20:24:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:20c5:d7fa:fcce:f864) (Ping timeout: 240 seconds)
[20:24:12] <autopsy> Or /sbin/nash
[20:24:21] <autopsy> Or anythign /nick/a/tash
[20:24:29] <autopsy> To get mul;tiple shellsd.
[20:24:42] <autopsy> I can embed shells in shells and logout and exit when I see fit.
[20:25:01] <neshpion> but just because those are interactive shells doesn't make them your login shell
[20:25:17] <autopsy> What the hell do you think he's on a dumb terminal?
[20:25:27] <thebombzen> greycat: right, what I mean is, if there's code that I want to share between those scenarios is there a common idiom that people do with this
[20:25:27] <autopsy> A real BELL?
[20:25:43] <greycat> If you only have one computer (on this network), and if you don't switch shells frequently, then just pick one file and stick with it.
[20:25:58] <autopsy> You might source a third ~/.common/common.sh as a matterr of fact.
[20:26:03] <thebombzen> I sometimes switch to zsh to test something
[20:26:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-235.prtc.net)
[20:26:14] <autopsy> Yeah.
[20:26:15] <thebombzen> and all my crap borked in that case cause I just used .bash_profile
[20:26:21] <greycat> Congratulations, you're a special snowflake.  Now decide how you want to handle that.
[20:26:27] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 240 seconds)
[20:26:31] <autopsy> OK I WAS A Package maintainer for 6 years for RedHat I know what the hell you're doing.
[20:26:52] <thebombzen> okay greycat who shit in your cerial
[20:27:00] * lopid uninstalls redhat
[20:27:11] <autopsy> RedHat 7 sucks.
[20:27:19] * neshpion installs windows
[20:27:21] <thebombzen> if I ask if there's a common idiom to handle a specific scenario and you can just say "no, use what works"
[20:27:23] <autopsy> Its all about the RHEL IBM BLUE FED baby now.
[20:27:28] <thebombzen> why are you always such an ass
[20:27:38] <thebombzen> like every time
[20:27:39] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:27:54] <greycat> You did not MENTION a specific scenario until just now.
[20:28:11] <autopsy> I would create ~/.common/common.sh and source everything in it last from each   and every end point.
[20:28:35] <autopsy> SLOW like gasoline on rice.
[20:28:37] <neshpion> thebombzen: autopsy already said you could just source a completely different file for common settings, and source it in whichever *rc you want those settings in (as long as they actually are cross-shell settings)
[20:28:56] <FreeBDSM> is there any shorthand way to declare multiple vars with the same value? `like a=b=c="value"`
[20:28:57] <no_gravity> Python can output a timing file that has rows like this:
[20:28:57] <thebombzen> neshpion: autopsy is rambling about anything and everything so I'm just kind of ignoring them
[20:28:59] <no_gravity> import time:       129 |        129 | zipimport
[20:29:03] <autopsy> Actually meaingin you are unaware of what he wants.
[20:29:04] <neshpion> true
[20:29:12] *** Joins: LiftLeft (~LiftLeft@172.98.80.23)
[20:29:14] <no_gravity> Is there a bash tool to sort them by the numbers in the columns?
[20:29:28] <autopsy> cut grep awk sed
[20:29:30] <thebombzen> no_gravity: sort has a column separator
[20:29:39] <autopsy> tr sort head tail
[20:29:45] <jmd> no_gravity: It's nothing to do with bash, but there is the sort uility
[20:29:57] <greycat> Then you should have some understanding of why we're irritable and why we answer questions as we see them, rather than trying to divine that you are somehow STILL ASKING a question.
[20:30:00] <neshpion> FreeBDSM: you can mostly do that with arithmetic expressions using let, but not anything else
[20:30:02] <Soliton> !sort-k
[20:30:02] <greybot> To sort(1) on the second field: sort -k 2,2; This means "the sort key is field 2 only". sort -k 2 means "the sort key runs from the start of field 2 to the end of the line".
[20:30:03] <jmd> (from GNU coreutils)
[20:30:06] <neshpion> # let a=b=c=3; declare -p a b c
[20:30:08] <thebombzen> the command "sort" has -t for fiedseparator, and -k for key location
[20:30:08] <shbot> neshpion: declare -- a="3"
[20:30:08] <shbot> neshpion: declare -- b="3"
[20:30:08] <shbot> neshpion: declare -- c="3"
[20:30:15] <no_gravity> thebombzen: That sounds good, let me check it ...
[20:30:32] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[20:30:35] <FreeBDSM> neshpion: so not string?
[20:30:39] <FreeBDSM> strings*
[20:30:46] <neshpion> FreeBDSM: not that i know of
[20:30:55] <FreeBDSM> got it, thanks
[20:31:04] <thebombzen> greycat: you're always irritable
[20:31:09] <thebombzen> that's not a mystery
[20:31:50] <thebombzen> I have never seen you here answer a question respectfully without some sort of snide remark
[20:32:00] <thebombzen> it's getting rather old
[20:32:09] <greycat> *plonk*
[20:32:18] <ormaaj> chsh -s "$(shuf /etc/shells | head -n 1)"
[20:32:19] <ormaaj> live a little
[20:32:41] <greycat> 11:50  thebombzen> another question I'm wondering is the difference between 
[20:32:41] <greycat>                    .profile and .bash_profile
[20:32:41] <greycat> 11:50  greycat> !dotfiles
[20:32:57] <greycat> I don't see the snide remark there.  Maybe I typed it snidely or something.
[20:33:31] <thebombzen> was right here [2021-08-26_15:56:21] <greycat> Congratulations, you're a special snowflake.  Now decide how you want to handle that.
[20:35:20] *** Quits: clime (~clime@37-48-8-143.nat.epc.tmcz.cz) (Quit: WeeChat 3.2)
[20:37:27] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:39:53] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[20:39:59] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:41:01] *** Joins: SuperLag (~akulbe@user/superlag)
[20:41:32] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:41:44] *** Joins: binary01 (~binary01@192.110.171.216)
[20:42:11] *** Joins: roadie (~user@2a02:8108:ec0:1427:20c5:d7fa:fcce:f864)
[20:42:49] *** Quits: joo (~joo@fsf/member/joo--) (Remote host closed the connection)
[20:43:58] *** Quits: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[20:45:58] <kurahaupo> FreeBDSM: (re JAVA_OPTS) Yet another reason to hate Java. Both the language design and JRE implementation were made by people who take it as an article of faith that Java should do everything its own way and never make any attempt to conform to the environment it's running in.
[20:46:13] <FreeBDSM> kurahaupo: I already hate java
[20:46:19] <FreeBDSM> but I hate go as well
[20:46:27] <neshpion> rust gang
[20:46:40] <FreeBDSM> I like python and even php
[20:47:19] <kurahaupo> hentai: Even Android/Linux includes GNU grep. And Busybox is so broken that it's not worth considering.
[20:47:32] <FreeBDSM> kurahaupo: afaiu there's no .proeperties analog to the quoted value of JAVA_OPTS
[20:47:58] <hentai> kurahaupo, Once again, I have no doubt in availability of grep - I doubt whether it is the right tool
[20:48:29] *** Joins: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt)
[20:48:51] <kurahaupo> hentai: Because you don't trust grep or because you don't trust /proc/cpuinfo ?
[20:49:18] <hentai> kurahaupo, I don't trust /proc/cpuinfo that much in terms of forward-compatability
[20:49:20] *** Joins: mr-red (~drd@93.39.151.19)
[20:49:57] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:50:02] <kurahaupo> If you don't trust cpuinfo, then you need to look at other magic syscalls to extract the info, in which case the shell can't help you. 
[20:50:02] <kurahaupo> But I think that mistrust is unfounded. It's been forward compatible for 20+ years already
[20:50:20] <ormaaj> I see nothing wrong with an environment variable for configuring a jit runtime.
[20:50:32] <earnestly> kurahaupo: Linux did at one point stop updating the Mhz values, briefly
[20:51:01] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[20:51:04] <emanuele6> if you are targeting LSB and not POSIX as you said, i would think you'd trust /proc/cpuinfo more than grep(1)
[20:51:08] <kurahaupo> ormaaj: Sure, but making essentially "eval this shell string" is terrible
[20:52:09] <ormaaj> i don't follow...
[20:52:34] <ormaaj> LD_PRELOAD=string_evaler_hack arbitrary_binary
[20:52:47] <hentai> kurahaupo, Given that different arches output completely different, hardly compatible with each-other, I have a gut feeling that I should not trust this preformatted text :)
[20:52:53] <ormaaj> (with dynamic libs)
[20:53:11] <kurahaupo> ormaaj: It's an env var that gets eval'ed inside a script that starts the actual jvm
[20:53:34] <hentai> But in either case, I don't see much of a choice, and I already am using dmidecode as a backup :)
[20:54:11] <kurahaupo> hentai: Maybe just check that uname -r is recognisable first?
[20:54:17] <ormaaj> oh JAVA_OPTS does more than I know then. ðŸ™‚
[20:54:28] *** Joins: aakashi2001 (~aakashi20@103.61.255.62)
[20:54:28] *** Quits: aakashi2001 (~aakashi20@103.61.255.62) (Changing host)
[20:54:28] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[20:54:45] <ormaaj> not something I use very frequently.
[20:55:03] <hentai> kurahaupo, Already do
[20:55:41] *** Joins: joo (~joo@87-49-146-158-mobile.dk.customer.tdc.net)
[20:55:41] *** Quits: joo (~joo@87-49-146-158-mobile.dk.customer.tdc.net) (Changing host)
[20:55:41] *** Joins: joo (~joo@fsf/member/joo--)
[20:57:57] <kurahaupo> ormaaj: I had the misfortune recently of patching up a bunch of shell scripting bugs in gradlew. It's a horrible mash-up of JRE & shell settings, so some are eval'ed, some are left as-is, and some have to be pushed through xargs instead so that it does wordsplitting with quote handling, but not variable expansion
[20:57:58] *** Joins: codebam (~codebam@user/codebam)
[20:59:15] *** Joins: Drek45 (~jrept371@129.59.122.18)
[20:59:20] <kurahaupo> The previous version had become ever more brittle as people had "fixed" quoting problems by adding more layers of eval
[20:59:33] *** Joins: vysn (~vysn@user/vysn)
[21:00:00] <ormaaj> hm.
[21:00:38] <jmd> kurahaupo: I recently had a problem which I could only fix by using eval.  I wasn't happy about it but couldn't find another way.
[21:01:13] <kurahaupo> jmd: Yeah that's sometimes the case. But it shouldn't be the go-to for every problem
[21:01:26] <jmd> Very true.
[21:01:49] <kurahaupo> Talking of goto, that and eval make for great "write-only" code
[21:05:45] *** Joins: son0p (~ff@181.136.122.143)
[21:06:47] <ormaaj> yawn.
[21:12:31] *** Joins: mithrin (~mithrin@adsl-dyn167.78-99-72.t-com.sk)
[21:13:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:14:27] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[21:14:55] <neshpion> kurahaupo: that sounds like a nightmare
[21:17:28] *** Quits: riskoir (~karaixx@148.87.23.5) (Remote host closed the connection)
[21:17:36] *** Joins: Mo (~Mo@dynamic-095-112-253-179.95.112.pool.telefonica.de)
[21:17:45] *** Joins: riskoir (~karaixx@148.87.23.5)
[21:18:02] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[21:19:13] *** Quits: binary01 (~binary01@192.110.171.216) (Quit: Leaving)
[21:19:54] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[21:20:22] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:20:24] *** Joins: julius_c (~julius_c@178.red-83-61-104.dynamicip.rima-tde.net)
[21:21:14] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[21:21:23] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5460:dd46:df18:599d)
[21:21:23] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5460:dd46:df18:599d) (Changing host)
[21:21:23] *** Joins: skapata (~Skapata@user/skapata)
[21:22:53] *** Joins: Betal (~Betal@user/betal)
[21:24:42] <ormaaj> Any program can be written readably using only eval, goto, and no functions, in most languages. (There's just no need.) Wouldn't be a bad programmer test to see whether one can manage to keep things tidy without any help from constructs that convey explicit separation of concerns. 
[21:25:36] <greycat> "write a convoluted clusterfuck under these arbitrary restrictions" sounds like a really bad programmer test to me
[21:27:34] <thebombzen> kurahaupo: wait a minute, you mean JAVA_OPTS is *eval*ed by teh shell?
[21:27:42] <ormaaj> not arbitrary. we're specifically taking away things that let you fake organization. 
[21:27:48] <thebombzen> I was under the impression that it was something that /usr/bin/java just, read as part of its environment and parsed itself
[21:28:18] <thebombzen> having it operate like CFLAGS for a runtime environment does not make sense to me
[21:28:36] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[21:29:15] *** Joins: fdan (~fdan@192.146.154.3)
[21:30:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:30] <thebombzen> kurahaupo: as for goto, I've used it in C but mostly for cleanup, at the end of a function with a failure: label, I do all the garbo like if (p) free(p); and if anything fails I just "goto failure;"
[21:30:53] <thebombzen> lets me deduplicate that kind of failure-handling code in-scope
[21:31:41] <kurahaupo> thebombzen: sure, in the absence of labelled blocks, goto may be the next best thing
[21:32:26] <thebombzen> yea, something like p = malloc(foo); if (!p) goto failure; p->bar = malloc(baz); if (!p->bar) goto failure; etc. etc. 
[21:32:47] <ormaaj> making em use eval everywhere is perhaps a bit harsh... having to maintain your own stack and whatnot. The main point being eval doesn't let you name things and it doesn't force at least quasi-organization like functions. I'd want to see comments indicating what the purpose of the eval is, since it's totally generic otherwise.
[21:33:39] *** Quits: n4dir (~user@mue-88-130-57-116.dsl.tropolys.de) (Remote host closed the connection)
[21:33:46] <greycat> eval "$variable_whose_name_is_descriptive"
[21:33:58] <kurahaupo> thebombzen: I guess it would be possible to do that a well. But mostly I've only encountered it where people are trying to add stuff to it or remove stuff from if
[21:34:01] <ormaaj> even better
[21:34:05] <kurahaupo> from *it
[21:34:38] <thebombzen> ah, yea, I dont' really see any advantage of goto over just calling a function unless you explicitly need to maintain scope
[21:35:03] <thebombzen> which I only really see for cleaning up failure where values may or may not be NULL and you don't want to pass them all just to find out
[21:36:16] <kurahaupo> greycat: compute_age_of_universe='echo Red orange yellow green cyan blue purple' ; eval "$compute_age_of_universe"
[21:41:30] *** Quits: wwilliam (~Wiilliam@user/wwilliam) (Quit: Konversation terminated!)
[21:43:07] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-235.prtc.net) (Quit: Client closed)
[21:47:10] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[21:48:38] *** Joins: schmillin__ (~schmillin@user/schmillin)
[21:48:59] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[21:49:06] *** Joins: sandb0y (pirate@user/sandb0y)
[21:49:40] *** Quits: Mo (~Mo@dynamic-095-112-253-179.95.112.pool.telefonica.de) (Ping timeout: 252 seconds)
[21:50:27] *** Joins: codebam (~codebam@user/codebam)
[21:51:07] *** Quits: schmillin_ (~schmillin@user/schmillin) (Ping timeout: 240 seconds)
[21:52:00] *** Quits: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[21:52:29] *** Joins: sublim20 (~sublim20@user/sublim20)
[21:52:59] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 250 seconds)
[21:55:52] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[21:56:28] <CrtxReavr> "$variable" vs. "${variable}" ?
[21:56:52] <ormaaj> !${
[21:56:53] <greybot> Without curly braces parameter expansions refer to the longest valid variable name or shortest positional parameter. "${var}bar" expands the parameter named "var" while "$varbar" expands "varbar". "$123" references argv[1] and "${123}" references argv[123]. Braces are requried for parameters > 9, special PEs, and array expansions: ${10}, ${var##pat}, ${arr[5]}. BRACES AREN'T A SUBSTITUTE FOR QUOTES!
[21:56:58] *** Quits: Alternity (~Alternity@user/alternity) (Quit: Alternity)
[21:57:06] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:57:25] <greycat> Most of us don't use the braces when we don't have to, but some people like the consistency of always using them.
[21:57:40] *** Joins: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt)
[21:57:44] *** Joins: Alternity (~Alternity@user/alternity)
[21:57:47] *** Joins: Nintendo (~smb3@user/great)
[21:58:43] <CrtxReavr> No scenarios in which the braces hurt though?
[21:59:16] <greycat> no
[21:59:28] <CrtxReavr> 'k thanks.
[22:00:04] *** Quits: Alternity (~Alternity@user/alternity) (Read error: Connection reset by peer)
[22:00:05] <Nintendo> # f () {       s=$( false ) ; echo $? ; } ; f
[22:00:07] * greycat waits for ormaaj to dig up some weird corner case where the braces summon Cthulhu
[22:00:07] <Nintendo> # f () { local s=$( false ) ; echo $? ; } ; f
[22:00:07] <shbot> Nintendo: 1
[22:00:08] <shbot> Nintendo: 0
[22:00:16] <greycat> !pf local
[22:00:16] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf27 -- Don't do this! -- local var=$(cmd)
[22:00:49] <Nintendo> Damn.  Thank you very much.
[22:01:26] <Nintendo> So local looks like a command and smells like a command but is not a command.
[22:01:52] <greycat> It's a command and it has its own exit status.
[22:02:38] *** Joins: Alternity (~Alternity@user/alternity)
[22:02:44] <greycat> You were hoping that it *wouldn't* act like a command, which is pretty common.  Hence being on the BashPitfalls page.
[22:03:40] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[22:05:45] *** Quits: gnoo_ (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[22:06:34] *** Joins: Drek45 (~jrept371@154.21.114.83)
[22:07:25] <Nintendo> Well, that settles that.  Bash can go back to being perfect now.
[22:07:26] *** Quits: riskoir (~karaixx@148.87.23.5) (Remote host closed the connection)
[22:08:25] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:10:04] *** afernandez is now known as wwilliam
[22:10:22] *** Quits: wwilliam (~Wiilliam@12.187.181.32) (Changing host)
[22:10:22] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[22:12:27] *** Quits: AntonioPt (~puppy@a85-138-250-216.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[22:13:14] <ormaaj> # function {yes}(yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}
[22:13:15] <shbot> ormaaj: no
[22:13:15] <thebombzen> CrtxReavr: there's some scenarios when you don't have to use them but using them improves readability for people who might not know the rules
[22:13:19] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[22:13:37] <thebombzen> personally I dont' use them if I'm using "$fullvarname" but in almost every other case I use them, even if unnecessary, since it can improve readability
[22:14:31] <ormaaj> ^scenario ^^
[22:15:02] <ormaaj> bit half-assed you can do worse
[22:15:15] <thebombzen> well are those braces used in a $parameter expansion or elsewhere
[22:15:29] <CrtxReavr> When no one's looking and I'm doing a one-liner, I just use $varname, but if it's going in a script, I stick with "${varname}"
[22:16:42] <greycat> ormaaj: there are so many pieces of that which I don't understand, but ... removing the braces around ${no} which is the only place I can see where they are optional, I still get the same output.
[22:17:59] <ormaaj> did i goof. should be printing the value of the herestring.
[22:18:20] <ormaaj> Weird I needed a cat in there. I guess that's due to the pipe vs tmpfile thing.
[22:18:28] <thebombzen> CrtxReavr: always a safe bet. something like "$frame.png" doesn't require it but "${frame}.png" is a bit more readable
[22:19:10] *** Quits: Drek45 (~jrept371@154.21.114.83) (Ping timeout: 240 seconds)
[22:19:36] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[22:19:36] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:19:39] <ormaaj> oh it's because i used 0 rather than /dev/fd/0. Nevermind.
[22:19:42] <CrtxReavr> Yeah - agree I want  clear differentiation on what comes from a variabl and what doesn't. .. "$frame.png" is too ambiguous.
[22:19:54] <greycat> it's also a syntax error in bash-5.0 or bash-4.4
[22:21:42] *** Joins: zro (~zro@user/zro)
[22:24:17] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[22:25:12] *** Quits: julius_c (~julius_c@178.red-83-61-104.dynamicip.rima-tde.net) (Quit: Leaving)
[22:26:21] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 250 seconds)
[22:26:48] <ormaaj> # bash -c 'function {yes}(yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}; typeset -fp {yes} >&2' >/dev/null
[22:26:55] <shbot> ormaaj: {yes} () 
[22:26:55] <shbot> ormaaj: { 
[22:26:56] <shbot> ormaaj: etc... ( http://ix.io/3x2C )
[22:27:06] *** Quits: mr-red (~drd@93.39.151.19) (Ping timeout: 250 seconds)
[22:28:20] <ormaaj> looks rite
[22:28:59] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[22:29:51] <ormaaj> The only thing goofy in there for the paerser is the {yes}<&fd redirect and invalid function name to a lesser extent
[22:30:17] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[22:31:28] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[22:31:41] <ormaaj> !check
[22:31:44] <checkbot> shbot: Line 1: You need a space after the '{'. Line 1: Expected a '}'. If you have one, try a ; or \n in front of it. Line 1: This } is literal. Check expression (missing ;/\n?) or quote it. See https://shellcheck.net/?id=cb904 for all 6 issues.
[22:32:50] *** Joins: Drek45 (~jrept371@129.59.122.18)
[22:33:16] <greycat> 44# function {yes}(yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}
[22:33:17] <shbot> greycat: bash: syntax error near unexpected token `yes=$(cat<&${no})'
[22:33:55] <greycat> I still don't understand even what it's trying to do, let alone how to make it show us something interesting.
[22:34:35] <greycat> but it looks like the syntax error is the missing () after the function name ...?
[22:35:13] <ormaaj> It is very boring. A function named {yes} reads <<<{no} into x. Then echo strips the {}'s and prints no.
[22:35:47] *** Quits: tedwing (~anon@lfbn-idf3-1-1409-99.w109-221.abo.wanadoo.fr) (Quit: leaving)
[22:37:00] *** HankHill is now known as Church
[22:37:02] <ormaaj> ugh i used a variable named yes not x sorry.
[22:38:12] *** Joins: docmax_ (~docmax@dynamic-077-003-228-204.77.3.pool.telefonica.de)
[22:39:54] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:40:27] *** Quits: docmax (~docmax@dynamic-095-116-031-118.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[22:40:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[22:40:29] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[22:42:35] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[22:43:35] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[22:43:47] <ormaaj> I guess the `function` wasn't needed. `function` is of course the most lenient with naming but apparently `{f}()` works too. Bash only whines about the invalid name with -o posix.
[22:44:26] <greycat> 44# function {yes} (yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}
[22:44:27] <shbot> greycat: bash: syntax error near unexpected token `yes=$(cat<&${no})'
[22:44:40] <greycat> (adding a space doesn't help, it appears)
[22:45:46] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 252 seconds)
[22:46:54] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[22:50:33] *** Joins: sazawal (~sazawal@182.64.58.123)
[22:51:51] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:54:56] *** Joins: kill (~killown@user/killown)
[22:55:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[22:58:46] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[22:59:29] <ormaaj> 44# rm -f /bin/yes; function {yes}(yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}; type -t yes {yes}
[22:59:30] <shbot> ormaaj: bash: syntax error near unexpected token `yes=$(cat<&${no})'
[22:59:58] <greycat> 44# function {yes}()(yes=$(cat<&${no});echo ${yes//[\{\}]}){yes}<&${no=0}<<<{no}&&{yes}
[23:00:00] <shbot> greycat: no
[23:01:08] <ormaaj> only change is the `function`?
[23:01:16] <greycat> I only added ()
[23:01:19] <sublim20> hey all, does anyone have a 'comment in / out' based on regex?
[23:01:26] <ormaaj> hm
[23:01:53] <greycat> pre-5.1 parser obviously sees  function foo(  and wants to see ) next
[23:06:19] <ormaaj> sublim20:What target language? Probably use a text editor that can parse whatever you're trying to process comments on.
[23:07:25] *** Joins: Lyn (~Lyn@user/law)
[23:07:41] <sublim20> ormaaj, the goal would be this.  find lines that match a regex.  and (un)comment ( #, // etc.) as appropriate
[23:08:09] <sublim20> i've accomplished something that works in awk, but it seems like it'd be a common thing, so was wondering what others have done
[23:09:24] <greycat> so your target language is "all the languages, I want to handle any kind of comment, it shouldn't be that hard, right"?
[23:10:40] <sublim20> ok, my target language for now is bash
[23:11:28] <sublim20> actually, my target language is a language that does comment by a character in the beginning of a line
[23:11:31] <ormaaj> There are tokens in shell language that use the # character other than comments so a crude regex isn't very good. For instance it will have to detect whether the comment is quoted. 
[23:11:38] <greycat> I don't believe a regular expression can parse bash in order to understand what parts of a line are commented out.
[23:12:29] <greycat> and of course as soon as we started telling you this, you changed it
[23:12:29] <greycat> !b2
[23:12:29] <greybot> bashphorism 2: The questioner will keep changing the question until it drives the helpers in the channel insane.
[23:12:38] <ormaaj> use vim
[23:13:36] <sublim20> if line matches regex, and begins with [[:space:]]*#   remove the # is what i want to do
[23:14:14] <ormaaj> that can be done in ed
[23:14:20] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[23:14:28] <greycat> sed 's/^\([[:space:]]*\)#/\1/'
[23:14:48] <ormaaj> or sed
[23:15:44] * ormaaj was hoping for ed answer because completely forgot how to use it
[23:15:55] *** Joins: noarb (~noarb@user/noarb)
[23:16:33] <sublim20> commands like that are what i've been looking at
[23:16:44] <sublim20> was hoping to find somebody elses solution to this kind of problem
[23:17:18] <sublim20> yes, it wouldn't work for every file or whatnot, but would work for a vast majority.  
[23:17:26] <sublim20> thanks for the responses
[23:17:56] <ormaaj> meh I remember the gist. the `g` expression to make the `s` run over many lines.
[23:18:11] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[23:19:27] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[23:20:41] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 248 seconds)
[23:21:01] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:3442:770f:b7a8:5931) (Read error: Connection reset by peer)
[23:21:24] *** Joins: noarb (~noarb@user/noarb)
[23:23:07] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:eda0:63af:8279:f703)
[23:24:48] *** Quits: pystardust (~pystardus@223.226.119.16) (Quit: pystardust)
[23:26:29] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:33:56] <wiscii> what about '# this comment is here to explain what the next line does' ?
[23:35:50] *** Joins: fling (~fling@user/fling)
[23:37:32] *** Quits: schmillin__ (~schmillin@user/schmillin) (Quit: Leaving)
[23:37:58] *** Joins: schmillin (~schmillin@user/schmillin)
[23:39:21] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:39:39] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[23:39:53] *** Joins: Milos (~Milos@user/milos)
[23:41:12] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[23:44:31] *** Quits: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net) (Remote host closed the connection)
[23:44:50] *** Joins: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
[23:48:33] <emanuele6> ormaaj: ex syntax is easier to remember because of vi :D
[23:48:43] <emanuele6> and it's posix just like ed
[23:49:14] <ormaaj> yep.
[23:50:29] <ormaaj> more complex and harder to learn. ed has a concise manual. rough crash learning possible in minutes.
[23:51:00] <ormaaj> maybe also true of ex but the standard is not a great read
[23:52:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:53:31] <ormaaj> another pro of ed is you actually get a nice standard implementation that is smallish. Unless you want to use vim as your ex you'll have to install one of the few implementations that's never a default install.
[23:54:12] *** Quits: schmillin (~schmillin@user/schmillin) (Remote host closed the connection)
[23:54:15] <ormaaj> (and I can't speak to their quality)
[23:54:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:54:27] <emanuele6> also ex can take commands with the `-c` option, while ed can only take commands from stdin. so that's a pro of ex
[23:54:38] *** Joins: schmillin (~schmillin@user/schmillin)
[23:55:33] <emanuele6> ormaaj: the default ex(1) and vi(1) on ArchLinux is not vim 
[23:55:42] <emanuele6> it's http://ex-vi.sourceforge.net/
[23:58:03] <ormaaj> hm. Gentoo still makes you `ln -s /bin/busybox /bin/vi` because morons use gentoo, thus nano.
[23:59:56] <yitz> Signal handling. When bash gets a sigterm, it sends a term to all child processes ... right?
[23:59:56] *** Quits: schmillin (~schmillin@user/schmillin) (Remote host closed the connection)
[23:59:57] <ormaaj> Can't wait to finish replacing all my temporary debian usages with gentoo though. Ugh. This is horrible.
