[00:04:01] *** Joins: olle (~olle@i5E866D8C.versanet.de)
[00:47:30] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[00:48:08] *** Quits: mro (~mro@port-92-195-236-252.dynamic.as20676.net) (Remote host closed the connection)
[01:18:01] *** Joins: mro (~mro@port-92-195-236-252.dynamic.as20676.net)
[01:22:31] *** Quits: mro (~mro@port-92-195-236-252.dynamic.as20676.net) (Ping timeout: 265 seconds)
[01:25:25] *** Joins: average (uid473595@user/average)
[01:33:47] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:44:57] *** Joins: mro (~mro@port-92-195-236-252.dynamic.as20676.net)
[01:59:08] *** Quits: mro (~mro@port-92-195-236-252.dynamic.as20676.net) (Ping timeout: 256 seconds)
[02:32:11] *** Quits: quernd (~quernd@boethin.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:32:25] *** Joins: quernd (~quernd@boethin.uberspace.de)
[02:40:42] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:44:16] *** Quits: andreypopp (~andreypop@94.188.42.16) (Ping timeout: 268 seconds)
[02:48:36] *** Joins: andreypopp (~andreypop@94.188.42.16)
[03:05:06] *** Quits: dh` (~dholland@netbsd/developer/dholland) (Ping timeout: 245 seconds)
[03:05:44] *** Quits: spip (~bobo@45.106.80.79.rev.sfr.net) (Remote host closed the connection)
[03:06:21] *** Joins: spip (~bobo@45.106.80.79.rev.sfr.net)
[03:13:03] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:13:41] *** Joins: xd1le (~xd1le@user/xd1le)
[03:14:39] *** Quits: olle (~olle@i5E866D8C.versanet.de) (Ping timeout: 265 seconds)
[03:17:18] *** Joins: vicfred (~vicfred@user/vicfred)
[03:23:50] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 265 seconds)
[03:30:37] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[03:35:47] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 264 seconds)
[03:37:29] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[03:41:46] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[03:46:37] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:49:01] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 268 seconds)
[03:50:34] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[03:55:40] *** Joins: rgrinberg (~textual@201.192.183.100)
[03:57:35] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 250 seconds)
[04:26:52] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[04:31:35] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 264 seconds)
[04:34:14] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[04:35:10] *** Joins: dh` (~dholland@static-96-237-178-170.bstnma.fios.verizon.net)
[04:35:10] *** Quits: dh` (~dholland@static-96-237-178-170.bstnma.fios.verizon.net) (Changing host)
[04:35:10] *** Joins: dh` (~dholland@netbsd/developer/dholland)
[04:41:10] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 265 seconds)
[04:45:42] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[04:45:57] *** Joins: Colt (~Colt@user/colt)
[05:01:28] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 265 seconds)
[05:02:38] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:02:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:14:29] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[05:16:16] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:21] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 250 seconds)
[05:25:28] *** Joins: rgrinberg (~textual@201.192.183.100)
[05:28:41] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[05:28:51] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[05:33:51] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 265 seconds)
[05:44:45] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:45:12] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[05:47:04] *** Joins: rgrinberg (~textual@201.192.183.100)
[05:57:11] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[05:57:35] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[06:29:01] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71)
[06:35:45] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:7db1:fd5d:9fec:ab71) (Ping timeout: 250 seconds)
[06:41:48] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[06:52:50] <d_bot> <Curzon> is the only solution to compile to JS and see what nodejs offers for building into executables or just using npm, you think?
[06:53:29] <d_bot> <Curzon> You know "Flow", it's like a typescript language but written in OCaml, but they somehow compiled ocaml to binaries for windows, mac and linux
[06:56:47] <d_bot> <darrenldl> as in compiled the flow tool binary for the three platforms
[06:56:50] <d_bot> <darrenldl> ?
[06:56:55] <d_bot> <Curzon> yeah
[06:57:18] <d_bot> <Curzon> i wondered if they used js_of_ocaml and compiled js to three platforms using some npm package
[06:57:29] <d_bot> <Curzon> that's a huge step though
[06:57:35] <d_bot> <darrenldl> you can always pick the corresponding worker in ci/cd for compilation
[06:57:42] <d_bot> <Curzon> ??
[06:58:00] <d_bot> <darrenldl> pick windows vm worker to compile windows binary etc
[06:58:14] <d_bot> <Curzon> you mean virtual machines?
[06:58:18] <d_bot> <darrenldl> yep
[06:58:20] <d_bot> <Curzon> opam doesnt work on windows
[06:58:23] <d_bot> <Curzon> natively
[06:58:42] <d_bot> <Curzon> you'd use cygwin or wsl but would still compile as linux executable
[06:59:49] <d_bot> <darrenldl> hmmmm
[07:00:41] <d_bot> <Curzon> i'd honestly would rather just compile ocaml to js
[07:00:47] <d_bot> <Curzon> and not care about the performance
[07:03:06] <d_bot> <darrenldl> their build instruction for windows relies on cygwin
[07:03:30] <d_bot> <Curzon> this is also why i bought a macbook, so it wouldnt be such a pain to work with ocam;l
[07:03:47] <d_bot> <Curzon> i dont have to use cygwin or wsl on my windows machine
[07:07:57] <d_bot> <Anurag> @Curzon  you can use cygwin along with the mingw/msvc ocaml switch and the generated executables will work on windows then.
[07:38:21] *** Quits: klu (~klu@user/klu) (Quit: .)
[07:48:42] *** Quits: rgrinberg (~textual@201.192.183.100) (Ping timeout: 265 seconds)
[07:56:15] *** Joins: mbuf (~Shakthi@136.185.70.139)
[08:26:31] *** Quits: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b) (Quit: WeeChat 3.3)
[08:45:20] *** Joins: klu (~klu@98.247.231.39)
[08:45:20] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[08:45:20] *** Joins: klu (~klu@user/klu)
[09:22:32] *** Quits: klu (~klu@user/klu) (Quit: .)
[09:23:57] *** Joins: klu (~klu@98.247.231.39)
[09:23:57] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[09:23:57] *** Joins: klu (~klu@user/klu)
[09:33:36] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Ping timeout: 256 seconds)
[09:40:26] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[09:43:04] *** Quits: klu (~klu@user/klu) (Quit: .)
[09:45:59] *** Joins: klu (~klu@98.247.231.39)
[09:45:59] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[09:45:59] *** Joins: klu (~klu@user/klu)
[09:55:44] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:43:34] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:53:14] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[11:02:22] *** Joins: horninghack (~hackingho@user/hackinghorn)
[11:05:50] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 260 seconds)
[11:16:51] <d_bot> <mseri> You can also use things like reason-mobile or other of the approaches presented e.g. here: https://discuss.ocaml.org/t/cross-compiling-implementations-how-they-work/8686
[11:18:38] <d_bot> <mseri> Just for the sake of examples, here I use reason mobile to cross compile for mac, linux and windows in the Github action: https://github.com/mseri/doi2bib
[11:19:45] <d_bot> <mseri> It takes some effort and some degree of trial and error, but it is definitely doable
[11:33:38] <d_bot> <Et7f3> Time to present https://esy.sh I prefer esy to opam because it is friendlier for windows. However opam are actively improving support. 2.1 should be windows release but I haven't used recently. Esy install cygwin for unix environment and mingw64-gcc cross compiler (that generate truly native exe that don't depend on cygwin1.dll) and since OCaml rely on external assembler/C compiler it manages to generate true windows binary (only o
[11:38:56] <d_bot> <Et7f3> @Curzon OCaml compiler require unix env to build: make, sh, awk, sed, ... because it use autoconf. But once you have a ocamlopt binary it requires only the C compiler. Most package use dune so they compile out of the box on windows. Some package require specific unix functions and/or make but it is a minority.
[11:59:22] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[12:04:09] <d_bot> <mettekou> Anyone here using OCaml for engineering applications, e.g. industrial communication protocols (OPC UA, CAN...), numerical mathematics...?
[12:42:59] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 250 seconds)
[12:47:40] *** Joins: gdd (~gdd@129.199.146.230)
[12:54:17] *** Joins: olle (~olle@i5E866D8E.versanet.de)
[14:27:16] <d_bot> <Jektrix> Interesting question. I'm interested in implementing a protocol that needs to run over RS485 so keen to here if anyone else has done stuff in that space
[15:07:53] <d_bot> <mettekou> @Jektrix I'm trying to port some F# that replaces some NI LabVIEW to OCaml, so I'm also interested in that space.
[15:08:41] <d_bot> <mettekou> Currently working on parsing TDMS files using Angstrom.
[15:11:59] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[15:16:04] *** Joins: bartholin (~bartholin@158.110.70.150)
[15:21:34] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[15:23:59] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[15:46:03] <d_bot> <bnguyenv> For numerical mathematics in general, there is some stuff, you can look at https://ocaml.xyz/ typically
[15:47:47] <ns12> What is "d_bot"?
[15:48:33] <d_bot> <NULL> Messages from Discord, bridged by the bot
[15:48:34] <d_bot> <bnguyenv> The discord bridge !
[15:49:01] <ns12> So the real discussion is happening on Discord and not on IRC?
[15:49:28] <d_bot> <NULL> IRC is bridged back, so there's no single place where the discussion happens
[15:50:10] <d_bot> <NULL> The IRC channel and the Discord channel are linked to be one and the same
[15:50:23] <ns12> NULL: do you get a notification in Discord when I mention your name in IRC style?
[16:00:54] <d_bot> <mettekou> I was already aware of Owl, thanks. My question was about people using OCaml for engineering applications, though, not about library recommendations.
[16:03:51] <d_bot> <NULL> ns12: No, and I doubt it would either if you used my full Discord username (@NULL, or if the bridge truncates it, it is @ NULL#9971)
[16:16:27] <d_bot> <Jektrix> I need to talk over a serial port I gues
[16:30:25] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[16:40:36] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:46:33] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[16:51:00] *** Quits: vb (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[16:59:36] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[17:05:23] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 250 seconds)
[17:13:08] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[17:13:59] <d_bot> <bnguyenv> Then I don't really know... (I would guess not very many)
[17:37:32] *** Quits: kurfen (~kurfen@45.152.181.20) (Ping timeout: 244 seconds)
[17:39:18] *** Joins: kurfen (~kurfen@45.152.181.20)
[17:42:31] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[17:43:43] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:45:06] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[17:48:45] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[17:49:25] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:58:21] *** Joins: rgrinberg (~textual@201.192.183.100)
[18:00:40] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[18:09:44] <d_bot> <mbacarella> the ocaml syntax colors in vscode are kind of disappointing. i'm accustomed to the angry fruit salad one.
[18:11:28] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[18:13:13] <d_bot> <mbacarella> that wasn't meant as a diss against the ocaml extension, more like i'm surprised there aren't many existing options in vs code
[18:15:37] <Franciman> hi @mbacarella, I use kakoune
[18:15:45] <Franciman> so not vscode
[18:15:49] <Franciman> and I like colors there :P
[18:18:37] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 250 seconds)
[18:21:52] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[18:26:47] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 264 seconds)
[18:31:06] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[18:36:59] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[18:38:28] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[18:40:35] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 264 seconds)
[18:41:51] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[18:46:21] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 250 seconds)
[18:47:43] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[18:56:40] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 265 seconds)
[19:16:33] *** Joins: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b)
[19:21:27] *** Quits: sleeping_papaya (~sleeping_@2601:14f:4500:33a1:4923:974e:e61b:a70b) (Ping timeout: 250 seconds)
[19:24:18] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[19:33:23] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:34:28] *** Joins: rgrinberg (~textual@201.192.183.100)
[19:45:54] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[19:51:02] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[19:54:08] *** Quits: krnkktz (~krnkktzma@2001:470:69fc:105::74c) (K-Lined)
[19:54:11] *** Quits: smondet[m] (~smondetma@2001:470:69fc:105::b33) (K-Lined)
[19:54:11] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (K-Lined)
[19:54:17] *** Quits: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f) (K-Lined)
[19:54:20] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (K-Lined)
[19:54:22] *** Quits: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb) (K-Lined)
[19:54:24] *** Quits: adibsaad[m] (~adibsaad@2001:470:69fc:105::2f65) (K-Lined)
[19:59:00] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[20:02:01] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[20:04:54] *** Quits: rgrinberg (~textual@201.192.183.100) (Ping timeout: 260 seconds)
[20:05:28] *** Quits: JSharp (sid4580@lymington.irccloud.com) (Ping timeout: 265 seconds)
[20:05:29] *** Quits: jyc (sid40911@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[20:05:29] *** Quits: cbarrett (sid192934@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[20:05:55] *** Joins: krnkktz (~krnkktzma@2001:470:69fc:105::74c)
[20:05:59] *** Quits: tizoc (~user@li296-221.members.linode.com) (Ping timeout: 246 seconds)
[20:06:41] *** Quits: conjunctive (sid433686@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[20:08:35] *** Joins: tengu1 (~tengu1@cpe-70-121-244-14.neb.res.rr.com)
[20:09:31] *** Quits: Boarders_ (sid425905@lymington.irccloud.com) (Ping timeout: 268 seconds)
[20:10:00] *** Quits: caasih (sid13241@ilkley.irccloud.com) (Read error: Connection reset by peer)
[20:10:02] *** Quits: v0idpwn (sid483136@helmsley.irccloud.com) (Read error: Connection reset by peer)
[20:10:55] *** Joins: tizoc (~user@li296-221.members.linode.com)
[20:12:44] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[20:12:54] *** Joins: conjunctive (sid433686@helmsley.irccloud.com)
[20:13:22] *** Joins: caasih (sid13241@ilkley.irccloud.com)
[20:13:27] *** Joins: Boarders_ (sid425905@lymington.irccloud.com)
[20:13:43] *** Joins: jyc (sid40911@ilkley.irccloud.com)
[20:14:52] *** Joins: v0idpwn (sid483136@helmsley.irccloud.com)
[20:15:26] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[20:15:46] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:19:07] *** Joins: JSharp (sid4580@lymington.irccloud.com)
[20:20:28] *** Joins: cbarrett (sid192934@helmsley.irccloud.com)
[20:26:11] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[20:26:11] *** Joins: smondet[m] (~smondetma@2001:470:69fc:105::b33)
[20:26:11] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[20:26:11] *** Joins: CodeBitCookie[m] (~code-bit-@2001:470:69fc:105::a2f)
[20:26:11] *** Joins: adibsaad[m] (~adibsaad@2001:470:69fc:105::2f65)
[20:26:11] *** Joins: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb)
[20:28:33] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:29:35] *** Quits: mclovin (~zapashcan@2001:470:69fc:105::43) (Quit: Client limit exceeded: 20000)
[20:30:24] *** Quits: krnkktz (~krnkktzma@2001:470:69fc:105::74c) (Quit: Client limit exceeded: 20000)
[20:30:47] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[20:48:32] *** Joins: favonia (~favonia@user/favonia)
[20:55:20] *** Quits: tengu1 (~tengu1@cpe-70-121-244-14.neb.res.rr.com) (Ping timeout: 256 seconds)
[21:00:15] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Ping timeout: 250 seconds)
[21:00:48] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:17:11] *** Quits: mbuf (~Shakthi@136.185.70.139) (Quit: Leaving)
[21:24:52] *** Quits: bartholin (~bartholin@158.110.70.150) (Quit: Leaving)
[21:34:15] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:52:34] *** Joins: zebrag (~chris@user/zebrag)
[21:55:40] <d_bot> <cemerick> Working on a ppx; I can resolve module types and signatures that are outside of the current project just fine, but trying to use e.g. `Env.lookup_module` and such on idents referring to local modules fails. I'm guessing the "initial environment" I'm using isn't picking up local artifacts; how can I fix that?
[21:55:54] *** Joins: krnkktz (~krnkktzma@2001:470:69fc:105::74c)
[21:56:02] *** Quits: Skyfire (~pyon@user/pyon) (Ping timeout: 240 seconds)
[21:56:07] *** Joins: mclovin (~zapashcan@2001:470:69fc:105::43)
[21:56:07] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[21:57:16] <d_bot> <cemerick> oh, I see there's #ppx, I'll ask there 🙃
[22:02:49] <companion_cube> ppx with types is super hard, afaik
[22:02:52] *** Quits: berberman (~berberman@user/berberman) (Quit: ZNC 1.8.2 - https://znc.in)
[22:03:06] <companion_cube> it's really supposed to be syntactic
[22:03:12] *** Joins: berberman (~berberman@user/berberman)
[22:07:16] *** Quits: favonia (~favonia@user/favonia) (Ping timeout: 256 seconds)
[22:07:29] <d_bot> <cemerick> there's only so much you can do without poking beyond the immediate expansion context
[22:08:01] <companion_cube> 🤷
[22:08:15] <companion_cube> you'd need another kind of ppx that doesn't exist
[22:08:18] <companion_cube> one that works on typedtree
[22:08:51] <d_bot> <cemerick> that's overstating it
[22:09:07] <d_bot> <cemerick> like I said, I can inspect module types just fine, just not those defined locally
[22:09:37] <companion_cube> I guess you're in compiler-libs and it's able to load .cmi files dynamically
[22:09:42] <d_bot> <cemerick> I suspect it's just a matter of properly configuring the compiler-libs env
[22:09:46] <companion_cube> but it hasn't started typechecking the current file
[22:09:49] <companion_cube> at all
[22:09:55] <companion_cube> (since the file isn't even ready to compile!)
[22:10:03] <d_bot> <cemerick> right
[22:10:23] <d_bot> <cemerick> I'm thankfully not aiming to get types defined in the current module, just other modules in the same project
[22:10:45] <companion_cube> for this to work, the ppx would have to be called at every subtree of the AST, in the context where it's about to be typed :s
[22:10:53] <companion_cube> (like, with let-bound variables already typed)
[22:10:57] <companion_cube> that's more like a compiler plugin
[22:12:42] <d_bot> <cemerick> hrm, I sort of assumed that that's what was happening
[22:13:05] <companion_cube> no, ppx is run wholesale on the parsetree
[22:13:36] <d_bot> <cemerick> ech, yeah, dune --verbose confirms that everything in a directory is ppx'd before ocamlc gets to it
[22:13:39] <companion_cube> all the modern ppx architecture with ppxlib is designed so that you apply all the ppx in one pass, btw; but still on the parsetree before any type analysis
[22:13:41] <d_bot> <cemerick> well, that's a bummer
[22:14:33] *** Joins: favonia (~favonia@user/favonia)
[22:25:08] <d_bot> <octachron> dune has staged_pps which are run after the compilation of the module dependency
[22:25:10] <d_bot> <cemerick> eh, just putting the referenced modules in a nearby library separates them enough
[22:30:41] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[22:33:56] <companion_cube> octachron: will still not work for types in the same file
[22:34:07] <companion_cube> but yeah, it's the hack that ppx_import uses I belive
[22:34:10] <companion_cube> +e
[22:38:17] *** Joins: average (uid473595@user/average)
[22:47:46] <d_bot> <cemerick> @octachron That doesn't seem to immediately solve the problem, but maybe it will make it so that referenced modules don't have to be in a separate library. I think the fundamental issue is either that the temporary ppx executable that dune builds doesn't include the local .cmxa's, or an analogous issue with the paths registered with `Compenv`.
[23:03:30] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[23:09:13] *** Quits: mro (~mro@port-92-195-174-236.dynamic.as20676.net) (Remote host closed the connection)
[23:10:27] *** Joins: mro (~mro@port-92-195-174-236.dynamic.as20676.net)
[23:25:04] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[23:31:11] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[23:35:54] *** Joins: Skyfire (~pyon@user/pyon)
[23:53:18] *** Joins: bobo_ (~bobo@112.212.119.80.rev.sfr.net)
[23:55:30] *** Quits: spip (~bobo@45.106.80.79.rev.sfr.net) (Ping timeout: 256 seconds)
[23:58:43] *** Joins: spip (~bobo@69.39.127.78.rev.sfr.net)
[23:59:47] *** Quits: bobo_ (~bobo@112.212.119.80.rev.sfr.net) (Ping timeout: 264 seconds)
