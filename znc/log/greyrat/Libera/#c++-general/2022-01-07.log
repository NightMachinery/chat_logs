[00:00:18] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[00:00:51] <PJBoy> I think that's all my complaints
[00:01:01] <PJBoy> I didn't like the 360 aiming, but that's just because I'm bad at it
[00:01:03] <cbreak> https://www.youtube.com/watch?v=BJBDmQJdDpc seems interesting
[00:01:37] <PJBoy> sycl :D
[00:02:29] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:02:57] <Alipha> PJBoy: is that your "screenshot"?
[00:03:07] <Alipha> did you make it?
[00:03:20] <PJBoy> nah someone else
[00:07:25] *** Quits: Itaru (~Itaru@ro2.flokinet.is) (Quit: See Ya Later!)
[00:09:37] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 240 seconds)
[00:11:55] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[00:12:19] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[00:16:18] <Alipha> i found i liked the counter mechanic the better i got at it ;-) though it does fundamentally contrast metroid-style fighting: you have a gun. you're supposed to stay far away from enemies. but now you're supposed to get up close? so now you're incentivized to put yourself in danger, hoping to pull off a strong attack
[00:17:16] <Alipha> yeah, the morph ball's only purpose is to allow the game designers to gatekeep different areas of the game.
[00:18:41] <Alipha> i thought most breakable blocks were obvious and i don't think i had an issue not realizing where i was supposed to shoot. and i'm not going to comment on the graphics. i think they're nice.
[00:19:24] <Alipha> i'm not sure how you'd go out of bounds unless you were explicitly attempting to execute a glitch :-/
[00:19:40] <PJBoy> I'll show you
[00:20:09] <Alipha> the checkpoint system needs to be in there, otherwise people would get very frustrated. but the checkpoint system is only necessary because of the EMMIs, which yes, they should have done the EMMIs differently
[00:20:18] <PJBoy> https://www.youtube.com/watch?v=4FTgFadqvAY
[00:21:11] <PJBoy> example #2 https://www.reddit.com/r/Metroid/comments/qa7i1h/what_killed_me_dread/
[00:21:12] <Alipha> oh wow. i haven't ran across any OOB issues, other than when i'm intentionally glitching. i wonder if that specific one was patched
[00:21:37] <PJBoy> it's just a horrible way to deal with OoB
[00:21:49] <PJBoy> for a game series where OoB is so prevalent
[00:21:55] <PJBoy> and people have fun doing it
[00:22:11] <Alipha> PJBoy: example #2 is because they used a glitch to get somewhere they're not supposed to
[00:22:23] <PJBoy> that's metroid
[00:22:40] <Alipha> i died there myself :-)
[00:23:37] <PJBoy> making samus die instantly is a bad mechanic
[00:24:23] <Alipha> https://alipha.ddns.net/metroid_glitch.mp4
[00:24:55] <PJBoy> WTF
[00:25:27] <PJBoy> you see her land in the air for a frame
[00:25:32] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[00:25:58] <PJBoy> which might just be the first frame of the death sequence tbf
[00:26:23] <Alipha> PJBoy: there's supposed to be ice there because previously in the game, you're supposed to destroy a block that lets water flow into that basin. then the water freezes. i glitched past the part that flows the water into the basin. so the ice isn't there, but the OOB detection still is
[00:26:40] <PJBoy> bahaha
[00:26:41] <PJBoy> rip
[00:27:45] <PJBoy> also re: close combat
[00:27:52] <PJBoy> I'm a huge fan of what fusion did
[00:28:13] <PJBoy> a point blank charge beam shot in fusion does damage from the flare
[00:28:40] <PJBoy> I think that's the perfect way to incentivise getting in close
[00:28:54] <PJBoy> (for a metroid game)
[00:29:21] <PJBoy> the counter is just waiting for the flash and doing it
[00:29:25] <PJBoy> who wants to wait
[00:29:26] <Alipha> oh, and in all but like one spot, the flash shift invalidates the need for grappling across "grapple blocks"
[00:29:58] <PJBoy> I would have had some respect for the game if they removed morph ball entirely and relied on the slide
[00:30:07] <PJBoy> that would have been a *bold* move
[00:30:46] <PJBoy> what I did like though
[00:30:50] <Alipha> well, i'm currently on my 3rd playthrough: first on normal, then on hard, now normal in under 4 hours. (then hard in under 4 hours)
[00:31:01] <PJBoy> it's the best map so far, the best speed booster so far
[00:31:26] <PJBoy> it's a big step up from samus returns
[00:31:57] <PJBoy> the cutscenes and dialogue are almost entirely skippable
[00:32:03] <Alipha> oh, and i'm also pretty horrible at the 360-degree shooting. i would have liked the option to use a d-pad because most of the time, i'm shooting in the 8 main directions. whereas with the joystick and i'm running, if i'm not exactly pointed to the left or right, my shot fires slightly off horizontal and misses the enemy
[00:33:15] <PJBoy> yeah I like the 8 directions too
[00:33:25] <PJBoy> and just repositioning Samus for fine aim
[00:34:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:44:52] <Alipha> speaking of places where grapple is supposed to be used.. https://alipha.ddns.net/grapple.mp4
[00:45:45] <PJBoy> is that a super metroid mouse mat?
[00:46:07] <PJBoy> with both spazer and plasma enabled >_>;
[00:46:41] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:46:44] <Alipha> Lol, yep
[00:46:58] <PJBoy> I approve
[00:48:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[00:48:47] <PJBoy> check this out https://www.youtube.com/watch?v=QHk2LJHSci4
[00:49:02] <PJBoy> possibly the single greatest enhancement to the entire metroid genre
[01:00:10] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[01:03:18] *** Quits: magla (~gelignite@55d42ff9.access.ecotel.net) (Quit: Stay safe!)
[01:10:30] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[01:10:51] *** Joins: adeliktas (~adeliktas@i59F5F686.versanet.de)
[01:13:14] *** Joins: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[01:16:11] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[01:16:19] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[01:18:27] *** Quits: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[01:21:27] <AmR> Can I check if string is phone number with Qt or std::string ?
[01:21:56] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:22:14] <johnny> nice mouse pad
[01:22:47] <johnny> not just with std::string.
[01:23:22] <johnny> you'd need a regex or the like. whether qt has validators that include phone numbers, the internet would do a better job at telling though than this room
[01:23:26] <AmR> johnny: Did you mean regx with string ?
[01:23:42] <johnny> yes
[01:24:12] <johnny> if you're already using qt though, i'd definitely search for a existing validation suite
[01:24:48] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[01:26:06] <johnny> i haven't played a good metroidvania in awhile.. something that really makes me wanna keep going with it.
[01:26:13] <AmR> OK
[01:26:17] <AmR> Thanks :)
[01:27:23] <johnny> i've never tried to do phone number or related validation with desktop software only web stuff.  but i definitely learned that some of these things have a lot of corner cases that are hard to get right
[01:27:44] <johnny> and in the end.. for something like email.. it's best to just check for content separated by an @ and be done with it
[01:28:34] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 268 seconds)
[01:28:46] <johnny> in the early days folks were actually checking tld lngth and they often got it wrong for stuff like .co.uk and then they'd add exceptions, and then later on stuf like .museum was allowed
[01:29:53] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:31:05] <kalven> AmR: if you need serious phone number validation, then https://github.com/google/libphonenumber will do it
[01:31:16] <yolo> what's the 'best' approach to do IPC with c++ style? c++/asio vs c/socket(), what about ipc(shared mem, message queue,etc), or should I just use C APIs and call them in my c++ code
[01:31:39] <johnny> that should make it clear to you that there's no best :) it really depends on what you're trying t do
[01:32:10] <johnny> i'm not saying i have an answer, but i do know the answer to the question os "best ipc" is extremely context dependent
[01:33:22] <johnny> would i saw dbus is the best ipc, nope. do i think it does a pretty ok job at helping programs talk to each other. sure.
[01:34:23] <yolo> here I'm using posix-ipc inside c++ code, just wondering if there is a wrapper or c++-api for the similar low-level way, definitely not dbus yet
[01:35:21] <johnny> well you should be talking about what hte purpose of hte ipc is, and what are the requirements
[01:35:36] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:36:08] <johnny> like, does it need permissions at all for example. do you want it to be some specified metadata, or are you just treating it as pipe
[01:39:10] <yolo> basically i have two processes written in c++ that uses posix-ipc to communicate via IPC
[01:39:38] <yolo> to access a large shared mmap-area
[01:39:46] <johnny> and there's also netlink as well iirc
[01:40:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:44] *** ChanServ sets mode: +v npaperbot
[01:41:01] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[01:42:03] <yolo> isn't netlink a user-kernel IPC thing, not proces-process
[01:42:21] <yolo> to replace ioctl basically with a socket interface
[01:49:10] <johnny> ah yeah it is to the kernel. sorry
[01:49:46] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Quit: varioust)
[01:50:37] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:51:03] <Alipha> johnny: PJBoy: played hollow knight?
[01:51:12] <PJBoy> nah I need to get on that
[01:51:31] <johnny> is there an ok story attached to that?
[01:52:07] <yolo> https://github.com/Slashcash/ipclib/blob/master/src/msg_queue.cpp  someone wrote a wrapper but with 0 star ... looks good to me
[01:52:31] <ville> yolo: if you've never done it, then at least do it once in your lifetime
[01:53:37] <Alipha> PJBoy: it's possibly my favorite game. johnny: I like the story. But the storytelling in-game is rather cryptic and I had to read online exactly what the story was :-(
[01:53:39] <yolo> i'm probably 4 months into c++, not up for the challenge yet, hope to do it later. at the moment just use c++ to do daily job(mostly systemc which is c++17)
[01:55:25] <ville> yolo: it's really not that difficult to get something going
[01:56:04] <ville> yolo: https://opensource.com/sites/default/files/gated-content/inter-process_communication_in_linux.pdf a drive-by overview of some ways
[01:56:31] <ville> but as you can see it's not that many lines for any one of them to get going
[02:02:27] <yolo> yeah let me write more code with that, thanks
[02:08:40] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc71:98a8:e8a4:d876) (Remote host closed the connection)
[02:09:03] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:acd5:fce0:a19c:de74)
[02:09:16] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 268 seconds)
[02:09:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:10:09] *** Joins: plastico (~plastico@neomutt/plastico)
[02:11:19] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[02:19:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9c74:da2:a180:c153)
[02:19:57] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9c74:da2:a180:c153) (Changing host)
[02:19:57] *** Joins: skapata (~Skapata@user/skapata)
[02:22:16] *** Quits: Terminus (~null@user/terminus) (Quit: ZNC 1.8.2 - https://znc.in)
[02:22:35] *** Joins: Terminus (~null@user/terminus)
[02:33:04] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[02:47:33] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: Textual IRC Client: www.textualapp.com)
[02:50:47] <ville> apparently the designer of apple's m1 has left back to intel
[02:51:36] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:52:08] <ville> him and what's the other guy? jim keller? must be making pretty good bank if you calculate a good salary raise each time they switch
[02:53:26] <artok> that bank is nothing for companies when they just want to keep the IP of the products those guys develop...
[02:54:58] <artok> good for the guys
[02:55:34] <artok> now then.. state machines
[02:56:18] <ville> yes it's not going to make a dent to their bottom line
[02:58:36] *** Joins: ferdna (~ferdna@user/ferdna)
[02:59:34] <artok> I've noticed that I need to really be glossary open when watching cppcon videos nowadays
[03:00:10] <artok> so much fancy words gotten into programming world
[03:03:02] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[03:04:01] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:05:41] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:06:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Ping timeout: 256 seconds)
[03:13:57] <johnny> like what?
[03:14:08] <johnny> i wonder if there's stuff i havent heard of
[03:14:13] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Ping timeout: 240 seconds)
[03:17:50] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:18:12] <kalven> [p2300]
[03:18:12] <npaperbot> P2300R3: [SG1, Library Evolution] `std::execution` <https://wg21.link/p2300r3> (by Michał Dominiak, Lewis Baker, Lee Howes, Kirk Shoop, Michael Garland, Eric Niebler, Bryce Adelstein Lelbach) (2021-12-05) (Related: https://wg21.link/p2300r3/github)
[03:18:24] <kalven> just wanted the latest revision..
[03:29:34] <artok> johnny: nothing that much, but for example if you listen to some R Leahy NetworkingTS talks, it is full of words that just don't translate into actual code in the mind of newbie.
[03:31:40] *** Joins: MarcusRoman (~Admin@37.120.236.12)
[03:31:54] <MarcusRoman> morning
[03:41:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:47:31] <Led_Zeppelin2> any vcpkg users here? Tryign to do something simple with sqlite but it seems when I build with cmake its keep saying it can't find the package.
[03:48:43] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328)
[03:49:25] *** Joins: chozorho (~chozorho@2601:146:300:c30::be22)
[04:01:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[04:14:29] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:16:02] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:57] *** Quits: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:30:31] <very_sneaky> Led_Zeppelin2: Not vcpkg, but if you decide to check conan out there are a few of us here that use that
[04:32:09] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[04:46:59] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[04:49:00] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[04:52:22] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[04:55:13] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:56:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:57:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[04:57:21] *** scoobydoo_ is now known as scoobydoo
[04:59:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:00:47] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[05:03:48] *** Quits: irrenhaus3 (~xenon@HSI-KBW-046-005-002-148.hsi8.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[05:05:38] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:08:05] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:13:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[05:14:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:22:24] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[05:29:29] *** Joins: Xardas (~Xardas@149.233.51.127)
[05:30:57] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[05:36:26] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[05:36:44] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:40:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:45] *** ChanServ sets mode: +v npaperbot
[05:42:25] *** Joins: Xardas (~Xardas@149.233.51.127)
[05:43:24] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:44:44] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:45:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[05:46:29] <yolo> g++ -fsanitize=address thread.cpp  -- will work without -lpthread; for anything else I must have -lpthread, what's the magic about address sanitizer here
[05:46:47] *** Joins: malloy (~jimery@116.30.220.175)
[05:46:58] <yolo> maybe ASAN uses pthread on its own
[05:50:29] <yolo> to make c++ less c-alike, I now have asio for socket(), thread for pthread, boost.interprocess for posix-ipc, nice.
[05:58:07] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:13:20] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:19:46] <malloy> hello, i have trouble in this code https://paste.rs/Qrq
[06:20:15] <malloy> why g++ compile says ns is an rvalue ?
[06:25:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:25:21] <kalven> malloy: because of how make_pair is defined. It's not designed to be called with explicit template parameters
[06:29:08] <malloy> kalven: i see, thank you!
[06:29:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:30:16] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 256 seconds)
[06:33:02] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328) (Quit: Quit)
[06:35:10] *** Quits: MarcusRoman (~Admin@37.120.236.12) (Quit: Konversation terminated!)
[06:43:28] *** Joins: frost (~frost@user/frost)
[06:43:37] <very_sneaky> so, i'm reading over the core guidelines to work out whether i should be passing `f(shared_ptr<T>)` or `f(const shared_ptr<T>&)` - I'm not sure I understand the difference between R.34 and R.36: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#r34-take-a-shared_ptrwidget-parameter-to-express-shared-ownership
[06:43:43] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[06:45:59] <very_sneaky> my understanding is pass `f(shared_ptr<T>)` if `f()` takes shared ownership of the pointed-to object. R.36 states to use `f(const shared_ptr<T>&)` to express that `f()` "might retain a reference count to the object" - presumably `f(shared_ptr<T>)` would also retain a reference count to the object?
[06:48:39] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:50:12] <very_sneaky> i guess clang-tidy doesn't warn on these rules though, because i currently have `f(shared_ptr<T>)`, and i'm getting `The parameter 'rMessage' is copied for each invocation but only used as a const reference; consider making it a const reference (fix available) [performance-unnecessary-value-param]`
[06:51:01] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:51:58] <very_sneaky> or would a better way to look at this be, for `f(shared_ptr<T>)` `f()` _will_ take partial ownership, but for `f(const shared_ptr<T>&)` `f()` _may_ take partial ownership
[06:52:32] <very_sneaky> that's kind of what the R.36 example seems to indicate https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#r36-take-a-const-shared_ptrwidget-parameter-to-express-that-it-might-retain-a-reference-count-to-the-object-
[07:05:58] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328)
[07:05:58] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[07:06:28] <AmR> I need some help with Qt
[07:06:52] <onizu> hi, does anyone know where to download the 2019 community edition of visual studio? I'm not able to find it.. only getting the 2022 community edition. For the older versions, the professional ver. of 2019 is available, but not finding the community edition
[07:07:20] <AmR> My code https://pastebin.com/Z2WsiTjQ I try select all text value when I enter the widget by Any way.
[07:07:27] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:42] <AmR> But I can't get it done.
[07:10:39] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:19:37] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:25:32] *** Joins: adeliktas9 (~adeliktas@i59F5FD0A.versanet.de)
[07:27:51] <johnny> AmR, there is a qt channel too
[07:28:03] *** Quits: adeliktas (~adeliktas@i59F5F686.versanet.de) (Ping timeout: 256 seconds)
[07:28:04] *** adeliktas9 is now known as adeliktas
[07:30:45] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:34:43] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:41:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:43:10] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:43:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:45:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:49:55] <AmR> johnny: I don't get any help for that.
[07:49:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:51:53] <AmR> I test same code in nix and windows too.
[07:55:29] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:58:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:58:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:59:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:12:37] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[08:24:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:26:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:26:52] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:30:04] *** Quits: emerent (~quassel@p200300cd5724fde6ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:32:05] *** Joins: emerent (~quassel@p200300cd5724fde6ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:33:41] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:636a) (Quit: Leaving)
[08:34:19] <fundies> after much fidling tsan is hanging at launch just like asan :(
[08:35:51] *** Joins: HvszrStykp (~X@81.171.62.86)
[08:41:19] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[08:47:10] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:47:30] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:49:12] *** Joins: malloy (~jimery@116.30.220.175)
[08:52:29] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 256 seconds)
[08:59:06] <AmR> And Now I try work with QLineEdit like ui->paidAmountTextEdit->setValidator( new QDoubleValidator( 0, 99999, 2, this ) ); but decimals not work :(
[09:03:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[09:03:30] *** Joins: NiD27 (~nid27@49.205.144.26)
[09:24:28] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:37:47] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[09:40:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:47] *** ChanServ sets mode: +v npaperbot
[09:41:01] *** Quits: MetaNova (zero-one@znc/supporter/metanova) (Read error: Connection reset by peer)
[09:44:48] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[10:09:02] *** Quits: NiD27 (~nid27@49.205.144.26) (Quit: Leaving)
[10:15:53] *** Joins: supernova (~quassel@2405:9800:ba11:6207:76f3:c4cc:debc:f604)
[10:17:14] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:19:39] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:20:44] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[10:28:23] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[10:33:42] *** Joins: johnny (~johnny@user/johnny)
[10:40:20] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[10:41:31] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:41:59] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[10:43:15] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[10:44:33] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[10:49:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:58:00] *** Joins: HvszrStykp (~X@81.171.62.86)
[11:01:17] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[11:05:15] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[11:08:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[11:09:41] *** Joins: namo (~nomo@95.87.208.95)
[11:10:35] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[11:12:02] *** Joins: Xardas (~Xardas@149.233.51.127)
[11:13:36] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[11:19:51] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[11:32:58] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[11:33:59] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[11:36:10] *** Joins: johnny (~johnny@user/johnny)
[11:39:50] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:42:43] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:43:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:48:41] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:55:32] <xkoncek> i set up a upd server using libevent, i am missing one bit: how can i obtain information about the source address / port if i only have a file descriptor ready to be read?
[11:57:44] <xkoncek> oh, it's just recvfrom
[12:04:26] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[12:09:32] <Haohmaru> udp "server" ? are you sure about that
[12:12:34] *** Joins: andreasbuhr (~quassel@p549dbf2a.dip0.t-ipconnect.de)
[12:12:39] *** Quits: andreasbuhr (~quassel@p549dbf2a.dip0.t-ipconnect.de) (Client Quit)
[12:14:46] *** Joins: robod34 (Username@79.113.195.239)
[12:15:46] *** Joins: p-i- (~Ohmu@2403:6200:8978:b697:449d:f7d9:f9f6:57cc)
[12:17:17] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:b697:cd3e:cdb2:bf35:7e26) (Ping timeout: 240 seconds)
[12:20:49] <xkoncek> i am not sure, but i will try it
[12:23:27] <Haohmaru> i mean, since UDP isn't like TCP you know..
[12:23:53] <Haohmaru> altho you could still call something that vomits a lot of data over UDP a "server" .. i guess
[12:29:34] <ville> network topology can be independent of the chosen protocol
[12:30:06] <ville> if you're making a game it's pretty easy to clearly claim that some process/machine is a server and the others are the clients
[12:31:09] <fiesh> DNS servers are usually queried via UDP by their clients, so I'm not sure what point there is against "UDP servers"
[12:31:32] <ville> it's just transport mechanism. doesn't change the topology. of course you probably try to select suitable transport mechanism and network topology together
[12:31:52] <ville> ...based on the problem you're solving
[12:32:44] <Haohmaru> sorry ville, i'll blame my coffee levels
[12:32:47] * Haohmaru hides
[12:35:27] *** Quits: chozorho (~chozorho@2601:146:300:c30::be22) (Quit: good night)
[12:35:33] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[12:35:34] <xkoncek> also considering having both tcp (for session and important deliveries) and udp for most of communication
[12:36:20] <ville> you can do guaranteed/important deliveries over udp just as well
[12:36:39] <xkoncek> i feel like it is easier to work with C libs than C++ libs (yeah, you boost::asio)
[12:37:05] <ville> ...and then pop up that "server desync" dialog on the client when a guaranteed data fails to be delivered for long enough
[12:38:35] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[12:39:17] <fiesh> xkoncek: I disagree with that... but anyhow, there are also libraries for what you're trying to do, so you might want to consider using one
[12:41:21] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[12:43:57] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[12:44:37] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:cd8d:9b19:2534:65f0) (Ping timeout: 240 seconds)
[12:51:54] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[12:56:23] <LordKalma> !fact
[12:56:24] <nolyc> LordKalma: A namespace member name has namespace scope.
[12:57:51] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:01:17] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (Ping timeout: 240 seconds)
[13:04:20] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[13:08:03] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:11:34] *** Joins: plastico (~plastico@neomutt/plastico)
[13:13:52] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:16:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:17:41] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:21:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:21:47] <LordKalma> PJBoy, the only thing I know about super metroid is kill the animals
[13:24:13] *** Quits: AmR (~AmREiSa@156.199.28.131) (Quit: Konversation terminated!)
[13:29:43] <Haohmaru> !fact
[13:29:44] <nolyc> Haohmaru: A namespace member name has namespace scope.
[13:29:51] <Haohmaru> >:(
[13:30:27] * Haohmaru inverts nolyc vertically
[13:31:23] <PJBoy> did you know that Metroid was vaguely based on Alien?
[13:31:39] <PJBoy> and that Samus is vaguely designed around Kim Basinger?
[13:36:14] *** Quits: malloy (~jimery@116.30.220.175) (Quit: WeeChat 3.0)
[13:40:07] <Haohmaru> dafuq is that?
[13:40:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:50] *** ChanServ sets mode: +v npaperbot
[13:42:32] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[13:43:26] *** Joins: ravan (~ravan@user/ravan)
[13:44:15] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:acd5:fce0:a19c:de74) (Ping timeout: 268 seconds)
[13:44:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[13:44:43] *** Joins: zen_coder (~zen_coder@ip5f5bd770.dynamic.kabel-deutschland.de)
[13:53:27] <RandomReader> very_sneaky - the "will" vs "may" distinction is accurate .. but given what you've mentioned from clang, I'd ask whether you need to be transferring ownership at all, since the warning implies you're not really doing anything with the shared_ptr itself
[13:54:16] <RandomReader> in pure object-value terms, the difference is just that the function does have its own copy, vs may make a copy itself
[13:54:27] <RandomReader> in the case of shared_ptr, "value" means "participating in ownership"
[13:55:41] <RandomReader> but if clang is saying you're not mutating it as a copy internally, and hasn't recommended a move instead of a copy somewhere inside the function body, that implies you're not actually doing anything with the ownership at the moment and can just pass a T& (or whatever)
[13:56:07] <RandomReader> clang-tidy sorry, not trying to imply this is compiler analysis
[14:04:09] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328) (Quit: Quit)
[14:10:05] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[14:12:57] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[14:15:51] *** Joins: paul424 (~tom@ip-5-172-233-168.multi.internet.cyfrowypolsat.pl)
[14:20:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[14:21:09] *** Quits: paul424 (~tom@ip-5-172-233-168.multi.internet.cyfrowypolsat.pl) (Ping timeout: 256 seconds)
[14:22:34] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (Quit: Battle for Wesnoth: https://www.wesnoth.org/)
[14:22:50] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[14:23:32] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[14:26:49] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[14:27:42] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[14:29:37] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[14:33:28] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328)
[14:34:53] *** Joins: paul424 (~tom@ip-5-172-239-113.multi.internet.cyfrowypolsat.pl)
[14:41:45] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[14:42:11] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[14:42:40] *** LordKalma_ is now known as LordKalma
[14:48:18] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328) (Remote host closed the connection)
[14:48:36] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328)
[14:51:57] *** Quits: supernova (~quassel@2405:9800:ba11:6207:76f3:c4cc:debc:f604) (Ping timeout: 240 seconds)
[15:03:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[15:11:00] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[15:13:25] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:33:17] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[15:33:24] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[15:35:12] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[15:36:29] *** Joins: johnny (~johnny@user/johnny)
[15:48:42] *** Joins: Miyu (~hackkitte@94.31.103.136)
[15:51:31] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[15:51:47] <very_sneaky> RandomReader: thanks for the response - that does clear things up for me.
[15:52:31] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Ping timeout: 268 seconds)
[15:53:01] <very_sneaky> At the moment, the function takes the shared pointer and pushes it back to a vector - so another copy is made, and the vector takes partial ownership. the function itself doesn't really do anything
[15:53:53] <very_sneaky> i guess what's hazy in my mind is whether it's important to say "at some point in this function, ownership will definitely be taken" or because the function itself doesn't own it, the reduced claim on ownership is warranted
[15:54:16] <RandomReader> if it's always pushing it to the vector, I'd frame it as taking  shared_ptr<T>  and use std::move in the push
[15:54:26] <very_sneaky> functionally, `f(const std::shared_ptr<T>&)` is sufficient, because it just gets copied when moved into the vector which I guess also has the "takes ownership" semantic
[15:54:53] <very_sneaky> yeah?
[15:54:57] <RandomReader> if there's logic where it sometimes might not, I'd frame it as taking   const shared_ptr<T>&
[15:55:00] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:55:25] <very_sneaky> okay gotcha, i think that is the most consistent way to approach it
[15:55:36] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:56:46] <very_sneaky> i've gotta say, beyond the utility of having something give me warnings about my code, I've learnt a disproportionate amount about what i should and shouldn't be doing from clang-tidy. this tool is amazing
[16:00:57] *** Miyu is now known as hackkitten
[16:02:56] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:678f)
[16:04:39] <RandomReader> yeah, being able to turn guidelines into static analysis is really useful for discovering what to care about, instead of just having to read and remember countless pages of things
[16:08:29] <very_sneaky> yep. I'm definitely going to introduce it at work. The more i learn about the tooling available now, the more i can't believe nobody at work has heard of these things, especially for career c++ devs
[16:10:38] *** Joins: jokoon (~jokoon@136.252.163.126)
[16:13:55] <RandomReader> oh, and to add a bit to why I picked that framing: the parameter is communicating to callers of the function, so in this case it's whether the function (interface) logically captures ownership always/sometimes .. the vector is just a black-box implementation detail as far as callers are concerned, so not part of the interface choice
[16:14:41] <very_sneaky> yeah, i gotcha - that's where my thinking was in initially making it pbv to begin with
[16:14:44] <RandomReader> I find framing things that way just naturally composes, so at any given point the interface user can tell what's going to happen
[16:15:06] <RandomReader> yeah makes sense, and the move should suppress the original tidy message
[16:16:46] *** Joins: Simplar (~quassel@188.163.93.76)
[16:34:02] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[16:36:57] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[16:39:37] *** Quits: paul424 (~tom@ip-5-172-239-113.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:42:56] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328) (Quit: Quit)
[16:43:16] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328)
[16:46:39] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:54:38] *** Joins: magla (~gelignite@55d457f6.access.ecotel.net)
[16:54:49] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:55:04] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[16:58:57] <manuels> is it possible to have templated pure virtual functions?
[16:59:08] <manuels> eg. a templated interface class?
[16:59:54] <ville> class templates can have virtual functions
[17:00:07] <manuels> like template<class T> class A {virtual doSth(T*t) = 0;};
[17:00:31] <ville> function templates can't be virtual
[17:00:44] <manuels> so the above case would work?
[17:00:48] <manuels> nice
[17:01:16] <manuels> ty
[17:01:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[17:02:34] <PJBoy> LordKalma, ngl this is kinda embarrassing to see https://puu.sh/IB7IB/75b8e899d0.png
[17:04:10] <PJBoy> I get that there's no ISO standard for pronouns, but listing around 40 esoteric examples and then claiming you're taking them seriously
[17:04:12] <PJBoy> idk man
[17:05:20] <LordKalma> hahahah
[17:06:21] <PJBoy> I think a blanket "don't use pronouns" would be easier to swallow
[17:09:35] *** Joins: irrenhaus3 (~xenon@HSI-KBW-046-005-002-128.hsi8.kabel-badenwuerttemberg.de)
[17:10:00] <Led_Zeppelin2> any vcpkg users? I keep getting  Error: this vcpkg instance requires a manifest with a specified baseline in order to interact with ports. Please add 'builtin-baseline' to the manifest or add a 'vcpkg-configuration.json' that redefines the default registry.
[17:13:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ccc4:2031:23da:e328) (Quit: Quit)
[17:14:33] *** Joins: seninha (~seninha@user/seninha)
[17:17:59] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[17:23:46] *** Joins: pulse (~pulse@user/pulse)
[17:26:57] *** flooded is now known as _flood
[17:27:25] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[17:33:39] *** Quits: phoenix1 (phoenix@user/phoenix) (Ping timeout: 268 seconds)
[17:35:02] *** Joins: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de)
[17:35:37] *** Quits: traxex (traxex@user/traxex) (Ping timeout: 240 seconds)
[17:36:38] *** Joins: phoenix1 (~phoenix@user/phoenix)
[17:40:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:46] *** ChanServ sets mode: +v npaperbot
[17:42:49] *** Joins: xkuru (~xkuru@user/xkuru)
[17:43:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:46:55] <very_sneaky> Led_Zeppelin2: might get more bites in the #vcpkg channel on the cpplang slack
[17:47:07] <very_sneaky> https://cppalliance.org/slack/
[17:47:10] *** Quits: Nixx (~quassel@bulbasaur.sjorsgielen.nl) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[17:52:06] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:58:38] *** Joins: traxex (traxex@user/traxex)
[17:59:18] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:59:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[18:08:24] *** Quits: artok (~azo@mobile-access-bcee77-2.dhcp.inet.fi) (Ping timeout: 256 seconds)
[18:09:35] *** Joins: artok (~azo@mobile-access-bcee77-2.dhcp.inet.fi)
[18:14:28] *** Quits: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de) (Quit: Leaving)
[18:15:54] *** Joins: Nixx (~quassel@bulbasaur.sjorsgielen.nl)
[18:22:37] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:23:32] *** Quits: magla (~gelignite@55d457f6.access.ecotel.net) (Quit: Stay safe!)
[18:24:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[18:26:33] *** Quits: jokoon (~jokoon@136.252.163.126) (Remote host closed the connection)
[18:30:59] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:33:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:193a:8038:cdb2:3b71)
[18:33:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:193a:8038:cdb2:3b71) (Changing host)
[18:33:13] *** Joins: skapata (~Skapata@user/skapata)
[18:43:34] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:47:06] *** Joins: jkaye (~jkaye@2601:281:8300:7530:960c:6e00:5eeb:eb5a)
[18:53:44] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[18:54:05] *** Joins: pulse (~pulse@user/pulse)
[18:58:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c993:298f:5351:f526) (Ping timeout: 268 seconds)
[19:04:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc) (Ping timeout: 240 seconds)
[19:07:01] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:07:17] *** Quits: zen_coder (~zen_coder@ip5f5bd770.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[19:11:35] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[19:16:25] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:22:25] *** Joins: paul424 (~tom@ip-5-172-239-219.multi.internet.cyfrowypolsat.pl)
[19:26:31] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:acd5:fce0:a19c:de74)
[19:26:50] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[19:30:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:35:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[19:38:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:40:21] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[19:41:02] *** Quits: jkaye (~jkaye@2601:281:8300:7530:960c:6e00:5eeb:eb5a) (Ping timeout: 240 seconds)
[19:42:06] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[19:44:18] <p-i-> Does C++ have something akin to Python's `set`? I'm receiving each message-id twice, and I want to cout a ⛳️ next to the first occurrence of a fresh message-id.
[19:44:43] *** Joins: chozorho (~chozorho@2601:146:300:c30::d5ec)
[19:45:22] <kalven> there's std::set
[19:48:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:49:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:50:23] <whupdup> and std::unordered_set if your expectation is something that functions akin to a hashmap
[19:50:30] <p-i-> looks like I can do something like: `s = std::set<int>(); ...; auto& it = s.find(my_int); bool is_first = it==std::set::end; if (is_first) s.insert(my_int); else s.erase(my_int);`
[19:50:31] <whupdup> hashset*
[19:50:42] *** Joins: jkaye (~jkaye@2601:281:8300:7530:89aa:29d4:1f39:3e9)
[19:51:02] <PJBoy> drop the &
[19:51:35] <Haohmaru> no, put it gently on the floor
[19:51:38] <p-i-> Doesn't & prevent a copy?
[19:51:43] <PJBoy> and `it == s.end()`
[19:51:50] <PJBoy> you don't want to prevent a copy
[19:52:22] <p-i-> isn't it a micro-performance gain to use &, tho?
[19:52:27] <PJBoy> no
[19:52:53] <p-i-> Which of set / unordered_set is expected to perform faster?
[19:53:15] <PJBoy> depends on the performance you're measuring
[19:54:08] <PJBoy> unordered_set has decent average operation time, set has worse average operation time but better worst case operation time
[19:54:45] <p-i-> I'm guessing an ordered set is internally a linked list
[19:54:55] <PJBoy> binary tree
[19:55:50] <p-i-> I see... can't binary search a linked list
[19:56:27] <p-i-> That looks like a nontrivial thing to implement from scratch. good ole stdlib
[19:57:12] <whupdup> Does anyone know how to debug "libstdc++.so.6: version `GLIBCXX_3.4.29' not found"? I can tell one of my dependencies wants some version of glibcxx I don't have, but how do I tell?
[19:57:30] <whupdup> I'm trying to compile a project with CGAL
[19:57:52] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[19:58:16] <whupdup> which I think depends on GMP, MPFR, and Boost, all of which I just installed with apt-get
[19:58:48] <whupdup> and I bet if I recompile them they'll stop asking for a glibc I don't have, but I don't wanna blindly recompile all of them
[20:02:22] *** Joins: Mooncairn (~mooncairn@user/mooncairn)
[20:05:16] *** Joins: supernova (~quassel@2405:9800:ba11:6207:e5ae:ae10:254d:e7eb)
[20:08:52] <p-i-> Suppose instead of just storing the sequence-id, I wish to store the pair (sequence-id, system-timestamp)? Is there some stdlib primitive I can use?
[20:10:47] <p-i-> This would be like a Python dict. In Python I'd do `if seq_id in D.keys(): { delta_t = time() - D[seq_id]; D.delete(seq_id) } else { delta_t = -1; D[seq_id] = time() }`
[20:12:30] <whupdup> std::unordered_map
[20:12:33] <whupdup> or std::map
[20:12:42] <whupdup> same limitations as before in terms of implementation
[20:23:29] <p-i-> w00t, w3rkz, tx
[20:23:50] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:32:59] *** Joins: jokoon (~jokoon@136.252.163.126)
[20:35:50] *** Joins: gehn (~gehn@user/gehn)
[20:40:31] *** Joins: skapate (~Skapata@2804:14c:87b0:a6f9:406a:ebc:a997:9963)
[20:40:31] *** Quits: skapate (~Skapata@2804:14c:87b0:a6f9:406a:ebc:a997:9963) (Changing host)
[20:40:31] *** Joins: skapate (~Skapata@user/skapata)
[20:42:57] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[20:45:19] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:52:57] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:57:24] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:58:42] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:58:51] <kalven> turns out catch (v2) fit my test framework reqs
[20:58:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:59:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:00:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:01:58] *** Joins: Fairy (~Fairy@2001:464a:4992:0:bdfd:8ef1:211a:77dc)
[21:08:37] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:14:17] *** Joins: proller (~p@80.240.216.69)
[21:16:25] <p-i-> Is there any easy way to install recent boost on ubuntu without building it?
[21:17:02] <p-i-> `sudo apt-get install libboost-all-dev` only gives me 1.65.1
[21:17:06] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:19:01] <TinoDidriksen> I would say stick with that. It's a good idea to use what the OS provides, unless you only need the header-only parts.
[21:19:31] <p-i-> I'm getting a build error, which I suspect is from using old boost version (my dev isn't getting the error, and he's on later boost)
[21:19:56] <p-i-> /home/ubuntu/gold/ku-wss-cpp/src/discord.hpp:12:10: fatal error: boost/beast/core/tcp_stream.hpp: No such file or directory
[21:19:57] <p-i->  #include <boost/beast/core/tcp_stream.hpp>
[21:20:23] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[21:27:02] <ville> 1.66 is the first release with beast
[21:27:41] <p-i-> could it be that I'm running ubuntu 18.04 and this is package-locking to outdated versions
[21:31:08] <p-i-> if I switch to an ubuntu 20.04 box is that likely to shake it loose?
[21:32:09] <kalven> who knows..? you and your dev should settle on a version of boost
[21:32:42] <kalven> seeing as breakages between versions arent totally uncommon
[21:32:52] <p-i-> the problem is that `sudo apt-get install libboost-all-dev` only gives me 1.65.1 and I need >= 1.66 for boost::beast
[21:33:56] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[21:36:10] <cbreak> p-i-: then get boost from somewhere else.
[21:36:29] <cbreak> maybe download it from git via a submodule, or just leave the problem to the user / deployer :)
[21:36:54] <p-i-> I am the user/deployer lol
[21:37:28] <p-i-> running with:  wget https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz
[21:38:37] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:acd5:fce0:a19c:de74) (Ping timeout: 240 seconds)
[21:40:16] <cbreak> if you want to download an archive, then you could do that via cmake's ExternalProject_Add
[21:40:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:47] *** ChanServ sets mode: +v npaperbot
[21:43:19] <p-i-> That's interesting... so the project would have its own /libs/boost, say. That would make the project portable. But from following https://stackoverflow.com/a/24086375/435129 I see I need several CLI commands: `sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev libbz2-dev libboost-all-dev`, `./bootstrap.sh --prefix=/usr/`, `./b2`, `sudo ./b2 install`
[21:43:27] <p-i-> Would I have to work those into my CMakeLists.txt also?
[21:44:31] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:44:42] <cbreak> nothing that does sudo would.
[21:44:53] <cbreak> you'd have to change your project to search / use its own boost
[21:45:05] <cbreak> if you need python stuff, then you still have to do that separately
[21:45:07] *** Quits: ville (~ville@user/ville) (Quit: ville)
[21:45:21] <cbreak> I don't think bundling python with your sources is a good idea
[21:45:26] *** Joins: ville (~ville@user/ville)
[21:45:33] <cbreak> you'll still need a compiler and the rest of the tools
[21:45:45] <cbreak> and dependencies for boost
[21:46:08] <cbreak> you will have to build boost yourself, if you want the built parts of boost, this can be done via cmake
[21:47:37] <BurumaSerafuku> bundling the whole python machinery? or just embedded python files?
[21:48:34] <cbreak> python-dev is the python interpreter library / python c headers
[21:52:32] <p-i-> ok have boost now, that was surprisingly painless. made a cuppa while it built.
[21:53:17] *** Joins: AmR (~AmREiSa@156.199.28.131)
[21:55:01] <p-i-> master branch of my project builds fine, but checking out the dev branch it won't build, I'm getting "error: ‘chrono’ is not a namespace-name" https://bpa.st/WBOQ
[21:55:06] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:55:31] <p-i-> This is odd... it builds on my dev's ubuntu
[21:55:35] <p-i-> What am I missing here?
[21:56:06] <AmR> I have old Question, About Idea I saw it. Can I ask about it ?
[21:56:48] <p-i-> AmR: Asking questions on IRC is forbidden. It's a new directive. Sorry!
[21:57:27] <AmR> p-i-: g++ -std=c++11
[21:57:33] <AmR> p-i-: Hahahah
[22:00:37] *** Quits: supernova (~quassel@2405:9800:ba11:6207:e5ae:ae10:254d:e7eb) (Ping timeout: 240 seconds)
[22:00:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a9bb:faa4:6c28:2bd6)
[22:01:02] <p-i-> https://bpa.st/74YQ <-- that's a paste with my CMakeLists.txt included
[22:01:38] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[22:11:40] <gehn> p-i-, we're already on 21.10 by now and there's an easy way to find out if it has a more satisfactorily recent version of boost, which is do a package search on https://packages.ubuntu.com/impish/
[22:18:44] *** Joins: ADHD (~XXX@user/ADHD)
[22:22:20] <p-i-> gehn: Thanks! 1.74.0 ... yes 21.10 would fix the boost dep
[22:23:49] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:24:58] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[22:25:20] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:c9bb:adce:367d:37d8)
[22:25:21] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:c9bb:adce:367d:37d8) (Changing host)
[22:25:21] *** Joins: RoKenn (~RoKenn@user/rokenn)
[22:26:03] <p-i-> huh. This fixed it: `set(CMAKE_CXX_STANDARD_REQUIRED ON)`
[22:26:28] <p-i-> I wonder why it was necessary on my ubuntu box but not my dev's. Or my mac.
[22:29:39] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[22:37:06] <gehn> different compiler versions are going to use different standards by default if you don't specify
[22:37:25] <gehn> g++ 1.x presumably doesn't use the C++17 standard by default
[22:40:46] *** Quits: baltazar (~baltazar@84-236-61-122.pool.digikabel.hu) (Ping timeout: 268 seconds)
[22:41:13] *** Quits: jokoon (~jokoon@136.252.163.126) (Remote host closed the connection)
[22:41:23] *** Quits: mitch0 (~mitch@84-236-61-122.pool.digikabel.hu) (Ping timeout: 268 seconds)
[22:42:14] *** Joins: baltazar (~baltazar@193-226-249-203.pool.digikabel.hu)
[22:42:54] *** Joins: mitch0 (~mitch@193-226-249-203.pool.digikabel.hu)
[22:47:46] <p-i-> gehn: https://packages.ubuntu.com/impish/ ... Is that showing the packages that `apt-get install` installs for ubuntu 21.10?
[22:50:14] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[22:52:13] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[22:52:17] <TinoDidriksen> The easy way to search for packages across Ubuntu versions is e.g. https://packages.ubuntu.com/search?keywords=libboost-dev
[22:52:17] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Ping timeout: 240 seconds)
[22:53:36] <xkoncek> if there are multiple udp datagrams ready at a given socket, can `recvfrom` be used concurrently from different threads?
[22:58:53] <p-i-> tx
[23:08:51] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:14:47] <ville> xkoncek: i am going to guess unspecified
[23:15:33] <xkoncek> no mention of "thread safety" manpage
[23:15:55] <xkoncek> i remember boost::asio was somehow able to do asynchronous reads
[23:17:50] <xkoncek> so, that looks like a job for fcntl and O_ASYNC
[23:18:47] <dfkfs> gcc tells me the size of std::string is 32 bytes. is there a problem?
[23:20:48] <kalven> xkoncek: more like using epoll
[23:23:17] <AmR> I saw vb6 App write file when deep freeze is enabled, How That Can be done ?
[23:23:50] *** Quits: paul424 (~tom@ip-5-172-239-219.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:26:55] <ville> xkoncek: the function it self is thread-safe, just the same fd part is questionable. at least posix makes a mention of it for read(), but recvfrom() has nothing
[23:27:33] <xkoncek> kalven there are two stages: asynchronously get notified when data is available: already doing that with libevent which is able to use epoll, second stage: initiate read operation like `recvfrom` and return immediately for other asynchronous reads to be available
[23:27:56] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:28:25] <kalven> yeah, the idea is that epoll (or similar) will tell you when there's data to be read from the socket
[23:28:33] <kalven> which you can then do without blocking
[23:28:42] <xkoncek> but the read itself is blocking
[23:28:51] <xkoncek> and doesn't have to be
[23:29:41] <ville> https://pubs.opengroup.org/onlinepubs/9699919799.2016edition/functions/V2_chap02.html#tag_15_09_07
[23:29:44] <kalven> do you want it to be blocking or non-blocking?
[23:30:27] <ville> recvfrom() is not in that list so i would presume it's unspecified what happens
[23:30:32] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:31:28] <ville> and that's only for regular files and pipes anyway
[23:31:39] <xkoncek> ville BSD sockets (socket.h) was never part of POSIX was it?
[23:32:01] <xkoncek> i thought it is just a de-facto standard
[23:32:03] <ville> recvfrom() is part of posix
[23:33:26] <gehn> dfkfs, no problem that I'm aware of. what are you a-priori assuming is a problem with that?
[23:33:48] <ville> your operating system may offer guarantees of course on top of posix
[23:34:17] <dfkfs> it's so much bigger than char*
[23:34:35] <dfkfs> so it's not a drop-in replacement
[23:34:43] <gehn> hmm, no I think it's smaller most likely
[23:34:56] <gehn> er, wait, no I'm thinking bits not bytes
[23:35:19] <gehn> dfkfs, I mean, yeah std::string is not the same as char*
[23:35:24] <xkoncek> i am inspecting `recvmsg` it looks like it is able to read multiple times in a signle call?
[23:35:26] <gehn> std::string is an RAII wrapper
[23:35:31] <gehn> you don't get any of that with plain char*
[23:36:03] <xkoncek> still, i thought std::string would be 24 bytes, just like vector
[23:36:36] <xkoncek> perhaps __GLIBCXX_DEBUG?
[23:37:00] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:8d19:f7a3:b91b:6462)
[23:37:00] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:8d19:f7a3:b91b:6462) (Changing host)
[23:37:00] *** Joins: skapata (~Skapata@user/skapata)
[23:37:06] <gehn> depends on the implementation
[23:37:59] <ville> dfkfs: it holds approximately: a pointer to the buffer, size_t of the buffer and size_t of used bytes... dunno where the 8 bytes are coming
[23:39:41] <OnlineCop> Padding
[23:40:21] <kalven> typically no need for padding there
[23:40:23] <OnlineCop> 32 bytes offers some optimizations due to padding.
[23:40:30] <kalven> nah
[23:40:48] <p-i-> gee, I'm stuck oon this one. https://bpa.st/74YQ  thought I'd fixed it but nope. "error: ‘chrono’ is not a namespace-name"
[23:41:02] <ville> p-i-: c++11
[23:41:39] <ville> p-i-: also you don't appear to be including the chrono header
[23:42:28] <ville> !give p-i- testcase
[23:42:30] <nolyc> p-i-: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[23:42:37] <p-i-> ville: Could you elaborate on C++11? I've got `set(CMAKE_CXX_STANDARD 17)` in my cmakelists
[23:42:50] <OnlineCop> p-i-: #include <chrono>
[23:42:51] <ville> you need at least 11
[23:43:03] <PJBoy> he's got 17 in his cmake script
[23:43:23] <p-i-> It's working on my other dev's ubuntu, and both of our macbooks
[23:43:54] <ville> it is unspecified what implicit includes you get once you include any standard header
[23:44:05] <OnlineCop> If you #include <chrono>, does that error go away?
[23:45:12] <OnlineCop> https://stackoverflow.com/a/59772812/801098
[23:48:00] <p-i-> Thanks OnlineCop! I should have just looked at the error in front of me.
[23:48:29] <p-i-> I was instead trying to deduce it from the fact that it worked on 3 other machines.
[23:49:08] <p-i-> still dunno why it works on other platforms, but nvm
[23:49:27] <ville> 22:13:54          ville | it is unspecified what implicit includes you get once you include any standard header
[23:57:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:58:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:59:32] *** Joins: Tokamak (~Tokamak@172.58.188.35)
