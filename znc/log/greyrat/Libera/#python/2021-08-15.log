[00:00:14] <foo> stealth_: lol. Not sure I considered that.
[00:00:32] <foo> SnoopJ and I were thinking that makes more sense but I didn't think about that, not sure if it supports async
[00:00:35] * foo checks
[00:00:53] *** Quits: dakh7 (~dakh7@ip98-169-201-138.dc.dc.cox.net) (Quit: Leaving)
[00:01:21] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-cddf-1a6d-a5f5-5bfa.res6.spectrum.com)
[00:01:30] <foo> stealth_: hmm, not sure this supports async: https://github.com/jazzband/imaplib2/blob/master/imaplib2/imaplib2.py
[00:02:10] <foo> han-solo: thanks for sharing.
[00:02:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:02:30] <foo> heh, so my attempt is somewhat pointless: https://bpa.st/43YA
[00:02:44] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:01] *** Joins: mci64_ (~X@185.242.190.95)
[00:03:28] <foo> To take a step back, my end goal is to read email via IMAP in Python. Preferrably, with IMAP Idle so I'm notified of new email as opposed to polling. How I accomplish that is less important, currently looking at my options
[00:03:29] <stealth_> foo, probably not
[00:03:55] <foo> Darn it, I thought this was going to be my excuse to finally implement trio.
[00:04:39] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[00:04:55] *** Quits: mci64_ (~X@185.242.190.95) (Client Quit)
[00:04:56] <foo> From a quick search I don't see any async library I can use with trio (I believe aioimaplib requires asyncio), I guess I can scratch trio.
[00:05:32] <foo> OR, I can use asyncio with https://github.com/bamthomas/aioimaplib
[00:05:36] <foo> I don't think I can https://github.com/bamthomas/aioimaplib with trio, right?
[00:05:43] <han-solo> right
[00:05:54] <han-solo> asyncio is not so bad
[00:06:08] <han-solo> certainly not a bad choice for your purpose
[00:06:12] <foo> I guess, if nothing more - reading through trio tutorial helped me wrap my mind around async.
[00:06:32] <foo> I do see aioimaplib supports idle https://github.com/bamthomas/aioimaplib#idle-command (cc: SnoopJ
[00:07:27] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 258 seconds)
[00:07:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:07:53] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-cddf-1a6d-a5f5-5bfa.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:08:19] *** Joins: wyclif (~wyclif@user/wyclif)
[00:08:31] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[00:08:34] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-cddf-1a6d-a5f5-5bfa.res6.spectrum.com)
[00:08:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:08:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Remote host closed the connection)
[00:09:01] <stealth_> foo use https://pypi.org/project/aioimaplib/#description i suppose
[00:09:25] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012)
[00:10:31] <foo> stealth_: thanks, it seems STOP_WAIT_SERVER_PUSH isn't defined anywhere but I'm still doing a few tests
[00:11:23] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[00:11:39] <foo> Ah, I just saw the code print ['stop_wait_server_push'] , thus I did STOP_WAIT_SERVER_PUSH = ['stop_wait_server_push'] in this https://github.com/bamthomas/aioimaplib#idle-command
[00:13:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:13:17] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[00:13:50] *** Joins: wyclif (~wyclif@user/wyclif)
[00:15:08] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[00:17:01] <a1eaiactaest> hello all, i have a question. i have this .wav file in which speaker once shouts a letter and once says it normally and i was wondering if i could transform that into 0's and 1s
[00:17:50] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Ping timeout: 252 seconds)
[00:17:54] <SnoopJ> foo, ah, that would probably be a better choice for doing it with async, then
[00:19:24] <foo> SnoopJ: looks like https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py might get me close
[00:19:34] <foo> looks like https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py also is spinning my fans and taking 99% cpu, heh.
[00:20:52] <foo> Is that to be expected? I'm a bit surprised by this
[00:20:59] <foo> I'm on a 2020 MBP maxed out.
[00:21:45] <SnoopJ> foo, I guess the imap_loop() is a rather busy loop
[00:22:01] <foo> If I wasn't camping with limited power I wouldn't mind, heh.
[00:22:19] <SnoopJ> not obvious why that would be
[00:22:32] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-cddf-1a6d-a5f5-5bfa.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:22:41] <foo> SnoopJ: thanks, I knew it was looping - but looping enough to hit 99% CPU and spin my fans? Meh.
[00:23:15] *** Joins: mattil (~mattil@84-253-224-16.bb.dnainternet.fi)
[00:23:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:24:19] <SnoopJ> foo, it doesn't take anything to peg a core: `while True: pass` is sufficient to use 100% of a core.
[00:24:52] <anorthall> yep, an operation is an operation, the CPU knows no different - you can be doing nothing or complex math - it's all just an operation, and continuous operations will peg a core
[00:24:55] *** Joins: wyclif (~wyclif@user/wyclif)
[00:25:03] <SnoopJ> I would have thought looking at that code that the awaits create some dead time, but maybe my mental model isn't great
[00:25:55] <SnoopJ> i.e. maybe the entire event loop (and all tasks in it) are running on that core, and *that* loop is always busy by design
[00:26:20] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:29:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:30:22] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[00:30:27] *** Joins: wyclif (~wyclif@user/wyclif)
[00:30:28] *** Quits: {HD} (~{HD}@37.19.197.232) (Ping timeout: 268 seconds)
[00:30:44] <graingert[m]> <SnoopJ> "I would have thought looking..." <- you need to reach a `yield`
[00:30:53] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[00:30:57] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Quit: leaving)
[00:33:04] <SnoopJ> graingert[m], ah right
[00:33:32] *** Joins: wereii (~wereii@37.205.14.89)
[00:34:47] *** Quits: f8l12 (~f8l12@154.3.42.29) (Ping timeout: 268 seconds)
[00:35:26] *** Quits: mx7ca (~max@user/mx7ca) (Remote host closed the connection)
[00:36:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[00:37:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:39:27] *** Quits: rendar (~rendar@user/rendar) ()
[00:40:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:40:36] *** Joins: V1mV1m (~VimVim@85.191.5.57)
[00:40:54] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[00:40:59] <foo> SnoopJ: huh, thanks, I didn't realize that but just did a TIAS
[00:41:32] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:37] <foo> err, I wouldn't care so much if there was more sun and my solar panels were pulling more.
[00:41:44] <foo> I suppose I can run this on a remote system./
[00:41:52] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:41:59] <SnoopJ> you could probably also adjust the power profile of your entire system, but that might be a little extreme.
[00:42:46] *** Joins: noobly (~noobly@50.38.119.3)
[00:42:51] <foo> SnoopJ: uh, I'll look into it - thanks. Anything I can do to conserve battery draw, heh.
[00:42:58] <foo> If I had an M1 which was a little more efficient it might be ok
[00:43:10] <noobly> can someone help me with this error (regarding dependencies)
[00:43:12] <noobly> http://dpaste.com/C6A6ZHRCK
[00:43:29] *** Quits: VimVim (~VimVim@85.191.5.103) (Ping timeout: 258 seconds)
[00:43:33] <foo> SnoopJ: if I run https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py - and if I send myself an email, I'm expecting it to show up in handle_server_push. And to print something.
[00:43:44] <foo> SnoopJ: but I send myself an email and I don't see anything - am I misunderstanding something here?
[00:44:00] <foo> Unless Gmail's IMAP is delayed, which I wouldn't be surprised about
[00:45:18] *** Quits: poorboy (~poorboy@104.131.46.87) (Quit: ZNC - http://znc.in)
[00:45:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:46:08] *** Joins: qk1z (~qk1z@193-82-226-146.tpgi.com.au)
[00:46:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:47:04] *** Joins: wyclif (~wyclif@user/wyclif)
[00:47:47] *** Quits: Pyt001 (~Pyt001@2402:e280:3d22:227:993d:cd8a:41a0:5875) (Quit: Client closed)
[00:47:48] *** Joins: {HD} (~{HD}@191.96.185.182)
[00:48:03] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012) (Quit: Leaving)
[00:48:37] <foo> Actually, after a bit of debugging, it looks like it's hanging on fetch_messages_headers /me investigates
[00:48:38] *** Joins: poorboy (~poorboy@104.131.46.87)
[00:51:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[00:52:25] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 248 seconds)
[00:52:37] *** Joins: wyclif (~wyclif@user/wyclif)
[00:53:46] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Quit: WeeChat 3.2)
[00:54:16] *** Quits: mattil (~mattil@84-253-224-16.bb.dnainternet.fi) (Read error: Connection reset by peer)
[00:54:42] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[00:55:07] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[00:57:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:58:09] *** Joins: wyclif (~wyclif@user/wyclif)
[00:58:13] *** Joins: derelict (~derelict@user/derelict)
[01:01:40] *** Joins: poorboy_ (~poorboy@159.89.189.144)
[01:02:54] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[01:03:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:03:41] *** Joins: wyclif (~wyclif@user/wyclif)
[01:03:42] <stealth_> noobly, did you change python version?
[01:03:56] <noobly> i actually just upgraded numpy and it's working fine now
[01:04:00] <noobly> thanks for checking though
[01:04:03] <stealth_> noobly, have you tried reinstalling `numpy` ?
[01:04:14] <stealth_> noobly, ok cool
[01:05:47] *** Quits: poorboy (~poorboy@104.131.46.87) (Quit: ZNC - http://znc.in)
[01:06:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:06:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:07:13] <foo> SnoopJ: heh, I guess 40,000 emails would cause an issue. I think that's why my fans were spinning
[01:07:35] <foo> ... yup, python not at 99% cpu now.
[01:07:50] *** Joins: Keira (~k@lulzsec.co.uk)
[01:08:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:09:04] <SnoopJ> aha
[01:09:12] <SnoopJ> that would leave it busy for a while I guess :)
[01:09:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:09:42] *** Quits: MaximB (~MaximB@87.68.164.26) (Quit: Client closed)
[01:09:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:11:57] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[01:12:05] *** Quits: poorboy_ (~poorboy@159.89.189.144) (Quit: ZNC - http://znc.in)
[01:13:18] *** Joins: poorboy (~poorboy@159.89.189.144)
[01:14:12] <foo> SnoopJ: :) So, https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py does exactly what I want. I can work with this. And now I have a bit more understanding about IDLE an async... thanks again all of your help, I really do appreciate it. Now to figure out the next piece of this puzzle.
[01:14:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:14:26] *** Quits: TML (~tml@user/tml) (Ping timeout: 272 seconds)
[01:14:45] *** Joins: wyclif (~wyclif@user/wyclif)
[01:15:28] *** Joins: f-a (~f-a@151.38.95.70)
[01:16:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:17:51] <f-a> good night I am trying to install https://github.com/poljar/weechat-matrix (I followed the «venv» path) but I get this http://paste.debian.net/hidden/177c2a96/ Now, I suspect that is because my libolm is old (Debian stable). How can I tell `pip install` «you will find a newer olm here»?
[01:18:11] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[01:18:13] <f-a> e.g. in  ~/media/vcs/olm/build/release
[01:18:15] <SnoopJ> foo, sure thing
[01:18:15] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:19:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[01:19:35] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:19:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[01:20:05] <dale> f-a: First thing I would try, and this is a bit hacky, would be to set some env vars like: CFLAGS="-O2 -I/path/to/olm/includes" LDFLAGS=-L/path/to/olm/libs pip install whatever
[01:20:19] *** Joins: wyclif (~wyclif@user/wyclif)
[01:21:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[01:21:05] <dale> I think there are some flags you can give distutils via setup.py to tell it where to look for libs but it's a little arcane IIRC, and I need it so infrequently that I never remember it.
[01:21:18] <beaky> hello what is the best way to work on a new project in 2021 my whole life there's been just the python i've installed from the website or the os package manage and setuptools pip and virtualenv (that come included with python) for per-project stuff but nowadays there's like 10 different tools such as pipenv, pyenv, poetry, conda, venv (which i confuse with virtualenv all the time), and many more
[01:21:50] <SnoopJ> beaky, you can go quite far with pip and venv (venv is the stdlib counterpart to virtualenv)
[01:22:04] <SnoopJ> as far as the rest, best advice is try them and see how you like them
[01:22:16] <beaky> nice ill give them a try then
[01:22:47] <f-a> thanks I will try
[01:23:29] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[01:23:59] <stealth_> can you create C wrapper for python using AST? is that a thing?
[01:24:01] <cloudbender> I never realized win10 did something called 'memory compression'
[01:24:38] <cloudbender> that must be a performance hit
[01:24:50] *** Joins: alnr (~alnr@38.125.204.99)
[01:24:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:25:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:25:58] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[01:26:17] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[01:26:37] <alnr> i need to set up daemon or cron job to monitor services, ports, folders etc and take actions (restarting services, emailing etc). is there any python packages for that kind of thing?
[01:27:10] *** Joins: besnn (~besnn@user/besnn)
[01:28:01] <foo> SnoopJ: heh, I kept thinking uid was "user id" ... unique id. *facepalm
[01:28:14] *** Quits: gruuf (~gruuf@94.31.99.29) (Quit: WeeChat 3.1)
[01:28:36] <cloudbender> I alswyas confuse uid with 'user interface device'
[01:30:11] *** Joins: ice9 (~ice9@user/ice9)
[01:30:41] <cloudbender> so my file hasher works, memory stays flat, 21,000 photos, takes some time
[01:30:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:31:10] <cloudbender> using sha256
[01:31:21] *** Joins: Roey (~Roey@user/Roey)
[01:31:21] <cloudbender> thanks everyone for your tips earlier
[01:31:22] *** Joins: Jabberwack (~Jabberwac@user/jabberwack)
[01:31:24] *** Joins: wyclif (~wyclif@user/wyclif)
[01:32:53] <foo> The only issue with https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L19 is it doesn't seem to pull the e-mail body. /me investigates
[01:32:54] *** Quits: n1000 (~n1000@user/n1000) (Quit: WeeChat 3.1)
[01:34:34] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[01:35:00] *** Quits: magla (~gelignite@55d4fb74.access.ecotel.net) (Quit: Stay safe!)
[01:36:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:36:36] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[01:36:57] *** Joins: wyclif (~wyclif@user/wyclif)
[01:37:26] <dale> foo: I'm no IMAP expert but BODY.PEEK[HEADER.FIELDS (...)] smells to me like it's asking the server to send either just selected headers, or else only selected headers plus a limited "PEEK" into the body.
[01:38:51] <foo> dale: thanks :) Yeah, from looking at the original email (raw) in Gmail... the Content-Type... oh wait, unless there's a field for the body. Hmm, I'll look into this PEEK command - good idea.
[01:39:45] <dale> Naturally, because it's IMAP, I think I'm wrong about PEEK.  I think https://datatracker.ietf.org/doc/html/rfc3501#section-6.4.5 says BODY.PEEK is like BODY but doesn't set \Seen flag.
[01:39:51] <foo> dale: "An alternate form of BODY[<section>] that does not implicitly
[01:39:51] <foo>          set the \Seen flag."
[01:40:03] <foo> dale: Yup.
[01:40:17] <foo> dale: which I believe is the same as not marking the email as "Read"
[01:40:28] *** Mikaela is now known as Aminda
[01:41:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:41:49] <dale> foo: That's also my guess.
[01:42:15] <foo> This then causes me to wonder if PEEK doesn't return the BODY
[01:42:28] *** Joins: wyclif (~wyclif@user/wyclif)
[01:42:33] *** Quits: sazawal (~sazawal@122.161.189.200) (Ping timeout: 248 seconds)
[01:42:57] <foo> eg. if I want to pull the text/plain body, maybe I need to explicitly define that. /me investigates
[01:43:02] <dale> foo: But still, the lack of something such as MIME or TEXT in the [<section>] bit of the BODY.PEEK "data item" leads me to think you're not pulling back the body with that command.
[01:43:19] <foo> dale: exactly :) I think we're in sync.
[01:44:26] <dale> foo: I think you'd need to include something like MIME in that list of sections.  Or just request BODY[] or FULL it looks like.
[01:44:51] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:45:36] <foo> dale: ah, I just tried BODY.
[01:45:39] <dale> I think BODY.PEEK would be happy to return the whole message, it just won't change \Seen.
[01:45:55] <dale> foo: It seems like BODY returns the BODYSTRUCTURE, and I have no idea what that means.
[01:45:58] <foo> dale: that would seem to make sense to me, can't imagine it's that strict
[01:46:48] <foo> Separate async question, if I run something in pdb and it returns the coroutine object, is there a way to process that in pdb for the sake of testing?
[01:46:53] <dale> Whereas, "An empty section specification refers to the entire message, including the header."
[01:46:54] <foo> testing/manually trying to walk through a process
[01:47:11] *** Quits: noobly (~noobly@50.38.119.3) (Quit: Client closed)
[01:47:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:47:16] <dale> And the [] in BODY is, I guess, an "empty section specification".
[01:47:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[01:48:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:48:31] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[01:48:46] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[01:48:59] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[01:49:05] *** Joins: sazawal (~sazawal@122.161.189.200)
[01:49:40] *** Joins: Enitin (~Enitin@82.102.22.84)
[01:52:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[01:53:08] *** Quits: teut (~teut@182.69.87.27) (Quit: Connection closed)
[01:53:23] *** Quits: nergar (~Nergar@177.225.152.13) (Read error: Connection reset by peer)
[01:53:34] *** Joins: wyclif (~wyclif@user/wyclif)
[01:53:48] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: Thanks)
[01:53:49] <foo> dale: so if I do this: "(UID FLAGS BODY.PEEK[1])", - I can get the message body
[01:54:00] *** Quits: varaindemian (uid73404@charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:54:03] <foo> dale: but I do want the sections *plus* body, hmm. /me experiments
[01:54:10] <dale> foo: Hm, what's that 1?  Does that ask for the first MIME part?
[01:54:20] <foo> dale: full body I think
[01:55:27] <foo> So maybe the question is, when I do this: BODY[HEADER.FIELDS (Cc Message-ID To Subject Body Content-Type Date References Bcc In-Reply-To From)] ... what do I need to add to this to get the email body
[01:55:34] <dale> foo: Make sure to test with a message that has both text/plain and text/html parts, and also with a message that has binary attachments, like preferably a message with an image in a common format (such that it should have an image/* type) and another message with random binary blob of application/octet-stream.
[01:56:28] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:56:47] <dale> The RFC really makes me think BODY[1] only retrieves the first MIME part, or the first text "section" in a non-MIME message.
[01:56:47] <foo> dale: thanks, I think that's a great idea. Currently just testing with text. I can reasonable assume that the emails I'm specifically trying to parse don't have attachments
[01:56:50] <foo> dale: ... but still a good idea
[01:57:35] <dale> foo: It could be a problem if a message simply doesn't put the text/plain part as the first MIME part.  (I don't know if that's really allowed by spec, but specs are just bug splats on a car windshield when it comes to email.)
[01:59:15] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[01:59:29] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[01:59:39] <foo> dale: :)
[01:59:48] <dale> foo: You could try adding TEXT within the []s but I fear that only pulls back the first text part.
[01:59:55] <foo> This causes me to wonder, can I BODY.PEEK headers *and* the message body?
[01:59:59] <foo> dale: thanks, I did try that - no bueno.
[02:00:00] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[02:00:02] <dale> foo: Personally I'd just change BODY[...] to BODY[] and be done with it, I think.
[02:00:07] * foo checks
[02:00:56] <foo> dale: oh. yes, haha, that's what I want. I didn't realize I could do [], I thought I had to specify
[02:01:08] <foo> dale: Now I think I can use the email library to parse out the message
[02:01:14] <dale> When you start specifying bits inside the "section list" of the BODY "data item" there, it seems like there isn't a way to get the whole body.  Maybe BODY[1.MIME]?  Or BODY[MIME]?  If BODY[TEXT] doesn't cut it.
[02:01:31] <foo> dale: you're exactly right, I didn't try []
[02:01:36] <dale> foo: And BODY.PEEK[] should work too, if you don't want to touch that \Seen flag.
[02:02:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:02:52] *** Quits: extropiator (~extropiat@192.252.220.12) (Ping timeout: 246 seconds)
[02:02:58] *** Joins: wyclif (~wyclif@user/wyclif)
[02:03:40] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[02:04:16] <foo> dale: Yup, that's what I did. Ok, pprint.pprint([e.get_payload() for e in email.message_from_string(response.lines[1].decode()).get_payload()]) gets me what I want... I'll clean that up but this is good!
[02:04:20] <foo> dale: thank you. :)
[02:04:47] <foo> dale: So I pull the full email now BODY.PEEK[] and process with email.message_from_string)
[02:04:52] <foo> email.message_from_string()
[02:05:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:08:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[02:08:31] *** Joins: wyclif (~wyclif@user/wyclif)
[02:08:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[02:09:02] *** Joins: extropiator (~extropiat@162.253.68.157)
[02:10:25] *** Joins: qlixed (~qlixed@181.44.129.13)
[02:11:34] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[02:13:12] *** Joins: n1000 (~n1000@user/n1000)
[02:13:23] * enyc meows
[02:14:10] <AhmedAmerican> enyc: how you do that ? `meows`
[02:14:44] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:15:38] * DPA meows
[02:15:44] <DPA>  /me meows
[02:17:10] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:17:16] *** Joins: irreitug (uid23254@id-23254.tooting.irccloud.com)
[02:17:52] * AhmedAmerican test
[02:17:52] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:18:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 248 seconds)
[02:18:23] *** Quits: hyper_dave (~hyper_dav@197.156.107.121) (Ping timeout: 268 seconds)
[02:18:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:18:46] *** lukedashjr is now known as luke-jr
[02:19:29] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[02:19:35] *** Joins: wyclif (~wyclif@user/wyclif)
[02:20:25] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[02:21:18] *** Joins: CombatVet_ (~c4@user/combatvet)
[02:21:24] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[02:21:55] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[02:22:03] *** CombatVet_ is now known as CombatVet
[02:22:37] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 245 seconds)
[02:24:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[02:24:46] *** Joins: hyper_dave (~hyper_dav@197.156.95.169)
[02:25:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:25:38] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[02:26:19] *** Quits: inom (~inom@176.59.119.1) (Read error: Connection reset by peer)
[02:28:12] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[02:29:39] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:30:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:30:40] *** Joins: wyclif (~wyclif@user/wyclif)
[02:30:42] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[02:31:28] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[02:31:40] <foo> If I have 1 item in a list, what's the easiest way to get that? I could do this=mylist[0] and add a try/except around it in the event [0] doesn't exist
[02:32:23] <stealth_> foo, `this = mylist[0:1]`
[02:32:28] <bpalmer> if mylist: this = mylist[0]
[02:32:42] <bpalmer> why go to the trouble of dealing with exceptions when you can just check beforehand?
[02:32:43] <bjs> foo: well it depends what you want to do in the case it's empty.
[02:33:04] *** Joins: hendursa1 (~weechat@user/hendursaga)
[02:33:07] <bpalmer> (although your question as is is a bit confusing)
[02:33:12] <bjs> well catching the exception is less work usually, if you can
[02:34:34] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[02:35:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:36:12] *** Joins: wyclif (~wyclif@user/wyclif)
[02:37:18] <foo> bjs: I haven't thought about that, I assume you mean - it's easier to just try something and in a small number of cases (if that's how the code goes) an exception is caught
[02:37:26] <foo> bpalmer: google EAFP versus LBYL ... the age old question.
[02:38:57] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: Reconnecting)
[02:39:16] *** Joins: guntbert (~yesitsme@user/guntbert)
[02:40:11] *** Joins: Powerhouse6666 (~Powerhous@S01067898e83ba01c.vn.shawcable.net)
[02:41:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:41:15] *** Quits: Hanii (~textual@host86-138-112-34.range86-138.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:41:42] <foo> Hmph, looks like IMAP plain/text emails put the newlines in less-than-desirable places. Is there a way to clean this up I wonder? /me researches
[02:41:46] *** Joins: wyclif (~wyclif@user/wyclif)
[02:42:02] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[02:42:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[02:42:57] <bpalmer> are you sure it's IMAP that's responsible and not, say, the people who wrote the emails? (Perhaps they wrote in text/html and their client did a bad job of preparing a text/plain alternative)
[02:43:09] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:05] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Client Quit)
[02:44:42] *** Joins: inom (~inom@176.59.116.194)
[02:46:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:47:05] *** Quits: cedric (~cedric@2a01:cb11:867:c200:b279:d575:78c1:92dd) (Quit: Konversation terminated!)
[02:47:12] <graingert> foo: match?
[02:47:17] *** Joins: wyclif (~wyclif@user/wyclif)
[02:47:29] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[02:48:04] <dale> Someone's being cheeky.  3.10 isn't released yet, right?
[02:48:25] <graingert> match mylist:
[02:48:25] <graingert>     case [x]: pass
[02:48:29] <graingert> I think?
[02:48:48] <nedbat> dale: it's not released yet. there's an rc1
[02:48:56] * dale nods
[02:49:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:49:08] <SnoopJ> dale, the official release schedule lives at https://www.python.org/dev/peps/pep-0619/
[02:49:20] <SnoopJ> 3.10.0 final is 4 Oct
[02:49:51] <dale> I'm still not using the walrus operator because so few places I drop code are on 3.9.
[02:50:03] <graingert> dale: Walrus is 3.8
[02:50:20] <dale> graingert: Oh!  My bad.  Well, that's OK because so few places I drop code are on 3.8 either. :)
[02:50:32] <SnoopJ> and soon enough 3.6 will be EOL, not that this will stop people running it heh
[02:51:05] <dale> Thank god for fear over regulations and contract terms such that we'll probably be forced out of 3.6.
[02:51:22] <grawity> foo: are you looking at a Content-Transfer-Encoding: Quoted-Printable
[02:51:28] <graingert[m]> Also you can't use match with black
[02:51:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:52:22] * SnoopJ isn't sure what, if anything, he'd use pattern matching for
[02:52:32] *** Joins: thiras (~thiras@user/thiras)
[02:52:36] <SnoopJ> but I felt the same way about the walrus and it's grown on me just a tiny bit where I can count on it being available
[02:52:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:53:18] <graingert[m]> I use it to get a SyntaxError to enforce python3.8 usage
[02:53:31] <dale> lol
[02:54:31] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:54:46] <dale> SnoopJ: Yeah, I'm not very enthusiastic about match right now, but I'm sure I'll eventually find some good uses for it and come to appreciate it at least a little.
[02:56:04] *** Joins: wilk_ (~wilk@user/wilk)
[02:59:00] <foo> bpalmer: I'm open to the system that generated the email sucking. Very likely.
[02:59:43] <foo> grawity: it looks like Content-Transfer-Encoding: quoted-printable is set
[02:59:44] *** Quits: Akuli (~Akuli@87-94-111-5.bb.dnainternet.fi) (Quit: Leaving)
[02:59:53] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 248 seconds)
[02:59:53] *** wilk_ is now known as wilk
[03:00:20] *** Quits: mertyildiran (~mertyildi@88.234.29.56) (Ping timeout: 258 seconds)
[03:00:21] <foo> graingert: I could match an email and account for the \r\n's , they'll be in consistent places
[03:00:27] <SnoopJ> dale, I definitely appreciate it from an aesthetic/academic perspective, and I can see some code that I *might* write that would make use of it (the examples of Point objects always remind me of game design), but...yea.
[03:01:16] <graingert[m]> SnoopJ: exhaustivity checks sound nice
[03:01:44] *** Joins: driib1 (~driib@185.195.233.169)
[03:02:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[03:02:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:03:05] *** Quits: Jabberwack (~Jabberwac@user/jabberwack) (Ping timeout: 248 seconds)
[03:03:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:03:49] *** Joins: wyclif (~wyclif@user/wyclif)
[03:04:38] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[03:05:15] <whatsupdoc> Hi, if I have code that looks like this: l1 = ["eat","sleep","repeat"];  for ele in enumerate(l1):  print (ele)
[03:05:21] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Reconnecting)
[03:05:36] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[03:05:42] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[03:05:42] *** Quits: driib (~driib@185.195.233.162) (Ping timeout: 258 seconds)
[03:05:43] *** driib1 is now known as driib
[03:05:59] <whatsupdoc> is there like a ele.first() or ele[0th value] that I can use
[03:06:05] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[03:06:23] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[03:06:30] <whatsupdoc> oh lol, nvm, it's ele[0] and ele[1]
[03:06:32] <whatsupdoc> duh
[03:06:46] <stealth_> whatsupdoc, `a = iter(l1); b = next(a); print(b)`
[03:08:04] <nedbat> whatsupdoc: i don't think ele[0] is going to work
[03:08:18] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[03:08:19] <nedbat> whatsupdoc: oh, sorry, it will.
[03:08:55] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[03:09:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:09:19] *** Joins: wyclif (~wyclif@user/wyclif)
[03:10:07] *** Quits: qk1z (~qk1z@193-82-226-146.tpgi.com.au) (Remote host closed the connection)
[03:10:56] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::682e) (Quit: Konversation terminated!)
[03:11:49] *** Joins: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca)
[03:11:50] *** Quits: f-a (~f-a@151.38.95.70) (Ping timeout: 258 seconds)
[03:11:55] *** Joins: Fiji (~Fiji@user/fiji)
[03:12:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[03:12:46] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[03:13:15] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 268 seconds)
[03:13:32] *** Joins: f-a (~f-a@151.44.52.50)
[03:14:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:14:50] *** Joins: wyclif (~wyclif@user/wyclif)
[03:14:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:15:19] *** Quits: flyback (~flyback@2601:540:8201:1e60:7422:5670:8d1b:60f9) (Remote host closed the connection)
[03:15:38] *** Joins: flyback (~flyback@2601:540:8201:1e60:3501:8e2d:c520:e900)
[03:16:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:17:08] <whatsupdoc> You probably shouldn't use it anyway because if you need an index it would be better to write:  for idx, val in enumerate(l1):
[03:17:12] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[03:18:40] <nedbat> whatsupdoc: indeed
[03:18:55] *** Quits: f-a (~f-a@151.44.52.50) (Quit: leaving)
[03:19:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:20:20] *** Joins: wyclif (~wyclif@user/wyclif)
[03:21:08] *** Quits: sazawal (~sazawal@122.161.189.200) (Quit: Leaving)
[03:21:17] *** Joins: Praise (~Fat@user/praise)
[03:22:47] *** Quits: flyback (~flyback@2601:540:8201:1e60:3501:8e2d:c520:e900) (Quit: Leaving)
[03:23:07] *** Joins: flyback (~flyback@2601:540:8201:1e60:3501:8e2d:c520:e900)
[03:23:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:25:33] *** Quits: MDP87900 (~AMP9190@189.34.140.159) (Remote host closed the connection)
[03:25:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:25:51] *** Joins: wyclif (~wyclif@user/wyclif)
[03:29:18] *** Joins: qk1z (~qk1z@193-82-226-146.tpgi.com.au)
[03:29:27] *** Joins: Fluxx (~Fluxx@user/fluxx)
[03:30:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:37:17] *** Joins: wyclif (~wyclif@user/wyclif)
[03:37:31] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 258 seconds)
[03:38:25] *** Quits: extropiator (~extropiat@162.253.68.157) (Ping timeout: 246 seconds)
[03:39:06] *** Joins: extropiator (~extropiat@107.181.178.71)
[03:40:01] *** Joins: Celeo (~Celeo@user/celeo)
[03:40:44] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[03:41:12] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[03:42:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:42:50] *** Joins: wyclif (~wyclif@user/wyclif)
[03:45:33] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8ce1:69c1:b612:d4f0)
[03:47:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[03:48:09] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[03:48:23] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:48:28] *** Joins: wyclif (~wyclif@user/wyclif)
[03:48:34] *** Quits: extropiator (~extropiat@107.181.178.71) (Ping timeout: 246 seconds)
[03:49:49] *** Joins: extropiator (~extropiat@162.253.68.221)
[03:50:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[03:51:29] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[03:53:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:54:31] *** Joins: wyclif (~wyclif@user/wyclif)
[03:56:58] *** Quits: extropiator (~extropiat@162.253.68.221) (Ping timeout: 246 seconds)
[03:57:55] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:58:07] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[03:59:03] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:59:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:59:35] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:59:47] *** Joins: portalrat (~portalrat@user/portalrat)
[03:59:55] *** Joins: wyclif (~wyclif@user/wyclif)
[04:02:35] *** Joins: Wafficus (~user@70.126.240.148)
[04:02:54] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:02:54] *** Wulf4 is now known as Wulf
[04:03:05] <Wafficus> hey there, can anyone help me figure out how to make two separate globs into the same object? https://bpa.st/Z57A
[04:03:34] <Wafficus> this is the output traceback: https://bpa.st/M4UA
[04:04:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:05:00] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- IRC for Android 2.1.59)
[04:05:24] *** Joins: wyclif (~wyclif@user/wyclif)
[04:05:54] <stealth_> Wafficus, change to [] `picture_paths_jpg = [...]`
[04:08:23] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[04:10:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:10:55] *** Joins: wyclif (~wyclif@user/wyclif)
[04:12:16] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[04:13:14] *** Quits: matsaman (~matsaman@user/matsaman) (Remote host closed the connection)
[04:13:42] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Client Quit)
[04:13:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:14:12] *** Joins: nergar (~Nergar@177.225.152.13)
[04:14:25] <SnoopJ> Wafficus, `picture_paths = itertools.chain(picture_paths_jpg, picture_paths_png)` makes an iterable that 'chains together' the two input iterables
[04:14:49] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[04:14:54] *** Joins: korg815 (~korg815@user/korg815)
[04:16:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:16:26] *** Joins: wyclif (~wyclif@user/wyclif)
[04:18:55] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 258 seconds)
[04:19:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:19:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[04:20:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:30:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:30:48] *** Joins: wyclif (~wyclif@user/wyclif)
[04:30:56] *** Joins: gry (~quassel@botters/gry)
[04:31:44] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:31:56] *** Joins: waxfire (~waxfire@65.119.2.240)
[04:35:04] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[04:35:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:36:40] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- IRC for Android 2.1.59)
[04:36:44] *** Joins: rany (~rany@user/rany)
[04:36:48] *** Quits: qk1z (~qk1z@193-82-226-146.tpgi.com.au) (Quit: WeeChat 2.8)
[04:36:50] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[04:36:51] *** Joins: wyclif (~wyclif@user/wyclif)
[04:38:28] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[04:39:27] *** Joins: rany (~rany@user/rany)
[04:40:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 248 seconds)
[04:42:49] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[04:43:52] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[04:43:53] *** Quits: hyper_dave (~hyper_dav@197.156.95.169) (Ping timeout: 248 seconds)
[04:47:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[04:47:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[04:47:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:47:50] *** Joins: wyclif (~wyclif@user/wyclif)
[04:52:17] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[04:52:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:53:23] *** Joins: wyclif (~wyclif@user/wyclif)
[04:56:41] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[05:00:32] *** Quits: Powerhouse6666 (~Powerhous@S01067898e83ba01c.vn.shawcable.net) (Ping timeout: 252 seconds)
[05:01:56] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[05:03:20] <SnoopJ> graingert[m], probabilistic structures probably look nicer in pattern matching, as I think about it a little more (and need one)
[05:04:10] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[05:08:50] *** Quits: emerent (~quassel@p200300cd57058cf5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:09:51] *** Joins: emerent (~quassel@p200300cd57058cadba27ebfffed28a59.dip0.t-ipconnect.de)
[05:10:03] *** Joins: Batzy (~Batzy@user/batzy)
[05:10:50] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[05:10:57] <Batzy> hi all, I have a python script running in docker which is using httpx to make a lot of rest calls (properly controlling my rates) to a server. Right around 550k calls in, I am getting the following error: https://bpa.st/6B3Q
[05:11:02] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:54b4:c0da:a55c:9131)
[05:11:19] <Batzy> any idea about causes and fixes?
[05:12:03] <SnoopJ> Batzy, over what duration were those calls made?
[05:12:14] <Batzy> SnoopJ a day
[05:13:27] <Batzy> SnoopJ to make my full load of calls (800k calls) it was expected for me to take 1403 minutes
[05:13:43] <SnoopJ> Batzy, well, the message itself is saying that it doesn't know how to resolve the host for URL `org+rel`, but I don't know what the causes of that would be. Is this a consistently recurrent problem for you?
[05:14:21] <Batzy> SnoopJ I dont know, i havent done many loads of this size. I would expect it to occur for large loads like this though
[05:14:42] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:d869:df28:2173:ba54) (Ping timeout: 240 seconds)
[05:15:03] <Batzy> SnoopJ the host doesn't go down I can confirm. I can hit the host on say, postman, and it works fine
[05:16:22] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b485-c402-7731-8036.res6.spectrum.com) (Quit: jarthur)
[05:18:00] *** Joins: TML (~tml@user/tml)
[05:18:04] *** Joins: extropiator (~extropiat@162.253.68.195)
[05:18:28] *** Joins: dcaro (~dcaro@user/dcaro)
[05:18:40] *** Parts: TML (~tml@user/tml) ()
[05:18:52] *** Joins: TML (~tml@user/tml)
[05:18:54] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 272 seconds)
[05:19:02] *** Quits: dcaro_away (~dcaro@user/dcaro) (Ping timeout: 256 seconds)
[05:19:55] <Batzy> 1. would baking in retries fix this you think? 2. does httpx.Client support retries? I see some mention of it here: https://www.python-httpx.org/advanced/
[05:20:02] <SnoopJ> Batzy, my thought is that something might be causing the DNS server to stop resolving that name for you.
[05:20:11] *** Joins: Jabberwack (~Jabberwac@user/jabberwack)
[05:20:12] <Batzy> like what?
[05:20:16] <SnoopJ> dunno
[05:20:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6860-c946-993e-2148.res6.spectrum.com) (Read error: Connection reset by peer)
[05:21:08] <Batzy> it's not a code issue? you think it's external from this?
[05:21:08] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[05:22:00] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[05:23:00] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:24:01] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[05:25:52] *** Quits: extropiator (~extropiat@162.253.68.195) (Ping timeout: 246 seconds)
[05:25:53] <Batzy> do you know if "transport = httpx.HTTPTransport(retries=1)" is able to be passed into the AsyncClient as well? it looks like they only pass it into the Client
[05:26:28] <Batzy> oh i see it
[05:26:35] <Batzy> SnoopJ im going to guess though retrying won't work :)
[05:32:02] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:20] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[05:32:32] *** Joins: portalrat (~portalrat@user/portalrat)
[05:32:54] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:33:21] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:33:39] *** Quits: nergar (~Nergar@177.225.152.13) (Quit: Leaving)
[05:34:50] *** Joins: qk1z (~qk1z@193-82-226-146.tpgi.com.au)
[05:35:42] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[05:35:43] *** brabrax_ is now known as brabrax
[05:36:05] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[05:36:14] *** Joins: vlm (~vlm@user/vlm)
[05:36:23] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[05:36:27] *** Joins: extropiator (~extropiat@107.181.178.67)
[05:37:48] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Quit: Lost terminal)
[05:39:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[05:39:51] <Batzy> AttributeError: module 'httpx' has no attribute 'AsyncHTTPTransport' yet https://www.python-httpx.org/async/#streaming-requests
[05:39:52] <Batzy> ?????
[05:39:57] <foo> I want to do this = [x for x in this] ... and I want this to be a single element, not a list. Any shortcuts here? I could do this = [x for x in this][0] and catch an IndexError if no match?
[05:40:18] <Repiphany> x, = this
[05:41:20] <foo> Repiphany: Err, thanks, I did this before but forgot. Appreciate it.
[05:41:36] <Repiphany> `x, *_ = this` if this has more than one element
[05:42:00] <foo> Repiphany: thanks :)
[05:42:37] <Batzy> dont think ive seen documentation from a popular lib just blatantly lie before..
[05:43:01] *** Quits: extropiator (~extropiat@107.181.178.67) (Ping timeout: 246 seconds)
[05:43:01] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[05:43:09] *** Joins: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[05:43:14] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[05:44:17] *** Quits: Naan (~naan@user/naan) (Ping timeout: 245 seconds)
[05:44:59] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[05:45:11] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[05:45:40] <Batzy> anyone know what's up with that?
[05:45:48] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[05:45:49] *** Joins: c10l (~c10l@89.34.167.207)
[05:46:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:47:06] <Batzy> maybe my version of httpx
[05:47:07] <Batzy> hm
[05:47:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[05:47:43] <Batzy> yeah that's 100% it
[05:50:19] *** Joins: extropiator (~extropiat@23.106.85.239)
[05:51:24] *** Joins: wyclif (~wyclif@user/wyclif)
[05:53:10] *** Joins: Fiji (~Fiji@user/fiji)
[05:54:17] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:54:28] *** Joins: d3vyL (d3vyL@host-87-21-171-60.retail.telecomitalia.it)
[05:55:37] *** Quits: extropiator (~extropiat@23.106.85.239) (Ping timeout: 246 seconds)
[06:00:05] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:02:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:02:38] *** Joins: mgedmin (~mg@user/mgedmin)
[06:04:06] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:04:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:04:51] *** Quits: Wafficus (~user@70.126.240.148) (Remote host closed the connection)
[06:05:37] *** Joins: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at)
[06:10:22] *** Joins: sydbarret (~anton@static-186-121-195-86.acelerate.net)
[06:10:57] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[06:11:04] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[06:12:45] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[06:12:55] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[06:16:05] *** Joins: extropiator (~extropiat@162.253.68.164)
[06:16:20] *** Joins: jjm (~Guest2@c-71-192-137-216.hsd1.nh.comcast.net)
[06:17:01] *** Joins: matsaman (~matsaman@user/matsaman)
[06:18:02] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[06:18:53] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:21:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[06:21:56] *** Quits: schumaml3 (~schumaml@p200300e2ef3885002dfafc419dcbc474.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:22:15] *** Joins: tims (~tims@61.69.131.46)
[06:22:27] *** Quits: jjm (~Guest2@c-71-192-137-216.hsd1.nh.comcast.net) (Changing host)
[06:22:27] *** Joins: jjm (~Guest2@user/jjm)
[06:22:40] *** Joins: ano (~weechat@user/ano)
[06:24:01] *** Joins: schumaml3 (~schumaml@p57b7e063.dip0.t-ipconnect.de)
[06:25:00] *** sydbarret is now known as python-offtopic
[06:25:09] *** python-offtopic is now known as sydbarret
[06:25:12] *** Joins: nbao (~nbao@187.20.162.127)
[06:30:34] *** Quits: driib (~driib@185.195.233.169) (Read error: Connection reset by peer)
[06:30:49] *** Joins: driib (~driib@185.195.233.169)
[06:30:51] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:31:02] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[06:33:13] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 248 seconds)
[06:33:13] *** brabrax_ is now known as brabrax
[06:34:02] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 252 seconds)
[06:35:34] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[06:35:54] *** Joins: ano (~weechat@user/ano)
[06:44:01] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[06:44:16] *** Quits: extropiator (~extropiat@162.253.68.164) (Ping timeout: 246 seconds)
[06:45:35] <AhmedAmerican> how to read `xsl` file with Python?
[06:45:36] <AhmedAmerican> http://reports.ieso.ca/docrefs/stylesheet/GenOutputCapability_HTML_t1-4.xsl
[06:45:38] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[06:45:55] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:45:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:46:02] *** Joins: extropiator (~extropiat@23.106.85.232)
[06:47:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:47:20] *** Parts: pragma- (~chaos@user/pragmatic-chaos) (Bye!)
[06:49:26] <foo> Ok, so it looks like this script is doing what I want with checking email. I think I need to store the last uid in a database so it knows what to process/not process with new incoming email - https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L21
[06:49:39] <foo> I *think* with imap I can just store the most recent uid, I don't need to store a list of every uid
[06:49:42] <foo> Or do I SnoopJ ?
[06:51:57] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:52:12] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:53:04] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:53:04] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:53:27] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:53:43] *** Quits: extropiator (~extropiat@23.106.85.232) (Ping timeout: 246 seconds)
[06:54:28] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:54:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (platinum.libera.chat (Nickname regained by services)))
[06:54:28] *** finn_elija is now known as FinnElija
[06:55:30] *** Joins: mci64 (~x@185.242.190.95)
[06:59:08] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[07:00:41] *** Quits: y1n (~y1n@84-115-65-7.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[07:00:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:02:01] *** Quits: mci64 (~x@185.242.190.95) (Ping timeout: 248 seconds)
[07:02:08] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[07:02:10] *** Parts: sydbarret (~anton@static-186-121-195-86.acelerate.net) (Closing Window)
[07:05:44] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[07:06:52] *** Joins: mci64 (~x@185.242.190.95)
[07:08:37] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[07:08:48] *** Joins: extropiator (~extropiat@107.181.178.86)
[07:09:06] <cloudbender> Cannot assume a prior  uid might be lurking out there in the great beyond, waiting to arrive and ruin your day
[07:09:27] <cloudbender> ..  might not be lurking ...
[07:09:45] <cluelessperson> foo, I don't enough of how imap works or what you're trying to do.
[07:09:46] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:10:06] <cluelessperson> if you're trying to cache latest uids, then sure
[07:10:41] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[07:10:52] <foo> cluelessperson: Trying to only process new email, not historic email.
[07:10:59] <cloudbender> right
[07:11:21] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[07:11:48] *** Quits: mei (~mei@user/mei) (Ping timeout: 258 seconds)
[07:12:11] *** Quits: jjm (~Guest2@user/jjm) (Quit: Client closed)
[07:12:12] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[07:12:14] <foo> cloudbender: I believe if I store this https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L21 at the start of running this script, and make sure to only process uids higher than what was originally captured, I should be ok.
[07:13:14] *** Parts: stoiclunchbox (~stoiclunc@user/stoiclunchbox) ()
[07:13:26] <cloudbender> There is the remote possibility that a lower uid might be out there, delayed.
[07:14:04] <cloudbender> Unless the UID is generated by the final forwader, I don't know.
[07:14:18] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[07:14:35] *** Joins: mci64 (~x@185.242.190.95)
[07:15:23] <foo> cloudbender: Hmm, I see.
[07:15:34] <foo> What's somewhat odd is this code https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py#L21 seems to reprocess all the email all the time
[07:16:10] <cloudbender> E-mail was invented by the antichrist, along with logorythms and visual basic, so ...
[07:16:23] <foo> lol.
[07:21:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[07:21:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[07:22:16] *** Joins: wyclif (~wyclif@user/wyclif)
[07:25:59] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Ping timeout: 258 seconds)
[07:27:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[07:27:30] *** Joins: jdmark (~jdmark@67.8.137.130)
[07:27:44] *** Joins: wyclif (~wyclif@user/wyclif)
[07:28:01] *** Quits: extropiator (~extropiat@107.181.178.86) (Ping timeout: 246 seconds)
[07:29:03] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[07:30:23] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:35:08] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[07:37:48] *** Quits: twobitsprite (~twobitspr@66.115.175.48) (Ping timeout: 268 seconds)
[07:39:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[07:39:16] *** Joins: twobitsprite (~twobitspr@195.181.171.237)
[07:39:27] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:44:27] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[07:45:45] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 248 seconds)
[07:49:00] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[07:55:23] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[07:57:30] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[08:02:00] <az> hi, still struggling to fix my file https://bpa.st/WWAQ I'm trying to pass arguments now using *args but getting some issues.
[08:02:23] <az> full file here https://gitlab.com/uak/electron-cash-slp-cli-python-basic-lib/-/blob/master/ec_slp_lib.py
[08:03:20] *** Joins: rudrab (~rudrab@2402:e280:215f:228:c249:d16f:6fe:ea85)
[08:03:25] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:03:37] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[08:08:38] *** Quits: qk1z (~qk1z@193-82-226-146.tpgi.com.au) (Ping timeout: 268 seconds)
[08:12:02] *** seednode8 is now known as seednode
[08:14:04] <az> full file here https://gitlab.com/uak/electron-cash-slp-cli-python-basic-lib/-/blob/master/ec_slp_lib.py
[08:14:47] *** Quits: emerent (~quassel@p200300cd57058cadba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:16:00] *** Joins: emerent (~quassel@p200300cd57058cadba27ebfffed28a59.dip0.t-ipconnect.de)
[08:16:53] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[08:17:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:18:53] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[08:22:34] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 272 seconds)
[08:28:26] <cluelessperson> az, not sur ewhat you're doing or where *args is in those files.
[08:29:26] <az> I'm trying to find a saneway to pass arguments that are optional
[08:29:41] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[08:30:52] <cluelessperson> az,   so you have   def function_name(*required_args, **keyword_args)
[08:30:59] <aphysically> instead of try except keyerror I could also if/else val in valdict: https://bpa.st/QUZA is there some reason I should prefer the latter?
[08:31:19] <cluelessperson> az, something that's sometimes done is to make a "options" dict, that overrides defaults.
[08:32:13] <cluelessperson> az,     function(required, **config)  or function(required, config) then   config = default_config.update(config);
[08:32:18] <cluelessperson> az, all sorts of stuff you can do.
[08:32:55] <az> cluelessperson, I called the arg[0] but if it comes empty an error will be thrown. can I filter arg[0] as I can do with filter(None, list)?
[08:33:35] <az> cluelessperson, interesting
[08:34:29] <cluelessperson> az, so if you have 100 options, you don't need a function that takes 100 arguments.
[08:34:36] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[08:35:04] *** Joins: qk1z (~qk1z@193-82-226-146.tpgi.com.au)
[08:35:36] <cluelessperson> az, and, you can do the standard.   function(a=1, b=2, c=3)   function(a=3, **{b:2, c:1})  which fills in the named arguments.
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:14] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[08:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:45] <az> thanks will check that
[08:38:59] <cloudcell> hi matsaman: as promised, here's the code. I was able to reduce 21 hours of work to less than a minute!!! https://www.irccloud.com/pastebin/4YdvWMv2/
[08:40:03] <cloudcell> let me know if it helps you in your case
[08:40:17] *** Joins: frost (~frost@59.71.240.119)
[08:44:39] *** Joins: rany (~rany@user/rany)
[08:45:38] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[08:46:36] <matsaman> cloudcell: nice
[08:48:37] <cloudcell> what I'm doing is merging cycles on a graph, and there are usually way more cycles than nodes, so the chances that adjacent cycles overlap approach 100% as you add more nodes and cycles. in my case I had over 1300 nodes and over 13 million cycles
[08:49:09] <cloudcell> using this optimisation I cut down the time by several orders of magnitude
[08:49:10] <cluelessperson> what is a cycle?
[08:49:31] <cloudcell> cluelessperson: look up cycles on a directed graph
[08:49:56] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[08:51:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[08:58:27] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[08:59:04] <cloudbender> does python 3.x have an improved anonymous function syntax which may also work in 2.7 ?
[08:59:13] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:59:21] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 248 seconds)
[08:59:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:59:56] <matsaman> how could it
[09:00:00] <matsaman> if it's improved
[09:01:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:01:52] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-519b-3f89-f896-0f8f.res6.spectrum.com)
[09:03:37] <cloudbender> it's ok.  The existing sort semantics aren't to whacky
[09:05:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:07:07] *** Joins: cloudbender18 (~cloudbend@user/cloudbender)
[09:07:31] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[09:08:25] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 248 seconds)
[09:10:01] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 248 seconds)
[09:10:06] *** Joins: jinsun_ (~quassel@user/jinsun)
[09:10:30] *** Joins: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp)
[09:10:41] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[09:12:13] *** Quits: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[09:12:27] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Read error: No route to host)
[09:12:39] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[09:13:36] *** Joins: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp)
[09:13:43] <cloudbender18> wow there are some things which python does very quickly
[09:16:48] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:17:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:17:23] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Ping timeout: 252 seconds)
[09:23:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:25:41] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:25:54] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:28:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:29:46] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:31:10] *** Quits: qk1z (~qk1z@193-82-226-146.tpgi.com.au) (Quit: WeeChat 2.8)
[09:37:17] <graingert[m]> <SnoopJ> "graingert, probabilistic..." <- ?
[09:37:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:38:44] *** Quits: JavaBean (~JavaBean@user/javabean) (Remote host closed the connection)
[09:46:18] *** Joins: portalrat (~portalrat@user/portalrat)
[09:47:53] *** Quits: LiftLeft (~LiftLeft@212.102.58.180) (Ping timeout: 248 seconds)
[09:48:49] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[09:50:51] *** Joins: JavaBean (~JavaBean@user/javabean)
[09:51:29] *** Quits: rudrab (~rudrab@2402:e280:215f:228:c249:d16f:6fe:ea85) (Ping timeout: 252 seconds)
[09:53:07] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[09:53:09] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:53:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:53:57] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[09:54:25] *** Joins: khrbt (~znc@user/khrbt)
[09:55:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[09:55:20] <pycurious> is there a way to install google chrome from inside python on windows?
[09:56:28] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[09:57:56] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:59:03] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:00:09] *** Quits: nyah (~nyah@51.146.30.113) (Ping timeout: 248 seconds)
[10:01:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:03:55] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Remote host closed the connection)
[10:04:14] <graingert[m]> <pycurious> "is there a way to install google..." <- pyppeteer provides a tool afaik
[10:05:22] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[10:06:32] *** Quits: cloudbender18 (~cloudbend@user/cloudbender) (Quit: Connection closed)
[10:06:45] *** Joins: khrbt (~znc@user/khrbt)
[10:15:01] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:15:47] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[10:17:06] *** Joins: mei (~mei@user/mei)
[10:18:54] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[10:20:27] *** Joins: LabMonkey (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[10:22:20] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[10:23:01] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[10:23:20] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:f53a:9c8b:ad87:f3c) (Ping timeout: 256 seconds)
[10:25:41] *** Joins: rememberYou (~someone@user/rememberyou)
[10:31:43] *** Joins: upsala (~zcb@185.213.155.160)
[10:33:17] *** Joins: VimVim (~VimVim@85.191.5.103)
[10:35:29] *** Quits: V1mV1m (~VimVim@85.191.5.57) (Ping timeout: 252 seconds)
[10:36:29] *** Quits: ogis_ (~Android@p311253-omed01.osaka.ocn.ne.jp) (Read error: Connection reset by peer)
[10:36:54] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[10:37:19] *** Joins: computeiro (~Wender@189.37.64.202)
[10:39:57] *** Quits: wender (~Wender@189.37.64.7) (Ping timeout: 258 seconds)
[10:41:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[10:42:38] *** Joins: wyclif (~wyclif@user/wyclif)
[10:42:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[10:45:15] *** Joins: extropiator (~extropiat@107.181.178.94)
[10:45:17] *** Quits: devcpu (~rusty@108.162.160.184) (Ping timeout: 268 seconds)
[10:46:07] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:37] *** Joins: seednode (~seednode@user/seednode)
[10:47:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:47:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:47:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:48:06] *** Joins: wyclif (~wyclif@user/wyclif)
[10:49:02] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:52:46] *** Quits: extropiator (~extropiat@107.181.178.94) (Ping timeout: 246 seconds)
[10:52:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[10:53:37] *** Joins: wyclif (~wyclif@user/wyclif)
[10:57:24] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:58:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[10:59:07] *** Joins: wyclif (~wyclif@user/wyclif)
[10:59:16] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[11:00:25] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:00:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:01:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[11:01:52] *** Lord_of_Life_ is now known as Lord_of_Life
[11:03:50] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[11:06:03] *** Joins: kosh (~kosh@user/kosh)
[11:06:57] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[11:08:41] *** Joins: zaquest (~notzaques@5.128.210.178)
[11:09:12] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Quit: -a- Connection Timed Out)
[11:09:27] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[11:11:54] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[11:12:25] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Read error: Connection reset by peer)
[11:12:50] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[11:13:44] *** Joins: Gerula_ (~Gerula@user/gerula)
[11:13:44] *** Gerula is now known as Guest5469
[11:13:44] *** Quits: Guest5469 (~Gerula@user/gerula) (Killed (sodium.libera.chat (Nickname regained by services)))
[11:13:44] *** Gerula_ is now known as Gerula
[11:15:16] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:15:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[11:15:45] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:16:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Client Quit)
[11:16:37] *** Joins: wyclif (~wyclif@user/wyclif)
[11:16:54] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:17:08] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:18:36] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:18:48] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:19:52] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:19:59] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:19:59] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:20:07] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:20:14] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:20:16] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:21:08] *** Joins: mattil (~mattil@87-92-192-25.rev.dnainternet.fi)
[11:21:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[11:21:13] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 248 seconds)
[11:21:49] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:22:00] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:22:10] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:22:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[11:22:20] *** Joins: wyclif (~wyclif@user/wyclif)
[11:22:27] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:22:38] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[11:25:36] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[11:25:37] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[11:26:17] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[11:27:41] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:28:35] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:29:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:31:01] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:31:05] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:31:17] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:31:38] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[11:32:59] *** Joins: rendar (~rendar@user/rendar)
[11:33:18] *** Joins: wyclif (~wyclif@user/wyclif)
[11:33:34] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[11:36:39] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:36:54] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:37:28] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:37:31] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Quit: WeeChat 3.2)
[11:37:43] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:38:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[11:39:04] *** Joins: wyclif (~wyclif@user/wyclif)
[11:40:31] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Client Quit)
[11:40:50] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:43:46] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[11:45:09] *** Joins: NeoCore (~neocore@195.200.221.90)
[11:45:11] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[11:45:45] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:46:41] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:47:00] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[11:47:09] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:47:11] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[11:47:24] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[11:47:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:47:55] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[11:48:20] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Client Quit)
[11:49:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[11:50:05] *** Joins: wyclif (~wyclif@user/wyclif)
[11:50:16] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea)
[11:50:48] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[11:51:16] *** Joins: Adoi (~Adoi@user/adoi)
[11:54:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[11:54:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[11:55:22] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Client Quit)
[11:55:31] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[11:55:35] *** Joins: wyclif (~wyclif@user/wyclif)
[11:55:40] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:55:47] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[11:56:21] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[11:56:44] *** Joins: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net)
[11:56:46] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- IRC for Android 2.1.59)
[11:58:31] *** Joins: sedeki (~textual@user/sedeki)
[11:59:53] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[12:00:59] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[12:01:15] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[12:02:37] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[12:02:49] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 248 seconds)
[12:02:55] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[12:03:09] *** Quits: Jabberwack (~Jabberwac@user/jabberwack) (Quit: Leaving)
[12:05:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:06:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[12:06:36] *** Joins: wyclif (~wyclif@user/wyclif)
[12:08:44] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:11:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[12:11:32] *** Joins: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:11:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:12:04] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[12:12:07] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[12:12:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:12:14] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[12:12:40] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:12:44] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[12:13:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:15:25] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[12:15:42] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[12:16:51] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:17:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:17:37] *** Joins: wyclif (~wyclif@user/wyclif)
[12:22:36] *** Joins: uuair (~quassel@user/uuair)
[12:22:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[12:23:08] *** Joins: wyclif (~wyclif@user/wyclif)
[12:26:31] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[12:27:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:28:38] *** Joins: wyclif (~wyclif@user/wyclif)
[12:30:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:31:22] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Ping timeout: 245 seconds)
[12:33:09] *** Quits: irreitug (uid23254@id-23254.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:33:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:34:15] *** Joins: wyclif (~wyclif@user/wyclif)
[12:35:44] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:35:51] *** Joins: Adois (~Adoi@user/adoi)
[12:38:09] *** Joins: WarpedAI (~Warped@user/warped)
[12:38:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:33] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 248 seconds)
[12:39:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[12:39:45] *** Joins: wyclif (~wyclif@user/wyclif)
[12:41:02] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 256 seconds)
[12:41:09] *** Joins: EGH (~EGH@185.25.195.104)
[12:41:16] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[12:42:50] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.2)
[12:44:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:44:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:44:55] *** Quits: mattil (~mattil@87-92-192-25.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[12:45:16] *** Joins: wyclif (~wyclif@user/wyclif)
[12:47:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:48:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:48:23] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[12:50:23] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[12:50:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:50:46] *** Joins: wyclif (~wyclif@user/wyclif)
[12:52:37] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:52:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:54:27] *** Joins: Skyfire (~pyon@user/pyon)
[12:54:46] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:55:11] *** Quits: Ivyy (~Ivyy@2001:a61:135b:5001:2f7:1249:bb6d:2b80) (Ping timeout: 252 seconds)
[12:55:45] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:56:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:56:16] *** Joins: wyclif (~wyclif@user/wyclif)
[12:57:55] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[12:59:07] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 258 seconds)
[12:59:21] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[13:01:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:01:09] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:01:29] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[13:01:47] *** Joins: wyclif (~wyclif@user/wyclif)
[13:01:56] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:03:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:03:09] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::682e)
[13:06:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:07:18] *** Joins: wyclif (~wyclif@user/wyclif)
[13:08:05] *** Joins: torandu (~sean@94.10.125.197)
[13:08:21] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[13:09:53] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[13:10:06] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[13:10:08] *** lordrishav is now known as LordRishav
[13:12:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:12:49] *** Joins: wyclif (~wyclif@user/wyclif)
[13:14:11] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:17:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:18:19] *** Joins: wyclif (~wyclif@user/wyclif)
[13:18:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:19:50] *** Joins: magla (~gelignite@55d454e5.access.ecotel.net)
[13:19:53] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:21:50] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[13:22:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:23:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[13:23:49] *** Joins: wyclif (~wyclif@user/wyclif)
[13:26:03] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:31:55] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[13:34:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:34:58] *** Joins: wyclif (~wyclif@user/wyclif)
[13:35:33] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[13:41:59] *** Joins: devcpu (~rusty@108.162.160.184)
[13:41:59] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:42:01] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 248 seconds)
[13:42:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:44:03] *** Joins: siddhant (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[13:44:25] *** Joins: ice9 (~ice9@user/ice9)
[13:44:28] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Read error: Connection reset by peer)
[13:47:52] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:49:01] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[13:49:11] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[13:49:38] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:52:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[13:52:44] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 268 seconds)
[13:56:48] *** Joins: Pickchea (~private@user/pickchea)
[13:56:59] *** Quits: Adois (~Adoi@user/adoi) (Remote host closed the connection)
[13:58:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[13:58:59] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:00:07] *** Joins: wyclif (~wyclif@user/wyclif)
[14:01:18] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:02:04] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:03:39] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[14:04:50] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[14:05:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:05:51] *** Joins: wyclif (~wyclif@user/wyclif)
[14:06:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:07:18] *** Joins: plastico (~plastico@neomutt/plastico)
[14:09:15] *** Joins: TheWild (~Thunderbi@apn-46-169-34-249.dynamic.gprs.plus.pl)
[14:09:19] <TheWild> hello
[14:09:24] *** Quits: schumaml3 (~schumaml@p57b7e063.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:09:39] <TheWild> random.choice(somedict)
[14:09:39] <TheWild> ugh!
[14:09:39] <TheWild> how to pick random *key* from dict, not item?
[14:11:36] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[14:12:33] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:14:04] *** Joins: schumaml3 (~schumaml@p200300e2ef41700053c1821a43d17d29.dip0.t-ipconnect.de)
[14:14:15] *** Joins: iflema (~ian@user/iflema)
[14:14:36] <TheWild> also, how to pick random element from a set?
[14:15:14] *** Quits: nyuszika7h (~nyuszika7@lykos/dev/nyuszika7h) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[14:16:04] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[14:16:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:16:14] <themill> TheWild: random.choice wants something sizeable and indexable, like a list
[14:16:51] *** Joins: wyclif (~wyclif@user/wyclif)
[14:16:52] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[14:16:52] <TheWild> so maybe random.choice isn't a good... choice
[14:17:13] <themill> list(somedict) and list(someset) are a thing
[14:17:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[14:18:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[14:18:15] *** Joins: plastico (~plastico@neomutt/plastico)
[14:18:50] *** Quits: audiobirb (~audio@2603-8081-1800-00ad-2c12-98df-64de-3b19.res6.spectrum.com) (Ping timeout: 258 seconds)
[14:19:18] <TheWild> obvious, but... okay, maybe I'm trying to optimize things too early
[14:19:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[14:21:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:21:53] *** siddhant is now known as me-sudoer-dentin
[14:21:58] *** me-sudoer-dentin is now known as me-sudoer-dentne
[14:23:20] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:23:53] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[14:23:54] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[14:24:19] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[14:25:06] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Quit: arti)
[14:25:52] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[14:26:20] *** Quits: mboehn (mathias@hh1.nuxis.org) (Remote host closed the connection)
[14:26:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:27:51] *** Joins: wyclif (~wyclif@user/wyclif)
[14:28:18] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:30:41] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[14:30:56] *** Joins: mboehn (mathias@hh1.nuxis.org)
[14:32:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:33:22] *** Joins: wyclif (~wyclif@user/wyclif)
[14:37:27] <TheWild> ok,  thanks themill
[14:40:37] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[14:45:12] *** Joins: diamondbond (~diamondbo@175.157.123.42)
[14:46:34] *** Quits: diamondbond (~diamondbo@175.157.123.42) (Client Quit)
[14:47:18] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[14:49:31] *** Quits: mboehn (mathias@hh1.nuxis.org) (Remote host closed the connection)
[14:49:57] *** Joins: y1n (~y1n@84-115-65-148.wifi.dynamic.surfer.at)
[14:50:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:51:29] *** Joins: darksun (~darksun@user/darksun)
[14:51:35] *** Joins: mboehn (mathias@hh1.nuxis.org)
[14:51:45] *** Joins: wyclif (~wyclif@user/wyclif)
[14:52:03] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[14:52:32] *** Quits: TheWild (~Thunderbi@apn-46-169-34-249.dynamic.gprs.plus.pl) (Quit: TheWild)
[14:54:52] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Ping timeout: 258 seconds)
[14:55:09] *** Joins: maum (~maum@1.245.147.30)
[14:55:11] <maum> hello
[14:56:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[14:57:14] *** Joins: wyclif (~wyclif@user/wyclif)
[14:58:10] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[14:58:24] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[14:58:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:02:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[15:02:42] *** Joins: wyclif (~wyclif@user/wyclif)
[15:03:19] *** Joins: MaximB (~MaximB@87.68.164.117)
[15:04:30] *** Joins: Adoi (~Adoi@user/adoi)
[15:06:44] <maum> hello
[15:07:06] <maum> how can the frame elements can be resized automatically https://bpa.st/DE6A ?
[15:07:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[15:07:47] <maum> how to make auto-resize button and textbox whenever the form size has changing https://bpa.st/DE6A ?
[15:07:47] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[15:08:13] *** Joins: wyclif (~wyclif@user/wyclif)
[15:09:15] *** Joins: jim (~jim@about/linux/staff/jim)
[15:13:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[15:13:43] *** Joins: wyclif (~wyclif@user/wyclif)
[15:17:07] *** Quits: MaximB (~MaximB@87.68.164.117) (Quit: Client closed)
[15:17:40] *** Joins: MaximB (~MaximB@87.68.164.117)
[15:20:53] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:24:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:24:45] *** Joins: wyclif (~wyclif@user/wyclif)
[15:25:27] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[15:26:08] *** Joins: reset (~reset@user/reset)
[15:26:46] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[15:27:23] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[15:29:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[15:30:03] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:eddb:c93b:fa60:14e0)
[15:30:15] *** Joins: wyclif (~wyclif@user/wyclif)
[15:32:37] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:32:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[15:33:01] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[15:33:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:35:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[15:35:32] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:35:46] *** Joins: wyclif (~wyclif@user/wyclif)
[15:36:07] *** Joins: sedeki (~textual@user/sedeki)
[15:37:08] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[15:37:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:39:37] *** Joins: besnn (~besnn@user/besnn)
[15:40:01] *** Joins: hyper_dave (~hyper_dav@197.156.107.174)
[15:40:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[15:41:16] *** Joins: wyclif (~wyclif@user/wyclif)
[15:41:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (copper.libera.chat (Nickname regained by services)))
[15:41:32] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:46:17] *** Quits: y1n (~y1n@84-115-65-148.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[15:48:41] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[15:49:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:49:18] *** Joins: Adoi (~Adoi@user/adoi)
[15:51:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:52:18] *** Joins: wyclif (~wyclif@user/wyclif)
[15:53:34] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[15:55:54] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[15:56:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[15:56:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[15:57:11] *** Quits: devcpu (~rusty@108.162.160.184) (Quit: leaving)
[15:57:34] *** Joins: devcpu (~rusty@108.162.160.184)
[15:57:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:57:47] *** Joins: wyclif (~wyclif@user/wyclif)
[15:59:14] *** Joins: y1n (~y1n@84-115-65-252.wifi.dynamic.surfer.at)
[15:59:55] <Payam> hi . I have problem with importing packages. This is the PYTHONPATH and my projct Structure: https://bpa.st/236Q
[16:00:27] <Payam> I still get " Can not found package
[16:00:43] <Payam> in line 6 of main.py
[16:01:03] <rud0lf> :PATH or :$PATH ?
[16:01:54] *** Joins: thimslugga (~thimslugg@70.18.231.28)
[16:02:11] *** Quits: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 252 seconds)
[16:02:13] <Payam> still ModuleNotFoundError: No module named 'package'
[16:02:33] *** Joins: nyah (~nyah@51.146.30.113)
[16:02:33] <Payam> I am inside venv
[16:02:37] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[16:02:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:03:19] *** Joins: wyclif (~wyclif@user/wyclif)
[16:04:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[16:04:18] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[16:04:23] <gitesh> if i did `import turtle` can we say turtle is an instance?
[16:04:53] <jinsun_> Payam: it is better to install with pip instead of messing with sys.path, install with pip install --editable if you are still developing and want the changes in the package to reflect without reinstalling
[16:04:57] *** Quits: y1n (~y1n@84-115-65-252.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[16:04:57] <Payam> gitesh, you import for creating an instance maybe
[16:05:18] <gitesh> because in python everything is an object means everything is an instance of something?
[16:05:19] <Payam> jinsun_, I am not messing with sys.path
[16:05:32] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Ping timeout: 245 seconds)
[16:05:57] <jinsun_> well indirectly you are, what you put in PYTHONPATH goes in sys.path
[16:06:18] <supakeen> For `import package` to work the `src/` directory needs to be in your sys.path it seems to me that you're adding `src/..` to the path but not the `src` directory itself.
[16:06:30] <supakeen> This is a problem that'd be prevented by an editable install into your venv.
[16:07:16] <Payam> supakeen, but the src/ does not have a init file. how can it be a part of the package?
[16:07:21] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:07:29] <supakeen> Payam, it's the directory that contains your package.
[16:07:47] <Payam> thanks
[16:07:54] <Payam> but was it relateed to the pythonpath?
[16:08:11] <rud0lf> psychopath
[16:08:14] <supakeen> Well, you seem to not have it set correctly for what you want to do, aka, you don't have the `src` directory on it.
[16:08:38] <supakeen> But like jinsun_ I advice against working with PYTHONPATH but to use an editable install in your venv instead if you can.
[16:08:52] <Payam> supakeen, I will take a look on that
[16:09:04] <Payam> I never herd about venv editable
[16:10:02] <supakeen> It's not a 'venv' thing per se, it's a 'pip' thing, pip can install packages (including into your venv) in an editable way where it symlinks the appropriate files to the right places.
[16:11:32] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Ping timeout: 258 seconds)
[16:12:48] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:13:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:13:49] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:3ee6:2580:650b:c8c2)
[16:14:19] *** Joins: wyclif (~wyclif@user/wyclif)
[16:14:37] <jinsun_> gitesh: you can test that theory  `import turtle; isinstance(turtle, object)` gives True
[16:16:45] <jaggz> "\n".join(audio_paths[0:5])
[16:16:52] <jaggz> from ipdb, how can I get those items one per line?
[16:17:15] <jaggz> it's putting literal (like \\n) in the output
[16:18:40] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[16:19:21] <supakeen> Probably because it's showing you the `repr`, add a print(...) around it.
[16:19:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:19:50] *** Joins: wyclif (~wyclif@user/wyclif)
[16:20:20] *** Quits: schumaml3 (~schumaml@p200300e2ef41700053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:20:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[16:20:40] <jaggz> oh right, thanks
[16:21:15] *** Parts: amirouche (~amirouche@user/amirouche) (WeeChat 2.8)
[16:22:19] *** Joins: schumaml3 (~schumaml@p4ff911ef.dip0.t-ipconnect.de)
[16:22:22] *** Joins: rsx (~dummy@ppp-188-174-154-30.dynamic.mnet-online.de)
[16:23:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[16:24:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[16:25:14] <jaggz> i can't figure out why my keras/tf model is training and getting high accuracy when I use the full dataset as a tf Dataset, but when I make a generator (used with fit_generator), it won't learn
[16:25:22] *** Joins: wyclif (~wyclif@user/wyclif)
[16:25:32] <jaggz> (using a generator instead so I can continuously augment the X data)
[16:26:00] *** Quits: frost (~frost@59.71.240.119) (Quit: Ping timeout (120 seconds))
[16:27:08] <jaggz> anyone see anything wrong with my generator? https://paste.debian.net/1207732/
[16:28:41] *** Joins: schumaml4 (~schumaml@p57b7e0f0.dip0.t-ipconnect.de)
[16:29:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[16:29:44] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:29:49] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[16:29:59] *** Quits: schumaml3 (~schumaml@p4ff911ef.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:34:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:53] *** Joins: schumaml (~schumaml@p4ff914b7.dip0.t-ipconnect.de)
[16:38:33] <bjs> gitesh: yes, all values are objects and objects are instances
[16:38:37] *** Quits: schumaml4 (~schumaml@p57b7e0f0.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:39:32] *** Joins: portalrat (~portalrat@user/portalrat)
[16:39:57] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:42:47] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[16:42:53] <gitesh> bjs: yes
[16:43:01] *** Joins: CombatVet (~c4@user/combatvet)
[16:44:54] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:47:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea)
[16:48:18] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[16:48:31] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[16:48:43] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 258 seconds)
[16:49:04] <gitesh> there is a column in a csv file called "Long Term Interest Rate", so i have to grab the values from that column to compare them and fine the max_interest, so can I name my variable capital `LTIR` bjs  ?
[16:49:35] <gitesh> for let's say to initialize i would do `LTIR = 0.0` ?
[16:49:56] <gitesh> s/fine/find
[16:50:58] *** Quits: Fluxx (~Fluxx@user/fluxx) (Remote host closed the connection)
[16:53:22] <nedbat> gitesh: all-caps looks like a constant.  Name it ltir or long_rate
[16:54:37] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[16:54:49] *** jinsun_ is now known as jinsun
[16:55:01] <gitesh> nedbat: okay
[16:55:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[16:56:44] *** Joins: wyclif (~wyclif@user/wyclif)
[17:00:33] * nedbat converts some dict code to sets, because it's been possible for 7 years, it's about time.
[17:00:46] <Peng> :D
[17:01:01] <Peng> In another 7 years, you can change set([foo, bar]) to {foo, bar}. :D
[17:03:58] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 256 seconds)
[17:04:28] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:3ee6:2580:650b:c8c2) (Quit: Leaving)
[17:06:30] *** Joins: RougeR (~rougex250@user/rouger)
[17:07:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:07:04] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[17:08:04] *** Joins: wyclif (~wyclif@user/wyclif)
[17:08:08] <RougeR> quick question, what is the best way of developing a python package in tandem with another internal repo
[17:08:25] *** Joins: Leonarbro__ (~Leonet@user/leonarbro)
[17:08:41] <RougeR> I want to be able to develop locally and override the package with the local version
[17:08:46] <RougeR> something like a symlink
[17:09:28] <nedbat> RougeR: pip install -e .    # will run your edited code
[17:10:00] <RougeR> nedbat, yeah i looked at using -e
[17:10:10] <nedbat> RougeR: was there a problem with it?
[17:10:12] <RougeR> im using pipenv and i dont want to mess around with that
[17:10:17] <RougeR> i might be missing something though
[17:10:33] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 248 seconds)
[17:10:42] <RougeR> the repo uses the published version of the package in our private pypi
[17:10:43] *** Joins: dudek (~dudek@185.150.236.112)
[17:10:52] <RougeR> and i want to develop using my local version of the package
[17:11:31] <nedbat> RougeR: if you install the repo, it will install the published package.  then you can install -e the package, and you'll be using your local copy
[17:11:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:11:49] <RougeR> alright, let me give it a go
[17:12:06] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[17:12:08] <RougeR> i basically dont want it updating the pipfile in git
[17:12:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[17:13:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:15:01] <dudek> Let's say I have two lists with numbers [12332, 54345, 12335, 40000], [39999, 50000, 12330, 12333], and I want to match items from one of the lists to another to create a pair eg (12335, 12333), (12332, 12330), (39999, 40000) and so on. Is it possible to do it quicker than brute force n^2 (going for each of the elements from second list and looking for a value if it matches in a treshold)?
[17:16:38] <nedbat> dudek: what makes a match?
[17:16:38] <phy1729> sort them first?
[17:16:42] *** Joins: schumaml1 (~schumaml@p200300e2ef479a0003c877c6afb3b3a4.dip0.t-ipconnect.de)
[17:17:03] <nedbat> dudek: how large are the lists?
[17:17:12] *** Quits: schumaml (~schumaml@p4ff914b7.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[17:17:35] <nedbat> dudek: and how large will the threshold be?
[17:17:51] <RougeR> nedbat, my issue with that and its not huge
[17:17:53] <RougeR> is that i end up with
[17:17:55] <RougeR> my-python-package- = "==0.1.0"
[17:17:55] <RougeR> my-python-package = {editable = true, path = "/home/user/Documents/Code/Packages/my-python-package"}
[17:17:59] <RougeR> in my Pipfile
[17:18:07] <dudek> nedbat: i'd have a threshold of lets say 60 (the values are unix timestamps), and I would like to match from second list to the closest from first list. I'd have 40k value lists each
[17:18:15] <nedbat> RougeR: what command did you use to install the local package?
[17:18:37] <RougeR> pipenv install -e /home/user/Documents/Code/Packages/my-python-package --skip-lock
[17:18:37] <phy1729> Can timestamps be used twice?
[17:18:38] <dudek> nedbat I thought about using some kind of tree search but I think that is for exact match?
[17:18:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:18:46] <dudek> phy1729, what do you mean?
[17:18:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:19:08] <dudek> if they can be in both lists? That's possible
[17:19:19] <phy1729> If you have [1729] [1700, 1740] does 1729 get paird with both from the second set?
[17:19:20] <RougeR> i guess i could just delete it from the Pipfile tbh
[17:19:33] *** Quits: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 2.8)
[17:19:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:19:44] <dudek> phy1729, That would be ok
[17:19:50] *** Joins: wilz (~michel@modemcable036.177-131-66.mc.videotron.ca)
[17:20:35] <phy1729> I'd sort both, iterate over one in a for loop and "manually iterate" with pop on the other when the next entry is closer than the current one.
[17:20:42] <nedbat> RougeR: why did you use "pipenv install" instead of "pip install"?
[17:21:29] <RougeR> nedbat, i guess because im using pipenv for the project
[17:21:44] <nedbat> RougeR: sure, but you don't want the effect of pipenv for this package.
[17:21:51] <RougeR> yeah i think that makes sense
[17:21:59] <RougeR> let me try without
[17:23:06] <dudek> phy1729, can you explain what is manual iteration?
[17:23:21] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 248 seconds)
[17:23:46] *** Joins: benjwadams (~benjwadam@216.65.201.140)
[17:23:47] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[17:24:04] *** Joins: mci64 (~x@185.242.190.95)
[17:24:25] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 248 seconds)
[17:24:57] <phy1729> I mean you look at [0] and [1] and if the latter is closer you pop(0) and repeat (as [2] now [1] may be closer still than [1] now [0])
[17:25:40] <dudek> Does it make sense to pop as it would remove the item from the list?
[17:26:19] <phy1729> That depends on you, you could also keep an index and walk the list that way
[17:27:04] *** Quits: hyper_dave (~hyper_dav@197.156.107.174) (Read error: Connection reset by peer)
[17:27:20] *** Joins: pycurious (~Adium@user/pycurious)
[17:29:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:30:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:35:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:35:32] *** Joins: wyclif (~wyclif@user/wyclif)
[17:35:35] *** Quits: maum (~maum@1.245.147.30) (Quit: Client closed)
[17:36:22] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[17:37:32] <jaggz> with matplotlib, wrote an ImageGrid() class that will let me plot a continuous stream of images in an M x N grid
[17:37:34] <jaggz> https://paste.debian.net/1207733/
[17:37:55] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:38:00] <jaggz> I just modified it to accept a data= parameter so, if the first img arg is None, it can plot numerical data too
[17:38:40] <jaggz> however, it overwrites the prior plot, whereas I want opaque (rgba) values (like (1,1,0,.2)) to build up on each other
[17:39:01] <RougeR> seems to work find nedbat...was overcomplicating  it
[17:39:04] <RougeR> ty for yourhelp
[17:39:14] <jaggz> they do this if I don't use my grid, but just do plt.plot(data, color=(1,1,0,.5))
[17:40:11] <jaggz> so I added if ... oh.. nevermind.  found the problem
[17:40:29] <jaggz> I added this line: if dellast: self._fig.delaxes(xaxis)
[17:40:53] <jaggz> BUT, I forgot to add dellast=False in my grid.show() call.. :D
[17:43:23] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 268 seconds)
[17:44:45] *** Joins: welrmaron (~welrmaron@sigterm.xyz)
[17:45:21] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[17:45:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:45:59] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[17:46:26] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[17:46:35] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:31] *** Joins: c10l (~c10l@89.34.167.207)
[17:50:28] *** Joins: jdmark (~jdmark@67.8.137.130)
[17:52:17] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[17:54:02] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:54:18] *** Leonarbro__ is now known as Leonarbro
[17:54:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:54:51] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:55:09] *** Quits: rsx (~dummy@ppp-188-174-154-30.dynamic.mnet-online.de) (Quit: rsx)
[17:56:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:57:34] *** Joins: wyclif (~wyclif@user/wyclif)
[18:00:39] *** Joins: Pickchea (~private@user/pickchea)
[18:00:44] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:01:09] *** Joins: mossman93 (~quassel@user/mossman93)
[18:02:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[18:03:00] *** Joins: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[18:03:07] *** Joins: wyclif (~wyclif@user/wyclif)
[18:07:16] *** Joins: Roey (~Roey@user/Roey)
[18:07:28] *** Quits: benjwadams (~benjwadam@216.65.201.140) (Ping timeout: 246 seconds)
[18:07:59] *** Joins: thiras (~thiras@user/thiras)
[18:08:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:08:03] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[18:08:36] *** Joins: wyclif (~wyclif@user/wyclif)
[18:10:10] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:10:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:11:07] *** Joins: PyT001 (~PyT001@2402:e280:3d22:227:4155:bf3c:51a5:f007)
[18:12:45] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[18:13:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:14:08] *** Joins: wyclif (~wyclif@user/wyclif)
[18:15:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:15:17] <PyT001> hi is there any opensource application or library in python for  cartesian , polar graph for curves
[18:15:17] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[18:16:53] *** Joins: akk (~akk@75.161.157.26)
[18:17:17] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[18:18:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:19:35] *** Quits: reset (~reset@user/reset) (Quit: reset)
[18:19:38] *** Joins: wyclif (~wyclif@user/wyclif)
[18:19:53] *** Joins: extropiator (~extropiat@162.253.68.201)
[18:20:30] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:20:38] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:24:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:25:11] *** Joins: wyclif (~wyclif@user/wyclif)
[18:25:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:15] *** Quits: JanC (~janc@user/janc) (Quit: 'k zien d'r mee weh zi)
[18:25:43] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b48a-1604-b1a9-4d06.res6.spectrum.com)
[18:25:46] *** Joins: JanC (~janc@user/janc)
[18:30:59] *** Joins: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[18:33:07] <grym> PyT001: https://matplotlib.org/stable/gallery/pie_and_polar_charts/polar_demo.html
[18:33:13] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 248 seconds)
[18:33:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:36:39] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:36:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:37:02] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 268 seconds)
[18:37:49] *** Joins: besnn (~besnn@user/besnn)
[18:38:09] <rendar> why sometimes i see binary strings? e.g. b'content-length' ? shouldn't i send a string here, since http works with strings?
[18:38:40] *** Quits: besnn (~besnn@user/besnn) (Client Quit)
[18:38:56] *** Joins: besnn (~besnn@user/besnn)
[18:39:10] <raek> rendar: I don't think HTTP specifies the encoding for headers (other than that the names should be ASCII-compatible)
[18:39:30] <raek> so from Python's point of view HTTP headers are binary
[18:39:36] <rendar> raek: i see
[18:39:57] <rendar> raek: so using b' .. ' strings are a method to skip encondings like utf-8
[18:40:21] <PyT001> grym: Thanks , basically i am looking for a software to plot all polar or cartesian curves , there are software like graph builders which will show the graph based on polar points
[18:40:37] *** Joins: wyclif (~wyclif@user/wyclif)
[18:41:01] <PyT001> and yes matplotlib is useful and we are using it regularly to plot the charts
[18:41:57] <raek> rendar: yes. using bytes objects (b"...") lets you deal with the bytes directly (so no character encoding system is involved, except that Python allows you to use ASCII for the byte string literals)
[18:42:04] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[18:42:05] <raek> rendar: https://stackoverflow.com/a/4410331
[18:42:18] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[18:43:03] <raek> rendar: in this case you can also use text strings and then encode them using ascii: "content-length".encode("ascii")
[18:43:30] <raek> if you happen to have the header names as (character) strings
[18:43:32] <bpalmer> raek: you're right it's not explicitly specified (and so ASCII is the safe subset to use), but traditionally HTTP headers could be iso-8859-1
[18:43:52] *** Quits: extropiator (~extropiat@162.253.68.201) (Ping timeout: 246 seconds)
[18:44:20] <raek> bpalmer: ah, I see
[18:44:41] <grym> PyT001: pyqtgraph, possibly
[18:45:25] <grym> PyT001: with, perhaps, https://github.com/pyqtgraph/pyqtgraph/issues/452
[18:45:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[18:45:38] *** Quits: MaximB (~MaximB@87.68.164.117) (Quit: Client closed)
[18:46:09] *** Joins: wyclif (~wyclif@user/wyclif)
[18:48:37] <PyT001> grym: Thanks a lot , it looks good , i will check this out
[18:49:29] *** Quits: death916 (UserNick@user/death916) (Quit: Going offline, see ya! (www.adiirc.com))
[18:51:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:51:39] *** Joins: wyclif (~wyclif@user/wyclif)
[18:52:36] <rendar> raek: thanks
[18:53:10] *** Quits: dece (~dece@dece.space) (Quit: Quit)
[18:53:47] *** Quits: thimslugga (~thimslugg@70.18.231.28) (Quit: thimslugga)
[18:56:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:57:09] *** Joins: wyclif (~wyclif@user/wyclif)
[18:57:25] <lastshell> https://m.jpost.com/health-science/israel-to-expand-use-of-covid-drug-that-gets-88-percent-of-patients-out-of-hospital-676397
[18:57:53] <lastshell> sorry weong channel
[18:58:08] *** Joins: f8l12 (~f8l12@154.3.42.77)
[18:58:50] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: Textual IRC Client: www.textualapp.com)
[19:01:02] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 272 seconds)
[19:01:40] *** Joins: tims (~tims@115-64-241-2.tpgi.com.au)
[19:01:42] *** Joins: Doffi (~doffi@91.132.197.188)
[19:02:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:02:28] <f8l12> i'm wondering how i can set a pandas dataframe's index to a datetime object? this is the code i'm trying https://dpaste.org/p7XR and this is all i get: https://dpaste.org/oeJN (the datetime should be in the first column i think?)
[19:02:40] *** Joins: wyclif (~wyclif@user/wyclif)
[19:04:13] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[19:05:32] <f8l12> ah, nevermind. i had to use inplace=True for set_index
[19:05:51] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[19:06:56] <jinsun> ya default behavior of pandas for most operations is to give a new dataframe
[19:07:08] *** Joins: rany (~rany@user/rany)
[19:07:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:07:35] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[19:08:00] <jinsun> which is good for chained function calls, but causes unexpected behavior like this when you forget about it
[19:08:09] *** Joins: wyclif (~wyclif@user/wyclif)
[19:09:41] *** Joins: mambang (~mambang@user/mambang)
[19:10:58] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:11:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[19:11:27] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:13:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:13:41] *** Joins: wyclif (~wyclif@user/wyclif)
[19:15:12] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.2)
[19:15:57] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 245 seconds)
[19:16:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[19:16:57] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[19:17:34] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[19:18:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[19:19:40] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:20:01] *** Joins: Pandadub (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5)
[19:20:09] *** Quits: akk (~akk@75.161.157.26) (Ping timeout: 248 seconds)
[19:21:14] *** Quits: schumaml1 (~schumaml@p200300e2ef479a0003c877c6afb3b3a4.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[19:21:52] *** Quits: Barones (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Ping timeout: 272 seconds)
[19:22:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[19:22:39] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 268 seconds)
[19:22:49] *** Quits: tims (~tims@115-64-241-2.tpgi.com.au) (Ping timeout: 248 seconds)
[19:22:56] *** Joins: schumaml1 (~schumaml@p4ff91164.dip0.t-ipconnect.de)
[19:23:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:24:04] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[19:24:45] *** Joins: wyclif (~wyclif@user/wyclif)
[19:26:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:28:41] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:28:50] *** Quits: Pandadub (~Barones@2804:7f3:8986:e028:6d72:919e:6719:d7c5) (Ping timeout: 272 seconds)
[19:29:12] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:29:40] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:31:26] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:32:16] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:32:28] *** Joins: onexused (~onexused@user/onexused)
[19:34:17] *** Quits: rany (~rany@user/rany) (Ping timeout: 245 seconds)
[19:34:25] *** Joins: hyper_dave (~hyper_dav@197.156.107.174)
[19:34:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:35:44] *** Joins: wyclif (~wyclif@user/wyclif)
[19:35:44] *** Joins: rany (~rany@user/rany)
[19:35:47] *** Joins: thiras (~thiras@user/thiras)
[19:36:12] *** Pixi_ is now known as Pixi
[19:36:47] *** Joins: cthulchu (~Cthulchu@194.44.110.194)
[19:40:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[19:40:53] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:41:14] *** Joins: wyclif (~wyclif@user/wyclif)
[19:41:16] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[19:41:45] *** Joins: Blankspace (~androirc@user/blankspace)
[19:43:19] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[19:43:20] *** Joins: LiftLeft (~LiftLeft@154.21.28.123)
[19:43:22] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:43:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:45:25] *** Joins: jdmark (~jdmark@67.8.137.130)
[19:45:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[19:46:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:46:58] *** Joins: wyclif (~wyclif@user/wyclif)
[19:49:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:51:22] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[19:51:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:52:18] *** Joins: wyclif (~wyclif@user/wyclif)
[19:52:53] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[19:55:02] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[19:55:22] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[19:55:38] *** herme5 is now known as el_kevino
[19:56:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[19:57:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:57:51] *** Joins: wyclif (~wyclif@user/wyclif)
[19:57:59] *** Quits: Blankspace (~androirc@user/blankspace) (Remote host closed the connection)
[19:58:01] *** Joins: extropiator (~extropiat@162.253.68.191)
[19:58:33] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 248 seconds)
[20:00:15] <onexused> Well, I *was* going to ask a question, but I found out I have bigger problems than that : \
[20:00:17] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Ping timeout: 268 seconds)
[20:01:04] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[20:01:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:02:08] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 272 seconds)
[20:02:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[20:02:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:03:32] *** Joins: wyclif (~wyclif@user/wyclif)
[20:03:59] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:04:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[20:07:56] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[20:08:40] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[20:08:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:09:12] *** Joins: wyclif (~wyclif@user/wyclif)
[20:10:27] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[20:10:58] *** Quits: onexused (~onexused@user/onexused) (Ping timeout: 256 seconds)
[20:12:04] *** Quits: extropiator (~extropiat@162.253.68.191) (Ping timeout: 246 seconds)
[20:12:37] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[20:12:40] *** Joins: upsala (~zcb@185.213.155.160)
[20:13:48] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 258 seconds)
[20:15:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:15:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:16:03] *** Joins: wyclif (~wyclif@user/wyclif)
[20:16:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:18:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:19:02] <yogoyo> yeah
[20:20:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:21:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:21:37] *** Joins: jdmark (~jdmark@67.8.137.130)
[20:23:16] *** Joins: struct0 (~struct0@104.248.115.49)
[20:24:12] *** Quits: gpap (~gpap@athedsl-386770.home.otenet.gr) (Quit: Leaving)
[20:25:35] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:26:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[20:26:23] <cloudbender> Is this a sane way to print a formatted stat().st_ctime ?
[20:26:26] <cloudbender>     print ("{:.6f}").format(os.stat(fileitem.filepath).st_ctime)
[20:26:34] <cloudbender> it seems to work alright
[20:26:40] *** Joins: Naan (~naan@user/naan)
[20:27:02] *** Joins: wyclif (~wyclif@user/wyclif)
[20:27:25] *** Quits: cthulchu (~Cthulchu@194.44.110.194) (Ping timeout: 268 seconds)
[20:27:31] <cloudbender> nevermind I'll write a func with it and test it
[20:27:42] <cloudbender> ... test it moar
[20:29:38] <cloudbender> no
[20:29:38] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[20:29:51] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[20:32:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:32:15] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[20:32:32] *** Joins: wyclif (~wyclif@user/wyclif)
[20:32:59] *** Joins: schumaml2 (~schumaml@p57b7e8a5.dip0.t-ipconnect.de)
[20:33:15] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[20:33:26] *** Quits: schumaml1 (~schumaml@p4ff91164.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[20:35:36] *** PocketKiller is now known as PocketKil
[20:35:47] *** PocketKil is now known as PocketKiller
[20:37:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[20:38:03] *** Joins: wyclif (~wyclif@user/wyclif)
[20:39:44] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[20:39:57] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:42:34] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[20:48:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:49:15] *** Joins: wyclif (~wyclif@user/wyclif)
[20:51:08] <cloudcell> hello, what is the best library to use for data that does not fit into memory? I have a list of sets (over 38 gigabytes) that I need to process on a server that has only 4-8 Gigabytes of memory.
[20:51:24] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[20:51:44] <grym> cloudcell: "best" depends on for what purpose/data structure/need
[20:51:44] *** Joins: besnn (~besnn@user/besnn)
[20:52:25] <grym> cloudcell: apache arrow/spark/dask are the 'data science'-y things that come to mind; postgres or sqlite are the databases i'd reach for if that's a better solution
[20:52:26] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[20:52:28] <cloudcell> grym: I will be saving list elements sequentially, and then reading them sequentially one by one
[20:52:33] <grym> depends on what you're doing
[20:53:22] *** Quits: besnn (~besnn@user/besnn) (Client Quit)
[20:54:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[20:54:02] *** Joins: besnn (~besnn@user/besnn)
[20:54:26] <cloudcell> I am basically intersecting sets of numbers and doing it sequentially
[20:54:27] <grym> could be as simple as something like ndjson/jsonlines in a text file you read in chunks, but a 40GB text file sounds kind of unpleasant
[20:54:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:55:37] <cloudcell> does the library 'tables' allow saving a list of sets?
[20:55:43] <cloudcell> grym ^^
[20:56:10] <grym> pytables?
[20:56:12] <grym> that's hdf5
[20:56:14] <cloudcell> yes
[20:56:25] <grym> it's a very natural fit for ndarrays
[20:56:47] <cloudcell> yes, hdf5, is it just for 'table-like' data?
[20:56:49] <grym> if you go that way i've had more luck with h5py, pytables Has Ideas About Design that i don't need
[20:57:08] <grym> hdf5 is not for just tabular data, it will store arbitrarily high dimensional data
[20:57:13] *** Quits: schumaml2 (~schumaml@p57b7e8a5.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[20:57:21] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:57:27] *** Joins: schumaml2 (~schumaml@p57b7e647.dip0.t-ipconnect.de)
[20:57:32] <cloudcell> ok, i'll have a look at h5py thanks!
[20:57:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:58:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:58:12] *** Joins: Pickchea (~private@user/pickchea)
[21:00:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:00:23] *** Joins: wyclif (~wyclif@user/wyclif)
[21:02:40] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[21:03:26] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[21:03:27] *** Quits: rud01f (rud0lf@user/rud0lf) (Ping timeout: 245 seconds)
[21:03:58] *** Joins: menace (~someone@user/menace)
[21:04:03] *** Joins: white_shadow (~brey@117.222.230.36)
[21:04:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[21:06:05] *** mci64 is now known as manin
[21:06:14] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:32] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[21:08:14] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[21:08:47] *** Joins: milosz (~milosz@user/milosz)
[21:09:21] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:10:05] *** Joins: dece (~dece@dece.space)
[21:10:07] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:10:08] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[21:10:11] *** Joins: schumaml3 (~schumaml@p57b7ed6b.dip0.t-ipconnect.de)
[21:10:32] *** Joins: cloudbender40 (~cloudbend@user/cloudbender)
[21:10:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:10:41] <cloudbender40> sorry isp is flakey
[21:11:02] *** Joins: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[21:11:11] *** Quits: schumaml2 (~schumaml@p57b7e647.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:11:23] *** Joins: wyclif (~wyclif@user/wyclif)
[21:11:27] *** Joins: Auron (~Auron956@user/auron)
[21:11:43] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[21:11:51] *** Joins: Akuli (~Akuli@82-203-165-39.bb.dnainternet.fi)
[21:12:43] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[21:13:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[21:13:31] <cloudbender40> ok so yes, order in list() is persistent
[21:13:48] *** Joins: manin (~x@185.242.190.95)
[21:14:02] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[21:15:04] *** Joins: khrbt_ (~znc@user/khrbt)
[21:15:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:15:54] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 258 seconds)
[21:16:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:16:18] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[21:16:54] *** Joins: wyclif (~wyclif@user/wyclif)
[21:17:18] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[21:18:11] *** Quits: inom (~inom@176.59.116.194) (Remote host closed the connection)
[21:18:26] *** Quits: schumaml3 (~schumaml@p57b7ed6b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:18:33] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[21:18:36] *** Quits: cloudbender40 (~cloudbend@user/cloudbender) (Ping timeout: 268 seconds)
[21:18:45] *** Quits: esv (~esv@72.11.45.232) (Ping timeout: 276 seconds)
[21:18:49] *** Joins: rud01f (rud0lf@user/rud0lf)
[21:21:09] *** Joins: schumaml3 (~schumaml@p200300e2ef49850021a525898f93dcf8.dip0.t-ipconnect.de)
[21:22:02] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[21:22:23] <whatsupdoc> is there a better way to write this:
[21:22:32] <whatsupdoc>             if i not in bob:
[21:22:32] <whatsupdoc>                 bob[i] = 1
[21:22:32] <whatsupdoc>             else:
[21:22:32] <whatsupdoc>                 bob[i] += 1
[21:22:53] <nedbat> whatsupdoc: bob = collections.Counter(); ... bob[i] += 1
[21:23:20] <nedbat> whatsupdoc: there's also:  bob = collections.defaultdict(int)
[21:24:02] <whatsupdoc> collections.Counter() initializes everything to zero?
[21:24:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[21:24:46] <whatsupdoc> Never heard of defaultdict, cool, thanks
[21:24:49] <nedbat> whatsupdoc: it sets a key to zero as soon as you try to use it.
[21:25:58] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-1913-d6a0-7d5d-7aab.res6.spectrum.com)
[21:26:01] *** Joins: slee (~slee@user/slee)
[21:26:09] <whatsupdoc> ok got it thanks!
[21:26:42] *** Quits: phlixi_ (~phlixi@aftr-62-216-205-171.dynamic.mnet-online.de) (Remote host closed the connection)
[21:27:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:27:29] <slee> hi, trying to remove newlines from html source with r.text.replace('\n',''), but it isn't removing them...i've also tried to remove \r and \r\n as well, neither are removing the newlines...what else could it be?
[21:27:38] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:27:47] *** Joins: entuland (~entuland@user/entuland)
[21:27:55] *** Joins: wyclif (~wyclif@user/wyclif)
[21:29:45] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[21:30:02] *** Joins: portalrat (~portalrat@user/portalrat)
[21:30:09] *** Joins: inom (~inom@176.59.116.194)
[21:30:10] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[21:30:19] <nedbat> slee: .replace makes a new string, you have to hold onto the value it returns
[21:30:52] <slee> nedbat, correct, blob = r.text.replace('\n','')
[21:31:11] <slee> it's as it the newlines in the html code aren't \n or \n
[21:31:24] <nedbat> slee: how are you seeing what is in blob?
[21:31:27] <slee> err...\r
[21:31:45] <slee> i'm having it save this to a text file
[21:31:56] <nedbat> slee: can you link us to your code?
[21:32:16] <slee> the newlines are still there instead of the html source being 1 continous string
[21:32:21] *** Quits: white_shadow (~brey@117.222.230.36) (Quit: Leaving)
[21:32:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[21:33:26] *** Joins: wyclif (~wyclif@user/wyclif)
[21:33:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:33:49] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[21:34:09] <slee> nedbat, https://bpa.st/H3JQ
[21:34:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 268 seconds)
[21:34:49] <slee> it grabs the html and saves it to the file as expected, it just isn't removing the newlines
[21:34:57] *** Joins: Betal (~Betal@user/betal)
[21:35:17] <slee> again, i've tried \n, \r, \r\n...none seem to remove them
[21:36:24] <slee> the random.com isn't the actual url i'm grabbing, just an example
[21:36:59] *** Quits: pgib (~textual@173.38.117.66) (Ping timeout: 258 seconds)
[21:37:43] *** Joins: portalrat_ (~portalrat@user/portalrat)
[21:37:44] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[21:37:47] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[21:38:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[21:38:36] <nedbat> slee: after line 2, can you add print(repr(blob)) and show us what you get?
[21:38:56] *** Joins: wyclif (~wyclif@user/wyclif)
[21:39:19] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[21:40:47] *** Quits: RougeR (~rougex250@user/rouger) (Ping timeout: 268 seconds)
[21:40:49] <slee> nedbat, ....hmmm...it is actually removing the newlines...i wonder what is putting them back when it writes to the text file?
[21:41:13] *** Joins: jim (~jim@about/linux/staff/jim)
[21:41:18] <nedbat> slee: nothing would add it back.  Is this really the code you are running?
[21:41:24] *** Joins: netsan (~netsan@user/netsan)
[21:42:28] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 272 seconds)
[21:42:30] <slee> nedbat, actual piece of code: https://bpa.st/T3EQ
[21:42:58] <nedbat> slee: are you sure you are looking at the correct output file?
[21:43:08] <slee> i can see in the terminal it's removing the newlines...but when i open the text file it generates with mousepad, the newlines(or something) is back
[21:43:14] <slee> yes
[21:43:36] <bjs> what is mousepad?
[21:43:45] <slee> linux text editor
[21:43:53] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[21:43:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:43:59] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-1913-d6a0-7d5d-7aab.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:44:10] <bjs> slee: is mousepad actually adding newlines?
[21:44:18] <Payam> bjs,  have you worked with gtk?
[21:44:18] <nedbat> slee: can you use ` hexdump -C that_file.txt` to see what is in the file?
[21:44:23] <bjs> Payam: no, why?
[21:44:26] *** Joins: wyclif (~wyclif@user/wyclif)
[21:44:29] <nedbat> slee: btw, why is it important to get rid of the newlines?
[21:44:34] <Payam> just wondering. I am doing gtk now
[21:44:58] <slee> nedbat, makes for easier string manipulation
[21:45:15] <nedbat> slee: interesting, what kind of string manipulation?
[21:45:35] <slee> grabbing between a starting/ending point
[21:45:39] <slee> web scraping
[21:46:20] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[21:46:25] <slee> bjs, not sure if it's mouse pad doing it, never had this issue before...it's like ti's this url specifically
[21:46:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:47:26] *** Joins: nicholasserra (~nicholass@2603-6011-5406-3600-69ef-5799-5a86-ce86.res6.spectrum.com)
[21:47:41] *** Joins: manin (~x@185.242.190.95)
[21:48:35] <bjs> slee: it's very unclear what is actually happening (we can't see what you see) or what is doing it
[21:48:38] *** Quits: manin (~x@185.242.190.95) (Read error: Connection reset by peer)
[21:49:13] *** Joins: manin (~x@185.242.190.95)
[21:49:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:49:14] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[21:49:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:49:57] *** Joins: wyclif (~wyclif@user/wyclif)
[21:50:19] <slee> i understand, i do this with all sorts of urls...my method always works fine, there's just something weird about this specific url that i can't remove the newlines from...thanks for all the help, i'll beat this up a bit more and see if i can't figure it out
[21:50:39] *** Quits: nicholasserra (~nicholass@2603-6011-5406-3600-69ef-5799-5a86-ce86.res6.spectrum.com) (Client Quit)
[21:51:07] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Client Quit)
[21:51:23] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[21:51:27] *** Joins: jaggz (~jaggz@user/jaggz)
[21:51:38] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[21:53:37] *** Quits: slee (~slee@user/slee) (Quit: Leaving)
[21:54:06] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[21:55:08] *** Joins: sazawal (~sazawal@122.161.189.200)
[21:57:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[21:58:38] *** Joins: wyclif (~wyclif@user/wyclif)
[21:59:17] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[21:59:38] *** Joins: manin (~x@185.242.190.95)
[22:01:36] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[22:03:13] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[22:03:23] *** Joins: han-solo (~hanish@user/han-solo)
[22:03:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:04:09] *** Joins: wyclif (~wyclif@user/wyclif)
[22:05:27] <Payam> is it possible to download youtube videos asyncronously?
[22:05:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:05:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:07:01] <grym> parallel and youtube-dl should work fine, sure
[22:07:04] <grym> :)
[22:07:15] <Payam> grym, asyncio and send it to executor?
[22:07:20] <Payam> no other way than that?
[22:07:29] <grym> Payam: i don't know much about asyncio
[22:07:38] <Payam> what do you use? Trio?
[22:07:39] *** Quits: schumaml3 (~schumaml@p200300e2ef49850021a525898f93dcf8.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[22:08:10] <grym> Payam: i don't know much about async frameworks in python, either
[22:08:14] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[22:08:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:09:00] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:09:28] *** Joins: schumaml3 (~schumaml@p200300e2ef49e200e8b8a1cf58621414.dip0.t-ipconnect.de)
[22:09:40] *** Joins: wyclif (~wyclif@user/wyclif)
[22:11:23] <whatsupdoc> Why is using sum(someList) significantly faster than doing a for loop and summing all the elements up in some list?
[22:11:39] <nedbat> whatsupdoc: because it runs in C instead of in Python bytecode
[22:12:56] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[22:13:00] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:13:54] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:13:56] <whatsupdoc> interesting
[22:14:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:15:12] *** Joins: wyclif (~wyclif@user/wyclif)
[22:15:14] *** Joins: Pickchea (~private@user/pickchea)
[22:16:06] *** Quits: schumaml3 (~schumaml@p200300e2ef49e200e8b8a1cf58621414.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[22:16:16] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:17:16] *** Joins: manin (~Neo@185.242.190.95)
[22:17:44] *** Joins: schumaml3 (~schumaml@p57b7ec06.dip0.t-ipconnect.de)
[22:19:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:20:42] *** Joins: wyclif (~wyclif@user/wyclif)
[22:20:55] *** Quits: rendar (~rendar@user/rendar) ()
[22:21:04] *** Quits: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net) (Ping timeout: 258 seconds)
[22:22:52] *** Joins: cthulchu (~Cthulchu@194.44.110.194)
[22:24:01] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[22:24:15] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[22:24:37] *** Quits: dcompoze (~dcompoze@cpc97624-walt24-2-0-cust75.13-2.cable.virginm.net) (Quit: Weechat 3.2)
[22:25:46] *** Quits: manin (~Neo@185.242.190.95) (Quit: WeeChat 2.8)
[22:25:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:26:04] *** Quits: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[22:26:12] *** Joins: wyclif (~wyclif@user/wyclif)
[22:29:58] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[22:30:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:31:43] *** Joins: wyclif (~wyclif@user/wyclif)
[22:32:09] *** Quits: schumaml3 (~schumaml@p57b7ec06.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[22:32:17] *** Joins: schumaml3 (~schumaml@p57b7e98f.dip0.t-ipconnect.de)
[22:35:55] *** Joins: Gerula_ (~Gerula@user/gerula)
[22:35:56] *** Gerula is now known as Guest7576
[22:35:56] *** Gerula_ is now known as Gerula
[22:36:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:37:14] *** Joins: wyclif (~wyclif@user/wyclif)
[22:38:37] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:39:18] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[22:39:55] *** Joins: dez (uid92154@user/dez)
[22:40:00] *** Quits: Guest7576 (~Gerula@user/gerula) (Ping timeout: 268 seconds)
[22:40:46] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:42:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:42:38] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 272 seconds)
[22:42:44] *** Joins: wyclif (~wyclif@user/wyclif)
[22:43:31] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:43:44] *** Joins: audiobirb (~audio@2603-8081-1800-00ad-3290-0c64-3212-0442.res6.spectrum.com)
[22:43:50] *** Joins: rubion (~rubion@cpc124316-ayle4-2-0-cust156.15-2.cable.virginm.net)
[22:44:57] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-d591-18df-e586-cd75.fixed6.kpn.net) (Remote host closed the connection)
[22:44:58] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:45:36] *** Joins: manin (~x@185.242.190.95)
[22:46:09] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:46:13] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-10d0-99bd-fa0a-4fc9.fixed6.kpn.net)
[22:46:24] *** Joins: extropiator (~extropiat@107.181.178.75)
[22:46:56] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[22:47:00] *** Joins: Caesar-EW (~Caesar-EW@84.213.107.109)
[22:47:04] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[22:47:25] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[22:47:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[22:47:50] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[22:47:58] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[22:48:14] *** Joins: wyclif (~wyclif@user/wyclif)
[22:48:15] *** schumaml3 is now known as schumaml
[22:48:27] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[22:49:54] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[22:52:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:53:25] *** Quits: extropiator (~extropiat@107.181.178.75) (Ping timeout: 246 seconds)
[22:53:46] *** Joins: wyclif (~wyclif@user/wyclif)
[22:54:44] *** Joins: MaximB (~MaximB@87.68.164.43)
[22:55:06] *** Quits: Akuli (~Akuli@82-203-165-39.bb.dnainternet.fi) (Quit: Leaving)
[22:55:46] *** Quits: MaximB (~MaximB@87.68.164.43) (Client Quit)
[22:57:34] *** Joins: phlixi (~phlixi@aftr-62-216-205-171.dynamic.mnet-online.de)
[22:58:42] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:59:47] *** Joins: Akuli (~Akuli@82-203-165-39.bb.dnainternet.fi)
[23:02:51] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 258 seconds)
[23:03:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:04:47] *** Joins: wyclif (~wyclif@user/wyclif)
[23:05:45] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[23:06:15] *** Joins: trout (~someone@user/variable)
[23:06:16] *** Joins: erica (~erica@user/erica)
[23:06:52] <trout> Is there any way of enforcing type checks during a normal execution of python? i.e., not running mypy separately but .e.g., throwing an exception if types are wrong?
[23:07:09] *** Quits: erica (~erica@user/erica) (Client Quit)
[23:07:42] *** Joins: erica (~erica@user/erica)
[23:07:44] <nedbat> trout: there are libraries that can add that
[23:07:55] <nedbat> trout: it could be expensive thought
[23:07:58] <nedbat> *though
[23:08:20] <trout> that's fine. and understandably expensive
[23:09:08] <nedbat> trout: https://github.com/agronholm/typeguard ?
[23:09:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[23:09:42] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[23:09:45] <trout> neat: thanks!
[23:09:59] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[23:10:18] *** Joins: wyclif (~wyclif@user/wyclif)
[23:10:42] <jinsun> mypy file.py && python file.py ?
[23:11:28] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:11:33] <trout> that won't work for dynamically defined functions and types. Also it presumes you run mypy everytime :)
[23:11:52] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:11:53] *** Joins: georgios (~georgios@user/georgios)
[23:12:33] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:12:35] <jinsun> ok, you wanted some way to automatically add isinstance checks everywhere
[23:12:35] <agronholm> nor does it work for arguments whose values are dynamically constructed from external data (say, JSON input)
[23:14:29] *** Joins: y1n (~y1n@84-115-64-46.wifi.dynamic.surfer.at)
[23:16:46] <foo> SnoopJ: fwiw, I got a modified version of this doing what I want: https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py - I set up a bridge between a few services. :) Thank you again for all your help
[23:17:06] <foo> I am surprised that https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py re-processes the same email every time, but my hunch is every time the system goes into idle it checks the last message... so I guess that makes sense
[23:17:13] <trout> agronholm: its actually the json input use case that I actually have right now :)
[23:17:23] <grym> trout: for that, i use pydantic
[23:17:24] <foo> I store the uid and don't re-process but I bet this is going to cause my log files to grow. I might turn that off
[23:17:59] <trout> also interesting would be auto-generation of python types from jsonschema
[23:18:29] <grym> trout: that's harder
[23:18:42] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[23:19:00] <grym> trout: https://pydantic-docs.helpmanual.io/datamodel_code_generator/
[23:19:16] <grym> possible, but autogen code makes me itch
[23:19:23] *** Quits: portalrat_ (~portalrat@user/portalrat) (Read error: Connection reset by peer)
[23:19:42] *** Joins: portalrat_ (~portalrat@user/portalrat)
[23:20:16] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[23:20:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:21:20] *** Joins: wyclif (~wyclif@user/wyclif)
[23:21:36] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:21:42] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:4155:bf3c:51a5:f007) (Quit: Client closed)
[23:22:15] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[23:23:06] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[23:23:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:27:28] *** Quits: adium_ (adium@user/adium) (Remote host closed the connection)
[23:27:28] *** Quits: az (az@user/azz) (Remote host closed the connection)
[23:28:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:29:35] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:29:57] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[23:31:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:32:21] *** Joins: wyclif (~wyclif@user/wyclif)
[23:33:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:34:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:35:32] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[23:35:59] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[23:37:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:37:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:37:20] *** Quits: NeoCore (~neocore@195.200.221.90) (Ping timeout: 268 seconds)
[23:37:52] *** Joins: wyclif (~wyclif@user/wyclif)
[23:37:56] *** Quits: trout (~someone@user/variable) (Quit: /dev/null is full)
[23:38:26] *** Joins: adium (adium@user/adium)
[23:38:31] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:39:06] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[23:39:21] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 248 seconds)
[23:39:53] *** Quits: mei (~mei@user/mei) (Ping timeout: 248 seconds)
[23:40:46] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[23:42:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:43:22] *** Joins: wyclif (~wyclif@user/wyclif)
[23:43:54] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[23:44:20] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[23:45:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:46:14] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[23:47:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:48:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:48:35] *** Joins: csevast (~csevast@89-64-113-198.dynamic.chello.pl)
[23:48:52] *** Joins: wyclif (~wyclif@user/wyclif)
[23:50:10] *** Quits: csevast (~csevast@89-64-113-198.dynamic.chello.pl) (Client Quit)
[23:52:53] *** Joins: martums (~martums@user/martums)
[23:53:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[23:54:24] *** Joins: wyclif (~wyclif@user/wyclif)
[23:55:13] *** Joins: martums5 (martums@user/martums)
[23:55:27] *** Joins: Fiji (~Fiji@user/fiji)
[23:57:37] *** Joins: someguy1233 (~someguy@user/someguy123)
[23:57:54] *** Quits: someguy123 (~someguy@user/someguy123) (Ping timeout: 268 seconds)
[23:58:41] *** Joins: esv (~esv@72.11.45.232)
[23:59:06] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[23:59:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:59:33] *** Quits: martums (~martums@user/martums) (Ping timeout: 268 seconds)
[23:59:33] *** martums5 is now known as martums
[23:59:58] *** Joins: wyclif (~wyclif@user/wyclif)
