[00:11:06] *** Joins: danisztls (~weechat@user/danisztls)
[01:28:51] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[01:33:51] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[01:38:15] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:11:27] *** Quits: ormaaj2 (~6174b413@user/ormaaj) (Quit: https://mibbit.com Online IRC Client)
[02:49:08] *** Quits: danisztls (~weechat@user/danisztls) (*.net *.split)
[02:49:08] *** Quits: nvmd (~nvmd@user/nvmd) (*.net *.split)
[02:49:08] *** Quits: lgc (~lgc@user/lgc) (*.net *.split)
[02:49:09] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[02:49:09] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (*.net *.split)
[02:49:09] *** Quits: mw_ (~mw@catv-188-142-181-228.catv.broadband.hu) (*.net *.split)
[02:49:09] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[02:49:09] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[02:49:10] *** Quits: geirha (~geirha@user/geirha) (*.net *.split)
[02:49:10] *** Quits: yitz (~nick@exercism/yitz) (*.net *.split)
[02:49:10] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[02:49:10] *** Quits: redgloboli (~redglobol@user/redgloboli) (*.net *.split)
[02:49:11] *** Quits: simbioz_ (~simbioz@user/simbioz) (*.net *.split)
[02:49:11] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[02:49:11] *** Quits: rct (rct@kudu.in-berlin.de) (*.net *.split)
[02:49:12] *** Quits: MTecknology (~Mike@user/mtecknology) (*.net *.split)
[02:49:12] *** Quits: chasmo77 (~chas77@71.63.241.168) (*.net *.split)
[02:49:12] *** Quits: shbot (~shbot@37.139.2.101) (*.net *.split)
[02:49:12] *** Quits: earnestly (~earnest@user/earnestly) (*.net *.split)
[02:49:13] *** Quits: djinni` (~djinni@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:13] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (*.net *.split)
[02:49:13] *** Quits: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[02:49:13] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (*.net *.split)
[02:49:13] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[02:49:14] *** Quits: Nahra` (~user@static.161.95.99.88.clients.your-server.de) (*.net *.split)
[02:49:14] *** Quits: przemoc (~przemoc@user/przemoc) (*.net *.split)
[02:49:14] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[02:49:14] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[02:49:15] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[02:49:15] *** Quits: bnjf (~bnjf@vm.bnjf.id.au) (*.net *.split)
[02:49:15] *** Quits: timlegge (~quassel@142.167.255.204) (*.net *.split)
[02:49:15] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[02:49:16] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[02:49:16] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[02:49:16] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[02:49:16] *** Quits: dzho (~dzho@user/dzho) (*.net *.split)
[02:49:17] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[02:49:17] *** Quits: enzotib (~enzotib@user/enzotib) (*.net *.split)
[02:49:17] *** Quits: sze (~sze@216.250.96.102) (*.net *.split)
[02:49:17] *** Quits: karhunkynsi (~karhunkyn@user/karhunkynsi) (*.net *.split)
[02:49:17] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[02:49:17] *** Quits: plitter (~plitter@user/plitter) (*.net *.split)
[02:49:18] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[02:49:18] *** Quits: Ox4 (~int@0x4.cx) (*.net *.split)
[02:49:18] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[02:49:18] *** Quits: mobius (sid478273@id-478273.highgate.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: izabera (izabera@user/izabera) (*.net *.split)
[02:49:19] *** Quits: Nothing4You (N4Y@nothing4you.w.tf-w.tf) (*.net *.split)
[02:49:19] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[02:49:19] *** Quits: lopid (~lopid@user/lopid) (*.net *.split)
[02:49:19] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (*.net *.split)
[02:49:19] *** Quits: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com) (*.net *.split)
[02:49:19] *** Quits: karhunkynsii (~karhunkyn@user/karhunkynsi) (*.net *.split)
[02:49:20] *** Quits: user3456 (user3456@user/user3456) (*.net *.split)
[02:49:20] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (*.net *.split)
[02:49:20] *** Quits: finnb (~finnb@51.15.63.237) (*.net *.split)
[02:49:21] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[02:50:09] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[02:50:09] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[02:50:09] *** Joins: bnjf (~bnjf@vm.bnjf.id.au)
[02:50:09] *** Joins: timlegge (~quassel@142.167.255.204)
[02:50:49] *** Joins: djinni` (~djinni@static.38.6.217.95.clients.your-server.de)
[02:51:28] *** Joins: user3456 (user3456@user/user3456)
[02:51:28] *** Joins: wyre (~wyre@user/wyre)
[02:51:28] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[02:51:28] *** Joins: finnb (~finnb@51.15.63.237)
[02:51:33] *** Joins: redgloboli (~redglobol@user/redgloboli)
[02:51:33] *** Joins: mw_ (~mw@catv-188-142-181-228.catv.broadband.hu)
[02:51:33] *** Joins: Hackerpcs (~user@user/hackerpcs)
[02:51:33] *** Joins: vlm (~vlm@user/vlm)
[02:51:33] *** Joins: geirha (~geirha@user/geirha)
[02:51:33] *** Joins: simbioz_ (~simbioz@user/simbioz)
[02:51:33] *** Joins: e36freak (~e36freak@user/e36freak)
[02:51:33] *** Joins: yitz (~nick@exercism/yitz)
[02:51:33] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[02:51:55] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[02:52:00] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[02:52:00] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:52:00] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[02:52:00] *** Joins: [R] (~rs@genoce.org)
[02:52:00] *** Joins: Nahra` (~user@static.161.95.99.88.clients.your-server.de)
[02:52:00] *** Joins: przemoc (~przemoc@user/przemoc)
[02:52:00] *** Joins: mixfix41 (~homefame@user/mixfix41)
[02:52:13] *** Joins: lgc (~lgc@user/lgc)
[02:52:13] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[02:52:35] *** Joins: V (~v@anomalous.eu)
[02:52:35] *** Joins: enzotib (~enzotib@user/enzotib)
[02:52:35] *** Joins: sze (~sze@216.250.96.102)
[02:52:35] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[02:52:35] *** Joins: Ekho (~Ekho@user/ekho)
[02:52:35] *** Joins: plitter (~plitter@user/plitter)
[02:52:45] *** Joins: rct (rct@kudu.in-berlin.de)
[02:52:45] *** Joins: MTecknology (~Mike@user/mtecknology)
[02:53:28] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:53:28] *** Joins: shbot (~shbot@37.139.2.101)
[02:53:28] *** Joins: earnestly (~earnest@user/earnestly)
[02:53:29] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[02:53:29] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[02:53:29] *** Joins: ccl (ccl@shell.xshellz.com)
[02:53:29] *** Joins: dzho (~dzho@user/dzho)
[02:53:30] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 244 seconds)
[02:53:37] *** Joins: Riviera (Riviera@user/riviera)
[02:53:37] *** Joins: lopid (~lopid@user/lopid)
[02:53:37] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[02:53:37] *** Joins: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[02:53:37] *** Joins: karhunkynsii (~karhunkyn@user/karhunkynsi)
[02:53:38] *** Joins: mobius (sid478273@id-478273.highgate.irccloud.com)
[02:53:38] *** Joins: izabera (izabera@user/izabera)
[02:53:38] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[02:53:38] *** Joins: Ox4 (~int@0x4.cx)
[02:53:38] *** Joins: llua (~llua@zsh/developer/llua)
[02:53:38] *** Joins: Nothing4You (N4Y@nothing4you.w.tf-w.tf)
[02:54:21] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[02:55:03] *** Joins: ormaaj (~6174b413@ircip2.mibbit.com)
[02:55:03] *** Joins: danisztls (~weechat@user/danisztls)
[02:55:03] *** Joins: nvmd (~nvmd@user/nvmd)
[03:18:08] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 258 seconds)
[03:29:34] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[03:31:43] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 256 seconds)
[03:33:37] *** Joins: nvmd (~nvmd@user/nvmd)
[03:34:42] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[04:03:11] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[04:04:47] <jmcantre2> Is there a way to do something like nested capture groups? (like s/^.*((.[[:alnum:]]+)+)$/\1/)
[04:06:14] <Riviera> jmcantre2: not quite sure what the question here is
[04:06:22] <Riviera> jmcantre2: what do you see as a problem?
[04:07:20] <jmcantre2> Riviera: I'd like to match 1 or more /\.[[:alnum:]]+/ at the end of a string
[04:07:41] <jmcantre2> That command I tried didn't seem to work.
[04:08:02] <Riviera> jmcantre2: ok
[04:08:22] <Riviera> jmcantre2: so it does not even work without any capture group ;p
[04:08:34] <Riviera> jmcantre2: sed does not use these regular expressions that you are using here
[04:08:41] <Riviera> jmcantre2: [standard] sed does not have +
[04:08:48] <Riviera> jmcantre2: you would use \{1,\}
[04:09:02] <jmcantre2> Riviera: i'm using -E
[04:09:09] <Riviera> well ok.
[04:09:17] <Riviera> "good to know"
[04:09:27] <Riviera> in that case:
[04:11:11] <Riviera> # echo 'lalala \.123\.123' | sed -E 's/(\.[[:alnum:]]+)+$/<match>/'
[04:11:13] <shbot> Riviera: lalala \.123\<match>
[04:11:16] <Riviera> that's what you mean?
[04:11:19] <Riviera> that this does not work?
[04:12:03] <Riviera> err
[04:12:08] <Riviera> sorry, brainfart :
[04:12:09] <Riviera> :D
[04:12:15] <Riviera> # echo 'lalala .123.123' | sed -E 's/(\.[[:alnum:]]+)+$/<match>/'
[04:12:16] <shbot> Riviera: lalala <match>
[04:12:34] <Riviera> jmcantre2: so this seems to work so far, what's next?
[04:14:25] <jmcantre2> well, it replaces the match, but i'd like to get the match. so .123.123 in your example
[04:14:34] <Riviera> okay
[04:14:39] <Riviera> ah
[04:14:45] <Riviera> i understand now
[04:14:51] <Riviera> the problem is not that the capture groups are nested
[04:15:00] <Riviera> you mean like this:
[04:15:17] <Riviera> # echo 'lalala .123.123' | sed -E 's/.*(\.[[:alnum:]]+)+$/\1/'
[04:15:18] <shbot> Riviera: .123
[04:15:32] <Riviera> that's because the .* is greedy
[04:15:42] <jmcantre2> ah
[04:15:55] <Riviera> then the rest only "takes back as much as necessary", if that makes sense.
[04:16:16] <jmcantre2> yeah, i'm guessing there's not a .*?
[04:16:22] <Riviera> no, not in sed
[04:16:39] <Riviera> and it's actually relatively tricky to do it for the general case
[04:16:44] <Riviera> would awk be an option?
[04:16:52] <Riviera> as in:
[04:16:53] <jmcantre2> sure
[04:17:28] <Riviera> # echo 'lalala .123.123' | awk 'match($0, /(\.[[:alnum:]]+)+$/) { print substr($0, RSTART, RLENGTH) }'
[04:17:29] <shbot> Riviera: .123.123
[04:18:19] <jmcantre2> interesting. thanks. i'm going to read some man pages now :)
[04:18:51] <Riviera> hehe, feel free to ask, as there is also an #awk
[04:19:02] <Riviera> (i will be gone in a minute though)
[04:22:24] <jmcantre2> Considering that all of the times I've used awk has been just printing specific columns, I want to make sure I understand what this is doing.
[04:23:29] <jmcantre2> I think it makes sense though. It's matching on that pattern, and then printing the range of characters that was matched.
[04:24:00] <Riviera> yup, and the { } thing is only executed when the match()-thing is true
[04:24:42] <Riviera> awk scripts contain of pattern-action pairs; like /pattern/ { print }
[04:25:06] <Riviera> if the pattern is omitted the action is executed for each input record (typically lines, unless the record separator is changed),
[04:25:32] <Riviera> and if the action is omitted the record is printed by default when the pattern is true.
[04:26:01] <Riviera> match() is a function that ... well, matches a regular expression, match(string, pattern),
[04:26:36] <Riviera> it returns the index of the string where the pattern occurs, which here, being used as a pattern,
[04:26:40] <Riviera> is "abused" as a truth value
[04:27:08] <Riviera> it also sets as a side effect the variables RSTART and RLENGTH (index of the match in the string, and the match's length),
[04:27:29] <Riviera> which then the substr() function can use. I believe the function is more or less self-explanatory.
[04:27:35] <Riviera> What's missing is the $0
[04:27:56] <Riviera> that's automatically set by awk for you, it's the entire current input record
[04:28:56] <Riviera> $1 is the first field (of that record), $2 the second, $n the nth and $(NF - 1) the penultimativesth (or whatever that's called) (NF is the number of fields of the current record -- you can change the field separator as well)
[04:29:16] <Riviera> i believe that's everything you need to know to understand this little awk snippet
[04:36:47] *** Joins: curdlesnoot (~curdlesno@2a03:1b20:1:e011::a19d)
[05:01:49] *** Joins: ferdna (~ferdna@user/ferdna)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:25] *** Quits: simbioz_ (~simbioz@user/simbioz) (Remote host closed the connection)
[05:31:15] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[05:31:48] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[05:36:57] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[05:39:43] *** Joins: vlm (~vlm@user/vlm)
[05:47:40] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[05:48:13] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[06:04:05] *** Joins: Media_Thor (~Listen@xplr-208-114-129-18.xplornet.com)
[06:11:54] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:58:18] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[06:59:20] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:07:18] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[07:35:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:10:31] *** Quits: danisztls (~weechat@user/danisztls) (Ping timeout: 256 seconds)
[08:52:20] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[09:03:02] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[09:07:38] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[09:27:32] *** Quits: ormaaj (~6174b413@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[09:44:44] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[10:10:27] *** Quits: Media_Thor (~Listen@xplr-208-114-129-18.xplornet.com) (Read error: Connection reset by peer)
[10:11:52] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[10:24:29] *** Joins: ormaaj (~6174b413@ircip2.mibbit.com)
[10:41:52] *** ormaaj is now known as ormaaj2
[11:02:43] *** Quits: ormaaj2 (~6174b413@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[11:33:53] *** Joins: ormaaj2 (~6174b413@ircip2.mibbit.com)
[11:33:53] *** Quits: ormaaj2 (~6174b413@ircip2.mibbit.com) (Changing host)
[11:33:53] *** Joins: ormaaj2 (~6174b413@user/ormaaj)
[11:34:01] *** Joins: nerozero (~nerozero@87.253.63.54)
[12:09:56] <Soliton> # echo 'lalala .123.123' | sed -E 's/.* ((\.[[:alnum:]]+)+)$/\1/'
[12:09:57] <shbot> Soliton: .123.123
[12:10:46] <Riviera> Soliton never runs out of space.
[12:11:27] <Riviera> But actually
[12:11:56] *** Joins: earnestly (~earnest@user/earnestly)
[12:11:59] <Riviera> ah no, nevermind. I thought for a second that [[:alnum:].] could help.
[12:14:33] <Soliton> if there was no suitable separator already one could also insert one.
[12:14:38] <Soliton> # echo 'lalala .123.123' | sed -E 's/((\.[[:alnum:]]+)+)$/;\1/;s/.*;//'
[12:14:39] <shbot> Soliton: .123.123
[12:15:56] <Riviera> yup, but then one would have to test if there was a match
[12:16:01] <Riviera> i preferred awk over that
[12:18:42] <Riviera> Soliton: the "general" solution I would have to extract something when greedy matching "interferes" is surrounding the match with newlines,
[12:19:06] <Riviera> Soliton: because those won't be in the pattern. And then to remove what's not surrounded by newline characters ..
[12:21:25] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:e011::a19d) (Quit: = "")
[12:44:50] <Soliton> indeed newline is the ultimate separator.
[12:50:29] *** ormaaj2 is now known as ormaaj3
[12:51:59] *** ormaaj3 is now known as ormaaj2
[12:54:22] *** Joins: ormaaj3 (~ormaaj3@user/ormaaj)
[13:04:53] *** Joins: malina (~malina@user/malina)
[13:10:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:13:56] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:16:47] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:17:23] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[13:17:43] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[13:26:57] *** Joins: GuiToris (~GuiToris@user/guitoris)
[13:28:14] *** Quits: ormaaj3 (~ormaaj3@user/ormaaj) (Remote host closed the connection)
[13:28:27] *** Joins: ormaaj3 (~ormaaj3@user/ormaaj)
[13:28:54] <GuiToris> hello, it must be easy but I couldn't find a way to copy and paste text. Original pattern is something like this : [WORD]; blah blah. Desired output: [WORD]; blah [WORD] blah
[13:32:43] <Riviera> echo '[WORD]; blah blah' | sed 's/\[WORD\]; blah blah/[WORD]; blah [WORD] blah/'
[13:32:44] <Riviera> # echo '[WORD]; blah blah' | sed 's/\[WORD\]; blah blah/[WORD]; blah [WORD] blah/'
[13:32:46] <shbot> Riviera: [WORD]; blah [WORD] blah
[13:32:58] <Riviera> GuiToris: Alternatively let's not pussyfoot around and provide data one can work with.
[13:35:44] <GuiToris> thanks, I was trying to protect you from ugly codes
[13:37:45] <GuiToris> um, you didn't actually copy/paste text in your example, did you?
[13:38:03] <lopid> just use a capture group and \1
[13:38:27] <GuiToris> is it called capture here? :O thanks, I'll look this up
[13:38:49] <lopid> it's a regex thing
[13:38:54] <Riviera> It's typically not called like that in sed documents.
[13:39:20] <Riviera> # echo 'lalala guitoris lalala' | sed 's/gui\(.*\)/>>> \1 <<</'
[13:39:21] <shbot> Riviera: lalala >>> toris lalala <<<
[13:39:39] <Riviera> # echo 'lalala guitoris lalala' | sed 's/gui\([^ ]*\)/>>> \1 <<</'
[13:39:40] <shbot> Riviera: lalala >>> toris <<< lalala
[13:39:43] <Riviera> as an example.
[13:41:21] <GuiToris> this is a side question, is there a site where I could learn playfully the basics? (reading manuals are not easy)
[13:41:42] <GuiToris> if the site were interactive, it would be even better
[13:41:49] <lopid> regex101.com for general regex stuff, but it doesn't support bre
[13:42:27] <lopid> (accessed via the https protocol)
[13:42:38] <GuiToris> is sed = regex?
[13:42:38] <Soliton> probably doesn't support ERE either.
[13:42:45] <lopid> it doesn't
[13:43:06] <Soliton> regex is short for regular expression.
[13:43:25] <lopid> sed = stream editor
[13:43:38] <GuiToris> then I guess sed uses regex
[13:44:00] <lopid> just like grep does, and awk, and perl, and…
[13:51:08] <GuiToris> ok, I clearly overestimated my skills, I cannot do that. This is one of the lines of the file: https://bpa.st/raw/XFPQ
[13:51:17] <GuiToris> it's way to complicated for me
[13:51:42] <lopid> maybe you've just escaped incorrectly
[13:52:26] <GuiToris> lopid, it's super difficult for me there are '(<[{"
[13:52:38] <Soliton> "Do NOT try to parse markup (html, xml, etc) with sed! /msg greybot html"
[13:54:49] <lopid> for a start, + ? < > ( | { are literal unless escaped
[13:56:04] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:58:14] <GuiToris> maybe, I'll do just 's/<div/[sound:_jj.ogg]<div/' and edit the numbers manually
[13:59:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[14:02:35] <geirha> sed -e $'s/<div/\\\n<div/' -e 's/\([^;]*\)\(;.*\)\n<div/\1\2\1<div/'
[14:03:42] <geirha> sed -e $'s/<div/\\\n&/' -e 's/\([^;]*\)\(;.*\)\n/\1\2\1/'
[14:07:40] <GuiToris> geirha, that's it, I don't know what it does but it worked, thanks a lot! :)
[14:25:56] *** Quits: ormaaj3 (~ormaaj3@user/ormaaj) (Remote host closed the connection)
[14:36:27] *** Joins: TomyWork (~TomyLobo@p200300e80f133c00c9f2bfe97ca57256.dip0.t-ipconnect.de)
[14:41:02] *** Quits: ormaaj2 (~6174b413@user/ormaaj) (Quit: https://mibbit.com Online IRC Client)
[14:53:16] *** Joins: ormaaj2 (~6174b413@user/ormaaj)
[14:53:18] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[14:56:19] *** Quits: ormaaj2 (~6174b413@user/ormaaj) (Remote host closed the connection)
[14:59:51] *** Joins: ormaaj2 (6174b413@user/ormaaj)
[15:00:31] *** Joins: ormaaj (~ormaaj@2001:470:69fc:105::35ca)
[15:07:23] *** Quits: ormaaj (~ormaaj@2001:470:69fc:105::35ca) (Changing host)
[15:07:23] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:50:52] *** Joins: Deknos (~someone@user/menace)
[15:59:17] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 252 seconds)
[16:09:05] *** Quits: GuiToris (~GuiToris@user/guitoris) (Remote host closed the connection)
[17:12:54] *** Joins: danisztls (~weechat@user/danisztls)
[17:19:15] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 265 seconds)
[17:20:42] *** Joins: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net)
[17:45:31] *** Quits: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 244 seconds)
[17:47:33] *** Joins: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net)
[17:50:29] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:51:07] *** Quits: mixfix41 (~homefame@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[17:51:07] *** Joins: mixfix41 (~homefame@user/mixfix41)
[18:10:19] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: tech_exorcist)
[19:31:02] *** Joins: Media_Thor (~Listen@xplr-208-114-129-15.xplornet.com)
[19:52:01] *** Quits: TomyWork (~TomyLobo@p200300e80f133c00c9f2bfe97ca57256.dip0.t-ipconnect.de) (Quit: Leaving)
[19:52:35] *** Joins: lgc (~lgc@user/lgc)
[20:48:22] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[20:53:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:56:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[21:09:52] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:21:20] <ash_worksi> I don't get 'q'
[21:21:40] <Riviera> ash_worksi: That the new way to say hello?
[21:22:24] <ash_worksi> Riviera: :D
[21:22:39] <Riviera> Do tell what you do not understand!
[21:22:39] <ash_worksi> actually, I'm spamming shbot and deciding I don't get a lot of things
[21:22:44] <Riviera> :D
[21:22:50] <Riviera> But is that not silly?
[21:22:58] <Riviera> Rather decide you understand everything, would that not be nicer?
[21:23:39] <Soliton> # printf '%s\n' {a..z} | sed 3q
[21:23:40] <shbot> Soliton: a
[21:23:40] <shbot> Soliton: b
[21:23:40] <shbot> Soliton: c
[21:24:07] <Riviera> shbot anyway only shows three lines
[21:24:09] <Riviera> pfff
[21:24:16] <ash_worksi> I thought that, in order to print and then quit for `printf '%s\n' foo bar baz` you'd have to `sed '/foo/{/foo/p;q}'`
[21:24:34] <Riviera> ash_worksi: but?
[21:24:44] <Soliton> unless you use -n there is auto print.
[21:24:45] <Riviera> ash_worksi: you get the line twice?
[21:24:55] <Riviera> Soliton takes over!
[21:25:05] <ash_worksi> printf '%s\n' foo bar baz | sed -n '/bar/{=;q}'
[21:25:10] <ash_worksi> # printf '%s\n' foo bar baz | sed -n '/bar/{=;q}'
[21:25:11] <shbot> ash_worksi: 2
[21:25:22] <ash_worksi> # printf '%s\n' foo bar baz | sed -n '/bar/{p;q}'
[21:25:23] <shbot> ash_worksi: bar
[21:25:58] <ash_worksi> I am confused I guess as to when I have to use /bar/ twice
[21:26:20] <geirha> when you have  /foo/,/bar/ perhaps
[21:26:28] <ash_worksi> oh
[21:26:39] <geirha> when you have  /foo/,/bar/{ p; /bar/q; }
[21:26:39] <Riviera> you do not have to use it twice in your original example
[21:27:27] <ash_worksi> # printf '%s\n' foo bar baz quuz | sed -n '/bar/,/baz/{/baz/p;q}'
[21:27:29] <shbot> ash_worksi: no output
[21:27:58] <ash_worksi> whats happening there?
[21:28:04] <geirha> you quit at bar
[21:28:53] <ash_worksi> so, in order to print and quit at baz from bar to baz I have to put /baz/ three times?
[21:29:02] <geirha> no
[21:29:22] <geirha> # printf '%s\n' foo bar baz quuz | sed -n '/bar/,/baz/{ p; /baz/q; }'
[21:29:23] <shbot> geirha: bar
[21:29:23] <shbot> geirha: baz
[21:29:36] <ash_worksi> hmm
[21:30:20] <geirha> if current line is within /bar/ and /baz/ { print; if /baz/ then quit }
[21:31:05] <Riviera> sed evaluates the entire script
[21:31:08] <Riviera> for each line.
[21:31:25] <Riviera> so, a line is read, then it is being checked whether the condition /bar/,/baz/ is true for this line,
[21:31:43] <Riviera> and if that is the case, all commands between { and } are checked for this line.
[21:32:44] <Riviera> err
[21:32:48] <Riviera> not checked but executed.
[21:46:29] *** Quits: djinni` (~djinni@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[21:47:30] *** Joins: djinni` (~djinni@static.38.6.217.95.clients.your-server.de)
[21:52:19] <ash_worksi> so if I want to print _only_ the line number of "end" after "bar" in: `printf '%s\n' foo 1 end bar 2 end baz 3 end quux 4 end` then I have to use '/bar/,/end/{/end/=;/end/q}' ?
[21:53:46] <Soliton> you can also use '/bar/,/end/{/end/{=;q;};}'
[21:53:56] <ash_worksi> I see
[21:54:14] <ash_worksi> that last ; is necessary?
[21:54:32] <Soliton> for POSIX, yes.
[21:54:40] <ash_worksi> I see
[21:54:45] <ash_worksi> thanks
[22:25:59] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[23:02:15] *** Parts: Deknos (~someone@user/menace) ()
[23:04:44] *** Quits: malina (~malina@user/malina) (Quit: malina)
[23:07:39] *** Joins: malina (~malina@user/malina)
[23:11:00] *** Quits: malina (~malina@user/malina) (Client Quit)
[23:23:54] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 272 seconds)
[23:33:25] *** Quits: Nahra` (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[23:35:08] *** Quits: Media_Thor (~Listen@xplr-208-114-129-15.xplornet.com) (Read error: Connection reset by peer)
[23:41:08] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:43:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[23:57:02] *** Joins: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com)
[23:57:04] *** Quits: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com) (Read error: Connection reset by peer)
[23:59:34] *** Joins: Media_Thor (~Listen@xplr-208-114-129-8.xplornet.com)
[23:59:53] *** Joins: malina (~malina@user/malina)
