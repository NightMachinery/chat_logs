[00:00:44] *** grettke is now known as grettke2
[00:00:44] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:01:49] <mstenta> I'm trying to test if a command was successful (by running the command and then doing "if [ $? -eq 0 ]; then") - but I need to somehow ALSO prevent the command itself from creating an exit 1 code. Because: I'm running this in a GitHub Action, which will automatically abort if any commands return exit 1 (I probably need to rethink how I'm doing this). Any ideas?
[00:03:50] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:04:48] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[00:04:53] <mstenta> Ah I may have found an answer: https://stackoverflow.com/a/45729843
[00:05:21] <pj> the github action is likely just going to be using set -e
[00:05:36] *** Quits: y04nn (~y04nn@81.17.24.204) (Ping timeout: 268 seconds)
[00:05:49] <pj> just do: if cmd; then do_someting; else true; fi
[00:06:51] <pj> and...
[00:06:54] <pj> !-e mstenta 
[00:07:00] <pj> !-e > mstenta 
[00:07:00] <greybot> mstenta: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[00:07:52] <pj> ...and also
[00:07:58] <pj> ![$? > mstenta 
[00:07:58] <greybot> mstenta: Don't do this: ``mycommand; if [ $? -eq 0 ]'' -- You're running the [ command and checking its exit code to test whether "mycommand"'s exit code is 0. That's a pointless operation, test mycommand directly: ``if mycommand''
[00:08:23] *** Joins: thiras (~thiras@user/thiras)
[00:08:41] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[00:09:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 268 seconds)
[00:09:55] <mstenta> pj: oh that's much simpler! (just putting it directly in the if statement) - seems to work as desired! Thanks!
[00:10:47] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 252 seconds)
[00:10:57] <pj> mstenta: yw
[00:12:21] *** Joins: akoana (~ah@user/akoana)
[00:12:38] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 244 seconds)
[00:13:13] <mstenta> greybot: thank you too! makes sense!
[00:14:11] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 244 seconds)
[00:16:56] *** Quits: yupeak (~yupeak@S010664777dacc633.vc.shawcable.net) (Read error: Connection reset by peer)
[00:17:23] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[00:17:59] *** Joins: GoLiath__ (~GoLiath@82.166.106.212)
[00:18:22] *** Quits: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.1)
[00:19:09] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 272 seconds)
[00:19:13] *** Joins: li (~li@libera/staff/li)
[00:19:15] *** Quits: mstenta (~mstenta@2600:6c65:767f:9364:6d59:19:998a:c58a) (Quit: Leaving)
[00:20:24] *** Quits: GoLiath_ (~GoLiath@80.179.69.241.cable.012.net.il) (Ping timeout: 268 seconds)
[00:21:37] *** Joins: greycat (~greg@209.142.155.49)
[00:22:37] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[00:22:54] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[00:23:31] *** Joins: PlayerOne (~v7@user/playerone)
[00:23:44] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[00:23:53] *** Quits: milosz__ (~milosz@user/milosz) (Remote host closed the connection)
[00:26:03] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[00:26:18] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[00:27:12] *** Quits: unixman_home (~unixman2@243-222-137-216.mtaonline.net) (Remote host closed the connection)
[00:27:30] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 240 seconds)
[00:27:30] *** Joins: unixman_home (~unixman2@243-222-137-216.mtaonline.net)
[00:27:43] *** Joins: Adoi (~Adoi@user/adoi)
[00:28:08] *** Quits: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Ping timeout: 244 seconds)
[00:29:30] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 240 seconds)
[00:30:07] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:30:12] *** grettke is now known as grettke2
[00:31:55] *** Joins: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com)
[00:32:44] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[00:35:51] *** Joins: keypusher (keypusher@user/keypusher)
[00:40:20] *** Joins: dub_a (~dub_a@192.252.212.46)
[00:42:11] *** Quits: magla (~gelignite@55d48585.access.ecotel.net) (Quit: Stay safe!)
[00:42:11] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Quit: Leaving)
[00:44:45] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:50:42] *** Quits: Phurl (~phurl@host86-191-122-227.range86-191.btcentralplus.com) (Quit: Konversation terminated!)
[00:54:16] *** Joins: sdu (~doo@185.44.146.110)
[01:07:33] *** Quits: Afroboy (~afroboy@105.107.56.216) (Quit: Leaving)
[01:07:49] *** Quits: timj (~timj@79-252-142-46.pool.kielnet.net) (Remote host closed the connection)
[01:10:00] *** Joins: alzgh (~alzgh@216.155.158.214)
[01:11:35] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[01:13:07] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:13:11] *** Quits: karakedi (~eAC53C340@78.183.99.19) (Changing host)
[01:13:11] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:13:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[01:14:41] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[01:16:20] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[01:19:59] *** Joins: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de)
[01:20:50] *** Joins: phillbush (~phillbush@user/phillbush)
[01:20:58] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[01:21:27] *** Joins: Adoi (~Adoi@user/adoi)
[01:22:17] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Quit: That's about it, see ya)
[01:22:22] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[01:24:21] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[01:24:22] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:24:29] *** Quits: lilalinux (~lilalinux@p549ee28d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[01:26:48] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[01:26:57] *** Joins: mongy (~mongy@user/mongy)
[01:27:22] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[01:31:01] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[01:31:05] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[01:31:58] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[01:32:01] *** grettke is now known as grettke2
[01:32:11] *** Quits: GoLiath__ (~GoLiath@82.166.106.212) (Read error: Connection reset by peer)
[01:33:43] *** Joins: GoLiath_ (~GoLiath@159.48.55.94)
[01:39:23] *** Joins: timj (~timj@79-252-142-46.pool.kielnet.net)
[01:41:24] <yitz> !greybot > mschiff 
[01:41:24] <greybot> mschiff: I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[01:41:27] <yitz> Woops
[01:41:40] * yitz smacks tab complete and delays
[01:42:13] *** Quits: yogoyo (~weechat@user/yogoyo) (Remote host closed the connection)
[01:43:29] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...╭∩╮)
[01:46:36] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:40] * uplime hands yitz some coffee
[01:48:54] *** Joins: drtelnet` (~user@159.182.1.4)
[01:50:17] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Remote host closed the connection)
[01:50:21] *** Quits: kodo671 (~jay@static-198-54-133-140.cust.tzulo.com) (Ping timeout: 272 seconds)
[01:50:31] * yitz gulps down the coffee
[01:50:36] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[01:59:35] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:00:30] *** Joins: simbioz (~simbioz@user/simbioz)
[02:02:39] *** Joins: bobmight57 (~bobmight5@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[02:03:47] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:05:44] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:06:33] *** Joins: Krail (~Krail@user/alexdelarge)
[02:06:58] *** Joins: node1_ (~node1@1.39.148.142)
[02:09:24] *** Quits: node1 (~node1@user/node1) (Ping timeout: 244 seconds)
[02:09:26] *** Joins: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it)
[02:09:37] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: tech_exorcist)
[02:11:24] *** Quits: kj (~kj@beta.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:11:50] *** Quits: anton (~anton@antonmcclure.com) (Quit: anton)
[02:12:01] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[02:14:18] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 240 seconds)
[02:14:36] *** Quits: zoe` (~zoe@xdsl-31-164-88-63.adslplus.ch) (Remote host closed the connection)
[02:15:29] *** Joins: ionface (~ionface@user/ionface)
[02:16:30] *** Joins: node1__ (~node1@1.39.138.141)
[02:18:42] *** Quits: node1_ (~node1@1.39.148.142) (Ping timeout: 244 seconds)
[02:21:02] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[02:22:19] *** Quits: drtelnet` (~user@159.182.1.4) (Ping timeout: 244 seconds)
[02:22:31] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:22:55] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[02:24:16] <izabera> hey greycat lookie   https://github.com/izabera/greybottemp/blob/master/loadme   https://github.com/izabera/greybottemp/blob/master/greybot
[02:27:13] <earnestly> It's nice that they provide examples of the protocol: https://ircv3.net/specs/extensions/sasl-3.1
[02:28:01] *** Quits: yosijo (~yosijo@business-90-187-142-153.pool2.vodafone-ip.de) (Quit: yosijo)
[02:28:07] <earnestly> Er, https://ircv3.net/specs/extensions/sasl-3.2 I suppose
[02:28:40] *** Quits: nDuff (~chaduffy@169.107.54.198.in-addr.arpa) (Ping timeout: 268 seconds)
[02:28:45] <earnestly> 3.1 document is more useful though
[02:31:11] *** Quits: The_Tablet (Tablet@user/the-tablet/x-0046241) (Quit: cya~ ❀)
[02:32:18] *** Quits: tzcrawford (~tzcrawfor@2601:1c0:ce00:32e:6f44:af9f:35cd:c5b0) (Ping timeout: 240 seconds)
[02:32:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[02:33:21] *** Quits: node1__ (~node1@1.39.138.141) (Quit: Leaving)
[02:34:50] *** Quits: dub_a (~dub_a@192.252.212.46) (Ping timeout: 268 seconds)
[02:36:16] <earnestly> # printf 'jilles\0jilles\0sesame' | base64
[02:36:18] <shbot> earnestly: bash: base64: command not found
[02:36:24] <earnestly> Thought as much
[02:38:51] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Read error: Connection reset by peer)
[02:42:43] *** Joins: easior (~easior@61.155.142.70)
[02:43:07] *** Joins: audiocat (~audio@2603-8081-1800-0062-c574-3dd0-68c8-791e.res6.spectrum.com)
[02:43:46] <twkm> standard would be uuencode -m
[02:44:30] <phy1729> # openssl
[02:44:31] <shbot> phy1729: bash: openssl: command not found
[02:45:03] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:45:16] *** Joins: tzcrawford (~tzcrawfor@2601:1c0:ce00:32e:6f44:af9f:35cd:c5b0)
[02:45:37] <twkm> it's a minimal, and special, environment so even standard things might not be present.
[02:47:00] *** Joins: ooldirty (~ooldirty@ec2-18-224-204-126.us-east-2.compute.amazonaws.com)
[02:47:09] <phogg> izabera: that makes me want to write a bash clone of ii
[02:47:30] <izabera> What
[02:47:49] <phogg> ii was a simple IRC client using fifos
[02:47:50] <izabera> Ah of ii, not of it
[02:47:52] <izabera> Lol
[02:47:55] <izabera> Yea I know
[02:47:55] <phogg> lol, yes
[02:47:58] <izabera> It's bad
[02:48:04] <izabera> And also I've done it too
[02:48:08] <izabera> It's a bad idea
[02:48:15] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:48:15] <phogg> yes, that's what makes it so delicious
[02:48:22] <izabera> No I'm serious
[02:48:34] <izabera> It looks good for writing bots
[02:48:35] <phogg> Oh? An actual cautionary tale?
[02:49:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[02:49:14] *** Quits: igemnace (~ian@112.200.95.110) (Quit: WeeChat 3.1)
[02:49:40] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:49:47] <izabera> If you actually try it, you always end up having to monitor several directories, and having to multiplex many streams or you end up missing queries and messages
[02:50:19] <izabera> All of which would be much easier to do if you just read from the socket you're connecting to IRC with
[02:50:37] <phogg> if it were easy anyone would do it
[02:51:28] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[02:51:30] <izabera> https://github.com/izabera/bashii/
[02:51:55] <phogg> has anyone ever told you that you are some kind of mad scientist?
[02:53:28] *** Joins: easior_ (~easior@61.155.142.70)
[02:53:42] <izabera> i have no idea why there's a scrollii
[02:53:50] <izabera> thanks past me for the useless commit messages
[02:54:16] <phogg> remember the truism: "past you is an asshole"
[02:54:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:54:34] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[02:55:20] <phogg> Very occasionally I will find a little comment added by past me that literally says "future self, if you have problem $x do $y" (and I am always there because I had problem $x). But the other 99% of the time that guy is a jerk.
[02:58:23] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...╭∩╮)
[02:59:15] *** Joins: downunder (~downunder@110.151.120.49)
[03:00:38] *** Joins: ormaaj[m] (~ormaajmat@2001:470:69fc:105::35ca)
[03:05:50] *** Joins: ferdna (~ferdna@user/ferdna)
[03:07:47] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Ping timeout: 244 seconds)
[03:08:58] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[03:09:13] *** Joins: phillbush (~phillbush@user/phillbush)
[03:11:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:11:46] *** Joins: easior (~easior@61.155.142.67)
[03:12:18] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 240 seconds)
[03:15:46] <ash_worksi> when I need a dynamic string which requires literal dollar-signs, I think "use printf" like so `printf -v part_of_jq -- '($p | "." + (to_entries | map(%s) | join("")))' "$complex_string"`
[03:16:56] <ash_worksi> and that is pretty good afaiac, but, if I want to populate all placeholders with the same string, then I need to either repeat the variable, or escape the percent-signs and interpolate... is there a better approach?
[03:18:23] *** Joins: qub411 (~user@118.208.135.161)
[03:20:48] <izabera> !faq template
[03:20:49] <greybot> izabera: No matches found at https://mywiki.wooledge.org/BashFAQ
[03:20:52] <izabera> !template
[03:20:52] <greybot> http://mywiki.wooledge.org/TemplateFiles
[03:25:28] *** Joins: sth (~seth@sys-v.net)
[03:25:30] *** Quits: GoLiath_ (~GoLiath@159.48.55.94) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:27:33] *** Joins: jmcantrell (~weechat@86.106.143.201)
[03:29:46] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[03:30:26] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[03:30:43] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[03:31:08] *** grettke is now known as grettke2
[03:31:08] *** Quits: grettke2 (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:32:18] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[03:32:56] *** Joins: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net)
[03:33:01] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[03:33:50] *** Joins: dAm2K (~dAm2K@77.39.166.169)
[03:34:07] *** dAm2K is now known as Guest6737
[03:34:22] *** Quits: Guest6737 (~dAm2K@77.39.166.169) (Remote host closed the connection)
[03:35:08] *** Joins: Krail (~Krail@user/alexdelarge)
[03:35:16] *** Quits: jmcantrell (~weechat@86.106.143.201) (Ping timeout: 268 seconds)
[03:36:47] *** Joins: jmcantrell (~weechat@86.106.121.201)
[03:37:14] *** Joins: easior__ (~easior@61.155.142.67)
[03:42:32] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 252 seconds)
[03:42:57] *** Joins: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net)
[03:48:10] *** Quits: julius_c (~julius_c@195.red-88-0-62.dynamicip.rima-tde.net) (Quit: Leaving)
[03:52:30] *** Quits: easior (~easior@61.155.142.67) (Quit: Leaving)
[03:53:51] *** Joins: easior__ (~easior@61.155.142.67)
[03:54:03] *** Quits: tex (~super@user/dix) (Ping timeout: 272 seconds)
[03:54:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:55:49] *** Joins: easior_ (~easior@61.155.142.67)
[03:57:51] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[03:59:19] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[04:00:39] <yanmaani> Is there any way to do cmd <<< "str" without getting a newline? 
[04:00:45] <yanmaani> i.e. like echo -n "str" | xmd
[04:00:47] <yanmaani> cmd*
[04:02:54] <twkm> ''printf %s "str" | cmd'' should work.  or ''cmd < <(printf %s "str")'' if you prefer no pipe.
[04:09:40] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:10:09] <yanmaani> hmm, anything shorter?
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:09] <osse> there are two spaces in the first and one space in the second command that can be removed
[04:16:18] *** Joins: easior__ (~easior@61.155.142.70)
[04:16:31] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[04:17:42] <ormaaj[m]> # head -c -1 <<<hello; echo ' world'
[04:17:43] <shbot> ormaaj[m]: bash: head: -c: invalid option
[04:17:43] <shbot> ormaaj[m]: head: usage: head [-n num] [file ...]
[04:17:43] <shbot> ormaaj[m]:  world
[04:19:40] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[04:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:21:40] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[04:22:17] *** Joins: phillbush (~phillbush@user/phillbush)
[04:23:04] *** Joins: easior (~easior@61.155.142.70)
[04:25:17] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[04:27:32] <ormaaj[m]> # type head
[04:27:33] <shbot> ormaaj[m]: head is a shell builtin
[04:28:05] *** Joins: LikeABox (~LikeABox3@66-44-7-40.s4872.c3-0.grg-cbr1.lnh-grg.md.cable.rcncustomer.com)
[04:28:05] *** Quits: LikeABox (~LikeABox3@66-44-7-40.s4872.c3-0.grg-cbr1.lnh-grg.md.cable.rcncustomer.com) (Changing host)
[04:28:05] *** Joins: LikeABox (~LikeABox3@user/likeabox)
[04:28:17] <ormaaj[m]> ...ah
[04:28:22] <uplime> is that a shbot-ism?
[04:28:26] <uplime> i dont see it in the builtins
[04:28:46] <ormaaj[m]> i think it auto loads them
[04:29:14] <uplime> sorry i meant where the loadable came from
[04:29:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[04:29:18] *** Quits: LikeABox (~LikeABox3@user/likeabox) (Client Quit)
[04:29:45] <ormaaj[m]> that one comes with bash
[04:29:50] *** Joins: LikeABox (~LikeABox3@66-44-7-40.s4872.c3-0.grg-cbr1.lnh-grg.md.cable.rcncustomer.com)
[04:30:05] *** Parts: LikeABox (~LikeABox3@66-44-7-40.s4872.c3-0.grg-cbr1.lnh-grg.md.cable.rcncustomer.com) ()
[04:30:18] <uplime> hm, weird
[04:30:33] <twkm> # seq 1 3
[04:30:34] <shbot> twkm: one
[04:30:34] <shbot> twkm: two
[04:30:34] <shbot> twkm: three
[04:32:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:33:02] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[04:41:30] *** Joins: igemnace (~ian@120.28.150.132)
[04:44:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:44:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:44:46] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[04:46:21] *** Quits: _42large (~piet@37.120.197.48) (Quit: Konversation terminated!)
[04:47:34] <larryv> the # trigger loads all the loadables automatically, the others don't
[04:47:40] <larryv> 5# head -c -1 <<<hello; echo ' world'
[04:47:41] <shbot> larryv: hello world
[04:48:16] <larryv> 5# type head
[04:48:17] <shbot> larryv: head is /bin/head
[04:48:35] <ormaaj[m]> hm
[04:52:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:54:20] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:a0e9:5ac8:9436:b228) (Remote host closed the connection)
[04:55:15] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[04:56:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 244 seconds)
[05:01:24] *** Joins: phillbush (~phillbush@user/phillbush)
[05:06:50] <ormaaj[m]> geirha should add ctypes.sh to shbot :)
[05:11:57] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[05:13:19] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[05:13:24] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:15:36] *** Joins: dub_a (~dub_a@192.252.212.46)
[05:17:41] *** Joins: phillbush (~phillbush@user/phillbush)
[05:21:05] *** Quits: dub_a (~dub_a@192.252.212.46) (Ping timeout: 244 seconds)
[05:21:15] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:22:50] *** Joins: dub_a (~dub_a@65.155.4.34)
[05:25:10] *** Quits: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[05:26:09] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[05:27:02] *** Joins: ZucZero (~Zucca@user/zucca)
[05:27:35] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[05:27:52] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[05:29:40] *** Quits: Zucca (~Zucca@user/zucca) (Ping timeout: 244 seconds)
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:50] *** Joins: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[05:32:28] *** Joins: Enissay (~Enissay@user/enissay)
[05:33:15] *** Joins: kurahaupo (~kurahaupo@14-203-145-223.static.tpgi.com.au)
[05:35:06] *** Joins: vlm (~vlm@user/vlm)
[05:37:42] *** Joins: phillbush (~phillbush@user/phillbush)
[05:38:14] *** Joins: anton (~anton@antonmcclure.com)
[05:40:50] *** Quits: jmcantrell (~weechat@86.106.121.201) (Quit: WeeChat 3.2)
[05:42:10] <phillbush> Hey, #bash.
[05:42:25] <phillbush> In my ~/.xinitrc I call "kill -TERM 0" at the very end of the script to kill all the background processes spawned by it (there are a lot of them). (The PID 0 signals all processes in the current process group).
[05:42:55] *** Joins: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net)
[05:42:55] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[05:42:59] <phillbush> But this also kills /etc/X11/xdm/Xsession, the script that calls ~/.xinitrc
[05:43:11] *** Quits: DaNeenjah (~jake@adsl-74-230-10-74.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[05:43:21] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[05:43:22] <phillbush> And I only want to kill the background processes spawned by the ~/.xinitrc script, not the parent process that called ~/.xinitrc
[05:43:24] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Remote host closed the connection)
[05:43:37] <phillbush> How can I do that?
[05:43:38] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[05:43:41] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Remote host closed the connection)
[05:43:46] <twkm> save the pids.
[05:43:54] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[05:44:36] <twkm> a'la, foo & pids+=("$!") ; bar & pids+=("$!") ; ... kill "${pids[@]}"
[05:46:55] *** Quits: dub_a (~dub_a@65.155.4.34) (Ping timeout: 244 seconds)
[05:47:04] *** Joins: easior_ (~easior@61.155.142.67)
[05:47:06] <phillbush> I was thinking in, somehow, create a new process group for ~/.xinitrc and thus "kill -TERM 0" would kill only the bg processes spawned by it
[05:47:10] *** Joins: jmcantrell (~weechat@86.106.121.201)
[05:47:53] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[05:48:06] <twkm> yet you don't do that?  sh -c 'foo & bar & baz', but now kill 0 won't work because they aren't in the current group.
[05:49:15] *** Joins: dub_a (~dub_a@192.252.212.46)
[05:49:49] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 268 seconds)
[05:49:50] <kurahaupo> phillbush: set -m ; ( rest of script here ) & wait ; kill 0
[05:50:22] <kurahaupo> or rather, kill -TERM -$!
[05:50:26] *** Quits: jmcantrell (~weechat@86.106.121.201) (Client Quit)
[05:51:19] <kurahaupo> (assuming Linux, where  process group IDs are the same as the process ID of the group leader)
[05:51:26] <phillbush> OpenBSD
[05:52:35] <phillbush> That's really weird, I cannot understand why the parent process (/etc/X11/xenodm/Xsession) is killed by "kill -TERM 0" on ~/.xsession
[05:52:41] <kurahaupo> ah, in that case you'll need to mess about getting the pgrp from the $! pid, before wait
[05:52:44] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.0.1)
[05:52:52] <twkm> because it's in the same group.
[05:54:13] <twkm> use ps -j to see which pid's are in which groups.
[05:54:29] <kurahaupo> phillbush: processes inherit the pgrp and have to take special action to make a new pgrp. Xinit doesn't do that for the shell that reads  .xinitrc, and nor does the shell itself
[05:54:59] <twkm> (probably -x too, of course)
[05:55:04] <kurahaupo> (It would be bad if the shell did so)
[05:55:50] <kurahaupo> xinit or xsession, whichever you using
[05:56:26] <phillbush> I see
[05:56:51] <kurahaupo> phillbush: perhaps a better question would be "why did you expect xsession to start a new process group?"
[05:57:58] <twkm> perhaps including why you don't let your session manager deal with it.
[06:00:22] <phillbush> I don't know much about processes.
[06:00:38] <phillbush> what if I trap EXIT with "kill $(jobs -p)"...
[06:03:58] <twkm> !tias > phillbush 
[06:03:59] <greybot> phillbush: Try It And See
[06:05:08] *** Joins: s1b1 (~s1b1@user/s1b1)
[06:05:32] *** Quits: sgen (~sgen@142.186.76.30) (Remote host closed the connection)
[06:07:44] *** Joins: njwei (~njw@lve.ee.nus.edu.sg)
[06:07:48] *** Joins: easior__ (~easior@61.155.142.70)
[06:08:00] *** Quits: njw (~njw@lve.ee.nus.edu.sg) (Read error: Connection reset by peer)
[06:08:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[06:08:46] *** Quits: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[06:09:26] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[06:10:42] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 240 seconds)
[06:11:22] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[06:11:48] *** Joins: src (~src@user/src)
[06:14:17] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:14:17] *** kurahaupo is now known as PunkDandylion
[06:14:49] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[06:18:04] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[06:18:05] *** Joins: phillbush (~phillbush@user/phillbush)
[06:18:12] <phillbush> no good
[06:18:36] <phillbush> some processes are still alive even by killing -TERM `jobs -p`
[06:19:11] *** PunkDandylion is now known as kurahaupo
[06:20:07] *** Joins: jmcantrell (~weechat@86.106.121.201)
[06:21:46] *** Joins: Quot_ (~Quot@2601:3c4:300:6a0:ddf5:f5dc:4514:fa70)
[06:23:11] *** Joins: et_ (~et@user/et)
[06:23:41] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[06:24:47] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[06:24:47] *** et_ is now known as et
[06:24:47] <e36freak> is job control even active?
[06:25:11] <e36freak> storing PIDs when you fork would be the better solution
[06:25:51] <phillbush> gonna try PID storing then, thanks
[06:29:53] *** Quits: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it) (Quit: WeeChat 2.8)
[06:30:43] *** Joins: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it)
[06:37:20] *** Quits: bobmight57 (~bobmight5@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Ping timeout: 250 seconds)
[06:39:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[06:40:50] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[06:41:41] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:42:46] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: dtg01100)
[06:43:09] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[06:44:59] *** Quits: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[06:45:40] *** Joins: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br)
[06:47:44] <mcint> if someone knows offhand, how do i '\n'.join(array) in bash. ${arr[@]} ... ${arr[@]// /\n} ...
[06:48:57] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[06:49:14] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[06:52:05] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.22)
[06:52:30] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.22) (Client Quit)
[06:53:08] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.22)
[06:53:49] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[06:53:50] *** Quits: iomari891 (~iomari891@197.210.77.213) (Ping timeout: 268 seconds)
[06:53:59] <mcint> iterate through manually, it seems
[06:54:16] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.22) (Client Quit)
[06:54:23] *** Quits: phillbush (~phillbush@user/phillbush) (Remote host closed the connection)
[06:54:35] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.22)
[06:54:49] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.22) (Remote host closed the connection)
[06:55:17] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:55:22] *** Joins: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[06:56:06] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[06:56:27] *** sn1tch3r_ is now known as sn1tch3r
[06:56:31] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[06:56:46] *** Joins: Milos (~Milos@user/milos)
[06:57:24] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[07:02:06] <larryv> mcint: perhaps something like this
[07:02:09] <larryv> # foo=('a b' $'c\td'); printf -v bar %s\\n "${foo[@]}" && bar=${bar%?}; declare -p bar
[07:02:10] <shbot> larryv: declare -- bar="a b
[07:02:10] <shbot> larryv: c       d"
[07:04:23] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.243)
[07:07:31] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[07:07:36] *** sn1tch3r_ is now known as sn1tch3r
[07:13:41] *** Quits: metal_egg (~the_egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[07:14:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[07:15:14] *** Quits: Media_Thor (~Listen@xplr-208-114-129-49.xplornet.com) ()
[07:15:47] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[07:16:19] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:17:19] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[07:17:35] *** Quits: PlayerOne (~v7@user/playerone) (Ping timeout: 252 seconds)
[07:17:55] *** Quits: sn1tch3r (~sn1tch3r@185.153.176.243) (Remote host closed the connection)
[07:18:21] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[07:18:38] *** Joins: sn1tch3r (~sn1tch3r@185.153.176.243)
[07:18:44] *** Joins: PlayerOne (~v7@250-46-68-178.baltnet.ru)
[07:23:43] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[07:24:42] *** Joins: jos2 (~jos3@dyndsl-091-096-034-196.ewe-ip-backbone.de)
[07:25:12] *** Quits: sn1tch3r (~sn1tch3r@185.153.176.243) (Quit: Leaving)
[07:27:23] *** Joins: sn1tch3r (~sn1tch3r@192.154.198.14)
[07:28:02] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[07:28:18] *** Quits: jos1 (~jos3@dyndsl-178-142-069-052.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[07:30:08] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[07:31:13] *** Joins: willyg_cos (~joeuser@user/willyg-cos/x-4994202)
[07:38:52] <shalok> How do I redirect both stdout & stderr to a file descriptor in a variable?
[07:38:53] *** Quits: willyg_cos (~joeuser@user/willyg-cos/x-4994202) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:39:16] <yitz> cmd > "$foo" 2>&1
[07:40:51] <shalok> How do I do it with the &> syntax?
[07:41:47] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[07:41:52] <ormaaj[m]> don't.
[07:49:49] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:50:41] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[07:51:02] *** Quits: sn1tch3r (~sn1tch3r@192.154.198.14) (Remote host closed the connection)
[07:52:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:53:15] *** Quits: dwts_ (pid@triton.blinkenshell.org) (Ping timeout: 252 seconds)
[07:54:16] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:55:30] *** Quits: dub_a (~dub_a@192.252.212.46) (Ping timeout: 240 seconds)
[07:57:56] *** Joins: dub_a (~dub_a@192.252.212.47)
[07:58:58] *** Quits: kj (~kj@kj.aerisnetwork.net) (Remote host closed the connection)
[07:59:35] *** Joins: kj (~kj@kj.aerisnetwork.net)
[08:02:36] *** Joins: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net)
[08:05:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[08:05:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[08:05:33] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:06:45] *** Lord_of_Life_ is now known as Lord_of_Life
[08:07:51] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[08:08:51] *** Joins: iomari891 (~iomari891@197.210.77.229)
[08:09:44] *** Joins: GordonKnows (~gordonkno@c-71-231-243-69.hsd1.wa.comcast.net)
[08:09:48] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[08:10:35] *** Quits: GordonKnows (~gordonkno@c-71-231-243-69.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:11:13] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 252 seconds)
[08:11:58] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...╭∩╮)
[08:15:50] *** Joins: sokle_68 (~sokle_68@ppp079167007038.access.hol.gr)
[08:17:06] *** Quits: PlayerOne (~v7@250-46-68-178.baltnet.ru) (Ping timeout: 240 seconds)
[08:18:20] *** Joins: Krail (~Krail@user/alexdelarge)
[08:19:14] *** Joins: PlayerOne (~v7@250-46-68-178.baltnet.ru)
[08:19:19] *** Quits: PlayerOne (~v7@250-46-68-178.baltnet.ru) (Client Quit)
[08:20:42] *** Joins: matrixskp (~matrixskp@219-89-195-34.adsl.xtra.co.nz)
[08:21:53] *** Joins: pj (~pj@ghettoforge/pj)
[08:33:56] *** Quits: alex3 (~alex3@BSN-77-82-41.static.siol.net) (Ping timeout: 272 seconds)
[08:35:38] *** Quits: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[08:39:17] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 244 seconds)
[08:40:30] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[08:42:27] *** Joins: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net)
[08:46:41] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 268 seconds)
[08:47:03] *** Joins: dorp (~dorp@93-172-1-206.bb.netvision.net.il)
[08:47:23] *** Joins: alex3 (~alex3@BSN-77-82-41.static.siol.net)
[08:51:13] <dorp> Hello, I have a script taking multiple args, I use $1, shift, and then use the rest as $@. Is there any difference between: util "str1 $@" "str2" ... and: ARGS=$@; util "str1 $ARGS" "str2"?
[08:52:08] <uplime> yes
[08:52:17] <uplime> ARGS=$@ doesn't actually create an array
[08:52:25] *** Joins: malina (~malina@37.51-174-98.customer.lyse.net)
[08:52:50] *** malina is now known as Guest8849
[08:54:22] <uplime> args=("$@"); util "str1 ${args[@]}" # is the same as "$str1 $@" though
[08:54:38] <uplime> note that this could expand to multiple arguments
[08:54:42] <larryv> # set -- a 'b c' d; printf '<%s>' "foo $@"; args=$@; printf '<%s>' "foo $args"
[08:54:43] <shbot> larryv: <foo a><b c><d><foo a b c d>
[08:54:48] <larryv> oops
[08:54:52] *** Quits: matrixskp (~matrixskp@219-89-195-34.adsl.xtra.co.nz) (Quit: My comp has gone to sleep to save energy. ZZZzzz…)
[08:54:54] <larryv> # set -- a 'b c' d; printf '<%s>' "foo $@"; echo; args=$@; printf '<%s>' "foo $args"
[08:54:55] <shbot> larryv: <foo a><b c><d>
[08:54:55] <shbot> larryv: <foo a b c d>
[08:57:21] *** Joins: konsolebox (~konsolebo@112.204.185.232)
[08:58:15] <dorp> Thanks
[09:03:04] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:12:37] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:12:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:14:59] *** Joins: vishal (~vishal@fedora/vishal)
[09:24:34] *** Quits: Guest8849 (~malina@37.51-174-98.customer.lyse.net) (Quit: Guest8849)
[09:25:33] *** Joins: mali (~malina@user/malina)
[09:29:29] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:30:14] *** Quits: igemnace (~ian@120.28.150.132) (Changing host)
[09:30:14] *** Joins: igemnace (~ian@user/igemnace)
[09:30:27] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.1)
[09:30:38] *** Quits: alex3 (~alex3@BSN-77-82-41.static.siol.net) (Ping timeout: 244 seconds)
[09:30:42] *** Joins: igemnace (~ian@user/igemnace)
[09:32:29] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:39:18] <mcint> larryv: thank you! just so i understand, printf is appending to the variable for each arg in its input, iiuc
[09:48:39] *** Joins: alex3 (~alex3@BSN-77-82-41.static.siol.net)
[09:49:59] *** Quits: mali (~malina@user/malina) (Quit: mali)
[09:52:22] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Quit: The Lounge - https://thelounge.chat)
[09:52:57] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[09:53:58] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) ()
[09:56:07] *** Quits: FuriousGeorge (~FuriousGe@pool-100-1-104-109.nwrknj.fios.verizon.net) (Quit: Client closed)
[09:58:53] *** Joins: ibx2496 (~ibx2496@92.60.40.245)
[10:05:52] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:07:05] *** Joins: creivaj (~creivaj@93.176.184.77)
[10:09:05] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:18:23] <e36freak> mcint: when printf runs out of format specifiers for the arguments provided, it implicitly loops and starts again
[10:18:47] <e36freak> so that's demonstrating that the first case gives you 3 separate arguments, while the second is only one argument
[10:21:45] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: dtg01100)
[10:23:25] *** Quits: creivaj (~creivaj@93.176.184.77) (Quit: Leaving)
[10:23:38] *** Joins: creivaj (~creivaj@93.176.184.77)
[10:23:49] *** Quits: creivaj (~creivaj@93.176.184.77) (Remote host closed the connection)
[10:23:52] <mcint> # set -- a 'b c' d; printf '<%s> ' "1 $@"; echo; printf '<%s>' "1 $*";
[10:23:53] <shbot> mcint: <1 a> <b c> <d> 
[10:23:53] <shbot> mcint: <1 a b c d>
[10:24:03] *** Joins: creivaj (~creivaj@93.176.184.77)
[10:24:06] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Quit: Something unexpected happened...)
[10:28:52] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[10:30:52] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: You know...╭∩╮)
[10:31:51] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580) (Client Quit)
[10:32:08] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[10:32:44] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580) (Read error: Connection reset by peer)
[10:33:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[10:33:57] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580) (Read error: Connection reset by peer)
[10:34:10] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[10:35:40] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[10:35:42] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580) (Client Quit)
[10:35:58] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[10:40:08] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:42:44] *** Quits: xx (~xx@user/xx) (Ping timeout: 268 seconds)
[10:43:29] *** Joins: absc (~absc@37.161.156.112)
[10:51:13] *** Quits: absc (~absc@37.161.156.112) (Quit: Leaving.)
[10:55:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:57:30] *** Joins: maroloccio (~marolocci@200.243.99.194)
[10:59:58] *** Joins: tex (~super@user/dix)
[11:00:41] *** Joins: Krail (~Krail@user/alexdelarge)
[11:01:49] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: The Lounge - https://thelounge.chat)
[11:08:46] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[11:12:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:12:51] *** Joins: yogoyo (~weechat@user/yogoyo)
[11:14:05] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[11:15:37] *** Joins: Trieste (~T@user/pilgrim)
[11:16:50] *** Joins: magla (~gelignite@55d4811a.access.ecotel.net)
[11:19:18] *** Joins: voltage_ (~voltage@user/voltage)
[11:21:14] *** Quits: dub_a (~dub_a@192.252.212.47) (Ping timeout: 252 seconds)
[11:21:36] *** Quits: maroloccio (~marolocci@200.243.99.194) (Ping timeout: 250 seconds)
[11:21:49] *** Joins: milosz (~milosz@user/milosz)
[11:23:44] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[11:24:15] *** Parts: voltage_ (~voltage@user/voltage) (Leaving)
[11:25:02] *** Joins: semeion (~semeion@user/semeion)
[11:30:05] *** Joins: malina (~malina@user/malina)
[11:30:54] *** Quits: richardm75 (~richardm7@2600:8801:c50b:3800:240d:74ff:b09b:2023) (Ping timeout: 264 seconds)
[11:31:04] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[11:31:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[11:34:08] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[11:34:09] *** Joins: maroloccio (~marolocci@200.243.99.194)
[11:36:34] *** Quits: kyr (~kyr@167.71.50.12) (Remote host closed the connection)
[11:37:06] *** Joins: kyr (~kyr@167.71.50.12)
[11:38:37] <izabera> so the freenode chan has been taken
[11:38:39] <izabera> again
[11:40:36] <izabera> i tried to get it back but i've been ignored so far, not really sure what else to do at this point
[11:40:47] *** Joins: TomyWork (~TomyLobo@p200300e80f133c00352b009135baa02d.dip0.t-ipconnect.de)
[11:41:14] <lopid> whyb other?
[11:41:23] <izabera> i don't even know
[11:42:41] *** ZucZero is now known as Zucca
[11:44:56] *** Joins: ormaaj (6174b413@ircip1.mibbit.com)
[11:46:03] *** Joins: fourHZ (~fourHZ@80.146.191.217)
[11:52:42] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.1)
[11:54:13] *** Quits: unixman_home (~unixman2@243-222-137-216.mtaonline.net) (Remote host closed the connection)
[11:54:36] *** Joins: unixman_home (~unixman2@243-222-137-216.mtaonline.net)
[11:56:46] *** Joins: earnestly (~earnest@user/earnestly)
[11:56:52] *** Joins: lavaball (felix@31.204.155.215)
[11:59:53] *** Joins: rendar (~rendar@user/rendar)
[12:05:34] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:07:34] <fatal> there is one thing you can do, moving on.
[12:08:19] *** Joins: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr)
[12:09:03] *** Quits: malina (~malina@user/malina) (Quit: malina)
[12:15:54] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 264 seconds)
[12:17:46] *** Joins: dub_a (~dub_a@192.252.212.47)
[12:18:31] *** Joins: Adoi (~Adoi@user/adoi)
[12:20:11] *** Joins: simoneb (~simone@static.39.20.203.116.clients.your-server.de)
[12:21:57] *** Joins: dermoth (~dermoth@user/dermoth)
[12:23:08] *** Quits: dub_a (~dub_a@192.252.212.47) (Ping timeout: 268 seconds)
[12:24:01] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[12:31:39] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[12:34:40] *** Joins: __jmcantrell__ (~weechat@86.106.121.162)
[12:36:57] *** Joins: Mo (~Mo@dynamic-077-000-223-050.77.0.pool.telefonica.de)
[12:37:40] *** Quits: jmcantrell (~weechat@86.106.121.201) (Ping timeout: 244 seconds)
[12:38:58] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: The Lounge - https://thelounge.chat)
[12:39:04] *** Joins: bgustav (~quassel@5-12-24-54.residential.rdsnet.ro)
[12:39:17] *** Joins: matrixskp (~matrixskp@122-60-56-84-adsl.sparkbb.co.nz)
[12:39:45] *** __jmcantrell__ is now known as jmcantrell
[12:39:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[12:39:52] *** Quits: matrixskp (~matrixskp@122-60-56-84-adsl.sparkbb.co.nz) (Client Quit)
[12:40:34] *** Joins: keypusher (keypusher@user/keypusher)
[12:42:30] *** Joins: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it)
[12:43:13] *** Joins: arinov (~arinov@212.156.215.30)
[12:44:11] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[12:44:44] *** Joins: matrixskp (~matrixskp@122-60-56-84-adsl.sparkbb.co.nz)
[12:44:55] *** Quits: matrixskp (~matrixskp@122-60-56-84-adsl.sparkbb.co.nz) (Client Quit)
[12:45:08] *** Quits: waxfire2 (~waxfire@65.119.2.240) (Read error: Connection reset by peer)
[12:45:08] *** waxfire23 is now known as waxfire2
[12:45:30] *** Parts: bgustav (~quassel@5-12-24-54.residential.rdsnet.ro) ()
[12:45:40] *** Joins: ubique (~quassel@5-12-24-54.residential.rdsnet.ro)
[12:47:49] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[12:48:43] *** Quits: simoneb (~simone@static.39.20.203.116.clients.your-server.de) (Changing host)
[12:48:43] *** Joins: simoneb (~simone@user/simoneb)
[12:49:22] *** Joins: malina (~malina@user/malina)
[12:49:32] *** ubique is now known as ubique_
[12:51:09] *** ubique_ is now known as ubique__
[12:51:18] *** ubique__ is now known as ubique^
[12:52:04] *** Joins: phillbush (~phillbush@user/phillbush)
[12:52:12] *** Quits: dorp (~dorp@93-172-1-206.bb.netvision.net.il) (Read error: Connection reset by peer)
[12:56:04] *** Joins: easior__ (~easior@61.155.142.67)
[12:56:56] *** Quits: Floflobel__ (~Floflobel@2a01:e0a:6d:4780:2180:116f:ef35:3190) (Ping timeout: 252 seconds)
[12:58:32] *** Quits: easior__ (~easior@61.155.142.67) (Client Quit)
[12:59:38] <phillbush> When I kill -TERM $(jobs -p), the processes 84171 (tail -f), 81273 (awk -v) and 60245 (mpc) are not killed. Here's my pstree: https://0x0.st/-9-l.txt
[12:59:47] <phillbush> Here's my ~/.xsession: https://github.com/phillbush/home/blob/master/xsession#L9
[13:00:33] <phillbush> Also 69504 (pomod) and 07413 (a subshell) are not killed.
[13:00:34] <izabera> does jobs -p list them?
[13:01:41] <phillbush> I was using `kill -TERM 0`, that killed the entire session. But it also killed the parent script, which is not what I wanted.
[13:01:54] *** DMT is now known as acidsys
[13:02:02] <phillbush> izabera: dunno, probably not.
[13:02:08] <lopid> # sleep 2 & sleep 2 & var="$( jobs -p )"; declare -p var
[13:02:18] <shbot> lopid: [1] 51
[13:02:18] <shbot> lopid: [2] 52
[13:02:18] <shbot> lopid: and so forth... (but now the pastebin is sick of me)
[13:02:21] <izabera> lol
[13:02:23] <izabera> fail
[13:02:27] <lopid> well, newlines don't get stripped was my point
[13:02:33] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[13:02:38] <izabera> phillbush: if they're not listed why would you expect them to be killed
[13:03:14] *** Quits: ubique^ (~quassel@5-12-24-54.residential.rdsnet.ro) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:03:43] *** Quits: yogoyo (~weechat@user/yogoyo) (Quit: WeeChat 3.0.1)
[13:04:22] <phillbush> izabera: I know, my question is: why they are spawned as children of a subshell, rather than direct children of the script? And how can I make them spawn as direct children for jobs -p to list them?
[13:04:35] <izabera> because you
[13:04:42] <izabera> because you're using a pipeline
[13:05:42] <izabera> jobs only knows of things you put in background, like by doing   foobar &   or    foobar -> ^Z 
[13:06:32] *** Joins: yosijo (~yosijo@business-90-187-142-153.pool2.vodafone-ip.de)
[13:06:48] <phillbush> hmm, in my case I wrapped the pipeline into a function foobar and called   foobar &
[13:06:48] <izabera> ah i see, is notifycpu listed by jobs?
[13:07:33] <phillbush> It's listed as "/bin/sh /home/phill/.xsession"
[13:07:47] <phillbush> (because it's a shell function)
[13:07:48] <izabera> what?  by jobs?
[13:07:58] <izabera> like without -p
[13:08:40] <izabera> surely jobs should print this verbatim:       notifymus >"$xnotifyfifo" &
[13:08:54] <phillbush> Oh, sorry, I was thinking of ps.
[13:08:56] <izabera> i meant notifycpu but whatever
[13:09:13] <phillbush> I'll had to restart X (and close my irc client) to check that. That script is my .xsession/.xinitrc.
[13:09:21] <phillbush> brb.
[13:09:47] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:412f:83fa:4c40:a575)
[13:10:08] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[13:11:28] *** Joins: dorp (~dorp@93-172-1-206.bb.netvision.net.il)
[13:11:28] <Soliton> xinterp also backgrounds its case statement.
[13:12:30] <izabera> i don't fully understand this stuff, signals are dark magic
[13:12:40] <izabera> signals and terminals etc
[13:12:42] <izabera> all magic
[13:13:02] *** Joins: phillbush (~phillbush@user/phillbush)
[13:13:09] <izabera> so what's the verdict
[13:13:18] <Soliton> i think with signals it's often the other way around. people think there is signal propagation and stuff where there is no such thing.
[13:13:23] <phillbush> izabera: yeah, it lists: https://0x0.st/-9or.json
[13:13:35] <phillbush> (don't know why pastebin put the .json suffix lol)
[13:13:49] <izabera> Soliton: but there should be, no?
[13:14:04] <Soliton> not unless someone programmed it in.
[13:14:17] *** Joins: Krail (~Krail@user/alexdelarge)
[13:14:19] <Soliton> like C-c on a tty.
[13:14:36] <izabera> but a pipeline is a single pgroup
[13:16:13] <Soliton> so if you signal the process group, sure.
[13:16:42] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 240 seconds)
[13:17:26] <Soliton> mpc there for example doesn't get the signal only the subshell that called it does and the subshell waits for mpc.
[13:17:56] <izabera> # /bin/sleep 1 | /bin/sleep 2 & ps aux; kill $!; sleep .1; ps aux
[13:18:04] <shbot> izabera: [1] 52
[13:18:04] <shbot> izabera: USER      PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
[13:18:04] <shbot> izabera: etc... ( http://ix.io/3qcZ )
[13:18:29] <izabera> sleep 2 died but sleep 1 didn't
[13:18:39] *** Joins: willyg_cos (~joeuser@user/willyg-cos/x-4994202)
[13:18:45] *** Joins: Trieste (T@user/pilgrim)
[13:21:02] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[13:21:21] *** Joins: Krail (~Krail@user/alexdelarge)
[13:23:17] <izabera> # { echo $BASHPID >>pids; exec /bin/sleep 1; } | { echo $BASHPID >>pids; exec /bin/sleep 2; } & for i in $(<pids); do read _ _ _ _ pgrp _ < /proc/$i/stat; echo $pgrp; done
[13:23:18] <shbot> izabera: [1] 52
[13:23:18] <shbot> izabera: 51
[13:23:18] <shbot> izabera: 51
[13:24:43] <izabera> ah it looks like you need    kill -TERM -pgrp
[13:25:08] <izabera> or just any pid with a - in front
[13:25:33] <izabera> phillbush: can you try      kill -TERM $(jobs -p | sed 's/^/-/')
[13:26:08] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:26:08] <izabera> actually i can try it here
[13:26:31] <izabera> # /bin/sleep 1 | /bin/sleep 2 & ps aux | grep sleep; echo ===; kill -$!; sleep .1; ps aux | grep sleep
[13:26:40] <shbot> izabera: [1] 52
[13:26:40] <shbot> izabera: root       51  0.0  1.1   4540  1380 ttyS0    S    08:56   0:00 /bin/sleep 1
[13:26:40] <shbot> izabera: etc... ( http://ix.io/3qd2 )
[13:26:59] <izabera> mmh extra -- maybe
[13:27:05] <izabera> # /bin/sleep 1 | /bin/sleep 2 & ps aux | grep sleep; echo ===; kill -- -$!; sleep .1; ps aux | grep sleep
[13:27:13] <shbot> izabera: [1] 52
[13:27:13] <shbot> izabera: root       51  0.0  1.2   4540  1480 ttyS0    S    08:57   0:00 /bin/sleep 1
[13:27:13] <shbot> izabera: etc... ( http://ix.io/3qd3 )
[13:27:21] <izabera> yea ok that seems to work
[13:27:25] <izabera> phillbush: do that ^
[13:27:40] <izabera> this stuff is super annoying
[13:28:04] *** Quits: willyg_cos (~joeuser@user/willyg-cos/x-4994202) (Quit: Gone.)
[13:28:15] <geirha> but does it work the same in non-interactive bash ...
[13:29:03] <geirha> ah, but it was specifically about job control, so nevermind
[13:29:27] <izabera> i've done this wrong many many times
[13:31:20] <phillbush> izabera: thanks, I'm gonna try that!
[13:31:45] <phillbush> Damn, I need to use a simpler init script.
[13:33:51] <izabera> !learn killbg kill $(jobs -p) usually doesn't work with pipelines in the background, you need something like kill -- $(jobs -p | sed 's/^/-/')
[13:33:51] <greybot> OK, izabera
[13:36:32] *** Quits: justBull (~justache@user/justache) (Read error: Connection reset by peer)
[13:36:41] *** Quits: phillbush (~phillbush@user/phillbush) (Quit: Leaving)
[13:37:20] *** Joins: justBull (~justache@user/justache)
[13:37:55] <izabera> the lack of a standard way to kill an entire process tree is incredibly shit
[13:38:18] <izabera> and the ways to do it in linux are much too complicated
[13:38:56] <selckin> thats why you should make apps that follow the rules and terminate when you kill the parent
[13:38:58] *** Quits: maroloccio (~marolocci@200.243.99.194) (Ping timeout: 250 seconds)
[13:39:19] <izabera> no, that's why you should make an os that can do things like that
[13:39:34] <selckin> no, why you should use one
[13:39:42] <Soliton> killing a process group seems simple enough.
[13:39:51] <izabera> it's not enough tho
[13:40:00] <izabera> i want all the children too
[13:40:21] <Soliton> then surely they're part of the process group?
[13:40:22] <izabera> like to do it in linux you need cgroups or pid namespaces, and both need elevated privs
[13:40:38] <earnestly> izabera: What about session/group leaders?
[13:40:42] <pj> then you get programs that explicitly double-form children so that they're not tied to the parent process.
[13:40:47] <Soliton> if they're not that seems to suggest you don't want to kill them as well.
[13:40:47] <pj> *double-fork
[13:41:16] <earnestly> I mean, there is a standard way to kill process trees, but it does assume well behaving processes
[13:41:26] <izabera> double fork has been a thing for 40 years, it's awful that you can't just prevent processes from escaping
[13:41:29] <earnestly> And that is negative pids
[13:41:42] <earnestly> or pid 0
[13:42:00] <earnestly> But children can setsid and ruin that, iiuc
[13:42:18] <izabera> awful os with awful apis
[13:42:30] <izabera> i can't believe that anyone uses it for serious stuff
[13:42:35] <ormaaj[m]> I thought there was a way to allow unpriviliged cgroup usage to some extent
[13:42:38] <earnestly> Linux has subreapers now and someone did make a tool called 'angelize' which prevents the double forking thing
[13:42:44] <earnestly> daemontools has fghack iirc
[13:43:03] <izabera> i don't know how fghack works, is it like a LD_PRELOAD thing?
[13:43:06] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[13:43:15] <earnestly> le pastebin, lol: https://pastebin.com/15KaENGf
[13:43:15] <pasteban> Paste is available without ads on https://pastebin.com/raw/15KaENGf
[13:43:19] <izabera> subreapers are cool but you can't kill the tree with them
[13:43:39] <izabera> like if you have something that just does   while (1) exit(fork())
[13:43:56] <earnestly> > fghack runs child with many extra descriptors writing to a pipe. fghack reads and discards any data written to the pipe. After child has exited and the pipe has been closed, fghack exits.
[13:43:58] <izabera> + all the stuff to get it in a new session etc
[13:44:18] <izabera> i see
[13:44:22] <izabera> that's rubbish too
[13:44:24] <earnestly> Hm https://github.com/bruceg/daemontools-encore/blob/master/fghack.c
[13:44:27] <izabera> you can just close them
[13:44:33] *** Joins: phillbush (~phillbush@user/phillbush)
[13:44:56] <earnestly> izabera: I don't understand the "can't kill a tree"; this is what negative pids are for.  This is what session/group leaders can describe
[13:45:20] <earnestly> That is a fine way to kill process trees.  If you're instead asking, "how to kill a tree full of evil and shitty processes", then yeah it fails
[13:45:28] <earnestly> And why cgroups exist
[13:45:42] <izabera> it's not even evil and shitty, just call daemon()
[13:45:59] <ormaaj[m]> well I guess it'll require some capabilities setting
[13:46:00] <earnestly> Sure, evil and shitty
[13:46:17] <izabera> it's not demon()
[13:46:21] <earnestly> Just like gets()
[13:46:26] <earnestly> It exists, doesn't mean it's good
[13:46:48] <Soliton> i mean you either have a generic os that allows process to do what they want and thus allows them to do annoying stuff. or you try to limit it to only allow what you think is the right way to do stuff and probably limit too much...
[13:46:48] <izabera> dude can't you see that the fact that it's doable is dangerous
[13:46:49] <earnestly> ormaaj[m]: I remember v1 cgroups being a little better at this
[13:46:54] <phillbush> no good: pomod, mpc, tail and awk are still alive.
[13:46:59] <phillbush> https://0x0.st/-9-l.txt
[13:47:10] <izabera> phillbush: what did you run?
[13:47:37] <izabera> did you have -- after kill?  i forgot it in the first thing i told you
[13:47:38] <phillbush> izabera: /bin/kill -TERM -- $(jobs -p | sed 's/^/-/')
[13:47:40] <earnestly> izabera: Lots of useful features can be used for bad things
[13:47:40] <izabera> damn
[13:47:48] <izabera> well i'm out of ideas
[13:47:49] *** Joins: pgp (~pgp@213.205.68.220)
[13:47:51] <izabera> !forget killbg
[13:47:51] <greybot> OK, izabera
[13:48:10] <earnestly> phillbush: kill 0
[13:48:36] <phillbush> earnestly: I tried kill 0. It works, but also kills the parent script that called my script.
[13:48:40] <phillbush> And I do not want that.
[13:49:49] <earnestly> It shouldn't kill the parent script, but it will kill your script
[13:50:15] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Quit: Leaving)
[13:50:24] <earnestly> But hm
[13:50:51] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[13:51:30] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Client Quit)
[13:51:43] <Soliton> how did you test?
[13:53:15] <earnestly> It appears that util-linux's setsid(1) can work
[13:53:24] <earnestly> E.g. https://0x0.st/-9ob.sh
[13:53:35] <earnestly> Not portable, sadly
[13:54:05] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[13:54:12] *** Quits: magla (~gelignite@55d4811a.access.ecotel.net) (Quit: Stay safe!)
[13:54:20] <earnestly> phillbush: But yes, split your script in two.  Have one that runs all of the jobs, and another which supervisors that runner
[13:54:37] <earnestly> Then you can kill the runner from the supervisor script without killing the supervisor itself
[13:54:52] <ormaaj[m]> # shopt -s lastpipe; exec /bin/sleep 1 | { exec 3<&0 4>/dev/fd/3; fdflags -s +nonblock 4; echo durr >&4; cat <&3; }
[13:54:58] <shbot> ormaaj[m]: durr
[13:55:16] <izabera> # type fdflags
[13:55:18] <shbot> izabera: fdflags is a shell builtin
[13:55:22] <earnestly> izabera: loadable
[13:55:35] <izabera> # help fdflags
[13:55:38] <shbot> izabera: fdflags: fdflags [-v] [-s flags_string] [fd ...]
[13:55:38] <shbot> izabera:     Display and modify file descriptor flags.
[13:55:39] <shbot> izabera: etc... ( http://ix.io/3qch )
[13:55:49] *** Parts: sokle_68 (~sokle_68@ppp079167007038.access.hol.gr) ()
[13:55:53] *** Joins: gareppa (~gareppa@user/gareppa)
[13:56:16] <pj> best way i think is to get the children to write their PIDs to a file, then you have a list to pass to kill.
[13:56:35] <izabera> do you see how shit this is
[13:56:42] <izabera> it shouldn't be this hard
[13:56:48] <pj> yep
[13:57:07] <phillbush> pipelines being run in subshell is such a source of headache
[13:57:49] <phillbush> you cannot read -r from them, killing bg pipelines is hard.
[13:59:12] <pj> or, might be easier to create a temp directory and have the children touch files that correspond tto their PID in that directory, and remove the files as part of their cleanup, which should in theory be easier than maintaining a single file.
[13:59:42] <pj> and yeah, still crazy as shit.
[14:02:39] <Soliton> that is indeed crazy. rewrite every command you call instead of organizing your process groups how you want them.
[14:02:59] <geirha> perhaps it's easier with process substitution.  A | B | C &  ->  A > >(B | C) &
[14:03:19] <geirha> when A dies, B should naturally die from the input being closed
[14:03:54] *** Quits: iomari891 (~iomari891@197.210.77.229) (Ping timeout: 240 seconds)
[14:04:04] <geirha> izabera, you test. I'm too lazy right now
[14:04:55] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[14:06:35] *** Joins: iomari891 (~iomari891@197.210.53.216)
[14:07:18] <izabera> i'm giving up, too hard for me
[14:07:35] <izabera> i thought putting a - in front of the output of jobs -p was enough
[14:07:58] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[14:09:28] <phillbush> ok, I'll kill 0 on my init script and trap TERM on the parent script to do nothing, so killing the process group don't kill the parent process
[14:09:30] *** Quits: audiocat (~audio@2603-8081-1800-0062-c574-3dd0-68c8-791e.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:10:57] <earnestly> phillbush: If you're doing work like this consider even using runsv/runsvidr from busybox
[14:11:32] <izabera> or systemd
[14:11:52] <Soliton> why not fix your process groups?
[14:12:14] <earnestly> The nice thing about s6/runit/daemontools is that they can be used in simple adhoc environments.  If the problem can fit into systemd, then systemd is fine too
[14:12:19] <ormaaj[m]> # shopt -s lastpipe; set +m; exec /bin/sleep 1 | exec 3<&0 4>/dev/fd/3; fdflags -s +nonblock 3 4; echo hi >&4; head -n 1 <&3; ls -l /proc/self/fd
[14:12:19] *** Joins: Timvde (~tim@towely.vdeynde.com)
[14:12:28] <shbot> ormaaj[m]: hi
[14:12:28] <shbot> ormaaj[m]: total 0
[14:12:28] <shbot> ormaaj[m]: etc... ( http://ix.io/3qdm )
[14:13:50] <Timvde> Can I make a script continue if a command fails, but have it still exit with an error code at the end? (I just want to be notified so I can have a look, but not skip any steps)
[14:14:10] <omegatron> sure
[14:14:18] <Soliton> !$?
[14:14:18] <greybot> The special parameter ? (expanded by $?) holds the exit status of the last synchronous command.
[14:14:47] <omegatron> save your command's result code in a variable and return this later ..
[14:14:52] <Timvde> Yes, I know, but ideally I'd like to do it without setting $? after *every* command
[14:15:05] <Timvde> But I'll resort to that if it's the only option
[14:15:22] <izabera> you don't really want that, for all these reasons
[14:15:24] <izabera> !-e
[14:15:24] <greybot> "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[14:15:31] <Soliton> there is no magic for that. you will have to decide what commands you care about.
[14:16:22] <ormaaj[m]> so the pipeline hangs around there with set +m and no curly braces I guess until you close the fds
[14:16:32] <Timvde> izabera: I also know about set -e :) The thing is that I start with shutting down a service and end with starting it back up, and the commands in between are not fatal if they fail, but I really want to make sure I restart the service at the end
[14:16:54] <izabera> right but read the faq
[14:17:08] <Timvde> I could probably split it into two scripts and set set -e on the inner one, hmm
[14:17:11] <Timvde> I'll read the FAQ first, thanks
[14:17:16] <Soliton> the point is that set -e is similar magic to what you want and it doesn't work.
[14:17:19] <izabera> trap 'err=$?' err; trap 'exit $err' exit
[14:17:29] *** Joins: masoudd (~masoudd@user/masoudd)
[14:18:37] <Timvde> Soliton: Ah, I was still under the impression that set -euo pipefail was good practice, but it looks like that knowledge is outdated then
[14:18:44] <izabera> !euo
[14:18:46] <izabera> !faq euo
[14:18:46] <greybot> izabera: No matches found at https://mywiki.wooledge.org/BashFAQ
[14:18:51] <izabera> !faq pipefail
[14:18:51] <greybot> izabera: No matches found at https://mywiki.wooledge.org/BashFAQ
[14:18:55] <izabera> !pf pipefail
[14:18:56] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf60 -- Don't do this! -- set -euo pipefail
[14:18:56] <phillbush> interesting: https://0x0.st/-9oa.txt
[14:19:16] <izabera> searching things in greybot is so annoying
[14:22:46] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.1)
[14:23:31] <ormaaj[m]> Pipefail is good on occasion. Usually enable pipefail it for where you need it and then disable. set -eu OTOH... never
[14:26:01] <earnestly> phillbush: bash (ksh moreso) does simple optimisations there
[14:27:34] *** Joins: gareppa (~gareppa@user/gareppa)
[14:27:43] *** Quits: Quot_ (~Quot@2601:3c4:300:6a0:ddf5:f5dc:4514:fa70) (Ping timeout: 244 seconds)
[14:30:25] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[14:32:00] *** Quits: malina (~malina@user/malina) (Quit: malina)
[14:32:42] *** Joins: Adois (~Adoi@user/adoi)
[14:35:37] <geirha> set -euo pipefail was never good practice. The blogger who came up with it wasn't very adept at bash, as was evident by his recommendation of removing space from IFS instead of quoting properly
[14:35:43] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[14:37:33] *** Quits: kurahaupo (~kurahaupo@14-203-145-223.static.tpgi.com.au) (Read error: Connection reset by peer)
[14:38:13] *** Joins: kurahaupo (~kurahaupo@14-203-145-223.static.tpgi.com.au)
[14:44:11] *** Quits: jmcantrell (~weechat@86.106.121.162) (Ping timeout: 252 seconds)
[14:44:11] *** Joins: mknod (~mknod@user/mknod)
[14:46:19] *** Quits: Mo (~Mo@dynamic-077-000-223-050.77.0.pool.telefonica.de) (Ping timeout: 244 seconds)
[14:50:58] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 244 seconds)
[14:57:11] *** Joins: thiras (~thiras@user/thiras)
[14:58:18] *** Joins: bgustav (~quassel@5-12-24-54.residential.rdsnet.ro)
[14:58:41] *** Parts: bgustav (~quassel@5-12-24-54.residential.rdsnet.ro) ()
[15:04:35] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[15:04:53] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[15:09:49] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[15:14:38] *** Quits: mknod (~mknod@user/mknod) (Remote host closed the connection)
[15:15:38] *** Joins: mknod (~mknod@user/mknod)
[15:17:07] *** Joins: lavaball (felix@31.204.155.215)
[15:21:33] *** Joins: easior (~easior@61.155.142.67)
[15:29:42] *** Joins: mongy (~mongy@user/mongy)
[15:31:16] *** Quits: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Ping timeout: 244 seconds)
[15:31:20] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 268 seconds)
[15:33:42] *** Joins: easior_ (~easior@61.155.142.70)
[15:35:53] *** Quits: njwei (~njw@lve.ee.nus.edu.sg) (Ping timeout: 252 seconds)
[15:36:05] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[15:36:06] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[15:36:51] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[15:36:58] *** Quits: downunder (~downunder@110.151.120.49) (Quit: WeeChat 3.2)
[15:38:36] *** Joins: Yorick_ (znc@vps.freegamehosting.eu)
[15:50:35] *** Joins: maroloccio (~marolocci@200.243.99.194)
[15:51:29] <maroloccio> in a script with `set -e` how do i get `3` for this check: `if ! bash -c 'exit 3'; then echo $?; fi`
[15:52:24] <geirha> "${PIPESTATUS[0]}"
[15:52:26] <izabera> remove the !
[15:52:41] <izabera> # ! false; echo $?
[15:52:42] <shbot> izabera: 0
[15:53:05] <izabera> # if (exit 3); then :; else echo $?; fi
[15:53:06] <shbot> izabera: 3
[15:53:43] <geirha> and set -e has no impact on it regardless
[15:54:14] <maroloccio> set -e prevents me from doing just: bash -c 'exit 3' and then using $? as the script aborts on 3
[15:54:26] <maroloccio> hence i used the if
[15:54:34] <geirha> bash -c 'exit 3' || ...
[15:54:35] <izabera> ah so the solution is super easy
[15:54:37] <izabera> set +e
[15:54:39] <izabera> !next
[15:54:39] <greybot> Another satisfied customer! Next please!
[15:55:02] <osse> geirha: && instead of || there to keep the $?  no?
[15:55:38] <geirha> unless it's enough to use the $? in the || ...
[15:56:27] <geirha> either way, stupid hacks compared to izabera's proper solution; set +e
[15:57:25] <maroloccio> i am a bit confused.. :)
[15:57:51] <maroloccio> the script has set -e and i could set +e in a section of it and do it that way, sure.. 
[15:58:02] <izabera> in all sections
[15:58:10] <izabera> do +e right after -e
[15:58:14] <Soliton> win-win
[15:58:17] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[15:58:18] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[15:58:34] <maroloccio> right after -e? to what effect?
[15:58:43] <izabera> it removes the -e
[15:58:56] <Soliton> so you get sane script behaviour.
[15:59:30] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[15:59:46] <maroloccio> i don't like -e much myself but the script is written in a place where -e is liked.. let me check out my option while respecting the -e
[16:00:02] <maroloccio> "${PIPESTATUS[0]}" seems to work fine, it keeps the $?, which i need
[16:00:28] *** Joins: xx (~xx@user/xx)
[16:00:48] <maroloccio> i need it because the if really had two meaningful non-zero exit codes. it's like a diff call which returns 1 if a diff is present and 2 if an error occurs in diff'ing (such as failing to fetch the 2nd file from s3, etc.)
[16:01:07] <maroloccio> so just ! my-diff is not enough without having the $?
[16:01:48] <kurahaupo> If you have a coding standard says you must use set -e, and where set +x might be taken as violating that, then wrap the script with { … ; } || false
[16:01:53] <Soliton> if they like -e surely they like cmd && :
[16:03:27] <kurahaupo> actually yes, &&: is better because it can't fail yet it doesn't change $?
[16:04:04] <kurahaupo> So { … your script contents here … ; }&&:
[16:04:25] *** Joins: GoLiath_ (~GoLiath@159.48.55.95)
[16:05:31] <osse> This means I win.
[16:05:40] <osse> And that's what's important.
[16:06:19] <maroloccio> it seems to me like geirha's suggestin of using just PIPESTATUS gives me everything i need (i.e. to differentiate between a diff with a change and an error in diff'ing) to no negative, correct? Or is there a gotcha in using PIPESTATUS too? (I keep forgetting about PIPESTATUS in single-command "pipelines")
[16:06:29] <maroloccio> * suggestion
[16:06:57] <geirha> it's assuming bash at least. sh has no PIPESTATUS
[16:08:07] <maroloccio> geirha so the only potential downside is portability, specifically "down-interpret-ing" in dash or something like that, with just POSIX..
[16:08:08] <Soliton> also with set -e surely they already do  cmd || true  or similar.
[16:09:35] <maroloccio> Soliton no they don't.. this is a series of commands which reasonable should abort if any of them fails. e.g. if a diff is present or diff'ing failed, one does not want to uplaod any results to s3 or perform any of the remaining actions.. and it would be a lot of duplicate code in golang's style: if ! this; then quit-now; fi...
[16:09:42] *** Joins: Krail (~Krail@user/alexdelarge)
[16:09:46] <maroloccio> * reasonably
[16:10:12] <Soliton> your premise is that you do not want set -e in effect for some command.
[16:10:29] <maroloccio> go has so many: if err != nil { return nil, err; } after almost every statement that can fail..
[16:10:53] <Soliton> almost being the keyword.
[16:11:07] <Soliton> with set -e you can write almost correct scripts.
[16:11:23] <maroloccio> Soliton my premise was that set -e is in effect, that i can't change it, that a command may fail but i need to abort differently (but always abort) if a diff finds a change (exit 1) or if the diff bombs (exit 2)
[16:11:52] <Soliton> and thus the suggestion of cmd && :
[16:11:53] <maroloccio> and my if ! my-diff wasn't differentiating between 1 and 2 as $? became always 0
[16:12:12] <Soliton> obviously with a test of $? afterwards.
[16:12:15] <maroloccio> I didn't get that && above actually..
[16:12:36] *** Joins: gryffus (~gryffus@81.19.2.214)
[16:12:37] <maroloccio> exit 1 or exit 2 would not run the && part, right? or am i mistaken?
[16:12:42] <geirha> and if my-diff is a function that relies on set -e, you must add checks for each command in that function as those commands will no longer trigger set -e if they return non-zero
[16:13:25] <maroloccio> i hadn't thought of that but yes, disabling set -e even temporarily may change how my-diff works. nicely spotted
[16:13:26] *** Joins: cdown (~cdown@163.114.131.1)
[16:13:36] *** Joins: zeden (~zeden@user/zeden)
[16:13:42] <geirha> no, that's with set -e enabled
[16:13:51] <Soliton> # set -e; (exit 3) && :; echo $?
[16:13:52] <shbot> Soliton: 3
[16:13:55] <maroloccio> very nicely spotted actually
[16:14:19] <geirha> you run the function in a context that is being tested, so now all commands inside that function are in a context being tested, so none of them will trigger set -e
[16:15:14] <maroloccio> then maybe i don't understand the subtlety there. :-\. best approach so far seems to keep set -e at the top to appease the "standard" (sigh) and to use PIPESTATUS[0]
[16:15:19] <geirha> that's my main problem with set -e. Make a minor refactoring of the code, and you suddenly have to rewrite that code completely
[16:15:52] <geirha> # f() { false; echo still here; }; set -e; f; echo still here2
[16:15:54] <shbot> geirha: (shell exited with 1)
[16:16:10] <geirha> # f() { false; echo still here; }; set -e; if ! f; then echo some error; fi; echo still here2
[16:16:12] <shbot> geirha: still here
[16:16:12] <shbot> geirha: still here2
[16:16:43] <geirha> false is no longer a fatal error because the function got run in a different context
[16:18:19] <maroloccio> I see the point now geirha thanks very much for this
[16:18:39] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[16:19:30] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 264 seconds)
[16:21:03] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Ping timeout (120 seconds))
[16:21:41] *** Joins: Trieste (~T@user/pilgrim)
[16:22:10] *** Joins: Guest20 (~Guest20@srv-cache.insa-toulouse.fr)
[16:22:12] *** Joins: easior (~easior@61.155.142.70)
[16:24:12] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:915:4134:167b:652f)
[16:24:18] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 240 seconds)
[16:25:12] *** Joins: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850)
[16:26:56] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[16:28:41] <olspookishmagus> is there a way to handle more than one variables seperated by say a TAB but when there's a newline that will indicate a new set of those variables?
[16:29:13] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[16:29:23] <olspookishmagus> IFS=$'\n' ; while read -r $foo do echo $foo ; done < <( _iostream_ )
[16:29:34] <olspookishmagus> this is how I parse one variable per line
[16:29:36] <geirha> while IFS=$'\t' read -ra row; do
[16:29:58] <geirha> !faq 1
[16:29:58] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[16:34:02] <olspookishmagus> thanks geirha
[16:35:10] *** Joins: easior__ (~easior@61.155.142.73)
[16:35:59] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[16:37:39] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[16:42:12] *** Joins: noobineer (~noobineer@64.136.226.130)
[16:42:38] *** Quits: grossing (~grossing@user/grossing) (Read error: Connection reset by peer)
[16:48:27] *** Joins: grossing (~grossing@user/grossing)
[16:48:50] <ormaaj[m]> Is there a shbot channel yet?
[16:48:51] <ormaaj[m]> I want pony.
[16:50:18] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:51:40] *** Quits: noobineer (~noobineer@64.136.226.130) (Quit: Client closed)
[16:53:50] <geirha> the pony didn't make it. It's trapped on freenode
[16:54:29] <kurahaupo> olspookishmagus: Remember that $foo is not the name of a variable; rather foo is the variable, and $ is a directive to expand it. So you never want $ when you're putting something into a variable. (Weird exceptions apply if you're using dynamic variable names; don't go there.)
[16:55:13] <kurahaupo> ormaaj[m]: you can discuss shbot here, or you can use it in pm
[16:55:26] <Timvde> Super late response, but thanks for all the info regardless set -e and friends, and thank you izabera in particular for pointing me towards trap, it works great and looks clean now :)
[16:56:02] *** Quits: ormaaj (6174b413@ircip1.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[16:59:44] *** Quits: GoLiath_ (~GoLiath@159.48.55.95) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:01:10] *** Quits: Starmina (~Starmina@193.32.126.214) (Ping timeout: 244 seconds)
[17:01:52] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Quit: Client closed)
[17:02:28] *** Joins: simbioz (~simbioz@user/simbioz)
[17:02:45] *** Joins: Starmina (~Starmina@2a03:1b20:9:f011::a01e)
[17:03:45] *** Joins: easior_ (~easior@61.155.142.70)
[17:05:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[17:06:18] *** Quits: easior__ (~easior@61.155.142.73) (Ping timeout: 268 seconds)
[17:06:49] *** Quits: Guest20 (~Guest20@srv-cache.insa-toulouse.fr) (Quit: Client closed)
[17:07:15] *** Joins: Adoi (~Adoi@user/adoi)
[17:08:25] *** Quits: easior_ (~easior@61.155.142.70) (Client Quit)
[17:09:36] *** Joins: Guest20 (~Guest20@srv-cache.insa-toulouse.fr)
[17:13:51] *** Quits: creivaj (~creivaj@93.176.184.77) (Quit: Leaving)
[17:14:24] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Remote host closed the connection)
[17:15:04] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[17:15:49] *** Joins: yogoyo (~weechat@user/yogoyo)
[17:15:59] *** Quits: iomari891 (~iomari891@197.210.53.216) (Ping timeout: 252 seconds)
[17:16:41] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:17:27] *** Joins: iomari891 (~iomari891@197.210.76.164)
[17:18:47] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[17:28:00] *** Joins: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it)
[17:29:44] *** Joins: vmeson (~rmacleod@23-233-84-124.cpe.pppoe.ca)
[17:31:32] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:31:35] *** Quits: iomari891 (~iomari891@197.210.76.164) (Ping timeout: 268 seconds)
[17:33:12] <Enissay> Regarding https://github.com/koalaman/shellcheck/wiki/SC2181
[17:33:50] *** Joins: iomari891 (~iomari891@197.210.53.216)
[17:34:34] <Enissay> What if the command itself is supposed to return a value to a var `$var=$(....)` how to optimize the `$?` check ?
[17:34:58] <Soliton> if var=$(cmd); then ...
[17:35:17] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:35:26] <Enissay> Aha, I see, sorry for typo... 
[17:36:23] <Enissay> And the opposite ? `if ! var=$(cmd); then ...` is correct
[17:36:32] *** Quits: nobody_ (~nobody@host-82-60-161-222.retail.telecomitalia.it) (Remote host closed the connection)
[17:36:38] *** Quits: eggbean (~eggbean@user/eggbean) (Quit: WeeChat 3.2)
[17:37:12] <Enissay> Soliton: ^
[17:37:51] <ormaaj[m]> tias. but yes.
[17:38:11] *** Joins: maroloccio (~marolocci@200.243.99.194)
[17:39:34] <Enissay> Okay... That bang is confusing xD
[17:39:41] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Quit: Client closed)
[17:39:56] <ormaaj[m]> it can be
[17:43:35] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:47:02] *** Joins: shad (~shad@user/shad)
[17:47:26] *** Quits: brw (~bas@5.9.139.181) (Quit: The Lounge - https://thelounge.chat)
[17:47:55] *** Joins: brw (~bas@5.9.139.181)
[17:47:58] *** Joins: Thin_icE (~pgp@88.157.222.244)
[17:50:42] *** Quits: pgp (~pgp@213.205.68.220) (Ping timeout: 264 seconds)
[17:51:02] *** Quits: gryffus (~gryffus@81.19.2.214) (Quit: Leaving...)
[17:51:06] *** Joins: slickymasterWork (~slickymas@ubuntu/member/slickymaster)
[17:51:27] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[17:53:06] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 264 seconds)
[17:53:36] <ormaaj[m]> #  ! time ! command time test ! true >/dev/null 2>&1; echo $?
[17:53:38] <shbot> ormaaj[m]: real: 0m0.078s, user: 0m0.041s, sys: 0m0.036s
[17:53:38] <shbot> ormaaj[m]: 1
[17:53:52] *** Joins: Bit_MCP1 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[17:54:26] <geirha> not not not true
[17:58:31] *** Quits: simbioz (~simbioz@user/simbioz) (Ping timeout: 244 seconds)
[18:01:14] <ormaaj[m]> test ! true is false :)
[18:03:17] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[18:04:21] <phy1729> so is test ! false though
[18:04:30] *** Joins: mikeputnam (~mikeputna@wilug/mikeputnam)
[18:04:43] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[18:07:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:08:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 244 seconds)
[18:08:36] *** Quits: brw (~bas@5.9.139.181) (Remote host closed the connection)
[18:08:52] *** Joins: zeamp (ze@korea.zpvy.com)
[18:08:59] *** Joins: brw (~bas@5.9.139.181)
[18:09:54] *** Quits: brw (~bas@5.9.139.181) (Remote host closed the connection)
[18:10:04] <Masklin_Gurder> Is there a bash built-in to approximately display a png picture in the terminal?
[18:10:41] <phy1729> a builtin? certainly not
[18:10:55] <Masklin_Gurder> Why didn't people think of this?
[18:10:59] <Masklin_Gurder> Would be so useful.
[18:11:12] <phy1729> You could write one I suppose
[18:13:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:13:45] <Masklin_Gurder> Do I look like I have time for that? :/
[18:16:46] <osse> Yes
[18:17:29] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[18:17:46] *** Joins: brw (~bas@5.9.139.181)
[18:18:54] *** Quits: mknod (~mknod@user/mknod) (Ping timeout: 264 seconds)
[18:19:05] <geirha> use imagemagick convert to convert to an ascii format
[18:19:15] <geirha> parse format, ???, profit
[18:19:45] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:20:28] <osse> depending on the terminal you might even be able to show exactly display it
[18:21:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[18:21:34] <geirha> ttydisplay: http://ix.io/3qeh    Usage: ttydisplay foo.png
[18:22:09] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:22:17] <geirha> though it doesn't check bounds, so you have to make sure its width <= COLUMNS and height * 2 <= LINES
[18:22:20] *** Joins: shad (~shad@user/shad)
[18:22:51] *** Quits: brw (~bas@5.9.139.181) (Quit: The Lounge - https://thelounge.chat)
[18:23:25] *** Quits: ibx2496 (~ibx2496@92.60.40.245) (Ping timeout: 272 seconds)
[18:24:42] <geirha> convert rose: -resize 50x50 png:- | ttydisplay
[18:25:09] *** Joins: brw (~bas@5.9.139.181)
[18:25:19] *** Joins: njwei (~njw@58.182.164.99)
[18:26:21] *** Joins: Liblx (~Alex@ip4d15ff03.dynamic.kabel-deutschland.de)
[18:29:21] <geirha> very rosey, much pixel
[18:31:38] <Soliton> bunch of random colors in urxvt.
[18:31:54] <Soliton> seems to work in xterm though.
[18:32:16] <geirha> hardcoded terminal escapes, so probably xterm specific
[18:39:19] *** Joins: ham5urg (~ham5urg@149.224.234.232.dynamic-pppoe.dt.ipv4.wtnet.de)
[18:39:46] <ham5urg> Is there a new #workingset room?
[18:40:12] <izabera> i can think of at least one easy way to find out
[18:40:42] <ham5urg> I mean, it's so empty and silent there
[18:41:09] *** Joins: frostwork (~frostwork@user/frostwork)
[18:42:08] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Remote host closed the connection)
[18:42:27] <geirha> /query alis list workingset
[18:42:50] <geirha> lists two matching channels
[18:42:59] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[18:43:00] *** Quits: slickymasterWork (~slickymas@ubuntu/member/slickymaster) (Ping timeout: 268 seconds)
[18:46:28] <ham5urg> thanks
[18:47:19] *** Quits: brw (~bas@5.9.139.181) (Ping timeout: 268 seconds)
[18:48:27] *** Quits: blue_penquin (~blue_penq@gateway/tor-sasl/bluepenquin/x-11613850) ()
[18:51:12] *** Quits: Codaraxis__ (~Codaraxis@89.45.7.134) (Remote host closed the connection)
[18:54:22] *** Quits: iomari891 (~iomari891@197.210.53.216) (Read error: Connection reset by peer)
[18:57:37] *** Joins: kj (~kj@kj.aerisnetwork.net)
[18:58:25] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[18:59:07] *** Quits: kj (~kj@kj.aerisnetwork.net) (Client Quit)
[19:00:03] *** Joins: iomari891 (~iomari891@197.210.52.159)
[19:03:07] *** Quits: tsp (~tsp@srv1.xen.prgmr.com) (Quit: ZNC - http://znc.in)
[19:03:17] *** Joins: tsp (~tsp@allinaccess.com)
[19:03:53] *** Joins: yupeak (~yupeak@S010664777dacc633.vc.shawcable.net)
[19:06:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:07:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[19:08:41] *** Joins: ecommence (~ecommence@136.243.16.102)
[19:09:42] <Enissay> `INSERT INTO myDB(blah) VALUES ($myVar)` => `ERROR 1054 (42S22) at line 17: Unknown column 'x' in 'field list'` where `var='x'`
[19:09:43] *** Joins: audiocat (~audio@2603-8081-1800-0062-da2a-56e6-92b0-31dc.res6.spectrum.com)
[19:10:42] <Enissay> I do have other shell variables which are being resolved correctly within sql code but not this one... I cannot figure it out :-/
[19:13:43] <Soliton> !injection
[19:13:43] <greybot> Don't pass user-supplied data in a context where it could be interpreted as code. BAD: ssh host "rm $file"; GOOD: ssh host "$(printf 'rm %q' "$file")"; see http://mywiki.wooledge.org/BashProgramming/05
[19:13:50] *** Quits: iomari891 (~iomari891@197.210.52.159) (Ping timeout: 268 seconds)
[19:14:39] *** Joins: arinov (~arinov@212.156.215.30)
[19:15:35] *** Joins: iomari891 (~iomari891@197.210.52.159)
[19:15:42] *** Joins: julius_c (~julius_c@195.red-83-57-79.dynamicip.rima-tde.net)
[19:16:18] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[19:16:46] <ExeciN> Hi people. I'm having some trouble executing a command in my script. This is the troublesome segment: https://hastebin.com/boquyemaxu.bash and this is a sample output of this: `./entrypoint.bash: line 36: rg 'abc' -r 'def' ./README.md: No such file or directory` what exactly goes wrong here?
[19:16:47] <pasteban> Paste is available without javascript on https://hastebin.com/raw/boquyemaxu
[19:17:16] <Soliton> !faq complex
[19:17:16] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[19:18:11] <Soliton> for file in my/path/*.glob; do rg ... "$file"; done
[19:19:00] <Soliton> kind of mind boggling how you got to what you have.
[19:19:35] <Soliton> !$(
[19:19:35] <greybot> Command Substitution: "$(cmd "foo bar")" causes the command 'cmd' to be executed with the argument 'foo bar' and "$(..)" will be replaced by the *output*. See http://mywiki.wooledge.org/BashFAQ/002 and http://mywiki.wooledge.org/CommandSubstitution
[19:21:05] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[19:21:22] *** Parts: yogoyo (~weechat@user/yogoyo) (WeeChat 2.3)
[19:21:53] *** Joins: eggbean (~eggbean@user/eggbean)
[19:23:37] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[19:23:42] *** Quits: iomari891 (~iomari891@197.210.52.159) (Ping timeout: 268 seconds)
[19:24:22] <ExeciN> this is what my $FIND_STRING looks like `gfind . -type f ! -path ".git" ( ! -iname "CHANGELOG.md" ! -iname "venidify.sh" ! -iname "CONTRIBUTING.md" ! -iname "CODE_OF_CONDUCT.md" ! -iname "README.md" )` but I'm still not sure if the whole thing is interpreted as a command or a command with a bunch of arguments
[19:24:57] *** Joins: kj (~kj@beta.aerisnetwork.net)
[19:25:24] *** Joins: JanC (~janc@user/janc)
[19:25:25] <Soliton> in shell you call a command like this: cmd arg1 arg2 arg3 ...
[19:25:43] <Soliton> you do not write "cmd arg1 arg2 arg3"
[19:26:31] <ExeciN> should I use eval on the $FIND_STRING ?
[19:26:33] <thebombzen> is it generally good practice to set -e, -f, and/or -u at the top of your script?
[19:26:40] <uplime> thebombzen: no
[19:26:41] <Soliton> why do you need find for this? those files are surely at the top level?
[19:26:46] <uplime> !set-e > thebombzen 
[19:26:46] <greybot> thebombzen: "set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
[19:27:06] <thebombzen> well, ideally I don't rely on -e and handle the errors
[19:27:13] <thebombzen> the idea was more that it makes the program more fail-fast
[19:27:14] <osse> !find
[19:27:14] <greybot> http://mywiki.wooledge.org/UsingFind
[19:27:27] <uplime> if you're already handling errors then you don't need -e
[19:27:46] <thebombzen> yea, although I'm not thinking of using -e as an error handler, but a way to catch problems during development
[19:27:52] <thebombzen> like "oh yea I forgot this thing coudl fail"
[19:28:04] <uplime> failing fast doesn't do you any good if theres no context about the failure
[19:28:07] *** Joins: iomari891 (~iomari891@197.210.52.10)
[19:28:16] <thebombzen> well for development, not for publish so to speak
[19:28:30] <uplime> it doesn't matter if its just for development
[19:28:33] <thebombzen> but fair
[19:28:35] <thebombzen> what about -f and -u?
[19:28:44] <Soliton> !-u
[19:28:45] <greybot> ''set -u'' or ''set -o nounset'', makes the use of unset variables sometimes cause a fatal error. If you want to detect typoed variable names, use shellcheck instead. See http://mywiki.wooledge.org/BashFAQ/112
[19:28:58] <ExeciN> I am parametrically setting most of find's arguments: https://hastebin.com/raw/osafojuwas
[19:29:21] *** Joins: Adoi (~Adoi@user/adoi)
[19:29:25] <thebombzen> yea, I know what -u does, but I was thinking that it won't matter if the script has no typos
[19:29:30] *** Joins: alzgh (~alzgh@216.155.158.214)
[19:29:30] <thebombzen> and it'll force me to pick default values
[19:29:38] <thebombzen> which might matter
[19:29:43] <Soliton> !faq complex > ExeciN
[19:29:43] <greybot> ExeciN: https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[19:29:56] <thebombzen> you're saying shellcheck basically makes that unnecessary tho, which is fair
[19:30:03] <osse> ExeciN: by using an array that would be largely fine
[19:30:06] <ExeciN> yeah, yeah I already saw that. I'm thinking to use eval
[19:30:10] <thebombzen> what about set -f, which is globoff
[19:30:18] <Soliton> eval, of course...
[19:30:25] *** Quits: ooldirty (~ooldirty@ec2-18-224-204-126.us-east-2.compute.amazonaws.com) (Quit: leaving)
[19:30:45] <uplime> ExeciN: why would you use eval when you can use an array?
[19:30:48] <Soliton> better chance to make it destructive and a learning experience i guess.
[19:31:01] <thebombzen> I'm thinking disabling globs is a good idea if I don't actually need them since it makes the script more robust against unknown bugs
[19:31:04] <thebombzen> but I'm not sure it really matters
[19:31:23] <uplime> thebombzen: if you don't need them, don't use it. but its a poor execuse to not quote variables
[19:31:26] *** Quits: fourHZ (~fourHZ@80.146.191.217) (Quit: Connection closed)
[19:31:28] <ExeciN> uplime: you mean an array with paths from find?
[19:31:45] <uplime> ExeciN: i mean what the faq complex doc describes
[19:31:45] <thebombzen> uplime: not as an excuse but rather as a failsafe
[19:31:52] <uplime> storing the command in an array
[19:31:54] <osse> point 5 in the FAQ
[19:32:18] <uplime> thebombzen: if you're quoting your variables then there's not much to worry about unless you're accidentally typoing * all over your script
[19:32:20] <Soliton> an array as in a command name and arguments. so you can call a command normally.
[19:32:31] <thebombzen> uplime: so it doesn't do anything in either direction, so no need but no harm
[19:32:32] <Soliton> a command is not a string it is a list.
[19:32:32] <thebombzen> got it
[19:33:01] *** Quits: yupeak (~yupeak@S010664777dacc633.vc.shawcable.net) (Read error: Connection reset by peer)
[19:33:30] <thebombzen> also with regard to traps, I read that in C the proper way to catch an INT signal and then propagate it upward is to register a handler, and have the handler do cleanup, unregister itself, and then kill itself with sigINT in order to bubble the signal upward
[19:33:35] <thebombzen> is that also true in BASH?
[19:33:52] <uplime> in bash you should use EXIT
[19:34:18] <thebombzen> would there be a reason to trap INT, HUP, or TERM if I'm also trapping EXIT
[19:34:22] *** Joins: nikodijev (~nikodijev@109-93-203-15.dynamic.isp.telekom.rs)
[19:35:00] <Soliton> not in bash, no.
[19:35:08] <uplime> EXIT is how you tell Bash to trap INT and TERM
[19:35:29] <thebombzen> what about HUP?
[19:35:34] <thebombzen> or is it only INT and TERM
[19:35:46] <thebombzen> also does EXIT run upon successful exit
[19:35:56] <uplime> yes
[19:36:16] <uplime> HUP isn't really an exit signal
[19:36:35] <thebombzen> I'd still like to clean up from HUP
[19:36:37] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:36:48] <uplime> then trap hup
[19:37:26] <thebombzen> but the dance I described that you do in C, where you register a handler for INT, and in the handler you cleanup, unregister, and kill self with INT, does bash's EXIT trap handle all of that boilerplate for you?
[19:38:17] <Soliton> no.
[19:38:39] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[19:38:46] <thebombzen> so why is exit trap recommended over all that jazz then
[19:38:46] <Soliton> the EXIT trap is called no matter how the script terminates.
[19:38:59] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[19:39:02] <uplime> EXIT isn't really boilerplate. its a meta-signal that Bash activates in a number of circumstances
[19:39:16] <Soliton> it has nothing to do with how to properly die from a signal.
[19:39:18] <uplime> its not arbitrarily running code
[19:39:56] <thebombzen> it's sounding more and more like I actualy do want to trap INT
[19:40:07] *** Joins: sokle_68 (~sokle_68@ppp079167030127.access.hol.gr)
[19:40:13] <Soliton> if you want to do something special on INT, sure.
[19:40:26] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[19:40:37] <uplime> thebombzen: not with what you've described, but ok
[19:40:41] <thebombzen> under the hood, if I trap INT and EXIT, and then I ^C, does that mean only the INT trap fires since the script hasn't actually exited yet?
[19:40:51] <earnestly> (Bear in mind that bash is the only shell that implements 'EXIT' in a reasonably sensible manner.  For everything else EXIT only runs after the script ends normally (i.e. not interrupted, terminated, etc.))
[19:40:55] *** Joins: igravious (~igravious@80.233.55.99)
[19:40:58] <thebombzen> and then once the script exits at the end of my cleanup, EXIT is fired, right?
[19:41:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[19:41:11] <uplime> why would you trap INT and EXIT
[19:41:14] <uplime> EXIT includes INT
[19:41:21] <Soliton> no clue in what order they're called.
[19:41:24] <Soliton> !tias
[19:41:24] <greybot> Try It And See
[19:41:25] <thebombzen> cause I want to handle INT specially
[19:41:41] <earnestly> thebombzen: In your INT trap, call exit
[19:41:48] <thebombzen> like the exit command?
[19:41:51] <earnestly> Yes
[19:42:01] <Soliton> you mean you want to do the stuff you mentioned just for INT? why?
[19:42:19] <Soliton> behave properly for INT and not other signals?
[19:42:36] <earnestly> For POSIX sh, to "approximate" bash's EXIT it would look something like: trap exit INT HUP TERM QUIT ...; trap cleanup EXIT
[19:42:46] <earnestly> !sigint > thebombzen 
[19:42:46] <greybot> thebombzen: How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[19:42:52] <earnestly> Fwiw
[19:43:13] <thebombzen> Im thinking of a use case like, a long-running process where you do  ^C and it gives it like 5 seconds to gracefully shut down and if it receives a second ^C then it shuts down much more quickly
[19:43:15] <TomyWork> not to be confused with the other sigint
[19:43:18] <thebombzen> in that case I'd probably actually want to trap INT
[19:43:29] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:43:59] <thebombzen> Soliton: well you could always do something like this to make it work for other signals
[19:44:02] <uplime> this is sounding like something that shouldn't be a shellscript in the first place
[19:44:24] <earnestly> This sounds like a supervisor's job
[19:44:27] <thebombzen> for signal in INT TERM HUP QUIT; do trap "signal=${signal} _cleanup" "$signal"; done
[19:44:59] <thebombzen> and then _cleanup just looks at the signal variable to see what signal triggered it
[19:46:14] *** Quits: nikodijev (~nikodijev@109-93-203-15.dynamic.isp.telekom.rs) (Quit: Quit)
[19:46:19] <thebombzen> but you're right, for scripts that need to do something this complex then BASH is probably not the tool when EXIT should suffice
[19:46:31] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[19:46:40] <thebombzen> I just dont' like that EXIT doesn't work with HUP since getting something killed by HUP happens to me from time to time
[19:46:48] <thebombzen> like run it over SSH and then connection pops
[19:47:42] <Soliton> # (trap 'echo exit' EXIT; sleep 10)& sleep 1; kill -HUP $!
[19:47:44] <shbot> Soliton: [1] 51
[19:47:44] <shbot> Soliton: exit
[19:48:02] <thebombzen> so it does, interesting
[19:48:04] <uplime> EXIT activates whenever the shell exits
[19:48:21] *** Joins: kktt (~kktt@180.116.147.125)
[19:48:28] *** Quits: kktt (~kktt@180.116.147.125) (Client Quit)
[19:48:29] <thebombzen> (I figure except KILL but nothing you can do about that)
[19:48:39] <ScriptFanix> you should always run long running jobs in a too like screen or tmux
[19:48:44] *** Joins: kktt (~kktt@180.116.147.125)
[19:48:46] *** Joins: richardm75 (~richardm7@2600:8801:c50b:3800:117:33ea:89fb:ae7a)
[19:48:47] <uplime> whenever the shell exits on its own*
[19:48:58] <uplime> ScriptFanix: ideally you run it in a supervisor
[19:49:14] *** Quits: kktt (~kktt@180.116.147.125) (Client Quit)
[19:49:14] <thebombzen> what's a supervisor, in this context?
[19:49:17] <thebombzen> I figure you don't mean "my bos"
[19:49:19] <uplime> systemd
[19:49:28] <thebombzen> ah, something like that
[19:49:30] <earnestly> thebombzen: Tools like runsv, systemd, daemontools, etc.
[19:49:40] <earnestly> s6, perp, ... nosh? more
[19:49:59] <thebombzen> can you even use systemd to run a one-shot without making a service and installing it and all that bs
[19:50:04] *** Joins: mrdoug (~mrdoug@gateway/tor-sasl/mrdoug)
[19:50:40] <earnestly> thebombzen: systemd-run(1) can mostly do that
[19:50:49] <thebombzen> thanks, will read the manpage
[19:53:27] *** Joins: zebrag (~chris@user/zebrag)
[19:54:02] *** Quits: uc50ic4more (~uc50ic4mo@216.8.148.58) (Quit: uc50ic4more)
[19:54:18] *** Joins: uc50ic4more (~uc50ic4mo@216.8.148.58)
[19:54:42] *** Quits: mrdoug (~mrdoug@gateway/tor-sasl/mrdoug) (Quit: Leaving)
[19:55:23] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Remote host closed the connection)
[19:55:46] <osse> earnestly: that's pretty neat. thanks.
[19:56:52] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[19:57:37] <earnestly> osse: systemd-socket-activate can be handy sometimes too (like with gpg-agent's --supervised flag)
[19:59:39] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:00:13] *** Quits: Guest20 (~Guest20@srv-cache.insa-toulouse.fr) (Quit: Client closed)
[20:04:00] *** Joins: jaskal (jaskal@user/jaskal)
[20:04:44] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:04:56] *** Joins: zebrag (~chris@user/zebrag)
[20:05:01] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[20:05:01] *** Quits: Bit_MCP1 (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 268 seconds)
[20:08:17] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[20:08:50] <VSpike> Does anyone know if there's a reason why the default exit code for a pipe is the last command's status? It seems like you'd rarely want that versus the first error code instead, but maybe there's a really important reason for taht
[20:11:06] *** Parts: sokle_68 (~sokle_68@ppp079167030127.access.hol.gr) ()
[20:11:36] <osse> useful for  whatever | grep -q foo
[20:11:46] <osse> off the top of my head I can't think of anything else
[20:12:22] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[20:12:48] <VSpike> Maybe just an arbitrary choice someone made back in the 80's that seemed like a good idea
[20:14:32] *** Joins: Adoi (~Adoi@user/adoi)
[20:14:41] *** Quits: igravious (~igravious@80.233.55.99) (Quit: igravious)
[20:16:40] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:20:00] <VSpike> I was looking for a way to check if given PID still exists and is a particular binary. Does pgrep ssh-agent | grep "^${SSH_AGENT_PID}$" seem sensible?
[20:21:16] <VSpike> before I had ps -p "$SSH_AGENT_PID" -o fname | sed '1d' | grep -q ssh-agent but that borks on Mac because the keyword is `comm` not `fname`
[20:22:09] <earnestly> :I
[20:23:12] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:23:56] <VSpike> Had to switch back to a Mac for work so I'm finding all the GNU-isms I've introduced in my dotfiles since last time I used one
[20:25:11] *** Joins: lavaball (felix@31.204.155.215)
[20:27:07] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[20:27:19] *** Joins: remcycles (~remcycles@c-98-247-19-156.hsd1.wa.comcast.net)
[20:27:54] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[20:39:44] *** Quits: maroloccio (~marolocci@200.243.99.194) (Ping timeout: 250 seconds)
[20:41:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:43:16] <fatal> https://www.fsf.org/news/update-to-the-fsf-and-gnus-plan-to-move-irc-channels-to-libera.chat
[20:44:57] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:49:06] *** Quits: vmeson (~rmacleod@23-233-84-124.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[20:50:31] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:50:36] *** grettke is now known as grettke2
[20:50:46] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[20:51:24] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:53:04] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:53:37] *** Joins: simbioz (~simbioz@user/simbioz)
[20:54:08] *** Quits: julius_c (~julius_c@195.red-83-57-79.dynamicip.rima-tde.net) (Quit: Leaving)
[20:57:48] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 244 seconds)
[20:58:16] *** Joins: slickymasterWork (~slickymas@ubuntu/member/slickymaster)
[20:58:29] *** grettke2 is now known as grettke
[20:59:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[21:00:05] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:00:26] *** Joins: grovershor_ (~groversho@193.36.225.35)
[21:00:54] *** Quits: grovershor (~groversho@193.36.225.36) (Ping timeout: 264 seconds)
[21:01:37] *** Quits: yosijo (~yosijo@business-90-187-142-153.pool2.vodafone-ip.de) (Quit: yosijo)
[21:03:21] *** Joins: sunarch (~x@user/sunarch)
[21:05:33] *** Quits: adhd_viking (~vikking@70-59-200-104.clsp.qwest.net) (Read error: Connection reset by peer)
[21:06:06] *** Joins: adhd_viking (~vikking@70-59-200-104.clsp.qwest.net)
[21:06:27] *** Joins: julius_c (~julius_c@195.red-83-57-79.dynamicip.rima-tde.net)
[21:06:31] *** Joins: ElPresidenteP (~ElPreside@89.46.114.200)
[21:07:56] <twkm> VSpike: that's the shitty way.  use pgrep.
[21:09:22] <twkm> and if it is a recent mac you likely want #zsh since you likely are using zsh not bash.
[21:10:30] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580) (Ping timeout: 268 seconds)
[21:14:20] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[21:15:27] *** Quits: slickymasterWork (~slickymas@ubuntu/member/slickymaster) (Quit: Connection closed)
[21:16:47] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Ping timeout (120 seconds))
[21:16:59] *** Joins: alzgh (~alzgh@216.155.158.214)
[21:17:32] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:18:45] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[21:19:35] *** Joins: furrymcgee (~devuan@31.179.186.66)
[21:22:16] *** moto is now known as motro
[21:22:25] *** motro is now known as moto
[21:25:43] *** Joins: esselfe (~steph@user/esselfe)
[21:26:50] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[21:29:04] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.234)
[21:33:07] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[21:35:05] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:35:05] *** Quits: Thin_icE (~pgp@88.157.222.244) (Quit: Leaving)
[21:36:57] *** Quits: arinov (~arinov@212.156.215.30) (Read error: Connection reset by peer)
[21:37:58] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:38:18] *** Joins: Krail (~Krail@user/alexdelarge)
[21:38:23] *** Joins: goldfish (~goldfish@user/goldfish)
[21:38:53] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Ping timeout: 252 seconds)
[21:40:26] *** Joins: mongy (~mongy@user/mongy)
[21:40:31] *** Joins: iomari892 (~iomari891@197.210.71.39)
[21:40:33] *** Quits: alzgh (~alzgh@216.155.158.214) (Quit: Client closed)
[21:41:02] *** Joins: dub_a (~dub_a@192.252.212.47)
[21:42:39] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:43:05] *** Quits: njwei (~njw@58.182.164.99) (Ping timeout: 268 seconds)
[21:44:49] *** Quits: iomari891 (~iomari891@197.210.52.10) (Ping timeout: 272 seconds)
[21:45:21] *** Quits: rendar (~rendar@user/rendar) ()
[21:48:07] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[21:51:05] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:52:35] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:55:49] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:00:19] *** Joins: drtelnet` (~user@159.182.1.4)
[22:01:17] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[22:07:00] *** Joins: alzgh (~alzgh@216.155.158.214)
[22:08:35] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[22:12:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:12:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:13:01] *** Joins: Adoi (~Adoi@user/adoi)
[22:13:11] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:17:46] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[22:17:47] *** Joins: magla (~gelignite@55d4d6c1.access.ecotel.net)
[22:18:06] *** Joins: zebrag (~chris@user/zebrag)
[22:20:00] *** Joins: et_ (~et@user/et)
[22:20:05] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Remote host closed the connection)
[22:20:48] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[22:20:48] *** et_ is now known as et
[22:21:41] *** Quits: thebombzen (~thebombze@587232761.guest.umich.net) (Quit: attack.c:4: main: Assertion `I_can_beat_that_monster' failed. Aborted (core dumped))
[22:21:57] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[22:22:30] *** Quits: audiocat (~audio@2603-8081-1800-0062-da2a-56e6-92b0-31dc.res6.spectrum.com) (Ping timeout: 264 seconds)
[22:24:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:28:05] <ash_worksi> would command grouping help me in a situtation where I want to perform multiple expansions like this: foo="${foo:1}"; foo="${foo%/*}"
[22:29:54] <twkm> you don't need the ;
[22:30:18] <Enissay> `[ -f $f ]` how to check if a file with a specific regex mask exists ?
[22:30:37] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[22:31:22] <ash_worksi> twkm: you dont?
[22:31:27] <ash_worksi> well
[22:31:34] <ash_worksi> then a \n right?
[22:31:38] <twkm> no.
[22:31:38] <uplime> no
[22:31:58] <uplime> Enissay: [[ -f $file && $file =~ regex ]]
[22:32:14] <uplime> # a=b c=d; declare -p a c
[22:32:15] <twkm> ewww.  regex, now you have two problems.
[22:32:15] <shbot> uplime: declare -- a="b"
[22:32:15] <shbot> uplime: declare -- c="d"
[22:32:24] <ash_worksi> wow
[22:33:13] <OMGOMG> such assign
[22:33:15] <twkm> so now you don't need grouping.
[22:33:21] <ash_worksi> well, anyway, it's not as though I can do something like `foo={ perform multiple expansions }` right?
[22:33:32] <twkm> no.
[22:33:52] <twkm> i meant, correct you cannot do that.
[22:34:37] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[22:35:03] <ash_worksi> is there a simpler way to perform an expansion like ${foo#*/} and ${foo%/*} ?
[22:35:06] <twkm> but the only thing you might want a group for two assignments is if you can't stand if and want to use && or || where the lack of any ;'s means you don't need a group.
[22:35:43] <ash_worksi> twkm: I'll keep that in mind
[22:40:00] *** Joins: yupeak (~yupeak@S010664777dacc633.vc.shawcable.net)
[22:42:06] <Enissay> uplime: I need something like this, I only know prefix & suffix of the file with variable unique middle `[[ -f "filename*24" ]] && echo "exists"`
[22:42:29] <uplime> Enissay: i just showed you how to do that
[22:42:34] <uplime> oh
[22:42:38] <uplime> you can't pass a glob to -f
[22:43:09] <uplime> files=(filename*24); if (( ${#files[@]} )); then echo files exist; fi
[22:44:19] <twkm> if ls filename*24 &> /dev/null ; then : exists ; fi
[22:44:38] <izabera> !exists
[22:44:39] <greybot> Check if any file matches a given pattern: exists() { [[ -e $1 ]]; }; shopt -s nullglob; if exists *.txt; then ...
[22:45:08] *** Quits: anton (~anton@antonmcclure.com) (Quit: Something borked, so I'm going to try turning it off and back on again)
[22:45:47] <twkm> [[ being a compound command makes the { ;} unnessary.
[22:46:23] <izabera> thanks i'll make sure to tell the person who first wrote the factoid
[22:46:25] <izabera> http://wooledge.org/~greybot/meta/exists
[22:46:35] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 268 seconds)
[22:46:44] <twkm> exists() [[ -e $1 ]]; : extglob not needed ; if exists *.txt; then ...
[22:46:52] <izabera> nullglob is needed
[22:47:16] <uplime> the -e will just fail anyways without nullglob
[22:47:20] <izabera> no
[22:47:34] <uplime> wouldn't it just become [[ -e *.txt ]] ?
[22:47:46] <twkm> not exactly, no.
[22:47:51] <uplime> oh, what happens?
[22:47:57] *** Joins: anton (~anton@am32.org)
[22:48:12] <Enissay> twkm: thanks, that one is easy to understand xD
[22:48:16] <Enissay> Thank you guys <3
[22:48:16] <izabera> # >'foo.[ch]'; exists() [[ -e $1 ]]; exists foo.[ch] && echo found
[22:48:18] <shbot> izabera: found
[22:48:30] <izabera> # >'foo.[ch]'; exists() [[ -e $1 ]]; shopt -s nullglob; exists foo.[ch] && echo found
[22:48:32] <shbot> izabera: no output
[22:48:55] <VSpike> twkm: nope, definitely using bash! About the first thing I changed on it
[22:49:57] <uplime> # set -x; # >'foo.[ch]'; exists() [[ -e $1 ]]; exists foo.[ch] && echo found
[22:49:58] <shbot> uplime: no output
[22:50:00] <twkm> if you have a filename with glob characters in it, yes, safer to assume you might.
[22:50:15] <uplime> whoops
[22:50:22] <uplime> # set -x; >'foo.[ch]'; exists() [[ -e $1 ]]; exists foo.[ch] && echo found
[22:50:30] <shbot> uplime: + exists 'foo.[ch]'
[22:50:30] <shbot> uplime: + [[ -e foo.[ch] ]]
[22:50:30] <shbot> uplime: etc... ( http://ix.io/3qgg )
[22:50:47] <uplime> oh, i get what you mean
[22:50:57] <uplime> yeah ok i take back the nullglob then
[22:51:07] <uplime> nullglob staetment*
[22:51:36] <alzgh> what is the benefit of ascii armoring gpg keys?
[22:51:46] <alzgh> sorry, wrong channel
[22:51:53] <Enissay> Oh, what about checking for `filename*24` or `filename*24.gz` any shortcut for that ? adding a simple * at the end can yield false positives
[22:52:11] <twkm> so don't.
[22:52:19] <izabera> smartz
[22:52:33] <twkm> check for what you want, not what you want plus other things.
[22:52:40] <Enissay> Aha, ok, I'll just go for a full OR then
[22:53:11] <twkm> extglob can express or as part of a single glob.
[22:54:11] *** grovershor_ is now known as grovershor
[22:54:18] <ash_worksi> i thought there was an option for read to make variables local
[22:54:34] <Enissay> Ow, I'l need to google that... Thx
[22:54:37] <twkm> make the variable local first then use read.
[22:54:51] <ash_worksi> not that that's hard, I just thought there was
[22:54:57] <twkm> declare x; read x
[22:55:03] <ash_worksi> indeed
[22:56:43] *** Joins: ElPresidenteP_ (~ElPreside@2600:1700:3d10:4870:fd68:b163:35ec:5580)
[22:57:22] *** Joins: KindOne_ (kindone@user/kindone)
[22:58:25] *** Quits: KindOne (kindone@user/kindone) (Ping timeout: 268 seconds)
[22:59:33] *** KindOne_ is now known as KindOne
[22:59:33] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[23:00:46] *** Quits: ElPresidenteP (~ElPreside@89.46.114.200) (Ping timeout: 268 seconds)
[23:03:48] *** Quits: anton (~anton@am32.org) (Quit: still bork)
[23:05:43] *** Joins: sgen (~sgen@142.186.76.30)
[23:08:15] *** Joins: rememberYou (~user@user/rememberyou)
[23:10:24] *** Quits: rememberYou (~user@user/rememberyou) (Client Quit)
[23:11:50] *** Quits: ham5urg (~ham5urg@149.224.234.232.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 252 seconds)
[23:13:22] *** Joins: Betal (~Beta@user/betal)
[23:13:26] *** Joins: ByteSlayer (~byteslaye@user/byteslayer)
[23:14:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[23:14:51] *** Joins: vlm (~vlm@user/vlm)
[23:15:46] *** Quits: vlm (~vlm@user/vlm) (Remote host closed the connection)
[23:16:15] *** Joins: vlm (~vlm@user/vlm)
[23:17:01] *** Joins: anton (~anton@2604:2dc0:101:200::185)
[23:18:09] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Quit: Connection closed)
[23:24:03] *** Joins: Voxel (~v7@250-46-68-178.baltnet.ru)
[23:24:03] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:24:12] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[23:24:26] *** Parts: Voxel (~v7@250-46-68-178.baltnet.ru) ()
[23:27:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[23:27:27] *** grettke is now known as grettke2
[23:27:49] *** Joins: vlm (~vlm@user/vlm)
[23:35:13] *** Quits: anton (~anton@2604:2dc0:101:200::185) (Quit: anton)
[23:35:58] *** Joins: anton (~anton@antonmcclure.com)
[23:36:07] *** Quits: anton (~anton@antonmcclure.com) (Remote host closed the connection)
[23:36:51] *** Joins: tas (~tas@128.244.38.15)
[23:37:01] *** Joins: anton (~anton@am32.org)
[23:39:00] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[23:39:50] *** Joins: chha (~chhs@user/chha)
[23:53:22] *** Joins: geli (~gelignite@55d463ac.access.ecotel.net)
[23:53:34] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[23:54:04] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[23:56:06] *** Quits: magla (~gelignite@55d4d6c1.access.ecotel.net) (Ping timeout: 264 seconds)
[23:56:37] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[23:59:34] *** Quits: yupeak (~yupeak@S010664777dacc633.vc.shawcable.net) (Quit: Leaving)
[23:59:36] *** Joins: greycat (~greg@209.142.155.49)
