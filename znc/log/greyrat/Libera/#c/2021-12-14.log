[00:01:01] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[00:02:17] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:06:26] *** Quits: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4) (Remote host closed the connection)
[00:06:39] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[00:09:49] *** Joins: Akiva (~Akiva@user/Akiva)
[00:10:16] *** Joins: brad_mssw|mac (~bhouse@99-101-56-67.lightspeed.jcvlfl.sbcglobal.net)
[00:11:02] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[00:14:06] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 260 seconds)
[00:14:11] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: going to sleep (too late))
[00:15:29] *** Quits: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net) (Quit: WeeChat 3.3)
[00:15:40] *** Joins: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net)
[00:16:35] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 268 seconds)
[00:17:47] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[00:20:13] *** Quits: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net) (Client Quit)
[00:20:35] *** Joins: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net)
[00:21:50] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:27:24] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0) (Remote host closed the connection)
[00:27:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:28:23] *** Joins: Macuser (~Macuser@2600:1003:b453:9b2c:313c:8a78:18dc:1ad9)
[00:29:23] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[00:31:25] *** Joins: CormacAttack (~mac@144.62.50.200)
[00:32:21] *** Quits: smartin (~Thunderbi@88.135.18.171) (Remote host closed the connection)
[00:32:40] *** Joins: smartin (~Thunderbi@88.135.18.171)
[00:32:42] *** Quits: almaember_ii (~user@188-143-34-27.pool.digikabel.hu) (Remote host closed the connection)
[00:42:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:43:15] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[00:43:26] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[00:44:05] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[00:44:16] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[00:44:56] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::49)
[00:45:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:45:20] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[00:47:10] *** Joins: PortableDave (~portabled@118.210.56.9)
[00:48:31] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[00:49:22] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[00:49:28] *** Joins: Betal (~Betal@user/betal)
[00:49:39] *** Joins: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505)
[00:52:00] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[00:56:24] *** Joins: slidercrank (~slidercra@user/slidercrank)
[00:59:00] *** Joins: pulse (~pulse@user/pulse)
[00:59:10] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:03:08] *** Quits: Falconer (~ronnyma@227.84-48-191.nextgentel.com) (Remote host closed the connection)
[01:03:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:06:24] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[01:07:20] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[01:08:27] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[01:08:54] *** Joins: Cyp (~cyp@213.237.85.9)
[01:09:28] *** Joins: Akiva (~Akiva@user/Akiva)
[01:09:38] *** Joins: spuz (~spuz@2.30.124.219)
[01:10:18] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[01:11:15] *** Quits: Macuser (~Macuser@2600:1003:b453:9b2c:313c:8a78:18dc:1ad9) (Quit: Textual IRC Client: www.textualapp.com)
[01:11:30] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:12:25] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:12:36] <spuz> Why does this code produce an Access Violation on line 9? https://bpa.st/KJCA
[01:12:53] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[01:14:00] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[01:14:45] *** Joins: dmenz (~dmenz@2804:14d:5cd4:5e94::1)
[01:16:50] *** Quits: AmR (~AmREiSa@156.207.199.106) (Quit: Konversation terminated!)
[01:18:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:19:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[01:22:08] <hohohoroutines> spuz: use -g -fsanitize=address to diagnose that sort of thing
[01:22:36] <fizzie> If it actually does, it's likely because of missing #include's.
[01:23:20] <nomagno> Seng: Does it have to be on Github?
[01:23:39] <hohohoroutines> fizzie: but that's not even worth speculating about
[01:23:46] <nomagno> Anyhow I would show my project but I just went on a dependency killing spree, so I threw away most of the useful implementations of things
[01:24:08] <nomagno> Will get to re-writing tomorrow, should be fairly quick
[01:25:33] <nomagno> I currently have... well, no dependencies actually! Not even libc for the most part, but the frontend stuff is not done so I'll definitely need the standard headers :D
[01:28:32] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[01:30:15] *** Quits: magla (~gelignite@55d43df6.access.ecotel.net) (Quit: Stay safe!)
[01:30:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:31:19] *** Joins: vicfred (~vicfred@user/vicfred)
[01:32:50] *** Quits: brad_mssw|mac (~bhouse@99-101-56-67.lightspeed.jcvlfl.sbcglobal.net) (Quit: Leaving)
[01:32:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.246)
[01:33:38] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.246) (Read error: Connection reset by peer)
[01:34:25] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 252 seconds)
[01:35:00] *** Joins: monkey_ (~user@181.114.17.106)
[01:35:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:36:01] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[01:36:33] *** Joins: inlight (~inlight@157.35.17.204)
[01:36:33] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[01:36:33] *** Joins: inlight (~inlight@user/inlight)
[01:38:21] *** Joins: DaftMouse (~DaftMouse@179.106.56.213)
[01:40:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:40:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:41:57] <hohohoroutines> deleting code is the most rewarding thing
[01:42:16] <hohohoroutines> and deleting #include statements might be the best type ot code to delete
[01:42:22] <spuz> hohohoroutines: in order to add that command line parameter I had to learn how to compile my code on the command line. After doing that, I find the error no longer occurs. It must have something to do wtih Visual Studio
[01:43:21] *** Quits: Symbioti1Female (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[01:44:04] <hohohoroutines> nomagno: but don't refrain from using libc functions unless you have a specific performance reason to do so
[01:44:24] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[01:45:52] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 256 seconds)
[01:46:09] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:46:20] <nomagno> hohohoroutines: I will refrain slightly, because I am aiming for the backend to be fully portable. It's really a very small issue, very little extra code. The frontend, I won't care as long as its standard indeed
[01:46:34] <nomagno> Fully portable, and capable of running in freestanding implementations*
[01:47:50] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 268 seconds)
[01:49:46] *** Quits: mahmutov (~mahmutov@37.155.43.0) (Ping timeout: 260 seconds)
[01:52:14] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[01:52:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:56:03] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[01:56:53] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[01:57:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:57:38] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[01:57:58] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[02:02:46] *** Joins: Antonio (~Username@151.45.55.188)
[02:03:33] *** Quits: gravndal (~weechat@user/ravndal) (Quit: WeeChat 3.3)
[02:03:52] *** Quits: Antonio (~Username@151.45.55.188) (Client Quit)
[02:04:41] *** Joins: Antonio (~Username@151.45.55.188)
[02:05:38] *** Joins: gravndal (~weechat@user/ravndal)
[02:09:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:10:17] *** Quits: smartin (~Thunderbi@88.135.18.171) (Quit: smartin)
[02:11:56] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[02:12:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com)
[02:12:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:12:43] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:13:47] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[02:15:50] *** Quits: Antonio (~Username@151.45.55.188) (Quit: Going offline, see ya! (www.adiirc.com))
[02:17:17] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:17:26] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Quit: -a- Connection Timed Out)
[02:17:32] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[02:17:37] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:22:13] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[02:24:27] *** Joins: shivesh (~shivesh@user/shivesh)
[02:24:52] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[02:26:02] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[02:26:04] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 268 seconds)
[02:28:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[02:28:57] *** Quits: alch (~alch@151.34.144.135) (Ping timeout: 250 seconds)
[02:29:03] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:29:42] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[02:30:46] *** Joins: arinov (~arinov@213.194.126.155)
[02:30:58] *** Joins: alch (~alch@151.34.144.67)
[02:31:04] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[02:31:48] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:32:36] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[02:32:42] *** Quits: pizdets_ (~pizdets@183.182.111.164) (Ping timeout: 250 seconds)
[02:32:53] *** Joins: noonien (~noonien@user/noonien)
[02:33:46] *** Joins: pizdets (~pizdets@183.182.114.96)
[02:35:02] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Quit: Leaving.)
[02:35:22] *** Joins: Atque (~Atque@user/atque)
[02:35:56] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 268 seconds)
[02:36:12] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[02:38:57] *** Quits: Akuli (~Akuli@82-203-164-199.bb.dnainternet.fi) (Quit: Akuli)
[02:40:25] *** Quits: strajder (~strajder@user/strajder) (Quit: signing out for tonight.)
[02:41:54] * SymbioticFemale throws a brick at the compiler for giving me an illogical segfault
[02:42:05] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[02:42:44] *** Joins: kish` (~sid742412@user/aqua)
[02:43:04] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[02:43:24] *** Joins: kish` (~sid742412@user/aqua)
[02:44:35] *** Quits: dmenz (~dmenz@2804:14d:5cd4:5e94::1) (Ping timeout: 268 seconds)
[02:46:29] <SymbioticFemale> i have a function that segfaults if it returns 1. if i change the logic so that it returns 2 and my calling function checks for 2 instead of 1, then everything is fine
[02:46:33] <SymbioticFemale> what is going on here
[02:46:49] <Matt|home> ...
[02:46:54] <Matt|home> can you please post the relevant code..
[02:47:01] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 240 seconds)
[02:47:10] <nomagno> ^
[02:47:26] *** Quits: ztx (~ztx@user/ztx) (Read error: Connection reset by peer)
[02:47:29] <Matt|home> to my knowledge there is no way to diagnose that issue without seeing what else is going on
[02:47:55] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:48:16] <SymbioticFemale> if it is as simple as i'm suggesting, then it probably means i've got a buffer overflow somewhere, and that's not necessarily going to show up in any pastebin where i try to isolate this problem
[02:48:41] <SymbioticFemale> nevermind it for now. i'll just live with a return of 2
[02:48:53] <Matt|home> .....
[02:49:15] * SymbioticFemale smiles
[02:49:20] <Matt|home> have fun kiddo
[02:49:23] <nomagno> Reboot your computer and it'll fail
[02:49:25] <nomagno> :D
[02:51:12] <Matt|home> hey nomagno 
[02:51:17] <Matt|home> i have a problem with my computer
[02:51:21] <Matt|home> it's making a funny noise..
[02:51:27] <Matt|home> help me fix it
[02:51:49] <Matt|home> you have to guess what the noise is and where it's coming from though.. i won't tell you..
[02:52:09] *** Quits: SpikeHeron (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[02:52:59] <SymbioticFemale> fans. solution: remove them and replace them with copper tape that transfers the heat from the heatsink to the case.
[02:53:04] <SymbioticFemale> thats what i did
[02:55:16] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[02:55:47] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[02:56:00] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[02:56:22] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[02:56:34] *** Joins: nvmd (~nvmd@user/nvmd)
[02:57:05] <SymbioticFemale> also, changing the return to 2 didn't solve my problem. ahhhh i don't know what is going on and pastebin'ing this is going to be hard
[02:58:01] *** Quits: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505) (Ping timeout: 252 seconds)
[02:58:41] <SymbioticFemale> it's a function that calls for the reading of an encrypted log file, so there is lots of complexity in here to work out 
[02:59:13] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:59:23] <SymbioticFemale> more complexity than that. an encrypted configuration file :(
[02:59:51] *** Joins: slavfox (~slavfox@93.158.232.111)
[03:00:16] <SymbioticFemale> Matt|home: i'm going to guess again. wifi card?
[03:00:34] *** Joins: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505)
[03:00:40] <SymbioticFemale> if no, I guess power supply.
[03:01:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:02:31] *** Joins: dutch (~DutchIngr@user/dutch)
[03:04:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 265 seconds)
[03:04:11] <Matt|home> i was being sarcastic. im a bit bitterly depressed right now and assumed assisting somebody else with a problem would distract me. clearly not.
[03:04:48] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[03:06:17] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:06:28] *** Quits: kuber (~kuber@97-113-156-194.tukw.qwest.net) (Quit: leaving)
[03:06:55] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[03:07:08] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:08:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[03:10:29] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 252 seconds)
[03:10:56] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:11:14] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Client Quit)
[03:11:32] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[03:12:55] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[03:13:16] <SymbioticFemale> you in covid quarantine too?
[03:13:46] *** Joins: cpuid (~cpuid@co5.at)
[03:13:47] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[03:13:47] *** Joins: cpuid (~cpuid@user/cpuid)
[03:15:47] *** Parts: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) ()
[03:16:08] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[03:16:12] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[03:17:58] *** Joins: oriba (~oriba@dynamic-078-054-061-195.78.54.pool.telefonica.de)
[03:18:12] <Matt|home> no im failing to graduate this year because i don't have money for tuition.
[03:19:01] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:19:03] <SymbioticFemale> ah yeah about half my college class did that also
[03:19:18] <SymbioticFemale> we had about 50% attrition rate over four years due to tuition
[03:19:27] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:19:55] <SymbioticFemale> did you manage to ask for postponement or something? i mean, so you can come back later when you get money instead of dropping out?
[03:20:09] *** Joins: pflanze_ (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[03:20:12] <SymbioticFemale> there are often procedures available for doing so
[03:21:35] <Matt|home> i have no more payment plans unless i can come up with 600 tomorrow somehow. so no.
[03:22:04] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.173)
[03:22:35] <SymbioticFemale> you have to drop out if you can't pay or you can come back next year when you can pay and finish up?
[03:22:48] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 268 seconds)
[03:22:51] *** pflanze_ is now known as pflanze
[03:23:14] *** Quits: imp (~imp@192-141-191-232.alternativaip.net.br) (Quit: imp)
[03:23:15] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.173) (Read error: Connection reset by peer)
[03:23:35] *** Joins: imp (~imp@192-141-191-232.alternativaip.net.br)
[03:23:58] <SymbioticFemale> 2
[03:24:01] <SymbioticFemale> oops
[03:24:03] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[03:25:54] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 260 seconds)
[03:29:32] *** Quits: DaftMouse (~DaftMouse@179.106.56.213) (Quit: Leaving)
[03:30:50] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:31:58] *** Quits: Zenton (~user@user/zenton) (Read error: Connection reset by peer)
[03:32:21] *** Joins: Zenton (~user@user/zenton)
[03:32:57] <SymbioticFemale> there needs to be an app where people who are desperate for money can just log in, chooe a crime, and get paid immediately in XMR by some escrow service for committing it
[03:33:09] * SymbioticFemale could take an 8% commission
[03:34:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:35:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:37:06] *** Joins: dumdedums (~dumdedums@user/dumdedums)
[03:37:29] *** Quits: dumdedums (~dumdedums@user/dumdedums) (Client Quit)
[03:37:45] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[03:37:50] *** Joins: dumdedums (~dumdedums@user/dumdedums)
[03:38:32] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[03:38:38] <caze> SymbioticFemale: Make a minimal testcase.
[03:39:02] *** Quits: Kev_ (~Kev@2a01cb0400149f0015da76d049caea4a.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:39:04] <SymbioticFemale> working on it
[03:39:05] <caze> SymbioticFemale: Perform a binary search on your code to find the smallest version that produces the observed behavior.
[03:41:24] *** Quits: spuz (~spuz@2.30.124.219) (Ping timeout: 256 seconds)
[03:43:11] *** Joins: stonkey (~stonkey@user/stonkey)
[03:44:37] *** Quits: luca0N (~luca0N@nautilus.luca0n.com) (Ping timeout: 240 seconds)
[03:45:01] *** Quits: Jong (~Jong@2620:10d:c090:400::5:d6f6) (Ping timeout: 240 seconds)
[03:45:11] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[03:45:27] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[03:45:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:45:29] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:45:29] *** Joins: wroathe (~wroathe@user/wroathe)
[03:45:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com)
[03:45:49] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-800d-bd41-deec-376b.res6.spectrum.com) (Client Quit)
[03:45:51] *** luca0N is now known as Guest9894
[03:46:13] *** Joins: newchair1 (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[03:46:35] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[03:46:37] *** Quits: Beastie (~lcu@user/thebeastie) (Ping timeout: 240 seconds)
[03:46:49] *** Joins: Wulf (~Wulf@user/wulf)
[03:47:10] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Client Quit)
[03:47:18] *** newchair1 is now known as newchair
[03:47:26] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Client Quit)
[03:49:04] *** Joins: Beastie (~lcu@user/thebeastie)
[03:53:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:53:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:53:32] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[03:54:14] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[03:54:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[03:55:39] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[03:56:39] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:56:51] *** Quits: dumdedums (~dumdedums@user/dumdedums) (Quit: Leaving)
[03:58:22] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[04:00:41] *** Quits: sunsh1ne_warrior (~sunsh1ne_@46.148.141.240) (Quit: Konversation terminated!)
[04:04:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[04:13:22] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:14:48] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[04:18:49] *** Joins: Danilo82 (~Danilo82@190.89.245.44)
[04:19:46] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[04:20:01] <Danilo82> hello, i need someone to help me in a project, i have a text file with 256 lines, i need to grab this, shufle and send to another file 11718750 times
[04:20:06] *** Joins: Quacc (~youbuntoe@user/quacc)
[04:20:16] <Danilo82> i need 3000000000 lines
[04:20:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:20:24] <Danilo82> bash is really slow for it
[04:20:34] <Danilo82> could someone make a code for me?
[04:20:43] *** Joins: M101donutman[m] (~M101donut@2001:470:69fc:105::d51)
[04:20:51] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:24da:6c99:9324:ec4d)
[04:21:29] <Danilo82> i believe adding the 256 lines into the code would be faster, instead of telling the program to read a file
[04:24:06] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[04:24:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[04:24:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[04:24:49] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[04:26:15] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.173)
[04:26:35] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[04:28:02] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.173) (Read error: Connection reset by peer)
[04:30:50] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[04:32:04] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.253)
[04:33:18] *** Quits: kuoi (~kuoi@109.175.166.59) (Quit: kuoi)
[04:35:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[04:38:37] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.253) (Read error: Connection reset by peer)
[04:41:06] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:d99a:b6f1:553e:72aa)
[04:43:54] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[04:44:23] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[04:46:08] <SymbioticFemale> caze: i fixed it in the process of making a minimalist version. as expected, i messed up some buffer sizes and caused a buffer overflow 
[04:46:18] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[04:46:25] * SymbioticFemale toothless grin
[04:48:49] <SymbioticFemale> Danilo82: care to share your current bash script? maybe we can make that faster instead of writing in C. also, if you have a bash script already, we can better understand your need.
[04:49:05] *** Joins: gco (~gco@2601:647:5a00:223:858d:88ab:8bae:a673)
[04:49:26] <Danilo82> for i in {1..11718750} ; do shuf abcd1.txt >> abcd2.txt ; done
[04:53:29] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.234)
[04:54:12] *** Quits: oriba (~oriba@dynamic-078-054-061-195.78.54.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:55:53] *** Joins: cation21 (cation@user/cation)
[04:55:54] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.234) (Read error: Connection reset by peer)
[04:57:12] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[04:58:20] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[04:59:00] <caze> Danilo82: Do you know how long each line is?
[04:59:11] <Danilo82> 4
[04:59:17] *** cation21 is now known as cation
[04:59:47] <caze> 4 characters?
[04:59:55] <Danilo82> yes
[05:00:02] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[05:00:14] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:01:13] <caze> Are they all exactly 4 characters long?
[05:01:58] <Danilo82> yes, from AAAA to DDDD
[05:02:09] <Danilo82> 256 lines
[05:02:18] <Danilo82> 4 x 4 x 4 x 4
[05:02:32] <caze> Why do you have this in a file?
[05:03:22] <Danilo82> i need this to test a compression thing
[05:03:36] <Danilo82> but i need 3000000000 lines
[05:04:13] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[05:08:10] *** Quits: m4ho (~m4ho@81.20.119.6) (Ping timeout: 256 seconds)
[05:10:01] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[05:11:19] *** Quits: rgrinberg (~textual@2806:101e:7:6946:9d9a:387a:2ded:2505) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:11:29] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[05:13:05] <caze> Danilo82: https://ideone.com/MZCAo8
[05:13:32] *** Quits: random-nick (~random-ni@87.116.160.199) (Ping timeout: 240 seconds)
[05:13:47] <caze> Danilo82: What you are doing is in fact, you are picking a random number between 0 and 255.
[05:13:47] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[05:14:32] <caze> Danilo82: You are doing this in base 4, and instead of using the numerical digits 0, 1, 2, 3, you are using the digits A, B, C, D.
[05:15:17] <Danilo82> ye but i need it to be abcd
[05:15:28] <Danilo82> how do i use this code?
[05:15:37] *** Red_ is now known as Red
[05:15:41] <caze> Danilo82: It is ABCD
[05:15:49] <caze> Danilo82: Did you look at the output?
[05:17:02] <Danilo82> so i just run it and send the output to a file?
[05:17:15] <caze> Danilo82: Here is a version of the program where I change line 5 to be: char *digits = "0123"; and you can see how it works. https://ideone.com/2mdEqQ
[05:17:33] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[05:17:45] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[05:17:52] <caze> Danilo82: Yes.
[05:18:24] *** Joins: Satin (uid193953@user/Seten)
[05:18:37] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[05:19:02] *** Joins: fstd_ (~fstd@xdsl-85-197-54-43.nc.de)
[05:19:03] *** Joins: hsdjkfhfshfsi (~SomeAdmin@104-181-157-226.lightspeed.austtx.sbcglobal.net)
[05:19:22] *** Joins: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de)
[05:20:40] *** Quits: fstd (~fstd@xdsl-85-197-54-43.nc.de) (Read error: Connection reset by peer)
[05:22:43] *** Joins: begriffs (~begriffs@user/begriffs)
[05:22:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[05:23:40] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[05:23:44] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir)
[05:23:47] *** Joins: System_Error (~SystemErr@user/systemerror)
[05:24:23] <Danilo82> 3000000000 lines, not 11718750
[05:26:43] <SymbioticFemale> i dun it
[05:26:44] <caze> Danilo82: Reload
[05:27:05] <SymbioticFemale> Danilo82: caze: https://paste.debian.net/hidden/72187ac3/
[05:27:16] <SymbioticFemale> mine is ghetto but it works and should be fast
[05:28:10] <SymbioticFemale> it takes your input file, buffers it, then writes it out to the output file the number of times you specified
[05:28:42] <caze> In order.
[05:29:29] <SymbioticFemale> my version werks
[05:29:29] <caze> SymbioticFemale: https://ideone.com/ROMB42
[05:29:39] <Danilo82> ok, just one last thing, could you remove the new line thing? i believe would be better with ABCD only
[05:29:50] <caze> SymbioticFemale: Where is the shuffle?
[05:30:02] <SymbioticFemale> oh i didn't realize he wanted shuffle
[05:30:03] <caze> Danilo82: Then it will only be one line.
[05:30:04] <SymbioticFemale> lol
[05:30:19] <Danilo82> hmm
[05:30:22] <SymbioticFemale> nevermind then, use the caze version
[05:30:42] <caze> Danilo82: https://ideone.com/MZCAo8
[05:32:12] <Danilo82> shheet man, how much is a text file with 3000000000 lines in this case?
[05:32:20] <Danilo82> i'm over 30 gb now
[05:33:06] <caze> ,calc 5 * 3000000000 / 1024 / 1024 / 1024
[05:33:07] <candide> 5 * 3000000000 / 1024 / 1024 / 1024 = 13.9698386192322
[05:33:42] <Danilo82> what does that mean
[05:33:46] <caze> Should only be about 14 GB.
[05:34:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:35:12] <Danilo82> hmm
[05:35:25] <Danilo82> then something is wrong
[05:35:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[05:36:14] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:36:16] <caze> https://ideone.com/Im3jmB Here is a version where it only does 30 lines.
[05:36:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:37:27] *** Joins: bsdbandit01 (~bsdbandit@172.58.189.49)
[05:37:28] *** Quits: bsdbandit01 (~bsdbandit@172.58.189.49) (Read error: Connection reset by peer)
[05:39:47] *** Joins: pulse (~pulse@user/pulse)
[05:39:52] <Danilo82> ye
[05:40:23] <Danilo82> but 3000000000 keeps going
[05:41:32] *** Joins: Torr (~Torr@user/torr)
[05:41:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:41:47] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 250 seconds)
[05:41:56] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:41:57] *** Joins: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[05:43:23] *** Joins: cation21 (cation@user/cation)
[05:43:59] <fizzie> Did you by any chance just edit yourself the count from 11718750 to 3000000000, rather than take caze's later paste (which also changes the data type of `i`)? 
[05:44:22] <caze> lol
[05:44:27] <Danilo82> maybe
[05:44:29] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[05:44:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:44:49] <caze> That'll show you.
[05:45:03] *** Quits: divine (~divine@2001:470:8247:1::31) (Ping timeout: 250 seconds)
[05:45:13] <fizzie> ,cc printf("%d", INT_MAX); // often less than 3000000000
[05:45:15] <candide> fizzie: 2147483647
[05:45:44] *** Joins: divine (~divine@2001:470:8247:1::31)
[05:46:18] <Danilo82> ok i'm confuse now
[05:46:27] <Danilo82> what should i be using?
[05:46:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[05:46:33] <caze> I forget if I did unsigned for the first version.
[05:46:36] <Kit> arent we all confuse
[05:46:46] *** cation21 is now known as cation
[05:46:51] <fizzie> Danilo82: `long long`, like in the already-mentioned caze's later paste.
[05:47:35] <fizzie> Or at least I'm pretty sure I saw one of them use `long long`, I lost track already, there were so many.
[05:47:48] <caze> SymbioticFemale: https://ideone.com/ROMB42
[05:48:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:48:13] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:48:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[05:48:32] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:48:36] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:48:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[05:48:48] <caze> Err, Danilo82 https://ideone.com/ROMB42
[05:49:47] *** Joins: TheBeastie (~lcu@user/thebeastie)
[05:50:32] *** Quits: Beastie (~lcu@user/thebeastie) (Ping timeout: 240 seconds)
[05:50:44] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[05:50:52] *** Joins: cgesv (~cgesv@2a02:8109:b6bf:540c::a1a1)
[05:51:02] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[05:51:56] <cgesv> hey there i'm working on an assignment in c and have some problems. would anyone help me find the problem?
[05:52:18] <Kit> yea whats the issue?
[05:52:23] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[05:52:32] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:52:39] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:53:02] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[05:53:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:53:26] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:54:12] <cgesv> Kit: So the program runs as intended but I can't figure about why a free doesn't work. I get: "free(): double free detected in tcache 2" when trying to compile.
[05:55:13] <Kit> huh...
[05:55:40] <Kit> this is at compile time? is it a warning/error or what?
[05:55:47] <Kit> what compiler are you using
[05:55:55] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:56:27] <cgesv> Oh no, I'm sorry, it's at runtime
[05:56:33] <Kit> oh
[05:56:37] <cgesv> I'm using clang
[05:57:04] <Kit> so it seems that its trying to free something that has already been free'd
[05:57:39] <Kit> do you know what thing you're passing to `free` that is causing the error?
[05:57:55] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[05:59:07] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Client Quit)
[05:59:26] <cgesv> Maybe it's easier if I put the code on a hosting platform?
[05:59:39] <Kit> uh sure
[05:59:42] <Kit> yea
[06:00:20] <cgesv> https://bpa.st/BXVA
[06:00:43] <cgesv> The free at line 55 is posing the problem
[06:02:39] *** Joins: System_Error (~SystemErr@user/systemerror)
[06:03:22] <cgesv> So I'm trying to pop the first element of the stack, for this I keep the point of it in a temporary variable and it's value too. Then I reassign top telegram to the next one and try to free the memory of where the previous one was saved.
[06:04:46] <Kit> okay
[06:05:11] <Kit> are you trying to pop a value when the stack is empty?
[06:06:19] <cgesv> No, on line 49 I check if there is any element on the stack and if there isn't I just return NaN
[06:06:39] <Kit> i was about to mention that, yes
[06:07:13] <Kit> but i couldnt find any instance where you actually set anything to NULL
[06:07:55] *** System_Error is now known as StackOverflow
[06:08:09] <Kit> you need to make sure you set it to null, a pointer left uninitialized can to point to God-knows-where
[06:08:25] <Kit> and is typically not gonna be NULL
[06:08:25] *** StackOverflow is now known as System_Error
[06:08:33] <cgesv> well if i free the the element the astack->top is poiting too it should be null no?
[06:08:51] <Kit> no, when you free it you a
[06:09:01] <Kit> *also need to set it to null
[06:09:13] <Kit> oops, pressed enter too early lol
[06:09:16] <Kit> sorry
[06:09:23] <cgesv> oh no worries i got that
[06:09:25] <Kit> it doesnt set it to null for you
[06:09:34] *** Quits: Danilo82 (~Danilo82@190.89.245.44) (Quit: Client closed)
[06:09:42] <Kit> you see, free only de-allocs memory
[06:10:05] <Kit> doesnt de-alloc the pointer, only where the pointer is pointing to
[06:10:26] <Kit> so after you free it you need to set it to null
[06:10:44] <cgesv> i see, well the problem of not being able to free still exists
[06:11:35] <Kit> idk, i have to go now so somebody else would have to help ya
[06:11:40] <Kit> sorry
[06:12:12] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:12:34] <cgesv> Kit: ah :| you know anybody in here who'd be willing to help?
[06:21:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:21:47] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[06:22:06] <hohohoroutines> cgesv: recompile with -g -fsanitize=address,undefined
[06:22:20] <hohohoroutines> it will tell you when the first free and the second free occurred
[06:22:50] <hohohoroutines> that should reveal the actual problem
[06:24:14] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[06:24:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:25:44] <cgesv> hohohorouties: Hmm I doesn't seem to be free'd twice but some other issue: https://bpa.st/V65A
[06:25:51] *** Quits: alch (~alch@151.34.144.67) (Read error: Connection reset by peer)
[06:25:56] <cgesv> @hoh
[06:26:16] <cgesv> I'm sorry about that, this webclient is very weird.
[06:26:55] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:27:50] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.155)
[06:29:02] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.155) (Read error: Connection reset by peer)
[06:31:17] *** Joins: alch (~alch@151.68.174.231)
[06:32:44] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[06:34:21] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 252 seconds)
[06:34:32] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Client Quit)
[06:34:49] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[06:37:35] *** Joins: Guest48 (~Guest48@120.17.160.80)
[06:39:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:45:10] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 260 seconds)
[06:47:11] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:48:04] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[06:48:26] *** Joins: Wulf (~Wulf@user/wulf)
[06:49:02] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 256 seconds)
[06:49:36] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[06:51:26] *** Joins: rgrinberg (~textual@187.223.209.106)
[06:51:53] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:b247:dfc0:cca:1a0e)
[06:52:16] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:56:24] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[06:58:01] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:59:48] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[06:59:59] *** Joins: ferdna (~ferdna@user/ferdna)
[07:03:18] *** Quits: Guest48 (~Guest48@120.17.160.80) (Quit: Client closed)
[07:12:50] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:13:57] *** Joins: Itaru (~Itaru@ro2.flokinet.is)
[07:17:18] *** Joins: alimiracle (~alimiracl@37.238.46.48)
[07:18:47] <alimiracle> hi
[07:18:50] <alimiracle> how to save 9000000000000000000 to long var in c (armv7)
[07:19:46] <hohohoroutines> you cannot
[07:19:56] <hohohoroutines> ,qrpn 9000000000000000000 log2
[07:19:56] <candide> hohohoroutines: 62.9646
[07:20:07] <hohohoroutines> you can save it to long long
[07:20:31] <hohohoroutines> just barely
[07:22:34] <alimiracle> I try long long
[07:22:35] <alimiracle> but its gave me this error
[07:22:36] <alimiracle> e.c: In function ˜main:
[07:22:36] <alimiracle> e.c:4:5: warning: overflow in conversion from ˜long long int to long int changes value from ˜9000000000000000000 to ˜-494665728 [-Woverflow]
[07:22:37] <alimiracle>  q = 9000000000000000000;
[07:22:37] *** ChanServ sets mode: +o candide
[07:22:37] *** candide sets mode: +b *!~alimiracl@37.*
[07:22:37] <alimiracle>      ^~~~~~~~~~~~~~~~~~~
[07:23:23] <hohohoroutines> ,cc -m32 long long a = 9000000000000000000LL;
[07:23:26] <candide> hohohoroutines: no output: a = 9000000000000000000
[07:23:30] <hohohoroutines> try that
[07:23:53] *** candide sets mode: -b *!~alimiracl@37.*
[07:24:11] <hohohoroutines> candide: calm the fuck down
[07:25:30] <dodobrain> heh
[07:25:33] * dodobrain pets candide 
[07:25:43] * candide winks at d​odobrain
[07:25:44] * wroathe laughs at hohohoroutines 
[07:26:16] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:26:16] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[07:27:02] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:28:05] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[07:28:35] *** Quits: imp (~imp@192-141-191-232.alternativaip.net.br) (Quit: imp)
[07:28:52] *** Joins: imp (~imp@192-141-191-232.alternativaip.net.br)
[07:29:02] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Client Quit)
[07:29:29] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:29:31] <alimiracle> I try it now
[07:29:32] <alimiracle> its seme saved but in -
[07:29:32] <alimiracle> its gave me -number
[07:29:35] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[07:31:18] *** Quits: alimiracle (~alimiracl@37.238.46.48) (Quit: Client closed)
[07:31:49] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 240 seconds)
[07:32:30] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e90a:754e:bb67:72c9)
[07:32:34] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:33:29] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[07:35:06] *** Quits: cgesv (~cgesv@2a02:8109:b6bf:540c::a1a1) (Quit: Client closed)
[07:35:14] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:02] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:37:07] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:37:07] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[07:37:11] *** Quits: moog (~moog@107.77.244.121) (Remote host closed the connection)
[07:38:16] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:38:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[07:40:42] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[07:42:47] *** Joins: quartz (~quartz@user/quartz)
[07:42:50] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:42:50] *** Quits: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Read error: Connection reset by peer)
[07:43:36] *** Quits: imp (~imp@192-141-191-232.alternativaip.net.br) (Quit: imp)
[07:48:01] *** Joins: kdc (~kdc@196.211.197.159)
[07:53:03] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:53:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:54:21] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:55:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:55:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[07:55:49] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:56:55] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:57:12] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:57:48] *** Joins: slidercrank (~slidercra@user/slidercrank)
[07:59:50] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Ping timeout: 260 seconds)
[08:00:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:00:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:02:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:02:50] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[08:06:28] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[08:07:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:08:05] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[08:08:35] <kurahaupo> NRK[m]: "cpp" is a program, a bare C preprocessor; roughly the equivalent of gcc -E.  Using "cpp" to mean C++ is not recommended. (The only place this gets a pass is in a filename on a FAT filesystem where "+" isn't an allowed character; but .cc or .cxx are also options there.)
[08:09:25] *** Joins: nitrix (~nitrix@user/nitrix)
[08:09:54] <hohohoroutines> kurahaupo: does make not have an implicit rule that associates .cpp with being compiled with $(CXX) $(CXXFLAGS) ...
[08:10:04] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 256 seconds)
[08:12:01] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[08:12:06] *** Joins: quartz (~quartz@user/quartz)
[08:12:08] *** Quits: quartz (~quartz@user/quartz) (Client Quit)
[08:14:19] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:14:39] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:15:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:16:19] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Genius is one percent inspiration and ninety-nine percent perspiration)
[08:17:48] *** Joins: nitrix (~nitrix@user/nitrix)
[08:22:07] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 250 seconds)
[08:27:16] *** Joins: sebag (~guest@91.245.82.2)
[08:27:26] *** Quits: Dotz0cat (~Dotz0cat@h236.192.186.173.dynamic.ip.windstream.net) (Ping timeout: 268 seconds)
[08:30:05] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[08:30:09] <kurahaupo> pragma-: the genome of a sheep is about 20Tb, and the average ram weighs about 50 kg and so has about 5×10¹⁹ cellular nucleii, meaning that a ram should be able to store about 10³³ bits. Designing an access method is left as an exercise for the student.
[08:30:25] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[08:32:02] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[08:33:51] *** Joins: Dotz0cat (~Dotz0cat@h222.215.213.151.dynamic.ip.windstream.net)
[08:35:12] <hohohoroutines> s//i think so brain, but/
[08:40:12] *** Joins: ynnos (~sonny@8.6.144.252)
[08:41:22] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:43:28] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 268 seconds)
[08:43:28] *** ynnos is now known as sonny
[08:43:38] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[08:43:57] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:47:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:48:25] <kurahaupo> hohohoroutines: Yes the default make rules probably include that because you never know when Make might have to run on a fat fs. I guess the pass for ".cpp" on fat filesystems leaks into filenames everywhere because people don't like being told to rename their files
[08:49:07] *** Quits: gco (~gco@2601:647:5a00:223:858d:88ab:8bae:a673) (Quit: gco)
[08:49:45] <hohohoroutines> "you never know when make might have to run on a fat fs"
[08:50:06] <hohohoroutines> i know. i know that. make never has to run on a fat fs
[08:50:18] <kurahaupo> If I remember correctly, the preferred filename suffix for C++ source files was originally .C (as distinct from .c for C source files)
[08:50:24] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[08:51:01] <hohohoroutines> and if you ask the maintainers of gcc itself, the file extension for C++ source files is .c
[08:51:04] <kurahaupo> That certainly didn't survive the transition off Unix
[08:51:04] <hohohoroutines> lower case
[08:51:32] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[08:51:44] <kurahaupo> The C++ish source files inside gcc itself? Sure.
[08:52:15] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 250 seconds)
[08:52:23] *** Joins: Trashlord__ (~trash@user/trashlord)
[08:56:12] *** Quits: malloy (~jimery@116.30.222.36) (Ping timeout: 250 seconds)
[08:58:04] *** Joins: malloy (~jimery@116.30.222.36)
[09:06:34] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[09:11:41] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Read error: Connection reset by peer)
[09:14:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:35dd:94ed:cb4d:1568)
[09:14:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:35dd:94ed:cb4d:1568) (Changing host)
[09:14:13] *** Joins: skapata (~Skapata@user/skapata)
[09:17:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:19:29] *** Joins: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97)
[09:19:54] *** Joins: riksteri (d20812115c@2604:bf00:561:2000::1e6)
[09:20:01] *** Quits: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97) (Client Quit)
[09:21:01] *** Joins: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97)
[09:22:29] <katnis> has anyone here mastered the C language
[09:22:46] *** candide sets mode: -o candide
[09:35:16] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:38:46] *** Quits: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97) (Quit: ZZZzzz…)
[09:41:40] *** Joins: Rounin (~david@84.212.130.215)
[09:46:34] <nitrix> What method would you use to assess the levels of mastery?
[09:48:07] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:48:07] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[09:49:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:50:52] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[09:51:01] <hohohoroutines> a map of the mun might be useful
[09:51:24] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[09:58:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[09:59:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:02:21] <katnis> idk bc im noob
[10:05:40] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[10:06:35] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[10:09:11] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[10:10:34] *** Joins: Akiva (~Akiva@user/Akiva)
[10:14:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:15:58] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 268 seconds)
[10:16:27] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:27:52] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[10:28:47] *** Quits: alch (~alch@151.68.174.231) (Read error: Connection reset by peer)
[10:29:03] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[10:35:03] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[10:35:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:35:44] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[10:38:00] *** Joins: MrAureliusR_ (~MrAureliu@user/mraureliusr)
[10:38:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:39:04] *** Joins: phineas (~farawayas@103.160.128.7)
[10:39:07] *** Trashlord__ is now known as Trashlord
[10:39:24] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Ping timeout: 268 seconds)
[10:39:41] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:39:50] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:40:21] *** Quits: phineas (~farawayas@103.160.128.7) (Read error: Connection reset by peer)
[10:41:25] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Ping timeout: 240 seconds)
[10:41:57] *** Joins: divine_ (~divine@2001:470:8247:1::31)
[10:42:00] *** Quits: divine (~divine@2001:470:8247:1::31) (Read error: Connection reset by peer)
[10:42:04] *** Joins: phineas (~farawayas@103.160.128.7)
[10:42:22] *** Quits: phineas (~farawayas@103.160.128.7) (Read error: Connection reset by peer)
[10:42:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:44:04] *** Joins: phineas (~farawayas@103.160.128.7)
[10:46:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:47:03] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:47:08] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 265 seconds)
[10:47:43] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[10:49:31] *** Joins: PortableDave (~portabled@118.210.56.9)
[11:02:51] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[11:05:04] *** Joins: evocatus (~evocatus@91.211.251.87)
[11:05:32] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 240 seconds)
[11:08:23] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e90a:754e:bb67:72c9) (Quit: Leaving)
[11:10:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:11:21] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:12:30] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:13:01] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 240 seconds)
[11:14:48] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.200)
[11:15:06] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[11:19:23] *** Joins: jjido (~Denis@90.213.58.125)
[11:21:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:21:44] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:23:46] *** Quits: rahl (~rahl@102.114.128.177) (Ping timeout: 260 seconds)
[11:24:02] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:24:39] *** Joins: rahl (~rahl@102.114.178.137)
[11:25:39] *** Joins: alch (~alch@151.34.202.203)
[11:31:45] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[11:33:56] *** Joins: mrig (~AdiIRC@user/mrig)
[11:36:08] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 268 seconds)
[11:41:13] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:c2d:3f0b:27ac:be30)
[11:42:26] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:56] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[11:47:29] <smallville7123> ughhhhhhhh *starts writing a C preprocessor just so i diferenciate between an object-like macro and a function-like macro*
[11:49:14] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[11:49:32] *** Joins: pyook (~puke@user/puke)
[11:49:33] *** puke is now known as Guest534
[11:49:33] *** Quits: Guest534 (~puke@user/puke) (Killed (iridium.libera.chat (Nickname regained by services)))
[11:49:33] *** pyook is now known as puke
[11:52:15] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Ping timeout: 252 seconds)
[11:54:03] * smallville7123 also needs some way of function argument identification
[11:57:02] *** Joins: inlight (~inlight@157.35.23.138)
[11:57:03] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[11:57:03] *** Joins: inlight (~inlight@user/inlight)
[11:57:20] *** MrAureliusR_ is now known as MrAureliusR
[11:57:54] <smallville7123> what happens when you define a function macro with a different number of arguments than a C function of the same name?
[11:57:56] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[11:58:22] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[12:00:20] <smallville7123> eg       int foo(int one);  #define foo(a, b, out) { int r = a + b + out; out = r; };     int a = foo(1); foo(1,2, &a)
[12:01:13] <smallville7123> eg       int foo(int one) { return one + 1; }  #define foo(one, two, out) { int r = one + two + out; out = r; }     int a = foo(1); foo(1, 2, &a);
[12:01:38] <smallville7123> would this be a compile error?
[12:01:56] <smallville7123> or would this be valid
[12:06:33] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:07:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:08:11] *** Joins: lleo (~leo@89-200-32-114.mobile.kpn.net)
[12:08:54] *** Joins: evocatus_ (~evocatus@213.193.2.105)
[12:09:30] *** Quits: evocatus_ (~evocatus@213.193.2.105) (Remote host closed the connection)
[12:11:54] *** Quits: evocatus (~evocatus@91.211.251.87) (Ping timeout: 268 seconds)
[12:12:05] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:22:56] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:29:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:32:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:33:15] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:d99a:b6f1:553e:72aa) (Ping timeout: 250 seconds)
[12:34:08] *** Quits: phineas (~farawayas@103.160.128.7) (Remote host closed the connection)
[12:35:09] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[12:35:28] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:37:19] <dave0> smallville7123: the preprocessor runs first, so your macro would be expanded before any function calls
[12:37:39] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:53] * smallville7123 accidentally pokes myself in the eye ;-;
[12:38:30] <dave0> i believe there's a couple of macros that shadow variables in c ... like    enum { foo = 69; }; #define foo foo    then you can use #ifdef foo
[12:38:58] <dave0> maybe getchar and putchar
[12:39:09] <dave0> except they're functions not variables :-p
[12:39:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[12:40:52] <dave0> maybe i am making it up... i was sure glibc did that macro trick somewhere
[12:41:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:43:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[12:43:40] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:48:27] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 265 seconds)
[12:49:42] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[12:51:15] <smallville7123> how does the preprocessor know how many arguments a macro should be called with?
[12:51:56] <smallville7123> also what is the difference between #define foo(a) and #define foo(int a)
[12:53:07] <smallville7123> can the latter be invoked as foo("STRING"); or would it error?
[12:54:03] <dave0> preprocessor macros is not a function... foo(int a) is a syntax error
[12:54:25] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[12:54:38] <smallville7123> function-like macro *
[12:55:15] <dave0> still just a macro.. macro with arguments
[12:55:27] <dave0> but again, it's just string substitution
[12:56:40] <dave0> sometimes they are real handy, but whenever i can, i replace    #define num 69   with  enum { num=69 };   and   #define foo(x) { printf("foo %d ", x); }  with a static inline function
[12:56:54] <dave0> you get better error checking from the compiler
[12:56:59] <dave0> and type checks
[12:57:23] *** Joins: rgrinberg (~textual@187.223.209.106)
[12:58:18] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[12:58:37] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[12:59:36] <smallville7123> ok
[12:59:42] <dave0> an example of where a macro is real handy is swap ..    #define swap(a, b) { temp = (a); (a) = (b); (b) = temp; }
[12:59:48] *** Joins: Oxfuxxx (~sharky@37.120.204.133)
[12:59:53] <dave0> don't need to fuss with pointers
[13:01:14] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[13:05:15] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:09:09] *** Joins: pnill_ (~pnill@ip170.ip-54-39-37.net)
[13:09:23] *** Joins: amosbird- (~amosbird@13.75.119.182)
[13:09:24] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[13:09:25] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[13:09:42] *** Joins: gdarko (~me@dg.mk)
[13:09:49] *** Joins: hirish_ (~hirish@ip85.ip-137-74-20.eu)
[13:09:58] *** Joins: plastico (~plastico@neomutt/plastico)
[13:10:02] *** Joins: coruja_ (~coruja@user/coruja)
[13:10:04] *** Server sets mode: +Cntz 
[13:10:05] *** Joins: pstef_ (~pstef@user/pstef)
[13:10:05] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:20] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[13:10:23] *** Joins: mattgirv_ (quassel@apps.fossgalaxy.com)
[13:10:32] *** Joins: mdw (~root@159.65.86.163)
[13:10:35] *** Joins: mtg_ (~mtg@209.250.241.226)
[13:10:37] *** Joins: zaratustra_ (~zaratustr@idlerpg/player/zaratustra)
[13:10:38] *** Joins: Tom (~Tom^@user/tom/x-0773808)
[13:10:43] *** Joins: nop (~Murray@89.109-247-180.customer.lyse.net)
[13:10:46] *** Joins: Wulf4 (~Wulf@user/wulf)
[13:10:46] *** Joins: alch_ (~alch@151.34.202.203)
[13:10:57] *** Joins: bsandro_ (~bsandro@139.138.197.56)
[13:11:05] *** Joins: Teckla_ (~Teckla@user/teckla)
[13:11:06] *** nop is now known as Guest856
[13:11:08] *** Joins: jan61 (~jan6@tilde.team/user/jan6)
[13:11:08] *** Quits: jan61 (~jan6@tilde.team/user/jan6) (Excess Flood)
[13:11:10] *** Joins: jonbryan_ (~ea@user/jonbryan)
[13:11:11] *** Joins: rcf1 (rcf@iceland.sdf.org)
[13:11:22] *** Joins: g2anj_ (~v@39.112.227.198)
[13:11:22] *** Joins: gdd1 (~gdd@129.199.146.230)
[13:11:23] *** Joins: xa0s_ (~xa0s@mab.sdf.org)
[13:11:24] <smallville7123> is #define foo(a,) an error?
[13:11:28] *** Joins: jan61 (~jan6@tilde.team/user/jan6)
[13:11:28] *** Quits: jan61 (~jan6@tilde.team/user/jan6) (Excess Flood)
[13:11:30] *** Joins: bonbon_ (~bonbon@103.111.178.109)
[13:11:30] *** Quits: bonbon_ (~bonbon@103.111.178.109) (Changing host)
[13:11:30] *** Joins: bonbon_ (~bonbon@user/bonbon)
[13:11:33] *** Joins: houze_ (~houze@vps-5d15656a.vps.ovh.net)
[13:11:33] *** Quits: houze_ (~houze@vps-5d15656a.vps.ovh.net) (Changing host)
[13:11:33] *** Joins: houze_ (~houze@user/houze)
[13:11:43] *** Joins: finstern1s (~X@23.226.237.192)
[13:11:48] *** Joins: jan61 (~jan6@tilde.team/user/jan6)
[13:11:48] *** Quits: jan61 (~jan6@tilde.team/user/jan6) (Excess Flood)
[13:12:02] *** Tom is now known as Guest5342
[13:12:08] *** Joins: jan61 (~jan6@tilde.team/user/jan6)
[13:12:08] *** Quits: jan61 (~jan6@tilde.team/user/jan6) (Excess Flood)
[13:12:15] *** Joins: Nitrousoxide_ (~msdos@user/nitrousoxide)
[13:12:22] *** Joins: samir_ (~azureuser@user/samir)
[13:13:50] *** Joins: nun- (~nun@178.115.236.156.static.drei.at)
[13:14:08] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:14:18] <dave0> should be
[13:14:26] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:14:26] <dave0> ,cc #define foo(a,)
[13:14:27] <candide> dave0: [warning: preprocessor directive not terminated by \n, the remainder of the line will be part of this directive] error: expected parameter name, found ")"
[13:14:57] <dave0> ,cc #define foo(a,) puts(a);
[13:14:57] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:14:59] <candide> dave0: Same output.
[13:15:13] <dave0> the robot is unhappy with it
[13:15:29] *** Joins: smeso_ (~smeso@user/smeso)
[13:15:29] *** Quits: smeso (~smeso@user/smeso) (Killed (zirconium.libera.chat (Nickname regained by services)))
[13:15:29] *** smeso_ is now known as smeso
[13:16:22] <APic> Cyborgs > *
[13:16:24] <APic> srsly
[13:16:25] <APic> 😉
[13:16:43] *** Quits: Oxfuxxx (~sharky@37.120.204.133) (*.net *.split)
[13:16:44] *** Quits: inlight (~inlight@user/inlight) (*.net *.split)
[13:16:44] *** Quits: alch (~alch@151.34.202.203) (*.net *.split)
[13:16:44] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.200) (*.net *.split)
[13:16:44] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[13:16:44] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[13:16:44] *** Quits: slidercrank (~slidercra@user/slidercrank) (*.net *.split)
[13:16:44] *** Quits: sebag (~guest@91.245.82.2) (*.net *.split)
[13:16:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[13:16:44] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (*.net *.split)
[13:16:44] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[13:16:44] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[13:16:44] *** Quits: noonien (~noonien@user/noonien) (*.net *.split)
[13:16:44] *** Quits: arinov (~arinov@213.194.126.155) (*.net *.split)
[13:16:44] *** Quits: xa0s (~xa0s@mab.sdf.org) (*.net *.split)
[13:16:44] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[13:16:44] *** Quits: rcf (~rcf@iceland.sdf.org) (*.net *.split)
[13:16:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[13:16:44] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (*.net *.split)
[13:16:44] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[13:16:44] *** Quits: nuxil (~nuxil@141.195.51.213) (*.net *.split)
[13:16:44] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[13:16:44] *** Quits: luke-jr (~luke-jr@user/luke-jr) (*.net *.split)
[13:16:44] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[13:16:44] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[13:16:44] *** Quits: Viewday11 (~Viewday@user/viewday) (*.net *.split)
[13:16:44] *** Quits: gdd (~gdd@129.199.146.230) (*.net *.split)
[13:16:44] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[13:16:44] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[13:16:44] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[13:16:44] *** Quits: zlg (~zlg@user/zlg) (*.net *.split)
[13:16:44] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[13:16:44] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (*.net *.split)
[13:16:44] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[13:16:44] *** Quits: samir (~azureuser@user/samir) (*.net *.split)
[13:16:44] *** Quits: g2anj (~v@39.112.227.198) (*.net *.split)
[13:16:44] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (*.net *.split)
[13:16:44] *** Quits: elroo (~elroo@45.133.4.112) (*.net *.split)
[13:16:44] *** Quits: alicef (~none@gentoo/developer/alicef) (*.net *.split)
[13:16:44] *** Quits: noose (~noose@user/noose) (*.net *.split)
[13:16:44] *** Quits: coruja (~coruja@user/coruja) (*.net *.split)
[13:16:44] *** Quits: kapil (~kapil@o-k.website) (*.net *.split)
[13:16:44] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[13:16:44] *** Quits: kassle (~kassle@202.73.24.66) (*.net *.split)
[13:16:44] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (*.net *.split)
[13:16:44] *** Quits: bonbon (~bonbon@user/bonbon) (*.net *.split)
[13:16:44] *** Quits: mdw_ (~root@159.65.86.163) (*.net *.split)
[13:16:44] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[13:16:45] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (*.net *.split)
[13:16:45] *** Quits: vinay (~Vinay@user/vinay-keshava) (*.net *.split)
[13:16:45] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[13:16:45] *** Quits: bsandro (~bsandro@139.138.197.56) (*.net *.split)
[13:16:45] *** Quits: mtg (~mtg@209.250.241.226) (*.net *.split)
[13:16:45] *** Quits: avar (avar@vm.nix.is) (*.net *.split)
[13:16:45] *** Quits: kst (~user@cpe-70-95-182-43.san.res.rr.com) (*.net *.split)
[13:16:45] *** Quits: Xgc (~Xgc@user/xgc) (*.net *.split)
[13:16:45] *** Quits: crudo (~crudo@livredigital.com) (*.net *.split)
[13:16:45] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[13:16:45] *** Quits: finalsummer (~finalsumm@user/finalsummer) (*.net *.split)
[13:16:45] *** Quits: Mindiell (~Mindiell@python/afpy/mindiell) (*.net *.split)
[13:16:45] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[13:16:45] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[13:16:45] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[13:16:45] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (*.net *.split)
[13:16:45] *** Quits: mrec (~markus@sundtek.de) (*.net *.split)
[13:16:45] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (*.net *.split)
[13:16:45] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (*.net *.split)
[13:16:45] *** Quits: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu) (*.net *.split)
[13:16:45] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[13:16:45] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (*.net *.split)
[13:16:45] *** Quits: LIERO (~no@user/liero) (*.net *.split)
[13:16:45] *** Quits: kfv (~kfv@mail.kfv.io) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[13:16:45] *** Quits: gdarko_ (~me@dg.mk) (*.net *.split)
[13:16:45] *** Quits: jan6 (~jan6@tilde.team/user/jan6) (*.net *.split)
[13:16:45] *** Quits: houze (~houze@user/houze) (*.net *.split)
[13:16:45] *** Quits: mcinglis (~mcinglis@user/mcinglis) (*.net *.split)
[13:16:45] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[13:16:45] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (*.net *.split)
[13:16:45] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[13:16:45] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (*.net *.split)
[13:16:45] *** Quits: tetrahedron (~derelict@user/derelict) (*.net *.split)
[13:16:45] *** Quits: beneth (~beneth@ip208.ip-54-36-198.eu) (*.net *.split)
[13:16:45] *** Quits: FLHerne (~flh@flherne.uk) (*.net *.split)
[13:16:45] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[13:16:46] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[13:16:46] *** Quits: pstef (~pstef@user/pstef) (*.net *.split)
[13:16:46] *** Quits: asm (~alexander@user/asm) (*.net *.split)
[13:16:46] *** Quits: zaratustra (~zaratustr@idlerpg/player/zaratustra) (*.net *.split)
[13:16:46] *** Quits: jonbryan (~ea@user/jonbryan) (*.net *.split)
[13:16:46] *** Wulf4 is now known as Wulf
[13:16:46] *** slavfox_ is now known as slavfox
[13:16:46] *** polyrob_ is now known as polyrob
[13:16:46] *** coruja_ is now known as coruja
[13:16:46] *** ultera- is now known as ultera
[13:16:46] *** FLHerne_ is now known as FLHerne
[13:16:46] *** noose_ is now known as noose
[13:16:46] *** mr_ab9 is now known as mr_ab
[13:16:54] *** lukedashjr is now known as luke-jr
[13:16:56] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[13:17:39] *** Joins: inlight (~inlight@157.35.23.138)
[13:17:39] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[13:17:39] *** Joins: inlight (~inlight@user/inlight)
[13:21:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:21:22] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:21:51] *** Joins: Oxfuxxx (~sharky@37.120.204.133)
[13:21:51] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[13:21:51] *** Joins: sebag (~guest@91.245.82.2)
[13:21:51] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[13:21:51] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[13:21:51] *** Joins: noonien (~noonien@user/noonien)
[13:21:51] *** Joins: arinov (~arinov@213.194.126.155)
[13:21:51] *** Joins: Viewday11 (~Viewday@user/viewday)
[13:21:51] *** Joins: zlg (~zlg@user/zlg)
[13:21:51] *** Joins: elroo (~elroo@45.133.4.112)
[13:21:51] *** Joins: kapil (~kapil@o-k.website)
[13:21:51] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[13:21:51] *** Joins: vinay (~Vinay@user/vinay-keshava)
[13:21:51] *** Joins: avar (avar@vm.nix.is)
[13:21:51] *** Joins: crudo (~crudo@livredigital.com)
[13:21:51] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:21:51] *** Joins: Mindiell (~Mindiell@python/afpy/mindiell)
[13:21:51] *** Joins: finalsummer (~finalsumm@user/finalsummer)
[13:21:51] *** Joins: SpringSprocket (~srv@hobby.esselfe.ca)
[13:21:51] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[13:21:51] *** Joins: neunon (~neunon@user/neunon)
[13:21:51] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[13:21:51] *** Joins: mrec (~markus@sundtek.de)
[13:21:51] *** Joins: nisstyre (~wes@user/nisstyre)
[13:22:30] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[13:22:57] *** Joins: Colt (~Colt@user/colt)
[13:23:16] *** Joins: asm (~alexander@burner.asm89.io)
[13:23:36] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[13:24:38] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[13:26:43] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:c5ba:9526:bee0:c4f1)
[13:27:27] *** Joins: beneth (~beneth@ip208.ip-54-36-198.eu)
[13:32:06] *** Quits: Zenton (~user@user/zenton) (Read error: Connection reset by peer)
[13:32:56] *** Joins: somlis (~somlis@user/somlis)
[13:33:34] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:34:33] *** Joins: Zenton (~user@user/zenton)
[13:35:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:36:09] *** Quits: lleo (~leo@89-200-32-114.mobile.kpn.net) (Quit: beyond time space in laws)
[13:37:02] *** Quits: Oxfuxxx (~sharky@37.120.204.133) (Ping timeout: 256 seconds)
[13:37:57] *** Joins: Zophirel (~Zophirel@93-35-145-87.ip55.fastwebnet.it)
[13:38:39] <sdfgsdfg> hello how are you 
[13:39:07] <Zophirel> could someone tell me why this is failing? https://bpa.st/672A
[13:41:50] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Quit: Leaving)
[13:43:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[13:44:59] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[13:45:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:45:06] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:46:09] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[13:47:56] *** Lord_of_Life_ is now known as Lord_of_Life
[13:49:34] *** Joins: PortableDave (~portabled@118.210.56.9)
[13:51:59] <TheBeastie> Zophirel: 1) collection can be NULL 2) there's no need to set collection->words to NULL after free() as you are going to free also collections.  3) there's no neel to set collection parameter, as it is getting out of scope immediately after the assignment.
[13:51:59] *** Joins: Klinda (~superleag@user/klinda)
[13:53:13] <Zophirel> mmh ok my idea was just to know if a collection has been released checking if the value is NULL
[13:53:23] <Zophirel> there is no way to do that?
[13:53:29] <TheBeastie> 4) there's no info about what collection_init() does, and 5) test_collection will continue to have it's value, as you have assigned NULL to the local ***copy*** of the value (parameters are pased ***by value*** in C)
[13:53:42] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:53:47] *** Joins: _kimchi (~kimchi@87.247.123.112)
[13:54:21] *** Quits: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:54:36] *** Joins: ko (~i.am@user/marlboro)
[13:54:47] <TheBeastie> no.... no way as you pass only the value of test_collection, pass a reference to it.  By the way, no info is returned from free() so no way to know if free() was successful or not.
[13:55:22] *** Joins: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de)
[13:55:24] <TheBeastie> (free() indeed is always sucessful, except if you pass it an incorrect value)
[13:55:44] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[13:55:53] <Zophirel> collection_init, just malloc the space according to the number passed, and initialize the remaining fields, i know that no info is returned by free this is why i was  trying to use NULL but i think it's pointless now
[13:55:53] <TheBeastie> this is, something you have not got with malloc() or something you have already free()d
[13:56:18] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 256 seconds)
[13:56:19] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[13:56:57] *** Joins: s1b1 (~s1b1@user/s1b1)
[13:57:08] <TheBeastie> it is pointless... of course... but you can  do it explicitly after coll_free(), or pass test_collection by reference with a double pointer parameter.
[13:57:16] *** Joins: soul-d (~uknown@user/soul-d)
[13:59:36] *** Joins: strajder (~strajder@user/strajder)
[14:00:54] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:02:25] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:02:48] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:03:49] *** Quits: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:04:43] *** Joins: seninha (~seninha@user/seninha)
[14:06:22] *** Joins: m4ho (~m4ho@p5098be52.dip0.t-ipconnect.de)
[14:07:11] *** Joins: PortableDave (~portabled@118.210.56.9)
[14:10:56] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:14:20] *** Joins: Kev_ (~Kev@2a01cb0400149f00417072b907469552.ipv6.abo.wanadoo.fr)
[14:17:51] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[14:19:24] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[14:19:38] *** Joins: mrig (~AdiIRC@user/mrig)
[14:24:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:27:39] <Zophirel> TheBeastie thanks for your help
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:32:48] *** Joins: fwg (~fwg@user/fwg)
[14:33:07] *** Joins: Atque (~Atque@user/atque)
[14:36:52] <TheBeastie> yaw Zophirel 
[14:38:51] <TheBeastie> IMHO it is best that you assign NULL to the pointer behind the call to coll_free(), the code gets more readable (without having to use double pointers, which makes the code inside far more obscure) and you are sure the pointer outside gets invalid.
[14:39:05] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[14:39:59] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 250 seconds)
[14:41:21] <TheBeastie> this way you don't need to make the TEST_ASSERT_NULL() at all.
[14:45:18] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[14:45:38] *** Joins: NEYi (~NEYi@109.251.216.38)
[14:49:00] <Zophirel> what do you mean by "behind"?
[14:50:51] <TheBeastie> after
[14:51:33] <TheBeastie> coll_free(test_collection);
[14:51:58] <TheBeastie> test_collection = NULL;  /* instead of TEST_ASSERT_NULL(test_collection); */
[14:52:22] <TheBeastie> or
[14:52:59] <TheBeastie> #define COLL_FREE(parm) do{coll_free(parm); parm = NULL;}while(0)
[14:53:45] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[14:54:00] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[14:56:37] <TheBeastie> #define COLL_FREE(parm) do{coll_free(parm); (parm) = NULL;}while(0) /* better */
[14:57:12] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:57:27] *** Joins: gerwand (~gerwand@83.142.187.86)
[14:58:25] *** Quits: strajder (~strajder@user/strajder) (Ping timeout: 250 seconds)
[14:59:27] <TheBeastie> #define COLL_FREE(__parm) do{Words*_parm=__parm;coll_free(_parm);_parm=0;}while(0) /* even better, to avoid double expansion of macro parameter */
[15:04:58] *** Quits: Guest856 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[15:05:18] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[15:07:10] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[15:07:16] *** Joins: arinov (~arinov@176.89.29.127)
[15:08:17] *** Joins: magla (~gelignite@55d41c14.access.ecotel.net)
[15:10:37] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:11:11] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 250 seconds)
[15:11:43] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[15:13:18] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:13:31] <fizzie> Uh, that last macro seems entirely pointless.
[15:13:58] <fizzie> It sets to null the variable `_parm`, which goes out of scope immediately after it gets set to null.
[15:16:11] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[15:18:15] <aosync> what's the point of doing do{ } while(0); ?
[15:19:03] <fizzie> It makes the macro usable as an expression even in contexts like `if (x) COLL_FREE(x->p)`.
[15:19:13] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[15:19:32] <fizzie> And before you ask, it can't be just `{ ... }` because that'd break `if (x) COLL_FREE(x->p); else something_else();`.
[15:20:07] <fizzie> Or http://c-faq.com/cpp/multistmt.html for the more verbose answer.
[15:20:37] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[15:22:13] *** Joins: u0_a391 (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[15:22:13] *** Quits: alch_ (~alch@151.34.202.203) (Read error: Connection reset by peer)
[15:22:18] *** u0_a391 is now known as Kit
[15:24:09] <Zophirel> TheBeastie aaah ok yeah assign it after the call make sense since if  the free dosen't the process will just report an error, about the macro i'm really a noob
[15:25:15] <TheBeastie> and if you have to put the test macro after every free, why try to assign it inside and not put the assignment in place of the test?
[15:26:30] *** Joins: alch (~alch@151.34.166.59)
[15:26:44] <dave0> i think it was a typo of  __parm=0;oh it wasnt?
[15:27:12] <TheBeastie> it wasn't, it allows you to use the macro without having to #include the definition of NULL
[15:27:26] <dave0> i meant double underscore
[15:27:50] *** Joins: mokulus (~mokulus@user/mokulus)
[15:28:37] <TheBeastie> the double underscore is to distinguish the _parm macro parameter from the __parm local variable... they both cannot be named as normal identifiers for the case your pointer happen to be called the same, the macro fails.
[15:28:57] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Remote host closed the connection)
[15:29:07] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[15:29:40] *** Joins: reset (~reset@user/reset)
[15:29:51] <dave0> the only way i can think of to not expand __param twice is use a pointer... #define COLL_FREE(__param) do{Words**_param=&(__param);free(*_param);*_param=0;}while(0)
[15:30:01] *** Joins: random-nick (~random-ni@87.116.181.93)
[15:30:10] <TheBeastie> i'm abusing of underscored identifiers... but the macro will fail if you call it as COLL_FREE(_parm) or COLL_FREE(__parm)
[15:31:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[15:31:47] <dave0> inline function/macro would be nice here..   #define COLL_FREE(x) coll_free(&(x))     static inline void coll_free(Words **p) { free(*p); *p = 0; }
[15:32:10] <TheBeastie> the use of a local variable is to make the expansion of _parm only once, so if you use as parameter an expression with colateral effects, it will not fail for being called twice.
[15:32:23] <fizzie> Yes, but it defeats the purpose of the macro.
[15:32:58] <TheBeastie> inline function has the same problem as the original, you can pass only by value parameters, so you finally end having to call the assignment statement... 
[15:33:02] <dave0> TheBeastie: but you wanted to change the parameter to NULL
[15:33:32] <TheBeastie> oh yes!!!! I didn't realice... hahahahahahahahha.... 
[15:33:41] <TheBeastie> I made the same mistake I wanted to avoid.... 
[15:34:14] <TheBeastie> that's true... you have to pass a variable... not an rvalue... that's true... then the first version of the macro suffices.
[15:34:53] *** Quits: asm (~alexander@burner.asm89.io) (Changing host)
[15:34:53] *** Joins: asm (~alexander@user/asm)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[15:41:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:42:09] *** Joins: pulse (~pulse@user/pulse)
[15:43:36] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Remote host closed the connection)
[15:44:33] <sirdidymus>            jjjb ,j j                                                                                                                                                               
[15:45:37] <sirdidymus> question -- I am lookinga t nethack source -- there are many functions that don't take pointers , and return void .. how can they affect gamestate, or am I missing something about scoping? no globals being changed either.. IE https://github.com/NetHack/NetHack/blob/NetHack-3.7/src/mkroom.c#L229
[15:45:48] *** Quits: pstef_ (~pstef@user/pstef) (Ping timeout: 240 seconds)
[15:46:57] *** Quits: xa0s_ (~xa0s@mab.sdf.org) (Quit: leaving)
[15:47:19] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Quit: Client closed)
[15:47:20] <dave0> sirdidymus: mkzoo calls pick_room .. maybe that changes things?
[15:47:23] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[15:47:25] <sirdidymus> ah never mind ,  I missed the pick room call
[15:47:27] <sirdidymus> yeah it does 
[15:47:44] <sirdidymus> I am doofus , thanks 
[15:48:29] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:48:41] *** Joins: lleo (~leo@89-200-32-114.mobile.kpn.net)
[15:48:49] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Remote host closed the connection)
[15:48:58] *** Joins: u0_a391 (~u0_a391@2600:380:bc45:adef:d3fa:1726:dfdf:e083)
[15:49:22] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[15:49:31] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:49:41] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Client Quit)
[15:49:56] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:50:02] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 240 seconds)
[15:52:37] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 240 seconds)
[15:53:55] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[15:54:37] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[15:55:01] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[15:55:08] *** Joins: mokulus (~mokulus@user/mokulus)
[15:56:05] *** Quits: mokulus (~mokulus@user/mokulus) (Client Quit)
[15:56:31] *** Joins: strajder (~strajder@user/strajder)
[15:58:45] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[16:00:09] *** Joins: strajder_ (~strajder@user/strajder)
[16:00:31] *** Joins: pstef (~pstef@user/pstef)
[16:00:42] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Remote host closed the connection)
[16:01:07] *** Xgc_ is now known as Xgc
[16:02:09] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[16:02:09] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[16:02:26] *** Joins: strajder (~strajder@user/strajder)
[16:03:53] *** Quits: sebag (~guest@91.245.82.2) (Quit: WeeChat 1.6)
[16:04:34] <sirdidymus> wow there is a LOT of global state here 
[16:04:37] *** Joins: jjido (~Denis@90.213.58.125)
[16:04:38] *** Quits: jjido (~Denis@90.213.58.125) (Client Quit)
[16:05:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:e138:977f:7375:1046)
[16:05:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:e138:977f:7375:1046) (Changing host)
[16:05:17] *** Joins: skapata (~Skapata@user/skapata)
[16:05:37] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[16:05:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:06:50] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[16:10:45] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[16:12:20] <vdamewood> sirdidymus: A lot of global state is often unavoidable in games.
[16:12:52] <supakeen> either that or you have pointers to a Game* everywhere
[16:12:57] <supakeen> while never actually running two games
[16:14:02] *** u0_a391 is now known as Kit
[16:16:24] *** Joins: Torr (~Torr@user/torr)
[16:17:52] *** Joins: System_Error (~SystemErr@user/systemerror)
[16:19:11] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[16:19:44] *** Quits: lleo (~leo@89-200-32-114.mobile.kpn.net) (Quit: beyond time space in laws)
[16:20:49] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:22:05] *** Quits: krissmaster (~kriss@213.239.83.90) (Ping timeout: 265 seconds)
[16:22:25] *** Quits: Zophirel (~Zophirel@93-35-145-87.ip55.fastwebnet.it) (Quit: Connection closed)
[16:22:59] *** Joins: kexec (~kexec@user/kexec)
[16:24:19] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[16:24:36] <kurahaupo> vdamewood: having a few singleton aggregate objects can provide namespaces to help organise things. It can make it clearer what needs to be saved or can be discarded when creating "saved games"
[16:28:50] *** Joins: kexec58 (~kexec@user/kexec)
[16:29:15] *** Quits: kexec (~kexec@user/kexec) (Killed (NickServ (GHOST command used by kexec58)))
[16:29:22] *** kexec58 is now known as kexec
[16:30:21] *** Quits: gerwand (~gerwand@83.142.187.86) (Quit: gerwand)
[16:34:00] <rindolf> vdamewood: hey, sup?
[16:35:05] *** LIERO_ is now known as LIERO
[16:35:17] *** Quits: LIERO (~no@vmi473477.contaboserver.net) (Changing host)
[16:35:17] *** Joins: LIERO (~no@user/liero)
[16:36:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:36:12] *** Joins: constxd (~brad@192.75.101.164)
[16:38:17] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[16:38:44] *** Guest5342 is now known as Tom^
[16:40:49] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[16:41:22] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:41:39] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:41:58] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[16:43:32] *** Quits: Kit (~u0_a391@2600:380:bc45:adef:d3fa:1726:dfdf:e083) (Ping timeout: 240 seconds)
[16:45:20] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:c2d:3f0b:27ac:be30) (Quit: Leaving)
[16:46:43] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[16:49:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:49:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:53:38] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[16:54:39] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[16:55:24] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[16:57:43] *** Joins: stonkey (~stonkey@user/stonkey)
[16:59:54] <kurahaupo> TheBeastie: what about COLL_FREE(*p++); ?
[17:00:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[17:01:29] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:02:37] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[17:04:18] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:392b:a9c9:370d:e95f)
[17:10:22] *** Joins: iomari892 (~iomari891@197.210.53.76)
[17:11:13] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:13:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:14:58] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:15:11] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[17:16:01] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[17:17:38] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[17:21:47] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[17:23:04] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:24:04] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:24:14] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:26:28] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[17:26:40] *** doofenshmirtz is now known as vanessa
[17:26:52] *** Joins: mrig (~mrig@user/mrig)
[17:27:55] *** Joins: Kit (~u0_a391@2600:380:bc45:adef:d3fa:1726:dfdf:e083)
[17:29:34] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:30:39] *** Quits: kexec (~kexec@user/kexec) (Quit: Client closed)
[17:32:31] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[17:32:39] *** Quits: Kit (~u0_a391@2600:380:bc45:adef:d3fa:1726:dfdf:e083) (Ping timeout: 265 seconds)
[17:32:47] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[17:33:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[17:34:11] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:34:39] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:36:08] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Remote host closed the connection)
[17:37:49] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[17:39:02] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[17:41:02] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:43:32] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Ping timeout: 240 seconds)
[17:48:57] *** Joins: moog (~moog@107.126.53.25)
[17:51:51] *** Joins: sonny (~sonny@8.6.144.252)
[17:52:10] *** joev1 is now known as joev
[17:57:02] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:57:32] *** Joins: monkey_ (~user@181.114.17.106)
[17:59:17] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[18:00:01] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[18:02:39] *** Joins: jan6 (jan6@tilde.team/user/jan6)
[18:07:13] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[18:07:26] *** Joins: u0_a391 (~u0_a391@64.85.173.130)
[18:07:45] *** Quits: _kimchi (~kimchi@87.247.123.112) (Quit: Leaving)
[18:10:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:10:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:10:07] *** Joins: wroathe (~wroathe@user/wroathe)
[18:10:45] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[18:11:10] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[18:12:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:12:33] *** u0_a391 is now known as Kit
[18:15:03] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[18:18:38] *** Quits: Teckla_ (~Teckla@user/teckla) (Quit: leaving)
[18:19:17] *** Joins: Teckla (~Teckla@user/teckla)
[18:20:55] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:25:41] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 252 seconds)
[18:26:59] *** Joins: meator (~meator@user/meator)
[18:27:32] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[18:28:38] *** Joins: fwg (~fwg@user/fwg)
[18:29:50] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[18:32:27] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[18:35:35] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 252 seconds)
[18:36:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:38:09] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[18:40:36] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[18:49:33] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:49:33] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[18:52:20] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:53:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:53:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:53:10] *** Joins: wroathe (~wroathe@user/wroathe)
[18:54:35] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:4913:cfb7:6592:7f83)
[18:55:52] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[18:57:37] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:392b:a9c9:370d:e95f) (Ping timeout: 250 seconds)
[18:57:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[19:03:42] *** Joins: EdFletcher (~PKD@user/edfletcher)
[19:03:53] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 250 seconds)
[19:04:56] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:07:15] *** Joins: meator (~meator@user/meator)
[19:08:20] *** Joins: inlight (~inlight@157.35.23.138)
[19:08:20] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[19:08:20] *** Joins: inlight (~inlight@user/inlight)
[19:09:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[19:11:00] *** Joins: nvmd (~nvmd@user/nvmd)
[19:15:19] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:15:39] *** Joins: shivesh (~shivesh@user/shivesh)
[19:19:13] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:22:51] *** Quits: alch (~alch@151.34.166.59) (Read error: Connection reset by peer)
[19:23:59] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[19:26:51] *** Joins: alch (~alch@151.34.171.80)
[19:28:05] *** Joins: mahmutov (~mahmutov@37.155.36.178)
[19:29:09] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[19:29:19] *** Quits: iomari892 (~iomari891@197.210.53.76) (Quit: WeeChat 3.3)
[19:30:05] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[19:30:29] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[19:31:38] *** Joins: iomari891 (~iomari891@197.210.52.156)
[19:32:36] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[19:33:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[19:35:38] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:24da:6c99:9324:ec4d) (Ping timeout: 260 seconds)
[19:35:38] *** Joins: arinov (~arinov@176.89.29.127)
[19:35:39] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[19:37:49] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[19:43:00] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[19:43:28] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[19:44:23] *** Quits: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com) (Quit: leaving)
[19:46:39] *** Quits: divine_ (~divine@2001:470:8247:1::31) (Quit: leaving)
[19:46:54] *** Joins: divine (~divine@2001:470:8247:1::31)
[19:47:12] <the_lanetly_052> most of time I do avoid to use cmov (for branchless execution) instead of branch but worth it to use https://news.ycombinator.com/item?id=29540416
[19:47:13] <candide> Title of the_lanetly_052's link: Show HN: 10-40% faster LZMA decoder using x86 CMOVcc | Hacker News
[19:48:37] *** Quits: magla (~gelignite@55d41c14.access.ecotel.net) (Read error: Connection reset by peer)
[19:48:44] *** Joins: magla (~gelignite@55d41c14.access.ecotel.net)
[19:49:19] <hohohoroutines> why are people still trying to optimize for x86? it's plugged into the wall
[19:49:31] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[19:50:01] *** magla is now known as gelignite
[19:51:24] <GyrosGeier> also, the compiler usually knows better anyway
[19:52:13] <hohohoroutines> also why would you post a link to a link rather than just posting the link
[19:53:19] *** Quits: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu) (Ping timeout: 252 seconds)
[19:54:38] *** Joins: u0_a391 (~u0_a391@2600:380:bc45:adef:2d0a:ca53:86:94ce)
[19:54:57] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[19:54:58] *** Joins: dutch (~DutchIngr@user/dutch)
[19:55:09] *** Joins: baltazar (~baltazar@84-236-20-119.pool.digikabel.hu)
[19:56:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:56:43] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:c5ba:9526:bee0:c4f1) (Quit: fe23)
[19:56:57] *** Joins: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com)
[19:58:59] *** Quits: Kit (~u0_a391@64.85.173.130) (Ping timeout: 256 seconds)
[20:02:30] <pragma-> maybe he thinks someone might be interested in the hn comments
[20:03:00] <pragma-> there is 2 or 3 inches of snow on the ground 
[20:03:19] <hohohoroutines> nobody is interested in hn comments
[20:03:25] <hohohoroutines> i'd rather watch the ground to see if snow appears
[20:05:15] *** Joins: meator (~meator@user/meator)
[20:05:34] <pragma-> it tends to fall from the sky first
[20:06:52] *** nuxil_ is now known as nuxil
[20:09:33] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[20:09:45] *** Joins: Luke (~ldm@hacksoc/member)
[20:10:55] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[20:14:57] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 252 seconds)
[20:15:50] *** Joins: AsenMx (~AsenMx@user/asenmx)
[20:15:58] *** u0_a391 is now known as Kit
[20:16:47] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 252 seconds)
[20:17:12] *** Joins: inlight (~inlight@157.35.23.138)
[20:17:12] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[20:17:12] *** Joins: inlight (~inlight@user/inlight)
[20:17:17] <the_lanetly_052> <hohohoroutines: i think compiler can't decide strongly to optimize if branch to cmov (sometimes we need profile guided optimization).if BP predicts right path correctly that takes ~1-2 cycle but in case of cmov that can take more cycles to decide
[20:17:57] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:4913:cfb7:6592:7f83) (Ping timeout: 265 seconds)
[20:19:14] <the_lanetly_052> <hohohoroutines>: i did post link to HN because it would be interested to read comments there
[20:20:42] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 276 seconds)
[20:21:22] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[20:22:59] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[20:25:50] <hohohoroutines> i'd rather swallow glass
[20:27:33] <the_lanetly_052> anyway next time i will share direct link :)
[20:28:15] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:29:06] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:30:43] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[20:31:42] *** Joins: AsenMx (~AsenMx@user/asenmx)
[20:32:02] *** Joins: gareppa (~gareppa@user/gareppa)
[20:32:04] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:32:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:34:27] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:43:02] *** Quits: useretail (~useretail@185.132.19.151) (Ping timeout: 240 seconds)
[20:45:37] *** Joins: Akuli (~Akuli@82-203-166-217.bb.dnainternet.fi)
[20:46:05] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[20:47:02] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 260 seconds)
[20:47:16] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:49:23] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Killed (NickServ (Forcing logout SymbioticFemale -> SymbioticFemale)))
[20:49:43] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[20:51:27] *** rcf1 is now known as rcf
[20:52:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[20:52:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[20:55:14] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[20:55:47] *** Joins: inomoz (~inomoz@85.26.235.86)
[20:56:08] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 265 seconds)
[20:58:55] *** Quits: X-Scale (~ARM@92.250.97.79) (Ping timeout: 265 seconds)
[20:58:55] *** X-Scale` is now known as X-Scale
[21:04:03] *** TheBeastie is now known as beastie
[21:04:05] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 252 seconds)
[21:05:43] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:08:17] <beastie> kurahaupo: how do you think is *p++ = NULL; to be interpreted... you had better not to use side effects in the parameter... I tried to use a local variiable this morning but I was making the mistake of assigning the local variable and not the pointer itself.... so the macro should be used with a non-side-effects lvalue.
[21:09:42] <hohohoroutines> why not just never write that kind of expression, or if you can't help yourself, at least use parens
[21:10:20] <hohohoroutines> the point of writing code is not to maximize wtfs per character
[21:10:37] *** Joins: fputs3 (~fputs@67.59.83.166)
[21:12:09] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 252 seconds)
[21:12:09] *** fputs3 is now known as fputs
[21:12:54] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:983b:b61c:3042:240b)
[21:18:07] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[21:19:11] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[21:22:15] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:74e9:183f:a719:d99e)
[21:22:19] *** Joins: JeffH (~JeffH@233.sub-174-198-143.myvzw.com)
[21:22:28] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Read error: Connection reset by peer)
[21:23:34] *** Parts: freakazoid333 (~matt@2603:9000:cf0f:80e3:74e9:183f:a719:d99e) ()
[21:23:50] *** Joins: Akiva (~Akiva@user/Akiva)
[21:26:22] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[21:26:53] *** Quits: JeffH (~JeffH@233.sub-174-198-143.myvzw.com) (Remote host closed the connection)
[21:28:00] *** Joins: meator (~meator@user/meator)
[21:29:36] <m4r35n357> If you have good tests, and it passes, np ;)
[21:29:42] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:983b:b61c:3042:240b) (Quit: This computer has gone to sleep)
[21:30:15] <hohohoroutines> m4r35n357: carried to its logical conclusion, that would mean you delete teh code after compiling it.
[21:31:50] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[21:31:52] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:983b:b61c:3042:240b)
[21:32:12] <m4r35n357> those would not be good tests! BTW I agree, but sometimes you don't get to choose the semantics and you have to deal with it anyway.  Any excuse for more tests
[21:32:33] <m4r35n357> I have been writing tests today . . . 
[21:33:12] <hohohoroutines> end to end test in addition to just unit tests i hope
[21:33:51] <hohohoroutines> often the complexity that needs to be tested is in how things interact at larger scale than the validity of unit tests
[21:34:00] <m4r35n357> I am an ex-sw tester (integration), so I see unit tests as mostly box-ticking
[21:34:24] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[21:34:41] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[21:34:51] <m4r35n357> I always start from the outside and work in!
[21:35:37] <hohohoroutines> i feel like i have to remind people every hour that it's possible to design something that may actually work but isn't testable, but it's always possible to rethink that design so that it is
[21:35:37] <pragma-> that's what he said
[21:35:53] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[21:36:31] *** Joins: badsektor (~badsektor@user/badsektor)
[21:38:56] <m4r35n357> pragma-, nice, very modern!
[21:39:33] *** Joins: kuoi (~kuoi@109.175.166.59)
[21:41:11] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[21:41:42] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[21:42:16] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:43:15] <kurahaupo> hohohoroutines: You miss the point. It's a simple example of an L-value with sure effects. The exact detail of the expression isn't important. Having said that, "*p++" is entirely normal idiomatic C; if you find it confusing, make a point of memorising it, because this won't be the only time you're expected to understand it without hand-holding
[21:43:32] <hohohoroutines> ,paren *p++
[21:43:33] <candide> hohohoroutines: *(p++)
[21:43:39] <hohohoroutines> my hand has been held and i am happy
[21:43:45] <kurahaupo> with *side99,99 effects
[21:44:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[21:44:46] <hohohoroutines> i'm well aware that such code is still encountered in the while. often when i find it, i refactor it into a regular ass loop over a regular ass index, and the result is much faster in addition to being more readable
[21:44:57] <hohohoroutines> just because it's in k&r doesn't mean it's the right way to do things
[21:45:04] <hohohoroutines> s/while/wild/
[21:46:37] <constxd> hohohoroutines: what
[21:46:53] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.29)
[21:47:08] <kurahaupo> beastie: the later version of the macro using a double pointer is the only one whose semantics are sensible. The point isn't to say "avoid parameters with side effects", the point is to fix the macro so it doesn't matter. The tricky part is declaring temp
[21:49:01] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.200) (Ping timeout: 240 seconds)
[21:50:34] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:52:16] <kurahaupo> hohohoroutines: sure you can use array+index; there's no difference in performance, and no difference in the macro evaluating the parameter twice: COLL_FREE(a[i++]);
[21:52:51] *** Joins: JeffH (~JeffH@233.sub-174-198-143.myvzw.com)
[21:53:04] *** Quits: JeffH (~JeffH@233.sub-174-198-143.myvzw.com) (Remote host closed the connection)
[21:53:12] <kurahaupo> There's no difference on a good compiler. On a simple compiler *p++ will be faster that a[i++]
[21:56:57] <kurahaupo> And I disagree: in general a[b] is less readable than *c, for most expressions a, b & c. There are always exceptions of course, but that's when they're complex,  not simple stuff like *p++
[21:58:04] *** Joins: superboot (~agentgasm@user/superboot)
[22:00:36] <beastie> kurahaupo: this can be assumed to use the macro.... It has been for a long time.
[22:01:30] *** Joins: arinov (~arinov@176.89.29.127)
[22:01:40] <kurahaupo> beastie: somebody new comes to your code and sees what looks like a function call. It's a good idea if it actually behaves like a function call as much as possible.
[22:01:42] <beastie> the use of a pointer with side effects in that case is also in conflict to what the macro does, which is to also clear the pointer to NULL.
[22:02:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:30] <kurahaupo> beastie: Clearing the pointer to NULL does not conflict with there being side effects. Both are entirely possible together
[22:02:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:03:02] <beastie> in general, I've seen many macro definitions that claim that they expand the arguments several times and this must be taken in consideration when you plan to pass to the macro an argument with side effects.
[22:03:28] <beastie> for example... the MAX or MIN definitions as macros.
[22:03:57] <beastie> the problem here is in the use of macros... while you want to emulate a function call.... 
[22:04:13] <kurahaupo> These are all good reasons why we should be using inline functions instead. 
[22:04:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:04:23] <beastie> indeed, if you hapen to name the parameter exacly as it is named in the macro, you will run into trouble.
[22:04:31] <beastie> yes... I agree.... 
[22:04:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:05:09] <hohohoroutines> yeah i will use a gcc extension if i have to write a macro, to ensure that it only evaluates its arguments once. or just not use a macro there
[22:05:38] <hohohoroutines> -Wshadow will catch the other thibg
[22:05:48] <beastie> y proposed to use a macro to allow to avoid the assignment to the pointer after each call of the function.  But with the problems that a text based macro processor imposes to the language... this might be always present when using macros.
[22:06:04] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:06:10] <beastie> the inline function doesn't solve the problem either.
[22:06:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:07:45] <beastie> only if the type Words is an array type (typedef char words[10];) you can pass the name by reference (because it is indeed an array) and set it in the function.
[22:08:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[22:08:15] <hohohoroutines> i pretty much only write a macro when it needs __func__ or __LINE__ from the calling context
[22:08:27] <hohohoroutines> never for performance reasons
[22:08:31] <kurahaupo> # define COLL_FREE(X) if (1) { typeof(X) *y = &(X); free(*y); *y = NULL; } else /* use a long random name for y to minimise conflict */
[22:08:42] *** Quits: LordofLife (sid530771@user/joeroot) ()
[22:08:49] <beastie> I was not talking about that... the thing happened over six hours ago.
[22:10:07] <hohohoroutines> but why not just not use a macro there
[22:10:29] <beastie> you need parenthesis around y in *y = NULL;
[22:10:40] <kurahaupo> true, good point
[22:10:45] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:11:00] <kurahaupo> no wait, y is the local var
[22:11:26] <beastie> hohohoroutines: the thing started with a function that free()s a pointer and then, sets the pointer to NULL.
[22:12:02] <beastie> the question was why the pointer didn't get modified if it was inside the function... the pointer was passed by value.
[22:12:32] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.29) (Ping timeout: 240 seconds)
[22:12:54] <kurahaupo> One approach would be #define COLL_FREE(X) coll_free(&(X)) but then you get weirdness with void** not being convertible
[22:12:54] <beastie> but I prefer not to start the thing again, because I'm 59 and I'm a bit tired at this time, it's almost 21h in the night now.
[22:13:17] <kurahaupo> ok, fair enough
[22:13:46] <beastie> and you have to rewrite the full body of coll_free to use a double indirect pointer instead of a simple one.  That has been discussed all this morning.
[22:14:37] <beastie> and for a beginner in pointers, the code gets completely unreadable when you have to change things like free(p->data) into free((*p)->data);
[22:15:09] <beastie> because the -> symbol has more precedence than *
[22:15:46] <kurahaupo> beastie: The last comment from that discussion was that the double pointer version was pointless because a L-value couldn't have side effects. I'm trying to point out the error of that assumption. I'm not particularly interested in litigating the best fix for the problem
[22:17:23] <beastie> I have never had problems with code similar to that... because my preferred way is not to use a macro... but write the assignment after each free() like call.
[22:18:01] <kurahaupo> beastie: me too, if it comes to that.
[22:18:12] <beastie> (I normally write it only if it is necessary because --as it happens inside the function) the pointer is about to get out of scope and lifetime.
[22:19:31] <beastie> i was trying to suggest different things... from my point of view, the TEST_NULL_ASSERT(pointer) was no use... because you can write the assignment, and avoid the test, more if you are going to test if the pointer has been turned NULL after each free() like call.
[22:20:47] <beastie> the forcing to nullify the pointer inside the function is also not the best approach, because the majority of cases the pointer itself is about to be destroyed also.
[22:21:45] <beastie> so, in my point, the best approach is to set the pointer to null when the pointer is going to be reused, and can be checked before being reassigned again.
[22:21:58] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[22:22:23] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[22:22:46] <kurahaupo> In the general case it's impossible to efficiently track all the pointers to a given object, just so you can NULL them all when you free it. (By "efficiently" I mean without imposing a speed penalty of more than a few percent.)
[22:23:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[22:24:01] <beastie> I have managed well all my life since I started programming... I don't think I'm going to have any troubles about to retire.
[22:24:30] *** Joins: useretail (~useretail@185.132.19.151)
[22:24:53] <beastie> i don't consider the speed penalty at al... I consider that initialising a variable that doesn't need to is not elegant :)
[22:25:55] *** Joins: useretail_ (~useretail@185.132.19.151)
[22:26:53] <kurahaupo> beastie: I entirely agree with your approach. I was making a point about the futility of wanting to NULL out any pointer to an object that's been freed
[22:27:18] <beastie> that's my point also... 
[22:28:30] <beastie> but one thing is to try to help somebody to solve his problem and another (many times different) your opinion on how his code is written.  I prefer not to make opinions when working on other's code.
[22:29:14] *** Quits: useretail (~useretail@185.132.19.151) (Ping timeout: 260 seconds)
[22:30:22] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[22:30:34] <beastie> also, it is different to write code to be used only in one place, than writing reusable code that has to deal with many different scenarios.
[22:30:47] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[22:31:31] <kurahaupo> true
[22:32:50] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[22:33:13] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[22:33:32] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[22:36:01] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:8422:a007:2837:346c)
[22:40:32] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:3cb7:1751:a81f:8e5f) (Ping timeout: 265 seconds)
[22:42:37] *** Joins: meator (~meator@user/meator)
[22:43:40] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[22:44:07] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[22:44:23] *** Joins: Betal (~Betal@user/betal)
[22:45:09] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Max SendQ exceeded)
[22:45:47] *** Joins: crankslider (~slidercra@user/slidercrank)
[22:46:30] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8070:51d:80f2:cc47) (Ping timeout: 260 seconds)
[22:46:55] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3186:b42a:1a11:574d)
[22:47:00] *** bsandro_ is now known as bsandro
[22:50:12] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:50:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[22:51:59] *** Joins: Satin (uid193953@user/Seten)
[22:52:57] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[22:54:45] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:54:49] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 252 seconds)
[22:57:20] *** Joins: et09 (~et09@user/et09)
[22:57:44] <et09> want to write a lightweight linux music player... debating which ui library to start with 
[22:58:05] <et09> have some qualms with gtk... qt i worry it's kinda clunky...
[23:02:27] <hohohoroutines> does systemd not play music yet lol
[23:03:16] <GyrosGeier> why not build a sensible replacement for WinAMP?
[23:03:33] <GyrosGeier> i.e. no UI library, but skinnable
[23:03:55] <GyrosGeier> Protip: all UI toolkits are clunky
[23:04:36] <hohohoroutines> ^
[23:05:05] <hohohoroutines> (i would actually not trust the systemd people to do hard realtime anything, even a music player)
[23:05:25] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[23:07:06] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[23:07:18] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[23:08:13] <aighearach> That's petty derpy, considering the differences that systemd makes for networking timing
[23:08:49] <aighearach> I'm surprised to hear anti-systemd nonsense in a programming channel where people can be expected to understand the non-technical nature of the complaints
[23:08:57] *** Joins: Guest57 (~Guest57@2001:8f8:1363:3fe5:6570:ff2d:302d:6c29)
[23:08:58] *** Joins: Charadon (~Charadon@155.138.164.183)
[23:09:50] <constxd> et09: Xlib
[23:10:15] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 250 seconds)
[23:10:41] <Guest57> I have a simple question. Is  garbage collection  involve invoking free() function explicitly?
[23:11:26] <constxd> what
[23:11:29] <nomagno> I don't have many doubts systemd is an insanely heavy init system pushed by Red Hat to achieve their business goals.
[23:11:42] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[23:11:51] <CoderCharmander> Guest57: If you are *making* a garbage collector, then yes, you have to use free()
[23:11:59] <nomagno> Guest57: Garbage collection isn't a thing in the C language, at least not in any defined way.
[23:12:06] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:12:12] <constxd> no you don't have to use free()
[23:12:12] <nomagno> Can you write a garbage collector portably? actually good question
[23:12:36] <CoderCharmander> If you are *using* a garbage collected language, you don't have to, but C is not one.
[23:12:50] *** Joins: mokulus (~mokulus@user/mokulus)
[23:12:52] <Kit> isnt the "garbage" to be collected only malloc'd stuff
[23:12:56] <constxd> you don't have to use free() to write a garbage collector
[23:13:17] <Kit> everything else is on the stack, no?
[23:13:29] <twkm> ugh.
[23:13:43] <Kit> am i being stupid
[23:13:43] <nomagno> Kit: Yes, stuff that has been allocated, pretty much.
[23:14:06] <Kit> so not stuff on the heap
[23:14:12] <Kit> *stack
[23:14:17] <constxd> in standard C, there is no stack/heap distinction, just storage durations. but in POSIX, no.
[23:14:21] <nomagno> Is there any portable way to check if a pointer's lifetime is over?
[23:14:31] <et09> oh yeah that's the other thing.  i'm on wayland... i don't really care about supporting X 
[23:14:31] <nomagno> Or is this getting into memory-safety-languages territory
[23:14:32] <constxd> after all, how do you think malloc() is implemented -- it's not a system call
[23:14:42] <et09> i'm happy to just use raw sdl or even opengl if i have to
[23:14:49] <zwr> Kit: to be a bit pedantic that's an implementation detail, but your average C implementation also sticks static storage in a place in memory that is not the stack and not the heap
[23:14:50] <et09> god forbid
[23:15:10] <nomagno> constxd: You have automatic storage and non-automatic/dynamic/whatever storage
[23:15:14] <et09> GyrosGeier: all ui toolkits ? no exception? 
[23:15:16] <zwr> Kit: as a C programmer you don't have to care about any of that though, just the storage durations as described by C
[23:15:31] <Kit> yea
[23:15:38] <Kit> thx
[23:15:58] <nomagno> So, is there a way to check if a pointer returned from a function has had its lifetime end?
[23:16:04] <twkm> nomagno: no and no.
[23:16:06] <nomagno> Other than crashing, of course
[23:16:06] <constxd> if you don't want to use your libc's allocator you can call mmap() yourself, which may be preferable in the case of implementing a garbage collector
[23:16:21] <twkm> not even crashing is certain.
[23:16:23] <et09> (i swear, vlc uses QTreeWidget from qt verbatim)
[23:16:29] <CoderCharmander> constxd: Yeah, right, you can use other ways to ask the system to map memory into the address space, but malloc()/calloc()/free() is the usual way
[23:16:38] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[23:16:45] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[23:16:48] <constxd> lmao
[23:16:50] <hohohoroutines> please don't not use your libc's allocator
[23:17:00] <twkm> mmap might not exist.
[23:17:10] <constxd> the guy who asked the original question hasn't said a word and we're all arguing like autists about his question
[23:17:10] <CoderCharmander> *portable way
[23:17:24] <nomagno> Oh wait, I have an idea
[23:17:37] <nomagno> I have an abhorrent idea, that might just be what I wanted
[23:17:49] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Ping timeout: 250 seconds)
[23:18:25] <sham1> Heck, sometimes malloc and friends are straight-up unsuitable for usage, like if one wants to allocate executable memeory
[23:18:50] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[23:18:53] <rcf> Older systems can also have issues with aligned allocations 
[23:19:31] <constxd> et09: SDL imo
[23:19:58] <constxd> anything made with a GUI toolkit is gonna be soulless 
[23:20:45] *** Joins: monkey_ (~user@181.114.17.106)
[23:20:45] <Kit> example: literally everything builtin in GNOME or KDE
[23:21:26] <et09> mmn
[23:22:45] <et09> (people and their C++...)
[23:24:41] *** Quits: alch (~alch@151.34.171.80) (Ping timeout: 256 seconds)
[23:24:44] <et09> you look up tuts and everything is c++
[23:25:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:26:15] *** Joins: alch (~alch@151.36.81.85)
[23:30:06] <earnestly> google especially understands -c++ (++ is normally ignored in searches)
[23:34:02] *** Quits: useretail_ (~useretail@185.132.19.151) (Ping timeout: 240 seconds)
[23:37:05] <constxd> u guys ever go to work and just 
[23:37:15] <constxd> not work at all
[23:37:36] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[23:37:46] <Kit> yes
[23:38:00] <sham1> All the time
[23:38:38] <NRK[m]> totally
[23:38:42] <constxd> then what do you say you were doing in your standup the next day
[23:39:53] <Kit> work
[23:39:59] *** Joins: useretail (~useretail@185.132.19.151)
[23:40:58] <river> 9-5 every day is way too long
[23:41:17] <river> you can get as much done in half the time
[23:42:42] <constxd> yeah i mean most days i generally spend ~2 hours out of the 8 that i work browsing the web, reading irc, etc. but today i haven't done a fucking thing lmao
[23:43:36] <Kit> im like that all the time lmao
[23:44:49] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[23:45:29] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[23:47:25] <nomagno> https://termbin.com/9z9il
[23:47:37] <nomagno> I present to you, the bonkers safe-ish allocatorç
[23:47:51] <river> wy would you do this
[23:47:57] <Kit> why not
[23:48:58] <nomagno> You can even use more macros to make it more readable!
[23:49:01] <nomagno> Like refer()
[23:49:04] <nomagno> ;D
[23:50:29] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[23:51:17] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[23:55:06] *** Joins: Atque (~Atque@user/atque)
[23:55:06] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[23:55:22] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[23:55:35] <constxd> what in the fuck is that indentation
[23:56:06] <sham1> An abomination
[23:56:44] <CoderCharmander> hey, at least it is kinda consistent
[23:56:48] <river> indentation is optional
[23:57:16] *** Joins: humky (~humky@user/humky)
[23:59:53] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
