[00:07:26] *** Joins: duxsco (~Thunderbi@user/duxsco)
[00:25:05] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:34:14] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[00:39:39] *** Quits: jotik (~J@user/jotik) ()
[00:41:08] *** Joins: jotik (~J@user/jotik)
[00:45:29] *** Quits: LibreGNU (~gnu@vps-93-95-226-254.1984.is) (Ping timeout: 256 seconds)
[00:47:50] *** Joins: LibreGNU (~gnu@vps-93-95-226-254.1984.is)
[00:51:42] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[01:05:30] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:20:57] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:22:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:29:36] *** Joins: Torr (~Torr@user/torr)
[01:49:28] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[02:00:44] *** Quits: Torr (~Torr@user/torr) ()
[02:11:49] *** Quits: Merixer (~Merixer@2001:470:deb8:a1::2) (Ping timeout: 240 seconds)
[02:15:26] *** Joins: Merixer (~Merixer@2001:470:deb8:a1::2)
[02:31:08] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Quit: Bye)
[02:32:42] *** Joins: Torr (~Torr@user/torr)
[02:34:48] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:37:54] *** Quits: herd (~herd@mta763.solicitae.com) (Ping timeout: 272 seconds)
[02:38:05] *** Quits: Torr (~Torr@user/torr) ()
[02:38:21] *** Joins: Torr (~Torr@user/torr)
[02:39:05] *** Joins: Betal (~Betal@user/betal)
[02:43:39] *** Joins: herd (~herd@mta763.solicitae.com)
[03:01:26] *** Quits: emagex (~user@user/emagex) (Quit: ERC (IRC client for Emacs 27.1))
[03:07:57] *** Quits: herd (~herd@mta763.solicitae.com) (Ping timeout: 240 seconds)
[03:19:03] *** Joins: herd (~herd@mta763.solicitae.com)
[03:23:01] *** Quits: herd (~herd@mta763.solicitae.com) (Ping timeout: 240 seconds)
[03:30:48] *** Joins: herd (~herd@mta763.solicitae.com)
[03:35:00] *** Quits: herd (~herd@mta763.solicitae.com) (Ping timeout: 250 seconds)
[03:42:19] *** Joins: herd (~herd@mta763.solicitae.com)
[03:46:42] *** Quits: herd (~herd@mta763.solicitae.com) (Ping timeout: 250 seconds)
[03:48:21] *** Joins: herd (~herd@mta763.solicitae.com)
[03:52:50] *** Joins: [jake] (~jake@user/jake/x-6527376)
[04:11:37] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[04:43:37] *** Joins: strk (~strk@user/strk)
[04:46:02] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[04:46:21] *** Joins: madage (~madage@user/madage)
[05:19:01] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[05:20:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:28:03] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[06:33:05] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:37:08] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:53:23] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:09:58] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[07:32:31] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[07:33:18] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Client Quit)
[08:37:28] *** Quits: balrog (znc@user/balrog) (Ping timeout: 250 seconds)
[08:45:56] *** Joins: balrog (znc@user/balrog)
[10:27:40] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[10:41:28] *** Joins: two_oes (~two_oes@46-116-43-94.bb.netvision.net.il)
[10:55:09] *** Quits: erle- (~stephan@2a04:ee41:3:3297:1010:2a53:3f2d:64ff) (Quit: Leaving)
[10:59:23] *** Joins: erle- (~stephan@2a04:ee41:3:3297:b96b:3a73:c412:50a5)
[11:05:57] *** Quits: [jake] (~jake@user/jake/x-6527376) (Quit: leaving)
[11:09:52] *** Joins: [jake] (~jake@user/jake/x-6527376)
[11:25:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[11:27:51] *** Joins: yetoo (~yetoo@user/yetoo)
[11:40:55] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Read error: Connection reset by peer)
[11:42:45] <yetoo> I am trying to encrypt a file with gpg --default-key <Public key identifier> -r receiver@rec.com --encrypt file but then when it says there is no assurnace this key belongs to the named user, it uses a completely different identifier like <Different public key? identifier> (these identifiers are fake in case you couldn't already tell). Where can I find the where the identifier that's different comes from? i.e. some command that will list the database of imported 
[11:42:45] <yetoo> keys and this different identifier that I'm talking about can be compared against that
[11:43:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[11:44:43] *** Joins: epony (epony@user/epony)
[12:02:55] *** Joins: emagex (~user@user/emagex)
[12:34:06] *** Quits: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 245 seconds)
[12:43:52] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[12:46:14] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[12:50:01] *** Quits: herd (~herd@mta763.solicitae.com) (Remote host closed the connection)
[12:50:13] *** Joins: herd (~herd@mta763.solicitae.com)
[13:04:13] <henk> gpg -k id
[13:10:10] <yetoo> henk: so that command finds the related entry, but doesn't show that different id when listing the entry. What is that different public key identifier and why isn't it listed?
[13:11:45] <henk> yetoo: maybe a subkey? check if some --list-option shows it. without more info from you, I can only guess â€¦
[13:12:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[13:12:34] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[13:17:38] <yetoo> henk: so I do --edit-key and it shows as subkey, but it's set to never expire so why not show up?
[13:20:05] <henk> yetoo: again: not enough information â€¦
[13:20:15] <yetoo> henk: what information do you need
[13:20:45] <henk> ideally all you have
[13:22:03] <yetoo> henk: would the public key I'm trying to encrypt with help enough
[13:36:48] <henk> yetoo: I donâ€™t have the spare time and brainpower to think this through and negotiate with you, sorry. provide as much relevant information as you can and I will see if I can help.
[13:55:49] *** Joins: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[13:56:17] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[13:56:43] <yetoo> henk: I'm trying to submit a complaint with the public key here https://www.tdameritrade.com/security/security-vulnerability.html I imported the key via copying the key and pasting into gpg --import. I then listed the keys with gpg --list-keys and shows the pub identifier as B08B8404EEC2FB003E665E4ADD9B9EC078644793 so I use that with gpg --default-key B08B8404EEC2FB003E665E4ADD9B9EC078644793 -r sirt@tdameritrade.com --encrypt file. When I do that command I get 
[13:56:43] <yetoo> gpg: A4CBACDBBD30B651: no assurance this key belongs to named user\n\nsub  rsa4096/A4CBACDBBD30B651 etc ... Of all the identifiers it chose to show it shows that subkey instead of some part of the pub identifer or email. Why? (yes I am aware that the imported key has a z infront of the tdameritrade email and the email on the site doesn't, I don't know why this diff exists.)
[14:00:42] <bremner> yetoo: I don't think --default-key does what you think
[14:00:48] <gnoo> yetoo: is the key you're giving to --default-key yours?
[14:01:57] <gnoo> '--default-key USER_ID' Use USER_ID as the standard key for signing.
[14:02:08] <gnoo> you can't sign with someone's else's key
[14:02:54] <yetoo> so how do I choose the key to encrypt with
[14:03:04] <gnoo> with -r, you already did
[14:03:32] <gnoo> it'll find the key with userid user@domain, if you want to encrypt to multiple keys, use multiple -r
[14:03:58] <yetoo> gnoo: how would i differentiate between multiple keys with the same userid and email
[14:06:42] <henk> FWIW: itâ€™s not a list-option I was thinking of but --with-subkey-fingerprint
[14:07:25] <gnoo> also -f: This option is similar to '--recipient' except that it encrypts to a key stored in the given file.  FILE must be the name of a file containing exactly one key.
[14:08:18] <henk> but I have no idea why it shows the subkeyâ€™s ID instead of the primary keyâ€™s. doesnâ€™t seem to make much sense â€¦
[14:15:15] <gnoo> yetoo: also, i think -r accepts the shortkey as well
[14:18:05] <yetoo> gnoo: At what point does -r not recognize the email/id used? I use tdameritrade.co for -r and it still finds the correct key
[14:19:27] <yetoo> I mean if I do something like asdadsad it says it can't find a key so I'm assuming it's just finding a closest match, but I'm not sure if I'm being deceived
[14:19:57] <yetoo> by the program
[14:34:50] <yetoo> gnoo: also you said I can't sign with someone elses key, yet I was able to with the B08B8404EEC2FB003E665E4ADD9B9EC078644793 identifier  with no error even using --local-user. Does this make the file unable to be decrypted? 
[14:39:40] <gnoo> no, signing is different than encryption, the signed part is appended to message and then the whole message is encrypted
[14:40:06] <gnoo> you'll likely get a warning about how the signature can't be checked 
[14:41:10] <gnoo> and i don't know what it does if you use someone elses' key to sign, i'm pretty new to gpg as well
[14:48:16] <strk> I'm unable to sign keys due to : gpg: Note: third-party key signatures using the SHA1 algorithm are rejected - gpg: signing failed: Invalid digest algorithm
[14:49:32] *** Quits: two_oes (~two_oes@46-116-43-94.bb.netvision.net.il) (Read error: Connection reset by peer)
[14:49:37] <bremner> yetoo: you can't sign without the private key
[14:50:57] <yetoo> bremmer: So is there an immediate error I should see?
[14:51:08] *** Joins: two_oes (~two_oes@46-116-43-94.bb.netvision.net.il)
[14:53:38] <bremner> yes, it should say "no secret key", at least if you specify --local-user
[14:53:51] <gnoo> yetoo: so this is how it searches for a user id: info "(gnupg) Specify a User ID"
[14:55:00] <bremner> yetoo: and if you specify --default-key it should tell you "not using ... No secret key ... using <some other key>"
[14:57:03] <yetoo> bremner: using  gpg --local-user B08B8404EEC2FB003E665E4ADD9B9EC078644793  -r tdameritrade.co  --encrypt file I see no such error. The only error I get is the no assurane this key belong to the named user
[14:57:31] <bremner> pastebin the actual output?
[14:59:05] <yetoo> https://pastebin.com/uX7kK79a
[15:00:24] <strk> what happens, technically, when a key is "edited" (say: add or remove an uid)
[15:00:30] <bremner> yetoo iirc you need to specify --sign as well as --encrypt
[15:00:47] <bremner> strk: another key signature is added
[15:01:03] <bremner> it's like a "blockchain"
[15:01:05] <strk> so each key keeps a lits of change events, each item being signed ?
[15:01:10] <strk> *list
[15:01:16] <bremner> pretty much.
[15:01:39] <strk> how can the events list be printed ?
[15:01:44] <bremner> yetoo: otherwise --local-user is just being ignored.
[15:01:51] <bremner> strk: with --dump-packets
[15:02:16] <bremner> err. --list-packets
[15:02:29] <yetoo> bremner: where in the man page does it say --local-user is ignored
[15:03:01] <bremner> yetoo: it's implicit, because --local-user is for signing
[15:03:02] <strk> nice, history of my key seems short :)
[15:03:14] <yetoo> because I can see with --default-key that it would be ignored if it doesn't exist, but not --local-user
[15:04:07] <gnoo> -e: Encrypt data to one or more public keys.  This command may be combined with '--sign' (to sign and encrypt a message)
[15:04:43] <yetoo> --sign -s "  The  signing  key is chosen by default or can be set
[15:04:43] <yetoo>               explicitly using the --local-user and --default-key options.
[15:04:43] <yetoo> "
[15:05:06] <gnoo> the signing key is only used if you actually sign 
[15:05:19] <gnoo> (maybe not only ..)
[15:05:32] <strk> bremner: so I see 5 packets in total, from off(set?)=0 to off=941 - I guess off=0 is the earliest packet (key creation?)
[15:05:48] <strk> :public key packet:
[15:17:49] *** Joins: aZa (~aZa@gateway/tor-sasl/aza)
[15:18:05] <strk> uhm, it looks like 5 packets is what you get on creating a new key
[15:18:46] *** Quits: aZa (~aZa@gateway/tor-sasl/aza) (Remote host closed the connection)
[15:20:03] *** Joins: aZa (~aZa@gateway/tor-sasl/aza)
[15:20:13] <bremner> strk: if you are trying to debug "invalid signing algorithm", did you check your configuration?
[15:46:17] *** Joins: gast0n (~g4570n@user/gast0n)
[15:52:19] *** Quits: gast0n (~g4570n@user/gast0n) (Read error: Connection reset by peer)
[15:59:59] *** Joins: gast0n (~g4570n@user/gast0n)
[16:03:35] *** Joins: nlhowell (~nlhowell@172.58.87.94)
[16:31:48] <strk> bremner: it's only 5 lines, `force-v3-sigs` is the only one which looks possibly related
[16:32:17] *** Quits: cwittlut (~cwittlut@user/bekcpear) (Ping timeout: 240 seconds)
[16:33:07] <strk> what I'm trying to debug is being unable to sign keys, getting: "third-party key signatures using the SHA1 algorithm are rejected"
[16:33:36] *** Joins: cwittlut (~cwittlut@user/bekcpear)
[16:34:13] <bremner> I don't think that's the relevant message here.
[16:37:37] <strk>  gpg --sign-key exited with 2, printed the above and then two lines of `signing failed: Invalid digest algorithm`
[16:38:30] <strk> which digest algorithm is being attempted it's not written in the error message
[16:39:08] <strk> using --allow-weak-key-signatures makes the operation work
[16:41:24] <strk> so next question would be: is it ever possible, with my main signing key, to use a *stronger* algoritm ?
[16:41:33] <strk> or does that take creating a new keypair ?
[16:41:36] <bremner> I thought the key signature algorithm was configurable. But maybe it's part of the key.
[16:42:12] <henk> strk: which version of gpg are you using?
[16:42:44] <strk> my key offset=0 packet (:public key packet:) has `algo 17`, while I see that keys created today come up with `algo 1`
[16:42:59] <strk> gpg (GnuPG) 2.2.20
[16:43:01] <strk> libgcrypt 1.8.7
[16:43:29] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:43:48] <strk> Supported algorithms:: Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA - Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256 - Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224 - Compression: Uncompressed, ZIP, ZLIB, BZIP2
[16:48:31] <bremner> strk: is this key really old, by chance?
[16:49:53] <bremner> looks relevant. https://blog.bmarwell.de/en/fixing-old-sha1-infested-openpgp-keys/ ; I cannot vouch for it's correctness
[16:50:00] <strk> bremner: 2003
[16:50:09] <bremner> so, yes.
[16:50:17] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[16:50:22] <strk> very, a refresh is due
[16:50:41] <strk> but I don't know what's the best proceeding
[16:51:25] <strk> shall I create a completely new pair or just a new subkey or ?
[16:52:33] <strk> and if I create a new pair, how should I dispose the old one ? There might be still content around that I need to decypher with it, but I would want people to stop using it for encrypting to me, while still considering signatures applied before a given date valid etc...
[16:52:40] <henk> what kind of key is it exactly? which algorithm, which size (bits)?
[16:56:33] <strk> dsa1024
[16:57:10] <strk> with an elg1024 sub
[17:01:38] *** Joins: georgios (~georgios@user/georgios)
[17:05:54] <henk> hm, ISTR that DSA is deprecated but canâ€™t find any source confirming it so it seems Iâ€™m wrong â€¦ check https://www.gnupg.org/faq/gnupg-faq.html for "dsa", it has some interesting notes.
[17:08:11] <henk> I donâ€™t know enough about any algorithm to give founded advice but the fact that your key is 20 years old alone and that 1024bit is not considered enough with RSA would make me definitely consider creating a completely new key. if that creates practical problems, Iâ€™d do some deeper digging and go with a new encryption suykey for now.
[17:09:39] <henk> "dispose the old one": not at all. Iâ€™d keep it around. you should "invalidate" it some time after making sure your new one is created correctly and works for everything you need it to and that everyone communicating with you can use it. then you should IMHO revoke it.
[17:10:11] <strk> ok then I started with the new key
[17:10:21] <strk> I'm unclear about the uid management
[17:10:34] <strk> as uids seem like a good place to "advertise" what's going on
[17:10:44] <strk> like adding an (old) or (deprecated) comment in the uid etc.
[17:11:10] <henk> no. the uid will stay around basically forever.
[17:11:22] <strk> ok, so not a good strategy
[17:11:38] <strk> I guess *adding* uids would eventually be possible to spread byt *removing* them not ?
[17:11:43] <henk> some people frown upon comments on pgp keys in general
[17:12:23] <strk> the new key I created, I've already edited it twice to adduid/deluid
[17:12:51] <henk> IMHO their content should generally be limited to identifying information. adding a comment is something one should consider very deeply. in most cases itâ€™s not a good idea IMHO.
[17:13:06] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 260 seconds)
[17:13:25] <strk> but the number of packets (from --list-packets) is always 5, from the start
[17:13:58] <strk> is --edit-key really just changing one information for another, without keeping history if changes ?
[17:14:18] <henk> the "traditional" keyservers (which are currently dying) did not allow removing UIDs. not sure what happens in the underlying data format when removing â€¦ but that should be easy to test and see with list-packets, I guess.
[17:14:31] <henk> yes, AFAIK there is no history
[17:15:08] <henk> but Iâ€™m no expert on the specs for the keys, so donâ€™t trust me on that!
[17:16:15] <strk> well it looks like --send-key <edited_key> is not making the keyserver changing anything about my key
[17:16:28] <strk> it's D6C07DA4AC562DAD
[17:16:38] <henk> depending on your keyserver, it might take a bit IIRC
[17:16:53] <strk> hkp://keyserver.ubuntu.com
[17:17:51] <strk> gpg --export D6C07DA4AC562DAD | gpg --list-packets | grep ':user ID packet:' # single packet in my pubring
[17:18:13] <strk> but I bet if you fetch from keyserver it'll have 3 :user ID packet:
[17:20:29] <henk> just doing 'gpg -k' on it shows 3 UIDs
[17:20:52] <henk> AFAIK th ubuntu keyserver is still one of the "old" ones
[17:20:57] <henk> s/th/the/
[17:22:03] *** Joins: nlhowell1 (~nlhowell@172.58.84.93)
[17:22:44] <strk> so I guess keyserver upon sending a key simply merges things
[17:22:54] <strk> if it sees new packages, signed properly, it will merge them in
[17:23:02] <strk> but it does make sense to never delete anything
[17:23:20] <strk> unless there are signed packets revoking uids
[17:23:25] <strk> but I don't see them
[17:23:38] <henk> correct. and yes, it did. but it collides with GDPR nowadays. which also makes sense.
[17:24:07] <strk> never deleting, you mean, collides with GDPR ?
[17:25:14] *** Quits: nlhowell (~nlhowell@172.58.87.94) (Ping timeout: 260 seconds)
[17:26:19] <henk> yes
[17:27:03] <strk> ok so I've re-imported my own key from keyserver, it's of no use that I have a "clean" version of it when the rest of the world has the polluted one :)
[17:27:12] <strk> new user IDs: 2, new signatures: 3
[17:27:55] <strk> now, why are some uids marked as [ultimate] and others as [unknown] ?
[17:28:13] <strk> that happens on --list-secret-keys
[17:31:37] <henk> you have not signed them and not told gpg how hard you have verified them. seems strange, though, to have to do this for ones you created â€¦ but I guess thatâ€™s simply not connected. IIRC the UIDs are part of the pubkey, not the private.
[17:39:02] <strk> so, I created a new key, gave it one of the uids of the old. Now I'm trying to undertsand consequences of this
[17:40:07] <strk> first of all, I'm surprised that `gpg --encrypt -r $UID` doesn't even blink, just arbitrarily decides which key to use
[17:40:30] <strk> why would it do so ?
[17:45:32] <henk> re new key: "best" practice for most people is to give the primary key only 'C' capability and have separate subkeys for each of S, A, and E.
[17:45:49] <henk> also: which algorithm and keysize did you choose?
[17:47:11] *** Joins: gast0n (~g4570n@user/gast0n)
[17:47:12] <strk> sorry, what are those capabilities ?
[17:47:51] <strk> I have rsa3072, with [SC] and sub rsa3072 with [E]
[17:48:09] <strk> both having an expiration time
[17:48:14] <strk> (2 years)
[17:48:40] <strk> but I'm now trying to figure out how to survive this arbitrary picking keys by gnupg
[17:48:50] <strk> it doesn't even warn me about having found multiple possible keys
[17:49:20] <strk> gpg --list-keys kbt.io | grep -c pub # 2
[17:49:38] <strk> gpg --encrypt -r kbt.io CLEAR # silently encrypts
[17:51:16] <strk> how can know more about the resulting CLEAR.gpg file ? Like, I understand some .gpg files can contain multiple blocks each being encrypted for a different recipient, is that correct ?
[17:55:36] <strk> gpg --list-packets CLEAR.gpg # seems to give that detail
[18:00:39] <strk> so, the fact that passing a recipient by uid doesn't warn in case of multiple matches sounds very very unsecure to me
[18:00:50] <strk> how is it possible that such a problem is overlooked ? I don't get it
[18:06:19] <strk> running with --debug-level guru now
[18:06:32] <strk> gpg: DBG: keydb_search   0: SUBSTR: 'a' # intentionally broad matching (just the letter 'a')
[18:08:12] <bremner> you should specify the long keyid 
[18:11:02] <bremner> or you can choose gpgs bad key selection UI as your hill to die on.
[18:12:23] <strk> :P
[18:12:52] <strk> yeah, so it looks
[18:13:26] <strk> the UI is even worst since multiple recipients can be speficied
[18:13:37] <strk> selecting just the first match is plain uncomprensible
[18:14:29] <bremner> I thought it was supposed to be the newest key, but *shrug*
[18:14:33] <strk> saner behaviours: (1) encrypt for all matching recipients (2) refuse to proceed w/out user specifying which key he wants
[18:14:43] <strk> it's surely not the newest
[18:14:54] <strk> as I keep obtaining encryption to my 2003 key
[18:15:00] <bremner> ok
[18:15:14] <bremner> is the new one trusted?
[18:15:24] <strk> well, unless "newest" isn't "newly added to pubring", in case my recent re-import from keyserver changed that order
[18:15:41] <strk> good question, let mw figure out how to tell
[18:16:23] <strk> how am I supposed to get all info about a key in pubring ?
[18:16:33] <strk> --list-keys gives a very short summary
[18:16:38] <bremner> I usually use --edit-key
[18:18:07] <strk> trust: ultimate      validity: ultimate
[18:18:21] <bremner> makes sense, for a newly created key
[18:18:26] <strk> under the "sec" section
[18:18:48] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:ca00:a7f3:60c8:c144:5351)
[18:18:50] <strk> the "ssb" (the one to be used for encrypting) doesnt' have a trust section (should it ?)
[18:19:05] <bremner> I don't think so
[18:19:26] <strk> the sub doesn't have an uid either
[18:19:29] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:19:29] <strk> maybe that's why ?
[18:20:11] <strk> I should try disabling the old one (can be re-enabled, right?)
[18:20:38] <strk> this is especially improtant for me to get as at some point I'll have to re-encrypt fome files I have around
[18:40:22] <strk> disabling the old key seems effective in new encryption using the new key
[18:40:31] <strk> but --list-keys does NOT print this "disabled" nature of the old key...
[18:46:22] *** Joins: fikran (~fikran@user/fikran)
[18:47:50] <fikran> Hi all! I am fooling around with my PGP key after a few years. I updated the expiration, but I see that my key is only [C] (Certificate). I recall doing that per a guide years ago, but I'm not sure how to proceed to get a new encryption and signing key.
[18:47:52] <fikran> https://bsd.to/8Gpr
[18:47:57] <fikran> This is what I see when I run gpg --list-secret-keys
[18:51:37] <strk> --edit-key and in the prompt addkey
[18:51:54] <strk> from reading here: https://blog.tinned-software.net/create-gnupg-key-with-sub-keys-to-sign-encrypt-authenticate/
[19:05:20] <fikran> I think that worked!
[19:05:28] <henk> strk: [C]ertify (sign) other keys, [S]ign data, [E]ncrypt data, [A]uthenticate on a service/system
[19:05:39] <fikran> Oddly enough, when I export the public key, it doesn't seem to update "everything" on the keyserver
[19:06:07] <fikran> https://pgp.mit.edu/pks/lookup?op=vindex&search=0xC41D2281F8DAC0DE
[19:06:23] <fikran> I should be seeing keys that expire in 2024 here
[19:06:54] <fikran> https://bsd.to/CDmb
[19:07:34] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:07:37] *** Joins: ge0rgios (~georgios@user/georgios)
[19:09:12] <fikran> I am exporting as gpg -a --export myemail@acct.com
[19:09:31] <strk> curious, passwordstore usage of gpg results in the behaviour I suggested upon having multiple matches: it targets all matches
[19:14:07] <henk> fikran: that pgp.mit.edu link gives me Â»Service Temporarily UnavailableÂ«. IIRC these keyservers sometimes take a bit of time to update their DB. just doing --export does _not_ upload to a keyserver.
[19:14:22] <fikran> I tried it on the ubuntu keyserver, same result.
[19:15:40] *** Joins: labrador (~labrador@user/labrador)
[19:19:08] <fikran> hm...odd...not sure how to proceed here.
[19:20:24] *** Quits: ge0rgios (~georgios@user/georgios) (Read error: Connection reset by peer)
[19:20:47] *** Joins: ge0rgios (~georgios@user/georgios)
[19:27:37] <fikran> why...aren't the new keys updating?
[19:27:39] <fikran> anywhere?
[20:03:45] *** Quits: ge0rgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:06:03] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[20:18:43] *** Quits: LibreGNU (~gnu@vps-93-95-226-254.1984.is) (Remote host closed the connection)
[20:19:04] *** Joins: LibreGNU (~gnu@vps-93-95-226-254.1984.is)
[20:38:59] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:39:37] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:39:58] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[20:41:02] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:52:42] <fikran> hm..why isn't my public key updatig on the keyservers?
[20:52:44] <fikran> that's odd.
[21:01:17] *** Joins: georgios (~georgios@user/georgios)
[21:02:16] *** Joins: Betal (~Betal@user/betal)
[21:03:40] *** Quits: nlhowell1 (~nlhowell@172.58.84.93) (Ping timeout: 250 seconds)
[21:10:38] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[21:11:18] *** Quits: Flow (~none@gentoo/developer/flow) (Ping timeout: 252 seconds)
[21:12:43] *** Quits: emagex (~user@user/emagex) (Read error: Connection reset by peer)
[21:13:22] *** Joins: emagex (~user@user/emagex)
[21:19:43] *** Joins: Flow (~none@gentoo/developer/flow)
[21:20:03] *** Quits: aZa (~aZa@gateway/tor-sasl/aza) (Quit: Leaving)
[21:23:56] *** Quits: [jake] (~jake@user/jake/x-6527376) (Ping timeout: 252 seconds)
[21:36:10] *** Joins: duxsco (~Thunderbi@user/duxsco)
[21:44:38] *** Joins: duxco (~Thunderbi@user/duxsco)
[21:45:57] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 252 seconds)
[21:45:57] *** duxco is now known as duxsco
[21:57:20] <fikran> this is odd.
[21:57:27] <fikran> My key expired, so I created a new one
[21:57:35] <fikran> but, now I cannot upload that new key onto the keyservers?
[22:01:57] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 256 seconds)
[22:12:56] *** Joins: Torr (~Torr@user/torr)
[22:19:59] *** Quits: Torr (~Torr@user/torr) ()
[22:29:38] <henk> fikran: are you aware that you can just extend expiry?
[22:29:54] <henk> also: thatâ€™s not a question but a statement.
[22:30:42] <henk> have you tried uploading on https://keys.openpgp.org/?
[22:35:37] *** Quits: Flow (~none@gentoo/developer/flow) (Ping timeout: 240 seconds)
[22:44:40] *** Joins: Flow (~none@gentoo/developer/flow)
[23:02:31] *** Joins: Narrat (~omnius@p200300df5f13efa406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:08:55] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[23:18:01] <fikran> henk: yeah...i already did it though.
[23:19:07] <fikran> What does the [A] stand for in PGP?
[23:20:34] *** Joins: duxsco (~Thunderbi@user/duxsco)
[23:21:53] <fikran> Authenticate...I see
[23:23:52] <fikran> My Authentication key is expired, is there a way but it is not clear ot me how to extend the timeframe for it
[23:23:53] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:23:53] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:26:48] <henk> --edit-key, select that subkey, not sure how, 'help' will tell you, 'expire'
[23:28:38] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[23:29:10] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:30:08] <fikran> how do you select the subkey?
[23:30:35] <fikran> meaning, my options are just email 1, email 2 or the image I uploaded.
[23:30:38] <fikran> attached*
[23:30:44] <fikran> but, I don't see how to edit a specific subkey
[23:31:50] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[23:33:47] *** Joins: Everything (~Everythin@37.115.210.35)
[23:38:21] <henk> key
[23:38:52] <henk> I told you: read the help. it literally says: Â»key         select subkey NÂ«
[23:40:00] <henk> and itâ€™s like 30 lines â€¦ itâ€™s not like you would have had to read through 5 pages of fineprint â€¦
[23:40:01] <fikran> "key select" invalid command"
[23:40:16] <fikran> keyid - invalid command
[23:40:32] <fikran> HOW do you select the subkey?
[23:40:53] <henk> key 2
[23:43:19] <fikran> ohhh
[23:43:24] <fikran> that wasn't clear ot me, that they had numbers.
[23:43:45] <fikran> I thought the number was for what had the numbers 1, 2, 3 next to them (the emails)
[23:44:03] <fikran> okay, so the key number is not what is numbered, it is what is not numbered...
[23:50:46] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[23:50:57] *** Joins: duxco (~Thunderbi@user/duxsco)
[23:51:24] *** Quits: duxco (~Thunderbi@user/duxsco) (Client Quit)
[23:51:33] *** Joins: duxsco (~Thunderbi@user/duxsco)
[23:51:39] <henk> well, oddly enough it works the same with 'uid' â€¦ welcome to the hell that is the GPG user interface
[23:52:00] *** Quits: duxsco (~Thunderbi@user/duxsco) (Client Quit)
[23:52:12] *** Joins: duxco (~Thunderbi@user/duxsco)
[23:52:40] *** Quits: duxco (~Thunderbi@user/duxsco) (Client Quit)
[23:52:50] *** Joins: duxsco (~Thunderbi@user/duxsco)
[23:52:52] *** Quits: Narrat (~omnius@p200300df5f13efa406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
