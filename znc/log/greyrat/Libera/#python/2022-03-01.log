[00:03:44] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[00:04:37] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2ee:706a:ad8c:2998:9e3c)
[00:05:47] *** Quits: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Iolo)
[00:05:56] *** Joins: OP-0 (~pca290122@178.23.88.224)
[00:06:17] *** Quits: OP-0 (~pca290122@178.23.88.224) (Client Quit)
[00:07:51] *** Joins: neachdainn (~nate@user/neachdainn)
[00:08:27] <neachdainn> Does `Py_InitializeFromConfig` acquire the GIL?
[00:09:16] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 250 seconds)
[00:09:42] *** Joins: Pickchea (~private@user/pickchea)
[00:10:10] <pyeveryt_> thanks SnoopJ
[00:11:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[00:11:50] *** Joins: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[00:14:11] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[00:14:14] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[00:14:31] *** Quits: jemoka (~jemoka@user/jemoka) (Ping timeout: 256 seconds)
[00:14:53] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[00:15:52] *** Joins: zeden (~zeden@user/zeden)
[00:16:00] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[00:17:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:20:32] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi) (Ping timeout: 250 seconds)
[00:21:16] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Read error: Connection reset by peer)
[00:21:54] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:22:55] *** Quits: magla (~gelignite@d5362da6.access.ecotel.net) (Quit: Stay safe!)
[00:23:00] *** Quits: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8) (Ping timeout: 240 seconds)
[00:24:01] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:26:36] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-2403-883c-da0e-8eb1.res6.spectrum.com)
[00:26:58] *** Joins: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6)
[00:27:10] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 260 seconds)
[00:27:15] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[00:27:24] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 272 seconds)
[00:28:18] *** Joins: dld (~davidlowr@73.61.9.0)
[00:29:02] *** Quits: nomic (~nomic@185.192.69.129) (Ping timeout: 240 seconds)
[00:30:18] *** Quits: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net) (Read error: Connection reset by peer)
[00:30:27] *** Joins: holiveros (~holiveros@modemcable254.133-226-192.mc.videotron.ca)
[00:32:17] *** Joins: Thanatos (~Thanatos@105.112.189.56)
[00:32:42] *** Joins: jazzy (~jaziz@user/jaziz)
[00:33:35] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:33:47] *** Quits: dld (~davidlowr@73.61.9.0) (Ping timeout: 256 seconds)
[00:33:50] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[00:34:07] *** Quits: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6) (Changing host)
[00:34:07] *** Joins: drbeco (~beco@user/beco)
[00:34:31] *** Quits: raym (~raym@user/raym) (Read error: Connection reset by peer)
[00:34:38] *** Joins: dld (~davidlowr@2601:197:600:1210:7c23:245c:3a8b:a0db)
[00:35:12] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Quit: Bye, nice, gratefull)
[00:35:33] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[00:35:40] *** Quits: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com) (Quit: leaving)
[00:36:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:37:09] *** Joins: nomic (~nomic@85.203.36.100)
[00:37:33] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:40:48] *** Joins: raym (~raym@user/raym)
[00:41:59] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:42:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:42:36] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 272 seconds)
[00:43:42] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[00:44:55] *** Joins: bahamas (~lucian@84.232.140.52)
[00:45:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[00:46:15] *** Joins: ketiv (~ketiv@cpc151237-sgyl44-2-0-cust232.18-2.cable.virginm.net)
[00:47:18] *** Joins: ^AzRAeL^ (~AzRAeL@203-59-252-2.dyn.iinet.net.au)
[00:47:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[00:48:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[00:48:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:48:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:49:08] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[00:49:17] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[00:49:21] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[00:49:33] *** Joins: noteness (~noteness@user/noteness)
[00:49:34] *** Quits: nathanchapman (~nathancha@139.64.169.128) (Ping timeout: 272 seconds)
[00:49:35] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:50:42] *** Quits: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[00:52:11] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[00:52:13] *** Joins: emad (~emad@102.45.236.212)
[00:52:36] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:8c0d:f444:cd25:7d09) (Remote host closed the connection)
[00:52:39] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[00:52:55] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[00:52:55] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1)
[00:53:20] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[00:54:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[00:55:06] *** Quits: emad (~emad@102.45.236.212) (Client Quit)
[00:56:22] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[00:57:16] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:3cab)
[00:57:19] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[00:57:44] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:57:59] *** Joins: paul424 (~tom@ip-5-172-237-48.multi.internet.cyfrowypolsat.pl)
[00:58:29] <Guest54> hey folks, I'm using click and here's what I want to be able to set my args, like so: python3 foo.py --kv-pairs key1=["foo", bar"], key=["baz", "wut"]
[00:58:34] *** Joins: esther (~esther@155.254.31.185)
[00:58:48] <Guest54> does click support such a use case or do I have to hack something myself?
[00:58:55] <Guest54> would love a pointer in the right direction
[00:58:59] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-79.poda.cz) (Ping timeout: 256 seconds)
[00:59:23] <Guest54> essntially, I want to accept a dict[str, list[str]]
[00:59:45] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[01:00:11] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[01:00:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4) (Quit: Client closed)
[01:01:36] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[01:02:12] <Guest54> let me know if I should rephrase my question:)
[01:02:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:02:36] <phy1729> What does the data represent/would it be reasonable to accept json on stdin instead?
[01:02:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:02:49] <papna> Guest54: I am not 100% sure what you want, but it's worth noting your shell probably doesn't do with that what you would hope it would
[01:02:59] *** Quits: bluedust_ (~bluedust@89.45.224.214) (Remote host closed the connection)
[01:03:31] *** Joins: bluedust (~bluedust@89.45.224.214)
[01:03:33] *** Joins: esther (~esther@155.254.31.185)
[01:03:37] <Guest54> that makes sense, thanks for the feedback
[01:03:57] <phy1729> The traditional shell way to do what you're asking is --key1=foo --key1=bar --key=baz --key=wut   or something like that
[01:04:02] <Guest54> `python3 foo.py --kv-pairs key1=["foo", bar"] key=["baz", "wut"]` -- woudl thismore more like it?
[01:04:03] <Guest54> ok
[01:04:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:04:25] <papna> $ python3 -c 'print(__import__("sys").argv)' foo.py --kv-pairs key1=["foo", "bar"], key=["baz", "wut"]
[01:04:28] <papna> ['-c', 'foo.py', '--kv-pairs', 'key1=[foo,', 'bar],', 'key=[baz,', 'wut]']
[01:04:30] <SnoopJ> or maybe `--key1=foo,bar --key=baz,wut` and then parse from there
[01:04:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:04:36] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998) (Ping timeout: 240 seconds)
[01:04:53] <Guest54> the issue is, these str -> list[str] pairs come from an api and users pass this data into my cli app
[01:04:54] <SnoopJ> click doesn't have anything that helps with this right out of the box, but if you're willing to disallow the space in there, you can do stringy things and then do some parsing of your own
[01:04:58] <phy1729> shells and complex data structures don't really get along
[01:05:12] <phy1729> Guest54: would a pipe between the two be doable?
[01:05:20] <SnoopJ> (or if the user is willing to escape/quote their spaces, I guess)
[01:05:40] <Guest54> phy1729Â  unfortunately not, there are quite separate
[01:05:45] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464)
[01:05:58] <Guest54> can you explain to me a bit how I can make it work if it was json?
[01:06:32] <phy1729> foo prints json to stdout,   foo | bar    bar does   data = json.load(sys.stdin)
[01:07:09] <Guest54> ah ok
[01:07:29] <Guest54> so they'd have to convert it to json...would be a bit inconvenient for them
[01:07:48] *** Quits: resmo (~resmo@2a00:d420:9:8a00:86cb:7359:4b05:dd55) (Ping timeout: 240 seconds)
[01:08:34] <phy1729> If your script is specific to some other command, I'd strongly consider just parsing their output to save your users the trouble
[01:08:34] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 272 seconds)
[01:08:36] <Guest54> all they have is this: {"k1": ["v1", "v2"], "k2": ["v3, "v4"]}," which they got from an external api. It's not even in code form, it's on a UI, so they copy it that stuff from there
[01:08:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4)
[01:09:09] <papna> Accepting this from stdin would be the normalest thing to me too
[01:09:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:09:58] <Guest54> actually `--key1=foo,bar --key=baz,wut` this is perfect
[01:09:59] <phy1729> In that case you could still read from stdin and just let the users copy paste
[01:10:21] <Guest54> however I would like it as such: python3 foo.py --kvpairs key1=foo,bar key2=baz,wut
[01:10:32] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:11:10] *** Joins: esther (~esther@155.254.31.185)
[01:11:25] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[01:11:41] *** lukedashjr is now known as luke-jr
[01:12:42] <SnoopJ> Guest54, are you willing to require that --kvpairs be the last option given?
[01:13:01] *** Joins: djapo (~archangel@user/djapo)
[01:13:20] <SnoopJ> oh, nevermind, nargs=-1 doesn't work for options
[01:13:26] <Guest54> SnoopJ that would not be ideal, because there are more arguments to the cli. So for eg:Â  python3 foo.py --kvpairs key1=foo,bar key2=baz,wut --another_arg 10
[01:13:48] <SnoopJ> Guest54, the problem with the syntax you want is that there's no way to tell where the data that goes with --kvpairs ends
[01:14:43] <nedbat> i'm a little surprised at people's revulsion to this surprising capability: https://twitter.com/nedbat/status/1498310018218676229  to me, that code neatly expresses what it needed to do.
[01:14:44] <SnoopJ> Guest54, how about `--kvpairs "key1=foo,bar key2=baz,wut"`? Note that the "" resolve the problem I just mentioned
[01:15:14] <Guest54> that would be great :)
[01:15:32] <Guest54> yes it would be perfect - does click support this?
[01:15:51] <SnoopJ> not directly, but that commandline syntax should make it possible to do with a little extra code
[01:15:52] <Guest54> or would I have to parse the string myself
[01:15:55] <SnoopJ> the latter
[01:16:17] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[01:16:26] <Guest54> ok cool thanks for the pointers
[01:16:50] <Guest54> do you know of a library I could use toÂ  parseÂ  "key1=foo,bar key2=baz,wut"` into a dict[str->list[str]]?
[01:17:15] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[01:18:30] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[01:18:55] <SnoopJ> Guest54, how does this look? https://bpa.st/IF6A
[01:19:27] <SnoopJ> You'd want to handle more of the possible error/edge cases in real code but it's not too bad to take a string into click and parse from there
[01:19:34] *** Joins: pycurious (~Adium@user/pycurious)
[01:20:06] <Guest54> wow thanks very much!! This is super helpful :)
[01:20:25] <SnoopJ> nedbat, is it really expressing the assignment, though?
[01:20:31] <SnoopJ> (it is indeed surprising!)
[01:21:08] <SnoopJ> Guest54, does it make sense?
[01:21:09] <nedbat> SnoopJ: i want to use the same dict throughout the iterations, with just one key incrementing.  So:  for params["page"] in ....    is just what I want.
[01:21:31] <Guest54> yep
[01:21:51] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[01:22:04] <SnoopJ> nedbat, sure, I am just wondering if that's why people find it off-putting, because the assignment is kinda implicit I guess
[01:22:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:22:26] <SnoopJ> Very clever way to do pagination though :)
[01:25:36] <SnoopJ> It's not any more implicit than the assignment that happens when the target is one or more NAMEs, I suppose, and I don't see any way to misread it
[01:26:42] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:26:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[01:27:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:28:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:28:56] *** Joins: esther (~esther@155.254.31.185)
[01:29:21] *** Joins: theelous3 (~theelous3@109.255.56.189)
[01:30:08] <gjvc> Guest54: s = 'key1=foo,bar key2=baz,wut' ; { key: value for key, value in [ kv.split( '=' ) for kv in s.split() ] }
[01:31:06] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:31:15] <gjvc> Guest54: { key: value.split( ',' ) for key, value in [ kv.split( '=' ) for kv in s.split() ] } might be better still
[01:31:47] *** Joins: crashrep (~crashrep@user/crashrep)
[01:32:07] <Gustavo6046> Hy is very interesting
[01:32:24] *** Parts: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[01:32:28] <SnoopJ> I went with str.partition() to give an error if someone tries `--kv-pairs foo,bar`...but, oops, it doesn't actually do this ð¬
[01:33:13] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[01:33:33] <SnoopJ> I guess you'd have to assert on both keys and vals to be sure the user didn't pass an incomplete specification
[01:37:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:38:05] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:39:38] *** Quits: ^AzRAeL^ (~AzRAeL@203-59-252-2.dyn.iinet.net.au) (Remote host closed the connection)
[01:39:53] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[01:39:56] *** Joins: esther (~esther@155.254.31.185)
[01:41:59] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 250 seconds)
[01:42:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:43:31] *** Quits: jamea22 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 256 seconds)
[01:43:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:44:19] <merrinx> anyone one with a tinybit experience with pycryptodome?
[01:45:00] <SnoopJ> merrinx, let's assume yes, ask your next question
[01:45:17] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:45:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:45:21] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[01:45:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:45:56] <merrinx> i will write in godbolt, brb
[01:46:27] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[01:46:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:47:08] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-94.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:48:08] *** Joins: esther (~esther@155.254.31.185)
[01:48:38] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223)
[01:49:57] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223) (Client Quit)
[01:50:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:50:56] <merrinx> https://godbolt.org/z/nhe38PadP
[01:51:06] <merrinx> please se if you can help, if the question at all make sense
[01:51:49] *** Joins: rvca (~rov@node-1w7jr9quuehla0t8cfjb6enog.ipv6.telus.net)
[01:51:55] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[01:52:54] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223)
[01:53:51] <Gustavo6046> how does string slicing work in Hy?
[01:54:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[01:54:57] *** Joins: esther (~esther@155.254.31.185)
[01:56:17] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[01:56:34] <mags> If L is a list, are all the following equivalent?: `L.append(X)` `L[len(L):]=[X]` `L.insert(len(L),X)` `L.extend([X])` `L+=[X]`
[01:57:02] *** Quits: rvca (~rov@node-1w7jr9quuehla0t8cfjb6enog.ipv6.telus.net) (Quit: Leaving)
[01:57:40] <mags> the only one I am unsure of the += operator, is that making a new list, or appending in place?
[01:57:42] *** Joins: rje (~textual@65.141.156.170)
[01:57:51] <Repiphany> += modifies the list in place
[01:58:15] <neachdainn> Is it possible to get a C extension to have importable sub-modules without also shipping around a set of `*.py` files?
[01:59:04] <SnoopJ> neachdainn, sure, you can define the sub-modules in the C extension and put them in the main module's namespace
[02:00:16] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:00:20] <SnoopJ> if you want to do it from *.py source, you might want to look at how CPython "freezes" modules (see Tools/freeze)
[02:00:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4) (Quit: Client closed)
[02:00:42] <neachdainn> I don't think I worded my question now. I have a C extension with `foo` that has a submodule `bar`. I want to be able to `import foo.bar.Baz`. Right now, I get "foo is not a package"
[02:00:43] <mags> where is the += operator documented?  I don't see it in dir(list) or help(list).
[02:00:58] <neachdainn> s/now/correctly/
[02:01:04] <neachdainn> Geez, I'm on a roll.
[02:01:14] <octav1a> a kaiser roll?
[02:01:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[02:01:40] *** Joins: XV8 (~XV8@2601:5cb:c001:50::c80f)
[02:01:46] *** Joins: nathanchapman (~nathancha@139.64.169.128)
[02:02:13] <grym> mm, hard roll and butter
[02:02:18] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:02:44] <SnoopJ> mags, it's mentioned in the data model reference, but it might be more helpful to you if you tell us what you want to learn about it. https://docs.python.org/3/reference/datamodel.html#object.__iadd__
[02:04:09] <SnoopJ> re: my earlier question about cmake/SWIG and the output location on Windows, I had to set CMAKE_RUNTIME_OUTPUT_DIRECTORY_<config> because I guess MSVC likes to make things more complicated.
[02:04:25] <SnoopJ> or probably RUNTIME_OUTPUT_DIRECTORY_<config> on the target itself
[02:04:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[02:05:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:05:33] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[02:05:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[02:06:49] <SnoopJ> yep, that works too
[02:06:55] <mags> SnoopJ: just noticing that += adds in place on lists, while something like L = L + [X] creates a new list, just wondering where the official documentation on that was
[02:08:29] <SnoopJ> mags, `L = L + [X]` can be translated to English as "Add [X] to whatever object L is currently pointing to, then update the name L to point to the result"
[02:08:52] <SnoopJ> I don't know of a particular part of the docs that would help you understand it, but this is a classic read that might clear it up some: https://nedbatchelder.com/text/names1.html
[02:08:58] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[02:09:08] <phy1729> mags: https://docs.python.org/3/reference/simple_stmts.html#augmented-assignment-statements notes "Also, when possible, the actual operation is performed in-place, meaning that rather than creating a new object and assigning that to the target, the old object is modified instead."
[02:09:22] <mags> I understand it.  Just wanted to know where it was in the docs
[02:10:00] *** Joins: esther (~esther@155.254.31.185)
[02:10:00] <SnoopJ> well, the above reference on statements is where statements are described
[02:10:21] <mags> yup, thanks
[02:10:23] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:3cab) (Ping timeout: 256 seconds)
[02:10:46] <jinsun> mentioned for lists specifically here https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types
[02:10:50] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:11:06] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:11:09] *** Quits: data68 (~data@2a02:908:a65:3d80:bd7e:1b68:7356:a97d) (Quit: WeeChat 1.4)
[02:11:35] *** Joins: mickey8 (~user@user/mickey)
[02:12:39] *** Quits: XV8 (~XV8@2601:5cb:c001:50::c80f) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[02:13:00] *** Quits: paul424 (~tom@ip-5-172-237-48.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[02:13:32] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:13:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:14:30] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 250 seconds)
[02:14:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:39] *** Joins: craven (~username@c-73-4-114-202.hsd1.ma.comcast.net)
[02:15:42] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:5043:184:7f47:92c1) (Remote host closed the connection)
[02:16:11] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[02:16:21] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:17:00] <craven> QQ: what is the most performant way to append to a file? I have a text file that may grow large (1GB+). To pickle a DS, unpickle, append, overwrite new pickle seems not good.
[02:17:14] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[02:17:14] *** Joins: data68 (~data@2a02:908:a65:3d80:28f0:dd3b:3f9a:8865)
[02:17:18] *** Quits: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Iolo)
[02:17:27] <craven> I had a thought that appending to a text file will be fast regardless of the size, but not sure if that is true, thoughts?
[02:17:52] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Quit: No Ping reply in 180 seconds.)
[02:17:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:18:23] <nedbat> craven: that will depend on the OS, and should be easy to test
[02:18:44] <Repiphany> Smells like you might to think about a database
[02:19:04] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[02:19:27] <craven> ahh, OK, maybe I will leverage sqlite3
[02:19:35] <ChrisWarrick> yeah, sqlite3 is great
[02:19:37] *** Quits: upsala (~zcb@185.209.196.139) (Read error: Connection reset by peer)
[02:19:41] <craven> great idea, thanks
[02:19:46] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[02:19:56] *** Joins: upsala (~zcb@185.209.196.139)
[02:20:01] *** Joins: akk (~akk@75.161.130.204)
[02:20:08] <ChrisWarrick> https://www.sqlite.org/fasterthanfs.html
[02:20:12] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:20:57] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:22:51] <craven> I'll see not sure i can leave the db connection open between calls
[02:23:09] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[02:23:45] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[02:24:54] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[02:28:06] *** Quits: upsala (~zcb@185.209.196.139) (Quit: WeeChat 3.4)
[02:29:05] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[02:29:22] *** Joins: esther (~esther@155.254.31.185)
[02:29:28] *** Joins: virmire[m] (~virmirema@2001:470:69fc:105::1:cdaf)
[02:29:42] *** Joins: newpy (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398)
[02:30:31] *** Quits: nathanchapman (~nathancha@139.64.169.128) (Ping timeout: 256 seconds)
[02:30:46] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:33:41] *** Joins: Cera (~Cera@user/Cera)
[02:34:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:34:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4)
[02:35:55] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 240 seconds)
[02:35:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:36:20] *** Joins: virmire (~Virmire@p200300cfc72643011f964bb9e801fb6b.dip0.t-ipconnect.de)
[02:36:46] *** Parts: virmire[m] (~virmirema@2001:470:69fc:105::1:cdaf) ()
[02:37:38] *** Joins: Adoi (~Adoi@user/adoi)
[02:37:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[02:38:08] *** Joins: vaio (~gary@user/ghost)
[02:39:56] *** Joins: esther (~esther@155.254.31.185)
[02:40:12] *** Quits: Thanatos (~Thanatos@105.112.189.56) (Read error: Connection reset by peer)
[02:41:49] *** Joins: cation21 (cation@user/cation)
[02:42:27] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[02:42:47] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[02:42:51] *** Quits: cation (cation@user/cation) (Ping timeout: 245 seconds)
[02:43:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:43:55] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 240 seconds)
[02:44:18] *** Joins: hiroshi_ (~freedom@151.37.124.250)
[02:44:34] <Adoi> hello, "selenium" library works with PhantomJS in some examples. yet the latter is no more active, as it seems. is there a replacement for PhantomJS in Selenium / Python?
[02:44:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:45:14] *** cation21 is now known as cation
[02:45:37] <ChrisWarrick> Adoi: youâd typically use your favorite web browser
[02:46:01] *** Joins: virmire1 (~Virmire@p200300cfc7264301560b5512c6bf7e3e.dip0.t-ipconnect.de)
[02:46:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:46:44] *** Quits: virmire1 (~Virmire@p200300cfc7264301560b5512c6bf7e3e.dip0.t-ipconnect.de) (Client Quit)
[02:47:08] <ChrisWarrick> Adoi: https://www.selenium.dev/documentation/webdriver/getting_started/install_drivers/
[02:47:09] *** Quits: virmire (~Virmire@p200300cfc72643011f964bb9e801fb6b.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[02:47:13] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[02:47:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:48:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:49:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[02:50:21] <Adoi> ChrisWarrick, there is also Selenium IDE"
[02:50:34] <Adoi> as browser add-on.
[02:50:37] *** Quits: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 240 seconds)
[02:50:50] <Adoi> do I need that?
[02:51:06] <ChrisWarrick> no
[02:52:06] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223) (Quit: Leaving)
[02:52:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:52:38] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:52:51] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:53:14] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:53:47] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[02:54:00] <Adoi> ok, thanks
[02:54:06] *** Joins: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[02:55:41] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:56:24] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:56:48] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:57:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:57:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[02:57:25] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:58:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[02:58:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[02:59:04] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[02:59:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:00:01] *** Joins: jancoow (~jancoow@user/jancoow)
[03:00:14] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:00:15] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:00:40] *** Quits: Adoi (~Adoi@user/adoi) (Read error: Connection reset by peer)
[03:01:02] *** Joins: ClutchCarlo (~ca101098@45-29-156-97.lightspeed.irvnca.sbcglobal.net)
[03:01:24] *** Joins: Batzy (~quassel@user/batzy)
[03:01:46] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998)
[03:01:55] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[03:02:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:03:22] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:03:32] *** Joins: oprypin (~irc@pryp.in)
[03:04:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[03:05:09] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[03:06:33] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[03:06:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[03:07:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:07:26] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:50da:5cb6:2c18:f59d) (Ping timeout: 245 seconds)
[03:07:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:08:02] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[03:08:13] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:08:54] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 272 seconds)
[03:09:19] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[03:09:43] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:09:44] <octav1a> Does anyone know in matplot lib if there's a way to just draw chains of boxes on a plot similat to this? https://bioconductor.org/packages/devel/bioc/vignettes/wiggleplotr/inst/doc/wiggleplotr.html
[03:10:02] *** Joins: esther (~esther@155.254.31.185)
[03:10:10] <octav1a> I don't even need it to be fancy, just lines of rectangles with labels for each line
[03:11:04] *** Joins: icy_hot (~icy_hot@222.98.218.99)
[03:11:10] *** Parts: holiveros (~holiveros@modemcable254.133-226-192.mc.videotron.ca) ()
[03:11:11] *** Joins: XV8 (~XV8@2601:5cb:c001:50::c80f)
[03:11:59] *** Joins: KevinX (~KevinX@user/KevinX)
[03:12:24] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:12:28] <SnoopJ> octav1a, you can draw Rectangles and Lines fairly arbitrarily, but I'm not aware of anything in matplotlib that does exactly what you want right out of the box.
[03:13:08] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[03:14:03] *** Joins: Xardas (~Xardas@149.233.51.127)
[03:14:33] *** Quits: Angs (~Angs@2.68.51.73.mobile.tre.se) (Quit: Leaving)
[03:14:56] <octav1a> SnoopJ: would you recommend using matplotlib in general for drawing with python ?
[03:15:06] <SnoopJ> it's a good choice for plotting
[03:15:38] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:16:13] *** Joins: Sky_Net (~Sky_Net@2.92.127.222)
[03:16:37] *** Joins: dul (~dul@user/dul)
[03:16:44] <Sky_Net> hello all
[03:17:27] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:17:38] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:7d02:fe87:c247:a37c) (Ping timeout: 252 seconds)
[03:18:18] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[03:18:34] *** Quits: Sky_Net (~Sky_Net@2.92.127.222) (Killed (ozone (No Spam)))
[03:19:40] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[03:19:41] *** Quits: hams (~hams@user/hams) (Ping timeout: 250 seconds)
[03:19:50] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[03:20:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:20:42] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:21:49] *** Quits: XV8 (~XV8@2601:5cb:c001:50::c80f) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[03:22:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:22:33] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[03:23:40] *** Joins: zlg (~zlg@user/zlg)
[03:23:50] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:24:52] *** Joins: arcaile (~arcaile@188.126.94.99)
[03:28:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[03:28:56] *** Joins: esther (~esther@155.254.31.185)
[03:29:01] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:29:44] *** Quits: hiroshi_ (~freedom@151.37.124.250) (Quit: hiroshi_)
[03:30:19] *** Joins: blei (~blei@user/blei)
[03:30:50] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:30:58] *** Joins: Sky_Net (~user@2.92.127.222)
[03:31:04] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[03:32:32] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[03:33:03] *** Quits: Sky_Net (~user@2.92.127.222) (Client Quit)
[03:33:39] *** Quits: Siecje (~Siecje@97.111.200.32) (Remote host closed the connection)
[03:33:40] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:33:44] *** Joins: Sky_Net (~Sky_Net@2.92.127.222)
[03:34:29] <blei> i'm looking for an established pattern to spin up N threads, take the result from the first to finish, and kill the rest
[03:34:52] <nedbat> blei: you can't kill a thread from outside the thread
[03:35:00] <nedbat> Sky_Net: hey there
[03:35:04] <kungp> is it reasonable to have an infinite loop with multiprocessing, sending data? i can only find examples where they use it to run a bunch of stuff in parallel then join
[03:35:10] <blei> thread / process / any form of multicore parallelism
[03:35:16] *** Quits: icy_hot (~icy_hot@222.98.218.99) (Quit: WeeChat 3.4)
[03:35:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[03:35:45] <blei> nedbat what do you think about the first snippet here? https://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread/
[03:35:56] *** Joins: humbertowoody (~humbertow@187.202.238.192)
[03:35:57] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:36:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[03:37:13] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[03:37:31] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[03:37:40] *** Joins: nomic (~nomic@85.203.36.100)
[03:37:41] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[03:38:22] <nedbat> blei: i don't know anything about the C API for threads
[03:38:44] <SnoopJ> would a ThreadPool be able to reap threads if you terminated it after a first result?
[03:38:54] <nedbat> if I'm making asyncio tasks, I can do this:  tasks [ make_task(...) for i in range(10) ]   # where I wrote make_task
[03:38:56] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[03:39:21] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:39:26] <nedbat> but if oneof the make_tasks raises an exception, then the previous tasks are orphaned, and cause "never awaited" errors
[03:39:37] <nedbat> is there a way to cancel a bunch of tasks that aren't going to run?
[03:40:31] *** Quits: Kruppt (~Kruppt@50-111-36-218.drhm.nc.frontiernet.net) (Quit: Leaving)
[03:40:59] *** Joins: Wulf (~Wulf@user/wulf)
[03:41:38] *** Joins: dexter (~dexter@2601:187:8080:b9f0::a9e3)
[03:41:44] *** Joins: twb (~twb@2403-5804-c6--cfeb-44f7-7895-9800.ip6.aussiebb.net)
[03:43:19] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:43:22] <nedbat> oh: task.cancel() doesn't work if the task was never awaited. How can i just discard a task?
[03:43:38] *** Joins: funhouse (~funhouse@user/funhouse)
[03:43:38] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:43:42] <twb> psycopg2.extras.register_ipaddress() lets me get ipaddress.IPv4Address objects *from* postgres.  How do I get an adapter so I can get IPv4Address objects *into* psycopg2?
[03:43:45] *** Quits: Y4kuzi (~provision@85.159.233.183) (Quit: Ping timeout (120 seconds))
[03:43:48] <twb> * into pg, I mean
[03:43:59] *** Joins: Y4kuzi (~provision@85.159.233.183)
[03:44:36] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 240 seconds)
[03:45:32] *** Quits: supast2pid (~dexter@2601:187:8080:b9f0:e866:18dc:4f12:81f1) (Ping timeout: 240 seconds)
[03:46:09] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 256 seconds)
[03:46:23] *** Joins: chilversc (~chilversc@user/chilversc)
[03:46:49] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[03:47:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:47:01] *** Quits: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 256 seconds)
[03:48:01] *** Quits: mossman93 (~quassel@user/mossman93) (Read error: Connection reset by peer)
[03:48:14] *** Joins: mossman93 (~quassel@user/mossman93)
[03:48:15] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1:d69a:97d2:7a78) (Quit: Textual IRC Client: www.textualapp.com)
[03:48:24] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:49:42] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:49:51] <twb> OK I worked it out
[03:50:03] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[03:50:08] <twb> psycopg2 only registers ipaddress.IPv4Interface not ipaddress.IPv4Address
[03:50:39] <twb> http://ix.io/3R2R
[03:51:07] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[03:51:13] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[03:51:23] *** Joins: justAstache (~justache@user/justache)
[03:51:32] *** Quits: grimvar (~grimvar@i5C75FEC7.versanet.de) (Ping timeout: 240 seconds)
[03:51:58] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 272 seconds)
[03:53:17] *** Joins: esther (~esther@155.254.31.185)
[03:53:18] *** Joins: grimvar (~grimvar@i5C75FE23.versanet.de)
[03:54:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:55:47] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[03:56:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:58:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[03:59:35] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[03:59:36] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-34.xplornet.com) (Read error: Connection reset by peer)
[04:01:42] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com)
[04:01:44] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:03:23] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Quit: harpia)
[04:03:36] *** Joins: harpia (~harpia@143.208.84.100)
[04:04:12] *** Quits: Sky_Net (~Sky_Net@2.92.127.222) (Changing host)
[04:04:12] *** Joins: Sky_Net (~Sky_Net@user/Sky-Net/x-6847796)
[04:04:16] *** Joins: mickey8 (~user@user/mickey)
[04:04:56] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[04:05:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[04:06:51] *** Quits: data68 (~data@2a02:908:a65:3d80:28f0:dd3b:3f9a:8865) (Quit: WeeChat 1.4)
[04:07:18] *** Quits: Sky_Net (~Sky_Net@user/Sky-Net/x-6847796) (Quit: Leaving)
[04:07:28] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[04:07:58] <jinsun> nedbat: is make_task making a Task or a Coroutine? I was trying a random example and I get the not awaited warning only with coroutines not with Tasks
[04:08:15] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[04:08:28] <nedbat> jinsun: i'm realizing that coro and task are different :)   it's a coroutine, and i need .close(), not .cancel()
[04:08:33] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[04:08:47] *** Joins: data68 (~data@2a02:908:a65:3d80:28f0:dd3b:3f9a:8865)
[04:08:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[04:08:59] *** Joins: mickey8 (~user@user/mickey)
[04:09:10] *** Quits: theelous3 (~theelous3@109.255.56.189) (Read error: Connection reset by peer)
[04:09:19] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4) (Quit: Client closed)
[04:10:24] *** Joins: esther (~esther@155.254.31.185)
[04:10:51] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[04:12:58] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:13:47] <jinsun> oh yeah coroutines don't even have a cancel, andI just found out now there is .close for coroutine :)
[04:13:55] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:14:04] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:15:53] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f5fd:6d24:f127:5cb6)
[04:16:29] *** Quits: cgrage (~cgrage@107.175.102.105) (Ping timeout: 256 seconds)
[04:17:00] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 240 seconds)
[04:17:00] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[04:17:06] *** Joins: drbeco (~beco@user/beco)
[04:18:16] *** Joins: masoudd (~masoudd@user/masoudd)
[04:18:19] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[04:19:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[04:20:57] *** Joins: esther (~esther@155.254.31.185)
[04:21:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:22:28] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:22:39] *** Quits: craven (~username@c-73-4-114-202.hsd1.ma.comcast.net) (Quit: leaving)
[04:23:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:23:57] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 240 seconds)
[04:25:53] *** Joins: nathanchapman (~nathancha@139.64.171.72)
[04:27:16] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[04:27:47] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:27:51] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464) (Ping timeout: 256 seconds)
[04:28:59] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[04:29:54] *** Parts: ClutchCarlo (~ca101098@45-29-156-97.lightspeed.irvnca.sbcglobal.net) ()
[04:30:13] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl4892iz4e30nh4vh.ipv6.telus.net)
[04:30:17] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:30:40] *** Joins: Xardas (~Xardas@149.233.51.127)
[04:31:47] *** Joins: parv (~quass@user/parv)
[04:31:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:32:21] <mattf> i could create this myself but i think it is on the stdlib. How can i have a lru_cache that i can set the maxsize, but functools.lru_cache is a decorator and what a want is to be able to have a variable (a dict or list) that i can append to and once it grows bigger than the max size it will dischart the less used
[04:32:32] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:32:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:32:50] <mattf> actually thinking better it would be better to drop the lru thing... i just want the last max_size items to stay on the list and the older gets dropped first
[04:32:58] <mattf> so it is basically a max sized list
[04:33:02] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:33:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:33:09] <mattf> is there something like that on the stdlib
[04:33:24] *** Quits: Jong (~Jong@2620:10d:c090:400::5:804e) (Ping timeout: 240 seconds)
[04:33:24] <parv> queue
[04:33:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:33:55] <SnoopJ> mattf, does collections.deque meet your needs? it can be defined with a maxlen parameter
[04:34:07] <mattf> let me see
[04:35:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:35:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:36:13] <mattf> SnoopJ: perfect
[04:36:14] <mattf> thanks
[04:37:00] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[04:37:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:37:35] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:37:35] *** Joins: humberto1 (~humbertow@189.236.30.197)
[04:37:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:37:59] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl4892iz4e30nh4vh.ipv6.telus.net) (Remote host closed the connection)
[04:38:12] *** Quits: humbertowoody (~humbertow@187.202.238.192) (Ping timeout: 240 seconds)
[04:39:02] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (Ping timeout: 240 seconds)
[04:39:09] *** Joins: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net)
[04:39:17] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[04:40:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:40:03] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[04:40:06] *** Quits: flokuehn (~flokuehn@87.123.247.66) (Ping timeout: 272 seconds)
[04:40:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:41:34] *** Joins: flokuehn (~flokuehn@87.123.247.48)
[04:41:47] <Jonno_FTW> is there an operator that will do this n//y*y ?
[04:42:12] <Jonno_FTW> basically, I just want to round down, so 55 becomes 50
[04:42:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[04:42:44] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 268 seconds)
[04:43:22] *** Quits: Auron (Auron956@user/auron) ()
[04:43:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:43:36] *** Joins: cgrage (~cgrage@107.175.102.107)
[04:43:52] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:44:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:44:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:44:20] *** Joins: waynew (~wayne@user/waynew)
[04:45:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:45:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:45:59] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[04:46:19] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[04:46:37] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:47:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:47:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:47:55] *** Quits: akk (~akk@75.161.130.204) (Quit: +++)
[04:48:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:48:22] *** Joins: jamea (~jamea@177.239.81.39)
[04:48:28] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:48:59] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[04:49:36] *** Quits: cgrage (~cgrage@107.175.102.107) (Ping timeout: 272 seconds)
[04:50:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:50:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:50:37] *** Quits: remote (~self@user/hackers) (Ping timeout: 240 seconds)
[04:50:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:52:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:52:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:53:20] *** Quits: arinov (~arinov@77.67.133.10) (Ping timeout: 252 seconds)
[04:53:38] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:54:41] *** Joins: razzd777 (~razzd777@user/razzd777)
[04:54:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:55:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:57:00] <nedbat> jinsun: now i see messages about futures.  coro, task, future.  any tips on understanding the differences?
[04:57:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:57:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:57:52] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:59:13] *** Joins: formhsdsd (~formhsdsd@47.195.15.236)
[04:59:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[05:00:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:00:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:00:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:01:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4)
[05:02:05] *** Joins: cgrage (~cgrage@107.175.102.109)
[05:02:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:02:47] *** Joins: Emet-Selch (~haise01@user/haise01)
[05:02:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:03:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998) (Ping timeout: 240 seconds)
[05:03:32] *** Quits: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 240 seconds)
[05:03:46] <twb> When doing "root_path / a / b / c", does pathlib have a way to "sanitize" hostile user-supplied a, b, c?
[05:04:15] <jinsun> nedbat: so they are similar in the sense that you can await them, all of them are awaitable, coroutine is the the more fundametal thing, not asyncio specific, you get it when you call a async def
[05:04:18] <twb> That is, I want to guarantee that they're individual path components, i.e. don't contain /
[05:04:34] <twb> Right now I'm doing a = re.sub('[ /\x00]+', ' ', a)   which is awful
[05:05:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:05:10] *** Joins: bluedust (~bluedust@89.45.224.214)
[05:05:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:06:21] *** Quits: cgrage (~cgrage@107.175.102.109) (Ping timeout: 256 seconds)
[05:06:25] <nedbat> jinsun: so future and task are asyncio-specific?
[05:07:00] <jinsun> nedbat: yeah Task and Future are asycio specific things, and I'm not really sure why both have to exist, the most obvious way they differ from coroutines is that they can be scheduled to run in the asyccio event loop without awaiting them
[05:07:00] <SnoopJ> twb, you could do `assert all(not Path(p).is_absolute() for p in (a,b,c))`
[05:07:16] *** Joins: audio (~audio@user/audio)
[05:07:16] <SnoopJ> or some other test revolving around is_absolute()
[05:07:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:07:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:09:49] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:10:01] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 256 seconds)
[05:10:03] *** dexter is now known as supas2pid
[05:10:13] *** supas2pid is now known as supastupid
[05:10:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:10:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:12:16] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Read error: Connection reset by peer)
[05:12:29] <jinsun> nedbat: Future is more "low-level" and it was designed to mimic concurrent.futures.Future apparently, Future may be returned by some asyncio methods, but  normally you would make with coroutines and Tasks only, the docs mention those 3 here (and don't explain very well) https://docs.python.org/3/library/asyncio-task.html#awaitables
[05:12:40] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[05:12:42] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[05:12:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:13:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:13:11] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::ae8)
[05:14:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:14:36] *** Quits: tdcly^ (~tdcly@12.163.216.98) (Remote host closed the connection)
[05:14:47] <twb> is_absolute only checks if it starts with a /
[05:15:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:15:29] *** Parts: lainon (~lainon@2601:7c0:c500:4d20::ae8) ()
[05:15:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:15:37] <twb> I guess I could do something like pathlib.Path(a).name == a
[05:16:33] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:16:46] <twb> But I really need to sanitize and not just drop those cases on the floor
[05:16:58] <jinsun> nedbat: and to clarify the the "asyncio specific" part, it means that when you use some other async framework like Trio you will still have coroutines, but you can't use asyncio.Task or asyncio.Future, there will be Trio equivalent for Task and Future and the event loop will be different
[05:17:18] <nedbat> jinsun: that is a very helpful perspective
[05:17:31] <twb> Since the input might legitimately use / e.g. "Adventure Time S1E1 (Hats are Cool / The Problem With Ferrets)"
[05:17:37] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:17:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:18:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:20:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:20:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:21:57] <SnoopJ> twb, *oh* sorry, I misunderstood. Is there some reason not to test `"/" in thing` ?
[05:22:23] <twb> SnoopJ: because then I'm doing pathlib's job
[05:22:25] <SnoopJ> oh, I've misunderstood again, haven't I
[05:22:31] <SnoopJ> You don't want to forbid this, just to allow it
[05:22:33] <twb> SnoopJ: it's more a moral thing than a practical thing
[05:22:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f140:5a11:77e8:c1a4) (Quit: Client closed)
[05:22:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:23:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:23:05] <twb> I want to say "pathlib here is a path component" not "pathlib here is a string of zero or more path components encoded as a string"
[05:23:40] *** Joins: arinov (~arinov@78.162.41.211)
[05:23:58] <twb> And if I give pathlib a path component that contains illegal characters (which on Unix is '/' or '\0') it should either throw an exception, or escape them in some "sensible" way
[05:24:50] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[05:25:09] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:25:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:25:21] <SnoopJ> I'm not aware of any functionality for this in pathlib, personally
[05:25:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:26:24] <twb> I think in the meantime instead of a.replace('/', ' ') I can at least use somethign like ' '.join(pathlib.Path(a).parts)
[05:27:36] <twb> Well this is a crock of shit.  pathlib allows pathlib.PosixPath('\0') even though that's illegal in posix
[05:27:43] *** Joins: kaivai (~kaivai@user/kaivai)
[05:27:52] <twb> pathlib.PosixPath('\0').write_text('UH OH') ==> ValueError: embedded null byte
[05:28:52] *** Quits: nathanchapman (~nathancha@139.64.171.72) (Ping timeout: 272 seconds)
[05:29:43] *** Joins: Betal (~Betal@user/betal)
[05:29:49] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:30:17] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[05:30:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[05:30:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:30:36] *** Joins: bindu (~bindu@user/bindu)
[05:30:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:31:17] <jinsun> you Path("\0").resolve() can tell you that without trying to write anything
[05:31:26] *** Joins: dsrt^ (~dsrt@12.163.216.98)
[05:32:29] <twb> Ah yeah pathlib only has 1 form of readlink canonicalize, where GNU readlink(1) has 3
[05:32:45] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:32:46] <twb> --canonicalize / --canonicalize-existing / --canonicalize-missing
[05:33:01] <twb> BTW this is where POSIX says \0 is illegal in a path component https://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html#tag_03_266
[05:33:06] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f783)
[05:33:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:33:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:33:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:33:56] <twb> jinsun: .resolve() will do the wrong thing if the file may already exist
[05:34:26] <twb> I mean... if you're just checking "got exception" vs "no exception" it is OK
[05:34:49] *** Joins: crashrep (~crashrep@user/crashrep)
[05:35:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:35:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:35:46] <jinsun> what would be the "right thing" to do? replace illegal characters with something to make it valid?
[05:36:17] <TML> twb: I don't think pathlib is intended to be used for sanitizing paths - at least, I've never read anything in the documentation for pathlib that led me to expect it to do so
[05:36:48] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:37:21] <twb> TML: it's a bit disappointing.  I mean, I would expect a library that implements URL objects, or email address objects, to provide validation and normalization.
[05:37:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:37:42] <TML> maybe the concrete paths have an occasional side-effect of doing so by virtue of the underlying filesystem providing said behaviour, but I don't think it's what pathlib is meant for
[05:37:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:38:03] <twb> TML: then why does it have explicit PosixPath objects
[05:38:53] *** Joins: Thanatos (~Thanatos@105.112.30.178)
[05:39:02] <TML> twb: So you can distinguish which behaviour you want it to take between Windows-style paths and Posix-style paths
[05:39:19] <twb> jinsun: from a moral standpoint the correct thing would just be to throw a ValueError, although some sort of escaping would be nice.  urllib has similar escaping functions for URLs.
[05:40:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[05:40:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:40:45] *** Joins: rje (~textual@50.35.241.164)
[05:40:47] *** Quits: Thanatos (~Thanatos@105.112.30.178) (Read error: Connection reset by peer)
[05:41:01] <jinsun> well, Path("\0").resolve() does throw a ValueError
[05:41:35] <twb> jinsun: yeah although only if you're on a posix OS at the time, because it's only happening via libc
[05:42:12] <dba> How do I tell python 2.0 if not float?
[05:42:22] <dba> is**
[05:42:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:42:32] <twb> python 2.0 is EOL'd
[05:42:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:43:06] <grym> dba: but it is a float
[05:43:26] <jinsun> twb: ah okay you want a it to tell just from the string, so to maintain a set of invalid characters or something, yeah pathlib doesn't do that
[05:44:20] <twb> jinsun: yeah.  Partly because I am coming from Common Lisp which had an equivalent of pathlib (but even better) literally 30 years ago
[05:44:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:44:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:45:01] <twb> jinsun: it's frustrating whenever I run into the attitude of "herp derp just use char* for everything" and then slowly bolting strict typing on top
[05:45:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:45:22] <dba> grym: I know but I `x = number / (i + 1)` always return float therefore `if isinstance(x, int)` is always false. So I want to know if x is an even number not like 2.4 or 1,33
[05:45:37] <TML> dba: //
[05:45:59] <TML> dba: x = number // (i+1)
[05:46:02] <twb> (e.g. Python has no built-in datatype for email addresses, which sort case-sensitively before the @ and case-insensitively after the @)
[05:46:14] <dba> TML, Thanks
[05:46:19] *** Joins: nathanchapman (~nathancha@139.64.169.128)
[05:46:45] <twb> When I want an integer I generally just do int(a // 3)
[05:47:29] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹ÑÐ°!)
[05:47:30] <TML> twb: I would recommend either learning how to let go of such frustrations, or maybe go back to Common Lisp, because expecting Python to behave like Common Lisp isn't going to go so well for your emtional well-being
[05:47:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:47:40] <twb> TML: no kidding :-)
[05:47:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:48:01] <TML> It's really not that hard to just meet each language on its own terms
[05:48:02] <twb> Like why does EVERYONE still use strings to represent regular expressions
[05:48:14] <jinsun> dba: floats have a .is_integer(), that could be useful? (2.0).is_integer() gives True
[05:48:27] <grym> jinsun: ... huh.  TIL
[05:48:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:48:57] <TML> dba: Or you might actually be looking for the % operator, which gives you the remainder from the division
[05:48:58] <twb> TML: this is not a design decision.  This is library developers not bothering to study prior art.
[05:49:13] <TML> if (number % (i+1)) != 0:
[05:49:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:50:02] <TML> twb: I didn't say it was a "design decision"
[05:50:05] <twb> https://www.ccs.neu.edu/home/shivers/papers/sre.txt  was only published 20 years ago and there's really only Emacs adopting it.
[05:50:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:50:47] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[05:51:07] <twb> TML: what I'm saying is, I'm not actually complaining "why isn't Python Common Lisp?" I'm complaining "this problem was solved 30 years ago, why are you still screwing up?"
[05:51:16] <TML> twb: I don't know who pays for YOU to develop Python full-time so you have infinite hours to do research on prior art across all other languages and their potential libraries before you put something out in the field, but I can tell you no one is paying for MINE, so yes: I often put code out there without having had any chance to "Study the prior art"
[05:51:40] <nedbat> twb: the mistake is using strings for regexes?
[05:52:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:52:22] *** Joins: summersault (~summersau@179.221.251.36)
[05:52:28] <twb> nedbat: well my original complaint is that in Python, path and path component objects are weakly typed (i.e. just strings), and pathlib doesn't fully fix this.
[05:52:30] <TML> Strings are the biggest, broadest hammer I have, so I often just have to solve it with a string and call it good enough and move on
[05:52:31] <blei> here's the soln I used fyi https://stackoverflow.com/a/17565373
[05:52:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:52:55] <twb> nedbat: but sre.txt is the same complaint "don't use weak typing" applied to regular expressions
[05:53:15] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:53:45] <nedbat> twb: maybe i haven't been exposed to "good" languages: what would be the alternative to strings, and what problems would it solve?
[05:54:09] <twb> TML: I don't mind if you do that in your initial implementation.  By the time it becomes a standard library that ships with CPython, I have higher expectations.
[05:54:32] <TML> twb: Having expectations of open source projects is setting yourself up for disappointment
[05:54:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:54:56] <TML> I would recommend moving off that "expectations" soapbox
[05:54:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:55:01] <twb> nedbat: structured data.  It makes long regular expressions more tractable.  For example, embedded comments, and repeated expressions, become easier.
[05:55:21] *** Quits: shailangsa_ (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) ()
[05:55:26] <jinsun> well regexes are not really strings, they get compiled into a re.Pattern object
[05:55:42] <twb> jinsun: OK that's fair
[05:55:48] <nedbat> twb: i've seen structured equivalents of regexes, and they are painful.  Have you seen the verbose flag for regexes?
[05:56:07] <twb> nedbat: yes, I have.  I use that for large regexps.
[05:57:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:57:17] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:57:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:57:43] *** Joins: zeden (~zeden@user/zeden)
[05:57:50] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[05:57:58] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:58:12] <blei> did you guys see this? https://github.com/neogeny/TatSu
[05:58:16] *** Joins: mickey8 (~user@user/mickey)
[05:58:25] <blei> supports left recursion
[05:59:24] *** Joins: willow (~willow@user/willow)
[05:59:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[05:59:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:00:12] *** Quits: harpia (~harpia@143.208.84.100) (Ping timeout: 240 seconds)
[06:01:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:01:44] <twb> nedbat: http://ix.io/3R3e/elisp  is an example from my .emacs.  I wouldn't use symbolic regexps for anything simpler than that.
[06:02:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:02:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:02:43] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[06:03:04] *** Quits: arinov (~arinov@78.162.41.211) (Ping timeout: 272 seconds)
[06:03:13] <nedbat> twb: there are packages to provide that in Python if you like
[06:03:43] <twb> nedbat: it was really just an analogy.  pathlib is what is annoying me right now.
[06:03:51] *** Quits: formhsdsd (~formhsdsd@47.195.15.236) (Ping timeout: 256 seconds)
[06:04:25] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 256 seconds)
[06:04:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:04:38] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:04:49] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:05:23] <nedbat> twb: ok, and in pathlib, is it just the \0 issue, or is there more?
[06:05:42] <willow> where can i find a list of the methods for the object base class?  this doc only mentions that they exist:  https://docs.python.org/3/library/functions.html#object
[06:06:11] <twb> nedbat: mostly \0.  Also /
[06:06:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:07:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:07:16] <twb> nedbat: I guess we could abuse // such that Path // str requires that the str contain no path separators (i.e. is a path component, not a path)
[06:07:31] <twb> But pathlib doesn't have anything for this so >shrug<
[06:08:01] <jinsun> willow: https://docs.python.org/3/reference/datamodel.html
[06:08:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:08:12] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2ee:924:1643:fe41:ed36)
[06:09:01] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:09:11] *** Quits: KevinX (~KevinX@user/KevinX) (Remote host closed the connection)
[06:09:12] <jinsun> willow: it doesn't have a list, they are split up into sections, but that page should cover all the ones you should know about
[06:09:13] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[06:09:16] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:09:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:09:42] *** Joins: drome (~drome@cpe-66-91-215-204.hawaii.res.rr.com)
[06:09:57] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[06:10:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:10:29] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:10:40] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[06:11:18] <drome> anyone have any strategy python code for on plutohq algotrading platform?
[06:11:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:11:48] *** Joins: justAstache (~justache@user/justache)
[06:11:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2ee:706a:ad8c:2998:9e3c) (Ping timeout: 240 seconds)
[06:11:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:12:58] *** Joins: summersault (~summersau@179.221.251.36)
[06:13:57] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[06:13:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:14:08] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 250 seconds)
[06:14:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:14:29] <twb> What's the __foo__ method name for // ?
[06:14:45] <twb> __floordiv__ ?
[06:15:27] <nedbat> twb: yes
[06:15:35] *** Joins: esther (~esther@155.254.31.185)
[06:15:55] <twb> Since Path('a') works, shouldn't there be a Path('a').__div__ method?
[06:16:16] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[06:16:16] <twb> ah __truediv__
[06:16:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:16:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:16:59] <nedbat> twb: now i'm curious what you're up to :)
[06:17:25] *** Quits: drome (~drome@cpe-66-91-215-204.hawaii.res.rr.com) (Remote host closed the connection)
[06:17:38] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 260 seconds)
[06:18:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:18:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:20:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:21:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:21:31] *** Joins: drome (~drome@cpe-66-91-215-204.hawaii.res.rr.com)
[06:21:39] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:8cbb:b28f:1e92:7e9e)
[06:21:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:22:38] *** Quits: drome (~drome@cpe-66-91-215-204.hawaii.res.rr.com) (Remote host closed the connection)
[06:22:59] <twb> nedbat: http://ix.io/3R3i
[06:23:03] <phy1729> Making full_path = basename / filename   work?
[06:23:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:23:17] *** Quits: nathanchapman (~nathancha@139.64.169.128) (Ping timeout: 240 seconds)
[06:23:25] <twb> phy1729: that already works, it just doesn't validate that "filename" is *only* a filename
[06:23:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:23:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:23:37] <phy1729> nor does a shell
[06:23:56] <twb> phy1729: sh is weakly typed.  This is why people don't write production code in sh.
[06:23:57] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:acf8:f412:ba17:3aa4) (Ping timeout: 240 seconds)
[06:24:02] *** Joins: st0ckholm (~Andreas@p200300d2c70cd200aded7fbe2c5ab509.dip0.t-ipconnect.de)
[06:24:11] <phy1729> but TIL that works
[06:24:31] <twb> phy1729: it is a bit... squicky.  But yeah.
[06:24:40] *** Joins: Vitao-Big (~Vito-Big@170.84.28.5)
[06:24:44] <SnoopJ> among other reasons, heh
[06:24:48] <phy1729> That's two interesting python tidbits today (the first being nedbat's loop variable assigning to any name)
[06:24:56] <twb> Like someone once said: "I saw cout being shifted "Hello World" times to the left and stopped reading"
[06:25:09] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[06:25:32] <twb> It's unequivocally less bad than f'{a}/{b}' which is how the sh does it
[06:25:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:25:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:26:11] <phy1729> nearly anything in a real language is unequivocally less bad than sh
[06:26:16] <nedbat> twb: i'm not sure i like replacing \0 and / with space though?
[06:26:36] <twb> nedbat: no, nor do I
[06:26:43] <twb> nedbat: that's what I inherited from the existing codebase, though
[06:26:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[06:27:02] <twb> %2F or something is probably better
[06:27:14] <SnoopJ> https://bugs.python.org/issue22147
[06:27:25] *** Quits: stockh0lm (~Andreas@p200300d2c70898007d5fdb53f81e45cc.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:27:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:28:10] <blei> 100 threads works, 200 threads is apparently not supported
[06:28:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:28:22] <twb> SnoopJ: oh thanks!
[06:28:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[06:28:37] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[06:28:38] *** Joins: summersault (~summersau@179.221.251.36)
[06:28:50] <SnoopJ> twb, the patch looks relatively simple although it seems that the bug itself needs someone to cultivate it a bit more, but at least it's something that's known and acknowledged to be a good idea to fix
[06:29:06] <blei> very strange errors, indicating the function being run in the thread was experiencing out-of-order errors regarding variable assignment from provided function parameters
[06:29:10] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2ee:924:1643:fe41:ed36) (Remote host closed the connection)
[06:29:54] <twb> SnoopJ: yeah definitely
[06:30:24] <SnoopJ> the patch looks relatively tidy and while it might not be ready to go into CPython's stdlib, maybe it's something you could get away with in a subclass :)
[06:30:29] <twb> SnoopJ: I was mentally thinking this would require a whole PEP and not just a roundup ticket, so I wasn't in the mood to do that for this one 50-line script
[06:30:30] *** Joins: aknot (~aknot@2603:900a:1503:17bb:e04a:f71:ed43:251b)
[06:31:02] <SnoopJ> Nah, just a missing stair, really :)
[06:31:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:31:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:31:56] <SnoopJ> granted, 2014 is an awful long time ago to have been acknowledged. Maybe there are other tickets about it
[06:32:45] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[06:33:31] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[06:33:36] *** Quits: Vitao-Big (~Vito-Big@170.84.28.5) (Remote host closed the connection)
[06:33:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:33:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:34:06] <Pi-sistance> Thanks for the help all, i was able to write my own class, and I think I can now easily repeat it in 5% of the time it took . Feels good. https://bpa.st/Y6CQ
[06:35:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:36:02] *** Joins: ub (~Thunderbi@p200300ecdf3be9cb0930a09fd733e6d6.dip0.t-ipconnect.de)
[06:36:11] *** Quits: ubert (~Thunderbi@p200300ecdf3be90c0930a09fd733e6d6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:36:11] *** ub is now known as ubert
[06:36:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:36:58] <twb> nedbat: path_component.replace('\0', 'ï»¿').replace('/', 'â§¸')
[06:37:16] <twb> nedbat: that's NWNBSP and BIG SOLIDUS
[06:37:33] <twb> I was thinking about %2f but then you'd have to %% as well and just... meh
[06:37:40] <nedbat> twb: this is because the file names are made from song titles?
[06:37:48] <twb> nedbat: TV shows, but yes
[06:37:55] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 240 seconds)
[06:38:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:38:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:38:24] <twb> nedbat: and when you say it like that, the OBVIOUS thing is to stop using path names but instead make a content-oriented filesystem like git
[06:38:25] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:39:22] <twb> so like pathname = hashlib.sha3(title.encode('UTF-8')
[06:39:48] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 272 seconds)
[06:39:48] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[06:40:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:40:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:41:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:41:25] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:41:26] *** finn_elija is now known as FinnElija
[06:41:44] *** Joins: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a)
[06:41:45] <nedbat> twb: that would work great
[06:41:58] <nedbat> twb: but people like to see their stuff in names they can read
[06:42:10] <SnoopJ> It does neatly solve your filesystem headache by lifting the problem an abstraction-step-up
[06:42:43] <twb> Normal humans don't interact directly with the files
[06:42:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:43:05] <twb> This all happens inside a MythTV / Kodi type system.  They just see stuff in a web browser UI.
[06:43:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:43:24] <twb> It would just make life more annoying for me personally, when I have to wangle the raw files after a screw-up
[06:44:03] *** Joins: korg815 (~korg815@user/korg815)
[06:44:38] <SnoopJ> nedbat, I've found one person in the PyCon line-up who is in our area, incidentally. Only gotten through one day's worth of authors, though.
[06:44:48] * twb grumbles at UUID5() being used already in this system, even though that's SHA-1 i.e. broken
[06:44:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:44:58] <SnoopJ> It would be a lot simpler if location were a field in the speaker bios, heh
[06:45:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:45:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:45:46] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-157f-f1b1-5731-ac2f.res6.spectrum.com) (Read error: Connection reset by peer)
[06:45:47] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[06:45:51] * SnoopJ should probably write that down somewhere for when it comes time to give conference feedback
[06:47:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:47:16] *** Joins: esther (~esther@155.254.31.185)
[06:47:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:48:18] *** Joins: Roey (~Roey@user/Roey)
[06:48:26] *** Joins: kts (~kts@103.73.237.13)
[06:48:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:49:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:49:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:50:36] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[06:51:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[06:51:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:51:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:51:56] *** Quits: millido_ (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:52:37] *** Joins: jancoow (~jancoow@user/jancoow)
[06:53:46] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:53:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:54:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:54:57] *** Joins: esther (~esther@155.254.31.185)
[06:55:08] *** Joins: adeliktas5 (~adeliktas@i59F5FA10.versanet.de)
[06:55:35] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:56:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:56:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:56:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[06:56:50] *** Joins: Barones (~Barones@user/Barones)
[06:57:07] *** Quits: adeliktas (~adeliktas@i59F4A127.versanet.de) (Ping timeout: 256 seconds)
[06:57:07] *** adeliktas5 is now known as adeliktas
[06:57:32] *** Joins: ejjfunky (~ejjfunky@125.164.19.179)
[06:58:41] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:58:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[06:59:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:01:11] *** Joins: cgrage (~cgrage@107.175.102.108)
[07:01:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:01:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[07:01:29] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998)
[07:01:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:02:45] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[07:03:05] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[07:03:07] *** Quits: aknot (~aknot@2603:900a:1503:17bb:e04a:f71:ed43:251b) (Ping timeout: 256 seconds)
[07:03:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:04:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:06:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:06:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:07:37] *** Joins: Azem (~haise01@user/haise01)
[07:07:47] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[07:07:48] *** Quits: emf (~emf@2620:10d:c090:400::5:b0af) (Ping timeout: 240 seconds)
[07:08:04] *** Joins: pluri (~pluri@user/pluri)
[07:08:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:08:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:08:58] <pluri> can someone please run `python3 -m http.server` and tell me what the output is? Mine is `Serving HTTP on :: port 8000 (http://[::]:8000/) ...` and I don't know what [::] means. I also can't connect to the server at 127.0.0.1:8000
[07:08:58] *** Joins: millido (~millido@84.210.150.128)
[07:09:34] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[07:10:13] *** Joins: esther (~esther@155.254.31.185)
[07:10:19] *** lukedashjr is now known as luke-jr
[07:10:22] *** Joins: emf (~emf@2620:10d:c090:400::5:46f7)
[07:10:43] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:10:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:11:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:12:01] <SnoopJ> pluri, [::] means the IPv6 address whose bits are all zero.
[07:12:20] *** Quits: kts (~kts@103.73.237.13) (Quit: Konversation terminated!)
[07:12:27] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:12:38] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (Changing host)
[07:12:38] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[07:12:56] <SnoopJ> When I run http.server I get my IPv4 by default but I can force the IPv6 interface with `python3 -m http.server --bind ::`
[07:13:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:13:11] <pluri> SnoopJ thanks, i'm not familiar with ipv6. would you call that the ipv6 equivalent of localhost?
[07:13:18] *** Quits: emf (~emf@2620:10d:c090:400::5:46f7) (Client Quit)
[07:13:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:14:06] *** Joins: emf (~emf@2620:10d:c090:400::5:46f7)
[07:14:06] <SnoopJ> pluri, no, but close; IPv6 localhost is ::1
[07:14:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:14:54] <pluri> I just noticed that `python3 -m http.server --bind 127.0.0.1` throws "OSError: [Errno 49] Can't assign requested address" :/
[07:14:55] <SnoopJ> pluri, binding on 0.0.0.0 or :: are both relatively common ways to say "any address at all" which is probably what it means in this case
[07:15:10] *** Quits: emf (~emf@2620:10d:c090:400::5:46f7) (Client Quit)
[07:15:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:15:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:15:44] *** Joins: summersault (~summersau@179.221.251.36)
[07:15:57] <SnoopJ> pluri, you should probably be able to access your server by browsing to localhost:8000 though
[07:16:24] <pluri> no, i can't connect to localhost:8000 using the default binding
[07:16:37] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[07:16:46] <SnoopJ> humm..well, --bind lets you change the address the server binds to, if you need to do that.
[07:17:14] <pluri> i've tried --bind 127.0.0.1 and it throws "OSError: [Errno 49] Can't assign requested address"
[07:17:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:17:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:18:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[07:19:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:19:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:20:11] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:21:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[07:21:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:21:52] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[07:22:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:22:51] <jinsun> you can connect to http://[::1]:8000/ probably with the ipv6 version
[07:23:52] <pluri> that is unable to connect either
[07:23:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:24:01] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[07:24:11] <twb> pluri: you're trying to bind to a low port (e.g. 80) which is blocked
[07:24:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:24:19] *** Joins: summersault (~summersau@179.221.251.36)
[07:24:28] <twb> pluri: or you're trying to bind to a port that's already in use
[07:24:36] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 240 seconds)
[07:24:40] <SnoopJ> yea probably it's already in use, http.server should bind to 8000 by default
[07:24:48] <twb> ss -l | grep -Fw 8000
[07:24:50] <SnoopJ> port* 8000
[07:25:40] <twb> Oh nice
[07:25:47] <twb> ss -lt 'sport 8000'
[07:25:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:26:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:26:45] <pluri> i am trying to find out using netstat because i don't have ss on mac
[07:27:55] <twb> pluri: netstat -lt | grep probably
[07:28:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:28:05] * SnoopJ hugs grep
[07:28:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:29:12] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 272 seconds)
[07:30:10] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:27] *** Joins: esther (~esther@155.254.31.185)
[07:31:36] <pluri> i'm not getting any meaningful results with netstat, whether i open http.server (using the odd [::] binding and port 8000) or not
[07:32:03] <pluri> also, opening http.server with --bind 127.0.0.1 7778 also fails
[07:32:18] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[07:32:29] <pluri> meaning it can't bind to any ports on 127.0.0.1, not just the default one
[07:32:52] *** Joins: matsaman (~matsaman@user/matsaman)
[07:32:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:32:57] <EdFletcher> have you tried `--bind 0.0.0.0`?
[07:33:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:33:27] <pluri>  EdFletcher that works
[07:33:29] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:32] <twb> pluri: does "nc -l 7778" work?
[07:33:44] <twb> (It should just hang; if it crashes, it did not work)
[07:33:51] <pluri> twb http.server fails with OSError: [Errno 49] Can't assign requested address
[07:33:54] <pluri> no point trying to nc
[07:34:05] <EdFletcher> pluri: awesome!
[07:34:10] <twb> pluri: so you understand what the problem is?
[07:34:18] <pluri> as in, http.server crashes when trying to bind to any port on 127.0.0.1
[07:34:22] *** Joins: newpy_ (~newpy@2610:148:2002:0:3248:5755:4741:9e6)
[07:34:40] <pluri> no, i still have no idea. i'm surprised binding to 0.0.0.0 works
[07:34:52] <twb> That's why I asked to test nc
[07:35:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:35:16] <pluri> twb with which http.server configuration?
[07:35:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:35:27] <twb> Because I see two possible cases: 1) a security module bans random processes from listening; or 2) your system doesn't implement legacy IP at all
[07:35:42] <twb> pluri: as in literally run "nc -l 7778" in your shell
[07:35:50] <twb> Thereby bypassing python entirely
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:15] <pluri> oh, you suggested opening nc in listening mode.. sorry
[07:36:26] <pluri> it hangs, so it works
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:33] <twb> and also "nc -l 127.1 7778" I guess
[07:36:36] *** Quits: newpy (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398) (Ping timeout: 240 seconds)
[07:36:51] <Batzy> how can i define a pointer to a multi dim array in cython? right now i am trying cdef foo(int* a[][]) but later if i try to access *a[i][j] an error is thrown
[07:37:14] <pluri> twb specifying 127.0.0.1 fails with "nc: Can't assign requested address"
[07:37:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:37:17] <EdFletcher> pluri: `0.0.0.0` is `INADDR_ANY`, the ipv4 equivalent to `[::]` in ipv6. i just figured that your machine may not have ipv6 setup correctly hence why your initial attempts were failing. not sure why `127.0.0.1` doesn't work though, it should...
[07:37:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:37:39] <twb> pluri: OK.  So what IP addresses do you actually have currently?
[07:37:46] <Batzy> actually im trying to closer to b = 5 * a[i][j]
[07:37:49] <twb> pluri: I guess "ifconfig -a" or something
[07:37:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[07:38:10] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[07:38:11] <Batzy> any help?
[07:38:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:38:53] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[07:38:54] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[07:38:54] *** Joins: nortoh (~nortoh@user/nortoh)
[07:39:18] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:39:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:39:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:39:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:39:46] *** Joins: [2]cansam (~IceChat95@218.sub-174-252-194.myvzw.com)
[07:41:15] <pluri> twb what should i look for exactly when reading the output of ifconfig -a? i've got 3 active interfaces
[07:41:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:42:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:42:52] *** Joins: d3sync- (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr)
[07:43:25] <twb> pluri: I guess we actually want "ifconfig lo"
[07:43:35] <twb> You should have something like "inet addr:127.0.0.1  Mask:255.0.0.0"
[07:43:37] *** Quits: [2]cansam (~IceChat95@218.sub-174-252-194.myvzw.com) (Quit: Relax, its only ONES and ZEROS!)
[07:43:46] *** Joins: esther (~esther@155.254.31.185)
[07:43:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:44:53] *** Joins: Sora (~Guest@user/sora)
[07:45:03] <Batzy> can anyone help me with the following: https://bpa.st/ZKMQ error is "Invalid operand types for '*' (int *; int *)"
[07:45:16] <Sora> what am I looking at to obtain the intersection of two large ordered lists of strings
[07:45:19] <pluri> twb i've got an lo0 interface. inet is the LAN address (192.168.1.*). there is a netmask coming up as 0xffffffff
[07:45:30] <Sora> by large I mean millions if not billions
[07:45:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:45:51] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[07:45:54] <twb> pluri: so you don't see 127 ANYWHERE in "ifconfig -a" ?
[07:46:05] <Batzy> oh wait
[07:46:09] <Batzy> do i just need to deref
[07:46:13] <Sora> so list 1 has 1 billion strings, list 2 has 1 billion strings, produce list of strings in both lists
[07:46:30] <Batzy> didnt work
[07:46:44] <pluri> twb no. i double checked with `ifconfig -a | grep 127.0.0.1`
[07:47:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:47:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:47:22] <twb> Sora: well brute force is to just use set(xs) & set(ys)
[07:47:55] <twb> Sora: I don't know how to do that more efficiently off the top of my head.
[07:48:04] <Sora> i would assume a naive approach would take many weeks
[07:48:18] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[07:48:28] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:48:51] <Batzy> i have no idea what to do
[07:48:56] <twb> Sora: well, test it with a couple of smaller lists of 1000 and 100,000 elements and get a rough idea
[07:49:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:49:15] <Sora> let's try
[07:49:22] <Sora> i would assume time goes up exponentially
[07:49:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:49:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:49:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[07:49:49] *** Quits: sreve (~quassel@p549d7015.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:49:55] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9) (Quit: No Ping reply in 180 seconds.)
[07:50:09] *** Joins: sreve (~quassel@p549d706d.dip0.t-ipconnect.de)
[07:50:12] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[07:50:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[07:51:00] <twb> Sora: Î(nÂ²) or Î(n log n) is a reasonable guess.
[07:51:15] <pluri> Sora do you expect frequent results? perhaps removing matches from each dataset could gradually reduce their size
[07:51:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:51:23] *** Quits: data68 (~data@2a02:908:a65:3d80:28f0:dd3b:3f9a:8865) (Ping timeout: 250 seconds)
[07:51:25] <twb> Sora: FWIW this was fast for me: xs = frozenset(pathlib.Path('/usr/share/dict/american-english').read_text().splitlines()); ys = frozenset(pathlib.Path('/usr/share/dict/british-english').read_text().splitlines()); len(xs & ys) ==> 100111
[07:51:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:51:42] <twb> That's 100K in each list with mostly duplicates
[07:52:06] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:52:13] <Sora> what's "fast"?
[07:52:19] <twb> under 1s
[07:52:22] <twb> I didn't bother to measure it
[07:52:38] <Batzy> hello
[07:53:27] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[07:53:42] <twb> Sora: so assuming Î(nÂ²) and a whole 1s for those 100K lists, that's around 1200 days.
[07:53:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:53:57] <twb> Probably it's much less than that, tough
[07:54:13] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[07:54:26] <twb> Sora: are these lists stating out as files?
[07:54:29] *** Joins: luna-is-here (~quassel@ip-095-223-058-048.um35.pools.vodafone-ip.de)
[07:54:29] *** Joins: emf (~emf@2620:10d:c090:400::5:46f7)
[07:54:35] *** [itchyjunk] is now known as Guest49
[07:54:35] *** [_] is now known as [itchyjunk]
[07:54:46] *** Quits: ATAD (~ATAD@user/atad) (Quit: ATAD)
[07:54:56] *** Joins: esther (~esther@155.254.31.185)
[07:55:07] <twb> grep --file=xs.txt ys.txt --fixed-strings --line-regexp
[07:55:20] <Sora> twb: yes, they can be static
[07:55:22] <twb> Sora: ^ that will be pretty fast
[07:55:24] *** Quits: Guest49 (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:55:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:55:51] <twb> LC_COLLATE=C will make it run 30% faster on glibc if you can assume all strings are normalized in advance (e.g. all NFKC)
[07:55:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:56:12] *** Joins: ATAD (~ATAD@user/atad)
[07:56:41] <Batzy> hello?
[07:56:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:56:45] <Batzy> am i muted
[07:56:52] <twb> Batzy: no, but I have NFI about C
[07:56:57] <matsaman> Batzy: not here
[07:57:04] <Batzy> oh cool
[07:57:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[07:58:02] <Batzy> i literally have no idea
[07:58:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[07:58:08] <Batzy> how to pass array arguments for arrays of size (IDK)
[07:58:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:59:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[08:00:27] <Batzy> i think i got it actually haha
[08:00:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:00:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:01:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[08:01:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[08:01:36] *** Joins: esther (~esther@155.254.31.185)
[08:01:52] *** Joins: bluedust (~bluedust@89.45.224.214)
[08:01:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:02:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:03:05] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[08:03:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:03:06] *** Joins: bluedust_ (~bluedust@103.148.21.74)
[08:03:55] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:04:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:05:02] *** Joins: rawrrr (uid540880@id-540880.lymington.irccloud.com)
[08:05:04] *** Joins: data68 (~data@ip-095-223-068-091.um35.pools.vodafone-ip.de)
[08:05:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:06:12] *** Quits: bluedust (~bluedust@89.45.224.214) (Ping timeout: 240 seconds)
[08:07:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:07:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:07:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[08:08:16] *** Joins: esther (~esther@155.254.31.185)
[08:09:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:09:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:10:41] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:11:04] *** Joins: pycurious (~Adium@user/pycurious)
[08:11:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[08:11:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:11:54] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[08:13:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:14:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:15:53] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:16:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:16:10] *** Joins: pycurious (~Adium@user/pycurious)
[08:16:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:17:32] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:17:48] *** Joins: racee7 (~AdminUser@n219077165043.netvigator.com)
[08:18:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:18:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:19:12] <willow> following the basic example at: https://docs.python.org/3/library/argparse.html#example   argparse.ArgumentParser().parse_args() is a 'Namespace object': a 'basic object subclass'.    they define a custom dest 'accumulate' which they assign methods 'sum' and 'max'.   where do sum and max get inherited from?
[08:19:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[08:20:04] <willow> i would think that those are methods unique to integer list type.  but i don't see how the inheritance happens
[08:20:04] *** Joins: summersault (~summersau@179.221.251.36)
[08:20:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:20:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:20:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:20:50] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 260 seconds)
[08:21:28] *** Joins: Barones (~Barones@user/Barones)
[08:21:46] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[08:22:17] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[08:22:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:22:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[08:22:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:24:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:24:45] <jinsun> sum and max are builtin functions
[08:24:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:24:54] *** Joins: esther (~esther@155.254.31.185)
[08:24:56] <jinsun> not specific to lists
[08:25:22] <twb> willow: sum and max are bound at the top level
[08:25:30] <willow> but it wouldn't make sense to use them on, eg. a string, or on a single integer?
[08:25:34] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 272 seconds)
[08:25:52] <twb> file:///usr/share/doc/python3/html/library/functions.html#sum
[08:26:12] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 272 seconds)
[08:26:23] <jinsun> you can use them on any Iterable, though sum forbids string specifically
[08:26:38] <twb> You probably want itertools's right fold or reduce
[08:26:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:27:03] <twb> If you're working on strings, I mean
[08:27:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:27:10] <twb> Also ''.join
[08:27:24] <jinsun> yeah "".join is the way the error message tells to use
[08:28:43] <jinsun> and iterable is not any concreate type, it is like a Protocol or Interface and iterables don't have to inherit from Iterable
[08:28:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:28:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[08:29:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:29:17] <willow> so if i wanted to add_argument() to argparse for an 'average', i would have to convert args to a different type?
[08:29:37] <twb> It's an ad-hoc type class :-)
[08:30:04] <twb> willow: I don't think so
[08:30:06] <willow> parser.add_argument('--avg', dest='accumulate', const='avg' ...      something like that
[08:30:07] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[08:30:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:30:26] <twb> willow: I think you'd just do something like const=lambda xs: sum(xs)/len(xs)
[08:30:46] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[08:30:48] <twb> although I would probably look for something like math.mean
[08:31:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:31:16] <jinsun> statistics.mean
[08:31:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:32:07] <willow> const='statistics.mean'    ?
[08:32:08] <twb> Thanks!
[08:32:48] <jinsun> willow: no, without the quotes
[08:32:51] <twb> willow: uh... in the argparse example, they are assigning the function itself as a constant
[08:32:53] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:33:03] <jinsun> and import statistics before doing that
[08:33:20] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[08:33:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:33:29] <willow> from statistics import mean;   const=mean
[08:33:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:33:43] *** Joins: pycurious (~Adium@user/pycurious)
[08:33:48] <twb> import statistics; parser.add_argument('--mean', dest='accumulate', action='store_const', const=statistics.mean)
[08:34:37] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[08:35:01] *** Joins: humberto1 (~humbertow@189.236.30.197)
[08:35:06] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[08:35:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:35:42] <willow> thanks
[08:35:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:36:07] <willow> i'm actually using from statistics import mean and  const=mean
[08:37:35] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[08:37:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:37:55] *** Joins: mickey8 (~user@user/mickey)
[08:38:01] *** Joins: fef (~thedawn@user/thedawn)
[08:38:07] <twb> whatever
[08:38:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:38:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:38:45] *** Quits: racee7 (~AdminUser@n219077165043.netvigator.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:39:41] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:39:56] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:f5fd:6d24:f127:5cb6) (Ping timeout: 252 seconds)
[08:41:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[08:41:28] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[08:41:44] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[08:41:50] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[08:41:55] *** Quits: emf (~emf@2620:10d:c090:400::5:46f7) (Quit: emf)
[08:43:10] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:43:11] *** Joins: nutboy (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[08:43:22] *** Quits: mossman93 (~quassel@user/mossman93) (Read error: Connection reset by peer)
[08:43:28] *** Quits: nutboy (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Remote host closed the connection)
[08:43:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[08:44:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:44:07] <rawrrr> Say I have a loop and I desire to write the output of each iteration to a new file, how would I go about this?
[08:44:09] *** Joins: esther (~esther@155.254.31.185)
[08:44:16] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:1d26:a32b:11ed:1c1c)
[08:44:24] *** Joins: han-solo (~hanish@user/han-solo)
[08:45:49] <BrenBarn> just open a file inside the loop and write to it
[08:45:52] <BrenBarn> presumably you determine the filename somehow based on the loop variable
[08:46:01] <twb> rawrrr: for i, x in enumerate(xs): pathlib.Path(f'my-file.{i}).write_text(x)
[08:46:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:46:34] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:33d4:85a2:30c3:4350)
[08:46:49] <twb> rawrrr: for i, x in enumerate(xs): with pathlib.Path('my-file').with_suffix(i).open('w') as f: print(x, file=f)   # is probably more conventional
[08:46:58] *** Quits: ketiv (~ketiv@cpc151237-sgyl44-2-0-cust232.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[08:47:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:47:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:47:25] *** Joins: mossman93 (~quassel@user/mossman93)
[08:49:11] <rawrrr> thanks
[08:49:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:49:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:49:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:49:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:50:15] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:50:37] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[08:51:06] *** Joins: pycurious (~Adium@user/pycurious)
[08:51:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:52:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:52:12] *** Joins: zlg (~zlg@user/zlg)
[08:52:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[08:54:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:54:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:55:35] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:56:06] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:56:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[08:56:17] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 240 seconds)
[08:56:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[08:57:04] *** Joins: wyclif (~wyclif@user/wyclif)
[08:57:24] *** Joins: emf (~emf@2620:10d:c090:400::5:46f7)
[08:59:39] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:00:42] <Jonno_FTW> in pandas, how do I plot a group by all on the one plot?
[09:00:47] <jinsun> first way is probably more conventional, .with_suffix is for file extension, not the name, and won't take int
[09:01:11] <Jonno_FTW> doing df.groupby("column").plot() makes a separate plot for each group, I want one plot, with each group as a series
[09:01:28] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[09:01:48] *** Joins: nre (~nre@55d4d0a9.access.ecotel.net)
[09:01:48] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:02:09] <jinsun> each "group" is a table though, and each column in that table is a series
[09:02:15] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[09:02:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[09:02:32] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 240 seconds)
[09:02:53] <jinsun> you got a "3D" thing with groupby
[09:03:17] <Jonno_FTW> so do I have to make a new dataframe?
[09:03:18] <rawrrr> trying a different approach. trying to get each iteration's output put in an excel file now. i have a variable that changes each iteration alrdy that id like to use as the filename
[09:03:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:03:34] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:03:43] <rawrrr> and i have no idea how to put pass filenames containing variable output to to_excel
[09:03:43] *** Joins: esther (~esther@155.254.31.185)
[09:03:47] <rawrrr> -put
[09:04:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:04:28] <jinsun> Jonno_FTW: after groupby you normally do some operation to reduce it back to a table, like .count() or .sum() or .mean() etc.
[09:04:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998) (Ping timeout: 240 seconds)
[09:05:11] <rawrrr> ive tried blah.to_excel({vname}.xlsx)
[09:05:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:05:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:05:40] <jinsun> Jonno_FTW: but if you don't wanna do that, then you would have to reshape it some other way so that you are plotting a table in the end instead of a groupby object
[09:05:42] <rawrrr> just creates a file named "{vname}.xlsk"
[09:06:35] <jinsun> rawrrr: put a f before the quote, f"{vname}.xlsx"
[09:07:16] *** Joins: p-i- (~Ohmu@mx-ll-183.89.38-96.dynamic.3bb.co.th)
[09:07:36] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[09:07:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:07:49] <jinsun> that makes it a f-string and interpolates variable value in the string, without that the variable name is not treated specially
[09:07:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:08:00] <rawrrr> df.to_excel(f"{meow}.xlsx") still only creates {meow}.xlsx
[09:08:06] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:08:51] <jinsun> doesn't sound right, unless you defined meow to be "{meow}"
[09:09:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[09:10:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:10:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:10:34] <jinsun> more likely thing is that you are still running your old code somehow, maybe you forgot to save it after you added the f-
[09:10:48] <rawrrr> youre spot on
[09:11:24] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:11:38] *** Quits: emf (~emf@2620:10d:c090:400::5:46f7) (Quit: emf)
[09:11:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:11:59] *** Quits: led_belly (~led_belly@37.120.197.44) (Ping timeout: 256 seconds)
[09:12:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:12:34] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:12:40] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[09:12:54] *** Seto_Kaiba is now known as Hunterkll
[09:12:57] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[09:12:57] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com) (Read error: Connection reset by peer)
[09:13:18] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:13:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:13:41] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[09:13:42] *** Quits: noteness (~noteness@user/noteness) (Read error: Connection reset by peer)
[09:13:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[09:13:42] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Read error: Connection reset by peer)
[09:13:42] *** Quits: vaio (~gary@user/ghost) (Write error: Connection reset by peer)
[09:13:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Write error: Connection reset by peer)
[09:13:42] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Write error: Connection reset by peer)
[09:13:42] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Write error: Connection reset by peer)
[09:13:42] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Write error: Connection reset by peer)
[09:13:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Read error: Connection reset by peer)
[09:13:42] *** Quits: ano (~ano@user/ano) (Read error: Connection reset by peer)
[09:13:42] *** Quits: fef (~thedawn@user/thedawn) (Read error: Connection reset by peer)
[09:13:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Read error: Connection reset by peer)
[09:13:42] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Read error: Connection reset by peer)
[09:13:42] *** Quits: kevr (~kevr@user/kevr) (Read error: Connection reset by peer)
[09:13:42] *** Quits: bindu (~bindu@user/bindu) (Read error: Connection reset by peer)
[09:13:42] *** Quits: spithash (~spithash@user/spithash) (Read error: Connection reset by peer)
[09:13:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Read error: Connection reset by peer)
[09:13:42] *** Quits: mickey8 (~user@user/mickey) (Read error: Connection reset by peer)
[09:13:42] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Read error: Connection reset by peer)
[09:13:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Read error: Connection reset by peer)
[09:13:42] *** Quits: de-facto (~de-facto@user/de-facto) (Read error: Connection reset by peer)
[09:13:42] *** Quits: CombatVet (~c4@user/combatvet) (Read error: Connection reset by peer)
[09:13:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Read error: Connection reset by peer)
[09:13:42] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Read error: Connection reset by peer)
[09:13:57] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:15:04] *** Joins: wyclif (~wyclif@user/wyclif)
[09:15:23] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:15:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:15:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:15:53] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:16:24] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:16:25] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:16:27] *** Joins: de-facto (~de-facto@user/de-facto)
[09:16:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:16:30] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[09:16:30] *** Joins: CombatVet (~c4@user/combatvet)
[09:16:31] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:16:32] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:16:32] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:16:33] *** Joins: kevr (~kevr@user/kevr)
[09:16:33] *** Joins: bindu (~bindu@user/bindu)
[09:16:35] *** Joins: noteness (~noteness@user/noteness)
[09:16:35] *** Joins: vaio (~gary@user/ghost)
[09:16:37] *** Joins: mickey8 (~user@user/mickey)
[09:16:57] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:17:02] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:17:30] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:17:36] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:17:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:17:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:18:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[09:18:21] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[09:18:26] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[09:18:29] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[09:18:35] *** Quits: nre (~nre@55d4d0a9.access.ecotel.net) (Read error: Connection reset by peer)
[09:18:38] *** Joins: nre1 (~nre@55d4d0a9.access.ecotel.net)
[09:18:56] *** Joins: spithash (~spithash@user/spithash)
[09:18:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:19:15] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:19:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:19:50] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:19:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:20:05] *** Quits: data68 (~data@ip-095-223-068-091.um35.pools.vodafone-ip.de) (Quit: WeeChat 1.4)
[09:20:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:20:34] *** Joins: led_belly (~led_belly@37.120.197.46)
[09:20:46] *** Joins: humberto1 (~humbertow@189.236.30.197)
[09:20:48] *** Joins: wyclif (~wyclif@user/wyclif)
[09:21:14] *** Joins: ano (~ano@user/ano)
[09:22:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:22:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:23:12] *** Joins: fef (~thedawn@user/thedawn)
[09:23:43] *** Joins: djapo (~archangel@user/djapo)
[09:24:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:24:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:24:51] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:24:59] *** Parts: cgrage (~cgrage@107.175.102.108) ()
[09:25:15] *** Joins: esther (~esther@155.254.31.185)
[09:25:19] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 256 seconds)
[09:25:30] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:25:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:26:16] *** Joins: wyclif (~wyclif@user/wyclif)
[09:26:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[09:26:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:27:16] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:28:02] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[09:28:47] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[09:29:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:29:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:30:51] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[09:31:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:31:05] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:31:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:31:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:31:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[09:31:47] *** Joins: wyclif (~wyclif@user/wyclif)
[09:31:56] *** Joins: esther (~esther@155.254.31.185)
[09:32:47] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:33:26] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:33:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:33:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:33:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:35:40] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:6a78:f28d:7961:8e41)
[09:35:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:36:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:36:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:36:08] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:36:15] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:36:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:36:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:36:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:37:17] *** Joins: wyclif (~wyclif@user/wyclif)
[09:38:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[09:38:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[09:38:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:38:41] *** Quits: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a) (Quit: Leaving)
[09:39:11] *** Quits: Dotz0cat (~Dotz0cat@h234.234.186.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[09:39:20] *** Joins: bahamas (~lucian@84.232.140.52)
[09:39:40] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[09:39:41] *** Joins: Dotz0cat (~Dotz0cat@h1.215.213.151.dynamic.ip.windstream.net)
[09:40:54] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:41:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:41:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:42:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:44:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:44:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:45:41] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[09:45:45] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:46:06] <Batzy> why are all my variables with arrays involved mutating in cython
[09:46:08] <Batzy> it's crazy
[09:46:24] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:46:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:46:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:46:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:47:42] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[09:48:18] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[09:48:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[09:48:56] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[09:49:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:49:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:50:15] *** Quits: nre1 (~nre@55d4d0a9.access.ecotel.net) (Ping timeout: 256 seconds)
[09:50:28] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[09:50:37] *** Quits: ano (~ano@user/ano) (Write error: Connection reset by peer)
[09:50:37] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[09:50:37] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Read error: Connection reset by peer)
[09:50:37] *** Quits: vaio (~gary@user/ghost) (Read error: Connection reset by peer)
[09:50:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[09:50:37] *** Quits: bindu (~bindu@user/bindu) (Read error: Connection reset by peer)
[09:50:37] *** Quits: noteness (~noteness@user/noteness) (Read error: Connection reset by peer)
[09:50:37] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Read error: Connection reset by peer)
[09:50:37] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Write error: Connection reset by peer)
[09:50:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Write error: Connection reset by peer)
[09:50:37] *** Quits: fef (~thedawn@user/thedawn) (Write error: Connection reset by peer)
[09:50:37] *** Quits: CombatVet (~c4@user/combatvet) (Write error: Connection reset by peer)
[09:50:37] *** Quits: de-facto (~de-facto@user/de-facto) (Write error: Connection reset by peer)
[09:50:37] *** Quits: kevr (~kevr@user/kevr) (Write error: Connection reset by peer)
[09:50:37] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Write error: Connection reset by peer)
[09:50:37] *** Quits: mickey8 (~user@user/mickey) (Write error: Connection reset by peer)
[09:50:37] *** Quits: spithash (~spithash@user/spithash) (Write error: Connection reset by peer)
[09:50:37] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Read error: Connection reset by peer)
[09:50:37] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[09:50:37] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Read error: Connection reset by peer)
[09:50:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Read error: Connection reset by peer)
[09:50:37] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Read error: Connection reset by peer)
[09:50:49] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:50:50] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:50:51] *** Joins: spithash (~spithash@user/spithash)
[09:50:51] *** Joins: bindu (~bindu@user/bindu)
[09:50:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:50:52] *** Joins: de-facto (~de-facto@user/de-facto)
[09:50:52] *** Joins: kevr (~kevr@user/kevr)
[09:50:52] *** Joins: noteness (~noteness@user/noteness)
[09:50:53] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[09:50:55] *** Joins: CombatVet (~c4@user/combatvet)
[09:50:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:50:56] *** Joins: mickey8 (~user@user/mickey)
[09:50:56] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[09:50:57] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[09:50:58] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[09:50:59] *** Joins: ano (~ano@user/ano)
[09:51:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:51:04] *** Joins: vaio (~gary@user/ghost)
[09:51:06] *** Joins: fef (~thedawn@user/thedawn)
[09:51:20] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[09:51:21] *** Joins: esther (~esther@155.254.31.185)
[09:51:23] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:51:31] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:51:50] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:51:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[09:52:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:52:20] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[09:52:36] *** Joins: bindu (~bindu@user/bindu)
[09:52:43] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:53:55] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[09:54:33] *** Quits: wac (~wac@user/wac) (Quit: Zzzzâ¦)
[09:54:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[09:55:04] *** Joins: NealRame (~a@89.187.163.193)
[09:55:31] *** Joins: djapo (~archangel@user/djapo)
[09:55:42] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[09:56:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:56:08] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[09:56:28] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Quit: Leaving...)
[09:56:50] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[09:57:00] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[09:57:20] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:57:34] *** Joins: tijuco (~tijuco@user/tijuco)
[09:57:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[09:58:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[09:58:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[09:59:57] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2403-883c-da0e-8eb1.res6.spectrum.com) (Quit: jarthur)
[10:00:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:00:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:01:17] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:02:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:02:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:05:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:05:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:05:44] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[10:06:05] *** Joins: pycurious (~Adium@user/pycurious)
[10:06:19] *** Joins: manti7 (~manti7@176.10.104.94)
[10:06:29] *** Joins: rampart (~rampart@3.sub-174-250-16.myvzw.com)
[10:07:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[10:07:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:07:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:07:52] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:07:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:08:45] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[10:09:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:10:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:10:29] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[10:11:28] *** Joins: esther (~esther@155.254.31.185)
[10:12:35] *** Joins: jazzy (~jaziz@user/jaziz)
[10:12:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[10:13:40] *** Quits: rampart (~rampart@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[10:14:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:14:44] *** Joins: vanessa (~vanessa@103.160.128.7)
[10:14:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:15:08] *** Joins: jancoow (~jancoow@user/jancoow)
[10:15:23] *** Joins: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:16:31] *** Joins: goncalo_ (~goncalo.g@154.61.65.189)
[10:16:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:17:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:17:24] *** Joins: newpy__ (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398)
[10:17:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[10:18:00] <vanessa> how do I do `from ./filename.py import Class` correctly?
[10:18:36] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Ping timeout: 240 seconds)
[10:19:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:19:00] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[10:19:06] *** Joins: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[10:19:11] *** Quits: goncalo (~goncalo.g@154.61.65.190) (Ping timeout: 256 seconds)
[10:19:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:19:19] <han-solo> `from filename import Class`
[10:19:45] *** Quits: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[10:19:48] *** Quits: newpy_ (~newpy@2610:148:2002:0:3248:5755:4741:9e6) (Ping timeout: 240 seconds)
[10:20:06] *** Joins: nre (~nre@55d4d0a9.access.ecotel.net)
[10:20:07] <vanessa> `'filename' is not a package`
[10:20:23] <han-solo> is that an error ?
[10:20:24] *** Joins: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:20:41] <vanessa> I just want to use the class present in another file.
[10:20:46] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[10:20:53] <vanessa> han-solo: ModuleNotFoundError
[10:21:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:21:10] <han-solo> can we see the structure of your code and the code ?
[10:21:17] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[10:21:19] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[10:21:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:21:34] *** Quits: seabre (~seabre@user/seabre) (Ping timeout: 250 seconds)
[10:22:02] <vanessa> filename.py just contains the definition of the Class and nothing else.
[10:22:03] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:22:15] *** Quits: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[10:22:23] *** Joins: mrwick (~mrwick@user/mrwick)
[10:22:29] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[10:22:54] *** Joins: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:23:07] <han-solo> and you want to run it from the same dir as the filename ?
[10:23:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:23:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:23:34] <han-solo> if more than one file is involved, i would suggest making a package
[10:24:17] <vanessa> yes, more than one file is involved. point me to a legit link for creating packages?
[10:24:44] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[10:25:06] *** Joins: pycurious (~Adium@user/pycurious)
[10:25:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:25:20] *** Joins: seabre (~seabre@user/seabre)
[10:25:27] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:25:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:25:47] <han-solo> http://blog.habnab.it/blog/2013/07/21/python-packages-and-you/
[10:26:16] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[10:26:39] *** Joins: trashbird (~trashbird@user/trashbird)
[10:27:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:27:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:27:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:27:48] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 240 seconds)
[10:28:04] *** Henry_ is now known as white2
[10:28:46] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:29:03] *** Joins: ice9 (~ice9@user/ice9)
[10:29:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:29:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:31:17] *** Joins: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5)
[10:31:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:32:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:32:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:32:41] *** Joins: tristan_ (~tristan@223.62.163.92)
[10:32:46] *** tristan_ is now known as gtristan
[10:32:56] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:33:06] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-72.poda.cz)
[10:33:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:34:01] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[10:34:14] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:34:55] <twb> I'm cleaning up some old python2 code
[10:35:12] <twb> except IOError as e: if e.errno == 11: pass; else: raise
[10:35:16] <twb> ...what's error 11?
[10:35:27] <twb> IIRC these all got subclasses of IOError sometime back
[10:35:33] *** Joins: upsala (~zcb@185.209.196.139)
[10:35:45] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[10:35:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:36:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:36:24] <twb> All I can really find is "EAGAIN 11 Resource temporarily unavailable"
[10:36:49] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:37:34] <twb> The code is doing fcntl.flock, running ffmpeg, and then some psycopg.  I'd logically expect "ignore EAGAIN" to be about flock, but "man 2 flock" says nothing about EAGAIN
[10:38:03] <twb> A-ha!
[10:38:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:38:06] <twb> EWOULDBLOCK is *also* 11
[10:38:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:38:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:39:39] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:40:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:40:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:40:23] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:41:32] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:42:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:42:15] *** Joins: audio (~audio@user/audio)
[10:42:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:43:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[10:44:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:44:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:44:41] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[10:45:06] *** Joins: masoudd (~masoudd@user/masoudd)
[10:45:18] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[10:45:45] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[10:46:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:46:31] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:47:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:47:36] *** Joins: txtsd (~txtsd@user/txtsd)
[10:48:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:48:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:50:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:50:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:50:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:51:53] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[10:52:04] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[10:52:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:52:29] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:52:35] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[10:52:48] *** Quits: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[10:53:26] *** Joins: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:54:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:54:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:54:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:54:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:55:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:55:45] *** Quits: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[10:56:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:56:24] *** Joins: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[10:56:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:58:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:58:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:58:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:59:10] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:00:13] *** Quits: Dotz0cat (~Dotz0cat@h1.215.213.151.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[11:00:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:00:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:01:02] *** Quits: onichomp666 (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Ping timeout: 240 seconds)
[11:01:23] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 272 seconds)
[11:01:41] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998)
[11:02:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:02:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:03:18] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:03:55] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:04:33] *** Joins: fluter (~fluter@user/fluter)
[11:04:34] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[11:04:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:04:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:05:45] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:06:17] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:06:23] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:06:23] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:5eee:bc30:d314:70da) (Remote host closed the connection)
[11:06:45] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:5eee:bc30:d314:70da)
[11:06:52] *** Joins: icy_hot (~icy_hot@106.241.29.252)
[11:07:01] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[11:07:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:07:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:07:39] *** Joins: mickey89 (~user@user/mickey)
[11:08:23] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:08:34] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:08:44] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[11:09:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:09:21] *** Joins: callq (~callq@2409:4062:2e1f:6d40:bd35:cc34:c5f2:a729)
[11:09:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:09:35] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 240 seconds)
[11:09:36] *** mickey89 is now known as mickey8
[11:09:57] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[11:10:43] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Max SendQ exceeded)
[11:10:53] <callq> Okay so, numpy.linspace refuses to work with decimals, so am I forced to accept floating-point inprecision?
[11:11:01] <callq> err, inaccuracy
[11:11:12] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:11:14] <mrwick> is chaining dict.get a good way to parse json? so info.get(key, default_info).get('item0').get('item1').get(thing.get('item2'))
[11:11:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:11:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:11:50] <mrwick> and doing that to fill a dictionary value inline, with and if else after it on the same line
[11:11:57] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Max SendQ exceeded)
[11:12:01] *** Joins: esther (~esther@155.254.31.185)
[11:12:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:12:06] <mrwick> or would that be better another way?
[11:12:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:12:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:12:45] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[11:12:54] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:13:13] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Max SendQ exceeded)
[11:13:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:13:41] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[11:13:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:14:47] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Max SendQ exceeded)
[11:15:17] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:15:19] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f783) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[11:15:28] <mrwick> it seems rather ugly and overly inline to me, but does it make things faster or something? https://bpa.st/Q5KA
[11:15:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:15:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:16:10] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:16:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[11:16:12] *** Joins: Jong (~Jong@163.114.132.1)
[11:16:34] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 272 seconds)
[11:16:54] *** Joins: gusto (~Augustus@2a01:b740:13d2:100::21)
[11:17:19] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:17:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:17:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:17:56] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:18:06] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:18:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:18:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[11:18:17] *** Quits: tgamblin (~tgamblin@cpe64777de11593-cm64777de11590.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[11:18:19] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0::f824)
[11:18:22] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:18:59] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:19:15] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:19:23] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:19:46] <jinsun_> <callq> "Okay so, numpy.linspace refuses..." <- normally numpy is used for numerical work, where floats are accurate enough, and speed matters more
[11:19:47] <matsaman> mrwick: looks like a PoC / not something well thought out
[11:20:01] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:20:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:20:17] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1526:6857:f42c:4a6c)
[11:20:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:20:24] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:21:08] <twb> mrwick: uh, info['item0']['item1']['item2']
[11:21:12] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[11:21:33] <twb> mrwick: the reason to use .get() is to provide a fallback value, but you aren't doing that, so you'll get None, and then try to call None.get(), which is an error
[11:21:53] <twb> mrwick: if you have a deep chain you can use a library which provides somethign like xpath.  e.g. jmespath
[11:22:14] <twb> mrwick: then you can say something like jmespath('./item0/item1/item2', info)
[11:22:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:22:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:22:56] <matsaman> or at least use a loop or something
[11:23:07] <twb> https://pypi.org/project/jmespath/
[11:23:26] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:23:54] <twb> CSS notation is pretty awful
[11:24:20] <twb> I guess it's too late to go back and trick C++ weenies into using DSSSL
[11:24:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:24:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:25:27] *** Quits: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5) (Ping timeout: 250 seconds)
[11:25:39] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:26:18] <mrwick> it's most likely the devs thought it was kewl and l33t and `it just worksÂ´ but thanks for the ideas
[11:26:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[11:26:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:26:42] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[11:26:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:26:47] *** jazzy2 is now known as jazzy
[11:26:59] <twb> You could probably also throw types.SimpleNamespace at the problem, but json.dump can't grok that, so it's one-way
[11:27:22] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[11:27:24] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[11:27:48] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[11:27:53] *** Joins: cliluw (~cliluw@47.147.77.43)
[11:28:16] <matsaman> I prefer CSS notation, but it doesn't do as much obviously
[11:28:33] <twb> def mangle(obj): return types.SimpleNamespace(**((k,mangle(v)) for k, v in obj.items())) isinstance(obj, dict) else obj
[11:28:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:28:53] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:29:29] <twb> matsaman: CSS notation looks OK until you deal with jinja2 crap like |map('selectattr', 'isinstance', 'Student')|single|reify
[11:29:45] <twb> matsaman: and realize that necessitates doing eval() under the hood
[11:30:00] *** Joins: palasso (~palasso@user/palasso)
[11:30:12] <twb> eval is like call/cc or regex -- if you're using it, you probably shouldn't :-)
[11:30:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:31:03] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:31:23] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:33:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:33:43] <matsaman> for some time now I've wondered how often one should really even use a templating engine, and if it's maybe less often than most projects do =P
[11:34:57] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[11:35:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:35:47] *** Joins: kosh (~kosh@user/kosh)
[11:36:57] *** Joins: kts (~kts@103.73.237.13)
[11:37:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:37:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:37:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:37:53] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:38:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:38:50] *** Quits: kts (~kts@103.73.237.13) (Client Quit)
[11:38:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:39:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:39:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:39:47] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:40:03] <twb> mrwick: you can see it's a bit crap: http://ix.io/3R4j
[11:40:14] <twb> matsaman: certainly jinja is INCREDIBLY annoying in ansible
[11:40:42] <twb> matsaman: because the jinja people go "you can't have useful functions; they belong in python, not the template engine", and ansible go "you can't have python; use jinja"
[11:41:05] <twb> Lack of comprehensions in particular are what drive me potty
[11:41:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:41:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:41:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:41:49] <twb> (Also I don't come from a post-js webdev background, so lots of jinja stuff seems to just be crazy for no reason, when really it's "normal" for that space)
[11:42:02] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:42:17] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:42:26] *** Quits: sawk (~quassel@151.81.119.74) (Ping timeout: 260 seconds)
[11:42:26] *** Quits: gusto (~Augustus@2a01:b740:13d2:100::21) (Read error: Connection reset by peer)
[11:42:42] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:42:43] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:42:59] *** Joins: gusto (~Augustus@109.255.100.54)
[11:43:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:43:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:44:00] *** Quits: widp (~widp@124.123.107.171) (Remote host closed the connection)
[11:44:09] *** Joins: rendar (~rendar@user/rendar)
[11:44:19] *** Joins: widp (~widp@124.123.107.171)
[11:44:33] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:45:44] *** Quits: widp (~widp@124.123.107.171) (Read error: Connection reset by peer)
[11:45:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:46:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:47:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:47:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:48:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:48:28] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[11:48:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[11:49:07] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:49:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:50:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:51:22] *** Quits: icy_hot (~icy_hot@106.241.29.252) (Quit: WeeChat 3.4)
[11:51:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:51:45] *** Joins: chele (~chele@user/chele)
[11:51:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:52:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:52:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:52:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:54:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:54:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:56:01] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Remote host closed the connection)
[11:56:33] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[11:56:56] *** Joins: jay-m126 (~jay-m@154.126.169.200)
[11:57:01] *** Joins: jay-m126_ (~jay-m@154.126.169.200)
[11:57:02] *** Joins: jay-m1261 (~jay-m@154.126.169.200)
[11:57:38] <mrwick> twb: thanks, yes this is for ansible / jinja so I see what you mean
[11:57:42] *** Joins: Payam (~Payam@138.106.57.131)
[11:57:43] <matsaman> twb: tedious =)
[11:58:08] <matsaman> more familiar with Django (where jinja is admittedly nicer than the default), but
[11:58:31] <twb> I would obviously prefer METAL
[11:58:37] <matsaman> no layperson are actually dealing with these templates, so most of the time I don't know why we bother
[11:58:44] <matsaman> laypersons*
[11:58:55] <twb> But inside a web engine, jinja isn't so bad, because you can always write python to mangle before it gets to jinja
[11:59:42] <twb> matsaman: in the sense of "why use a template engine at all", it's so escaping works correctly without having to add php_no_really_escape() around every variable
[11:59:58] <twb> matsaman: of course, if you use shit template languages like mako, then escaping is off by default
[12:00:12] <matsaman> I mean in Django you still have to add filters similar to that sometimes
[12:00:21] <twb> matsaman: of course, if you use shit temlpate languages like jinja, it doesn't understand the XML, so you have to manually pick which escape sometimes
[12:00:24] <matsaman> and they really, really don't want you to use real python in the templates
[12:00:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 260 seconds)
[12:00:40] <twb> matsaman: you should look at METAL
[12:00:42] <matsaman> even though you can hack it through some of the default filters usually
[12:00:54] <matsaman> lookin' at it now
[12:00:58] <twb> matsaman: it's properly embedded so the escaping semantics are always well-defined
[12:01:16] <twb> Of course you cannot use it for HTML because the whatwg broke html
[12:01:30] <matsaman> the WHATWG in particular did? =)
[12:01:32] <twb> So nowadays, html uses its own serialization that is incomplatible with everything else
[12:01:35] <twb> matsaman: yes
[12:01:40] <matsaman> yeah I guess that's true
[12:01:52] <twb> HTML4 was based on SGML.  XHTML was based on XML.  HTML5 is based on... itself.
[12:01:54] <matsaman> too bad the W3C caved so hard
[12:02:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:02:09] <twb> HTML5 technically has an XML serialization, but de facto it is unused and untested
[12:02:20] <matsaman> I started working on an HTML parser once, and decided that the spec could hardly be parsed =P
[12:02:31] *** Joins: dtg01100_ (~dtg01100@199.21.141.37)
[12:02:45] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:02:48] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:02:59] <matsaman> the parser rules, that is. It's readable enough as a human
[12:03:18] <twb> matsaman: if you just want a narrow scope like say recipes or articles, check out a semantic XML for that.  e.g. docutils has an XML IR for reST
[12:03:34] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:bc03:7574:25e1:4f12)
[12:04:02] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:04:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:04:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[12:05:16] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[12:05:57] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[12:07:25] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[12:09:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:09:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:10:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:10:46] *** Joins: gentooclimax (~gentoocli@2a02-8440-3340-1c3a-c143-4578-2f86-0268.rev.sfr.net)
[12:11:03] *** Joins: pycurious (~Adium@user/pycurious)
[12:11:37] *** Quits: bmr (~bmr@user/bmr) (Ping timeout: 240 seconds)
[12:12:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:12:17] *** Joins: sawk (~quassel@78.6.80.66)
[12:12:17] *** Quits: sawk (~quassel@78.6.80.66) (Client Quit)
[12:12:31] *** Joins: sawk (~quassel@78.6.80.66)
[12:12:54] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:13:12] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com)
[12:14:25] *** Quits: gentooclimax (~gentoocli@2a02-8440-3340-1c3a-c143-4578-2f86-0268.rev.sfr.net) (Client Quit)
[12:14:37] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[12:14:47] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[12:14:49] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com) (Read error: Connection reset by peer)
[12:15:02] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:15:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 240 seconds)
[12:15:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[12:17:45] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:17:53] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[12:18:25] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:19:17] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:19:41] *** Quits: arcaile (~arcaile@188.126.94.99) (Ping timeout: 268 seconds)
[12:20:01] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-058.client.tudelft.eduvpn.nl)
[12:20:45] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:21:23] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:22:57] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[12:23:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:23:25] *** Joins: Auron (Auron956@user/auron)
[12:23:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:25:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:25:34] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[12:25:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:25:40] *** Joins: bmr (~bmr@user/bmr)
[12:26:48] *** Joins: lbalhar (~lbalhar@188-175-36-239.client.rionet.cz)
[12:27:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:27:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:27:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:27:53] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:28:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[12:28:42] *** Joins: pycurious (~Adium@user/pycurious)
[12:29:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:29:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[12:29:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:30:08] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Quit: You have been kicked for being idle)
[12:30:28] *** Quits: e_i00[m] (~ei00matri@2001:470:69fc:105::1:6bd9) (Quit: You have been kicked for being idle)
[12:30:59] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:31:11] *** Joins: shad (~shad@user/shad)
[12:31:37] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:31:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:32:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:32:12] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:32:15] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:32:35] *** Joins: Thanatos (~Thanatos@105.112.30.178)
[12:32:53] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:33:17] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:33:20] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[12:33:56] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:33:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:34:16] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:34:57] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[12:35:19] *** Quits: bluedust_ (~bluedust@103.148.21.74) (Remote host closed the connection)
[12:35:21] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[12:35:53] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:35:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:36:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:38:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:38:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:38:41] *** Joins: grundrausch3n (~grundraus@p200300e9ef2f4500ec74bb015909cfe6.dip0.t-ipconnect.de)
[12:38:50] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[12:38:57] *** Quits: grundrausch3n (~grundraus@p200300e9ef2f4500ec74bb015909cfe6.dip0.t-ipconnect.de) (Client Quit)
[12:39:00] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[12:39:05] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[12:39:11] *** Quits: dtg01100_ (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:39:16] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Read error: Connection reset by peer)
[12:39:29] *** Joins: _blackeitus (~blackleit@189.195.195.100)
[12:39:30] *** Joins: dtg01100_ (~dtg01100@199.21.141.37)
[12:39:54] *** Joins: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84)
[12:40:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[12:40:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:40:50] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:41:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:41:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:42:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:43:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:43:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:44:01] *** Quits: onichomp (~onichomp@2806:264:4408:18f:cd85:4531:17e4:5e84) (Client Quit)
[12:44:01] *** dcaro_away is now known as dcaro
[12:44:13] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[12:45:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[12:45:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:47:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[12:47:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:47:47] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 250 seconds)
[12:47:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:48:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:48:55] *** Quits: yst (~yst@user/yst) (Quit: Leaving)
[12:49:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:50:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:50:33] *** Joins: gentooclimax (~gentoocli@2a02-8440-3340-1c3a-c143-4578-2f86-0268.rev.sfr.net)
[12:50:54] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[12:51:31] *** Joins: yst (~yst@user/yst)
[12:51:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[12:52:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:52:17] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:52:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:52:57] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[12:53:57] *** Quits: henco (~henco@lon11.dustyservers.com) (Quit: Ping timeout (120 seconds))
[12:54:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:54:22] *** Joins: henco (~henco@lon11.dustyservers.com)
[12:54:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:54:43] <Luyin> help friends, I've been out of programming for too long. trying to unpack a json array of dicts {'text': str, 'intent': str} to two separate lists called texts and intents. My thoughts go somewhere in the direction of `texts, intents = d['text'], d['intent'] for d in json_array` but this doesn't work. I can do it in a for-loop, but I can't get my head around doing it in a list comp. maybe it's just
[12:54:45] <Luyin> not possible, but it's probably just that I've got rusty with python :D
[12:55:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[12:55:37] *** goncalo_ is now known as goncalo
[12:55:52] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:55:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[12:56:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:56:17] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:56:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:56:42] *** Quits: ano (~ano@user/ano) (Quit: ano)
[12:56:55] *** Joins: ano (~ano@user/ano)
[12:57:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:58:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:58:20] <mexen> What are some modules you find yourself using repeatedly?
[12:58:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[12:58:55] *** Quits: dorf (~mstendorf@84.238.2.42) (Remote host closed the connection)
[12:59:17] *** Joins: ThanatosJ (~Thanatos@105.112.18.238)
[12:59:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:59:49] *** Joins: andreasbuhr (~quassel@p549db052.dip0.t-ipconnect.de)
[12:59:54] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:59:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[12:59:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[13:00:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:00:19] <han-solo> `requests`
[13:00:24] *** Quits: p-i- (~Ohmu@mx-ll-183.89.38-96.dynamic.3bb.co.th) (Remote host closed the connection)
[13:00:41] <han-solo> assuming thirdparty
[13:00:41] * mexen is taking notes
[13:00:50] <mexen> Yes han-solo
[13:02:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:02:14] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[13:02:27] <han-solo> i guess people here love `attrs`, `pydantic`
[13:02:33] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:02:45] *** Quits: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:02:58] *** Quits: Thanatos (~Thanatos@105.112.30.178) (Ping timeout: 272 seconds)
[13:04:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:04:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:04:39] *** Quits: gtristan (~tristan@223.62.163.92) (Ping timeout: 256 seconds)
[13:04:47] *** Joins: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[13:04:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:05:48] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:15a2:620d:3295:a998) (Ping timeout: 240 seconds)
[13:06:16] <mexen> All right, cheers ð
[13:06:46] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[13:07:19] <han-solo> fastapi seems popular among frameworks
[13:07:20] *** Joins: bahamas (~lucian@84.232.140.52)
[13:08:12] * mrwick uses click for cli but typer also looks interesting
[13:08:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[13:08:43] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:09:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:09:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:10:07] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:10:28] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:10:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[13:10:58] <callq> Every single time I need to sort a list of dicts by a value, I have to google how to write that lambda function...
[13:12:10] *** Joins: Masklin_Gurder (~joel@eduroam-rs-06.wireless.lu.se)
[13:12:13] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[13:12:28] *** Joins: arinov (~arinov@78.162.47.106)
[13:13:08] <callq> Okay but now that I've sorted it, I actually want to move one of those dictionaries, and insert at index 0 of the list. How to?
[13:13:21] *** Joins: pro_z_ (~pro_z@37.214.78.161)
[13:13:26] <callq> mylist.insert(0, mylist.pop(5))
[13:14:12] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:15:38] <callq> balances.insert(0, balances.pop(balances.index( )) ... but! How do I get the index of a dictionary in which one of the key-values equals "USD"
[13:16:40] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[13:16:51] *** Joins: tristan_ (~tristan@223.62.219.169)
[13:17:14] *** Joins: bluedust (~bluedust@103.148.21.74)
[13:17:29] <han-solo> `idx = next((i for i,item in balances if item['currency'] == 'USD'), None)` and handle accordingly ?
[13:17:55] <callq> balances.insert(0, balances.pop(balances.index(next((index for (index, d) in enumerate(lst) if d["currency"] == "USD"), None))))
[13:18:08] <callq> Hope I never have to read or edit that line again...
[13:19:41] <Repiphany> Stop trying to cram so much into one line
[13:20:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:20:23] <callq> Ahh, nothing's working anyway. `balances.insert(0, balances.pop(balances.index(next((i for i,item in balances if item['currency'] == 'USD'), None))))`
[13:20:24] <callq> `ValueError: too many values to unpack (expected 2)`
[13:21:48] *** Quits: bluedust (~bluedust@103.148.21.74) (Ping timeout: 240 seconds)
[13:22:08] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[13:22:12] *** Joins: bluedust (~bluedust@117.207.234.120)
[13:22:41] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[13:23:39] <han-solo> yeah, stop trying to put everything on one line
[13:23:54] <callq> Okkkkk
[13:23:55] <callq> balances.insert(0, balances.pop(next((index for (index, d) in enumerate(balances) if d["currency"] == "USD"), None)))
[13:23:56] <callq> Done
[13:24:39] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:25:07] <han-solo> you likely can't `.pop(None)`
[13:25:22] <Luyin> any ideas to my list comp question above? ^
[13:25:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:26:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:27:28] <han-solo> Luyin: can we see a sample `json_array` and the expected output ?
[13:27:51] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:28:00] <Repiphany> Luyin: You could do `texts, intents = zip(*[[d['text'], d['intent']] for d in json_array])`
[13:28:38] <Repiphany> That would give tuples, not lists though if that matters
[13:30:08] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:30:12] *** Quits: newpy__ (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398) (Ping timeout: 240 seconds)
[13:30:17] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:30:19] <Luyin> han-solo: sure! it would look like this: https://paste.xinu.at/giAm/
[13:30:38] <han-solo> yeah, what Repiphany showed should work
[13:30:45] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:30:51] *** Joins: ravan (~ravan@42.201.198.151)
[13:30:51] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[13:30:51] *** Joins: ravan (~ravan@user/ravan)
[13:30:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:31:08] <AhmedAmerican> can i access Playwright page content as text ? something like `.text` ?
[13:31:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:31:21] <Luyin> and the expected output would be texts : List[str] = ['first text', 'second text'], and intents: List[str] = ['first intent', 'second intent']
[13:31:33] *** Joins: ubert1 (~Thunderbi@ip5b40751a.dynamic.kabel-deutschland.de)
[13:31:44] <Luyin> ok, so I would get tuples with Repiphany's code. and then I'd have to convert that to lists again?
[13:31:55] <han-solo> why ?
[13:31:57] <Luyin> it sounds like just doing a for-loop might be the more readable option now
[13:32:39] <han-solo> well, sure
[13:32:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:33:25] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[13:33:26] *** Joins: goncalo_ (~goncalo.g@154.61.65.190)
[13:33:30] *** Joins: veracioux (~user@31.176.244.205)
[13:33:47] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[13:33:52] <Luyin> I had zip in mind for this task but somehow thought I'd need to use that when I have the converse case; viz. when I need to convert lists to tuples or something
[13:34:21] <Luyin> I'll go with my for loop, that's a lot easier for me to debug if I need to later. thanks for the pointer, though, I'll write it down if I do want to come back to it later :)
[13:34:26] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[13:34:28] <Luyin> so cheers!
[13:34:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:34:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:35:46] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:35:46] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[13:35:47] *** Quits: goncalo (~goncalo.g@154.61.65.189) (Ping timeout: 256 seconds)
[13:36:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:36:39] <Repiphany> `a, b, ...=  zip(*...)` is a pretty common idiom for "transposing" a list of lists etc
[13:36:54] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:37:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:37:40] *** Joins: kts (~kts@103.73.237.171)
[13:40:18] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0::f824) (Remote host closed the connection)
[13:40:30] *** Joins: MarderIII (~MarderIII@2a02:a45a:72f1:1:8587:dbce:9777:9595)
[13:41:20] *** Joins: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[13:41:37] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:bc03:7574:25e1:4f12) (Remote host closed the connection)
[13:42:00] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7429:3422:7c3f:d976)
[13:42:17] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[13:42:18] *** Quits: gentooclimax (~gentoocli@2a02-8440-3340-1c3a-c143-4578-2f86-0268.rev.sfr.net) (Quit: Konversation terminated!)
[13:43:05] *** Joins: dvx (~dvx@5.181.92.64)
[13:43:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 272 seconds)
[13:44:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[13:45:44] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[13:46:46] *** Joins: iob (~iob@dynamic-2a00-1028-8390-9e8a-5cf8-25c0-aa4e-e57d.ipv6.o2.cz)
[13:48:29] *** Joins: ostlive23 (~ostlive23@62.209.134.10.static.ip.tps.uz)
[13:48:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:49:52] <Luyin> thx, Repiphany, I'll keep it in mind!
[13:50:08] *** Quits: tristan_ (~tristan@223.62.219.169) (Ping timeout: 252 seconds)
[13:51:07] *** Quits: dul (~dul@user/dul) (Ping timeout: 256 seconds)
[13:51:42] <Payam> Hi, any female between 24-30 ? please write to me
[13:51:47] <Payam> ohh sorry wrong chat
[13:52:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:54:11] *** ChanServ sets mode: +o supakeen
[13:54:13] *** supakeen sets mode: +b *!*@138.106.57.131
[13:54:15] *** Payam was kicked by supakeen (Payam)
[13:54:20] *** ChanServ sets mode: -o supakeen
[13:54:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:56:11] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 272 seconds)
[13:56:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:56:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[13:57:41] <Luyin> well, lol.
[13:58:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[13:58:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:00:17] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:00:21] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[14:00:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:01:03] *** Quits: ostlive23 (~ostlive23@62.209.134.10.static.ip.tps.uz) (Remote host closed the connection)
[14:02:13] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:02:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:02:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:03:56] *** Joins: blackle1tus (~blackleit@189.195.192.124)
[14:04:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:04:24] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[14:04:27] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:04:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:04:56] *** Joins: arinov_ (~arinov@77.67.133.10)
[14:05:15] *** Quits: arinov (~arinov@78.162.47.106) (Ping timeout: 256 seconds)
[14:05:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[14:06:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:06:21] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:07:00] *** Quits: _blackeitus (~blackleit@189.195.195.100) (Ping timeout: 240 seconds)
[14:07:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:07:41] *** Joins: Naan (~Naan@user/naan)
[14:07:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[14:08:07] *** Joins: CapnKernel (foobar@gromit.mixdown.ca)
[14:08:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:08:33] *** Joins: someuser (~user@197.54.121.144)
[14:08:36] *** Joins: anotheruser (~user@197.54.121.144)
[14:08:37] *** Joins: demon__ (~user@197.54.121.144)
[14:09:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:09:47] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[14:10:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:10:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:10:48] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[14:10:51] *** Quits: timothy (~timothy@redhat/timothy) (Quit: ZNC 1.8.2 - https://znc.in)
[14:11:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:11:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:11:56] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:12:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:12:31] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:14:04] *** Quits: anotheruser (~user@197.54.121.144) (Quit: Leaving)
[14:14:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:14:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:14:31] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[14:14:33] *** Quits: demon__ (~user@197.54.121.144) (Quit: Leaving)
[14:15:59] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:16:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:16:32] *** Joins: Sylhouette (~johan@87.233.185.201)
[14:16:33] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:16:53] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[14:17:04] <CapnKernel> Hello.  I'm trying to use ElementTree in Python3 to modify an XML file.  The file I'm reading represents non-ASCII Unicode codepoints using ampersand encoding, for example, &#128559;.  The file reads ok, but when I write out to a new file, &#128559; has changed to ð¯.  How can I convince Python to write out &#128559;?
[14:17:09] *** Quits: lbalhar (~lbalhar@188-175-36-239.client.rionet.cz) (Ping timeout: 256 seconds)
[14:17:41] <CapnKernel> (Naturally that goes for every non-ASCII Unicode codepoint, not just that one)
[14:17:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:18:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:19:06] *** Joins: plastico (~plastico@neomutt/plastico)
[14:19:07] *** Joins: Adoi (~Adoi@user/adoi)
[14:19:29] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[14:19:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:19:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:20:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:20:15] *** Quits: arinov_ (~arinov@77.67.133.10) (Ping timeout: 256 seconds)
[14:21:12] <willow> CapnKernel: write in 'b' mode?
[14:21:44] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:21:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[14:22:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:22:25] <CapnKernel> willow: Thank you for the suggestion, but I don't think that will help.
[14:22:26] <willow> https://docs.python.org/3/library/functions.html#open
[14:22:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:22:47] <CapnKernel> 'b' would help with line endings
[14:22:59] <CapnKernel> And that's not my problem
[14:23:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:23:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:24:55] <Timvde> CapnKernel: if you don't need the unicode representation after reading, you can try resolve_entities=False
[14:24:56] <CapnKernel> Something in the code called when I do tree.write() would have to write out non-ASCII codepoints using ampersand escaping, and I don't think that's what 'b' does.
[14:25:04] <Timvde> Then they won't ever be converted
[14:25:18] *** Quits: asix (~Anders@user/asix) (Ping timeout: 272 seconds)
[14:25:27] <CapnKernel> I think that could work.
[14:25:32] <Timvde> (at least that's what I'm getting from the lxml documentation)
[14:25:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:25:49] <CapnKernel> I've used lxml before, is it related to ElementTree?
[14:25:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:25:59] <Timvde> CapnKernel: oh, I'm actually looking at lxml.etree, not ElementTree
[14:25:59] <CapnKernel> I'm using ElementTree for this code, should I use lxml?
[14:26:15] <Timvde> It's pretty much compatible afaik: https://lxml.de/3.6/compatibility.html
[14:26:20] <Timvde> I have never used ElementTree
[14:26:42] <Timvde> I won't tell you to use one or the other, I don't know :)
[14:27:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:27:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:28:14] *** Joins: kiryin (~kiryin@2001:999:62:88ed:bd4f:553a:8989:c61f)
[14:29:02] *** Quits: kiryin_ (~kiryin@2001:999:50:7582:c341:9e1c:4399:e7de) (Ping timeout: 240 seconds)
[14:29:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:29:46] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:29:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:31:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[14:31:31] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:31:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:31:57] <CapnKernel> Thank you
[14:32:27] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (Ping timeout: 256 seconds)
[14:32:47] *** Joins: Thanattt (~Thanatos@105.112.31.232)
[14:33:16] *** Quits: ThanatosJ (~Thanatos@105.112.18.238) (Read error: Connection reset by peer)
[14:33:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:33:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:33:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:35:05] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[14:35:22] *** Joins: kevr (~kevr@user/kevr)
[14:35:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:35:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:36:20] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[14:36:34] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:37:15] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:37:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:37:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:38:50] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[14:39:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:39:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:39:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:40:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:40:30] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[14:41:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:41:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:43:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:43:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:43:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:45:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:45:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:45:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:46:35] *** Quits: callq (~callq@2409:4062:2e1f:6d40:bd35:cc34:c5f2:a729) (Quit: callq)
[14:47:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:47:40] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:49:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:49:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:49:33] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:49:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:50:31] *** Joins: LimeOn (LimeOn@user/limeon)
[14:51:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:51:33] *** Joins: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d)
[14:51:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:52:45] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[14:52:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:53:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:53:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:55:23] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:55:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:55:59] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[14:56:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:56:37] <CapnKernel> ElementTree.write() will take a file object opened for writing.  Can I put something there that will do the escaping?
[14:56:41] <lola> hey python users \O/
[14:56:42] <lola> We hereby announce a new release of Hyperbola live image for Hyperbola GNU/Linux-libre. It is the first release with nondependence on D-Bus and many of the commonly used frameworks dropped.
[14:56:42] <lola> This version contains various bugfixes and notable performance.
[14:56:42] <lola> https://www.hyperbola.info/news
[14:56:44] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[14:57:05] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[14:57:15] <CapnKernel> I've looked around in the Python source, and I can't find a built-in codec to do this.
[14:57:36] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:57:38] <CapnKernel> Any suggestions for a web page which shows how to write your own codec and plug it in?
[14:57:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[14:58:36] *** Joins: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5)
[14:59:05] *** Joins: paul424 (~tom@ip-5-172-238-45.multi.internet.cyfrowypolsat.pl)
[14:59:05] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:59:15] *** Joins: maxzor__ (~maxzor@2a01cb04054faa00255ff5c1b41e312a.ipv6.abo.wanadoo.fr)
[14:59:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[14:59:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[14:59:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:00:08] *** Joins: Enitin (~Enitin@82.180.145.226)
[15:00:32] *** Quits: MarderIII (~MarderIII@2a02:a45a:72f1:1:8587:dbce:9777:9595) (Ping timeout: 240 seconds)
[15:01:02] *** Joins: darksun (~darksun@user/darksun)
[15:01:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:01:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:01:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:02:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[15:02:22] *** Joins: asix (~Anders@user/asix)
[15:02:22] *** Joins: tga (~tga@user/tga)
[15:02:48] <darksun> qualcuno mi saprebbe dire perchÃ© Safari/Terminal non riescono a risolvere gli indirizzi perÃ² chrome va?
[15:02:57] <tga> hey, quick one, what's a nice way of combining a list of dicts?
[15:03:02] <darksun> inoltre, qui mi fa entrare, su azzurra (9999) no
[15:03:23] <tga> I'm trying to put something together with itertools.chain, but I haven't quite gotten it yet
[15:03:25] <darksun> sorry for the message. wrong channel
[15:03:32] *** Joins: savolla (~savolla@84.44.28.28)
[15:03:38] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:03:53] *** Joins: _mantra (~mantra@216.73.163.13)
[15:03:56] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:04:02] *** Quits: mantra (~mantra@216.73.163.41) (Ping timeout: 240 seconds)
[15:04:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324)
[15:04:30] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:05:13] <tga> oh, turns out dict.update() can take a list
[15:05:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:05:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[15:05:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:06:01] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324) (Read error: Connection reset by peer)
[15:06:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324)
[15:06:32] <savolla> hey all o/. Is there any Python 3D data processing library that can give "coordinates of edges" in an mesh file?
[15:06:37] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[15:06:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:06:56] *** Quits: blackle1tus (~blackleit@189.195.192.124) (Read error: Connection reset by peer)
[15:07:21] *** Joins: esther (~esther@155.254.31.185)
[15:07:22] *** Joins: blackle1tus (~blackleit@189.195.192.124)
[15:07:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:07:59] <LimeOn> Hello. I want to access to certain elements of my list. I have something like A=['this is a cat','this is a dog', this is a house']. I want to create a new list that has only the words "cat","house" and "dog". I tried to make a new list with this: B=A.append[:][10:13] but i dont get the words i want. How i can "tell" python that? Thanks
[15:08:01] <nedbat> CapnKernel: i dont think you want a codec, that's complicated.
[15:08:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:08:18] <nedbat> CapnKernel: can you pastebin the code you are using now to write the xml?
[15:08:43] *** Quits: nre (~nre@55d4d0a9.access.ecotel.net) (Ping timeout: 256 seconds)
[15:09:00] *** Quits: five64333349 (~five6@8.40.26.27) (Quit: The Lounge - https://thelounge.chat)
[15:09:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:10:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Excess Flood)
[15:10:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:10:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:10:33] <nedbat> LimeOn: you can get the last word of a string with:  the_string.split()[-1]
[15:12:03] <tga> any more intelligent way of doing d = {}, d.update([d1,d2,d3]) to mix multiple dicts?
[15:12:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:12:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:12:21] *** Joins: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4)
[15:12:23] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[15:12:51] <tga> or [k:v for d in dicts for k,v in d.items()] I guess, also looks overcomplicated
[15:12:57] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[15:13:25] <Repiphany> `d1 | d2 | d3` in python 3.9
[15:13:45] <tga> right, but they're in a list
[15:14:03] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:14:06] <CapnKernel> nedbat: FWIW: https://gist.github.com/CapnKernel/3a18a114c890788e3678e2afb8e7a32f
[15:14:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:14:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:14:21] *** Joins: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4)
[15:14:44] <nedbat> CapnKernel: what happens if you change "utf8" there to "ascii"?
[15:15:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[15:16:25] <LimeOn> Well, the word i want is not exactly at the end of the string, that one was a simple example of what im looking for nedbat
[15:16:29] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1526:6857:f42c:4a6c) (Ping timeout: 252 seconds)
[15:16:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:16:42] <nedbat> LimeOn: ok, tell us more about what part of the string you want
[15:16:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:17:02] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[15:17:19] *** Joins: nomic (~nomic@85.203.36.100)
[15:17:29] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:18:11] <LimeOn> i have something like this: "title":{"runs":[{"text":"MYTEXTISHERE', ' .... I want what says "mytextishere"
[15:18:46] <CapnKernel> nedbat: That's a DGQ.  I'll try it.
[15:18:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:18:50] <tga> you'll need to either parse that string if it's json, or write a regular expression to find it in the string
[15:18:58] <tga> is it json?
[15:19:07] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:19:26] *** Joins: ice9 (~ice9@user/ice9)
[15:19:27] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7429:3422:7c3f:d976) (Ping timeout: 250 seconds)
[15:19:55] <Luyin> looks like a json string (unless leading [ or something is missing, then it's just proper json)
[15:20:07] <LimeOn> Im not working with json, im doing some scrapping
[15:20:18] <LimeOn> And i want to "polish" the string i obtain
[15:20:34] <LimeOn> I could be json code,indeed
[15:20:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:20:54] <tga> if the format is exact, you can go mystring.replace('"title":{"runs":[{"text":"', '')
[15:20:59] <Luyin> LimeOn: ok so wait a minute - *is* it json code or isn't it? because answers will depend on that
[15:21:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:21:17] <LimeOn> You should think about it as a string, just text, it does nothing
[15:21:25] <LimeOn> Im scrapping a site that uses json code
[15:21:38] <LimeOn> But i want to get rid of json code, i just want some text
[15:21:39] <tga> so err is it valid json or not?
[15:21:43] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com)
[15:22:01] <tga> if it is, you can easily parse the whole thing and take out whatever you want
[15:22:22] <CapnKernel> nedbat: It does the ampersand encoding, just how I want it!
[15:22:25] <CapnKernel> Sweet...
[15:22:26] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[15:22:26] <LimeOn> What you mean? i dont get it,sorry tga
[15:22:30] <nedbat> CapnKernel: yay!
[15:22:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:23:02] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:23:03] <tga> LimeOn: the original string, is it json?
[15:23:38] <LimeOn> Well, i think it was, but i truncated it
[15:23:50] <tga> now we're getting somewhere
[15:24:03] <tga> if you can still get the original and not truncate it, it will be much easier to extract things out of it
[15:24:10] <LimeOn> Oh
[15:24:20] <LimeOn> With the parse function?
[15:24:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:25:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:25:27] *** Joins: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[15:25:27] <tga> parsed_data = json.loads(s) will just give you a dict with the same format as the json, then you just go parsed_data["title"]["runs"][0]["text"] or whatever
[15:25:31] <CapnKernel> nedbat: The only problem is that it's shown that the xml file is a mix of utf-8 and NCRs, plus unquoted double quotes, oh my!
[15:25:44] <CapnKernel> Thank you for your help, I really appreciate it.
[15:26:09] <CapnKernel> https://en.wikipedia.org/wiki/Numeric_character_reference
[15:26:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:27:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:27:13] <LimeOn> Hmm, i think i should implement that, my approach is a bit more messy than parse
[15:27:21] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324) (Remote host closed the connection)
[15:27:30] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[15:27:31] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[15:27:37] <LimeOn> But there is another way to do it with some kind of syntax like the one i described before?
[15:27:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2ee:f41f:69c2:88b7:dcd4)
[15:28:44] <dante-as> Hi guys, how can I force the `port` as integer in the following DriverAction class? https://bpa.st/TTQQ
[15:29:52] <LimeOn> I think i found what i was looking for... The for something in my_function: and then the something[8:10] prints me it
[15:30:22] <LimeOn> tga: I will implement that way, its far more clean for what i see. Thank you very much!!! tga nedbat
[15:30:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:30:41] *** Quits: paul424 (~tom@ip-5-172-238-45.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:31:00] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[15:31:11] <Luyin> LimeOn: your slicing is messy and error prone
[15:31:13] <Luyin> just saying
[15:31:27] <LimeOn> Yes, i realize that Luyin
[15:31:31] <Luyin> LimeOn: if you have a little more time to spare, it makes sense to refactor it in the way that you can use json properly
[15:31:49] <Luyin> json.load/loads your stuff, and then just pull the dict values out
[15:31:52] <LimeOn> I will rewrite it using the parse module
[15:32:02] *** Joins: darksun (~darksun@user/darksun)
[15:32:04] <Luyin> (can never recall which you need for what, wrt load or loads)
[15:32:05] <LimeOn> I did not know that module, that was the problem :)
[15:32:10] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[15:32:15] <Jong> Any reason b = [a[:][0]] does not work but this does b = [[r[0] for r in a]]
[15:32:22] <Luyin> LimeOn: not sure what parse module you mean :D I think you should use json (the module) :P
[15:32:26] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:6938:5d7:7e7:1023)
[15:32:32] <LimeOn> https://pypi.org/project/parse/ Luyin
[15:32:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:33:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:33:08] <Luyin> eh, not sure why you'd use that, but you do you
[15:33:15] <Luyin> the obvious solution would be to import json
[15:33:22] <Luyin> Â¯\_(ã)_/Â¯
[15:33:28] <Repiphany> Jong: Are you using numpy arrays
[15:33:29] <LimeOn> How i can do it that way? Luyin
[15:33:51] *** Joins: dul (~dul@101.88.74.162)
[15:33:51] *** Quits: dul (~dul@101.88.74.162) (Changing host)
[15:33:51] *** Joins: dul (~dul@user/dul)
[15:34:06] *** Quits: dul (~dul@user/dul) (Max SendQ exceeded)
[15:34:08] <Jong> Repiphany  I'm not, but I thought python lists supports slicing
[15:34:08] <Repiphany> a[:][0] is the same as a[0] (in both normal lists and np)
[15:34:12] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:34:23] <Repiphany> You can't slice into sublists like that
[15:34:29] <LimeOn> If you have a page explaining what you mean i will appreciate it Luyin
[15:34:36] <Jong> Repiphany  I'm basically deinterleaving
[15:34:48] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:34:49] <Luyin> LimeOn: as I and others have said before: https://docs.python.org/3/library/json.html#json.load resp. https://docs.python.org/3/library/json.html#json.loads
[15:35:00] *** Joins: dul (~dul@user/dul)
[15:35:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:35:04] <Jong> Repiphany  why can't I slice that way? Is that just how python is? Any reason the designers of python chose not to allow this?
[15:35:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:35:11] <Repiphany> a[:] == a
[15:35:28] <Repiphany> That's just not what slicing is meant to do
[15:35:54] <Jong> but it works in numpy I think. If this isn't slicing, what's it called in the context of numpy?
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:13] <nedbat> CapnKernel: i didn't understand: is there a problem with the output file?
[15:36:21] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 250 seconds)
[15:36:24] <Repiphany> np slicing is just different
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] <Repiphany> and you would have needed to do a[:, 0] to get what you want
[15:36:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:36:55] <Jong> vectorization was the word I'm looking for
[15:37:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:37:21] <Jong> a[:,0] is vectorized in numpy. Python list slicing is not vectorized. right?
[15:37:36] <Jong> Thanks for the help Repiphany
[15:37:50] <LimeOn> I see, i shoudl read that, thanks Luyin and sorry, im new in this Python thing
[15:38:08] <Repiphany> I've never heard np slicing referred to as vectorized
[15:38:12] <Luyin> LimeOn: don't worry :) we've all been there
[15:38:17] <Repiphany> It's just basic np indexing
[15:38:37] <nedbat> LimeOn, Luyin: depending on what I'm working on, I still am there!
[15:38:45] <Luyin> nedbat: !!
[15:38:47] <Luyin> this!
[15:38:49] <Luyin> :)
[15:39:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:39:03] <Luyin> I'm very firm with the json module nowadays because I mostly have to work on json files
[15:39:14] <Luyin> and *still* can't remember the bloody difference between loads and load :D
[15:39:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:39:48] <nedbat> Luyin: i can never remember the order of args for dump
[15:40:07] <lericson> same, nedbat
[15:40:48] <lericson> wish there was a convention of keyword names
[15:40:49] <Repiphany> Same as cp
[15:40:49] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:40:50] <Luyin> nedbat: I only use it in pycharm and jupyter, so I just tab through 8)
[15:41:03] <lericson> json.dump(what=thing, into=file_like)
[15:41:04] <Repiphany> cp source (object) target (file)
[15:41:10] <lericson> Repiphany: nice mnemonic
[15:41:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:41:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:42:03] *** Joins: bluedust (~bluedust@117.207.234.120)
[15:42:13] *** Joins: Enitin (~Enitin@82.180.145.230)
[15:42:26] <Luyin> lericson++ !
[15:42:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:43:18] <lericson> here's a crazy idea - a programming language with sets as arguments instead of tuples, so you just give it a file-like thing and a dumpable thing, and it figures out the rest for you
[15:43:30] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:43:47] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:43:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:43:52] <jim> hi, in https://realpython.com/absolute-vs-relative-python-imports/#absolute-imports, it says: "An absolute import specifies the resource to be imported using its full path from the projectâs root folder."
[15:44:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[15:44:12] *** Quits: veracioux (~user@31.176.244.205) (Read error: Connection reset by peer)
[15:44:16] <jim> How does python know where the project root dir is?
[15:44:22] <lericson> jim: the python path
[15:44:28] <lericson> visible in python as sys.path
[15:44:41] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:44:46] <jim> so you add the project root to sys.path?
[15:45:04] <jim> ok, so that'
[15:45:05] <exarkun> jim: not directly, no
[15:45:25] <jim> ok, so then how would python know?
[15:45:26] <exarkun> jim: you use a virtualenv, set PYTHONPATH, or do some other platform-specific setup
[15:45:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:45:50] <exarkun> it /ends up/ in sys.path, usually - but you do not write programs that say `sys.path.append(...)`
[15:45:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:46:01] <jim> PYTHONPATH is a colon-separated list of dirs?
[15:46:28] *** Joins: veracioux (~user@109.175.58.199)
[15:46:29] <exarkun> technically I guess it might be an os.pathsep-separated list of dirs
[15:46:31] <savolla> Is there any Python 3D data processing library that can give "coordinates of edges" in an mesh file?
[15:46:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[15:46:38] *** Joins: tristan_ (~tristan@223.62.175.232)
[15:46:41] <lericson> savolla: trimesh is good
[15:46:41] <exarkun> but - yes, what you said.
[15:46:42] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[15:46:53] *** Quits: dtg01100_ (~dtg01100@199.21.141.37) (Quit: Leaving)
[15:47:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:47:33] <jim> ok, so the answer to how does it know, is you use one of the available mechanisms for setting the path
[15:47:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:47:43] <jim> thanks
[15:47:46] <lericson> correct
[15:47:54] <lericson> or rather you put your code in one of the places that python looks
[15:47:54] <savolla> thank you lericson! in which kind of project did you work with this library?
[15:47:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:48:00] <lericson> savolla: research project
[15:48:10] <lericson> savolla: https://github.com/lericson/fragmenot
[15:48:18] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:49:01] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com) (Read error: Connection reset by peer)
[15:49:03] <lericson> savolla: i used it both for geometric reasoning and for a graphical interface
[15:49:18] <lericson> i took the coordinates out of trimesh and did ray tracing in intel's embree
[15:49:20] *** Joins: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com)
[15:49:47] *** Joins: Techcable (~Techcable@168.235.93.147)
[15:49:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:50:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:50:12] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:51:26] <savolla> lericson we're trying to detect edges of some workpieces for robotic welding application. basically program will extract welding edges and robot will see and automatically weld them. actually the problem I'm trying to solve is that kind of problem. Do you have any suggestions for this after reading the real problem state?
[15:51:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[15:52:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:52:54] *** Joins: five643333496 (~five6@8.40.26.65)
[15:53:22] <lericson> savolla: uh depends a lot on the specifics of the representation etc
[15:53:28] <lericson> you have sensor data?
[15:53:36] <lericson> or some cad?
[15:53:50] <savolla> we only have cad data (stl)
[15:53:55] <lericson> aha
[15:54:04] <lericson> what is a welding edge?
[15:54:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[15:54:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:54:39] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:54:56] *** Joins: pycode (~pycode3@2001:b07:5d28:551:2621:75db:ae14:2906)
[15:55:21] <savolla> lericson welding edge is actually an edge between two concave surfaces
[15:56:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:56:32] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:56:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:56:49] *** Joins: kostkon (~androirc@2.142.66.94.static.otenet.gr)
[15:56:56] <savolla> lericson but thanks for trimesh suggestion. It looks very promising
[15:57:03] <savolla> I'll look through that
[15:57:22] <montpol> When I type "where pip" i get three different paths and want to specifically use the second one. How can I remove the other two?
[15:57:35] <montpol> (in W10)
[15:57:56] *** Quits: F0rTh3J3st (~F0rTh3J3s@wsip-174-67-161-18.hr.hr.cox.net) (Quit: Leaving)
[15:58:32] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[15:58:50] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[15:59:42] *** Joins: icy_hot (~icy_hot@106.241.29.252)
[16:00:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:00:44] <jim> when you use the 'from
[16:00:48] <jim> 'oops
[16:00:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:01:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:01:14] <jim> when you use the 'from' form of import, can the thing after 'import' have dots in it
[16:01:17] <jim> ?
[16:01:21] <lericson> savolla: it contains a lot of mesh analysis stuff so i'm sure you can cook something up
[16:01:30] <lericson> no jim
[16:01:41] *** Quits: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d) (Quit: Reconnecting)
[16:01:50] <jim> so you cannot do from foo impoirt bar.baz
[16:01:53] *** Joins: boris[m]1 (~boristilt@2001:470:69fc:105::1:ad6d)
[16:02:08] <lericson> i think no
[16:02:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:02:27] <jim> ok thanks, and sorry for typo noise earlier
[16:02:34] *** Joins: cdown (~cdown@163.114.131.1)
[16:02:44] <Repiphany> Why don't you want to just `from foo import bar`
[16:02:45] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:02:55] <lericson> i just checked the grammar and no you cannot
[16:03:04] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:03:18] <lericson> `from x import y` wants y to be a comma-separated list of names
[16:03:30] <jim> Repiphany, I'm trying to figure why I'm getting a syntax error, and maybe how to fix it
[16:04:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:04:15] <Repiphany> from foo.bar import baz as foobarbaz
[16:04:49] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:05:06] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:05:53] *** Joins: daoudr (~daoudr@2a02:1210:52f9:b500:3bdc:2aba:59b8:9657)
[16:06:55] *** Joins: yac (~user@user/yac)
[16:07:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:07:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[16:07:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:08:31] *** Joins: revolve (~u0_a227@82-132-239-33.dab.02.net)
[16:08:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:09:10] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:09:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:10:36] *** Quits: KateTheLynx (~KateTheLy@178235188117.dynamic-4-waw-k-3-0-0.vectranet.pl) (Ping timeout: 240 seconds)
[16:10:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[16:11:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:11:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:11:49] *** Joins: KateTheLynx (~KateTheLy@178235188117.dynamic-4-waw-k-3-0-0.vectranet.pl)
[16:13:02] *** Joins: shad (~shad@user/shad)
[16:13:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:13:35] *** Joins: Guest111 (~Guest111@88.103.7.38)
[16:13:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:13:51] *** Joins: nre (~nre@55d4d0a9.access.ecotel.net)
[16:14:13] <montpol> does anyone know how to downgrade python pip version from 3.9 to 3.8?
[16:14:37] *** Quits: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5) (Ping timeout: 240 seconds)
[16:15:08] *** Joins: resmo (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464)
[16:15:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:15:46] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:16:47] *** Joins: bahamas (~lucian@84.232.140.52)
[16:17:19] *** Quits: pycode (~pycode3@2001:b07:5d28:551:2621:75db:ae14:2906) (Ping timeout: 256 seconds)
[16:17:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:17:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:19:28] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:19:47] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:20:05] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:20:32] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[16:20:57] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[16:21:04] *** Joins: Klinda (~superleag@user/klinda)
[16:21:50] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 272 seconds)
[16:21:56] *** lola is now known as irelativism
[16:22:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:22:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:23:24] <montpol> nvm got it :)
[16:24:12] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:24:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:25:40] *** Joins: tejr_ (~tejr@user/tejr)
[16:26:29] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:26:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[16:26:48] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:27:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[16:27:20] *** tejr_ is now known as tejr
[16:27:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 272 seconds)
[16:27:45] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[16:28:17] *** Quits: swistak (~swistak@185.21.216.141) (Quit: bye bye)
[16:28:22] *** Joins: bloody (~bloody@user/bloody)
[16:28:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:28:45] *** Joins: swistak (~swistak@185.21.216.141)
[16:28:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:29:11] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:29:25] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[16:29:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:30:19] *** Quits: BruceDoh (~BruceDoh@xplr-208-114-129-56.xplornet.com) (Quit: Leaving)
[16:30:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:30:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:31:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:32:52] *** Quits: nomic (~nomic@85.203.36.100) (Quit: Leaving)
[16:33:06] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:33:23] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:35:01] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[16:35:33] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:35:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:36:02] *** Joins: Lauxley (~lauxley@2a01:e34:ec55:2700:352b:ee31:6bdb:1696)
[16:36:41] *** Joins: rsx (~dummy@ppp-188-174-150-30.dynamic.mnet-online.de)
[16:37:29] *** Quits: kts (~kts@103.73.237.171) (Quit: Konversation terminated!)
[16:37:36] *** Quits: Katrix (~Katrix@user/katrix) (Quit: ZNC 1.8.2 - https://znc.in)
[16:37:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:37:47] *** Joins: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5)
[16:37:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:39:30] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[16:39:51] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:39:55] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[16:40:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:40:13] *** Quits: fling (~fling@user/fling) (Ping timeout: 272 seconds)
[16:40:24] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[16:42:00] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:42:08] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:42:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:42:36] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[16:44:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:44:28] *** Joins: rvalue (~rvalue@user/rvalue)
[16:44:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:44:34] *** Joins: humberto1 (~humbertow@189.236.30.197)
[16:44:39] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:44:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:44:58] <AhmedAmerican> what do you think about my while loop here ? https://bpa.st/P7XQ
[16:45:12] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[16:45:15] <AhmedAmerican> it's working fine but is there a way to make it more Pythonic?
[16:46:31] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:46:37] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:46:47] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[16:46:54] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:47:39] *** Quits: tristan_ (~tristan@223.62.175.232) (Remote host closed the connection)
[16:47:58] *** Joins: tristan_ (~tristan@223.62.175.232)
[16:49:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:49:17] *** Quits: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[16:49:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:50:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:51:20] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:51:37] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:51:39] *** Quits: Auron (Auron956@user/auron) ()
[16:53:05] *** Quits: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: Leaving)
[16:53:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:53:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:53:57] *** Joins: Z-cat (~Z-cat@user/z-cat)
[16:54:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:55:01] *** Joins: zen_coder (~zen_coder@141.113.66.44)
[16:55:07] *** Joins: fling (~fling@user/fling)
[16:55:31] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:55:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:55:59] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:57:01] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[16:57:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[16:58:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[16:58:16] *** Joins: vlado2 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[16:58:22] *** Joins: justAstache (~justache@user/justache)
[16:58:36] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[16:59:50] *** Joins: darksun_ (~darksun@151.73.16.69)
[17:00:02] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:00:19] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:01:10] *** Joins: Adoi (~Adoi@user/adoi)
[17:01:25] *** Joins: econdudeawesome (~shadowfax@cpe-76-187-70-50.tx.res.rr.com)
[17:01:49] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:02:11] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:02:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:02:37] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[17:02:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:03:24] *** Quits: zen_coder (~zen_coder@141.113.66.44) (Ping timeout: 240 seconds)
[17:03:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:03:50] *** Quits: dul (~dul@user/dul) (Read error: Connection reset by peer)
[17:03:52] *** darksun_ is now known as darksun
[17:04:08] *** Quits: darksun (~darksun@151.73.16.69) (Changing host)
[17:04:08] *** Joins: darksun (~darksun@user/darksun)
[17:04:19] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:04:22] *** Joins: vladoski (~vladoski@2001:b07:add:d406:35da:4533:e7d7:7cd6)
[17:04:35] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:05:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:06:22] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:06:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:07:10] *** Joins: Elodin (~elodin@user/elodin)
[17:07:32] *** Quits: nre (~nre@55d4d0a9.access.ecotel.net) (Quit: Leaving.)
[17:07:38] *** Joins: nre (~nre@55d4d0a9.access.ecotel.net)
[17:07:52] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324)
[17:08:34] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:08:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:09:19] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[17:09:23] <AhmedAmerican> sorry, url here --> https://bpa.st/LDXA
[17:10:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:11:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2ee:f41f:69c2:88b7:dcd4) (Ping timeout: 240 seconds)
[17:11:01] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:11:15] *** Joins: bahamas (~lucian@84.232.140.52)
[17:12:19] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:12:57] *** Joins: Midjak (~Midjak@82.66.147.146)
[17:13:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:13:20] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:15:05] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:15:22] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:16:53] <Jong> Any elegant way get last element when out of range? a[ min(i, len(a)-1) ] looks un-pythonic
[17:16:57] <dav1d> AhmedAmerican, why is there a for loop, it always `returns` on the first iteration, no?
[17:17:15] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:17:25] <dav1d> s/for/while/
[17:17:32] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:17:35] *** Joins: pycode (~pycode3@2001:b07:5d28:551:b61a:4cbd:c8bc:c7a5)
[17:17:37] *** Joins: dul (~dul@user/dul)
[17:18:01] <AhmedAmerican> while loop is running a for loop. after the for loop is end, then it's return.
[17:18:03] <AhmedAmerican> works fine.
[17:18:26] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 250 seconds)
[17:18:29] *** Joins: Elodin (~elodin@user/elodin)
[17:19:09] <dav1d> AhmedAmerican, but the while never loops?
[17:19:28] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:19:33] <dav1d> just because it works fine doesn't mean it makes sense
[17:19:44] <dav1d> I am just wondering if I am missing something here
[17:19:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:20:36] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[17:20:53] <AhmedAmerican> dav1d: https://bpa.st/55TQ
[17:21:16] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:21:30] <dav1d> AhmedAmerican, I understand that it works, but why would you do that, it does nothing
[17:21:39] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:21:44] *** Joins: Elodin (~elodin@user/elodin)
[17:21:45] <dav1d> might as well not have the while there
[17:21:57] <dav1d> or an `if`
[17:21:57] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:22:03] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:22:03] *** Quits: blackle1tus (~blackleit@189.195.192.124) (Read error: Connection reset by peer)
[17:22:31] *** Joins: blackle1tus (~blackleit@189.195.192.124)
[17:22:40] <AhmedAmerican> it does, it's looping over pages by using page num?
[17:23:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:23:44] <dav1d> AhmedAmerican, the while does nothing, you immediately return after one iteration
[17:24:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:24:19] <AhmedAmerican> i return after the for loop finish
[17:24:26] <dav1d> yes, the while does nothing
[17:24:26] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:25:10] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Client Quit)
[17:25:22] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:25:36] *** Quits: theo (~theo@user/theo) (Remote host closed the connection)
[17:25:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:25:54] *** Joins: theo (~theo@user/theo)
[17:26:05] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:26:09] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:26:16] <AhmedAmerican> dav1d: Hmm, meaning to replace while with `if 'NumPageRemaining' in content`
[17:26:22] *** Joins: ravan (~ravan@user/ravan)
[17:27:02] *** Quits: theo (~theo@user/theo) (Client Quit)
[17:27:42] <dav1d> AhmedAmerican, yeah it seems like that you just want an `if?
[17:27:51] <dav1d> *`if`
[17:27:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:28:06] <AhmedAmerican> got it. you correct.
[17:28:12] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:28:49] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Client Quit)
[17:29:05] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[17:29:30] *** Joins: s1b1 (~s1b1@user/s1b1)
[17:29:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:30:00] *** Joins: Elodin (~elodin@user/elodin)
[17:30:10] *** Joins: BlessJah (~BlessJah@user/blessjah)
[17:30:17] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:31:14] <zamba> i have a script that performs a 3DES decryption.. its performance is limited by the fact that it only uses one core.. is there an easy way to make this multithreaded?
[17:32:18] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:32:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:32:36] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:33:29] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:33:33] <dav1d> AhmedAmerican, https://bpa.st/OS3A
[17:34:17] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:34:34] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:34:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:35:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:35:14] *** Quits: nre (~nre@55d4d0a9.access.ecotel.net) (Ping timeout: 260 seconds)
[17:35:29] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[17:35:37] <AhmedAmerican> dav1d: thatâs more clear than my version. Thanks again
[17:35:53] *** Joins: nre (~nre@55d4d0a9.access.ecotel.net)
[17:36:06] *** Joins: davor (~davor@user/davor)
[17:36:18] *** Joins: jamea (~jamea@177.239.81.39)
[17:37:00] <Wooble> zamba: you'd need the underlying C library to do the threading
[17:37:09] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:37:28] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:37:34] <Wooble> (whether that's even *possible* I don't know)
[17:37:43] <zamba> Wooble: but i'm actually decrypting the data frame by frame.. so i'm wondering if i could just send the different frames to different decrypting "threads"?
[17:38:11] <zamba> and then have one main "coordinating" thread that will output the decrypted data back in the correct order
[17:39:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:39:41] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:40:23] *** Joins: Elodin (~elodin@user/elodin)
[17:40:27] <Wooble> zamba: maybe try throwing concurrent.futures at it; if the crypto library releases the GIL using a threadpool might work. if not, you'll probably just make it slower.
[17:40:48] <Wooble> (a process pool might be worth trying in that case. measure and see?)
[17:41:33] *** Joins: Azem (~haise01@user/haise01)
[17:41:35] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:41:52] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:42:19] *** Joins: aknot (~aknot@2603-900a-1503-17bb-32e6-9823-74e5-4d30.inf6.spectrum.com)
[17:42:36] *** Quits: veracioux (~user@109.175.58.199) (Ping timeout: 240 seconds)
[17:42:44] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:43:46] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:44:03] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:44:14] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:44:56] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:45:22] *** Joins: Kruppt (~Kruppt@50-111-36-218.drhm.nc.frontiernet.net)
[17:46:00] *** Joins: sobkas (~sobkas@95.175.17.217)
[17:46:00] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:46:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:46:40] <zamba> is there a more efficient way of doing this: https://bpa.st/7X7A
[17:46:46] <zamba> especially without going through a string
[17:47:05] *** Quits: dul (~dul@user/dul) (Ping timeout: 256 seconds)
[17:47:15] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:48:22] *** Joins: _blackeitus (~blackleit@189.195.192.124)
[17:50:33] *** Joins: darksun (~darksun@user/darksun)
[17:50:42] *** Joins: Elodin (~elodin@user/elodin)
[17:51:01] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:51:18] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:51:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:51:35] *** Quits: blackle1tus (~blackleit@189.195.192.124) (Ping timeout: 252 seconds)
[17:53:21] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:53:34] <hodapp> hmm, so you have some incoming bytes (guessing <= 8 of them?) and you want to reverse the order of the bits?
[17:53:38] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:53:58] <zamba> correct
[17:54:18] <zamba> the frame is always 8 bytes, btw.
[17:54:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:55:42] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:55:58] <hodapp> if it's an actual actual performance hotspot, you could perhaps do something like... make a list that reverses a given byte's bits, and then reverse each byte and then reverse the list of bytes
[17:56:00] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:56:20] <zamba> hm, that didn't make too much sense :)
[17:56:22] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e10d:be3:25e9:7a3a)
[17:56:22] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e10d:be3:25e9:7a3a) (Changing host)
[17:56:22] *** Joins: skapata (~Skapata@user/skapata)
[17:56:34] <zamba> is there a way i can map where in the code the script consumes the most time?
[17:56:46] <zamba> to actually map out where i need to optimize?
[17:56:51] <hodapp> this is what profiling is, e.g. see cProfile
[17:57:07] <supakeen> You can reverse 8 bits with `b = (b & 0xF0) >> 4 | (b & 0x0F) << 4; b = (b & 0xCC) >> 2 | (b & 0x33) << 2; b = (b & 0xAA) >> 1 | (b & 0x55) << 1;` which is easily expandable for wider numbers.
[17:57:26] <hodapp> this is true too
[17:57:33] <zamba> supakeen: that does exactly what my previous code did?
[17:57:38] <zamba> even though it's not as readable :)
[17:57:47] <hodapp> that just reverses one byte
[17:57:50] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[17:57:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[17:58:08] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[17:58:20] <zamba> weow
[17:58:29] <zamba> how can i use cpython to profile the whole script?
[17:58:45] <hodapp> I forget the exact cProfile invocation but you can find it online pretty easily
[17:59:07] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[17:59:09] <Pilate> python -m cProfile somescript.py
[17:59:10] <Pilate> iirc
[18:00:00] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 272 seconds)
[18:00:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:00:19] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[18:00:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:01:39] *** Joins: justAstache (~justache@user/justache)
[18:01:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:01:50] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[18:02:26] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:02:44] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:02:51] *** Quits: tgamblin_ (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Quit: Leaving)
[18:03:32] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[18:04:09] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:04:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[18:04:53] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:04:57] *** Joins: Elodin (~elodin@user/elodin)
[18:05:10] <Adoi> hello, I cant get rid of this error; https://bpa.st/JGGQ  I added geckodriver path to $path, and tried adding the commented lines in the paste, too, but to no avail. could you have any suggestions perhaps?
[18:05:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:05:12] *** Quits: Elodin (~elodin@user/elodin) (Client Quit)
[18:05:40] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[18:06:10] <BtbN> You're giving it an absolute path, so your path variable is irrelevant
[18:06:29] <hodapp> that sounded oddly ominous
[18:06:31] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[18:07:07] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:07:25] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:07:50] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[18:08:03] <Adoi> how can I solve this error?
[18:09:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:09:25] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:09:42] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:09:50] *** Joins: backes (~backes@ict-networks-195-176-112-199.fwd-v4.ethz.ch)
[18:10:07] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[18:11:05] <backes> hey, in sqlite 3.35.0 some math functions were shipped such as log10() . I'm using python 10 with sqlite 3.36.0 but these functions don't work. Is there a way to enable them or easily switch the sqlite driver?
[18:11:41] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:11:58] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:12:22] <vladoski> Is there any way to merge OpenAPI schemas into a single one? I have more FastAPI apps and I need a single OpenAPI schema
[18:13:17] *** Joins: esther (~esther@155.254.31.185)
[18:13:52] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[18:13:55] <marduk> backes: describe "don't work" (because it worked for me). Can you paste your code?
[18:14:11] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:14:33] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[18:15:14] <deniska> backes: also check sqlite3.sqlite_version
[18:15:30] <Adoi> ...maybe it was just an underscore
[18:16:04] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[18:16:24] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:16:51] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 256 seconds)
[18:17:21] <Syzygy_> I'm trying to re.finditer(word, sentence). E.g. find the  word script in a sentence. like this, it gives me false recognitions on words like transcript or manuscript. doing "\W" + word + "\W" fixes this, but does not detect anything if it's the start or end of the sentence.
[18:17:34] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[18:17:47] <deniska> Syzygy_: try \b
[18:18:02] <backes> marduk: that's where I got the bundled sqlite version from: 3.36.0 . The code is really simple, it's just a query: https://bpa.st/DRZA  and here's the error: https://bpa.st/J54Q
[18:18:29] <backes> but I just realised that the error is actually from pandas and not the sqlite driver
[18:18:41] *** Joins: BlessJah (~BlessJah@user/blessjah)
[18:18:53] <deniska> backes: there's an error from sqlite on the first traceback
[18:19:05] <deniska> I suspect you have an older sqlite3 version than you think
[18:19:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[18:19:52] <Syzygy_> deniska, how does this work with special characters? script, script. script! script-file?
[18:20:16] <SnoopJ> Syzygy_, \b always matches the empty string at the (b)oundary of a word.
[18:20:33] <backes> deniska: but print(sqlite3.sqlite_version) says 3.36.0
[18:20:41] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[18:21:03] <Syzygy_> infact somehow it matches nothing now :/
[18:21:09] <Adoi> no, it wasnt.
[18:21:15] <backes> I found this PR: https://github.com/python/cpython/pull/25892 maybe there's no equivalent for macos in 3.10 ?
[18:21:29] <Syzygy_> here's the exact code I use right now: for match in re.finditer("\b" + word.lower() + "\b", sentence.lower()):
[18:21:41] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[18:22:02] <deniska> Syzygy_: r'\b'
[18:22:06] *** Joins: dbristow (~dbristow@user/dbristow)
[18:22:17] <deniska> Syzygy_: also you prooobably want to use re.escape(word.lower())
[18:22:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:22:38] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:22:42] <deniska> unless you control the words
[18:22:46] <Syzygy_> in this case it doesn't matter, but thanks for the recommendation
[18:23:23] <Syzygy_> r'\b' seems to work, didn't seem to be necessary for \W earlier
[18:24:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:24:46] <Wooble> Syzygy_: \W should give a DeprecationWarning but since it's not a valid escape it's 2 characters
[18:24:48] *** Joins: dul (~dul@user/dul)
[18:24:59] <Adoi> solved in a way that is so embarrassing to tell
[18:25:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[18:25:56] <Adoi> but those commented lines were, too, necessary
[18:25:58] *** Quits: someuser (~user@197.54.121.144) (Ping timeout: 272 seconds)
[18:26:02] <backes> indeed, nobody fixed it and sqlite3 for macos doesn't have the correct build flags... https://github.com/python/cpython/blob/main/Mac/BuildScript/build-installer.py#L361  it requires -DSQLITE_ENABLE_MATH_FUNCTIONS from: https://sqlite.org/releaselog/3_35_0.html
[18:26:15] *** Quits: dul (~dul@user/dul) (Remote host closed the connection)
[18:26:24] <backes> can I report a bug on github, or do I have to use their bugtracker?
[18:26:40] *** Joins: dul (~dul@user/dul)
[18:27:47] *** Joins: esther (~esther@155.254.31.185)
[18:27:49] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 240 seconds)
[18:28:06] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[18:29:26] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[18:29:48] *** Quits: revolve (~u0_a227@82-132-239-33.dab.02.net) (Read error: Connection reset by peer)
[18:29:58] <SnoopJ> backes, bugs.python.org is still the preferred way to report something as far as I know. This seems related: https://bugs.python.org/issue42686
[18:30:12] <tykling> The-Compiler: I just wanted to say thank you for the input on setting pytest testpaths to avoid the weird test discovery issue I was talking about yesterday. Much appreciated!
[18:30:38] <tykling> it solved the problem and everyone is happy
[18:30:54] <The-Compiler> tykling: Yay, you're welcome!
[18:30:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[18:31:19] <backes> SnoopJ: yes, but that's windows only. They fixed it for windows but not for macos
[18:31:41] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.54)
[18:32:02] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[18:32:10] <backes> I don't get a confirmation mail for it, so I guess I can't report it... Anyways, I know that it won't work for now so I have to do it afterwards in pandas. Thanks for your help
[18:32:11] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b19e-d71a-e755-ca72.res6.spectrum.com)
[18:32:12] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:32:15] <SnoopJ> backes, if you would like to file your own ticket, file it at bugs.python.org
[18:32:17] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[18:32:36] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Ping timeout: 240 seconds)
[18:32:36] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[18:32:57] <backes> SnoopJ: that's what I want but I don't get a confirmation mail for a new account
[18:33:44] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[18:33:52] *** Joins: humberto1 (~humbertow@189.236.30.197)
[18:33:56] <zamba> supakeen: how can i expand that to reverse 8 bytes?
[18:33:58] <Adoi> oh, no, they were not necessary, either
[18:35:15] *** Quits: pro_z_ (~pro_z@37.214.78.161) (Ping timeout: 256 seconds)
[18:36:08] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:36:30] *** Joins: gurkenglas (~gurkengla@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[18:36:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[18:36:45] *** Joins: nomic (~nomic@85.203.36.100)
[18:36:57] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[18:37:28] *** Joins: frost (~frost@user/frost)
[18:37:37] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:38:10] *** Quits: humberto1 (~humbertow@189.236.30.197) (Ping timeout: 250 seconds)
[18:38:35] *** Quits: sawk (~quassel@78.6.80.66) (Read error: Connection reset by peer)
[18:38:49] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:39:33] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:39:39] *** Quits: Ergo^ (~ergo@91.238.59.144) (Read error: Connection reset by peer)
[18:39:47] *** Joins: esther (~esther@155.254.31.185)
[18:39:54] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 272 seconds)
[18:40:05] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[18:40:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:40:22] *** Joins: waynew (~wayne@user/waynew)
[18:41:20] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:43:02] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[18:44:50] *** Joins: tWqaq_ (~tWqaq@101.93.138.74)
[18:45:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[18:46:14] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:46:57] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:33d4:85a2:30c3:4350) (Ping timeout: 240 seconds)
[18:47:23] *** Joins: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be)
[18:48:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:50:27] <backes> lol why do I have to sign a form when I submit a patch to cpython
[18:50:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e) (Ping timeout: 240 seconds)
[18:50:55] <Wooble> so other people can legally use your work
[18:52:10] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:52:59] <bjs> backes: that's very common when dealing with 'big' projects; remember that the things you make you own,  so you need to give a license so others can use, copy and distribute your work.
[18:53:14] <gurkenglas> How do I get functools.cache for when the argument type is sets?
[18:53:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[18:53:34] <bjs> backes: they're just being cautious, and making sure you understand what it is you are agreeing to by submitting patches to cpython
[18:53:41] <backes> bjs: I've done a tiny PR on the rust compiler and rust libc and didn't have to do that
[18:53:57] <lbracher> Hello! Do you have a recommended boilerplate folder structure for a project?
[18:54:19] <bjs> backes: not all projects are as careful, or have the same structure
[18:54:43] *** Joins: esther (~esther@155.254.31.185)
[18:55:24] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 252 seconds)
[18:55:24] <SnoopJ> backes, because you are the author of the patch and it is your intellectual property until you say otherwise. The CLA is a formal way to give PSF a license to use your work.
[18:55:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:56:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:56:34] <The-Compiler> lbracher: https://blog.ionelmc.ro/2014/05/25/python-packaging/#the-structure
[18:57:00] <backes> but I'm submitting a patch to a repo that has some license which makes sure that the source code can be distributed
[18:57:28] <SnoopJ> Right, and the CLA is the way you formally say "I'm cool with that"
[18:57:28] <bjs> backes: yes, they are covering themselves so you can't come back later and go "but I didn't agree that *my* part can be distributed..."
[18:58:25] <lbracher> The-Compiler, I'll read it! Thanks!
[18:58:25] <backes> I see. I've never seen that
[18:58:29] <bjs> it's there to protect the CPython developers and the PSF,  and also to help inform you about what you're agreeing can happen with your code
[18:58:31] <bjs> backes: really?
[18:58:33] <SnoopJ> As bjs says, not all projects are so careful.
[18:58:40] <The-Compiler> bjs: it's quite common for bigger projects, see https://en.wikipedia.org/wiki/Contributor_License_Agreement
[18:58:45] <The-Compiler> whoops, backes ^
[18:58:47] <backes> bjs: I'm not contributing much to OSS
[18:59:10] <bjs> backes: I think typically the larger or older or more "formal" a project is the more likely there'll be paperwork for you to sign
[18:59:14] <bjs> especially when there's questions about who owns the IP
[18:59:48] <The-Compiler> backes: looks like rust has one too, https://github.com/tensorflow/rust/blob/master/CONTRIBUTING.md
[18:59:55] <The-Compiler> wait, no :D
[19:00:01] <bjs> and anything that is, or plans to be, commercial I've found has pretty much always come with some kind of license
[19:00:04] <bjs> agreement
[19:00:12] <The-Compiler> that's just a confusing repo name, nevermind
[19:00:50] <bjs> I don't know if the PSF one is precautionary, or just a courtesy, or whether it was in response to something
[19:01:11] *** Joins: p-i- (~Ohmu@183.89.25.222)
[19:01:12] <bjs> I've certainly seen projects have a fight, and then lo and behold the next PR requires a CLA :)
[19:01:19] <SnoopJ> It seems like a wise thing for any org that would be bankrupted just going through the litigation, even if the ruling came down in favor of them.
[19:01:36] <SnoopJ> assuming the party bringing the litigation has a megacorp-sized warchest, I mean.
[19:01:48] <SnoopJ> (which is, you know, the usual case)
[19:02:12] *** Joins: slav0nic (slav0nic@python.su)
[19:02:36] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[19:02:45] <backes> this just shows how little I know about IP and licenses...
[19:03:00] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2ee:caa:c1ad:c0af:9324) (Ping timeout: 240 seconds)
[19:03:08] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[19:03:23] <bjs> backes: if everyone was just friends we wouldn't need them :(
[19:03:42] <backes> anyways, I added the compiler flag to enable math functions in sqlite on macos and hope that with the next release they work
[19:03:49] *** Quits: data68 (~data@2a02:908:a65:3d80:31c9:dd2c:c093:14a5) (Ping timeout: 240 seconds)
[19:05:01] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[19:05:18] *** Quits: dsrt^ (~dsrt@12.163.216.98) (Remote host closed the connection)
[19:05:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:05:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[19:06:29] *** Joins: nathanchapman (~nathancha@139.64.169.128)
[19:06:48] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[19:09:01] *** Quits: rtsn (~nstr@user/rtsn) (Ping timeout: 240 seconds)
[19:09:44] *** Joins: esther (~esther@155.254.31.185)
[19:10:36] *** Quits: neachdainn (~nate@user/neachdainn) (Ping timeout: 240 seconds)
[19:10:45] *** Joins: akk (~akk@75.161.130.204)
[19:11:52] *** Quits: backes (~backes@ict-networks-195-176-112-199.fwd-v4.ethz.ch) (Quit: leaving)
[19:13:28] <vladoski> Is there a good way to merge FastAPI OpenAPI schemas?
[19:14:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:15:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:18:19] *** Joins: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de)
[19:18:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[19:21:14] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:22:51] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[19:23:59] *** Joins: magla (~gelignite@55d47d67.access.ecotel.net)
[19:27:09] *** Joins: esther (~esther@155.254.31.185)
[19:27:32] *** Joins: mmalter (~mmalter@88.126.10.237)
[19:27:49] *** Joins: moto (~moto@user/moto)
[19:28:22] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:28:26] <dba> what is the difference between `class bar:` and `class bar(object):`
[19:28:42] <bjs> dba: nothing.
[19:28:47] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[19:29:15] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[19:29:15] <phy1729> iirc py2 required the latter?
[19:29:17] <dba> bjs: interesting
[19:29:27] <exarkun> python 2 had a different default base class
[19:29:32] <exarkun> python 3 got rid of that and made object the default
[19:30:13] <phy1729> ah, so depending on project age that may be the reason
[19:30:45] <exarkun> or possibly the programmer age ;)
[19:30:48] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:30:56] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:31:07] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:31:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:31:45] *** Joins: sawk (~quassel@151.81.119.74)
[19:32:21] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:32:37] *** Joins: dreamon (~dreamon@pd9503526.dip0.t-ipconnect.de)
[19:32:56] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[19:33:01] *** Joins: jamea (~jamea@201.77.110.253)
[19:33:23] *** Joins: humberto1 (~humbertow@189.236.30.197)
[19:34:00] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:34:05] <SnoopJ> dba, the latter is strictly historical, it shouldn't be written in new code (unless you're working on something existing that's old enough to care)
[19:34:31] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[19:34:43] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[19:35:34] *** Joins: codebam (~codebam@user/codebam)
[19:36:06] *** Quits: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be) (Ping timeout: 260 seconds)
[19:36:15] <codebam> if I'm reading a file and there's a possibility of another function editing the same file, do I need to create a lock file or will python handle that and wait for me?
[19:36:37] <codebam> s/reading/editing
[19:36:38] *** Joins: zebrag (~chris@user/zebrag)
[19:37:18] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[19:37:24] <dba> SnoopJ: make sense because the videos I am looking at they look like was made in the 90s :D but solid fundamental
[19:37:59] *** Joins: moto (~moto@user/moto)
[19:38:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[19:39:37] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:39:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:40:05] *** Joins: paul424 (~tom@ip-5-172-236-148.multi.internet.cyfrowypolsat.pl)
[19:40:15] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[19:40:41] *** Joins: esther (~esther@155.254.31.185)
[19:41:25] <codebam> I mean like if I'm editing a file twice, will python handle the race condition for me or do I need to handle that myself?
[19:41:42] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:6a78:f28d:7961:8e41) (Quit: pvergain)
[19:41:44] <bjs> codebam: Python has nothing to help you here
[19:42:02] <codebam> okay, I'll create a lock file
[19:42:04] <codebam> thank you
[19:42:37] <exarkun> codebam: You could make the file append-only and modify it using CRDTs or Operational Transform.
[19:43:29] <codebam> oh okay I'll look into that thanks
[19:44:30] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:44:33] *** Joins: bluedust (~bluedust@117.207.234.120)
[19:44:39] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[19:45:12] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[19:46:15] *** Joins: rtsn (~nstr@h-98-128-229-174.NA.cust.bahnhof.se)
[19:47:27] <phy1729> Or use a database instead
[19:48:01] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[19:48:56] <exarkun> SQLite3 is pretty readily available from Python (that is, it is in the standard library).
[19:49:06] <exarkun> And it is a pretty great database library.
[19:49:27] *** Joins: aniketgm (~aniketgm@49.36.62.127)
[19:50:28] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Read error: Connection reset by peer)
[19:51:04] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[19:51:24] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[19:51:25] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Client Quit)
[19:51:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[19:51:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[19:52:35] <codebam> oh sqlite3 sounds like a good idea, thanks
[19:52:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:53:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[19:54:04] *** Joins: zen_coder (~zen_coder@141.113.66.44)
[19:55:16] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 272 seconds)
[19:55:40] <hodapp> hrmph. I am not even sure if this is a Dask *bug* or a constraint that was designed in but not clearly documented
[19:55:48] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[19:55:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:56:12] *** Joins: brondsem (~brondsem@066-227-136-002.res.spectrum.com)
[19:56:38] <hodapp> loosely: if I submit a task which depends on some (unavailable at that time on any worker) worker resource, and then add that resource myself to some workers, the task is forever pending
[19:58:04] <hodapp> if I do those two steps in the opposite order, or if the scheduler itself is responsible for releasing a resource back, then it seems fine
[19:58:10] *** Joins: jinsun (~jinsun@user/jinsun)
[19:58:15] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[19:59:15] *** Joins: bluedust (~bluedust@117.207.234.120)
[20:00:09] *** Joins: wac (~wac@user/wac)
[20:00:21] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[20:00:49] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 256 seconds)
[20:01:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:46] *** Parts: brondsem (~brondsem@066-227-136-002.res.spectrum.com) ()
[20:01:52] *** Quits: dul (~dul@user/dul) (Remote host closed the connection)
[20:02:15] *** Joins: Falc (~Falc@193.191.206.243)
[20:04:04] *** Quits: resmo (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464) (Remote host closed the connection)
[20:04:04] *** Joins: neachdainn (~nate@50.224.226.50)
[20:04:17] *** Joins: resmo (~resmo@2a00:d420:9:8a00:1336:ed64:58a3:7464)
[20:04:17] *** Quits: tct (~tct@user/tct) (Read error: Connection reset by peer)
[20:04:22] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:b61a:4cbd:c8bc:c7a5)
[20:04:35] *** Joins: vlado_ (~vladoski@2001:b07:add:d406:35da:4533:e7d7:7cd6)
[20:04:44] *** Joins: tct (~tct@user/tct)
[20:04:50] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 250 seconds)
[20:04:54] *** Quits: pycode (~pycode3@2001:b07:5d28:551:b61a:4cbd:c8bc:c7a5) (Read error: Connection reset by peer)
[20:05:11] *** Quits: vladoski (~vladoski@2001:b07:add:d406:35da:4533:e7d7:7cd6) (Read error: Connection reset by peer)
[20:05:29] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:05:48] <Falc> Question about subprocess: I sometimes provide some arguments to the call as a single string including the option and its value, ie. subprocess.run((binary, "-o outfile", "-i infile")). This seems to work fine, but I remain worried it might break somehow sometime. Does anyone have any thoughts or experience on the matter?
[20:06:27] *** Joins: esther (~esther@155.254.31.185)
[20:06:42] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[20:06:49] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:07:07] <SnoopJ> Falc, it makes me a little uneasy, I'd rather separate them personally
[20:07:08] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:07:15] *** Quits: neachdainn (~nate@50.224.226.50) (Client Quit)
[20:07:35] <SnoopJ> That could be partially superstition on my part but I think I've had a problem with it before
[20:07:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:07:41] <hodapp> I feel like I have on occasion had problems with that too
[20:07:46] *** Quits: bluedust (~bluedust@117.207.234.120) (Remote host closed the connection)
[20:07:49] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[20:08:01] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:08:08] <hodapp> e.g. with argv[1] being "-o outfile" instead of "-o"
[20:09:04] <Falc> Thanks for the feedback. I'll try to be more rigorous. Even if the code looks worse
[20:10:06] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:10:25] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[20:10:36] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: Textual IRC Client: www.textualapp.com)
[20:10:44] *** Joins: xx (~xx@user/xx)
[20:10:53] <xx> where is .readline() and .readlines() documented?
[20:11:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[20:11:25] *** Quits: strugee (~strugee@2602:ffc5:200:4900::1) (Quit: ZNC - http://znc.in)
[20:12:02] <SnoopJ> xx, https://docs.python.org/3/library/io.html
[20:12:25] <xx> perfect, thanks, looks like I was hitting the gnu readline interface instead
[20:12:35] <SnoopJ> in particular, IOBase and TextIOBase (but pay attention to the subclasses too): https://docs.python.org/3/library/io.html#io.IOBase.readline
[20:13:08] <exarkun> Falc: "--output=outfile" may work (standard argv parsing is accustomed to that form for name and value in one string) and has the benefit of not making the reader remember what "-o" means
[20:13:29] <SnoopJ> I've done that recently with some PyInstaller automation where I had the option (heh) of using the long form
[20:13:33] <exarkun> Falc: of course it depends on the program you're running actually supporting that usage
[20:13:38] <exarkun> Falc: but most do
[20:13:42] <arkanoid> I am trying to follow mypy errors while working with pandas + pandas-stubs, but I don't understand why if I use usecols argument in pd.read_csv(mypath, usecols=["foo"]) I'm getting No overload variant of "read_csv" matches argument types "str", "List[str]", but I' open site-packages/pandas/io/parsers/readers.pyi I do see this: https://termbin.com/u2y0k that clearly shows that the signature for that
[20:13:44] <arkanoid> argument is there
[20:14:23] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[20:14:48] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 250 seconds)
[20:16:15] <zodd> if in a module I for example "import numpy as np' can I somehow import 'np' from another module and still use functions/methods as provided by numpy? (numpy is just an example)
[20:16:21] <han-solo> Falc: i would write it out, but there;s `shlex.split` which will likely do the right thing
[20:16:32] *** Quits: zen_coder (~zen_coder@141.113.66.44) (Ping timeout: 240 seconds)
[20:16:57] *** Quits: daoudr (~daoudr@2a02:1210:52f9:b500:3bdc:2aba:59b8:9657) (Ping timeout: 240 seconds)
[20:17:04] *** Joins: kostkon__ (~androirc@2a02:587:a10f:c988:4142:80fd:5bce:d437)
[20:17:48] *** Quits: aknot (~aknot@2603-900a-1503-17bb-32e6-9823-74e5-4d30.inf6.spectrum.com) (Ping timeout: 240 seconds)
[20:17:51] *** Joins: euouae (~euouae@user/euouae)
[20:18:08] <euouae> hello, what is code that does not define anything called in a python file?
[20:18:09] <han-solo> zodd: sure, but you are not saving anything, just import it again
[20:18:18] <euouae> e.g. something like `x = 1 + 1`.
[20:18:19] <han-solo> so it is more explicit
[20:18:25] <euouae> or rather, something like `f()`
[20:18:48] <xx> f.readline() f.readline() f.readlines() it is not explained why .readline() advances the line for .readlines(). I'd expect f.readlines() to read the whole file again, irrelevant of how many times f.readline() was called before
[20:18:59] <SnoopJ> euouae, are you asking about statements that aren't assignment statements?
[20:19:09] <xx> is that just something to know, or am I missing it somewhere on https://docs.python.org/3/library/io.html
[20:19:16] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[20:19:21] <euouae> SnoopJ I'm asking about statements that actually 'run' code, e.g. if you interpreted the file with python3
[20:19:59] *** Joins: pycurious (~Adium@user/pycurious)
[20:20:02] <SnoopJ> xx, they both read from wherever the stream currently is, so if you call readline(), the location in the stream has been advanced, and a subsequent readlines() call will only see lines from that point on.
[20:20:10] <SnoopJ> euouae, all statements run code
[20:20:12] <pycurious> I'm writing a program in Python that runs forever and randomly receives requests that have to be processed in parallel. Each request can take dozens of minutes to process and puts some burden on the CPU, so asyncio is not an option. For each request I start a new worker process. - Is there an elegant way to solve this in Python?
[20:20:22] <SnoopJ> uh, except the pass statement :)
[20:20:36] <euouae> SnoopJ sure, but can you understand what I mean? I'm trying to explain to someone that code such as `call f()` should not be committed into files that are imported
[20:20:38] <NoImNotNineVolt> pycurious: multiprocessing, Pool?
[20:20:47] <SnoopJ> euouae, no, not really
[20:20:58] <euouae> SnoopJ def f(): ... then f()
[20:21:10] <han-solo> `concurrent.futures` has nice apis
[20:21:15] <NoImNotNineVolt> or that.
[20:21:25] <euouae> the person tested the file with `python3 file.py`, but I'm trying to tell him that there's better solutions, plus you don't need to commit that f() clal
[20:21:28] <rvalue> what is the closest thing of this in python? https://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-java.util.Comparator-
[20:21:47] <han-solo> but requests are IO, so why not asyncio ?
[20:21:51] <SnoopJ> euouae, that sounds like you need to have a conversation with them about the fact that importing a file runs all of the code in it
[20:21:55] <nedbat> rvalue: there are a few things like it.  what do you need to do?
[20:22:01] *** Quits: Falc (~Falc@193.191.206.243) (Quit: Leaving)
[20:22:34] <euouae> SnoopJ there's no terminology in python that distinguishes one from the other?
[20:22:36] <rvalue> nedbat: i am trying to use functools.reduce and in the function for reduction, i want to use compare so that i get the biggest something
[20:22:56] <nedbat> rvalue: it sounds like you are trying to find the max of a sequence?
[20:23:00] *** Joins: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[20:23:13] <rvalue> yes
[20:23:18] <nedbat> rvalue: can you use max() ?
[20:23:24] <rvalue> no
[20:23:32] <nedbat> rvalue: can you help me understand why?
[20:23:33] <SnoopJ> euouae, there is (they're different kinds of statements), but it has really nothing to do with the missing understanding on the part of your collaborator
[20:23:34] *** Joins: jaggz (~jaggz@user/jaggz)
[20:23:39] <rvalue> nedbat: actually i dont knw
[20:23:48] <pycurious> NoImNotNineVolt: How does one use pool in this case? while True: # When request arrives from Q, â> with Pool(1) as p: p.map(f, [1]) â but then how do i get to the next request?
[20:23:51] <euouae> SnoopJ what is the terminology? That's what I'd like to know
[20:23:53] *** Joins: bahamas (~lucian@84.232.140.52)
[20:23:55] <rvalue> nedbat: can you give me an example
[20:24:02] <nedbat> rvalue: you can define __lt__ on a class to implement <, and then max() will work on your objects
[20:24:09] <nedbat> rvalue: what kind of things are you comparing?
[20:25:11] <han-solo> er, i misread as network request, my bad
[20:25:12] <euouae> SnoopJ https://docs.python.org/3/reference/simple_stmts.html is that what you refer to?
[20:25:13] <SnoopJ> euouae, as I said, they're different kinds of statements. Statements are documented in sections 7, 8 of the language reference
[20:25:20] <rvalue> nedbat: class is closed and what i want to sort with is not present directly present in the class, i have to compute it using data from the objects
[20:25:26] <rvalue> object*
[20:25:39] <SnoopJ> euouae, but it sounds like your concern has to do with the *semantics* of the code, not its syntax.
[20:25:48] <pycurious> NoImNotNineVolt: how do you use Pool, when requests come one after the other?
[20:26:23] <nedbat> rvalue: you can define a comparing function cmp(v1, v2),  then:  max(sequence, key=functools.cmp_to_key(cmp))   https://docs.python.org/3/library/functools.html#functools.cmp_to_key
[20:26:32] <euouae> SnoopJ I have no more concerns because you have given me exactly what I needed, thank you
[20:26:41] <SnoopJ> If you say so
[20:26:46] <euouae> well, I know you doubt it
[20:27:14] *** Joins: esther (~esther@155.254.31.185)
[20:27:29] <han-solo> pycurious: you can put the tasks into a queue
[20:27:52] *** Joins: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be)
[20:28:01] *** Joins: epony (epony@user/epony)
[20:28:08] <han-solo> so a mix of https://docs.python.org/3/faq/library.html#how-do-i-parcel-out-work-among-a-bunch-of-worker-threads https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor
[20:28:31] <han-solo> you submit the tasks as they are read from the queue
[20:28:50] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 272 seconds)
[20:28:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:29:07] *** Quits: tWqaq_ (~tWqaq@101.93.138.74) (Quit: Leaving)
[20:29:51] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[20:30:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:31:53] *** Joins: baffodoro (~raffaem@45.91.20.239)
[20:32:04] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:32:06] <nedbat> euouae: were you asking about distinguishing "def foo" from "foo()" ?
[20:32:35] <pycurious> han-solo: I did - and am getting zombies
[20:32:42] <rvalue> nedbat: basically i was hoping i could just specify the variable to use to compare and the order like in the java function i quoted above. i tried this and looks like it wants me to do i, j in lambda instead of just i, `a = [1, 2, 3, 4, 5]; print(max(a, key=functools.cmp_to_key(lambda i: 9-i)))`
[20:32:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[20:32:57] <euouae> nedbat it wasn't a very good question but basically how does the language distinguish between the two, what's the terminology. It looks like `def foo` is a compound statement, in particular a `funcdef`. The other one, I think is a simple statement, not sure what kind of, but yeah.
[20:32:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:33:14] <euouae> nedbat, to my collaborator, I'll just explain to them to resort to definitions only in modules
[20:33:26] <nedbat> euouae: that is true, but "if 1: foo()" is also a compound statement, so it's not the distinction you're looking for
[20:33:42] <euouae> nedbat, but it's not a funcdef
[20:34:14] <euouae> It's not necessary to explain to my collab what the grammar is, it was just a curiosity of mine
[20:34:18] <nedbat> euouae: i'm not sure there's a word for "import, class, def, or constant assignments" which is what are ok at the top-level of a module.
[20:34:42] <euouae> fair enough, I think "definitions" is sorta capturing the spirit
[20:35:17] *** Quits: jamea (~jamea@201.77.110.253) (Read error: No route to host)
[20:35:19] *** Joins: jamea22 (~jamea@201.77.110.253)
[20:35:44] <nedbat> rvalue: if you want to compare attributes in objects this should work:   max(objects, key=functools.cmp_to_key(lambda a, b: a.attribute < b.attribute))
[20:35:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[20:37:34] *** Joins: esther (~esther@155.254.31.185)
[20:38:05] <rvalue> nedbat: hmm okay.. would have liked the java way but this is fine too
[20:38:51] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:38:53] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:8f0c)
[20:38:56] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[20:39:31] *** Joins: harpia_ (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[20:39:31] *** Quits: ubert1 (~Thunderbi@ip5b40751a.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:39:38] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Read error: Connection reset by peer)
[20:39:43] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[20:39:50] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:39:57] *** harpia_ is now known as harpia
[20:40:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:40:23] *** [_] is now known as [itchyjunk]
[20:41:31] *** Joins: khole (~khole@054100f5.skybroadband.com)
[20:41:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[20:41:43] *** Joins: bluedust (~bluedust@117.207.234.120)
[20:41:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:42:14] *** Quits: Lauxley (~lauxley@2a01:e34:ec55:2700:352b:ee31:6bdb:1696) (Quit: Leaving)
[20:42:18] *** Parts: khole (~khole@054100f5.skybroadband.com) ()
[20:42:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:42:42] *** Joins: mickey8 (~user@user/mickey)
[20:43:24] *** Quits: _blackeitus (~blackleit@189.195.192.124) (Ping timeout: 272 seconds)
[20:43:34] <lericson> nedbat: why not just max(objs, key=lambda a: a.attribute)
[20:43:40] *** Quits: vlado_ (~vladoski@2001:b07:add:d406:35da:4533:e7d7:7cd6) (Remote host closed the connection)
[20:44:21] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:08] *** Joins: ham5urg (~ham5urg@134.101.142.249.dynamic-pppoe.dt.ipv4.wtnet.de)
[20:45:21] *** Joins: harpia_ (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51)
[20:45:21] *** Parts: spudpnds (~spud@eidolon.muppetlabs.com) ()
[20:46:04] *** Quits: withered1wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[20:46:08] <nedbat> lericson: oh derp
[20:46:12] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:46:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:46:14] <ham5urg> I calculate new_int = 5/7*some_int which will result in an even number. new_int is returned as float but I would need int. How to do?
[20:46:19] <nedbat> rvalue: lericson is smarter than me
[20:46:22] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Read error: Connection reset by peer)
[20:46:22] *** harpia_ is now known as harpia
[20:46:55] <lericson> eh just a fresh pair of eyes
[20:47:09] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c107-df80-8e8d-d75d.res6.spectrum.com)
[20:47:12] *** Quits: bluedust (~bluedust@117.207.234.120) (Ping timeout: 272 seconds)
[20:47:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:d80e:f8e4:65fa:55e)
[20:47:30] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[20:47:49] *** Quits: tga (~tga@user/tga) (Ping timeout: 268 seconds)
[20:47:55] <rvalue> lericson: so basically if attribute implements the comparison operators that should work, right?
[20:48:11] <sveinse> Hmm. I wonder how long time it takes for a moderator to approve my post to python-ideas. I maybe thought that this is voluntary work, so it'll take some days, but now I see other messages trickling in...
[20:48:20] *** Quits: devKathy (~devKathy@2600:1700:2990:d590:240b:990:7279:3f79) (Quit: Client closed)
[20:48:32] <lericson> rvalue: yeah
[20:48:50] <lericson> and if they don't, you can likely derive some sortable key from it
[20:48:57] *** Quits: jay-m1261 (~jay-m@154.126.169.200) (Ping timeout: 240 seconds)
[20:48:57] *** Quits: jay-m126_ (~jay-m@154.126.169.200) (Ping timeout: 240 seconds)
[20:48:57] *** Quits: jay-m126 (~jay-m@154.126.169.200) (Ping timeout: 240 seconds)
[20:49:01] <Jong> Is there a way to have a dummy with np.load(filepath) as data statement?  Basically I want it sometimes to actually read from the file, and other times to do nothing.  I could make a branch, but then I'd copy the body twice or need to turn the body into function and call it both the if and else
[20:49:43] <rvalue> lericson: umm.. thats very clean, me likey
[20:50:16] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[20:51:42] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:51:44] *** Joins: esther (~esther@155.254.31.185)
[20:51:45] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[20:52:07] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[20:52:29] <SnoopJ> Jong, `data = np.load(filepath) if condition else None` ? I don't see a good reason not to just write an if-statement here.
[20:52:41] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:52:48] <Jong> oh crap that's awesome
[20:53:04] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:53:15] <lericson> nullable types boo
[20:53:20] * lericson retreats to his pure cave
[20:53:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:53:41] <NoImNotNineVolt> pycurious: Pool has apply_async i think?
[20:53:43] <SnoopJ> they're definitely a code smell here
[20:54:07] <pycode1> hello everybody i am creating a new django project and i need to  implement a very very stupid webmail where the user can configure its account and read/write emails, how should i do? should i ask imap/smtp servers and user/pwd
[20:54:09] <pycode1> ?
[20:54:19] *** Quits: euouae (~euouae@user/euouae) (Quit: thanks again)
[20:54:40] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:56:24] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[20:56:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[20:58:23] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[20:59:34] <faceface> Sorry, I seem to run into this problem every time I use python... I'm reading this, but I still can't figure it out... https://docs.python.org/3/tutorial/modules.html#packages ... I have the exact same requirement as this question: https://www.google.com/search?client=firefox-b-lm&q=python+import+module+from+subdirectory but my .py is under a sub directory (a sister directory of lib)
[20:59:58] <faceface> so I have lib/__init__.py, lib/somemod.py and test/script.py
[20:59:59] <SnoopJ> Does anyone know if SWIG provides typemaps for datetime.datetime <-> std::tm ?
[21:00:18] <faceface> How do I import lib/somemod within test/script.py?
[21:00:30] <SnoopJ> Not too complex to write one, but it's always hard to tell what parts of the standard libraries SWIG knows/cares about
[21:00:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[21:01:03] *** Joins: Strogg (~jean@user/rogg)
[21:01:12] <Strogg> 'lo 'lo
[21:01:28] <faceface> python -m pytest seems to work if I use import lib.somemod
[21:01:42] *** Quits: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[21:01:42] <faceface> but python test/script.py doesn't
[21:02:11] *** Joins: sumi80m (~dos@39.191.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[21:02:18] <ChrisWarrick> faceface: you canât run .py files if youâre working with packages
[21:02:31] <faceface> uh
[21:02:35] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:8f0c) (Ping timeout: 256 seconds)
[21:02:41] <ham5urg> how to get an integer out of (5/7)*my_integer == 235.0 ?
[21:02:43] <ChrisWarrick> faceface: in this case, just use pytest
[21:03:01] *** Quits: andreasbuhr (~quassel@p549db052.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:03:05] <faceface> ChrisWarrick: yeah, writing that made me realise ;-)
[21:03:10] <faceface> I was looking for pytest -s
[21:03:36] <ChrisWarrick> faceface: -s?
[21:03:57] <Jong> SnoopJ  but I can't do this, or is there a way I can? with (np.load(filepath) if read_file else None) as data:
[21:04:03] <faceface> ChrisWarrick: seems `python -m pytest -s` does what I want # -s shows print statements instead of just pass / fail
[21:04:18] <faceface> however `pytest` alone has the same 'import' confusion
[21:04:23] *** Joins: bahamas (~lucian@84.232.140.52)
[21:04:33] <SnoopJ> Jong, no, because None isn't a context manager. You could possibly use contextlib.nullcontext, though.
[21:04:35] <exarkun> faceface: make a virtualenv, install your package into it, import as usual
[21:04:51] <ChrisWarrick> faceface: so `python -m pytest` works but `pytest` doesnât?
[21:04:54] <SnoopJ> Jong, but this is bending over an awfully long way to avoid doing `data = np.load(filepath)` and then using that in your loop.
[21:04:55] <exarkun> faceface: also probably rename "lib", it's a troubling generic top-level name
[21:05:24] <Jong> SnoopJ  I thought using the the with statement is good practice because it does a clean up
[21:05:25] <faceface> exarkun: just used that as an example, my real code reads `from individual.individual import Individual` ... which makes me ashamed
[21:05:47] <faceface> exarkun: Do I really need to install my package just to get my imports right?
[21:05:58] <sveinse> I have problems running venv/Scripts/pytest, while venv/Scripts/python -mpytest works. In the former example, pytest simply returns without any output.
[21:06:03] <exarkun> faceface: Do you _have_ to?  No.  _Should_ you?  Yes.
[21:06:12] <SnoopJ> Jong, sometimes it is, but it's not a "you should never do it any other way" thing. I have actually never used the context manager support of np.load()
[21:06:15] <faceface> ChrisWarrick: that's correct
[21:06:18] <SnoopJ> (I'm not even sure I *knew* about it)
[21:06:21] <exarkun> faceface: Why are you reluctant?
[21:06:29] <ChrisWarrick> faceface: seems like a mess
[21:06:40] <ChrisWarrick> faceface: are both running the same pytest and python versions?
[21:06:43] <faceface> exarkun: because I'm developing this one project...
[21:06:51] <faceface> ChrisWarrick: let me check...
[21:06:55] <exarkun> faceface: I don't understand.
[21:07:07] <exarkun> faceface: Most people here develop Python projects and this is what they do.
[21:07:21] <faceface> pytest-3 --version # This is pytest version 4.6.9, imported from /usr/lib/python3/dist-packages/pytest.py
[21:07:26] <exarkun> faceface: Because this is the thing that is more simple and more reliable than most other approaches.
[21:07:33] <faceface> python -m pytest -v # platform linux -- Python 3.8.10, pytest-4.6.9, py-1.8.1, pluggy-0.13.0 -- /usr/bin/python
[21:07:53] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[21:09:06] <faceface> exarkun: virtualenv mypy; . mypy/bin/activate; pip install ... ?
[21:09:16] <faceface> ^^ That's the limit of my venv usage
[21:09:41] <sveinse> faceface: that's all you need basically. It's that simple
[21:09:49] <faceface> pip install ./individual/ # ERROR: Directory './individual/' is not installable. Neither 'setup.py' nor 'pyproject.toml' found.
[21:09:56] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[21:10:06] *** Joins: smrtz (~smrtz@user/smrtz)
[21:10:20] <faceface> sveinse: exarkun: is asking me to ... let me see...
[21:10:21] <exarkun> faceface: You can `python -m venv` instead of `virtualenv ...` nowadays
[21:10:31] <faceface> make a virtualenv, install your package into it, import as usual
[21:10:34] <sveinse> faceface: venv/bin/python my_local_pythonscript.py works too
[21:10:44] <sveinse> if you don't want to make a package that is
[21:10:47] <exarkun> faceface: And you might enjoy `pip install -e <your project dir>` for a development experience
[21:11:19] <faceface> exarkun: that makes my project a package?
[21:11:31] *** Quits: aniketgm (~aniketgm@49.36.62.127) (Quit: leaving)
[21:11:46] <exarkun> faceface: no, it makes your source directory the same as the installed software so your changes are immediately reflected in the virtual environment
[21:12:00] <faceface> oic
[21:13:22] <faceface> for now I'll stick to `python -m pytest -s` ... I figured there must be some trick to importing 'local' packages from scripts in sub-directores that I wasn't aware of
[21:14:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[21:14:46] <faceface> for now I'll stick to `python -m pytest -s` ... I figured there must be some trick to importing 'local' packages from scripts in sub-directores that I wasn't aware of
[21:14:50] <faceface> oops
[21:14:52] <faceface> sorry
[21:14:55] <faceface> thanks for help
[21:15:00] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[21:15:29] *** Joins: data68 (~data@2a02:908:a65:3d80:3cd0:874d:f18b:b4cb)
[21:17:09] <zerosum> hey all, wondering what would be the best way to getting rid of duplicates in any given order from a list of dictionaries.. it looks something like this: https://bpa.st/7A6A
[21:17:15] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:17:43] <zerosum> as you can see, they are both the same just in different order
[21:17:57] <zerosum> I want to end up with one variation and not both
[21:19:12] *** Joins: crashrep (~crashrep@user/crashrep)
[21:19:14] *** Joins: matsaman (~matsaman@user/matsaman)
[21:19:20] <faceface> zerosum: z = x | y          # NOTE: 3.9+
[21:19:28] <faceface> https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression-take-union-of-dictionari
[21:21:23] *** dcaro is now known as dcaro_away
[21:21:24] <Strogg> does anyone have a guide or reference I can look at for writing platform dependant subclasses?  I'm trying to write a classes hierarchy of class A (base common functionality) -> subclass B (platform dependant code) -> Subclass C (class I'm going to instance from)
[21:21:55] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[21:22:02] <Strogg> I've got class A and Class B working ok.. but I don't know how to define class C that it subclasses B
[21:22:27] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[21:23:12] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:23:26] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[21:24:13] <ChrisWarrick> Strogg: prefer composition over inheritance
[21:24:36] <ChrisWarrick> Strogg: this is trivial with composition and basically impossible with inheritance
[21:24:37] * Strogg googles
[21:24:59] <Strogg> ChrisWarrick: thanks, I'll read for a bit and maybe come back with questions :)
[21:25:48] <Strogg> I've never heard of composition before.. but then again.. I'm old and haven't done OO in a while
[21:27:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:27:07] <grym> "has a" instead of "is a"
[21:27:15] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[21:27:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:27:56] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:28:05] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:28:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:30:34] *** Joins: emf (~emf@2620:10d:c090:400::5:d9eb)
[21:30:58] *** Joins: lispy (~lispy@user/lispy)
[21:31:21] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f982:9168:8567:5a09)
[21:34:01] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-22.range86-168.btcentralplus.com)
[21:34:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[21:36:24] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[21:36:47] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[21:38:29] *** Joins: djapo (~archangel@user/djapo)
[21:39:08] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[21:40:38] *** Joins: Cera (~Cera@user/Cera)
[21:40:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:41:40] <Strogg> hrmm so.. I guess in my case I described up there.. I would still have my base class A, which would have a constructor that would create the "has a" interface that class B would have provided.. and then class C can subclass A and I can instance from C
[21:42:43] *** Joins: Deneb (~johnch@245.82.159.143.dyn.plus.net)
[21:43:21] *** Joins: esther (~esther@155.254.31.185)
[21:44:34] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[21:46:01] *** Joins: arinov_ (~arinov@213.194.126.155)
[21:46:57] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:47:02] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[21:48:45] <anddam> semi-OT question, I am building pyside-setup following instructions from pypi's page on an M1 macOS system without Rosetta2
[21:49:00] *** Quits: ham5urg (~ham5urg@134.101.142.249.dynamic-pppoe.dt.ipv4.wtnet.de) (Quit: Leaving)
[21:49:03] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[21:49:16] <anddam> so I am following https://doc.qt.io/qtforpython-5/gettingstarted-macOS.html for building PySide2 5.15.2
[21:49:46] *** Joins: Cera (~Cera@user/Cera)
[21:50:01] <anddam> I installed a few dependencies with homebrew and in this mishmash I got somehow lost, my command is      env LLVM_INSTALL_DIR=/opt/homebrew/opt/llvm@12 python setup.py bdist_wheel --qmake=/opt/homebrew/opt/qt@5/bin/qmake --parallel=1 --verbose-build --build-tests
[21:50:28] *** Joins: arinov (~arinov@194.169.217.186)
[21:50:36] <anddam> that is for the wheel, but using "install" verb has the same result that is this error in (I guess) libstdc++
[21:50:36] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[21:50:44] <anddam> https://termbin.com/wfgk
[21:50:55] <anddam> any hint untangling this mess?
[21:51:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[21:52:11] *** Quits: jamea22 (~jamea@201.77.110.253) (Ping timeout: 256 seconds)
[21:53:24] *** Quits: ejjfunky (~ejjfunky@125.164.19.179) (Ping timeout: 240 seconds)
[21:53:46] *** Quits: harpia (~harpia@2804:2aec:205:4600:b62e:99ff:fee9:cc51) (Quit: harpia)
[21:54:04] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:54:43] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[21:55:25] *** Joins: acer (~quassel@151.81.118.116)
[21:55:30] *** Joins: esther (~esther@155.254.31.185)
[21:55:36] *** Quits: sawk (~quassel@151.81.119.74) (Ping timeout: 272 seconds)
[21:55:48] *** Quits: rsx (~dummy@ppp-188-174-150-30.dynamic.mnet-online.de) (Quit: rsx)
[21:56:12] *** Quits: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net) (Ping timeout: 240 seconds)
[21:56:23] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:57:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:57:30] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 268 seconds)
[21:58:20] <BASHitup> For those who are into vulnerability auditing: https://github.com/trailofbits/pip-audit/
[21:58:28] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[22:01:53] *** Joins: arinov_ (~arinov@213.194.126.155)
[22:02:10] *** Quits: arinov (~arinov@194.169.217.186) (Ping timeout: 260 seconds)
[22:02:25] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[22:02:45] <foo> Can someone confirm: both logger.error() and logger.exception() both RAISE an error, correct? The difference is exception() also includes the error with a message. I have tried it and seen. I have read the docs. It looks like yes. (There seems to be confusion on my side with someone else and I simply want to make sure I'm following)
[22:04:01] <Wooble> foo: I'm nearly certain neither of them raises
[22:04:22] <grym> ^
[22:04:26] <grym> they just log, afaik
[22:05:01] <foo> grym: Hmmm. *thinks
[22:05:25] *** Joins: greedom (~greedom@p200300de670a9100ab3e1ad65cf07c24.dip0.t-ipconnect.de)
[22:05:39] <foo> ok, then I was confused.
[22:06:04] <foo> Thank you Wooble and grym. I love getting "humbled" by a dev on my side. :)
[22:06:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:06:22] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f982:9168:8567:5a09) (Remote host closed the connection)
[22:06:25] <foo> I had pushover.net integrated with a python error handler... I see my confusion now
[22:06:46] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:7429:3422:7c3f:d976)
[22:06:49] <Wooble> indeed, you can only call .exception() inside the handler for an exception you've already caught.
[22:07:34] *** Joins: Masterphi (~Masterphi@user/masterphi)
[22:07:37] <Wooble> s/can/should/
[22:07:51] *** Joins: nuh^ (~nuh@207.243.108.170)
[22:07:53] *** Joins: rje (~textual@65.141.156.170)
[22:07:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:10] *** Joins: xkuru (~xkuru@user/xkuru)
[22:08:52] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:08:58] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[22:09:19] <foo> Wooble: aha! Yeah, it's really only used in the try/except, which I now understand makes sense... otherwise how would exception know it is
[22:11:17] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[22:11:39] <SnoopJ> foo, think of logger.exception() as your logger message + traceback.format_exc()
[22:12:02] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[22:12:15] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[22:12:26] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[22:12:46] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:12:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[22:13:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:14:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:14:43] *** Quits: Kruppt (~Kruppt@50-111-36-218.drhm.nc.frontiernet.net) (Quit: Leaving)
[22:14:43] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[22:14:58] *** Joins: mickey8 (~user@user/mickey)
[22:15:41] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[22:16:25] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[22:16:49] *** Quits: greedom (~greedom@p200300de670a9100ab3e1ad65cf07c24.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:17:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:17:36] *** Joins: greedom (~greedom@p200300de670a9100ab3e1ad65cf07c24.dip0.t-ipconnect.de)
[22:17:59] *** Joins: e-snail (~pete@user/e-snail)
[22:18:27] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[22:18:49] *** Joins: Dotz0cat (~Dotz0cat@h243.196.117.75.dynamic.ip.windstream.net)
[22:20:10] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[22:21:13] *** Joins: Adoi (~Adoi@user/adoi)
[22:21:37] *** Joins: MeM_ (~Guest27@37.238.146.64)
[22:22:59] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[22:23:21] *** Quits: Dotz0cat (~Dotz0cat@h243.196.117.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[22:24:10] *** Joins: Dotz0cat (~Dotz0cat@98.19.249.252)
[22:24:46] *** Joins: esther (~esther@155.254.31.185)
[22:25:07] *** Quits: Thanattt (~Thanatos@105.112.31.232) (Read error: Connection reset by peer)
[22:25:30] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[22:26:36] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:27:16] *** Quits: nathanchapman (~nathancha@139.64.169.128) (Ping timeout: 272 seconds)
[22:27:39] *** Joins: tobybl (~tobybl@229.193.115.87.dyn.plus.net)
[22:27:39] *** Joins: Cera57 (~Cera@user/Cera)
[22:28:04] *** Quits: Cera (~Cera@user/Cera) (Quit: Client closed)
[22:28:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[22:29:11] *** Quits: tobybl (~tobybl@229.193.115.87.dyn.plus.net) (Remote host closed the connection)
[22:30:22] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:30:23] *** Quits: MeM_ (~Guest27@37.238.146.64) (Quit: Client closed)
[22:31:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:31:45] *** Joins: mickey8 (~user@user/mickey)
[22:32:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.54) (Ping timeout: 245 seconds)
[22:32:06] *** Parts: Strogg (~jean@user/rogg) (WeeChat 2.3)
[22:34:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[22:34:18] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[22:35:15] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[22:36:28] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[22:37:26] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:b61a:4cbd:c8bc:c7a5) (Ping timeout: 245 seconds)
[22:39:46] *** Joins: jay-m126 (~jay-m@154.72.150.177)
[22:39:51] *** Joins: jay-m126_ (~jay-m@154.72.150.177)
[22:39:52] *** Joins: jay-m1261 (~jay-m@154.72.150.177)
[22:39:53] *** Joins: esther (~esther@155.254.31.185)
[22:40:28] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-058.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[22:43:04] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[22:43:37] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[22:44:35] *** Quits: lbracher (~lucas@ptr-178-51-124-115.dyn.mobistar.be) (Ping timeout: 256 seconds)
[22:45:06] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:37] *** Joins: slav0nic (slav0nic@python.su)
[22:45:51] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[22:46:01] <foo> SnoopJ: thank you thank you, this is helpful to know that logger.exception() alone isn't raising and stopping flow of code
[22:46:43] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Client Quit)
[22:46:55] *** Joins: Guest2141 (~Guest21@85.137.0.51.dyn.user.ono.com)
[22:47:05] <SnoopJ> foo, it's probably also worth pointing out that error() and exception() aren't terribly special cases, all of the levels accept the boolean exc_info keyword arg, exception() just turns it on by default and then calls error()
[22:47:16] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:47:31] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[22:47:45] <SnoopJ> so if you wanted to log an exception without using the error level, that's possible :)
[22:48:08] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[22:50:22] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[22:50:44] *** Joins: noteness (~noteness@user/noteness)
[22:50:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[22:51:38] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[22:52:21] *** Joins: esther (~esther@155.254.31.185)
[22:53:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:53:14] <foo> SnoopJ: thank you :)
[22:54:29] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:54:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:55:11] *** Joins: kts (~kts@103.73.237.49)
[22:55:36] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:55:47] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[22:57:21] <theseb> What does pandas provide that plain old numpy does not?
[22:58:11] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:58:18] *** Quits: d3x (michal@bielaw.ski) (Quit: Lost terminal)
[22:58:40] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:58:43] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:58:56] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[22:59:14] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[22:59:14] *** Quits: paul424 (~tom@ip-5-172-236-148.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[22:59:30] *** Joins: paul424 (~tom@ip-5-172-236-148.multi.internet.cyfrowypolsat.pl)
[22:59:49] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:00:02] *** Quits: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Iolo)
[23:00:05] *** Joins: aknot (~aknot@2603-900a-1503-17bb-5373-e272-67f1-0460.inf6.spectrum.com)
[23:00:18] *** Joins: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi)
[23:00:22] *** Joins: Fiji (~Fiji@user/fiji)
[23:01:24] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[23:01:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:01:58] <pycurious> If a Process.start() happens, and that process exits but the parent joins it after a few minutes? (perhaps when the child has already become zombie) - what is the correct way of handling such a process (In my case the child can take a few minutes to process things in CPU)
[23:02:46] *** Joins: Barones (~Barones@user/Barones)
[23:02:48] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[23:03:07] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Client Quit)
[23:03:19] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[23:03:40] <KirkMcDonald> pycurious: I don't think there is a problem with letting a zombie hang around for a little while, so long as it is cleaned up eventually.
[23:05:32] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:05:37] *** Quits: razzd777 (~razzd777@user/razzd777) (Quit: Leaving)
[23:05:45] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[23:05:56] <pycurious> KirkMcDonald: does .join() actually cleanup zombies? Here is the code I'm trying to debug: https://dpaste.org/8FMR - It's getting into a state where I see a lot of zombies. It's part of a larger project, so havent abstracted out this part only into a separate module.
[23:06:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ¦)
[23:06:30] *** Quits: p-i- (~Ohmu@183.89.25.222) (Remote host closed the connection)
[23:06:33] <KirkMcDonald> pycurious: I would certainly expect it to.
[23:07:05] <pycurious> KirkMcDonald: https://dpaste.org/8FMR - do you see any red flags in this code?
[23:07:17] *** Joins: p-i- (~Ohmu@183.89.25.222)
[23:07:24] <KirkMcDonald> pycurious: The queue doesn't seem to be populated by anything.
[23:08:19] <pycurious> KirkMcDonald: Here is the updated paste: https://dpaste.org/0JUH
[23:08:57] <pycurious> KirkMcDonald: Note that if the block_pop happens after an hour, the child is zombied for an hour. Not sure if that is an issue with the OS (Ubuntu)
[23:09:16] <KirkMcDonald> That seems like the behavior I'd expect.
[23:09:19] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:09:40] <KirkMcDonald> A completed child process is a zombie until the parent polls or waits on it.
[23:10:07] <KirkMcDonald> And in multiprocessing, that means joining it.
[23:10:37] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:10:39] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:11:21] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Quit: Leaving)
[23:11:23] <KirkMcDonald> Ideally, you would use an event loop. One event is getting a new task to process. Another event is finishing one of the tasks.
[23:11:45] *** Joins: oriba (~oriba@dynamic-078-055-220-151.78.55.pool.telefonica.de)
[23:12:00] <KirkMcDonald> But it is not *inherently* a problem to perform this cleanup only after you receive new tasks.
[23:12:27] <pycurious> KirkMcDonald: asyncio? Any pointers to such a code example?
[23:12:37] *** Joins: Auron (Auron956@user/auron)
[23:12:46] <KirkMcDonald> Not on hand.
[23:13:27] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:15:17] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:16:18] *** Joins: crashrep (~crashrep@user/crashrep)
[23:18:39] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:19:00] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 240 seconds)
[23:20:37] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[23:20:57] *** Joins: esther (~esther@155.254.31.185)
[23:21:04] *** Joins: pdc (~raffaem@95.74.95.143)
[23:21:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:21:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:21:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:23:27] *** Quits: baffodoro (~raffaem@45.91.20.239) (Ping timeout: 256 seconds)
[23:24:24] *** Lord_of_Life_ is now known as Lord_of_Life
[23:25:15] *** Quits: Iolo (~Iolo@dsl-tkubng22-58c02b-220.dhcp.inet.fi) (Quit: Iolo)
[23:26:16] *** Joins: onichomp (~onichomp@2806:264:4408:8:1573:351a:7841:f28c)
[23:26:37] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[23:27:03] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[23:27:49] *** Joins: montybanksnyc (~montybank@pool-96-240-6-14.nwrknj.fios.verizon.net)
[23:28:00] *** Quits: onichomp (~onichomp@2806:264:4408:8:1573:351a:7841:f28c) (Read error: Connection reset by peer)
[23:28:07] *** Joins: Vision-_- (~Vision@097-087-115-181.res.spectrum.com)
[23:28:11] *** Joins: jinsun__ (~jinsun@user/jinsun)
[23:28:37] *** Joins: onichomp (~onichomp@2806:264:4408:8:1573:351a:7841:f28c)
[23:28:51] *** Joins: bryce_ (~bryce@ool-457dd6ac.dyn.optonline.net)
[23:29:01] *** Joins: Linux77_ (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4)
[23:29:05] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Remote host closed the connection)
[23:29:14] *** Quits: erica (~erica@user/erica) (Quit: Ping timeout (120 seconds))
[23:29:17] *** Quits: Linux77 (~leonardo@2804:d45:8c08:9300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[23:29:31] *** Quits: sud (~sud@user/sud) (Ping timeout: 245 seconds)
[23:29:33] *** Quits: madprops (hj8oijo@user/madprops) (Ping timeout: 250 seconds)
[23:29:48] *** Joins: erica (~erica@user/erica)
[23:30:01] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:30:04] *** Quits: MJ94 (mj94@user/mj94) (Quit: ZNC - http://znc.in)
[23:30:16] *** Quits: pyre_ (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:30:16] *** Joins: justAstache (~justache@user/justache)
[23:30:17] *** Joins: MJ94 (mj94@user/mj94)
[23:30:21] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[23:30:28] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[23:30:57] *** Quits: esther (~esther@155.254.31.185) (Ping timeout: 240 seconds)
[23:31:18] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[23:31:26] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[23:31:29] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 252 seconds)
[23:32:11] *** Joins: sud (~sud@user/sud)
[23:32:22] <Guest2141> hi there! when I first started programing in Python people would scare me with the following statement "global variables are dangerous". I think they can be dangerous enough. It boils down to HOW and WHERE you use them. I understand the potential side effects and I understand that it might not go along the lines of functional programming but guess
[23:32:22] <Guest2141> what python is not purely functional, is a multi paradigm programming language. When we do "from math import e" thats global, function and classes definitions are usually global (module-level).Â  The danger comes from the fact that you can change that global variable from inside a function and that might have side effects hard to track down, let
[23:32:23] <Guest2141> alone the fact that you might be using multiprocessing. However the fact that you have to use global to do reassignments puts a bar against side effects. You still might a have a global custom class object and have some setters and have implicit side effects, be a responsible adult. I think when it comes to just reading the state of an object I
[23:32:23] <Guest2141> don't see anything wrong with global. When it comes to updating then you gotta think twice. Another use case might be a remote API connection like a spark context, DB connection, HTTP API or REST API. You might want to share that "connection state" across your module. You can do that using as a module level variable. I think that's better than
[23:32:24] <Guest2141> passing it down across your different functions or methods. (Smaller headers. Code less cluttered) Also some people might try to define a class so you can encapsulate that global state. I feel like global state encapsulation is awesome but if I have solely that reason to make a class I don't find it appealing enough. However is something that we
[23:32:24] <Guest2141> should keep in mind. I dont know, I feel like if your module is not super big, the way to go is to creating that module level variable and use it in your functions.
[23:32:24] *** litharge sets mode: +q *!*@85.137.0.51
[23:32:32] <octav1a> :/
[23:32:55] *** litharge sets mode: -q *!*@85.137.0.51
[23:34:12] *** Joins: madprops (hj8oijo@2600:3c01::f03c:91ff:fe02:60d8)
[23:34:12] *** Quits: madprops (hj8oijo@2600:3c01::f03c:91ff:fe02:60d8) (Changing host)
[23:34:12] *** Joins: madprops (hj8oijo@user/madprops)
[23:34:22] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[23:34:57] *** Quits: magla (~gelignite@55d47d67.access.ecotel.net) (Quit: Stay safe!)
[23:35:24] *** Quits: data68 (~data@2a02:908:a65:3d80:3cd0:874d:f18b:b4cb) (Ping timeout: 240 seconds)
[23:35:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[23:36:11] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[23:36:22] *** Quits: greedom (~greedom@p200300de670a9100ab3e1ad65cf07c24.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:36:55] <xheimlich> suppose I need to do the following 100,000 times every so often and care about performance to ask around on #python but not to write in $fastlang.
[23:37:14] <exarkun> xheimlich: run it on pypy
[23:37:33] <xheimlich> 100,000 times is not what I wanted to say.
[23:38:07] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:38:20] <xheimlich> suppose there's a list with 100,000 short strings (under what prints in a typical line anyway).
[23:38:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:38:44] *** Joins: mickey8 (~user@user/mickey)
[23:39:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:39:08] *** Joins: radiojosh (~Joshua@70-131-32-80.lightspeed.stlsmo.sbcglobal.net)
[23:39:13] *** Linux77_ is now known as Linux77
[23:39:14] *** Quits: znf (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5) (Remote host closed the connection)
[23:39:20] *** Quits: pulec (~pulec@user/pulec) (Remote host closed the connection)
[23:39:29] *** Joins: pulec (~pulec@37-97-160-172.colo.transip.net)
[23:39:29] <xheimlich> I need to (1) test if a string is in this list and (2) if it already is, add it with a numbered suffix
[23:39:36] <sveinse> When making a test with pytest, I'm reading a directory and use pytest_generate_tests() to parameterize the N configs. Where should I do this read of the directory? In the global scope of conftest.py or within pytest_generate_tests() before calling parameterize()? Is there a best pratice on this?
[23:40:11] <xheimlich> so xs = ["mario", "giovanna", "antonella"]; please_add(xs, "mario") -> ["mario", "giovanna", "antonella", "mario/1"]
[23:40:23] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[23:40:59] *** Joins: ravan (~ravan@user/ravan)
[23:41:04] <exarkun> xheimlich: if you have to use a list and you know nothing else about the list then you're going to have an O(N) solution
[23:41:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[23:41:11] <exarkun> xheimlich: does it have to be a list?  do you know something else about the list?
[23:41:30] *** Quits: Syzygy_ (~Syzygy@178-190-83-4.adsl.highway.telekom.at) (Remote host closed the connection)
[23:41:32] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[23:41:43] *** Joins: Syzygy_ (~Syzygy@2001:871:265:1cdc:b4b3:44f3:ef8:e3b6)
[23:41:49] <xheimlich> they're programmatically generated.
[23:41:56] *** Quits: vodkra (~vodkra@user/vodkra) (Ping timeout: 252 seconds)
[23:42:05] *** Quits: rvgate (~rvgate@user/rvgate) (Quit: Ping timeout (120 seconds))
[23:42:11] <xheimlich> I have a bunch of objects that have an attribute "name".
[23:42:12] *** Quits: ccha (~ccha@user/ccha) (Read error: Connection reset by peer)
[23:42:23] *** Joins: znf (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5)
[23:42:27] <xheimlich> now I'm making multi-sheet Excel spreadsheets out of some arrangement of them.
[23:42:28] <exarkun> Hm.  It is an interesting epistemological question whether that is a fact *about* the list or not.
[23:42:31] *** Joins: ccha (~ccha@user/ccha)
[23:42:43] <xheimlich> exarkun: true that.
[23:42:44] *** Joins: vodkra (~vodkra@user/vodkra)
[23:42:47] *** Joins: rvgate (~rvgate@user/rvgate)
[23:42:52] <xheimlich> I'm almost more interested in that now.
[23:42:53] <exarkun> xheimlich: What I really mean is - is the list sorted?  Can it be a set instead?
[23:42:58] *** Quits: _moep_ (~moep@user/moep/x-3358975) (Ping timeout: 260 seconds)
[23:43:00] *** Quits: ialokin_ (znc@user/ialokin) (Quit: it was tempting to stay, but I had to quit :))
[23:43:08] *** Quits: Exa (exa@irc.moe) (Quit: see ya!)
[23:43:11] *** Quits: Strom (strom@fedora/strom) ()
[23:43:13] <ChrisWarrick> s/sorted/meaningfully ordered/
[23:43:19] *** Joins: ialokin (znc@user/ialokin)
[23:43:52] <xheimlich> I have to think if there's some behavior that depends on order.
[23:43:54] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[23:43:55] *** Joins: Exa (exa@irc.moe)
[23:44:21] <exarkun> How many strings do you need to perform (1) and (2) on?
[23:44:31] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 245 seconds)
[23:44:35] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:44:39] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[23:44:44] <xheimlich> the whole thing was designed not to depend on order, and I was using sets for a while until objects stopped being naturally hashable and I didn't want to come up with a __hash__ function.
[23:44:51] *** Joins: mickey8 (~user@user/mickey)
[23:45:14] *** Joins: Strom (strom@fedora/strom)
[23:45:15] <xheimlich> anyway, to your question.
[23:45:53] <ChrisWarrick> def __hash__(self): return hash(self.name)
[23:46:14] <xheimlich> I'm almost irrationally convinced of Latour's stance that facts are *made*.
[23:46:28] <exarkun> Heh, that question.
[23:46:35] *** Joins: smrtz (~smrtz@user/smrtz)
[23:46:57] <xheimlich> Latour's position is fascinating because he's continually vacilating between what scholastics called nominalism and realism.
[23:47:07] *** Joins: Enitin (~Enitin@82.180.145.230)
[23:47:14] *** Parts: smrtz (~smrtz@user/smrtz) ()
[23:47:18] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[23:49:06] <xheimlich> it's also possibly inconsistent, and he changed radically somewhere between Reassembling the Social and Pandora's Hope. The man became the world's most extremist climate alarmist. Maybe it's because he comes from wine money.
[23:49:08] *** Joins: arinov_ (~arinov@213.194.126.155)
[23:49:12] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[23:49:31] *** Joins: trace987 (~trace@user/trace)
[23:49:34] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:49:42] <xheimlich> but towards Latour, and the (candidate) fact that some things can be programmatically generated.
[23:49:51] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[23:50:07] <st0ckholm> http://paste.debian.net/1232676/ how do i change class variables in classes i inherit from?
[23:50:14] <st0ckholm> i am a rookie in OOP
[23:50:38] <sveinse> st0ckholm: you don't in python. it inherits everything
[23:50:45] *** Joins: hams (~hams@73.232.205.0)
[23:50:45] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[23:50:45] *** Joins: hams (~hams@user/hams)
[23:51:06] *** Quits: foobaz2124317 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:51:09] *** Joins: clf059 (~clf059@2601:603:1580:3970::aae1)
[23:51:10] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[23:51:20] <sveinse> st0ckholm: so it'll be you_instace_of_CommandWorker.INTERVAL_SECS = 42
[23:51:23] *** Joins: foobaz2124317 (~foobaz212@152.37.103.80)
[23:51:26] <xheimlich> I think what's a fact and what's a metaphysical but unknowable given is kind of an issue of scope. If you place computers in the loop, the fact that a string is programmatically generated can be verified by running the program again. If you're looking just at the strings, you can never know.
[23:51:30] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[23:51:32] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Quit: No Ping reply in 180 seconds.)
[23:51:46] <st0ckholm> sveinse, does that mean i should be able to set it direcly in my class to a different value... ah, great. thanks
[23:51:59] *** Quits: clf059 (~clf059@2601:603:1580:3970::aae1) (Client Quit)
[23:52:01] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[23:52:05] *** Quits: DocMors (~DocMors@web.crypticity.net) (Ping timeout: 250 seconds)
[23:52:09] *** Joins: cliluw (~cliluw@47.147.77.43)
[23:52:13] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[23:52:26] <xheimlich> actually this is like any industrial process. whether the "fish" in my tv dinner is something that was shredded to bits and reassembled.
[23:52:31] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:52:31] *** Quits: bdeferme (~bdeferme@i.ctrl86.com) (Ping timeout: 250 seconds)
[23:52:32] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[23:52:43] *** Joins: clf059 (~clf059@2601:603:1580:3970::aae1)
[23:52:45] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[23:52:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:53:29] *** Joins: bdeferme (~bdeferme@i.ctrl86.com)
[23:53:29] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 252 seconds)
[23:53:36] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[23:53:44] *** Parts: akk (~akk@75.161.130.204) (+++)
[23:53:47] <xheimlich> you can kind of inspect things sometimes statistically. like a drawing can be judged to be made with a computer rather than freehand because, well, free hand isn't usually that steady. But now we're talking about facts about comparable ensembles.
[23:54:06] *** Joins: Alexer (~alexer@alexer.net)
[23:54:21] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:54:54] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[23:55:00] *** Quits: aknot (~aknot@2603-900a-1503-17bb-5373-e272-67f1-0460.inf6.spectrum.com) (Ping timeout: 240 seconds)
[23:55:10] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:55:21] *** Joins: _moep_ (~moep@gateway.moep.name)
[23:55:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:55:24] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[23:57:00] *** Joins: mdk (~mdk@python/psf/mdk)
[23:57:24] *** Joins: DocMors (~DocMors@web.crypticity.net)
[23:58:13] <Wooble> wut
[23:58:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:59:12] *** Joins: humbertowoody (~humbertow@189.236.30.197)
[23:59:23] *** Quits: Cera57 (~Cera@user/Cera) (Ping timeout: 256 seconds)
