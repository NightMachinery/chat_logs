[00:07:01] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[00:14:23] *** Joins: tw2113 (~tw2113@184-83-46-155-dynamic.midco.net)
[00:20:22] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868) (Quit: isflavior)
[00:21:41] <__adrian> "i don't want to use them"  // ok, but "use them" is still the easy/correct answer
[00:21:57] <__adrian> the complicated answer would be to install php8 and then re-install 7.4
[00:22:06] <__adrian> but you'll still end up with ...oddities
[00:22:50] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[00:23:47] <tw2113> party ppl!
[00:30:30] <BadAdviceCat> Didn't Ubuntu switch to a different approach to install PHP so that more than 1 version can be installed? I thought it did. If not, then one can expect Ubuntu to uninstall current version before installing another version. LOL. One other option would involve finding pre-compiled php package that accepts parallel installation or compile. xD
[00:31:00] <BadAdviceCat> Hi tw2113, enjoyed the pine tree decoration day?
[00:33:17] <tw2113> i played video games and listend to podcasts, so yep
[00:36:43] <da_wunder> wait what, you did not eat all the holidays? personally just finished third round of cheese and crackers for this day...
[00:37:36] <da_wunder> and now thinking to make one more set of those...
[00:37:48] <tw2113> nope, it's been an interesting year on that front when we already never did much for "celebrating"
[00:39:06] <da_wunder> personally I and my family just eat a lot "fancy" stuff and some gifts to each other
[00:40:39] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[00:41:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[00:44:25] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:54:32] <biberu> Nekomander: don't know, but it's just a matter of time before there are other dependencies that pollute the environments of different projects
[00:55:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:57:46] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[01:06:07] *** Joins: stenno (~stenno@user/stenno)
[01:10:00] *** Quits: magla (~gelignite@55d4171c.access.ecotel.net) (Quit: Stay safe!)
[01:10:13] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868)
[01:12:50] <Nekomander> biberu, oh yeah, I forgot about that. IIRC, there is a command in apt which can allow one to install stuff without certain recommendations (e.g. php would recommend apache, and that would get installed.)
[01:13:07] <Nekomander> Oh well, *shrugs*
[01:17:29] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[01:17:59] <TinoDidriksen> apt-get install --no-install-recommends
[01:18:12] *** Joins: AsenMx (~AsenMx@user/asenmx)
[01:18:38] <TinoDidriksen> You can also configure apt-get to always use that flag. Definitely do that on servers.
[01:19:19] <Nekomander> Yup, that's the one :D
[01:19:32] <Nekomander> A lot of articles never mentions that flag.
[01:25:14] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868) (Quit: isflavior)
[01:26:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:27:46] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[01:28:57] *** Joins: epony (epony@user/epony)
[01:32:54] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868)
[01:35:53] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[01:41:50] <relipse> i'm getting a 500 error on php 8, where is the php error log
[01:41:57] <relipse> i tried /var/log/apache2/error_log
[01:42:00] <relipse> but nothing shows up there
[01:42:31] <TinoDidriksen> Are you using mod_php or php-fpm?
[01:43:20] <relipse> i think fpm
[01:43:37] <TinoDidriksen> That has its own logs, as it's a separate daemon.
[01:44:01] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[01:44:20] <relipse> where do I look?
[01:44:21] *** Joins: AsenMx (~AsenMx@user/asenmx)
[01:44:54] <TinoDidriksen> Check what other folders and files are in /var/log
[01:45:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[01:45:46] *** Joins: AsenMx (~AsenMx@user/asenmx)
[01:49:30] <AllenJB> PHP should always log to whatever error_log is set to in php.ini, if log_errors is enabled (and you don't have a custom error handler intercepting errors). PHP-FPM also has its own log, which is configured via error_log in the php-fpm config file (usually php-fpm.conf).
[01:49:31] <AllenJB> You can use phpinfo() to check the active php.ini settings (and see what config files were read in the top section)
[01:55:30] *** Quits: guido (~weechat@host-79-13-252-18.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[02:00:48] *** Joins: malmalmal (~malmalmal@186.85-86-84.dynamic.clientes.euskaltel.es)
[02:03:07] *** Quits: malmalmal (~malmalmal@186.85-86-84.dynamic.clientes.euskaltel.es) (Client Quit)
[02:10:19] <biberu> php-fpm -i
[02:11:27] *** Joins: chazy (~chazy@2a0c:5a84:d102:5200:1ac0:4dff:fe96:16ad)
[02:14:02] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[02:14:23] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:14:28] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[02:17:10] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[02:17:23] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[02:18:35] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[02:20:15] <NakedKing> how can write decode code for this:  base64_encode(hash('sha512', $value . $salt, true) . $salt);
[02:21:24] <Blondie101010> what do you mean by "decode"?
[02:21:38] <Blondie101010> a hash can not be reverted
[02:21:41] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868) (Quit: isflavior)
[02:21:47] <AllenJB> What are you using this for?
[02:22:16] <NakedKing> i want to encode a pin with strong logic
[02:22:40] <NakedKing> but for do checking i need to decode it
[02:22:40] <Blondie101010> hmmmmmmmmm
[02:22:46] <Blondie101010> how short is that PIN?
[02:22:47] <__adrian> "encode" for what purpose? do you mean, "encrypt"?
[02:23:04] <__adrian> or are you making a hash (e.g., for a password)?
[02:23:12] <Blondie101010> hashing a short value will likely be very insecure
[02:23:19] <__adrian> yep
[02:23:24] <NakedKing> Blondie101010, ~ 120-150
[02:23:40] <Blondie101010> you call that a PIN, ok
[02:24:23] <NakedKing> __adrian, if i cant decode it why base64_decode is exist?
[02:24:28] <Blondie101010> so it looks like a password, and should likely be handled as such
[02:24:35] <__adrian> NakedKing: that's not what anyone said
[02:24:43] <__adrian> yes, you can encode + decode base64
[02:24:51] <__adrian> but base64 is not for security.
[02:24:59] <Blondie101010> a hash is meant NOT to be reversable
[02:25:04] <__adrian> ^ and, this
[02:25:06] <NakedKing> oh i see
[02:25:13] <__adrian> you cannot "un-hash" a hash
[02:25:13] <NakedKing> then i need an encrypt logic
[02:25:22] <Blondie101010> not necessarily!
[02:25:25] <__adrian> no, you need to figure out what you're doing, exactly
[02:25:29] <Nekomander> NakedKing, anyone can decode that, there are many websites where people can go to to copy and paste, and then the web page will then do all the encoding/decoding for them.
[02:25:29] <Blondie101010> probably password checking
[02:25:30] <__adrian> what are you making?
[02:25:38] <__adrian> e.g., is this for passwords?
[02:25:53] <NakedKing> i want to write it this password to database with encrypted way
[02:26:00] <NakedKing> this is something like password-2
[02:26:00] <chazy> is abs() good for knowing if 2 numbers are close to each other? like abs((100-97)/97) < 0.05, abs should return 0.03?
[02:26:07] <Nekomander> You can not UNDO a hash function. It's a one-way mechanic. Once it is hashed, it can not be undone. There is no unhash() function.
[02:26:41] <Blondie101010> chazy:  abs($a - $b) gives the difference no matter the direction
[02:26:48] <Blondie101010> it's as simple as that
[02:27:17] <__adrian> NakedKing: for passwords, ok.
[02:27:24] <Blondie101010> Nekomander:  he probably just needs a good password example
[02:27:27] <__adrian> you DO NOT WANT to encrypt the password. you want to hash it.
[02:27:39] <__adrian> https://php.net/password
[02:27:48] <Nekomander> Hashing and Encrypting are TWO DIFFERENT THINGS.
[02:27:58] <__adrian> use  password_hash()  to hash the password. store the hash in your DB.
[02:28:17] <__adrian> use  password_verify()  to verify that the  hash matches the password when someone logs in.
[02:28:23] <NakedKing> i dont want to store my salt on database
[02:28:33] <NakedKing> i will give it on php side
[02:28:35] <Blondie101010> where do you put it?
[02:28:40] <__adrian> don't roll your own salt. password_hash() makes its own salt.
[02:28:57] <Blondie101010> yeah, the universal approach
[02:29:00] <__adrian> this sounds like you're using one salt for everyone - is that it?
[02:29:02] <NakedKing> i will define it on my config and call when i need
[02:29:11] <Blondie101010> no
[02:29:11] <__adrian> you MUST NOT USE THE SAME SALT for everyone.
[02:29:12] <NakedKing> yes, just one salt
[02:29:17] <Blondie101010> that's not better, but worse
[02:29:25] <biberu> NakedKing: that's not the purpose of a salt
[02:29:31] <NakedKing> just i need better logic than md5($salt . $value);
[02:29:32] <__adrian> you MUST ALWAYS use a differnt, cryptographically secure salt for every password.
[02:29:36] <__adrian> yes
[02:29:41] <__adrian> you need  password_hash()
[02:29:43] <Blondie101010> the salt is meant to make sure the hashes vary as much as possible
[02:29:52] <__adrian> do not use anything else. do not make your own function.
[02:30:02] <__adrian> use  https://php.net/password
[02:30:06] <Blondie101010> otherwise you're making it easier for hash dictionaries
[02:30:09] <__adrian> ^
[02:30:15] <__adrian> you will only make something worse.
[02:31:33] <__adrian> $hash = password_hash($password, PASSWORD_DEFAULT);  // store this hash in your database.
[02:31:47] <NakedKing> i just think it for mnemonic entropy. i want to store it with secure way. if i use it on my database
[02:32:03] <__adrian> those words don't mean anything
[02:32:04] <NakedKing> if someone dump my db. then loss
[02:32:11] <__adrian> salts are not secret. store them in the DB.
[02:32:12] <Blondie101010> your concept of safer is wrong
[02:32:22] <__adrian> store them in the DB, with the hash.
[02:32:37] <biberu> NakedKing: the salt is there to protect you against dictionary attacks, it's not a secret in that way
[02:33:05] <__adrian> $valid = password_verify($user_submitted_password, $hash_from_your_db);  // $valid is  true  if the password is correct, and  false  if not
[02:33:10] <Blondie101010> NakedKing:  they still wouldn't have any password first of all, and secondly, if they got access to the DB, they probably got access to that salt variable too
[02:33:17] <__adrian> ^
[02:34:19] <NakedKing> Why laravel doesnt store passwords hashes on database?
[02:34:37] <__adrian> i don't use laravel, but i'd be very surprised if they didn't.
[02:34:41] <Blondie101010> that's actually why it's much prefered to hash than encrypt them (because the code doesn't need to keep a key)
[02:34:44] <__adrian> where else would they store them?
[02:34:50] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[02:35:15] <Blondie101010> it sure uses universal hashes
[02:35:23] <Blondie101010> everything uses those
[02:35:23] <__adrian> hashing is preferred because you can't un-hash. the user's password is secret. even you (the website admin) can't know what their password is.
[02:35:28] *** Joins: AsenMx (~AsenMx@user/asenmx)
[02:35:36] <biberu> NakedKing: the example you pasted above isn't suitable for passwords at all btw, it's much too fast, you want guessing to be expensive in case of a leak (ignoring that base64)
[02:35:39] <Blondie101010> the hash string follows a very standard format
[02:36:06] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:b680:a467:38a8:2e2f) (Quit: ZNC 1.8.2 - https://znc.in)
[02:36:19] *** Joins: Albright (~Albright@149.28.13.173)
[02:37:35] <Blondie101010> I think your perspective might change if you read on the mcrypt flaws
[02:38:00] <Blondie101010> the author probably had a similar frame of mind as you do
[02:38:03] <NakedKing> Ok
[02:38:08] <NakedKing> i will store it on database
[02:38:25] <__adrian> who said mcrypt?
[02:38:26] <Nekomander> NakedKing, with that said, INSTEAD of trying to do what you are asking for, consider another approach: Make a password reset script.
[02:38:29] <__adrian> don't mcrypt
[02:38:29] <Blondie101010> I did
[02:38:33] <__adrian> did someone else?
[02:38:44] <Blondie101010> no, just to read on such flaws
[02:38:50] <__adrian> k. i thought you were replying to somebody else bringing it up
[02:41:10] <NakedKing> __adrian, password_hash("foobar", PASSWORD_DEFAULT);   what is PASSWORD_DEFAULT mean? bcrypt?
[02:41:44] <__adrian> right now, it uses bcrypt, yes
[02:41:50] <__adrian> but it doesn't matter what it uses
[02:42:04] <__adrian> you use "default" so that when the default changes, you get the new (better) default.
[02:42:30] <__adrian> "doesn't matter"  // that is, it doesn't matter if you know
[02:42:44] <NakedKing> deal
[02:42:57] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[02:43:40] <__adrian> IF for some reason you want to use argon (which is not currently the default because it's not available on all installs), then you'd specify it
[02:43:49] <__adrian> but most people should never worry about it
[02:44:41] <NakedKing> echo password_hash($value, PASSWORD_DEFAULT);   --- every refresh give me different output. how can i check it
[02:44:47] <__adrian> see above
[02:44:49] <tw2113> trust the publicly wide-distributed password tools than your own attempted rolled solutions
[02:44:58] <__adrian> it's supposed to give a different hash each time. that's why it's good.
[02:45:11] <__adrian> use  password_verify()  to verify a password matches your hash
[02:45:41] <Blondie101010> password_verify will hash the provided password with the same salt to compare the results
[02:45:47] <__adrian> "what does the hash look like" is another thing that you should never worry about. you don't need to know.
[02:46:24] <Nekomander> NakedKing, here you go: https://paste.gg/p/anonymous/8352d4b7eef7454a973191ded71f20cb
[02:46:27] <__adrian> password_verify() knows how to do it, the right way. use password_verify() and do not roll your own way.
[02:46:27] <Nekomander> Enjoy
[02:48:24] <NakedKing> wow. i understand now
[02:48:46] <NakedKing> thanks you guys so much. I am enlightened
[02:48:53] <tw2113> it's what they do
[02:49:15] <__adrian> welcome
[02:50:11] <Nekomander> NakedKing, password_verify knows what to do, because it reads the `$2a$` portion of the hashed password, and then it knows which hashing algorithm to use to check if the submitted password is correct or not.
[02:50:43] <NakedKing> @Nekomander, that means multiple hash value can be correct. just checks algoritm
[02:50:44] <NakedKing> am i right
[02:50:56] <__adrian> yes
[02:51:01] <Nekomander> So even though the default algorithm changes over time as the newer/better hash algorithm gets added to PHP... password_verify knows which algorithm to use.
[02:51:12] <__adrian> (though you should only keep one per user/password)
[02:51:42] <NakedKing> wow okay. yes its best way i can understand it know
[02:54:00] <Nekomander> __adrian can be SubtleThunder, I'm Chimpanzer, tw2113, you can be RiddleWasp. I would leave Blondie101010 with PinkDragonfly but I think B10ndieDrag0nf1y is better suited.
[02:54:06] <Nekomander> :D
[02:54:38] <Nekomander> __subtleThunder!!
[02:54:47] <__adrian> heh  :)
[02:54:54] <tw2113> no idea what RiddleWasp is, but sure
[02:55:32] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 240 seconds)
[02:59:48] <chazy> does number_format() cut out decimals or round them up?
[02:59:58] *** Nekomander is now known as Champanzer
[03:00:04] *** Champanzer is now known as Chimpanzer
[03:00:15] <__adrian> no
[03:00:27] <__adrian> are you providing $decimals ?
[03:00:31] <__adrian> the default is 0
[03:00:40] <__adrian> https://php.net/number_format
[03:00:44] <chazy> yes, but if i provide them what happens?
[03:01:00] <__adrian> then it shows that many decimal places
[03:01:17] <Chimpanzer> chazy, int $decimals = 0,  <-- do note that this strictly asks for an INTEGER type value.
[03:01:18] <chazy> if a number has like 10 decimals and i format it to just 2, does it round it up or cut from the 2nd?
[03:01:32] <__adrian> btw, prefer https://php.net/numberformatter
[03:01:47] <__adrian> then it shows the first 2 decimals
[03:01:55] <__adrian> it does not round
[03:02:29] <chazy> ok i'll use numberformatter then
[03:03:24] <tw2113> if you ever need just a quick test env to try out general PHP code, give https://3v4l.org/ a try
[03:03:34] <tw2113> pass in a number to a function, see what comes out
[03:03:50] <Chimpanzer> chazy, https://ibb.co/Jzd3N8g
[03:04:08] <Chimpanzer> Numberformatter is awesome'er!
[03:04:36] <Chimpanzer> Should always check for INPUT TYPES of a function first, before attempting to use them. :)
[03:07:43] * Chimpanzer <-- Chimpanzee + panzer (A Military Tank, German word that means "armour". It derives through the French word pancier, "breastplate", from Latin pantex, "belly" :D) </etymology>
[03:08:01] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:42] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:24:18] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[03:26:13] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[03:27:00] *** Joins: eht (~eht@user/eht)
[03:27:36] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Client Quit)
[03:33:57] *** Joins: PersonX (~PersonX@2604:3d08:7a76:3240::1f3e)
[03:37:32] <PersonX> Hello. Running in to a little bit of an issue (still learning PHP). I am trying to create a method that will get json data from a URL, but am running in to issues accessing some of the objects within the data in the URL. This is what I have so far: https://pastebin.com/E38Hga1r  - This is the URL I am trying to get the data from:
[03:37:33] <PersonX> https://ow-api.com/v1/stats/pc/us/PersonX-11315/complete  - I am not able to get the data within the first object if there are multiple I think? Any help is appreciated, thank you.
[03:40:39] <Blondie101010> read the notice
[03:42:30] <PersonX> Yes. I read it. But is there a way within my function to loop through the values not knowing if they're a string, int, etc etc? Without getting that notice and still returning the data? Sorry if I'm asking wrong.
[03:43:06] <Blondie101010> it's because you don't know your data...  look at it attentively with a: var_export($array);
[03:43:32] <Blondie101010> you'll notice that what you expected to be a string is an array
[03:45:55] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[03:58:05] <PersonX> Yes. So would this be considered a "multidimensional array"? That's what I guess I am having trouble accessing the arrays nested within.
[03:58:10] <PersonX> and data
[04:03:34] <Blondie101010> sure, "multidimensional" applies
[04:08:47] <Blondie101010> PersonX:  right now, all your code does is loop over the base array and output everything blindly assuming it's only strings
[04:09:19] <Blondie101010> as I said earlier, you need to actually look at the data attentively
[04:10:29] <Blondie101010> var_export($array)
[04:13:38] <Blondie101010> the data contains a lot of information, for which you should read the API's documentation, but it's well organized and easy to follow...   for example, checking for the number of gold medals, you could probably use $array['competitiveStats']['awards']['medalsGold']
[04:14:42] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[04:17:06] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[04:17:37] *** Quits: Chimpanzer (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[04:19:36] <PersonX> Yea, the API has no documentation. What I am trying to achieve (since i couldn't find anything sufficient online), is create a function that when a user logs in (since I'm using blizzard's oauth2 for logging in), is importing ALL that data "competitiveStats" as a table, with awards/medals, etc and the data for it (so it's automated). I just don't
[04:19:37] <PersonX> really want to go through ALL that JSON data and create all the tables manually still. Regardless, I'm just having issues accessing. Thank you for explaining, I'll try to better understand with a bit more research, I appreciate your help.
[04:20:27] <Blondie101010> what matters is the model
[04:20:35] <Blondie101010> what is this meant to do?
[04:22:09] <Blondie101010> if you want to make good use of this data, you will need to easily know how to get to something in less than a minute
[04:22:22] <Blondie101010> so learn and describe (document) it
[04:26:41] *** Joins: ferdna (~ferdna@user/ferdna)
[04:34:06] <PersonX> I am trying to store this data in my database, for each user that logs in to my website (using blizzards oauth2), so it doesn't rely on accessing this API, every time a user wants to look at their character's profile.
[04:34:37] <PersonX> so, my thought process was to create a method that gets all columns and data, when a user logs in, inserts to the database
[04:40:22] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[04:40:51] <Blondie101010> doesn't that data continuously change?
[04:41:18] <Blondie101010> you either learn exactly how it's organized, or you don't do anything
[04:43:00] <Blondie101010> btw, they do have documentation: https://ow-api.com/docs/#introduction
[04:43:02] <PersonX> Yes it does. So, the initial login, I want to get all the data listed in the API (for complete), then just update via a cron every set amount of time, the data that needs to be updated.
[04:43:30] <PersonX> certain stats, etc
[04:43:32] <Blondie101010> so you'll run requests for every user every so many minutes?
[04:47:47] <Blondie101010> honestly can't imagine your use case
[04:48:39] *** Joins: Rockwood (~Rocky@user/rocky)
[04:50:28] <PersonX> Yes, because other people will be able to view people's profiles that have also used my service / logged in. I mean, if you don't think I should store in the database, and just use this api every request, wouldn't that cause speed issues? Some requests may time out, may take a long time to load, etc? I mean, I'm sure there is a way to cache, maybe
[04:50:29] <PersonX> i should try to look in to that, but that's probably way out of my experience thus far.
[04:52:07] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[04:54:44] <Blondie101010> that question applies in either way
[04:55:18] <Blondie101010> you need to learn the API and see how you can be more specific on what it returns (for that you need to really understand what is returned)
[04:55:23] <Blondie101010> go read the datat
[04:55:25] <Blondie101010> *data
[05:10:36] <__adrian> "PersonX> would this be considered a "multidimensional array"?"  // don't think of "multidimensional" arrays as special. they're exactly the same as any other array. they just have an item with another array as a value.
[05:15:35] <PersonX> But accessing other arrays nested with their data is what gets me. I understand foreach to loop through, but I assume you'd have to have another foreach to access the other arrays? Either way, I assumed that was my issue with my original question, but could be way off.
[05:15:37] <PersonX> thanks
[05:16:05] <__adrian> so far as that goes, refer back to what blondie said
[05:16:10] <__adrian> you need to understand the data
[05:16:21] <__adrian> not just try to treat it in a generic way
[05:16:53] <__adrian> if you're putting it in a table, then you need to know what column names to expect, and so forth. you don't do it blind.
[05:22:13] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[05:36:28] *** Quits: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[05:36:30] *** Joins: Rockwood (~Rocky@user/rocky)
[05:36:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[05:42:19] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Ping timeout: 268 seconds)
[06:05:33] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:33] *** Quits: led_belly (~led_belly@196.240.57.117) (Ping timeout: 256 seconds)
[06:16:28] *** Joins: led_belly (~led_belly@196.240.57.116)
[06:18:17] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[06:18:41] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[06:27:20] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[06:38:02] *** Quits: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com) (Ping timeout: 240 seconds)
[06:39:41] *** Joins: lord4163 (~lord4163@90-230-194-205-no86.tbcn.telia.com)
[07:12:55] *** Joins: Hiccup (cHoy@user/hiccup)
[07:13:16] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Quit: Zauberfisch)
[07:14:03] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:23:43] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[07:27:56] *** Quits: tw2113 (~tw2113@184-83-46-155-dynamic.midco.net) (Quit: Leaving)
[07:29:13] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[07:29:34] *** Joins: goddard (~goddard@user/goddard)
[07:33:07] *** Joins: impliednude (~impliednu@172.56.42.126)
[07:33:29] <impliednude> trying to find out why easyapache nor anyone else has libsodium available for 7.4. is there a workaround?
[07:34:37] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[07:35:30] <Rockwood> __adrian, hi how are you sir?
[07:36:10] <impliednude> when I do sudo yum install php74-sodium nothing comes up. on centos 7
[07:40:51] *** Joins: goddard (~goddard@user/goddard)
[07:41:24] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:44:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:47:25] <impliednude> dear god it was a headache but I got it
[07:47:31] <BadAdviceCat> impliednude, you might have to add in a third party repo. I do not know for certain though. I normally use REMI Repository, or IUS.
[07:47:45] <BadAdviceCat> For PHP/Apache.
[07:51:46] <BadAdviceCat> impliednude, maybe it's part of the core? I never really had to do anything special to get sodium, it just comes with it for me (specifically talking about arch linux distro)
[07:51:52] <BadAdviceCat> Try running: locate sodium
[07:52:01] <BadAdviceCat> And see what that pops up.
[07:54:14] <impliednude> had to install via cli pecl
[07:54:41] <impliednude> then override some things but I got it to work
[07:55:32] <impliednude> It's a pita for centos 7 apparently
[07:57:15] <impliednude> honestly just tired of all the hoops one has to go through. Sad enough, magento2 even now uses java/elasticsearch rather than mysql
[08:13:40] *** Joins: ugga-the-caveman (~ugga-the-@185.66.195.90)
[08:15:14] <ugga-the-caveman> Ahoi, can someone explain to me what the numbers inside a php-session file mean ?  benutzer|s:4:"ugga";benutzerID|s:1:"3";loginDate|s:10:"2021-12-27";loginTime|s:8:"05:42:13";IP|s:14:"192.168.42.100";
[08:15:32] <ugga-the-caveman> for ecxample what does the 4 after the first s mean ?
[08:17:17] <ugga-the-caveman> here is another one. I dont undestand why the number in the last part is different
[08:17:19] <ugga-the-caveman> benutzer|s:4:"ugga";benutzerID|s:1:"3";loginDate|s:10:"2021-12-27";loginTime|s:8:"05:45:43";IP|s:12:"192.168.7.10";
[08:17:56] <ugga-the-caveman> session 1 >> IP|s:12:"192.168.7.10";     session2 >> IP|s:14:"192.168.42.100";
[08:18:41] <Blondie101010> that is serialized data
[08:18:56] <ugga-the-caveman> yes i heard that before
[08:19:17] <ugga-the-caveman> but what have these numbers to say ?
[08:19:18] <Blondie101010> you shouldnt normally access those directly
[08:19:52] <ugga-the-caveman> heard that too =)
[08:20:11] <Blondie101010> serialization is encoding the data structure flatly (string) to be able to restore it later
[08:20:11] <ugga-the-caveman> i only wnat to undestand how they are "constructed"
[08:20:42] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[08:21:03] <Blondie101010> when you start the session in your script, php will take that data and !+unserialize
[08:21:03] <php-bot> when you start the session in your script, php will take that data and, mixed unserialize(string variable_representation)  - Takes a string representation of variable and recreates it - http://php.net/unserialize
[08:21:03] <ugga-the-caveman> so its some identifier what structure that data had before
[08:21:06] <ugga-the-caveman> ?
[08:21:07] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[08:21:21] <Blondie101010> it is a representation of the structure
[08:21:40] <Blondie101010> serialization can include almost anything
[08:21:47] <ugga-the-caveman> mhh but why is the number different between those 2 sessions ?
[08:21:57] <ugga-the-caveman> both are from my server
[08:22:00] <Blondie101010> what number?
[08:22:09] <ugga-the-caveman> session 1 >> IP|s:12:"192.168.7.10";     session2 >> IP|s:14:"192.168.42.100";
[08:22:15] <ugga-the-caveman> the 12 and 14
[08:22:42] <Blondie101010> that format is not meant to be read, though it partially can
[08:23:03] <Blondie101010> but those are simply different IPs kept in the session data
[08:23:25] <Blondie101010> if you showed the full content it might be possible to extrapolate it, but just look at YOUR code
[08:24:05] <ugga-the-caveman> as i said, both session files are created from the same code on the same machine
[08:24:14] <Blondie101010> so what?
[08:24:20] <Blondie101010> look at your code to know what got set
[08:24:34] <Blondie101010> if you didn't write it, talk to the person who did
[08:24:45] <Blondie101010> or read the code and learn what it does
[08:25:49] <ugga-the-caveman> is there some list, of the different codes? what these numbers represent ?
[08:26:07] <Blondie101010> that is NOT a format meant for you to read!!!
[08:26:24] <ugga-the-caveman> because for my undestanding, both numbers should be same. cause its the same data-type "string"
[08:26:34] <Blondie101010> it is the result of serialize() and can be reverted with unserialize()
[08:26:36] <Blondie101010> that's it
[08:27:01] <Blondie101010> why would your code write the same data in every session?  that would be stupid
[08:27:14] <ugga-the-caveman> data-type!
[08:27:30] <Blondie101010> show your code if you want to talk about it
[08:27:48] <Blondie101010> session data comes from code refering to $_SESSION
[08:28:55] <ugga-the-caveman> so here is the code https://gist.github.com/Ugga-the-Caveman/f8b388172c64bd798bf650221d9692dc
[08:29:59] <ugga-the-caveman> in short i start the session and write some variables to it
[08:30:38] <Rockwood_> mysqli_real_escape_string outdated
[08:30:51] <Rockwood_> use PDO first
[08:32:25] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[08:36:51] <ugga-the-caveman> Aha i found it
[08:37:03] <ugga-the-caveman> its explained here
[08:37:04] <ugga-the-caveman> https://www.php.net/manual/en/function.serialize.php
[08:37:15] <ugga-the-caveman> the number doesnt represent the data-type
[08:37:15] <BadAdviceCat> NO.
[08:37:44] <BadAdviceCat> ugga-the-caveman, https://gist.github.com/Ugga-the-Caveman/f8b388172c64bd798bf650221d9692dc#file-gistfile1-txt-L31 You should make use of mysqli prepared statements.
[08:38:45] *** Quits: ugga-the-caveman (~ugga-the-@185.66.195.90) (Quit: Client closed)
[08:40:58] *** Joins: ugga-the-caveman (~ugga-the-@185.66.195.90)
[08:41:18] <BadAdviceCat> ugga-the-caveman, In case you've missed it: https://gist.github.com/Ugga-the-Caveman/f8b388172c64bd798bf650221d9692dc#file-gistfile1-txt-L31 You should make use of mysqli prepared statements.
[08:41:34] <ugga-the-caveman> sry my browser crashed XD
[08:41:56] <BadAdviceCat> Here is how to. https://www.php.net/manual/en/mysqli.prepare.php - IMO, you should instead make use of PDO, as Rockwood pointed out. The big'ol WHY is explained here: https://phpdelusions.net/pdo/mysqli_comparison - PDO example https://www.php.net/manual/en/pdo.prepare.php
[08:41:57] <ugga-the-caveman> i have to admit i dont know what prepared statements are
[08:42:09] <ugga-the-caveman> i will ask google about that =)
[08:43:12] <ugga-the-caveman> wow thats sounds very handy
[08:43:18] <ugga-the-caveman> thanks =)
[08:43:40] <BadAdviceCat> ugga-the-caveman, don't do this, please. https://gist.github.com/Ugga-the-Caveman/f8b388172c64bd798bf650221d9692dc#file-gistfile1-txt-L37 You'll get laughed at by people like me for code like this :P
[08:44:14] <ugga-the-caveman> jeah, just chill. i dont do it for money i just do it for fun
[08:44:30] <Blondie101010> not a reason to do it badly
[08:45:20] <BadAdviceCat> It's a step-up from absolutely no hashes at all. But the main problem with md5 is that modern computers these days are good at guessing what password is contained within the hashed value, or guess a different String that is NOT the password, BUT IT WILL STILL WORK (and this is called a Hash collision when that happens)
[08:45:20] <Blondie101010> read the first sentence at https://en.wikipedia.org/wiki/MD5
[08:45:29] <Blondie101010> *broken*
[08:46:27] <ugga-the-caveman> oh, thanks for pointing that out
[08:46:52] <ugga-the-caveman> damn i have used it all over the place
[08:47:08] <BadAdviceCat> MD5 is a too-fast at computation. <-- now you might be scratching your heard "But isn't fast great?" Usually, depending on the purpose and task.  For passwords, No no that is bad. We want hash functions to be slow. As in slow-at-computation (This means, slower password guesses when it comes to brute force, like how you see them do it in a hollywood movie)
[08:47:12] <Blondie101010> !+passwords
[08:47:12] <php-bot> Use password_hash(), password_verify(), and friends.  *do not* "roll your own" password system!  learn more at http://php.net/password
[08:47:26] <Blondie101010> the problem is more important than that
[08:48:04] <ugga-the-caveman> but its ok to use it to make strings attachable to urls  right ?
[08:48:19] <ugga-the-caveman> when its not important that the text is crypted
[08:48:42] <Blondie101010> to be considered broken, a hashing algo isn't good at providing unique outputs for different inputs
[08:49:10] <ugga-the-caveman> mh jeah thats bad
[08:50:37] <BadAdviceCat> ugga-the-caveman, if you want unique IDs (or at least, not as broken as MD5), then you can make use of uuid instead. https://github.com/ramsey/uuid - UUIDs looks like this: https://www.uuidgenerator.net/
[08:50:47] <BadAdviceCat> YOu've probably seen these from somewhere before: 8b84657b-dec5-41b4-89ac-0ca282c309fa
[08:51:16] <Blondie101010> I think they just want a basic password auth
[08:51:42] <ugga-the-caveman> i used it to append a path to a file at the end of an url
[08:52:11] <ugga-the-caveman> to make it so that it not contains those special chars that make a url go bad
[08:53:02] <ugga-the-caveman> i saw this soluted more elegantly somewhere else, but never bothered to update
[08:54:47] <skyroveRR> ugga-the-caveman: https://thisinterestsme.com/secure-passwords-with-php/
[08:56:54] <ugga-the-caveman> a really nice article
[08:57:20] <ugga-the-caveman> i was planning on doing something else today. But this is so nice
[08:57:42] <ugga-the-caveman> i will try to implement that imediatly
[09:00:58] <BadAdviceCat> UUIDs are great for file names But this is not the only way, many ways to go about it ( https://instagram-engineering.com/sharding-ids-at-instagram-1cf5a71e5a5c ), whether it's a good idea or not, it is best to research different approaches and then learn which suits you best. - A simple number/auto-increment can be good (but that largely depends on what you are doing ( https://www.clever-cloud.com/blog/engineering/2015/05/20/why-auto-increment-is-
[09:00:59] <BadAdviceCat> a-terrible-idea/ )
[09:01:03] <BadAdviceCat> ( https://www.clever-cloud.com/blog/engineering/2015/05/20/why-auto-increment-is-a-terrible-idea/ )
[09:02:48] <BadAdviceCat> Best to learn the limitations of each approach, and the expected use case.
[09:02:56] <BadAdviceCat> With that said, happy coding.
[09:04:13] <ugga-the-caveman> thx, you guys also have a nice day
[09:04:24] *** Quits: ugga-the-caveman (~ugga-the-@185.66.195.90) (Quit: Client closed)
[09:34:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:39:57] *** Quits: chazy (~chazy@2a0c:5a84:d102:5200:1ac0:4dff:fe96:16ad) (Quit: WeeChat 3.4)
[10:20:08] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[10:20:26] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[10:23:07] *** Joins: fef (~thedawn@user/thedawn)
[10:36:53] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[11:03:07] *** Quits: PersonX (~PersonX@2604:3d08:7a76:3240::1f3e) (Quit: Client closed)
[11:04:51] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:11:47] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:15:01] *** Joins: tercaL (~tercaL@user/tercal)
[11:25:18] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:34:15] *** Joins: Deuchnord (~deuchnord@user/deuchnord)
[11:47:30] *** Joins: WarpedAI (~Warped@user/warped)
[11:49:37] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 240 seconds)
[11:51:30] *** Joins: keypushe- (~keypusher@user/keypusher)
[11:51:38] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[11:54:33] *** keypushe- is now known as keypusher
[11:56:17] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[11:57:37] *** Quits: Deuchnord (~deuchnord@user/deuchnord) (Ping timeout: 240 seconds)
[11:58:29] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[12:01:31] *** Quits: skyroveRR (~skyroveRR@user/skyroverr) (Quit: skyroveRR)
[12:01:52] *** Joins: skyroveRR (~skyroveRR@user/skyroverr)
[12:09:40] *** Joins: Deuchnord (~Deuchnord@user/deuchnord)
[12:19:21] *** Joins: Warped (~Warped@user/warped)
[12:20:57] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[12:21:33] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 256 seconds)
[12:22:37] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:22:57] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[12:23:49] *** Quits: Deuchnord (~Deuchnord@user/deuchnord) (Remote host closed the connection)
[12:30:10] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:36:20] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868)
[12:36:51] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:39b4:753:3ee6:7868) (Client Quit)
[12:42:10] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[12:49:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:13:10] *** Quits: Hiccup (cHoy@user/hiccup) (Ping timeout: 250 seconds)
[13:20:36] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[13:22:00] *** Joins: novns (~novns@user/novns)
[13:32:02] <NakedKing> o/ How can i catch this: throw new MnemonicException('Words count must be generated in multiples of 3');
[13:41:32] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[13:42:44] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[13:45:08] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:45:14] <AllenJB> NakedKing: You can specify specific exception classes in a catch statement, so: try { /* Code that might throw */ } catch (MnemonicException $e) { /* Deal with it */ }
[13:47:01] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[13:52:09] <NakedKing> https://0bin.net/paste/ouhbeb4g#bgslF53N3IPvtJ+Lk5kkUW0nG3gaT14N2ZoTsTEiA7E   it doesnt catch with this code
[13:54:13] <AllenJB> Are you sure MnemonicException is actually thrown? (Since I can't see what the request()->validate() calls are doing, I can't tell from your pastebin) What does currently happen?
[13:58:21] <Alex123> hello everyone, what do you think what is best way to store following data? Let's say user can subscribe to few type of subscriptions which are monthly/yearly each one has different amount credit they are good for, and can have one off product which give X credits which does not expire. When user uses the credit it need deduct from subscription first after if any credit from one of purchase from it. One way was thinking to have table user_i
[13:58:21] <Alex123> d, credit, debit, create_date, expire_date, type. and do all login in code. Is there any better way do so?
[14:04:46] <NakedKing> AllenJB, i can modify the error message with this way: https://0bin.net/paste/8n2siavX#k3PuFMP3a9SVM7VKqUdXHwaD3JAsYwNzxSzugVkzZsH
[14:05:33] <NakedKing> im gonna try combine with your codes
[14:08:12] *** Parts: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:16:59] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[14:36:49] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[14:37:08] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:37:15] *** Hash is now known as EnchanterTim
[14:54:19] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[15:03:47] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:04:37] *** Quits: keypusher (~keypusher@user/keypusher) (Ping timeout: 240 seconds)
[15:04:44] *** Joins: keypushe- (keypusher@user/keypusher)
[15:05:58] *** Joins: simius (~simius@user/simius)
[15:08:00] *** keypushe- is now known as keypusher
[15:10:08] *** Joins: PovilasCNC (~PovilasCN@85.206.27.165)
[15:14:52] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:15:50] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[15:26:32] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:35:10] *** Quits: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.4)
[15:43:37] *** Quits: simius (~simius@user/simius) (Ping timeout: 240 seconds)
[15:48:17] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[15:50:25] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 250 seconds)
[15:50:32] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[15:54:47] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 252 seconds)
[15:55:29] *** Joins: simius (~simius@user/simius)
[15:56:27] *** Joins: mr_gant (~mr_gant@103.192.80.184)
[16:00:21] *** Joins: guido (~weechat@host-79-36-18-73.retail.telecomitalia.it)
[16:02:33] *** Quits: simius (~simius@user/simius) (Ping timeout: 256 seconds)
[16:05:44] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[16:08:10] *** Joins: simius (~simius@user/simius)
[16:12:52] *** Joins: thiras (~thiras@user/thiras)
[16:26:32] *** Quits: tercaL (~tercaL@user/tercal) (Remote host closed the connection)
[16:31:05] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[16:38:54] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[16:44:25] *** Joins: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023)
[16:47:57] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[17:05:36] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:10:31] <NakedKing> Welcome DrowningElysium
[17:36:23] <relipse> NakedKing: if you are in a class you need a \ before it \MnemonicException
[17:36:28] <relipse> i mean namespace
[17:40:00] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[17:42:14] *** Joins: sagax (~sagax_nb@user/sagax)
[17:42:40] *** Joins: Warped (~Warped@user/warped)
[17:43:38] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[17:47:27] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[17:48:51] *** Joins: pmercado (~pmercado@190.22.161.169)
[17:58:37] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[18:13:05] *** Joins: magla (~gelignite@55d4dfc1.access.ecotel.net)
[18:19:19] *** Joins: ms49434 (~ms49434@user/ms49434)
[18:21:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[18:25:54] *** Quits: simius (~simius@user/simius) (Quit: Bai!)
[18:36:16] *** Quits: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023) (Read error: Connection reset by peer)
[18:36:49] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:36:54] *** Joins: onichomp (~onichomp@2806:264:4404:80d0:40cd:e3cf:fbd2:3023)
[18:42:17] *** Quits: PovilasCNC (~PovilasCN@85.206.27.165) (Read error: Connection reset by peer)
[18:48:05] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[18:48:14] *** Joins: fef (~thedawn@user/thedawn)
[18:50:41] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[18:50:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:51:08] *** Joins: fef (~thedawn@user/thedawn)
[18:51:09] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[18:51:14] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[19:03:05] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[19:04:13] <relipse> union types are pretty cool https://3v4l.org/H4ogY#v8.1.1
[19:04:42] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 260 seconds)
[19:07:46] *** Joins: de-facto (~de-facto@user/de-facto)
[19:19:57] <biberu> string|int|float? is that really useful or can the model be improved? narrower types tend to be of more help
[19:20:37] *** Joins: nortoh (~nortoh@user/nortoh)
[19:30:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[19:31:04] *** Joins: fef (~thedawn@user/thedawn)
[19:58:16] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[20:01:41] *** Quits: pmercado (~pmercado@190.22.161.169) (Ping timeout: 256 seconds)
[20:03:31] *** Quits: eht (~eht@user/eht) (Remote host closed the connection)
[20:03:44] *** Joins: eht (~eht@user/eht)
[20:07:59] <__adrian> union types solve a very narrow problem, and unfortunately they're going to be misused a lot
[20:08:50] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:08:51] <biberu> yeah, it's not just a fancy way to say "mixed"
[20:09:05] <__adrian> legacy code or different libraries where you can work with two object types exactly the same but they don't share an interface
[20:09:41] <__adrian> or  int|float, which SHOULD have been solved with a pseudotype  number
[20:10:13] <Naktibalda> it is much more specific than mixed
[20:10:59] <__adrian> it is (not sure why that's important)
[20:11:14] <__adrian> (and don't get me started on the new  mixed  type)
[20:11:37] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:12:02] <biberu> __adrian: i just read string|int|float in that way
[20:12:22] <__adrian> in practical terms, it might as well be.
[20:12:32] <biberu> indeed
[20:12:43] <__adrian> the point of hints is to be sure of what type you have
[20:14:55] *** Joins: Rockwood (~Rocky@user/rocky)
[20:15:41] <Rockwood> o/
[20:19:01] *** Joins: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net)
[20:21:29] <NakedKing> \o
[20:24:34] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[20:32:27] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:36:46] *** Joins: Bencraft5 (~Bencraft@235.58.187.81.in-addr.arpa)
[20:39:41] *** Quits: NakedKing (~NakedKing@user/nakedking) (Quit: Leaving)
[20:44:19] *** Joins: NakedKing (~NakedKing@user/nakedking)
[20:47:19] *** Quits: fstd (~fstd@xdsl-84-44-230-164.nc.de) (Remote host closed the connection)
[20:47:49] *** Quits: AsenMx (~AsenMx@user/asenmx) (Quit: Leaving)
[20:48:06] *** Joins: Naktibalda_ (~Naktibald@88.135.22.17)
[20:48:43] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[20:49:22] <Rockwood> \o/
[20:49:56] *** Joins: AsenMx (~AsenMx@user/asenmx)
[20:54:46] *** Joins: MrBlue_ (~MrBlue@135.129.116.115)
[20:57:25] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Ping timeout: 250 seconds)
[20:58:33] *** Quits: AsenMx (~AsenMx@user/asenmx) (Quit: Leaving)
[20:59:30] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:00:28] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.3)
[21:05:19] *** Joins: ge (~g@37.214.33.17)
[21:06:53] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[21:23:43] *** Joins: AsenMx (~asen@user/asenmx)
[21:29:41] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[21:31:23] *** Quits: MrBlue_ (~MrBlue@135.129.116.115) (Ping timeout: 252 seconds)
[21:49:21] *** Quits: Naktibalda_ (~Naktibald@88.135.22.17) (Ping timeout: 256 seconds)
[22:01:49] *** Joins: thiras (~thiras@user/thiras)
[22:12:21] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[22:14:37] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Client Quit)
[22:19:23] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 256 seconds)
[22:24:31] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:31:58] *** Joins: echoSMILE (uid504326@user/echosmile)
[22:47:23] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[22:50:45] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[22:58:31] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:16:52] <relipse> string|float|int wasn't meant as a real world example, it was just playing with the typehinting object union stuff
[23:18:27] *** Quits: ge (~g@37.214.33.17) (Remote host closed the connection)
[23:27:12] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[23:32:02] *** Quits: Bencraft5 (~Bencraft@235.58.187.81.in-addr.arpa) (Ping timeout: 240 seconds)
[23:43:05] *** Joins: Flikker (Flikker@pool-173-49-228-108.phlapa.fios.verizon.net)
[23:45:01] *** Joins: Bencraft5 (~Bencraft@235.58.187.81.in-addr.arpa)
[23:48:50] *** Joins: Atlas (~atlas@user/atlas)
[23:51:13] *** Quits: Flikker (Flikker@pool-173-49-228-108.phlapa.fios.verizon.net) (Remote host closed the connection)
[23:53:52] <__adrian> relipse: yeah but someone in the "real world" WILL do that. many someones.
[23:55:03] <relipse> did you say there will be a "mixed" type?
[23:55:07] <relipse> like they have on the php documentation?
[23:55:36] <Blondie101010> why typehint then?
[23:57:22] <Blondie101010> it would be no different than prefixing all parameters with the same keyword (like: parameter)
[23:58:06] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[23:58:32] *** Joins: Colt (~Colt@user/colt)
