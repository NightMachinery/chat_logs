[00:00:08] *** Quits: mattil (~mattilinn@87-92-27-109.bb.dnainternet.fi) (Quit: Leaving)
[00:00:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:00:31] <rapha> hi all
[00:00:48] <rapha> first off, my sincere apologies for asking a python2 question
[00:01:12] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[00:01:31] <NoImNotNineVolt> python2 is dead. long live python2! :P
[00:01:58] <rapha> exactly, apparently :) ... sooooo, i'm trying to use virtualenv2 and getting "pkg_resources.DistributionNotFound: The 'backports.entry_points_selectable>=1.0.4' distribution was not found and is required by virtualenv" even though "sudo pip2 backports.entry_points_selectable" worked just fine. what is going wrong?
[00:02:19] <rapha> (this is on ARM, if that has something to do with anything)
[00:03:43] <NoImNotNineVolt> oh that sounds fun :|
[00:04:34] <rapha> yeah
[00:04:40] <rapha> loads
[00:04:57] <rapha> and i'll never understand the reluctancy of the klipper project to finally finish moving to python3
[00:05:02] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[00:05:27] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[00:06:20] *** Joins: Hax0r (~pncl3@87.101.193.195)
[00:06:25] <rapha> ah, okay, there was his argument: as long as the major distros don't drop python2, he won't start supporting python3.
[00:06:42] <nedbat> rapha: that's strange logic
[00:06:51] <rapha> hah! found the problem NoImNotNineVolt ... by default, version 0.0.0 is installed. one has to manually specify the required version.
[00:07:25] <rapha> nedbat: too strange for me to want to find out the reasoning behind it tbh.
[00:07:50] <Adoi> bjs, in the output here; https://bpa.st/J23Q the 'sent_to' argument in line 40 is returned with asterisks in title format as applied in line 6, however it only has to insert the category name. I understand why it happens; in lines 93 and 94 causes the title format to be applied. I ried to apply the said format in a separated method, but didnt work.
[00:08:00] *** Quits: y1n (~y1n@84-115-64-241.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[00:08:13] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:08:24] <Adoi> sorry if I outlined it in a crappy way
[00:09:20] <Adoi> shortly, due to line 6, I get a category surrounded with asterisks rather than a single category name
[00:09:53] <Adoi> and I dont fathom why line 6 interferes with line 40
[00:10:05] <Adoi> or, how I can avoid that
[00:10:36] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[00:11:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:11:39] *** Joins: fofoni (~fofoni@user/fofoni)
[00:12:22] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:13:04] *** Parts: JoeH_ (uid113241@id-113241.highgate.irccloud.com) ()
[00:15:20] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[00:18:48] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:19c1:d739:4799:9431)
[00:19:18] *** Joins: dolor_avis (~dolor_avi@user-5-173-8-99.play-internet.pl)
[00:19:25] *** Joins: nemosaltat (~nemosalta@2607:fb90:4e82:9dc8:c3d:12bf:ef80:3934)
[00:19:57] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[00:19:59] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[00:20:39] <bjs> Adoi: maybe you wanted `sent_to.name` not `str(sent_to)`
[00:20:54] <bjs> (on line 40)
[00:21:03] *** Joins: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at)
[00:22:47] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:24:06] *** Quits: dolor_avis (~dolor_avi@user-5-173-8-99.play-internet.pl) (Quit: dolor_avis)
[00:24:44] *** Joins: fassl (~fassl@2a02:8388:1987:9380:b8c4:7547:c3fd:9098)
[00:25:15] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:fe08:7f96:5202:3854) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:26:00] *** Quits: nemosaltat (~nemosalta@2607:fb90:4e82:9dc8:c3d:12bf:ef80:3934) (Ping timeout: 252 seconds)
[00:27:41] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[00:28:02] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[00:28:11] <Adoi> bjs, that made it better by removing the asterisks; https://bpa.st/RPBQ
[00:28:35] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[00:29:24] <Adoi> but  line 9 is shown standalone, while it needs to be under 'Food'
[00:31:37] *** Quits: Strom (strom@fedora/strom) ()
[00:32:39] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 258 seconds)
[00:33:13] *** Joins: Strom (strom@fedora/strom)
[00:33:46] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[00:34:17] *** Joins: cer-0 (~cer-0@189.228.172.244)
[00:34:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[00:37:00] <Adoi> ah i get why
[00:38:03] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[00:38:22] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[00:38:55] *** Joins: sazawal (~sazawal@122.161.170.192)
[00:40:09] <mike18_> hi
[00:40:32] <mike18_> how can i pass env variables to a flask app with gunicorn?
[00:42:58] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[00:43:35] *** Quits: ironsoba (~z@user/ironsoba) (Ping timeout: 250 seconds)
[00:44:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[00:45:30] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:45:40] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:45:40] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:45:46] *** Quits: darxun (sid504814@id-504814.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:45:57] *** Quits: hjmcnew (sid86092@id-86092.tinside.irccloud.com) (Ping timeout: 245 seconds)
[00:46:11] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Ping timeout: 250 seconds)
[00:46:11] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 250 seconds)
[00:46:14] *** Quits: ziky (sid27087@user/ziky) (Ping timeout: 256 seconds)
[00:46:18] *** Quits: gtback_ (sid505041@id-505041.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:46:21] *** Quits: JacobFrost (sid494713@id-494713.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:46:37] *** Quits: eichin_ (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 250 seconds)
[00:46:54] *** Quits: drmessano (sid104353@user/drmessano) (Ping timeout: 252 seconds)
[00:47:08] *** Quits: leonardus (sid358597@tinside.irccloud.com) (Ping timeout: 258 seconds)
[00:47:18] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 272 seconds)
[00:47:22] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:47:29] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 250 seconds)
[00:47:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[00:47:43] *** Joins: georgios (~georgios@2a02:587:a02d:d058:9d2e:9329:74ac:e3fb)
[00:47:55] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 265 seconds)
[00:47:56] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Ping timeout: 272 seconds)
[00:48:16] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Quit: leaving)
[00:48:21] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 258 seconds)
[00:48:48] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[00:50:31] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:51:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:52:43] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[00:53:14] *** Joins: matsaman (~matsaman@user/matsaman)
[00:54:58] *** Quits: y1n (~y1n@84-115-64-90.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[00:55:04] <twomoon> hi matsaman
[00:55:45] *** Quits: Hax0r (~pncl3@87.101.193.195) (Remote host closed the connection)
[00:56:52] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 272 seconds)
[00:57:16] <deniska> mike18_: how do you launch gunicorn? Whatever environment you start gunicorn with will be visible to your application
[00:57:27] <mike18_> i changed code now
[00:57:31] <mike18_> it seems to work
[00:57:43] <mike18_> i lanuch it in the docker container:
[00:57:52] <mike18_> ENTRYPOINT ["gunicorn"]. .... CMD ["-w", "4", "-b", "0.0.0.0:8080","serverApp:app"]
[00:58:12] <mike18_> and app in serverApp.py seems to be required a global var?
[00:58:19] <mike18_> for: "serverApp:app"
[00:59:32] <deniska> mike18_: ah, yeah, that's how wsgi works, it expects that a module will have an app object called a way that you pass to wsgi app runner
[00:59:45] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[01:01:40] <bjs> Adoi: can't transfer() just call withdraw() on self, then deposit() on sent_to
[01:02:01] *** Joins: dez (uid92154@user/dez)
[01:02:37] *** Joins: JacobFrost (sid494713@tinside.irccloud.com)
[01:02:47] *** Joins: darxun (sid504814@tinside.irccloud.com)
[01:02:58] *** Joins: stigz (sid371747@tinside.irccloud.com)
[01:04:21] *** Joins: ziky (sid27087@user/ziky)
[01:04:53] <mike18_> @deniska https://ideone.com/UN4z8C
[01:04:58] <mike18_> does that look good?
[01:05:03] *** Quits: georgios (~georgios@2a02:587:a02d:d058:9d2e:9329:74ac:e3fb) (Ping timeout: 252 seconds)
[01:05:09] <mike18_> api is also a global var...
[01:05:29] <Adoi> bjs, I will try to alter the code accordingly, and paste it
[01:07:44] <deniska> mike18_: that looks fairly typical. One may argue where exactly the api.read_env() call belongs, sometimes you may want to read the config from things which aren't env vars. But probably not, and then it's fine
[01:08:06] <mike18_> read_env() reads env variables
[01:08:12] <mike18_> like aws s3 key...
[01:08:27] <mike18_> is Api a good name for it?
[01:08:40] *** Joins: goldfish__ (~goldfish@user/goldfish)
[01:08:45] *** Joins: Evolver (sid32215@user/evolver)
[01:08:47] <mike18_> handling the requests and calls stuff?
[01:09:00] <meejah> what's the coolest, most-hip way to do "versions" now? the only feature i _really_ care about is minimizing the number of places the version is burned-in, which I guess is the thinking behind "get it from Git" etc solutions, but I dislike how much code that takes)
[01:09:06] <deniska> mike18_: if it doesn't clash with any other name and it describes what it is, sure, it's fine
[01:09:15] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:09:26] <caveman> how to create a list with conditioned content, with possibility of being totally empty?  e.g. [1 if x, 2 if y].  i want it to be possibly [1,2], [1], [2], [].  how to do this?
[01:09:27] <meejah> e.g. "versioneer" is a tool that grok's the version from git
[01:10:01] <deniska> caveman: lst = []; if x: lst.append(1); if y: lst.append(2)
[01:10:02] <meejah> caveman: create empty list, use .append() to add things (conditionally)?
[01:10:14] <caveman> thanks.
[01:10:21] <deniska> caveman: (with more line breaks than irc allows)
[01:10:32] <meejah> list-comprehensions are cool and all, but sometimes they're not the most readable
[01:10:45] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:10:48] <JordiGH> I want to think waynew in absentia for making me just strace it.
[01:11:03] <JordiGH> That was the easiest way to tell wtf pytest was doing and why it was seemingly ignoring my norecursedirs option.
[01:11:04] *** Joins: rany (~rany@user/rany)
[01:11:06] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[01:11:21] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 258 seconds)
[01:11:21] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[01:12:02] *** Joins: KombuchaKip (~kip@192.252.230.5)
[01:12:46] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:13:05] *** Joins: yuesbeez (uid458354@tinside.irccloud.com)
[01:13:05] *** Joins: PocketKiller (PocketKill@user/packetiv)
[01:13:16] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[01:13:34] *** Joins: leonardus (sid358597@tinside.irccloud.com)
[01:15:48] *** Joins: BillyZane (~BillyZane@91.196.220.172)
[01:15:50] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) ()
[01:16:03] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[01:16:20] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:16:29] <meejah> related to my other question, what _does_ use __version__ in modules? is that just cargo-culting at this point?
[01:17:02] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[01:18:34] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:18:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:20:42] <caveman> is there any nice way to let python tell me variable names in strings?  e.g. '{var1} {var2}' i want to get 'var1' and 'var2'.
[01:20:45] <altendky> is there a way to write the first bit of `sys.implementation.name == "pypy" and sys.pypy_version_info < (7, 2)` so that mypy will be aware on not-pypy that it doesn't need to look at the second half?  `sys.implementation.version` is not an option.  https://foss.heptapod.net/pypy/pypy/-/issues/3129
[01:21:10] <Repiphany> caveman: `values = [1, 2]; conditions = [True, False]; [a for a, b in zip(values, conditions) if b] # [1]`
[01:21:40] <altendky> caveman: the closest i know of is `f'{var1=}'` that prints both the name and the value.
[01:21:59] <altendky> i'm not clear on the use case here though
[01:22:28] <altendky> 'var1 var2' is the straightforward solution and i'm not sure what makes it worse
[01:22:33] <caveman> i already have some configs as strings.  e.g. config = "{var1}".  i use them by `config.format(**values)`.  i wonder if i can get 'var1' in this case?
[01:23:05] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[01:23:14] *** Joins: Naan (~Naan@user/naan)
[01:23:19] *** Joins: buhman (sid411355@user/buhman)
[01:23:23] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[01:23:30] <altendky> maybe another layer of context will help?
[01:23:46] *** Joins: graingert (sid128301@tinside.irccloud.com)
[01:23:48] *** Joins: drmessano (sid104353@user/drmessano)
[01:23:56] *** Joins: chromis (sid150893@tinside.irccloud.com)
[01:24:26] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[01:24:29] <kittonian> hi all. so I'm finally trying to make the move to zope 5 and the latest python 3.9.6. I've got it all running but there's very little documentation on using dtml with the new python 3 and I'm hoping someone here can tell me why I'm getting a syntax error when doing <dtml-var "sitefiles.headsection(_.None, _)">
[01:24:39] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:24:55] <caveman> altendky: https://github.com/Al-Caveman/nsapass/blob/master/nsa#L69 - i basically want to later on in the code to test which variables were used in a given line.
[01:25:06] <caveman> in a given option strin
[01:25:08] <caveman> g
[01:25:28] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[01:25:47] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[01:26:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:26:25] <altendky> caveman: you want to parse the format string to see what's in it?
[01:26:30] *** Quits: fassl (~fassl@2a02:8388:1987:9380:b8c4:7547:c3fd:9098) (Ping timeout: 252 seconds)
[01:26:36] <altendky> that you can do as i recall
[01:26:56] <caveman> yes,
[01:27:24] <caveman> because i have some ipc layer where i send content of variables only if used in the format string
[01:27:26] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[01:28:02] <altendky> you might want to just make your own class or whatever that nicely serves both purposes rather than reversing a format string.  but lemme see if i can find my example etc
[01:28:36] <sco1> meejah: PEP396 attempted to formalize __version__ but never really caught on. I know Flit uses it, I'm assuming there are other things that do as well. I don't know if I'd call it a cargo cult though
[01:28:59] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[01:29:03] <altendky> caveman: https://docs.python.org/3/library/string.html#string.Formatter and i fiddled with it in https://replit.com/@altendky/partial-format#main.py
[01:29:27] <meejah> sco1: i just meant that when I'm doing it, i have no idea _why_ i'm doing it besides "other things do that" ... :/
[01:29:28] <altendky> you probably don't need to look past line 10
[01:29:39] *** Joins: powerhouse (~Powerhous@24.109.184.150)
[01:29:42] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:30:04] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:d0ac:adf4:3b06:bc21)
[01:31:33] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:32:00] *** Joins: rany (~rany@user/rany)
[01:32:32] *** Joins: goldfish_ (~goldfish@user/goldfish)
[01:32:37] <meejah> sco1: thanks for the pointer though!
[01:32:39] <caveman> altendky: i'm confused.  my goal is not to format the string.  my goal is to only get variables in formatted strings.  e.g. i get options str "this is some {option}", and i want python to tell me that it needs variable `option`.
[01:32:40] *** Quits: sazawal (~sazawal@122.161.170.192) (Quit: Leaving)
[01:32:52] *** Quits: goldfish_ (~goldfish@user/goldfish) (Remote host closed the connection)
[01:33:03] <altendky> caveman: yep.  my code gets that information out using `string.Formatter`
[01:33:08] <graingert> meejah: irccloud was down while you were bashing `__version__`
[01:33:10] <graingert> :(
[01:33:18] *** Joins: WarpedAI (~Warped@user/warped)
[01:33:31] <altendky> caveman: you don't have to keep going on to the formatting part once it has parsed the format string for you
[01:33:39] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[01:33:42] *** Joins: goldfish (~goldfish@user/goldfish)
[01:33:43] *** Quits: dld (~davidlowr@73.61.8.112) (Ping timeout: 268 seconds)
[01:34:00] *** Joins: EWDurbin (sid38710@tinside.irccloud.com)
[01:35:07] *** Joins: dld (~davidlowr@73.61.8.150)
[01:35:18] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[01:35:21] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:35:32] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:d0ac:adf4:3b06:bc21) (Ping timeout: 256 seconds)
[01:36:15] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 265 seconds)
[01:36:59] *** Quits: MaximB (~MaximB@87.68.164.32) (Quit: Client closed)
[01:37:09] *** Joins: fofoni (~fofoni@user/fofoni)
[01:37:36] *** Quits: mike18_ (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[01:37:36] <meejah> graingert: okay .. i don't know what irccloud has to do with __version__..?
[01:38:11] <meejah> (not sure if "bashing" is the right word, trying to subtract 1 from the places a version needs to be burned in ;)
[01:38:15] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[01:38:58] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:39:42] <kittonian> never mind. i figured it out. you can't put (_.None, _) you just have to put ()
[01:39:58] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:40:26] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:40:27] *** Joins: chaosite (~chaosite@user/chaosite)
[01:40:38] <graingert> meejah: I just missed it and it's one of my favourite topics
[01:41:25] <meejah> graingert: ah, okay! well, happy to hear what you have to say
[01:41:55] <meejah> (i'm just wondering if there's a point putting __version__ = "1.2.3" into a module or not .. from the rejected PEP that got linked, it seems like "no")
[01:42:45] <graingert> meejah: yeah it's expressively forbidden
[01:42:52] <graingert> Expressly*
[01:44:08] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[01:44:40] *** Joins: hjmcnew (sid86092@tinside.irccloud.com)
[01:44:41] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Leaving)
[01:44:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 245 seconds)
[01:45:25] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:46:32] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[01:46:47] *** Quits: LiftLeft (~LiftLeft@191.96.227.138) (Ping timeout: 245 seconds)
[01:46:58] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:47:35] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:48:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:48:38] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:48:38] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:49:25] <greatgatsby> what the best way to store constants?  If I want something like foo.bar.BIZ, foo.bar.BAZ?  module level "constants" (vars), a class, an enum (somehow?).  Thanks for any suggestions.
[01:49:35] *** jess is now known as j
[01:49:57] <meejah> graingert: okay, good news IMO .. what forbids putting __version__ into a module?
[01:49:59] <graingert> greatgatsby: ham: Final = "hello" ?
[01:50:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[01:50:25] <AhmedAmerican> how can i read such table ? http://lib.stat.cmu.edu/datasets/boston
[01:50:41] <greatgatsby> graingert, not sure I follow.  ham is a class?
[01:50:48] <AhmedAmerican> is there a library which auto recolonize TEXT table ?
[01:51:06] <graingert> greatgatsby: It's a type annotation
[01:51:30] <graingert> `biz: Final = "some biz"`
[01:51:52] <graingert> You use `from typing import Final`
[01:52:03] <greatgatsby> thanks, I'll check that out
[01:52:26] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:52:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[01:53:24] <sybariten> sooo..... apparently i have completely forgotten how to make an if/elif that makes sense:   https://bpa.st/R4ZQ    at least if i'm to interpret my pylint colouring
[01:53:28] *** Quits: geli (~gelignite@55d40e37.access.ecotel.net) (Quit: Stay safe!)
[01:53:44] <bjs> sybariten: are you sure it's not complaining at the `break` ?
[01:54:14] <sybariten> hmmm
[01:54:42] <greatgatsby> graingert, ok - that looks pretty interesting, thanks again.
[01:54:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:54:51] <sybariten> uh... yeah.. maybe. Break can be used only within a loop...
[01:54:53] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:55:14] <graingert> greatgatsby: you'll need to enforce it with mypy of course
[01:55:21] <graingert> meejah: https://docs.python.org/3/reference/lexical_analysis.html#index-14
[01:55:36] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:55:37] <graingert> > Any use of __*__ names, in any context, that does not follow explicitly documented use, is subject to breakage without warning.
[01:55:51] <sybariten> Is there a more logical way to build up this thing i'm trying to do? input for three different years, and if the user has submitted any other year well then i want to complain. But maybe thqat test doesnt need to live in this function, ofcourse...
[01:56:04] <graingert> The rejected PEP means `__version__` is forbidden
[01:56:18] *** Joins: chaosite (~chaosite@user/chaosite)
[01:56:28] <bn_work> hi, python3 / python2 + six, does python have a way to express cardinality of objects?  ie:  oneOf, anyOf, allOf, etc?  If not, would one need to implement this via https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset ?
[01:56:41] *** Joins: rany (~rany@user/rany)
[01:56:45] *** Leo is now known as Mikro
[01:57:02] <nedbat> bn_work: what would oneOf do?  How does it compare to any() and all() ?
[01:57:03] <sartan> I use libraries like Marshmallow for this
[01:57:03] <graingert> bn_work: like `len(`?
[01:57:40] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:4815:d4d0:9e37:3955) (Ping timeout: 272 seconds)
[01:58:05] <bn_work> nedbat: I guess it would require that at least one of the ojbects is of that type?
[01:58:31] <graingert> bn_work: which objects?
[01:58:51] <bn_work> (not quite sure to be honest, trying to work around current limitations in the openapi-generator when python clients are generated)
[01:58:55] <nedbat> bn_work: can you give us a more complete example? Are these type declarations? Or run-time checks?
[01:59:08] <graingert> bn_work: how does this relate to six?
[01:59:20] <bn_work> nedbat: declarations
[01:59:32] <nedbat> bn_work: then what would allOf do?
[01:59:48] <bn_work> graingert: openapi-generator uses six to ensure backwards compatibility with python2 I believe?
[02:00:24] <bn_work> nedbat: ensure that all objects are of that type?
[02:00:25] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 258 seconds)
[02:00:31] *** Joins: LiftLeft (~LiftLeft@191.96.227.27)
[02:00:40] <graingert> bn_work: does it currently only work on python 3?
[02:00:41] <nedbat> bn_work: again, an example would be helpful.  all what objects?
[02:01:28] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[02:01:38] <jabberwock> holy moly. lxml and caldav are not fun
[02:01:53] <jwhisnant_> bn_work: I am missing some context, but I do find fastapi's doc openapi doc generation very helpful ...
[02:01:55] <jabberwock> And I see that Apple wrote their own "BetterElementTree" in addition to a bunch of other stuff, but it's in python2: https://github.com/apple/ccs-caldavclientlibrary
[02:02:32] <caveman> altendky: i tried  [x for x in string.Formatter().parse('asdf{lol}')] but it gives me  [('asdf', 'lol', '', None)].  i don't see how to get which is a variable, and which is a string.  both asdf and lol come as strings.  thoughts how to set them apart?
[02:02:39] <bn_work> nedbat:  this is the behavior that the openapi spec is asking of python:  https://swagger.io/docs/specification/data-models/oneof-anyof-allof-not/
[02:03:00] <graingert> bn_work: What is generated at the moment? And what's the input?
[02:03:06] *** Joins: shabius_ (~shabius@195.98.189.216)
[02:03:15] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[02:03:53] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[02:03:53] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[02:04:09] <caveman> is there any way to test if 'lol' is in f'{lol}'?
[02:04:13] <altendky> caveman: did you look at my example and what i did with parsed?  or read what it returns?
[02:04:17] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[02:04:24] <matsaman> caveman: and by 'in' you mean?
[02:04:30] <bn_work> graingert: I haven't tested with python2 so I can't confirm that it also works with it, but supposedly the "six" module acts as a shim for 2?  (again, not really certain, was just stating the versions to give the question context)
[02:04:45] <caveman> altendky: oh, you had 2nd link.  1 sec.
[02:04:49] <jabberwock> caveman: "lol" in f"{lol}"
[02:05:08] <graingert> bn_work: Yes it's a compatibility layer
[02:05:25] <altendky> jabberwock: that doesn't work
[02:05:43] <altendky> for what they want
[02:05:44] <bn_work> jwhisnant_: is FastAPI compatible with https://openapi-generator.tech/ 's + Swagger?
[02:06:06] <jabberwock> >>> lol = "lol"
[02:06:07] <jabberwock> >>> lol in f"{lol}"
[02:06:08] <jabberwock> True
[02:06:10] <bjs> caveman: the f"" strings are special because the underlying format string doesn't exist
[02:06:22] <jabberwock> they need to be more wordy then :P
[02:06:27] <altendky> jabberwock: yes, it is valid code and depending on values can return true.  it doesn't relate to what they...
[02:06:33] <sartan> I haven't found any libraries that can take a jsonschema and make a good fastapi/marshmallow object out of them
[02:06:37] <altendky> well, i mean it is a continuing discussion and they tagged me so...
[02:06:41] <sartan> everything works great the other way around
[02:06:42] <jabberwock> oh my bad
[02:06:42] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1006) (Ping timeout: 256 seconds)
[02:06:56] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 258 seconds)
[02:07:36] <caveman> altendky: can't get the code from 2nd link.
[02:08:01] <bn_work> graingert: currently, even with openapi-generator's latest version (v5), in the generated classes it generates empty sets, ex:  `openapi_types = { }`, `attribute_map = { }`
[02:08:09] <caveman> altendky: error.  ide not working correct.y.
[02:08:17] <altendky> caveman: clicking `code` under `partial format` doesn't work?  hum, good deal, just a sec
[02:08:30] <caveman> yes.  that's when i get the error
[02:08:36] *** Quits: matkor (~matkor@91.198.89.207) (Remote host closed the connection)
[02:09:16] <jwhisnant_> bn_work: fastapi generates OpenApi 3 docs by default (but I think you can tell it to do version 2 instead) ...
[02:09:17] <bn_work> graingert: excerpted input from `openapi.json` is something like:  `"FooReferenceCreate": { "allOf": [ { "$ref": "#/components/schemas/ReferenceCreate" } ] }`
[02:09:23] <bjs> caveman: you always get 4 things from the parse() the 2nd is always the field name
[02:09:30] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[02:10:01] <altendky> caveman: this isn't the originally linked code, but it is the relevant bits of it.  https://bpa.st/GCAA
[02:10:02] <caveman> bjs: oh, got it.
[02:10:51] <caveman> thanks altendky
[02:11:09] <bn_work> jwhisnant_: so is it compatible though?  and does it support cardinality specs of openapi for python client generation?
[02:11:29] <jwhisnant_> bn_work: (I am assuming you are writing a web service, and need openapi docs ... but I missed the initial part of your question)
[02:11:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[02:12:18] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 258 seconds)
[02:12:22] *** Joins: chaosite (~chaosite@user/chaosite)
[02:12:47] <altendky> caveman: actually, this is a better example https://bpa.st/LIOQ
[02:13:55] <bn_work> jwhisnant_:  well, my colleagues are writing it- or have already written it :) (yeah, I know order is backwards and ideally it should flow from the spec).  The OpenAPI spec is currently being used to generate clients in various languages to interface with our REST API
[02:13:56] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[02:13:57] <jwhisnant_> bn_work: I know it generated oneOf in the OpenAPI doc when we had an endpoint that accepted one of 2 possible request formats, so yes (as far as I know)
[02:14:19] <bn_work> nedbat: did the spec link from Swagger help?
[02:14:49] <nedbat> bn_work: my attention is divided, i didn't look at the spec
[02:15:09] *** Quits: greedom (~greedom@2001:16b8:2ea3:f600:f0c7:9aa0:b86a:baef) (Remote host closed the connection)
[02:15:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[02:16:06] <bn_work> jwhisnant_: is https://fastapi.tiangolo.com/ this it?
[02:16:25] <bn_work> s/is//
[02:16:29] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[02:16:42] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[02:16:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[02:16:56] <jwhisnant_> bn_work: yes - it uses pydantic for type hinting which has the side effect of building the docs ...
[02:17:07] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:19:06] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:19:56] *** Quits: Memory (~Wei@143.198.78.64) (Quit: leaving)
[02:20:18] <altendky> bjs: not even a named tuple :[
[02:20:33] <bjs> altendky: I'm guessing oversight?
[02:20:41] <bjs> the docs give each field a name
[02:20:46] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:4946:5dd3:ec06:e088)
[02:20:49] <bn_work> jwhisnant_: wait... does FastAPI generate *clients* in different languages?  or is this just a framework to generate standardized API code, for just python?
[02:20:58] <sybariten> Is it legal to have an if/elif/ without else?
[02:21:24] <sartan> yes
[02:21:45] *** Joins: hafat (~hafat@95.70.167.173)
[02:21:51] <jwhisnant_> bn_work: it is a framework to create a python REST API. It sounds like "the reverse" of what you want.
[02:22:22] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[02:23:23] <bn_work> jwhisnant_:  ok, it sounds like it's just python specific, which might still help
[02:23:40] <jwhisnant_> bn_work: FastAPI is : I want to implement a server, and writing OpenAPI docs is a pain. You have an OpenAPI doc, you wish you had a server that implemented it.
[02:23:54] <bn_work> the problem right now is openapi-generator doesn't know how to deal with these polymorphic openapi specs
[02:24:19] <jwhisnant_> I have tried openapi generators before ... and mostly gave up ...
[02:24:45] <bn_work> yes, writing in openapi spec is definitely a PITA, lol, especially in .json ðŸ˜¬
[02:25:12] <bn_work> jwhisnant_: oh, because of the above?
[02:25:28] <bjs> sybariten: this sounds like one of those loaded questions where you're getting a weird error
[02:25:31] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:25:49] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[02:26:36] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:27:18] <jwhisnant_> bn_work: do you need clients in multiple languages to provide to $others, or do you want a back-end stub of a service ?
[02:27:38] *** Quits: cer-0 (~cer-0@189.228.172.244) (Ping timeout: 258 seconds)
[02:27:45] <bn_work> jwhisnant_: former
[02:28:19] <jwhisnant_> bn_work: pity, if the latter this seemed to work with what little I tested ... https://github.com/stoplightio/prism
[02:28:48] *** Joins: chaosite (~chaosite@user/chaosite)
[02:29:05] *** Joins: nbin (~nbin@user/nbin)
[02:29:56] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[02:30:29] *** Joins: qlixed (~qlixed@152.170.36.244)
[02:30:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:31:34] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[02:32:31] <bn_work> jwhisnant_:  so is my interpretation of FastAPI correct?  ie:  it generates a python client based on the input-ed openapi spec?  or does it generate a server?
[02:33:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[02:33:11] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:33:46] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[02:34:27] <bn_work> if the latter, I guess I'm back to my original question, ie:  how do I implement support for polymorphism/cardinality checking for objects in python
[02:35:40] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[02:35:50] <bn_work> hmm, guess they don't have a channel on libera :(
[02:36:28] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:37:36] *** Quits: noneco (~noneco@dslb-188-096-064-125.188.096.pools.vodafone-ip.de) (Remote host closed the connection)
[02:38:52] *** Joins: ice9 (~ice9@user/ice9)
[02:39:28] *** Joins: georgios (~georgios@2a02:587:a02d:d058:9d2e:9329:74ac:e3fb)
[02:39:59] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[02:40:27] *** Joins: goldfish (~goldfish@user/goldfish)
[02:40:38] <bn_work> ugh, discord (and a deprecated gitter channel):  https://fastapi.tiangolo.com/help-fastapi/#join-the-chat
[02:42:09] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f8bb:ce51:4b48:3fbe) (Remote host closed the connection)
[02:42:34] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:43:04] <mefistofeles> bn_work: oh noes
[02:43:21] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[02:44:03] *** Joins: chaosite (~chaosite@user/chaosite)
[02:44:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 276 seconds)
[02:47:09] <SnoopJ> bn_work, you have FastAPI backwards. You write server code, it generates an OpenAPI spec for you.
[02:47:11] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[02:48:43] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[02:50:09] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 276 seconds)
[02:51:16] *** Joins: goldfish_ (~goldfish@user/goldfish)
[02:52:39] <bn_work> SnoopJ: so you write your server code using "FastAPI methods" and it generates the OpenAPI spec file for you?  hmm, seems to jive with what I'm seeing here I guess?  https://fastapi.tiangolo.com/tutorial/first-steps/
[02:53:41] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:53:42] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[02:53:49] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:54:54] <SnoopJ> bn_work, yep, the framework is aware of your routes and the data they accept/produce, so it's capable of putting all that together in the format that OpenAPI specifies.
[02:58:20] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[02:58:35] *** Jefren4 is now known as Jefren
[02:58:44] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:58:44] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[02:58:59] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:59:56] *** Joins: chaosite (~chaosite@user/chaosite)
[03:00:19] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[03:01:01] <Guddu> What is wrong with this format conversion?
[03:01:02] <Guddu> logger.info('Putting Carton : %s in its group' % carton_record)
[03:01:02] <Guddu> TypeError: not all arguments converted during string formatting
[03:01:17] *** Quits: clonebaby (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 268 seconds)
[03:02:09] <Guddu> Seems alright to me but still gives this error.
[03:02:12] *** Joins: Naan` (~Naan@user/naan)
[03:03:56] *** Quits: Naan` (~Naan@user/naan) (Read error: Connection reset by peer)
[03:04:12] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[03:04:17] <Repiphany> What is carton_record
[03:04:25] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 250 seconds)
[03:04:49] <Repiphany> %s won't work for a tuple
[03:05:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:05:37] <jwhisnant_> Guddu: logger.info(f'{carton_record=}') #perhaps ...
[03:05:40] <Repiphany> (% string formatting is ugly anyway compared to .format and fstrings)
[03:05:46] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:05:55] <Guddu> My bad. It was a tuuple
[03:05:57] <Guddu> Thanks Repiphany
[03:06:08] <Guddu> THanks jwhisnant_
[03:06:31] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:06:58] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[03:07:44] <twomoon> hi Repiphany
[03:09:47] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:10:02] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f)
[03:10:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[03:11:11] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:11:40] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[03:13:38] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:b502:92f2:8a9b:7f4c) (Ping timeout: 258 seconds)
[03:13:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:46] *** Joins: chaosite (~chaosite@user/chaosite)
[03:16:35] *** Joins: Naan (~Naan@user/naan)
[03:19:31] *** Joins: hyper_dave (~hyper_dav@197.156.107.170)
[03:20:32] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[03:20:39] *** Quits: Akuli (~Akuli@87-94-109-12.bb.dnainternet.fi) (Quit: Leaving)
[03:21:17] *** Joins: goldfish__ (~goldfish@user/goldfish)
[03:21:44] <AhmedAmerican> for pagination within scrapy, do i really need to try/except the next page? i think scrapy is implemented to handle such thing . current working code --> https://bpa.st/NS2Q
[03:22:50] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 258 seconds)
[03:23:08] *** Quits: goldfish__ (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[03:24:08] *** Joins: goldfish__ (~goldfish@user/goldfish)
[03:24:26] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 272 seconds)
[03:25:14] *** Quits: georgios (~georgios@2a02:587:a02d:d058:9d2e:9329:74ac:e3fb) (Changing host)
[03:25:14] *** Joins: georgios (~georgios@user/georgios)
[03:26:03] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:27:37] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 245 seconds)
[03:28:35] *** Quits: goldfish__ (~goldfish@user/goldfish) (Ping timeout: 258 seconds)
[03:29:26] *** Joins: SuperLag (~akulbe@user/superlag)
[03:30:34] *** Joins: Celeo (~Celeo@user/celeo)
[03:30:35] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:38] *** Joins: chaosite (~chaosite@user/chaosite)
[03:35:43] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[03:39:04] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 256 seconds)
[03:40:21] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[03:41:22] *** j is now known as jess
[03:42:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[03:42:07] *** Joins: fezhead (~mrpenguin@user/mrpenguin)
[03:42:58] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[03:43:30] *** Quits: Jefren (~Jefren@70.35.67.162) (Ping timeout: 240 seconds)
[03:44:36] *** Joins: goldfish (~goldfish@user/goldfish)
[03:44:49] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[03:46:00] *** Joins: Jefren (~Jefren@70.35.67.162)
[03:46:22] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:46:48] *** Joins: goldfish (~goldfish@user/goldfish)
[03:48:12] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[03:49:06] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[03:51:18] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:51:35] *** Joins: dre (~dre@2001:8003:c932:c301:28ee:7f92:679d:6e08)
[03:51:44] *** Joins: goldfish (~goldfish@user/goldfish)
[03:51:48] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:51:58] *** Joins: cdown (~cdown@163.114.131.1)
[03:52:03] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:52:05] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[03:53:45] *** Quits: palasso_ (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:54:48] *** Joins: goldfish (~goldfish@user/goldfish)
[03:55:02] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 258 seconds)
[03:55:30] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f) (Read error: Connection reset by peer)
[03:55:51] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[03:56:11] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f)
[03:56:57] *** Quits: emika (~emika@83.136.182.119) (Ping timeout: 258 seconds)
[03:58:03] *** Joins: emika (~emika@83.136.182.123)
[03:58:06] *** Quits: agrius (~somersgre@c-73-224-209-213.hsd1.fl.comcast.net) (Ping timeout: 258 seconds)
[03:58:50] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f) (Read error: Connection reset by peer)
[03:58:54] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 256 seconds)
[03:59:40] *** Joins: tims (~tims@61.69.131.46)
[04:00:09] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:35a5:dd73:dde0:23c1)
[04:02:14] *** Joins: Warped (~Warped@user/warped)
[04:03:24] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[04:03:48] <ornxka> is it okay to recurse in python? or will i run out of call stack space like in c
[04:04:09] <ornxka> specifically non-tail recursion eg return mylist + recurse()
[04:04:21] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[04:04:40] <Repiphany> Python doesn't have optimization for tail-recursion anyway
[04:04:47] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[04:05:40] <Repiphany> The recursion limit for python is kinda low but nothing inherently wrong with using recursive solutions
[04:05:57] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 245 seconds)
[04:06:23] <KombuchaKip> Does termcolor need colorama?
[04:06:58] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[04:07:06] <Repiphany> `import sys; print(sys.getrecursionlimit())`
[04:07:07] * octav1a chomps on her own tail
[04:07:21] <nedbat> ornxka: recursion is fine, just don't go more than 1000 levels
[04:07:46] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:10:22] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[04:10:42] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 240 seconds)
[04:11:35] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[04:13:10] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[04:14:23] *** Joins: srhm (~ascii@user/srhm)
[04:15:39] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[04:16:23] *** Joins: chaosite (~chaosite@user/chaosite)
[04:18:54] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 272 seconds)
[04:20:08] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[04:21:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[04:23:38] *** Joins: agrest (~user@45.76.36.123)
[04:27:10] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[04:27:42] *** Joins: y1n (~y1n@84-115-65-193.wifi.dynamic.surfer.at)
[04:29:09] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[04:30:04] <SnoopJ> Repiphany, kinda low for which use-cases? 1000 is pretty deep, to me.
[04:30:12] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[04:30:44] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[04:31:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:32:39] *** Joins: georgios (~georgios@user/georgios)
[04:32:58] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[04:33:39] <nedbat> Repiphany: 1000 is fine for recursive structures. it's not enough for iterative structures.
[04:34:18] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[04:35:38] <SnoopJ> nedbat, because of all the __iter__ frames?
[04:35:44] <mefistofeles> \
[04:35:53] <SnoopJ> or __next__ probably
[04:35:55] *** Joins: agrius (~somersgre@c-73-224-209-213.hsd1.fl.comcast.net)
[04:36:01] *** Quits: SteelGreyhound (~SteelGrey@176.248.140.52) (Quit: Leaving)
[04:36:22] <nedbat> SnoopJ: no, because iterative structures (like lists) can easily be longer than 1000.  But recursive structures (html tags, directories, etc) are rarely deeper than 1000.
[04:36:34] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:37:33] <SnoopJ> That's kind of profound.
[04:38:00] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-193d-7426-34d7-d076.res6.spectrum.com) (Read error: Connection reset by peer)
[04:38:26] <nedbat> i got that distinction from SICP
[04:38:48] <SnoopJ> nedbat, I'm not entirely sure what the extra call frames are, though. What kind of method is being called? A signal propagator or something?
[04:39:00] <grym> nedbat: i got some SICP vibes from the latest dabeaz talk
[04:39:02] <nedbat> SnoopJ: sorry, which extra frames?
[04:39:07] <nedbat> grym: i got partway through it
[04:39:09] <grym> ... and then realised where he was going with it, and like yes of course
[04:39:10] <SnoopJ> nedbat, the ones on the call stack
[04:39:20] <nedbat> SnoopJ: when?
[04:39:21] <SnoopJ> that are causing us to hit the limit and go oof ouch
[04:39:36] <Repiphany> Some naive recursive algorithm over pixels in a small image could easily reach 1000
[04:39:48] <nedbat> Repiphany: that's an iterative structure.
[04:40:33] <Repiphany> Yeah, but that doesn't mean someone won't try to write something recursive to solve it
[04:40:38] <nedbat> Repiphany: true
[04:40:48] * SnoopJ makes a note to look up "iterative structure" when his computer is done being on fire again.
[04:41:12] <nedbat> i think SICP uses the terms "recursive process" and "iterative process"
[04:43:39] <SnoopJ> I always think of iteration as being "side-to-side", i.e. my program iterates a structure and spins up some calls on the data it finds at each step, then moves on. I don't know why that would ever get deeper, but I think I'm not understanding "iterative" properly.
[04:44:14] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:44:42] <nedbat> SnoopJ: the classic recursive program is to find the length of a linked list.  That's an iterative structure, but it can be done with recursive code.
[04:46:18] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:46:46] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Ping timeout: 272 seconds)
[04:48:49] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:49:05] *** Quits: agrius (~somersgre@c-73-224-209-213.hsd1.fl.comcast.net) (Ping timeout: 258 seconds)
[04:49:08] *** jess is now known as sandcat
[04:49:48] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:50:06] *** Joins: vicfred (~vicfred@user/vicfred)
[04:51:43] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:51:59] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:52:08] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:52:25] <TML> grym: What's this "latest dabeaz talk" you speak of? EuroPython 2021?
[04:52:32] <grym> TML: yeah
[04:52:50] <TML> Cool - I haven't checked it out yet, but it's in the queue
[04:52:53] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[04:53:14] <grym> i was amazed he refrained from saying The Names until the end, heh
[04:53:34] <grym> it's not a bad style
[04:53:46] <sybariten> I don't know if it's possible to make such a broad generalization as this, but I somehow always feel that it's better to write a function that returns something, and use print(function) than to explicitly print from inside the function. Any truth to this?
[04:54:06] <grym> sybariten: i'd agree to the spirit of that, absolutely
[04:54:07] <SnoopJ> nedbat, so what is it about the structure that inherently makes us create deep call stacks? Or is it that people tend to search them this recursive way, but the links in the data are longer than the stack limit is deep?
[04:54:19] <grym> sybariten: the obvious answer why is "it's a looot easier to test!"
[04:54:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:54:47] * SnoopJ is thinking of graph problems where you might have the Visitor pattern
[04:54:50] <sybariten> grym: ok. Cause i wrote one now that does a for loop with printing at the end and i dont really know how to return stuff, instead....
[04:54:50] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[04:55:09] <grym> sybariten: make a list, append to it in the loop, return the list full of stuff
[04:55:24] <grym> sybariten: paste it?
[04:55:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:55:30] <sybariten> aha....  hmm i see
[04:56:17] *** Joins: brabrax (~brabrax@user/brabrax)
[04:56:36] <sybariten> grym: i dunno if this makes a lot of sense without seeing the actual dictionaries , but maybe....   https://bpa.st/QM2A     you can see i have left the original return-thing as a comment there also
[04:56:49] <sybariten> which was before i changed the routine a little
[04:57:52] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:57:52] <grym> sybariten: that return's fine, you just return a list of tuples.
[04:58:34] <sybariten> grym: buut.... i'm printing now? not actually returning?
[04:58:44] <grym> sybariten: now you are printing and returning None
[04:58:56] *** Joins: Wulf (~Wulf@user/wulf)
[04:59:09] <grym> sybariten: i'd return the list instead
[05:00:12] <sybariten> grym: so basically i need the for-loop to add something to a list?
[05:00:33] <grym> sybariten: no, you have it already on line 15
[05:01:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:01:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:01:54] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[05:02:03] <sybariten> grym: no, but, uh... that one returns things that are integers only (or looks like integers...)  thats why i'm doing the call to the getcountrybyid function also - i need to get a country name from an id number
[05:02:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[05:03:27] <grym> sybariten: oh, then yeah, make a loop
[05:03:53] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[05:04:05] <grym> sybariten: https://bpa.st/KSFQ e.g.
[05:07:05] *** Joins: BernieMont (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab)
[05:07:19] <nedbat> SnoopJ: right: using a recursive function to walk a linked list means you get a call frame for each element of the list (because Python doesn't do tail-call elimination)
[05:08:48] <SnoopJ> nedbat, hmm, okay, I think I get it. In languages with TCO, a tail call is a natural tool and the compiler can magick the call away.
[05:09:16] <nedbat> SnoopJ: exactly. TCO makes a recursive function behave more like an iterative one.
[05:09:40] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:09:58] <meejah> sometimes "exactly like", depending on the compiler etc
[05:09:59] <sybariten> grym: thank you!  I actually solved it (almost) like that before i looked at your paste. I have to admit i am still a bit confused by one thing though....
[05:11:33] *** Quits: flyback (~flyback@2601:540:8201:1e60:8dfc:4aa1:a0b2:4985) (Remote host closed the connection)
[05:12:10] <AhmedAmerican> why my spider never reach the last page ? https://bpa.st/GJ3Q it's extracting 475 items of 500. last page is not extracted
[05:12:13] <sybariten> or, well not really confused, but... thingking about one thing. In my first routine, the one where i explicitly used print, and that i wanted to change, i got a somewhat pretty output with one country and one number per line, ofcourse. Because of the .format thing. Now, i get a list instead. Actually, between yours and mine solution, i get two different looking lists:
[05:12:21] *** Joins: flyback (~flyback@2601:540:8201:1e60:bcb9:12e:e899:e26)
[05:12:44] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[05:12:51] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:13:10] <grym> sybariten: use print() when you want to display information on stdout / a gui pane / whatever, and format it as you please
[05:13:10] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[05:13:27] <grym> sybariten: pass data between functions as values you return from functions
[05:13:31] *** Joins: Naan (~Naan@user/naan)
[05:14:19] <sybariten> grym: below the code here i have pasted three examples of how it looks. notice that i have your suggestion and my suggestion both in the code, one commented
[05:14:22] <sybariten> https://bpa.st/RPCA
[05:15:17] <grym> sybariten: yes.  my approach returns structured data, which i think is the most appropriate for between-function data passing.  you'd want to have an additional function (or code in an existing one) that takes that data and print()s it as you were doing before
[05:15:21] <sybariten> if my goal is actually to get something looking like the first row by row list, what's the best way? And what is essentially the difference between yours and my lists there, the data types?
[05:15:32] *** Quits: y1n (~y1n@84-115-65-193.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[05:15:50] <sybariten> ok, i got some answers there. Any suggestions for how to print it?
[05:15:59] <grym> sybariten: you know how to print it, you were doing fine before :)
[05:16:10] <sybariten> aha hm hm hm
[05:16:21] <grym> sybariten: i just think you were printing it in the wrong place
[05:17:36] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:18:48] *** Joins: P1RATEZ (piratez@user/p1ratez)
[05:19:51] *** Joins: euouae (~euouae@user/euouae)
[05:19:56] <euouae> Hello does anyone know how TUF works with pypi?
[05:20:33] <sybariten> is this where i want to use * and unpacking grym?  I also don't want to overdo things here....
[05:22:12] <grym> sybariten: i don't think you'd need to.
[05:29:11] *** Joins: y1n (~y1n@84-115-64-125.wifi.dynamic.surfer.at)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:43] <sybariten> grym: heres code that works, with the dicts included. But i'm still at a loss for how to get more "pretty" printout, in the end    https://bpa.st/ON3Q
[05:30:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:31:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:31:31] <grym> sybariten: "pretty" tabular output makes me ususally think of https://github.com/astanin/python-tabulate
[05:33:49] <sybariten> grym: oh, no i dont need to be _that_ pretty, with headers or tab stops or anything.... i just need        Armenia 342.34
[05:34:13] *** Joins: vlm (~vlm@user/vlm)
[05:34:34] *** Joins: bigRoo (~user@131.236.55.20)
[05:35:08] <grym> sybariten: then `for country, count in getSortedList: print(f'{country} {count}')` should do
[05:35:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[05:36:56] <sybariten> ah, ok so it has a notion of two different things coming out , with every  ('Australia', 391.59)
[05:37:10] <sybariten> as in, it can map two different things to that
[05:37:13] <grym> yeah, unpacking is nice there
[05:37:38] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[05:37:43] <grym> you could do `for listItem ... print(f'{listItem[0]} {listItem[1]}'), but ew, why
[05:37:43] <sybariten> and insted of f' style one can just as well do .format , right?
[05:37:48] <grym> you could
[05:37:59] <grym> it's slower, though :)
[05:38:03] <sybariten> really?
[05:38:06] <grym> (not like that matters at all, but yes)
[05:38:09] <sybariten> oh
[05:38:49] <sybariten> like, to another "ordo-level", or just a little ?
[05:39:21] <grym> just a little
[05:39:28] <sybariten> ok cool
[05:39:37] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:40:39] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[05:40:52] *** Joins: kevr (~kevr@user/kevr)
[05:40:54] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:41:45] *** Joins: P1ro_ (~quassel@user/p1ro)
[05:42:09] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:42:09] *** brabrax_ is now known as brabrax
[05:43:08] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[05:43:49] <sybariten> OK now it works just as i want it to, and its time for me to hit the sack. Thanks for all the helpful explanations as usual grym !
[05:43:54] <grym> nn
[05:45:18] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[05:49:13] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:50:59] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:52:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[05:53:21] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[05:53:29] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Ping timeout: 258 seconds)
[05:53:58] *** Joins: Naan` (~Naan@user/naan)
[05:54:34] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:55:13] *** Joins: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00)
[05:56:29] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:57:20] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 256 seconds)
[05:57:24] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:4946:5dd3:ec06:e088) (Read error: Connection reset by peer)
[05:59:08] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:51c5:1e5d:5111:f0dd)
[06:01:24] *** Joins: chaosite (~chaosite@user/chaosite)
[06:02:01] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:04:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[06:06:08] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[06:07:24] *** Joins: Maple (uid10029@user/maple)
[06:10:18] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[06:12:10] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[06:14:14] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c62:3100:48fe:b07b:f21f:4d1)
[06:15:15] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[06:15:31] *** Quits: y1n (~y1n@84-115-64-125.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[06:15:43] *** Quits: yogoyo (~paddy@user/yogoyo) (Ping timeout: 258 seconds)
[06:16:07] *** Joins: yogoyo (~paddy@user/yogoyo)
[06:16:15] *** Joins: infi (~infi@user/infi)
[06:16:47] *** Quits: sharperguy__ (~sharpergu@2001:16b8:5cd4:c00:90a:543f:b6df:be7f) (Ping timeout: 245 seconds)
[06:17:08] *** Joins: chaosite (~chaosite@user/chaosite)
[06:18:35] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[06:19:31] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[06:20:26] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Client Quit)
[06:21:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[06:22:47] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[06:22:57] *** Joins: debayer (~debayer@2603-8000-cf00-0010-6ddf-aaca-888c-a18e.res6.spectrum.com)
[06:26:02] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[06:26:12] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[06:26:50] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[06:27:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:28:31] *** Joins: y1n (~y1n@84-115-64-125.wifi.dynamic.surfer.at)
[06:30:50] <debayer> was digging through some of the netflix python repos, and i noticed a common pattern i can't say ive seen much before -- storing arbitrary objects onto functions as attributes. for instance, a setting a `Queue`, counter, helper function, or api client as an attribute of a function that will need those things. i see it all over the place in their code, so is/was this something commonly done, or does someone at
[06:30:50] <debayer>  netflix just really enjoy doing this sort of thing
[06:31:11] *** Quits: bigRoo (~user@131.236.55.20) (Remote host closed the connection)
[06:31:47] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[06:31:55] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:32:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[06:33:00] *** Joins: chaosite (~chaosite@user/chaosite)
[06:34:06] *** Joins: gggp_ (~gggp@123.113.188.14)
[06:34:41] <gggp_>  is it possible quant trader with python?
[06:34:49] <gggp_>  is it possible quant trading with python?
[06:35:16] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:36:08] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[06:36:29] <SnoopJ> gggp_, yes
[06:37:37] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 250 seconds)
[06:37:41] <SnoopJ> debayer, the IRC bot framework Sopel does that a bunch, you decorate functions, write logic that accepts the bot and the event, and some metadata gets stashed on the function object.
[06:38:27] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[06:38:52] <debayer> so the pattern is known/used by some subset of pythonistas
[06:39:12] <debayer> that is interesting
[06:39:37] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[06:39:54] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[06:41:08] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[06:42:50] *** Joins: Fiji (~Fiji@user/fiji)
[06:43:00] <SnoopJ> well, there's stuff stashed there for Python-running-itself reasons, too
[06:43:41] <SnoopJ> "information stashed on a function object" is basically what type annotations are
[06:44:09] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 276 seconds)
[06:44:39] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (Read error: Connection reset by peer)
[06:44:56] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[06:47:03] <InPhase> gggp_: Python is the most common analysis language currently in use by quants, with sql for the data access.  C++ is the most common tool used for high-frequency trading, although a common pattern when these two are merged is to prototype analyses in Python, and then implement high speed versions of proven analyses in C++.
[06:47:52] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[06:47:57] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:47:57] *** FinnElija is now known as Guest3305
[06:47:57] *** Quits: Guest3305 (~finn_elij@user/finn-elija/x-0085643) (Killed (lithium.libera.chat (Nickname regained by services)))
[06:47:57] *** finn_elija is now known as FinnElija
[06:48:02] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[06:48:52] *** Joins: chaosite (~chaosite@user/chaosite)
[06:49:26] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[06:49:55] <gggp_> InPhase, c++ as backend?
[06:49:57] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[06:50:14] <SnoopJ> InPhase, I imagine there's probably not a small amount of quant code running on top of numpy
[06:50:34] *** Joins: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[06:50:52] <SnoopJ> production code, I mean. Maybe if it's extremely realtime all the Python would need to be carved away, but HFT is only so much of finance
[06:51:04] <gggp_> I also need a frontend to real time test my strategy
[06:51:15] <euouae> I think frontend and backend is not the right terminology
[06:51:17] <gggp_> simulating trading
[06:51:26] <gggp_> euouae, what does that mean
[06:51:28] <euouae> They're talking about writing your project in python to get the logic down and then rewriting it in C++
[06:51:29] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[06:51:37] <InPhase> SnoopJ: Yeah, the numpy/pandas/scipy/sklearn stack is going to play heavily in that.
[06:51:54] <SnoopJ> InPhase, and if you really wanna make it go brr, there are at least sane ways to do that in numpy/scipy/sklearn
[06:52:03] <SnoopJ> (pandas seems like a lost cause, just rewrite it)
[06:52:05] <gggp_> euouae, c++ can do what part of the work
[06:52:08] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[06:52:14] <gggp_> deeplearning?
[06:52:27] <InPhase> SnoopJ: It won't hit HFT requirement levels with anything Python touching it though.
[06:52:29] <euouae> I'm elaborating what SnoopJ said, which you mistook for backend
[06:52:48] <SnoopJ> InPhase, right, but HFT is just a particularly popular story to talk about, it's not really representative of all trading
[06:53:00] <gggp_> euouae, numpy ?
[06:53:19] <SnoopJ> gggp_, did we answer your question?
[06:53:22] <InPhase> SnoopJ: Well...  Actually HFT is 50% of all stock market trading.
[06:53:41] <SnoopJ> InPhase, in terms of number of trades?
[06:53:59] <InPhase> SnoopJ: Yes.  And thus probably dollar amount traded too.
[06:54:04] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[06:54:07] *** Quits: infi (~infi@user/infi) (Quit: Leaving)
[06:54:27] <gggp_> cannot follow
[06:54:36] <ali1234> i would expect it to be a lot more than 50%
[06:54:49] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[06:55:09] <SnoopJ> InPhase, I would be surprised if it didn't have a high volume. The whole point is to trade at...a high frequency :)
[06:56:02] <SnoopJ> gggp_, the answer to your original question is "yes, Python is used in finance"
[06:57:15] <InPhase> More precisely, used a lot.
[06:57:36] * SnoopJ nods
[07:00:02] *** Joins: cdown (~cdown@163.114.131.1)
[07:01:48] *** Quits: nubonix (uid492751@id-492751.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[07:03:02] *** Joins: greyhash (~greyhash@2601:2c6:c100:1f00::b0a5)
[07:05:28] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 272 seconds)
[07:05:49] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[07:07:36] *** Quits: hafat (~hafat@95.70.167.173) (Ping timeout: 256 seconds)
[07:10:39] <gggp_> SnoopJ, yep,but what can c++ do
[07:11:08] <gggp_> lower level calculation?
[07:11:41] <gggp_> InPhase, is there sklearn examples
[07:11:51] <euouae> C++ is faster
[07:11:56] <gggp_> euouae, sure
[07:12:14] <debayer> gggp_  there's already tons of very advanced implementations of such platforms. check out the code for `hummingbot` if you want to see possibly the best python implementations of tons of crypto/trading stuff -- they make looooots of use of cython, support most exchanges, has a ui, overall just a really nice codebase
[07:12:37] <gggp_> euouae, if you trading on real time ,sync with the market data freshing
[07:12:48] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[07:13:20] <debayer> guessing cython was there to speed up a lot of the calculations and whatnot
[07:13:27] *** Joins: cer-0 (~cer-0@189.228.172.244)
[07:13:45] <SnoopJ> gggp_, that would be a good question for #c++-basic
[07:14:25] <gggp_> btw, what is HFT :(
[07:14:33] <SnoopJ> high-frequency trading
[07:14:35] <debayer> i'm not entirely sure what the technical definition of HFT is, but i've had bots doing hundreds of trades/second in a single process
[07:14:51] <gggp_> debayer, github?
[07:14:54] <debayer> without anything fancy. also nothing crazy at all to calculate which may be where the real work is i dont know
[07:15:19] *** Quits: y1n (~y1n@84-115-64-125.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[07:15:54] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 258 seconds)
[07:17:17] <debayer> gggp_ for what, my bots? not public at present, but literally just asyncio and async exchange api clients and async everything else. hummingbot is certainly on github though
[07:18:46] <gggp_> :)
[07:19:07] <debayer> oh, i misread and HFT wasnt asked about to begin with haha
[07:20:09] <debayer> well in that case, gggp_ the big trading strategy platforms that have been around are zipline and catalyst, not sure how active they are these days though. but i am sure still good resources
[07:20:32] *** Joins: chaosite (~chaosite@user/chaosite)
[07:20:34] <debayer> as far as huge widely deployed platforms for quant trading written in python
[07:20:45] <gggp_> debayer, hundreds of trades/second , how fast the quant calculation
[07:21:10] <debayer> the trades arent super difficult, but the calculations could be
[07:21:35] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:22:14] <gggp_> debayer,maybe some optimized algorithm?
[07:22:22] <debayer> trades are just http requests, pretty easy to get a process to do 1000+/sec with asyncio, but heavy math in between may not be so good
[07:22:35] <gggp_> yep
[07:22:43] <InPhase> gggp_: This is a highly valuable read for your interests if you haven't yet gotten familiarity with these tools.  It goes through all the prerequisite tools and ends up at scikit-learn.  https://scipy-lectures.org/
[07:22:51] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[07:24:07] *** Joins: Gudddu (~Guddu@178.238.11.89)
[07:24:16] <gggp_> InPhase, is the expectable to quant with sklearn?
[07:24:37] <debayer> if your goal is to learn this all from scratch, that is not a bad place to start
[07:24:42] <debayer> it however will be a long road
[07:24:53] *** Quits: Gudddu (~Guddu@178.238.11.89) (Client Quit)
[07:24:58] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[07:25:03] <gggp_> i can  overfit
[07:25:04] <debayer> if your goal is to quickly start trading and testing strategies, i would try some existing stuff
[07:25:06] <gggp_> it can  overfit
[07:27:06] <debayer> either way, even if you dont use hummingbot, their code is a fantastic resource, truly: https://github.com/CoinAlpha/hummingbot
[07:27:10] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:27:47] *** Quits: Guddu (~Guddu@67.73.237.27) (Ping timeout: 258 seconds)
[07:28:30] <InPhase> gggp_: There are a large variety of models used by quants, and different shops will have different favored models.  If you want to professionally enter the field, then yes, get broad familiarity with those tools as they're currently important to the field as a whole.  That doesn't mean they'll be the things used at every place quants are working.
[07:28:36] *** Joins: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at)
[07:28:43] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:28:53] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[07:29:12] <gggp_> gotcha
[07:32:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:32:30] *** Quits: jrjsmrtn_ (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[07:33:32] *** Quits: y1n (~y1n@84-115-64-39.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[07:33:47] *** Joins: audio (~audio@2603-8081-1800-00ad-a8e4-b5b0-4784-918d.res6.spectrum.com)
[07:34:47] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-235.dsl.scarlet.be)
[07:35:10] *** Quits: m33k (dexter@user/m33k) (Quit: WeeChat 2.3)
[07:36:59] *** Joins: chaosite (~chaosite@user/chaosite)
[07:37:25] *** Joins: upsala (~zcb@185.213.155.160)
[07:41:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[07:41:59] *** Quits: yuesbeez (uid458354@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:43:53] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[07:44:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 265 seconds)
[07:44:19] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[07:45:41] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[07:48:06] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[07:48:42] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[07:49:22] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[07:50:58] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[07:52:15] *** Joins: chaosite (~chaosite@user/chaosite)
[07:54:53] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[07:55:59] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[07:56:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[07:57:27] *** Joins: MercilessDeth (~brad@136.49.61.2)
[08:01:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:32] *** Joins: ozoned (~odoood@2601:c8:c003:a550::8)
[08:02:11] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Read error: Connection reset by peer)
[08:02:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:02:38] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[08:04:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[08:06:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[08:07:28] <mrec> I'm getting this one:
[08:07:30] <mrec> python captcha-decoder.py
[08:07:30] <mrec> Traceback (most recent call last):
[08:07:30] <mrec>   File "captcha-decoder.py", line 17, in <module>
[08:07:30] <mrec>     from code.functions.helpers import predict_captcha_text
[08:07:32] <mrec> ModuleNotFoundError: No module named 'code.functions'; 'code' is not a package
[08:07:42] <mrec> ls code/functions
[08:07:42] <mrec> helpers.py
[08:07:58] <mrec> from code.functions.helpers import predict_captcha_text
[08:08:09] *** Joins: chaosite (~chaosite@user/chaosite)
[08:08:11] <mrec> any idea how I can fix that?
[08:08:25] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[08:08:35] <debayer> mrec do you have a `code.py` somewhere? it is conflicting with stdlib
[08:08:42] <debayer> or rather a code package
[08:09:30] <Repiphany> touch code/__init__.py
[08:09:51] <debayer> ^
[08:10:18] <mrec> Repiphany: that's it thanks!
[08:10:29] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:10:34] *** Quits: cer-0 (~cer-0@189.228.172.244) (Ping timeout: 240 seconds)
[08:11:18] *** Quits: greyhash (~greyhash@2601:2c6:c100:1f00::b0a5) (Ping timeout: 252 seconds)
[08:12:10] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[08:12:13] <debayer> mrec yeah all imports should be from packages, i.e. a folder with an __init__.py, and then there being a `code` module in stdlib is why you get an error implying that it exists but isnt what you are expecting
[08:12:16] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:12:31] *** Joins: cer-0 (~cer-0@189.228.172.244)
[08:12:38] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[08:16:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[08:17:41] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:23:02] *** Quits: emika (~emika@83.136.182.123) (Ping timeout: 245 seconds)
[08:23:38] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[08:23:51] *** Joins: emika (~emika@185.207.249.129)
[08:23:57] *** Joins: chaosite (~chaosite@user/chaosite)
[08:27:02] *** Ellenor is now known as AmyMalik
[08:27:49] <mrec> debayer: I downloaded some package from github to decode captchas
[08:28:15] <mrec> that one didn't work, is that __init__.py requirement bound to a newer python version or was that optional at some point?
[08:28:21] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[08:28:52] *** Quits: cer-0 (~cer-0@189.228.172.244) (Ping timeout: 245 seconds)
[08:30:53] *** Joins: rany_ (~rany@user/rany)
[08:31:24] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[08:33:23] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:33:26] *** Quits: justyb11 (~justyb@2601:483:500:3ea:4dc4:f6e0:8f19:7ed8) (Quit: Leaving)
[08:33:42] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:35:30] *** Quits: pgib (~textual@173.38.117.68) (Ping timeout: 252 seconds)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:50] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:40:23] *** Joins: chaosite (~chaosite@user/chaosite)
[08:40:34] *** Quits: ozoned (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[08:43:25] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Quit: WeeChat 3.2)
[08:45:32] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[08:46:58] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[08:47:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[08:47:59] *** Joins: trace987 (~trace@95.90.106.112)
[08:52:45] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[08:55:40] *** Joins: chaosite (~chaosite@user/chaosite)
[08:56:58] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 256 seconds)
[09:00:10] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[09:00:29] *** Joins: fury (uid193779@id-193779.brockwell.irccloud.com)
[09:04:06] <fury> i'm running an interactive python script and hoping to just lean on the REPL / shell so they can just type python at the terminal (call functions on demand, etc.) - it's to send and receive a message over a network. i have a thread running that will print the response it receives, but, is there a way to get that to print above the prompt somehow?
[09:04:55] <fury> for just the prompt i can kinda fake it by sending a newline and then ending with "\n>>> " instead of "\n", but if they're in the middle of typing a command and a periodic message comes in, that idea splits up their "command" on the screen (Even though to the actual input itself, it's still there)
[09:08:57] *** Quits: audio (~audio@2603-8081-1800-00ad-a8e4-b5b0-4784-918d.res6.spectrum.com) (Remote host closed the connection)
[09:09:37] *** Joins: audio (~audio@2603-8081-1800-00ad-1662-b24b-855a-4684.res6.spectrum.com)
[09:09:52] *** Joins: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[09:11:30] *** Joins: chaosite (~chaosite@user/chaosite)
[09:11:48] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:15:23] *** Joins: junktext (~junktext@109.201.152.178)
[09:16:16] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[09:21:49] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:26:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[09:27:52] *** Joins: chaosite (~chaosite@user/chaosite)
[09:28:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Remote host closed the connection)
[09:28:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[09:29:52] *** Quits: dgdg (~dg_dg@84.252.92.8) (Remote host closed the connection)
[09:31:37] *** Joins: sandeepk (~sandeepk@223.130.30.247)
[09:32:01] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[09:32:18] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[09:32:58] <dale> nedbat: Thanks for your *2003* post on words you can make with hex, I needed some example dwords. ;)  I'm surprised "password cracking" wasn't mentioned in the post!
[09:32:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:34:52] *** Quits: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f) (Remote host closed the connection)
[09:36:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[09:36:58] *** Quits: sartan (~sartan@user/sartan) (Quit: WeeChat 1.9.1)
[09:37:04] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[09:37:06] *** Quits: agrest (~user@45.76.36.123) (Ping timeout: 252 seconds)
[09:37:48] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:38:33] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[09:38:55] *** Joins: Fiji (~Fiji@user/fiji)
[09:39:05] *** Joins: Wulf (~Wulf@user/wulf)
[09:40:52] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[09:41:05] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:43:43] *** Joins: chaosite (~chaosite@user/chaosite)
[09:45:39] *** Joins: dvx (~dvx@185.63.97.64)
[09:46:03] <shlomif> fury: hi,you can do something based on ipython
[09:47:05] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[09:47:50] <fury> oh, so many neat toys i've never heard of before
[09:47:54] <fury> thanks, i'll have to check that out!
[09:48:28] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[09:49:37] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 258 seconds)
[09:50:07] <fury> yes, that's perfect. it keeps the prompt intact! awesome
[09:50:12] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[09:50:19] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[09:52:17] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[09:52:27] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[09:52:29] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:53:14] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[09:53:50] *** Quits: junktext (~junktext@109.201.152.178) (Ping timeout: 258 seconds)
[09:53:57] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: Ping timeout (120 seconds))
[09:54:17] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[09:54:47] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Ping timeout: 250 seconds)
[09:57:25] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[10:00:10] *** Joins: chaosite (~chaosite@user/chaosite)
[10:02:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:04:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:04:34] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[10:05:46] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:07:51] *** Joins: frost (~frost@59.71.241.179)
[10:12:14] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 258 seconds)
[10:12:45] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af)
[10:13:22] *** Joins: P1ro (~quassel@user/p1ro)
[10:15:09] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[10:15:27] *** Joins: chaosite (~chaosite@user/chaosite)
[10:15:29] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:35a5:dd73:dde0:23c1) (Remote host closed the connection)
[10:15:30] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 240 seconds)
[10:16:40] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[10:16:42] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[10:17:28] *** Joins: trace987 (~trace@95.90.106.112)
[10:19:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[10:23:14] *** Quits: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[10:23:56] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[10:25:24] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[10:27:56] *** Joins: Fiji (~Fiji@user/fiji)
[10:27:57] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:29:00] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:29:11] *** Joins: anandprabhu_ (~anandprab@86.106.121.228)
[10:30:06] *** Joins: c10l (~c10l@89.34.167.207)
[10:31:15] *** Joins: chaosite (~chaosite@user/chaosite)
[10:31:40] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:31:47] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Ping timeout: 258 seconds)
[10:31:47] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[10:31:51] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:41d5:46a0:e7fc:de65)
[10:32:53] *** Joins: cheater (~Username@user/cheater)
[10:33:45] *** Joins: P1ro_ (~quassel@user/p1ro)
[10:34:01] *** Joins: iflema (~ian@user/iflema)
[10:34:28] *** Quits: gggp_ (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[10:34:51] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[10:35:57] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 250 seconds)
[10:37:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[10:37:14] *** Joins: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk)
[10:38:44] <terabyte> hey, I'm trying to build a wheel, and I've got this error and unsure how to proceed https://gist.github.com/danielburrell/874d3ec9262b1d0cae846171b50812a4
[10:40:34] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b0eb-14a2-3229-7a8f.res6.spectrum.com) (Ping timeout: 240 seconds)
[10:42:08] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 258 seconds)
[10:44:16] *** Quits: Fiji (~Fiji@user/fiji) (Remote host closed the connection)
[10:45:55] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:27] *** Joins: seednode (~seednode@user/seednode)
[10:46:29] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:47:08] *** Quits: Maple (uid10029@user/maple) (Quit: Connection closed for inactivity)
[10:47:45] *** Joins: chaosite (~chaosite@user/chaosite)
[10:48:21] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[10:48:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dd8f-ae40-8c90-f67d.res6.spectrum.com)
[10:51:10] *** Joins: Payam (~Payam@138.106.57.131)
[10:52:16] *** Quits: theo (~theo@user/theo) (Quit: Bye)
[10:52:17] <Payam> Hi people, when packaging to .deb using my setup file, images can not be found. Do I have to add them to setup? and how do I do that? https://bpa.st/6X3A
[10:52:27] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[10:55:24] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:55:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:55:53] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[10:56:40] *** Lord_of_Life_ is now known as Lord_of_Life
[10:57:22] *** Quits: emerent (~quassel@p200300cd57058c69ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:57:31] *** Joins: emerent (~quassel@p200300cd57058cc9ba27ebfffed28a59.dip0.t-ipconnect.de)
[10:57:57] *** Joins: rendar (~rendar@user/rendar)
[10:58:23] *** Joins: iflema (~ian@user/iflema)
[10:58:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:00:11] <jinsun> Payam: yes you have to include package_data also in setup https://setuptools.readthedocs.io/en/latest/userguide/datafiles.html
[11:01:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:01:08] *** Joins: chele (~chele@user/chele)
[11:01:11] *** Joins: frost (~frost@59.71.241.179)
[11:02:58] *** Joins: chaosite (~chaosite@user/chaosite)
[11:03:34] <jinsun> terabyte: bdist_wheel is provided by the wheel package, https://pypi.org/project/wheel/, maybe you don't have that installed?
[11:06:24] <Payam> jinsun I have now added the package_data. I have the directory of images under src/package/ .  I have the source code also under src/package/.  the directory of the images is src/package/imgs/. How do I get the images in the source code? should it be ./imgs/image.png?
[11:06:35] <Payam> in the source code that is under src/package/
[11:07:52] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[11:09:44] *** Quits: LiftLeft (~LiftLeft@191.96.227.27) (Ping timeout: 258 seconds)
[11:09:45] <jinsun> Payam: relative paths will be a bad idea, you can make absolute paths using pathlib and __file__, something like `pathlib.Path(__file__).parent.joinpath("imgs", "image.png")`
[11:10:18] <jinsun> Payam: I think the preferred way is importlib.resources https://docs.python.org/3/library/importlib.html#module-importlib.resources (but I have never used that)
[11:10:59] *** Quits: mattf (~mattf@li908-138.members.linode.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:11:07] <Payam> I fixed it now. But I have a strange error now. I have specified X-Python3-Version>= 3.5 . but it looks like it wants to run on 2.7
[11:11:33] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[11:12:12] <Payam> how is this an invalid syntax? print(f"\n{'- -' * 10} ticker and local git repos built {'- -' * 10}\n")
[11:13:22] <jinsun> well if you are running on 2.7 then it is invaliid
[11:13:50] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:14:03] <jinsun> also invalid for 3.5
[11:14:09] <Payam> why?
[11:14:10] <jinsun> f stings were adding in 3.6
[11:14:14] <Payam> ah
[11:14:15] <jinsun> *strings
[11:16:20] <Payam> in what version of 3.6
[11:16:27] <Payam> Now I wrote 3.6 but it still fails
[11:17:01] *** Quits: sandeepk (~sandeepk@223.130.30.247) (Ping timeout: 258 seconds)
[11:18:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:18:30] <jinsun> wrote 3.6 where? that  X-Python3-Version thing?
[11:18:36] <Payam> yes
[11:18:50] *** Joins: chaosite (~chaosite@user/chaosite)
[11:20:27] <jinsun> hmm, maybe it is not running 3.6 even if you wrote that, no idea about how Debian handles it
[11:20:44] <jinsun> comment out that line and print(sys.version) to see what is actually running
[11:22:17] *** Quits: fezhead (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[11:23:05] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[11:23:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[11:24:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:24:57] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[11:27:03] <Payam> I can not get it. Even pylint says it is wrong syntax
[11:27:58] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[11:28:29] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:28:54] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:29:54] *** Quits: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:30:54] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[11:32:46] *** Joins: sandeepk (~sandeepk@223.130.30.5)
[11:33:25] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Remote host closed the connection)
[11:34:10] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[11:34:42] *** Joins: chaosite (~chaosite@user/chaosite)
[11:36:46] <rendar> `if isinstance(grid_type, list) or isinstance(grid_type, tuple):` i think this is silly if `grid_type` could also be a set or whatever supports the `in` opertator, how can i properly check that?
[11:37:47] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:37:58] <supakeen> How about not checking and just doing `x in argument`.
[11:38:26] <rendar> supakeen: because grid_type can also be specified as another type
[11:39:01] <rendar> e.g. f(... ignore=23) <- this will ignore only the number 23, f(..., ignore=(23, 45)) <- this will ignore 23 and 45
[11:39:12] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[11:39:15] <rendar> what is the proper object to check the 'in' operator? collections.abc.Sequence ?
[11:39:26] <supakeen> Ah, I always try not to have arguments like that :)
[11:39:55] <rendar> :)
[11:40:08] <rendar> is the right answer collections.abc.Sequence ?
[11:40:11] <supakeen> How about `if isinstance(ignore, int): ignore = [ignore]`.
[11:40:13] <supakeen> I'm not sure.
[11:40:56] *** Quits: ckdcreation (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[11:41:12] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[11:41:43] <rendar> wtf?! sets seems not to be sequences?!
[11:42:01] <rendar> dicts aren't too
[11:42:49] <rendar> how is this possible?
[11:43:40] <supakeen> rendar: Sequences can be indexed and those can't.
[11:43:45] <jinsun> they are collections.abc.Collection
[11:44:10] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 258 seconds)
[11:44:23] <rendar> so for the 'in' operator i should check for collections.abc.Collection ?
[11:44:44] <supakeen> rendar: How about you turn it around, you expect any iterable *or* an int right?
[11:44:57] <supakeen> It seems easier to handle the int case and turn that into an iterable than the reverse :)
[11:45:17] <rendar> supakeen: i know, but too much code to change for that
[11:45:21] <rendar> i'd pass
[11:45:47] <jinsun> it is just 2 lines no?
[11:45:57] <jinsun> if isinstance(ignore, int): ignore = [ignore]
[11:46:05] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[11:46:17] *** Quits: anandprabhu_ (~anandprab@86.106.121.228) (Quit: Leaving)
[11:46:32] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[11:47:21] *** Quits: Mikro (leo@the.c0ffee.shop) (Quit: doei!)
[11:48:06] *** Joins: Deneb (~johnch@93.125.7.51.dyn.plus.net)
[11:49:39] *** Quits: NakedKing (~NakedKing@user/nakedking) (Ping timeout: 276 seconds)
[11:50:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:50:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:50:32] *** Joins: chaosite (~chaosite@user/chaosite)
[11:53:06] *** Joins: Adoi (~Adoi@user/adoi)
[11:55:07] *** Joins: palasso (~palasso@user/palasso)
[11:55:07] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 245 seconds)
[12:01:09] <dre> alright guys
[12:01:19] <dre> I'm 5 beers in and I've got something
[12:01:37] <dre> say I have a function called "add_arrays(array_one, array_two)
[12:02:24] <dre> and I have a dict that has like { 'first_names': [...], 'last_names':[....]}
[12:03:20] <dre> if I have a variable like " x =
[12:03:35] <dre> x = ['first_names', 'last_names' ]
[12:03:47] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 258 seconds)
[12:04:00] <dre> how do I mangle the x and dict to together, to get the correct *args to pass to my add_arrays ?
[12:04:11] <dre> without mentioning 'first_names' or 'last_names'
[12:04:23] <Repiphany> *[d[k] for k in x]
[12:04:34] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[12:04:50] <dre> you've got it, what a wizard.
[12:05:11] *** Joins: Leo (leo@libera.ninja)
[12:06:00] <dre> looks much simpler when you write it like that
[12:06:24] *** Joins: chaosite (~chaosite@user/chaosite)
[12:07:50] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:08:10] *** Joins: masber (~masber@178.197.196.20)
[12:08:13] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 246 seconds)
[12:10:28] <jochum> Repiphany: the * is a typo?
[12:10:43] <jochum> Repiphany: or indicates it at dict compression?
[12:10:47] <jochum> comprehension
[12:10:51] <Repiphany> No, he wanted to do something like add_arrays(*[d[k] for k in x])
[12:10:52] <dre> list expansion
[12:11:04] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[12:11:23] *** Joins: entuland (~entuland@user/entuland)
[12:12:05] <jochum> ahh I see, clear that is
[12:12:45] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[12:14:24] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[12:14:48] *** Joins: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at)
[12:15:43] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[12:16:11] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[12:16:21] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:17:41] <dre> is this the nicest way to express this? if not all([k in mapping_dict.keys() for k in keys])
[12:18:21] <Repiphany> You don't need to specify .keys()
[12:18:31] <supakeen> You can lose the `.keys()`, `[` and `]` but otherwise sure, as long as you understand that it's a hefty operation for.
[12:18:44] <supakeen> * for large amounts of keys.
[12:18:47] <dre> small dict, no need
[12:18:49] <dre> yeah
[12:19:07] *** Quits: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 258 seconds)
[12:20:04] <Repiphany> If you wanted to use sets you could do set(keys) <= set(mapping_dict)
[12:20:42] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:20:58] *** Joins: slavaqq82 (~slavaqq@sdmail.sdserver.cz)
[12:21:02] *** Quits: audio (~audio@2603-8081-1800-00ad-1662-b24b-855a-4684.res6.spectrum.com) (Ping timeout: 258 seconds)
[12:21:52] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 246 seconds)
[12:22:04] <dre> nicer but perhaps harder for juniors to understand without comment
[12:22:15] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Quit: WeeChat 2.8)
[12:22:16] *** Joins: chaosite (~chaosite@user/chaosite)
[12:23:28] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:23:34] <no_gravity> I would like to make a list similar to the output of 'find .' but I want it to not dive into dirs that contain a .git dir. Any ideas how to go about this?
[12:23:55] <Repiphany> It also might be easier to grok `if any(k not in mapping_dict for k in keys)` but probably minor
[12:24:59] <Repiphany> for root, dirs, files in os.walk(directory): if '.git' in dirs: continue
[12:25:28] <dre> oh damn. nice, perhaps that inversion is easier to understand
[12:25:32] <dre> thanks so much :D
[12:25:51] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:26:01] <Repiphany> Actually, might need to check if '.git' in root
[12:26:47] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[12:27:49] *** Joins: Naan` (~Naan@user/naan)
[12:30:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:31:57] *** Quits: yogoyo (~paddy@user/yogoyo) (Quit: WeeChat 3.0.1)
[12:32:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:33:32] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:34:20] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[12:35:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:03] <jochum> no_gravity: this looks like the right channel for that problem :)
[12:37:01] <no_gravity> jochum: Only if no easy bash solution exists.
[12:37:11] <dre> Repiphany, is there a way that I can check that one dict is wholly contained within another dict?
[12:37:20] <no_gravity> jochum: Meanwhile I think this bash solution works: find . -type d -exec sh -c 'test -e "$1/.git"' _ {} \; ! -prune -o -print
[12:37:35] <dre> like, if I have x and y, where x should be exactly like y, but /perhaps/ x has some more keys and values.
[12:37:37] *** Joins: shad (~shad@user/shad)
[12:37:53] <dre> so x contains y completely, plus more
[12:38:22] *** Joins: chaosite (~chaosite@user/chaosite)
[12:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:41] <Repiphany> no_gravity: https://bpa.st/K4YQ
[12:40:01] <Repiphany> Interestingly, modifying dirs changes where walk actually traverses
[12:40:24] <jochum> Repiphany: this prints the dir .git is in
[12:40:25] <jochum> ?
[12:40:57] <Repiphany> No, it skips over directories that have a .git folder and doesn't print any files
[12:40:58] <no_gravity> Repiphany: Cool, thanks!
[12:41:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:42:45] <jinsun> dre: `all(k in x and x[k] == y[k] for k in y)` ?
[12:42:53] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[12:42:57] *** Quits: jpic (~jpic@82.142.19.50) (Ping timeout: 276 seconds)
[12:43:06] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[12:46:00] *** Joins: ihristov (~ihristov@85.187.46.226)
[12:46:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[12:46:51] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 252 seconds)
[12:48:32] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[12:48:36] <jochum> jinsun: nice
[12:48:43] * jochum learned about all
[12:48:58] <Repiphany> If all the dictionary values are hashable you can use sets again
[12:50:00] <Repiphany> set(x.items()) >= set(y.items())
[12:51:27] *** Joins: Deknos (~someone@user/menace)
[12:52:25] *** Joins: kosh (~kosh@user/kosh)
[12:53:56] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:54:23] *** Joins: gusto (~Augustus@109.255.100.54)
[12:54:33] *** Quits: emika (~emika@185.207.249.129) (Ping timeout: 252 seconds)
[12:55:00] *** Joins: emika (~emika@185.207.249.97)
[12:55:32] *** Joins: mike18 (~geri@217-149-162-237.nat.highway.telekom.at)
[12:55:47] <mike18> hi im using guincorn now
[12:55:57] *** Joins: chaosite (~chaosite@user/chaosite)
[12:56:00] <mike18> CMD ["--workers=4", "--bind=0.0.0.0:8080", "--timeout=120", "serverApp:app"] ... any other settings i should set for it?
[12:58:16] *** Quits: slavaqq82 (~slavaqq@sdmail.sdserver.cz) (Ping timeout: 246 seconds)
[12:59:38] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[13:00:10] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[13:00:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[13:00:52] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:17] *** Quits: y1n (~y1n@84-115-65-165.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[13:02:19] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[13:03:38] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[13:04:10] *** Quits: dre (~dre@2001:8003:c932:c301:28ee:7f92:679d:6e08) (Quit: Leaving)
[13:05:57] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[13:07:29] <ApostleInTriumph> Hello. I've a numpy array of shape (N, 4). I want to select first 3 columns if last column is 1. how do i go about?
[13:07:37] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:08:34] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:08:46] *** Joins: manti7 (~manti7@176.10.104.94)
[13:09:53] <Repiphany> arr[arr[:,3] == 1][:,:3]
[13:11:04] *** Joins: georgios (~georgios@user/georgios)
[13:11:49] *** Joins: chaosite (~chaosite@user/chaosite)
[13:12:01] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[13:14:01] *** Joins: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at)
[13:14:19] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:14:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:16:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[13:19:19] <ApostleInTriumph> Repiphany thanks!
[13:20:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[13:20:42] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[13:20:48] *** Joins: akspecs (~akspecs@165.227.127.54)
[13:21:17] *** Quits: Cyp (~cyp@192038129091.mbb.telenor.dk) (Remote host closed the connection)
[13:21:17] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[13:21:41] *** Joins: Cyp (~cyp@192038129091.mbb.telenor.dk)
[13:22:16] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[13:22:51] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:24:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[13:24:36] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f)
[13:25:49] *** Joins: gloomy (~glooomyma@2001:470:69fc:105::ce00)
[13:27:40] *** Joins: chaosite (~chaosite@user/chaosite)
[13:27:54] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:41d5:46a0:e7fc:de65) (Ping timeout: 240 seconds)
[13:27:58] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:30:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 272 seconds)
[13:31:42] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:32:20] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[13:32:34] *** Quits: dld (~davidlowr@73.61.8.150) (Ping timeout: 240 seconds)
[13:33:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:34:38] *** Joins: dld (~davidlowr@73.61.9.67)
[13:36:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[13:37:53] *** Joins: mei (~mei@user/mei)
[13:39:17] *** Joins: Payam (~Payam@138.106.57.131)
[13:39:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:43:31] *** Joins: chaosite (~chaosite@user/chaosite)
[13:47:10] *** Joins: nubonix (uid492751@id-492751.charlton.irccloud.com)
[13:48:02] <nubonix> [pyqt5] why is text of self.image_label not being updated? https://bpa.st/7VQQ
[13:48:16] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[13:50:13] *** Quits: Tera (~Tera@h-85-24-240-165.A218.priv.bahnhof.se) (Quit: Leaving)
[13:50:23] <nubonix> please ignore that i spelled classification wrong just about everywhere
[13:52:46] *** Joins: Wu (~wu@158.red-83-50-192.dynamicip.rima-tde.net)
[13:53:25] <nubonix> InPhase wdym by " It won't hit HFT requirement levels with anything Python touching it though."
[13:54:32] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[13:57:35] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[13:57:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[13:58:52] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[13:59:23] *** Joins: chaosite (~chaosite@user/chaosite)
[14:00:28] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:00:40] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[14:01:16] *** Quits: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[14:01:19] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[14:02:37] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 258 seconds)
[14:02:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:03:27] *** Quits: Elzington (~Elzington@68.235.43.14) (Read error: Connection reset by peer)
[14:03:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[14:05:40] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[14:07:20] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[14:08:14] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:08:21] *** Joins: sharperguy__ (~sharpergu@2001:1438:4010:3101:10a::3133)
[14:09:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:09:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:09:51] <mav`rik> I've been looking to use aiometer in place of asyncio. However, the documentation doesn't appear to describe how to handle an exception occurring in the function being applied (for example, fn passed to aiometer.amap(fn, some_collection)). Does anyone have experience here?
[14:10:12] <mav`rik> s/asyncio/asyncio.as_completed/
[14:10:50] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Remote host closed the connection)
[14:11:04] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c62:3100:48fe:b07b:f21f:4d1) (Ping timeout: 272 seconds)
[14:11:14] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[14:12:28] *** Joins: magla (~gelignite@55d4c44d.access.ecotel.net)
[14:12:40] *** Joins: slavaqq (~slavaqq@sdmail.sdserver.cz)
[14:13:36] *** Joins: y1n (~y1n@84-115-65-95.wifi.dynamic.surfer.at)
[14:15:14] *** Joins: chaosite (~chaosite@user/chaosite)
[14:15:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[14:17:05] <jochum> mav`rik: its anyio TaskGroup: https://anyio.readthedocs.io/en/stable/tasks.html
[14:17:52] <mav`rik> jochum: thanks, I'll get to reading.
[14:17:59] <jochum> I hangled through the code online, I don't know this stuff by no way.
[14:18:32] <jochum> mav`rik: this is the code of aiometer.amap https://github.com/florimondmanca/aiometer/blob/master/src/aiometer/_impl/amap.py
[14:19:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 245 seconds)
[14:19:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[14:20:11] *** Joins: Elzington (~Elzington@68.235.43.126)
[14:21:22] <dreamer> hmm, so I'm looking at the wicd code-base because the package has been deprecated from debian because of python3, and there are some things in there that I don't fully understand. there are a lot of occurrences of strings with `_()` around them. and from what I can tell this has something to do with gettext() but I'm not sure how to apply proper string-formatting to these. there's so much
[14:21:28] <dreamer> string-concatenation it's making my head spin :#
[14:22:15] <dreamer> they are doing .replace() on most of these, is that the proper way? I find it super weird
[14:22:24] <jochum> dreamer: normaly "_" is a gettext import
[14:22:35] <jochum> dreamer: and means translate this stuff _("Some text")
[14:22:42] *** Joins: Atque (~Atque@user/atque)
[14:22:50] <dreamer> I've never dealt with string formatting and gettext before, so not sure what kind of syntax I should be aiming for here
[14:23:11] <jochum> dreamer: hmm said all that in your first sentence, he? :)
[14:23:48] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[14:23:58] <dreamer> stuff like: https://salsa.debian.org/debian/wicd/-/blob/python3/curses/netentry_curses.py#L505
[14:24:18] <dreamer> (sorry original source is on sourceforge. but debian project seems to be doing the python3 port, afaict)
[14:24:37] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[14:25:11] <dreamer> is using .replace() like this really the best way?
[14:26:00] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[14:26:27] <jochum> https://inventwithpython.com/blog/2014/12/20/translate-your-python-3-program-with-the-gettext-module/
[14:26:43] <jochum> dreamer: no
[14:27:11] <dreamer> yeah it seems weird
[14:27:30] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 252 seconds)
[14:27:33] <dreamer> but they basically want to inject these vars into the gettext strings
[14:27:37] <mav`rik> I suppose template strings might be slightly more acceptable, though there's probably a much better way in general these days - https://docs.python.org/3/library/string.html#template-strings
[14:27:56] *** Joins: shad (~shad@user/shad)
[14:28:30] <dreamer> mja, .substitute() doesn't seem that much better to be honest :#
[14:28:52] <mav`rik> True, strings in Python have been through the mill a few times since '91 :)
[14:28:58] <nedbat> dreamer: why not .format?
[14:29:11] *** Joins: jpic (~jpic@82.142.19.50)
[14:29:24] <mav`rik> nedbat: existing translations would then also need to be rewritten, I guess?
[14:29:27] <dreamer> nedbat: I don't know. would .format() work?
[14:29:50] <dreamer> well everything would indeed need to be modified, which I'm not really looking forward to do at all :P
[14:30:27] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[14:30:32] <dreamer> atm there's an enumeration issue going on with the curses client that I want to solve first anyway. was just wondering about this gettext stuff and how to deal with it
[14:30:39] <nedbat> dreamer: if you don't want to change the strings, then the best you can do is to write a new helper function.
[14:30:50] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:31:06] *** Joins: chaosite (~chaosite@user/chaosite)
[14:31:10] <dreamer> but stuff like https://salsa.debian.org/debian/wicd/-/blob/python3/curses/netentry_curses.py#L77 I find really annoying to look at :#
[14:31:22] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 246 seconds)
[14:31:23] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 258 seconds)
[14:32:24] <nedbat> dreamer: there's at least one too many pluses there
[14:32:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[14:32:51] <dreamer> yeah this is not math operations
[14:33:11] <dreamer> I always try to root out this kind of string-concatenation, because imo it's just really bad form to deal with strings like this
[14:33:22] *** Joins: upsala (~zcb@185.213.155.160)
[14:33:43] *** Joins: georgios (~georgios@user/georgios)
[14:34:04] *** Joins: besnn (~besnn@user/besnn)
[14:34:49] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Ping timeout: 258 seconds)
[14:35:35] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[14:35:58] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:36:09] <mav`rik> dreamer: It's a little risky to try solving all the problems at once. It's very easy to get into the mindset of "just one more thing". How are you avoiding scope-creep here?
[14:38:16] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 258 seconds)
[14:42:52] *** Quits: moto (~moto@user/moto) (Ping timeout: 258 seconds)
[14:43:49] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[14:44:38] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[14:44:53] *** Quits: slavaqq (~slavaqq@sdmail.sdserver.cz) (Quit: Client closed)
[14:45:22] *** Quits: masber (~masber@178.197.196.20) (Ping timeout: 246 seconds)
[14:46:05] <dreamer> mav`rik: I know, so I'll leave this gettext strings in this poor form and focus on actual python3 compat issues
[14:46:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[14:46:26] <dreamer> I just wanted to know how to even look at these, but I have a vague understanding now. and won't mess with them
[14:46:30] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Client Quit)
[14:46:56] *** Joins: chaosite (~chaosite@user/chaosite)
[14:46:59] <dreamer> now just fixing stuff like `list(something.items())` which wasn't properly adjusted
[14:47:21] <dreamer> (don't have to cast a list to a list, silly)
[14:48:14] <Repiphany> .items() isn't a list
[14:49:31] *** Joins: moto (~moto@user/moto)
[14:51:41] <dreamer> hmm wait. ok I'm definitely doing too many things at once :#
[14:51:41] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[14:51:45] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[14:52:58] <dreamer> sorry, that was a .values() that was cast to a list
[14:53:15] <dreamer> and things like that
[14:53:16] <Repiphany> values isn't either
[14:54:07] <dreamer> hmmm. and some docs are saying it returns a list
[14:54:15] <dreamer> but it returns a view object that _displays_ a list
[14:54:42] <bjs> dreamer: "some" docs?
[14:54:51] *** Joins: derelict (~derelict@user/derelict)
[14:55:02] <dreamer> ok I shouldn't call them docs
[14:55:13] <dreamer> "hits on google" whenever I dive into a phrase or function
[14:55:21] <bjs> dreamer: ah, do you know about docs.python.org/ ?
[14:55:22] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:55:35] <dreamer> sometimes it works, yes :]
[14:55:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:36] <dreamer> but if you want to iterate over the items or values, you shouldn't need to cast it to a list first, no?
[14:56:48] *** Quits: StathisA (~StathisA@ppp-94-65-240-150.home.otenet.gr) (Ping timeout: 256 seconds)
[14:57:04] <Repiphany> Sure, but you didn't mention that
[14:57:31] <dreamer> yes, I'm bad with words
[14:57:41] <dreamer> likely to use the wrong terms etc.
[14:57:45] <Repiphany> There are plenty of legitimate reasons to want the values as a list instead
[14:58:02] <dreamer> ok, specifically for loops that just take k,v tuples and such
[14:58:28] <dreamer> this doesn't need a list casting, correct?
[14:58:39] <amoe> Is there any way to show the dependency tree of a public package on PyPI?
[15:00:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[15:00:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[15:00:58] *** Quits: y1n (~y1n@84-115-65-95.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[15:01:20] *** Joins: upsala (~zcb@185.213.155.160)
[15:02:16] <jinsun> dreamer: no, that list cast was added by 2to3 script probably, it doesn't try to be smart and just puts the list cast anytime you access dict.items
[15:02:48] *** Joins: chaosite (~chaosite@user/chaosite)
[15:03:11] <mike18> hi im looking for some class which formats logging into html code... for use with flask
[15:03:23] <Yhg1s> dreamer: it's not a cast (it's a conversion), and you *may* need to turn it into a list first, if you mutate the dict while iterating over it.
[15:03:30] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[15:04:35] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:07:24] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[15:07:34] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[15:08:51] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:a614:f1a2:602:bcca:9a9f) (Remote host closed the connection)
[15:09:20] *** Joins: entuland (~entuland@user/entuland)
[15:09:28] *** Joins: p-i- (~Ohmu@171.6.227.32)
[15:09:57] <mike18> hi im looking for some class which formats logging into html code... any idea?
[15:11:02] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:11:25] <dreamer> hmmm, ok
[15:11:29] <jochum> mkbloke: https://towardsdatascience.com/how-to-add-on-screen-logging-to-your-flask-application-and-deploy-it-on-aws-elastic-beanstalk-aa55907730f
[15:13:04] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[15:13:41] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[15:14:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 258 seconds)
[15:14:20] *** Joins: y1n (~y1n@84-115-65-37.wifi.dynamic.surfer.at)
[15:14:45] *** Joins: entuland (~entuland@user/entuland)
[15:15:25] *** Joins: darksun (~darksun@user/darksun)
[15:15:50] *** Quits: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[15:18:43] *** Joins: chaosite (~chaosite@user/chaosite)
[15:19:24] <mike18> screen logging?
[15:22:32] *** Joins: NakedKing (~NakedKing@user/nakedking)
[15:23:03] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[15:23:03] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 244 seconds)
[15:23:08] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[15:23:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:23:21] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[15:23:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[15:24:23] *** Quits: alexyov8 (~alexyov@79.124.0.2) (Quit: alexyov8)
[15:25:06] *** Joins: alexyov8 (~alexyov@84.22.6.244)
[15:25:20] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:30:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:30:52] *** Joins: gulzar (~gulzar@123.201.116.105)
[15:30:53] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[15:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:17] *** Joins: digilink (~digilink@user/digilink)
[15:31:32] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[15:32:08] <gulzar> Hi. Is it possible to generate a list of random strings from a list of strings. eg: input =  [a, b, c, d]    output of size 10 = [b,c,c,d,a,d,b,a,c,b]
[15:32:31] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[15:32:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:32:53] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[15:33:19] <Yhg1s> gulzar: random.choices.
[15:33:20] *** Quits: luvalon1 (~luva@178.239.167.169) (Quit: Byebye)
[15:34:39] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[15:36:35] *** Joins: m_tadeu (~quassel@bl23-211-151.dsl.telepac.pt)
[15:37:48] *** Joins: masber (~masber@vpn-94.cscs.ch)
[15:38:19] <azidhaka> Hi everyone, need a little help inserting a dict here: http://p.ip.fi/cPY5
[15:38:24] <gulzar> Yhg1s: thank you
[15:38:29] <m_tadeu> hi...on windows, I'm doing this 'os.kill(p.pid, signal.CTRL_C_EVENT)', but this seems to affect the whole process group....is there a way to os.kill only a specific subprocess?
[15:38:30] <Adoi> hello, in line 54 here https://bpa.st/ZSIQ,  I get this error; 'ValueError: could not convert string to float: '''
[15:38:36] *** Joins: luvalon1 (~luva@178.239.167.170)
[15:39:08] <deniska> azidhaka: you probably want `'drivers': drivers,` as your line 17
[15:40:00] <marduk> Adoi: sounds like you're trying to convert an empty string into a float which can't be done. might want to try to figure out why you are getting an empty string.
[15:40:09] <p-i-> Does anyone know an efficient way of filtering (to high accuracy, not needed 100%... I'm not launching a shuttle on this code) a numpy array where column 3 is one of a number of values?
[15:40:47] <azidhaka> deniska: oh, right, so easy, thanks :)
[15:40:54] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:41:05] <p-i-> I'm thinking something like `A[A[:,COL] in set('foo', 'bar', 'quux')]`
[15:42:24] <Repiphany> p-i-: https://numpy.org/doc/stable/reference/generated/numpy.isin.html
[15:42:51] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:42:52] *** Quits: gulzar (~gulzar@123.201.116.105) (Quit: Konversation terminated!)
[15:43:01] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[15:43:24] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:43:36] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[15:43:46] <p-i-> Thanks Repiphany
[15:44:34] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[15:44:58] <p-i-> I was wondering if there's some way of hashing the values in such a way that numpy could do a single check for each element.
[15:45:12] <p-i-> I can see a way of doing it with primes for toy cases... but it won't scale
[15:45:13] *** Joins: chaosite (~chaosite@user/chaosite)
[15:46:44] <p-i-> hm no I can't see it. Anyway I don't need the optimization.
[15:48:22] *** Quits: Cyp (~cyp@192038129091.mbb.telenor.dk) (Ping timeout: 256 seconds)
[15:48:26] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[15:49:47] *** Joins: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[15:50:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:51:06] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[15:51:38] <bjs> Adoi: you really should not remove() from a list (`amount`) while you're looping over it
[15:51:47] <bjs> (and I really wish this just gave an error)
[15:51:47] *** Joins: pspiagicw (~pspiagicw@123.136.197.187)
[15:52:21] <bjs> Adoi: but yeah,  as marduk says the error pretty much explains itself: you tried to turn the empty string ('') into a float, on line 54.
[15:53:22] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[15:58:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:59:16] <Adoi> I made additions: https://bpa.st/6DHA.....bjs, but everything I did between lines 51-55 is to remove any empty string
[16:00:45] <Adoi> also 'print(amount)' returning numbers
[16:00:50] *** Joins: nyah (~nyah@90.221.186.180)
[16:01:30] *** Quits: y1n (~y1n@84-115-65-37.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[16:01:55] <bjs> Adoi: you didn't include the output?
[16:02:20] <bjs> Adoi: well _one_ of those print(amount)s has to be an empty string, because that's what Python says goes wrong?
[16:02:51] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[16:03:09] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[16:03:22] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[16:03:57] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[16:04:09] <Yhg1s> Adoi: if amount is an empty string, it will be hard to see with 'print(amount)'. You're usually better off doing 'print(repr(amount))'
[16:05:06] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[16:05:35] <p-i-> Suppose I slice a numpy array B=A[A<0]. B is a view into A. Modifying B[4] will alter e.g. A[11].  Suppose slice again: C = B[B % 2 == 0]. And D, E, ...
[16:05:44] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:05:58] <p-i-> There must be some performance overhead of an N-depth subslice.
[16:06:04] <Adoi> bjs, oh sorry I forgot to add the output
[16:06:15] <Yhg1s> p-i-: sure.
[16:06:51] <Adoi> complete now; https://bpa.st/VXAQ
[16:06:55] <p-i-> Suppose I wish to operate on such a subslice. Each operation is going to be very inefficient.
[16:07:01] <bjs> Adoi: see line 95, it's empty
[16:07:19] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[16:07:33] <p-i-> Is there some way of 'denesting' a slice? (I can't use really flattening as that's a different operation)
[16:07:48] <Yhg1s> p-i-: I'm not sure what you mean.
[16:07:53] <p-i-> Or better to just make a copy...?
[16:08:06] <Yhg1s> p-i-: are you looking to make a copy, or what?
[16:08:41] <p-i-> I'm thinking of the time tradeoff betewen making a copy of C and operating on that against using C directly.
[16:09:12] <Yhg1s> p-i-: what trade-off? A copy will always be slower.
[16:09:20] *** Quits: hyper_dave (~hyper_dav@197.156.107.170) (Ping timeout: 256 seconds)
[16:12:11] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[16:13:21] *** Quits: p-i- (~Ohmu@171.6.227.32) (Read error: Connection reset by peer)
[16:13:27] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:f13f:5413:70c8:40e2)
[16:13:49] <Repiphany> B = A[A<0] isn't a view
[16:14:06] <p-i-_> Yes, but If repeatedly take subslices (as I apply filters to various columns, thinning my 2D array's rows), it's going to slow down more and more. I don't know what bookkeeping numpy does under the hood to manage this.
[16:14:16] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[16:14:36] <Yhg1s> p-i-_: I don't know why you think it's going to slow down more and more.
[16:14:36] *** Joins: y1n (~y1n@84-115-65-37.wifi.dynamic.surfer.at)
[16:17:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a)
[16:18:55] *** Quits: shabius_ (~shabius@195.98.189.216) (Quit: Leaving)
[16:19:00] *** Quits: pspiagicw (~pspiagicw@123.136.197.187) (Quit: WeeChat 3.2)
[16:19:42] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 252 seconds)
[16:21:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:23:57] *** Quits: Cienisty (Cienisty@user/cienisty) (Ping timeout: 276 seconds)
[16:24:39] *** Joins: Pymd (~Pymd@2402:e280:3d22:227:805e:2e0f:fe6c:da67)
[16:25:50] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f812:728a:40a8:ba1a) (Quit: Leaving)
[16:26:04] <p-i-_> I have a million rows in A. I want to do last_100 = A[-100:], and then perform filters on that last_100. I'm wondering whether it's healthy to do all this work over a view of an array. The other option is to do: last_100 = A[-100:].copy().
[16:26:10] <Pymd> Hi , I want to redraw the curve which was already in a pic , is there any library for python,  i could not locate redraw option in opencv , Can anyone suggest the library
[16:26:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:26:53] *** Joins: georgios (~georgios@user/georgios)
[16:27:05] <Yhg1s> p-i-_: like I said, a copy will be much more expensive. The only reason to do the copy is if you no longer need the big array and you need the memory.
[16:27:36] <p-i-_> ok, cool. thanks!
[16:27:56] <Yhg1s> p-i-_: but if you're worried about the performance, you should really just measure it.
[16:29:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:34:05] *** Quits: NakedKing (~NakedKing@user/nakedking) (Remote host closed the connection)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:42] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[16:38:23] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[16:44:16] *** Quits: KernelPa- (~KernelPan@user/kernelpanic) (Quit: ZNC - https://znc.in)
[16:44:28] *** Joins: KernelPanic (~KernelPan@user/kernelpanic)
[16:44:36] *** Joins: Payam (~Payam@138.106.57.131)
[16:44:44] *** Joins: cdown (~cdown@89.32.122.5)
[16:45:32] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Ping timeout: 245 seconds)
[16:46:22] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[16:47:08] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[16:47:10] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:48:04] <ApostleInTriumph> Hello. I've a numpy array A of shape (50, 120). Another array B of (50,30) containing indices for each row of A, (subset). How do I index A with B using a one liner?
[16:48:18] <ApostleInTriumph> if they were 1D array, i'd rather use A[B]
[16:49:19] <ApostleInTriumph> If i'd do A[B] in this 2D case, I get *** IndexError: index 50 is out of bounds for axis 0 with size 50
[16:49:34] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:49:37] <sco1> Is B 2D on purpose?
[16:49:56] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:34] <ApostleInTriumph> sco1 B contains indices which tells me how i should create a subset of A
[16:50:57] <sco1> So you want the resulting array to be the same shape as B?
[16:52:05] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 250 seconds)
[16:52:06] <ApostleInTriumph> Yes
[16:52:12] <ApostleInTriumph> closest_indices_trim = np.array([neighbors_indices[j][i] for j, i in enumerate(closest_indices)]) gets done what I need
[16:52:29] <ApostleInTriumph> but i think the code looks ugly because there has to be better ways to index, no?
[16:53:59] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:e50f:b3fe:6fb0:23af) (Ping timeout: 258 seconds)
[16:54:02] *** Joins: todda7 (~torstein@65.pool85-56-70.dynamic.orange.es)
[16:54:42] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[16:54:48] <ApostleInTriumph> neighbors_indices is A. closest_indices is B
[16:54:59] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[16:57:37] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[16:58:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Quit: Leaving)
[16:58:48] <p-i-_> ApostleInTriumph: So you want A[k] -> A[k][ B[k] ]...
[16:59:23] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[16:59:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[17:00:35] <ApostleInTriumph> p-i-_ exactly
[17:00:37] *** Joins: Quaking (~Quaking@c-98-223-238-153.hsd1.in.comcast.net)
[17:00:46] *** Joins: nicksloan (sid195124@user/nicksloan)
[17:01:47] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 245 seconds)
[17:02:04] *** Quits: y1n (~y1n@84-115-65-37.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[17:03:05] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[17:04:19] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[17:04:40] *** Joins: Cienisty (Cienisty@user/cienisty)
[17:04:49] <sco1> Perhaps `take`?
[17:04:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[17:04:56] <sco1> Or actually, `take_along_axis`
[17:05:12] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[17:05:30] *** Quits: jazzy (~jaziz@2600:380:8600:750f:893b:e73a:55b2:fe00) (Ping timeout: 240 seconds)
[17:06:02] <p-i-_> So a looping method might look like: `C = np.zeros_like(B); for rowA, indices, target in zip(A, B, C): target = rowA[indices]`
[17:06:27] *** Joins: zeden (~zeden@user/zeden)
[17:06:31] <sco1> https://bpa.st/XLAQ
[17:06:43] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:b810:48ed:29ca:2e8a)
[17:06:50] <p-i-_> nice
[17:06:54] *** Parts: henistein (~henistein@2001:8a0:c1b3:6b01:b810:48ed:29ca:2e8a) ()
[17:06:57] <p-i-_> good ole numpy
[17:07:06] <ApostleInTriumph> excellent thanks a lot
[17:08:04] *** Joins: Atque (~Atque@user/atque)
[17:08:15] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Client Quit)
[17:08:26] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Client Quit)
[17:08:45] <InPhase> nubonix: To answer your question from 4 hours ago, HFT outfits are in a condition where they are paying small fortunes to get their servers located in servers in rooms located closer in the building to the computers running the stock markets, so that they don't have to waste so much time on the signals traveling back and forth near the speed of light.  When this is your timescale of operation, you cannot
[17:08:51] <InPhase> waste a fortune on Python overhead for those operations.
[17:09:20] <InPhase> s/located in servers in rooms/located in rooms/
[17:09:22] *** Joins: wakeup (~wakeup@user/wakeup)
[17:09:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[17:09:33] <nubonix> InPhase so python is not the tool to use for HFT?
[17:09:59] <nubonix> or does it just have to do with locality
[17:10:04] <InPhase> nubonix: Not for the actual trading.  Only for exploration and rapid prototyping of new algorithms.
[17:10:12] <nubonix> distance between client / server *
[17:10:33] <wakeup> Do you know of a tool that, given some piece of code, e.g. a function, returns a simplified version of that function, for example, removes automatically completely useless statements, like 2 pass statements in succession? Note that I am not looking for a tool that just detects those possibly useless statements but that also removes them (when it's
[17:10:33] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[17:10:34] <wakeup> fully sure they are useless)
[17:10:47] <nubonix> InPhase: what else would be used? faster than python?????
[17:11:00] <InPhase> nubonix: C++ is the most common choice.
[17:11:06] <nubonix> InPhase httpx isnt good enough?
[17:11:26] <nubonix> i might expect C#, but not C++
[17:11:47] <nubonix> interesting
[17:11:50] <InPhase> nubonix: C# when well optimized is about 15% slower than C++.
[17:12:05] <nubonix> oh wow, really? hmm
[17:12:24] <nubonix> why?
[17:12:30] <nubonix> e.g.*
[17:12:51] <nubonix> mm, nvm about the e.g. still curious why tho
[17:12:53] <InPhase> It's a jit language.  There are some overheads.
[17:12:58] *** Joins: frost (~frost@59.71.241.179)
[17:13:45] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[17:13:53] <nubonix> i mean, why c++ over c#
[17:14:06] <InPhase> Because C# is a jit language.
[17:14:07] <nubonix> b/c of the hit?
[17:14:09] <nubonix> ah
[17:14:12] <nubonix> jit*
[17:14:23] <nubonix> what kind is c++?
[17:14:32] <InPhase> Compiled.
[17:14:45] *** Joins: y1n (~y1n@84-115-64-22.wifi.dynamic.surfer.at)
[17:14:48] <nubonix> so java might be used as well?
[17:14:50] <InPhase> And C++ has many decades of solid development on optimizing compilers.
[17:14:56] <jinsun> nubonix: if you want to see the kind of optimizations HFT people care about, here is a talk https://www.youtube.com/watch?v=NH1Tta7purM
[17:15:06] <InPhase> Java is also about 10% slower, and is jit.
[17:15:16] <nubonix> oml 1 hour
[17:15:30] <nubonix> interesting
[17:15:43] <ApostleInTriumph> wakeup you can use VSCode for example
[17:15:44] <nubonix> about java, swore it was compiled, but guess not
[17:15:50] <ApostleInTriumph> that shows you what's not relevant then it's up to you
[17:15:58] <InPhase> Peak performance languages are basically C, C++, and Fortran.  Rust might join them soon, but requires optimizer development work yet.
[17:16:00] <wakeup> no!
[17:16:06] <jinsun> nubonix: it is compiled to Java bytecode not machine code
[17:16:08] <wakeup> I meant a library that I can import
[17:16:14] <wakeup> not an IDE or editor
[17:16:15] <nubonix> jinsun ahhhh okay
[17:16:19] *** Joins: Pickchea (~private@user/pickchea)
[17:16:47] <nubonix> decoding the java bytecode is probably what they were talking about for overhead [e.g.]
[17:17:02] <jinsun> yes and that's where jit comes
[17:17:12] <nubonix> ok ok, gotcha
[17:17:28] <deniska> languages themselves aren't compiled or interpreted, fast or slow, their specific implementations are
[17:17:47] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:17:53] <deniska> surprisingly enough to some fairly good contenders when it comes to speed are php and js :)
[17:17:53] <ApostleInTriumph> I guess autopep does something like that?
[17:17:58] <ApostleInTriumph> not sure
[17:18:02] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 245 seconds)
[17:18:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:18:34] <InPhase> Pypy is also jit, but not nearly as good in performance as the jvm or C# runtimes.  Pypy still imposes overheads on the scale of a factor of 2-3 slower than peak, which is huge.
[17:18:51] *** Joins: cdown (~cdown@163.114.131.1)
[17:19:23] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[17:20:27] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[17:21:26] *** Joins: emika7 (~emika@83.136.182.59)
[17:21:26] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:9bdf:57ce:f452:ec30)
[17:21:45] *** Joins: LiftLeft (~LiftLeft@191.96.227.138)
[17:21:57] *** Leo is now known as Mikro
[17:23:04] *** Joins: mcglk (~mcglk@131.191.49.120)
[17:23:10] *** Quits: Pymd (~Pymd@2402:e280:3d22:227:805e:2e0f:fe6c:da67) (Quit: Client closed)
[17:23:10] *** Joins: umamisoup (uid511883@id-511883.stonehaven.irccloud.com)
[17:24:10] *** Quits: emika (~emika@185.207.249.97) (Ping timeout: 240 seconds)
[17:24:10] *** emika7 is now known as emika
[17:24:53] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:25:04] <p-i-_> nubonix: InPhase: I'm not sure about this. Generally pingtime is in the order of milliseconds, and Python is in the order of microseconds. So Python won't be quite as fast, but it's vastly more manoeverable.
[17:25:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:25:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:25:59] <nubonix> p-i-_: from the video that jin sent me, it seems that they both know what they are talking about, as this video answers questions about this
[17:26:13] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:27:32] *** Quits: todda7 (~torstein@65.pool85-56-70.dynamic.orange.es) (Ping timeout: 256 seconds)
[17:28:07] <nubonix> p-i-_: seems that i now understand the "micro" in microsoft
[17:31:51] *** Quits: bgardner[m] (~bgardner@2001:470:69fc:105::8a8) (Quit: You have been idle for 30+ days)
[17:32:38] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[17:37:05] <mike18> hi im looking for some class which formats logging into html code... any idea?
[17:37:54] *** Joins: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net)
[17:37:56] *** Parts: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net) ()
[17:37:57] *** Joins: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net)
[17:38:33] <mike18> i have a directory called webApp - with a file webApp.py inside. how can i import a class which is outside of webApp - lets say on the same level as webApp?
[17:38:56] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Quit: Leaving)
[17:38:58] *** Parts: nullbytes (nullbytes@ool-2f1206df.dyn.optonline.net) ()
[17:40:42] <Yhg1s> mike18: how are you importing webApp.py?
[17:40:48] <mike18> no
[17:40:53] <mike18> webApp has the main
[17:41:01] <Yhg1s> mike18: okay, how are you running webApp.py?
[17:41:11] <mike18> docker run with call to webapp.py
[17:41:26] <Yhg1s> mike18: okay, what does that call actually look like?
[17:41:34] <mike18> ENTRYPOINT ["gunicorn"] ... CMD ["--workers=4", "--bind=0.0.0.0:8080", "--timeout=120", "serverApp:create_app()"]
[17:42:00] <Yhg1s> mike18: okay, so gunicorn is importing it. Is it actually 'serverApp'? Is it serverApp.py?
[17:42:10] <mike18> yes serverApp.py
[17:42:27] <mike18> is in serverApp at the moment - going to rename all to webApp...
[17:42:31] <Yhg1s> mike18: and it's not serverApp/__init__.py that's getting imported?
[17:42:51] <mike18> yes by Docker run ?
[17:42:57] *** Joins: jmft2 (~JMFT@82.3.54.26)
[17:43:12] <Yhg1s> mike18: by gunicorn. I'm trying to figure out if it's serverApp/serverApp that's beign imported, or serverApp/__init__.py.
[17:43:17] <ApostleInTriumph> Another indexing question. I've one array (size=(N, 11)) and I want to choose the first 10 columns for those rows whose 11th is non-zero. How do I go about ? (I now have a naive for loop solution as before)
[17:43:24] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[17:43:25] <mike18> at the moment i dont have serverApp dir
[17:43:33] <mike18> serverApp.py is in the root dir
[17:43:41] <mike18> on same level as Dockerfile
[17:43:57] <Yhg1s> mike18: okay, then the directory serverApp.py in will be searched for imports. You can just do 'import othermodule'.
[17:43:58] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:44:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:44:25] <mike18> but lets say i move serverApp.py into serverApp directory...
[17:44:36] <Yhg1s> mike18: how are you going to change the gunicorn call?
[17:44:39] <mike18> and in serverApp.py i import other classes from the project
[17:45:10] <mike18> ?
[17:45:41] <Yhg1s> mike18: it depends on how you actually structure the files, and how you tell gunicorn about the directory.
[17:46:36] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[17:46:42] <mike18> tell gunicorn is one thing - but i refer to serverApp.py which imports a class called stats_logger from my project
[17:46:50] <mike18> which is outside of the sererApp dir
[17:47:00] <mike18> my question is that possible?
[17:47:20] <InPhase> p-i-_: Your ping times might by milliseconds, but HFTs stress over shaving microseconds from their ping times and are paying premiums to do it.
[17:47:38] <Yhg1s> mike18: it is, if you structure it properly. I don't recommend doing what you describe. Make everything that needs to be imported a single package.
[17:47:47] <mike18> Yhg1s: ./root/serverApp/serverApp.py and ./root/stats_logger/.....
[17:48:46] <mike18> bc i have serverApp and standaloneApp ... thought i move that to .py files from the root into a directory for each of them...
[17:48:48] <InPhase> p-i-_: So every time Python takes a bonus microsecond, it becomes not worth it compared to rewriting whatever it is in a faster language.  It is certainly true most of the time that the overhead of Python doesn't matter.  But there are definitely cases where it matters a huge amount, and this is one of them.
[17:49:01] <mike18> Yhg1s
[17:49:06] <Yhg1s> mike18: you can if you make them packages, yes.
[17:49:13] *** Joins: pspiagicw (~u0_a428@1.39.30.20)
[17:50:53] *** Joins: vicfred_ (~vicfred@user/vicfred)
[17:53:30] <mike18> Yhg1s: for example that project: https://github.com/iperov/DeepFaceLab
[17:53:34] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd) (Quit: Leaving)
[17:53:44] <mike18> can you move main.py into a main directory and all works fine with those imports?
[17:53:54] <mike18> e.g. from core import osex
[17:54:00] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 272 seconds)
[17:54:05] <mike18> can it still find core?
[17:54:47] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:3ee3:216d:a66:5710)
[17:55:01] <grym> mike18: that's a badly structured repo
[17:55:06] <mike18> why?
[17:55:11] <grym> it's not a package
[17:55:18] <mike18> its the same what i have
[17:55:32] <grym> mike18: so, don't do that
[17:55:37] <mike18> a package is a library?
[17:55:52] <grym> no, a package is a directory with an __init__.py in it
[17:56:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[17:56:20] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:3ee3:216d:a66:5710) (Remote host closed the connection)
[17:56:29] <grym> and sensible repo structures have a setup.py/cfg or a pyproject.toml at the root level that will tell pip how to install the top level package that's also in the repo
[17:56:47] <grym> (in which all the rest of the world lives except for, say, tests/ and docs/ and stuff)
[17:56:48] <mike18> ok i have a __init__.py in all my class dirs
[17:57:25] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:57:27] <mike18> why install them if they are in the same dir?
[17:57:30] *** sandcat is now known as jess
[17:58:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295)
[17:58:48] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[17:58:49] <Wooble> because you want it to work instead of not working?
[17:59:36] <grym> mike18: well, because your scrollback of questions about imports not working properly will stop happening
[17:59:49] <Wooble> (or at least work consistently instead of depending on exactly how you ran the top-level thing)
[17:59:58] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:00:24] <grym> mike18: python uses the verb 'install' in a peculiar fashion; it is what it is
[18:01:49] *** Quits: y1n (~y1n@84-115-64-22.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[18:03:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:9160:8e06:1f6:3295) (Remote host closed the connection)
[18:03:27] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[18:03:48] <mike18> can you show me a sample project i can look up things?
[18:04:05] <mike18> bc https://github.com/iperov/DeepFaceLab seems not be be good to learn
[18:04:31] *** Joins: ozoned (~odoood@2601:c8:c003:a550::8)
[18:05:47] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[18:06:02] *** Quits: Quaking (~Quaking@c-98-223-238-153.hsd1.in.comcast.net) (Ping timeout: 258 seconds)
[18:07:08] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:b810:48ed:29ca:2e8a)
[18:07:30] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:08:23] <grym> i only have a few that are using newer build tools like poetry, myself
[18:08:45] <grym> https://tildegit.org/grym/oxo  is only going to be so informative, i think
[18:08:58] <grym> you'll have to translate what's in pyproject.toml back into setup.py/cfg, possibly
[18:09:24] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:b1b2:5aaf:3118:ef16) (Quit: Leaving)
[18:10:15] <sco1> ApostleInTriumph: I would use a boolean index: https://numpy.org/devdocs/reference/arrays.indexing.html#boolean-array-indexing
[18:10:44] <ApostleInTriumph> sco1 thanks
[18:13:08] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[18:13:10] *** PublicWiFi is now known as PubicWiFi
[18:13:19] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 258 seconds)
[18:14:33] *** Joins: y1n (~y1n@84-115-64-26.wifi.dynamic.surfer.at)
[18:15:19] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1008)
[18:15:46] *** Quits: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[18:15:49] *** Joins: fassl (~fassl@2a02:8388:1987:9380:b8c4:7547:c3fd:9098)
[18:15:50] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e5f6-214e-ac91-0ad3.res6.spectrum.com)
[18:17:09] *** Joins: Pickchea (~private@user/pickchea)
[18:17:28] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:17:48] *** Joins: cer-0 (~cer-0@189.228.172.244)
[18:18:17] *** Joins: akk (~akk@75.161.157.26)
[18:19:58] *** Joins: vicfred (~vicfred@user/vicfred)
[18:21:10] *** Joins: shad (~shad@user/shad)
[18:22:16] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:22:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:26:15] *** Joins: nyash (~nyash@185.80.58.10)
[18:26:17] *** Quits: debayer (~debayer@2603-8000-cf00-0010-6ddf-aaca-888c-a18e.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:26:28] *** Joins: Adoi (~Adoi@user/adoi)
[18:26:32] *** Quits: codl (~codl@user/codl) (Quit: Version string here)
[18:27:27] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:29:09] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 250 seconds)
[18:29:40] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:31:09] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[18:32:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:33:08] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:33:53] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:34:13] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 244 seconds)
[18:36:32] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:37:46] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 240 seconds)
[18:37:48] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[18:37:53] *** Joins: Roey (~Roey@user/Roey)
[18:38:14] *** Joins: VaniaPy (~VaniaPy@46.12.71.21.dsl.dyn.forthnet.gr)
[18:38:33] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[18:41:35] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:41:51] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[18:41:54] *** Joins: Guddu (~Guddu@67.73.237.27)
[18:42:04] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:42:15] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:44:49] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[18:47:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[18:47:15] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:48:02] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 245 seconds)
[18:48:54] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[18:49:00] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:7802:faf8:53d5:9a78)
[18:50:22] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Quit: ZZZzzzâ€¦)
[18:54:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:55:21] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:55:29] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[18:56:32] *** Quits: cer-0 (~cer-0@189.228.172.244) (Quit: leaving)
[18:56:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[18:56:46] <nyash> Hi, getting a warning: the explicit passing of coroutine objects to asyncio.wait() is deprecated. What does this mean exactly? Do I need to wrap tasks in something? I am calling them like so: await asyncio.wait([asyncio.sleep(p) for p in range(10)]); print("DONE")
[18:57:23] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:b518:93d9:d38f:6cf9)
[18:58:08] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:59:38] *** Quits: magla (~gelignite@55d4c44d.access.ecotel.net) (Quit: Stay safe!)
[19:01:47] *** Quits: y1n (~y1n@84-115-64-26.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[19:02:01] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[19:02:27] <ChrisWarrick> nyash: https://docs.python.org/3/library/asyncio-task.html#asyncio-example-wait-coroutine
[19:02:45] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Excess Flood)
[19:03:13] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:03:18] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 256 seconds)
[19:03:33] <Alina-malina> how you guyse handle the pyenv install error when you trying to install 2.7.x or some other versions?
[19:03:45] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:03:51] <ChrisWarrick> Alina-malina: what error?
[19:04:15] <Alina-malina> like its complaining on ssl during compilation
[19:04:37] <Alina-malina> its compiling some 3.x ones, but some also throwing error
[19:04:45] <Alina-malina> archlinuxalso complaining
[19:05:02] <Alina-malina> not all versions work, especialy 2.x ones
[19:05:05] <ChrisWarrick> Alina-malina: you need to be more specific (and pastebin the errors)
[19:05:34] <Alina-malina> ok let me install one and then grep the error here
[19:05:34] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 272 seconds)
[19:05:46] *** Joins: srhm (~ascii@user/srhm)
[19:05:54] *** Quits: eramirez (~eramirez@49.149.137.68) (Ping timeout: 240 seconds)
[19:06:41] *** Joins: benjwadams (~benjwadam@96.238.4.28)
[19:07:17] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[19:07:18] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:ae48:eed7:8d8a:dd29)
[19:08:37] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[19:09:06] <benjwadams> Hi, I am getting Flask-WTF reporting "CSRF token missing".   On pages with CSRF tokens, should `Cache-Control` headers be disabled?  If I'm running a reverse proxied configuration with Nginx serving up docker, should I bother setting Flask's SERVER_NAME variable or changing entries in /etc/hosts?
[19:09:36] <Alina-malina> ChrisWarrick, https://bpa.st/6UUQ
[19:10:15] <benjwadams> Trying to follow along with these instructions: https://nickjanetakis.com/blog/fix-missing-csrf-token-issues-with-flask
[19:10:18] <ChrisWarrick> Alina-malina: perhaps try to paste the full log (/tmp/python-build.20210806183749.7215.log)
[19:11:33] <Alina-malina> ChrisWarrick, https://bpa.st/LM4A
[19:12:49] <ChrisWarrick> Alina-malina: hm, this log doesnâ€™t seem to have much information
[19:13:00] <ChrisWarrick> Alina-malina: could you perhaps try a more recent 2.7.x version?
[19:13:02] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:13:22] <Alina-malina> ChrisWarrick, ok let me try 2.7.13 or something
[19:13:56] <ChrisWarrick> Alina-malina: just use 2.7.18 unless you have a specific reason not to
[19:14:04] <ChrisWarrick> (or of course, use python 3)
[19:15:00] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[19:18:06] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[19:18:37] <Alina-malina> ChrisWarrick, yes 2.7.13 same error, but 2.7.18 worked. I thought this tool is a working tool and all versions will be installed, the whole point of it is gone if its going to work with some versions and some not
[19:18:42] <Alina-malina> kinda sad thing
[19:18:47] <Alina-malina> i thought it will work with all versions
[19:18:59] <ChrisWarrick> Alina-malina: there isnâ€™t any point really in installing those ancient versions
[19:19:22] <ChrisWarrick> Alina-malina: pyenv is a working tool, but it isnâ€™t going to patch every single ancient python version to work on every single system
[19:19:26] <Alina-malina> then they should remove from the list options those versions of they not going to work anyways
[19:19:36] <Alina-malina> its not working on debian as well
[19:19:47] <Alina-malina> i tried few other versions of debian too, all same behaviour
[19:20:09] <ChrisWarrick> what other versions of debian? be more specific
[19:20:35] <Alina-malina> stable and unstable daily
[19:20:42] <ChrisWarrick> that might be too new
[19:20:42] *** Joins: sazawal (~sazawal@122.161.170.192)
[19:21:03] <Alina-malina> i dont know, this thing is not working and i need it to work on my system for all python versions
[19:21:13] <ChrisWarrick> why do you need it to work for *all* python versions?
[19:21:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[19:21:48] <Alina-malina> because its offering those versions in its list?
[19:22:13] <ChrisWarrick> thatâ€™s not a reason for why you need those versions
[19:22:18] <Alina-malina> it is
[19:22:34] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 256 seconds)
[19:22:36] <ChrisWarrick> pyenv doesnâ€™t guarantee any python version will build on any linux distro
[19:22:50] <Alina-malina> what it guarantees then? what distro? lol
[19:23:03] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[19:23:21] <ChrisWarrick> pyenv is a volunteer-run project, you might be demanding a bit too much
[19:23:21] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[19:23:36] *** Joins: ice9 (~ice9@user/ice9)
[19:23:44] <Alina-malina> ye, maybe, probably need to use something else that is more maintainable ig
[19:23:54] *** Joins: nate44 (~Nathan22@S0106bcd16583c035.gv.shawcable.net)
[19:23:56] *** PubicWiFi is now known as PublicWiFi
[19:24:05] <Alina-malina> at least they could remove from their list those "problematic" versions
[19:24:22] <sco1> Problematic for *you*
[19:24:27] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:24:31] <Alina-malina> sco1, really?
[19:24:33] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[19:24:39] <sco1> I don't think it should be their responsibility to ensure it's functional for every build chain under the sun
[19:24:42] <Alina-malina> sco1, how you fix it for you?
[19:24:44] *** Joins: bam32 (~bambams@user/bambams)
[19:24:47] <nate44> Anyone good at regex? https://regex101.com/r/MB572j/1 I'm trying to captures KVPs, but where the value may not exist. Seems like my expression isn't greedy enough
[19:24:53] <sco1> You're free to patch it yourself, it even gives you the CLI option to do so
[19:25:06] *** Joins: P1ro (~quassel@user/p1ro)
[19:25:12] *** Quits: jpic (~jpic@82.142.19.50) (Ping timeout: 272 seconds)
[19:26:00] *** Joins: mikeliuk (~mikeliuk@213.205.198.158)
[19:26:22] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[19:26:44] <Alina-malina> so noone had similiar issue to provide patch? ok then
[19:26:46] *** Quits: masber (~masber@vpn-94.cscs.ch) (Quit: Client closed)
[19:26:55] <sco1> I don't know, search their issue tracker
[19:27:19] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:28:27] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[19:30:32] *** Joins: pgib (~textual@173.38.117.81)
[19:30:56] *** Joins: georgios (~georgios@user/georgios)
[19:31:05] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[19:31:48] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[19:32:37] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[19:33:42] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[19:34:05] *** Joins: masber (~masber@vpn-94.cscs.ch)
[19:34:11] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:ae48:eed7:8d8a:dd29) (Remote host closed the connection)
[19:34:36] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:b8ec:2a45:cd1c:4a97)
[19:35:50] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[19:36:00] <canton7> nate44, the problem was the ? after the `=\s*` . I also tweaked it to get rid of some of the other ?'s: https://regex101.com/r/S5tWnw/2
[19:36:33] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[19:36:35] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 268 seconds)
[19:36:57] <SnoopJ> Alina-malina, there are patches to fix problems with older versions of 2.7. They are contained in the newer versions of 2.7. As already said, you should use 2.7.18 exclusively unless you are absolutely forced to use an even more out-of-date version.
[19:37:01] *** Joins: Adois (~Adoi@user/adoi)
[19:37:05] <canton7> nate44, actually, you don't even need the final \s*: https://regex101.com/r/S5tWnw/3
[19:37:28] <Alina-malina> SnoopJ, patches on their github?
[19:37:39] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[19:37:45] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:b518:93d9:d38f:6cf9) (Quit: Leaving)
[19:38:07] <SnoopJ> Alina-malina, Python 2.7.18 contains patches for things in 2.7.17, which contains patches for things in 2.7.16, and so on...
[19:38:28] <Alina-malina> SnoopJ, oh python patches, right
[19:39:07] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 258 seconds)
[19:39:30] <SnoopJ> Alina-malina, right. If you ask pyenv for some released version of Python, it will install it for you exactly as if you'd gotten that release from python.org and built it. Including all the things that might have been fixed in later versions.
[19:40:18] <Alina-malina> alright thanks SnoopJ i will check al the problematic versions and try to go from there
[19:40:26] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:40:31] <SnoopJ> Alina-malina, since 2.7 is at this point ancient, they're basically all "problematic"
[19:40:45] <SnoopJ> but 2.7.18 is the last patch
[19:41:04] <Alina-malina> yes and it worked for me, there are also some 3.x specific versions that are not working as well
[19:41:23] <SnoopJ> If you would like to talk about what is not working, please share a complete error report or question.
[19:44:21] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[19:44:55] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Read error: Connection reset by peer)
[19:46:42] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[19:48:00] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[19:48:16] *** Joins: hyper_dave (~hyper_dav@197.156.86.105)
[19:49:15] *** Quits: sandeepk (~sandeepk@223.130.30.5) (Ping timeout: 252 seconds)
[19:50:05] *** Joins: kosh (~kosh@user/kosh)
[19:51:23] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[19:51:24] *** Joins: P1ro_ (~quassel@user/p1ro)
[19:52:17] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[19:52:51] *** Joins: ATAD (~ATAD@user/atad)
[19:53:00] *** Quits: urth (~urth@geertswei.nl) (Ping timeout: 272 seconds)
[19:53:08] *** Joins: zebrag (~chris@user/zebrag)
[19:53:22] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[19:53:25] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[19:53:30] *** Quits: Deneb (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[19:53:41] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[19:53:43] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[19:53:52] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[19:54:39] *** Joins: Payam (~Payam@138.106.57.131)
[19:54:52] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[19:54:54] <gitesh> i fight/grapple with my brain to use short cut when programming
[19:55:33] *** Joins: BlessJah (~BlessJah@user/blessjah)
[19:56:14] *** Quits: bam32 (~bambams@user/bambams) (Ping timeout: 272 seconds)
[19:56:52] *** Quits: masber (~masber@vpn-94.cscs.ch) (Ping timeout: 246 seconds)
[19:57:00] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df)
[19:57:12] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 258 seconds)
[19:57:37] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Read error: Connection reset by peer)
[20:00:21] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[20:01:05] *** Joins: rsx (~dummy@ppp-188-174-136-83.dynamic.mnet-online.de)
[20:01:08] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:02:52] <nate44> caton7: Thanks! I came up with something similar: ^(\w+)\s*=\s*([^\s#;]+)?
[20:03:26] *** Joins: Celeo (~Celeo@user/celeo)
[20:03:43] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 258 seconds)
[20:03:56] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[20:05:25] *** Joins: jpic (~jpic@82.142.19.50)
[20:08:34] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:08:42] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:08:47] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[20:09:51] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 258 seconds)
[20:10:09] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[20:11:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:15:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[20:16:14] <gitesh> what does property mean when we want to sort the dictionary using some property while we are coding using sorted function?
[20:16:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:17:29] *** Joins: magla (~gelignite@55d4c44d.access.ecotel.net)
[20:17:30] <sco1> Property? I'm not sure what that's supposed to mean in this context. Do you have an example?
[20:17:44] *** Quits: VaniaPy (~VaniaPy@46.12.71.21.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:17:48] <gitesh> I mean key function
[20:18:51] <sco1> Does this help? https://docs.python.org/3/howto/sorting.html#key-functions
[20:19:09] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:19:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:19:57] *** Joins: zebrag (~chris@user/zebrag)
[20:20:38] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:9bdf:57ce:f452:ec30) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:23:01] <emerent> dicts are sorted by insertion order (in new enough python versions)
[20:23:25] <emerent> if you want to sort them, you need to create a new dict from the sorted key-value pairs
[20:23:46] <emerent> if that is your question? It's not clear to me
[20:23:46] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:24:50] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[20:25:12] *** Quits: rsx (~dummy@ppp-188-174-136-83.dynamic.mnet-online.de) (Quit: rsx)
[20:25:34] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[20:26:02] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:26:38] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 272 seconds)
[20:27:12] <canton7> nate44,([thing]+)? is just a complex way of writing [thing]*
[20:27:45] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[20:27:52] *** Joins: regreg (~regreg@86.122.113.90)
[20:28:06] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[20:28:07] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df) (Quit: Client closed)
[20:28:24] *** Joins: masber (~masber@178.197.196.20)
[20:29:03] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[20:29:10] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df)
[20:29:26] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df) (Client Quit)
[20:29:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Read error: Connection reset by peer)
[20:30:03] <nate44> canton7: Hah, that is true actually. Good point
[20:30:10] *** Quits: mike18 (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[20:31:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[20:31:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:32:14] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[20:32:55] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:d2c9:6317:8847:51b6)
[20:34:39] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[20:35:46] *** Quits: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk) (Quit: Client closed)
[20:36:04] *** Quits: masber (~masber@178.197.196.20) (Ping timeout: 246 seconds)
[20:36:18] *** Quits: Jefren (~Jefren@70.35.67.162) (Ping timeout: 240 seconds)
[20:36:25] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[20:36:29] *** Joins: theo (~theo@user/theo)
[20:36:29] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef)
[20:37:44] *** Joins: Jefren (~Jefren@208.104.190.49)
[20:38:45] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Ping timeout: 276 seconds)
[20:38:59] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[20:39:22] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[20:40:43] *** Joins: audio (~audio@2603-8081-1800-00ad-135d-ddd4-f1e4-90ef.res6.spectrum.com)
[20:40:44] *** Quits: benjwadams (~benjwadam@96.238.4.28) (Quit: Client closed)
[20:41:13] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:42:03] *** Quits: Jefren (~Jefren@208.104.190.49) (Ping timeout: 252 seconds)
[20:44:14] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[20:44:27] <sharperguy__> Any tips on resolving ssl "CERTIFICATE_VERIFY_FAILED" when using a private CA? I am on ubuntu and have installed the CA certificate using update-ca-certificates?
[20:44:29] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[20:44:47] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:45:08] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:45:55] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:46:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:46:35] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:46:41] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:46:53] *** Joins: Jefren (~Jefren@70.35.67.141)
[20:47:22] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[20:48:34] <jinsun> sharperguy__: if you are using requests, https://docs.python-requests.org/en/master/user/advanced/#ssl-cert-verification
[20:48:40] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[20:49:00] *** Joins: Jefren1 (~Jefren@70.35.67.190)
[20:50:04] <sharperguy__> @jinsun, its smtplib, using SMTP_SSL
[20:50:13] <sharperguy__> which uses ssl.py internally
[20:50:41] *** Joins: CodenameTim (~CodenameT@212.102.58.178)
[20:51:06] *** Quits: Jefren (~Jefren@70.35.67.141) (Ping timeout: 240 seconds)
[20:51:15] <gitesh> when to use dictionary/
[20:51:55] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:52:20] *** Joins: Jefren2 (~Jefren@70.35.66.235)
[20:53:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:53:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:53:50] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[20:54:01] <SnoopJ> gitesh, when your program needs to map keys to values
[20:54:31] <jinsun> sharperguy__: ok never used SMTP_SSL, but it seems you will have to give a ssl context, SMTP_SSL(context=ssl.create_default_context())
[20:54:53] <jinsun> sharperguy__: and in create_default_context give the path to the cafile
[20:55:11] *** Quits: Jefren1 (~Jefren@70.35.67.190) (Ping timeout: 250 seconds)
[20:56:36] <gitesh> SnoopJ: got it nice answer thanks
[20:58:17] *** Quits: regreg (~regreg@86.122.113.90) (Read error: Connection reset by peer)
[20:58:49] *** Joins: Jefren3 (~Jefren@70.35.66.199)
[20:59:41] *** Quits: Jefren2 (~Jefren@70.35.66.235) (Ping timeout: 258 seconds)
[21:00:58] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:01:13] <sharperguy__> hmm ok
[21:01:43] <sharperguy__> strange how i wasnt getting this error on the system i wrote the script on, but i am getting different behaviour on the target system
[21:01:52] <CodenameTim> I'm looking for help converting an extension module to support PEP 489 (multiphase initialization). The issue I'm running into is that I have two kinds of state in the module. The first kind, is true module level state. The second is thread specific. The module's purpose is to wrap some operations such as malloc and count the number of times it's
[21:01:52] <CodenameTim> used. I've included what I hope are the relevant parts of the C extension module to show the changes. My question is, am I missing anything regarding the thread variable and should I be adding that variables size to the `m_size` parameter of PyModuleDef? https://bpa.st/QNSA
[21:02:57] *** Joins: cellofellow (~user@166.70.50.58)
[21:03:01] *** Joins: Jefren4 (~Jefren@70.35.67.33)
[21:03:50] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:d2c9:6317:8847:51b6) (Remote host closed the connection)
[21:05:05] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[21:05:16] *** Quits: Jefren3 (~Jefren@70.35.66.199) (Ping timeout: 272 seconds)
[21:06:02] *** Joins: MaximB (~MaximB@87.68.164.32)
[21:06:33] *** Joins: gusto (~Augustus@2620:149:e0:6002::20a)
[21:06:53] <jmft2> Is it a universal rule that we should use `self.assertEqual(expected, actual)` rather than `self.assertEqual(actual, expected)`? Also is there a preference between `assert x == y` and `self.assertEqual(x, y)`?
[21:07:06] <jmft2> (And if there is such a preference, why?)
[21:07:43] <Wooble> jmft2: use assert if you're using pytest instead of unittest.
[21:07:59] <Wooble> otherwise, use the method calls...
[21:08:32] *** Quits: Jefren4 (~Jefren@70.35.67.33) (Ping timeout: 256 seconds)
[21:08:52] <jmft2> Wooble, what about Django unit tests? I'm using pytest to run them but we're using class-based tests
[21:09:13] <Wooble> jmft2: I'd use the methods (but I use pytest-django myself...)
[21:09:37] <Wooble> for one thing, if some idiot manages to run your tests with python -O, the assertions get removed. :)
[21:09:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:10:45] *** Quits: Lartza (lartza@user/lartza) (Quit: Quit)
[21:10:57] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[21:11:02] <ronny> That's why you run pytest
[21:11:28] <ronny> The python executable is a bad test runner entry
[21:11:41] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[21:11:48] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[21:12:01] *** Joins: Lartza (lartza@user/lartza)
[21:12:05] *** Quits: Zal (~Isthmus@user/isveni) (Quit: leaving)
[21:12:17] *** Joins: Isthmusi (~Isthmus@user/isveni)
[21:12:18] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[21:13:36] *** Joins: Pickchea (~private@user/pickchea)
[21:15:11] *** Joins: masber (~masber@vpn-95.cscs.ch)
[21:15:13] <Wooble> fair enough, -O is unlikely anyway. I'd still use whatever framework I'm using's preferred method (although I'm almost always using pytest so uh....)
[21:16:27] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[21:17:29] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[21:18:10] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[21:18:43] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[21:18:43] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:18:57] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[21:19:50] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 272 seconds)
[21:20:14] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:20:21] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:20:28] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[21:20:29] *** Joins: bam32 (~bambams@user/bambams)
[21:21:01] *** Joins: bam32_ (~bambams@user/bambams)
[21:21:20] *** Joins: Deneb^ (~johnch@93.125.7.51.dyn.plus.net)
[21:22:36] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[21:23:14] *** Joins: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[21:23:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[21:24:35] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[21:24:59] *** Quits: bam32 (~bambams@user/bambams) (Ping timeout: 258 seconds)
[21:25:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[21:25:38] <Julian> jmft2: both orders are common, but the answer depends on your unittest TestCase
[21:25:46] <Julian> (and yes if you're using pytest as a test framework it doesn't matter)
[21:25:59] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Quit: ZNC 1.8.2 - https://znc.in)
[21:26:14] *** Joins: bam32 (~bambams@user/bambams)
[21:26:18] <Julian> jmft2: (some TestCase implementations use the order to show a message saying got/expected, and then you don't want that to be backwards)
[21:26:22] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[21:27:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:27:22] *** Quits: bam32_ (~bambams@user/bambams) (Ping timeout: 240 seconds)
[21:28:00] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[21:28:49] *** Quits: ozoned (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[21:28:52] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[21:29:07] *** Quits: mozgalom_ (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:29:11] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[21:30:09] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:33:43] <SnoopJ> tests and throwaway scripts are basically the only places I use asserts
[21:34:11] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[21:34:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[21:35:09] <jmft2> Julian, okay but so it's implementation-dependent then
[21:35:28] *** Joins: digilink (~digilink@user/digilink)
[21:35:48] *** Joins: cdown_ (~cdown@89.32.122.5)
[21:36:01] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:36:29] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 258 seconds)
[21:39:12] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 276 seconds)
[21:40:10] *** Joins: Jefren4 (~Jefren@206.253.157.247)
[21:40:19] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 258 seconds)
[21:41:28] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 258 seconds)
[21:41:28] *** Joins: Akuli (~Akuli@82-203-162-28.bb.dnainternet.fi)
[21:42:58] <Julian> jmft2: yes, you could say so, but people have preferences even if the implementation doesn't treat it specially
[21:43:00] *** Quits: nate44 (~Nathan22@S0106bcd16583c035.gv.shawcable.net) (Ping timeout: 268 seconds)
[21:43:31] <Julian> (e.g. I prefer assert got == expected / assertEqual(got, expected), because flow wise, the reader of the test is likely to have just read about `got`, whereas `expected` often comes "out of nowhere")
[21:44:37] <Julian> but others prefer assert expected == got because sometimes you tinker with `got` while writing, or they prefer seeing the literal (which expected often is) first, or other similar reasons
[21:44:45] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[21:45:00] *** Joins: urth (~urth@geertswei.nl)
[21:45:14] *** Joins: digilink (~digilink@user/digilink)
[21:45:53] *** Joins: Sky_Net (~Sky_Net@176.14.210.40)
[21:45:59] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:46:03] <nedbat> literal-first is a hack from C that we don't need :)
[21:46:41] <Julian> I don't disagree :D
[21:47:11] *** Joins: emika1 (~emika@83.136.182.35)
[21:47:13] *** Quits: emika (~emika@83.136.182.59) (Ping timeout: 258 seconds)
[21:47:14] *** emika1 is now known as emika
[21:47:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[21:47:48] *** Joins: Jefren (~Jefren@70.35.67.57)
[21:47:57] *** Joins: Pickchea (~private@user/pickchea)
[21:48:18] *** Quits: Jefren4 (~Jefren@206.253.157.247) (Ping timeout: 276 seconds)
[21:48:19] *** Quits: rendar (~rendar@user/rendar) ()
[21:49:01] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[21:49:10] <jmft2> Oh, what happens if expected is not a literal? And it has some side effect? In the expression `self.assertEqual(foo(), bar())`, does `foo()` _always_ get evaluated before `bar()`?
[21:50:13] <nedbat> jmft2: yes, it will be evaluated first, but i really hope that doesn't matter? That sounds very confusing.
[21:50:17] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 258 seconds)
[21:50:33] <jmft2> nedbat, I know, I wouldn't write something like that :-)
[21:50:41] *** Quits: alexyov8 (~alexyov@84.22.6.244) (Quit: alexyov8)
[21:50:59] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:51:02] <Julian> yes don't do that :)
[21:51:05] *** Joins: alexyov8 (~alexyov@84.22.6.244)
[21:51:51] <Julian> the other other reason you find lots of people doing `assert expected == got` I think is them learning it elsewhere
[21:51:58] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[21:52:12] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[21:52:16] <Julian> E.g. lua's luassert is torturing me because it expects that (expected first), so people coming from random other test frameworks sometimes bring their baggage with them
[21:53:00] *** Quits: Jefren (~Jefren@70.35.67.57) (Ping timeout: 252 seconds)
[21:53:33] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[21:55:02] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:56:12] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:56:57] <jinsun> why does it matter if literal is first?
[21:58:07] *** Joins: Betal (~Betal@user/betal)
[21:58:38] *** Quits: Deneb^ (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[21:58:42] <nedbat> jinsun: C programmers do it so that ` "abc" = actual `  will be a syntax error if they mistakenly type = instead of ==
[21:59:29] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:59:38] <jinsun> ah okay
[22:00:41] <SnoopJ> oh, so not bearing on the test's semantics
[22:01:16] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:02:55] *** Quits: mikeliuk (~mikeliuk@213.205.198.158) (Quit: Connection closed)
[22:07:46] *** Quits: masber (~masber@vpn-95.cscs.ch) (Ping timeout: 246 seconds)
[22:10:26] *** Joins: fdan (~fdan@192.146.154.3)
[22:11:25] *** Quits: Sky_Net (~Sky_Net@176.14.210.40) (Quit: Leaving)
[22:12:26] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[22:13:50] *** Joins: lntl (~joey@ool-44c539e6.dyn.optonline.net)
[22:14:41] <altendky> i'm getting missing coverage `tests/test_fields.py                  96      4     18      0    94.74%   136-145` for https://github.com/altendky/desert/blob/fc889f64bb672d242adda41a169f8b1ee37d1ffc/tests/test_fields.py#L135-L145.  is that about the case where `examples` is empty?  it's a test utility so i'm not super worried about covering that but i haven't figured out how to ignore it yet.  any pointers?
[22:16:02] <lntl> I am working on a project that is beginning to have lots of indentation. It flows something like this https://termbin.com/vp7f . What's best practice when it comes to indentation? I am considering getting rid of the with-style resource allocation but then pylint gets angry.
[22:16:05] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[22:16:09] <nedbat> altendky: that is saying the function isn't executed
[22:16:42] <altendky> nedbat: :[ i see now it is a `-` not a `->`
[22:16:51] <altendky> thank you
[22:17:04] <nedbat> lntl: i'm not sure you want that double loop anyway, I don't think it will do what you need.
[22:17:32] *** Quits: henistein (~henistein@2001:8a0:c1b3:6b01:b810:48ed:29ca:2e8a) (Quit: Client closed)
[22:17:33] <nedbat> lntl: but to answer your question: this might be a place where another function would be useful.
[22:17:53] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:18:16] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[22:18:29] *** Joins: Jefren (~Jefren@206.253.157.252)
[22:18:42] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:18:44] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[22:19:17] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[22:19:21] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:19:22] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 240 seconds)
[22:19:49] *** Joins: urth (~urth@geertswei.nl)
[22:21:56] <lntl> nedbat: yaya, cur.execute should rerun at the beginning of for line in f:
[22:21:59] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:22:23] <nedbat> lntl: or, you can keep the results in a list, if there aren't too many
[22:23:25] <lntl> Could do some more functionage, how much indentation can I have before good-folks like yourself begin to get queasy?
[22:23:42] *** Quits: Jefren (~Jefren@206.253.157.252) (Ping timeout: 268 seconds)
[22:24:10] <lntl> ...in general, of course.
[22:25:09] <nedbat> lntl: i wouldn't object to the code you showed
[22:25:15] *** Joins: NeoCore (~neocore@89.40.183.16)
[22:25:33] <lntl> nedbat: right on! :)
[22:25:38] *** Joins: Jefren (~Jefren@70.35.66.99)
[22:25:42] <lntl> thanks for taking a look!
[22:27:30] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[22:27:42] *** Joins: mike18_ (~geri@217-149-162-237.nat.highway.telekom.at)
[22:28:10] <bn_work> anyone know if #pypa made it over from freenode?  seems empty over here on libera
[22:28:20] <bn_work> (had an anaconda question)
[22:28:45] *** Joins: Jefren1 (~Jefren@70.35.66.140)
[22:30:05] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:30:25] <nedbat> bn_work: #pypa is here, but is super quiet.  ask here.
[22:30:32] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[22:30:55] *** Quits: Jefren (~Jefren@70.35.66.99) (Ping timeout: 258 seconds)
[22:30:58] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:31:03] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[22:31:10] *** Joins: Jefren2 (~Jefren@70.35.67.187)
[22:32:09] <mike18_> generated_files = [x for x in dirs if x.endswith(".json")] ... how to check for .json and .txt files?
[22:32:32] <bjs> mike18_: `or x.endswith(".txt")`  ?
[22:32:43] <bjs> (see also pathlib and glob())
[22:32:56] <mike18_> betterh pathlib?
[22:33:02] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:33:07] <stats4647> Hi, " import dj_rest_auth ; print( dj_rest_auth.__version__ ) " tells me there is no such attribute, is there an alternate way of checking the version ? TIA
[22:33:14] <jochum> mike18_: those are two different things
[22:33:30] *** Joins: Jefren3 (~Jefren@70.35.66.137)
[22:33:34] *** Quits: Jefren1 (~Jefren@70.35.66.140) (Ping timeout: 268 seconds)
[22:33:59] <bjs> mike18_: I didn't understand the question
[22:34:09] <jochum> stats4647:  import dj_rest_auth ; print( dj_rest_auth.__version__.__version__ ) ?
[22:34:43] *** Joins: BlessJah (~BlessJah@user/blessjah)
[22:34:48] <stats4647> jochum: nope
[22:34:49] <jochum> stats4647: also try from dj_....__version__ import __version__ as dra_version
[22:34:51] <jochum> hmmm
[22:35:01] <jochum> https://github.com/iMerica/dj-rest-auth/blob/master/dj_rest_auth/__version__.py <-- dra version
[22:35:31] <stats4647> jochum: what do you mean ? sorry
[22:35:31] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[22:35:46] *** lukedashjr is now known as luke-jr
[22:36:06] *** Joins: Jefren4 (~Jefren@70.35.66.61)
[22:36:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:36:17] *** Quits: hyper_dave (~hyper_dav@197.156.86.105) (Ping timeout: 258 seconds)
[22:36:23] <jochum> stats4647: please run: "import sys, pprint, dj_rest_auth; pprint.pprint(sys.modules);"
[22:36:28] *** Quits: Jefren2 (~Jefren@70.35.67.187) (Ping timeout: 272 seconds)
[22:36:43] <Julian> mike18_: [x for x in dirs if x.endswith((".txt", ".json"))]
[22:36:49] <jochum> stats4647: then lookup dj_rest_auth in there go to the path and see if you have a folder __version__
[22:37:05] <jochum> stats4647: I don't know the internals of dra
[22:37:08] <Julian> stats4647: use importlib.metadata to check versions of packages
[22:37:16] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[22:37:25] <Julian> stats4647: https://docs.python.org/3/library/importlib.metadata.html#overview
[22:37:27] <jochum> Julian: it works reliable?
[22:37:31] <Julian> Yes.
[22:37:33] <stats4647> jochum: what's dra?
[22:37:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:37:42] <jochum> dj_rest_auth
[22:37:58] <jochum> but stats4647 seems Julian has something better for that usecase.
[22:38:12] *** Quits: Jefren3 (~Jefren@70.35.66.137) (Ping timeout: 258 seconds)
[22:38:20] <stats4647> jochum: don't all Python packages follow the same version specification method?
[22:38:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:38:34] <jochum> stats4647: you mean in code or in metadata?
[22:38:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:38:45] <jochum> stats4647: in code not.
[22:38:48] *** Joins: Jefren (~Jefren@70.35.66.114)
[22:39:12] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:39:43] <jochum> metadata = contents of setup.py during create (correct me Julian), code = stuff you type as you want (other python files)
[22:39:44] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[22:40:06] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Read error: Connection reset by peer)
[22:40:13] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:481e:5930:702e:cb32)
[22:40:23] <Julian> yes kind of, but setuptools (setup.py) isn't the only way to build packages
[22:40:30] *** Joins: MikZyth (~MikZyth@188.65.242.223)
[22:40:46] <jochum> Julian: please teach me the others :)
[22:40:49] <Julian> importlib.metadata is the most portable way to check for package versions at this point -- it works even if the package authors didn't create an attribute somewhere with that info
[22:40:54] *** Quits: Jefren4 (~Jefren@70.35.66.61) (Ping timeout: 272 seconds)
[22:40:56] <Roey> kind of like this https://www.youtube.com/watch?v=CADR3_fz6ho
[22:41:00] <Julian> and it works even if the package was installed via some other package manager
[22:41:09] <Julian> as long as it follows PEP5somethingsomething
[22:41:30] <jochum> Roey: for me, the youtube?
[22:41:59] <Roey> jochum: I'mjust responding randomly, with a video I just found :)
[22:42:10] <jochum> Roey: hmm ok, it a nice one
[22:42:19] <Roey> :)
[22:42:35] <jochum> SUPERMAN AND SPIDERWOMAN --- With w.nder w..an :)
[22:42:42] <Roey> jochum: are you just learning pytho?
[22:42:44] <Roey> *python
[22:42:55] <jochum> Roey: no I have a lot experience with python.
[22:42:55] *** Joins: Jefren1 (~Jefren@206.253.157.222)
[22:42:59] <jochum> Roey: thanks for asking though
[22:43:07] <Roey> jochum: I know I know, how can anyone mess that one up :P heh
[22:43:11] <Roey> jochum: oh, ok then!
[22:43:30] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:a614:f13f:5413:70c8:40e2) (Ping timeout: 240 seconds)
[22:43:47] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[22:44:42] *** Quits: Jefren (~Jefren@70.35.66.114) (Ping timeout: 240 seconds)
[22:45:21] <jochum> I got a Junior at work, after just one year he learned the basics of python, dart and php
[22:46:52] *** Joins: Jefren2 (~Jefren@206.253.157.234)
[22:47:25] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:47:30] *** Quits: Jefren1 (~Jefren@206.253.157.222) (Ping timeout: 240 seconds)
[22:47:56] *** Joins: gbristol_ (~gbristol@hermes.gbristol.net)
[22:48:00] *** gbristol_ is now known as gbristol
[22:49:00] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[22:51:11] <jinsun> jochum: if you wanted to know about setuptools alternatives, there is flit and poetry, also look at PEP 517
[22:51:22] *** Quits: Jefren2 (~Jefren@206.253.157.234) (Ping timeout: 245 seconds)
[22:51:53] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[22:52:47] <jochum> jinsun: thanks
[22:53:35] *** Quits: gusto (~Augustus@2620:149:e0:6002::20a) (Quit: Textual IRC Client: www.textualapp.com)
[22:53:55] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[22:54:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:55:09] *** Joins: infi (~infi@user/infi)
[22:56:02] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Remote host closed the connection)
[22:57:03] <stats4647> Hi, what's the recommended method for installing a custom Python version on a Linux system (Ubuntu) ?
[22:57:15] <Wooble> stats4647: pyenv
[22:57:20] <grym> +1 pyenv
[22:57:38] <grym> with https://github.com/pyenv/pyenv-installer, even
[22:58:08] <stats4647> Wooble: grym: thank you vm
[22:58:38] *** Joins: hyper_dave (~hyper_dav@197.156.86.105)
[23:01:01] <hodapp> anyone know of libraries for visualization (in a similar manner as matplotlib) but with some interactivity support, e.g. clicking a point in a scatter plot and being able to react to it?
[23:01:22] <hodapp> ideally, that can work in Jupyter, but I've kind of given up on that
[23:01:48] *** Joins: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282)
[23:02:19] <Helle> hodapp: yes, there is matplotlib
[23:02:22] <grym> hodapp: altair? https://altair-viz.github.io/
[23:02:27] <Helle> hodapp: it actually supports interactivity
[23:02:39] <grym> hodapp: altair/vega/... is a jake vanderplas thingie
[23:02:56] <Helle> I've written a buuuunch of exercises for students using matplotlib where matplotlib was used interactively in the framework
[23:03:07] <hodapp> Helle: I was not finding much for the particular sort of interactivity I was looking for, unless I wanted to pretty much do it completely manually
[23:03:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:03:33] <Helle> hodapp: well, the clicking a point I've actually implemented in that (as well as dragging points)
[23:04:01] <Helle> I will admit you may have to write some slightly low level code for some possible interaction
[23:04:03] *** Joins: kostkon (~androirc@2a02:587:a10c:9c2c:c966:80f7:658a:9689)
[23:04:15] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-e8e0-40c9-c788-8ef8.res6.spectrum.com)
[23:04:41] <grym> hodapp: see pretty slidey thingie https://github.com/altair-viz/altair#example
[23:05:10] *** Joins: canurabus (~cheerscam@ip-24-54-78-4.user.start.ca)
[23:05:45] <Helle> (note, at the time matplotlib was really the only option, so I am not saying don't look at altair)
[23:06:55] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:59] <hodapp> grym: this looks promising
[23:07:19] <canurabus> I'm working on a pretty confusing large python application that makes a total mess of logging and outputs using multiple loggers to multiple files and some stuff to stdout as well. Within this mess, normal print(...) statements don't seem to do anything. Is there a quick way to figure out where the output from print() is going?
[23:07:21] <hodapp> looking for an example that is something like showing an image when clicking a point
[23:07:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:09:51] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[23:09:54] <hodapp> https://altair-viz.github.io/gallery/select_detail.html oh here we go
[23:10:18] *** Joins: KevinX (~KevinX@185.245.86.84)
[23:12:56] *** Joins: Jefren2 (~Jefren@70.35.67.108)
[23:13:05] *** Joins: d00gy (~d00gy@user/d00gy)
[23:13:05] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[23:13:08] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[23:14:49] *** Joins: Jefren3 (~Jefren@70.35.67.6)
[23:15:29] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:15:45] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[23:16:50] *** Joins: Jefren4 (~Jefren@70.35.67.144)
[23:17:42] *** Quits: Jefren2 (~Jefren@70.35.67.108) (Ping timeout: 252 seconds)
[23:17:43] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[23:18:20] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:19:03] *** Joins: DaNeenjah (~jake@21.sub-72-106-110.myvzw.com)
[23:19:05] *** Joins: Jefren (~Jefren@70.35.67.39)
[23:19:22] *** Quits: Jefren3 (~Jefren@70.35.67.6) (Ping timeout: 240 seconds)
[23:20:07] *** Quits: infi (~infi@user/infi) (Ping timeout: 245 seconds)
[23:20:42] *** Joins: cyphase (~cyphase@user/cyphase)
[23:21:30] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[23:21:40] *** Quits: Jefren4 (~Jefren@70.35.67.144) (Ping timeout: 268 seconds)
[23:22:07] *** Joins: P1ro (~quassel@user/p1ro)
[23:23:13] *** Joins: infi (~infi@user/infi)
[23:23:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:23:51] *** Quits: Jefren (~Jefren@70.35.67.39) (Ping timeout: 276 seconds)
[23:24:12] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[23:24:15] *** Joins: Jefren (~Jefren@70.35.67.246)
[23:25:01] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[23:25:21] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 258 seconds)
[23:26:42] *** Quits: canurabus (~cheerscam@ip-24-54-78-4.user.start.ca) (Quit: Client closed)
[23:27:22] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:27:25] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:27:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[23:28:33] *** lukedashjr is now known as luke-jr
[23:30:55] *** Quits: Jefren (~Jefren@70.35.67.246) (Ping timeout: 268 seconds)
[23:31:26] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[23:32:17] *** Joins: Jefren (~Jefren@70.35.66.193)
[23:32:38] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[23:33:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:34:05] *** Joins: rk04 (~rk04@user/rajk)
[23:35:18] *** Joins: jay-m126_ (~jay-m@129.0.205.223)
[23:36:47] *** Joins: Jefren1 (~Jefren@70.35.66.98)
[23:36:51] *** Quits: Jefren (~Jefren@70.35.66.193) (Ping timeout: 258 seconds)
[23:38:00] *** Quits: BernieMont (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab) (Ping timeout: 258 seconds)
[23:38:34] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[23:39:09] *** Quits: vapour (vapour@eris.noname-ev.de) (Ping timeout: 252 seconds)
[23:39:17] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[23:39:30] *** Quits: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[23:39:45] *** Joins: Jefren2 (~Jefren@70.35.67.19)
[23:40:40] *** audio is now known as audiocat
[23:40:45] *** Joins: rndm (~arossi@143.59.164.79)
[23:41:17] *** Joins: kosh (~kosh@user/kosh)
[23:41:27] *** Quits: Jefren1 (~Jefren@70.35.66.98) (Ping timeout: 258 seconds)
[23:41:42] *** Joins: cul8r (~cul8r@c-73-26-110-61.hsd1.nm.comcast.net)
[23:42:29] *** Joins: Elzington_ (~Elzington@68.235.43.38)
[23:42:34] *** Quits: Elzington (~Elzington@68.235.43.126) (Ping timeout: 240 seconds)
[23:43:10] <rndm> am I using TypeAlias wrong on Python3.10rc1? bleeding edge mypy gives `Variable "typing.TypeAlias" is not valid as a type` for something like `TKey: TypeAlias = Union[int, str]`
[23:43:38] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:46:40] <phy1729> I thought TypeAlias was just needed for string forward declared types
[23:48:21] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 258 seconds)
[23:48:54] <rndm> phy1729: that could be very well be the mistake.
[23:49:51] *** Quits: koziad (~koz@user/koziad/x-1285628) (Ping timeout: 276 seconds)
[23:49:52] *** Joins: Cyp (~cyp@192038129116.mbb.telenor.dk)
[23:50:28] *** Joins: P1ro_ (~quassel@user/p1ro)
[23:51:48] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[23:53:44] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 272 seconds)
[23:54:18] *** Quits: rndm (~arossi@143.59.164.79) (Quit: WeeChat 3.2)
[23:54:41] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:55:05] *** Joins: rndm (~arossi@143.59.164.79)
[23:55:43] <jinsun> rndm: that seems like a mypy bug, it complains even for the example given in the docs https://docs.python.org/3.10/library/typing.html#typing.TypeAlias
[23:56:27] *** Quits: seednode (~seednode@user/seednode) (Read error: Connection reset by peer)
[23:56:48] <jinsun> and just checked on vscode, pyright doesn't complain
[23:57:04] *** Joins: seednode (~seednode@user/seednode)
[23:57:10] *** Quits: Jefren2 (~Jefren@70.35.67.19) (Ping timeout: 258 seconds)
[23:57:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[23:58:50] *** Quits: death916 (~death916@user/death916) (Ping timeout: 252 seconds)
