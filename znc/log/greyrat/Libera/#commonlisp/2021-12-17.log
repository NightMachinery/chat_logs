[00:02:17] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
[00:05:23] *** Quits: cage (~cage@dynamic-adsl-84-220-217-231.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:11:28] *** Joins: Everything (~Everythin@37.115.210.35)
[00:16:34] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[00:28:50] *** Joins: gaqwas (~john@dynamic-077-007-085-126.77.7.pool.telefonica.de)
[00:32:48] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[00:32:51] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Read error: Connection reset by peer)
[00:32:54] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[00:33:01] *** Quits: gaqwas (~john@dynamic-077-007-085-126.77.7.pool.telefonica.de) (Read error: Connection reset by peer)
[00:33:34] *** Joins: gaqwas (~john@dynamic-077-007-085-126.77.7.pool.telefonica.de)
[00:34:01] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[00:34:02] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[00:34:47] *** Inline__ is now known as Inline
[00:50:12] *** Joins: Algernon91 (~Algernon6@88.124.69.179)
[00:55:19] *** Quits: pve (~pve@37-136-70-224.rev.dnainternet.fi) (Quit: leaving)
[00:59:02] *** Joins: lisp123 (~lisp123@45.86.202.12)
[01:03:32] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
[01:04:30] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) ()
[01:08:04] <pdietz> CASE uses eql, not eq.   Specifically, it sees if the value and a key in a clause are the "same", which is defined to be eql.
[01:08:41] <pdietz> It would be very strange if it used eq, as this would be terribly underspecified on numbers and characters.
[01:09:48] <rotateq> hah yes
[01:20:59] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:22:49] *** Quits: cosimone (~user@93-47-229-223.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:25:17] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[01:28:01] *** Quits: attila_lendvai (~alendvai@catv-80-99-178-127.catv.broadband.hu) (Ping timeout: 256 seconds)
[01:33:00] *** Quits: theothornhill (~user@2a01:799:15a2:4900:a55c:f60a:7dd3:337a) (Remote host closed the connection)
[01:37:43] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[01:57:29] *** Quits: gaqwas (~john@dynamic-077-007-085-126.77.7.pool.telefonica.de) (Ping timeout: 256 seconds)
[01:59:54] *** Joins: lisp123 (~lisp123@45.86.202.12)
[02:03:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[02:04:31] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 245 seconds)
[02:05:33] *** Joins: notzmv (~zmv@user/notzmv)
[02:23:17] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 240 seconds)
[02:23:37] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[02:29:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[02:30:07] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:31:21] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[02:32:43] <Guest74> candlejack wouldn't jackfrost be more appropriate?
[02:40:37] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 240 seconds)
[02:43:55] *** Joins: hisacro (~OBSD@my.displ.nl)
[02:45:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[02:50:45] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[02:51:18] *** Joins: mason0 (~bc8147f2@cerf.good1.com)
[02:53:26] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:58:32] *** Quits: Algernon91 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[03:01:01] *** Joins: lisp123 (~lisp123@45.86.202.12)
[03:05:37] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
[03:11:57] <NotThatRPG> Trying to get ITERATE to test with clisp (why do I bother?) and when i try to build it with ASDF I get this: "ITERATE build failed with an error: TRANSLATE-PATHNAME: replacement pieces ((:DIRECTORY "Users" "rpg" "lisp" "iterate") "package" "fas" :NEWEST) do not fit into #P"/Users/rpg/lisp/iterate/test/cache/**/*.*"a" which ... I have no idea what it means.
[03:12:27] *** Joins: igemnace (~ian@user/igemnace)
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::103e) (Remote host closed the connection)
[03:18:03] *** Joins: Jing (~hedgehog@2604:a840:3::103e)
[03:19:46] <NotThatRPG> My guess is that clisp implements MERGE-PATHNAMES in some different way than other lispen
[03:21:30] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:26:26] <semz> I know :absolute and :relative, but :directory seems weird to me.
[03:27:33] <NotThatRPG> I answer my own question -- clisp pukes unless I also supply `:version :wild` because ... pedantic
[03:29:05] <NotThatRPG> Because in 1990 there were still filesystems with versioning.
[03:29:41] <Guest74> makes you pine for the old days eh?
[03:34:48] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[03:36:15] *** Joins: Bike (~Bike@71.69.170.70)
[03:36:15] *** ChanServ sets mode: +o Bike
[03:45:00] <pjb> NotThatRPG: it means that your path is missing "test" and "cache" to match the pattern.
[03:46:16] <pjb> NotThatRPG: also, indeed, in the translations you will need a pattern with 3 stars if you specify a version: **/*.*.* --> something ; **/*.* --> something  and **/* --> something
[03:48:31] *** Joins: jealousmonk (~user@2804:431:e7c4:c1f0:2b8b:886e:308:fb5c)
[03:54:17] <NotThatRPG> Guest74: No, just makes me wish clisp would crawl into a hole and die.
[04:02:21] *** Joins: lisp123 (~lisp123@45.86.202.12)
[04:06:44] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:07:15] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 256 seconds)
[04:10:35] *** Joins: yewscion (~yewscion@2604:ca00:14c:442d::1060:2db4)
[04:16:13] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:d101:cff8:e2d9:4ac2)
[04:21:59] *** Joins: anticomputer_ (~anticompu@gateway/tor-sasl/anticomputer)
[04:22:30] *** Quits: anticomputer (~anticompu@gateway/tor-sasl/anticomputer) (Ping timeout: 276 seconds)
[04:34:05] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:40:26] <jcowan> Interlisp still does versioning, using the emacs convention
[05:03:29] *** Joins: lisp123 (~lisp123@45.86.202.12)
[05:04:39] *** Quits: Catie (~user@user/catie) (Quit: Going home)
[05:07:57] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 240 seconds)
[05:09:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[05:11:50] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[05:19:59] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 252 seconds)
[05:29:20] *** Quits: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:02:35] <fitzsim> why doesn't clisp do a new release?
[06:02:43] <fitzsim> it seems like there has been some development
[06:02:59] <fitzsim> and there's a PLN patch set pending for about a year now
[06:03:30] <fitzsim> development seems to have been migrated to gitlab
[06:03:49] <fitzsim> it just seems like its maintainers could do a release, not sure why they don't
[06:04:37] *** Joins: lisp123 (~lisp123@45.86.202.12)
[06:05:40] <fitzsim> it's a good implementation, and it's useful for bootstrapping; it's a shame that it hasn't had a new release in such a long time
[06:08:34] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[06:09:29] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[06:09:40] *** Quits: lisp123 (~lisp123@45.86.202.12) (Ping timeout: 268 seconds)
[06:13:31] <hayley> Building CLISP is not fun, since I can't ever find a suitable version of libsigsegv, even while following the instructions to a T.
[06:13:45] <hayley> Usually I bootstrap from ECL, which tends to run a bit faster too.
[06:20:37] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[06:20:53] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:20:57] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[06:20:57] *** ChanServ sets mode: +o pl
[06:22:11] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:26:10] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:26:26] *** Quits: splittist (sid17737@id-17737.tinside.irccloud.com) (Ping timeout: 260 seconds)
[06:27:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:27:42] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:28:45] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:29:07] *** Joins: lisp123 (~lisp123@45.86.202.12)
[06:29:38] *** Joins: splittist (sid17737@id-17737.tinside.irccloud.com)
[06:42:05] <jcowan> Who cares if Clisp has a formal release as long as changes to the repo are being made?
[06:43:57] *** Quits: yewscion (~yewscion@2604:ca00:14c:442d::1060:2db4) (Ping timeout: 240 seconds)
[06:50:13] *** Joins: Lycurgus (~juan@98.4.112.204)
[06:53:29] *** Quits: lisp123 (~lisp123@45.86.202.12) (Quit: Leaving...)
[06:55:46] <mfiano> Not very many I'd assume, though for different reasons.
[07:01:04] <Lycurgus> i like c and I like lisp. Clisp nyet.
[07:02:24] <Lycurgus> society should work on mechanisms for backing out bad ideas gracefully
[07:06:37] *** Quits: taiju (~taiju@240b:253:ec40:2400:19c3:7b50:512d:d28) (Ping timeout: 240 seconds)
[07:07:04] <Lycurgus> after one for recognizing them igess
[07:10:49] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[07:11:41] *** Joins: taiju (~taiju@240b:253:ec40:2400:19c3:7b50:512d:d28)
[07:12:18] <Lycurgus> sometimes such bad ideas are transformed by the force of history/events as in the case of c++, which 30 ya, I would have said the same about
[07:12:37] <Lycurgus> then it would be i like c and i like smalltalk
[07:17:44] <Lycurgus> but i didn about clos because it was being done right
[07:29:27] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:33:56] * mfiano waits for the inevitable
[07:34:11] <hayley> Why would you like C then?
[07:35:34] <beach> Good morning everyone!
[07:35:43] <mfiano> At last!
[07:37:20] <hayley> Which, beach saying good morning, or me asking why one would like Lisp and C but not C++?
[07:37:41] <beach> I hope it's not me.
[07:38:00] <mfiano> beach. My day is complete now. That is usually my signal that it is late for me :)
[07:40:17] <Lycurgus> i said i felt that way about c++ c. 1991
[07:40:37] <Lycurgus> not after it began to be what it is now
[07:41:08] <Lycurgus> at that time it was basically on the same level as the c preprocessor
[07:41:48] <mfiano> How is this on-topic, or even Lispy in general? It's sort of disgusting to even think about C++...
[07:42:26] <Lycurgus> in re clisp
[07:43:14] <Lycurgus> which if it is a descendant of kyoto i was working with about that time, ported it (AKCL) to os/2
[07:45:25] <hayley> I think Kyoto CL led to ECL. CLISP was originally written for the Amiga from memory.
[07:46:41] <Lycurgus> ah
[07:49:42] <Lycurgus> anybody used netclos or other actorish thing in cl?
[07:51:56] <Lycurgus> (and no lparallel)
[07:52:01] <Lycurgus> *not
[07:55:48] <hayley> I wrote a supervisor tree library called "bailout" but never used it.
[07:57:19] <hayley> But that's not much of an actor library; my reason for writing it was to handle resetting shared state like resetting an actor.
[07:59:12] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:59:38] * Lycurgus reviews supervision trees on erlang site
[08:01:54] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:13:05] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:14:41] *** Joins: semz (~none@user/semz)
[08:14:46] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[08:23:27] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[08:50:49] *** Joins: Oladon (~olad@98.43.81.226)
[08:53:36] *** Quits: jealousmonk (~user@2804:431:e7c4:c1f0:2b8b:886e:308:fb5c) (Quit: sleep)
[09:03:21] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[09:53:43] <Guest74> Really need to pay attention to sbcl's comments. Kept wondering why it was telling me yesterday that SORTs results shouldn't be discarded.  I seem to always forget SORT is destructive even without the N.
[09:56:21] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:58:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:59:16] <beach> Except that the argument is not a sorted version of what it was before the call.
[10:03:32] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[10:05:21] <Guest74> that part I remember, I just kept doing things like trying to take the length of the initial sequence.
[10:06:06] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:08:01] <_death> yeah, some days ago I also had a (list (sort seq ...) (length seq)) thinko
[10:08:56] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 268 seconds)
[10:10:31] <Guest74> yeah, I did exactly that today.  Wasn't obvious in my djikstra(sp?) when i kept getting warnings, but today was hard to not spot what was going on.
[10:11:05] *** Joins: yewscion (~yewscion@2601:547:a00:7720:97c:de4a:6d5b:342)
[10:16:26] <_death> for dijkstra better use a priority queue ;)
[10:18:54] *** Quits: mason0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[10:19:14] <Guest74> yeah, I don't have one yet.  haven't even looked at any already done libs.
[10:19:52] <Guest74> i mean, i didn't even have the djikstra!
[10:20:36] <_death> I've dijkstra stashed somewhere, but my A* is more readily available so I used that
[10:22:06] <Guest74> I did look up A* star today and will probably go with that, seems easier to implement generally in my head.
[10:22:21] <Guest74> ugh, i'm tired I can't write.
[10:23:21] <_death> it will likely be needed again soon
[10:25:13] <Guest74> yeah, seems like they usually have at least two.
[10:27:49] <_death> hmm, fewer A* solutions than I expected.. 2016: 4, 2018: 1, 2019: 2, 2021: 1
[10:31:02] *** Joins: easye (~user@oxi.slack.net)
[10:32:59] <Guest74> hey thanks for that.  I've been wondering about data to check my implementation.  Looks like 2016 is where it's at.
[10:33:44] <Guest74> though I guess I should probably finish the 3 i didn't do in the past couple years.
[10:36:10] <_death> 2019 had 4 bfs solutions.. maybe that's why I expected more
[10:43:56] <Guest74> maybe that's what I was thinking about. That's a big chunk of what i'm missing for that year.
[10:44:15] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:51:16] *** Joins: treflip (~user@user/treflip)
[10:52:59] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:64ae:8efe:d760:2183)
[10:56:05] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Quit: MichaelRaskin)
[11:02:36] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:64ae:8efe:d760:2183) (Ping timeout: 268 seconds)
[11:06:45] *** Joins: gaqwas (~john@dynamic-095-115-128-022.95.115.pool.telefonica.de)
[11:10:01] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:64ae:8efe:d760:2183)
[11:11:26] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ff:b2cc:e0f8:fbba:57ed:e51b)
[11:13:18] <_death> https://plaster.tymoon.eu/view/2780#2780
[11:15:33] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:64ae:8efe:d760:2183) (Ping timeout: 268 seconds)
[11:24:43] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[11:26:01] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[11:26:42] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:32:46] *** Quits: kuao (uid504326@id-504326.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:42:19] *** Joins: cage (~cage@dynamic-adsl-84-220-217-231.clienti.tiscali.it)
[11:53:24] *** Joins: attila_lendvai (~alendvai@catv-80-99-178-127.catv.broadband.hu)
[12:10:25] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:10:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:36:02] * hayley takes 1.25 hours for the lyrics to click in her head.
[12:40:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[12:41:17] *** Quits: gaqwas (~john@dynamic-095-115-128-022.95.115.pool.telefonica.de) (Ping timeout: 240 seconds)
[12:44:54] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 260 seconds)
[12:45:16] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[12:56:17] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[12:58:32] *** Joins: karlosz (~karlosz@47.151.136.69)
[13:00:28] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[13:01:02] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[13:06:16] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:16:33] <candlejack> Lycurgus: here is the history of the kcl family: https://common-lisp.net/project/ecl/static/manual/History.html#History
[13:17:06] <candlejack> during one of els I've been talking a bit about it too
[13:17:37] *** candlejack is now known as jackdaniel
[13:17:43] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:17:46] <jackdaniel> Guest74: no, candlejack is just fine
[13:18:59] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[13:25:14] *** Joins: shka (~herr@109.231.0.226)
[13:26:11] *** Joins: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de)
[13:30:36] *** Joins: karlosz (~karlosz@47.151.136.69)
[13:32:53] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[13:33:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:33:21] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[13:43:49] <Lycurgus> jackdaniel, yes have seen similar. After speaking i realized xKCL is just c implementation as oppossed to c targetting or whatever in clisp
[13:46:39] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:47:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:49:27] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[13:49:29] *** Lord_of_Life_ is now known as Lord_of_Life
[13:53:02] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 260 seconds)
[14:00:38] <phoe> Online Lisp Meeting #12 starting in 30 minutes - https://www.twitch.tv/TwitchPlaysCommonLisp
[14:01:16] <phoe> I have not managed to set up an IRC bridge this time, apologies - commenting will need to happen on Twitch.
[14:01:32] <jackdaniel> and what is the topic?
[14:01:45] <phoe> "Turning dpANS into new Specification Documents" by scymtym
[14:02:10] <jackdaniel> I see, thanks
[14:02:17] <_death> thanks for the reminder
[14:02:54] <scymtym> so discussion in twitch chat?
[14:03:02] <phoe> yes
[14:03:49] <scymtym> ok, i think i still have my account
[14:16:59] <flip214> babel, flexi-streams, and sbcl each have a few unicode tables - in files called enc-cn-tbl.lisp resp. enc-jpn-tbl.lisp.
[14:17:18] <flip214> Is there a chance to re-use some of them, to reduce the redundant data in an image?
[14:18:32] <rotateq> oh i wanted to join too
[14:19:40] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:20:13] <jackdaniel> rotateq: you still can, it starts at 12
[14:20:15] <jackdaniel> cet
[14:20:19] <jackdaniel> (in 10 minutes))
[14:20:41] <Nilby> flip214: worse they frequently have slightly differing data depending on when they were last updated from official unicode tables
[14:20:42] <rotateq> i have no twitch acc, so just passively, but thanks that I'm allowed
[14:20:49] <phoe> plus the talk itself will be on YT
[14:21:12] <rotateq> ah also live?
[14:21:22] <phoe> rotateq: I did not find the time to set up an IRC bridge between twitch and libera, apologies
[14:21:57] <phoe> but yes, the talks are basically video playbacks with live commentary on Twitch chat
[14:21:57] <rotateq> phoe: don't worry, I doubt I could say anything of worthiness like most times here
[14:22:20] <phoe> even if all you can do is ask questions then good questions are worth their weight in gold :D
[14:22:32] <rotateq> hm wonders me if twitch uses elixir/erlang for its backend too like discord does
[14:22:50] <flip214> Nilby: yeah, that too
[14:22:54] <phoe> there was a big twitch code leak recently, maybe you can check it out yourself
[14:23:00] <rotateq> phoe: yes at work that was mostly my part :)
[14:23:09] <flip214> sadly that's a cross-project effort, so no single bug-tracker would help
[14:23:17] <rotateq> oha
[14:23:28] <phoe> flip214: we'd need to have some common way of accessing and upgrading unicode tables and then hook into that across the projects
[14:23:31] <flip214> that's why I bring it up here, hoping that the maintainers find a solution
[14:24:01] <flip214> phoe: even a trivial-unicode-tables isn't nice as a prerequisite for implementations...
[14:24:12] <flip214> they aim to be working by themselves, which is a nice goal
[14:24:17] <rotateq> i should dig again and more into erlang or LFE too. discord also use afaik rust NIFs too for extra performance, but very offtopic besides LFE
[14:24:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[14:24:33] <phoe> flip214: I wish that trivial-unicode-tables was something that was actually implemented by implementations themselves
[14:24:34] <jackdaniel> lfe is also offtopic on this channel
[14:24:44] <rotateq> hm so the topic later has to do what WSCL will be for?
[14:24:51] <phoe> rotateq: #lisp will be better for LFE since it doesn't discriminate between Lisp dialects :D
[14:25:13] <rotateq> jackdaniel: yes right, as it's more maclisp. they don't want GENSYM as it shall violate concurrency things
[14:25:17] <flip214> phoe: the problem is that the data is stored in different formats now - 2d array, list of lists, ...
[14:25:18] <_death> how big are these tables?
[14:25:24] <rotateq> :D
[14:25:32] <flip214> but perhaps they get all computed into similar hash tables?
[14:25:43] <rotateq> all those trivial packages :)
[14:25:45] <phoe> flip214: that's a good question
[14:25:48] <flip214> _death: my estimate is ~350kB for the JP 2d array _input_
[14:26:07] <Nilby> Some are not a good fit for simple hash tables.
[14:26:09] *** Quits: mgxm (~mgxm@user/mgxm) (Quit: ....)
[14:26:19] <flip214> that gets converted to a hash-table, I believe -- but the input stays around, as it's a constant
[14:26:28] *** Joins: mgxm (~mgxm@user/mgxm)
[14:27:04] <flip214> _death: but then there's a chinese table as well...
[14:28:26] <flip214> so, if there was some good, common representation (perhaps defined via some trivial function that gets inlined anyway?), I'd hope for a half a megabyte or one megabyte saved for each core
[14:29:03] <phoe> Online Lisp Meeting #12 starting NOW: https://www.twitch.tv/TwitchPlaysCommonLisp
[14:29:38] <jackdaniel> flip214: are you trying to fit sbcl on amiga?
[14:29:39] <_death> flip214: I see jpn-table.lisp is 350K, but the tables there (which are represented inefficiently..) are pretty small?
[14:29:47] <hayley> Hey, it still says 30 seconds on the clock...
[14:33:31] <phoe> hayley: better be 30 second early than 30 seconds late
[14:38:43] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[14:38:48] *** Joins: random-nick (~random-ni@87.116.181.93)
[14:39:23] <rotateq> was Kent Pitman at the time of making the hyperspec also an employee at LispWorks?
[14:40:04] <flip214> jackdaniel: _death: I did (sb-introspect::object-size (make-array (array-total-size  sb-impl::+gbk-to-ucs-table+)))
[14:40:17] <beach> rotateq: It may have been called something else, like Lucid.
[14:40:21] <flip214> jackdaniel: and _why_not_ save half a meg?
[14:41:01] <jackdaniel> Harequin I think
[14:41:14] <beach> Ah, yes, Harlequin.
[14:41:15] <rotateq> thx beach. and sorry, I have no twitch account, but it runs here too
[14:43:08] <rotateq> and yes "one does not easily parse TeX sources" :)
[14:43:13] <jackdaniel> unicode tables are big if we count kilobytes yes
[14:43:48] <jackdaniel> it is probably somewhat easier to parse a concrete document than arbitrary tex sources
[14:44:04] <jackdaniel> when you hit issues you may incrementally add operators
[14:44:12] <jackdaniel> (to the parser)
[14:44:30] <rotateq> scymtym: you are very well understandable by the way :)
[14:44:53] <scymtym> rotateq: thanks
[14:48:26] <beach> Yes, scymtym seems to know that "preposition is a word you cannot end a sentence with". :)
[14:50:20] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[14:50:57] *** Joins: rogersm (~rogersm@90.166.177.48)
[14:51:07] *** Quits: rogersm (~rogersm@90.166.177.48) (Remote host closed the connection)
[14:55:24] <rotateq> maybe someone can tell me sometimes about this mentioned famous PROG2 error
[14:55:31] <hayley> clhs prog2
[14:55:32] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/m_prog1c.htm
[14:56:01] <hayley> Read the description of prog2 very carefully.
[14:56:04] <phoe> tl;dr prog1 returns the first value whereas prog2 returns the first value
[14:56:20] <rotateq> hayley: i will later, i never used it yet nor prog1
[15:15:16] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[15:15:36] *** Joins: paule32 (~paule32@user/paule32)
[15:18:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[15:19:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:25:02] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[15:26:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:27:05] <rotateq> brrrr javascript
[15:27:27] <rotateq> how long will the talk be?
[15:27:35] <jackdaniel> it is basically scheme, isn't it? (at least that's how the lore goes ,)
[15:27:37] <phoe> 1h20min
[15:27:47] <beach> rotateq: Another 20 minutes or so.
[15:28:49] <rotateq> okay good length
[15:29:16] <rotateq> jackdaniel: yes in C's clothes. and afaik Eich also used CL for prototyping it, or another dialect
[15:29:36] <hayley> jackdaniel: "JavaScript is Lisp!" "No it's not, it's Scheme" "JavaScript is Scheme!" "No it's not, it's Self" "JavaScript is Self!" "Goddammit!"
[15:30:30] <jackdaniel> rotateq: that was mostly a joke. He /planned/ to use scheme, but was given a ridiculus timeline and a requirement "should look like java"
[15:30:42] <rotateq> yes :D
[15:30:57] <jackdaniel> and here we are, a few decades later
[15:31:20] <hayley> "Don’t tell me it’s got lexical scope, because JavaScript’s scoping is an abomination in the face of God. Guy Steele isn’t even dead and JS scope makes him pre-emptively roll in his not-yet-occupied grave." - Bob Nystrom
[15:31:37] <rotateq> i shouldn't comment more on the situation :)
[15:32:00] <jackdaniel> online version posted, me dips to navigate draftospec
[15:32:24] <rotateq> hayley: I was a bit suprprised when reading that Steele also was involved in crafting Java originally.
[15:32:37] *** Quits: attila_lendvai (~alendvai@catv-80-99-178-127.catv.broadband.hu) (Ping timeout: 240 seconds)
[15:33:15] <rotateq> oh the condition system, i have to read on with that too
[15:33:49] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[15:34:08] <jackdaniel> "We were after the C++ programmers. We managed to drag a lot of them about halfway to Lisp."
[15:34:13] <jackdaniel> - Guy Steele
[15:35:01] <rotateq> yes one of my favorited quotes
[15:37:36] <rotateq> i even read yesterday for some additional example in my head, the garbage collector for C# was also prototyped in CL, so more for answering "and what is it used for?"
[15:37:51] <phoe> "Notice that no one mentions that this way they also managed to drag a lot of Lisp programmers about halfway back to C++."
[15:37:54] <phoe> - me, angrily
[15:38:37] <jackdaniel> did they though?
[15:38:52] <phoe> no, not really
[15:38:53] <_death> at least one Lisp language designer
[15:39:03] <rotateq> phoe: yes, madness. and as i watched the talk by dr-meister again some days ago, comparing IRS tax forms for template madness with poetry and lisp macros
[15:40:29] <rotateq> and as it seems twitch uses C++ and Golang for everything that must be fast and scale, so i bet a similar thing like greenspun's 10th rule but in this case as it screams for erlang, then for that :)
[15:42:19] <rotateq> scymtym: where do i find the method browser? or how to load and try it
[15:42:54] <scymtym> rotateq: repository links at the end. keep in mind that this stuff is pretty experimental, though
[15:43:08] <rotateq> very kind of you
[15:43:41] <rotateq> oh don't worry scymtym, it will be galaxies more ahead on what i could ever produce
[15:44:11] <scymtym> i mean in terms of actual usability
[15:44:30] <rotateq> no problem, thanks for all the effort
[15:45:43] *** Joins: Everything (~Everythin@37.115.210.35)
[15:45:57] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 256 seconds)
[15:47:49] *** Joins: random-nick (~random-ni@87.116.181.93)
[15:49:56] <rotateq> i also like KaTeX in rocketchat, but mathjax may be more used on websites
[15:51:53] <rotateq> I would be interested what you used for crafting the presentation.
[15:52:18] <scymtym> rotateq: org-mode with org-reveal
[15:52:33] <rotateq> ah heisig is also online
[15:53:01] <rotateq> scymtym: thanks. so i have another good thing beside latexbeamer
[15:54:10] <rotateq> nice talk
[15:54:26] <scymtym> thanks
[15:54:30] * jackdaniel claps
[15:54:59] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[15:55:13] *** Joins: heisig (~heisig@p579c8c84.dip0.t-ipconnect.de)
[15:55:47] <jackdaniel> hayley: "only firefox and safari support" -aren't they all mainstream browsers not derived from adtech? ,)
[15:56:24] <hayley> Now, what's the usage numbers of the adtech browser like again?
[15:56:25] <rotateq> hello heisig, good to see you too. wanted to write you a little email for asking how you come along with your work
[15:56:41] <rotateq> lel safari
[15:57:01] * rotateq goes on safari for hunting crabs
[15:57:05] <cage> scymtym: thanks!
[15:58:04] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[15:58:07] <jackdaniel> don't know, don't care (similar to c++ popularity,)
[15:58:38] <heisig> rotateq: Thanks, I'm making progress.  I slowed down my coding a little bit to have more time for writing my thesis.  But good stuff is happening.
[15:58:44] <rotateq> all no nyxt generation browsers :)
[15:59:23] <rotateq> heisig: i would have bet so.
[16:00:09] <rotateq> my offer still goes on, for checking if someone on a lower level can understand the text, i may read something, may it be in english or german
[16:01:10] <phoe> thanks as well
[16:01:27] <rotateq> but i think it will be minimal so well written as the petalisp paper
[16:02:21] <heisig> rotateq: I haven't forgotten your kind offer :)  I suggest we move such discussions to #petalisp.
[16:02:47] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC)
[16:03:04] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[16:06:52] <_death> heisig: I tried loading sb-simd today.. I think :fma should be added to the typespec of %encoding slot in class instruction-record
[16:08:28] <Nilby> I'm shocked, but it might be soon that my old dpans info files ride the pale horse to Valhalla.
[16:15:49] <heisig> _death: Fixed, thanks!
[16:16:11] <_death> thanks
[16:21:24] *** Parts: Everything (~Everythin@37.115.210.35) ()
[16:22:07] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Ping timeout: 256 seconds)
[16:23:47] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[16:29:43] *** Joins: Bike (~Glossina@71.69.170.70)
[16:29:43] *** ChanServ sets mode: +o Bike
[16:30:14] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[16:35:08] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:37:35] *** Quits: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:42:24] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[16:51:12] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:08:00] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:08:29] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:11:25] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:11:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[17:13:47] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:18:37] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[17:19:16] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:23:09] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[17:26:00] *** Joins: yewscion_ (~yewscion@2604:ca00:140:988::1260:702)
[17:27:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[17:27:26] *** Quits: random-nick (~random-ni@87.116.181.93) (Quit: quit)
[17:29:17] *** Quits: yewscion (~yewscion@2601:547:a00:7720:97c:de4a:6d5b:342) (Ping timeout: 240 seconds)
[17:31:46] * scymtym is available for further discussion for a bit
[17:34:55] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[17:35:58] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:37:20] *** Joins: xsperry (~xs@user/xsperry)
[17:37:39] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f)
[17:53:20] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[18:10:13] *** Joins: jealousmonk (~user@2804:431:e7c4:c1f0:2b8b:886e:308:fb5c)
[18:20:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[18:21:14] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:25:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[18:33:16] *** Joins: frgo (~frgo@217.111.125.3)
[18:33:56] *** Joins: igemnace (~ian@user/igemnace)
[18:41:53] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:48:14] <Nilby> scymtym: Great talk. I'm having trouble loading dpans-conversoin because it looks like "code/tex" directory is missing in git for the "tex" module.
[18:49:33] <scymtym> Nilby: thanks. yeah, i forgot to publish the repository then rushed it. i will try to fix things up once child is in bed
[18:51:44] <Nilby> scymtym: No rush. We've gone 27 years already. Thanks for doing this!
[19:04:38] *** Joins: rotateq (~user@185.66.193.48)
[19:07:14] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[19:07:28] *** Joins: pve (~pve@87-93-235-107.bb.dnainternet.fi)
[19:09:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[19:16:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[19:17:59] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:22:31] *** Quits: frgo (~frgo@217.111.125.3) (Remote host closed the connection)
[19:37:48] *** Joins: hobo (~hobo@69.218.33.204)
[19:39:07] *** Joins: frgo (~frgo@217.111.125.3)
[19:40:53] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:43:51] *** Joins: hhdave_ (~hhdave@ip212.ip-193-70-71.eu)
[19:44:18] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 268 seconds)
[19:44:18] *** hhdave_ is now known as hhdave
[19:58:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[19:59:26] *** Quits: heisig (~heisig@p579c8c84.dip0.t-ipconnect.de) (Quit: Leaving)
[19:59:30] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[20:00:24] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[20:10:25] *** Quits: frgo (~frgo@217.111.125.3) (Remote host closed the connection)
[20:12:36] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[20:14:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[20:18:00] *** Joins: srhm (~srhm@user/srhm)
[20:18:21] *** Quits: srhm (~srhm@user/srhm) (Client Quit)
[20:21:24] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[20:21:50] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:22:44] *** Joins: random-nick (~random-ni@87.116.181.93)
[20:27:24] *** Joins: frgo (~frgo@217.111.125.3)
[20:29:37] *** Quits: frgo (~frgo@217.111.125.3) (Read error: Connection reset by peer)
[20:29:46] *** Joins: frgo_ (~frgo@217.111.125.3)
[20:32:15] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ee:e8ad:e0f8:fbba:57ed:e51b)
[20:36:06] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ff:b2cc:e0f8:fbba:57ed:e51b) (Ping timeout: 268 seconds)
[20:37:26] *** Joins: makomo (~makomo@user/makomo)
[20:42:49] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[20:43:53] *** Joins: Catie (~user@user/catie)
[20:44:17] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[20:52:53] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[21:07:16] *** Quits: frgo_ (~frgo@217.111.125.3) (Remote host closed the connection)
[21:21:17] *** Quits: yewscion_ (~yewscion@2604:ca00:140:988::1260:702) (Ping timeout: 240 seconds)
[21:26:08] *** Joins: frgo (~frgo@217.111.125.3)
[21:28:55] *** Quits: frgo (~frgo@217.111.125.3) (Remote host closed the connection)
[21:32:07] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[21:41:49] *** Joins: sander (~sander@user/sander)
[21:45:30] *** Quits: treflip (~user@user/treflip) (Quit: good night ✨)
[21:47:10] *** Quits: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com) (Remote host closed the connection)
[21:50:19] *** Joins: jeffrey (~jeffrey@80-115-60-193.cable.dynamic.v4.ziggo.nl)
[21:59:42] *** Joins: notzmv (~zmv@user/notzmv)
[22:18:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[22:28:24] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[22:28:55] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:28:56] *** Joins: frgo (~frgo@217.111.125.3)
[22:36:32] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[22:36:36] <jmercouris> I have the following pattern I am seeing in my codebase (defparameter q (if xyz (qwe xyz) "default"))
[22:36:41] <jmercouris> is there a better way to express this?
[22:36:53] <jmercouris> I don't want to have to check xyz before running (qwe xyz)
[22:37:18] <jmercouris> and nor do I want to do something like (or (ignore-errors (qwe xyz)) "default")
[22:37:35] <Bike> why don't you want to check xyz
[22:38:32] <jmercouris> it just seems redundant
[22:38:53] <jmercouris> like we are writing (if x (q x) "default")
[22:39:03] <jmercouris> why not just (if (q x) "default")
[22:39:11] <jmercouris> and of course if X does not exist, we'll get an error
[22:39:24] <jmercouris> but I don't want an error! I just want the default value then
[22:39:41] <jmercouris> perhaps it is a dumb request, but it is something that would work just fine in Objective-C
[22:39:58] <Bike> how would it work in objective-c, exactly?
[22:40:08] <jmercouris> it just ignores nulls somehow
[22:40:13] <jmercouris> I can't remember the exact way it works
[22:40:30] <semz> I don't think there's anything built-in that would be shorter.
[22:40:38] <Nilby> You could do something like (defaulting-qwe xyz "default")
[22:40:50] <semz> I sometimes macrolet something for that when converting certain formats.
[22:41:15] <Bike> there's nothing built in, but you could obviously do it with a macro quickly
[22:41:16] *** Quits: Demosthenex (~Demosthen@user/demosthenex) (Ping timeout: 268 seconds)
[22:41:18] <jmercouris> yes
[22:41:22] <jmercouris> I will think about such a macro
[22:41:23] <Bike> i am not sure i understand the requirements exactly
[22:41:23] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[22:41:25] *** Quits: xsperry (~xs@user/xsperry) ()
[22:41:47] <frodef_> With standard sbcl and hunchentoot on linux, requests are handled by threads such that I need to (manually) arrange synchronization for access to shared datastructures, right?
[22:41:48] <jmercouris> the requirements are attempt to evaluate a form, if you can get a value, return it, if it signals a condition, return a default
[22:41:49] <Nilby> If there's a lot of initializations I sometimes do a short local macro
[22:42:08] <jmercouris> maybe there is something in Alexandria...
[22:45:44] <_death> frodef_: right
[22:46:07] <frodef_> _death: thanks
[22:53:06] *** Joins: Demosthenex (~Demosthen@user/demosthenex)
[22:57:50] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[22:59:12] *** Joins: sander (~sander@user/sander)
[23:03:57] <Bike> jmercouris: so (handler-case form (error () default))? presumably wrapped in a macro, again
[23:07:33] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[23:07:33] *** ChanServ sets mode: +o MichaelRaskin
[23:11:54] <phoe> the ugly (or (ignore-errors ...) default) will work if you expect to never return NIL
[23:12:05] <phoe> though it's ugly as *#^$
[23:15:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:15:46] <Bike> i don't understand what objective-c could be doing. it seems unlikely that it would compile checks for null in every single function, or something
[23:21:55] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[23:25:18] <pjb> Bike: no, it's simplier: there's just a check in the send method primitive.  If the object is nil it returns nil.
[23:25:42] <pjb> [nil foo] --> nil
[23:46:36] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ee:e8ad:e0f8:fbba:57ed:e51b) (Read error: Connection reset by peer)
