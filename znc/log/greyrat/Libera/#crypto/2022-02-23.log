[00:03:52] *** Quits: brolin (~brolin@179.13.18.50) (Remote host closed the connection)
[00:09:27] *** Quits: gdd (~gdd@129.199.146.230) (Quit: WeeChat 3.3)
[00:10:50] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[00:17:39] *** Joins: gdd (~gdd@129.199.146.230)
[00:32:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[00:33:01] *** Joins: Tang3nt-Man (~Tang3nt-M@138.199.21.54)
[00:33:40] *** Joins: Guyver2_ (~Guyver@2001:985:f3f:1:bca1:3a5:304:b7dd)
[00:34:07] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:35:13] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:35:17] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:36:31] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[00:36:32] *** Guyver2_ is now known as Guyver2
[00:43:43] *** Quits: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:48:29] *** Joins: jab416171 (~jab416171@c-67-161-208-65.hsd1.ut.comcast.net)
[01:00:09] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Ping timeout: 256 seconds)
[01:19:45] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:22:34] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:65dc:ab5d:8da2:d8b4)
[01:29:34] *** Quits: Guyver2 (~Guyver@2001:985:f3f:1:bca1:3a5:304:b7dd) (Quit: Going offline, see ya! (www.adiirc.com))
[01:34:51] *** Joins: machinedgod (~machinedg@24.105.81.50)
[01:35:52] *** Joins: mikrosis92 (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de)
[01:37:48] *** Quits: mikrosis (~mikrosis@dynamic-089-204-138-116.89.204.138.pool.telefonica.de) (Ping timeout: 240 seconds)
[01:46:39] *** Joins: brolin (~brolin@190.29.195.243)
[01:48:34] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: beware the living)
[01:50:56] *** Joins: Malvolio (~Malvolio@user/malvolio)
[01:52:17] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 240 seconds)
[01:54:14] *** Quits: navigator (~Navigator@2605:6440:3008:d001::a39) (Quit: Leaving)
[01:59:39] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[02:05:01] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Ping timeout: 272 seconds)
[02:05:03] *** Quits: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us) (Quit: Leaving)
[02:06:35] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:10:05] *** Joins: aqua (~aqua@user/aqua)
[02:12:41] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Ping timeout: 256 seconds)
[02:14:27] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:14:28] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[02:15:03] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Max SendQ exceeded)
[02:18:03] *** Quits: brolin (~brolin@190.29.195.243) (Remote host closed the connection)
[02:20:54] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[02:30:20] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[02:35:35] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[02:35:37] *** Joins: SystemError (~SystemErr@user/systemerror)
[02:36:13] *** SystemError is now known as System_Error
[02:44:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[02:53:29] *** Joins: filename (~kilitary@kilitary.xyz)
[02:57:28] *** Joins: tex (~super@user/dix)
[03:00:05] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[03:00:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:00:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:02:39] *** Joins: filename (~kilitary@kilitary.xyz)
[03:09:55] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[03:10:54] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[03:13:51] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[03:14:07] *** moose` is now known as moose
[03:14:38] *** Joins: filename (~kilitary@kilitary.xyz)
[03:24:47] *** Joins: Sofia (~sofia@user/sofia)
[03:32:37] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[03:40:14] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 256 seconds)
[03:42:28] *** Quits: tex (~super@user/dix) (Quit: tex)
[03:44:57] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:46:57] *** Joins: Wulf (~Wulf@user/wulf)
[03:49:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[03:54:45] *** aqua is now known as kish`
[03:59:43] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[04:03:39] *** Quits: halosghost (~halosghos@user/halosghost) (Quit: WeeChat 3.4)
[04:08:30] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:18:36] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 240 seconds)
[04:33:00] *** Joins: frost (~frost@user/frost)
[04:42:40] *** Quits: Tang3nt-Man (~Tang3nt-M@138.199.21.54) (Quit: Leaving)
[05:01:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[05:03:51] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 252 seconds)
[05:04:23] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[05:07:06] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[05:07:06] *** Quits: TunnelJ (~TunnelJ@64.201.243.34) (Quit: Quit)
[05:29:24] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[05:46:55] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[05:48:49] *** Joins: steam (~steam@user/steam)
[05:50:05] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[05:55:31] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[06:00:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[06:14:12] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[06:22:01] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[06:26:12] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 240 seconds)
[06:26:31] *** Quits: mikrosis92 (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de) (Quit: Connection closed)
[06:35:03] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:39:36] *** Joins: xx (~xx@user/xx)
[06:45:05] *** Joins: frost (~frost@user/frost)
[07:07:48] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:25:12] *** Joins: filename (~kilitary@kilitary.xyz)
[07:36:32] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[07:44:23] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[08:49:17] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 240 seconds)
[09:01:53] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[09:20:32] *** Joins: averagejoe[m] (~averagejo@2001:470:69fc:105::1:c868)
[09:20:59] *** Joins: filename (~kilitary@kilitary.xyz)
[09:27:51] *** averagejoe[m] is now known as AverageJoe[m]
[09:30:54] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[09:34:10] *** Joins: scannerdarkly (~scannerda@rescomp-19-389322.stanford.edu)
[09:48:24] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:55:01] *** Joins: leptone (~leptone@075-084-131-242.res.spectrum.com)
[09:55:41] <leptone> Can anyone recommend a good guide for creating a persistent bootable Linux USB for running my Metamask wallet from a Windows 10 machine?
[10:01:11] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[10:07:34] <int-e> Unlikely. (See topic.)
[10:11:12] *** Quits: leptone (~leptone@075-084-131-242.res.spectrum.com) (Remote host closed the connection)
[10:17:44] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[10:19:38] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[10:23:44] <solrize> bootable linux usb?  what is that?
[10:24:23] <solrize> oh nm
[10:26:56] *** Quits: scannerdarkly (~scannerda@rescomp-19-389322.stanford.edu) (Quit: Leaving)
[10:33:58] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 260 seconds)
[10:43:40] *** Joins: filename (~kilitary@kilitary.xyz)
[10:45:54] *** Joins: igemnace (~ian@user/igemnace)
[10:55:44] *** Joins: Wintermute (~Wintermut@94.46.93.221)
[11:12:44] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:13:02] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[11:17:56] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-039.client.tudelft.eduvpn.nl)
[11:19:27] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[11:34:25] *** Quits: yauhsien (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[11:39:41] <recyclehero> hi 
[11:40:15] <recyclehero> when derining bitcoin address from ecdsa pub key. should the steps be done with uppercase letters or lowercase 
[11:42:05] <Wulf> recyclehero: do you get different results?
[11:42:42] <recyclehero> yes
[11:43:08] <Wulf> recyclehero: I can only guess, but I think you're doing something wrong.
[11:43:54] <Wulf> recyclehero: an ecdsa pubkey im bitcoin should be 64 bytes. There is no lower or upper case in bytes.
[11:44:55] <Wulf> Hope this helps. If it doesn't, it might be because I don't know anything about this bitcoin.
[11:45:23] <recyclehero> Im not using it for bitcoin though
[11:45:46] <recyclehero> its 65 bytes in my case and each byte is two hex digits
[11:46:15] <recyclehero> the question is those digits should be upper or lower? ABCEDF
[11:47:15] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[11:47:41] *** Joins: kish` (~aqua@user/aqua)
[11:49:48] *** Quits: halo (~halosghos@user/halosghost) (Ping timeout: 240 seconds)
[11:50:50] *** Joins: frost (~frost@user/frost)
[11:53:17] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: EVOLUTION DOES NOT LOVE YOU)
[11:55:14] *** Joins: Malvolio (~Malvolio@user/malvolio)
[11:56:27] <Wulf> recyclehero: don't hex encode them.
[11:59:38] <recyclehero> Wulf: please elaborate 
[12:00:06] <Wulf> recyclehero: got a link to the specification?
[12:01:09] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:03:07] *** Joins: halo (~halosghos@user/halosghost)
[12:04:02] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[12:04:51] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:07:05] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Client Quit)
[12:10:32] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[12:12:51] <recyclehero> Wulf: https://en.bitcoin.it/wiki/Technical_background_of_version_1_Bitcoin_addresses#How_to_create_Bitcoin_Address
[12:15:11] <Wulf> recyclehero: do you get how to compute 2 from 1?
[12:16:00] <recyclehero> Wulf: I was doing with https://passwordsgenerator.net/sha256-hash-generator/
[12:16:20] <recyclehero> but now iI will openssl dgst as the site result doenst match with the example
[12:17:00] <Wulf> recyclehero: try using a programming language.
[12:17:33] <Wulf> recyclehero: hint: don't hex encode the values.
[12:18:16] <recyclehero> recyclehero: they seem like hex already
[12:18:19] <recyclehero> Wulf: 
[12:19:14] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[12:19:38] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[12:20:34] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:24:28] <Wulf> recyclehero: the wiki only displays them as hex for convenience.
[12:25:26] <FireFly> you'll want to xor corresponding bytes/nibbles together bitwise, not the actual ASCII string of characters '0', 'a', 'F' etc
[12:25:48] <FireFly> (so, case shouldn't come into place in the first place)
[12:25:48] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[12:25:51] <Wulf> FireFly: xor? why?
[12:26:12] <FireFly> oh er wait
[12:26:21] <FireFly> well, sha256-hash the binary string of data*
[12:26:32] <FireFly> I'm tired, just got to the office :p
[12:27:02] <FireFly> anyway yes listen to Wulf
[12:27:46] <recyclehero> but when I xxd -r the file which I have put the string of hex and feed that to openssl I get the right result 
[12:27:54] <recyclehero> whats happening here
[12:29:09] <Wulf> recyclehero: https://ideone.com/uq6eH7
[12:29:11] <recyclehero> I mean are they bytes I am seeing in the text file or hex which get correctly reversed to binary by xxd
[12:29:21] <Wulf> recyclehero: try using a programming language.
[12:33:35] *** Joins: VoidSync (~sync@user/voidsync)
[12:33:58] <recyclehero> thanks Wulf 
[12:41:42] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[13:00:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:00:49] *** Joins: Statix8 (~Statix@45.132.115.163)
[13:03:50] *** Quits: Statix8 (~Statix@45.132.115.163) (Quit: Leaving)
[13:04:16] *** Joins: filename (~kilitary@kilitary.xyz)
[13:08:53] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[13:11:59] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[13:26:15] *** Joins: Statix8 (~Statix@45.132.115.163)
[13:28:29] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Quit: Leaving.)
[13:29:17] <Statix8> Does anybody have any theories as to what the next step will be if quantum computing reaches it's stride in the next 10-20 yrs?
[13:30:43] <xx> it'll probably never happen
[13:30:54] <xx> decoherence everywhere, can't go beyond a couple qubits
[13:32:01] <Statix8> I hope that's the case but as we've seen over the years, tech evolves exponentially in such short periods of time
[13:35:22] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[13:35:41] *** Parts: Statix8 (~Statix@45.132.115.163) (Leaving)
[13:37:56] <Haohmaru> until it hits a ceiling
[13:44:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:45:35] *** Joins: filename (~kilitary@kilitary.xyz)
[13:54:11] <wasamasa> lol
[13:54:13] <wasamasa> yes
[13:54:18] <wasamasa> there are limits
[13:56:43] <yawkat> i hope it *will* become mature. the potential applications in science simulations are good enough to offset any cryptography issues.
[14:00:08] <Haohmaru> meh, i want it for music
[14:00:17] <Haohmaru> moar computation power
[14:00:21] <Haohmaru> give me
[14:01:40] <rk4> unfortunately we still can't program for shit
[14:02:33] <rk4> the potential disasters that might unfold due to overconfident science simulation...the mind boggles
[14:02:50] * rk4 might have worked building hydrodynamic models for a while
[14:03:21] <Haohmaru> <splash.wav>
[14:08:00] <wasamasa> I've recently looked up this talk: https://idlewords.com/talks/superintelligence.htm
[14:08:12] <wasamasa> it gives a few good arguments why runaway AI is unlikely
[14:08:21] <wasamasa> runaway quantum computing, dunno
[14:08:28] <wasamasa> or runaway technology in general
[14:11:19] <yawkat> wtf is runaway quantum computing
[14:11:35] <yawkat> the bits are even more entangled now?
[14:12:13] <Haohmaru> you put a quantum computer inside a big tyre, you kick it off a hill
[14:14:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[14:14:34] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[14:15:40] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:24:18] *** Joins: yauhsien (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net)
[14:25:46] *** Malvolio is now known as Malvolio|haunted
[14:32:18] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[14:34:09] *** Joins: System_Error (~SystemErr@user/systemerror)
[14:36:35] *** Joins: frost (~frost@user/frost)
[14:37:08] * rk4 will read this talk later
[14:38:38] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6d72-f335-2f9d-689a.res6.spectrum.com) (Quit: jarthur)
[14:42:12] <wasamasa> yawkat: the idea that quantum computing will magically become so great we cannot handle the consequences
[15:00:19] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[15:06:36] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Ping timeout: 240 seconds)
[15:11:55] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[15:26:57] *** Joins: Sofia (~sofia@user/sofia)
[15:28:42] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 272 seconds)
[15:43:58] *** Malvolio|haunted is now known as UUUV
[15:55:48] *** Joins: Wintermute (~Wintermut@94.46.93.221)
[15:56:02] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Remote host closed the connection)
[15:56:20] *** Joins: Guyver2_ (~Guyver@guyver2.xs4all.nl)
[15:56:31] *** Joins: VoidSync (~sync@user/voidsync)
[15:59:00] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 240 seconds)
[15:59:01] *** Guyver2_ is now known as Guyver2
[16:03:32] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[16:04:29] *** Joins: aqua (~aqua@user/aqua)
[16:04:52] *** aqua is now known as kish``
[16:06:15] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[16:10:15] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[16:10:40] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[16:16:49] *** Joins: igemnace (~ian@user/igemnace)
[16:19:14] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[16:27:08] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[16:37:14] *** Joins: halosghost (~halosghos@user/halosghost)
[16:40:49] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[16:43:39] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:45:35] *** Quits: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net) (Quit: geoffhill)
[16:45:59] *** Joins: geoffhill (~geoffhill@174-21-77-129.tukw.qwest.net)
[16:55:08] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Read error: Connection reset by peer)
[16:55:12] *** Joins: BOKALDO_ (~BOKALDO@user/bokaldo)
[17:08:58] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[17:19:23] *** Joins: brolin (~brolin@179.13.18.50)
[17:26:25] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[17:26:38] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[17:28:05] *** Joins: igemnace (~ian@user/igemnace)
[17:41:38] *** Joins: filename (~kilitary@kilitary.xyz)
[17:42:01] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:51:45] *** Joins: jringstad__ (~Amadiro@31.11.55.179)
[17:54:02] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Ping timeout: 260 seconds)
[17:54:23] *** Quits: jringstad__ (~Amadiro@31.11.55.179) (Remote host closed the connection)
[17:54:41] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[17:56:05] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[17:56:38] <TimMc> rk4: My spouse does modeling for land cover, crops, food systems, and some related things and yeah, lack of validation of the models kind of scares me.
[17:57:29] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4a7:dec3:a543:4b87)
[17:59:05] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:01:28] <TimMc> wasamasa: https://idlewords.com/talks/web_design_first_100_years.htm also seems relevant here
[18:02:05] <TimMc> (in particular the first part, about why aviation innovation ground to a halt)
[18:03:53] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 250 seconds)
[18:17:18] *** Quits: BOKALDO_ (~BOKALDO@user/bokaldo) (Quit: Leaving)
[18:19:08] *** Quits: yauhsien (~Yau-Hsien@61-231-19-150.dynamic-ip.hinet.net) (Quit: Leaving)
[18:25:24] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 272 seconds)
[18:29:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:32:28] <cvmn> what's the most efficient way to prove a coin if we only trust the genesis block?  can we do better than O(n), where n is number of hops the coin has hopped over in its past history until genesis?
[18:42:37] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:42:39] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[18:44:20] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[18:47:15] *** Joins: andrade (~andrade@user/andrade)
[18:47:19] *** Joins: dez (uid92154@user/dez)
[18:53:59] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[18:58:59] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[19:06:34] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 272 seconds)
[19:16:33] <Alipha> Not sure what "prove a coin" means, since cryptocurrencies track account balances, not individual coins
[19:16:53] *** Joins: xenoc__ (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[19:16:57] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[19:18:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:19:00] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 240 seconds)
[19:27:51] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[19:30:15] *** Quits: xenoc__ (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 256 seconds)
[19:34:26] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[19:34:29] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[19:40:46] *** Quits: andrade (~andrade@user/andrade) (Ping timeout: 245 seconds)
[19:48:36] <Haohmaru> * TheFBI clicked the dislike button on that ^
[19:53:03] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[19:57:49] *** Joins: filename (~kilitary@kilitary.xyz)
[19:58:59] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:00:11] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:00:22] <halosghost> Alipha: cryptocurrencies certainly don't all track balances
[20:01:04] <halosghost> I'm assuming cvmn is referring to UTXOs
[20:01:06] <halosghost> however
[20:01:09] <halosghost> !offtopic
[20:01:11] <halosghost> ☺
[20:01:32] <halosghost> (I'm just going to keep doing that till someone actually implements an official channel bot so that the command actually does something)
[20:03:30] <iz> cvmn is just going through the process of trying to re-invent blockchain as he finally begins to understand what blockchain was in the first place
[20:03:49] <ms7821> cvmn is just getting high and asking meaningless questions to get a reaction
[20:05:15] <iz> nah, i think gears are turning in there as i eluded to.. but i don't think he fully understands what he's asking either
[20:05:46] <iz> but who knows, might just be stoner questions too
[20:05:49] <cvmn> please stop trolling.  i'm basically asking about ways to efficiently prove things cryptographically.  
[20:06:27] <cvmn> halosghost + iz + ms7821:  caveman's intention is off-topic.  if you want to discuss 'caveman' as a subject of interest go to his channel: #end
[20:07:09] <iz> the answer is blockchain already, i've answered that exact question from you a few times already
[20:07:17] <iz> you just keep asking it, b/c you don't like the answer
[20:07:29] <iz> or don't understand it
[20:07:31] <cvmn> no.  it's a new question.  
[20:07:48] <iz> you asked exactly that same question before, exact wording
[20:07:48] <halosghost> cvmn: are you familiar with merkle roots?
[20:08:02] <ms7821> but what if blockchain without blockchain? there's an idea nobody's tried before
[20:08:06] <cvmn> halosghost: yes.
[20:08:23] <halosghost> cvmn: sounds like that's the avenue for a best answer that anyone's come up with to-date
[20:08:37] <halosghost> also, your question is about cryptocurrencies
[20:08:40] <halosghost> which are off-topic
[20:08:45] <cvmn> halosghost: so, your answer is: O(n)?
[20:08:46] <iz> how they work isn't
[20:08:52] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[20:08:59] <iz> just like the financial/trading/meme aspects of it
[20:09:06] <halosghost> iz: this doesn't appear to be a question about how they work, but perhaps I'm misinterpreting
[20:09:12] *** Joins: sobkas_ (~sobkas@95.175.17.217)
[20:09:23] <cvmn> halosghost: you're not answering the question.  the question is about the most efficient solution.  merkle trees will give O(n) space and time for someone who only trusts genesis block.
[20:09:24] <halosghost> cvmn: in what dimension?
[20:09:33] <iz> cvmn is still trying to understand the double spending problem and he has a pet solution he thinks would work but doesn't
[20:09:50] *** sobkas_ is now known as sobkas
[20:09:54] <halosghost> cvmn: merkle root ≠ merkle tree
[20:10:16] <cvmn> how can you have a merkle root without a tree?
[20:10:22] <halosghost> https://www.investopedia.com/terms/m/merkle-root-cryptocurrency.asp
[20:10:31] <cvmn> /ignore add iz
[20:10:43] <halosghost> (yes, it's an investopedia link, but it's actually a semi-reasonable explanation of merkle roots; at least as an intro)
[20:11:05] <iz> you keep asking the same questions because you keep ignoring the answers
[20:11:10] <cvmn> halosghost: so your answer is O(n)?
[20:11:24] <iz> with respect to what input?
[20:11:43] <iz> your questions don't even really make sense
[20:11:47] <halosghost> cvmn: I don't believe I ever mentioned an answer
[20:12:12] <halosghost> (at least, not having one)
[20:12:24] <cvmn> correct.  you never gave an answer.  just mumbling along that ignored idiot.
[20:12:51] <halosghost> …
[20:13:49] <iz> it's like wargames, the only correct answer is to not play.. if you interact with him, he will just get mad at you
[20:16:18] <cvmn> so, to rephrase to avoid wasting time with trolls:  suppose that we trust a block and coins inside them.  those coins eventually got spent to many wallets until they reached my wallet.  my question is:  cryptographically, what's the most efficient way for me to prove that the coins that i have actually from that trusty block?  note:  we only trust that block (not consensus).
[20:17:49] <Alipha> cvmn: you have to also trust the blocks that those coins were spent on until they reached your wallet
[20:17:51] <MacGyver> If you don't trust consensus, you don't know what branch you should be looking in.
[20:17:59] <cvmn> one baseline idea i can think of is this:  i offer a linked list of all transactions that link my coins all the way back to the trusty block.  this will have O(n) time and space complexity, where n is number of transactions in the path..
[20:18:51] <MacGyver> I assume you mean you do trust the consensus on what's the source of truth, but you want to verify the chain from the genesis block up to the current moment.
[20:18:52] <halosghost> cvmn: if you don't trust consensus, then you're out of luck
[20:19:38] <halosghost> MacGyver: I hope that's what cvmn means; otherwise I cannot imagine how there could be an answer
[20:19:56] <MacGyver> I *think*, what little I know of the cybercurrency-turned cryptography people I still inexplicably follow on twitter, that zksnarks are supposed to allow you to do this faster than O(n).
[20:20:39] <halosghost> MacGyver: I'd be interested in links related to that
[20:20:48] <MacGyver> Basically being a roll-up of the branch of the tree up to the point where the SNARK is.
[20:21:25] <MacGyver> halosghost: I know *nothing* beyond people tweeting about it.
[20:21:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:21:36] <halosghost> getting some serious deja vu here
[20:21:36] <MacGyver> I'm basically putting it out there as a term that might be useful for cvmn to google.
[20:21:42] <cvmn> Alipha: about trusting the blocks, i think you're implying a specific algorithm with consensus?  my question is more basic:  i just want to prove that my signed thing traces to some origin.  so far i'm putting consensus aside (just proving origin, without disproving doublespending).
[20:22:43] <cvmn> MacGyver: consenus is not related to my question.  consensus solves 'double spending'.  my question is not about 'double spending', but rather about 'proving that the coin traces to some trusty origin'.
[20:23:00] <MacGyver> Right, so just following to the root of the tree.
[20:23:01] <halosghost> consensus is not exclusively about double-spending
[20:23:17] <ms7821> if you encourage cvmn to google zksnarks, he'll just come back with "can someone suggest a way to make zksnarks without the zero-knowledge bit"
[20:23:47] <cvmn> MacGyver: a merkle tree has O(log n) complexity if we trust the rest of the tree.  but in my example, i only trust that single origin point where coins originated from.  so merkle tree is not applicable.
[20:24:17] <cvmn> ms7821: predicting future caveman behaviour is off-topic. 
[20:24:49] <halosghost> cvmn: what is the actual question you're trying to answer? If you don't trust the intermediary blocks, what reason do you have to trust the block which included the transaction putting some coins under your control?
[20:25:10] <halosghost> (this feels like X-Y to me)
[20:25:28] <MacGyver> Uh, s/tree/chain/
[20:25:48] <MacGyver> Strictly speaking the blockchain itself isn't a merkle tree of course.
[20:25:52] <ms7821> he wants to build a decentralised ledger that allows for participants to be offline for a long time while still transacting
[20:26:05] <ms7821> which is like information theoretically impossible
[20:26:09] <halosghost> well
[20:26:17] <halosghost> there are proposals to do that
[20:26:24] <MacGyver> Anyway, you still have to traverse it to the root then.
[20:26:34] <halosghost> but they do have lots of caveats and are still super early-days
[20:27:07] <MacGyver> And the only thing I *know* of that avoids that is what's technically known as a roll-up.
[20:27:18] <cvmn> halosghost: are you assuming a specific cryptocurrency design with blocks?  i'm trying to isolate the concept.
[20:27:20] <ms7821> you can do any kind of side chain stuff you like, but it can't have consensus
[20:27:47] <MacGyver> Basically record the state as-is at point X in time and that's your new root.
[20:27:59] <MacGyver> But it sounds like you don't want to trust that.
[20:28:24] <halosghost> cvmn: I'm assuming a blockchain (in the most general sense): that each block (which includes transactions transferring spendability of coins) cryptographically commits to the previous block
[20:29:07] <cvmn> let's ignore cryptocurrency for now.  suppose there is an item, that got passed to another person, then that person passed it to another, and so forth until it reached me.  each time a person passed the item, he signed it (hashed + encrypted hash by his private key).  my question is:  what's the most scalable way to prove to a person who only trusts the original person that my item indeed came from
[20:29:08] <halosghost> ms7821: there's definitely a delay between consensus between offline and online actors
[20:29:09] <cvmn> him?
[20:29:47] <halosghost> cvmn: take the serial number of the thing and go ask the original person if they recognize it
[20:29:49] <halosghost> !next
[20:29:57] <ms7821> halosghost, yeah but every time he brings this up, he's talking about a matter of months, while still being able to trust in the value of the transactions
[20:30:16] <halosghost> mmm, that's definitely hard
[20:30:21] <halosghost> I don't know that it's impossible
[20:30:31] <cvmn> halosghost: that's one solution, with O(1) complexity, but requires the person to be online.  is there any other way that's better than O(n) that doesn't require the original person to be online?
[20:30:32] <ms7821> so it's very much an X-Y problem, where X is "don't require global consensus to transact"
[20:30:49] <halosghost> cvmn: you need to specify your dimensions better
[20:30:58] <halosghost> cvmn: send that person a letter.
[20:31:26] <halosghost> (still O(1) in the number of people to contact, but O(however-long-Bob-is-at-the-spaw-before-they-can-write-back) in time)
[20:31:39] <halosghost> ms7821: yeah…
[20:31:51] <halosghost> s/spaw/spa/
[20:32:18] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-039.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[20:33:11] <cvmn> ms7821: ``X-Y problem'' is not always a problem.  sometimes we need to not reveal the full context to allow a fresh look into the problem.  ``X-Y problem'' is only a problem when dealing with more boring cases that don't require a fresh investigation.
[20:33:33] <halosghost> cvmn: X-Y is specifically a problem because the context is not conveyed
[20:33:38] <halosghost> and it's always a problem
[20:33:44] <halosghost> be specific and include all context
[20:33:45] <ms7821> and we're back to stoner stuff again
[20:33:46] <cvmn> i sort of regret revealing that this is about cryptocurrency.  because it made people think about blocks and other cryptocurrency stuff.
[20:33:52] <TimMc> Yeah, more context is always better.
[20:34:22] <cvmn> TimMc: not always.  too much context will limit divergence of thinking, which is bad for research.
[20:34:24] <halosghost> cvmn: regretting that your X-Y is not more like an A-Y is probably not going to result in better conversations
[20:34:35] <TimMc> cvmn: Not giving all the requirements will waste people's time.
[20:35:06] <ms7821> if you change your constraints, e.g. to "I tell everyone that subchains are trustworthy because they are in practice and they'll eventually be caught when someone syncs to the main chain", that might be a tractable (or even easy) problem
[20:35:16] <cvmn> TimMc: i gave full requirements.  it's just that they're insisting to link it to cryptocurrency contexts like blocks and double spending, even though my question is about simply proving linkage to an origin (no double spending problem).
[20:35:31] <ms7821> but you're stuck deep in building new data structures instead
[20:35:38] <halosghost> unrelated: I think, much like the use of k and m, we should standardize `s_A` in complexity notations for “the time that actor A is at the spa” (_A can be ommitted if only one actor is relevant)
[20:36:03] <halosghost> it seems like it's relevant in enough circumstances that it warrants the convention
[20:36:22] <MacGyver> halosghost: SPA calculus?
[20:36:29] <halosghost> MacGyver: I LOVE IT
[20:36:53] <halosghost> MacGyver: you've ruined my week; now I need to figure out 1) if there are already P and A combinators and 2) if they can somehow be made turing-complete…
[20:37:02] <MacGyver> halosghost: You're welcome.
[20:37:06] <halosghost> cvmn: I really do feel like merkle roots are the answer you're looking for
[20:37:14] <cvmn> person X owns an item.  he passed it to another, and that anohter passed it to yet another, and so on.  eventually after n-1 many people it reached me.  i'm the nth person.  each passing was signed by the sender to the receiver.  is this cryptocurrency?  not necessarily.  it's just a list of an item being passed.
[20:37:16] <halosghost> (they offer faster origin verification)
[20:37:17] <cvmn> my question is:  if i want to prove that my item eventually traces back to X, what is my most scalable solution in terms of space and time?  i can think of only O(n).  anything better than O(n)?
[20:37:34] <cvmn> note:  we only trust the original item when it was with X.  
[20:38:22] <ms7821> must it only be owned by one person at once?
[20:38:23] <cvmn> the only way i can think of, that doesn't need to extend trusting the hash of the item when it was with X, is O(n).  i couldn't find any better solution.  even a merkle tree here will have O(n) time/space complexity.
[20:39:04] <cvmn> ms7821: no.  doesn't matter.  i just have to prove that its path traces to X.
[20:39:25] <ms7821> right, that's a very different and easy problem
[20:39:30] <ms7821> see certificates
[20:39:40] <cvmn> like, pki?
[20:39:49] <ms7821> sure
[20:40:07] <ms7821> they prove a chain of trust to a root
[20:40:46] <cvmn> here, X is the root?
[20:40:53] <ms7821> they don't prove nobody issues multiple certs, though cert transparency can help detect that
[20:40:58] <ms7821> yeah
[20:41:05] <cvmn> is that O(n)?
[20:42:05] <ms7821> if n is the number of people "an item" passes through, yeah
[20:43:37] <cvmn> any more efficient solution?
[20:43:52] <ms7821> depends whether "owners" can talk to each other
[20:43:59] <aczid> TimMc / wasamasa those are both great talks on idlewords.com, thanks
[20:45:19] <ms7821> also if the item never changes, do you even need to update who "owns" it? what promises are you trying to give here?
[20:46:37] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[20:50:47] <cvmn> ms7821: it can have meaning, e.g. indicating endorsement/trust.
[20:51:27] <cvmn> e.g. the value of the item is not by itself, but rather by who passed it to me.
[20:52:28] <ms7821> if you want some sort of chain of custody thing, signatures should be all you need
[20:52:45] <halosghost> aczid: not sure what context led to it, but idlewords is fabluous; I'd recommend all of those talks ☺
[20:54:16] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:54:22] <aczid> it came up after the idea of 'runaway' AI/quantum computing was mentioned
[20:57:13] <cvmn> ms7821: can that be done less than O(n)?
[20:57:58] <ms7821> if all you're checking is whether a certain public key signed an object, it's O(1)
[20:58:02] <ms7821> we need some more details again here
[20:59:31] <ms7821> do people sign the object on receiving it, or on passing it on? I assume you'll be able to store public keys centrally, otherwise you need some other way of tying identity to "handover operations"
[20:59:47] <iz> i already went through this with him before, digging for details and it's like i described earlier to try to save some time
[21:00:01] <cvmn> P0 signed M to person P1.  P1 signed M to P2, ..., P{n-1} signed M to Pn.  now, Pn wants to show that his M traces back to P0.  we only trust P0's private key.
[21:00:06] <cvmn> ms7821: ^
[21:00:28] <ms7821> iz, he's now saying it doesn't need to prevent double spending though?
[21:00:56] <cvmn> i said many times i don't care about double spending.
[21:01:25] <ms7821> I haven't seen you say that before, it's come up every time I've seen
[21:01:26] <iz> it's his pet idea about tracking the coin from when he thought he was solving double spending before
[21:01:55] <ms7821> cvmn, it's O(n) where n is the number of people it passes through. I don't see why that could be a problem though
[21:02:11] <ms7821> unless you're just trying to ask questions for the hell of it
[21:02:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:02:59] <cvmn> 11:52 <cvmn> MacGyver: consenus is not related to my question.  consensus solves 'double spending'.  my question is not about 'double spending', but rather about 'proving that the coin traces to some trusty origin'.
[21:03:01] <cvmn> ^ utc time (now 12:32).
[21:03:41] <cvmn> ms7821: it's a scalability problem if n grows too long.  would be neat if there is a way to shorten it.
[21:04:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:05:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:05:49] <iz> what value do you think you are getting from tracking the coin?  the way to shorten it is if you don't need to track it, don't
[21:06:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:09:31] <cvmn> the value could be anything (not limited to coins).  e.g. indicating trust.  if M is the one tracked to P0, could mean something.  e.g. indicating some kind of trust.
[21:10:08] *** Joins: Elzington (~Elzington@68.235.43.84)
[21:10:37] *** Quits: filename (~kilitary@kilitary.xyz) (Ping timeout: 240 seconds)
[21:11:13] *** Joins: mikrosis (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de)
[21:28:43] *** Joins: scannerdarkly (~scannerda@rescomp-19-389322.stanford.edu)
[21:28:47] *** Joins: Maxattax97 (~max@96-94-237-74-static.hfc.comcastbusiness.net)
[21:29:56] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 245 seconds)
[21:36:46] <Alipha> you hand the coin back to the first person who signed it and now they can remove all the intermediary signatures and sign it over to you? :-)
[21:38:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[21:40:14] *** Joins: aleck (~aleck@user/aleck)
[21:41:54] *** Quits: scannerdarkly (~scannerda@rescomp-19-389322.stanford.edu) (Quit: Leaving)
[21:42:00] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 256 seconds)
[21:43:29] <halosghost> aczid: not sure if “Superintelligence” was recommended, but I'd add that recommendation ☺
[21:43:55] <aczid> yep halosghost :)
[21:44:44] <halosghost> ☺
[21:44:50] *** Quits: xx (~xx@user/xx) (Quit: xx)
[21:45:11] *** Joins: xx (~xx@user/xx)
[21:46:24] <aczid> the other one was 'web design: the first 100 years'
[21:49:12] <halosghost> I don't know that it's really related, but “What Happens Next Will Amaze You” is easily one of the most fabulous talks ever. However, no recording of it exists; so, you'd be reading the text/slides (which are all I did; and that was pretty powerful)
[21:49:39] <halosghost> it's definitely a different topic
[21:49:42] *** Joins: filename (~kilitary@kilitary.xyz)
[21:55:22] <caveman> Alipha: yes.  but that will require trusting person P0.  i.e. not simply trusting the point in time when he had M.
[21:55:55] <caveman> would be nice if all we need is to trust the 1st data structure that stated `P0 has M'.  this is different than trusting the person P0.
[21:56:02] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:57:55] <halosghost> what gives you trust in that initial data structure?
[21:58:11] <halosghost> (rather than just assuming that you trust it; why do you?)
[21:58:24] <caveman> yes, that initial is trusted by simple believe.
[21:58:50] <Alipha> caveman: the trust is extended to other transactions via people signing the transation of the coin to someone else. so if P0 once again has the coin, then he can sign a transaction to give it to you.
[21:58:52] <halosghost> you're in luck then that belief can be transitive
[21:58:56] <caveman> halosghost: think of it, maybe, we had a big signing party, and abraham lincolin came, and he -himself- signed it in front of all of us, and we took a photo of it.
[21:59:14] <caveman> halosghost: this is life.  we are never sure of anything.  all axioms are believed.
[21:59:30] <halosghost> that is, I understand, the definition of an axiom
[21:59:38] <halosghost> that is, however, not the definition of theorems nor proofs
[22:00:08] <caveman> non-sequitur, strawman, whatever.
[22:00:37] <halosghost> I don't know how you intend to move forward if you refuse to give clarification and context
[22:01:23] <halosghost> “why do you trust the first thing?” (on the notion that maybe you can leverage whatever property you're using there extended to subsequent actors); “I do”
[22:01:40] <halosghost> k
[22:01:47] <caveman> Alipha: true.  but that requires P0 to be sort of online.  is there any offline solution better than O(n)?
[22:03:14] <halosghost> since we don't care about create/destroy (UTXO-style), so the item itself can remain unchanged: say that the item in-question is a Pedersen commitment made using a public key P0
[22:03:17] <caveman> halosghost: you just need to learn to think in a better way.  the question says that original point is trusted.  you arguing why it is trusted is off-topic for this question.
[22:03:32] <halosghost> it doesn't matter who gave it to you or where it came from; you can verify the commitment so long as you have the public key that created it
[22:03:35] <caveman> or how that trust is achieved.  there are many ways.
[22:03:35] <halosghost> can be offline
[22:03:49] <caveman> unbelievable...
[22:03:51] <halosghost> O(0) in people to talk to
[22:04:13] <caveman> if you're not reading text, don't talk.
[22:04:26] <halosghost> !ops
[22:04:39] <caveman> /ignore add halosghost 
[22:04:54] <halosghost> caveman: just a heads-up; you're not actually ignoring anyone, you're just saying you are
[22:05:04] <halosghost> you need to actually run the command not send a message with the command in it ☺
[22:06:35] <halosghost> (I have no idea why my last proposal didn't literally, exactly solved the asked-question, but perhaps that's my misunderstanding)
[22:06:43] <halosghost> s/ved/ve/
[22:13:11] <halosghost> Here's a really general question: I'm continually fascinating by zero-knowledge proofs. In particular, I'm just floored that we've been able to math our way into being able to prove things revealing nothing more than what was proven (which is the whole point of zkp). The question is: is there a compendium/wiki somewhere that tries to track all the things we've managed to figure out how to prove in
[22:13:13] <halosghost> zero-knowledge?
[22:13:57] <yawkat> circuits are basically turing-complete
[22:14:45] <halosghost> meaning the generalization that, for example, bulletproofs can support?
[22:15:11] <halosghost> (or referring to something else? I'm afraid I'm not entirely sure what you mean by “circuits”)
[22:15:59] <yawkat> i think bulletproofs can prove anything in NP
[22:16:33] <halosghost> does that mean verifying a bulletproof bites the halting problem?
[22:16:44] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[22:17:09] <halosghost> (certainly sounds like it)
[22:17:18] <yawkat> well not if theyre NP only
[22:17:23] <yawkat> but NP is already a lot
[22:17:54] <halosghost> that feels like a real bummer
[22:18:18] <halosghost> I suppose then the set of things I'm interested in is verifiable-in-P zkp ☺
[22:19:15] <int-e> verifiable-in-P is NP
[22:19:30] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:19:38] *** Quits: cwebber (~user@user/cwebber) (Remote host closed the connection)
[22:19:53] <yawkat> also in uni the definition of zkp literally required the verifier to be PPT
[22:20:01] <yawkat> i dont know if there are more general definitions
[22:20:05] <halosghost> mmm
[22:20:41] <halosghost> int-e: to be clear, I didn't mean anything to try to find zkp that can be verified-in-P, I meant, proofs we know how to craft already which we know are verifiable-in-P
[22:20:48] <halosghost> (not sure if that was unclear)
[22:21:01] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:21:02] <halosghost> yawkat: interesting; I'm not classically-trained in cryptography, so I wasn't aware
[22:21:39] <halosghost> yawkat: on that note, mind clarifying for me what “PPT” means in this context?
[22:21:51] <yawkat> P but probabilistic
[22:21:56] <halosghost> ahh
[22:22:06] <halosghost> yawkat: literaly “probablistic polynomial time”?
[22:22:12] <yawkat> yes
[22:22:15] <halosghost> cool
[22:22:17] <halosghost> yawkat: thanks!
[22:23:35] *** Joins: cwebber (~user@user/cwebber)
[22:30:24] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:31:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:33:45] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[22:34:30] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:38:50] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:39:31] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[22:39:36] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:41:24] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:42:09] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:42:57] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:43:33] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-a8d1-84de-9802-ba0b.res6.spectrum.com)
[22:43:41] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:43:49] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[22:44:35] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:45:54] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:47:27] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[22:48:55] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 240 seconds)
[22:49:26] *** Quits: Maxattax97 (~max@96-94-237-74-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[22:50:10] *** Joins: cvemys (~cvemys@user/cvemys)
[22:58:03] *** Joins: System_Error (~SystemErr@user/systemerror)
[22:58:16] <halosghost> yawkat: so, does that mean that bulletproof circuits aren't covered by the definition of zkp that you were taught?
[22:58:32] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[22:58:43] <yawkat> Sure they are. Verification is PPT. 
[22:59:47] <halosghost> mm; so when you said bulletproofs can prove “anything” in NP, were you being specific about the proving side (rather than the verification side)?
[23:03:44] <yawkat> i assume as long as the verifier has a witness, it doesnt need to be in NP
[23:04:28] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[23:04:31] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[23:04:52] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[23:04:53] <halosghost> gotcha (sounds like I was mistakenly conflating proving with verification in what you had said)
[23:05:48] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-a8d1-84de-9802-ba0b.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:12:19] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:14:19] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[23:16:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:17:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:18:59] *** Lord_of_Life_ is now known as Lord_of_Life
[23:19:48] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[23:28:12] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 240 seconds)
[23:32:52] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[23:35:37] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[23:36:52] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[23:37:55] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[23:39:11] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[23:40:13] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[23:47:30] *** Joins: Tangent-Man (~Tang3nt-M@138.199.21.36)
[23:50:19] <halosghost> encrypted PDFs are… weird
[23:51:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
