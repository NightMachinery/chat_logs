[02:16:21] *** Quits: atuin (~atuin@user/atuin) (Remote host closed the connection)
[02:38:37] *** Quits: irek (~irek@public-gprs177573.centertel.pl) (Ping timeout: 265 seconds)
[02:49:08] *** Quits: ^alex (~alex@girl.mrtheplague.net) (*.net *.split)
[02:49:08] *** Quits: wasamasa (~wasamasa@chicken/contributor/wasamasa) (*.net *.split)
[02:49:08] *** Quits: Thaodan (~Thaodan@thaodan.de) (*.net *.split)
[02:49:09] *** Quits: jdz (~jdz@185.23.160.114) (*.net *.split)
[02:49:10] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[02:49:10] *** Quits: notzmv (~zmv@user/notzmv) (*.net *.split)
[02:49:11] *** Quits: pwolf (~pwolf@user/pwolf) (*.net *.split)
[02:49:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:49:13] *** Quits: bremner (~bremner@notmuch/developer/bremner) (*.net *.split)
[02:49:14] *** Quits: jgkamat (~jay@user/jay) (*.net *.split)
[02:49:16] *** Quits: acheam (~acheam@kisslinux/acheam) (*.net *.split)
[02:49:17] *** Quits: fsbot (~fsbot@user/deeo) (*.net *.split)
[02:49:19] *** Quits: pasja- (~pasja@2001:738:5404:130:10:1:30:150) (*.net *.split)
[02:49:20] *** Quits: conform (conform@thunix.net) (*.net *.split)
[02:49:21] *** Quits: tux0r (~tux0r@rosaelefanten.org) (*.net *.split)
[02:50:49] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[02:51:28] *** Joins: conform (conform@thunix.net)
[02:51:28] *** Joins: tux0r (~tux0r@rosaelefanten.org)
[02:51:34] *** Joins: jdz (~jdz@185.23.160.114)
[02:51:34] *** Joins: notzmv (~zmv@user/notzmv)
[02:51:34] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[02:51:34] *** Joins: pwolf (~pwolf@user/pwolf)
[02:52:00] *** Joins: jgkamat (~jay@user/jay)
[02:52:13] *** Joins: ^alex (~alex@girl.mrtheplague.net)
[02:52:13] *** Joins: wasamasa (~wasamasa@chicken/contributor/wasamasa)
[02:52:13] *** Joins: Thaodan (~Thaodan@thaodan.de)
[02:52:35] *** Joins: fsbot (~fsbot@user/deeo)
[02:53:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:53:29] *** Joins: acheam (~acheam@kisslinux/acheam)
[02:53:39] *** Joins: pasja- (~pasja@2001:738:5404:130:10:1:30:150)
[02:54:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[08:26:03] *** Joins: irek (~irek@public-gprs177573.centertel.pl)
[09:06:44] *** Joins: declan (~declan@64.64.228.30.16clouds.com)
[10:47:10] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:01:31] *** Joins: monohorn (~user@user/monohorn)
[12:01:48] *** Parts: monohorn (~user@user/monohorn) ()
[12:09:15] *** Joins: atuin (~atuin@user/atuin)
[12:26:21] *** Joins: ngz (~ngz@user/ngz)
[12:30:38] <ngz> Hello. I have trouble auto-registering to NickServer with Circe. I assume the definition of "Libera" server, as given in the wiki (<https://github.com/jorgenschaefer/circe/wiki/Configuration#adding-a-new-network>) is not accurate. How did you work around it?
[12:34:07] <ecraven> ngz: you should not be doing it this way, you should use SASL or the certificate thing
[12:35:38] <ngz> Hmmm. I am not sure to know about these things. Where could I find information about that?
[12:38:00] <ngz> I'm currently looking at <https://libera.chat/guides/certfp>
[12:42:43] <atuin> ngz: I use a client cert for SASL
[12:42:52] <atuin> circe supports it
[12:44:22] <atuin> Just follow those instructions to create the cert and provide that info to circe
[12:45:41] <ngz> But if I use :sasl-username "ngz" :sasl-password "whatever", I don't need to create a cert, right?
[12:46:17] <atuin> yes, in that case you dont need it
[12:46:51] <ngz> It feels strange to create a cert just for connecting to IRC.
[12:47:37] <ngz> I mean, I'm not ready yet for this kind of cognitive jump :)
[12:48:03] <atuin> well, I don't see why :D You are now creating a password just to connect to IRC :D
[12:48:38] <atuin> it's just that you tell the server that to authenticate it needs to check for that certificate, instead of typing a password
[12:50:25] <atuin> anyway, user/pass is good enough because i guess you connect using tls
[12:50:29] <ngz> You're probably right. But creating a cert implies answering questions, defining and expiration date, etc.
[12:50:33] <wasamasa> yeah
[12:50:41] <wasamasa> SASL PLAIN is only guaranteed safe over TLS
[12:51:03] <wasamasa> and historically, freenode didn't enforce TLS with that
[12:51:05] <ngz> Yes, I'm using tls, and my password is in .authinfo.gpg, so I guess it will not leak in Emacs.
[12:51:09] <wasamasa> libera.chat though does
[12:51:42] <atuin> ngz: hehe that's the trickiest part :) It depends what do you run on your emacs. Just keep a clean emacs instance for that kind of stuff
[12:52:14] <ngz> Ah!
[12:52:58] <wasamasa> cert-based authentication however only works via TLS
[12:53:24] <atuin> exactly, that's why i think it's far superior even if it needs some work before
[12:53:32] <wasamasa> so they used to recommend that
[12:53:36] <wasamasa> but they no longer do
[12:55:30] * ngz scratches his head.
[12:56:15] <wasamasa> so what happens with cert authentication is that circe establishes a TLS connection with your client cert attached and tells the server, that SASL authentication data is implicit (instead of explicitly sending base64-encoded credentials)
[12:56:51] <wasamasa> the server then verifies that against the cert fingerprint you've stored in nickserv's database
[13:00:37] <ngz> OK let's try. brb.
[13:00:50] *** Quits: ngz (~ngz@user/ngz) ()
[13:03:05] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[13:03:53] <wasamasa> I've corrected the libera.chat network definition on the wiki
[13:03:53] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Changing host)
[13:03:53] *** Joins: ngz (~ngz@user/ngz)
[13:04:07] <ngz> Bah
[13:04:45] <ngz> It didn't work. I assume this is because :sasl-password does not accept a function, like :nickserv-password, but expects a string.
[13:05:00] <wasamasa> wrong
[13:05:06] <ngz> Duh!
[13:05:11] <wasamasa> sasl-password can absolutely be a function
[13:05:43] <ngz> Then something didn't work.
[13:05:54] <atuin> ngz enable the logs and see what's going on
[13:05:59] <ngz> SASL authentication failed :(
[13:06:03] <atuin> you can see what circe is sending to the server
[13:06:21] <ngz> How do you enable them?
[13:07:17] <atuin> (setq irc-debug-log t)
[13:07:18] <atuin> try that
[13:07:32] <ngz> I was looking for a circe- prefix. OK.
[13:08:00] <ngz> brb
[13:08:19] *** Quits: ngz (~ngz@user/ngz) ()
[13:08:43] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[13:09:39] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Changing host)
[13:09:39] *** Joins: ngz (~ngz@user/ngz)
[13:10:23] <ngz> hmmmm
[13:10:54] *** Joins: trocado (~trocado@bl18-243-251.dsl.telepac.pt)
[13:11:49] <atuin> did you get the logs?
[13:11:56] <ngz> yes, they are undecipherable.
[13:12:42] <ngz> Apperently, I have: AUTHENTICATE somebase64string then :lead.libera.chat 904 ngz :SASL authentication failed
[13:14:37] <ngz> Is the function in :sasl-password called with a single SERVER argument?
[13:15:01] <ngz> It seems so.
[13:15:35] <wasamasa> yes, it is
[13:15:44] <wasamasa> you can base64-decode the string and see whether it's as expected
[13:16:12] <wasamasa> I remember pushing a fix where I had to ensure that base64-encoding didn't insert newlines
[13:16:21] <wasamasa> which broke logging in with overly long passwords
[13:16:45] <wasamasa> which happened in april
[13:16:48] <ngz> My Circe is 2.11
[13:17:02] <wasamasa> that doesn't mean much since there have been no new releases in quite some time
[13:17:19] <ngz> I mean "v2.11" tag.
[13:18:28] <wasamasa> so if you have a newline in the base64 bits, update
[13:18:41] <atuin> as wasamasa said, just decode that base64 chunk and see if it's expected what you see there
[13:18:55] <atuin> then you could see if it's circe sending crap or just the server not accepting those creds
[13:19:26] <ngz> It's not the correct password, indeed.
[13:19:42] <ngz> which explains a lot.
[13:20:00] <wasamasa> zomg
[13:20:07] <atuin> `(funcall circe-sasl-password circe-host)`
[13:20:13] <atuin> that's how the function is call
[13:20:29] <atuin> just try to call it manually to see if you get the expected password
[13:20:51] <ngz> Yes, I'm debugging my function.
[13:23:03] <ngz> OK, I see.
[13:24:08] <ngz> There's another issue in the wiki.
[13:24:18] <ngz> It should not be (my-fetch-password :login "yournick" :machine "irc.libera.chat") but (my-fetch-password :user "yournick" :machine "irc.libera.chat")
[13:24:49] <ngz> even though .authinfo contains "login"
[13:25:43] <ngz> I also suggest to use :machine server instead of :machive irc.libera.chat, but it doesn't matter for the example.
[13:26:29] <ngz> Let's see if that works. brb.
[13:26:59] *** Quits: ngz (~ngz@user/ngz) ()
[13:27:26] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[13:27:39] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Client Quit)
[13:28:31] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[13:28:36] <wasamasa> hm
[13:28:44] <wasamasa> auth-source.el documents :user, but also uses :login
[13:29:39] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Changing host)
[13:29:39] *** Joins: ngz (~ngz@user/ngz)
[13:29:58] <ngz> I'm positively sure :login doesn't work for me.
[13:30:03] <ngz> Still failing, though.
[13:30:18] <ngz> But the password is correct.
[13:30:45] <ngz> The decoded base64 string is "ngz NULL ngz NULL correct-password"
[13:31:31] <wasamasa> NULL definitely isn't correct
[13:31:39] <atuin> that looks strange indeed
[13:31:57] <ngz> I mean the NULL character: ^@
[13:32:09] <wasamasa> oh
[13:32:12] <wasamasa> then it's correct
[13:32:23] <wasamasa> again, is there a newline in the base64 bits?
[13:32:47] <ngz> No
[13:34:48] <ngz> I see AUTHENTICATE PLAIN then AUTHENTICATE + then "AUTHENTICATE" nil "+" and eventually AUTHENTICATE base64string
[13:35:49] <wasamasa> why both cert and non-cert?
[13:36:00] <ngz> I think I'll just go running mIRC in wine ;)
[13:36:06] <ngz> what ?
[13:36:21] <atuin> well the new line does not look good
[13:38:03] <atuin> `(format "%s\x00%s\x00%s" username username password)`
[13:38:27] <atuin> maybe I'm using an old version ... but does your password contain a newline
[13:38:36] <ngz> No, it doesn't.
[13:38:58] <wasamasa> show your circe config
[13:39:14] <wasamasa> if it uses both password and cert, don't
[13:39:37] <ngz> The whole stuff, or just `circe-network-options'?
[13:40:02] <wasamasa> there is no need to show circe-network-options if you haven't changed them
[13:40:13] <wasamasa> there is no need to change them because the defaults contain sensible defaults
[13:40:39] <wasamasa> though, no, that's circe-network-defaults
[13:40:46] <wasamasa> so, yes, circe-network-options
[13:40:54] <ngz> OK
[13:42:29] <ngz> https://paste.debian.net/1202328/
[13:42:48] <ngz> Note: (ngz-nickserv-password "irc.libera.chat") does return the correct password
[13:44:55] <atuin> mmm the decoded string does not look good though, I don't get why do you have a \n there
[13:45:16] <ngz> Where do you see I have a \n ?
[13:45:46] <atuin> "ngz NULL ngz NULL
[13:45:46] <atuin>     correct-password"
[13:45:56] <atuin> maybe it's just the format i see ...
[13:46:07] <ngz> Yes, there is no newline character in the decoded string.
[13:46:10] <atuin> ok
[13:46:14] <wasamasa> it's not about the decoded string
[13:46:22] <wasamasa> newlines are in the encoded string, not in the decoded one
[13:46:59] <ngz> wasamasa: note that I also added a '("Libera" ...) entry in `circe-networks', as explained in the wiki.
[13:47:02] <wasamasa> they shouldn't be in the encoded string because the server expects a newline-delimited message
[13:47:16] <wasamasa> > This variable is obsolete since Circe 2.0; use ‘circe-network-defaults’ instead.
[13:47:25] <ngz> But the entry does not make any reference to cert.
[13:47:26] <wasamasa> circe-network-defaults has libera
[13:48:03] <ngz> even in "v2.11"?
[13:48:27] <wasamasa> again, use the latest git version
[13:48:34] <wasamasa> the tag hasn't been updated in ages
[13:51:20] <atuin> ngz what error code is the server returning exactly, after the client sends the credentials
[13:52:16] <ngz> S: :platinum.libera.chat 904 ngz :SASL authentication failed
[13:52:21] <ngz> 904, I guess
[13:52:26] <atuin> yes
[13:52:53] <atuin> well that normally means bad credentials
[13:54:03] <ngz> Then I don't understand. Is it normal that my nick appears twice in that string?
[13:54:23] <wasamasa> yes
[13:54:47] <ngz> (3 failing tests in HEAD)
[13:56:00] <ngz> OK. Let me try without using the function, but with a plain string.
[13:56:29] <atuin> "The client presents the authorization identity (identity to act as),
[13:56:29] <atuin>    followed by a NUL (U+0000) character, followed by the authentication
[13:56:29] <atuin>    identity (identity whose password will be used), followed by a NUL
[13:56:29] <atuin>    (U+0000) character, followed by the clear-text password."
[13:56:38] <atuin> ops, bad format :/
[13:56:52] <wasamasa> yes, I went over this when reviewing the SASL cert PR
[13:57:16] <atuin> yeah :D, actually PLAIN is more difficult to implement :D
[13:57:27] <wasamasa> the format is correct
[13:57:38] <ngz> so, the authorization identity is the same as the authentication identity?
[13:57:40] <ngz> OK.
[13:57:48] <wasamasa> for IRC, yes
[13:58:13] <ngz> OK. So, brb.
[13:58:19] *** Quits: ngz (~ngz@user/ngz) ()
[13:58:55] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[13:59:30] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Changing host)
[13:59:30] *** Joins: ngz (~ngz@user/ngz)
[13:59:34] <wasamasa> you could make this easier by taking the irc-debug log, redacting the credentials stuff from it and giving us the whole thing
[13:59:48] <ngz> Failing with password in plain text.
[13:59:50] <atuin> I agree
[14:00:00] <atuin> could be it be an encoding thing with the pass ...
[14:00:12] <ngz> Just a (silly) question: is the sasl-password the same as the NickServ password?
[14:00:48] <wasamasa> there shouldn't be any encoding things after https://github.com/jorgenschaefer/circe/commit/9b8cb9e1febe54c9ad807d48159c11f7301955c4
[14:01:29] <wasamasa> so M-x find-function irc-handle-registration--authenticate and compare
[14:01:33] <atuin> ngz I don't think it needs to be the same, at least in freenode i think they were different things
[14:01:43] <wasamasa> it is the same
[14:03:07] <ngz> So, I do not have anything special to do to use sasl-password as long as I am registered the standard way, right?
[14:03:47] <wasamasa> yup
[14:04:14] <ngz> OK. Let me send you the full log, then. I have to re-create it, I somehow killed it on last attempt.
[14:04:50] *** Quits: ngz (~ngz@user/ngz) ()
[14:04:58] <atuin> according the libera doc, yes just registering the nick is enough
[14:06:13] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[14:06:58] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Changing host)
[14:06:58] *** Joins: ngz (~ngz@user/ngz)
[14:09:24] <ngz> Here it is: https://paste.debian.net/1202330/
[14:10:22] <wasamasa> ok, so the client wants to do plain authentication
[14:10:28] <wasamasa> the server asks for extended authentication
[14:10:44] <wasamasa> so the client responds with external authentication, but there is no cert in the connection
[14:10:45] <wasamasa> so it fails
[14:10:51] <ngz> QED
[14:11:14] <wasamasa> admittedly, this could be handled better on circe's side by checking for each case whether it's even meaningful to respond this way
[14:11:30] <wasamasa> atuin: your chance to shine :P
[14:11:45] <wasamasa> ngz: have you by chance set up certfp in nickserv before?
[14:11:54] <ngz> No, I didn't.
[14:12:16] <ngz> I didn't even know something like this existed before coming here.
[14:12:43] <wasamasa> could you try connecting from some other machine?
[14:13:11] <ngz> Unfortunately, no.
[14:13:31] <wasamasa> looks like a residential hostname to me
[14:15:10] <ngz> Just to be sure I didn't do anything like this inadvertently: what are the steps to "set up certfp in nickserv"?
[14:15:20] <wasamasa> wait
[14:15:24] <wasamasa> why is sasl-external set
[14:15:36] <wasamasa> or is it, no
[14:15:47] <wasamasa> https://freenode.net/kb/answer/certfp
[14:15:58] <wasamasa> https://freenode.net/kb/answer/certfp#add-your-fingerprint-to-nickserv
[14:16:27] <ngz> Ah. No, I didn't do anything like this.
[14:16:54] *** Quits: irek (~irek@public-gprs177573.centertel.pl) (Remote host closed the connection)
[14:18:24] <atuin> let's see
[14:18:32] <atuin> this looks fine to me
[14:18:35] <atuin> C: AUTHENTICATE PLAIN
[14:18:43] <atuin> the client is asking for PLAIN auth
[14:19:12] <atuin> S: AUTHENTICATE + <- and seems that the server is happy also with it
[14:19:16] *** Joins: irek (~irek@public-gprs177573.centertel.pl)
[14:19:32] <wasamasa> I've used the same config with the built-in libera settings
[14:20:01] <wasamasa> here's my log:
[14:20:02] <atuin> yeah, me too (using cert), the migration was smooth
[14:20:07] <wasamasa> http://ix.io/3r4q
[14:21:35] <wasamasa> the logs are very similar overall
[14:21:39] <atuin> there is nothing strange in those logs
[14:21:52] <wasamasa> big difference happens after the authentication attempt
[14:21:52] <atuin> so for whatever reason, the server is not accepting the credentials
[14:21:55] <wasamasa> yeah
[14:22:10] <wasamasa> consider changing your password
[14:22:17] <wasamasa> maybe it contains spaces or something
[14:22:34] <atuin> yes, that's what i meant before, maybe some weird stuff with the pass
[14:23:01] *** Quits: declan (~declan@64.64.228.30.16clouds.com) (Quit: Client closed)
[14:23:12] <ngz> hmmm
[14:24:16] <atuin> I would try changing the pass and making sure that nicksrv can identify it first
[14:24:20] <wasamasa> I remember someone in here freaking out because I could deduce their (stupidly long) password length
[14:24:23] <wasamasa> yup
[14:24:32] <wasamasa> /msg nickserv identify whatever
[14:24:55] <ngz> I cant identify to NickServ with my current pass, or I wouldn't even be able to chat here.
[14:25:03] <wasamasa> you cannot?
[14:25:08] <atuin> well then ...
[14:25:08] <ngz> err
[14:25:09] <ngz> I can
[14:25:13] <atuin> ahhh :D
[14:25:15] <ngz> :)
[14:25:34] <ngz> my pass is 19 characters long, no space, latin-1 characters only. IOW it is not fancy.
[14:26:05] <wasamasa> have you confirmed that your copy of irc.el doesn't do the newlines thing?
[14:26:25] <ngz> Not yet. I have to eschew the 3 failing tests in latest Circe.
[14:27:28] <atuin> stupid test but ... what if you try to change your pass to something shorter fow a while
[14:27:43] <wasamasa> though, (base64-encode-string (format "%s
[14:27:49] <wasamasa> needs a longer user name for that
[14:27:57] <wasamasa> the 3 failing tests have little to do with that
[14:28:12] <ngz> Yes, it's just that I wanted to upgrade the package.
[14:28:17] <ngz> I'll just disable all of them for now.
[14:28:24] <ngz> brb
[14:28:32] <ngz> (I try latest Circe)
[14:28:42] *** Quits: ngz (~ngz@user/ngz) (Remote host closed the connection)
[14:35:37] *** Joins: ngz (~ngz@user/ngz)
[14:35:47] <ngz> No luck with latest Circe.
[14:37:19] <ngz> So, I guess I'm left with the dumb password test.
[14:37:33] <atuin> yeah, at least to find the root of the problem
[14:38:00] <ngz> alphanum only, is that OK?
[14:38:56] <atuin> yes, the output you pasted for the protocol does not show anything strange, just the server not accepting your creds
[14:39:19] <ngz> OK, brb :)
[14:39:30] <atuin> i guess you did the whole registration process (confirmation email and so on). Dunno if that it's even related
[14:39:56] *** Quits: ngz (~ngz@user/ngz) ()
[14:40:18] *** Joins: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr)
[14:41:00] *** Quits: ngz (~ngz@0000430144aaf83bdc781469.ipv6.commingeshautdebit.fr) (Client Quit)
[14:42:08] *** Joins: ngz (~ngz@user/ngz)
[14:42:10] <ngz> OK.
[14:42:14] <ngz> This one is successful.
[14:42:30] <ngz> \o/
[14:42:37] <atuin> so ... something weird with the password encoding then?
[14:42:56] <atuin> mayeb the lenght? you can now try the old password but just shorter :D
[14:43:15] <ngz> This one is 9 characters long.
[14:43:23] <atuin> i remember reading soemthing about the lenght when reading the protocol ... but now sure now
[14:43:30] <ngz> I can try a 19 characters long alphanum only password
[14:44:35] <ngz> brb
[14:44:45] <atuin> yeah, good test
[14:45:21] *** Quits: ngz (~ngz@user/ngz) (Client Quit)
[14:45:44] *** Joins: ngz (~ngz@user/ngz)
[14:45:46] <ngz> Sucessful
[14:46:08] <ngz> So it's about the encoding, probably. No non-ASCII Latin-1 character, maybe.
[14:46:21] <wasamasa> what kind of special characters did the old one contain?
[14:46:24] <wasamasa> maybe : ?
[14:46:25] <atuin> https://datatracker.ietf.org/doc/html/rfc4616
[14:46:37] <atuin> there you see what UTF chars are prohibited
[14:47:27] <ngz> it contained : à  '   ,  otherwise, nothing really fancy
[14:47:39] <wasamasa> so could it be the à
[14:47:40] <ngz> Ah, and a period, too
[14:48:08] <wasamasa> irc--format-command escapes space-containing arguments with a leading :
[14:49:33] <ngz> In any case, thank you very much for the help.
[14:49:38] <atuin> mmmm wasamasa, does the encoding function ensures that it's utf?
[14:50:02] <wasamasa> irc-send--internal does
[14:50:04] <atuin> The authorization identity (authzid), authentication identity (authcid), password (passwd), and NUL character deliminators SHALL be transferred as [UTF-8] encoded strings of [Unicode] characters.
[14:50:06] <atuin> ok
[14:51:14] <atuin> yeah, but irc-send--internal takes the alredy base64 encoded string right?
[14:51:26] <wasamasa> yup
[14:51:37] <atuin> i mean it would not make sure that the password is UTF-8
[14:52:03] <atuin> maybe something to play with there ...
[14:52:16] <wasamasa> maybe, but better ask libera staff what the ircd expects
[14:53:50] <atuin> yeah, maybe i tried to investigate more that issue when I take holidays, i'm now curious ...
[14:53:55] <atuin> *try
[14:58:40] <ngz> On another topic, I tried to have fancy display in Circe. I tried to set `circe-format-say' to a function because the format string are a bit limited. However, when I do that, the nick colors go out of the window.
[14:59:28] <ngz> I assume I have to set some text properties on the output of my function to make it work (maybe). But is it the proper way to do it? Or should I tweak `lui-pre-output-hook' instead, for example?
[15:03:33] <ngz> Yes, if I set properly lui-format-argument property in my output string, I get the nick colors back.
[15:11:25] <ngz> I think that will do, then.
[15:13:22] <ngz> Circe is a really nice IRC client.
[15:14:27] *** Quits: atuin (~atuin@user/atuin) (Remote host closed the connection)
[15:19:34] *** Quits: trocado (~trocado@bl18-243-251.dsl.telepac.pt) (Ping timeout: 258 seconds)
[16:10:45] *** Joins: karim (~user@169-0-53-4.ip.afrihost.co.za)
[16:53:33] *** Quits: karim (~user@169-0-53-4.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[17:05:20] *** Joins: karim (~user@169-0-53-4.ip.afrihost.co.za)
[17:21:48] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 252 seconds)
[17:23:46] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[17:27:58] *** Quits: karim (~user@169-0-53-4.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[17:29:46] *** Joins: karim (~user@169-0-53-4.ip.afrihost.co.za)
[17:34:12] *** Quits: karim (~user@169-0-53-4.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[17:38:47] *** Joins: karim (~user@169-0-53-4.ip.afrihost.co.za)
[18:32:31] *** Joins: karim` (~user@169-0-113-204.ip.afrihost.co.za)
[18:36:09] *** Quits: karim (~user@169-0-53-4.ip.afrihost.co.za) (Ping timeout: 244 seconds)
[19:11:16] *** Quits: karim` (~user@169-0-113-204.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[19:20:18] *** Joins: karim` (~user@169-0-113-204.ip.afrihost.co.za)
[19:54:02] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[19:56:10] *** Quits: karim` (~user@169-0-113-204.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[20:04:02] *** Joins: karim` (~user@169-0-113-204.ip.afrihost.co.za)
[20:06:58] *** Joins: declan (~declan@64.64.228.30.16clouds.com)
[20:07:33] *** Joins: trocado (~trocado@bl18-243-251.dsl.telepac.pt)
[21:05:50] *** Quits: trocado (~trocado@bl18-243-251.dsl.telepac.pt) (Ping timeout: 272 seconds)
[21:52:51] *** Joins: notzmv (~zmv@user/notzmv)
[22:18:52] *** Quits: irek (~irek@public-gprs177573.centertel.pl) (Ping timeout: 246 seconds)
[22:19:45] *** Quits: karim` (~user@169-0-113-204.ip.afrihost.co.za) (Read error: Connection reset by peer)
[22:19:59] *** Joins: karim` (~user@169-0-113-204.ip.afrihost.co.za)
[22:22:34] *** Quits: karim` (~user@169-0-113-204.ip.afrihost.co.za) (Remote host closed the connection)
[22:22:48] *** Joins: karim` (~user@169-0-113-204.ip.afrihost.co.za)
[22:24:56] *** Parts: karim` (~user@169-0-113-204.ip.afrihost.co.za) ()
