[00:02:03] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:02:55] *** Joins: proller (~p@80.240.216.69)
[00:04:06] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:05:38] *** Joins: troller (~p@2a02:6b8:b081:10::1:1c)
[00:08:13] *** Quits: letto (~letto@188.26.158.104) (Ping timeout: 240 seconds)
[00:08:21] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[00:08:44] *** luca0N is now known as Guest3888
[00:09:23] *** Guest3888 is now known as luca0N
[00:09:24] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[00:15:05] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:15:41] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 265 seconds)
[00:18:04] *** Joins: smartin (~Thunderbi@88.135.18.171)
[00:19:51] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:21:53] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:26:13] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[00:27:15] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[00:27:51] *** Joins: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4)
[00:29:49] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:31:25] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:37:43] *** Quits: rgrinberg (~textual@2806:101e:7:9999:853a:1f51:2226:1f4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:55] *** Quits: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu) (Ping timeout: 265 seconds)
[00:38:18] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:39:18] *** Joins: b_jonas (~x@catv-176-63-27-92.catv.broadband.hu)
[00:44:13] *** Joins: sbrothy (~sbrothy@192038134024.mbb.telenor.dk)
[00:46:31] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:47:13] <senoraraton> So I'm trying to include/link the SDL2_image library, and it compiles, but I get a runtime error "./font: error while loading shared libraries: libSDL2_image-2.0.so.0: cannot open shared object file: No such file or directory"
[00:50:50] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[00:54:12] <senoraraton> I tried exporting export LD_LIBRARY_PATH="/usr/local/lib"
[00:54:21] <senoraraton> Also I added /usr/local/lib to my path.
[00:56:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:56:39] <senoraraton> Actually I did not export it properly, but when I did that fixed it.
[00:57:44] *** Quits: b_jonas (~x@catv-176-63-27-92.catv.broadband.hu) (Ping timeout: 265 seconds)
[00:59:23] *** Joins: b_jonas (~x@catv-176-63-4-47.catv.broadband.hu)
[00:59:33] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Quit: Lost terminal)
[01:00:20] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:04:19] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600bc9bcdb5a97ecd6d.ipv6.abo.wanadoo.fr)
[01:08:11] *** Joins: vicfred (~vicfred@user/vicfred)
[01:09:13] *** Joins: letto (~letto@188.26.158.104)
[01:11:04] *** wyre_ is now known as wyre
[01:11:54] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[01:12:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:23] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600bc9bcdb5a97ecd6d.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[01:21:01] *** Joins: rgrinberg (~textual@187.223.144.204)
[01:21:54] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 265 seconds)
[01:23:05] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a660099cc0410ed56473a.ipv6.abo.wanadoo.fr)
[01:23:07] *** Quits: sbrothy (~sbrothy@192038134024.mbb.telenor.dk) (Read error: No route to host)
[01:23:34] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[01:27:15] *** Joins: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38)
[01:27:22] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:28:28] *** Joins: sbrothy (~sbrothy@192038134024.mbb.telenor.dk)
[01:29:20] *** Quits: sbrothy (~sbrothy@192038134024.mbb.telenor.dk) (Client Quit)
[01:29:33] *** Joins: sbrothy (~sbrothy@192038134024.mbb.telenor.dk)
[01:29:57] *** Quits: tolog (~tolog@91.193.6.10) (Remote host closed the connection)
[01:30:31] <Guest86> Hi there! A class Foo contains an std::vector of pointers to Bar. I would like to expose 1. an iterator to the user so that they can go through each element in the vector, but 2. not allow them to alter its contents and 3. not to expose its actual implementation (i.e. std::vector).
[01:30:32] <Guest86> This is what I have done so far: https://ideone.com/kFwOHn It achieves points 1 and 3, but not 2. Any tips? Thank you!
[01:31:19] <sbrothy> provide a std::vector::const_iterator?
[01:31:42] <sbrothy> oh alter
[01:31:53] <sbrothy> std::vector::iterator then?
[01:32:18] <Guest86> std::vector::const_iterator prevents the user from changing the pointer as a whole to something else, but from what I see, it doesn't prevent changing say a field out of the object that it points to
[01:32:50] <sbrothy> hmm. nah. sorry. it was off the top of my head.
[01:33:27] <Guest86> the intention is to sort of get a vector of const pointers out of a vector of pointers :)
[01:34:02] <sbrothy> why is it important not to expose the implementation? cant you just provide an indexed imlpementation, like with size_T?
[01:34:09] <sbrothy> size_t
[01:34:34] <sbrothy> overload operator[] perhaps? (nah that'll just introduon of other probs. :) )
[01:34:54] <Guest86> sbrothy: because the std::vector could change to something else, such as a linked list, which wouldn't have the same performance guarantees for accessing by index
[01:35:16] <sbrothy> if theres only one container then operator[] maybe isnt that far out?
[01:35:19] <Guest86> I would therefore encourage them to only access the elements sequentially, through a for-loop
[01:35:47] <sbrothy> or a callback function
[01:36:09] <sbrothy> anonymous lambda perhaps
[01:36:44] <sbrothy> std::foreach springs to mind
[01:38:04] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:38:15] <RandomReader> I think you would need to create your own iterator to do this
[01:38:18] <Guest86> the nice thing I think about offering the begin and end iterators, is that they can do std::foreach, std::any_of, std::copy_if.
[01:38:34] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a894:a049:803a:817)
[01:38:34] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a894:a049:803a:817) (Changing host)
[01:38:34] *** Joins: skapata (~Skapata@user/skapata)
[01:38:35] <Guest86> if you only return std::foreach, you limit them to using just that
[01:38:37] <RandomReader> at a basic level, what you're trying to do is alter the type from what is actually being stored, which is not something the containers do on their own
[01:38:44] <sbrothy> that would be one way. or just the number of elemnts and the for
[01:38:54] <bpalmer> you could mess with something like std::ranges::cbegin
[01:38:58] <RandomReader> e.g. you have pointer-to-int, you want pointer-to-const-int, which is a transformation you'd have to create
[01:39:13] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:19] <RandomReader> the only one being done now is pointer vs const-pointer, which is consistent with the container itself
[01:39:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:22] *** ChanServ sets mode: +v npaperbot
[01:39:48] <RandomReader> put in more abstract terms, the container stores T and the various const mechanisms already in place will make it const-T
[01:39:51] <RandomReader> you want U instead
[01:41:01] <Guest86> "you want U instead" -- I didn't realise that.
[01:42:14] <RandomReader> yeah, it's often hard to see with pointers, because that's not how we usually read the "const" attached to them
[01:42:39] <RandomReader> sometimes I just do a mental syntax exercise of  T* -> ptr<T>
[01:43:02] <RandomReader> then it's easier to see const_iterator gets me const ptr<T>, but I actually want const ptr<constr T>
[01:44:01] *** Joins: Viewday116 (~Viewday@user/viewday)
[01:44:33] <RandomReader> there was an experimental propagate_const wrapper, might be able to find an implementation of that somewhere
[01:45:16] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[01:45:17] <RandomReader> so it'd be vector<propagate_const<Bar>>
[01:45:25] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:45:25] *** Viewday116 is now known as Viewday11
[01:45:34] <RandomReader> but otherwise, I think it'd mean creating a custom iterator that does the same job instead
[01:46:32] <bpalmer> I thought the range stuff would do that, but I misunderstood it.
[01:52:37] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[01:59:07] *** Quits: letto (~letto@188.26.158.104) (Ping timeout: 252 seconds)
[02:00:05] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[02:05:05] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:08:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:08:55] *** Joins: ws2k3 (znc@vps.freegamehosting.eu)
[02:10:14] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 265 seconds)
[02:10:25] <ws2k3> im trying to do a pretty simple memcpy but i get a conversion error. can anyone point out what i am doing wrong? https://pastebin.com/h6Cr4Exb
[02:11:18] <BtbN> it wants a pointer, you pass it an integer type.
[02:11:57] <BtbN> You are either missing a cast or a &
[02:12:11] <BtbN> Hopefully a &, cause otherwise this'd explode horribly when trying to write to 0x0
[02:13:20] <kalven> there's so much weirdness in that paste
[02:13:53] <ws2k3> true n00b here trying to learn something
[02:14:24] <ws2k3> BtbN indeed with memcpy(&references[i], &custom_str, sizeof(uintptr_t)); it compiles
[02:14:45] <BtbN> Yeah, even with the & there, it makes not much sense
[02:14:55] <kalven> it'd help to know what you want the code to do
[02:15:57] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:20:48] *** Quits: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38) (Quit: Client closed)
[02:20:52] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 265 seconds)
[02:20:56] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[02:21:30] <ws2k3> i would like to change a value in memory at thet address
[02:22:15] <kalven> if you want to interpret the values in that intptr_t array as pointers, you'll need to use reinterpret_cast
[02:22:25] <ws2k3> i found the value at .rodata:081408DD
[02:24:28] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:26:36] *** Joins: letto (~letto@188.26.158.104)
[02:26:56] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:27:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:30:49] *** Joins: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[02:31:05] *** Quits: TheSchaf (~TheSchaf@p508b6d1b.dip0.t-ipconnect.de) ()
[02:32:08] *** Joins: Cahaan_ (~Cahaan@user/cahaan)
[02:32:50] *** Quits: pizdets (~pizdets@183.182.111.137) (Ping timeout: 256 seconds)
[02:32:53] *** Joins: geli (~gelignite@55d4e16d.access.ecotel.net)
[02:33:10] *** Quits: magla (~gelignite@55d4e16d.access.ecotel.net) (Remote host closed the connection)
[02:33:21] <ws2k3> i verified that in memory the value 1.3 lives. i would like to overwrite is with 1.4 that my goal
[02:33:50] *** Joins: pizdets (~pizdets@183.182.111.219)
[02:33:51] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:34:16] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[02:34:45] *** Joins: jplejacq (~jplejacq@24.224.100.40)
[02:35:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:35:40] *** Quits: Cahaan (~Cahaan@user/cahaan) (Ping timeout: 256 seconds)
[02:38:14] *** Quits: smartin (~Thunderbi@88.135.18.171) (Quit: smartin)
[02:43:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:21] <ws2k3> i realy dont get why this is wrong https://pastebin.com/ctjE8Eay
[02:47:59] *** Joins: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38)
[02:48:06] <Guest86> Thank you for the help! Good evening, everyone!
[02:49:41] <ws2k3> i think my value ends up at 8150893 instead of 0x081408DD but why.
[02:50:04] *** Quits: CalamityToo (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (Read error: Connection reset by peer)
[02:50:39] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:50:41] *** Quits: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38) (Client Quit)
[02:50:47] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:50:59] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:51:15] <bpalmer> ws2k3: you're not checking your memory bounds
[02:51:50] <bpalmer> so that runs into undefined behavior, which means anything goes.
[02:53:00] <ws2k3> bpalmer can you elaborate a bit more. what do you mean exacly with memory bounds?
[02:53:24] <ws2k3> bpalmer before my code i already run this. mprotect((void *)0x08048000, 0x135000, PROT_READ | PROT_WRITE | PROT_EXEC);
[02:53:25] *** Quits: troller (~p@2a02:6b8:b081:10::1:1c) (Ping timeout: 240 seconds)
[02:54:08] <bpalmer> how many bytes are you writing into reference's location?
[02:54:36] <ws2k3> 12. but i have no idea if that is correct
[02:54:52] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[02:54:56] <ws2k3> since one char is 4 bytes and i write 3 chars my idea was 12
[02:55:07] <anyone> that looks terribly unportable
[02:55:24] <anyone> << sizeof(char)
[02:55:24] <geordi> 1
[02:55:30] <anyone> one char is by definition 1 byte.
[02:55:57] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[02:56:01] *** Quits: geli (~gelignite@55d4e16d.access.ecotel.net) (Quit: Stay safe!)
[02:56:04] <bpalmer> so that's what I mean: you're reading some number of bytes that exceed an object's size and writing into a location that probably exceeeds that object's size, too.
[02:56:44] <bpalmer> ws2k3: you can use sizeof to figure out how many bytes an object occupies
[02:58:12] <ws2k3> i tryed memcpy(&reference, &custom_str, 3); just to see if that would work but the result is the same
[02:59:03] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:39] *** Joins: w\W_ (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[03:00:08] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[03:00:15] <ws2k3> i can see that the orginal string is still there http://puu.sh/IuV0E/9238f1924d.png
[03:02:11] *** Quits: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c) (Ping timeout: 252 seconds)
[03:02:14] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
[03:03:25] <bpalmer> ws2k3: if you are trying to copy the byte '1', the byte '.', the byte '4', and the byte '\0' into reference, you want something like 'static char custom_str[] = "1.4"; static_assert(sizeof(custom_str) == sizeof(reference), "Need src and dest to be the same"); memcpy(&reference, custom_str, sizeof(reference));'
[03:03:39] *** w\W_ is now known as w\W
[03:04:39] <bpalmer> note how it's *not* taking the address of custom_str, but instead using as the src pointer directly  (also,to get the sizeofs working right, you want it to be an array, not a pointer)
[03:05:13] <bpalmer> eh, that's a bad error message from the static_assert.
[03:08:09] <bpalmer> what is it that you're trying to do ?
[03:09:21] <ws2k3> currently at that address is 1.3 i would like to overwrite it with 1.4
[03:10:31] <bpalmer> you want to change the value of the string? First, check the order of the arguments to memcpy
[03:11:51] <ws2k3> the order seems to be fine. first destination. and then source
[03:12:36] <ws2k3> this is how the code currently looks like https://pastebin.com/saXEK8Cr
[03:13:04] <bpalmer> so you are changing reference, not the string.
[03:13:39] <ws2k3> yes correct
[03:13:48] *** Cahaan_ is now known as Cahaan
[03:14:37] *** Joins: troller (~p@2a02:6b8:b081:8811::1:2e)
[03:15:57] <bpalmer> so reference is a 32-bit int; you want its first byte to be '1', its second byte to be '.' , and its third byte to be '4' ? Right now its first byte is 0x8 , its second is 0x14, its third is 0x8
[03:17:19] <bpalmer> or, hold up: are you trying to change the 4 bytes located at memory location 0x081408dd ?
[03:17:57] <ws2k3> i would like to Overwrite the 3 chars at 0x081408dd
[03:18:41] <ws2k3> https://puu.sh/IuV0E/9238f1924d.png does this help? you can see the 1.3 here
[03:18:45] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[03:23:39] <bpalmer> std::uintptr_t reference = 0x081408dd; memcpy(reinterpret_cast<void*>(reference), custom_str, sizeof(custom_str));
[03:24:37] <bpalmer> although technically the sizeof bit I gave now copies 4 bytes, because it includes the null terminator.
[03:25:38] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[03:26:05] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:27:44] <ws2k3> bpalmer cool! it works.
[03:28:39] <ws2k3> bpalmer so can you maybe try to elaborate what was wrong?
[03:28:56] <ws2k3> ofcrouse i tryed to read what you send but its pretty low level stuff to me :P
[03:32:17] <bpalmer> memcpy(&reference ,....)  <-- your destination is going to be the bytes that make up reference
[03:32:25] <bpalmer> so you're just changing the value of that int.
[03:32:31] <CarloWood> How can I call a function f() for each argument of a template pack?
[03:32:42] <CarloWood> Here I do it manually, in g():
[03:32:45] <CarloWood> { g(42, 3.14f); } template<typename T> void f(T x) { cout << TYPE(x) << "; "; } template<int I, typename... Args> decltype(auto) get(Args&&... args) { return std::get<I>(std::forward_as_tuple(args...)); } template<typename... Args> void g(Args... args) { f(get<0>(args...)); f(get<1>(args...)); }
[03:32:45] <geordi> lvalue int; lvalue float;
[03:33:27] *** Quits: velgin (~velgin@162.212.106.178) (Quit: okbye)
[03:33:28] <bpalmer> ws2k3: memcpy(reference , ... ) <-- now you're saying you want to change the bytes at the memory location that reference is pointing at ... but this doesn't compile. reference is not a pointer.
[03:33:43] <CarloWood> So, I call g(42, 3.14f);  and I want f(42); and f(3.14f); to be called as a result.
[03:34:07] <bpalmer> ws2k3: so you need to tell the compiler to interpret it as one. That's the basics.
[03:34:08] <kalven> CarloWood: something something fold expression and the comma operator
[03:34:22] <CarloWood> Ah, good idea.
[03:34:53] <kalven> (f(args), ...); maybe
[03:35:14] <CarloWood>  { g(42, 3.14f); } template<typename T> void f(T x) { cout << TYPE(x) << "; "; } template<typename... Args> void g(Args... args) { (..., f(args)); }
[03:35:15] <geordi> Same output.
[03:35:45] <CarloWood> geordi: replace (..., f(args)) with (f(args), ...)
[03:35:46] <geordi> Still same output.
[03:35:51] <CarloWood> Oh, both work
[03:36:09] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[03:36:18] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:39:09] *** Joins: ferdna (~ferdna@user/ferdna)
[03:41:22] <ws2k3> bpalmer what would i need to change if i wanne add another one but as an int?
[03:41:53] <ws2k3> bpalmer this is what i tryed to do https://pastebin.com/eqxF4Xnd
[03:42:51] <kalven> &protocol for the second arg
[03:44:09] *** Joins: Viewday115 (~Viewday@user/viewday)
[03:45:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:45:32] *** Viewday115 is now known as Viewday11
[03:45:36] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[03:45:44] <ws2k3> kalven just to check out my logic. is that because a char is basicly just a pointer to an array with chars? and a int is just a variable? or do i say it wrong?
[03:48:12] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[03:48:13] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[03:48:16] *** scoobydoob is now known as scoobydoo
[03:48:56] <CarloWood> ws2k3: you say it wrong, you mean that `version` is a pointer yes; and protocol isn't.
[03:57:22] <ws2k3> thanks CarloWood
[03:58:59] *** Quits: jkaye (~jkaye@c-71-205-220-154.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[04:02:08] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:bc10:5f40:71cb:b3b6) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:07:11] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:09:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:12:46] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:19:16] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:19:28] <senoraraton> What does this error mean?  https://termbin.com/1owu
[04:19:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:20:25] <PJBoy> didn't find a main function
[04:22:59] <CarloWood> lol, I had to reread this 5 times:
[04:23:08] <CarloWood> RenderPass.h:137:45: error: reference to type 'const vulkan::Attachment' could not bind to an lvalue of type 'char *(const char *, int) noexcept(true)'
[04:23:08] <CarloWood>     rhs.m_render_pass->add_input_attachment(index);
[04:29:16] *** Joins: maroloccio (~marolocci@151.53.155.184)
[04:37:36] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:40:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:43:08] <CarloWood> std::set::find only use operator< right?
[04:43:32] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 240 seconds)
[04:43:33] *** Joins: PJBoy_ (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[04:43:34] *** Quits: PJBoy_ (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[04:43:34] *** Joins: PJBoy_ (~PJBoy@user/pjboy)
[04:43:34] *** PJBoy is now known as Guest5602
[04:43:34] *** PJBoy_ is now known as PJBoy
[04:43:56] <CarloWood> { set<Foo> test; test.insert({}); } struct Foo { };
[04:43:57] <geordi> error: no match for 'operator<' in '__x < __y' (operand types are 'const Foo' and 'const Foo')
[04:44:31] <CarloWood> { set<Foo> test; test.insert({}); test.find({}); } struct Foo { bool operator<(Foo) { return false; } };
[04:44:31] <geordi> Same error.
[04:44:32] *** Joins: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38)
[04:44:45] <CarloWood> { set<Foo> test; test.insert({}); test.find({}); } struct Foo { bool operator<(Foo) const { return false; } };
[04:44:45] <geordi>  
[04:45:02] <Guest86> Hi, what's wrong with https://ideone.com/kDlqMv ? Thanks
[04:46:13] *** Quits: Guest5602 (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[04:46:30] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:48:01] <CarloWood> Guest86: missing
[04:48:03] <CarloWood> 	std::vector<int>::const_iterator begin() const { return v.begin(); }
[04:48:03] <CarloWood> 	std::vector<int>::const_iterator end() const { return v.end(); }
[04:48:44] <Guest86> https://ideone.com/XyDcR0
[04:48:58] <Guest86> CarloWood still same error
[04:49:00] <Guest86> :P
[04:50:22] <CarloWood> You can't read
[04:50:31] <CarloWood> (or copy paste)
[04:50:45] <CarloWood> There is a 'const' after begin() and end()
[04:51:35] *** Quits: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38) (Quit: Client closed)
[04:52:20] *** Joins: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38)
[04:52:43] <Guest86> Haha, good point, CarloWood! :)
[04:53:01] <Guest86> That works, great. Thanks a lot!
[04:53:31] <CarloWood> And I said 'missing'. You have to add those, not replace what you already had.
[04:54:34] *** Quits: jplejacq (~jplejacq@24.224.100.40) (Ping timeout: 265 seconds)
[04:55:00] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:55:26] *** Quits: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38) (Client Quit)
[05:01:20] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[05:15:46] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:13] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[05:18:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:21:01] *** Quits: troller (~p@2a02:6b8:b081:8811::1:2e) (Ping timeout: 240 seconds)
[05:23:18] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[05:26:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:27:10] *** Joins: Betal (~Betal@user/betal)
[05:27:30] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[05:28:43] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[05:29:30] *** Joins: seninha (~seninha@user/seninha)
[05:29:39] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:30:37] *** Quits: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c) (Ping timeout: 240 seconds)
[05:32:06] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:34:04] *** Joins: troller (~p@80.240.216.69)
[05:34:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:250b:308d:c956:22dd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:35:05] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 252 seconds)
[05:37:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[05:39:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:23] *** ChanServ sets mode: +v npaperbot
[05:42:45] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[05:44:13] *** Joins: Viewday116 (~Viewday@user/viewday)
[05:44:36] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:45:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:45:31] *** Viewday116 is now known as Viewday11
[05:47:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:48:12] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:58:17] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[05:58:32] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[05:59:24] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:00:58] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:03:18] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[06:04:22] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:13:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:24:42] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:25:25] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:26:53] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 265 seconds)
[06:33:40] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:35:29] *** Joins: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:35:45] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Read error: No route to host)
[06:36:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:40:42] *** Quits: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:44:45] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:47:55] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[06:53:51] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[06:56:27] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:56:29] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 252 seconds)
[07:03:12] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[07:04:26] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[07:10:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:11:16] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[07:18:49] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:4f1:dc36:ede4:3a36)
[07:20:50] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:4f1:dc36:ede4:3a36) (Client Quit)
[07:21:30] *** Quits: emerent (~quassel@p200300cd571a8375ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[07:21:32] *** Joins: emerent_ (~quassel@p200300cd5724fde6ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:21:32] *** emerent_ is now known as emerent
[07:22:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:23:19] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:24:01] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[07:29:32] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[07:33:54] *** Joins: CaCode_ (~CaCode@user/cacode)
[07:38:27] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[07:40:01] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Remote host closed the connection)
[07:41:21] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:dcc8:ad1a:f19b:91b0) (Remote host closed the connection)
[07:41:41] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[07:43:10] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[07:44:21] *** Joins: Viewday115 (~Viewday@user/viewday)
[07:45:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:45:38] *** Viewday115 is now known as Viewday11
[07:51:49] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 240 seconds)
[07:54:21] *** Joins: Burgundy (~yomon@79.115.213.171)
[07:54:29] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:bae6:fe15:58ae:457e)
[07:54:33] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a660099cc0410ed56473a.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[08:16:13] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[08:20:53] *** Quits: Linux_77 (~7Linux7@186.233.183.58) (Remote host closed the connection)
[08:21:12] *** Joins: Linux_77 (~7Linux7@186.233.183.58)
[08:24:13] *** Quits: rahl (~rahl@102.114.68.112) (Ping timeout: 240 seconds)
[08:26:13] *** Joins: rahl (~rahl@102.114.114.197)
[08:31:13] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[08:32:37] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[08:34:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:34:29] *** Joins: frost (~frost@user/frost)
[08:34:47] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[08:34:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[08:35:15] *** Quits: DrMax (~DrMax@node-1w7jra94757g16d8fug0m91oa.ipv6.telus.net) (Ping timeout: 268 seconds)
[08:38:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[08:38:34] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[08:41:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[08:43:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:45:32] *** Quits: malloy (~jimery@116.30.223.163) (Ping timeout: 250 seconds)
[08:46:58] *** Joins: DrMax (~DrMax@node-1w7jra94757g13bsjcy4kedx7.ipv6.telus.net)
[08:47:30] *** Joins: malloy (~jimery@116.30.223.163)
[08:55:35] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:57:23] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[08:59:58] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:02:12] *** Joins: aleios (~aleios@user/aleios)
[09:02:23] *** Joins: szutt (~szutt@116.37.2.145)
[09:08:47] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:12:32] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[09:28:40] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: No route to host)
[09:39:14] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:24] *** ChanServ sets mode: +v npaperbot
[09:44:16] *** Joins: Viewday110 (~Viewday@user/viewday)
[09:45:38] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:45:39] *** Viewday110 is now known as Viewday11
[09:55:08] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[10:02:14] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[10:06:16] *** Quits: aleios (~aleios@user/aleios) (Quit: WeeChat 3.3)
[10:08:58] *** Quits: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[10:11:36] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:14:19] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:98f7:51e9:4ec2:8af8)
[10:14:19] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:98f7:51e9:4ec2:8af8) (Changing host)
[10:14:19] *** Joins: skapata (~Skapata@user/skapata)
[10:16:11] *** Joins: nosystemd (~nosystemd@27.34.47.149)
[10:16:21] *** Joins: caramel (~caramel@user/caramel)
[10:17:11] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:28] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[10:30:09] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[10:30:12] *** Joins: NEYi (~NEYi@109.251.216.38)
[10:31:03] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[10:38:01] *** Joins: furrymcgee (~devuan@cgn-89-1-209-182.nc.de)
[10:41:13] *** Joins: feldim2425_ (~feldim242@dynamic-2jh5c12ho4ku74b7y2-pd01.res.v6.highway.a1.net)
[10:41:19] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:41:19] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Ping timeout (120 seconds))
[10:41:21] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[10:41:52] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 256 seconds)
[10:41:52] *** Quits: feldim2425 (~feldim242@188-23-90-107.adsl.highway.telekom.at) (Ping timeout: 256 seconds)
[10:42:26] *** Quits: evilissimo (vfeenstr@redhat/evilissimo) (Ping timeout: 256 seconds)
[10:42:26] *** Quits: akacrs (k7f@user/akacrs) (Ping timeout: 256 seconds)
[10:42:26] *** Quits: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[10:42:36] *** Joins: akacrs (k7f@user/akacrs)
[10:42:45] *** Joins: frost (~frost@user/frost)
[10:43:44] *** Quits: nosystemd (~nosystemd@27.34.47.149) (Quit: Client closed)
[10:43:53] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[10:44:01] *** Joins: evilissimo (vfeenstr@nat-pool-brq-t.redhat.com)
[10:44:01] *** Quits: evilissimo (vfeenstr@nat-pool-brq-t.redhat.com) (Changing host)
[10:44:01] *** Joins: evilissimo (vfeenstr@redhat/evilissimo)
[10:44:02] *** Joins: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz)
[10:45:01] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[10:45:18] *** Joins: szutt (~szutt@116.37.2.145)
[10:46:01] *** Joins: anddam (~anddam@user/anddam)
[10:47:03] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[10:48:41] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:49:55] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:51:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c:1ea2:b0b4:cf9b)
[10:54:25] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:bae6:fe15:58ae:457e) (Quit: Leaving)
[10:56:08] *** Quits: malloy (~jimery@116.30.223.163) (Read error: Connection reset by peer)
[10:57:33] *** Quits: sbrothy (~sbrothy@192038134024.mbb.telenor.dk) (Ping timeout: 265 seconds)
[10:57:48] *** Joins: sbrothy (~sbrothy@192038134024.mbb.telenor.dk)
[10:58:56] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:59:14] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[11:00:56] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:4530:ee19:2379:ed51)
[11:02:04] *** Joins: malloy (~jimery@116.30.222.36)
[11:03:59] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:4530:ee19:2379:ed51) (Ping timeout: 252 seconds)
[11:07:56] *** Joins: BluesBoy (~bboy@user/bluesboy)
[11:10:02] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[11:19:47] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c:1ea2:b0b4:cf9b) (Ping timeout: 265 seconds)
[11:22:06] *** Quits: sbrothy (~sbrothy@192038134024.mbb.telenor.dk) (Ping timeout: 256 seconds)
[11:23:46] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:26:50] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:29:32] *** Joins: callq (~callq@2409:4062:2e11:38d:1999:c2e4:d3b8:8865)
[11:32:05] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[11:35:53] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[11:38:17] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:39:35] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[11:41:07] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[11:42:36] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:10ea:1149:e04f:a7a6)
[11:43:05] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[11:43:49] *** Joins: CaCode (~CaCode@user/cacode)
[11:44:22] *** Joins: Viewday113 (~Viewday@user/viewday)
[11:45:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:45:48] *** Viewday113 is now known as Viewday11
[11:46:28] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[11:55:56] *** Joins: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de)
[11:56:48] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: Lost terminal)
[11:59:30] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[12:01:50] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[12:05:06] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:05:21] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:08:37] *** Quits: Spirit532 (~Spirit532@mm-32-1-84-93.mgts.dynamic.pppoe.byfly.by) (Killed (NickServ (GHOST command used by Spirit5328!~Spirit532@mm-44-47-84-93.mgts.dynamic.pppoe.byfly.by)))
[12:08:38] *** Joins: Spirit532 (~Spirit532@mm-44-47-84-93.mgts.dynamic.pppoe.byfly.by)
[12:09:36] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:13:53] *** Joins: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu)
[12:15:56] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 256 seconds)
[12:18:52] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:19:40] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[12:23:33] *** Quits: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi) (Ping timeout: 252 seconds)
[12:27:11] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[12:29:14] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[12:30:02] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[12:41:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:44:54] *** Joins: xkuru (~xkuru@user/xkuru)
[12:47:50] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[12:47:55] *** Joins: robod34 (Username@79.113.195.239)
[12:56:56] *** Quits: chozorho (~chozorho@2601:146:300:c30::88ba) (Quit: WeeChat 3.0)
[13:01:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:03:29] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[13:03:58] *** Joins: Cyp (~cyp@213.237.85.9)
[13:04:59] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[13:05:24] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Quit: Quit.)
[13:05:31] *** Joins: sa02irc_ (~mbax@155-079-043-212.ip-addr.inexio.net)
[13:05:48] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[13:09:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:09:44] *** Joins: frost (~frost@user/frost)
[13:09:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[13:12:20] *** Joins: Arsen (arsen@managarm/dev/Arsen)
[13:15:12] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:15:38] *** Joins: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi)
[13:17:14] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:21:23] *** Quits: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi) (Ping timeout: 268 seconds)
[13:23:37] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[13:23:37] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[13:23:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:27:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:30:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:32:12] <montpol> Are there any good resources on bits, multiplying bits, adding bits, converting bits into decimals and vice versa, different types of data, floating, integer, double, etc., using most significant bits, signed and unsigned bits, hex, etc etc ?
[13:34:02] <Stryyker> wikipedia?
[13:38:04] <Stryyker> hex is a grouping of 4 bits
[13:38:15] <RandomReader> I'd probably start with wikipedia too
[13:38:25] <RandomReader> fundamentally this is mostly mathematics, not programming or computer specific
[13:38:50] <RandomReader> simply different ways of representing numbers, with the corresponding arithmetic operations
[13:39:10] *** Joins: nosystemd (~nosystemd@27.34.47.199)
[13:39:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:22] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:22] *** ChanServ sets mode: +v npaperbot
[13:40:20] <Stryyker> float and double are related. I wouldn't worry about hex until you can do binary<>decimal conversions, then hex will be easier to understand - base 16 which happens to nicely fit in to 4 bits
[13:41:19] <RandomReader> although floating point is probably more computer specific, since in general the form you care about is a particular kind of representation
[13:41:39] <RandomReader> there's https://fabiensanglard.net/floating_point_visually_explained/ and the classic https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
[13:41:44] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[13:41:48] <Stryyker> and that would be last part I would learn about of the listed topics
[13:42:01] <RandomReader> agreed
[13:42:05] *** Joins: szutt (~szutt@116.37.2.145)
[13:42:26] <smallville7123> montpol: it depends on how you want to modify the bit's
[13:42:55] <RandomReader> actually for a vague intro to number representations, I came across this the other day: https://www.youtube.com/watch?v=JS40jPaogM4
[13:43:07] <RandomReader> might at least give you a sense for the kind of information you'll be looking for
[13:43:15] <smallville7123> eg you could do string-based bit manipulation (involves manually computing bit placement and such), eg "1001"+ "10" = "1011"
[13:44:00] *** Joins: Viewday116 (~Viewday@user/viewday)
[13:44:08] <smallville7123> (basically you would need a binary calculator implementation)
[13:44:52] <Stryyker> learning with pen and paper, like you would with decimal, lining up the lowest value parts at the right will help
[13:44:58] *** Quits: xcm_ (~xcm@user/xcm) (Remote host closed the connection)
[13:45:01] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[13:45:11] <smallville7123> tho that would probably be the most ineficent way
[13:45:15] *** Joins: xcm_ (~xcm@user/xcm)
[13:45:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:45:26] *** Viewday116 is now known as Viewday11
[13:45:38] <Stryyker> for learning it will stick in your mind though
[13:45:40] <smallville7123> (unless you need to support bits greater than your OS can handle, such as 256 bit maths
[13:45:49] <RandomReader> for the most common signed integer representation you'll encounter on computers: https://en.wikipedia.org/wiki/Two%27s_complement
[13:46:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:46:27] <smallville7123> (which can be worked around via smart type combining such as how 128_t is emulated in software)
[13:46:48] <smallville7123> (which can be worked around via smart type combining such as how 128_t is emulated in software by using two 64_t types for lo and hi portions)
[13:48:09] <smallville7123> anyway, assuming you can work with this type of emulation, each bit can be extracted via num << bit_number & 0x1 // shift num by bit_number of bits and then mask by 0x1
[13:48:21] <RandomReader> and as a starting point for the positional number representations (decimal, binary, octal, hexadecimal) the underlying theme/term is radix: https://en.wikipedia.org/wiki/Radix
[13:48:50] <smallville7123> i am not sure how the reverse would look (eg write to a specific bit)
[13:49:03] *** Joins: artok (~azo@mobile-access-5672c9-83.dhcp.inet.fi)
[13:50:38] <RandomReader> once you recognize the concepts in the abstract, understand how they relate mathematically, you can translate it to programming fairly easily
[13:52:01] <montpol> thanks ppl :) the floating point visually explained looks good
[13:52:29] <ville> going from text/decimal real to binary floating point or the other way is rather involved
[13:52:51] *** Quits: nosystemd (~nosystemd@27.34.47.199) (Quit: Client closed)
[13:53:42] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[13:55:27] *** Joins: nosystemd (~nosystemd@27.34.47.199)
[13:56:33] <smallville7123> ville: yea
[14:01:51] *** Joins: Lazenca (~lazenca@user/lazenca)
[14:01:52] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:ccbc:7f44:61b5:929c)
[14:05:36] <PJBoy> `num << bit_number & 0x1` is always zero for bit_number != 0
[14:06:13] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[14:08:28] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:ccbc:7f44:61b5:929c) (Ping timeout: 265 seconds)
[14:10:02] <RandomReader> montpol - also as a practice exercise, I would recommend writing a function that takes an integer and creates a string from it, one digit at a time .. do that for decimal, then hexadecimal
[14:10:35] <RandomReader> can certainly look around for how others do it, all the various approaches, but actually write the code yourself at least once
[14:11:08] <RandomReader> even if you never do this sort of thing again, I can pretty much guarantee that what you pick up about data conversion from that will be useful to you in the future
[14:11:23] *** Joins: dv2 (~dv2@eclipse.oxfordfun.com)
[14:24:13] *** Joins: ko (~i.am@user/marlboro)
[14:26:30] *** Joins: bitmask (~bitmask@2601:84:c702:6650:b191:d6f4:c6c3:539)
[14:33:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 240 seconds)
[14:33:44] *** Joins: CaCode_ (~CaCode@user/cacode)
[14:36:39] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 252 seconds)
[14:40:18] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[14:40:31] *** Joins: Viewday116 (~Viewday@user/viewday)
[14:42:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[14:42:18] *** Viewday116 is now known as Viewday11
[14:43:20] *** Joins: seninha (~seninha@user/seninha)
[14:45:02] *** Quits: [Brain] (~brain@cpc141994-chfd3-2-0-cust401.12-3.cable.virginm.net) (Ping timeout: 240 seconds)
[14:54:37] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[14:58:15] *** Joins: smartin (~Thunderbi@88.135.18.171)
[15:03:38] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[15:06:37] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[15:06:59] *** Joins: xkuru (~xkuru@user/xkuru)
[15:07:40] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[15:09:22] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 265 seconds)
[15:11:52] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:15:34] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:16:15] *** Quits: nosystemd (~nosystemd@27.34.47.199) (Quit: Client closed)
[15:16:35] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[15:22:23] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[15:26:20] *** Joins: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38)
[15:28:38] *** Joins: Samian (~s@user/samian)
[15:29:16] <Guest86> Hi! I am a bit confused of the use of the derived class as a template parameter of the parent class: https://clang.llvm.org/doxygen/classclang_1_1RecursiveASTVisitor.html Is this idiomatic?
[15:29:17] <Guest86> i.e. "class FindNamedCallVisitor : public RecursiveASTVisitor<FindNamedCallVisitor> ..."
[15:30:04] *** Quits: Samian (~s@user/samian) (Client Quit)
[15:30:44] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[15:32:33] *** Joins: wuldor (~supermumm@84.71.242.153)
[15:32:35] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:32:46] <wuldor> How do I make a vector of function pointers?
[15:33:39] <wuldor> void test(){} int main(){std::vector<void*(*)> V; v = {test}; // gives me a segfault
[15:33:48] <wuldor> s/v/V
[15:33:52] *** Joins: Viewday113 (~Viewday@user/viewday)
[15:35:04] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:35:07] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[15:35:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:35:19] *** Viewday113 is now known as Viewday11
[15:37:22] <PJBoy> segfault?
[15:37:27] <PJBoy> that shouldn't even compile
[15:37:33] <osse> std::vector<void(*)()> V;
[15:37:57] <PJBoy> `void*(*)` is just `void**`
[15:38:31] <wuldor> so how should I write out a vector of function pointers?
[15:38:54] <PJBoy> that answer has been given to you
[15:39:59] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[15:41:14] <wuldor> I meant to write std::vector<void*()> V
[15:41:28] <wuldor> with void** it doesn't even compile.
[15:42:37] <PJBoy> do you have osse blocked or something?
[15:42:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:43:23] <osse> PJBoy: I often go unnoticed. It's my superpower
[15:43:43] <wuldor> I didn't see it, with that command I get a segfault.
[15:43:57] <PJBoy> { vector<void*(*)> v; v = {test}; } void test(){}
[15:43:57] <geordi> error: no match for 'operator=' in 'v = {test}' (operand types are 'vector<void**>' and '<brace-enclosed initializer list>')
[15:43:59] <PJBoy> whoops
[15:44:07] <PJBoy> { vector<void(*)()> v; v = {test}; } void test(){}
[15:44:08] <geordi>  
[15:44:09] <PJBoy> works here
[15:44:15] <osse> wuldor: then the segfault comes from a differenty bugg
[15:46:20] <wuldor> technically I'm dealing with this: class something{public: std::vector<void(*)() *v;}; void test(){} int main(){ *(something.v) = {test};
[15:46:31] <wuldor> }
[15:46:37] <b_jonas> { vector<void(*)()> v; v = {test}; cout << v.size(); v.at(0)(); } void test(){ BARK; }
[15:46:38] <geordi> 1 test()
[15:47:02] <PJBoy> dereferencing an uninitialised pointer?
[15:48:05] <b_jonas> wuldor: maybe try to get a minimal testcase, rather than showing us IRC lines with syntax errors
[15:48:13] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[15:48:41] <wuldor> oh man, I feel like an idiot.
[15:49:01] * PJBoy pats wuldor in the back
[15:49:08] <osse> *on the back
[15:49:21] <osse> otherwise it sounds a bit pervo
[15:50:18] <wuldor> not sure what weird sort of perv would try to get into the back
[15:50:56] <PJBoy> transitive disconjunctive adverbal predispositions have never been my linguistic strength
[15:57:36] *** Joins: aleios (~aleios@user/aleios)
[15:58:55] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[15:59:35] *** Joins: troller (~p@2a02:6b8:0:40c:58c5:b9fd:1f3:e871)
[16:00:11] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:00:20] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[16:03:05] *** Joins: Leone (~Leo@69-165-148-197.dsl.teksavvy.com)
[16:03:41] *** Joins: slidercrank (~slidercra@user/slidercrank)
[16:08:21] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:08:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:09:13] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:11:21] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[16:14:32] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[16:15:07] *** Joins: Brainium (~brainium@user/brainium)
[16:16:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[16:17:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:22:45] *** Quits: callq (~callq@2409:4062:2e11:38d:1999:c2e4:d3b8:8865) (Quit: callq)
[16:24:18] *** Joins: immibis_ (~hexchat@62.156.144.218)
[16:27:30] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:27:45] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 252 seconds)
[16:31:35] *** Joins: xiongxin (~Thunderbi@113.116.35.60)
[16:34:40] *** Quits: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd) (Quit: You have been kicked for being idle)
[16:37:30] *** Quits: immibis_ (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[16:38:11] *** Joins: immibis (~hexchat@62.156.144.218)
[16:41:57] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[16:42:12] *** Joins: CaCode (~CaCode@user/cacode)
[16:44:18] *** Joins: teepee (~teepee@openscad/teepee)
[16:45:04] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 265 seconds)
[16:46:14] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:50:05] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3)
[16:51:47] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3) (Remote host closed the connection)
[16:52:15] *** Joins: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3)
[16:52:34] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[16:53:39] *** Quits: NovumDXW (~NovumDXW@2409:8a28:3610:2340:2d6e:e3c5:77d7:6ce3) (Client Quit)
[16:54:36] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:55:43] *** Quits: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu) (Quit: leaving)
[16:55:58] *** Joins: baltazar (~baltazar@188-143-71-34.pool.digikabel.hu)
[16:56:36] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[16:58:55] <jdavfsxd> osse, PJBoy: thx for the good laugh
[16:59:55] <jdavfsxd> wuldor: gays
[17:00:31] *** Joins: andrei8l (~Guest85@user/andrei8l)
[17:00:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:01:07] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[17:03:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:07:33] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:10ea:1149:e04f:a7a6) (Quit: Leaving)
[17:07:35] *** Joins: velgin (~velgin@162.212.106.178)
[17:07:46] *** Joins: seninha (~seninha@user/seninha)
[17:11:11] *** Quits: andrei8l (~Guest85@user/andrei8l) (Quit: Client closed)
[17:12:47] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[17:15:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:16:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[17:17:17] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:5801:f37:13f0:1699)
[17:17:49] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 240 seconds)
[17:18:18] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:18:53] *** Quits: wuldor (~supermumm@84.71.242.153) (Quit: leaving)
[17:21:57] *** Joins: nosystemd (~nosystemd@27.34.47.135)
[17:23:52] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:24:13] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 265 seconds)
[17:24:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:25:29] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[17:27:14] *** Quits: aleios (~aleios@user/aleios) (Quit: WeeChat 3.3)
[17:28:15] *** Joins: velgin_ (~velgin@162.212.106.178)
[17:30:37] *** Quits: velgin (~velgin@162.212.106.178) (Ping timeout: 240 seconds)
[17:33:49] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[17:39:15] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:24] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:24] *** ChanServ sets mode: +v npaperbot
[17:43:27] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:44:21] *** Joins: Viewday119 (~Viewday@user/viewday)
[17:45:52] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[17:45:52] *** Viewday119 is now known as Viewday11
[17:47:29] *** Joins: dmenz (~dmenz@2804:14d:5cd4:5e94::1)
[17:50:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:52:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[17:54:26] *** Quits: velgin_ (~velgin@162.212.106.178) (Quit: okbye)
[18:03:35] *** Joins: andrei8l (~andrei8l@user/andrei8l)
[18:04:36] *** Quits: nosystemd (~nosystemd@27.34.47.135) (Quit: Client closed)
[18:04:53] *** Joins: nosystemd (~nosystemd@27.34.47.135)
[18:06:12] *** Joins: Burgundy (~yomon@79.115.213.171)
[18:07:09] *** Quits: Guest86 (~Guest86@2a02:2f00:3007:6a00:d49c:57a5:edf0:dd38) (Quit: Client closed)
[18:08:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:08:33] *** Quits: dmenz (~dmenz@2804:14d:5cd4:5e94::1) (Quit: Leaving)
[18:09:54] *** Quits: nosystemd (~nosystemd@27.34.47.135) (Quit: Client closed)
[18:15:33] <tonitch> Hey, I'm not a pro in cpp but I tried to use socket under linux and I can't get my head around something... I can't receive, here is a gist (next msg) and the command variable is never filled... this is a test so, there is a lot of messes I know but maybe you can get me to the right track ?
[18:15:38] <tonitch> https://gist.github.com/tonitch/62235ffd9eb070025f1ba9ffe819c067
[18:15:49] <ville> !give tonitch general
[18:15:50] <nolyc> tonitch: #C++-general for algorithms, libraries, practices, projects, tools etc.
[18:16:06] <tonitch> thanks!
[18:18:20] *** Joins: wuldor (~supermumm@84.71.242.153)
[18:19:16] <wuldor> hmm, so I managed to store a function pointer in a vector, at least to my knowledge however I am unable to call the function at all.
[18:20:30] *** Quits: smartin (~Thunderbi@88.135.18.171) (Remote host closed the connection)
[18:20:52] <ville> !give wuldor testcase
[18:20:53] <nolyc> wuldor: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[18:21:05] <wuldor> I'm sorting it.
[18:21:58] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[18:24:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:25:02] *** Joins: millido (~millido@84.210.150.128)
[18:26:22] *** Joins: smartin (~Thunderbi@88.135.18.171)
[18:26:24] *** Joins: pulse (~pulse@user/pulse)
[18:26:34] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[18:29:07] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 252 seconds)
[18:33:59] <wuldor> https://wandbox.org/permlink/QotGLKJm6ljaNLfg
[18:34:21] <wuldor> please give us a hand? I cannot fathom how to call this.
[18:35:06] <ville> wuldor: so line 6 makes a pointer-to-vector...
[18:35:21] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:36:45] <ville> line 19 is bit of a mess and needs to figure out operator precedence
[18:36:46] <wuldor> I know
[18:37:20] <wuldor> It's part of a bigger system where I have a generator for it where it is passed through a function and mutated.
[18:37:25] <ville> geordi: --precedence &(sc.functions)[0]()
[18:37:25] <geordi> &(((sc.functions)[0])())
[18:37:29] <wuldor> maybe that's not the best design choice.
[18:38:33] <ville> so you're applying the [] operator on the pointer-to-vector, the result it self is a reference-to-vector and then you try to apply operator () on that. and vector does not have an operator ()
[18:39:33] <ville> if you insist on having a pointer-to-vector, you possibly intended to call sc.functions->operator [](0) to get the entry at index 0 using the operator []
[18:40:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:40:20] <ville> but you should really figure out why you want a pointer-to-vector in the first place. perhaps your real situation warrants it
[18:40:47] <wuldor> I'll think about it.
[18:40:55] <wuldor> maybe it is bad design
[18:41:29] <ville> as presented it's at least odd. usually you wouldn't dynamically allocate std::vector it self. it will internally do dynamica allocations
[18:41:40] <wuldor> but I tried sc.functions->operator[](0); and "Greeting Universe" did not get printed.
[18:42:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 265 seconds)
[18:42:40] <wuldor> what could be going on here?
[18:42:41] <ville> make a new paste
[18:42:44] <wuldor> okay.
[18:42:45] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:42:59] <wuldor> https://wandbox.org/permlink/337EXZzZXJpFBmAX
[18:43:22] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:2835:2428:a8d4:1d95)
[18:43:39] <ville> wuldor: line 19 gets you the 0th element right now, you never do anything with the element
[18:44:01] <ville> so if it's a pointer-to-function you can call it
[18:44:03] <wuldor> ah, thanks.
[18:44:30] <wuldor> thanks for your help, this cleared things up a lot.
[18:45:12] <ville> if functions wasn't a pointer-to-vector, but rather a vector, then you wouldn't have to use the funny operator [] syntax to call operator []
[18:46:13] <wuldor> I figured, but also persisted because I at least want to know how to deal with such a type.
[18:46:50] <ville> well i guess you could do: (*sc.functions)[0] too
[18:48:20] <wuldor> good stuff, cheers
[18:48:34] <PJBoy> I might also suggest making a reference variable for this
[18:49:03] <wuldor> why would that be better?
[18:49:38] <PJBoy> as such https://wandbox.org/permlink/j8yQwNS3LD4n6r6q
[18:49:59] <PJBoy> I think it's quite nice to read and write
[18:50:26] <PJBoy> you get your operator[] syntax without needing parentheses and dereferences
[18:51:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[18:52:43] <wuldor> you're right that is a lot neater, thanks.
[18:53:26] <PJBoy> :)
[18:54:49] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Quit: Leaving)
[18:55:09] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[18:55:25] <Alipha> wuldor: I will also chime in here and agree that a pointer to a vector is unusual
[18:56:24] <merpnderp> I haven't done any C++ in a really long time. But I read that 16 modernized the language and made it fun to program in. Is that true?
[18:56:39] <cbreak> what's 16?
[18:56:44] <cbreak> but c++ has always been fun.
[18:57:58] *** Quits: furrymcgee (~devuan@cgn-89-1-209-182.nc.de) (Quit: leaving)
[18:58:33] <PJBoy> C++11 modernised the language, and all subsequent versions C++14/17/20 have continued to modernise it
[18:58:47] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[18:58:59] <PJBoy> I would say that C++ prior to C++11 kinda sucked
[18:59:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:59:25] <PJBoy> but I've met a number of C++ devs that would claim the opposite
[18:59:59] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:00:02] <merpnderp> cbreak: Sorry, I thought 16 was one of the versions. It's been a really long time since I used C++.
[19:02:49] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[19:03:17] <wuldor> Alipha: I have a function that generates the Vector, does it not makes sense to return it as a pointer?
[19:03:29] <wuldor> Surely that prevents copying?
[19:04:16] <ville> wuldor: vector's have good move operations. it's just some pointer assignments worth of cost
[19:04:33] *** Parts: andrei8l (~andrei8l@user/andrei8l) ()
[19:04:50] <CarloWood> Is there an existing concept for "integral type" (that can be used with std::atomic<T>)?
[19:05:34] <CarloWood> nevermind :/
[19:05:36] <ville> wuldor: std::vector looks something like this: struct aa { T* buffer; size_t buffer_size; size_t size; }; so move operations are cheap
[19:06:13] <wuldor> So they're linked-list monoid type things?
[19:06:20] <ville> no they are not linked list
[19:06:38] <wuldor> The move operations just shift the pointers across?
[19:06:38] <imMute> buffer points to an array of Ts, not a linked list of them.
[19:06:48] <wuldor> Ah
[19:07:12] *** Quits: xiongxin (~Thunderbi@113.116.35.60) (Remote host closed the connection)
[19:07:18] <ville> wuldor: yes pointer, couple size_t and allocator and that's about it. handful of bytes
[19:10:02] <Alipha> wuldor: you should NOT be concerned about returning objects by value in c++11 and after. Dynamically allocating and returning a pointer is going to be slower than returning by value. C++ has Return Value Optimization (RVO) and move semantics.
[19:10:32] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[19:11:38] <SuperNintendoSUX> C++ is decent now
[19:11:46] <SuperNintendoSUX> you worry more about real problems
[19:12:05] <SuperNintendoSUX> and use more value semantics :)))
[19:12:13] <SuperNintendoSUX> now our memory blobs are usable
[19:12:45] <cart_man> I also started writing some functional ideas in C++ and I have to say... C++ is way more general then one think and not strictly OOP imo
[19:14:25] <SuperNintendoSUX> yup! C++ is more functional now
[19:15:06] <SuperNintendoSUX> what I do is to write very small classes (especially small if they manage resources) and then functional style code at the top tiers that work with these objects
[19:15:22] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:15:31] <SuperNintendoSUX> move semantics allowed us to separate concerns better
[19:15:48] * SuperNintendoSUX reallly thinks that C++ became a very beautiful elegant language <3
[19:15:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:16:09] <SuperNintendoSUX> (despite the C legacy + syntax)
[19:18:15] <merpnderp> Are vectors not included with clang++?
[19:19:10] <merpnderp> test.cpp:9:23: error: expected ';' at end of declaration vector<string> msg {"Hello", "C++", "World", "from", "VS Code", "and the C++ extension!"};
[19:19:38] <SuperNintendoSUX> XD
[19:19:52] <SuperNintendoSUX> probably you are compiling for C instead of C++
[19:20:00] <merpnderp> I'm using `clang++`
[19:20:06] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Remote host closed the connection)
[19:20:16] <SuperNintendoSUX> !paste
[19:20:17] <nolyc> Paste your test case to https://wandbox.org/ or https://rextester.com/ or http://coliru.stacked-crooked.com/ or another pastebin that can compile code. Do _not_ paste to the channel. See the testcase checklist at http://eel.is/c++/testcase
[19:20:24] <SuperNintendoSUX> also paste your command line
[19:21:05] <wuldor> is there any advantage to using move commands on a vector rather than treating it as a pointer though?
[19:21:26] <merpnderp> https://wandbox.org/permlink/t4SOOHU2t2qACqk5
[19:21:32] <merpnderp> `clang++ test.cpp`
[19:22:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 265 seconds)
[19:22:31] <SuperNintendoSUX> see? it compiles with clang head --> https://wandbox.org/permlink/t4SOOHU2t2qACqk5
[19:22:58] <wuldor> Alipha: Ah just read your post. So if I just return a vector it will move it extremely cleanly without copying? If so, got it.
[19:23:43] <cart_man> SuperNintendoSUX: I have always loved C++. Think people who generally bashed it where just not eager to put the time in to understand all the gripes ... which it has but it's not that bad and also is becoming thrivelous imo
[19:24:14] <PJBoy> simply put, std::vector is already merely a data pointer and a couple size values
[19:24:27] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:24:28] <cart_man> SuperNintendoSUX: Although I can not say I understand even 20% of it
[19:24:34] <PJBoy> moving a vector is as cheap as copying those three cheap objects
[19:24:43] <merpnderp> SuperNintendoSUX: clang++ is 13 which is roughly what that HEAD is at.
[19:24:52] <merpnderp> So why am I getting exceptions on the vector?
[19:24:57] <PJBoy> meanwhile having a pointer to these things slows down access a little bit and adds a bit more maintenance
[19:25:12] <merpnderp> I need this? -std=gnu++2b
[19:25:52] <wuldor> PJBoy: got it, and returning it just copies it? I don't have to use a special function, I'm sure that's the case but I must double check.
[19:26:04] <merpnderp> Yep, that worked. I needed the -std flag.
[19:26:26] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[19:26:32] <merpnderp> Thanks SuperNintendoSUX
[19:26:46] *** Joins: szutt (~szutt@116.37.2.145)
[19:27:00] <PJBoy> wuldor, returning a vector does a move operation, so copying those three cheap values
[19:27:11] <wuldor> thanks
[19:27:21] <wuldor> that simplifies c++ a lot
[19:27:24] <PJBoy> sometimes returning a vector doesn't even need to do a move, and can work as if you were constructing the vector in the caller's scope in the first place
[19:27:39] <PJBoy> and that's called return value optimisation
[19:27:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:27:47] <wuldor> cheers
[19:29:17] *** Joins: nvmd (~nvmd@user/nvmd)
[19:31:28] *** Joins: magla (~gelignite@55d403aa.access.ecotel.net)
[19:33:26] <jellie> How do I pass a value by reference from a function that recieved a value by reference? e.g foo(vector<int>& my_vec) { bar(my_vec) } bar(vector<int>& my_vec_in_bar) {...} ?
[19:33:36] <jellie> When I try to do this the compiler complains about
[19:33:45] *** Quits: RPNX (RPNX@gateway/vpn/protonvpn/rpnx) (Ping timeout: 265 seconds)
[19:34:06] *** magla is now known as jellyknight
[19:34:08] <jellie> "...binding reference of type ‘std::vector<std::__cxx11::basic_string<char> >&’ to ‘const std::vector<std::__cxx11::basic_string<char> >’ discards qualifiers"
[19:36:37] <SuperNintendoSUX> merpnderp <3
[19:36:48] <SuperNintendoSUX> !give jellie testcase
[19:36:49] <nolyc> jellie: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[19:37:03] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:37:47] *** Joins: cation (cation@user/cation)
[19:37:50] <wuldor> what's the most logical way to have a function pointer that can takes multiple arguments type possibilies?
[19:38:05] <imMute> wuldor: I don't think that's possible...
[19:38:12] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[19:38:26] <wuldor> so I can't do a union type thing?
[19:38:38] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[19:39:03] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:39:16] <imMute> you could do a variant of function pointers (or std::function's) but you still have to know which member is the active one so you use the right types when calling it.
[19:39:19] <imMute> sounds like an XY problem though.
[19:39:46] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[19:40:04] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:40:26] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[19:42:24] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[19:42:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:42:44] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[19:43:02] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[19:44:13] *** Joins: Viewday112 (~Viewday@user/viewday)
[19:44:39] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:45:33] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[19:45:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:45:35] *** Viewday112 is now known as Viewday11
[19:47:43] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:48:49] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[19:49:09] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:50:27] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[19:50:55] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:50:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:51:29] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[19:51:59] *** Joins: sbrothy (~sbrothy@192038134184.mbb.telenor.dk)
[19:52:50] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[19:53:31] *** Joins: }8] (~}8]@107.173.83.81)
[19:55:54] *** Joins: powerman2206 (~powerman2@10-201.dsl.iskon.hr)
[19:56:00] <}8]> hi. in bash if i echo "${FUNCNAME[0]}" i will get the name of the function that echo is being executed in. does something similar exist for cpp? i need to add logging to a bunch of functions and hoping theres a copy&paste way to include the different function names
[19:57:51] <bpalmer> }8]: "in the scope of every function body, there is a special function-local predefined variable named __func__, defined as a static character array holding the name of the function in implementation-defined format."
[19:58:03] *** Quits: robert_ (~hellspawn@47.203.169.95) (Read error: Connection reset by peer)
[19:58:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[19:58:15] <bpalmer> gcc also provides the __PRETTY_FUNCTION__ macro
[19:58:36] <}8]> thank you bpalmer
[19:59:04] <}8]> i dont need it to be pretty, just need to know where the hell the logging is :)
[19:59:27] <powerman2206> How do I make all the fields in a string array have the same value? I tried `std::string mat[10][10] = {"text"}`, but only the first field [0][0] takes it on
[19:59:49] <imMute> powerman2206: std::fill ?
[20:01:29] <powerman2206> Yes, thanks
[20:02:20] *** anyone is now known as zz
[20:04:18] <bpalmer> or, less fancy, but a simple for loop
[20:05:56] <bpalmer> (which is what std::fill basically is; being a one-liner can obscure that)
[20:06:56] *** Joins: rendar (~rendar@user/rendar)
[20:09:40] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[20:10:08] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:10:37] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:17:21] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[20:18:32] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000F11692CFE14EEDDA.catv.pool.telekom.hu)
[20:19:03] *** Joins: Betal (~Betal@user/betal)
[20:19:27] *** Joins: gareppa (~gareppa@user/gareppa)
[20:20:13] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[20:24:17] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[20:25:13] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:29:32] *** Quits: powerman2206 (~powerman2@10-201.dsl.iskon.hr) (Quit: WeeChat 3.3)
[20:32:41] *** Quits: sbrothy (~sbrothy@192038134184.mbb.telenor.dk) (Quit: leaving)
[20:33:18] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:38:57] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[20:43:39] *** Joins: Tokamak (~Tokamak@172.58.191.55)
[20:43:50] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 265 seconds)
[20:44:23] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[20:46:59] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:5801:f37:13f0:1699) (Quit: Leaving)
[20:51:54] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:53:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:54:58] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[20:56:14] <Alipha> jellie: sounds like foo is accepting a `const vector<string >&` but bar accepts a `vector<string>&`, so you're trying to pass a const vector to a function that's expecting a (reference to a) non-const vector. Preferably, add const to the bar parameter. But if bar needs to modify the vector, then instead remove const from the foo parameter
[21:00:49] *** Joins: Keikai (~fedalio@45.156.31.141)
[21:02:57] *** Parts: Keikai (~fedalio@45.156.31.141) ()
[21:08:18] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 260 seconds)
[21:10:11] *** Quits: sa02irc_ (~mbax@155-079-043-212.ip-addr.inexio.net) (Quit: Konversation terminated!)
[21:11:01] *** Joins: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141)
[21:15:08] *** Joins: C-Man (~C-Man@static.187.59.243.136.clients.your-server.de)
[21:17:52] *** Joins: sbrothy (~sbrothy@192038134184.mbb.telenor.dk)
[21:19:59] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:20:38] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[21:22:44] *** Quits: troller (~p@2a02:6b8:0:40c:58c5:b9fd:1f3:e871) (Ping timeout: 252 seconds)
[21:25:33] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[21:27:40] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[21:27:53] *** Joins: cursey (~cursey@user/cursey)
[21:31:18] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4c95:39cf:567e:8e81)
[21:39:16] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:23] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:23] *** ChanServ sets mode: +v npaperbot
[21:44:01] *** Joins: Viewday115 (~Viewday@user/viewday)
[21:46:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[21:46:11] *** Viewday115 is now known as Viewday11
[21:48:52] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[21:49:09] *** Quits: DrMax_ (~DrMax@132.215.96.36) (Ping timeout: 250 seconds)
[21:50:06] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:51:48] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[21:53:18] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[22:05:01] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 240 seconds)
[22:13:44] *** Quits: tesuji (~quassel@2a02:908:180:9500:9509:881b:6bdf:4d85) (Ping timeout: 265 seconds)
[22:19:51] *** Joins: troller (~p@80.240.216.69)
[22:26:48] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[22:31:56] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[22:32:14] *** Joins: spithash (~spithash@user/spithash)
[22:35:57] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[22:36:53] *** Quits: rgrinberg (~textual@2806:101e:7:9999:a48b:a8:fbe9:e141) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:56] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:39:10] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[22:40:22] *** Joins: troller (~p@2a02:6b8:b081:8815::1:29)
[22:42:17] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[22:43:00] *** Joins: Hello72 (~Hello71@wireguard/contributor/hello71)
[22:48:54] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[22:49:03] *** Joins: rgrinberg (~textual@187.223.58.12)
[22:53:26] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 256 seconds)
[22:53:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:58:03] *** Quits: rgrinberg (~textual@187.223.58.12) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:02:07] *** Joins: Tuzik (~Tuzik@97.179.189.89.sta.211.ru)
[23:02:14] <Tuzik> Hi
[23:02:39] <Tuzik> I hhave two question
[23:03:35] <Tuzik> 1. How create child class from parent in another namespace?
[23:04:20] <zz> {} class A {}; namespace { class B : A {}; }
[23:04:21] <geordi>  
[23:04:37] <Tuzik> How call parent method from child method if parent in another namespace?
[23:06:03] <Tuzik> How call parent method in child method if parent in another namespace?
[23:06:09] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[23:06:14] <imMute> this->parentMethod();
[23:06:20] <imMute> namespace doesn't matter then.
[23:06:55] <Tuzik> Sorry, English is not my native language
[23:08:50] <Tuzik> Inmute, Are you sure? When I typing this-> codeblocks don't show parent methods
[23:09:04] <imMute> yes, I'm quite sure.
[23:09:40] <Tuzik> When I typing Name::CLASS:: all is OK
[23:09:49] <Alipha> {} namespace bar { class A {}; } namespace foo { class B : bar::A {}; }
[23:09:50] <geordi>  
[23:10:27] <Alipha> Tuzik: it could just be that codeblocks's intellisense is confused. does `this->parentMethod();` compile? if not, what's the error?
[23:10:37] <Alipha> or simply `parentMethod();`
[23:10:57] <imMute>  { NS::B b; b.foo(); } class A { public: void bar() { cout << "here"; };}; namespace NS { class B : A { public: void foo(){ this->bar(); }; }; }
[23:10:58] <geordi> here
[23:13:09] <Tuzik> Alipha, It compiled. But 64 build(tdm-gcc) was crash at startup. Preversion version without nested namespace is OK
[23:13:39] <Alipha> Tuzik: namespaces should have nothing to do with a crash
[23:14:40] <Tuzik> I don't explain reason of crash except namespaces
[23:16:56] <Alipha> Tuzik: oh, hm. maybe ODR violation. that is, one translation unit defines a class with that name. and another translation unit defines a different class with the same name. whereas if you have namespaces, then the names don't collide. seems rather unlikely such a scenario would make it past the compilation and linking stages though, but it's possible.
[23:17:37] <Alipha> i would first confirm that it is in fact the namespaces that's causing it. that is, test it without namespaces and make sure that adding namespaces is the ONLY change
[23:18:25] <Tuzik> I have one main namespace and a few nested namespace
[23:19:45] *** Parts: }8] (~}8]@107.173.83.81) ()
[23:23:16] *** Nnnavd is now known as Nnavd
[23:26:54] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a6600f52d884e9dc54b1b.ipv6.abo.wanadoo.fr)
[23:29:45] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:32:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:32:31] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[23:33:50] *** Quits: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:35:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:35:59] *** Joins: chozorho (~chozorho@2601:146:300:c30::f5f4)
[23:37:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:37:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:39:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:41:00] *** Joins: w\W (~code@2a02:8084:20e2:da80:98c9:dc7f:d8dc:6b9c)
[23:41:10] *** Quits: Tokamak (~Tokamak@172.58.191.55) (Read error: Connection reset by peer)
[23:41:42] <Tuzik> Working version - https://github.com/PopovEvgeniy/eugenegdk/archive/refs/tags/v2.7.zip
[23:42:01] <Tuzik> Crashing version - https://github.com/PopovEvgeniy/eugenegdk/releases/download/v2.7.9/eugenegdk_2.7.9.zip
[23:44:03] *** Joins: Viewday117 (~Viewday@user/viewday)
[23:45:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:45:26] *** Viewday117 is now known as Viewday11
[23:48:18] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[23:52:15] <Alipha> Tuzik: i'm not really sure who you expect will go through 3000 lines of changes. https://github.com/PopovEvgeniy/eugenegdk/compare/v2.7...v2.7.9?diff=split
[23:53:42] <Alipha> though i'm annoyed that github isn't giving the option to "ignore whitespace changes" on that page
[23:54:05] <SuperNintendoSUX> github diff is mediocre
[23:54:41] <SuperNintendoSUX> Tuzik: I can help you, but I charge by hour.
[23:58:22] <Tuzik> Aliphne, changes is simple. Just creating nested namespases and moving classes to it
[23:59:08] *** Joins: Flonk7 (~Flonk@vps-zap441517-1.zap-srv.com)
