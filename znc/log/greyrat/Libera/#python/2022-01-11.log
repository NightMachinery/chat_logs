[00:00:09] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[00:00:13] *** Quits: ajf_ (~ajf_@user/ajf/x-9593112) (Ping timeout: 240 seconds)
[00:00:58] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:01:09] <Sheilong> After I did a pip freeze > requirements _dev.txt it added a lot of packages that do not exist. For instance: command-not-found==0.3;
[00:01:28] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[00:01:36] *** Joins: ajf_ (~ajf_@user/ajf/x-9593112)
[00:01:58] *** Joins: mickey8 (~user@user/mickey)
[00:02:15] <grym> Sheilong: you mixed and matched system and pip provided packages, didn't you
[00:02:22] <grym> https://stackoverflow.com/a/22676267
[00:02:29] *** Joins: linux_dream (~isaac@37.164.107.136)
[00:02:29] <Sheilong> I have a project that runs in a virtual environment. After cloning the project in another machine, I tried to install the requirements. But it failed to find some packages. These packages can't also be found in the bvirtual env trhat I freezed them.
[00:02:49] <grym> $5 says you made that venv with --system-site-packages
[00:02:55] <Sheilong> grym: I activated the virtual environment that I was using and did the freeze thing,.
[00:03:04] <grym> that doesn't answer my question
[00:03:54] <Sheilong> grym: I don't think so. I create it by doing python3 -m venv virtual_env_name.
[00:04:09] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:04:17] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[00:04:41] <grym> Sheilong: hmm.  can you try `apt search command-not-found` and see if any of those things are installed
[00:05:03] <grym> you don't need them for your project, i don't think, but it may have been swept up by pip freeze
[00:05:34] <grym> when i have to retcon a dependency list i do it 'by hand' with (rip)grep for \bimport\b
[00:05:39] <Sheilong> grym: Yes. It is installed. However on the other machine I don't have root access to install it.
[00:05:44] <grym> pip freeze is a bit greedy
[00:05:57] <grym> Sheilong: i bet you don't need to install it there
[00:06:14] <nedbat> Sheilong: what does this print?   python -c "import sys,pathlib; print((pathlib.Path(sys.executable).parent.parent / 'pyvenv.cfg').read_text())"
[00:06:36] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:06:52] <Sheilong> nedbat: ImportError: No module named pathlib
[00:07:05] <grym> Sheilong: in the activated venv you're trying to export
[00:07:06] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[00:07:06] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:07:20] <grym> of the package you're trying to generate a list of dependencies for*
[00:07:21] *** Joins: koalillo (~koalillo@2a0c:5a81:b804:9900:4fa0:e47f:cdd6:c89)
[00:07:30] *** Joins: sgn (~sgn@user/sgn)
[00:07:44] <Sheilong> Sorry guys. I imported in the wrong place. In the virtual env it does returns something
[00:08:13] *** Quits: dre (~dre@2001:8003:c932:c301:50d2:4546:b9eb:e49) (Ping timeout: 240 seconds)
[00:08:16] <Sheilong> https://bpa.st/JKKQ
[00:08:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:08:51] <Evolver> nedbat: Hey I found a faster implementation yet of `is_sorted`: https://iteration-utilities.readthedocs.io/en/latest/generated/all_monotone.html
[00:09:02] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[00:09:06] *** Joins: sgn (~sgn@user/sgn)
[00:09:15] <Sheilong> I also should point that the python version on my main machine is 3.6.9; The other location I am trying to run my project the python version is 3.8.10
[00:09:23] *** Quits: koalillo (~koalillo@2a0c:5a81:b804:9900:4fa0:e47f:cdd6:c89) (Client Quit)
[00:09:34] <grym> that's probably fine
[00:09:45] <nedbat> Evolver: great
[00:09:51] <grym> it'd be dicier the other way
[00:10:08] <Sheilong> "include-system-site-packages" is marked as false
[00:10:26] <grym> that's good news
[00:10:26] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10fe:29e:29d8:5b5e:f41b:9b27) (Read error: Connection reset by peer)
[00:10:52] <Sheilong> But then why freeze included those weird system packages?
[00:11:01] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[00:11:52] <grym> i dunno, it could depend on some subtleties
[00:12:12] <grym> try /the/full/path/to/the/venv/bin/python -m pip freeze and see if it shows up there
[00:12:45] <grym> but as i alluded to earlier, i tend to winnow that list down by selecting only those values and versions from the list that i also see explicitly imported in the project's code
[00:13:08] *** Joins: Bakunin (~maplefing@user/lindis)
[00:13:25] *** Quits: panella32 (~panella32@154.6.16.6) (Ping timeout: 240 seconds)
[00:13:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:14:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:15:39] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:15:47] *** Joins: dreamon (~dreamon@pd9503da5.dip0.t-ipconnect.de)
[00:15:55] *** Joins: mxp (~mxp@185.16.205.131)
[00:17:23] <andyandybobandy> Sheilong, freeze is sloppy in that it does not deal with the reasons that non-top-level packages are installed. You can track much better with pip-tools than pip freeze.
[00:18:04] *** Joins: fizzizist (~fizzizist@72.53.248.15)
[00:18:13] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:18:20] <Sheilong> andyandybobandy: where can I learn to use it?
[00:18:38] *** Joins: sgn (~sgn@user/sgn)
[00:18:51] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:19:04] *** Joins: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d)
[00:19:05] *** Quits: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d) (Changing host)
[00:19:05] *** Joins: corgi (~corgi@user/corgi)
[00:19:45] <Sheilong> grym: Now it is less messed. However on the other system it found another package that don't exist.
[00:20:11] <andyandybobandy> Sheilong, start with the readme https://github.com/jazzband/pip-tools
[00:20:45] *** Quits: greedom (~greedom@p200300de67072100128a8759e4e7dca4.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:21:19] *** Quits: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[00:21:35] *** Quits: fizzizist (~fizzizist@72.53.248.15) (Client Quit)
[00:21:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:21:56] *** Joins: fizzizist (~fizzizist@72.53.248.15)
[00:22:08] *** Joins: greedom (~greedom@p200300de67072100128a8759e4e7dca4.dip0.t-ipconnect.de)
[00:22:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[00:22:57] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[00:23:10] <andyandybobandy> Sheilong, if you're a zsh user and want to try my above-linked frontend as well or instead, I can answer any questions about that
[00:23:46] *** Quits: greedom (~greedom@p200300de67072100128a8759e4e7dca4.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:24:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:24:43] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 268 seconds)
[00:25:42] *** Joins: dre (~dre@2001:8003:c932:c301:2a8:19cc:bc04:bd69)
[00:26:33] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[00:26:43] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[00:26:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:27:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:29:47] <ubert1> found that in my own code 5 years back: filter(None, [None, '', 'not Neon']) how does that even work? (it certainly does seem to!)
[00:29:53] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[00:30:14] *** Joins: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d)
[00:30:14] *** Quits: corgi (~corgi@2620:1b2:c40:3000:23d5:834:546c:ee7d) (Changing host)
[00:30:14] *** Joins: corgi (~corgi@user/corgi)
[00:31:22] <tdsmith> the docs do say "If function is None, the identity function is assumed, that is, all elements of iterable that are false are removed."
[00:31:22] <Pilate> > If function is None, the identity function is assumed, that is, all elements of iterable that are false are removed.
[00:31:25] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[00:31:28] <Pilate> neat
[00:31:43] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:31:44] *** Quits: vassenn (~vassen@178.35.100.90) (Quit: Good bye!)
[00:31:44] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[00:32:07] <tdsmith> i'm surprised to see that on first encounter but i guess i understand the argument
[00:32:33] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[00:32:38] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[00:33:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:33:14] <braxas> hi, is this still relevant in python 3? https://github.com/RDFLib/rdflib/blob/d9575336024d135318ac2e6f7a11592675cb8c2f/rdflib/compat.py#L62-L81
[00:33:21] *** Quits: dre (~dre@2001:8003:c932:c301:2a8:19cc:bc04:bd69) (Ping timeout: 268 seconds)
[00:33:46] <braxas> I think not
[00:33:54] <braxas> but would like a confirmation
[00:34:19] <ChrisWarrick> braxas: not in python 3.3+ iirc
[00:34:43] <braxas> yes: https://docs.python.org/3/c-api/unicode.html
[00:34:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:35:01] <grym> so "not in any py3 that matters" :)(
[00:35:13] <nedbat> tdsmith: i don't think they'd make that API now, since you can do:  filter(bool, ....) instead
[00:35:28] <braxas> grym: yes, well actually I care only about py 3.7+, should have clarified
[00:35:36] <braxas> but good to know when it stopped mattering
[00:35:56] <grym> braxas: agreed
[00:36:40] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Changing host)
[00:36:40] *** Joins: hudo (~hhudo_@user/hudo)
[00:36:40] *** Quits: hudo__ (~hudo@62.68.18.50) (Changing host)
[00:36:40] *** Joins: hudo__ (~hudo@user/hudo)
[00:36:53] *** Joins: georgios (~georgios@user/georgios)
[00:37:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:37:29] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:37:43] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[00:37:45] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 250 seconds)
[00:37:49] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:38:33] <ubert1> tdsmith, Pilate: cool, cheers. tried the trick with False, but 'bool' object is not callable. and neither is None, so got a bit confused.
[00:38:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:39:17] *** Joins: fikran (~fikran@user/fikran)
[00:39:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:40:18] *** Joins: thorbw_ (~tw@46.230.130.50)
[00:40:57] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[00:41:55] *** Joins: gdd (~gdd@129.199.146.230)
[00:41:56] *** Quits: linux_dream (~isaac@37.164.107.136) (Quit: WeeChat 3.4)
[00:42:28] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[00:43:25] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:43:31] *** Joins: seednode99 (~seednode@user/seednode)
[00:43:51] *** Joins: sgn (~sgn@user/sgn)
[00:44:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[00:44:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:44:35] <TML> ubert1: the identity function would be more like "lambda x: x"
[00:44:41] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr) (Quit: Bridge terminating on SIGTERM)
[00:45:40] <ChrisWarrick> sure, but in the context of filter, `bool` would do the same but with less typing
[00:46:01] *** Quits: paulrf (~paulrf@191.186.155.165) (Quit: Leaving)
[00:46:14] <ubert1> yes. got confused by the magic identity of None, not by identity itself
[00:46:59] <ubert1> ChrisWarrick: and better recog for future self
[00:47:13] <ChrisWarrick> aye
[00:47:30] <ChrisWarrick> (how many people in non-functional land know the term “identity function”?)
[00:47:58] *** Quits: inomoz (~inomoz@176.59.115.245) (Read error: Connection reset by peer)
[00:47:59] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:48:03] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[00:48:21] *** Quits: magla (~gelignite@55d483f5.access.ecotel.net) (Quit: Stay safe!)
[00:48:32] *** Joins: Macuser (~Macuser@2600:1003:b44a:6ea5:f50b:3cf7:5220:fec7)
[00:48:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:48:41] <kittonian> bjs, so I got the script to return all the values of the select like I needed, but it's not being properly recognized as a json string to be decoded. https://bpa.st/5RQA
[00:48:57] *** Joins: sgn (~sgn@user/sgn)
[00:48:58] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:49:04] <grym> ChrisWarrick: shows up in linear algebra land a bunch too
[00:49:06] <kittonian> this is an example a json string that swift is looking for https://www.hackingwithswift.com/samples/friendface.json
[00:49:27] <ChrisWarrick> kittonian: what output does it return?
[00:49:52] <kittonian> ChrisWarrick, it returns a seemingly correct string of [{"id": 1, "value": "Male"}, {"id": 2, "value": "Female"}, {"id": 3, "value": "Non-Binary"}]
[00:49:59] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[00:50:05] <ChrisWarrick> kittonian: how does your swift code fail?
[00:50:08] <kittonian> but swift doesn't see it as actual json to be decoded
[00:50:10] *** Joins: anotheruser (~user@197.54.72.145)
[00:50:13] *** Joins: ice9 (~ice9@user/ice9)
[00:50:14] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:50:16] <kittonian> it doesn't fail. it just doesn't show any data
[00:50:42] *** Joins: dre (~dre@2001:8003:c932:c301:c69e:ead4:d381:5280)
[00:50:46] <kittonian> but if I swap out my url with the hackingwithswift url, it works
[00:50:47] <ChrisWarrick> kittonian: check with curl if the output is correct and if it has a reasonable content-type
[00:51:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[00:51:03] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:51:21] <ChrisWarrick> kittonian: does the data structure you output match theirs? (if you use some fancy deserialization library, it might expect the same keys in your json)
[00:51:46] <kittonian> ChrisWarrick, if you could please just look at the url I posted and see if you can define a difference, that's exactly what I've been doing for the last hour
[00:51:56] <phy1729> And the same types; the IDs could be expected to be strings
[00:51:57] <kittonian> it does not expect the same keys
[00:52:04] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[00:52:35] <ChrisWarrick> kittonian: if you use curl, do you see your JSON correctly?
[00:53:16] *** Quits: someuser (~user@197.54.72.145) (Ping timeout: 256 seconds)
[00:53:23] <kittonian> curl shows me the exact same output I posted to you
[00:53:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:54:26] <ChrisWarrick> kittonian: what do you do with the data you get in your iOS app? can you print/show the raw response and its contents and verify it matches your expectations?
[00:54:29] *** Joins: audiobirb (~audio@user/audio)
[00:54:53] <kittonian> ChrisWarrick, if I could I wouldn't have said I don't get any data in my app
[00:55:09] <Sheilong> I mistakenly installed a local package on the python machine instead of the python on the virtual environment. Now I am having some trouble to uninstall it.
[00:55:16] <kittonian> I have another page of the app where it's parsing the json just fine, but it's a single response, not an array
[00:55:24] <TML> kittonian: I mean, just off-hand, I see a TON of differences between https://www.hackingwithswift.com/samples/friendface.json and your string
[00:55:27] *** Quits: fanis30 (~anon@adsl-144.176.58.136.tellas.gr) (Quit: WeeChat 3.3)
[00:55:42] <kittonian> TML, do you? because I don't
[00:55:47] <TML> kittonian: Which ones of them may actually be causing a problem is something that you'd have to divine by looking in the Swift code
[00:55:50] <kittonian> not talking about the amount of data
[00:55:51] *** Joins: Viewday118 (~Viewday@user/viewday)
[00:55:53] <kittonian> just the data structure
[00:55:54] <ChrisWarrick> kittonian: you might want to ask a swift/ios dev channel for assistance
[00:55:58] <kittonian> and it looks the same to me
[00:56:09] <TML> kittonian: Well, for example, their "id" value are strings (seem to be UUIDs) while yours are ints
[00:56:17] <kittonian> TML, doesn't matter
[00:56:24] <kittonian> i just used that as an example of working json
[00:56:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:56:29] *** Joins: Celeo (~Celeo@user/celeo)
[00:56:32] <TML> kittonian: That's my point - there's a ton of differences, we have no idea which ones would matter
[00:56:37] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[00:56:39] *** Joins: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[00:56:47] <kittonian> another example of working json is ["otp": "654567"}
[00:56:54] <kittonian> another example of working json is {"otp": "654567"}
[00:57:05] <kittonian> that something else where it's decoding in my app just fine
[00:57:10] <kittonian> no id necessary
[00:57:11] *** Joins: parv (~quass@user/parv)
[00:57:22] *** Joins: seednode99 (~seednode@user/seednode)
[00:57:40] <TML> kittonian: Do I see differences? Yes. Many of them. Do I have any idea which ones might matter. No clue.
[00:57:45] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[00:57:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:57:49] *** Viewday118 is now known as Viewday11
[00:57:53] <kittonian> TML, there are no structural differences in the code
[00:57:58] <nedbat> kittonian: is your data's URL publicly accessible?
[00:58:03] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:58:11] <kittonian> nedbat, no
[00:58:30] *** Joins: sgn (~sgn@user/sgn)
[00:58:30] <nedbat> kittonian: it could be that swift is seeing differences in the HTTP headers that cause a problem.
[00:58:37] *** Quits: thebros35 (~thebros35@cfcu2-gw.cfcu2.smithvilledigital.net) (Remote host closed the connection)
[00:58:47] <kittonian> again, same exact setup for the other json string which is working fine
[00:58:55] <kittonian> has no difference in the headers
[00:59:10] <nedbat> kittonian: what content-type is your URL serving?
[00:59:12] <ChrisWarrick> kittonian: if curl shows the right stuff, then it’s an issue with your ios code, not python
[00:59:17] <kittonian> in fact, I literally copied the other python script which outputs the single value json string (the otp one) and modified a bit
[01:00:38] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:00:51] *** Joins: guntbert (~yesitsme@user/guntbert)
[01:01:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:01:08] <nedbat> kittonian: i don't think we can help
[01:01:19] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4fef:79d4:11d2:3ba7)
[01:01:33] <kittonian> no worries, i'll get it
[01:02:22] *** Joins: bluedust (~bluedust@117.241.190.221)
[01:03:27] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:03:32] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[01:03:33] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:03:39] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[01:03:49] *** Joins: spithash (~spithash@user/spithash)
[01:04:12] *** Joins: horner (~horner@host86-153-232-48.range86-153.btcentralplus.com)
[01:04:21] *** Joins: seednode99 (~seednode@user/seednode)
[01:04:36] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:04:49] *** Quits: seednode99 (~seednode@user/seednode) (Client Quit)
[01:05:21] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:05:30] <ChrisWarrick> kittonian: did you try asking a swift channel for insights about your ios app?
[01:05:34] *** Joins: Guest143332 (~Guest1433@ppp046177221088.access.hol.gr)
[01:05:40] *** Joins: seednode99 (~seednode@user/seednode)
[01:05:54] <kittonian> no one around, and yes of course
[01:06:11] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 245 seconds)
[01:06:37] *** Quits: bluedust (~bluedust@117.241.190.221) (Ping timeout: 240 seconds)
[01:06:43] *** Joins: horn_r (~horner@frinfra.allied.sh)
[01:07:45] *** Joins: thebros35 (~thebros35@cfcu2-gw.cfcu2.smithvilledigital.net)
[01:08:17] *** Quits: horner (~horner@host86-153-232-48.range86-153.btcentralplus.com) (Ping timeout: 240 seconds)
[01:09:34] *** Joins: snalty (~Shhh@user/snalty)
[01:09:51] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[01:10:16] <stewie925> hey guys , do you guys agree that @staticmethods are pretty much like any regular function -  and what I notice is that these staticmethods generally return a boolean
[01:10:25] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[01:10:35] <grym> stewie925: they're something of an architectural misstep, too
[01:11:05] <grym> staticmethods can return anything they want, though
[01:11:21] <grym> i don't think i've noticed a preference for bools, but i also haven't really been looking
[01:11:22] <SnoopJ> stewie925, they are basically regular functions, yes.
[01:11:24] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:11:44] <stewie925> oh thank you grym
[01:11:57] *** Quits: thebros35 (~thebros35@cfcu2-gw.cfcu2.smithvilledigital.net) (Ping timeout: 240 seconds)
[01:11:57] <stewie925> and thank you SnoopJ
[01:12:46] *** Joins: frmlof (~frmlof@70.243.238.191)
[01:12:57] <grym> i have found that for the most part, staticfunctions can become either normal functions in a module or classmethods that return (usually) an instance of the class, and usually that refactor is sensible
[01:13:21] <stewie925> yes! grym - "normal functions"
[01:13:45] <grym> ie instead of mymodule.MyClass.callable i want either mymodule.callable or my_new_myclass = MyClass.factorycallable
[01:15:33] <stewie925> gotta dig the internet to get some more real-world examples than the basic ones :D
[01:15:34] *** Joins: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com)
[01:15:39] <stewie925> I mean I gotta find them
[01:15:46] *** Quits: Guest143332 (~Guest1433@ppp046177221088.access.hol.gr) (Quit: Guest143332)
[01:16:34] *** Joins: sgn_ (~sgn@user/sgn)
[01:16:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:16:58] *** Joins: whistl034 (~whistl034@172-125-148-108.lightspeed.tukrga.sbcglobal.net)
[01:17:15] *** Parts: whistl034 (~whistl034@172-125-148-108.lightspeed.tukrga.sbcglobal.net) ()
[01:17:25] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:17:44] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:17:51] *** Joins: sgn (~sgn@user/sgn)
[01:17:59] *** Joins: moto (~moto@user/moto)
[01:18:52] <jello> hello, is there a way to get a python REPL from within the python debugger Pdb?
[01:19:51] <jello> basically, I have a ~200 line python script and I want to poke around using the REPL at a particular spot
[01:19:54] <matsaman> jello: 'interact'
[01:19:54] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:6bac:b5f2:b395:c3bf) (Quit: pvergain)
[01:20:08] <matsaman> via 'breakpoint()'
[01:20:11] <grym> jello: drop a breakpoint()
[01:20:19] <grym> and then use your debugger of choice :)
[01:20:19] <jello> yup, got the breakpoint() part
[01:20:28] <matsaman> jello: then 'interact'
[01:20:30] <jello> python3 -m pdb myscript.py
[01:20:39] <jello> matsaman: perfect!
[01:20:50] <matsaman> I like it myself
[01:21:00] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:21:19] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:21:30] <jello> knew there had to be a way to do it... thanks again matsaman!
[01:21:38] * jello goes off to debug stuff...
[01:21:45] *** Parts: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com) ()
[01:21:47] <matsaman> https://docs.python.org/3/library/pdb.html#pdbcommand-interact
[01:22:42] *** Joins: Klinda (~superleag@user/klinda)
[01:23:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:23:17] *** Quits: esther (~esther@199.10.64.228) (Ping timeout: 240 seconds)
[01:23:30] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[01:23:31] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[01:23:57] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:68fe:65aa:6307:6b77) (Ping timeout: 240 seconds)
[01:24:06] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[01:26:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:26:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:26:36] *** Joins: sgn (~sgn@user/sgn)
[01:27:35] *** Parts: Tha_14 (~Tha_14@user/tha-14/x-4134127) ()
[01:28:11] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:28:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:28:35] *** Joins: sgn (~sgn@user/sgn)
[01:29:52] <kittonian> solved it. all my code was fine. apparently you have to call to it from a list rather than a section inside a list. now it all works
[01:29:57] <kittonian> thanks for trying
[01:29:59] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:30:17] *** Quits: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Quit: Leaving)
[01:30:41] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:31:13] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:31:28] *** Joins: sgn (~sgn@user/sgn)
[01:31:55] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[01:32:21] *** Joins: walterwhip (~www@user/walterwhip)
[01:35:03] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[01:35:27] *** Joins: jefman117 (~jefman117@cpe-104-32-186-234.socal.res.rr.com)
[01:35:52] *** Parts: jefman117 (~jefman117@cpe-104-32-186-234.socal.res.rr.com) ()
[01:36:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:37:10] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4fef:79d4:11d2:3ba7) (Quit: Leaving)
[01:37:53] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:38:01] *** Quits: hudo__ (~hudo@user/hudo) (Quit: Leaving)
[01:38:18] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Remote host closed the connection)
[01:38:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:39:06] *** Parts: r3m (~launch@user/r3m) (WeeChat 3.5-dev)
[01:39:10] *** Quits: techsurvivor (~don@89.45.90.193) (Ping timeout: 256 seconds)
[01:39:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:39:25] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:39:40] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:40:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:40:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[01:40:43] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[01:41:10] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[01:41:11] *** Joins: techsurvivor (~don@94.198.42.171)
[01:41:18] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[01:41:53] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487wf5hy4b7w8ac.ipv6.telus.net) (Ping timeout: 252 seconds)
[01:42:11] *** Joins: clownjeff (~jefman117@cpe-104-32-186-234.socal.res.rr.com)
[01:42:15] *** Joins: Guest93 (~Guest93@pool-173-79-232-201.washdc.fios.verizon.net)
[01:43:03] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[01:44:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[01:45:55] *** Joins: Fiji_ (~Fiji@user/fiji)
[01:45:58] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:48:00] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:48:17] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[01:49:22] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[01:50:13] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 240 seconds)
[01:50:52] *** Quits: Guest93 (~Guest93@pool-173-79-232-201.washdc.fios.verizon.net) (Quit: Client closed)
[01:51:19] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[01:53:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:53:36] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-446-207.w86-206.abo.wanadoo.fr)
[01:53:40] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:53:44] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-446-207.w86-206.abo.wanadoo.fr) (Client Quit)
[01:53:57] *** Joins: sgn (~sgn@user/sgn)
[01:54:10] *** Quits: andyandybobandy (~AndyAndyB@89.36.78.169) (Quit: Leaving)
[01:55:04] *** Quits: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28) (Quit: Konversation terminated!)
[01:55:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:55:39] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[01:55:40] *** Joins: agonhajdari (~textual@user/agonhajdari)
[01:56:10] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:57:18] *** Joins: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com)
[01:58:52] *** Joins: Atque (~Atque@user/atque)
[01:59:06] *** Quits: Macuser (~Macuser@2600:1003:b44a:6ea5:f50b:3cf7:5220:fec7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:00:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[02:00:28] *** Joins: runciter (~runciter@user/runciter)
[02:00:33] *** Quits: clownjeff (~jefman117@cpe-104-32-186-234.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:00:47] <jello> hello, if I have a list of strings `l=['foo','bar','baz']` and I want to change the list so that 'bar' is replaced by 'nonce', what's the best way to do that? Assuming the strings in the list are unique?
[02:01:54] <jello> in other words, is there a way to find & replace elements of a list easily?
[02:02:03] <runciter> l[l.index('bar')] = 'nonce'
[02:02:20] <runciter> note that .index throws a ValueError if the argument is not in the list
[02:02:36] <jello> runciter: thanks!
[02:02:37] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[02:03:40] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[02:04:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:04:09] *** Joins: earendel (uid498179@user/earendel)
[02:04:17] *** Joins: summersault (~summersau@179.221.251.36)
[02:04:35] *** Quits: horn_r (~horner@frinfra.allied.sh) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:04:57] *** Joins: withered_dragon (~withered_@185.203.219.159)
[02:05:18] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[02:06:23] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[02:06:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:06:49] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:07:15] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[02:07:32] *** Joins: walterwhip (~www@user/walterwhip)
[02:08:24] <rama> https://bpa.st/5WGA Is there an easy way to remove the double `isinstance` inspection on line 9? :thinking
[02:08:44] *** Joins: Guest138 (~Guest138@88.103.7.38)
[02:08:48] *** Parts: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com) ()
[02:09:16] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:10:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:10:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:10:47] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:10:50] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[02:11:18] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:12:05] <nedbat> rama: you could do:  if isinstance(field_type, Nested): field_type = field_type.to_dict();; if isinstance(field_type, dict): yield {...}
[02:12:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[02:12:18] <nedbat> rama: you'd still have two isinstance's, but you only mention one type in each
[02:12:27] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[02:12:35] *** Joins: esther (~esther@2607:fb90:5fe3:1501:e099:74c:8c25:b362)
[02:12:41] <rama> nedbat: its crazy how sometimes people can comeup with the same solution at the same time
[02:12:51] <rama> thanks i appreciate you
[02:13:10] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 256 seconds)
[02:13:35] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:13:52] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[02:13:57] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:14:58] *** Quits: ubert1 (~Thunderbi@p200300ecdf0994f8385203c98e392e3c.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:08] *** Joins: summersault (~summersau@179.221.251.36)
[02:15:17] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:15:45] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:13] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[02:18:06] *** Joins: walterwhip (~www@user/walterwhip)
[02:18:13] *** Joins: bloody (~bloody@user/bloody)
[02:18:43] *** Joins: Warped (~Warped@user/warped)
[02:18:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[02:19:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:19:49] *** Joins: sgn (~sgn@user/sgn)
[02:20:07] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:20:23] *** Quits: withered_dragon (~withered_@185.203.219.159) (Ping timeout: 256 seconds)
[02:20:37] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[02:21:11] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[02:21:23] *** Joins: Naan (~naan@user/naan)
[02:21:45] *** Joins: clownjeff (~jefman117@cpe-104-32-186-234.socal.res.rr.com)
[02:22:16] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:23:05] *** Quits: sliwkr_ (1aac56ad72@2604:bf00:561:2000::251) (Remote host closed the connection)
[02:23:13] *** Joins: sliwkr (1aac56ad72@2604:bf00:561:2000::251)
[02:23:48] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:23:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:26:24] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:26:56] *** Joins: walterwhip (~www@user/walterwhip)
[02:27:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[02:28:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:30:08] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:30:18] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:31:06] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[02:31:25] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[02:31:25] *** Joins: ede (~ede@user/ede)
[02:32:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:33:44] *** Joins: wombawomba (~andre@83.172.124.234)
[02:34:06] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[02:34:51] *** ChanServ sets mode: +o The-Compiler
[02:35:02] *** The-Compiler sets mode: -q $~a
[02:35:07] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 256 seconds)
[02:35:50] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[02:37:19] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[02:37:42] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[02:38:41] *** Joins: summersault (~summersau@179.221.251.36)
[02:39:09] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Ping timeout: 268 seconds)
[02:39:40] *** Joins: The-Tester (~The-Teste@2a02:200:2e01:3ac0:e2e8:2ef3:8ef8:a1b2)
[02:39:44] <The-Tester> test
[02:39:52] <The-Compiler> yay
[02:39:52] <nedbat> The-Tester: welcome :)
[02:40:02] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:40:07] *** The-Compiler sets mode: -o The-Compiler
[02:40:14] <nedbat> (unless that was The-Compiler, in which case, thanks for testing)
[02:40:20] <The-Compiler> that was me indeed
[02:40:36] <dre> It could have been the Tester, in which, thanks for compiling
[02:40:46] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:40:56] *** Quits: The-Tester (~The-Teste@2a02:200:2e01:3ac0:e2e8:2ef3:8ef8:a1b2) (Client Quit)
[02:41:19] <The-Compiler> so unregistered users can now talk in here, let's see how that works out
[02:41:22] *** Quits: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:94ab:c024:3510:5b58) (Remote host closed the connection)
[02:41:29] <clownjeff> hi
[02:42:17] *** Quits: esther (~esther@2607:fb90:5fe3:1501:e099:74c:8c25:b362) (Ping timeout: 240 seconds)
[02:42:37] *** Joins: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:94ab:c024:3510:5b58)
[02:42:39] *** Quits: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:94ab:c024:3510:5b58) (Remote host closed the connection)
[02:42:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:42:51] *** Joins: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:94ab:c024:3510:5b58)
[02:43:07] <rama> woah unregistered users?!
[02:43:13] <rama> >:(
[02:43:21] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:43:30] <rama> jk <:) welcome all
[02:43:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:44:04] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:44:04] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[02:44:37] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[02:44:38] *** Quits: PurpleBooger (~purpleboo@2600:6c5d:4600:1e76:94ab:c024:3510:5b58) (Client Quit)
[02:44:46] *** Joins: summersault (~summersau@179.221.251.36)
[02:44:56] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[02:45:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:45:19] *** Quits: clownjeff (~jefman117@cpe-104-32-186-234.socal.res.rr.com) (Quit: leaving)
[02:45:19] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[02:45:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:27] *** Joins: sgn (~sgn@user/sgn)
[02:46:27] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 256 seconds)
[02:46:48] *** Joins: infernix (~nix@spirit.infernix.net)
[02:46:56] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:47:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:47:29] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[02:48:38] *** Joins: fikran (~fikran@user/fikran)
[02:48:43] *** Quits: dreamon (~dreamon@pd9503da5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:48:52] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[02:50:02] *** Joins: runelind (~runelind@user/runelind)
[02:50:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[02:51:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:51:11] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[02:51:28] *** Joins: Guest55 (~textual@2601:84:4501:18a0:5fe:cd78:a326:7cd0)
[02:52:00] *** Quits: Guest55 (~textual@2601:84:4501:18a0:5fe:cd78:a326:7cd0) (Read error: Connection reset by peer)
[02:52:06] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:52:19] *** Joins: runciter (~runciter@user/runciter)
[02:52:25] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[02:52:53] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:53:13] *** Joins: bloody (~bloody@user/bloody)
[02:53:27] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[02:53:29] <bilb_ono> does anyone know of a service taht returns api results for you? I have code that loops through paginated results and I want to see if its working
[02:53:38] <bilb_ono> like with skip and limit for instance
[02:53:55] <bilb_ono> like apitestresults.com or some empty server I can request to
[02:54:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:54:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[02:54:45] *** Joins: orzel (~orzel@2a01:e0a:df:6ba0:2ef0:5dff:fed8:622d)
[02:54:59] <The-Compiler> bilb_ono: https://reqres.in/
[02:55:33] *** Joins: summersault (~summersau@179.221.251.36)
[02:55:43] <orzel> Hello. There was a site comparing different (python) packages. I was using it a lot, but now i can't find it anymore. Does it ring a bell ?
[02:56:10] <orzel> With matrices for features, git activity, # of clones, last release, and so on.
[02:56:21] <dre> django packages
[02:56:53] <orzel> ah, https://djangopackages.org/
[02:57:01] <orzel> dre: that's it ! thanks a lot
[02:57:23] <orzel> I didn't remember it was django only, but that's probably it
[02:57:40] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[02:57:56] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[02:58:08] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[02:59:05] *** Joins: Guest55 (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[02:59:35] *** hays is now known as h_
[02:59:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:59:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:00:57] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:01:09] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:01:19] *** Joins: cheater (~Username@user/cheater)
[03:01:51] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48ac0cwgctp8438.ipv6.telus.net)
[03:02:35] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[03:02:47] <bilb_ono> The-Compiler: thanks
[03:02:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[03:02:47] *** Joins: walterwhip (~www@user/walterwhip)
[03:02:48] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[03:03:13] *** Joins: bloody (~bloody@user/bloody)
[03:03:21] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:03:23] *** Quits: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[03:04:03] *** Joins: faLUKE (~paolo@host-87-1-178-175.retail.telecomitalia.it)
[03:04:10] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[03:05:46] <faLUKE> hey:   myStr = "hello world" <--- how can I cut chars 2 to 6 and replace them with "xxx" ?
[03:06:00] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:ff6c:f852:4f52:5e7c) (Quit: Konversation terminated!)
[03:06:17] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[03:06:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:06:51] <faLUKE> (I wonder if is there an all-in-one function for this)
[03:07:47] <nedbat> faLUKE: s = myStr[:2] + "xxx" + myStr[6:]
[03:07:50] <dre> faLUKE, myStr = myStr[:2] + "xxx" + mystr[6:]
[03:07:53] <dre> damn
[03:07:56] *** Joins: zeden (~zeden@user/zeden)
[03:08:15] <nedbat> who's to say who was first in a distributed system :)
[03:08:20] <Yhg1s> faLUKE: def cut(s, x, y, repl='xxx'): return s[:x] + repl + s[y:]
[03:08:25] <grym> oh, some general
[03:08:28] <dre> :P
[03:08:29] <grym> but his messages keep getting lost
[03:08:34] *** Joins: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net)
[03:08:36] <faLUKE> thanks!!
[03:08:37] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 240 seconds)
[03:11:04] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:11:41] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[03:12:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c9d6:e0ae:cf61:ed6c) (Quit: Client closed)
[03:12:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c9d6:e0ae:cf61:ed6c)
[03:12:51] *** Quits: brookesy66 (~will@118.208.120.76) (Quit: WeeChat 3.4)
[03:13:14] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[03:13:37] *** Quits: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net) (Ping timeout: 240 seconds)
[03:15:05] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Quit: Leaving)
[03:15:05] *** Joins: dez (uid92154@user/dez)
[03:15:35] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[03:16:32] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:16:43] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Client Quit)
[03:16:55] *** Joins: sgn (~sgn@user/sgn)
[03:17:00] *** Joins: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net)
[03:17:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:17:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:17:35] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[03:20:10] *** Quits: runciter (~runciter@user/runciter) (Quit: Leaving)
[03:20:25] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:20:37] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[03:21:48] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:22:10] *** Joins: sgn (~sgn@user/sgn)
[03:23:28] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[03:24:58] *** Joins: Guest91 (~Guest91@ppp046177221088.access.hol.gr)
[03:28:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-10f3-8e8c-5022-288a.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:28:24] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[03:29:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:29:34] *** Joins: summersault (~summersau@179.221.251.36)
[03:29:43] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[03:30:10] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[03:32:10] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-10f3-8e8c-5022-288a.res6.spectrum.com)
[03:32:40] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:32:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[03:34:03] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[03:34:17] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 240 seconds)
[03:34:38] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 252 seconds)
[03:35:10] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[03:35:26] *** Quits: Guest91 (~Guest91@ppp046177221088.access.hol.gr) (Quit: Client closed)
[03:36:03] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:37:12] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[03:37:21] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[03:37:37] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 240 seconds)
[03:37:37] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Max SendQ exceeded)
[03:37:51] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Client Quit)
[03:38:35] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[03:38:58] *** Joins: Terexen (~terexen@user/terexen)
[03:39:37] *** Joins: jpic (~jpic@82.142.9.130)
[03:40:13] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:40:13] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:41] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:41:25] *** Quits: techsurvivor (~don@94.198.42.171) (Ping timeout: 256 seconds)
[03:42:19] <h_> anyone tried to build 2.7.18 on apple m1? heh
[03:42:38] <h_> configure: error: Unexpected output of 'arch' on OSX
[03:42:56] <dre> 2.7 is deprecated
[03:43:02] <dre> never touch it again
[03:43:11] <SnoopJ> dre, presumably they are doing so because they don't really have a choice in the matter.
[03:43:15] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[03:43:31] *** Joins: techsurvivor (~don@cpe-70-114-183-69.austin.res.rr.com)
[03:43:36] <dre> when you assume you make an ASS out of U and ME
[03:43:36] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Max SendQ exceeded)
[03:43:52] <SnoopJ> All the more reason not to assume "don't do that" is an acceptable answer to this question
[03:43:53] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:43:54] <dre> i don't know what the difference is between "presume" and "assume" lol
[03:44:09] *** Joins: ano (~ano@user/ano)
[03:44:10] <grym> h_: you'll probably have to make some changes to the build scripts
[03:44:56] <koopman> Anyone know how I can add a check with this code so I check not just surname but first name as well? Https://bpa.st/XLWA at the moment it’s just merging on surname
[03:45:26] *** Quits: ano (~ano@user/ano) (Client Quit)
[03:45:42] <h_> yeah.. 2 to 3 has been so slowwwww
[03:46:23] *** Joins: ano (~ano@user/ano)
[03:46:26] <SnoopJ> h_, I think the changes you'll need to make will be in some of these PRs: https://bugs.python.org/issue41100
[03:46:30] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:46:42] <h_> thanks snoopj
[03:47:02] *** Joins: ano (~ano@user/ano)
[03:47:03] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:47:13] <koopman> My second attempt: https://bpa.st/VDVA but it’s not merging the data.
[03:47:25] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:47:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[03:50:08] *** Joins: doko_ (~doko@2a02:8106:1a:7600:2390:f8e7:6562:4c11)
[03:50:43] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:51:00] *** Joins: summersault (~summersau@179.221.251.36)
[03:51:08] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[03:51:18] *** Quits: doko (~doko@2a02:8106:1a:7600:3fc2:e870:ba05:a960) (Ping timeout: 268 seconds)
[03:51:25] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: Buh-bye)
[03:51:43] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:51:59] *** Joins: mickey8 (~user@user/mickey)
[03:52:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[03:52:32] *** Quits: emerent (~quassel@p200300cd5724fde6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:54:01] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[03:54:01] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[03:54:01] *** Joins: corgi (~corgi@user/corgi)
[03:55:44] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:55:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c9d6:e0ae:cf61:ed6c) (Quit: Client closed)
[03:56:17] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[03:56:22] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:56:31] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Max SendQ exceeded)
[03:56:43] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[03:56:49] *** Joins: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net)
[03:57:09] *** Quits: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net) (Remote host closed the connection)
[03:57:18] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[03:57:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:58:04] *** Joins: Bakunin (~murthy@user/lindis)
[03:58:05] *** Joins: sgn (~sgn@user/sgn)
[03:58:11] *** Joins: walterwhip (~www@user/walterwhip)
[03:58:51] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:58:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:59:11] *** Joins: sgn (~sgn@user/sgn)
[03:59:52] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[04:00:18] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48ac0cwgctp8438.ipv6.telus.net) (Quit: Leaving)
[04:00:36] *** Joins: Wulf (~Wulf@user/wulf)
[04:01:14] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[04:01:51] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:02:04] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[04:02:38] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:35fa:dcbe:dd4e:5a43)
[04:02:42] *** Joins: Betal (~Betal@user/betal)
[04:02:49] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Remote host closed the connection)
[04:02:59] *** Joins: ano (~ano@user/ano)
[04:03:01] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[04:03:21] <TML> koopman: https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/ comes to mind
[04:03:31] *** Quits: corgi (~corgi@user/corgi) (Ping timeout: 256 seconds)
[04:03:45] <TML> Doesn't answer your question, but :smile:
[04:03:51] <parv> A classic standard.
[04:05:11] *** Joins: emerent (~quassel@p200300cd57025366ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:05:42] <TML> koopman: I've never used pandas, and never even HEARD of fuzzywuzzy, so I'm not sure how much help I can be, but I'm pip installing those now to try - can you provide some same datasets?
[04:07:23] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:07:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:07:56] <SnoopJ> fuzzywuzzy is very handy for string-matching, mostly on the basis of Levenshtein distance
[04:08:31] <TML> ah - that's helpful, I know the Levenshtein algorithm
[04:09:34] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[04:09:49] *** Quits: emerent (~quassel@p200300cd57025366ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:10:07] *** Joins: jazzy (~jaziz@user/jaziz)
[04:10:17] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:10:27] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:10:50] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:11:01] *** Quits: grimvar (~grimvar@i5C75F6FE.versanet.de) (Ping timeout: 240 seconds)
[04:11:02] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[04:11:37] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[04:12:18] *** Ashubrry is now known as nicskerv
[04:12:19] *** Quits: nicskerv (~Ashubrry@184.69.89.188) (Remote host closed the connection)
[04:13:06] *** Joins: grimvar (~grimvar@i5C75FE33.versanet.de)
[04:13:53] *** Joins: emerent (~quassel@p5b265a25.dip0.t-ipconnect.de)
[04:14:05] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:14:25] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[04:14:50] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:14:51] *** Quits: Xano (~Xano@host86-151-110-89.range86-151.btcentralplus.com) (Ping timeout: 256 seconds)
[04:15:59] *** Quits: justm33_ (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 256 seconds)
[04:16:00] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[04:16:48] <koopman> I got it working I think @TML
[04:16:52] <koopman> Thank you tho
[04:16:52] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:17:00] <TML> +1
[04:17:13] *** Joins: sgn (~sgn@user/sgn)
[04:18:49] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[04:19:20] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:21:01] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[04:21:21] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[04:22:07] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[04:22:36] *** Joins: justm33_ (~Username@82-171-85-246.fixed.kpn.net)
[04:23:04] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[04:24:35] *** Joins: walterwhip (~www@user/walterwhip)
[04:24:54] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[04:25:29] *** Guest55 is now known as gg
[04:26:08] *** Joins: frost (~frost@user/frost)
[04:28:18] *** Quits: marcello42 (~mp@2001:1a81:132d:e100:15d5:e4d8:bd65:5509) (Ping timeout: 268 seconds)
[04:28:29] *** Joins: Monk9413 (~Monk9413@2409:4073:4e07:61de:cdfe:d7db:e483:8765)
[04:28:33] *** Joins: delvian (~delvian@41.13.228.140)
[04:28:49] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[04:29:32] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Read error: Connection reset by peer)
[04:29:36] <oneforall2> teisted compiles but how do I get pip check to except that and not complain its required ?
[04:29:46] *** Joins: marcello42 (~mp@2001:1a81:1345:5c00:cd6:90d6:47fd:9bae)
[04:30:10] *** Quits: Monk9413 (~Monk9413@2409:4073:4e07:61de:cdfe:d7db:e483:8765) (Remote host closed the connection)
[04:30:34] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Remote host closed the connection)
[04:30:42] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:30:57] *** Joins: sgn (~sgn@user/sgn)
[04:31:08] <nedbat> oneforall2: do you mean twisted? What is complaining its required?
[04:31:31] *** Joins: cdown (~cdown@188.214.11.14)
[04:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:32:40] *** Joins: summersault (~summersau@179.221.251.36)
[04:33:49] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 240 seconds)
[04:34:41] *** Joins: Monk94 (~Monk94@2409:4073:4e07:61de:cdfe:d7db:e483:8765)
[04:35:22] *** Joins: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net)
[04:36:04] *** Quits: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net) (Quit: Leaving)
[04:37:05] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[04:38:22] *** Joins: r3m (~launch@user/r3m)
[04:38:57] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:39:12] *** Joins: sgn (~sgn@user/sgn)
[04:40:07] <oneforall2> yeah twisted   and I forgot to say requires typing-extensions
[04:40:19] *** Quits: gg (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:40:29] <oneforall2> so pip check says
[04:41:29] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[04:41:47] <nedbat> oneforall2: sorry, i'm not familiar with pip check.  can you pastebin what you are seeing?
[04:42:15] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[04:42:57] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[04:43:21] <oneforall2> pip check
[04:43:21] <oneforall2> twisted 21.7.0 requires typing-extensions, which is not installed.
[04:43:50] *** Joins: walterwhip (~www@user/walterwhip)
[04:43:53] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:43:54] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:44:22] *** Quits: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net) (Remote host closed the connection)
[04:44:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[04:44:57] *** Joins: cliluw (~cliluw@47.147.73.223)
[04:45:54] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Remote host closed the connection)
[04:46:10] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[04:46:23] <oneforall2> make cmake etc usually a required and compile would fail :) if it couldn't be --disabled at compile time ..
[04:46:38] <nedbat> oneforall2: i tried installing twisted.  it did install typing-extensions.  why don't you have it installed?
[04:47:22] <oneforall2> because I compiled without it ..
[04:47:39] <nedbat> oneforall2: i don't know what you mean by compiled?
[04:48:15] <oneforall2> src and compiled packaged
[04:48:26] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:48:35] <nedbat> oneforall2: maybe you could tell the complete story all at once?
[04:49:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:49:11] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[04:49:56] *** Quits: matari (~matari@2603-8000-e240-2bc2-504c-e2e5-31d0-f3cf.res6.spectrum.com) (Read error: Connection reset by peer)
[04:50:03] *** Quits: JanC (~janc@user/janc) (Quit: 'k zien d'r mee weh zi)
[04:50:10] *** Joins: JanC (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a)
[04:50:34] *** JanC is now known as Guest4834
[04:51:08] *** Quits: Guest4834 (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a) (Remote host closed the connection)
[04:51:22] *** Joins: Guest4834 (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a)
[04:52:41] *** Joins: JanC_ (~janc@user/janc)
[04:52:41] *** Quits: thorbw_ (~tw@46.230.130.50) (Read error: Connection reset by peer)
[04:52:49] *** Quits: Guest138 (~Guest138@88.103.7.38) (Ping timeout: 256 seconds)
[04:52:50] *** Quits: JanC_ (~janc@user/janc) (Remote host closed the connection)
[04:52:50] *** Quits: Guest4834 (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a) (Read error: Connection reset by peer)
[04:53:13] *** Joins: JanC (~janc@user/janc)
[04:53:13] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Read error: Connection reset by peer)
[04:53:29] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[04:54:14] *** Joins: thorbw_ (~tw@46.230.130.50)
[04:55:05] <parv> Seems to me that oneforall2 had installed "twisted" from source, without support for "typing-extensions" (might have forced; don't know the mechanics). Now missing dependency of "typing-extensions" is mentioned in output of "pip check" (to check for dependencies).
[04:55:20] *** Quits: knstn (~knstn@ppp-94-66-57-241.home.otenet.gr) (Quit: leaving)
[04:55:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:56:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:56:23] <parv> If that is true, then oneforall2 should ignore that particular message from "pip check"
[04:56:37] *** Joins: sgn (~sgn@user/sgn)
[04:56:40] *** Quits: zensei1 (~zensei@user/zensei) (Ping timeout: 268 seconds)
[04:57:13] *** Joins: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net)
[04:57:23] *** Quits: thebros35 (~thebros35@c-68-45-154-224.hsd1.in.comcast.net) (Remote host closed the connection)
[04:58:00] *** Joins: fikran (~fikran@user/fikran)
[04:58:44] *** Joins: Ashubrry (~Ashubrry@184.69.89.188)
[04:59:01] *** Quits: yte3 (~0@151.31.174.113) (Ping timeout: 240 seconds)
[05:00:56] *** Joins: Ashburry (~Ashubrry@184.69.89.188)
[05:01:13] *** Quits: Ashubrry (~Ashubrry@184.69.89.188) (Remote host closed the connection)
[05:01:13] *** Quits: Ashburry (~Ashubrry@184.69.89.188) (Read error: Connection reset by peer)
[05:01:21] *** Quits: Monk94 (~Monk94@2409:4073:4e07:61de:cdfe:d7db:e483:8765) (Quit: Quit)
[05:01:30] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[05:02:02] <nedbat> installing "from source" would still need the package's dependencies. if twisted declares typing-extensions as a dependency (as it seems to, either directly or transitively), then it should be installed.
[05:03:18] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[05:04:15] *** Joins: bluedust (~bluedust@117.241.190.221)
[05:04:37] *** Quits: pi___ (~pi@109.76.26.227) (Ping timeout: 240 seconds)
[05:05:09] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:05:17] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[05:05:17] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:35fa:dcbe:dd4e:5a43) (Ping timeout: 240 seconds)
[05:05:43] *** Joins: walterwhip (~www@user/walterwhip)
[05:06:12] <oneforall2> as said twisted compiles with out the typing-extensions . if it was a hard dep then building should have failed. is python apps not like others (make cmake etc) when ab app compiled and the extar deatures aren't wanted, then they build without that feature ..
[05:06:37] <oneforall2> ab/an
[05:06:56] *** Joins: pi___ (~pi@51.37.244.66)
[05:07:11] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[05:07:14] *** Joins: Macuser (~Macuser@2600:1003:b457:2f6e:894b:30a0:533e:d4ac)
[05:07:25] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[05:07:32] *** Quits: Macuser (~Macuser@2600:1003:b457:2f6e:894b:30a0:533e:d4ac) (Client Quit)
[05:08:06] <dba> how does int() validate the parameter supplied if it is integer or string? I tried looking at int() code but It got me to __int__() which has only pass
[05:08:17] *** Quits: bluedust (~bluedust@117.241.190.221) (Ping timeout: 240 seconds)
[05:08:29] <nedbat> oneforall2: i'm sorry, but i don;t know what you mean by "compiles"?  Can you clarify? What exactly does that mean?
[05:09:25] <nedbat> dba: are you looking for the C code that does the work?
[05:10:02] <dba> nedbat: yes please if that the C code that does that
[05:10:34] <grym> oneforall2: how did you 'compile' twisted
[05:10:36] *** Joins: nomic2 (~nomic@85.203.36.80)
[05:11:29] <KirkMcDonald> dba: https://github.com/python/cpython/blob/main/Objects/longobject.c#L2195
[05:12:05] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[05:12:11] <grym> oneforall2: https://bpa.st/TYDA  here's how i did it, and typing-extensions is properly installed as a dependency
[05:12:24] <dba> KirkMcDonald: Just to confirm all built in function that comes with python are built in C in case I want to reverse engineer them
[05:13:01] *** Quits: nomic (~nomic@185.192.69.25) (Ping timeout: 240 seconds)
[05:13:08] *** Joins: |0day-xc-Our| (~FBI@125.162.75.120)
[05:13:12] <nedbat> dba: all of python is implemented in either C or Python
[05:13:16] <grym> dba: you can just read the source; no reverse engineering required
[05:13:22] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Ping timeout: 256 seconds)
[05:13:29] *** Joins: Wythom (~Wythom@184.170.72.201)
[05:14:09] <TML> maybe dba is doing a clean-room implementation and _can't_ read the source ;)
[05:14:21] *** Quits: |0day-xc-Our| (~FBI@125.162.75.120) (Client Quit)
[05:14:38] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[05:14:38] *** Quits: seednode99 (~seednode@user/seednode) (Read error: Connection reset by peer)
[05:14:58] <grym> dba[eaz]
[05:15:13] <grym> (that was a fun pycon talk)
[05:15:21] *** Joins: skraito (~skraito@user/skraito)
[05:15:35] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[05:16:56] *** Joins: walterwhip (~www@user/walterwhip)
[05:16:57] *** Joins: seednode99 (~seednode@user/seednode)
[05:17:23] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[05:17:26] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:17:54] *** Parts: tris (emptystrin@irc1.lessbroken.org) (WeeChat 3.0)
[05:20:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:20:45] *** Joins: sgn (~sgn@user/sgn)
[05:21:03] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[05:23:13] *** Joins: Celeo (~Celeo@user/celeo)
[05:23:44] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[05:24:33] *** Joins: summersault (~summersau@179.221.251.36)
[05:27:02] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:29:21] *** Joins: frost (~frost@user/frost)
[05:30:00] *** Joins: walterwhip (~www@user/walterwhip)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:11] <oneforall2> nedbat a build script  to unzip it and other thinfs to and compile with python3 setup.py install --root=$PKG || exit 1  etc and it packages(distro) it up
[05:32:26] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[05:32:50] <nedbat> oneforall2: i guess you should either use pip instead of setup.py, or silence the warning you get.
[05:32:56] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[05:33:03] <nedbat> oneforall2: why not use pip to install it?
[05:33:13] *** Joins: naranja (~orange@user/orangeboxcutter)
[05:33:29] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[05:33:35] <oneforall2> no I do not want pip to compile or install
[05:33:44] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:33:52] <nedbat> oneforall2: why not?
[05:33:54] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:33:55] <grym> welp, it's going to be fairly painful then
[05:34:07] <oneforall2> I want to always make distro packages
[05:34:11] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[05:34:15] *** Joins: sgn (~sgn@user/sgn)
[05:34:23] <oneforall2> no shou;ld noy ne
[05:34:34] <oneforall2> not*
[05:35:02] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:35:19] <grym> that's probably a question for your distro's build system, no?
[05:35:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[05:35:26] *** Joins: sgn (~sgn@user/sgn)
[05:35:37] <nedbat> oneforall2: if you don't use pip to install it, then pip-check might be the wrong tool to check the installation.  how is pip-check entering into it?
[05:35:52] *** Joins: ub (~Thunderbi@p200300ecdf0994f52db7d35c756e5286.dip0.t-ipconnect.de)
[05:35:57] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[05:36:43] *** Joins: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net)
[05:36:57] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:37:10] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 256 seconds)
[05:37:22] *** Quits: ubert (~Thunderbi@p200300ecdf0994f82db7d35c756e5286.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:37:22] *** ub is now known as ubert
[05:37:24] *** Joins: Trashlord__ (~trash@user/trashlord)
[05:38:19] <oneforall2> because I had a problem with firefox using pip check .. I wish they included that with -disable-tests or add -disable-pip-check :)
[05:38:43] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[05:38:55] <nedbat> oneforall2: why are you using pip-check if you aren't using pip?
[05:39:09] *** Parts: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net) ()
[05:39:09] *** Joins: vaio (~gary@user/ghost)
[05:39:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:39:37] <oneforall2> just answered that ^
[05:39:57] <nedbat> oneforall2: "because I had a problem with firefox using pip check" that doesn't explain why you used pip-check in the first place.
[05:40:39] <nedbat> oneforall2: use more words. tell us the steps, and the reasons.
[05:40:58] <oneforall2> I didn't firefox compiling did
[05:41:00] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[05:41:24] <nedbat> oneforall2: how are firefox and twisted connected? firefox had a problem, but you are asking about twisted.
[05:41:29] <oneforall2> just resent builds of firefox
[05:41:51] *** Joins: Trashlord (~trash@user/trashlord)
[05:42:13] *** Quits: Trashlord__ (~trash@user/trashlord) (Ping timeout: 240 seconds)
[05:43:34] *** Joins: califax- (~califax@user/califx)
[05:43:39] *** Joins: horner (~horner@host86-148-112-106.range86-148.btcentralplus.com)
[05:44:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:44:39] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:44:40] *** califax- is now known as califax
[05:44:58] *** Joins: brabrax (~brabrax@user/brabrax)
[05:47:30] *** Joins: martums (~martums@user/martums)
[05:49:14] *** Quits: marcello42 (~mp@2001:1a81:1345:5c00:cd6:90d6:47fd:9bae) (Quit: WeeChat 3.4)
[05:49:19] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:50:19] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[05:50:31] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[05:50:33] *** Joins: summersault (~summersau@179.221.251.36)
[05:51:50] *** Joins: ethoxy (~root@bison.sh3ll.ru)
[05:52:19] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:52:25] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[05:52:28] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[05:54:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:54:31] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:54:57] *** Joins: frost (~frost@user/frost)
[05:58:17] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[05:58:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[05:58:31] <oneforall2> err because building ff it ran pip check and failed because of pip chack saying twisted needs that  typing ectentions
[05:58:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[05:58:59] <nedbat> oneforall2: this is frustrating. i feel like I am paying more attention to this conversation than you are.
[05:59:30] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[06:00:09] <oneforall2> I dound it frustrating a while ago because no one is reading all I said
[06:00:20] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[06:00:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:01:18] <jiffe> is it possible to do package aliasing?  like if I have the package a.b with a module a.b.c can I alias d to a.b so I can import d.c ?
[06:01:29] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:33] <nedbat> oneforall2: we read everything you said, but there are gaps so we don't understand.
[06:01:49] <nedbat> oneforall2: i still don't understand why you don't just install the twisted prerequisites.
[06:02:19] <dba> the id() function does it just return the index # of the object or the memory location?
[06:02:47] <nedbat> dba: it returns the memory address of the object.
[06:03:44] <nedbat> dba: but id() is mostly useless
[06:03:49] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[06:03:53] *** Joins: cheater (~Username@user/cheater)
[06:04:13] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:04:13] *** Joins: skraito (~skraito@user/skraito)
[06:04:25] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[06:04:43] <jiffe> actually I don't think that will solve my problem
[06:05:18] <dba> nedbat: Thanks. but let say for example I have x = 1 the id(a) will always be the same (in my machine/env)?
[06:05:28] *** Joins: gravy (~gravy@193.119.62.85)
[06:05:35] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:05:45] <nedbat> dba: i don't know if id(1) will always be the same across runs of your program.
[06:06:07] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Read error: Connection reset by peer)
[06:06:13] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[06:06:25] <nedbat> dba: i do know: different runs of Python will have different id(1)
[06:06:29] <meejah> dba: why does that matter?
[06:06:29] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 256 seconds)
[06:06:40] *** Joins: monkeycoder (~monkey@183.171.107.43)
[06:07:33] *** Joins: bluedust (~bluedust@117.241.190.221)
[06:07:41] <oneforall2> nedbat becauses to many other deps and its a feature I don't need or want in the main ditro or even for myseld
[06:07:44] <meejah> (er, what are you trying to do with id() and maybe there's a better way?)
[06:07:51] *** Joins: humbertowoody (~humbertow@189.131.31.180)
[06:08:10] <avu> dba: you can try something like `python -c 'print(id(1))'` a few times to find out
[06:08:17] <nedbat> oneforall2: too many dependencies? Why is another dependency a problem?
[06:08:26] <nedbat> avu: that's literally what I just did :)
[06:08:33] <dba> nedbat: why do you think id() is usleles?
[06:08:36] *** Joins: walterwhip (~www@user/walterwhip)
[06:08:58] <nedbat> dba: i'll change my mind if you can tell me what it can be used for
[06:09:24] *** Joins: summersault (~summersau@179.221.251.36)
[06:09:29] <nedbat> dba: there are a few esoteric things it's good for, but it's mostly a builtin sitting on a good name for not much value.
[06:09:47] * meejah has _many_ times wanted "id" for a var name ;)
[06:09:56] <oneforall2> bexause I don't want to add them to my main distro and shouldn't have to if I don't want or need that feature ..
[06:10:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:10:21] <nedbat> oneforall2: ok, then don't. and ignore the pip-check failure. you have a few options, I'm not sure what else we can do to help.
[06:10:32] <dba> avu: I did x = 1 got an id() and x = 2 got different id() then did x = 1 again got the same id, as nedbat said it will show different id each run
[06:10:50] <nedbat> dba: if you run the program again, the id might be different. or not.
[06:11:00] <avu> dba: yes, that's because the `1` int object is "cached" by the interpreter while its running
[06:11:07] <nedbat> dba: it's fine to be curious about id(), and see how it works.  But it's not very useful.
[06:11:17] <avu> dba: there is, in fact, only one object `1` and so its id() doesn't change
[06:11:21] <grym> meejah: clobber it.  nothing will go wrong :)
[06:11:23] <dba> nedbat: yeah I am just curious nothing more
[06:11:40] <avu> dba: it's the same with small-ish str objects
[06:11:59] <meejah> grym: i have sometimes chosen that, yes ;) but linters get mad
[06:12:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:12:19] <avu> dba: it's just an optimization of CPython though, nothing you can rely on
[06:12:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:12:27] *** Quits: bluedust (~bluedust@117.241.190.221) (Remote host closed the connection)
[06:12:42] <dba> I dont know why I keep going into the weeds with python :)
[06:13:01] <grym> meejah: hey who's the boss around here :)
[06:13:03] <dba> Thanks avu, much appreciated
[06:13:22] <meejah> grym: :)
[06:13:28] *** Joins: sgn (~sgn@user/sgn)
[06:13:30] <grym> oneforall2: well, twisted wants those features, so if you want to use twisted, then you do, too
[06:13:49] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:13:56] *** Joins: frost (~frost@user/frost)
[06:14:10] <avu> dba: wanting to know how things work is a good thing, even in those case where the gained knowledge isn't immediately (or ever) useful I think, so keep weeding ;)
[06:14:23] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:14:24] *** Joins: pycurious (~Adium@user/pycurious)
[06:15:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:15:26] *** Joins: sgn (~sgn@user/sgn)
[06:15:45] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:60fb:64b1:ca3d:1cb1)
[06:15:51] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:60fb:64b1:ca3d:1cb1) (Remote host closed the connection)
[06:16:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:18:49] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:18:57] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[06:19:25] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[06:19:31] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[06:20:36] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[06:21:00] *** Joins: ano (~ano@user/ano)
[06:21:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:22:49] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[06:22:53] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[06:24:32] <jiffe> so this is the problem I'm running into, we have overlapping packages such as whisper, whisper.linux and whisper.io which install to whisper/__init__.py, whisper/linux/__init__.py and whisper/io/__init__.py respectively.  The whisper.linux and whisper.io packages don't include whisper/__init__.py since that comes from the whisper package, so when writing pytests for whisper.linux and whisper.io,
[06:24:34] <jiffe> I'm putting a conftest.py file under whisper/ to indicate it is the root to start testing from.  This works for whisper.linux because I can just import linux.* but it doesn't work for whisper.io because I can't import io.*, it tries the coretools instead, and really just spotlights a flaw in what I'm trying to do anyway
[06:24:38] <dba> avu: will do :D and I cant be grateful enough for the willingness of everybody here to answer all kind of questions. The best community ever
[06:25:38] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:26:42] *** Joins: minip (~minip@user/minip)
[06:27:36] *** Joins: frmlof (~frmlof@70.243.238.191)
[06:28:53] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:28:59] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:30:48] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:08] *** Joins: walterwhip (~www@user/walterwhip)
[06:31:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:33:47] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[06:33:56] *** Joins: Lazenca (~lazenca@user/lazenca)
[06:34:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:34:24] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[06:34:36] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[06:35:10] *** Joins: Vonter (~Vonter@user/vonter)
[06:35:14] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:35:33] *** Joins: sgn (~sgn@user/sgn)
[06:36:00] *** Joins: matari (~matari@2603-8000-e240-2bc2-0dc1-c2e5-73f2-b8c2.res6.spectrum.com)
[06:36:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 250 seconds)
[06:37:02] *** Joins: pycurious (~Adium@user/pycurious)
[06:38:49] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:39:23] *** Joins: audiobirb (~audio@user/audio)
[06:39:32] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:39:40] *** Quits: matari (~matari@2603-8000-e240-2bc2-0dc1-c2e5-73f2-b8c2.res6.spectrum.com) (Client Quit)
[06:40:00] *** Joins: matari (~matari@2603-8000-e240-2bc2-0dc1-c2e5-73f2-b8c2.res6.spectrum.com)
[06:40:06] <meejah> jiffe: relative imports? ("from .io import *" ?)
[06:40:55] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:41:20] *** Joins: sgn (~sgn@user/sgn)
[06:41:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[06:42:43] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[06:43:12] *** Joins: pycurious (~Adium@user/pycurious)
[06:43:24] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:43:24] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:43:24] *** finn_elija is now known as FinnElija
[06:43:53] *** Quits: MrHacktavist (~MrHacktav@24-72-174-24-72-174-137.cpe.sparklight.net) (Ping timeout: 256 seconds)
[06:44:30] *** Joins: wombawomba (~andre@83.172.124.234)
[06:46:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:47:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:47:10] *** Quits: faLUKE (~paolo@host-87-1-178-175.retail.telecomitalia.it) (Remote host closed the connection)
[06:48:37] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 240 seconds)
[06:51:12] *** Joins: frost (~frost@user/frost)
[06:51:15] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[06:51:37] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:52:10] *** Joins: pycurious (~Adium@user/pycurious)
[06:52:51] *** nomic2 is now known as nomic
[06:53:18] *** Quits: nomic (~nomic@85.203.36.80) (Quit: Leaving)
[06:54:57] *** Quits: MrFantastik (~f@2607:f598:bbda:20:f5b3:32dc:f491:b69e) (Ping timeout: 240 seconds)
[06:55:49] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[06:56:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:57:17] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.3)
[06:57:32] *** Joins: sgn (~sgn@user/sgn)
[06:57:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:59:33] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[06:59:38] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:00:27] <cluelessperson> question about supplying a class a __hash__ method:  how should you with something like an object based on a stored sha256 value?
[07:01:06] <cluelessperson> I'm thinking that theoretically, hash(sha) might not respect the hash space of sha256 for example.
[07:02:01] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[07:02:29] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:04:11] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[07:04:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:04:13] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[07:04:35] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:04:48] <KirkMcDonald> __hash__ needs to return an integer, is the main thing.
[07:04:55] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Read error: Connection reset by peer)
[07:05:00] *** Quits: monkeycoder (~monkey@183.171.107.43) (Ping timeout: 256 seconds)
[07:05:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:05:04] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:05:29] <cluelessperson> KirkMcDonald, yes, and technically sha256 digest is a 256bit number
[07:05:35] <cluelessperson> but I'm not sure if you can just.. use that?
[07:05:45] <meejah> _probably_ safe to just truncate the sha256 (or not) to a python int?
[07:05:53] <KirkMcDonald> Right. There would be worse approaches than doing that, although I believe Python's going to truncate the value to 64 bits.
[07:06:04] <KirkMcDonald> Python ints are arbitrary precision.
[07:06:11] <meejah> (i.e. probably safe to use less than 32 bytes of data depending on application)
[07:06:15] <KirkMcDonald> So the int value itself could hold the whole thing.
[07:06:26] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:06:39] *** Joins: humbertowoody (~humbertow@189.131.31.180)
[07:06:41] <KirkMcDonald> But the hash table implementation only uses a fixed size of integer for the hash value.
[07:06:49] <cluelessperson> For my usecase, it is totally fine to truncate sha256
[07:06:54] <meejah> if it's going in a hashtable, just truncate
[07:06:57] <KirkMcDonald> Which should be the system word size; let's just say 64 bits.
[07:07:01] <cluelessperson> but in security contexts, I thought I should figure it out for safety
[07:07:22] *** Joins: fikran (~fikran@user/fikran)
[07:07:34] <meejah> probably better choices than sha256 for security-contects
[07:07:49] <cluelessperson> depends.
[07:08:09] <jiffe> meejah: I get 'attempted relative import with no known parent package'
[07:08:25] <meejah> jiffe: maybe we need to see more code?
[07:08:28] <meejah> cluelessperson: on?
[07:08:48] <KirkMcDonald> If you wanted to get fancy, you could, I don't know, divide the 256-bit value into four parts and XOR them together.
[07:08:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Max SendQ exceeded)
[07:09:10] <KirkMcDonald> But this is silly. I'd probably just grab the first or last 8 bytes and call it a day.
[07:09:34] <meejah> i think those will be equivalent, approximately?
[07:09:39] <KirkMcDonald> Should be.
[07:09:42] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:09:57] <KirkMcDonald> All of these approaches should be about as random as each other.
[07:10:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[07:11:12] *** Joins: andyandybobandy (~AndyAndyB@89.36.78.233)
[07:11:14] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[07:11:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:11:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:11:55] *** Joins: sgn (~sgn@user/sgn)
[07:11:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: switching networks)
[07:12:20] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:12:49] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:16:45] *** Quits: Socra (~Socra@206.217.216.27) (Ping timeout: 256 seconds)
[07:17:34] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:17:40] *** Joins: sgn_ (~sgn@user/sgn)
[07:18:02] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[07:20:00] *** Joins: Guest71 (~Guest71@49.245.95.94)
[07:21:30] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:21:51] *** Joins: adeliktas9 (~adeliktas@i59F5F66D.versanet.de)
[07:21:55] *** Joins: frost (~frost@user/frost)
[07:22:42] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[07:23:01] *** Quits: adeliktas (~adeliktas@i59F525D5.versanet.de) (Ping timeout: 240 seconds)
[07:23:01] *** adeliktas9 is now known as adeliktas
[07:23:40] *** Quits: Wythom (~Wythom@184.170.72.201) (Remote host closed the connection)
[07:24:34] *** Guest71 is now known as io614
[07:25:12] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:f938:3bbb:c90f:4aae)
[07:25:38] *** Quits: thorbw_ (~tw@46.230.130.50) (Read error: Connection reset by peer)
[07:26:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[07:26:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:27:45] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:28:39] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[07:31:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:accc:f920:44e1:6c44)
[07:31:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:accc:f920:44e1:6c44) (Changing host)
[07:31:46] *** Joins: skapata (~Skapata@user/skapata)
[07:32:07] *** Quits: io614 (~Guest71@49.245.95.94) (Quit: Client closed)
[07:32:42] *** Joins: io614 (~io614@49.245.95.94)
[07:33:33] *** Joins: cliluw (~cliluw@47.147.73.223)
[07:34:24] *** Quits: io614 (~io614@49.245.95.94) (Client Quit)
[07:34:49] *** Joins: io614 (~io614@49.245.95.94)
[07:34:53] *** Quits: io614 (~io614@49.245.95.94) (Client Quit)
[07:35:29] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[07:35:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:35:42] *** Joins: pycurious (~Adium@user/pycurious)
[07:36:01] *** Joins: io614 (~io614@49.245.95.94)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] *** Parts: io614 (~io614@49.245.95.94) ()
[07:39:14] *** Joins: thorbw (~tw@46.230.130.50)
[07:40:08] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[07:40:13] *** Quits: stoneware8 (~stoneware@user/stoneware) (Ping timeout: 240 seconds)
[07:40:19] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[07:41:16] *** Quits: xxyxx (~none@b2b-37-24-160-145.unitymedia.biz) (Ping timeout: 256 seconds)
[07:41:17] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:41:28] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:41:35] *** Joins: sgn (~sgn@user/sgn)
[07:41:41] *** Joins: xxyxx (~none@b2b-37-24-160-145.unitymedia.biz)
[07:43:15] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[07:43:57] *** Quits: techsurvivor (~don@cpe-70-114-183-69.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:45:44] *** Joins: techsurvivor (~don@static-198-54-133-171.cust.tzulo.com)
[07:47:02] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[07:47:30] *** Quits: thorbw (~tw@46.230.130.50) (Ping timeout: 256 seconds)
[07:48:37] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[07:50:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:50:30] *** Joins: sgn (~sgn@user/sgn)
[07:56:09] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[07:57:58] *** Joins: ham5urg__ (~ham5urg@84.46.32.3.dynamic-pppoe.dt.ipv4.wtnet.de)
[07:59:02] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:59:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[08:00:32] *** Quits: ham5urg_ (~ham5urg@188.136.253.108.dynamic-pppoe.dt.ipv4.wtnet.de) (Ping timeout: 256 seconds)
[08:00:38] *** Joins: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net)
[08:01:40] *** Quits: xxyxx (~none@b2b-37-24-160-145.unitymedia.biz) (Ping timeout: 256 seconds)
[08:02:19] *** Joins: xxyxx (~none@b2b-37-24-160-145.unitymedia.biz)
[08:02:27] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[08:03:02] *** Quits: sreve (~quassel@p549d70ab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:03:11] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:03:13] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[08:03:24] *** Joins: sreve (~quassel@p549d7380.dip0.t-ipconnect.de)
[08:03:28] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-51d4-90a9-19c0-7512.res6.spectrum.com) (Read error: Connection reset by peer)
[08:04:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[08:07:13] *** Joins: de-facto (~de-facto@user/de-facto)
[08:07:30] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[08:15:39] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:16:18] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[08:16:38] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[08:16:57] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[08:17:36] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:18:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:19:25] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Ping timeout: 240 seconds)
[08:21:17] *** Quits: moog (~moog@107.126.53.103) (Remote host closed the connection)
[08:21:20] *** Joins: demon__ (~user@197.54.116.111)
[08:21:21] *** Joins: Guest62 (~Guest62@2a00:1370:812b:6b8f:c5d6:f25d:cd06:6ee1)
[08:21:49] *** Quits: Guest62 (~Guest62@2a00:1370:812b:6b8f:c5d6:f25d:cd06:6ee1) (Client Quit)
[08:23:46] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[08:24:13] *** Quits: anotheruser (~user@197.54.72.145) (Ping timeout: 240 seconds)
[08:24:45] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[08:25:52] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:26:27] *** Quits: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:27:52] *** Joins: extor (~xtor@192.99.217.240)
[08:28:23] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[08:29:14] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[08:34:41] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[08:34:56] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[08:35:43] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[08:36:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[08:37:12] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:37:32] *** Joins: sgn (~sgn@user/sgn)
[08:38:33] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[08:38:44] *** Joins: monkeycoder (~monkey@183.171.107.43)
[08:38:45] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[08:38:57] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:39:36] *** Joins: mexen (uid495612@user/mexen)
[08:40:12] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:40:17] *** Quits: ensyde (~ensyde@99-185-235-117.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 240 seconds)
[08:40:37] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:40:56] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:42:18] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:42:41] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:43:49] *** Joins: noarb- (~noarb@user/noarb)
[08:44:18] <dba> so this kind of error OverflowError: (34, 'Result too large') is it hardware or python limitation ?
[08:44:35] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:44:52] *** Joins: wombawomba (~andre@83.172.124.234)
[08:45:05] *** Quits: voidcat (~voidcat@user/voidcat) (Remote host closed the connection)
[08:45:21] *** Joins: voidcat (~voidcat@user/voidcat)
[08:46:31] <dba> it says For a standard 32-bit installation of Python, the maximum floating-point value is approximately 1.8e308 does this apply on all other types such as strings, int and other objects.?
[08:46:58] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[08:48:14] <deniska> dba: strings and ints are limited by how much RAM you have (or, in the case of a 32 bit platform, your process address space)
[08:48:22] *** Quits: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:48:35] *** Joins: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net)
[08:48:51] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[08:49:01] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 240 seconds)
[08:49:02] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[08:49:21] <dba> deniska, just curiously why floats are limited by python
[08:49:39] <Repiphany> Floats are limited in all languages
[08:49:51] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[08:49:52] <deniska> dba: floats work more or less the same everywhere
[08:50:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:50:17] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[08:50:32] <dba> Repiphany, why is that so?
[08:50:37] *** Joins: sgn (~sgn@user/sgn)
[08:51:07] <deniska> dba: floats more or less directly map to a specific type which most modern CPUs can manipulate, and this type is limited
[08:51:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:51:59] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:51:59] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[08:52:02] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[08:52:14] *** Joins: naranja (~orange@user/orangeboxcutter)
[08:52:50] <dba> deniska, Thanks that is something to start with
[08:52:53] <deniska> they're quite fast to do calculations with, and they are a good approximation of a real number, as far as it's not too big, too small, and you don't care about the tiny difference between 0.3 and 0.30000000000000004
[08:53:12] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:53:33] *** Joins: noarb (~noarb@user/noarb)
[08:54:09] <SnoopJ> think of it as trading some of the uniformity of representable values for the flexibility and speed
[08:54:22] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:54:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:54:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:55:18] <dba> SnoopJ, that is a bit fancy for me to comprehend yet :D
[08:55:57] <SnoopJ> dba, if you can understand that there is a trade-off, that's enough to make the confusing parts at least appeal less "what the heck?"
[08:56:34] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Quit: Konversation terminated!)
[08:56:38] *** Quits: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net) (Ping timeout: 256 seconds)
[08:56:46] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:56:57] *** Quits: mspe (~user@tilde.team/user/mspe) (Ping timeout: 240 seconds)
[08:57:14] <dba> SnoopJ, true and makes perfect sense
[08:57:40] <dba> Thanks deniska for your note
[08:57:55] *** Joins: rajkosto (~rajkosto@178-221-112-107.dynamic.isp.telekom.rs)
[08:58:36] <Repiphany> Do you know the essential definition of what a floating point is (with significant digits/base/exponent)
[08:58:38] *** Quits: voidcat (~voidcat@user/voidcat) (Remote host closed the connection)
[08:58:43] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:58:44] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:58:54] *** Joins: voidcat (~voidcat@user/voidcat)
[08:59:08] *** Joins: sgn (~sgn@user/sgn)
[09:00:08] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:00:26] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[09:00:28] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:00:50] *** Joins: sgn (~sgn@user/sgn)
[09:01:17] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[09:03:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:03:45] *** Joins: sgn_ (~sgn@user/sgn)
[09:04:07] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:04:24] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:04:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:05:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:06:29] *** Quits: andyandybobandy (~AndyAndyB@89.36.78.233) (Quit: Leaving)
[09:06:40] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[09:06:44] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[09:07:01] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:08:43] *** Joins: miique (~miique@181.46.139.166)
[09:12:36] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[09:13:57] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:14:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:16:05] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:16:10] *** Joins: sgn (~sgn@user/sgn)
[09:16:43] *** Joins: fikran (~fikran@user/fikran)
[09:17:36] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[09:17:38] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:17:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:21:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:22:13] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:24:00] *** Joins: tristan_ (~tristan@223.33.164.172)
[09:24:03] *** Joins: analoq (~yashi@user/dies)
[09:24:05] *** Quits: ommadawn (~ommadawn@165.225.11.44) (Quit: Client closed)
[09:24:54] *** Joins: runciter (~runciter@user/runciter)
[09:25:23] *** Quits: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:27:50] *** Quits: tristan_ (~tristan@223.33.164.172) (Remote host closed the connection)
[09:28:37] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[09:29:22] *** Joins: tristan_ (~tristan@223.33.164.172)
[09:29:38] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:30:04] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[09:30:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c9d6:e0ae:cf61:ed6c)
[09:30:22] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[09:31:03] *** Quits: martums (~martums@user/martums) (Ping timeout: 256 seconds)
[09:31:04] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[09:32:04] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:00] *** Quits: h_ (rootvegeta@fsf/member/hays) (Quit: h_)
[09:33:21] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:33:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:34:11] *** Joins: martums (~martums@user/martums)
[09:34:23] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Quit: Ping timeout (120 seconds))
[09:34:36] *** Quits: tristan_ (~tristan@223.33.164.172) (Ping timeout: 256 seconds)
[09:34:49] *** Joins: quasineutral (~quaisneut@user/quasineutral)
[09:35:01] *** Quits: mspe (~user@tilde.team/user/mspe) (Ping timeout: 240 seconds)
[09:35:01] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:35:35] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[09:36:18] *** Joins: mspe (~user@tilde.team/user/mspe)
[09:36:24] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[09:36:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:37:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:37:35] *** Quits: wmmh (~wh@145.255.67.147) (Read error: Connection reset by peer)
[09:37:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:38:41] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[09:39:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:40:21] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[09:41:59] *** Joins: hays (rootvegeta@fsf/member/hays)
[09:42:05] *** Joins: Trashlord (~trash@user/trashlord)
[09:43:58] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[09:44:06] *** Joins: Guest4 (~Guest4@2.49.103.244)
[09:44:21] <Guest4> niggers
[09:44:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:44:37] *** Quits: Guest4 (~Guest4@2.49.103.244) (Client Quit)
[09:44:46] *** Joins: sgn (~sgn@user/sgn)
[09:45:47] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:37a1:26e4:1fe6:c134)
[09:46:47] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:37a1:26e4:1fe6:c134) (Client Quit)
[09:46:54] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[09:47:45] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:47:57] *** Joins: famubu (~famubu@14.139.174.50)
[09:47:57] *** Quits: famubu (~famubu@14.139.174.50) (Changing host)
[09:47:57] *** Joins: famubu (~famubu@user/famubu)
[09:48:35] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:f34a:ecf0:7be8:91cb)
[09:49:33] *** Joins: frost (~frost@user/frost)
[09:50:29] *** Joins: pmb_ (~pmb@89-64-79-51.dynamic.chello.pl)
[09:50:29] <famubu> For using type annotations in python, is there a way to generalize over the type itself? I was looking for a way to specify the return type of a simple function that accepts a list (of some type T) and returns the first element of that list (assuming that the list is non-empty), in which case the return value type should be T. Is there a way to do that? Something like : https://bpa.st/M6ZQ
[09:51:01] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 240 seconds)
[09:51:03] *** pmb_ is now known as pmb
[09:55:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:55:24] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:f938:3bbb:c90f:4aae) (Read error: Connection reset by peer)
[09:55:30] *** Joins: sgn (~sgn@user/sgn)
[09:55:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[09:57:39] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[09:57:51] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:58:16] *** Joins: sgn (~sgn@user/sgn)
[09:58:58] *** Quits: \mSg_mini (mSg@user/msg/x-0285936) (Ping timeout: 256 seconds)
[09:59:48] <Jong> Is there a way to turn off stdout when running a python script? Any cli argument ? like python some_script.py --run-silently
[10:00:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:00:36] *** Joins: tejr (~tejr@user/tejr)
[10:00:56] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:01:22] <Jong> I'm looking for something that works across all scripts. I know I can modify the script to run silently, but I'm looking for a more global method that doesn't alter python code
[10:02:39] <Jong> aha. I can suppress by using a context manager and calling the code using python -m
[10:03:05] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[10:03:30] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[10:03:30] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:04:20] <Jong> python3 -c  I mean
[10:05:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:07:06] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:10:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:11:25] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[10:11:25] <Repiphany> python script.py > /dev/null
[10:12:54] *** Joins: Vonter (~Vonter@user/vonter)
[10:13:04] <Repiphany> Jong:
[10:13:26] *** Joins: dvx (~dvx@5.181.92.64)
[10:14:41] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[10:15:07] *** Joins: drvanon (~drvanon@81.89.199.26)
[10:15:25] *** Joins: \mSg (mSg@user/msg/x-0285936)
[10:17:57] <drvanon> Since I have been trying to do type hinting I am starting to realize that I am not catching a lot of "function returns None" cases. In all of those cases an error should be raised. In rust this is super elegantly dealt with in my opinion. If you have a value whose type is Optional<T> you can extract the proper value by calling .expect("String to
[10:17:58] <drvanon> show in the error if the value happens to be None"). Is there a similar one liner in python? Now I just have a function (raise_if_none) that raises a runtime error if the argument is None...
[10:19:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[10:19:51] *** Joins: sgn_ (~sgn@user/sgn)
[10:20:19] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[10:20:39] <Jong> sweeett!!!
[10:20:50] *** Joins: RiverDale (~RiverDale@cpc151519-belf13-2-0-cust231.2-1.cable.virginm.net)
[10:21:20] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[10:21:21] *** Quits: RiverDale (~RiverDale@cpc151519-belf13-2-0-cust231.2-1.cable.virginm.net) (Client Quit)
[10:21:46] <drvanon> Yeah, I have to say rust is kind of cool.
[10:22:13] *** Quits: monkeycoder (~monkey@183.171.107.43) (Ping timeout: 240 seconds)
[10:22:15] <Jong> Thanks Repiphany
[10:23:06] <drvanon> Hahaha, okay the sweet was not in reaction to me. :facepalm:
[10:23:34] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:26:14] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:26:35] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 256 seconds)
[10:28:27] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:28:54] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[10:30:28] *** Joins: Vonter (~Vonter@user/vonter)
[10:31:33] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[10:32:04] *** Joins: mcglk (~mcglk@131.191.49.120)
[10:34:31] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:21] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:35:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:35:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[10:37:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[10:38:08] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:38:31] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:38:45] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[10:38:57] *** Quits: mspe (~user@tilde.team/user/mspe) (Ping timeout: 240 seconds)
[10:39:21] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:39:37] *** Joins: drvanon63 (~drvanon@81.89.199.26)
[10:39:45] *** Quits: drvanon63 (~drvanon@81.89.199.26) (Client Quit)
[10:39:54] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.4)
[10:41:39] *** Joins: mspe (~user@tilde.team/user/mspe)
[10:42:02] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:43:01] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[10:43:02] *** Quits: drvanon (~drvanon@81.89.199.26) (Ping timeout: 256 seconds)
[10:43:52] *** Joins: vanessa (~annada@103.160.128.7)
[10:45:11] *** Joins: wombawomba (~andre@83.172.124.234)
[10:45:15] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:46:41] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:46:52] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:47:50] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[10:49:06] *** Joins: djapo (~archangel@user/djapo)
[10:49:24] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[10:49:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:49:42] *** Joins: tejr (~tejr@user/tejr)
[10:49:49] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 256 seconds)
[10:49:52] *** Quits: Bakunin (~murthy@user/lindis) (Remote host closed the connection)
[10:50:49] *** Joins: mrwick (~mrwick@user/mrwick)
[10:51:03] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:52:21] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[10:52:31] *** Joins: inomoz (~inomoz@176.59.106.192)
[10:52:32] *** Joins: vanessa (~annada@103.160.128.7)
[10:52:35] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[10:52:43] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:53:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[10:53:28] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:54:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:54:09] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[10:54:12] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[10:56:13] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[10:56:21] *** Quits: heldwin (~heldwin@user/asmodee) (Remote host closed the connection)
[10:57:11] *** Joins: heldwin (~heldwin@user/asmodee)
[10:57:17] *** Joins: yangby (~secret@115.199.105.217)
[10:57:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:58:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:00:13] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[11:01:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:01:34] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:01:42] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[11:02:07] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:02:13] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:28] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Quit: Leaving)
[11:03:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:03:42] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:04:01] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[11:04:54] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:05:02] *** Joins: BillyZane2 (~BillyZane@185.202.221.36)
[11:05:30] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:05:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:06:11] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:06:35] *** Joins: sgn (~sgn@user/sgn)
[11:06:37] *** Quits: BillyZane (~BillyZane@185.202.221.113) (Ping timeout: 240 seconds)
[11:08:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:09:25] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1565-7.w90-90.abo.wanadoo.fr)
[11:09:37] *** Quits: rajkosto (~rajkosto@178-221-112-107.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[11:09:50] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:10:02] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:10:34] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:10:34] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Client Quit)
[11:10:51] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:13:32] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:14:01] *** Quits: delvian (~delvian@41.13.228.140) (Quit: Leaving)
[11:15:30] *** Joins: barry1 (~Thunderbi@2408:8207:1866:9d20:78c5:cda:34e8:30da)
[11:15:35] *** Quits: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro) (Remote host closed the connection)
[11:16:16] *** Joins: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro)
[11:16:22] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:16:27] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 256 seconds)
[11:16:48] *** Joins: gusto (~Augustus@109.255.100.54)
[11:16:48] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:17:05] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:17:14] *** Joins: seednode99 (~seednode@user/seednode)
[11:17:32] *** Joins: frost (~frost@user/frost)
[11:17:37] *** Quits: famubu (~famubu@user/famubu) (Ping timeout: 240 seconds)
[11:17:53] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10fe:29e:449a:bca0:c3c9:f532)
[11:18:02] *** Joins: dgavrilov (~dgavrilov@net091204138185.pskovline.ru)
[11:18:23] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:18:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:20:58] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:21:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:21:45] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[11:21:57] *** Joins: kosh (~kosh@user/kosh)
[11:23:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:23:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:23:56] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 268 seconds)
[11:23:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:25:47] *** Quits: yangby (~secret@115.199.105.217) (Quit: Go out for a walk and buy a drink.)
[11:26:04] *** Joins: fikran (~fikran@user/fikran)
[11:26:24] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:27:01] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:27:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:27:22] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 256 seconds)
[11:28:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:28:23] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:30:23] *** Joins: wombawomba (~andre@83.172.124.234)
[11:30:48] *** Quits: Helithumper (~Helithump@98.43.136.227) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:48] *** Joins: miique_ (~miique@181.46.139.166)
[11:31:08] *** Joins: Helithumper (~Helithump@98.43.136.227)
[11:32:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:32:37] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[11:33:00] *** Joins: fef (~thedawn@user/thedawn)
[11:33:05] *** Joins: sy (~sy@zm.is)
[11:33:10] *** Joins: manti7 (~manti7@176.10.104.94)
[11:34:14] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:34:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:34:33] *** Joins: sgn (~sgn@user/sgn)
[11:34:37] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 240 seconds)
[11:35:31] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:35:52] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[11:36:52] *** Joins: tristan_ (~tristan@223.62.175.17)
[11:36:54] *** Joins: palasso (~palasso@user/palasso)
[11:38:33] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:39:53] *** Joins: NeoCore (~neocore@45.152.181.20)
[11:39:58] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:40:45] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:40:50] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:41:23] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[11:43:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:43:39] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:44:32] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:44:32] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:44:32] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:45:43] *** Joins: califax (~califax@user/califx)
[11:45:52] *** Joins: brabrax (~brabrax@user/brabrax)
[11:46:24] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[11:46:25] *** Joins: runciter (~runciter@user/runciter)
[11:46:47] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[11:46:51] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-10f3-8e8c-5022-288a.res6.spectrum.com) (Quit: jarthur)
[11:49:10] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Quit: Leaving)
[11:51:05] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[11:53:02] *** Joins: pycode (~pycode3@2001:b07:5d28:551:29d9:4241:d5df:5780)
[11:53:05] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:55:24] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:55:30] *** Joins: sgn_ (~sgn@user/sgn)
[11:55:30] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c9d6:e0ae:cf61:ed6c) (Quit: Client closed)
[11:57:06] *** Joins: delvian (~delvian@41.13.200.188)
[11:59:52] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[11:59:53] <Swayze> python is coolest
[11:59:56] <Swayze> -_-
[12:00:10] <Swayze> perhaps you're lost
[12:00:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:35] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl)
[12:01:27] *** Joins: NeoCore_ (~neocore@2a01:cb10:34f:4c00:5ca9:9a12:a9ad:6f86)
[12:02:03] *** Joins: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab)
[12:03:34] *** Joins: famubu (~famubu@61.0.251.1)
[12:04:17] *** Quits: NeoCore (~neocore@45.152.181.20) (Ping timeout: 240 seconds)
[12:04:57] *** Quits: Magi (~Magi@user/Magi) (Ping timeout: 240 seconds)
[12:04:58] *** Quits: infernix (~nix@spirit.infernix.net) (Remote host closed the connection)
[12:05:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:06:09] *** Joins: Magi (~Magi@user/Magi)
[12:06:49] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:07:14] *** Joins: sgn (~sgn@user/sgn)
[12:07:45] *** doko_ is now known as doko
[12:08:31] *** Joins: upsala (~zcb@185.209.196.169)
[12:10:20] *** Joins: iomari891 (~iomari891@102.91.5.198)
[12:12:57] *** Joins: vladoski (~vladoski@2001:b07:add:d406:70e4:4e1:5eed:a7a)
[12:15:12] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[12:15:55] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Remote host closed the connection)
[12:16:18] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[12:16:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:16:26] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[12:17:21] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[12:17:22] *** Joins: Vonter (~Vonter@user/vonter)
[12:17:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:17:51] *** Joins: sgn (~sgn@user/sgn)
[12:18:43] *** Joins: abir (~abir@103.161.104.9)
[12:19:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:19:17] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:19:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:20:04] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[12:21:32] *** Quits: joel135 (sid136450@id-136450.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[12:22:05] *** dcaro_away is now known as dcaro
[12:22:07] <mrwick> are list comprehensions faster than declaring lists and filling them with for loops?
[12:22:20] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[12:22:22] *** Joins: Xardas (~Xardas@149.233.51.127)
[12:22:25] <mrwick> I notice some people go too far with the comprehensions and am not sure hwy
[12:22:30] <mrwick> *why
[12:22:37] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[12:23:15] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[12:23:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:23:25] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[12:23:28] *** Quits: demon__ (~user@197.54.116.111) (Ping timeout: 256 seconds)
[12:24:21] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:24:46] *** Joins: sgn (~sgn@user/sgn)
[12:25:29] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[12:26:08] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[12:26:46] *** Joins: sus (zero@user/zeromomentum)
[12:27:02] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[12:27:25] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[12:27:29] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[12:27:41] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[12:27:41] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[12:27:41] *** Joins: hams (~hams@user/hams)
[12:27:44] <deniska> mrwick: it can be slightly faster, typically not enough to matter. People go too far with them because some enjoy writing terse and clever looking code
[12:29:20] *** Joins: Xano (~Xano@2a00:23c4:4204:700:ae8a:62d0:a045:dba1)
[12:29:25] <mrwick> well, that is exactly what I was thinking. unfortunately that makes sharing quite difficult.
[12:30:57] *** Quits: iomari891 (~iomari891@102.91.5.198) (Ping timeout: 240 seconds)
[12:31:07] <deniska> `if not (foo := bar()):` lately became a pet peeve of mine :)
[12:31:18] <parv> mrwick, In what context does list comprehension make sharing quite difficult?
[12:32:10] <mrwick> parv: if the list comprehension continues for hundreds and hundreds of lines, creating more and more dict and list comprehensions all the while
[12:32:32] <mrwick> imaging beginning on line 10 with fun_list = [
[12:32:35] <parv> ^^^ That just says to look out for "foo" use in in the if-block 🤷‍♂️
[12:32:47] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[12:32:49] *** Joins: Vonter (~Vonter@user/vonter)
[12:33:01] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:33:03] <mrwick> going for 500 lines and at the end having ] ; return fun_list
[12:33:12] <parv> mrwick, Oh no! 100s of lines?! Damn
[12:33:17] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[12:33:24] *** Joins: sgn (~sgn@user/sgn)
[12:33:40] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[12:33:42] *** Quits: dulanic (~dulanic@47.187.144.163) (Remote host closed the connection)
[12:33:44] <parv> I was thinking tiny bit more than 3-4 lines.
[12:33:49] *** Quits: ubert (~Thunderbi@p200300ecdf0994f52db7d35c756e5286.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:33:56] *** Joins: cheater (~Username@user/cheater)
[12:33:56] *** Joins: guardian (~guardian@planet-d.net)
[12:33:56] *** Joins: shad (~shad@user/shad)
[12:34:03] *** Joins: dulanic (~dulanic@47.187.144.163)
[12:34:12] *** Joins: skraito (~skraito@user/skraito)
[12:34:25] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[12:34:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:35:21] *** Joins: iomari891 (~iomari891@197.210.71.172)
[12:35:31] <deniska> mrwick: heh, troll refactor: change it to `return [ <500 lines> ]` :)
[12:35:45] <parv> lol
[12:36:15] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[12:36:18] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[12:36:21] <deniska> I'm fine with a list comprehension spanning a few lines when expressions are long, it's nesting which shuts my code reading abilities off
[12:36:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:36:56] *** Joins: sgn (~sgn@user/sgn)
[12:37:15] <mrwick> the only advantage I see is that the code becomes guaranteed to return a list, or dict
[12:38:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:38:31] *** Joins: sgn (~sgn@user/sgn)
[12:39:09] <dante-as> Hi guys, I have one logger module built by myself that uses the logging library and I would like that when I call this module to display in the output the name of the script that is calling that module. So the format should look like formatting = "%(asctime)s [%(levelname)s] [%(filename)s] %(message)s", but it's showing off the name of the script
[12:39:10] <dante-as> from the module, not the one that I am triggering
[12:39:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:40:05] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:40:08] *** Joins: matkor (~matkor@ns0.ant.gliwice.pl)
[12:40:15] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[12:40:19] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[12:40:26] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:41:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:41:32] *** Joins: sgn (~sgn@user/sgn)
[12:42:20] *** Joins: bloody (~bloody@user/bloody)
[12:43:18] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 256 seconds)
[12:44:07] <parv> Are you getting a "logging" object when you are logging?
[12:44:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:44:40] *** Joins: sgn (~sgn@user/sgn)
[12:45:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:45:36] *** Joins: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr)
[12:45:38] <parv> ... as in : import logger_module, logging; ... ; logger = logging.getLogger( 'module name' ) ; ... ; logger.info( ... )
[12:48:14] *** Quits: NeoCore_ (~neocore@2a01:cb10:34f:4c00:5ca9:9a12:a9ad:6f86) (Quit: Leaving)
[12:48:19] <dante-as> This is the code that I am using to implement the logging module: https://bpa.st/WTDA
[12:49:14] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[12:49:19] <dante-as> And this is how I call it: https://bpa.st/BN4Q
[12:49:25] *** Quits: dgavrilov (~dgavrilov@net091204138185.pskovline.ru) (Remote host closed the connection)
[12:49:47] *** Joins: dgavrilov (~dgavrilov@net091204138185.pskovline.ru)
[12:49:47] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Read error: Connection reset by peer)
[12:50:17] *** Quits: Kandle (~mono@2601:19b:100:f080:5aa2:8500:43cb:bdcb) (Ping timeout: 240 seconds)
[12:50:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:51:10] *** Joins: Auron (Auron956@user/auron)
[12:51:47] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[12:51:54] *** Joins: plastico (~plastico@neomutt/plastico)
[12:52:13] *** Quits: molt (~molt@46.33.200.12) (Ping timeout: 256 seconds)
[12:53:15] *** Joins: Guest31 (~Guest31@maila.valsania.it)
[12:53:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:53:58] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:54:16] *** Parts: Guest31 (~Guest31@maila.valsania.it) ()
[12:55:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:55:50] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[12:56:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:56:34] *** Joins: sgn (~sgn@user/sgn)
[12:57:05] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:57:32] <parv> dante-as, On line 13 of WTDA, you are using the Logger object for the module. Modify Log.__init__ to accept a Logger object to set self.logger. Then modify BN4Q to https://bpa.st/JATQ
[12:58:39] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:58:51] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[12:59:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[12:59:04] *** Joins: sgn (~sgn@user/sgn)
[12:59:07] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[12:59:10] *** Joins: jim87 (~quassel@93.55.249.30)
[12:59:10] *** Quits: jim87 (~quassel@93.55.249.30) (Client Quit)
[12:59:10] *** Joins: bloody (~bloody@user/bloody)
[12:59:23] *** Joins: mickey8 (~user@user/mickey)
[12:59:24] *** Joins: Guest8332 (~Guest83@178.217.208.12)
[13:00:52] *** Joins: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net)
[13:01:14] *** Joins: RiFo (~RiFo@user/rifo)
[13:01:47] *** Quits: dgavrilov (~dgavrilov@net091204138185.pskovline.ru) (Remote host closed the connection)
[13:02:12] <parv> dante-as, You ought to reset also the coloring, bolding, underlining, etc at the end of the message. Use "ENDC"
[13:02:13] *** Quits: onichomp (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[13:02:35] *** Joins: someuser (~user@197.54.116.111)
[13:03:10] *** Quits: RiFo (~RiFo@user/rifo) (Client Quit)
[13:03:42] *** Joins: palindrome (~jvargas@46.7.194.191)
[13:04:15] <palindrome> hey guys, im seeing some code here and I am wondering what does it do. str(int(data)). Can you throw me a tip?
[13:05:18] *** Joins: RiFo (~RiFo@user/rifo)
[13:05:43] *** Joins: _FlawLess_ (~user@2a01:e0a:a4:7098::10)
[13:05:49] *** Quits: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[13:05:52] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6)
[13:06:00] <parv> str makes a string out of the thing. int makes int out of the thing
[13:06:04] *** Parts: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr) ()
[13:06:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:06:53] <dante-as> parv: thanks for reply. Hmm, line 13 is     ENDC = '\033[0m'. How should modify this one?
[13:07:14] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[13:07:50] <parv> dante-as, You are not using that ENDC to reset other escape codes.
[13:08:11] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[13:08:16] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:08:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:08:30] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[13:08:43] *** Joins: Vonter (~Vonter@user/vonter)
[13:08:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:30ae:97d7:8d1d:fbf3) (Ping timeout: 240 seconds)
[13:09:29] <dante-as> parv: yep, that's a good hint, did that
[13:10:07] *** Joins: RiFo (~RiFo@user/rifo)
[13:10:47] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:11:03] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:11:21] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:12:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:13:40] *** Joins: dgavrilov_ (~dgavrilov@2a01:4f9:c011:634c::1)
[13:14:31] <dante-as> parv: doing that change doesn't help me displaying in the output the name of the script which is triggering the logging module
[13:14:36] *** Quits: RiFo (~RiFo@user/rifo) (Client Quit)
[13:14:43] *** Joins: rendar (~rendar@user/rendar)
[13:15:54] <dante-as> any other ideas how can I accomplish that?
[13:16:01] *** Joins: jcbsv (~jcbsv@185.247.236.137)
[13:16:25] *** Joins: RiFo (~RiFo@user/rifo)
[13:17:07] <parv> dante-as, Have you made the change to accept a Logger object in Log.__init__?
[13:17:36] <parv> ... mentioned ~10 minutes ago
[13:19:24] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:19:24] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:19:24] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:20:08] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[13:20:09] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[13:20:40] <dante-as> parv: yes. This is how the 2 files are looking now: https://bpa.st/JUCA and https://bpa.st/W7HA
[13:22:11] *** Joins: RiFo (~RiFo@user/rifo)
[13:22:39] <parv> dante-as, Which package provides pythonjsonlogger?
[13:22:57] *** Joins: yemel (~yemel@user/yemel)
[13:23:01] *** Quits: famubu (~famubu@61.0.251.1) (Ping timeout: 240 seconds)
[13:23:38] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: You have been kicked for being idle)
[13:24:26] *** Joins: dalan5 (~dalan@203-219-209-191.static.tpgi.com.au)
[13:25:49] *** Quits: dalan (~dalan@194-193-162-96.tpgi.com.au) (Ping timeout: 240 seconds)
[13:25:49] *** dalan5 is now known as dalan
[13:25:49] *** Quits: dgavrilov_ (~dgavrilov@2a01:4f9:c011:634c::1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:25:53] *** Joins: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net)
[13:25:59] <parv> dante-as,  Nevermind. That is not used yet, so does not matter.
[13:26:04] *** abir is now known as abirtx
[13:26:05] *** Joins: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1)
[13:26:05] <dante-as> parv: that's used by a different function, when I am saving the logs to a file
[13:26:17] *** Quits: encukou (quassel@nat-pool-brq-t.redhat.com) (Remote host closed the connection)
[13:26:27] <parv> But yes, the filename is still from the module with Log class ...
[13:26:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:27:33] *** Joins: encukou (quassel@nat-pool-brq-t.redhat.com)
[13:28:04] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[13:28:22] <palindrome> thanks parv
[13:29:11] *** Joins: iomari891 (~iomari891@197.210.70.107)
[13:30:05] *** Joins: famubu (~famubu@14.139.174.50)
[13:31:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:31:19] *** Quits: Kandle (~mono@c-73-186-153-94.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[13:32:52] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:32:58] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:32:59] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:33:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[13:33:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:34:16] *** RemoteHost is now known as A_Dragon
[13:35:25] *** Joins: fikran (~fikran@user/fikran)
[13:35:51] *** Quits: iomari891 (~iomari891@197.210.70.107) (Ping timeout: 256 seconds)
[13:36:09] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[13:36:33] *** Joins: Cyp (~cyp@213.237.85.9)
[13:36:50] *** Joins: nomic (~nomic@185.198.243.30)
[13:36:52] <parv> dante-as, I am sorry for the false hope and for not having any more ideas
[13:37:29] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[13:38:37] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[13:39:26] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:39:57] <dante-as> parv: no problem, appreciate your time
[13:40:02] *** Joins: maroloccio (~marolocci@151.75.59.229)
[13:40:48] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:4371:6bef:aafb:f58d)
[13:41:28] *** Joins: Cyp (~cyp@213.237.85.9)
[13:41:57] *** Joins: wombawomba (~andre@83.172.124.234)
[13:43:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:43:13] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[13:44:40] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[13:45:38] *** Joins: chele (~chele@user/chele)
[13:46:03] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:47:38] *** Joins: Cyp (~cyp@213.237.85.9)
[13:47:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:47:55] *** jazzy2 is now known as jazzy
[13:48:19] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:50:20] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:51:10] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[13:52:51] *** Quits: tristan_ (~tristan@223.62.175.17) (Ping timeout: 256 seconds)
[13:54:34] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[13:54:42] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[13:55:03] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[13:55:46] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[13:57:46] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:57:48] *** Joins: frost (~frost@user/frost)
[13:58:09] *** Joins: molt (~molt@46.33.200.12)
[13:58:13] *** Joins: infernix (nix@spirit.infernix.net)
[13:58:49] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[13:59:10] *** Joins: kevr (~kevr@user/kevr)
[13:59:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:24] *** Joins: e2m4n (~ezman@user/e2m4n)
[14:00:39] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3)
[14:00:48] *** Joins: iomari891 (~iomari891@197.210.71.172)
[14:00:55] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:d4cf:4fa:7dea:40b3) (Excess Flood)
[14:02:20] *** Joins: horn_r (~horner@213.205.197.76)
[14:02:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:04:37] *** Quits: horner (~horner@host86-148-112-106.range86-148.btcentralplus.com) (Ping timeout: 240 seconds)
[14:05:48] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[14:06:11] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[14:06:24] *** Joins: tristan_ (~tristan@223.62.163.206)
[14:06:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:06:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:07:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:07:05] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[14:07:06] *** Joins: runciter (~runciter@user/runciter)
[14:07:46] *** Quits: someuser (~user@197.54.116.111) (Read error: Connection reset by peer)
[14:08:01] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:08:16] *** Lord_of_Life_ is now known as Lord_of_Life
[14:09:33] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[14:10:05] *** Joins: Cyp (~cyp@213.237.85.9)
[14:10:37] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[14:10:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[14:12:09] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:12:31] *** Joins: frost (~frost@user/frost)
[14:12:33] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[14:13:15] *** Quits: abirtx (~abir@103.161.104.9) (Quit: leaving)
[14:15:04] *** Quits: Duality (~robert@217.119.239.2) (Remote host closed the connection)
[14:15:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:15:38] *** Joins: horner (~horner@host86-148-112-106.range86-148.btcentralplus.com)
[14:15:38] *** Quits: horner (~horner@host86-148-112-106.range86-148.btcentralplus.com) (Client Quit)
[14:16:57] *** Joins: cdown (~cdown@188.214.11.14)
[14:17:57] *** Quits: horn_r (~horner@213.205.197.76) (Ping timeout: 240 seconds)
[14:19:58] *** Joins: bluedust (~bluedust@61.3.70.137)
[14:20:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:25:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:28:42] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[14:28:53] *** Quits: jess (~jess@atheme/cat/jess) (Quit: updates)
[14:30:49] *** Quits: tristan_ (~tristan@223.62.163.206) (Ping timeout: 256 seconds)
[14:31:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:32:05] *** Joins: frost (~frost@user/frost)
[14:32:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:32:56] *** Joins: portalrat (~portalrat@user/portalrat)
[14:33:20] *** Joins: stonkey (~stonkey@user/stonkey)
[14:33:35] *** Joins: agonhajdari (~textual@user/agonhajdari)
[14:34:05] *** Quits: michaelis (~michaelis@193.183.209.17) (Quit: Lost terminal)
[14:34:30] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[14:34:40] *** Joins: michaelis (~michaelis@193.183.209.17)
[14:34:43] *** Quits: agonhajdari (~textual@user/agonhajdari) (Client Quit)
[14:35:13] *** Joins: millido (~millido@84.210.150.128)
[14:35:37] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[14:35:48] *** Quits: maroloccio (~marolocci@151.75.59.229) (Quit: WeeChat 3.0)
[14:37:03] *** BillyZane2 is now known as BillyZane
[14:37:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:38:02] *** Joins: tobybl_ (~tobybl@237.202.200.146.dyn.plus.net)
[14:38:17] *** Quits: matari (~matari@2603-8000-e240-2bc2-0dc1-c2e5-73f2-b8c2.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:38:57] *** Joins: matari (~matari@cpe-76-176-28-170.san.res.rr.com)
[14:38:58] <nedbat> i'm building CPython from source for git bisect, and I can't find a make target that builds all the .o files but doesn't do
[14:39:06] <nedbat> "make config".  is there one?
[14:39:49] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[14:39:53] *** Joins: bluedust_ (~bluedust@194.37.96.104)
[14:40:17] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:40:37] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:41:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[14:41:33] *** Quits: bluedust (~bluedust@61.3.70.137) (Remote host closed the connection)
[14:41:56] *** Joins: slav0nic (slav0nic@python.su)
[14:42:07] *** Quits: famubu (~famubu@14.139.174.50) (Quit: leaving)
[14:42:09] *** Joins: bluedust (~bluedust@61.3.70.137)
[14:42:40] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:42:48] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:42:49] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:43:22] *** Joins: jesopo (~jess@atheme/cat/jess)
[14:44:13] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Ping timeout: 240 seconds)
[14:44:22] <Yhg1s> nedbat: there isn't a 'make config', but I assume you mean 'run configure when it needs to run'? No, all the .o targets (that you care about) indirectly depend on config.status, which depends on configure, and will rerun configure when it's necessary. Why do you need to? Perhaps you'd be more served by caching the results of configure, which will make it go a lot faster?
[14:45:08] *** Quits: bluedust_ (~bluedust@194.37.96.104) (Ping timeout: 256 seconds)
[14:45:47] <nedbat> Yhg1s: yes, configure.  I'm just trying to get the fastest build that will get the right results when going back in time with git.  how do I cache the results of configure?
[14:46:00] *** Joins: ravan_ (~ravan@42.201.198.151)
[14:46:00] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[14:46:00] *** Joins: ravan_ (~ravan@user/ravan)
[14:46:13] *** Quits: bluedust (~bluedust@61.3.70.137) (Ping timeout: 240 seconds)
[14:48:32] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[14:48:38] *** Joins: nateh1ggers (~t@46.235.96.58)
[14:48:51] <Yhg1s> nedbat: run configure with -C (see https://www.gnu.org/software/autoconf/manual/autoconf-2.63/html_node/Cache-Files.html)
[14:49:16] <nedbat> Yhg1s: is there a reason the CPython makefile doesn't use -C ?
[14:49:39] <Yhg1s> nedbat: the same reason it's not the default: to avoid *other changes on the system* causing a stale cache.
[14:50:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:51:10] *** Quits: nateh1ggers (~t@46.235.96.58) (Client Quit)
[14:52:13] <nedbat> Yhg1s: i'm trying to pick through the Makefile but...   Is there an environment variable I can use with the Makefile to supply -C?
[14:52:30] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[14:53:18] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Ping timeout: 260 seconds)
[14:54:08] *** jesopo is now known as jess
[14:54:24] *** Joins: bluedust (~bluedust@61.3.70.137)
[14:54:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:54:52] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:55:11] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 256 seconds)
[14:55:44] *** Joins: runciter (~runciter@user/runciter)
[14:56:30] <Yhg1s> nedbat: your initial run of configure should be manual, really.
[14:56:53] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:57:00] <Yhg1s> (there's no Makefile until you run configure once)
[14:57:36] <Yhg1s> there is CONFIG_ARGS, but it's set by configure ;P
[14:57:39] <nedbat> Yhg1s: and do I just copy the arguments from a Makefile run?    ./configure --prefix=/usr/local/cpython --with-openssl=/usr/local/opt/openssl@3
[14:57:59] <Yhg1s> nedbat: well, the Makefile copied it from the initial configure run.
[14:58:04] <Yhg1s> which you would have done manually.
[14:58:17] *** Quits: emf (~emf@2620:10d:c090:400::5:b9c2) (Ping timeout: 240 seconds)
[14:58:37] <nedbat> Yhg1s: i don't think i ever typed "/usr/local/opt/openssl@3"
[14:59:02] <Yhg1s> then you don't have to copy it. it'll be part of the autodetection in configure.
[14:59:07] *** Joins: panella32 (~panella32@89.46.114.155)
[14:59:09] *** Joins: Naan (~Naan@user/naan)
[14:59:18] <Yhg1s> (but it doesn't hurt to copy it, it probably saves a bit of work if it doesn't have to rediscover it.)
[14:59:44] *** Joins: emf (~emf@2620:10d:c090:400::5:b9c2)
[14:59:53] *** Quits: panella32 (~panella32@89.46.114.155) (Client Quit)
[15:01:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:02:14] *** Quits: Xano (~Xano@2a00:23c4:4204:700:ae8a:62d0:a045:dba1) (Ping timeout: 268 seconds)
[15:03:25] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 240 seconds)
[15:04:05] *** Quits: ham5urg__ (~ham5urg@84.46.32.3.dynamic-pppoe.dt.ipv4.wtnet.de) (Remote host closed the connection)
[15:06:45] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[15:09:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:28] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:11:32] *** Joins: jazzy2 (~jaziz@user/jaziz)
[15:11:51] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[15:12:00] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:12:09] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[15:12:57] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:13:23] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[15:13:25] *** Joins: fef (~thedawn@user/thedawn)
[15:13:54] *** Joins: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de)
[15:14:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[15:14:24] *** jazzy2 is now known as jazzy
[15:16:41] *** Quits: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:16:54] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[15:16:57] *** Joins: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1)
[15:17:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:29d9:4241:d5df:5780) (Ping timeout: 268 seconds)
[15:17:15] *** Joins: frost (~frost@user/frost)
[15:17:34] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:17:37] *** Quits: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1) (Client Quit)
[15:17:42] *** Joins: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[15:17:51] *** Quits: ravan_ (~ravan@user/ravan) (Quit: Leaving)
[15:17:52] *** Joins: dgavrilov (~dgavrilov@135.181.252.168)
[15:17:58] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Read error: Connection reset by peer)
[15:18:24] *** Joins: a_chicken (~a_chicken@221.207.193.131)
[15:19:22] <Yhg1s> nedbat: just to be clear, you only have to pass -C to configure when you run it yourself, and any automatic reruns should pick it up from then on.
[15:19:44] <nedbat> Yhg1s: i tried it, and it still said "checking..." a lot, but maybe less than before?
[15:19:52] <Yhg1s> The first run, or the second one?
[15:19:52] *** Parts: a_chicken (~a_chicken@221.207.193.131) ()
[15:20:03] *** dcaro is now known as dcaro_lunch
[15:20:04] <Yhg1s> It still says 'checking' the same number of times, yes.
[15:20:11] <Yhg1s> it should just say '(cached)' a lot after them.
[15:20:38] <nedbat> oh, i see.  ok, cool.
[15:21:32] *** Quits: dgavrilov (~dgavrilov@135.181.252.168) (Client Quit)
[15:21:48] *** Joins: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1)
[15:21:58] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:23:39] *** Quits: bluedust (~bluedust@61.3.70.137) (Remote host closed the connection)
[15:23:46] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:24:13] *** Joins: Guest10 (~Guest10@2a00:d5c0:20:0:206c:4692:b7f5:6b77)
[15:24:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:19] *** Quits: Guest10 (~Guest10@2a00:d5c0:20:0:206c:4692:b7f5:6b77) (Client Quit)
[15:25:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:25:41] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[15:25:42] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[15:28:06] *** Joins: DXR (~lyrical@194.219.251.132.dsl.dyn.forthnet.gr)
[15:28:09] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Ping timeout: 268 seconds)
[15:28:27] *** Joins: bluedust (~bluedust@61.3.70.137)
[15:29:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:29:15] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[15:29:19] *** Quits: rundll (~rundll@host217-42-32-16.range217-42.btcentralplus.com) (Quit: leaving)
[15:29:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:29:58] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[15:30:36] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:30:42] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:33:01] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[15:34:19] *** Quits: dgavrilov (~dgavrilov@2a01:4f9:c011:634c::1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:34:51] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:35:23] <rendar> https://bpa.st/KRFA -- is there a way to merge those toDict class methods into only one?
[15:35:25] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[15:35:38] *** Joins: kts (~kts@103.73.237.149)
[15:35:45] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:13] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:05] <KirkMcDonald> rendar: You could check the type of self.
[15:37:41] <rendar> KirkMcDonald, but in such a case, i have to check each Unit* type inside the base class Unit's class method.. not very cool
[15:37:54] *** Joins: gusto (~Augustus@109.255.100.54)
[15:38:23] <KirkMcDonald> rendar: Hmm? How so?
[15:39:04] <KirkMcDonald> rendar: You could literally just take that `convertToDict` method, strip off the decorator, and rename it `toDict`.
[15:39:08] <rendar> KirkMcDonald, well, my goal here is to create Unit* types instances from a dict, which contain info about what type of Unit classes i have to create
[15:39:29] <rendar> KirkMcDonald, i have to do the opposite
[15:39:36] <rendar> from dict, to object instance
[15:39:44] <KirkMcDonald> rendar: You were asking about toDict, but okay.
[15:40:05] <rendar> so, if dict has header=="run" i have to create UnitRun, otherwise header=="error" i have to create UnitError
[15:40:07] <rendar> and so on
[15:40:36] <rendar> i think UnitRun, UnitError etc must have their own separate classmethod 'fromDict', right?
[15:40:39] *** Joins: dgavrilov (~dgavrilov@135.181.252.168)
[15:41:14] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:41:20] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[15:41:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:42:00] <KirkMcDonald> rendar: I might do this in a function that is not part of any class. You could also rig up some thing where each class "registers" itself with that function, so that you end up with a dict mapping header value to class object.
[15:42:07] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:42:15] <rendar> ok
[15:42:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:44:38] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[15:44:41] *** cdown_ is now known as cdown
[15:44:46] *** Joins: fikran (~fikran@user/fikran)
[15:46:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:48:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:50:39] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[15:51:48] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[15:52:12] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[15:53:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[15:55:47] *** Quits: unyu (~pyon@user/pyon) (Quit: Reboot.)
[15:56:06] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[15:57:41] *** Joins: Xardas (~Xardas@149.233.51.127)
[15:58:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:00:40] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[16:00:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[16:01:59] *** Joins: Guest138 (~Guest138@88.103.7.38)
[16:02:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:02:53] *** Joins: califax- (~califax@user/califx)
[16:04:06] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[16:04:07] *** califax- is now known as califax
[16:04:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:06:23] *** Joins: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr)
[16:06:35] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[16:06:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:07:18] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[16:07:56] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[16:08:12] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:09:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:10:02] *** Joins: mathe (~wellmathe@85.251.70.233.dyn.user.ono.com)
[16:10:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:10:39] *** Joins: brentaarnold_ (~brentaarn@24.112.58.14)
[16:11:27] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Read error: Connection reset by peer)
[16:11:50] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[16:11:50] *** brentaarnold_ is now known as brentaarnold
[16:12:14] *** Joins: someuser (~user@197.54.116.111)
[16:12:33] <newdimension> I have a script at the end of which I want to start a Flask API: app.run(debug=True, host='0.0.0.0'). However, when Flask starts I believe it restarts the script so my whole scripts ends up re-running. How should I be be starting the Flask API in this case?
[16:13:19] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[16:13:42] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[16:14:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:14:44] *** Joins: tristan_ (~tristan@223.62.163.206)
[16:15:23] <nedbat> newdimension: i think that is because debug=True spawns a subprocess so it can restart on code changes
[16:15:38] <nedbat> newdimension: i'm curious what else your program does before starting flask?
[16:16:05] <newdimension> It scrapes a websites, inputs the info in a DB and I access the results through the API
[16:16:09] <newdimension> *website
[16:18:24] *** Joins: shad (~shad@user/shad)
[16:18:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:19:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:19:37] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[16:20:30] <nedbat> newdimension: i would make that two separate python programs, and run them one after the other.
[16:22:14] <newdimension> nedbat: They're separate files at the moment, and I run each one separately in Pycharm. I just found it tiresome to have to always start the API manually after the scrapper
[16:22:17] *** Joins: pb1 (~Thunderbi@2a00:d5c0:20:0:206c:4692:b7f5:6b77)
[16:22:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[16:23:03] *** Joins: somlis (~somlis@user/somlis)
[16:24:12] *** Joins: Guest10 (~Guest10@2a00:d5c0:20:0:206c:4692:b7f5:6b77)
[16:24:24] *** Quits: Guest10 (~Guest10@2a00:d5c0:20:0:206c:4692:b7f5:6b77) (Client Quit)
[16:25:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:25:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:26:25] *** Joins: foozle (~foozle@2001-b011-c040-13fe-5941-1239-e073-b67c.dynamic-ip6.hinet.net)
[16:27:02] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[16:27:10] *** Quits: kts (~kts@103.73.237.149) (Quit: Konversation terminated!)
[16:27:51] *** Joins: remolej (~kenoba@user/kenoba)
[16:29:05] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[16:29:45] *** chilvers1 is now known as chilversc
[16:32:58] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[16:33:00] *** Joins: ST47 (~ST47@wikimedia/st47)
[16:33:38] *** Joins: millido (~millido@84.210.150.128)
[16:34:00] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[16:34:00] *** Joins: remolej (~kenoba@user/kenoba)
[16:35:34] *** Quits: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[16:35:38] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:35:53] *** Joins: ano (~ano@user/ano)
[16:36:03] *** Quits: martums (~martums@user/martums) (Ping timeout: 256 seconds)
[16:36:15] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:36:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[16:36:31] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[16:37:28] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:37:42] *** Joins: esther (~esther@2607:fb90:5fe2:42b2:550c:43c8:d323:43ec)
[16:37:51] *** Joins: frost (~frost@user/frost)
[16:38:35] *** Joins: ano (~ano@user/ano)
[16:38:53] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[16:38:54] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[16:39:15] *** Joins: kevr (~kevr@user/kevr)
[16:39:17] *** Quits: triffid (~triffid@gateway/tor-sasl/triffid) (Remote host closed the connection)
[16:39:45] *** Joins: ano (~ano@user/ano)
[16:39:49] *** Joins: triffid (~triffid@gateway/tor-sasl/triffid)
[16:40:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:40:18] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[16:40:40] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[16:41:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:41:57] *** Quits: esther (~esther@2607:fb90:5fe2:42b2:550c:43c8:d323:43ec) (Ping timeout: 240 seconds)
[16:41:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:42:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:44:19] *** Joins: kosh (~kosh@user/kosh)
[16:44:48] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[16:45:12] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[16:45:13] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:46:34] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[16:46:41] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[16:46:49] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[16:47:25] *** Joins: dulanic (~dulanic@47.187.144.163)
[16:48:04] *** Quits: Guest8332 (~Guest83@178.217.208.12) (Quit: Client closed)
[16:48:12] *** Joins: Everything (~Everythin@37.115.210.35)
[16:49:35] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: WeeChat 3.3)
[16:49:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:50:22] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:51:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:52:50] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[16:52:54] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:53:20] *** Joins: dulanic (~dulanic@47.187.144.163)
[16:53:56] <grym> or have a scrape endpoint
[16:54:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:54:31] *** Joins: unyu (~pyon@user/pyon)
[16:55:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:55:28] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[16:55:53] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[16:57:22] *** dcaro_lunch is now known as dcaro
[16:58:35] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[16:59:36] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[17:01:44] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[17:02:11] *** Joins: plugner (~joao@2804:7f5:9242:ca3:fa79:5bb1:75a:7013)
[17:02:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:02:24] *** Joins: thebros35 (~thebros35@cfcu2-gw.cfcu2.smithvilledigital.net)
[17:02:36] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[17:04:12] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:05:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:06:17] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[17:09:22] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:10:46] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:11:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:12:52] *** Quits: Guest138 (~Guest138@88.103.7.38) (Quit: Client closed)
[17:13:36] *** Quits: thebros35 (~thebros35@cfcu2-gw.cfcu2.smithvilledigital.net) (Ping timeout: 256 seconds)
[17:15:53] <dob1> in practice, the import order what it changes?
[17:16:13] *** Joins: Guest138 (~Guest138@88.103.7.38)
[17:16:35] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e82c:818b:b4b5:189f)
[17:16:40] <grym> dob1: ideally, nothing
[17:17:02] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:17:11] <grym> in practice, you can have order-sensitive imports, but if that happens you should fix it so that it no longer happens
[17:17:11] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[17:17:36] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[17:19:41] <dob1> grym, ok
[17:20:24] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:20:36] *** Joins: kts (~kts@103.73.237.124)
[17:21:12] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[17:21:28] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:22:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:24:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:25:37] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:26:13] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[17:26:38] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[17:27:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:27:03] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:27:08] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:28:50] *** Joins: polyrob_ (~rob@user/polyrob)
[17:29:21] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[17:29:32] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:29:39] *** Quits: five6433 (~five6@8.40.26.50) (Read error: Connection reset by peer)
[17:29:48] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Remote host closed the connection)
[17:29:49] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 240 seconds)
[17:29:53] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[17:29:55] *** polyrob_ is now known as polyrob
[17:30:02] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[17:30:05] *** Joins: five6433 (~five6@8.40.26.50)
[17:31:18] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi)
[17:31:30] *** Joins: nyah (~nyah@94.6.71.219)
[17:31:50] *** Joins: paulrf (~paulrf@45.134.140.8)
[17:32:22] *** Joins: Guest40 (~Guest40@2001:9e8:33d:6c00:8da3:fb85:7121:7977)
[17:33:05] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:33:57] <Schrostfutz_> Hi, I have an issue with pandas: I have a dataframe where `.duplicated().any()` returns False, but `unstack()` fails, referring to duplicate data. How could I debug this?
[17:37:58] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[17:38:38] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:39:06] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[17:39:41] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Read error: Connection reset by peer)
[17:39:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:40:15] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[17:40:32] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[17:41:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:41:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:44:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:44:37] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[17:45:02] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[17:47:12] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[17:47:40] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[17:48:36] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[17:49:23] *** Joins: Fiji_ (~Fiji@user/fiji)
[17:49:57] *** Joins: xkuru (~xkuru@user/xkuru)
[17:50:19] *** Joins: enbonnet (~enbonnet@186.107.217.210)
[17:50:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[17:50:28] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:50:33] *** Quits: DonRichie (~DonRichie@ricl.de) (Quit: bye)
[17:50:51] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[17:51:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:52:36] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[17:52:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:52:49] *** Joins: digilink (~digilink@user/digilink)
[17:53:17] *** Joins: DonRichie (~DonRichie@ricl.de)
[17:53:54] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[17:54:07] *** Joins: fikran (~fikran@user/fikran)
[17:54:37] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[17:54:37] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[17:54:45] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[17:54:56] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:55:38] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[17:56:26] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[17:56:55] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[17:56:55] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:57:30] *** Quits: jcbsv (~jcbsv@185.247.236.137) (Quit: Textual IRC Client: www.textualapp.com)
[17:57:33] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:57:53] *** Joins: Guest87 (~Guest87@n219078017247.netvigator.com)
[17:58:26] *** Quits: Guest87 (~Guest87@n219078017247.netvigator.com) (Client Quit)
[17:58:33] <diverdude> I have a huge json file which i cannot load into memory (the file is many gb). I need to extract some content (not everything) using python.... i cannot do `json.load` because it will load everything into memory. So how do i then extract the content i need from the json file?
[17:58:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:58:57] *** Quits: matkor (~matkor@ns0.ant.gliwice.pl) (Quit: Konversation terminated!)
[17:59:09] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:59:44] *** Joins: Guest8552 (~Guest85@105.112.44.91)
[17:59:48] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[17:59:52] <The-Compiler> diverdude: you are looking for a so called "streaming parser" - perhaps something like https://pypi.org/project/json-stream/
[18:00:47] <supakeen> Note that streaming parsers tend to work very differently from other parsers, so you'd be partially having your own parsing to just keep track of how deep you are and for what key a certain value is :)
[18:00:56] *** Joins: Guest8535 (~Guest85@105.112.44.91)
[18:01:06] <grawity> is it a single json object, or is it many json objects one-per-line?
[18:01:29] <mawk> put a } somewhere in the middle of the data and it will have a nonzero chance of terminating the document
[18:01:35] <The-Compiler> :D
[18:01:57] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[18:02:25] <grym> if you can, streaming parse it once ... into a database
[18:02:30] <grym> and then just query that
[18:02:39] *** Quits: Guest8552 (~Guest85@105.112.44.91) (Client Quit)
[18:03:00] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[18:03:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:03:08] *** Joins: rsx (~dummy@ppp-188-174-152-2.dynamic.mnet-online.de)
[18:03:37] *** Quits: emf (~emf@2620:10d:c090:400::5:b9c2) (Read error: Connection reset by peer)
[18:03:44] <diverdude> grawity: its a single object which has some sub arrays unfortunately
[18:03:47] *** Joins: kts (~kts@103.73.237.124)
[18:04:01] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[18:04:09] *** homura is now known as pamela22
[18:04:33] *** Joins: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de)
[18:04:33] *** Quits: Guest8535 (~Guest85@105.112.44.91) (Client Quit)
[18:04:53] *** Quits: menace (~someone@ppp-93-104-175-249.dynamic.mnet-online.de) (Changing host)
[18:04:53] *** Joins: menace (~someone@user/menace)
[18:04:57] *** menace is now known as Deknos
[18:05:05] *** Joins: emf_ (~emf@2620:10d:c090:400::5:b9c2)
[18:05:58] *** Joins: netpipe (~netpipe@user/netpipe)
[18:07:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:09:09] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6) (Remote host closed the connection)
[18:09:10] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[18:09:25] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:09:42] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6)
[18:09:51] <grym> diverdude: do you know enough about the structure of the file to (urg) hand-edit it into a few smaller ones?  if it's [{},{}, ...  ] for example, you can split that up
[18:10:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:10:30] <grym> diverdude: (something like jq might be able to help you inspect things, i think it won't eat the whole file at once)
[18:10:52] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:11:17] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:12:18] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:13:17] *** Quits: delvian (~delvian@41.13.200.188) (Quit: Leaving)
[18:13:31] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:13:59] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6) (Ping timeout: 250 seconds)
[18:14:09] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[18:14:24] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:14:30] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[18:14:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[18:15:01] *** Parts: paulrf (~paulrf@45.134.140.8) (Leaving)
[18:16:01] *** Joins: delvian (~delvian@41.13.200.188)
[18:16:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:16:52] *** Joins: montybanksnyc (~montybank@108.50.135.21)
[18:17:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 260 seconds)
[18:17:22] *** Joins: akaWolf (~akaWolf@akawolf.org)
[18:18:18] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[18:18:52] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[18:19:20] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 256 seconds)
[18:19:43] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[18:20:08] <NoImNotNineVolt> what's that tool that people use with pyenv? where you set a python version automagically based on cwd?
[18:20:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:20:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:20:34] *** Joins: newdimension (~newdimnes@user/newdimension)
[18:20:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:21:09] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[18:21:17] *** Joins: Furai (~Furai@furai.pl)
[18:21:32] <NoImNotNineVolt> oh, nm, `pyenv local` :P
[18:21:47] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:22:11] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[18:22:32] *** Joins: blcyber (~blcyber@216.74.235.178)
[18:22:55] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:23:35] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[18:24:31] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[18:24:49] <SnoopJ> there's also direnv if you want "activate this venv in this directory" behavior
[18:24:50] <grym> NoImNotNineVolt: i use direnv
[18:24:55] <grym> it's gr8!
[18:25:08] <SnoopJ> pyenv's local just lets you change which 'root' Python you'll be getting
[18:25:13] <sunny93> Why `mypy myfile.py ` has more warnings (notes) than `mypy --strict myfile.py` ? Shouldn't the latter gives the most warnings?
[18:27:27] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[18:27:46] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:27:50] * Speed2u still messing around with my "translator".. cant for my life figure out how to treat a dictionarykey containing multiple chars as "one". i got some advice reading about prefix code in here but i honestly dont understand a thing
[18:27:53] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[18:28:12] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[18:28:13] <cdown> sunny93: not necessarily, if the checking determines an error closer to the source.
[18:28:56] *** Joins: MercilessDeth (~brad@136.49.59.177)
[18:29:46] *** Joins: andreasbuhr (~quassel@p549dbe60.dip0.t-ipconnect.de)
[18:30:20] <sunny93> don't get it. Isn't specifying `--strict` the strict mode which is the strictest?
[18:30:25] <sunny93> :(
[18:31:05] <SnoopJ> sunny93, it would help to see an example of what you're talking about.
[18:31:12] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[18:31:16] <cdown> you're going to need to show a before and after to determine if it's reasonable. more strict doesn't necessarily mean more errors, just different errors.
[18:31:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:32:04] <NoImNotNineVolt> hm. okay, so, using tox, in my commands, i have a bunch of 'optional' commands (where i don't want their failure to prevent a successful tox run), so i prefix them with a hyphen as per tox docs, and this works fine, for the most part
[18:32:07] *** Quits: andreasbuhr (~quassel@p549dbe60.dip0.t-ipconnect.de) (Client Quit)
[18:32:33] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[18:32:36] <NoImNotNineVolt> but for some commands, maybe a dependency isn't installed (e.g. npm), and so tox gets a ERROR: InvocationError: could not find executable 'npx'
[18:32:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d8-5.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:33:09] <NoImNotNineVolt> and this class of error apparently doesn't get ignored by the leading hyphen? because it causes the overall tox job to fail.
[18:33:17] <cdown> NoImNotNineVolt: you want whitelist_externals
[18:33:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:33:40] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:a69c:d91a:66fb)
[18:33:40] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:a69c:d91a:66fb) (Changing host)
[18:33:40] *** Joins: skapata (~Skapata@user/skapata)
[18:33:53] <cdown> (i think, although i'm not entirely sure)
[18:34:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9c5a-2241-ba3e-6a50.res6.spectrum.com)
[18:34:18] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[18:34:35] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[18:35:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:35:08] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:35:16] <sunny93> Ok give me 3 mins and pushing my files to gitlab
[18:35:16] <NoImNotNineVolt> cdown: thanks!
[18:35:22] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:35:23] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e82c:818b:b4b5:189f) (Remote host closed the connection)
[18:35:37] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e82c:818b:b4b5:189f)
[18:35:40] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:36:00] <NoImNotNineVolt> no wait, i'm already doing that :P
[18:36:02] <NoImNotNineVolt> allowlist_externals = npx
[18:36:19] <NoImNotNineVolt> i mean, when npm/npx is installed, it works fine.
[18:36:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:36:54] <NoImNotNineVolt> it's that when it's not installed, obviously that npx command in my tox commands is going to fail. but i thought the leading hyphen was supposed to prevent that failure from failing the whole tox job.
[18:37:24] <NoImNotNineVolt> but i guess the leading hyphen only prevents nonzero return values from failing the tox job.
[18:37:28] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Ping timeout: 256 seconds)
[18:37:54] <NoImNotNineVolt> if the command itself fails to run, then that's not merely a nonzero return value. it's a failure to run the whole command. and that doesn't get silently swallowed by that leading hyphen.
[18:38:46] <NoImNotNineVolt> i guess i could create a wrapper script that returns nonzero status if npx is missing, lol.
[18:40:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:40:51] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[18:41:04] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:41:06] *** Joins: Viewday119 (~Viewday@user/viewday)
[18:41:12] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[18:41:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:41:58] *** Quits: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Remote host closed the connection)
[18:42:05] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[18:42:26] *** Joins: kts (~kts@103.73.237.124)
[18:42:27] *** Joins: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[18:42:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:43:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:43:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:43:37] *** Quits: bluedust (~bluedust@61.3.70.137) (Remote host closed the connection)
[18:44:09] *** Quits: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Remote host closed the connection)
[18:44:17] *** Joins: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50)
[18:45:23] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[18:45:28] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:45:42] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[18:45:54] *** Quits: Viewday119 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:46:56] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:47:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[18:47:23] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:47:44] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:48:14] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-10f3-8e8c-5022-288a.res6.spectrum.com)
[18:48:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:50:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:50:48] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:51:09] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[18:51:12] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[18:51:25] *** Joins: bloody (~bloody@user/bloody)
[18:51:54] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[18:52:00] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:52:08] *** Joins: Snyp (~Snyp@49.207.207.174)
[18:52:12] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[18:53:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:53:09] <sunny93> SnoopJ https://gitlab.com/ajfg93/tdecimal  I've uploaded my exercise to gitlab
[18:53:13] *** Joins: shad (~shad@user/shad)
[18:53:16] <Snyp> def join_path(**path_elements, check_exists=False):
[18:53:16] <Snyp>     ...
[18:53:17] <Snyp> How do I have check_exists=... as the _last_ argument?
[18:54:14] <sunny93> running `mypy Tdecimal.py` gives much more notes than `mypy --strict Tdecimal.py`
[18:54:27] * Snyp err.. nvm, seems it should be *path_elements, not **path_elements.
[18:54:37] *** Quits: pb1 (~Thunderbi@2a00:d5c0:20:0:206c:4692:b7f5:6b77) (Ping timeout: 240 seconds)
[18:55:02] <sunny93> and I think `mypy Tdecimal.py` seems more strict
[18:55:08] <wib_jonas> Snyp: do you want to accept it as a mandatory positional argument?
[18:55:22] <Snyp> wib_jonas nope
[18:55:31] <Snyp> optional
[18:55:52] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[18:55:55] <wib_jonas> Snyp: how do you distinguish between whether it's provided or not, if path_elements can have any length?
[18:56:09] <Wooble> wib_jonas: it's keyword-only.
[18:56:12] *** Joins: louis_ (~louis@host-92-5-43-207.as13285.net)
[18:56:27] <Snyp> wib_jonas i check path_elements > 0 in the body
[18:56:58] <wib_jonas> Snyp: is the double star before path_elements deliberate? don't you want a single star? double star is for keyword arguments
[18:57:03] <Snyp> but.. as Wooble says, once you capture the unnamed arguments via *args, check_exists becomes named arg only, right?
[18:57:14] <Snyp> It should be `def join_path(*path_elements, check_exists=False):` I guess
[18:57:18] <Snyp> single star
[18:57:18] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[18:57:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:57:52] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:58:02] <Wooble> Snyp: yeah, more kwargs after a ** wouldn't make sense because you're telling it to gather all the kwargs you didn't mention already...
[18:58:03] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[18:58:10] <wib_jonas> Snyp: yes, then just what you wrote, with a single star, should work
[18:58:30] * Snyp been coding in python for more than half a decade, only recently discovering the nuances of named/unnamed/always-named arguments. 
[18:58:35] <Snyp> ah
[18:58:42] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[18:58:44] <Snyp> got it. thanks
[18:59:33] <Wooble> Snyp: not too hard to write python for years and never need such a thing :)
[18:59:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:00:09] *** Joins: louis__ (~louis@host-92-5-43-207.as13285.net)
[19:00:14] <Snyp> true.. unless you are a library implementer i guess, it doesn't come up a whole lot.
[19:00:37] *** Quits: louis_ (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[19:01:11] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[19:01:12] <wib_jonas> Snyp: half a decade doesn't count here, the slash thing in the function header was only added in 2019. besides, you can write lots of code without having to use vararg\ functions. there aren't many interfaces that require such a function as callback or anything.
[19:01:35] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:01:48] *** Quits: louis__ (~louis@host-92-5-43-207.as13285.net) (Remote host closed the connection)
[19:02:10] *** Joins: louis__ (~louis@host-92-5-43-207.as13285.net)
[19:02:32] *** Joins: rMdes9 (~rmdes@my.armada.digital)
[19:02:45] <Snyp> wib_jonas I see, didn't know. on a tangential note, the way fastapi uses default arguments to denote _source_ and constraints on values is super weird. feels abusy.
[19:03:08] <Snyp> (doesn't take time to get used to ofc)
[19:03:49] *** rMdes9 is now known as rMdes
[19:04:04] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:06:02] *** Quits: louis__ (~louis@host-92-5-43-207.as13285.net) (Read error: Connection reset by peer)
[19:06:15] *** Joins: louis__ (~louis@host-92-5-43-207.as13285.net)
[19:06:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:06:26] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[19:07:11] <SnoopJ> sunny93, --strict mode is erroring out much sooner, because of Line 15 of Tdecimal.py. If you annotate `decimal_point_length` correctly (it should be Optional[int]) the output is much more similar
[19:09:52] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2d06:fff0:d105:7c1)
[19:10:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:11:59] *** Joins: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247)
[19:12:47] *** Joins: cthulchu (~Cthulchu@ool-18e454e1.dyn.optonline.net)
[19:13:49] <sunny93> Ahhhh, so that's how it works
[19:14:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:14:31] <sunny93> thank you J, let me try again with Optional[int]
[19:15:33] <SnoopJ> I think it is, I'm not entirely sure what the behavior is re: early exit, but yea, putting that annotation in place resolves the apparent discrepancy
[19:15:35] *** Quits: tristan_ (~tristan@223.62.163.206) (Remote host closed the connection)
[19:16:14] *** Joins: tristan_ (~tristan@223.62.163.206)
[19:16:46] <sunny93> ya I think it's what you said : early exit
[19:16:54] <sunny93> :P
[19:18:04] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[19:18:39] <SnoopJ> it doesn't seem to just drop everything as soon as it sees an error, but maybe there are multiple phases and it errors after an earlier phase here
[19:18:48] * SnoopJ doesn't know much about mypy's innards
[19:20:04] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[19:20:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:20:49] *** Joins: moog (~moog@107.126.53.135)
[19:21:13] <sunny93> ;-)  I am good with that info
[19:21:13] <jinsun> it is not really early exit, the strict mode treats the type like it is annotated, so it treats it like int everywhere and allows doing math on it, but doesn't allow assigning None
[19:21:22] <jinsun>  the "normal" mode tries being "helpful" and converts the int to Optional[int] because you assigned None to it, then later it disallows any math operations because they are not valid for None
[19:21:37] *** Quits: louis__ (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[19:22:13] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[19:23:04] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[19:23:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:24:12] *** Quits: Harlin_ (~DonQixote@63-230-76-242.clsp.qwest.net) (Quit: Leaving)
[19:24:29] *** Joins: Harlin (~DonQixote@63-230-76-242.clsp.qwest.net)
[19:25:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:26:21] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:26:29] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:f34a:ecf0:7be8:91cb) (Quit: pvergain)
[19:28:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:28:46] *** Quits: foozle (~foozle@2001-b011-c040-13fe-5941-1239-e073-b67c.dynamic-ip6.hinet.net) (Quit: Leaving)
[19:29:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:30:32] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[19:30:36] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Read error: Connection reset by peer)
[19:30:59] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[19:31:31] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[19:31:49] <SnoopJ> thanks jinsun, that makes sense
[19:32:52] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:34:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:34:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:35:56] *** Joins: emf (~emf@2620:10d:c090:400::5:b9c2)
[19:36:43] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:37:01] <sunny93> thanks too
[19:37:37] *** Quits: emf_ (~emf@2620:10d:c090:400::5:b9c2) (Ping timeout: 240 seconds)
[19:38:06] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[19:38:07] *** Joins: ckopn (~evg@70.8.3.93.rev.sfr.net)
[19:38:12] *** Parts: ckopn (~evg@70.8.3.93.rev.sfr.net) ()
[19:38:48] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[19:39:25] *** Joins: fanis30 (~anon@adsl-144.37.6.161.tellas.gr)
[19:39:47] *** Joins: MrFantastik (~f@176.108.141.162)
[19:42:30] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca)
[19:42:42] *** Joins: reedrichards (~f@176.108.141.162)
[19:43:28] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[19:43:44] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:44:20] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6)
[19:44:46] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:44:54] *** Quits: MrFantastik (~f@176.108.141.162) (Ping timeout: 256 seconds)
[19:45:15] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:45:52] *** Quits: nicoz- (unixlab@ubuntu/member/nicoz) (Quit: ZNC - https://znc.in)
[19:45:53] *** Joins: unyu (~pyon@user/pyon)
[19:46:16] *** Joins: Guest94 (~Guest94@8.44.158.71)
[19:47:37] *** Quits: Guest94 (~Guest94@8.44.158.71) (Client Quit)
[19:47:45] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:48:18] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:49:17] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:49:18] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Quit: Oooh mysterious girl!)
[19:49:25] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:49:27] *** Joins: Guest30 (~Guest30@211.230.53.39)
[19:50:07] *** Quits: Guest30 (~Guest30@211.230.53.39) (Client Quit)
[19:50:24] *** Joins: smoke (~smoke@user/smoke)
[19:51:01] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:51:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:51:37] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Client Quit)
[19:51:45] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[19:52:03] <cdown> NoImNotNineVolt: here you go :-) https://github.com/tox-dev/tox/pull/2316
[19:52:09] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[19:52:13] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 240 seconds)
[19:52:22] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:52:29] <NoImNotNineVolt> cdown: <3 <3 <3
[19:53:07] *** Joins: Atque (~Atque@user/atque)
[19:53:27] *** Quits: mathe (~wellmathe@85.251.70.233.dyn.user.ono.com) (Remote host closed the connection)
[19:53:49] *** Joins: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[19:54:22] *** Joins: mathe8989 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[19:54:36] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:54:56] *** Quits: mathe8989 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Client Quit)
[19:55:17] *** Quits: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247) (Ping timeout: 240 seconds)
[19:55:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:57:25] *** Parts: ocherno (~ocherno@12.235.230.69) (Leaving)
[19:57:33] *** Joins: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247)
[19:57:51] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[19:57:52] *** Joins: aniketgm (~aniketgm@49.36.105.189)
[19:58:30] *** Joins: roro (~roro@78.192.226.182)
[19:58:32] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[19:58:49] <roro> Hello what does the -> mean in this method def _safety_checks_prod_master(product_df: pd.DataFrame) -> bool:
[19:58:54] *** roro is now known as Guest1457
[19:58:59] <llanhmod>  Hi, when running `heroku run python manage.py shell` I get my shell however I am unable to import the requests module, despite the requirement already being satisfied in site-packages. Any tips on this?
[19:59:24] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:59:24] <SnoopJ> Guest1457, it's annotating the return type. `-> bool` indicates the function should return a bool
[19:59:25] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:59:49] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:59:51] <llanhmod> I can import every other module found in requirements.txt except requests...strange.
[20:00:00] <Guest1457> thx
[20:01:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:01:20] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:03:13] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:03:27] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:03:28] *** Joins: fikran (~fikran@user/fikran)
[20:03:35] <Wooble> llanhmod: what's the error?
[20:03:36] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:03:50] <CodeMouse92> llanhmod: I'm coming in late. Confirming the obvious: you ensured that `requests` was installed in the environment you're using, yes?
[20:04:01] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca)
[20:04:02] <llanhmod> Wooble: the usual, No module named 'requests'
[20:04:19] <llanhmod> CodeMouse92: yep... pip list shows it...while in env
[20:04:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:04:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[20:04:39] <CodeMouse92> And that is the env you're running Python in? (I ask because, as a senior engineer, I've made that mistake multiple times)
[20:05:02] <llanhmod> CodeMouse92: yep... all other modules are present and able to be imported.
[20:05:03] <CodeMouse92> That is, if you then run `python3` in that same env and type `import requests`, does it fail?
[20:05:39] <llanhmod> well, python3 is 3.8... my python is 3.10. I'm using the 3.10 env...
[20:05:47] <llanhmod> never ran python3
[20:05:52] <llanhmod> not for this case anyway
[20:06:10] <llanhmod> and I am on Win32
[20:06:13] <CodeMouse92> llanhmod: within the env in question, python3 will point to whichever Python version you selected for that env
[20:06:19] <llanhmod> or...Windows_NT
[20:06:19] <CodeMouse92> Are you working with virtual environments?
[20:06:25] <llanhmod> CodeMouse92: yes
[20:06:42] <CodeMouse92> Okay. So python3 will equal python 3.10, if the venv was created with python 3.10
[20:06:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:06:53] <llanhmod> CodeMouse92: no..python3 is 3.8 on my system... python is 3.10
[20:06:54] <CodeMouse92> If you run python3 and get python3.8, you are not running the venv
[20:07:07] <CodeMouse92> llanhmod: You seem to misunderstand how virtual environments work
[20:07:12] <SnoopJ> a bare `pip` can get you into headaches beause of this kind of mismatch. https://snarky.ca/why-you-should-use-python-m-pip/
[20:07:21] <llanhmod> python3 --version in env shows 3.8.10
[20:07:29] <CodeMouse92> Then you may not be running in the venv
[20:07:35] <CodeMouse92> In the venv, look at venv/bin
[20:07:51] <CodeMouse92> you'll see there's a 'python3' there. When you activate a venv, *that* is the binary used
[20:07:55] <CodeMouse92> It doesn't care what your "system" offers
[20:08:33] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:08:48] *** Quits: Snyp (~Snyp@49.207.207.174) (Quit: Textual IRC Client: www.textualapp.com)
[20:08:58] *** Joins: JanC (~janc@user/janc)
[20:09:16] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[20:10:11] <CodeMouse92> llanhmod: So, let's start from the top. Create a fresh virtual environment via "python3.10 -m venv myvenv".
[20:10:14] <llanhmod> CodeMouse92: still here, just trying some troubleshooting independently. SnoopJ I think that may be relative... I didn't do python -m pip.
[20:10:25] <CodeMouse92> That will create a virtual environment called "myvenv"
[20:10:34] <SnoopJ> llanhmod, yes, and my point is that the problem you are reporting is very easy to get into if you don't
[20:10:36] <CodeMouse92> Then, activate with "venv\Scripts\activate.bat"
[20:10:37] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:10:43] <llanhmod> SnoopJ: I see
[20:10:48] <llanhmod> CodeMouse92: okay
[20:11:00] <SnoopJ> if you invoke pip "through" Python, you only ever have to worry that you're getting the right Python
[20:11:03] <CodeMouse92> Now, in your command line, you can use "python3" and it'll point to your virtual environment's own python3.10, NOT your system 3.8
[20:11:16] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:11:19] <CodeMouse92> Now you can run "pip install -r requirements.txt"
[20:11:44] <CodeMouse92> That will use "venv\bin\pip", the version on the virtual environment, NOT your system-wide pip
[20:11:56] <CodeMouse92> And it will install the packages to venv\bin instead of your system environment
[20:11:59] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:12:07] <jim> hi, what's the difference between exit() and sys.exit()?
[20:12:26] <CodeMouse92> Then, to test, (still in the venv), run "python3"...it should launch python3.10...and "import requests"
[20:12:29] <CodeMouse92> It should work
[20:12:32] <llanhmod> CodeMouse92: wait, so you're saying use the python3 command and I should have a 3.10 env?
[20:12:36] <SnoopJ> jim, exit() might not even be defined, for one thing.
[20:12:53] *** Joins: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com)
[20:12:58] <CodeMouse92> jim: Short version, exit() closes the interactive session. sys.exit() quits the Python program that's running.
[20:13:14] <CodeMouse92> You only use exit() in an interactive session, but in actual standalone Python projects, use sys.exit()
[20:13:46] <CodeMouse92> llanhmod: Only if you've activated the virtual environment. Re-read my instructions, you'll see that.
[20:13:52] <SnoopJ> or raise SystemExit (which is basically what sys.exit() does anyway)
[20:14:14] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[20:14:17] <llanhmod> CodeMouse92: okay, cause the repo is using 3.10.
[20:14:27] <CodeMouse92> the "repo"?
[20:14:37] <CodeMouse92> Your git repository?
[20:15:21] <CodeMouse92> A git repository doesn't "use" anything. It's just source code. Your code may be written to work *with* Python 3.10, but whether it's actually executed on Python 3.10 depends on how you run it.
[20:15:43] <CodeMouse92> llanhmod: Here. Read this. https://dev.to/codemouse92/dead-simple-python-virtual-environments-and-pip-5b56
[20:15:52] <llanhmod> CodeMouse92: not really needed details...I just mean the requirements for this setup are using python3.10
[20:16:26] <llanhmod> well, the assumption is that the local install is version 3.10
[20:16:28] <CodeMouse92> llanhmod: requirements.txt isn't magical. It just tells you what the environment needs to have for the code to work.
[20:16:29] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:16:36] <llanhmod> I'm sure I can use any version
[20:16:45] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Client Quit)
[20:16:56] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c006:a6d3:5f30:2560) (Quit: Leaving)
[20:17:06] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[20:17:07] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:17:07] <CodeMouse92> llanhmod: Take 15-20 minutes and work through the article carefully. There are some gaps in your understanding that you're tripping over.
[20:17:12] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[20:17:24] *** Joins: pepper (~pepper@user/pepper)
[20:17:34] <llanhmod> CodeMouse92: sure... I think SnoopJ pointed out my present issue. Thanks for the links and help also.
[20:17:37] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[20:18:23] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:4371:6bef:aafb:f58d) (Ping timeout: 252 seconds)
[20:18:36] <SnoopJ> llanhmod, the link I shared is less specific to virtual environments, just a good idea that alleviates some of the pain
[20:18:40] <llanhmod> CodeMouse92: so with your observation, does it still make sense that I have not setup a proper venv and I can import all other modules except requests?
[20:18:51] <llanhmod> SnoopJ: understood.
[20:18:55] *** Joins: paul424 (~tom@ip-5-172-233-237.multi.internet.cyfrowypolsat.pl)
[20:19:06] *** Joins: unixlab (unixlab@linuxlab.librient.com)
[20:19:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:19:23] <CodeMouse92> llanhmod: Yes. You happen to already have most of the modules in your requirements.txt installed on your system-wide environment.
[20:19:36] <CodeMouse92> Coincidentally, requests is the only one not installed system-wide.
[20:19:39] <llanhmod> CodeMouse92: true
[20:19:46] *** Quits: rsx (~dummy@ppp-188-174-152-2.dynamic.mnet-online.de) (Quit: rsx)
[20:19:48] <CodeMouse92> And that makes it *seem* like there's something weird going on.
[20:20:08] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[20:20:39] <CodeMouse92> When really, you're just working in the system-wide environment instead of the virtual machine.
[20:21:02] <CodeMouse92> Ergo why "python3" is using the system-provided Python 3.8, instead of the Python 3.10 that you set up the virtual environment to use.
[20:21:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:21:48] <Wooble> fwiw, windows venvs don't get a python3.exe anyway
[20:21:49] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:22:01] *** Joins: stonkey (~stonkey@user/stonkey)
[20:22:57] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:23:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:24:06] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[20:24:12] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:24:52] *** Joins: montpol (montpol@fine.mouses.xyz)
[20:26:16] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:27:46] <llanhmod> CodeMouse92: okay, so now I'm really confused. I installed requests system-wide and still getting a ModuleNotFoundError. while import requests. outside a virtualenv.
[20:28:25] <CodeMouse92> llanhmod: Yeah, uhm. Wrong direction. You don't want to just install it system wide. You want it in a virtual environment.
[20:28:39] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[20:28:46] <CodeMouse92> Literally just focus on creating, activating, and installing in a virtual environment.
[20:28:54] *** Quits: unixlab (unixlab@linuxlab.librient.com) (Changing host)
[20:28:54] *** Joins: unixlab (unixlab@ubuntu/member/nicoz)
[20:29:14] <llanhmod> CodeMouse92: Right, thought what I am doing doesn't need to be in a virtualenv. and still with the virtual I get the error. I'll step back as you said and retry from the top.
[20:29:26] *** unixlab is now known as nicoz-
[20:29:28] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:29:36] <CodeMouse92> llanhmod: Just as a rule, everything needs to be in a virtualenv until you know why it doesn't.
[20:29:43] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:29:59] <llanhmod> CodeMouse92: I'm am essentially following this: https://devcenter.heroku.com/articles/getting-started-with-python#install-app-dependencies-locally
[20:30:40] <CodeMouse92> llanhmod: Oh. Oh, yeah, okay, they're *assuming* you're in a venv without actually telling you to be.
[20:30:45] <CodeMouse92> Typical of most Python articles.
[20:30:53] *** Quits: Strom (strom@fedora/strom) ()
[20:30:53] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[20:30:55] *** Quits: Dotz0cat (~Dotz0cat@h146.184.39.162.static.ip.windstream.net) (Ping timeout: 268 seconds)
[20:31:00] <llanhmod> CodeMouse92: right, I assumed I should be though...
[20:31:00] <CodeMouse92> They leave out the "obvious" details, until no one covers the obvious, so it becomes non-obvious.
[20:31:09] <CodeMouse92> llanhmod: Did you read the article I posted to you yet?
[20:31:44] <llanhmod> CodeMouse92: honestly, nope! been working on my issue as I'm facing some time management practices. Will now though.
[20:31:56] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:32:04] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[20:32:13] <CodeMouse92> llanhmod: The article I shared will equip you to work on your issue.
[20:32:20] <CodeMouse92> Otherwise you're going into battle without a sword ;P
[20:32:31] *** Quits: mathe8787 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[20:33:00] *** Joins: Strom (strom@fedora/strom)
[20:33:05] <llanhmod> CodeMouse92: you wrote this?
[20:33:26] <CodeMouse92> llanhmod: I did
[20:33:31] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 250 seconds)
[20:33:32] *** Joins: Dotz0cat (~Dotz0cat@h82.194.187.173.dynamic.ip.windstream.net)
[20:33:39] <llanhmod> cool, you kirk and me may be related.
[20:33:48] *** Quits: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net) (Quit: Leaving)
[20:33:54] <CodeMouse92> kirk?
[20:33:58] *** nicoz- is now known as nicoz
[20:34:01] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:34:04] <llanhmod> doesn't matter
[20:34:19] <llanhmod> we share a popular last name is what I'm saying.
[20:34:41] *** Joins: faLUKE (~paolo@host-87-1-178-175.retail.telecomitalia.it)
[20:35:07] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:35:13] <CodeMouse92> llanhmod: Aha
[20:35:21] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[20:35:24] <faLUKE> hey, what you think is the easiest way to remove chars 3,6 from "hello world" ?
[20:35:39] <llanhmod> faLUKE: by index
[20:35:43] <CodeMouse92> faLUKE: Before I answer...this sounds suspiciously like homework?
[20:35:50] <Swayze> lol
[20:35:54] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:35:57] <Swayze> i think hes doing a coding test for a job
[20:36:06] <CodeMouse92> Either way...
[20:36:07] <SnoopJ> faLUKE, strings can't be mutated, but you can get the string with those chars dropped by `thestring[:3] + thestring[6:]`
[20:36:08] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:36:30] <mefistofeles> SnoopJ: that drops the range
[20:36:42] <faLUKE> CodeMouse92: NO
[20:36:44] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:36:44] * SnoopJ may have misread the question
[20:37:08] <CodeMouse92> faLUKE: kk, I'll take your word for it. I'm in the habit of checking...we do get a lot of students seeking homework answers (not just help)
[20:37:09] <faLUKE> this is not homework.  Just wonder if is there a short way to do it
[20:37:11] <Swayze> thats what he asked for
[20:37:19] <mefistofeles> I think they are looking for "helo orld"
[20:37:28] <faLUKE> mefistofeles: yes
[20:37:43] *** Joins: fling (~fling@user/fling)
[20:37:56] <SnoopJ> that's a little messier: `''.join(c for idx, c in enumerate(thestring) if idx not in {3, 6})` is probably what I'd write
[20:37:58] <CodeMouse92> faLUKE: SnoopJ is close. The thing to remember is that strings are iterable (e.g. a bit like arrays). Slice notation will be helpful here.
[20:39:01] <CodeMouse92> Yeah, that last SnoopJ solution would work.
[20:39:14] <SnoopJ> they both work, the first one just solves a different problem ;P
[20:39:23] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:39:59] *** Quits: enbonnet (~enbonnet@186.107.217.210) (Quit: Client closed)
[20:40:12] <CodeMouse92> s[:3] + s[4:6] + s[7:] works too...well, except I bungled the indices
[20:40:17] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:40:31] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:40:40] <faLUKE> Thanks SnoopJ, got it
[20:40:49] <CodeMouse92> Oh, no, I didn't bundle the indices.
[20:40:55] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.54)
[20:41:01] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:41:05] <The-Compiler> or turn it into a list, remove the indices (from behind), then turn it into a string again
[20:41:06] <CodeMouse92> Anyway, both those work. Which you use kinda depends on how many indices you're dropping
[20:41:17] *** Quits: Guest1457 (~roro@78.192.226.182) (Ping timeout: 240 seconds)
[20:41:25] <SnoopJ> yea, a list of strings could be appropriate
[20:41:31] <CodeMouse92> Just one or two, slicing may be faster (my way). More than two, or with any degree of pattern, Snoop's way is better
[20:42:15] <CodeMouse92> Converting to the list might work, if the string is short, but if it's a very long (or unpredictable length) string, the memory overhead is kinda a waste
[20:42:33] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[20:42:34] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:42:59] *** Joins: Guest70 (~Guest70@p200300063312500aecbd96c44f6e57cf.dip0.t-ipconnect.de)
[20:43:06] *** Parts: Guest70 (~Guest70@p200300063312500aecbd96c44f6e57cf.dip0.t-ipconnect.de) ()
[20:43:10] <SnoopJ> measuring is better than guessing, either way
[20:43:24] *** Joins: roro_ (~roro@78.192.226.182)
[20:43:32] <CodeMouse92> SnoopJ: yep, although lazy iteration is *always* cheaper than converting to list.
[20:43:51] <SnoopJ> CodeMouse92, the only thing saved by the generator comprehension here is the cost of the list itself
[20:43:58] <CodeMouse92> SnoopJ: Which is all I'm saving
[20:44:01] <SnoopJ> you're still paying for the objects that represent each char
[20:44:09] *** Joins: Elvanor (~elvanor@brithombar.elvanor.net)
[20:44:24] <SnoopJ> CodeMouse92, no, yours is saving more than that, because you don't get the object head for each char, you get it for each range
[20:44:45] <Elvanor> How can I obtain the "root exception" of a asyncio.CancelledError ?
[20:44:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:45:16] *** Quits: vladoski (~vladoski@2001:b07:add:d406:70e4:4e1:5eed:a7a) (Remote host closed the connection)
[20:45:20] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10eb:9295:449a:bca0:c3c9:f532)
[20:45:31] <Elvanor> If I use traceback.format_exc(), I see that the root exception is a KeyboardInterrupt which then cancelled an asyncio task
[20:45:56] <SnoopJ> CodeMouse92, i.e. "hello" is 54 bytes on my machine, but each of those chars as an object is 50 bytes
[20:46:01] <Elvanor> But how can I check that in my exception handler code? Eg, how do I use the error object to extract the root / original exception?
[20:46:06] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:46:12] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:46:19] <faLUKE> given myDict = {} how can I push 3 and 6 to myDict ?
[20:46:33] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:9c0:1948:7472:cb5d)
[20:46:43] <SnoopJ> faLUKE, `myDict[key] = val`, like any dictionary assignment
[20:46:49] <Elvanor> mydict[3] = foobar
[20:46:58] <CodeMouse92> faLUKE: Bear in mind, dictionaries only store key-value pairs.
[20:47:14] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:47:27] <CodeMouse92> So you don't just push 3 and 6. Are those the values, and what's their associated keys? Or visa-versa?
[20:47:28] <pi___> exit
[20:47:30] <faLUKE> SnoopJ: I see you used a dictionary in your function:  ''.join(c for idx, c in enumerate("hello world") if idx not in {3, 6}
[20:47:31] <pi___> quit
[20:47:37] <pi___> exit
[20:47:38] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Remote host closed the connection)
[20:47:38] <SnoopJ> faLUKE, that is a set, not a dict
[20:47:45] <faLUKE> SnoopJ: sorry, my bad
[20:47:57] *** Quits: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247) (Ping timeout: 240 seconds)
[20:48:07] <Elvanor> it's tricky, {} is a dict but {3, 6} a set
[20:48:10] *** Joins: dcaro (~dcaro@user/dcaro)
[20:48:22] <grym> Elvanor: and {3:6} is a dict again!
[20:48:24] <SnoopJ> {3, 6} couldn't be anything else, but {} can be a gotcha
[20:48:25] <Elvanor> I found that quite confusing actually when moving to Python at first
[20:48:26] <faLUKE> so: mySet.add(3) mySet.add(6) ?
[20:48:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:48:30] *** Joins: Viewday11 (~Viewday@user/viewday)
[20:48:31] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[20:48:32] <mefistofeles> quiz question, what's {{}} ?
[20:48:39] <Vornicus> an error
[20:48:50] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[20:49:07] <CodeMouse92> mefistofeles: {{},{}} would be a set of dictionaries tho
[20:49:11] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10fe:29e:449a:bca0:c3c9:f532) (Ping timeout: 252 seconds)
[20:49:14] <Vornicus> that would also be an error
[20:49:15] <Elvanor> Anyone know about how to extract root exception of an exception?
[20:49:20] <SnoopJ> which is also a TypeError, yea
[20:49:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[20:49:40] <CodeMouse92> true, because set is not hashable. Derp
[20:49:40] <The-Compiler> CodeMouse92: {{}} is also a set containing one dict, but dicts are not hashable
[20:50:01] <mefistofeles> CodeMouse92: dict is not hashable
[20:50:03] <CodeMouse92> Right, yep. I knew that.
[20:50:06] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[20:50:10] <CodeMouse92> GOOD MORNING I NEED MOAR COFFEE.
[20:50:49] *** Joins: ommadawn (~ommadawn@165.225.11.44)
[20:51:10] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[20:51:26] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:52:03] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:52:19] *** Joins: humberto1 (~humbertow@189.131.31.180)
[20:53:19] *** Quits: delvian (~delvian@41.13.200.188) (Ping timeout: 256 seconds)
[20:53:41] *** Joins: bluedust (~bluedust@61.3.70.137)
[20:53:42] *** Joins: badsektor (~badsektor@user/badsektor)
[20:53:42] <Elvanor> really strange, when I print the error I obtain an empty string, but traceback.format_exc() prints lots of useful info
[20:53:49] *** Quits: dcaro (~dcaro@user/dcaro) (Remote host closed the connection)
[20:53:56] <Elvanor> I am really lost about how to use exception instances in Python
[20:54:10] *** Joins: dcaro (~dcaro@user/dcaro)
[20:54:37] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[20:54:51] <SnoopJ> Elvanor, are you printing str(exc) or repr(exc)? The latter is probably more useful to you.
[20:55:15] *** Quits: pi___ (~pi@51.37.244.66) (Quit: Lost terminal)
[20:55:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[20:56:20] <Elvanor> I am using print("Error", error)
[20:56:30] <Elvanor> so I guess this uses str(exc)
[20:56:42] *** Quits: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:56:49] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:56:58] <Payam> Hi what language server do you use for python? Jedi is incredebly slow for me
[20:57:01] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 240 seconds)
[20:57:17] *** Quits: Dotz0cat (~Dotz0cat@h82.194.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[20:57:30] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:57:40] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[20:57:49] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[20:58:12] *** Joins: delvian (~delvian@41.13.200.188)
[20:58:13] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:58:17] <Elvanor> repr(exc) is better indeed it prints the instance of the class
[20:58:31] <Elvanor> but again, this does not help me as I need the root exception, not the current instance
[20:58:31] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[20:58:59] <SnoopJ> Elvanor, print(obj) and print(str(obj)) are synonyms
[20:59:01] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[20:59:18] <grym> Payam: whatever my ide provides, which is either pylance or whatevevr pycharm uses
[20:59:28] <grym> something lsp-ish, i imagine
[20:59:36] <SnoopJ> I don't really know what "root exception" means, though. Are you talking about another exception that is the "cause" of the current one?
[20:59:46] <Payam> pylance won't recognize gtk libs
[21:00:07] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:00:07] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 256 seconds)
[21:00:13] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[21:01:14] <Elvanor> SnoopJ: yes
[21:01:18] *** Joins: hanaan (~naan@user/naan)
[21:01:22] <llanhmod> hm, CodeMouse92 SnoopJ , this NoModuleFoundError must be something heroku is throwing, because doing the import without the heroku ...python shell, works.
[21:01:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:02:03] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:02:07] *** hanaan is now known as Naan
[21:02:13] *** Joins: Dotz0cat (~Dotz0cat@71.31.239.210)
[21:02:19] <Elvanor> https://pastebin.com/AGUTsaUN
[21:02:33] *** Joins: dreamon (~dreamon@pd9503da5.dip0.t-ipconnect.de)
[21:03:03] <Elvanor> this is the stacktrace. I receive a CancelledError in my client code, but the "root cause" is a KeyboardInterrupt that happens inside asyncio internals
[21:03:05] *** CuriousErnestBro is now known as fuckgrym
[21:03:18] *** fuckgrym is now known as CuriousErnestBro
[21:03:26] <Elvanor> I'd like to check the error in my client code, to get access to the root cause
[21:05:01] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 240 seconds)
[21:05:17] <llanhmod> actually, I'm using the manage.py shell...so that is django. great...even more confusion.
[21:05:31] * llanhmod breaktime
[21:05:42] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[21:05:52] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[21:05:53] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[21:05:53] *** Joins: corgi (~corgi@user/corgi)
[21:06:25] *** Joins: Guest15 (~Guest15@82-217-99-124.cable.dynamic.v4.ziggo.nl)
[21:06:30] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:06:41] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e82c:818b:b4b5:189f) (Ping timeout: 268 seconds)
[21:07:35] *** Joins: panella32 (~panella32@89.46.114.44)
[21:07:37] *** Joins: Betal (~Betal@user/betal)
[21:07:39] *** Joins: blcyber (~blcyber@216.74.235.178)
[21:08:01] *** Quits: Guest15 (~Guest15@82-217-99-124.cable.dynamic.v4.ziggo.nl) (Client Quit)
[21:08:02] <llanhmod> ah, so it works with just python interactive, and it works with manage.py shell, but not when I use the heroku run command. okay!
[21:08:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:752b:b5d9:117e:4687)
[21:08:37] *** Quits: tWqaq_ (~tWqaq@240e:389:5d1c:ff00:e2a:9cc9:ce79:cf50) (Quit: Leaving)
[21:09:49] <SnoopJ> Elvanor, the information you want may be in __context__ and/or __cause__, but you'll want to read the documentation about these too
[21:09:51] *** Quits: palindrome (~jvargas@46.7.194.191) (Quit: WeeChat 3.4)
[21:10:02] <SnoopJ> https://docs.python.org/3/library/exceptions.html#exception-context
[21:10:02] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[21:10:57] <Payam> I still can not make gtk work with asyncio
[21:11:57] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 240 seconds)
[21:12:53] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[21:13:03] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[21:13:07] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:13:09] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:13:19] *** Joins: sshine (~simon@hubris.eta.solutions)
[21:13:24] <Elvanor> SnoopJ: I checked __cause__, it's None
[21:14:17] *** Quits: Dotz0cat (~Dotz0cat@71.31.239.210) (Ping timeout: 256 seconds)
[21:14:57] <sshine> if I run some sage code as a python3 script, I get something like "ImportError: cannot import name complex_number" -- but if I run 'sage' and import the python code and run it, it works fine. I wonder, must I import something in my python script to have it adapt properly to the sage environment?
[21:15:09] *** Joins: Dotz0cat (~Dotz0cat@h251.12.31.71.dynamic.ip.windstream.net)
[21:15:34] *** Quits: Guest40 (~Guest40@2001:9e8:33d:6c00:8da3:fb85:7121:7977) (Quit: Client closed)
[21:15:59] *** Joins: whaley (~whaley@2603-6080-a301-33d1-0c5f-5454-d0c6-78ae.res6.spectrum.com)
[21:16:39] <sshine> ah, 'from sage.all import *' is probably what I'm looking for.
[21:17:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[21:17:28] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:17:34] <SnoopJ> Elvanor, did you read the link I just shared? Sometimes the context/cause will take this value.
[21:17:48] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[21:18:03] *** Quits: tobybl_ (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[21:18:45] *** Joins: lucasb (uid333435@id-333435.hampstead.irccloud.com)
[21:18:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:18:58] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[21:19:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:19:21] *** Joins: cpk33 (~cpk33@2605:a601:ab34:3f00:b917:4850:49e7:4c9c)
[21:19:50] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.3)
[21:19:59] <cpk33> cool, ty deniska
[21:22:03] *** Joins: Guest16 (~Guest16@188.147.99.35.nat.umts.dynamic.t-mobile.pl)
[21:22:31] *** Quits: aniketgm (~aniketgm@49.36.105.189) (Quit: leaving)
[21:22:52] *** Quits: Guest16 (~Guest16@188.147.99.35.nat.umts.dynamic.t-mobile.pl) (Client Quit)
[21:22:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:23:15] *** Quits: corgi (~corgi@user/corgi) (Quit: o_O)
[21:24:11] *** Joins: Xano (~Xano@2a00:23c4:4204:700:da13:7739:2ebe:a9a1)
[21:24:30] <Payam> Is anyone here that can help a desperate guy with his gtk threading issue? :(
[21:25:13] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[21:25:16] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:25:41] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[21:25:52] *** Joins: scottwi (~scottwi@075-139-249-254.res.spectrum.com)
[21:26:20] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[21:26:36] <ELFrederich> just went to python's itertools page to copy the pairwise function like I do all the time (either that or install more_itertools).  Pleasantly surprised to see it's finally added in 3.10
[21:26:37] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:27:28] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[21:29:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[21:30:20] *** Joins: Common (~Common@096-033-221-075.res.spectrum.com)
[21:30:31] *** Quits: Common (~Common@096-033-221-075.res.spectrum.com) (Changing host)
[21:30:31] *** Joins: Common (~Common@user/common)
[21:30:35] *** Quits: flea- (flea@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[21:30:48] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:31:19] *** Joins: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net)
[21:31:19] *** Quits: corgi (~corgi@c-71-202-47-75.hsd1.ca.comcast.net) (Changing host)
[21:31:19] *** Joins: corgi (~corgi@user/corgi)
[21:32:22] *** Joins: Atque (~Atque@user/atque)
[21:33:22] *** Joins: parv (~quass@user/parv)
[21:33:26] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:34:55] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:35:20] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:37:38] *** Joins: dowcet (~dowcet@50-255-131-161-static.hfc.comcastbusiness.net)
[21:37:42] *** dcaro is now known as dcaro_away
[21:37:58] *** Quits: bluedust (~bluedust@61.3.70.137) (Remote host closed the connection)
[21:38:22] *** cpk33 is now known as zZen33
[21:39:13] <feoh> Nice
[21:39:32] *** Joins: zeev (~zeev@2a03:c5c0:107d:c535:d9a4:5ffa:858e:8c55)
[21:39:34] <feoh> I love how the std lib is opening up to some very often used tools from the community
[21:39:49] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[21:39:53] *** Quits: dowcet (~dowcet@50-255-131-161-static.hfc.comcastbusiness.net) (Client Quit)
[21:40:04] <Wooble> eh, they just implemented something from the stdlib docs in the library itself in this case.
[21:40:31] <SnoopJ> which is still great because it's pretty hostile UX to have it in the docs :(
[21:41:01] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[21:41:05] *** CuriousErnestBro is now known as fuckrickyrick
[21:41:08] <Wooble> would be nicer if they moved *all* of the recipes into the library but that's not happening any time soon
[21:41:22] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:b525:7bd6:a774:7dc8) (Remote host closed the connection)
[21:41:27] <SnoopJ> speaking of docs... bjs, it seems that Barry at least is open to making it more obvious in the docs that functions implicitly return None unless they don't
[21:41:34] *** fuckrickyrick is now known as CuriousErnestBro
[21:42:37] *** Joins: bluedust (~bluedust@61.3.70.137)
[21:43:01] *** Quits: bluedust (~bluedust@61.3.70.137) (Remote host closed the connection)
[21:43:56] <bjs> SnoopJ: I still don't see a problem with just having an explicit "Returns ..." line in the docs for every (builtin) function.  Arguments about redundancy and/or slippery slopes seem contrived and unconvincing to me.
[21:44:45] <SnoopJ> I am inclined to agree
[21:44:48] <bjs> Sometimes the docs can be inconsistent,  sometimes they describe the types of things sometimes they don't, sometimes they give examples sometimes they don't, sometimes they say the return value and sometimes they don't.  Even if there's some hidden (to me) variable that makes up the system
[21:44:52] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[21:44:56] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:55ef:d8ed:fd6a:7f1f)
[21:45:13] <ano> is there a way to determine if utf-8 char is a letter?
[21:45:17] *** Joins: sharksauce (sharksauce@user/sharksauce)
[21:45:49] <Wooble> ano: letter.decode('utf-8').isalpha()
[21:46:15] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: I have gone to sleep. ZZZzzz…)
[21:46:29] *** Joins: greedom (~greedom@p200300de670d0b002830866852377d49.dip0.t-ipconnect.de)
[21:46:54] <SnoopJ> you can also use unicodedata.cateory() to check the category if you're interested in it (isalpha() is basically doing this though)
[21:47:07] <feoh> bjs: I know I'm injecting myself into an existing conversation but TOTALLY agree. Implicit None return was by far the most confusing aspect of coming to Python from Ruby.
[21:47:57] <SnoopJ> feoh, for context's sake: https://github.com/python/cpython/pull/30435
[21:48:16] <sshine> '你'.isalpha() # True -- kinda funny, since "alpha" refers to the greek alphabet.
[21:48:24] <feoh> tyvm
[21:48:31] *** Joins: Pandadub (~Barones@189.50.80.77)
[21:49:17] <Wooble> sshine: it's referring to ascii, really, since its name is a holdover from py2. Oddly, it returns whether the thing is a "letter", not "alphabetic"
[21:49:33] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:50:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:50:46] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Ping timeout: 245 seconds)
[21:51:07] <SnoopJ> isalpha checks for any one of: Ll, Lu, Lt, Lo, Lm
[21:51:19] <Wooble> (whether ideographs are "letters" was no doubt debated at length by the unicode consortium)
[21:51:32] <SnoopJ> https://github.com/python/cpython/blob/main/Objects/unicodectype.c#L288-L296
[21:51:50] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 256 seconds)
[21:52:03] <feoh> SnoopJ: Yeah I could go both ways on this one, but my issue with their response is that "make the documentation more clear about implicit function returns" is a bit, if you'll forgive me hand wavey and doesn't smell like an actionable solution :)
[21:52:24] <feoh> And as I say implicit None return bit me SO HARD SO MUCH until I actually internalized it
[21:52:24] <SnoopJ> feoh, yea it is much more "this isn't a problem" than it is "I don't like this solution to the problem"
[21:52:57] <SnoopJ> Wooble, what category would they be if not letters? ;P
[21:53:07] <feoh> Because in Ruby, saying 'return myvariable' is a code smell if the last expression evaluates to the value you want, and you will be SAD if you do that in Python-space :)
[21:53:07] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[21:53:30] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[21:54:21] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[21:54:33] <Wooble> SnoopJ: I dunno, I didn't do it.
[21:54:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[21:55:10] <SnoopJ> I don't know what the formal criteria for "letter" are, mind
[21:55:19] <e-snail> just to throw in my 2c, I'm a recent python convert who was used to Ruby, and this also bit me. Could have been made more clear to a new learner
[21:55:21] <SnoopJ> but most of the assigned codepoints are in one of those categories
[21:55:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[21:56:06] *** Quits: Rancorm (~meh@dhcp-253-9-2-159.pbband.net) (Quit: Rancorm)
[21:56:11] <jinsun> SnoopJ: maybe it would be better to just link to the typeshed annotation beside each function or maybe at the at the top of the page
[21:56:18] <SnoopJ> feoh, e-snail I would very much appreciate your perspective on how this could be clarified in the part of the tutorial that states it: https://docs.python.org/3/tutorial/controlflow.html#defining-functions
[21:56:35] <SnoopJ> ...although just stating it somewhere else in the docs doesn't *really* address the confusion imho
[21:56:39] <SnoopJ> but 4.7 is a mess
[21:56:54] *** Joins: timburke_ (~timburke@searspoint.nvidia.com)
[21:56:57] *** Joins: onichomp (~onichomp@2806:264:4408:8:186f:68f:fe03:3d72)
[21:57:07] <Wooble> SnoopJ: "An element of an alphabet. In a broad sense, it includes elements of syllabaries and ideographs."
[21:57:20] *** Quits: onichomp (~onichomp@2806:264:4408:8:186f:68f:fe03:3d72) (Read error: Connection reset by peer)
[21:57:30] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 256 seconds)
[21:57:40] <feoh> SnoopJ: Stupid thought. Doesn't iPython actually also print None after the output to show that's what the function actually returned?
[21:57:58] <Wooble> also "Informative property of characters that are used to write words."
[21:57:58] *** Joins: onichomp (~onichomp@2806:264:4408:8:186f:68f:fe03:3d72)
[21:58:00] <SnoopJ> feoh, nope, not by default anyway
[21:58:29] <SnoopJ> Wooble, I didn't realize that >90% of codepoints were one of the letter categories. It kinda make sense though :)
[21:58:30] <jinsun> the repls usually special case None and don't show it
[21:58:42] <feoh> Ah right
[21:58:53] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:58:53] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[21:58:57] <SnoopJ> it seems like IPython doesn't even create an output cell, but it could be doing that and hiding it
[21:59:00] <e-snail> SnoopJ, well one thought is, since the paragraph in question begins with "Coming from other languages, you might...", maybe it could address the issue directly, noting that other languages return the last expression implicitly and that's not the case with Python
[21:59:03] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[21:59:24] <e-snail> *there are other languages that [not trying to imply it's the norm]
[21:59:27] <Wooble> SnoopJ: probably close to all of those are CJK too :)
[21:59:32] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[21:59:37] *** Quits: timburke (~timburke@157.131.128.146) (Ping timeout: 256 seconds)
[21:59:41] <SnoopJ> [Unihan intensifies]
[21:59:54] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[22:00:23] <Wooble> "things from an alphabet... except almost all of them are not from languages with alphabets."
[22:00:52] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:01:07] <SnoopJ> That is probably the broader debate: what actually does "alphabet" define
[22:01:26] <SnoopJ> I would guess their definition is more like "collection of graphemes" than anything to do with Greek etymology
[22:01:31] <Wooble> they define alphabet, too. "A writing system in which both consonants and vowels are indicated."
[22:01:33] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Read error: Connection reset by peer)
[22:01:38] <SnoopJ> ...huh!
[22:01:43] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:01:55] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[22:01:56] *** Quits: timburke_ (~timburke@searspoint.nvidia.com) (Read error: Connection reset by peer)
[22:03:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[22:03:10] *** Quits: delvian (~delvian@41.13.200.188) (Ping timeout: 256 seconds)
[22:03:21] *** Joins: timburke_ (~timburke@157.131.128.146)
[22:03:33] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:06:09] <feoh> SnoopJ: I wonder if this is a human psychology thing, because reading that I actually thought "Wow the doc really IS very explicit about this. Why the heck couldn't/didn't I interlize it?)
[22:06:34] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:06:38] *** Joins: wombawomba (~andre@83.172.124.234)
[22:06:44] <SnoopJ> feoh, it doesn't help that it's on the second page of that section when viewed on my laptop screen
[22:06:44] <feoh> And to your point in the initial PR, I do wonder if it wouldn't help in every built-in to say something like "this returns None" or similar, but it's certainly debatable.
[22:06:44] <hardwire> Is this nuts? Using package metadata rather than autogen'ing version files.
[22:06:45] <hardwire> import pkg_resources
[22:06:45] <hardwire> __version__ = pkg_resources.get_distribution("bufeo3").version
[22:07:02] <hardwire> Not a lot on github backing this up.
[22:07:06] <SnoopJ> everybody seems to agree that it's a very important property of functions, it seems like the kind of thing you'd front-load before all that exposition, probably in its own paragraph about returns...
[22:07:15] <feoh> SnoopJ: you're onto something there I think. It's also nestled into a HUGE section embodying vast chunks of the language
[22:07:23] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:07:40] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:08:08] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[22:09:01] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10eb:9295:449a:bca0:c3c9:f532) (Ping timeout: 240 seconds)
[22:09:13] *** Joins: sabry (~sabry@197.37.99.27)
[22:09:58] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Ping timeout: 256 seconds)
[22:10:09] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:10:20] <SnoopJ> this is why I think even if that section is cleaned up, a link to it on the built-ins page might still be helpful as a reminder
[22:10:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:11:06] <SnoopJ> maybe one day it'll do what jinsun suggested, making an already not-huge lift even smaller
[22:11:06] *** Joins: lntl (~joey@24.136.23.254)
[22:12:14] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:12:49] *** Joins: fikran (~fikran@user/fikran)
[22:13:18] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[22:14:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:15:40] <ELFrederich> designing some Python classes for the game Wordle.  Basics of the game is you guess a 5 letter word and you get feedback about each letter.  There are 3 options, correct, correct but in wrong position, or the letter isn't in the word. (... continued)
[22:15:41] <feoh> tbh that was like THE ONLY non intuitive aspect I really blocked on when learning
[22:16:13] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:16:14] <feoh> SnoopJ: And to be fair part of that was coming from Ruby where code reviewers will ding you for every single specific uneeded return
[22:16:29] <SnoopJ> feoh, I'm relieved to be reminded that this *is* a problem people are snagging on. I questioned myself when I got some core pushback there
[22:16:33] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[22:16:44] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[22:16:52] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:17:16] <SnoopJ> although I can sort-of understand the desire to avoid a tidal wave of trivial PRs. not really though :)
[22:17:20] *** Quits: miique_ (~miique@181.46.139.166) (Ping timeout: 256 seconds)
[22:17:29] <ELFrederich> I've created a LetterFeedback(Enum) class with "correct", "wrong", and "wrong_place".  How should I represent a result of a guess.  Do I really need 3 classes?  One for the overall result.  One for the individual letter results (2 field, one character and one LetterFeedback value)?
[22:17:32] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:17:33] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[22:17:37] *** Joins: blcyber (~blcyber@216.74.235.178)
[22:17:42] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:17:44] *** Joins: miique (~miique@181.46.139.166)
[22:18:27] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:18:28] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[22:19:14] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[22:19:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:752b:b5d9:117e:4687) (Quit: Client closed)
[22:20:27] *** Joins: novns (~novns@user/novns)
[22:20:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:20:46] <lntl> In Scala, I can make a filter object and then call it on different iterables. Is this possible in Python? Something like filt = filter(criteria) and then filt(iterable1) and filt(interable2)
[22:21:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:22:23] <jinsun> there is probably something in more-itertools for that
[22:22:42] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:23:10] <Wooble> lntl: functools.partial
[22:23:41] <Wooble> lntl: (although usually a comprehension is nicer than filter())
[22:24:13] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:24:14] <ali1234> also it should be noted that functools.partial is just a convenience and it is not difficult at all to do it with pure python
[22:24:33] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[22:25:11] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[22:25:44] *** Joins: magla (~gelignite@55d42175.access.ecotel.net)
[22:25:58] <jinsun> ah yeah can just do partial(filter, func)
[22:26:38] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[22:26:49] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[22:27:46] *** Quits: sabry (~sabry@197.37.99.27) (Quit: Client closed)
[22:28:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:28:50] <axisys> cdown: I got it .. df[df['status'].str.contains('foo')][['hostname','status']] which displays the rows where 'status' is 'foo' instead of what I was doing in two steps where first get a new dataframe where 'status' is 'foo' and then display the 'hostname' and 'status' column from new dataframe
[22:29:39] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 256 seconds)
[22:29:41] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10eb:9295:449a:bca0:c3c9:f532)
[22:30:35] *** Joins: miique_ (~miique@181.46.139.166)
[22:30:44] *** Joins: Fiji- (~Fiji@user/fiji)
[22:31:04] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[22:32:37] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[22:34:06] *** Quits: Elvanor (~elvanor@brithombar.elvanor.net) (Quit: Konversation terminated!)
[22:34:45] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[22:35:17] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:36:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[22:36:12] *** Joins: zingos (~zingos@143.198.48.220)
[22:36:25] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[22:37:09] *** Quits: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro) (Remote host closed the connection)
[22:37:10] *** Quits: reedrichards (~f@176.108.141.162) (Ping timeout: 256 seconds)
[22:37:46] *** Joins: AlanMD (~AlanMD@5-12-13-215.residential.rdsnet.ro)
[22:38:20] <beastDivision> with subprocess is there a corssplatform way to execute a binary, like on windows, its run myprogram, but on unix it is ./myprogram, etc
[22:39:21] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:39:27] *** Joins: georgios (~georgios@user/georgios)
[22:39:48] *** Joins: tomeaton17 (~tomeaton1@2a02:c7f:16cc:cf00:ec3e:3cbe:3c69:d259)
[22:40:13] *** Quits: zeev (~zeev@2a03:c5c0:107d:c535:d9a4:5ffa:858e:8c55) (Quit: zeev)
[22:40:39] <tomeaton17> I have a 2d array and want to create a list from it, by splitting the 2d array into n row 2d arrays
[22:40:44] <tomeaton17> what is the best way to do that?
[22:40:45] <The-Compiler> beastDivision: those are the same thing essentially
[22:40:59] <phy1729> you don't need the ./ in python with shell=False. It's just necessary in a shell to tell the shell to not do a PATH lookup
[22:41:23] *** Joins: gusto (~Augustus@109.255.100.54)
[22:41:58] *** Joins: sean345 (~sean345@2601:281:8700:4b6f:b991:989f:6b07:27eb)
[22:42:13] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.54) (Ping timeout: 240 seconds)
[22:42:22] <SnoopJ> tomeaton17, are these numpy arrays, or Python lists?
[22:42:29] <SnoopJ> (or some third option..?)
[22:43:02] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10eb:9295:449a:bca0:c3c9:f532) (Ping timeout: 240 seconds)
[22:43:05] *** Quits: fanis30 (~anon@adsl-144.37.6.161.tellas.gr) (Quit: WeeChat 3.3)
[22:43:19] <beastDivision> yeah so I'm not seeing how to do this cross platform
[22:43:25] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[22:43:28] <tomeaton17> SnoopJ they are a pandas df
[22:43:53] *** Joins: kmh (~kmh@2a00:6020:5004:6800:155e:f714:239e:56bd)
[22:44:36] <zingos> hi, for threading.timer which is non-blocking, the execution that's gonna happen after X time is blocking or non-blocking as well?
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:29] <Inst> do you have a beginners channel?
[22:45:38] <SnoopJ> Inst, beginner questions are topical here
[22:46:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca)
[22:46:18] <Inst> okay, what's a dunder method? I'm reading on Quora on why Python OOP is hard to learn
[22:46:23] <SnoopJ> tomeaton17, do you want a DataFrame as the result?
[22:46:47] <bjs> Inst: they're just methods that Python calls for you to do things
[22:46:53] <Wooble> Inst: short for "double underscore", methods named like __this__
[22:46:54] <Inst> it seems to be citing dunder methods
[22:46:55] <SnoopJ> Inst, a "dunder" is any method whose name starts and ends with two underscores (a double underscore or "dunder"). e.g. __str__() is a dunder that defines how the object turns into a string
[22:47:12] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:21] <tomeaton17> SnoopJ no I am happy with just a list of 2d arrays
[22:47:28] <bjs> Inst: e.g. when you go `x == y` Python will automatically call `x.__eq__(y)` for you to do the equality check.  "Dunder" refers to the (double) double-underscores that these names all have.
[22:47:31] <Inst> so, like, there's a zoo of dunder methods and they have to be defined for each dunder method?
[22:47:44] <SnoopJ> they don't _have_ to be defined, but there is a zoo of them, yes
[22:47:47] *** Joins: reedrichards (~f@2607:f598:bbda:20:c0cd:f9bb:3ec:7cd2)
[22:47:49] <bjs> Inst: they don't *have* to be,  it's more that you *can* define them to do things
[22:47:54] <Inst> and is that why people say Python OOP is hard to learn?
[22:48:01] <bjs> Inst: who says Python OOP is hard to learn?
[22:48:07] <bjs> If someone said that, you'd have to ask them why they said that.
[22:48:14] *** Joins: audiobirb (~audio@user/audio)
[22:48:15] <SnoopJ> probably people who have more than one reason, so yea, I'd ask whoever said it :)
[22:48:17] <Wooble> Inst: and almost certainly it's really because it's not java.,
[22:48:23] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[22:48:25] <bjs> (I mean apart from Python just being programming and programming is hard in general)
[22:48:28] <Inst> pure ((<*>) . (pure openFile <*>)) <*> openFilePath
[22:48:31] <SnoopJ> the zoo itself is described here, but this is definitely not information a beginner needs to know: https://docs.python.org/3/reference/datamodel.html#specialnames
[22:48:32] <ali1234> Inst: they don't have to be defined but yes there is a "zoo", it's called the python data model: https://docs.python.org/3/reference/datamodel.html
[22:48:34] <Inst> whoops
[22:48:38] <Inst> https://www.quora.com/Why-are-Python-classes-so-hard-to-learn-and-implement
[22:49:11] <bjs> Inst: well the top answer is "Are they?" and then shows how easy it is :)
[22:49:31] <ali1234> i don't agree that python oop is hard to learn. i don't think "python oop" is even a thing, there is only oop no matter what language you use. also i think oop is easier to learn if you are using python than any other language
[22:49:37] <bjs> Like with any programming it's hard when you start,  but "Python OOP" isn't (as far as I know) any harder than any other programming thing
[22:50:29] <bjs> If someone knows Java, they will find "Python OOP" relatively easy.  If someone hasn't ever seen object-orientated programming before then "Python OOP" might be a whole new thing that'll take them a while to learn/understand.  That's totally understandable.
[22:50:35] <Inst> i was asking about python difficulty spikes
[22:50:56] <ali1234> honestly oop is pretty hard to learn, i tried to learn it many times in different languages but i never really got it until i learned python
[22:51:04] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[22:51:25] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:51:36] <Inst> what is there that's hard to learn about OOP?
[22:51:40] <Inst> I don't actually get OOP either
[22:51:42] <ali1234> possibly because python is so permissive, it allows you to make the mistakes and learn from them, where as C++ and java prevent you from ever making the mistakes
[22:51:51] <Inst> i know you can define a class with variables and methods contained wherein
[22:52:00] <Inst> and then instance the class into an object
[22:52:01] <Wooble> ali1234: I'm pretty sure I've made mistakes in C++ and Java :P
[22:52:09] *** Joins: sandb0y (~pirate@user/sandb0y)
[22:52:09] <Inst> that can't be all there is to know about OO
[22:52:23] <beastDivision> okay, so let me rephrase this. I have a cross platform command line executable. In the windows command prompt, you do "run myprog" and on linux/macos you do "./myprog", is there a way to execute this file with python subprocess.run(...) in a way that is cross platform, without having to test for the kind of OS the python is running on
[22:52:25] *** Quits: jramsay (~lack@user/lack) (Quit: Signing off)
[22:52:27] *** Joins: deck (~deck@152.249.183.210)
[22:52:36] <ali1234> Wooble: different type of mistake. code typos yes. incorrectly designing your OOP heirarchy is a whole other thing
[22:52:47] <Inst> oh yeah, class inheritance
[22:52:49] <Inst> what else?
[22:53:01] <ali1234> Inst: the hardest thing to get to grips with in OOP is designing your class heirarchy and interfaces
[22:53:04] <Inst> in C++ iirc you have private and public variables / methods
[22:53:23] <ali1234> there are many opportunities to do it wrong which will only cause you problems much later on
[22:53:24] <Wooble> beastDivision: doesn't `subprocess.run(["myprog"]) work?
[22:53:25] <bjs> Inst: OOP is a big topic with many different views.  But they all share a common idea that the data of a program is made up of "objects", which contain other data (attributes) and other operations (methods).
[22:53:38] <Inst> i see it being compared to ADT
[22:53:44] <Inst> python doesn't have ADT, does it?
[22:53:57] <bjs> Inst: Python lets you define these things with `class` statements, and those classes can inherit from other classes and there's some "dunder" methods (as Python calls it) but this all very standard and all "OOP" languages have all these features
[22:54:02] <bjs> Inst: what do you mean by "ADT"
[22:54:03] <ali1234> Inst: you've probably read a tutorial where they are like class Animal, class Dog extends Animal, class cat extends Animal, class Tiger extends Cat and so on. right?
[22:54:10] <Inst> algebraic data types
[22:54:13] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 240 seconds)
[22:54:19] <Inst> yeah @ali
[22:54:21] <bjs> Inst: well we have classes.
[22:54:34] <ali1234> Inst: making classes like that in the real world is an absolutely awful idea
[22:54:45] <ali1234> it just doesn't work for a number of reasons
[22:54:50] <Inst> ADT iirc is when types are made out of sum and product types, alongside the ability to build recursive types
[22:54:50] <bjs> Inst: in Python you don't think about things in terms of "types" but rather in terms of objects/classes.
[22:54:53] <ali1234> but they are all very difficult to explain
[22:54:54] <beastDivision> Wooble: it does not
[22:55:01] <ali1234> *that* is what is hard to learn about OOP
[22:55:05] <InPhase> Usually ADT means Abstract Data Type, in which case classes are an abstract data type.
[22:55:14] <beastDivision> Wooble: I am trying to capture the output too, not sure if that matters?
[22:55:17] *** Joins: miique (~miique@181.46.139.166)
[22:55:18] *** Quits: miique_ (~miique@181.46.139.166) (Ping timeout: 256 seconds)
[22:55:26] <bjs> Inst: so we don't have a notion of an "algebraic data type" but we have notions of "objects that are composed of other objects" (composition of objects)
[22:55:27] <Inst> what's the difference between abstract and algebraic data types?
[22:55:29] *** Joins: lack (~lack@user/lack)
[22:56:04] <bjs> Inst: an awful lot, abstract datatypes is like the description of the "interface" of a datatype.  They are an abstract idea/concept not a concrete things.
[22:56:50] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[22:57:00] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 256 seconds)
[22:57:06] <Inst> i see, so, i have a basic understanding of Algebraic data types, but no understanding of ADT
[22:57:18] *** Joins: mexen (uid495612@user/mexen)
[22:57:19] <InPhase> Inst: The abstract data type also contains an API for working with it.
[22:57:26] <novns> Inst, https://web.archive.org/web/20150906155800/http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf
[22:57:39] <novns> Inst, this article is very helpful
[22:57:44] <Inst> thanks
[22:57:49] <InPhase> Inst: At least, potentially can contain one.
[22:57:55] *** Joins: ustedes (~whaley@2603-6080-a301-33d1-8c46-e0cf-9906-f8cf.res6.spectrum.com)
[22:58:04] <Inst> define API?
[22:58:19] <Inst> as in, methods etc that call the concrete data types that belong to the abstract data type?
[22:58:25] <nedbat> be careful with "design pattern" documents. They can be very language-specific without seeming to be.
[22:58:25] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[22:59:13] *** Joins: jdmark2 (~jdmark@user/jdmark)
[22:59:27] * Inst gives bjs a secret handshake, but botches it
[22:59:27] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[22:59:31] <novns> nedbat, this article is about architectures and ideas, not related to any language
[22:59:48] <gjvc> excellent observation, nedbat
[23:00:02] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[23:00:45] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-25.dsl.bell.ca)
[23:00:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:00:59] <lntl> +1 functools.partial, ty Wooble, ali1234, jinusn, etc :)
[23:01:14] *** Quits: ustedes (~whaley@2603-6080-a301-33d1-8c46-e0cf-9906-f8cf.res6.spectrum.com) (Client Quit)
[23:01:30] <Wooble> beastDivision: umm, where exactly are you typing "run myprog" in windows, anyway?
[23:02:07] <nedbat> novns: this document does seem to stay away from specific patterns of classes for the most part, though AbstractFactory makes an appearance at the end.
[23:02:13] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[23:02:18] *** Joins: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de)
[23:02:30] <Wooble> beastDivision: subprocess.run(["/path/to/executable"]) should work anywhere, and if the relative path is the same, "./myprog" should be fine.
[23:02:53] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:03:03] <BrenBarn> if that doesn't work on windows the thing probably isn't actually an executable program
[23:03:48] *** Joins: yac (~user@user/yac)
[23:04:19] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:04:32] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:05:04] <bjs> Inst: think about a "Sequence",  there are many ways to create a sequence: you could have a linked-list of elements, an array, a tree, a hashmap etc.  So long as you have something that is ordered and has a way of getting the i'th thing you have a sequence.  "Sequence" is the ADT.
[23:05:20] *** Joins: voidcat (~voidcat@user/voidcat)
[23:05:22] <bjs> Inst: "has a method to get the i'th thing" is the API (the interface the programmer users)
[23:05:40] <Inst> maybe talk ADT in a different channel?
[23:06:08] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[23:06:13] <SnoopJ> there's #python-offtopic
[23:06:23] <nedbat> it's fine to talk about it here
[23:06:24] <SnoopJ> it's kinda topical though :)
[23:06:40] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:07:38] *** Quits: tomeaton17 (~tomeaton1@2a02:c7f:16cc:cf00:ec3e:3cbe:3c69:d259) (Ping timeout: 256 seconds)
[23:07:40] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[23:08:40] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:10:00] *** Joins: wombawomba (~andre@83.172.124.234)
[23:12:09] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:13:17] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[23:13:46] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[23:14:07] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[23:14:53] *** Joins: marcello42 (~mp@2001:1a81:1345:5c00:cd6:90d6:47fd:9bae)
[23:15:00] *** Quits: Sylhouette (~johan@web01.vandenboogaard.me) (Remote host closed the connection)
[23:16:37] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[23:18:53] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:19:06] *** Quits: lmmx (~louis@host-92-5-43-207.as13285.net) (Ping timeout: 256 seconds)
[23:19:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:20:15] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:21:06] *** Joins: lmmx (~louis@host-92-5-43-207.as13285.net)
[23:21:43] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: No Ping reply in 180 seconds.)
[23:22:01] *** Quits: zZen33 (~cpk33@2605:a601:ab34:3f00:b917:4850:49e7:4c9c) (Quit: Client closed)
[23:22:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:22:48] *** Joins: Guest1920 (~Guest19@2a04:4e41:a::9a70:1617)
[23:22:55] *** Quits: wombawomba (~andre@83.172.124.234) (Ping timeout: 256 seconds)
[23:22:56] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:23:06] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[23:23:38] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Ping timeout: 256 seconds)
[23:25:12] *** Joins: martti (~martti@46-126-48-136.dynamic.hispeed.ch)
[23:25:42] *** Quits: Guest1920 (~Guest19@2a04:4e41:a::9a70:1617) (Client Quit)
[23:27:02] *** Quits: marcello42 (~mp@2001:1a81:1345:5c00:cd6:90d6:47fd:9bae) (Ping timeout: 252 seconds)
[23:27:23] <bjs> zingos: yes.
[23:27:41] <bjs> zingos: Timer starts a new thread, and the work happens in that thread.
[23:27:42] <zingos> bjs: Yes, thanks, I saw that it extends thread functionality
[23:30:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[23:30:53] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[23:30:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[23:31:35] *** Joins: seednode99 (~seednode@user/seednode)
[23:31:48] *** Quits: lack (~lack@user/lack) (Quit: Signing off)
[23:31:55] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:32:04] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[23:33:06] *** Joins: lack (~lack@user/lack)
[23:34:52] *** Joins: wombawomba (~andre@83.172.124.234)
[23:34:58] *** Parts: Tha_14 (~Tha_14@user/tha-14/x-4134127) ()
[23:35:25] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[23:35:57] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[23:35:57] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[23:37:48] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[23:38:04] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[23:38:07] *** Quits: deutor (~quassel@176.221.113.10) (Ping timeout: 250 seconds)
[23:38:20] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[23:39:06] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[23:39:32] *** Joins: kdc (~kdc@196.211.197.159)
[23:40:13] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[23:40:14] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[23:40:24] *** Joins: tomeaton17 (~tomeaton1@2a02:c7f:16cc:cf00:88cd:8104:b736:335c)
[23:40:51] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:41:05] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:41:25] <tomeaton17> I tried to use data = np.split(data, 4400), but when I try len(data) the length is 4400, not Len(data)/4400 why is this happening?
[23:41:35] <tomeaton17> I want to split by rows into smaller 2d arrays
[23:42:24] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[23:42:43] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[23:42:45] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[23:43:08] *** Joins: hudo__ (~hudo@user/hudo)
[23:43:13] *** Joins: ham5urg (~ham5urg@84.46.32.3.dynamic-pppoe.dt.ipv4.wtnet.de)
[23:44:39] *** Quits: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de) (Quit: k2ro)
[23:45:56] *** Joins: k2ro (~k2ro@p5b175bd7.dip0.t-ipconnect.de)
[23:47:12] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:47:38] *** Joins: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net)
[23:47:44] <ham5urg> I have a simple app created, MVC pattern. After the user has added necessary&correct data, the 'save'-button switches from greyed to normal. I'm unsure where to put the code which actually writes to the disk. The model has only temporary data, so the code to write to the disk does not belong into the model. But does it belong into the view? I would guess it belongs into the controller, but I'm unsure. What do you think?
[23:48:52] <grym> ham5urg: i agree, the controller probably makes sense. when i did MVC more often, i remember trying very hard to keep IO out of the model
[23:49:03] <grym> and the view as stupid as possible
[23:49:13] <grym> so all the glue went into the controller
[23:49:23] <sco1> tomeaton17: Why do you expect len(data)/4400?
[23:50:02] <sco1> You've told numpy to split the array into 4400 sub-arrays
[23:50:05] *** Joins: teut (~teut@2401:4900:1c68:6b85:dd24:2947:a394:79e4)
[23:50:26] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:ed02:4b99:83a5:c407)
[23:50:37] <ham5urg> grym, thanks, I needed someone who confirms.
[23:50:51] <tomeaton17> sco1 okay I thought that param was the size
[23:50:52] <tomeaton17> thanks
[23:51:35] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[23:52:10] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:52:39] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[23:52:57] *** Quits: ddavtian (~ddavtian@c-73-241-123-44.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:53:39] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:54:02] <catern> hi #python, I'm doing some explorations with CPython; is there any way to make an object of a class such that the user cannot construct the class?
[23:54:18] <grym> def __new__(): raise
[23:54:22] <grym> ?
[23:54:34] <bjs> catern: it depends how you define "construct"
[23:54:34] <catern> wouldn't that also stop me from constructor the class?
[23:54:41] <catern> constructing even
[23:54:42] <Yhg1s> Are you not a user?
[23:54:42] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[23:54:46] <grym> sure, you're the user...
[23:54:47] <catern> sorry, by user I meant someone other than me
[23:54:51] *** Quits: Pandadub (~Barones@189.50.80.77) (Remote host closed the connection)
[23:54:52] <Yhg1s> Then no.
[23:54:52] <bjs> catern: I can always make an instance of another object, then "convert" it to the right type
[23:54:53] <catern> like in a library
[23:55:26] <phy1729> you can not put the class in __all__
[23:55:31] <bjs> catern: are you trying to hide something?
[23:55:35] <catern> let me be more specific
[23:55:36] <bjs> Or, what is the use-case ?
[23:55:54] <catern> bjs: I'm just exploring the Python language
[23:55:54] *** Joins: martums (~martums@user/martums)
[23:56:37] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[23:57:01] *** Joins: d0ku (~d0ku@178.43.3.56.ipv4.supernova.orange.pl)
[23:57:06] <catern> let me be more specific, is there a way to achieve: A defines a class, constructs an instance of it, and gives that instance to B; B cannot construct any new instance of the class (even though B can access the class with type(whatever))
[23:57:37] <bjs> catern: as you dig deeper the statement "construct a new instance" starts to become a lot more wooly as to what it really means
[23:57:43] <bjs> the answer is probably "no you can't stop them"
[23:57:50] *** Quits: miique (~miique@181.46.139.166) (Read error: Connection reset by peer)
[23:58:03] *** Joins: Barones (~Barones@189.50.80.77)
[23:58:13] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[23:58:17] *** Quits: deck (~deck@152.249.183.210) (Ping timeout: 240 seconds)
[23:58:39] <bjs> catern: the practical answer is "you can stop them trying" by adding code to e.g. the __new__ to check (like you would with the old [but bad] singleton patterns)
[23:58:51] <grym> in my experience the answer to "can i stop X in python" usually winds up being no
[23:59:13] <catern> bjs: hm, that's a good point, that's a good point... like, B could also just inherit from A and override __new__ etc
[23:59:18] *** Joins: miique (~miique@181.46.139.166)
[23:59:43] <grym> there is nearly always a tricky way out
[23:59:44] <catern> bjs: yeah that was my thought about how to do it, to check in __new__ or __init__ (specifically I was thinking about passing in some capability that A has which B does not)
[23:59:51] <bjs> catern: I mean in the end I can always go `class C: pass` `o = C(); o.__class__ = type(c)` and then from there re-construct a new object that *is* an instance of your class
