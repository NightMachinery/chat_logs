[00:02:26] <onosendi> merpnderp: I'm a Linode fan.
[00:02:35] *** Joins: summersault (~summersau@179.221.251.16)
[00:05:32] *** Joins: zebrag (~chris@user/zebrag)
[00:07:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:13:11] *** Joins: g00fy (~g00fy@user/g00fy)
[00:14:33] *** Joins: pulse (~pulse@user/pulse)
[00:17:49] *** Quits: Liblx (~Alex@2a02:810c:280:59c:68e7:d569:ad47:d289) (Quit: WeeChat 3.2)
[00:20:02] <bambanxx> hello GreenJello
[00:21:10] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[00:21:11] <GreenJello> o/
[00:22:25] *** Joins: g00fy (~g00fy@user/g00fy)
[00:25:51] <merpnderp> What are some competitors with Linode? I know there's a few other in that same space, fighting the good fight against Amazon, Google and Azure.
[00:26:38] <merpnderp> Nice, Linode offers static websites off of S3.
[00:26:56] <merpnderp> Stored files can be given static web paths.
[00:27:37] <GreenJello> linode was quite expensive when I last looked into it (years ago)
[00:28:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[00:29:55] *** Joins: t3nj1n (~t3nj1n@108.5.82.237)
[00:32:58] <onosendi> merpnderp: UpCloud is another. It's supposed to be the fastest with competitive prices. I actually switched to UpCloud because of https://upcloud.com/compare/linode/. However, I've been with Linode for 10+ years and they've always been good to me, so I switched back.
[00:33:15] <merpnderp> GreenJello: more expensive than DO?
[00:33:22] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[00:33:36] <merpnderp> onosendi: What's UpCloud? Nothing Cloud, what's up with you?
[00:33:52] <onosendi> :P
[00:34:29] <merpnderp> onosendi: The problem I'm going to find with these smaller hosts is they don't have oauth/openid to tie into ACL's.
[00:36:39] *** Joins: printForever (~printfore@195.206.105.17)
[00:37:47] <celphi> is there a reason why the code i blackboxed  is still popping up in my dev tools in debug?
[00:39:09] <GreenJello> merpnderp, it looks like they're exactly matching price now, but unclear how much each over-provisions their shared plan servers
[00:39:11] <entuland> celphi, some more data maybe?
[00:39:15] <GreenJello> it could go either way
[00:40:25] *** Joins: Deide (~Deide@217.155.19.23)
[00:40:25] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[00:40:25] *** Joins: Deide (~Deide@user/deide)
[00:42:26] <merpnderp> I'm trying to learn more how Linode's ACL's work and am not seeing much.
[00:46:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:46:54] <ThePendulum> has anyone noticed the chrome dev tools crashing a lot more often lately, or is that just on my end
[00:48:53] <Alexendoo> Can't say I have
[00:50:28] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:57:25] *** Quits: printForever (~printfore@195.206.105.17) (Quit: /    //   ///  //// BTTF)
[01:00:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[01:02:57] *** Quits: cbleslie (~cbleslie@47.148.37.14) (Read error: Connection reset by peer)
[01:03:02] *** Joins: cbleslie8 (~cbleslie@47.148.37.14)
[01:04:21] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:05:13] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[01:05:46] *** Quits: asd (~noname@user/asd) (Ping timeout: 252 seconds)
[01:07:31] *** Joins: Betal (~Beta@user/betal)
[01:07:45] *** Joins: asd (~noname@user/asd)
[01:08:57] *** Joins: ckdcreation (~ckdCreati@147.55.130.37)
[01:10:59] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:11:46] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:16:05] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:16:41] *** Joins: thiras (~thiras@user/thiras)
[01:24:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b)
[01:28:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:33:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:34:48] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (Ping timeout: 268 seconds)
[01:44:48] *** Quits: luiserebii (~luiserebi@li1568-23.members.linode.com) (Ping timeout: 252 seconds)
[01:44:48] *** Quits: AlbertLast (~nix@0exclusive.de) (Ping timeout: 252 seconds)
[01:44:58] *** Joins: AlbertLast_ (~nix@0exclusive.de)
[01:45:00] *** Quits: michaelis (~michaelis@193.183.209.17) (Ping timeout: 252 seconds)
[01:45:39] *** Joins: bin4ry8 (~bin4ry@128.199.135.148)
[01:45:44] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Ping timeout: 252 seconds)
[01:45:59] *** Joins: luiserebii (~luiserebi@li1568-23.members.linode.com)
[01:46:07] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[01:46:15] *** Joins: NoiseEee7 (~NoiseEee@178.128.153.219)
[01:46:31] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[01:46:40] *** Joins: \mSg_mini (~mSg@user/msg/x-0285936)
[01:47:12] *** Quits: bin4ry (~bin4ry@128.199.135.148) (Ping timeout: 252 seconds)
[01:47:13] *** bin4ry8 is now known as bin4ry
[01:47:34] *** Quits: px (~px@user/px) (Ping timeout: 252 seconds)
[01:47:54] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (Read error: Connection reset by peer)
[01:47:55] *** NoiseEee7 is now known as NoiseEee
[01:47:57] *** Joins: Northwoods (~Northwood@223.130.30.165)
[01:48:31] *** Quits: realies- (~realies@178.169.218.119) (Quit: ~)
[01:48:33] *** Joins: px (~px@ool-18bb89ab.dyn.optonline.net)
[01:48:46] *** Joins: realies (~realies@user/realies)
[01:49:24] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 252 seconds)
[01:49:24] *** \mSg_mini is now known as \mSg
[01:50:56] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[01:51:31] *** Joins: thiras (~thiras@user/thiras)
[01:51:50] *** Joins: michaelis (~michaelis@193.183.209.17)
[01:52:25] *** Joins: onosendi (~onosendi@user/onosendi)
[01:55:30] <ashnur> not at all
[01:56:19] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[01:56:34] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 265 seconds)
[02:08:40] *** Joins: incognito_ (~relativit@171.11.13.109.rev.sfr.net)
[02:11:15] *** Quits: incognito__ (~relativit@171.11.13.109.rev.sfr.net) (Read error: Connection reset by peer)
[02:11:33] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 265 seconds)
[02:11:33] *** Quits: edr (~edr@user/edr) (Ping timeout: 265 seconds)
[02:11:45] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[02:12:22] *** Joins: edr (~edr@enlo.co)
[02:12:23] *** Quits: edr (~edr@enlo.co) (Changing host)
[02:12:23] *** Joins: edr (~edr@user/edr)
[02:21:49] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[02:25:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[02:29:21] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:32:32] <dante443> Question: If I want to conditionally render a JSX wrapper, in this case render a form enclosed in a MUI Dialog, or under other conditions render it without the Dialog wrapper, is there a convenient way to do this? Do I have to make the form a standalone component or can I write this logic into the component itself
[02:38:27] *** Quits: Isil`Zha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f) (Ping timeout: 276 seconds)
[02:39:31] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[02:39:46] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:15] <farn> dante443: There are several options. One is: const form = <form>...</form>; if (condition) { return <Dialog>{form}</Dialog>; } return form;
[02:41:13] <farn> If the wrapper component doesn't need special props, there's also this: const Wrapper = condition ? Dialog : React.Fragment; return <Wrapper><form>...</form></Wrapper>;
[02:43:22] *** Parts: CoderGuy2 (~CoderGuy@2601:644:101:4f20:d20:66d9:9e26:eb98) ()
[02:46:21] <dante443> The second one might work. I was using option #1 but it was causing render issues on a component
[02:47:22] <farn> What kinds of issues?
[02:47:56] <dante443> Well, the component was losing focus on renders
[02:48:33] <dante443> https://stackoverflow.com/questions/22573494/react-js-input-losing-focus-when-rerendering This seemed to suggest that rendering the form in a const was possibly the source of my problem
[02:48:49] *** Quits: Intelo (~Intelo@88.244.89.240) (Ping timeout: 246 seconds)
[02:49:17] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 245 seconds)
[02:49:38] <dante443> It was only effecting one component so I am sure there is something going on that I do not comprehend, but I am more in a "get it to work" rather than "make it perfect" workflow atm
[02:50:46] *** Joins: l__q (~modinfo@user/modinfo)
[02:54:01] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1) (Quit: Leaving)
[02:54:05] <farn> What you might be thinking of is the fact that you must not create a _component_ while rendering another component, because that would mean that the inner component gets remounted every time the outer component gets rendered, losing focus and all internal state
[02:54:49] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:54:51] <farn> But <form>...</form> isn't a component. It's a React element, a plain JS value that you can freely store in variables, push into arrays, pass to and return from functions
[02:55:01] <farn> A component is a function (or class) that takes props and returns elements
[02:55:43] <dante443> There are many components within the <form> element, I excluded them for brevity
[02:57:02] <farn> I didn't make the difference clear. If Dialog is a component then <Dialog /> is an element.
[02:59:11] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1)
[02:59:28] <farn> One is a function, the other is a plain object that looks like { type: Dialog, ... some other stuff ... }
[03:00:06] <farn> There is absolutely no difference between `return <div><form /></div>` and `const form = <form />; return <div>{form}</div>`
[03:00:56] <ljharb> the only difference is if it's inside fragment syntax.
[03:03:21] <dante443> Hmm, I see. Well, I do think there is something going on "under the hood" that I need to understand better. Are there any debugging tools you recommend to analyze the components and renders in real time? I couldn't establish a debugging "window" into the element losing focus
[03:09:43] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[03:10:08] <onosendi> ljharb: recommended to `nvm install-latest-npm` every time I get the new version notice?
[03:10:29] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[03:11:25] *** Joins: Betal (~Beta@user/betal)
[03:12:32] <farn> dante443: For a quick look into what is even happening, I'd add the following at the beginning of component Foo: console.log("Foo rendered"); useEffect(() => { console.log("Foo mounted") }, [])
[03:20:49] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1) (Quit: Leaving)
[03:20:51] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[03:35:37] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Ping timeout: 250 seconds)
[03:36:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:41d9:ff75:9496:1aef) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:37:07] <ljharb> onosendi: sure, that's fine
[03:48:33] *** Joins: fef (~thedawn@user/thedawn)
[03:50:05] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[03:52:59] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[03:52:59] *** Quits: jellobot (~jellobot@104.248.16.142) (Remote host closed the connection)
[03:52:59] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[03:53:07] *** Joins: jellobot (~jellobot@104.248.16.142)
[03:53:07] *** ChanServ sets mode: +v jellobot
[03:53:12] *** Joins: thiras (~thiras@user/thiras)
[03:53:16] *** Joins: entuland (~entuland@user/entuland)
[03:56:49] *** Quits: skillbot1 (~skillbot@user/skillbot) (Remote host closed the connection)
[03:57:05] *** Joins: skillbot (~skillbot@user/skillbot)
[03:57:05] *** ChanServ sets mode: +v skillbot
[03:59:52] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:02:50] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[04:03:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[04:03:37] *** Joins: jazzy (~jaziz@2600:380:c174:6a3d:897b:27a0:9f86:1d4)
[04:08:38] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 272 seconds)
[04:12:41] *** __jmcantrell__ is now known as jmcantrell
[04:19:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[04:44:17] *** Quits: Northwoodss (~Northwood@223.130.30.165) (Ping timeout: 255 seconds)
[04:44:17] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 245 seconds)
[04:45:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:46:50] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[04:48:11] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:48:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[04:49:56] *** Gustavo6046_ is now known as Gustavo6046
[04:50:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:51:08] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[04:52:20] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:599:5892:1665:5def)
[04:52:20] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:599:5892:1665:5def) (Client Quit)
[04:52:35] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b)
[04:55:23] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[04:55:57] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:05:13] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[05:05:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:13:50] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[05:19:20] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Remote host closed the connection)
[05:21:07] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 268 seconds)
[05:22:15] *** Joins: Atum__ (~IRC@user/atum/x-2392232)
[05:24:04] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[05:24:49] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Ping timeout: 268 seconds)
[05:27:38] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Read error: Connection reset by peer)
[05:35:12] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:40:32] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (Ping timeout: 255 seconds)
[05:40:41] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[05:43:25] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:48:26] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[05:49:39] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:49:39] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:50:05] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:50:07] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[05:51:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:03:30] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:03:45] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[06:04:40] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[06:14:41] *** Quits: Atum__ (~IRC@user/atum/x-2392232) (Quit: Atum__)
[06:14:48] *** Quits: cantelope (~cantelope@173-27-116-255.client.mchsi.com) ()
[06:18:08] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:19:53] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:23:13] *** Quits: ckdcreation (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[06:23:25] *** Joins: paule32_ (~paule32@user/paule32)
[06:23:26] *** Joins: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:26:47] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 250 seconds)
[06:30:36] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[06:33:46] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:34:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:36:25] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[06:40:29] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1)
[06:44:05] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[06:47:17] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1) (Quit: Leaving)
[06:52:28] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[06:52:37] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 245 seconds)
[06:54:14] *** Joins: szutt (~szutt@116.37.2.145)
[06:54:47] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 265 seconds)
[06:57:50] *** Joins: jellobot3 (~jellobot@104.248.16.142)
[06:57:50] *** ChanServ sets mode: +v jellobot3
[06:57:50] *** Quits: jellobot (~jellobot@104.248.16.142) (Killed (sodium.libera.chat (Nickname regained by services)))
[06:57:50] *** jellobot3 is now known as jellobot
[07:03:08] *** Joins: Rockwood (~Rocky@user/rocky)
[07:05:08] *** Joins: vimello (~vimello@2804:14c:1af:4e88::1000)
[07:14:17] <Rockwood> o/
[07:14:22] <Rockwood> good morning
[07:19:13] *** Joins: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net)
[07:22:41] *** Quits: Codaraxis__ (~Codaraxis@141.98.255.143) (Ping timeout: 255 seconds)
[07:28:32] *** Quits: Popzi (~Popzi@95.150.161.162) (Ping timeout: 255 seconds)
[07:29:49] *** Joins: Popzi (~Popzi@95.150.161.207)
[07:30:46] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[07:30:51] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[07:31:31] *** Quits: IceMichael (~IceMichae@dynamic-046-114-155-193.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:35:02] *** Joins: tccki (~tccki@box.webslate.co.nz)
[07:35:26] *** Joins: stenno (~stenno@user/stenno)
[07:35:44] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1)
[07:40:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[07:43:08] *** Joins: stenno (~stenno@user/stenno)
[07:44:57] *** Joins: IceMichael (~IceMichae@dynamic-046-114-155-121.46.114.pool.telefonica.de)
[07:47:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[07:50:32] *** Joins: stenno (~stenno@user/stenno)
[07:51:24] *** Quits: IceMichael (~IceMichae@dynamic-046-114-155-121.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:54:04] *** Joins: IceMichael (~IceMichae@dynamic-046-114-155-121.46.114.pool.telefonica.de)
[07:54:53] *** Quits: francis (francis@user/francis) (Quit: rb)
[07:55:38] *** Joins: francis (francis@user/francis)
[07:55:38] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:55:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[07:58:41] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 255 seconds)
[08:00:14] *** Joins: codebam (~codebam@user/codebam)
[08:02:13] *** Joins: stenno (~stenno@user/stenno)
[08:02:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:03:37] *** Quits: vimello (~vimello@2804:14c:1af:4e88::1000) (Quit: Client closed)
[08:05:30] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[08:05:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[08:07:19] *** Quits: jellobot (~jellobot@104.248.16.142) (Remote host closed the connection)
[08:07:26] *** Joins: jellobot (~jellobot@104.248.16.142)
[08:07:26] *** ChanServ sets mode: +v jellobot
[08:07:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[08:09:13] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 265 seconds)
[08:10:00] *** Joins: stenno (~stenno@user/stenno)
[08:11:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[08:13:54] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[08:14:24] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 268 seconds)
[08:15:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[08:16:06] *** Joins: Rockwood_ (~Rocky@user/rocky)
[08:16:20] *** Joins: stenno (~stenno@user/stenno)
[08:19:23] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[08:21:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[08:23:27] *** Joins: stenno (~stenno@user/stenno)
[08:28:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[08:30:10] *** Joins: stenno (~stenno@user/stenno)
[08:32:46] *** __jmcantrell__ is now known as jmcantrell
[08:33:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:37:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[08:38:14] *** Joins: stenno (~stenno@user/stenno)
[08:43:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[08:45:05] *** Joins: stenno (~stenno@user/stenno)
[08:50:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[08:50:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[08:52:09] *** Joins: stenno (~stenno@user/stenno)
[08:55:02] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Remote host closed the connection)
[08:56:12] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[08:57:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[08:59:47] *** Joins: stenno (~stenno@user/stenno)
[09:04:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:04:40] <dante443> Ugh, es6 is so nice
[09:04:42] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[09:05:00] <dante443> I want to use the syntax everywhere. Winning me over from my base language lol
[09:06:47] *** Joins: stenno (~stenno@user/stenno)
[09:10:36] *** Joins: Northwoodss (~Northwood@223.130.30.165)
[09:10:36] *** Joins: Northwoods (~Northwood@223.130.30.165)
[09:11:15] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:12:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[09:12:47] <ljharb> dante443: try ES2021. ES6 is 6 years obsolete
[09:14:14] *** Joins: stenno (~stenno@user/stenno)
[09:15:09] <dante443> I might have to. I used to hate javascript until I took a deep dive into typescript and react and my opinion has changed greatly.
[09:15:52] <ljharb> javascript's always been the best :-)
[09:15:55] <ljharb> it's just better now
[09:16:16] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 246 seconds)
[09:17:08] *** Joins: trufas (~trufas@177.240.218.218)
[09:19:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[09:22:21] <theskillwithin> i just glanced over at my beer.  Asahi  then right below it says product of italy. wowa
[09:22:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[09:22:29] <theskillwithin> did not know htat
[09:25:26] *** Joins: stenno (~stenno@user/stenno)
[09:27:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[09:29:22] *** Joins: Northwoods_ (~Northwood@223.130.30.165)
[09:29:39] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 250 seconds)
[09:30:10] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:30:55] *** Joins: stenno (~stenno@user/stenno)
[09:30:57] *** Quits: Northwoodss (~Northwood@223.130.30.165) (Ping timeout: 250 seconds)
[09:30:57] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 250 seconds)
[09:31:45] *** Joins: Northwoods (~Northwood@223.130.30.165)
[09:38:58] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[09:40:44] *** Joins: stenno (~stenno@user/stenno)
[09:45:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[09:46:47] *** Joins: stenno (~stenno@user/stenno)
[09:46:49] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[09:46:54] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[09:49:22] *** Quits: Northwoods_ (~Northwood@223.130.30.165) (Ping timeout: 240 seconds)
[09:49:45] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 265 seconds)
[09:51:38] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[09:53:18] *** Joins: stenno (~stenno@user/stenno)
[09:58:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:00:08] *** Joins: stenno (~stenno@user/stenno)
[10:05:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[10:05:43] *** Joins: blez` (~blez@213.91.182.96)
[10:06:07] *** Joins: tccki (~tccki@box.webslate.co.nz)
[10:09:05] *** Joins: stenno (~stenno@user/stenno)
[10:09:26] *** Quits: blez (~blez@213.91.182.96) (Ping timeout: 268 seconds)
[10:12:47] <shan> is there anyway to convert this to a destructuring assignment? https://bin.readthedocs.fr/ystick.js
[10:13:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[10:14:13] <ljharb> shan: of course
[10:14:46] <ljharb> shan: `const { width, height, x, y } = this.preMaximize; Object.assign(this, { height, width, pos: { x, y } });`
[10:14:52] <ljharb> shan: but, it's weird to stick a bunch of stuff on the instance
[10:15:06] <shan> what do you mean
[10:15:41] *** Joins: stenno (~stenno@user/stenno)
[10:15:53] <ljharb> shan: i mean, why would you want all that public mutable data on your objects
[10:16:11] <shan> ljharb: my object needs that data
[10:16:55] <ljharb> why publicly exposed tho
[10:17:39] <shan> i didn't know there was a way to make certain members private
[10:19:01] <ljharb> class private fields
[10:19:10] <ljharb> n> class C { #x; } @ shan
[10:19:11] <jellobot> shan, undefined
[10:19:17] <shan> :0
[10:19:21] <shan> damn ok
[10:21:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[10:21:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[10:21:50] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[10:22:33] <shan> also, how do you like this? :clown: this.taskBtn.classList[this.maximized ? 'add' : 'remove']('maximized');
[10:22:43] *** Joins: stenno (~stenno@user/stenno)
[10:24:36] <ljharb> shan: lol, you should use react
[10:24:43] <shan> but why
[10:24:56] *** Quits: tccki_ (~tccki@box.webslate.co.nz) (Read error: Connection reset by peer)
[10:25:48] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 276 seconds)
[10:26:58] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[10:27:26] <ljharb> for all sorts of reasons
[10:27:34] <ljharb> especially if you're using classes to interact with the DOM
[10:28:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[10:30:52] *** Joins: stenno (~stenno@user/stenno)
[10:35:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[10:38:23] *** Joins: stenno (~stenno@user/stenno)
[10:39:15] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:39:44] *** Joins: Isil`Zha (~isilzha@2a02:8070:c3c7:8c00:2e44:d4f8:a5a4:5f8f)
[10:41:57] <shan> does Object.assign skip undefined/null values
[10:42:44] *** Joins: foomanchu (~foomanchu@2600:1007:b128:4f18:84a:e7b:4da9:2c88)
[10:43:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 255 seconds)
[10:43:54] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:44:03] <Maxdamantus> n> Object.assign({}, { foo: null, bar: undefined });
[10:44:04] <jellobot> (okay) { foo: null, bar: undefined }
[10:44:07] <Maxdamantus> No.
[10:47:11] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[10:48:35] *** Joins: stenno (~stenno@user/stenno)
[10:53:58] <shan> Maxdamantus: thanks
[10:58:21] *** Joins: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com)
[10:58:41] *** Joins: Bombo_ (atom@p2e58e5b9.dip0.t-ipconnect.de)
[10:59:45] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[11:01:34] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[11:02:15] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 265 seconds)
[11:02:25] *** Joins: stenno (~stenno@user/stenno)
[11:07:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[11:09:23] *** Joins: stenno (~stenno@user/stenno)
[11:14:50] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:18:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[11:18:23] *** Quits: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) (Ping timeout: 252 seconds)
[11:20:17] *** Joins: stenno (~stenno@user/stenno)
[11:22:41] <shan> is `that = this` bad practices
[11:25:30] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[11:27:44] *** Joins: stenno (~stenno@user/stenno)
[11:30:18] <ljharb> shan: it's not bad, but it's unnecessary now that arrow functions and `.bind` both exist
[11:30:34] <shan> right ok
[11:30:39] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[11:32:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[11:38:12] *** Joins: stenno (~stenno@user/stenno)
[11:39:09] *** Quits: kmh (~kmh@p200300df5f3d2300449353ed639cbf20.dip0.t-ipconnect.de) (Quit: Leaving)
[11:39:49] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[11:40:12] *** Parts: incognito_ (~relativit@171.11.13.109.rev.sfr.net) ()
[11:41:12] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[11:41:14] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:71c2:9898:8b5:782e)
[11:42:53] *** Joins: dc1 (~dc@user/dc)
[11:43:04] <dc1> Is it ok to ask typescript questions here?
[11:43:27] <theskillwithin> yes
[11:43:46] <dc1> Why is it when implementing an optional parameter from an interface (as a const) the compiler complains when im using implementation.optionalField.length. I specifically am only using the type definition as a hint, the field is clearly there and defined
[11:43:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[11:44:22] <dc1> interface FooBar { items?: Array<string>} const implementation: FooBar = { items: [] }; console.log(implementation.items.length);
[11:46:47] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Ping timeout: 245 seconds)
[11:50:08] *** Joins: stenno (~stenno@user/stenno)
[11:51:40] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:71c2:9898:8b5:782e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[11:55:43] *** Joins: stenno (~stenno@user/stenno)
[11:57:05] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[11:57:23] <shan> i spent the entire morning refactoring, now i have no energy to write new code
[12:00:29] <sheetjs> dc1: it doesn't magically subtype
[12:01:02] <dc1> sheetjs: why not? I've basically defined an object here that adheres to an interface. At this point it's a definition, nothing more.
[12:01:20] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:01:39] <sheetjs> right, you are telling it to adhere to the interface
[12:02:05] <sheetjs> look at the opposite direction
[12:02:25] <sheetjs> interface FooBar { items: Array<string>}; const implementation = { }; console.log((implementation as FooBar).items.length);
[12:02:47] <sheetjs> in this case, implementation does not have an items property and, to our eyes, does not follow the interface
[12:02:55] *** Joins: stenno (~stenno@user/stenno)
[12:03:08] <sheetjs> but we're telling the compiler to ignore its eyes and follow the interface
[12:04:25] <dc1> hm ok
[12:04:46] *** Joins: fef (~thedawn@user/thedawn)
[12:04:56] <dc1> I'll just remove the : FooBar then on the defintion, this is a fixture for a test so i need the length of the items
[12:05:11] <ashnur> theskillwithin, you write typescript?
[12:05:28] <sheetjs> why is FooBar#items optional in the first place?
[12:06:22] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b88a:c6c9:ad7d:9d95)
[12:07:51] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[12:07:53] <theskillwithin> ashnur no, but i i kinda like it, all the auto complete so awesome, so maybe sometimes
[12:08:57] *** Quits: foomanchu (~foomanchu@2600:1007:b128:4f18:84a:e7b:4da9:2c88) (Quit: Client closed)
[12:09:11] *** Joins: stenno (~stenno@user/stenno)
[12:10:08] <sheetjs> hmm is it better to make a thousand breaking changes at once or slowly drift between versions?
[12:11:54] <theskillwithin> whats the context here
[12:12:31] <sheetjs> so there are lots of little design decisions in sheetjs that may or may not have made sense in 2012 but definitely don't make sense in 2021
[12:13:25] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[12:14:16] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[12:14:45] <ashnur> i hate it and it's not js
[12:15:02] *** Joins: straykitten (~straykitt@subs24-116-206-8-24.three.co.id)
[12:15:44] <sheetjs> "it's not JS" is not a great argument
[12:15:54] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 258 seconds)
[12:16:51] <sheetjs> modern JS, since it generally requires build tools to generate something usable for the web, is arguably just as much "JS" as typescript
[12:17:24] <sheetjs> ES5 has a more legitimate claim to being a JS that typescript is not, but the community by and large moved on
[12:17:39] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:18:38] *** Joins: stenno (~stenno@user/stenno)
[12:20:48] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:22:32] <theskillwithin> sheetjs i spent some time thinking.  and well idk how doing that makes breaking changes. but id go with that over the slow.  create the next version and focus on that sounds like the best choice in this scenario
[12:22:48] <sheetjs> as an example
[12:22:58] <sheetjs> the underlying data structure needs to change
[12:23:20] <sheetjs> from "object whose keys are cell addresses" and "array of arrays"
[12:23:26] *** Joins: pulse (~pulse@user/pulse)
[12:23:37] <sheetjs> in 2012, IE6 had huge performance problems with arrays of arrays which made the former approach sensible
[12:24:12] <sheetjs> in 2021 V8 small string caching means the former is a real performance drag on sparse worksheets
[12:26:02] <sheetjs> there are lots of little inconsistencies like option names, a number of utility functions that don't necessarily need to be made available, and the unfortunate choice of "!" rather than "$" to flag certain properties
[12:26:11] <sheetjs> $ or _ wouldve been JS-friendly
[12:26:50] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[12:29:05] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[12:34:29] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[12:36:10] <shan> is there any reason the behaviour of a script would change if i split it up into its bits
[12:36:36] <theskillwithin> huh?
[12:36:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:43] <shan> specifically, i have a function that would build a div and then call appendChild on it, adding the supplied children to the div. After splitting the files, the element that gets passed seems to become undefined? i.e, the function has stopped working in just one case
[12:38:18] <shan> the weird part is that logging elem.children right after appending shows that the elements were appended
[12:39:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:05] <theskillwithin> !paste @ shan
[12:40:05] <jellobot> shan, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[12:41:16] <shan> theskillwithin: is a git repo okay?
[12:41:24] <shan> s/git/GitHub
[12:44:11] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:59:03] <hassoon> OA
[12:59:07] <hassoon> ops
[12:59:09] <hassoon>  'morning
[12:59:18] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:59:39] <shan> ok, sorry, it took me a bit to set up the branches https://github.com/shantaram3013/pseudows/tree/broken --> this is the version that broke, createElement is in util.js, setting the parent property on lines 98 and 109 doesn't work. https://github.com/shantaram3013/pseudows/tree/working was the last working version. You can see in the `working` branch setting the same property (lines 147 and
[12:59:40] <shan> 158) works fine.
[12:59:59] *** Joins: mei (~mei@user/mei)
[13:00:56] <shan> (theskillwithin: ^)
[13:01:57] <dc1> sheetjs: because there are other fields, this is just the one for the demonstration
[13:02:40] <dc1> im writing an enzyme component test and using the fixture to pass in the props, and then the expect() looks for the number of rendered "Item" components, so i wanted to compare it to the length in the fixture
[13:03:10] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[13:11:54] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b88a:c6c9:ad7d:9d95) (Ping timeout: 240 seconds)
[13:14:45] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[13:17:53] <shan> okay so I reverted the window class alone to be the same as the "working" version
[13:17:58] <shan> now it all works????
[13:18:17] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 252 seconds)
[13:23:06] *** Joins: Intelo (~Intelo@88.244.89.240)
[13:24:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:26:02] *** Quits: straykitten (~straykitt@subs24-116-206-8-24.three.co.id) (Read error: Connection reset by peer)
[13:28:44] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[13:28:44] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 252 seconds)
[13:31:27] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:fabf:2f82:131e:f666) (Ping timeout: 250 seconds)
[13:32:25] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:51] *** Joins: straykitten (~straykitt@subs24-116-206-8-27.three.co.id)
[13:43:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:fc69:a47b:2d46:673b) (Quit: Leaving)
[13:45:13] <ashnur> sheetjs, I am not trying to persuade people, I haven't listed a series of arguments to support a case, i just described two facts, one objective and one subjective.
[13:45:28] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bcb4:59ef:c17d:b5fb)
[13:49:17] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 245 seconds)
[13:58:44] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:e84d:9162:9e4a:cfce)
[14:09:27] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:09:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[14:19:53] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:23:17] *** Joins: entuland (~entuland@user/entuland)
[14:29:01] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[14:32:17] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[14:33:13] *** Joins: w0ng (~w0ng@103.1.212.140)
[14:43:37] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 265 seconds)
[14:50:30] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Remote host closed the connection)
[14:50:49] *** Joins: Northwoods_ (~Northwood@223.130.30.165)
[14:50:49] *** Joins: Northwoods (~Northwood@223.130.30.165)
[14:51:58] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[14:53:16] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:55:39] *** Joins: teut (~teut@122.162.166.192)
[14:58:07] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 265 seconds)
[14:58:10] <teut> https://dpaste.org/40uD#L12,53
[14:58:34] <teut> line 53 , shouldnt on button click, I should get another Input component?
[15:00:28] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[15:00:28] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[15:00:28] *** Joins: Heraes (~Heraes@user/romarain)
[15:02:09] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[15:02:42] <ashnur> teut do a console.log between lines 14 and 15 with Object.keys(labTests)
[15:02:48] *** Joins: Deide (~Deide@217.155.19.23)
[15:02:48] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[15:02:48] *** Joins: Deide (~Deide@user/deide)
[15:03:11] <teut> one problem was  type="submit" by default maybe
[15:03:19] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[15:03:19] <ashnur> also, this is not how you do any of this
[15:03:22] <teut> I could see a get query in the bar
[15:03:29] <teut> then how?
[15:03:49] *** Joins: w0ng (~w0ng@103.1.212.68)
[15:04:05] <teut> button click and additional fields addition , removal
[15:04:06] <ashnur> depends how complicated the end result have to be, do you also want to configure complicated components or just simple inputs
[15:04:20] <ashnur> yeah, but what are the possible field types in the future?
[15:04:28] <teut> well once the user adds another Lab test
[15:04:45] <teut> a new list item would be put inside the sidebar
[15:05:00] <teut> Uploaded file: https://uploads.kiwiirc.com/files/dc9dcee60ed8d9fec24ecbb3ff7e9038/image.png
[15:05:14] <teut> currently the Kidney is hard coded
[15:05:26] <ashnur> so, labtests should be state
[15:05:36] <ashnur> useState or all state in useReducer
[15:05:42] <teut> ya I was thinking that but formik is complicated
[15:05:54] <ashnur> if you modify it with event handlers
[15:05:57] <teut> and they actually have initialState like something
[15:06:00] <ashnur> so it makes much more sense to not do that :D
[15:06:36] <teut> have you used formik?
[15:06:43] <teut> before
[15:06:53] <ashnur> and instead on onClick you update in state just an array like `const [listItems, setList] = useState([])`
[15:07:00] <teut> yes
[15:07:08] <teut> I was planning to do that only
[15:07:19] <ashnur> i didn't because it doesnt have features that i need and it's a glorified template language, and template languages are there to waste time
[15:07:23] <teut> but I want to store the whole state of form and make edits then
[15:07:25] <ashnur> which i rather do on my on terms
[15:07:28] *** Quits: w0ng (~w0ng@103.1.212.68) (Client Quit)
[15:07:47] <teut> ya , I m feeling too much troble with it
[15:08:00] <ashnur> yeah, so what you have to do is have 3 different models, one for UI, one for client-state in browser/app, one for backend. your data have to fit each of these separately
[15:08:01] <teut> I rather do the forms just by myself
[15:08:05] <ashnur> exactly
[15:08:13] *** Joins: w0ng (~w0ng@103.1.212.140)
[15:08:44] <teut> the docs are so much twisted and not focussing on the usage of formik and ysecases
[15:08:47] <teut> usecases*
[15:09:04] <stenno> managed inputs and form composition/handling is a basic react task i'd say
[15:09:33] <farn> https://formik.org/docs/examples/field-arrays
[15:09:45] <ashnur> stenno, the thing is, almost no react developers like to think about generating user interfaces, most companies rather hire 20 people to refactor everything every 2 week than to do something sane
[15:10:35] <ashnur> that example uses render props too
[15:10:46] <teut> thanks farn
[15:11:20] <ashnur> sharing stateful behavior between components via render props is not as bad as with HOCs but it's not as good as with Hooks
[15:16:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[15:18:45] *** Quits: straykitten (~straykitt@subs24-116-206-8-27.three.co.id) (Quit: Leaving)
[15:19:30] <teut> https://softchris.github.io/books/react/formik-partI/  this is a good resource for formik than the docs
[15:22:36] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[15:25:00] *** Joins: dc1 (~dc@user/dc)
[15:27:53] *** Joins: kmh (~kmh@p200300df5f3d23000955d7f071ccacf7.dip0.t-ipconnect.de)
[15:29:32] *** Joins: xsperry (~as@user/xsperry)
[15:30:17] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 252 seconds)
[15:31:13] <teut> const objs = { "0": "", 1:"", 2:"" ...};   , how to find the max(Object.keys())?
[15:32:05] <farn> Why don't you use an array?
[15:32:19] <teut> if I will have to delete an item
[15:32:28] <teut> then I will need to grab the key prop
[15:32:33] <teut> that will be a string
[15:33:02] <teut> and then find the index and delete it
[15:34:16] <teut> with a dictionary, its as simple as delete the "key"
[15:35:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:35:49] <stenno> thats certainly the wrong way of doing it
[15:36:07] <teut> in what way?
[15:36:15] <stenno> use .filter to get a new array with the respective value removed
[15:36:52] <teut> hmm, ok , can do that, but are you going into time complexity of deletion from a hashmap?
[15:37:31] <teut> deletion from a list or from hashmap takes O(n)
[15:37:46] <entuland> how often are you going to loop through the keys to find the max one to be removed?
[15:37:49] <stenno> do you have performance issues?
[15:37:51] <teut> even filter also takes O(n)
[15:38:00] <stenno> or are you doing premature optimization
[15:38:12] <teut> hmm maybe
[15:38:17] <teut> stenno
[15:38:29] <spynxic> entuland: good question
[15:38:34] <teut> no I dont have performance issues
[15:38:48] <stenno> write your program in the best way as in most readable, maintainable
[15:38:54] <teut> yes thats a valid point entuland
[15:39:03] <stenno> if you have performance issues afterwards, optimize
[15:39:17] <teut> yes got it ,thanks for the tips
[15:39:27] <teut> ok following your list approach then
[15:40:44] <teut>   let key = Object.keys(labTests).length;
[15:40:44] <teut>   but doesnt this thing loops over the keys, creates an object and then finds the length?
[15:40:58] <teut> creates an Array
[15:40:59] <teut> *
[15:41:07] <entuland> no, that's not going to give you the max key of that obj
[15:41:25] <entuland> as the keys will be the _values_ of the array created with keys()
[15:42:16] <teut> oh yes I forgot I need to maintain an incremental counter
[15:42:38] *** Quits: xsperry (~as@user/xsperry) ()
[15:42:50] <teut> I had created a dynamic form last year, and took advice from here only
[15:43:02] <teut> I should find that code
[15:43:44] <entuland> you don't need an incremental counter either
[15:44:13] <teut> how can I do it without it ?
[15:44:27] <teut> if you deleted the 5th item from 10 items
[15:44:29] <entuland> you need to loop in some way and run max() on each key, so you keep the _max_ you've seen so far, not an incremental counter
[15:44:50] <entuland> once you've seen all keys, you'll know the max key to be deleted
[15:45:03] <entuland> (I don't know how you're creating the keys, that is important)
[15:45:19] <teut> the keys will be the value of counter
[15:45:50] <teut> so always you will get a new integer
[15:46:17] <teut> if you delete 5th item , then  list would have no 5th item
[15:46:19] <entuland> so in practice you're using a dict as an array, as you'll always be adding and removing from the end of it?
[15:46:19] *** Joins: Noustropos (~Noustropo@91.221.89.27)
[15:46:26] <teut> 1, 2, 3, 4, 6 , 7 , 8 , ...
[15:46:47] <teut> ya, that s why I was using a dict
[15:47:12] <teut> since indexing, deletion , addition is easy but addition has time complexity
[15:47:24] <stenno> just put ID into the value obj
[15:47:24] <entuland> so sometimes you remove from the middle, sometimes you want to remove from the end
[15:47:33] <teut> ID is the key only
[15:47:40] <teut> yes entuland
[15:47:55] <teut> the user is the lab assistent
[15:48:06] <teut> so if he adds Kidney test
[15:48:10] <stenno> maybe a Map instead then
[15:48:16] <teut> but later wants to remove it then
[15:48:23] <teut> yes Map only I was using
[15:48:28] <teut> Map/dictionary
[15:49:00] <entuland> even keeping track of the latest key you've added will not let you avoid a loop after deleting the last key, to know the _new_ last key
[15:49:20] <entuland> so you'll have to loop every time you want to remove from the end
[15:49:41] <entuland> say you add 9, 10 and 11, you keep track of 11, you remove 10 for other reasons
[15:49:56] <entuland> when you delete 11 you can't just decrease the max counter by one
[15:50:07] <entuland> you'll have to loop to find that max is now 9
[15:50:22] <teut> yes I m using additional state "counter"
[15:50:35] <teut> no need to loop the dict to find maxkey
[15:50:44] <entuland> a single counter will not let you solve this problem of the current max key
[15:50:50] <entuland> as I just explained above
[15:51:26] <entuland> you have 8,9,11, your max counter will be 11, you have no info that max will be 9 when you'll delete 11
[15:52:04] <teut> when I will delete the object I will pass the key to the handler
[15:52:12] <teut> now fixed?
[15:52:31] <entuland> no idea what you mean by that
[15:52:36] <teut> onClick = {handler.bind(key)}
[15:52:40] <entuland> wait
[15:52:49] <entuland> you have those things as DOM elements?
[15:52:52] <teut> I used this pattern before
[15:53:39] <teut> https://codesandbox.io/s/nameless-breeze-yfhps?file=/src/App.js
[15:53:43] <entuland> if so, you don't have to do double bookkeeping, just ask the DOM for the last element in a container, or something
[15:53:54] <teut> the think I made last yera
[15:54:01] *** Quits: haniaF_ (~haniaF@79.191.78.105.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[15:54:09] <teut> yep
[15:54:46] *** Joins: xsperry (~as@user/xsperry)
[15:55:00] <entuland> so the things you're handling are those options you can add and remove?
[15:55:17] *** Joins: haniaF (~haniaF@79.191.139.37.ipv4.supernova.orange.pl)
[15:55:21] <teut> yes just like google forms
[15:55:25] <teut> but its incomplete
[15:55:28] <teut> the delete part
[15:55:41] <entuland> okay, don't do that double bookkeeping, your data is already there in the DOM, use it
[15:55:53] <teut> yep, will do it thanks
[15:55:57] <entuland> yw
[15:56:37] <teut> but I m not able to understand a lot of my code only  in that sandbox=L
[15:57:06] *** Quits: vqueiroz (uid340368@id-340368.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[15:57:37] <entuland> that's bad
[15:57:40] *** Joins: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry)
[15:57:53] <entuland> did you stitch bits and pieces together by trial and error?
[15:58:02] <teut> lol, had to happen when I just put that in a single file
[15:58:08] <teut> yes
[15:58:14] <entuland> no, it doesn't _have_ to happen
[15:58:18] <teut> asking on discord or at freenode
[15:58:27] <StayHungry> Afternoon, comrades! Check how Javascript (clear syntax) compares to other scripting languages related to date swapping task https://dpaste.org/ekqf/slim
[15:58:33] <Noustropos> Hey, do i need something special, to include array from separate js file?
[15:58:38] <entuland> you should probably stop piling up there and make sure you fully understand what you have
[15:58:44] <Noustropos> Some globals etc?
[15:58:51] <teut> I understood it that time
[15:58:54] <entuland> don't use stuff unless you have a decent understanding of what the code does and why
[15:59:00] <teut> I swear I didnt copy paste it
[15:59:11] <teut> I asked a lot of the stuff from people
[15:59:21] <teut> but now I forgot
[15:59:39] <teut> its only about forgetting
[15:59:45] <entuland> you may want to go through and make sure you understand at least the bits and pieces you're dealing with
[16:00:02] <teut> yep, I need to understand how that bind works
[16:00:07] <entuland> if you find some feature / syntax that you can't recognize at a glance, make sure you practice on it, separately, once you fully grasp it
[16:00:22] <teut> yes
[16:00:42] <farn> You used an array for the questions and I'd suggest that you use one for the lab tests as well
[16:00:59] <entuland> if you have some parts that you know (as features / syntax) but you don't understand as a whole, the code itself may be a mess or bad variable names or overly complex that needs splitting into multiple functions or the alike
[16:01:13] <teut> no no , that codesandbox is a previous project for creating a google form opensourced
[16:01:33] <teut> I wanted to complete it but couldnt do it
[16:02:01] <farn> Okay. I still don't see a reason to use anything but an array to store the lab tests
[16:02:21] <teut> the major problem is keywords and hidden patterns, that's all, the naming and other things are good enough there I think
[16:02:54] <teut> if you see my sandbox farn , you can see I implemented a similar pattern
[16:02:56] <entuland> Noustropos, not enough info, can't be answered as a rule of thumb like that
[16:05:52] <Noustropos> Basicly, I have one js file, which contains ( var array = [a,s,d,f] )
[16:06:16] <farn> teut: Right. What are you trying to say?
[16:06:26] <Noustropos> I include that file with <script src=...></script>
[16:07:08] <teut> no nothing, I just meant I used the llist approach there but it was too much nasty
[16:07:21] <teut> maybe only a little bit nasty
[16:07:29] <Noustropos> Will i be able to access this array in other <script></script>
[16:07:58] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[16:08:03] <farn> teut: That code does seem to be broken. Still, an array is the way to go here
[16:08:22] <teut> I know, the remove button I need to fix that
[16:08:30] <teut> its incomplete
[16:08:58] <teut> but it is good enough to grab some thoughts from
[16:09:54] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 240 seconds)
[16:11:19] <Noustropos> Yeah, i am able to access it without any magic declarations. Thats
[16:12:13] <entuland> Noustropos, yes, that works, you just have to pay attention to the order of <script> tags
[16:18:38] *** austincheney_ is now known as austincheney
[16:21:27] *** Joins: thiras (~thiras@user/thiras)
[16:24:42] *** Quits: Northwoods_ (~Northwood@223.130.30.165) (Ping timeout: 240 seconds)
[16:24:42] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 240 seconds)
[16:26:38] *** Joins: dc1 (~dc@user/dc)
[16:27:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[16:28:58] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:30:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:39:08] *** Quits: haniaF (~haniaF@79.191.139.37.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[16:40:51] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 276 seconds)
[16:42:29] *** Joins: pulse (~pulse@user/pulse)
[16:45:47] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[16:47:57] *** Joins: haniaF (~haniaF@79.191.104.172.ipv4.supernova.orange.pl)
[16:49:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[16:50:05] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:07] *** Joins: stenno (~stenno@user/stenno)
[16:53:08] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 256 seconds)
[16:55:09] *** Joins: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b)
[16:55:41] *** Joins: Jasen (~jasen@111.197.237.106)
[17:00:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[17:04:12] *** Joins: Jasen215 (~jasen@111.197.237.106)
[17:06:08] *** Quits: Jasen215 (~jasen@111.197.237.106) (Client Quit)
[17:06:12] *** Quits: Jasen (~jasen@111.197.237.106) (Ping timeout: 276 seconds)
[17:15:40] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[17:20:59] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[17:20:59] *** Quits: Noustropos (~Noustropo@91.221.89.27) (Read error: Connection reset by peer)
[17:21:13] *** Joins: Noustropos (~Noustropo@91.221.89.27)
[17:23:04] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[17:23:04] *** Quits: Noustropos (~Noustropo@91.221.89.27) (Read error: Connection reset by peer)
[17:23:35] *** Joins: Noustropos (~Noustropo@91.221.89.27)
[17:26:28] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:27:11] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:27:11] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[17:27:11] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[17:27:40] *** Joins: Lyn (~Lyn@user/law)
[17:28:26] <Lyn> How good of an idea is it to even consider using website builders?
[17:31:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 255 seconds)
[17:31:17] *** Joins: haniaF_ (~haniaF@79.191.101.123.ipv4.supernova.orange.pl)
[17:31:49] *** Quits: haniaF (~haniaF@79.191.104.172.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[17:40:33] <entuland> depends on what kind of website you are going to use
[17:40:41] <entuland> s/use/build
[17:41:08] <entuland> and on who's going to admin / maintain / populate it
[17:42:06] <Lyn> hmm I was told they're pretty obsolete nowadays (never really used one), I think ReactJS will do, can have more flexibility too (nb: I'll be learning as I go)
[17:43:01] <Lyn> now I'm wondering if I should use containers in deploying the website
[17:44:16] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:44:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:47:54] *** Quits: jazzy (~jaziz@2600:380:c174:6a3d:897b:27a0:9f86:1d4) (Ping timeout: 240 seconds)
[17:48:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bcb4:59ef:c17d:b5fb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:50:24] <entuland> oh wait, you may want to define better what you mean by "website builders"
[17:50:59] <entuland> cause there is plenty of such things around that are actively used, both as SaS and as standalone programs
[17:51:10] <Lyn> I'm not really sure either, my understanding was that they're simple enough tools to get something working quick, without having to delve into the details of coding everything by hand
[17:51:41] <entuland> there are various approaches at that, with more or less "preparation" work
[17:52:11] <entuland> static website builders, CMS, CMF, SaS builders like WiX and so forth
[17:52:26] <Lyn> I see
[17:53:57] <entuland> the "dynamic-ness" of the website and its projected "size" are important to decide about it
[17:54:24] <entuland> you may be fine with a flat-file dynamic CMS or one running on SQLite
[17:55:03] <entuland> both can be used with zero coding experience
[17:55:38] <stenno> dymanicity
[17:55:43] <stenno> dynamicity
[17:57:03] <Lyn> what about the deploying side of websites, earlier I set up a Hello world on a VPS just to experience it, but iirc it took quite a bit of tinkering - should I use Docker to get things running quickly
[17:57:14] <entuland> oh nice, I forgot about that word
[17:57:22] <stenno> i made it up
[17:57:43] <stenno> maybe it exists by accident
[17:57:44] <entuland> oh it's a real word
[17:58:28] <stenno> well it is
[17:58:32] <stenno> blimey
[17:59:15] <entuland> Lyn, it really depends on the system you decide to use - a static website builder could be just an EXE running on your Windows machine and all you have to do to deploy is copy the HTML files over to the server every time you alter one
[18:00:32] <entuland> a flat file / SQLite system could be fully tracked in GIT and the deployed via GIT itself
[18:00:42] <entuland> s/the/then
[18:03:40] <stenno> it could, but
[18:03:46] <stenno> it really shouldn't right
[18:05:34] <entuland> couldn't say, I'd be fine with it, the only really important thing is probably never pushing the DB from dev to prod, as prod has the live data that, say, gets updated by the editors / users of the website
[18:05:37] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[18:07:34] <entuland> getting things running quickly depends on a lot of different things (project at hand, tastes, experience level and so forth) - depending on the cases a persistent Linux server running in a VM could be just good enough for the dev phase, Lyn
[18:10:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:10:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:11:03] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[18:11:17] *** Joins: BUSY (~BUSY@user/busy)
[18:16:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[18:17:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:24:01] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 265 seconds)
[18:25:53] *** Joins: summersault (~summersau@179.221.251.16)
[18:26:10] *** Quits: stenno (~stenno@user/stenno) (Quit: WeeChat 3.1)
[18:26:24] *** Joins: stenno (~stenno@user/stenno)
[18:32:50] *** Joins: zebrag (~chris@user/zebrag)
[18:35:53] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[18:39:13] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[18:40:56] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 265 seconds)
[18:41:49] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[18:43:57] *** Joins: ferdna (~ferdna@user/ferdna)
[18:47:50] *** Quits: Liblx (~Alex@2a02:810c:280:59c:98a5:4a8:2d16:599b) (Quit: WeeChat 3.2)
[18:49:15] *** Joins: dc1 (~dc@user/dc)
[18:52:05] *** Joins: summersault (~summersau@179.221.251.16)
[18:52:47] *** Joins: Crassus (~Crassus@user/crassus)
[18:54:09] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:55:05] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[18:56:03] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 276 seconds)
[19:06:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[19:06:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:08:20] *** Joins: Naan (~naan@user/naan)
[19:22:33] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[19:27:45] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Quit: The Lounge - https://thelounge.chat)
[19:28:31] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[19:28:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[19:29:36] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[19:40:52] *** Parts: hassoon (hassoon@user/hassoon) ()
[19:42:04] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[19:44:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:47:00] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[19:47:38] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 265 seconds)
[19:50:22] *** Joins: summersault (~summersau@179.221.251.16)
[19:54:19] <shan> is there any way to _not_ change the value of this in an onclick
[19:54:45] <stenno> just bind your handler with a big arrow function
[19:54:50] <stenno> then you have lexical scoping
[19:54:56] <stenno> if thats what you mean with `this`
[19:55:52] <stenno> el.addEventListener('click', (e) => { ... `this` is lexical scope in here })
[19:56:06] <shan> i did that ;_; i don't have any functions using `function`
[19:57:04] <stenno> then i am not sure what you mean with 'not change the value'
[19:57:15] <stenno> change from what to what?
[19:58:06] <shan> So, i have a class method that gets called in an onclick, and it references a member of the class using `this`. But it seems to be looking inside the button object instead of the class instance.
[19:59:05] <shan> when i log `this` in the class method, sure enough, it's referring to the button and not the object
[20:01:23] <stenno> n> const [,..rest] = 'foo'; rest @ celphi
[20:01:24] <jellobot> celphi, SyntaxError: Unexpected token '.'
[20:01:26] <stenno> oops
[20:01:31] <stenno> n> const [,...rest] = 'foo'; rest @ celphi
[20:01:32] <jellobot> celphi, [ 'o', 'o' ]
[20:02:39] <entuland> shan, alternatively you can "self = this" beforehand to avoid the ambiguity
[20:02:52] <shan> entuland: did that, too, doesn't work
[20:03:00] <entuland> then share your code so that we can check
[20:03:15] <entuland> if self = this fails as well, you have some other problem there
[20:03:42] *** cbleslie8 is now known as cbleslie
[20:04:39] <shan> UGH
[20:04:43] <shan> I JUST FIGURED IT OUT
[20:04:44] <shan> god damn it
[20:04:52] <shan> i missed the arrow function while assigning the onclick
[20:05:09] <entuland> glad you found the culprit
[20:05:32] <shan> stenno, entuland: thank you
[20:05:37] <entuland> yw
[20:05:38] <stenno> o7
[20:05:58] <shan> ooh is that a salute
[20:06:00] <shan> i'm stealing that
[20:06:05] <stenno> yes
[20:06:26] <entuland> oh a very odd molecule
[20:06:31] <stenno> lol
[20:06:40] <stenno> o7+++
[20:06:43] <stenno> _very_ radical
[20:06:50] <stenno> or is that the opposite of radical
[20:06:58] <stenno> oh wait o only has two arms righ
[20:06:59] <shan> what's the pluses :0
[20:07:05] <stenno> so o7+++++
[20:07:09] <entuland> can't tell, I exploded my chemistry lab
[20:07:16] <stenno> like o3+ ?
[20:07:27] *** Joins: matt-r (~matt-r@102.132.241.206)
[20:07:32] <shan> Ahhhh a radical
[20:07:38] <stenno> i thought it denoted that it has one more 'arm' than it should have
[20:08:54] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[20:09:13] <stenno> i only had physics in upper education
[20:09:16] <stenno> so i wouldn't know
[20:10:12] *** Quits: matt-r (~matt-r@102.132.241.206) (Client Quit)
[20:10:12] *** Joins: codebam (~codebam@user/codebam)
[20:10:33] *** Joins: hassoon (hassoon@user/hassoon)
[20:11:06] *** Quits: codebam (~codebam@user/codebam) (Client Quit)
[20:12:01] <entuland> I have a feeling that any On variant has no ionic charge
[20:12:28] <celphi> i just saw the ping
[20:12:32] <entuland> oh, 03 indeed has a +1
[20:12:33] <celphi> thnx stenno
[20:19:22] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:20:46] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[20:23:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:29:26] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[20:29:49] *** Joins: cantelope (~cantelope@173-27-116-255.client.mchsi.com)
[20:33:21] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[20:34:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[20:35:14] *** Joins: zebrag (~chris@user/zebrag)
[20:35:15] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 250 seconds)
[20:38:28] *** Joins: summersault (~summersau@179.221.251.16)
[20:43:33] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:19] *** Joins: Northwoods_ (~Northwood@223.130.30.165)
[20:47:19] *** Joins: Northwoods (~Northwood@223.130.30.165)
[20:53:54] *** Joins: Rockwood (~Rocky@user/rocky)
[20:55:07] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:58:03] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[20:58:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:58:47] *** Quits: Northwoods_ (~Northwood@223.130.30.165) (Quit: Leaving)
[20:59:50] <shan> Ok, ternaries, do we like them
[21:01:13] <stenno> do you?
[21:01:39] <stenno> unless they are a) nested or b) used for flow control, its all good
[21:06:59] <shan> i've been using them a lot so i'd say i like them
[21:07:12] <shan> and no, they aren't nested _or_ being used for flow control
[21:08:56] *** Joins: entuland (~entuland@user/entuland)
[21:09:26] <Rockwood> stenno, o/
[21:09:36] <stenno> hi
[21:12:13] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 265 seconds)
[21:12:31] *** Quits: Northwoods (~Northwood@223.130.30.165) (Ping timeout: 250 seconds)
[21:12:40] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[21:13:07] <shan> sites can't access each other's localStorages, can they
[21:13:11] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[21:13:40] <GreenJello> nope, it's per-origin
[21:14:59] <shan> right
[21:15:11] <shan> GreenJello: but that means pages on the same origin can access each other's, right?
[21:16:28] <shan> here's what i've been working on all day, btw :p thanks a bunch to everyone who helped me fix my shit https://shantaram3013.github.io/pseudows/
[21:16:29] <entuland> same origin, yes, which must match in full (including subdomain _and_ protocol)
[21:16:30] <GreenJello> yeah, it doesn't care what the path segment of the URL is
[21:16:34] <shan> entuland: right
[21:17:41] <GreenJello> cool, looks like a fun project
[21:17:50] <shan> :D it was
[21:18:32] <shan> i should make the terminal work but i just cba
[21:18:59] <entuland> extremely accurate as well https://i.imgur.com/1dFNeJN.png
[21:20:17] <shan> LOL yeah that was the idea
[21:20:37] <shan> a friend came up with it so i can't take credit sadly
[21:20:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d7b:f375:e1af:4c05)
[21:22:28] *** Joins: tonelo (~tonelo@host-87-14-215-10.retail.telecomitalia.it)
[21:28:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:31:50] *** Quits: Noustropos (~Noustropo@91.221.89.27) (Ping timeout: 255 seconds)
[21:32:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[21:34:48] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:e1ce:b567:194b:5747)
[21:35:22] *** Joins: WishBoy (~WishBoy@user/wishboy)
[21:36:47] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d7b:f375:e1af:4c05) (Ping timeout: 255 seconds)
[21:37:24] *** Tobbi__ is now known as Tobbi
[21:40:44] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:42:13] *** Joins: summersault (~summersau@179.221.251.16)
[21:44:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:47:12] *** Joins: dc1 (~dc@user/dc)
[21:47:17] *** Joins: Betal (~Beta@user/betal)
[21:51:38] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 255 seconds)
[21:52:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[21:57:24] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Ping timeout: 244 seconds)
[22:01:59] <shan> so... are the JS DOM apis just a bunch of string munging code
[22:02:49] <GreenJello> nope
[22:05:44] *** Joins: Naan (~naan@user/naan)
[22:06:43] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[22:11:35] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[22:12:28] *** Joins: dracula (~dracula@117.222.67.118)
[22:12:36] <dracula> is there a way to change the styles set by user-agent stylesheets like `highlighters.css` by writing an extension in Firefox?
[22:12:56] <dracula> pardon me #firefox is always silent so i asked here.
[22:13:56] <GreenJello> you could inject more CSS into the page
[22:14:15] <GreenJello> not sure if modifying the user-agent stylesheet is a thing
[22:14:47] <dracula> GreenJello: the usual way of doing that is `userChrome.css` or `userContent.css` doesn't work. that's why i asked. i hoped it's possible by writing some extension in Firefox.
[22:16:01] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[22:16:16] <dracula> s/is/which is/
[22:19:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:31:44] *** Joins: dracula_ (~dracula@117.222.64.22)
[22:32:06] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c993:382f:f6c:90f1)
[22:33:55] *** Quits: dracula_ (~dracula@117.222.64.22) (Client Quit)
[22:34:50] *** Quits: dracula (~dracula@117.222.67.118) (Ping timeout: 256 seconds)
[22:37:05] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 255 seconds)
[22:41:07] *** Joins: dracula (~dracula@117.222.64.22)
[22:44:20] *** Joins: summersault (~summersau@179.221.251.16)
[22:45:11] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 255 seconds)
[22:46:31] *** Joins: phenom (~primus@user/phenom)
[22:48:28] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:53:18] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 276 seconds)
[22:56:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[22:58:40] <teut> https://codesandbox.io/s/8r1cz?module=/example.js&file=/example.js  can someone help find what prop of <Form.Field>  for gender select specifies the onchange selected?
[22:59:11] <teut> like how to put selected?
[22:59:53] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:59:56] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[23:06:23] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[23:08:22] *** Joins: JaredCE (~JaredCE@93.115.192.243)
[23:08:55] *** Quits: dracula (~dracula@117.222.64.22) (Quit: leaving)
[23:11:03] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Client Quit)
[23:12:48] *** Quits: JaredCE (~JaredCE@93.115.192.243) (Ping timeout: 256 seconds)
[23:13:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:14:17] *** Quits: g00fy (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[23:16:00] *** Joins: g00fy (~g00fy@user/g00fy)
[23:18:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[23:23:12] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[23:24:19] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[23:27:24] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[23:28:21] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[23:28:44] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[23:30:35] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[23:30:43] *** Joins: Tempesta (Tempesta@user/tempesta)
[23:35:05] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 268 seconds)
[23:35:56] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[23:36:36] *** Joins: summersault (~summersau@179.221.251.16)
[23:39:36] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:40:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:75af:7907:b5fe:65e1) (Quit: Textual IRC Client: www.textualapp.com)
[23:40:58] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[23:44:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:47:59] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[23:48:10] <farn> teut: Are you looking for value="female"?
[23:48:14] *** Joins: dc1 (~dc@user/dc)
[23:52:52] *** Woet_ is now known as Woet
[23:53:10] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 265 seconds)
[23:53:59] *** Joins: summersault (~summersau@179.221.251.16)
[23:55:40] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[23:57:58] <teut> actually vscode's smart hinting showed me "selection" prop
[23:58:20] <teut> so I had to do selection={gender}
[23:58:30] *** Joins: Celeo (~Celeo@user/celeo)
[23:58:52] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[23:59:14] <teut> https://dpaste.org/o2Fo am I using the useReducer correctly?
[23:59:21] <teut> I m a noob
[23:59:43] <teut> see line 5
