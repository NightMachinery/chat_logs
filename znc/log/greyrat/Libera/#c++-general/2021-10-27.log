[00:00:36] *** Joins: Tokamak (~Tokamak@107.117.203.17)
[00:03:09] <rpav> LordKalma: this is likely where you want a m:m to link subtables
[00:03:25] <rpav> err, 1:m i think
[00:03:59] <rpav> i suppose it depends whether you're linking preconfigured bits or whether each one needs to be unique
[00:06:37] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
[00:06:59] *** Quits: pah_ (~pah@host-87-20-64-150.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[00:08:57] *** Joins: pah (~pah@user/pah)
[00:13:14] <LordKalma> yeah, each "group" is a preconfigured thing, yeah
[00:13:22] <LordKalma> I guess it would be "many 1:1s"
[00:14:23] *** Quits: magla (~gelignite@55d4747b.access.ecotel.net) (Quit: Stay safe!)
[00:14:43] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6926:4bc4:cc94:817e) (Quit: Quit)
[00:14:54] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:15:18] <rpav> oh actually probably since you're likely to have multiple target tables and only one row from each .. what are you using this for again? TheGuestMovie may be right, and this basically describes entity/component
[00:15:57] <Guest82> how do I have an object send a reference to itself via a method call?
[00:16:06] <LordKalma> *this
[00:16:06] <rpav> like how much do you need "search on disk" vs "iterate in memory"
[00:16:39] <LordKalma> Guest82, that was the answer for you: *this (you can dereference this)
[00:16:53] <Guest82> LordKalma: I get "no suitable constructor to convert from Class* to Class ...
[00:16:58] *** Joins: badone (~badone@209.132.189.136)
[00:17:05] <LordKalma> *this isn't a pointer
[00:17:11] <LordKalma> you sure your method takes a reference?
[00:17:17] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Killed (NickServ (GHOST command used by Friithian!gunqqer@friithian.dev)))
[00:17:31] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[00:17:31] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:17:55] <Guest82> my bad! but now I get "initial value of reference to non-const must be an lvalue"
[00:17:57] <LordKalma> foo(Class *) -> foo(this)     foo(Class &) -> foo(*this)
[00:18:24] *** Joins: RoKenn (~RoKenn@2001:a61:3505:d101:c979:1db7:642f:4055)
[00:18:24] *** Quits: RoKenn (~RoKenn@2001:a61:3505:d101:c979:1db7:642f:4055) (Changing host)
[00:18:24] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:18:39] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[00:18:50] *** Quits: andreasbuhr (~quassel@p549db179.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:55] <LordKalma> Guest82, we're going to need example code for that, I'm not seeing the issue
[00:19:09] <LordKalma> at leasdt the method signature that you're trying to use
[00:19:26] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[00:19:46] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:19:59] *** Joins: Karyon (~Karyon@user/karyon)
[00:20:08] <Guest82> well adding * in font of the `this` fixed it for me but I don't see why
[00:20:24] <Guest82> my method is of the form `int foo(Class &);`
[00:20:50] <LordKalma> yeah, that should be a *this then
[00:20:50] <Guest82> and the call, as I was writing it, was `auto i = foo(this)`
[00:21:13] <Guest82> what does the * operator do in thes context
[00:21:21] <LordKalma> it's a dereference
[00:21:24] <LordKalma> just like an array
[00:21:25] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[00:21:27] <LordKalma> because this is a pointer
[00:21:37] <Raziel> it says "get me the thing this pointer points to"
[00:21:45] <Raziel> where without it you're just saying "get me (the value of) this pointer"
[00:22:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:22:59] *** Joins: pah (~pah@user/pah)
[00:23:06] <LordKalma> {Class a;} class Class; int foo(Class&){BARK; return 0;} class Class{Class(){foo(*this);}};
[00:23:06] <geordi> error: 'Class::Class()' is private within this context
[00:23:17] <LordKalma> {Class a;} struct Class; int foo(Class&){BARK; return 0;} struct Class{Class(){foo(*this);}};
[00:23:18] <geordi> foo(Class&)
[00:23:22] <LordKalma> see? it works
[00:25:51] <Guest82> okay so the error was that it can't transform a raw pointer to a reference because ... reasons so it needs the actual object to do it, like, what if I give it a dangling pointer? surely that can't be good
[00:26:10] <LordKalma> you're not making much sense
[00:26:23] <LordKalma> you could make us a minimum example to reproduce the problem in compiler explorer ;)
[00:26:34] <rpav> is this homework
[00:26:38] <LordKalma> or wandbox. Personally I'm team CE
[00:27:11] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:27:24] <LordKalma> rpav, at least it's a concrete question. Not "how 2 hack whatsapp" :D :D :D So even if it's homework, it's legit
[00:27:24] *** Joins: Karyon (~Karyon@user/karyon)
[00:27:37] <rpav> CE ftw https://en.wikipedia.org/wiki/Windows_CE_5.0 wait wrong link
[00:27:45] <johnny> CE what
[00:27:51] <johnny> hehe
[00:28:03] <rpav> LordKalma: yeah
[00:28:19] <LordKalma> we all start by the beginning
[00:28:20] <Guest82> really, the code compiles nicely. I just wanted to make sure I understood what "initial value of reference to non-const must be an lvalue" was all about
[00:28:27] <rpav> it would be helpful to see their code .. i think there are more basic issues at hand
[00:28:35] <LordKalma> I agree with rpav
[00:28:36] <rpav> ah
[00:28:38] <Guest82> it's not homework I'm just trying to learn C++
[00:28:43] <rpav> close enough!
[00:28:51] <LordKalma> "fixed by *postfixing* *" is... weird
[00:28:53] <johnny> i feel like CE could be a bit easier to use (just a few weird ui choices). why do people use wandbox or others over it?
[00:29:04] <Guest82> I'll try making a paste
[00:29:15] <LordKalma> johnny, Matt admits he's terrible at UX
[00:29:19] <LordKalma> and to be honest, he is
[00:29:24] <rpav> johnny: no idea, i don't .. though to be fair wandbox supported multiple files when the rest did not, which can be pretty helpful
[00:29:31] <LordKalma> thaat said, Wandbox has that shady website look
[00:29:39] <LordKalma> yes, that's the thing going for it
[00:29:44] <rpav> if CE is bad, wandbox is terrible
[00:29:46] <johnny> rpav, ah, so people maybe just got used to it having something nboody else did
[00:29:51] <LordKalma> now you can use CE with multiple files, but you have to write cmake
[00:30:08] <johnny> how about library selection, was that different over time?
[00:30:30] <rpav> not sure, also CE didn't have code execution until kinda recentlyn
[00:30:40] <rpav> how do you _get_ a cmake/multifile CE setup anyway
[00:30:43] <LordKalma> also CE saving the last thing I saw is both cool and so annowing
[00:30:55] <LordKalma> rpav, "Add -> Tree (IDE Mode)"
[00:31:02] <johnny> yeah it's hard one of those things where you don't know the right choice to make :(
[00:31:16] <johnny> thanks for the history. appreciate it
[00:31:32] <rpav> oh duh thanks
[00:31:58] <LordKalma> oh cmake seems optional
[00:31:59] <LordKalma> cool
[00:32:10] <LordKalma> just click + to add files to the build, interesting
[00:32:22] <johnny> hmm..  ya know... what about pointing it at a gist..
[00:32:22] <rpav> i havne't really messed with it .. if you can just #include a few .h then that's sufficient for like 99% of what i'd do
[00:32:29] <Raziel> I still don't actually know how to get CE to show the damn output of the code
[00:32:37] <rpav> johnny: i think you have been able to #include <url> for awhile actually
[00:32:39] <LordKalma> btw in CE you can #include from an URL
[00:32:47] <LordKalma> #include <github/raw/file.h>
[00:32:48] <johnny> oh i had no idea
[00:32:54] <johnny> TIL TIL
[00:32:57] <rpav> Raziel: click the gear under the compiler and check "Execute code"
[00:32:59] <LordKalma> great to use header-only libs
[00:33:07] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[00:33:13] <johnny> how do they prevent abuse?
[00:33:21] <LordKalma> Matt has a talk about that
[00:33:21] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[00:33:29] <rpav> it's heavily sandboxed or something i dunno
[00:33:32] <LordKalma> basically the running is heavily containerized
[00:33:34] <Guest82> where is the actual link for CE? x)
[00:33:39] <LordKalma> https://godbolt.org/
[00:33:55] <LordKalma> Matt used his own name for the domain name
[00:33:58] <johnny> hmm.. why doesn't matt have compilerexplore.org or somethin?
[00:34:00] <johnny> aliased toit
[00:34:09] <LordKalma> a decision he'll regret for the rest of his life hahah
[00:34:12] <LordKalma> because he's now a verb
[00:34:19] <rpav> cuz everyone really just calls it godbolt and it's shorter to type
[00:34:20] <johnny> indeed.. it's not something you see everyday
[00:34:43] <Guest82> well he we go: https://godbolt.org/z/YjzbEPKW6
[00:34:47] <johnny> it doesn't matter if it's shorter to type, one's easier to tell what i is. thus alias, not necessarily a full replacmenet
[00:34:52] <Raziel> rpav, woo it works
[00:35:10] <Guest82> it doesn't compile but that shouldn't be too bad it's just header files anyway
[00:35:30] <LordKalma> Guest82, in what you sent, what was the problematic line?
[00:35:34] *** Joins: PeridotJeff (~PeriBooty@user/peribooty)
[00:35:55] <rpav> Guest82: generally keeping arrays/vectors/etc of references or reference members is a huge pita and to be avoided
[00:36:13] <LordKalma> and for gods sake, don't use `using namespace`
[00:36:22] <LordKalma> where are you learning c++?
[00:36:34] <Guest82> LordKalma: https://godbolt.org/z/afd6sWf41 this has the additional lines
[00:36:42] <LordKalma> whatever is teaching you is teaching you the worse practices :p
[00:36:42] <rpav> kinda bad but shrug
[00:36:43] <Raziel> using namespace std;? at this time of year, at this time of day, in this part of the channel, localized entirely within your paste?
[00:37:05] <LordKalma> Raziel is TRIGGERED OMG NOOOOOOO SAVE THE CHILDRENNNNNNNNNN
[00:37:09] <Raziel> lol
[00:37:11] *** Joins: pah (~pah@user/pah)
[00:37:19] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:37:25] <rpav> at some point one wants to avoid it just because you don't want all of std's crap infesting your code
[00:37:32] *** Joins: Karyon (~Karyon@user/karyon)
[00:37:37] <Guest82> I wasn't using it first ... but then my types got too long
[00:37:46] <LordKalma> typedef them
[00:37:46] <johnny> you can alias the types too
[00:37:52] <johnny> not typedef if you can avoid it
[00:38:00] <rpav> you can also `using std::vector;` or `using std::array;` etc
[00:38:19] <LordKalma> or `using my_t = std::vector<std::list<std::pair<std::size_t,std::whatever_the_fuck>>>`
[00:38:22] <johnny> using fooa = std::vector<foo>
[00:38:24] <Guest82> alright, then about the references arrays ... how is bad?
[00:38:43] <rpav> maybe vector/array/string/cout/cerr/endl are worth it but i don't usually bother except in my scratch code, so i can paste more succinctly here
[00:38:44] *** Quits: PeriBooty (~PeriBooty@user/peribooty) (Ping timeout: 258 seconds)
[00:38:49] <LordKalma> Guest82, because storing things you don't own means they might go away and then you crash
[00:39:01] <rpav> Guest82: generally storing references is terrible, they can't be moved or copied
[00:39:14] <LordKalma> yeah, references especially bad
[00:39:16] <rpav> well, they can't be moved or copied implicitly, which is the problem
[00:39:28] <LordKalma> prefer storing pointers
[00:39:31] <rpav> ^
[00:39:31] <johnny> why can't they be moved?
[00:39:35] * Raziel throws reference_wrapper at you
[00:39:37] <rpav> because C++ is dumb
[00:39:51] <LordKalma> there's always a std:: thing, Raziel hahah
[00:39:57] <johnny> i understand not copying them, but they should be able to be moveable theoretically right?
[00:39:58] <Raziel> indeed
[00:40:09] <LordKalma> anyway, Guest82, let us recommend https://www.learncpp.com/ to you
[00:40:20] <rpav> johnny: copying is perfectly fine too
[00:40:25] <LordKalma> nice for a sistematic approach
[00:40:35] *** Quits: PeridotJeff (~PeriBooty@user/peribooty) (Ping timeout: 264 seconds)
[00:40:44] <LordKalma> references are pointers with a tamer name. the core language bullshit around them is just dumb
[00:41:01] <rpav> like there is zero reason you can't copy a reference, it doesn't denote ownership and it would be no different than copying a pointer, except the syntax for doing so would be hackish
[00:41:48] *** Joins: PeriBooty (~PeriBooty@user/peribooty)
[00:42:02] <rpav> er. actually it isn't even
[00:42:19] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[00:42:27] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[00:42:31] <rpav> { int i; int& x = i; int& y = x; } // etc
[00:42:32] <geordi>  
[00:42:33] <LordKalma> it's c++... if it was coherent and sensible it would be, like, F#? hahaha
[00:42:34] * LordKalma runs
[00:42:38] <rpav> heh
[00:42:47] *** Joins: pah_ (~pah@host-79-41-20-192.retail.telecomitalia.it)
[00:42:50] <rpav> i don't even know C#, have very little idea about F# :(
[00:43:20] <Guest82> hmm, well I don't need to copy nor move the agent players, I just want them to emit moves. But I don't really need them to exist outside the TTT class so there is that
[00:43:41] <LordKalma> F# is a fun language because it tries to be functional because functional is the new cool kid in town, but supporting OOP to both be able to use the .net stdlib and to market to the python audience they are so clearly and desperately trying to grab
[00:43:43] <Guest82> maybe I should have it instantiate its own Agents and go from there
[00:44:30] <rpav> LordKalma: sounds like that one kid that tries to get attention and everyone ignores anyway
[00:44:41] <LordKalma> rpav, click "Object support" under "simple, modern features": https://dotnet.microsoft.com/languages/fsharp
[00:45:02] <Guest82> *"cool new kid in two" ... angry haskell noises
[00:45:12] <rpav> is it whitespace-sigificant?
[00:45:20] <Guest82> F#? yes
[00:45:23] <rpav> ;/
[00:45:30] <LordKalma> under "first class functions" you have a nice example of declarative programming though
[00:45:38] <LordKalma> which we're having now in C++ with ranges
[00:45:44] <rpav> that's one other thing that makes me ignore most of the functional stuff
[00:45:45] <LordKalma> declarative programming is so cool, ngl
[00:46:06] <rpav> kinda .. there are definitely some neat features
[00:46:20] <rpav> and declarative things _definitely_ have a lot of interesting uses though i'm not sure i'd do so for general-purpose
[00:46:32] <LordKalma> the `let sumOfOddSquares nums =` example in the link is clear
[00:46:43] <LordKalma> it's the cool crap you can do with declarative patterns
[00:46:49] <rpav> but like the animation/vector file format/renderer thing i did uses basically declarative stuff for animations and it's easy and pretty damn powerful
[00:47:03] <johnny> LordKalma, it's not about "being cool" it's bexause it's better :)
[00:47:21] <LordKalma> johnny, declarative programming or F#? hahaha
[00:47:26] <rpav> i dunno i'm just not enthusiastic about textual languages anymore though
[00:47:46] <rpav> it's just "ooh look at _my_ cute syntax-of-the-month" and not really going beyond
[00:48:03] *** Quits: pah_ (~pah@host-79-41-20-192.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[00:48:06] <johnny> functional style .. but not like all way ,though. just at least to what ruby can do
[00:48:14] <rpav> ruby?!
[00:48:16] <johnny> mixing paradigms
[00:48:23] <LordKalma> declarative programming certainly would scare C programmers. It's the ultimate trust your compiler exercise. That said, it's also the syntax that allows better optimization for it, I'd say. In functional programming there's a lot of guessing the semantics of your code to completely re-write in assembly
[00:48:29] <rpav> ruby is pretty much as solidly OO as it gets
[00:48:36] <rpav> this side of smalltalk
[00:49:03] <johnny> well OO is still pretty imperative though
[00:49:03] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[00:49:15] <rpav> LordKalma: i dunno, FP was supposed to take the world by storm because it solved all the problems like 15 years ago
[00:49:26] <rpav> 3-5 years ago it was rust
[00:49:27] *** Joins: pah (~pah@user/pah)
[00:49:28] <johnny> so i don' really think about OO vs imperative vs functional, but imperative vs functional vs fully declarative
[00:49:31] <rpav> i wonder what it's going to be in 2025 :P
[00:49:36] <LordKalma> hahaha
[00:49:39] <rpav> 20-25 it was java
[00:49:40] <rpav> etc
[00:49:45] <LordKalma> everything is sold as a holy grail, which it's not
[00:49:58] <rpav> FP has neat toys though absolutely and we should steal them all
[00:49:58] <LordKalma> that said, declarative patterns have their place, as with everything
[00:50:01] <rpav> yeah
[00:50:18] <johnny> i think you folks just get too disillusioned with the hype train, rather than just having newer ways to think about the same problems
[00:50:23] <LordKalma> what this field learns again and again and again and again and never really learns it for good is that there are no "ultimate patterns"
[00:50:38] <johnny> or a reminder of old ways to think about the same problems :)
[00:50:40] <LordKalma> johnny, we're just criticizing the hype train haha
[00:50:54] <johnny> don' bother, just enjoy what there is :)
[00:51:05] <rpav> the hype train is a lie, which is not to say things dont' have their place
[00:51:24] <LordKalma> 3 years ago, besides Rust, it was the data-driven patterns
[00:51:25] <rpav> just look more for that place vs the starry-eyed fans
[00:51:42] <rpav> you mean data oriented design?
[00:51:45] <LordKalma> vectors of components, not vectors of objects, OMG
[00:51:47] <LordKalma> yes that, sorry
[00:51:49] <rpav> that definitely has its place
[00:51:53] <LordKalma> sure it does
[00:51:55] <johnny> i think it's all fine, because it's hopefully slowly making us all better programmers
[00:52:15] <LordKalma> but again, there seems to be this lacking of nuanced understanding of features
[00:52:17] <rpav> i'm not sure how big that hype train was though, most people i talk to are like, anti-hype about it
[00:52:29] <Guest82> if I initilize my array<Class, 2> member variable with say {Class(), Class()}, will those Class's continue to exist when I exit the function that initialized the array?
[00:52:35] <LordKalma> OOP is either great or EVIL. DDD is THE BEST. No wait, functional IS THE BEST BEST BEST
[00:52:36] <rpav> but compositional stuff is still really lacking in good tools for the most part
[00:52:36] <LordKalma> etc etc
[00:52:56] <rpav> ddd was pretty neat :( https://www.gnu.org/software/ddd/
[00:53:03] <johnny> and i think reflexive contrarianism is worse than buying into the hype (as long as it doesn't make products worse)
[00:53:19] <rpav> to some degree
[00:53:25] <LordKalma> entity component systems are cool, but not easy to express on a statically typed language
[00:53:41] <johnny> and there's a lot of reflexive contrarianism amongst nerds
[00:53:51] <LordKalma> the best entity component system container would be a python list hahaha
[00:53:54] <LordKalma> hahaha sure there is
[00:54:04] <LordKalma> it's almost as bad as metal elitism cough PJBoy
[00:54:11] <johnny> sorry, but being anti things isn't a personality
[00:54:14] <PJBoy> hey man
[00:54:15] <rpav> my attitude is usually "what problems that i have does it solve" / "what has it been used for in real life" / "what are its strengths and downsides" .. if someone can answer none of those specifically then you're probably talking to a fanboy
[00:54:20] <PJBoy> I'm not metal elitist
[00:54:45] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[00:54:48] <LordKalma> I know. BUt you've engaged in metal elitist talking in this same channel, but I don't remember who was the other person, so I tagged you
[00:55:01] <johnny> we're talking music now right?
[00:55:04] <rpav> some might consider it "reflexively contrarian" but to me it's just pragmatism .. nothing is perfect but if you can give me a realistic rundown i might be interested
[00:55:07] <Raziel> ECS is pretty great tbh
[00:55:20] <johnny> not apple's metal whatever thingy
[00:55:21] <LordKalma> johnny, no. we're really fanboys of alluminium alloys
[00:55:55] <Raziel> LordKalma, I prefer some magnesium alloys, and gamma titanium, but highend aluminium alloys have their uses
[00:56:09] <LordKalma> ah fuck apple's metal. "Vulkan? miss me that standardized shit. <Think Different>"
[00:56:35] <johnny> rpav, yeah i think it's important to answer downsides, although most of the things i want new stuff to do is expressing what you can already do just in a more reasonable way. like your little library (or ranges in theory)
[00:56:55] <johnny> i see temporary vars and i want to get rid of them
[00:57:14] <rpav> well if you're talking in-language then yeah one is often looking for better ways to solve problems
[00:57:30] <LordKalma> that's what language evolution group is supposed to be for
[00:57:33] <johnny> and sometimes you get inspired by why you see "language of the week" does
[00:57:39] *** Quits: AmR (~AmREiSa@156.199.244.83) (Quit: Konversation terminated!)
[00:57:40] <rpav> definitely
[00:57:41] <LordKalma> I'd like to think proposal authors are not just fucking around
[00:57:46] <LordKalma> they all have things in mind
[00:57:49] <rpav> stealing features is a huge win
[00:57:51] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[00:57:53] *** Joins: pah (~pah@user/pah)
[00:57:55] <LordKalma> true
[00:58:01] <johnny> ruby inspired me a lot back in the day
[00:58:06] <LordKalma> I've seen a lot of people saying Rust is only making C++ better hahah
[00:58:07] <rpav> but a more powerful language can adopt new features without needing to change the core language
[00:58:19] <LordKalma> what we need is to break the fucking ABI in some near release
[00:58:27] <LordKalma> but that's another subject
[00:58:28] <rpav> johnny: you a former rubiest too? hah
[00:58:30] <johnny> i never really wrote ruby much ruby, but it did teach me different ways to express the same problems
[00:58:33] <rpav> ah
[00:58:37] <rpav> it had some neat things though
[00:58:40] <johnny> like sinatra
[00:58:59] <rpav> chaining and lambdas/implicit procs let you express things pretty nicely
[00:59:09] <johnny> sinatra showed me what a basic web server/app could look like.. remove all the garbage.. only exactly what you'd need to solve the problem
[00:59:16] <LordKalma> hahah I'm not a professional programmer, I know python and barely c++. But I'm a trained physicist working in electrical engineering, so I totally understand what you mean
[01:00:04] <johnny> and just ruby making () optional in a lot of cases really taught me what a DSL could be
[01:00:16] <rpav> LordKalma: i think the ABI isn't particularly stable anyway and the API is definitely breaking .. e.g. 20 breaks things and 11 definitely did, not sure about 14/17
[01:00:29] <rpav> johnny: yeah
[01:00:31] <johnny> o course it was hard to USE it as  DSL directly without giving you access to a full turing complete language though
[01:00:41] <LordKalma> rpav, they just can't decide to go in or out. it's so weird
[01:00:50] <LordKalma> DSL? you mean the great language of cmake?
[01:00:51] * LordKalma runs
[01:01:24] <rpav> johnny: once upon a time i made .. https://ruby-talk.ruby-lang.narkive.com/790NPm7n/ann-criteria-1-1
[01:01:45] <johnny> rpav, so your choice of the namign for collect came from ruby then i guess ?
[01:01:49] <PJBoy> LordKalma, it was pikapika
[01:02:13] <rpav> johnny: ah probably not, i think i looked at some of the functional things and used those .. i don't remember a ton of ruby anymore tbh
[01:02:14] <LordKalma> DSL my ass: https://64.github.io/cmake-raytracer/
[01:02:58] <rpav> LordKalma: that's still a pretty huge hack ;)
[01:02:58] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[01:02:59] <johnny> rpav, that critera based approach ended up taking off that's for sure
[01:02:59] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[01:03:04] <rpav> but i mean once you can do math and stuff
[01:03:08] <PJBoy> dude that conversation lasted an hour and a half
[01:03:41] <LordKalma> PJBoy, I remember
[01:03:46] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[01:03:57] <rpav> johnny: yeah and probably doing that kind of stuff is where i picked up some of the hackery i use for templates etc now
[01:04:02] <LordKalma> with amazing crap like "OMG how can you classify this clearly post-life metal as death metal?"-kinda crap
[01:04:10] <johnny> lol
[01:04:16] <johnny> post-life metal is new to me
[01:04:28] <johnny> i was always on the more punk/hardcore side than the metal side
[01:04:35] <LordKalma> it was a metaphor to make clear how dumb the discussion is
[01:04:39] <LordKalma> like post-life vs death?
[01:04:44] * LordKalma facepalms
[01:05:07] *** Joins: pah (~pah@user/pah)
[01:05:08] <johnny> eh..  what's the difference between a C- and a D tho.. not a lot, but some
[01:05:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:05:17] <PJBoy> post-life metal bahahaha
[01:05:23] <PJBoy> that would actually be a sick genre
[01:05:55] <johnny> right now i'm spending time updating my android app and doing react :(
[01:06:01] <johnny> and then i gotta deal with php
[01:06:03] <LordKalma> post-grind-code-glam-dead-black-new-age-metal or some shit. they sure love over-categorizing
[01:06:08] <johnny> well not modern php.. i don't mind modern hp
[01:06:21] <PJBoy> metal's a super diverse genre
[01:06:28] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:06:39] <PJBoy> you could argue it umbrellas too much stuff under it
[01:06:55] <LordKalma> yes
[01:07:04] <johnny> so today i will be writing kotlin/java , php, js, and C++ :(
[01:07:19] <LordKalma> but that's no excuse to go the other way and make overly narrow subgenres
[01:07:26] <johnny> not much of the kotlin stuff though.. just a tiny bit
[01:07:27] <artok> if drummer has china crash, it is guaranteed to be really shit
[01:07:28] <LordKalma> johnny, damn, that0s a lot of programming languages
[01:07:36] <PJBoy> it's useful though
[01:07:40] <LordKalma> Lars screaming in the background
[01:07:44] <johnny> and then there's the css and html of course
[01:07:58] <LordKalma> artok, Lars using a china as a ride cymbal is so hilarious
[01:08:03] <johnny> no database here yet, but there will be one
[01:08:35] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:08:38] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:08:49] <PJBoy> wow, I forgot there was a symbol called a china
[01:08:50] <johnny> my needs are across so many languages that my real problem is keping up with the differences in syntax and std library features more than anything else language specific 99% of the time
[01:08:56] <LordKalma> cymbal*
[01:09:14] <PJBoy> oh wow, I forgot it has a different spelling
[01:09:20] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[01:09:34] <PJBoy> this is what adulthood has done to me
[01:09:43] <artok> LordKalma: my point exactly, I said to one band that I was mixing that if drummer hits the china four times in a bar, I'll mute whole drumkit
[01:09:55] <johnny> do you know what breaks your brain, reading too many technical standard documents!!
[01:09:55] <artok> ..and did
[01:10:21] <LordKalma> man there was this hilarious video on youtube those kinda "10 style of drummers video" and the guy throws away the ride cymbal just before the Lars style
[01:10:22] <johnny> i'd suggest limiting your exposure, it makes one too pedeantic
[01:10:35] <PJBoy> *pedantic
[01:10:38] <PJBoy> oh shit
[01:10:41] <johnny> owned
[01:10:58] <johnny> i was gonna correct it, but then realized it'd be fun to leave it for just this reason
[01:11:14] <johnny> my keyboard is bad.. one day i'll get a new computer
[01:11:17] <PJBoy> yeah it looked like a setup
[01:11:27] <johnny> no , literally my keyboard is not good
[01:11:35] <PJBoy> I know that pain
[01:11:43] * PJBoy hugs johnny
[01:11:47] <johnny> thanks buddy
[01:11:51] <johnny> <3
[01:11:55] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[01:12:01] <LordKalma> wholesome
[01:12:03] <johnny> do new computers even exist anymore?
[01:12:57] <johnny> i read a nice little overview of that new mac processor and gpu, and it sounds like things are gonna be quite different in the nearish future for everyone
[01:13:29] <johnny> apple seems to have done a pretty good job there, and it's gonna hopefully push prices and power usage down for all of us
[01:15:07] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[01:15:59] <LordKalma> PJBoy, is Ghost metal?
[01:16:00] * LordKalma runs
[01:16:05] <Raziel> I'm not entirely sure how what apple is doing is gonna affect the rest of the market, but I guess we'll see
[01:16:08] <LordKalma> johnny, yeah, the M1 is kinda cool
[01:16:13] *** Joins: pah (~pah@user/pah)
[01:16:13] <LordKalma> Raziel, oh, it is
[01:16:24] <LordKalma> Intel came up with a BIG/LITTLE CPU right after
[01:17:31] *** Joins: proller (~p@2a02:6b8:b081:6409::1:10)
[01:17:53] <Raziel> Intel has no fucking idea what they're trying to even do, at this point
[01:18:32] <LordKalma> they're trying that the US gov pays them a foundry in the US
[01:18:43] <LordKalma> those buy-backs don't leave the bank account full
[01:18:45] <Raziel> also, it's practically impossible that they weren't working on that prior to apple's release
[01:18:58] <LordKalma> of course they were working on it before the release
[01:19:01] <LordKalma> but so was apple
[01:19:02] <Raziel> since I don't see such a big arch change going from idea to release in one year
[01:19:07] <LordKalma> they all know what's going on
[01:19:21] <LordKalma> if nothing else, intel would notice the non renewal of big orders
[01:20:46] <Raziel> also, am I the only one that thinks wasting die space on an igpu on hedt CPUs like the i9 is a dumb idea?
[01:21:11] <LordKalma> Buy an F tier then
[01:21:13] <LordKalma> But yes
[01:21:37] <LordKalma> Yes and no
[01:22:10] <LordKalma> For things like video you can use the video encoder. Adobe stuff is heavily optimized for it
[01:22:34] <LordKalma> Like h264 codec in hardware is useful
[01:22:35] <Raziel> right, having an extra gpu to do stuff like that isn't always a waste
[01:23:05] <LordKalma> For some definition and scale of useful
[01:23:58] <Guest82> if I have an array<array<T, n>> and I want to iterate over all the lines, columns and the two diagonal ... what's the least painful way to do it?
[01:25:54] <Raziel> it depends on what you're actually trying to do on the elements. since in theory you should be able to do it all in one iteration, unless it's something that's, say, order-deterministic
[01:26:11] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 264 seconds)
[01:26:29] <LordKalma> I think you want like, from a position iterate all thinks North, south, east, west, and diagonally from it, right?
[01:26:38] *** Quits: Tokamak (~Tokamak@107.117.203.17) (Ping timeout: 260 seconds)
[01:26:54] <LordKalma> Because you said all lines and collumns made it sound like you wanted to iterate the whole double vector many times
[01:27:06] <LordKalma> You just want a queen movement type think, right?
[01:27:46] <Guest82> oh I didn't realize how confusing I was. I want to know if a tic-tac-toe game is over
[01:28:07] <Guest82> so I want to check for all possible triple marks
[01:29:13] <Guest82> all could think of was a lambda checking three squares, and then do all the 8 calls manually specifiying the indices
[01:29:13] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[01:31:16] <Guest82> LordKalma: so yeah kind of like a queen movement type
[01:33:16] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[01:33:47] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[01:35:01] <Raziel> you'd need four loops for bruteforce checking all the possible wins. alternatively, you can have the win-states saved and check against them, since there's only like 8 of em (for a normal 3x3 board)
[01:35:06] *** Quits: Cyp (~cyp@213.237.87.7) (Ping timeout: 245 seconds)
[01:35:17] <Raziel> the high-perf implementation is probably recursive backtracking and would work on any board size
[01:35:30] *** Joins: Karyon (~Karyon@user/karyon)
[01:36:56] <ville> Raziel: any is a pretty big number
[01:37:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:37:09] <Raziel> well, right, you'd hit stack overflow at some point, probably :p
[01:37:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:37:15] *** ChanServ sets mode: +v npaperbot
[01:37:20] <Raziel> and even with recursion, you'd still need one loop (over a line or column)
[01:37:29] <Raziel> I think?
[01:37:32] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f56e:630b:ae2e:6e55)
[01:37:58] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[01:39:48] <Raziel> or maybe the jump to another column or line can be done in there? oof
[01:40:24] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[01:42:19] *** Quits: PeriBooty (~PeriBooty@user/peribooty) (Remote host closed the connection)
[01:42:44] *** Joins: PeriBooty (~PeriBooty@user/peribooty)
[01:43:35] *** Quits: proller (~p@2a02:6b8:b081:6409::1:10) (Ping timeout: 260 seconds)
[01:44:48] *** Joins: markong (~kvirc@213.146.188.203)
[01:48:43] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[01:49:07] *** Quits: bobb_ (~bobb_@dslb-092-074-236-095.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[01:49:12] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[01:50:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[01:51:27] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[01:53:21] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[01:58:03] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 260 seconds)
[01:59:47] *** Quits: PeriBooty (~PeriBooty@user/peribooty) (Ping timeout: 264 seconds)
[02:02:58] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[02:03:04] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[02:03:26] *** Joins: mort (~mort@188.166.114.29)
[02:03:29] *** Joins: jackblasted (~quassel@193.19.109.44)
[02:05:46] *** Joins: proller (~p@2a02:6b8:b081:1204::1:32)
[02:06:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:146e:edfd:ccd9:4c5c) (Ping timeout: 260 seconds)
[02:07:09] <Raziel> you could also hold info about the incidence of symbols on different lines/columns/diagonals as you go through only one loop, thus doing it in just one loop (lines x columns) but using more memory...
[02:07:51] <Raziel> you could also have separate functions for checkLine, checkColumn, checkDiagonal and run all of em in parallel :p for the "throw more cores at it" approach to bruteforcing
[02:11:13] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[02:12:05] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[02:12:46] <Raziel> it'd obviously be completely pointless, and likely slower cause of overhead, for a 3x3 board. but hey, it'd be a good exercise for learning some concurrency/parallelism
[02:15:59] *** Quits: jackblasted (~quassel@193.19.109.44) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:19:16] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[02:22:20] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[02:24:03] <ville> Raziel: write a ray/path tracer or a real-time software renderer
[02:25:31] <Raziel> oof
[02:26:03] <ville> either problem is well suited for various kinds of parallelism
[02:26:57] <ville> and both have plenty of study material available and various "levels" where you can call it "done"
[02:27:06] <Raziel> I already do parallelism often enough, mostly for crunching numbers in the context of simulations and combinatorics
[02:28:38] <Raziel> writing a tracer or renderer could be fun at some point though :p
[02:28:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:29:18] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[02:36:41] *** Joins: lkor (~lionkor@94.134.95.115)
[02:37:11] *** Quits: lionkor (~lionkor@200116b80fb518006bb1b386965aceb8.dip.versatel-1u1.de) (Ping timeout: 258 seconds)
[02:44:26] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[02:46:36] *** Quits: Guest82 (~Guest82@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[02:51:25] *** Joins: pulse (~pulse@user/pulse)
[03:02:01] *** Joins: chozorho (~chozorho@2601:146:300:c30::8489)
[03:05:24] *** Quits: pah (~pah@user/pah) (Ping timeout: 265 seconds)
[03:09:05] *** Joins: pah (~pah@user/pah)
[03:11:44] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[03:11:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:15:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:16:35] *** Quits: pah (~pah@user/pah) (Ping timeout: 264 seconds)
[03:17:58] *** Quits: lkor (~lionkor@94.134.95.115) (Ping timeout: 265 seconds)
[03:18:45] *** Joins: pah (~pah@user/pah)
[03:26:15] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[03:27:22] *** Joins: pah (~pah@user/pah)
[03:32:21] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:33:29] *** Quits: chozorho (~chozorho@2601:146:300:c30::8489) (Quit: WeeChat 3.0)
[03:33:48] *** Joins: chozorho (~chozorho@2601:146:300:c30::8489)
[03:37:27] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[03:38:07] *** Joins: pah_ (~pah@host-87-1-70-58.retail.telecomitalia.it)
[03:42:59] *** Quits: pah_ (~pah@host-87-1-70-58.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[03:43:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:43:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:44:04] *** Joins: pah (~pah@user/pah)
[03:52:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:55:11] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:55:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:59:40] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[04:03:36] *** Quits: DSpider (DSpider@86.127.146.135) (Quit: Leaving)
[04:11:29] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:12:18] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[04:13:24] *** Joins: ferdna (~ferdna@user/ferdna)
[04:16:16] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[04:18:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:21:10] *** Quits: ville (~ville@178-75-128-81.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[04:22:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[04:24:03] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[04:25:03] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 260 seconds)
[04:27:49] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:32:00] *** Joins: CaCode_ (~Cas@dynamic-077-006-007-238.77.6.pool.telefonica.de)
[04:32:50] *** Joins: ville (~ville@178-75-128-81.bb.dnainternet.fi)
[04:34:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:34:42] *** Quits: CaCode (~Cas@user/cacode) (Ping timeout: 260 seconds)
[04:35:32] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:43:35] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f56e:630b:ae2e:6e55) (Remote host closed the connection)
[04:43:58] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f56e:630b:ae2e:6e55)
[04:44:27] *** Quits: chozorho (~chozorho@2601:146:300:c30::8489) (Quit: WeeChat 3.0)
[04:49:05] *** Joins: chozorho (~chozorho@2601:146:300:c30::cc36)
[04:58:22] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:58:44] *** Joins: The_Jag_ (~The_Jag@host-87-11-42-170.retail.telecomitalia.it)
[05:00:55] *** Quits: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:18:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:18:25] *** Quits: proller (~p@2a02:6b8:b081:1204::1:32) (Ping timeout: 260 seconds)
[05:23:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[05:27:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:34:20] *** Joins: lumberluch0 (~lumbermb@191.114.123.121)
[05:37:08] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:37:10] *** Quits: lumbermb (~lumbermb@191.114.114.152) (Ping timeout: 265 seconds)
[05:37:15] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:37:15] *** ChanServ sets mode: +v npaperbot
[05:38:47] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 260 seconds)
[05:43:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:57:24] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Remote host closed the connection)
[05:57:42] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[05:59:11] *** Joins: paule32_ (~paule32@user/paule32)
[06:01:11] *** Joins: paule32__ (~paule32@user/paule32)
[06:02:39] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:30d4:c050:9d92:f5fd)
[06:02:54] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:04:27] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:04:39] *** Joins: paule32_ (~paule32@user/paule32)
[06:07:03] *** Joins: paule32 (~paule32@user/paule32)
[06:07:32] *** Quits: Leone (~Leo@216.154.21.17) (Read error: Connection reset by peer)
[06:08:11] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:09:05] *** Quits: causative (~halberd@user/causative) (Ping timeout: 268 seconds)
[06:10:02] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:34:20] *** Joins: SPAI2 (~SPAI2@27.62.57.24)
[06:38:31] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[06:38:56] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:40:00] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Remote host closed the connection)
[06:41:47] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[06:43:25] *** Joins: pah (~pah@user/pah)
[06:46:31] *** Quits: SPAI2 (~SPAI2@27.62.57.24) (Quit: Logged off)
[06:48:38] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[06:51:13] *** Joins: pah (~pah@user/pah)
[06:52:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:52:11] *** Joins: arch-angel (~arch-ange@2001:e68:5400:765a:9bb3:84f6:cd5c:23e2)
[06:54:40] *** Quits: arch-angel (~arch-ange@2001:e68:5400:765a:9bb3:84f6:cd5c:23e2) (Client Quit)
[06:55:41] *** Joins: pah_ (~pah@host-82-51-7-160.retail.telecomitalia.it)
[06:55:57] *** Quits: pah (~pah@user/pah) (Ping timeout: 265 seconds)
[07:03:15] *** Quits: pah_ (~pah@host-82-51-7-160.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[07:05:39] *** Joins: pah (~pah@user/pah)
[07:06:52] *** Joins: RandomRead3r (~RandomRea@user/randomreader)
[07:09:44] *** Quits: RandomReader (~RandomRea@user/randomreader) (Ping timeout: 258 seconds)
[07:09:47] *** RandomRead3r is now known as RandomReader
[07:11:00] *** Quits: pah (~pah@user/pah) (Ping timeout: 260 seconds)
[07:14:19] *** Joins: pah (~pah@user/pah)
[07:18:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:22:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:32:16] <Alipha> { f(1); f(3.1); } template<typename T, enable_if_t<is_same_v<int, T>>* = nullptr> void f(T) { cout << "int "; } template<typename T, enable_if_t<is_same_v<double, T>>* = nullptr> void f(T) { cout << "double"; } // malinus. How to do sfinae. Replace is_same_v<...> with whatever condition you want.
[07:32:17] <geordi> int double
[07:36:07] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[07:36:26] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[07:36:48] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:39:35] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[07:39:44] <yolo_> is it a good 'habit' to sort the include headers? just realize it breaks some code I got from github, my script will reformat them which re-orders some headers and broke the code
[07:40:01] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[07:40:11] <yolo_> question is, should be header be designed in a way that is not sensitive to orders, or should I disable re-order for c++ code instead
[07:41:50] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:49:37] <Alipha> yolo_: you should write your headers so they can be included in any order
[07:50:32] <Alipha> yolo_: which generally means a header should itself include all headers that it needs. Or do you have something else weird going on?
[07:52:25] <Alipha> And my suggested order to arrange #includes are: #include "foo.h" should be the first #include inside foo.cpp
[07:53:38] <Alipha> Then include any other headers which are part of your project. Then include any headers that are part of 3rd party libraries. Then include standard headers. Within each of those groups, sort the header names
[07:59:50] <Alipha> Putting your project includes first will help identify if any of those includes are missing headers that they themselves should be including. And sorting will hell avoid merge conflicts when working with version control (plus it looks pretty)
[08:03:29] *** Joins: arch-angel (~arch-ange@2001:e68:5400:765a:9bb3:84f6:cd5c:23e2)
[08:04:13] <arch-angel> I've been writing a game in C++ for quite a while now, and I'm having difficulties trying to package it
[08:04:28] <arch-angel> It depends on SDL2 and libtcod
[08:04:44] <arch-angel> I've tried statically compiling it, turning it into an AppImage, and nothing works
[08:05:17] <arch-angel> my goal is to basically package the executable and the resources into one single file that works on most of the mainstream distros
[08:05:29] <arch-angel> whats the best way to do that?
[08:20:33] *** Quits: chozorho (~chozorho@2601:146:300:c30::cc36) (Quit: WeeChat 3.0)
[08:29:10] *** Quits: UmarJ (~username@user/umarj) (Ping timeout: 260 seconds)
[08:33:34] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[08:35:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:38:06] *** Joins: chozorho (~chozorho@2601:146:300:c30::9310)
[08:46:36] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:50:15] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[08:52:24] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[08:57:45] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Ping timeout: 265 seconds)
[09:00:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:01:07] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[09:04:19] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[09:17:09] <johnny> make sure you're release build is built against the very lowest glibc wanna support
[09:17:12] <johnny> your
[09:17:49] <johnny> but saying "nothing works" isn't that helpful
[09:18:57] <johnny> honestly though... if your game involves any networking, it's kinda unsafe to distribute it like that
[09:19:17] <johnny> i guess if you had an update checker it'd be ok
[09:19:43] <johnny> but you're pretty much locking yourself into to continually updating it.. in perpetuity
[09:23:25] <arch-angel> johnny, I'm running on Arch Linux, the glibc I'm using is most likely the newest, I've tried running the program in an Ubuntu 20.04 docker image and it complains that GLIBC 2.22 and 2.23 isn't found
[09:24:10] *** Quits: chozorho (~chozorho@2601:146:300:c30::9310) (Quit: WeeChat 3.0)
[09:24:16] *** Joins: causative (~halberd@user/causative)
[09:26:06] <johnny> indeed
[09:26:09] <johnny> you have to compile against that one
[09:26:24] <johnny> if that's the oldest one you want to work i mean
[09:26:59] <johnny> you can't build on arch and expect it to work anwyehre else
[09:28:00] <johnny> if your game is FOSS or you won't build that many times you could rely on github's ci or perhaps even gitlab's CI to build for you
[09:28:11] <johnny> or if you're only gonna do it a few times, do it in a docker image
[09:30:43] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[09:31:02] <arch-angel> i do have github's education pack, so I have access to Travis CI and Github Pro, never used them tho
[09:31:28] <johnny> well travis killed off most of their FOSS stuff, so wouldn't bother
[09:31:47] <johnny> it's honestly really annoying to distribute non FOSS stuff on linux. it's much easier to just rely on wine to handle it
[09:31:59] <arch-angel> what's FOSS?
[09:32:01] <johnny> because library compat just isn't there
[09:32:09] <johnny> free (and) open source software
[09:32:09] <TinoDidriksen> !foss
[09:32:10] <nolyc> TinoDidriksen: Error: "foss" is not a valid command.
[09:32:15] <arch-angel> ah
[09:32:20] <TinoDidriksen> Huh, nobody added FOSS to the bot?
[09:32:29] <arch-angel> my project is open source, uses the GPL v3 license
[09:32:37] <johnny> ah ok.. so at least it can be packaged
[09:32:40] <johnny> ok.. cool
[09:32:59] <johnny> but if you're seriously tring to distibute your game over the long term you're really gonna want a CI setup like with github actions
[09:33:04] <arch-angel> alright, i'll try using Github actions
[09:33:11] <johnny> and it'll make sure you never accidentally distribute something you don't want to
[09:33:34] <johnny> like say you're making changes locally and then do the build, well.. your local change that was maybe a development change.. is now in your build that you publish
[09:34:05] <TinoDidriksen> nolyc, foss is "<reply>FOSS and FLOSS are https://en.wikipedia.org/wiki/Free_and_open-source_software"
[09:34:06] <nolyc> TinoDidriksen: The operation succeeded.
[09:34:12] <TinoDidriksen> !foss
[09:34:12] <johnny> letting something like github actions (or even a local docker) is much better to make sure you're in a pristine environment for both your code, and the libraries you might have on your system that aren't in a base ubuntu or whatever install
[09:34:13] <nolyc> FOSS and FLOSS are https://en.wikipedia.org/wiki/Free_and_open-source_software
[09:34:57] *** Joins: CaCode- (~Cas@91.132.197.186)
[09:35:30] <johnny> arch-angel, of course if you really are about the GPL and things it stands for, you might not want to use github
[09:35:44] <johnny> a lot of people in the community who cares about that sort of thing don't like it when people use non free hosts like that
[09:36:18] <johnny> me personally, i'd not care, but at least know what you're getting into, and make sure your making a decision that jives with your ideals
[09:36:20] <TinoDidriksen> When libre hosts get up to speed with the features Github provides, sure.
[09:36:38] <johnny> TinoDidriksen, what did you think about source hut?
[09:37:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:37:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:37:16] *** ChanServ sets mode: +v npaperbot
[09:37:18] <johnny> lots of FOSS projects are relying on the self hosted gitlab option, but it's non really worth it for small projects
[09:37:33] *** Quits: CaCode- (~Cas@91.132.197.186) (Remote host closed the connection)
[09:37:43] *** Quits: CaCode_ (~Cas@dynamic-077-006-007-238.77.6.pool.telefonica.de) (Ping timeout: 260 seconds)
[09:38:43] <johnny> arch-angel, but for now, if you really jus wanna get your app compiled so you can share it, then do a build in adocker for ubuntu 18 or 20 , since you already seem to know how to use docker to at least some extent
[09:39:22] <johnny> you can do foldre sharing via some means (i dunno never used docker) so the docker container can access your source code
[09:40:16] <johnny> the maintainer of source hut is quite something... i dun think we could be friends or anything, but at least he is trying to live up to his ideals
[09:40:23] <TinoDidriksen> SourceHut has hg support which is nice, but not much else going for it. The other feature set and interface is anemic.
[09:40:52] <johnny> well to some people the interface via mailing lists and not PR/MR is perhaps the most important feature of all
[09:41:07] <johnny> after being FOSS of course
[09:41:47] *** Joins: CaCode (~Cassius@91.132.197.186)
[09:41:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:42:07] *** Quits: CaCode (~Cassius@91.132.197.186) (Changing host)
[09:42:07] *** Joins: CaCode (~Cassius@user/cacode)
[09:53:39] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[09:54:53] <arch-angel> johnny, should I dynamically compile it or statically compile it? since statically compiling it just gives me a compilation error
[09:55:02] <arch-angel> not compilation error, a SegFault
[09:55:19] <johnny> there's no general ansewr to that
[09:55:32] <johnny> you'd have to figure what's causing the segfault
[09:55:50] <arch-angel> well something something LLVM
[09:56:06] <arch-angel> uhhh lemme get the github discussions i opened
[09:56:07] <johnny> are you compiling with clang or something?
[09:56:35] <arch-angel> https://github.com/libtcod/libtcod/discussions/99#discussioncomment-1537976
[09:56:38] *** Quits: causative (~halberd@user/causative) (Ping timeout: 268 seconds)
[09:56:47] <arch-angel> g++
[09:59:06] *** Quits: letto (~letto@86.120.85.133) (Ping timeout: 244 seconds)
[09:59:33] <johnny> so did you build in your ubuntu ocker and try to run it also n the ubuntu docker or what?
[09:59:54] <johnny> this is the sort of thing youhae to get good at decoding if you're gonna build things for linux
[10:00:32] <johnny> break down your problem..  does it work on the same install in which you compiled it?
[10:01:15] <johnny> then try doing the same thing in the other ubuntu container or arch, the opposite of what you just tried
[10:01:27] <johnny> if it worked
[10:02:03] <arch-angel> well i cant actually test this on docker ubuntu, since, as you know my knowledge of docker is pretty shallow and I have no idea how I'm supposed to run a GUI application on it
[10:02:05] *** Joins: letto (~letto@86.120.85.133)
[10:02:14] <johnny> well you could setup an actual vm instead
[10:02:24] <johnny> or anoher whole PC
[10:02:47] <johnny> i've never had this problem so i don't know the absolute best approach.
[10:02:53] <arch-angel> well, i too have tried it, but well my potato cannot run a VM without going full blown hot
[10:03:10] <johnny> then you can't do what you're going to do
[10:03:26] <johnny> or look up how to run gui apps in docker to see if it's possible i guess
[10:03:27] <arch-angel> yeah... I guess I'll go with Github Actions
[10:03:32] <johnny> that won't acutally help prove anything
[10:03:38] <johnny> you still need to test that the app works on ubuntu
[10:03:45] <arch-angel> right, thats true
[10:04:13] <johnny> don't you hae any friends or somene who had sya ubuntu 18 or 20 or whatever?
[10:04:29] <arch-angel> my friends dont even know what the hell is linux
[10:04:42] <arch-angel> and I can count the amount of friends I have with 5 fingers
[10:04:47] * arch-angel cries
[10:05:01] <johnny> there's also folks in the game dev community who might hlpe you out
[10:05:09] <arch-angel> where?
[10:05:11] <johnny> i'd test it for yoru, but i'm using fedora
[10:05:33] <arch-angel> https://github.com/epixinvites/wayventure
[10:05:42] <johnny> i don't know anything about game dev, sorry :( but maybe #gamingonlinux  or r/linux_gaming
[10:05:51] <arch-angel> alright, i
[10:05:55] <arch-angel> i'll try*
[10:06:09] <johnny> i'd test it for you myself, but i'm using fedora 35 beta
[10:06:26] <johnny> not that i could do a full playthrough , but i could at least prove it doesn't segfault off the bat
[10:06:51] <johnny> so my system is perhaps not as up to date as an arch install, but it's certainly way newer than what you need to test with
[10:06:55] <arch-angel> well, for the current CMakeList, if you have the dependencies it'll run perfectly without a problem
[10:07:06] <johnny> doubtful if the versions don't match
[10:07:12] <arch-angel> but when I add the -static flag, it starts giving me warnings
[10:07:20] <arch-angel> and when I start the program it just segfaults
[10:07:23] <johnny> well you didn't say anthing about that before
[10:07:28] <johnny> shouldn't you be taking care of those warnings first
[10:07:46] <arch-angel> uh, lemme get the warnings
[10:08:24] <arch-angel> warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
[10:08:31] <arch-angel> just this
[10:08:47] <johnny> what are you dlopening ? anything yourself or is that done by your library?
[10:08:54] <johnny> i mean your dependencies
[10:09:02] <arch-angel> well my dependencies are SDL2 and libtcod
[10:09:14] <arch-angel> I do not use dlopen, so I can guess its the libraries
[10:09:15] <johnny> well it should be telling you what's dong the dlopening in the warning right?
[10:09:31] <johnny> are you sure it's actually statically compiled the sdl deps and others?
[10:09:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:09:50] <arch-angel> target_link_libraries(wayventure -static -ltcod -lSDL2 -lpthread -lz -ldl -static-libstdc++ -static-libgcc)
[10:09:58] <johnny> one way to prove it would be to remove the sl deps from yoru system nd make sure it still runs on your computer
[10:10:04] <johnny> sdl*
[10:10:04] *** Joins: lkor (~lionkor@200116b80fa57c007285c2fffea63d72.dip.versatel-1u1.de)
[10:10:16] <johnny> and tcod if that's also something you installed via uhmm. pacman i guess
[10:10:16] <arch-angel> alright, i'll test it on my docker
[10:10:34] <johnny> an arch docker?
[10:10:37] <arch-angel> i actually compiled tcod myself since I needed the git version
[10:10:46] <arch-angel> yeah
[10:10:49] <arch-angel> arch docker
[10:11:03] <johnny> well you still need the gui part though right?
[10:11:07] <arch-angel> true
[10:11:30] <johnny> maybe you should just go figure that out first
[10:11:34] <johnny> i doubt it's that hard
[10:11:48] <arch-angel> alright
[10:12:55] <johnny> then make sure your target container has no sdl libs and run it from there
[10:13:46] <johnny> but that's the warning you should be getting that tells you you need to compile against the lowest glibc i imagine
[10:14:03] <johnny> i've never developed static stuff for linux, so i'm just going based off what i've heard
[10:14:04] <arch-angel> mhm, i'll try compiling it on ubuntu 20.04
[10:14:20] <arch-angel> 18.04's g++ doesn't support c++17, which I need since I use std::filesystem
[10:14:33] <johnny> well that depends n your userbase right?
[10:14:48] <arch-angel> mhm
[10:14:49] <johnny> you can always use boost::filesystem if really wanted to support systems that old
[10:15:23] <TinoDidriksen> You can use most of std::filesystem on 18.04 with -std=c++1z
[10:15:31] <johnny> arch-angel, ^^
[10:16:06] <arch-angel> hm, I use the -std=c++17 flag
[10:16:12] <arch-angel> should i change it to 1z?
[10:16:14] <TinoDidriksen> arch-angel, https://github.com/TinoDidriksen/Transfuse/blob/main/CMakeLists.txt#L95-L103 + https://github.com/TinoDidriksen/Transfuse/blob/main/src/filesystem.hpp is what I do.
[10:16:32] <johnny> but don't bother if you don't actually care to support ubuntu 18.04
[10:16:46] <johnny> it's really up to you what you want to support, it's your game
[10:17:10] <arch-angel> i already have enough problems, i'll try to package it first before thinking of supporting older distros
[10:17:15] <ville> arch-angel: sdl2 uses dlopen
[10:17:40] <arch-angel> yeah, i think so too
[10:17:43] <johnny> but what is it dlopening?
[10:17:50] <arch-angel> what is dlopen even?
[10:18:22] <ville> dlopen is a way to load symbols from a dso at runtime by the application it self, rather than the linker at startup or at compiletime
[10:18:43] <johnny> dso being an .so file on linux or a dll on windows (usually anyways)
[10:18:59] <arch-angel> i see
[10:19:06] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 260 seconds)
[10:19:35] <arch-angel> well, just tested, compiling with g++ and clang++ gives me an identical error message
[10:19:36] <ville> with out looking my guess would be that it's loading the opengl functions and vulkan as well if it has suport for that these days
[10:19:51] <ville> it's the linker giving you that error
[10:20:12] <johnny> ville, so can you statically link an sdl applicaton and expect it to work? folks were saying so, but i don't know anything about it's interactions with the rest of the system
[10:20:15] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:20:38] <johnny> i mean expect it to work on newer or older systems
[10:20:48] <arch-angel> or maybe i could just force my users to install SDL2 libs and its story end
[10:20:51] * arch-angel contemplates
[10:21:08] <ville> g++ and clang++ can and often are used as a frontend to the real linker, as they setup some switches you need to correctly call the real linker to link your target language programs
[10:21:21] <arch-angel> mmm no, i'll solve the problem myse;f
[10:21:39] <TinoDidriksen> The best way would indeed be to make a package for each distro target, and only have the static build as a fallback.
[10:22:08] <johnny> but th static build still has to work :)
[10:22:08] <ville> johnny: i don't see why not, not saying it wouldn't take some thinking about what the command line has exactly be to get the right linker invocations in place
[10:22:14] <arch-angel> johnny exactly
[10:22:33] <johnny> if it's possible that is :)
[10:23:43] <johnny> arch-angel, be a bit more clear in what you actually did.  all you said was that that you "got an identical error message"  you really need to say you compiled it on X and tried to run it on X .. and perhaps also with or without local sdl librries
[10:24:17] <arch-angel> i'm currently attempting to compile it in an Ubuntu20.04 docker, and going to run it in another fresh one
[10:24:31] <johnny> well first try to run it in the same one!
[10:24:39] <arch-angel> i haven't even compiled it lol
[10:24:56] <johnny> sure, but don't try it in a fresh container until you tried it in the one you compiled it with
[10:25:13] <ville> arch-angel: are you building your own static sdl library as part of your projects build, or are you planning to use the system package managegers' one?
[10:25:14] <arch-angel> yeap
[10:25:43] <arch-angel> ville, no I'm not, the SDL2 lib and the libtcod lib I'm currently using is compiled by myself
[10:26:02] <ville> so the first part, you are building them your self?
[10:26:08] <arch-angel> since arch linux's package managers doesn't provide me .a libraries, only .so libraries are provided
[10:26:18] <arch-angel> yes, I'm building libtcod and SDL2 myself
[10:26:39] <arch-angel> current building SDL2 in my docker
[10:27:01] *** Quits: letto (~letto@86.120.85.133) (Quit: Konversation terminated!)
[10:27:12] <ville> arch-angel: so what parts of sdl are you using then in your application?
[10:27:25] <arch-angel> what do you mean what parts?
[10:27:42] <arch-angel> i dont know what parts are used, since the libtcod acts as a medium for me to communicate with SDL
[10:27:59] *** Joins: letto (~letto@86.120.85.133)
[10:28:49] *** Joins: andreasbuhr (~quassel@p548dd834.dip0.t-ipconnect.de)
[10:31:25] <ville> arch-angel: sdl has a classic three-step build process: ./configure && make && make install. as part of the first step ./configure you can choose bunch of stuff that gets compiled in or left out
[10:31:38] <arch-angel> i just compile everything
[10:32:29] <ville> try calling sdl's: ./configure --help and all those --disable/--enable flags are things you can choose
[10:33:41] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[10:35:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:36:46] <johnny> but what would they want to leave out?
[10:38:27] <ville> if i recall right once upon a time building a static sdl2 on linux project a hack i did was: "./configure --prefix=/abs/path/to/build/dir/libsdl2 --disable-shared --disable-video-wayland" and not using the -static flag on when linking the project, making sure the linker found the static library generated first rather than the system dso
[10:40:05] <ville> -static flag for gcc is one of those funny ones where position and order of things matters. it "taints" the whole command line after it
[10:40:38] <johnny> doesn't cmake handle that part?
[10:40:52] <johnny> isn't there a a way to just say build this dep statically?
[10:41:03] <ville> i don't use cmake because i want to actually know what is happening and be able to control what's happening
[10:41:58] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[10:42:00] <ville> cmake is just a layer of obfuscation i don't need
[10:42:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:45:32] *** Joins: UmarJ (~username@user/umarj)
[10:50:07] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[10:52:40] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[10:54:41] *** Joins: johnny (~johnny@user/johnny)
[10:55:25] <arch-angel> ville, what do you use then?
[10:55:31] <arch-angel> if it isn't cmake
[10:55:38] <arch-angel> makefiles?
[11:08:46] <ville> yes make
[11:09:27] <ville> now don't worry it's still crap, but at least i don't have to learn how to tell cmake to generate the kind of make-crap i want it to create. i can write the make-crap my self
[11:10:07] *** Quits: UmarJ (~username@user/umarj) (Ping timeout: 260 seconds)
[11:11:45] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 276 seconds)
[11:12:30] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[11:12:31] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[11:13:49] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[11:15:57] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[11:17:16] <arch-angel> used to use make
[11:17:25] <arch-angel> people told me cmake was better for cross-platform compiling
[11:17:36] <arch-angel> mhm, yeap, indeed
[11:17:46] <arch-angel> who doesn't like more headaches and problems
[11:17:54] <TinoDidriksen> And it is, especially when you branch out to Windows and Mac and want to integrate with other packaging systems.
[11:21:30] <arch-angel> what do you mean TinoDidriksen, should I use cmake or make?
[11:21:45] <TinoDidriksen> CMake
[11:22:07] <arch-angel> ah fine i'll stick with cmake
[11:25:04] <TinoDidriksen> Erk, another day, another case where git's lack of file tracking is a real bloody pain...
[11:28:24] <johnny> i know the feeling
[11:36:34] <JohnMS_WORK> Which is why I continue to use Mercurial. :D
[11:36:44] <TinoDidriksen> I was just reading the hg docs.
[11:39:50] <JohnMS_WORK> :D I've been using it since 2010. I've been very pleased with it.
[11:39:55] <Raziel> you guys don't just use zips of the entire folder, which you just append the date and perhaps even time to?
[11:40:19] <JohnMS_WORK> I knew there had to be an easier way. LOL
[11:41:02] <TinoDidriksen> I still use svn for some repos where I just cannot tolerate git's lack of file handling. And now I have another repo I am seriously considering converting away from git, but don't really want to move it to svn - but hg is a strong contender.
[11:41:41] <Raziel> is there any polite self-hosted hg?
[11:42:34] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 265 seconds)
[11:43:02] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[11:43:38] <JohnMS_WORK> https://www.mercurial-scm.org/wiki/MercurialHosting Several.
[11:45:48] <Raziel> noice
[11:48:53] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[11:48:53] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[11:48:53] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:56:44] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[11:57:09] <lpapp> hi, why does msvc complain about this? template<typename T> inline Vec2<ndk::half> Vec2<T>::asVec2h() const { ... } in the header?
[11:57:22] <lpapp> error C2491: 'ndk::Vec2<T>::asVec2h': definition of dllimport function not allowed
[11:57:33] <lpapp> I do not have dllimport on it? :)
[11:57:54] <lpapp> interestingly enough, if I remove the usual symboling on the class, then no complain here, but of course I cannot do that if it is not a header-only library.
[12:04:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:10:52] <arch-angel> ville, compiling the program in a docker now gives me a new problem, I compiled it in my docker and ran it in my host system, "Video driver 'dummy' is not working."
[12:11:20] <arch-angel> wow
[12:11:23] <lpapp> for cross-platform, it all comes down to __attribute__ ((visibility("default"))), I guess?
[12:11:34] *** Joins: UmarJ (~username@user/umarj)
[12:12:35] *** Joins: ham5urg (~ham5urg@p200300d167112900593f38d514f65026.dip0.t-ipconnect.de)
[12:20:31] *** Quits: arch-angel (~arch-ange@2001:e68:5400:765a:9bb3:84f6:cd5c:23e2) (Quit: Leaving)
[12:25:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:26:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:31:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[12:32:43] <lpapp> Are we not allowed to have definition of template methods in a template class in the header file, not even if inline, etc?
[12:39:50] <PJBoy> it's fine to have template class member functions defined in the header
[12:40:01] <PJBoy> the inline belongs with the declaration of the function in the class
[12:40:31] <PJBoy> I dunno anything about dllimport though
[12:40:52] <Raziel> I can only assume one of those things you're trying to use in there are maybe specced as dllimport?
[12:41:45] <Raziel> https://wandbox.org/permlink/w9JNjpiTppZcfbDA
[12:41:56] <Raziel> stupid example, but it works with or without the inline on the function in the header
[12:42:06] <Raziel> which it should because class member functions are inlined anyway
[12:42:53] <PJBoy> they're only inlined if they're defined inline
[12:43:06] <PJBoy> and in your code, it's inline because it's a template
[12:43:26] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 245 seconds)
[12:45:01] <lpapp> the issue seems to happen when my header is consumed, interesting.
[12:45:18] <PJBoy> well obviously
[12:45:29] <PJBoy> if you don't use a header, then nothing happens
[12:45:31] <lpapp> so, inline does not need to be mentioned at the definition?
[12:45:40] <lpapp> That is what I vaguely remember, also.
[12:45:46] <lpapp> No no
[12:45:52] <lpapp> I mean it is not the Vec2.cpp compilation.
[12:45:56] <PJBoy> yeah I'm pretty sure inline is never needed with the definition of anything
[12:46:01] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[12:46:01] <PJBoy> (unless it's also the declaration)
[12:46:26] <lpapp> ok, so I do not know the issue here.
[12:46:49] <PJBoy> and for member functions of a class template, I assume that's automatically inline too
[12:47:08] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[12:47:22] <PJBoy> it's kinda hard to check >_>
[12:47:26] <lpapp> Raziel: where do you see dllimport?
[12:47:36] <lpapp> I do have some NDK_API macross on the Vec2 itself.
[12:47:43] <Raziel> PJBoy, A function defined entirely inside a class/struct/union definition, whether it's a member function or a non-member friend function, is implicitly an inline function
[12:48:02] <Raziel> and linters say the inline specifier in such a case is redundant
[12:48:06] <lpapp> PJBoy: it does not hurt adding inline
[12:48:20] <PJBoy> I guess
[12:48:32] <lpapp> the more critical question is the dllimport thing
[12:48:34] <PJBoy> Raziel, lpapp's code the member functioned is defined outside the class
[12:48:39] <lpapp> if I remove the NDK_API stuff from the class
[12:48:41] <lpapp> this compiles.
[12:48:45] <Raziel> lpapp, I don't see a dllimport in what you've posted so far :p
[12:48:53] <lpapp> but then of course, it would need to become a header-only library
[12:49:00] <lpapp> so, maybe I could share the definition of this NDK_API macro?
[12:49:06] <Raziel> PJBoy, it iiiis.
[12:49:08] <lpapp> Maybe, that screws things on Windows, and not Mac?
[12:50:50] <Raziel> hm
[12:52:29] *** Joins: horise[m] (~rbhmatrix@2001:470:69fc:105::4fe2)
[12:52:38] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 260 seconds)
[12:52:45] <lpapp> we seem to have this on the class on Windows: __attribute__ ((visibility("default")))
[12:52:49] <lpapp> is this correct for Windows?
[12:52:58] <lpapp> this is when building this code as a library.
[12:56:12] <Raziel> windows msvc? no
[12:56:15] <Raziel> you want dllexport
[12:56:20] *** Joins: DSpider (DSpider@86.127.147.103)
[12:56:47] <Raziel> https://docs.microsoft.com/en-us/cpp/build/exporting-from-a-dll-using-declspec-dllexport?view=msvc-160
[12:58:55] <PJBoy> I wonder if modules improve the landscape here
[12:59:13] <PJBoy> considering they explicitly export things that consumers of the module can use
[13:00:03] <Raziel> would be nice
[13:01:10] *** Parts: horise[m] (~rbhmatrix@2001:470:69fc:105::4fe2) ()
[13:11:04] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[13:19:41] <ville> lpapp: templates by definition are allowed to produce multiple definitions in separate translation units
[13:21:21] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:21:58] <ville> lpapp: http://www.eelis.net/c++draft/basic.def.odr#13.4 and then the paragraph below http://www.eelis.net/c++draft/basic.def.odr#13.sentence-2
[13:23:33] <LordKalma> what's up?
[13:23:34] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[13:23:43] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[13:23:46] <LordKalma> lpapp, if you're using cmake you should use the cmake facilities to auto generate that macro
[13:24:43] <LordKalma> https://github.com/ruilvo/aether_dsp/blob/master/CMakeLists.txt#L26
[13:24:52] <LordKalma> and
[13:24:52] <LordKalma> https://github.com/ruilvo/aether_dsp/blob/master/aether_dsp/CMakeLists.txt#L9
[13:30:22] <ville> PJBoy: i don't think templates are "inline" the keyword
[13:31:53] <PJBoy> well
[13:31:55] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 258 seconds)
[13:32:24] <PJBoy> they have external linkage, and they get deduplicated by the linker
[13:32:31] <PJBoy> their definition is required immediately
[13:32:39] <Raziel> yknow, I'm thinking
[13:32:41] <ville> i believe they get their special treatment through other rules than being implicitly inline the keyword
[13:32:53] <PJBoy> they can be externed
[13:33:03] <Raziel> how is one supposed to export a templated function from a dynamic lib, if all possible implementations for any types have to be made at compile time?
[13:33:16] <ville> (even if the behaviour would be exactly the same)
[13:33:16] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[13:35:31] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 245 seconds)
[13:37:06] *** Joins: cq-work (~Z_Lund@user/cq-work)
[13:37:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:37:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:37:17] *** ChanServ sets mode: +v npaperbot
[13:38:39] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[13:39:45] <PJBoy> I see your point in any case
[13:39:56] <PJBoy> but I'm gonna continue to refer to them as inline
[13:40:27] <PJBoy> Raziel, you can't, you'd end up grabbing them from the library's header
[13:40:31] <PJBoy> dynamic libs have headers right?
[13:40:56] <ville> sure, i suppose you don't strictly need them
[13:41:06] <Raziel> right
[13:42:17] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[13:43:56] <Raziel> but in that case, is there any reason why you'd use visibility or dllexport on such a function? v:
[13:44:45] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[13:45:08] <PJBoy> I was thinking that too
[13:45:15] <PJBoy> but I dunno about dllexport at all
[13:45:50] <LordKalma> you don't need to export inlined crap
[13:48:07] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:58:02] <johnny> seemingly unrelated.. but does anybody know excel formulas?
[13:58:24] <johnny> i wanna see if this count thing i did in C++ is right, but i need to compare it against the xlsx document
[13:59:53] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[14:02:52] *** Joins: markong (~kvirc@213.146.188.203)
[14:04:38] *** Joins: ham5urg_ (~ham5urg@p2e54d296.dip0.t-ipconnect.de)
[14:05:08] <PJBoy> they're pretty straight forward
[14:06:42] <johnny> i just wanna know how the get the longest row of non blank cells so i can see if my max columns calcuation wored
[14:07:03] <johnny> but i realize i can just save as csv.. so i'll probably just go with standard unix tools
[14:07:14] *** Joins: paul424 (~tom@ip-31-0-124-114.multi.internet.cyfrowypolsat.pl)
[14:07:25] <paul424> Hello I have such pseudo-hashing function :
[14:07:27] *** Quits: ham5urg (~ham5urg@p200300d167112900593f38d514f65026.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:07:31] <paul424> (tile->getX()/3 + tile->getY()/5 -tile->getX() - tile->getY()) % mTileSet->getTileValues(tile->getTileVisual()).at(index).size()
[14:07:48] <PJBoy> ok good, 'cause I don't know immediately how to do that
[14:08:04] <PJBoy> wow that's very level editor looking
[14:08:13] <paul424> how do I change it for something better ? especially does -5 % 3 equals to 1 in c++ ?
[14:08:20] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[14:08:33] <Raziel> {cout << -5 % 3;}
[14:08:33] <geordi> -2
[14:09:01] <paul424> I think that coefficients with getX() and getY() should be large prime numbers , am I right ?
[14:09:10] <Haohmaru> wot
[14:11:11] <PJBoy> IIRC, for hashing two values
[14:11:36] <PJBoy> you do `(k * a + b) % n`
[14:11:41] <PJBoy> for some k that's coprime with n
[14:11:53] <johnny> i did it in like 2 seconds after exporting csv .. no excel needed :)
[14:12:01] <johnny> and my numbers are correct
[14:12:04] <Raziel> {cout << imod(-5, 3); int iMod(int x, int m) { int r = x % m; return r < 0 ? r + m : r; }
[14:12:04] <geordi> error: Unexpected end of request. Expected '}' or balanced code.
[14:12:07] <johnny> now let's see if i can make this csv exporter work again
[14:12:11] <Raziel> how2functions
[14:12:17] <johnny> tfw your code is unbalanced
[14:12:24] <Raziel> geordi is hard >:
[14:12:31] <PJBoy> << iMod(-5, 3); int iMod(int x, int m) { int r = x % m; return r < 0 ? r + m : r; }
[14:12:32] <geordi> 1
[14:12:43] <Raziel> oic
[14:12:49] <johnny> it's a lot easier if you don't try to wrap it in {}
[14:12:56] <Raziel> right
[14:13:38] <johnny> would plain cout even work?
[14:14:04] <PJBoy> format is [[cout expression] or [main function body]] [supporting global scope code]
[14:15:18] <PJBoy> (where [cout expression] is `<< expr;` and [main function body] is `{ ... }`)
[14:16:16] *** Quits: UmarJ (~username@user/umarj) (Ping timeout: 265 seconds)
[14:16:16] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 265 seconds)
[14:16:32] <Raziel> but yes, paul424, you can use that for a modulo that does make -5 mod 3 equal 1 :p
[14:16:57] <paul424> PJBoy, Raziel I changed my "hashing" function and it works fine .... , thanks
[14:17:34] <PJBoy> I really hate that whole negative modulo thing
[14:18:57] <johnny> hmm.. i had fun fighting react last light because of types :(  this neato form builder processing thing got an upgrade to allow you to really type your forms.. my forms were NOT typed enough before that
[14:19:18] <johnny> well tonight really, not last night.. since it just happened
[14:19:45] <ville> why are you telling us about some javascript garbage?
[14:20:12] <Raziel> lol
[14:20:31] <Raziel> absolutely brutal.
[14:20:44] *** Joins: UmarJ (~username@user/umarj)
[14:21:59] <johnny> because typescripts type system is pretty neat
[14:22:04] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Ping timeout: 265 seconds)
[14:22:13] *** pah is now known as pa
[14:22:15] <johnny> i was imagineing if folks added generics to C via files you get separate from C
[14:22:54] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:22:55] <johnny> i never looked at the earliest C++
[14:22:59] <PJBoy> I guess both x86 and ARM implement div rounding towards zero
[14:23:29] <johnny> ville, but really.. because i feel like it..
[14:23:31] <PJBoy> which honestly surprises me
[14:24:00] <johnny> ville, you're making me want to bully you a little.. i'll refrain tho
[14:24:17] <ville> johnny: bully me?
[14:24:31] <johnny> you're so over the top.. it's funny
[14:25:11] <urdh> PJBoy: what would you expect?
[14:25:20] <ville> i am still not clear on the mechanics how you bullying me would be possible
[14:25:22] <PJBoy> rounding towards negative infinity
[14:25:32] <PJBoy> so that division of negative numbers by powers of 2 act like bitshifts
[14:25:42] <cart_man> Is it possible to delcare and size and set all elements in a vector ? std::vector x(5) = {0}; ?
[14:25:42] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[14:25:56] <ville> cart_man: cppreference.com
[14:26:02] <johnny> making fun of you for being so aggressive
[14:26:08] <johnny> what are you covering for?
[14:26:24] <johnny> sweet.. my file is parsed.. but i got binary garbage
[14:27:00] <Haohmaru> i wouldn't call ville aggressive, wtf, did he pull your ear?
[14:27:09] <Haohmaru> ..over IRC
[14:27:28] <johnny> well it's as aggressive as you can be over irc anyways
[14:27:48] <johnny> must be a nul byte :(
[14:28:59] <Haohmaru> i'm more aggressive than him, i slap/kick people over IRC, or smash objects onto their heads.. over irc
[14:29:13] <Haohmaru> including URLs
[14:29:38] <johnny> smash them over the head with urls?
[14:29:53] <Haohmaru> nah, i slap them with URLs sometimes
[14:30:29] <cart_man> ville: I have tried assign before but I can not assign say  std::vector<int> tmp(5);  tmp.assign(5,0);
[14:31:14] <ville> cart_man: initialization and assignment are two different things in c++. initialization is done by constructors
[14:31:34] <cart_man> lets rather say func ( int x ){  std::vector<int> tmp(x); tmp.assign(x,0) }
[14:31:41] <ville> cart_man: so go look up vector constructors
[14:32:51] <johnny> yeah.. std::to_string works like QString::number() most of the time.. but not when it's bytes.. oopsie
[14:33:18] <cart_man> ville:  AHh I see ...lol really simple actually . Thanks
[14:34:23] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[14:34:31] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[14:42:18] *** Quits: paul424 (~tom@ip-31-0-124-114.multi.internet.cyfrowypolsat.pl) (*.net *.split)
[14:42:18] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[14:42:18] *** Quits: CaCode (~Cassius@user/cacode) (*.net *.split)
[14:42:18] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (*.net *.split)
[14:42:18] *** Quits: c4017w (~c4017@209.52.68.8) (*.net *.split)
[14:42:18] *** Quits: artok (~azo@mobile-access-bcee2b-18.dhcp.inet.fi) (*.net *.split)
[14:42:18] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[14:42:18] *** Quits: nshire (~Neal@user/nshire) (*.net *.split)
[14:42:18] *** Quits: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) (*.net *.split)
[14:42:18] *** Quits: amosbird (~amosbird@13.75.119.182) (*.net *.split)
[14:42:18] *** Quits: Alipha (~AliphaX@user/alipha) (*.net *.split)
[14:42:19] *** Quits: segnior (segnior@user/segnior) (*.net *.split)
[14:42:19] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[14:42:19] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (*.net *.split)
[14:42:19] *** Quits: sonOfRa (sonOfRa@user/sonofra) (*.net *.split)
[14:42:19] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[14:42:19] *** Quits: Moult (~sevenstro@sevenstrokes.net) (*.net *.split)
[14:42:19] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[14:44:41] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 245 seconds)
[14:45:31] *** Joins: paul424 (~tom@ip-31-0-124-114.multi.internet.cyfrowypolsat.pl)
[14:45:31] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[14:45:31] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[14:45:31] *** Joins: CaCode (~Cassius@user/cacode)
[14:45:31] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[14:45:31] *** Joins: c4017w (~c4017@209.52.68.8)
[14:45:31] *** Joins: artok (~azo@mobile-access-bcee2b-18.dhcp.inet.fi)
[14:45:31] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[14:45:31] *** Joins: nshire (~Neal@user/nshire)
[14:45:31] *** Joins: segnior (segnior@user/segnior)
[14:45:31] *** Joins: amosbird (~amosbird@13.75.119.182)
[14:45:31] *** Joins: Alipha (~AliphaX@user/alipha)
[14:45:31] *** Joins: jkl (~jkl@user/jkl)
[14:45:31] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[14:45:31] *** Joins: sonOfRa (sonOfRa@user/sonofra)
[14:45:31] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[14:45:31] *** Joins: Moult (~sevenstro@sevenstrokes.net)
[14:45:31] *** Joins: syrius (syrius@titan.stormtek.net)
[14:45:34] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:46:12] *** Quits: malloy (~jimery@116.30.221.89) (Ping timeout: 250 seconds)
[14:46:25] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[14:47:11] <johnny> Haohmaru, what urls did you hit people with?
[14:48:25] *** Joins: malloy (~jimery@116.30.221.89)
[14:51:04] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 265 seconds)
[14:51:45] <Haohmaru> do you want a list?
[14:51:53] <Haohmaru> >:/
[14:53:46] *** Joins: meator (~meator@user/meator)
[14:53:46] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[14:53:55] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[14:55:18] <johnny> nah.. just one will do
[14:59:12] <Haohmaru> wikipedia links
[15:01:11] *** lkor is now known as lionkor
[15:01:33] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:04:27] <urdh> like this: https://en.wikipedia.org/wiki/Argument_from_authority
[15:07:17] <johnny> ah.. fallacy time
[15:07:51] <johnny> is it argument from authority to say that because some famous developer uses something then it might be ok at doing the thing they use it for?
[15:08:05] <johnny> i've heard that one
[15:08:37] <johnny> all the people wanna read it as.. they use it so must be best.. thus argument from authority
[15:10:25] <urdh> "X does Y, therefore Y must be an acceptable thing to do" is an appeal to authority, yes
[15:11:05] <johnny> i think "might be ok" or some variant of that makes it not worth making a big deal out i guess
[15:11:07] *** Joins: Leone (~Leo@216.154.21.17)
[15:11:11] <PJBoy> "the law says murder is bad, so murder is bad"
[15:11:23] <johnny> again, the softening i think is the important part
[15:11:39] <urdh> PJBoy: yes the legal system is built on appeal to authority, what's your point? ;)
[15:11:51] <PJBoy> well it's much of a fallacy then
[15:11:53] <PJBoy> *not much
[15:12:03] <PJBoy> it's kinda the basis of all research
[15:12:10] <urdh> the softening is irrelevant, it's still an appeal to authority
[15:12:44] <johnny> ah.. i don't take it that seriously i guess. but technicaly you're right
[15:12:44] <urdh> if people additionally mis-interpret the argument as "X does Y, therefore Y is the best", that's on them
[15:12:58] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:13:02] *** Joins: xcm_ (~xcm@user/xcm)
[15:13:12] <urdh> whether having the argument is the first place is worthwhile is a different issue :)
[15:13:32] <johnny> would you prefer "it's worth looking at?"
[15:14:12] <urdh> PJBoy: I guess you could say "the law" is a set of axioms for the legal system
[15:14:22] *** Joins: Svitkona2 (~Svitkona@157.245.38.135)
[15:14:26] *** Joins: raekye6 (~raekye@creatifcubed.com)
[15:14:27] *** Joins: manuels2 (~manuel@80.211.205.88)
[15:14:37] *** Joins: wille1 (~wille@static.140.85.76.144.clients.your-server.de)
[15:14:48] <PJBoy> the analogy can be made to maths research though
[15:14:50] *** Joins: uramhoaH (~Haohmaru@195.24.53.110)
[15:15:02] <johnny> urdh, that's not the misintepreation i meant though. like .. i can say.. linus torvalds uses X to develop the linux kernel, so it's probably ok at doing that.  they read it as.. I'm saying that linus torvalds does, i also think it's the best way to do it
[15:15:18] <urdh> that would make it less of an appeal to authority and more of an argument that the X follows from the axioms we've agreed upon
[15:15:22] *** Joins: celphi_ (sid97751@user/celphi)
[15:15:24] *** Joins: Trollmann (~Trollmann@user/trollmann)
[15:15:24] *** Joins: Artea- (~Lufia@artea.com.pt)
[15:15:27] *** Joins: beanzilla_ (beanzilla@user/beanzilla)
[15:15:29] *** Joins: Bodger1234__ (sid503511@id-503511.uxbridge.irccloud.com)
[15:15:31] *** Joins: Dijky_ (~Dijky@user/dijky)
[15:15:34] *** Joins: cursey_ (~cursey@user/cursey)
[15:15:36] *** Joins: tct_ (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[15:15:37] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[15:15:40] <PJBoy> yeah but if you look at something high level like, say fermat's last theorem
[15:15:56] <PJBoy> I'm not gonna read that proof, I just believe the result because good mathematicians do
[15:15:59] <urdh> johnny: right, that's more of a strawman argument then
[15:16:02] *** Joins: Ara_ (~Ara@user/ara)
[15:16:19] <PJBoy> and in general, mathematicians don't read every proof
[15:16:25] <johnny> i don't know what the right one is, ut i don' think it's a strawman
[15:16:44] <urdh> johnny: but still, if you claim X is a reasonable way to do things because Torvalds does it, that's an appeal to authority in the context of reasoning about whether X is good or not
[15:17:01] *** Joins: slavfox_ (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[15:17:05] <johnny> reasonable is perhaps overstating, but you're still correct
[15:17:17] <johnny> like i know developers i consider great who use nano
[15:17:26] <johnny> they built amazing software, well tested, etc
[15:17:34] <PJBoy> I use nano
[15:17:35] *** Joins: lru_ (~lru@240.ip-51-79-50.net)
[15:17:38] <johnny> but i definitely wouldn't suggest one would use nano
[15:17:50] *** Joins: talisein_ (~talisein@user/talisein)
[15:17:51] <johnny> i'm not surprised, there's always at least one
[15:17:56] <urdh> PJBoy: right, but "a proof exists, you can look it up if you want" is different from "X conjectured this, so I'll assume it's true"
[15:18:04] *** Joins: klys_ (~mdasoh@show.op8.us)
[15:18:09] *** Joins: averetzi_ (~mike@li913-121.members.linode.com)
[15:18:13] <PJBoy> ok that's a good point
[15:18:17] <johnny> i'm taking appeal to authority clearly too seriously
[15:18:19] *** Joins: BrandonArnold1 (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com)
[15:18:24] <urdh> (in the former case, your derivative proof is unconditionally true, in the latter, it is true assuming the conjecture is)
[15:18:35] <PJBoy> an appeal to authority whose claim can be backed up with a citation is clearly a different situation
[15:18:35] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[15:18:41] <urdh> yeah
[15:19:31] <johnny> so.. not that it matters, but i didn't think about std::to_string and rounding
[15:19:42] <urdh> also, who *doesn't* use nano?
[15:19:46] <urdh> it's a great $EDITOR
[15:20:09] <johnny> 0.000000 is clearly not the same as 0 in the output..
[15:20:31] <johnny> i don't know what the use of 0.000000 is good for.. but i'm still gonna replicate it
[15:21:05] *** Joins: niska` (~niska@static.38.6.217.95.clients.your-server.de)
[15:21:57] <johnny> i'm just happy that this is finally coming together .. and i can finally build the exporter i've spent the last 2 months learning C++ for
[15:22:13] <PJBoy> you know I don't think it's specified how rounding happens with string conversion functios
[15:22:27] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (*.net *.split)
[15:22:27] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[15:22:27] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (*.net *.split)
[15:22:27] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[15:22:27] *** Quits: Guest3655 (~wasd@100.101.7.51.dyn.plus.net) (*.net *.split)
[15:22:27] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[15:22:27] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[15:22:27] *** Quits: frost (~frost@user/frost) (*.net *.split)
[15:22:27] *** Quits: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi) (*.net *.split)
[15:22:27] *** Quits: niska (~niska@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[15:22:27] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (*.net *.split)
[15:22:27] *** Quits: Brewster (~Brewster@185.145.156.241) (*.net *.split)
[15:22:27] *** Quits: manuels (~manuel@80.211.205.88) (*.net *.split)
[15:22:27] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[15:22:27] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[15:22:27] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[15:22:27] *** Quits: raekye (~raekye@creatifcubed.com) (*.net *.split)
[15:22:27] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[15:22:27] *** Quits: BrandonArnold (~brandon@ec2-52-27-188-210.us-west-2.compute.amazonaws.com) (*.net *.split)
[15:22:27] *** Quits: Trollman- (~Trollmann@user/trollmann) (*.net *.split)
[15:22:27] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[15:22:27] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[15:22:27] *** Quits: lru (~lru@240.ip-51-79-50.net) (*.net *.split)
[15:22:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[15:22:27] *** Quits: xcm (~xcm@user/xcm) (*.net *.split)
[15:22:27] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[15:22:27] *** Quits: beanzilla (~beanzilla@user/beanzilla) (*.net *.split)
[15:22:27] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[15:22:27] *** Quits: Bodger1234_ (sid503511@uxbridge.irccloud.com) (*.net *.split)
[15:22:27] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[15:22:27] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[15:22:27] *** Quits: averetzi (~mike@user/averetzi) (*.net *.split)
[15:22:28] *** manuels2 is now known as manuels
[15:22:28] *** Ara_ is now known as Ara
[15:22:28] *** raekye6 is now known as raekye
[15:22:28] *** beanzilla_ is now known as beanzilla
[15:22:28] *** Bodger1234__ is now known as Bodger1234_
[15:22:29] *** slavfox_ is now known as slavfox
[15:22:29] *** Svitkona2 is now known as Svitkona
[15:22:29] *** wille1 is now known as wille
[15:22:30] <johnny> yeah i imagine so
[15:22:31] *** Joins: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar)
[15:22:33] *** celphi_ is now known as celphi
[15:22:34] <PJBoy> C standard for fprintf's %f just says "the value is rounded to the appropriate number of digits"
[15:22:39] <johnny> oh lol
[15:22:47] <urdh> "as if you did printf("%d") with a large enough buffer" is how std::to_string works, IIRC
[15:22:59] <urdh> or whatever format argument is the right one
[15:23:09] <PJBoy> yeah
[15:23:12] *** Joins: wasd (~wasd@100.101.7.51.dyn.plus.net)
[15:23:14] <PJBoy> floats are the only case that matters though
[15:23:33] <urdh> also to_string is affected by locale so have fun with that
[15:23:33] <johnny> i don't know what all these floats are for exactly.. but they're probably important
[15:23:36] *** wasd is now known as Guest502
[15:23:45] <PJBoy> maybe it uses the float rounding mode?
[15:23:55] <PJBoy> idk it seems underspecified to me
[15:24:26] *** uramhoaH is now known as Haohmaru
[15:24:36] <PJBoy> oh wait
[15:24:38] <johnny> so any guess on how Qt handled it via conversion to QString.. probably also affected by locale.. but maybe nto?
[15:24:38] <PJBoy> there's more
[15:25:10] <johnny> if it is, then i don't care, but that's that's the existing behaviour, and that's all i'm trying to replicate. whether that's good or not, isn't up to me
[15:25:18] <lionkor> I'd say use `<charconv>` for number->string conversion, its not affected by locale and doesnt allocate, throw, etc.
[15:25:29] <urdh> ^
[15:25:42] <johnny> lionkor, if the curreing stuff via QString is affected by locale, then i definitely don't want to do that
[15:26:01] <lionkor> Though gcc doesn't implement the float variants, last time I checked, which is a real bummer
[15:26:09] <PJBoy> > if the number of significant decimal digits is at most DECIMAL_DIG, then the result should be correctly rounded. If the number of significant decimal digits is more than DECIMAL_DIG but the source value is exactly representable with DECIMAL_DIG digits, then the result should be an exact representation with trailing zeros. Otherwise, the source value is bounded by two adjacent decimal...
[15:26:11] <PJBoy> ...strings L < U, both having DECIMAL_DIG significant digits; the value of the resultant decimal string D should satisfy L ≤ D ≤ U, with the extra stipulation that the error should have a correct sign for the current rounding direction
[15:26:23] <johnny> i want to do it exactly as it is.. just not via this qt excel library
[15:26:44] <PJBoy> so it does use the floating point environment rounding
[15:26:45] <urdh> { printf("%#x, %#x", 0, 42); } // also, TIL - i've always added that 0x manually...
[15:26:45] <geordi> 0, 0x2a
[15:27:00] <lionkor> I mean if you want to show the number on the screen, you should use the current locale, as different places around the world use different floating point notation - I always get annoyed when programs dont respect that
[15:27:06] <PJBoy> wait what
[15:27:12] <lionkor> urdh: whoa rlyß i did that too
[15:27:29] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[15:27:41] <johnny> lionkor, this is a game modding program i didn't write.  you feed it game source files, and it spits out  spreadhseet you can edit, an then you feed that back and it generates the the game source file
[15:27:52] <PJBoy> { printf("%#x, %#x, %#x, %#x, %#x", 0, 9, 15, 16, 42); }
[15:27:52] <geordi> 0, 0x9, 0xf, 0x10, 0x2a
[15:28:03] <johnny> if only parts of the code are locale independent it would make a mess
[15:28:05] <PJBoy> bah I was hoping it didn't show the prefix for 9
[15:28:18] * lionkor is not surprised that it handles 0 differently for no reason
[15:28:18] <johnny> it does mean that you can't share your edits to people who use adifferent locale though
[15:28:20] <urdh> "In the alternative implementation 0x or 0X is prefixed to results if the converted value is nonzero." :)
[15:28:41] <johnny> so.. if the actual maintainer wants to do it, it'll have to be a codebase wide effort
[15:28:52] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:29:08] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[15:29:24] <johnny> wait.. for which standard number type conversion would locale matter anyws?
[15:29:35] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[15:29:45] <PJBoy> that's a shame
[15:29:46] <urdh> decimal point, thousandth separator
[15:29:47] <johnny> oh..sorry thousands separators
[15:29:57] *** Joins: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi)
[15:29:57] <johnny> would decimal points be related to float?
[15:30:03] <urdh> uh, yes
[15:30:09] <PJBoy> { printf("%#X, %#X, %#X, %#X, %#X", 0, 9, 15, 16, 42); }
[15:30:10] <johnny> and you said gcc doesn't do that
[15:30:10] <geordi> 0, 0X9, 0XF, 0X10, 0X2A
[15:30:19] <urdh> and it would certainly break CSV files in parts of europe
[15:30:19] <PJBoy> the fact that it capitalises those X sucks too
[15:30:21] <johnny> that's like.. the only thing i need it for
[15:30:38] <johnny> urdh, 100%.. but not my concern outside of flat
[15:30:39] <johnny> float*
[15:30:42] <lionkor> johnny: gcc doesn't do it with <charconv>, at least a year ago
[15:30:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:30:59] *** Quits: paul424 (~tom@ip-31-0-124-114.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:31:12] <lionkor> but yeah e.g. germany uses `,`, US uses `.` for the decimal point
[15:31:15] <johnny> so for now it will have to stay locale dependent
[15:31:23] <urdh> lionkor: <charconv> is *specifically* locale-independent so you'd hope it doesn't ;)
[15:31:26] <johnny> yeah i know about the decimal point, but you ruled that out
[15:31:47] <johnny> maybe it'll be fixed someday
[15:32:23] <urdh> you just anticipate the bug report filed by the first german trying to open one of those CSV files
[15:32:24] <johnny> but in any case, i'm going to 100% replicate the current behaviour and not get fancy. anything else is up to the maintainer
[15:32:37] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:32:40] <lionkor> for example german-locale Excel will recognize `,` as float separator instead of the US `.` (which im not sure if it will get that one, it might)
[15:32:47] <lionkor> Oh for sure
[15:32:57] <johnny> urdh, well like i said before, people generate the files on their own computer, and then feed them back into the program
[15:33:06] <urdh> that's not my point
[15:33:22] <johnny> it'll be fine if the german generates the file and then feeds the file back
[15:33:30] <johnny> it won't be fine if the german shares the file with an american
[15:33:40] <johnny> or of course changes the locale in between
[15:33:40] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[15:33:56] <urdh> my point is, a line in your CSV file might look like "A,B,5.6,C" (four columns) in US locale, but "A,B,5,6,C" (five columns) in DE locale
[15:34:24] <johnny> well the program was developed by a french person.. so it must be ok ??? uhh
[15:34:33] <urdh> at the very least you will have to quote things appropriately if you have a locale like that
[15:34:43] <johnny> ah.. yes.. indeed
[15:34:57] <lionkor> Remember you can also just `std::setlocale(LC_ALL, "C")` to force it to be the C locale (or "en-us.utf8" or whatever)
[15:35:27] <johnny> i ain't touch that without consent of the maintainer
[15:35:32] <lionkor> Yes bad idea lmao
[15:35:33] <johnny> i'd want him to test it real hard
[15:36:24] <johnny> he's a windows user with real excel (probably) in france, and i'm a linux user with libreoffice .. and almost all the users are windows folks.. so i want real testing before i get fancy
[15:36:45] <johnny> too many variables for me to be comfortable with
[15:37:47] <urdh> (there's got to be a reasonable CSV parser/generator library out there that just takes care of these details...)
[15:38:01] <johnny> generator wise.. i haven't found one.. plenty of parsers though
[15:38:25] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[15:38:37] <johnny> i'm replicating an existing api, so the existing generators dn't work for me
[15:38:49] *** Joins: cursey (~cursey@user/cursey)
[15:39:01] <johnny> i did steal the quote'/quote minimal aglorithm from one though (credited of course)
[15:39:40] <urdh> https://github.com/p-ranav/csv2 does both
[15:39:47] <johnny> yeah th way it doesn't won't work for me
[15:39:54] <urdh> but yeah obviously if you're trying to replicate something broken a library won't help
[15:39:57] <johnny> i already looked at it. that's where i got the quite/quote minimal
[15:40:05] <johnny> it's not necessarily broken though
[15:40:14] <johnny> it's just different
[15:40:23] <johnny> it's an excel library in qt
[15:40:42] <urdh> arguably if it's called CSV and doesn't work like CSV should, it's broken
[15:40:44] <johnny> so i just needed to replicate the write(row, column) method really
[15:40:55] <johnny> it works like csv just fine..
[15:41:19] <urdh> so why wouldn't a CSV writer work, then?
[15:41:23] <johnny> csv4 does not handle the thousands separators case at all btw
[15:42:34] <johnny> oh sorry it does
[15:42:37] <johnny> implicitly
[15:42:58] <johnny> because anything that has a , in it is quoted.. not specfically thousandths
[15:43:03] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[15:43:04] <urdh> (https://github.com/vincentlaucsb/csv-parser also has both parser and generator)
[15:43:21] <johnny> i'm using the parser, but not the genreator
[15:43:58] <johnny> the problem is actually in the data format itself of the program.. there are no headers and the columns are completely variable length
[15:44:21] <johnny> one row has 77 columns .. and i haven't gone through all the files yet.. that's the max i've found so far
[15:45:10] <johnny> it probably shouldn't have been excel in the first place.. but it does.. uhmm. work
[15:45:20] *** Joins: proller (~p@2a02:6b8:0:40c:cb8e:3fed:d987:b74f)
[15:45:28] <urdh> eww
[15:45:51] <johnny> so there are tons of little reasons why i had to write the generator.. particularly so vince's csv library will read it
[15:46:01] <johnny> well his and others i'm sure
[15:46:53] <johnny> but really though, other than the quoting algo, both of their writers are pretty minimal
[15:47:01] <johnny> most of the work is in making them generic
[15:48:46] <johnny> my first goal is to simply remove the Qt dependency that we don't need.. since it's only used for this excel library , 2 charset conversions, and QSettings
[15:48:46] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[15:49:08] <ham5urg_> How do I create an global templated operator< ? I tried template <std::size_t N> bool typename std::bitset<N>::operator< ( const typename std::bitset<N> & l, const typename std::bitset<N> & r )
[15:49:34] <ham5urg_> But the first error I get is: error: expected identifier before ‘operator’
[15:50:55] <ham5urg_> Is this problem due to the explicit template (size_t N) ?
[15:54:10] <urdh> ideally you don't, because I believe overloading operators for stdlib types is UB
[15:55:03] <urdh> and what your declaration tries to do is to declare a *member* of std::bitset, not a global operator
[15:55:40] <urdh> you want this: template <std::size_t N> bool operator<( const std::bitset<N> & l, const std::bitset<N> & r)
[15:55:46] <johnny> on that note.. is there a short of saying implementation defined but works like that in the compilers most people use?
[15:56:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 258 seconds)
[15:56:23] <urdh> not really
[15:56:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:56:35] <lionkor> yeah, it's usually referred to as "works for me lol"
[15:56:39] <johnny> or non standard (like say #pragma once as an example) but exists in the compilers most people use
[15:56:52] <urdh> "implementation defined" could just as well be platform-dependent rather than compiler-dependent as well
[15:56:59] <urdh> (or architecture-dependent)
[15:57:00] <johnny> ah true neough
[15:57:06] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[15:57:22] <m_ben> ham5urg_: remove the typenames and the std::bitset<N>:: before operator<
[15:57:26] <johnny> architecture dependent by itself is quite clear
[15:57:35] <PJBoy> you know I'm not sure that it is UB to add that overload
[15:57:51] <PJBoy> if it is, it's not clear from http://eel.is/c++draft/namespace.std
[15:57:54] <lionkor> maybe just call it "non-standard"
[15:58:11] <johnny> yeah but i wanted a shorter way to say non-standard, but is likely available to you
[15:58:41] <PJBoy> there is the point on customisation points
[15:58:58] <PJBoy> but there isn't wording to forbid non cutomisation points from being overloaded
[15:59:07] <johnny> well other than dealing with floats.. i might be done with the writer, and then i'll do the reader and be happy
[15:59:54] <urdh> PJBoy: hm, I'm surprised
[16:00:01] <urdh> doesn't mean it's a good idea, though
[16:00:08] <PJBoy> I think it's just poorly worded
[16:00:36] <PJBoy> I reckon the intent is definitely to not change the behaviour of stdlib stuff
[16:00:42] *** Quits: artok (~azo@mobile-access-bcee2b-18.dhcp.inet.fi) (Ping timeout: 260 seconds)
[16:00:58] <PJBoy> aside from the few exceptions
[16:01:33] <ham5urg_> m_ben, thanks
[16:02:47] <m_ben> ham5urg_: something like this https://wandbox.org/permlink/gAMVz4VxYtKVE0bC
[16:05:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:30d4:c050:9d92:f5fd) (Quit: Quit)
[16:05:48] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[16:07:44] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:08:26] *** Joins: artok (~azo@mobile-access-bcee2b-18.dhcp.inet.fi)
[16:14:10] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[16:14:44] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:19:05] <ham5urg_> m_ben, in your example you convert to_ulong(). What if bitset<256> is used? In my case I need 256.
[16:19:25] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[16:19:39] <PJBoy> lexicographical_compare
[16:19:59] <ham5urg_> I was thinking about std::array<char,32> with 32*8=256
[16:21:05] <PJBoy> oh wait yeah, bitset doesn't have iterators
[16:22:46] <PJBoy> https://wandbox.org/permlink/agfZpGdXCJx0B4Xh
[16:23:31] <ville> this had an interesting twist in the middle https://lemire.me/blog/2021/10/26/in-c-is-empty-faster-than-comparing-the-size-with-zero/
[16:25:56] * PJBoy is activated
[16:26:32] <cart_man> Is thre a std::multiply( v.begin() , v.end() )  for an vector of ints?
[16:26:42] <ville> no
[16:26:42] <PJBoy> returning what?
[16:26:44] <cart_man> also a std::addition()  that just adds
[16:26:46] <PJBoy> the product?
[16:26:55] <cart_man> the multiplied of all the elements in the vec
[16:27:02] <PJBoy> there's std::reduce / std::accumulate
[16:27:25] *** Joins: Brewster (~Brewster@185.145.156.241)
[16:27:27] <PJBoy> which do addition by default
[16:27:34] <PJBoy> but you can specify multiplication
[16:27:57] *** Joins: Ivii (~Ivyy@2001:a61:1304:3a01:3314:9e67:36cd:cd32)
[16:28:12] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[16:29:27] *** Artea- is now known as Artea
[16:29:39] <PJBoy> that code doesn't seem to optimise better with a signed type...
[16:30:51] <PJBoy> oh the first example does
[16:31:26] <PJBoy> well there you go
[16:32:49] <PJBoy> that sucks
[16:34:18] <m_ben> ham5urg_: that was just an example, idk what your operator< is supposed to do
[16:34:25] <ville> "unsigned considered harmful"
[16:34:54] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:35:35] <rpav> there are neither signed nor unsigned values, only operations
[16:35:42] <rpav> (with 2s complement of course)
[16:36:28] <PJBoy> yeah this is the first example where I have to admit signed is better at doing what unsigned is supposed to do
[16:36:54] <ville> it's pretty clever what gcc was able to do there. not that it matters that much, but there's probably a loop or two out there that could have been avoided and it sort of sucks because it goes against what you might express through your type
[16:37:11] <ville> err might want to
[16:37:21] <rpav> this article heh
[16:37:42] <rpav> "set and the map are other useful ones" .. "In recent C++ (C++11)" ..
[16:38:59] <PJBoy> indeed
[16:39:07] <rpav> though if .size() is required to be constant-time, i'm not sure the point of all the "use empty()!#@!" linting rules
[16:39:20] <PJBoy> it's required to be constant time for all stdlib containers
[16:39:20] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[16:40:13] <rpav> i guess "who uses anything else" but i suppose that's an assumption the article makes
[16:40:14] <PJBoy> > Though it may not help much with modern STL data structures, in other code it could be different
[16:40:36] <PJBoy> any sensible linked list implementation would not have a constant time size() function
[16:40:51] <ville> that's a bold claim
[16:40:53] <rpav> i just sortof wish there was a not_empty()
[16:41:06] <rpav> i mean yeah it's more characters to type than !...empty() but
[16:41:11] <PJBoy> modulo hyperbolism
[16:41:12] <rpav> it reads nicer ;P
[16:41:41] <PJBoy> nah I disagree
[16:41:59] <PJBoy> what I want is for all containers to have an operator bool
[16:42:15] <rpav> 🤔
[16:42:45] <rpav> that would probably be reasonable
[16:44:59] <rpav> in dynamic languages the conversion is sortof terrible but in C++ i think that would be fine .. you should seriously write a proposal heh
[16:45:26] <ville> yes definetly need more ways to do things
[16:45:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:45:55] <rpav> e.g. in python this is, as is idiomatic, the worst possible thing to do
[16:46:59] <rpav> though in lisp the nil/() equivalence is actually useful, and since there's only one false value it's otherwise fine .. i think in ruby there were issues, and in JS of course
[16:47:03] <PJBoy> it's probably come up before
[16:47:31] <rpav> but like in C++ there doesn't seem to be any other useful interpretation of bool conversion, and it's not otherwise defined
[16:47:38] <PJBoy> and probably dismissed because "why shouldn't Container::empty() be equivalent to std::all_of(container)"
[16:47:38] <rpav> and it's what you _really want_ most of the time
[16:47:48] <PJBoy> *none_of
[16:47:52] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:47:56] <PJBoy> uh
[16:48:12] <PJBoy> *and probably dismissed because "why shouldn't Container::operator bool() be equivalent to std::all_of(container)"
[16:48:16] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[16:48:21] <PJBoy> or any_of
[16:48:23] <PJBoy> bah
[16:49:15] <rpav> of course you have the C++ committee problem where "because that's mostly useless and we want to check whether there are contents 99.9999% of the time, and the other times you can be explicit" i.e. "because it's fucking useful every day" isn't a winning argument
[16:50:07] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[16:51:20] <rpav> sadly you can't implement conversion operators outside classes ;/
[16:51:50] <PJBoy> you can specialise std::vector for all your user defined data types though (!)
[16:53:14] <rpav> useful ;)
[16:53:15] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[16:53:19] <PJBoy> so you can write a concept for "stdlib_type" and write a `template<stdlib_type T> std::vector<T> : Vector { operator bool() ... };`
[16:53:45] <PJBoy> where Vector is a `template<typename T> struct Vector : std::vector<T>`
[16:53:58] <rpav> i really need to look at concepts
[16:54:06] <PJBoy> and I'm only like 90% that the result is UB
[16:54:32] <rpav> yeah i was under the impression you weren't really allowed to implement stdlib things for other stdlib things
[16:56:25] <PJBoy> the pattern of `template<...> struct Thing; template<...T> struct ThingDerived : Thing<T>; template<...T> struct Thing<T>;` is UB I believe
[16:56:29] <PJBoy> regardless of stdlib
[16:57:00] <PJBoy> possibly IFNDR actually
[17:00:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:01:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:01:42] <rpav> wait what part and why
[17:02:05] <rpav> i mean other than presumably lacking {}; to make it a definition
[17:02:19] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[17:03:13] <PJBoy> doing a partial specialisation after using the non specialisation
[17:03:30] <PJBoy> which changes what ThingDerived is depending at what point in the source code you're looking
[17:04:04] <rpav> i don't see how that could possibly be the case
[17:05:52] <CarloWood> What is the easiest way to generate a graph of which member function calls which member function and which function(s) use which member variable? For a given set of classes?
[17:05:52] *** Joins: luizfrds (~Luiz@152.250.243.147)
[17:06:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:06:26] *** Joins: AmR (~AmREiSa@156.199.244.83)
[17:08:29] <PJBoy> ok nvm, I was thinking of a different specialisation IFNDR thing
[17:09:08] <rpav> PJBoy: ok to be fair i can 100% see how it could be the case, but i feel like it'd be more of an ODR violation than purely ill-formed
[17:09:25] <PJBoy> but if you specialise a template and some other file is unaware of that specialisation, that's IFNDR
[17:09:25] <rpav> though i'm not sure how ODR deals with sequencing stuff
[17:09:33] <rpav> absolutely
[17:10:21] <rpav> definitely a "tread carefully" but probably any template specialization is that
[17:10:30] <PJBoy> but the sequencing stuff is all well defined
[17:10:37] <PJBoy> within a TU
[17:11:16] <PJBoy> the standard explicitly says it works http://eel.is/c++draft/temp.spec#temp.expl.spec-8
[17:11:37] <rpav> sure but presumably `<...> struct P; <T> struct D : P<T> {..}; D<int> x; <T> struct P<int> { .. };` is some kind of error
[17:12:10] <rpav> oh my holy list batman
[17:12:45] * rpav writes a proposal; let's introduct BULLETED LISTS to the STANDARD
[17:13:00] <PJBoy> it's intentional
[17:13:00] <m_ben> CarloWood: you could use the output of gprof and convert it into a dot graph, see for example https://github.com/jrfonseca/gprof2dot
[17:13:32] <rpav> "When writing a specialization, be careful about its location; or to make it compile will be such a trial as to kindle its self-immolation" haha
[17:13:55] <PJBoy> yup :D
[17:13:55] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[17:14:29] <PJBoy> so actually the snippet you wrote I think is fine
[17:15:18] <PJBoy> you just get lots of changing behaviour depending on where you write your code
[17:16:22] <rpav> that seems highly dubious, though if that's legal, it might be some friday fun for perpetrating shenanigans
[17:16:52] <rpav> like i guess the base case is can you even specialize a template after you have instances
[17:17:18] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:17:39] <rpav> ah it's a compiler error, if it sees it
[17:18:00] <PJBoy> is it??
[17:18:05] <rpav> this is a clear-cut case of why something would be IFNDR, though mostly as a result of C++ having a shitty build model
[17:18:22] <rpav> well ok i get red wavy lines and it says error; i haven't tried to build
[17:18:42] <rpav> {} template<typename T> struct S {}; S<int> s0; template<> struct S<int> {};
[17:18:42] <geordi> error: specialization of 'S<int>' after instantiation
[17:18:52] <PJBoy> wtf
[17:19:01] <PJBoy> geordi, use -w
[17:19:01] <geordi> Same error.
[17:19:14] <PJBoy> where does it say that's an error then
[17:19:45] <rpav> all compilers ought to have references to the draft included in every error message
[17:19:55] <PJBoy> hahaha
[17:19:58] <PJBoy> that's actually true
[17:20:31] <rpav> also be accompanied by the error and paragraph being read out loud by comic book guy
[17:21:14] <rpav> i think the paragraph you cited and the sentence i pasted implies that order might lead to compilation failure
[17:21:35] <rpav> "be careful about its location; or to make it compile"
[17:22:22] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[17:22:41] <rpav> "[biblical-style list..] can affect whether a program is well-formed according to the relative positioning of the explicit specialization declarations and their points of instantiation in the translation unit as specified above and below"
[17:23:23] <PJBoy> that geordi error I think is the same one demonstrated by this example http://eel.is/c++draft/temp.spec#temp.expl.spec-example-4
[17:23:46] <rpav> ah yeah
[17:23:52] <PJBoy> > If the program does not provide a definition for an explicit specialization and either the specialization is used in a way that would cause an implicit instantiation to take place or the member is a virtual member function, the program is ill-formed, no diagnostic required
[17:24:07] <PJBoy> I think
[17:24:12] <rpav> at least it's an actual error
[17:24:18] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:24:45] <rpav> mm
[17:25:31] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:25:35] <rpav> that's something leading to IFNDR and i'm not sure what the bit about "virtual member function" is about
[17:25:48] <rpav> probably something that would affect vtable layout
[17:25:54] <rpav> or values i guess
[17:26:15] <rpav> ah i think i can make that one happen
[17:27:12] <PJBoy> it talks about "the member " out of nowhere
[17:27:21] <rpav> yeah
[17:27:30] <rpav> sounds lke a cut and paste job or something
[17:27:42] <PJBoy> actually
[17:27:43] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[17:27:52] <PJBoy> > If a template, a member template or a member of a class template is explicitly specialized ...
[17:28:03] <PJBoy> must be referring to that last one
[17:28:19] <rpav> 🤔 if a template, a member template, and a member of a class template walked into a bar
[17:28:46] <rpav> how do you get an implicit instantiation
[17:28:52] <PJBoy> the bartender says "foo you, baz off"
[17:29:21] <PJBoy> implicit instantiation is any instantiation that isn't an explicit instantiation
[17:29:33] <PJBoy> so { vector<int> v; } is an implicit instantiation
[17:30:12] <PJBoy> or in the example it's the function parameter
[17:31:12] <rpav> oooh explicit instantiation _of the template_, which is probably nearly all of them
[17:31:26] <rpav> err, implicit
[17:31:27] <rpav> yeah
[17:31:36] <PJBoy> yeah yeah
[17:36:24] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[17:37:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:37:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:37:18] *** ChanServ sets mode: +v npaperbot
[17:37:28] <PJBoy> tbh I can't interpret it atm
[17:39:08] <PJBoy> damn it
[17:39:13] <PJBoy> they merged resize_and_overwrite
[17:41:39] *** Quits: meator (~meator@user/meator) (Ping timeout: 260 seconds)
[17:41:39] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[17:50:26] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[17:52:10] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:54:15] *** Joins: Inst_ (~Inst@2600:1006:b01a:69bf:f8cc:5081:41af:e624)
[17:55:40] *** Joins: Inst__ (~Inst@2601:6c4:4080:3f80:6dd4:3be6:70ce:10d9)
[17:55:40] *** Quits: Inst_ (~Inst@2600:1006:b01a:69bf:f8cc:5081:41af:e624) (Read error: Network is unreachable)
[17:57:59] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:c4ab:4275:2f29:1458) (Ping timeout: 264 seconds)
[18:01:39] <yolo_> Alipha: thanks. I now disable clang-format's header-sorting
[18:09:59] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 264 seconds)
[18:16:03] *** Joins: pulse (~pulse@user/pulse)
[18:17:50] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[18:18:02] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[18:19:10] *** lru_ is now known as lru
[18:23:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:387a:547d:b879:f1fe)
[18:23:01] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:387a:547d:b879:f1fe) (Changing host)
[18:23:01] *** Joins: skapata (~Skapata@user/skapata)
[18:26:09] *** Quits: averetzi_ (~mike@li913-121.members.linode.com) (Remote host closed the connection)
[18:27:00] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[18:27:57] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:f56e:630b:ae2e:6e55) (Quit: Konversation terminated!)
[18:28:05] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:32:09] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[18:41:25] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 268 seconds)
[18:45:24] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[18:46:02] *** Quits: ham5urg_ (~ham5urg@p2e54d296.dip0.t-ipconnect.de) (Quit: Leaving)
[18:50:05] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Remote host closed the connection)
[18:54:45] <rpav> you might be better off writing headers that are independent, but
[18:54:48] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[18:55:19] <rpav> with the alternative that where it really matters, either let clang-format know, or `// clang-format: off/on` the block
[18:55:19] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[18:55:34] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[18:56:10] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[19:00:08] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:00:29] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:02:17] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:717a:482d:a8bf:d606)
[19:03:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[19:04:10] *** Quits: lionkor (~lionkor@200116b80fa57c007285c2fffea63d72.dip.versatel-1u1.de) (Remote host closed the connection)
[19:04:33] *** Joins: lionkor (~lionkor@200116b80fa57c00dc443c0104f029d0.dip.versatel-1u1.de)
[19:08:26] *** Joins: Guest91 (~Guest91@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[19:08:38] *** Joins: magla (~gelignite@55d4dc2e.access.ecotel.net)
[19:08:41] *** Joins: Guest18 (~Guest18@83.139.147.234)
[19:08:53] <Guest91> it seems impossible to define a static array in C++
[19:09:14] <Guest91> no matter how much I try I always get more errors
[19:09:20] <Guest91> (I mean std::array)
[19:09:31] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[19:09:59] *** Guest18 is now known as soman
[19:11:11] <rpav> testcase
[19:11:30] <LordKalma> !give Guest91 testcase
[19:11:31] <nolyc> Guest91: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[19:11:44] <LordKalma> compiler Explorer / goldbolt is also fine and I prefer it haha
[19:11:52] <rpav> seriously should be updated to godbolt heh
[19:13:15] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[19:13:15] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[19:14:19] <PJBoy> nah
[19:14:51] <PJBoy> the assembly view is a waste of space if you don't care about the assembly
[19:14:59] <PJBoy> and it's the only reason to use godbolt
[19:15:08] <m_ben> ^
[19:15:54] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:16:07] <m_ben> godbolt's interface is just too distracting with all the bells and whistles
[19:16:32] <LordKalma> godbolt has a terrible UI and it's not because the asm view
[19:16:40] <PJBoy> yeah
[19:16:44] <LordKalma> and why the fuck wandbox has a 5 line textbox?
[19:17:03] <Guest91> here we go! https://godbolt.org/z/ExzhPda1x
[19:17:06] <PJBoy> not if you use a custom CSS script like I do >_>
[19:17:07] <LordKalma> it's what I hate the most
[19:17:15] <LordKalma> it looks absolute shit
[19:17:23] <LordKalma> and the share button is hidden by the run button
[19:17:30] <PJBoy> that part makes sense
[19:17:42] <PJBoy> wouldn't want to share something without running it
[19:18:16] <Guest91> I had 3x2 elements in that version: https://godbolt.org/z/rTMvGKT5j
[19:18:44] <LordKalma> Guest91, you're re-declaring the type
[19:19:09] <LordKalma> I think in that case you have to do it inline
[19:20:27] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[19:20:48] <Guest91> LordKalma alright I did that and then it asked for a constexpr, so I added it
[19:21:35] <Guest91> https://godbolt.org/z/nE7dxxc6K
[19:21:39] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[19:21:45] <m_ben> damn, so github has now a command palette à la vscode
[19:21:51] <LordKalma> it does?
[19:21:58] <m_ben> ctrl-alt-k
[19:22:01] <LordKalma> it also already literally opened vscode if you click the . button
[19:22:06] <m_ben> check your github notifications
[19:22:14] <Guest91> but now "too many intializers for the type const ... "?
[19:22:16] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:22:34] *** Joins: great_taste (~great_tas@190.32.235.20)
[19:24:34] <Guest91> LordKalma: shouldn't it only ask for two arrays of pair's?
[19:24:53] <LordKalma> https://godbolt.org/z/E3sab5bYY
[19:24:56] <LordKalma> I was just checking that
[19:24:57] <rpav> array of arrays :P
[19:24:58] <LordKalma> and weird
[19:25:42] <rpav> presumably you've arrived at the solution?
[19:26:01] <Guest91> now I don't *need* this to be a std::array, I just need to store lists of lists so if there is a way to avoid this, I will take it anytime
[19:26:03] <LordKalma> no, so weird that too many initializers error
[19:26:10] <rpav> https://godbolt.org/z/xaKfv45TG
[19:26:16] <LordKalma> because it's a vector of 2 elements with two elements
[19:26:24] <rpav> same "initializer list deduction sucks" issues afaict
[19:26:38] <LordKalma> ah that crap
[19:26:38] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[19:26:45] <LordKalma> yeah, nested init-lists is always crap
[19:26:49] <LordKalma> I've been bit by that
[19:27:12] <Guest91> that's ... way too verbose
[19:27:23] <LordKalma> https://godbolt.org/z/qT8e7sohM
[19:27:29] <Guest91> is there any way I can avoid it without using C-style arrays?
[19:27:33] <LordKalma> amazingly, you only have to write it once :D
[19:27:34] <rpav> https://godbolt.org/z/4hPWvb77b <- simpler/better anwyay
[19:27:40] <LordKalma> Guest91, you can always alias the types, which I would do anyway
[19:28:02] <rpav> also if you really need that exact array you don't need that array anyway
[19:28:03] <LordKalma> the fact you only have to write it once is amazing
[19:28:32] <rpav> like it pretty clearly maps (x,y) => (x,y) where valid
[19:29:01] <rpav> but if you need a 2D array, make a 1D array and remap the coordinates to an index (`index = y*width + x`)
[19:29:06] <Guest91> LordKalma: oh about that, should I alias them on the same namespace that contains my class itself? or within the class?
[19:29:16] <LordKalma> whatever suits you
[19:30:12] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:35:42] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[19:39:22] *** Joins: Tokamak (~Tokamak@107.127.10.65)
[19:43:55] *** Joins: meator (~meator@user/meator)
[19:47:04] <lumberluch0> any particular reason why p0792 (function_ref, from llvm et al) didn't make it further into the Standard? It def beats having std::function
[19:48:32] *** Quits: Guest91 (~Guest91@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:55:40] <ville> [p0792]
[19:55:40] <npaperbot> P0792R5: [Library] function_ref: a non-owning reference to a Callable <https://wg21.link/p0792r5> (by Vittorio Romeo) (2019-10-06) (Related: https://wg21.link/lewg340, https://wg21.link/p0792r5/github)
[20:00:17] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[20:01:21] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[20:01:32] <lumberluch0> (what does "SF F NASA" in the polls section mean?)
[20:02:29] *** Joins: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[20:02:55] *** Quits: thad_the_man_2 (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Client Quit)
[20:02:58] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:03:55] <thad_the_man> Is it my imagination or is APL picking up steam?
[20:09:16] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[20:13:56] <ville> strongly for, for, neutral, against, strongly against
[20:22:15] *** tct_ is now known as tct
[20:22:15] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[20:25:26] <kapil> I have boost::multi_index like: `subscribedActors.get<1>().equal_range(std::make_tuple(connectionActor));` How to get all entry except connectionActor ?
[20:25:55] *** Quits: letto (~letto@86.120.85.133) (Quit: Konversation terminated!)
[20:27:49] *** Joins: letto (~letto@86.120.85.133)
[20:30:49] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[20:34:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:43:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:43:47] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[20:48:42] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:52:21] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[20:55:47] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[20:57:26] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[20:57:26] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[20:57:45] *** Joins: TBC_z87 (~tbc@05BBF292.unconfigured.pool.telekom.hu)
[20:58:35] *** Quits: X-Scale (~ARM@31.22.167.71) (Ping timeout: 264 seconds)
[20:59:39] *** X-Scale` is now known as X-Scale
[21:06:20] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 260 seconds)
[21:06:23] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[21:14:35] *** Quits: andreasbuhr (~quassel@p548dd834.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:16:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:17:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:18:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:19:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:19:04] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[21:19:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:20:55] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[21:20:55] *** Quits: proller (~p@2a02:6b8:0:40c:cb8e:3fed:d987:b74f) (Ping timeout: 260 seconds)
[21:25:47] <rpav> thad_the_man: APL? the language?
[21:27:58] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[21:30:36] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:32:03] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[21:34:28] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Client Quit)
[21:34:31] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[21:37:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:37:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:37:17] *** ChanServ sets mode: +v npaperbot
[22:06:46] *** Quits: Tokamak (~Tokamak@107.127.10.65) (Ping timeout: 245 seconds)
[22:06:46] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[22:07:01] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[22:07:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:09:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:11:53] *** Joins: Tokamak (~Tokamak@107.127.10.65)
[22:13:44] *** Quits: CaCode (~Cassius@user/cacode) (Quit: Leaving)
[22:17:48] *** Parts: TBC_z87 (~tbc@05BBF292.unconfigured.pool.telekom.hu) (Konversation terminated!)
[22:20:11] *** Quits: r-g (~r-g@51.158.144.32) (Quit: r-g)
[22:22:29] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[22:27:39] *** Joins: Guest30 (~Guest30@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:27:43] *** Quits: Guest30 (~Guest30@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Client Quit)
[22:28:11] *** Joins: Guest21 (~Guest21@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:28:52] <Guest21> how would I serialize a map<A, B> without external libraries?
[22:29:57] *** Joins: Inst_ (~Inst@2601:6c4:4080:3f80:9ce5:6f05:3959:43f5)
[22:29:59] <Guest21> s,would I,would you
[22:30:10] <rpav> how do you want to; do that
[22:30:19] <rpav> i would not, i'd use nlohmann::json
[22:30:53] <TinoDidriksen> Same as you'd serialize any other container. Write out the size, then write out each element.
[22:30:54] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[22:31:04] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[22:31:46] <PJBoy> maybe an error code
[22:32:48] <rpav> although i guess, i have some code that writes out a lot of containers in "sortof-C++ syntax", which makes it easy to copy and paste into code
[22:33:46] <Guest21> nlohmann::json would require me to switch my std::map for something else, right?
[22:33:51] *** Quits: Inst__ (~Inst@2601:6c4:4080:3f80:6dd4:3be6:70ce:10d9) (Ping timeout: 245 seconds)
[22:34:03] <Guest21> ... a json data type, I presume?
[22:34:03] <rpav> no
[22:34:15] <rpav> it uses map internally by default even
[22:35:18] <rpav> it's also pretty trivial to overload its to_json/from_json stuff for your own types, but the obvious std types should already have overloads
[22:36:01] <Guest21> alright I'm sold, I've never used a header library before ... I suppose the updates have to be manual etc?
[22:36:01] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[22:36:06] <thad_the_man> rpav: Yes A Programming Language. I've hit it several times surfing and I just have to wonder if it is resurrecting.
[22:36:25] <rpav> Guest21: depends; there's actually a sane header-only branch or something now, you can shallow-clone and update
[22:39:51] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[22:39:56] <rpav> if you use conan, it's in there, etc .. probably you want to stick to one major revision and not auto-upgrade though, i _think_ there have been occasional breaking changes
[22:40:04] <rpav> probably even more rare these days
[22:40:14] <rpav> maybe that was entt 🤔
[22:42:24] <LiaoTao> Hmm, that's a bit questionable
[22:42:46] <LiaoTao> "The one catch is that the size of the bytecode is specified in bytes, but the bytecode pointer is a uint32_t pointer rather than a char pointer. Therefore we will need to cast the pointer with reinterpret_cast as shown below."
[22:43:10] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[22:43:13] <LiaoTao> Thanks Vulkan tutorial!
[22:44:16] *** Joins: proller (~p@2a02:6b8:b081:6405::1:8)
[22:45:07] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[22:45:26] <rpav> you can tell gamedevs use C++ when they name their company UB-isoft
[22:46:43] *** Joins: X-Scale` (~ARM@31.22.203.65)
[22:46:46] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[22:48:38] *** X-Scale` is now known as X-Scale
[22:49:33] <lumberluch0> rpav, you made me chuckle
[22:49:48] <rpav> lumberluch0: ;)
[22:50:26] *** Joins: kylese (~kylese@p5dd8b9e7.dip0.t-ipconnect.de)
[22:50:26] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[22:50:39] *** Quits: Guest21 (~Guest21@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[22:53:40] *** Quits: magla (~gelignite@55d4dc2e.access.ecotel.net) (Quit: Stay safe!)
[22:57:04] *** Joins: CaCode (~Cassius@43.251.180.10)
[22:59:10] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[22:59:28] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[23:01:36] *** Quits: CaCode (~Cassius@43.251.180.10) (Changing host)
[23:01:36] *** Joins: CaCode (~Cassius@user/cacode)
[23:01:47] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[23:02:13] *** Quits: CaCode (~Cassius@user/cacode) (Quit: Leaving)
[23:02:29] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:03:29] *** Quits: CaCode (~Cassius@43.251.180.10) (Remote host closed the connection)
[23:03:43] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:03:50] *** Quits: CaCode (~Cassius@43.251.180.10) (Remote host closed the connection)
[23:05:13] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[23:05:53] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:05:53] *** Quits: CaCode (~Cassius@43.251.180.10) (Changing host)
[23:05:53] *** Joins: CaCode (~Cassius@user/cacode)
[23:06:01] *** Quits: CaCode (~Cassius@user/cacode) (Remote host closed the connection)
[23:06:41] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:08:11] *** Joins: CaCode (~CaCode@user/cacode)
[23:17:17] <rpav> wtf so Qt just overrides LD_LIBRARY_PATH in QProcess regardless of what you set it to?
[23:17:24] <rpav> er wait no i'm dumb
[23:21:19] *** Quits: UmarJ (~username@user/umarj) (Quit: UmarJ)
[23:30:05] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[23:30:21] *** Joins: great_taste (~great_tas@190.32.235.20)
[23:31:16] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[23:31:19] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:34:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[23:40:15] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[23:45:30] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Remote host closed the connection)
[23:45:31] *** Quits: Kebianizao (~Kebianiza@188.127.161.90) (Read error: Connection reset by peer)
[23:47:55] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[23:50:25] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:51:25] *** Quits: lumberluch0 (~lumbermb@191.114.123.121) (Quit: Leaving)
[23:53:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:53:19] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:53:45] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:54:17] *** Joins: Kebianizao (~Kebianiza@188.127.161.90)
[23:55:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
