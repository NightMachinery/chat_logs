[00:02:41] *** Joins: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr)
[00:07:37] *** Quits: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:08:11] *** Joins: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr)
[00:08:31] *** Quits: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr) (Client Quit)
[00:08:49] *** Joins: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr)
[00:09:30] *** Quits: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr) (Client Quit)
[00:09:48] *** Joins: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr)
[00:15:44] *** Quits: AmR (~AmREiSa@156.199.9.4) (Quit: Konversation terminated!)
[00:16:04] *** Quits: Uswald (~leandre@2a01cb040075f900007a885a2eb10da9.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[00:28:52] *** Joins: klimnbrk (~barakvoid@2.55.3.120)
[00:36:06] *** Quits: magla (~gelignite@55d4d2c6.access.ecotel.net) (Quit: Stay safe!)
[00:51:42] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[00:53:34] *** Joins: voidbrkd (~barakvoid@2.55.134.52)
[00:53:51] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[00:55:53] *** Quits: klimnbrk (~barakvoid@2.55.3.120) (Ping timeout: 256 seconds)
[01:21:10] *** Quits: voidbrkd (~barakvoid@2.55.134.52) (Remote host closed the connection)
[01:32:17] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:40:03] *** Joins: markong (~kvirc@213.146.188.203)
[01:53:10] *** Quits: RazielZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[01:53:24] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[02:07:39] *** Quits: bobb_ (~bobb_@dslb-092-075-150-143.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:02:14] *** Joins: seninha (~seninha@user/seninha)
[03:22:22] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:22:43] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:24:46] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:34:02] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:7dea:a064:ef4b:9600) (Ping timeout: 240 seconds)
[03:38:32] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[03:48:00] *** Joins: Fairy (~Fairy@ti0004a400-0210.bb.online.no)
[04:05:36] *** Quits: DSpider (~DSpider@82.79.237.78) (Quit: Leaving)
[04:08:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 268 seconds)
[04:11:35] *** Joins: ferdna (~ferdna@user/ferdna)
[04:18:22] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[05:02:02] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:03:48] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[05:47:02] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:05:10] *** Joins: artok_ (~azo@mobile-access-bcee35-8.dhcp.inet.fi)
[06:08:17] *** Quits: artok (~azo@mobile-access-b0486a-186.dhcp.inet.fi) (Ping timeout: 268 seconds)
[07:36:32] *** Quits: jsbach (~jsbach@2a01:c22:a90b:a500:ea94:d29d:c08b:3a52) (Ping timeout: 240 seconds)
[07:44:34] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:49:11] *** Joins: jsbach (~jsbach@2a01:c22:3536:1400:650b:7ba5:f922:811c)
[08:04:26] *** Joins: ferdna (~ferdna@user/ferdna)
[08:25:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:18:33] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[10:06:58] *** Joins: gehn (~gehn@user/gehn)
[10:25:30] *** Quits: nelubit (~nelubit@user/nelubit) (Read error: Connection reset by peer)
[10:25:47] *** Joins: nelubit (~nelubit@user/nelubit)
[10:41:17] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:19:21] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: Ping timeout (120 seconds))
[11:19:33] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[11:24:14] *** Joins: Uswald (~leandre@37.35.6.200)
[11:42:50] *** Joins: Raziel (~Raziel@user/raziel)
[12:29:59] *** Joins: DSpider (~DSpider@82.79.237.97)
[13:16:27] *** Joins: seninha (~seninha@user/seninha)
[13:19:05] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:31:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:17] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[13:42:54] *** Joins: seninha (~seninha@user/seninha)
[13:45:13] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (Remote host closed the connection)
[13:45:34] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[13:51:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[13:52:22] *** Joins: seninha (~seninha@user/seninha)
[13:59:52] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:07:44] *** Quits: artok_ (~azo@mobile-access-bcee35-8.dhcp.inet.fi) (Quit: boot)
[14:32:54] *** Joins: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi)
[14:36:32] *** Quits: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca) (Ping timeout: 240 seconds)
[15:00:04] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[15:05:10] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:08:43] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[15:18:49] *** Joins: teut (~teut@2401:4900:1c68:97ee:45e1:5fb1:48ea:b97f)
[15:44:35] *** Joins: markong (~kvirc@213.146.188.203)
[15:45:15] *** Joins: seninha_ (~seninha@user/seninha)
[15:46:43] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[15:51:19] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[16:02:48] *** Joins: bobb_ (~bobb_@dslb-088-066-140-135.088.066.pools.vodafone-ip.de)
[16:13:54] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Read error: Connection reset by peer)
[16:17:30] *** Joins: seninha (~seninha@user/seninha)
[16:26:32] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 240 seconds)
[16:28:41] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[16:29:44] *** Joins: AmR (~AmREiSa@156.199.9.4)
[16:42:39] *** Joins: fanta (~fanta@ip-176-198-255-66.hsi05.unitymediagroup.de)
[16:48:46] *** Parts: fanta (~fanta@ip-176-198-255-66.hsi05.unitymediagroup.de) (Leaving)
[16:55:47] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[17:13:06] *** Joins: Tazy (~Tazmainia@192-143-38-94.ip.airmobile.co.za)
[17:44:40] *** Joins: therufuser (~therufuse@p5b02e182.dip0.t-ipconnect.de)
[17:45:23] <therufuser> Hey! What's the way to make a function be able to take both `std::vector` and `std::span`?
[17:45:58] <therufuser> I want to load data from for ex. mmapped pages and runtime allocations
[17:48:13] <osse> therufuser: perhaps make an internal function that takes a pointer and a size, and then call that
[17:48:25] <osse> both vector and span have .data() and .size() 
[17:50:19] <therufuser> osse: And then just overload the public function for both types?
[17:50:41] <osse> You can do that, or make a template
[17:51:46] <therufuser> Okay, thanks :) I will look into it.
[17:52:23] <therufuser> I just thought maybe there was a common ancestor I could use instead
[17:59:13] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[17:59:20] <osse> therufuser: something like this: http://sprunge.us/Id2kwj
[17:59:36] <osse> it would be nice to limit the template so that it only works for containers of chars, but I don't know how to do that
[18:00:17] <osse> not sure if that's actually needed; you get a compile error
[18:05:48] <therufuser> osse: That seems to fit the bill for the beginning. Thanks again! :)
[18:06:03] <osse> de nada
[18:06:05] <therufuser> The compiler-errors are a bit non-obvious though :/
[18:06:14] <osse> which ones?
[18:07:17] <therufuser> I checked to see what happens if you throw a free-standing `char[]` at `do_stuff()` and it complains about char-arrays not having the necessary member-functions
[18:08:57] <osse> not sure if it can be clearer than that
[18:10:22] <osse> because the problem is non-obvious in the first place :p
[18:12:54] <osse> maybe it would be better written as calling std::begin() and std::end() on the container?
[18:17:16] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:19:12] <therufuser> Using iterators I could at least drop the internal-function (which would have been possible before anyway, I guess)
[18:20:51] <therufuser> There's this article about duck-typing but that also seems rather involved :D http://p-nand-q.com/programming/cplusplus/duck_typing_and_templates.html
[18:20:52] <osse> anyway, there is no common *ancestor* (at least in the OOP sense), but they have things in common, namely data(), size(), begin() and end(). 
[19:30:46] *** Quits: Uswald (~leandre@37.35.6.200) (Quit: WeeChat 2.8)
[19:36:59] <Alipha> therufuser: osse: yeah, you could have a templated wrapper function which just forwards to a function that takes iterators.
[19:38:13] <Alipha> which is basically what osse already pastebin'd, but using iterators instead of const char* and size_t
[19:46:57] <therufuser> Alipha: Is the wrapper even necessary? https://pastebin.com/QDTs9LPc
[19:48:07] <Alipha> i suppose not. depending upon the use case, it may be nice to be able to "do_stuff" with either the whole container or a pair of iterators (ie, a subrange)
[19:48:58] <Alipha> std::span lets you provide a subrange for a contiguous container. though not a non-contiguous one. maybe calling do_stuff with a non-contiguous container doesn't make sense
[19:50:01] <Alipha> c++ programmers are just used to working with iterators. so not providing an iterator interface is a little odd
[19:55:31] <therufuser> Alipha: Subranges can indeed be useful. Using iterators for the interface seems okay to me as well since it also kinda forces you to use STL-stuff instead of raw pointers/arrays
[19:57:47] <Alipha> therufuser: indeed. but up to you. your example is perfectly fine. though i'd use std::begin(c) and std::end(c) instead of c.begin() and c.end() because std::begin/std::end will work with raw arrays, whereas the latter don't.
[19:57:58] <Alipha> well
[19:58:24] <osse> also the Container& could be const (I take the blame for that)
[19:58:27] <Alipha> as long as you pass a reference to an array to do_stuff, and not a pointer
[20:01:25] *** Joins: seninha (~seninha@user/seninha)
[20:04:26] <therufuser> osse: so `do_stuff(const Contaier& c)`?
[20:05:59] <therufuser> Alipha: Also nice about std::end/std::begin. I thought it would me more modern to enforce _not_ using raw-arrays though?
[20:07:04] <therufuser> But since it only works for references I guess the raw arrays I could pass in would have to be allocated at compile-time?
[20:08:59] <osse> therufuser: yes
[20:11:24] *** Quits: teut (~teut@2401:4900:1c68:97ee:45e1:5fb1:48ea:b97f) (Quit: Client closed)
[20:11:59] <therufuser> Well, thanks a bunch :) C++ really has gotten a long way since the last time I used it!
[20:12:18] <therufuser> s/gotten/come/
[20:12:53] <therufuser> Maybe just my understanding of it...
[20:16:11] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:19:00] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:19:20] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:954f:f10a:7686:472a)
[20:19:20] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:954f:f10a:7686:472a) (Changing host)
[20:19:20] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:19:22] *** Joins: seninha (~seninha@user/seninha)
[20:21:36] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[20:41:17] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[20:54:31] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 245 seconds)
[20:54:48] *** Joins: magla (~gelignite@55d4ee32.access.ecotel.net)
[21:04:23] *** Quits: bobb_ (~bobb_@dslb-088-066-140-135.088.066.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:54:08] *** Quits: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca) (Remote host closed the connection)
[22:06:13] *** Quits: geordi (~geordi@tinodidriksen.com) (Quit: https://github.com/eelis/geordi)
[22:06:32] *** Joins: geordi (~geordi@tinodidriksen.com)
[22:27:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:41:32] *** Joins: CalamityBlue (~CalamityB@2603-8000-d907-cec8-c0c1-3f9b-2cdb-8c05.res6.spectrum.com)
[22:50:35] *** Joins: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr)
[22:51:14] *** Quits: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr) (Client Quit)
[23:49:23] *** Joins: meator (~meator@user/meator)
