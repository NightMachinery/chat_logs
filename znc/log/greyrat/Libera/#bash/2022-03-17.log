[00:00:15] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[00:00:40] *** Joins: OKButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk)
[00:01:17] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[00:01:23] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:01:49] *** Quits: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[00:05:14] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:06:03] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[00:09:19] *** Joins: lavaball (felix@31.204.155.215)
[00:13:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:13:58] *** Quits: OKButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[00:16:16] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:17:18] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[00:17:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[00:18:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:21:08] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:21:19] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[00:21:35] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:23:00] *** Joins: OKButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk)
[00:29:30] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:29:46] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[00:31:53] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[00:33:46] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:34:14] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[00:41:31] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[00:42:18] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[00:43:35] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[00:46:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[00:49:24] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[00:52:54] *** Quits: rufito (~phil@186-79-3-19.baf.movistar.cl) (Remote host closed the connection)
[00:54:42] *** Quits: dsrt^ (~dsrt@65.240.140.18) (Ping timeout: 252 seconds)
[00:54:50] *** Joins: seninha (~chatzilla@user/seninha)
[00:55:07] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[00:57:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:57:40] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[00:59:00] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[00:59:03] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:00:02] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[01:01:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:02:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[01:03:00] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[01:04:42] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[01:04:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:05:29] *** Joins: unop (~unop@195.91.20.32)
[01:05:30] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:06:53] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[01:07:15] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:10:36] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[01:12:01] *** Joins: dsrt^ (~dsrt@65.240.140.18)
[01:13:15] *** Quits: martinus__ (~martin@135.26.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:13:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 252 seconds)
[01:14:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Read error: Connection reset by peer)
[01:17:52] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:18:32] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[01:19:21] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:20:57] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:21:55] *** Joins: JanC (~janc@user/janc)
[01:24:01] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 256 seconds)
[01:29:02] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[01:30:27] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 252 seconds)
[01:31:00] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[01:31:30] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 250 seconds)
[01:31:48] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[01:34:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:35:17] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Client Quit)
[01:35:45] *** Joins: mowcat (~mowcat@host86-134-139-152.range86-134.btcentralplus.com)
[01:36:02] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:36:27] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:d01b:e0dd:63d8:cab6)
[01:36:33] *** Joins: rcernin (~rcernin@101.189.129.123)
[01:37:02] *** Joins: PeGaSuS_ (BlackHole@user/pegasus)
[01:38:24] *** Quits: PeGaSuS_ (BlackHole@user/pegasus) (Remote host closed the connection)
[01:39:27] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[01:39:43] <welder> how to benchmark bash itself?
[01:40:09] <welder> i've got two versions built with different compiler and optimization flags, i would like to see which one is more performant. How to do that?
[01:40:25] <greycat> # help time | head -n2
[01:40:26] <shbot> greycat: time: time [-p] pipeline
[01:40:26] <shbot> greycat:     Report time consumed by pipeline's execution.
[01:40:58] *** Quits: magla (~gelignite@d5362120.access.ecotel.net) (Quit: Stay safe!)
[01:45:56] *** Joins: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net)
[01:46:16] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 268 seconds)
[01:46:22] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[01:46:58] <hsv_> Is it reasonable to use $0 like this? - printf >&2 'Usage: %s ...\n' "${0##*/}"
[01:47:17] *** Joins: wurstwasser (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d)
[01:47:37] <greycat> Yeah, some people like that.  Or, you could just make up your mind what your program's name is, and use that in the script.
[01:47:37] <Earnest> no
[01:47:46] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[01:48:00] <Earnest> https://flak.tedunangst.com/post/a-prog-by-any-other-name
[01:48:07] <Earnest> It's such a ridiculous abstraction
[01:48:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[01:49:28] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[01:51:26] *** Quits: mowcat (~mowcat@host86-134-139-152.range86-134.btcentralplus.com) (Remote host closed the connection)
[01:51:28] *** Joins: loganlee (~Thunderbi@user/loganlee)
[01:52:20] <greycat> "But using progname in usage was the prevailing style, so I copied it."  -- Computing history in a nutshell.
[01:52:38] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[01:52:57] <phy1729> "It’s even possible on some systems for argv[0] to be NULL."  heh
[01:53:19] <xmb> ( exec -a "" sleep 1 & ps p $! )
[01:53:22] <xmb> # ( exec -a "" sleep 1 & ps p $! )
[01:53:23] <shbot> xmb:  PID TTY      STAT   TIME COMMAND
[01:53:23] <shbot> xmb:   52 ttyS0    S+     0:00  1
[01:55:02] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[01:55:12] <greycat> !learn progname https://flak.tedunangst.com/post/a-prog-by-any-other-name
[01:55:12] <greybot> OK, greycat
[01:55:45] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[01:58:59] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[01:58:59] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) ()
[01:59:06] <hsv_> Bash could do some introspection and have a way to know if the script was run from an interactive shell and what it was called as.
[01:59:35] <xmb> you could implent it bash *
[01:59:43] <greycat> ... what do you think $0 is?
[01:59:46] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:00:19] <hsv_> s/what it was called as/what the user typed/
[02:00:30] <greycat> ... what do you think $0 is?
[02:00:52] <xmb> $0 for exec -a affected, $BASH_SOURCE for pure, or so
[02:01:14] *** Joins: ChmEarl (~chmearl@user/chmearl)
[02:01:23] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[02:02:05] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:02:48] <greycat> # exec -a hamster bash -c 'echo "\$0 is $0"'
[02:02:48] <shbot> greycat: $0 is hamster
[02:02:49] <shbot> greycat: (shell exited with 0)
[02:02:53] *** Joins: superboot (~agentgasm@user/superboot)
[02:04:17] <xmb> # printf $'#!/bin/bash\necho $BASH_SOURCE' >foo ; chmod +x foo; exec -a nofoo ./foo
[02:04:18] <shbot> xmb: /root/foo
[02:04:18] <shbot> xmb: (shell exited with 0)
[02:05:16] <greycat> we're driving into FAQ 29 territory at this point
[02:05:18] *** Joins: wurstwasser_2 (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d)
[02:05:26] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[02:05:27] <greycat> err, not 29... what is it
[02:05:29] <greycat> !faq location
[02:05:29] <greybot> https://mywiki.wooledge.org/BashFAQ/028 -- How do I determine the location of my script?  I want to read some config files from the same place.
[02:05:31] <greycat> 28
[02:05:55] *** Quits: wurstwasser (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d) (Remote host closed the connection)
[02:06:38] *** Quits: kj (~kj@kj.aerisnetwork.net) (Client Quit)
[02:07:10] <xmb> [ what the 100% bad practices there ... ]
[02:07:17] <greycat> # printf '#!/bin/bash\necho "$BASH_SOURCE"\n' > foo; chmod +x foo; ln -s "$PWD/foo" /usr/bin/myalias; myalias
[02:07:18] <shbot> greycat: /usr/bin/myalias
[02:07:38] <xmb> its up to code to handle symlinks
[02:07:47] <xmb> no need to give up
[02:08:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:08:03] <greycat> Or... the program could know what its own name is supposed to be, and print that name, not the name the user used.
[02:08:06] <quesker> why does this print foo      echo foo >&2 2>/dev/null
[02:08:18] <greycat> redirections are processed left to right
[02:08:22] <quesker> ok thanks
[02:08:43] <greycat> you told it to make stdout point to the terminal, and then to make stderr point to /dev/null, and then you wrote to stdout, which is pointing to the terminal
[02:09:02] <quesker> gotcha
[02:09:55] <greycat> !faq 2>&1
[02:09:55] <greybot> https://mywiki.wooledge.org/BashFAQ/055 -- Tell me all about 2>&1 -- what's the difference between 2>&1 >foo and >foo 2>&1, and when do I use which?
[02:11:43] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[02:12:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[02:12:52] *** Joins: CancelButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk)
[02:14:19] *** Quits: CancelButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk) (Client Quit)
[02:15:21] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[02:15:29] *** Joins: zzbot (~zzbot@user/zzbot)
[02:15:36] <hsv_> ... what do you think $0 is? -- eh, huh?
[02:15:55] <greycat> You kept asking for things, and those things are currently given to you by expanding $0.
[02:16:37] <hsv_> so you can determine what the user typed from $0 ?
[02:16:44] <greycat> Yes.  That's the whole point of it.
[02:17:00] <greycat> Did you miss all the demonstrations via the bot?
[02:17:43] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 268 seconds)
[02:17:51] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Ping timeout: 256 seconds)
[02:20:17] <hsv_> # printf $'#!/bin/bash\necho \$0=$0' >/tmp/foo ; chmod +x /tmp/foo; /tmp/foo
[02:20:18] <shbot> hsv_: $0=/tmp/foo
[02:20:21] <hsv_> # printf $'#!/bin/bash\necho \$0=$0' >/tmp/foo ; chmod +x /tmp/foo; PATH=/tmp; foo
[02:20:22] <shbot> hsv_: $0=/tmp/foo
[02:21:47] <yitz> cat /proc/$$/cmdline
[02:22:18] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:22:26] <greycat> $0 gives you the name of the command as passed along by the parent process.  Which in this case is a shell.  The shell looks for the command in PATH, and calls /tmp/foo on behalf of the user.  If you want to know "the user typed foo not /tmp/foo", well, sorry, that information is not passed along.  You cannot determine that.
[02:23:00] <greycat> Likewise, if the user has alias bar=foo and types bar instead of foo, you are not told that.  That's private information known only to the user's shell.
[02:23:14] <greycat> !wayttd
[02:23:14] <greybot> What Are You Trying To Do?
[02:23:20] <hsv_> right, so what i said.
[02:23:45] <greycat> But if there are three different symlink or hard links to your program, and the user types one of them, you get that.
[02:23:49] <hsv_> i was trying to answer your question.
[02:23:55] <greycat> You know that the user typed fgrep, not egrep or grep.
[02:24:16] <greycat> Or at least the user *ran* fgrep, even if they typed humpledink.
[02:24:21] <yitz> alias fgrep=grep -F    :D
[02:24:34] * yitz hides
[02:24:44] <greycat> still trying to figure out the goal
[02:25:10] <hsv_> I was just musing... then you asked.
[02:26:28] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:28:04] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[02:28:32] <at_work> what just happened here?
[02:28:55] <yitz> at_work: that's the ever present and unknowable question
[02:29:34] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[02:31:22] *** Joins: n8chan (~nate@98.45.167.61)
[02:34:32] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 240 seconds)
[02:34:48] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:35:15] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[02:35:29] *** Joins: fatal (~0x00@user/fatal)
[02:36:11] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:36:27] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 252 seconds)
[02:36:28] <Earnest> People mistook a macro-via-backdoor with abstraction
[02:36:34] *** Quits: nyex (~Thunderbi@177.84.107.26) (Quit: nyex)
[02:37:24] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[02:39:05] *** Joins: Betal (~Betal@user/betal)
[02:39:54] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:40:05] <at_work> This seems oddly related to my hatred of stupiddo and friends if they are as stupid as sudo
[02:40:39] <at_work> shitty work implementation of stupiddo config
[02:41:25] <at_work> allows one to symlink to the stupiddo binary in local directory
[02:41:42] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:41:44] <at_work> smlink to the rejected command with some other name
[02:41:54] <at_work> same was renaming the symlink to stupiddo
[02:42:16] <at_work> ./mystupiddo ./mysu -
[02:42:22] <at_work> and boom root shell
[02:43:11] <at_work> this from the "read only" user shell account
[02:43:37] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 240 seconds)
[02:44:34] <at_work> this task is probably part of some remedial 067 hack class somewhere
[02:45:15] *** Joins: nahcetan (~nate@98.45.167.61)
[02:46:51] *** Joins: blei (~blei@user/blei)
[02:47:32] *** Quits: n8chan (~nate@98.45.167.61) (Ping timeout: 240 seconds)
[02:48:38] *** Quits: clime (~clime@37-48-56-199.nat.epc.tmcz.cz) (Ping timeout: 250 seconds)
[02:50:09] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[02:50:12] *** Quits: nahcetan (~nate@98.45.167.61) (Ping timeout: 252 seconds)
[02:51:14] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[02:51:46] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:54:36] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[02:54:41] *** Joins: rcernin (~rcernin@101.189.129.123)
[02:54:57] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 240 seconds)
[02:55:04] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[02:57:16] *** Joins: Masterphi (~Masterphi@user/masterphi)
[02:57:16] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[02:58:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:02:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:03:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:03:45] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[03:04:09] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:05:11] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:07:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[03:09:35] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:10:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:10:15] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[03:11:07] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 256 seconds)
[03:11:15] *** Joins: ferdna (~ferdna@user/ferdna)
[03:14:24] <Earnest> ENV='foo bar baz'; inenv() { case " $ENV " in *" $1 "*) is this reasonable?; esac; }
[03:14:55] <Earnest> I think it is
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:02] <greycat> ENV is a reserved variable in ksh
[03:15:14] <Earnest> Only used to indicate it's environment
[03:15:22] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:15:23] <Earnest> rather than possibly array
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:42] <Earnest> (Although posix sh, so no arrays anyway, but also no $@)
[03:15:45] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[03:15:46] <greycat> you're trying to export a list through the environment by turning it into a space-separated string
[03:15:55] <Earnest> A bit like WINEDEBUG and such
[03:15:55] <greycat> you already know how this fails
[03:16:01] <Earnest> Yeah
[03:16:40] <Earnest> I was just being thrown by the " " spaces looking weird when it's spaces and not some DSV like : for PATH
[03:16:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:17:18] <Earnest> For certain the values cannot contain spaces so using this guarantee to allow doing it like this
[03:18:15] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:46] <ormaaj> I still have a thing that packages up the entire environment into a serialized string that's kind of important. It passes environment updates from tmux back into the shell as an on-attach hook. There's no other solution.
[03:21:31] <Earnest> That's what serialisation is for
[03:21:31] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[03:21:59] <ormaaj> Looping through each and encoding them properly. It's an airtight implementation, just ugly.
[03:22:02] <Earnest> Every time we use | an implicit serialisation and deserialisation is taking place
[03:26:11] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 256 seconds)
[03:26:24] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cdda:3757:8d29:77bf)
[03:26:24] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cdda:3757:8d29:77bf) (Changing host)
[03:26:24] *** Joins: skapata (~Skapata@user/skapata)
[03:28:03] <ormaaj> actually it's more complicated than that. A real no user interaction hook wold need each pane to additionally have a USR trap or something similar which I haven't bothered with. The partial solution just updates tmux's "global" variables so that they propagate to new shells.
[03:30:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:30:27] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:31:29] <ormaaj> Did I mention it uses compgen? Yeah fugly.
[03:31:50] <Earnest> compgen is nice for doing partial PATH resolution though
[03:32:26] <Earnest> Better than looping over PATH directories with globs
[03:36:35] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 240 seconds)
[03:37:30] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[03:38:00] *** Joins: fatal (~0x00@user/fatal)
[03:39:56] * Earnest changed it to , separated
[03:39:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:39:59] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:01] *** Quits: Schrostfutz (~Schrostfu@55d4dc0f.access.ecotel.net) (Ping timeout: 256 seconds)
[03:40:19] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:42:26] <ormaaj> One might wonder why the custom solution when tmux does update its env on attach automatically. The answer is "session groups", which are very cool but a little non-obvious why they even exist. If you're doing a remote attach you don't want to just attach. You want to attach to a new session after ssh-ing for instance with `tmux new -t 0`. The key is each session gets an independent set of environment variables but I needed a way to shuffle environment sets
[03:42:26] <ormaaj> around between sessions on demand and propagate those back up into a shell when needed.
[03:42:38] *** Joins: sa0 (~sa0sin@88.120.82.205)
[03:42:50] *** Quits: OKButton (~OKButton@82-69-54-194.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[03:44:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[03:45:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:45:37] *** Quits: CoreISP (~LvH@simplemachines/serverteam/CoreISP) (Ping timeout: 240 seconds)
[03:47:24] *** Quits: sa0 (~sa0sin@88.120.82.205) (Ping timeout: 252 seconds)
[03:48:01] *** Joins: mike18_ (~geri@216.200.232.252)
[03:48:05] <mike18_> hi
[03:48:12] <ormaaj> the multi session thing is where things always break down. Of course I did all this before systemd because defacto and intented to integrate with consolekit
[03:48:17] <mike18_> how can i get the latest pid from that command? $(eval pid=$(shell sh -c "docker ps -aqf \"name=$(name)\""))
[03:48:26] <ormaaj> s/because/became/
[03:48:54] <ormaaj> x=!?
[03:48:56] <ormaaj> x=$!
[03:50:01] <ormaaj> 3 layers of eval'd comsub nesting?
[03:51:13] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Remote host closed the connection)
[03:51:32] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[03:51:43] <ormaaj> Like I'm assuming you have the pid in pid already unless you're looking for the pid of the comsub itself.
[03:51:53] <larryv> i assume this is out of a GNUmakefile. why can't you use "shell" to run the docker command directly
[03:55:04] <ormaaj> more context needed.
[03:57:05] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:d01b:e0dd:63d8:cab6) (Remote host closed the connection)
[03:57:27] <ormaaj> yep didn't notice the "shell"
[03:58:44] <mike18_> ormaaj: i run docker run with -d ... to start a daemon
[03:58:46] *** Joins: zeden (~zeden@user/zeden)
[03:58:53] <mike18_> i need to get the pid of the started docker
[03:59:06] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:59:16] <mike18_> docker run and docker getpid is in a makefile
[03:59:19] *** Joins: wurstwasser_3 (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d)
[03:59:37] *** Quits: wurstwasser_2 (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d) (Remote host closed the connection)
[04:00:02] *** Quits: sinaowolabi_ (~SinaOwola@160.152.135.2) (Ping timeout: 252 seconds)
[04:01:04] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[04:02:01] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[04:05:45] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[04:07:12] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 252 seconds)
[04:09:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[04:14:05] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[04:15:20] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.4)
[04:15:21] *** Joins: loganlee (~Thunderbi@user/loganlee)
[04:18:34] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:18:51] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[04:19:18] *** Joins: bash-lib_ (~bash-libe@56.sub-174-212-229.myvzw.com)
[04:20:36] *** Quits: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[04:22:11] <cliluw> Is Bash whitespace agnostic? No, right?
[04:22:37] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 240 seconds)
[04:22:49] <llua> in what way
[04:23:32] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 240 seconds)
[04:24:02] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[04:24:22] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:300c:150a:7306:e306)
[04:24:56] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[04:25:30] <cliluw> Aside from strings, is there any time when I cannot remove a space character and still have a valid and correct Bash script?
[04:25:37] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (Ping timeout: 240 seconds)
[04:26:02] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[04:26:31] <queue-> idk generally rule of thumb is just put a space between every ( ) and every { }
[04:26:43] <queue-> since i work in 8 diff languages i use whats universally liked
[04:27:07] <queue-> php wants if ($function != $1 )
[04:27:26] *** Joins: tangy (~tangy@user/tangy)
[04:27:27] <queue-> generally all languages dont mind ( $function != $1 )
[04:27:55] <llua> cliluw: correct
[04:28:04] <djph> cliluw: what do you mean "remove spaces" ?
[04:28:11] <queue-> in his code
[04:28:16] <queue-> like when brackets open
[04:28:17] <queue-> and close
[04:28:18] *** Joins: zzbot (~zzbot@user/zzbot)
[04:28:24] <queue-> (), "", '',
[04:28:25] <queue-> etc
[04:28:32] <djph> well, you kinda need spaces between commands and such ...
[04:28:33] <queue-> (im pretty sure this is his question)
[04:28:40] <queue-> not always, not every language
[04:28:41] <queue-> in bash sure
[04:28:55] *** Quits: wonko-the-sane (~user@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[04:28:56] <queue-> but some langs u can just ($function != $1)
[04:28:58] <queue-> no spaces needed
[04:29:06] <queue-> thats what hes asking
[04:29:10] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 250 seconds)
[04:29:22] <djph> except in that example the parenthesis are not "commands"
[04:29:41] <queue-> i understand this as im a universal coder i dont care about syntax itc right now since we are speaking on spaces
[04:29:42] <cliluw> djph: I mean remove spaces like a JavaScript minifier would do.
[04:29:43] <queue-> tyvm
[04:29:50] <queue-> same idea with []
[04:30:15] <queue-> cliluw, listen to wut im tellin u
[04:30:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:30:17] <queue-> its not like js
[04:30:17] <queue-> lol
[04:30:27] <queue-> u cant just combine all the code w/ no whitespace
[04:30:44] <queue-> like javascript, theres not really any langs u can do that in unless you just regexes the entire thing
[04:31:12] <cliluw> For your example, I'd go further and do ($function!=$1)
[04:31:19] <cliluw> remove the spaces around the equals sign
[04:31:20] *** Quits: mike18_ (~geri@216.200.232.252) (Ping timeout: 250 seconds)
[04:31:29] <djph> spaces matter in bash.
[04:31:31] <queue-> based on most coding languages
[04:31:33] <queue-> that would not work
[04:31:40] <queue-> i guess in bash its fine
[04:31:44] <djph> it's not
[04:31:59] <queue-> ok so my original thought was right
[04:32:00] <queue-> lol
[04:32:06] <queue-> i was on the right path by telling u to just add the space
[04:32:07] <queue-> ;)
[04:32:18] <queue-> coming from someone who swaps between 8-10 diff languages
[04:32:23] <djph> e.g. [ some test ] <-- works.
[04:32:30] <queue-> ranging from C, C++, bash, python, php, blah blah blah blah
[04:32:32] <djph> [sometest] <-- does not
[04:32:42] <queue-> i just add the space in every lang
[04:32:51] <queue-> if you plan on scaling up and learning new langs :)
[04:32:51] <djph> [ sometest] <-- also does not
[04:33:03] <queue-> ya but in php
[04:33:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[04:33:08] <queue-> (sometimes ) <---works
[04:33:10] <queue-> so like
[04:33:19] *** Quits: invra (~invra@mail.aletheianature.es) (Quit: WeeChat 3.0)
[04:33:21] <queue-> use whats universally liked and just add the 1 space.
[04:33:24] <djph> queue-: look at the channel name.
[04:33:41] <queue-> look at the people that may be beyond u and are helping with problems that range further than one specified nature
[04:34:00] <queue-> what if he wants to scale up and learn new languages?
[04:34:02] *** Quits: wurstwasser_3 (~frank.hol@2001:a61:3553:801:1b76:edc8:3b34:1b0d) (Ping timeout: 240 seconds)
[04:34:08] <djph> queue-: ... this channel is focused on the topic "bash".  What works in PHP doesn't MATTER in here.
[04:34:22] <queue-> i dont even care about php, im talking about EVERYTHING
[04:34:29] <queue-> from the get go i told him to just go ahead and add the space
[04:34:38] <queue-> you didnt even know what he was asking for
[04:34:45] <queue-> now you're trying to tell me something? please man
[04:34:50] *** Joins: sinaowolabi_ (~SinaOwola@160.152.135.2)
[04:34:52] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:35:00] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[04:35:05] <djph> 20:56 < cliluw> Aside from strings, is there any time when I cannot remove a space character and still have a valid and correct Bash script? <--- it's a pretty clear question.
[04:35:16] <queue-> is that why you had a lot of questions about the question?
[04:35:22] <queue-> that was very clear to me as well.
[04:35:32] <queue-> all your questions to define a perfectly phrased question
[04:35:43] <queue-> very nice work to provide me information that you had to ask about
[04:35:50] <queue-> which i knew from the first line...
[04:36:17] <djph> I haven't had any questions for you, queue- .
[04:36:31] <queue-> if his question was very clear, why did you have more questions about the question
[04:36:40] <queue-> <----very confused atm
[04:36:56] <queue-> why, if you KNEW what the question is, would you ask him for a more defined question?
[04:37:01] <queue-> dude go get a life
[04:37:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:37:05] <djph> queue-: I asked for clarification if he meant like Python's indentation requirements.
[04:37:26] <queue-> this is called autism
[04:37:27] <queue-> i don't have it
[04:37:30] <queue-> thanks
[04:37:34] <llua> so like, how is everyone doing tonight?
[04:37:47] <cliluw> djph: Oo, I am curious about that too. Does indentation matter? I've noticed that when I enter in a multiline Bash script that sometimes Bash replaces the newlines with semicolons.
[04:38:19] <queue-> are you seriously
[04:38:22] <queue-> asking google questions rn
[04:38:23] <queue-> sec,
[04:38:25] <djph> cliluw: only for the sake of readability.  The interpreter doesn't enforce anything on you in that regard.
[04:38:41] <queue-> https://sh.awknode.com/UUh1iL/screenshot.png
[04:38:44] <queue-> yall are stupid, have fun
[04:39:16] <djph> llua: apparently I touched a nerve with that guy.  So ... amused, mostly.
[04:39:33] <queue-> no im angry at how irc has turned into pure autism
[04:39:37] <queue-> we used to be all smart nerds itc
[04:39:40] <queue-> all cool people too
[04:39:49] <queue-> now its a bunch of people that wanna slap the ban hammer, and cop out on being bitches
[04:39:58] <queue-> the internet is just sad now bro
[04:41:12] <djph> llua: how about you?
[04:41:58] <llua> annoyed by puppet at the moment, but overall ok
[04:41:59] <cliluw> queue-: I don't think that Google recommended answer is correct. It has 0 upvotes on StackOverflow and indentation matters for <<- heredocs.
[04:42:24] <queue-> but look at the responses, stackoverflow is for everyones response
[04:42:32] <queue-> have you honestly never used stackoverflow
[04:42:35] <queue-> the answer is RIGHT there
[04:42:39] <queue-> its 100% accurate
[04:42:57] <djph> llua: bummer on puppet.  good deal on the overall tho
[04:43:22] <queue-> look, imagine this
[04:43:30] <queue-> imagine typing that out and looking at even the 2nd result!!!
[04:43:39] <queue-> you get the same answer, omg!!! google is amazing, have u heard of it?
[04:43:55] <queue-> its this new thing where you can ask your very basic questions
[04:46:04] <djph> cliluw: Have you had the chance to peruse greycat's website?
[04:47:16] <cliluw> djph: I've only read the FAQ on that site and nothing else, admittedly.
[04:47:35] <blei> ode to realpath, oy ye, wons't though guide my way? shining light on darkness found, diff'd with common ground. here's to haste, with no adieu, paste! paste! encore, encore, but spare not our love, send all to dev, all to null, let there be no waste. for all shall shine, entropy mine, as dev random seeds our love again, and ld marries us to fate.
[04:50:50] <queue-> its easier to ld_preload than it is to hook the lkm
[04:51:28] <queue-> if vmalloc() is your friend, i don't want to be him
[04:52:18] *** Quits: aaro (aaro@user/aaro) (Ping timeout: 252 seconds)
[04:52:22] <queue-> a little kmem() will get the job done, as long as you can unix bown with a sterile pun
[04:53:21] <queue-> overwrite the buffer with a swapsg tucker, then DNAT, MASQERUADE and SNAT cause im a bad motherfucker :D
[04:54:00] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[04:54:27] <djph> cliluw: definitely helps put things in place ... and a whole lot less conflicting (or outright bad) stuff
[04:54:44] <cliluw> djph: Cool, thanks for the rec.
[04:54:50] <queue-> most vague statement of 2022 right there
[04:56:52] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[04:58:36] *** Joins: luckiswithme (~luckiswit@149.167.161.204)
[04:58:41] *** Joins: xx (~xx@user/xx)
[05:03:12] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[05:05:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:05:41] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[05:07:10] *** Quits: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu) (Remote host closed the connection)
[05:09:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:10:20] *** Quits: knstn (~knstn@ppp-94-66-57-121.home.otenet.gr) (Quit: leaving)
[05:10:35] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[05:11:32] *** Joins: kurahaupo (~kurahaupo@pa49-182-116-249.pa.qld.optusnet.com.au)
[05:12:39] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 252 seconds)
[05:16:30] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 252 seconds)
[05:17:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:22:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:24:15] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:55c1:8dae:a73a:de83)
[05:26:22] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[05:26:32] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:27:10] *** Quits: drewlander (~drewlande@74.196.20.3) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[05:27:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:28:08] *** Joins: drewlander (~drewlande@74.196.20.3)
[05:28:20] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[05:28:25] *** Quits: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[05:28:36] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[05:28:42] *** Joins: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[05:28:59] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:f427:a52:115a:e946:8de6)
[05:30:02] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:55c1:8dae:a73a:de83) (Ping timeout: 240 seconds)
[05:31:39] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[05:32:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:34:21] *** Joins: aaro (aaro@user/aaro)
[05:38:12] *** Joins: r0c1n4nt3_ (~r0c1n4nt3@177.96.8.114)
[05:38:30] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[05:39:23] *** Joins: vysn (~vysn@user/vysn)
[05:41:12] *** Quits: r0c1n4nt3_ (~r0c1n4nt3@177.96.8.114) (Quit: Leaving)
[05:43:18] *** Joins: BUSY (~BUSY@user/busy)
[05:44:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:46:04] *** Quits: CoreISP (~LvH@simplemachines/serverteam/CoreISP) (Quit: ZNC - https://znc.in)
[05:48:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:50:25] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[05:52:37] *** Joins: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66)
[05:52:56] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Read error: Connection reset by peer)
[05:56:29] *** Joins: uuidNuni1 (~weechat@193.123.227.17)
[05:58:02] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[05:58:48] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[06:03:59] *** Joins: docmax_ (~docmax@dynamic-077-010-192-125.77.10.pool.telefonica.de)
[06:05:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:05:08] *** Joins: crashrep (~crashrep@user/crashrep)
[06:05:48] *** Quits: docmax (~docmax@dynamic-077-001-195-069.77.1.pool.telefonica.de) (Ping timeout: 240 seconds)
[06:07:11] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Remote host closed the connection)
[06:09:20] *** Joins: Inline__ (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de)
[06:09:36] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:f427:a52:115a:e946:8de6) (Quit: Leaving)
[06:09:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[06:10:07] *** Joins: maryo (~Maryo@user/maryo)
[06:12:13] *** Quits: Inline (~Inline@p200300cd470a26002e72b25ea400e9f0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:13:07] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[06:16:26] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[06:17:18] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[06:17:32] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 240 seconds)
[06:17:48] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:20:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[06:21:39] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[06:23:52] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[06:25:18] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 250 seconds)
[06:25:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:28:03] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[06:29:04] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae)
[06:30:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:30:54] *** Joins: Strykar (~wakka@signald/Strykar)
[06:31:20] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Quit: Leaving)
[06:31:42] *** Joins: noobaroo (~noobaroo@user/noobaroo)
[06:32:01] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:285:c627:ddf:58da) (Quit: dclxvi)
[06:32:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:36:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:37:04] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[06:43:06] *** Joins: Guest3302 (~arc@2601:586:8100:bc30:f0b5:6a0f:f4ae:e63b)
[06:44:44] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[06:45:02] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 240 seconds)
[06:46:16] *** Joins: wonko-the-sane (~user@gateway/tor-sasl/wonko-the-sane)
[06:46:56] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[06:47:08] *** Joins: joo-_ (~joo-_@80-62-116-113-mobile.dk.customer.tdc.net)
[06:47:08] *** Quits: joo-_ (~joo-_@80-62-116-113-mobile.dk.customer.tdc.net) (Changing host)
[06:47:08] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[06:48:35] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 240 seconds)
[06:51:26] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:51:39] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae) (Ping timeout: 252 seconds)
[06:52:12] *** Joins: nunggu (~q@user/nunggu)
[06:52:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 240 seconds)
[06:55:10] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:56:26] *** Joins: fstd_ (~fstd@xdsl-78-35-89-30.nc.de)
[06:59:24] *** Quits: wonko-the-sane (~user@gateway/tor-sasl/wonko-the-sane) (Quit: Changing server)
[06:59:54] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Ping timeout: 260 seconds)
[07:00:32] *** Quits: jamiejackson (~jamiejack@131.106.140.145) (Quit: Connection closed)
[07:04:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:04:52] *** Quits: A|an (~Alan@173.216.48.26) (Quit: A|an)
[07:07:23] *** Joins: millido (~millido@84.210.150.128)
[07:14:47] *** Quits: jos1 (~jos3@dyndsl-091-248-054-244.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:16:13] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 240 seconds)
[07:19:27] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[07:19:40] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:19:53] *** Joins: crashrep (~crashrep@user/crashrep)
[07:19:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[07:21:31] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[07:24:09] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[07:26:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:27:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[07:27:16] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:27:42] *** Joins: jos1 (~jos3@dyndsl-095-033-174-126.ewe-ip-backbone.de)
[07:28:28] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[07:29:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:30:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:32:31] *** Joins: stoiclunchbox (~stoiclunc@user/stoiclunchbox)
[07:33:18] *** Quits: stoiclunchbox (~stoiclunc@user/stoiclunchbox) (Client Quit)
[07:34:03] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:36:06] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:38:03] *** Quits: luckiswithme (~luckiswit@149.167.161.204) (Remote host closed the connection)
[07:38:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:39:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:49] *** Joins: luckiswithme (~luckiswit@149.167.161.204)
[07:41:33] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[07:41:42] *** Quits: almostdvs (~almostdvs@074-135-071-059.res.spectrum.com) (Ping timeout: 252 seconds)
[07:42:36] *** Quits: din0 (~dino@user/din0) (Ping timeout: 240 seconds)
[07:42:52] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:45:38] *** Joins: almostdvs (~almostdvs@074-135-071-059.res.spectrum.com)
[07:46:50] *** Joins: lainon_ (~lainon@2601:7c0:c500:4d20::e723)
[07:47:01] *** Joins: Jong (~Jong@2620:10d:c090:400::5:74b3)
[07:47:12] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 252 seconds)
[07:47:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:48:04] *** Quits: mra90 (~mra@192.55.55.53) (Quit: Leaving)
[07:50:37] *** Joins: din0 (~dino@cpe-74-131-247-218.kya.res.rr.com)
[07:50:37] *** Quits: din0 (~dino@cpe-74-131-247-218.kya.res.rr.com) (Changing host)
[07:50:37] *** Joins: din0 (~dino@user/din0)
[07:50:41] *** Joins: acegalla- (~Ace@71-33-206-185.hlrn.qwest.net)
[07:51:17] *** Quits: acegallagher (~Ace@71-218-176-239.hlrn.qwest.net) (Ping timeout: 240 seconds)
[07:52:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:52:47] *** Joins: loganlee (~Thunderbi@user/loganlee)
[07:53:16] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:54:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:59:20] *** Quits: phogg (~phogg@user/phogg) (Ping timeout: 256 seconds)
[07:59:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:59:48] *** Joins: k8yun (~k8yun@user/k8yun)
[08:01:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:01:13] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[08:03:17] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:05:00] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[08:05:24] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 240 seconds)
[08:05:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:08:16] *** Joins: tijuco (~tijuco@user/tijuco)
[08:08:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[08:12:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:12:30] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[08:16:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:20:51] *** Joins: archdcoder (~archdcode@111.235.90.226)
[08:23:26] *** archdcoder is now known as random242319581
[08:23:53] *** Quits: random242319581 (~archdcode@111.235.90.226) (Client Quit)
[08:25:46] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[08:26:45] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:31:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[08:31:14] *** Quits: lainon_ (~lainon@2601:7c0:c500:4d20::e723) (Quit: Leaving)
[08:32:13] *** Quits: MetaNova (~zero-one@znc/supporter/metanova) (Quit: quit)
[08:33:28] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[08:33:56] *** Joins: kdc (~kdc@196.211.197.133)
[08:34:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:34:23] *** Quits: kdc (~kdc@196.211.197.133) (Max SendQ exceeded)
[08:34:52] *** Joins: kdc (~kdc@196.211.197.133)
[08:36:04] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:37:13] *** Joins: MetaNova (~zero-one@znc/supporter/metanova)
[08:38:35] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[08:38:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:39:57] *** Quits: Guest3302 (~arc@2601:586:8100:bc30:f0b5:6a0f:f4ae:e63b) (Quit: Leaving)
[08:45:49] *** Joins: wurstwasser (~frank.hol@2001:a61:3553:801:d412:996e:f0de:1f2c)
[08:47:27] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[08:50:24] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[08:51:40] <Xanthaos> I need to sort through an extremely long log file for particular IP addresses. I tried 'cat /var/log/router|grep 10.0.0.[15,84]' and I know I got the syntax wrong. I have tried a dozen more variations, and I'm not sure how to phrase this in google, every return is nothing even close. Can I get some help on this one and then a link to documentation that will help me in the future?
[08:52:10] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae)
[08:52:38] *** Quits: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 252 seconds)
[08:53:23] <larryv> grep -Fe 10.0.0.15 -e 10.0.0.84 </var/log/router
[08:54:31] <twkm> (i wouldn't redirect, grep knows how to open a file itself)
[08:55:09] <larryv> oh duh, dunno why i did that
[08:55:24] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 252 seconds)
[08:55:41] <Xanthaos> Okay, I was trying to work off how I thought I remembered doing it a while back
[08:55:44] <larryv> Xanthaos: grep -Fe ip1 -e ip2 /var/log/router
[08:56:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:56:28] <larryv> if you have a lot more you can put them into a separate file, one per line, and then do grep -Ff patterns_file /var/log/router
[08:57:52] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:59:03] <larryv> the right regular expression would work also but i'm not sure you want more on your plate right now.
[09:00:26] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:01:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:03:55] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[09:04:50] <Xanthaos> I'll look into that. so I take it that what I tried was not even remotely close to workable? wow
[09:05:39] <larryv> i can see what you were thinking but that syntax does something different
[09:06:30] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[09:06:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:06:44] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:07:33] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Ping timeout: 256 seconds)
[09:07:33] <larryv> ''cat foo | grep'' is less efficient than ''grep <foo'', but grep can read files itself, so neither of those is necessary
[09:08:03] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 252 seconds)
[09:08:29] <larryv> [...] matches any of the characters contained, so [15,84] actually matches "1", "4", "5", "8", or ","
[09:08:57] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:08:58] *** Joins: han-solo (~hanish@user/han-solo)
[09:09:08] <larryv> and in POSIX basic regular expressions, . matches any character
[09:09:26] <larryv> you also didn't quote the pattern, so the shell tries to use it for filename expansion first
[09:11:22] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[09:14:33] <Xanthaos> Okay, I had hoped that it would work, so I could expand that search pattern to 4 or 5 or so addresses without having to enter the entire address for each one.
[09:14:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:15:49] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Read error: Connection reset by peer)
[09:16:00] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[09:16:23] <larryv> grep -E '10\.0\.0\.(15|84)' /var/log/router
[09:16:40] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[09:17:42] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[09:18:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:18:56] <Xanthaos> Okay, that would work perfectly, and I assume I can expand (15|84|33|187) like this? I've never seen a pipeline used this way. This is why bash and regex is so confusing for me. Can you recommend a good site of documentation on this, hopefully one that gives examples of each one to see how it's actually used?
[09:19:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Ping timeout: 240 seconds)
[09:19:06] <grawity> that's not a pipeline
[09:19:16] <grawity> it just happens to use the same | but in a different context
[09:19:54] <Xanthaos> And that just makes it all the more confusing lol. Yeah I'm gonna def need some good docs.
[09:20:09] <larryv> !regex > Xanthaos
[09:20:10] <greybot> Xanthaos: Regular Expressions are used to *match* certain patterns in strings. They come in several flavors (BRE, ERE, PCRE, and more). Bash only supports EREs (using [[ string =~ pattern ]]). Sed uses BREs. See !ere, !bre, !pcre, http://mywiki.wooledge.org/RegularExpression
[09:20:20] <grawity> that's actually the reason it has to be quoted
[09:20:28] <grawity> to *avoid* the shell trying to interpret as a pipeline
[09:20:29] *** Joins: Strykar (~wakka@signald/Strykar)
[09:20:41] <grawity> and letting grep interpret it as a regex
[09:21:32] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae) (Ping timeout: 240 seconds)
[09:21:39] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:22:37] <gnoo> this does work but i guess this is bad practice: grep -Ff - /var/log/router <<< $(printf '%s\n' 10.0.0.{85,15})
[09:22:54] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[09:23:21] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:23:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:23:31] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:23:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:25:08] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Ping timeout: 250 seconds)
[09:25:17] *** Joins: jfnrp (~jfnrp@2409:4064:2114:ef28:41cf:3f9c:2ce9:431)
[09:25:58] <larryv> needlessly complicated. and -f - is not portable
[09:26:28] <Xanthaos> wow
[09:26:44] <Xanthaos> Imma need another doc link. And a drink
[09:27:26] <gnoo> info "(grep) Matching Control"
[09:27:52] <gnoo> you can use -f to give it a file which as patterns, one per line
[09:28:40] <gnoo> in this case, i used `-' which usually means standard input. if you usually search for the same patterns, you may want to save them to a file and then use -f
[09:29:00] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 240 seconds)
[09:29:51] *** Quits: jimgray (~weechat@user/jimgray) (Quit: jimgray)
[09:30:25] *** Joins: jimgray (~weechat@user/jimgray)
[09:30:27] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[09:33:04] <pj> grep -F -e10.0.0.{85,15} /var/log/router
[09:34:07] <Xanthaos> Yep, That would be useful, I could keep the file for my regular searches, then manually run it when I want to run special searches
[09:34:46] <Xanthaos> no space between the -e10. correct?
[09:34:50] <pj> right
[09:35:13] <pj> keep in mind that doesn't anchor the IP addresses, so 210.0.0.150 would match.
[09:35:47] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[09:37:04] *** Joins: marderIII (~MarderIII@86.88.74.111)
[09:37:52] <pj> to see what it actually expands to...
[09:38:03] <pj> # echo grep -F -e10.0.0.{85,15} /var/log/router
[09:38:05] <shbot> pj: grep -F -e10.0.0.85 -e10.0.0.15 /var/log/router
[09:38:54] *** Joins: timj (~timj@user/timj)
[09:39:00] *** Quits: jfnrp (~jfnrp@2409:4064:2114:ef28:41cf:3f9c:2ce9:431) (Ping timeout: 240 seconds)
[09:39:26] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[09:41:06] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:41:33] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 256 seconds)
[09:41:46] <Xanthaos> So many different ways to accomplish the same goal. I definitely appreciate all the suggestions, I set up a txt file with all the info you gave me.
[09:42:36] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:45:36] <Xanthaos> I really appreciate it, and I definitely appreciate the link to the documentation, that will be very helpful
[09:46:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:46:06] <grawity> I guess -e\\b10\\.0\\.0\\.{85,15}\\b would avoid that problem
[09:46:11] <Xanthaos> I'm gonna call it a night, I'll check in tomorrow. Take it easy all, Have a great night!
[09:46:24] <Xanthaos> got that one too :)
[09:47:07] <pj> \b only works in pcre, I think and for crying out loud use '' quoting to avoid all the backslash hell
[09:47:51] <pj> -P -e'\b10\.0\.0\.'{85,15}'\b'
[09:48:52] <grawity> no, it works in GNU grep and [[
[09:49:23] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[09:50:32] <grawity> I can't find it mentioned in regex(7) though
[09:50:34] *** Quits: wurstwasser (~frank.hol@2001:a61:3553:801:d412:996e:f0de:1f2c) (Remote host closed the connection)
[09:53:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:53:42] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 252 seconds)
[09:58:36] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Ping timeout: 240 seconds)
[09:59:21] <pj> in fact regex(7) explicitly says that '\b' should match just 'b'
[09:59:38] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[09:59:41] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[09:59:55] <grawity> # echo foo | grep '\bfoo'
[09:59:56] <shbot> grawity: foo
[09:59:56] *** Quits: Xanthaos (~ke4nhw@user/ke4nhw) (Remote host closed the connection)
[10:00:00] <grawity> # echo bfoo | grep '\bfoo'
[10:00:01] <shbot> grawity: no output
[10:00:02] <pj> a '\' followed by one of the characters "^.[$()|*+?{\"  (match‐ing  that  character  taken as an ordinary character), a '\' followed by any other character(!)  (matching that character taken as an ordinary character, as if the '\' had not been present(!))
[10:00:16] <pj> oh I testedit, I know it works, but it goes against documentation for BRE
[10:00:30] <grawity> might be a grep extension?
[10:00:43] <pj> maybe a GNU extension.
[10:01:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:01:33] <grawity> sed accepts it as well... actually they accept even vim/pcre style \< \> it seems?
[10:02:49] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[10:05:47] *** Joins: k8yun (~k8yun@user/k8yun)
[10:05:56] <pj> because they all use the regex(3)
[10:12:44] *** Joins: sinaowolabi (~SinaOwola@102.67.1.24)
[10:22:12] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[10:26:24] *** Joins: Mo (~Mo@dynamic-077-001-065-245.77.1.pool.telefonica.de)
[10:27:40] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[10:27:44] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:31:47] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[10:35:37] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 240 seconds)
[10:38:48] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Read error: Connection reset by peer)
[10:39:32] *** Quits: richardm645 (~quassel@2600:8801:c507:b200:300c:150a:7306:e306) (Ping timeout: 240 seconds)
[10:39:32] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[10:39:45] *** Joins: quhar (~quhar@192.162.148.48)
[10:42:30] *** Joins: yustin (~yustin@user/yustin)
[10:44:37] *** Quits: xmb (~xmb@178.197.204.248) (Ping timeout: 268 seconds)
[10:45:55] *** Joins: Atque (~Atque@user/atque)
[10:50:02] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:a098:ee07:c9e8:a17a) (Quit: Client closed)
[10:50:40] *** Joins: jaysicks (~jaysicks@178-164-134-178.pool.digikabel.hu)
[10:51:57] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[10:53:33] *** Quits: cryptonector (~nico@24.28.108.183) (Read error: Connection reset by peer)
[10:53:57] *** Joins: cryptonector (~nico@24.28.108.183)
[10:59:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:59:59] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[11:00:17] *** Joins: unop (~unop@195.91.20.32)
[11:03:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:04:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:09:24] *** Quits: w0ng (~w0ng@103.1.212.149) (Ping timeout: 260 seconds)
[11:09:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[11:11:58] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:14:37] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 240 seconds)
[11:15:57] *** Quits: foul_owl (~kerry@23.82.193.89) (Ping timeout: 240 seconds)
[11:16:55] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:16:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:21:00] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae)
[11:21:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[11:22:01] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[11:23:36] *** Joins: godvino (~godvino@2402:8100:3921:9c0b:d813:fc63:9234:3dd3)
[11:24:21] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[11:24:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:25:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[11:25:14] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[11:25:53] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[11:29:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:29:32] <Soliton> "The interpretation of an ordinary character preceded by an unescaped <backslash> ( '\\' ) is undefined" that's what POSIX says.
[11:30:14] *** Joins: foul_owl (~kerry@23.82.193.89)
[11:30:50] *** Joins: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9)
[11:31:02] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Remote host closed the connection)
[11:31:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:31:20] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[11:35:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:36:42] *** Joins: maryo87 (~Maryo@user/maryo)
[11:36:50] *** Quits: godvino (~godvino@2402:8100:3921:9c0b:d813:fc63:9234:3dd3) (Quit: godvino)
[11:37:30] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[11:37:36] <Kartagis> can I use something like !PE through piping?
[11:37:59] <Soliton> if there is a parameter involved somewhere, sure.
[11:38:16] <grawity> what's "something like |PE" supposed to be
[11:38:43] <grawity> oh, !PE
[11:38:49] <Kartagis> grawity: parameter expansion
[11:38:59] <grawity> still not sure how it would be involved in pipes
[11:39:31] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:39:51] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[11:40:03] *** Joins: frytaped (~frytaped@2402:8100:3921:9c0b:d813:fc63:9234:3dd3)
[11:40:11] *** frytaped is now known as Guest6834
[11:40:14] <Kartagis> grawity: like I want to use uuidgen|cut -d - -f 1 but the way PE does
[11:40:35] <Kartagis> I want to replace the cut part
[11:40:45] <Soliton> var=$(uuidgen);  # now you have a parameter.
[11:40:55] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Read error: Connection reset by peer)
[11:41:34] <Kartagis> Soliton: so, PE _has to_ have a parameter. thanks
[11:41:59] <Kartagis> !pe
[11:41:59] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[11:42:02] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 240 seconds)
[11:42:34] <Soliton> that is why it's called parameter expansion...
[11:43:00] <Kartagis> do we have a evalbot here?
[11:43:16] <Soliton> !shbot
[11:43:16] <greybot> shbot runs each session in a new VM as root. Feel free to play with the bot in #shbot, or query it directly. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[11:43:52] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Remote host closed the connection)
[11:43:53] *** Joins: xmb (~xmb@178.197.204.248)
[11:43:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[11:44:15] *** Joins: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com)
[11:44:24] *** Quits: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[11:44:28] <Soliton> # var=$(cat /proc/sys/kernel/random/uuid) var=${var%%-*}; declare -p var
[11:44:28] <shbot> Soliton: declare -- var="ffa33e57"
[11:44:43] *** Joins: epony (epony@user/epony)
[11:45:10] <xmb> cool
[11:45:36] <Kartagis> # var=$(uuidgen) && echo ${var%%-}
[11:45:36] <shbot> Kartagis: bash: uuidgen: command not found
[11:45:44] <Kartagis> hm
[11:46:45] <Kartagis> # var=(cat /proc/sys/kernel/random/uuid) && echo ${var%%-}
[11:46:45] <shbot> Kartagis: cat
[11:47:00] <Kartagis> # var=(cat /proc/sys/kernel/random/uuid) && echo ${var%%-*}
[11:47:00] <shbot> Kartagis: cat
[11:47:12] <Kartagis> # var=$(cat /proc/sys/kernel/random/uuid) && echo ${var%%-*}
[11:47:12] <shbot> Kartagis: d2adedf3
[11:48:28] <Kartagis> thanks Soliton
[11:48:38] <xmb> # mapfile -t -d - u </proc/sys/kernel/random/uuid ; printf $SRANDOM; printf \ %s "${u[@]}"
[11:48:39] <shbot> xmb: 1519711896 578700b7 909a 4367 8da1 10ebab212c75
[11:48:52] *** Quits: Guest6834 (~frytaped@2402:8100:3921:9c0b:d813:fc63:9234:3dd3) (Changing host)
[11:48:52] *** Joins: Guest6834 (~frytaped@user/go4godvin)
[11:49:24] *** Quits: Guest6834 (~frytaped@user/go4godvin) (Quit: Guest6834)
[11:50:04] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:51:25] *** Quits: luva (~luva@146.70.62.254) (Read error: Connection reset by peer)
[11:51:53] *** Joins: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net)
[11:52:27] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae) (Ping timeout: 268 seconds)
[11:53:01] *** Quits: xmb (~xmb@178.197.204.248) (Remote host closed the connection)
[11:53:09] *** Joins: luva (~luva@146.70.62.237)
[11:53:16] *** Joins: xmb (~xmb@178.197.204.248)
[11:55:18] *** Joins: et_ (~et@user/et)
[11:55:33] *** Quits: bash-lib_ (~bash-libe@56.sub-174-212-229.myvzw.com) (Quit: Leaving...)
[11:56:11] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[11:58:12] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[11:59:57] *** Quits: et_ (~et@user/et) (Ping timeout: 240 seconds)
[12:00:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:01:21] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Client Quit)
[12:02:35] *** Joins: arinov (~arinov@213.194.126.155)
[12:05:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:05:35] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[12:05:44] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:09:50] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[12:10:11] <xmb> soliton, u recommend $( cat small_file ) ?
[12:10:57] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:12:49] *** Joins: iomari891 (~iomari891@197.210.76.112)
[12:17:02] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[12:18:15] *** Quits: luckiswithme (~luckiswit@149.167.161.204) (Remote host closed the connection)
[12:19:25] <geirha> read -rd- var < /proc/sys/kernel/random/uuid
[12:21:02] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[12:21:31] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:21:49] <xmb> thanks you
[12:25:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:06] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:27:25] *** Joins: luckiswithme (~luckiswit@149.167.161.204)
[12:28:31] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:29:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[12:30:06] *** Quits: miique (~miiquemat@2001:470:69fc:105::1:6901) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: liquid[m] (~liquiddun@2001:470:69fc:105::1:66a9) (Quit: You have been kicked for being idle)
[12:30:45] *** Joins: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[12:31:29] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: Ping timeout (120 seconds))
[12:32:21] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[12:32:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:33:43] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:33:58] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:34:15] <moha> How to handle this snoippet: https://p.teknik.io/XhG2Q --> should I replace my code with the line #5 to run it before precustomization or I should define $1 somewhere in my code?
[12:35:22] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[12:35:45] *** Joins: Schrostfutz (~Schrostfu@55d4dc0f.access.ecotel.net)
[12:36:27] <moha> and here's my code: https://p.teknik.io/7iuyx to auto-expand the sda3 (on a fresh installation, keeping default partitioning setting); Mmay you take a glance at these 10 lines; do you find something risky, unnecessary or lack of a command?
[12:36:45] <isabella> lol x$1 ==
[12:37:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:37:42] <emanuele6> also unquoted expansion of $1 since it's using [
[12:39:09] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[12:39:18] <isabella> mine is funnier
[12:39:21] *** Quits: [R] (~rs@genoce.org) (Read error: Connection reset by peer)
[12:41:43] <grawity> why is line 10 not just using `for path in /sys/.../*/rescan`
[12:42:16] <grawity> (what's the purpose of the rescan?)
[12:43:16] *** Joins: shad (~shad@user/shad)
[12:43:19] *** Quits: luckiswithme (~luckiswit@149.167.161.204) (Remote host closed the connection)
[12:44:14] *** Joins: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com)
[12:44:22] *** Quits: w0ng (~w0ng@ec2-13-211-241-147.ap-southeast-2.compute.amazonaws.com) (Client Quit)
[12:46:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:47:40] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:48:11] *** Joins: han-solo (~hanish@user/han-solo)
[12:49:31] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[12:51:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:51:34] *** Quits: led_belly (~led_belly@159.48.53.215) (Read error: Connection reset by peer)
[12:51:54] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[12:51:56] <jelly> extending an existing disk online, while the machine is alive, requires a rescan for the linux kernel to pick up the changes
[12:52:22] <geirha> tee /sys/class/scsi_device/*/device/rescan <<< 1
[12:52:40] <jelly> yes.  I do echo 1 | tee -a ...
[12:52:53] <geirha> eww, echo :p
[12:53:38] <jelly> it works and is mechanical memory, unlike heredoc
[12:53:57] <Soliton> here string*
[12:54:12] <Soliton> moha: $1 is the first argument to the script.
[12:54:53] <jelly> where string?
[12:55:18] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:55:23] <Soliton> there string
[12:55:24] <han-solo> it's a herestring
[12:55:40] <han-solo> instead of a heredoc soliton meant, i think
[12:55:40] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:55:55] <geirha> well you should get into the habbit of using printf instead. echo should be considered deprecated
[12:56:09] *** Quits: Schrostfutz (~Schrostfu@55d4dc0f.access.ecotel.net) (Remote host closed the connection)
[12:56:42] <Soliton> twice as fast here since i doubt you need a newline.
[12:57:23] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:a81f:2b83:4e1e:1d38)
[12:57:49] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[12:59:19] <Masklin__Gurder> Why is ctrl+w like ctrl+backspace in all terminals I've used, but like alt+f4 in all text editors I've used?
[12:59:27] <Masklin__Gurder> It is quite annoying I verily say unto thee
[13:00:37] *** Joins: led_belly (~led_belly@159.48.53.216)
[13:00:55] <selckin> cause its very easy combo to do with one hand, so its used for most common action
[13:03:00] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:05:55] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:a81f:2b83:4e1e:1d38) (Quit: Leaving...)
[13:06:47] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[13:07:17] *** Quits: sinaowolabi (~SinaOwola@102.67.1.24) (Ping timeout: 240 seconds)
[13:08:09] *** Quits: lord4163 (~lord4163@81-233-183-142-no86.tbcn.telia.com) (Ping timeout: 256 seconds)
[13:10:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:11:09] <moha> grawity: what's the purpose of the rescan --> to tell the OS about expansion?!
[13:11:19] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:14:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:15:41] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:16:05] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[13:16:30] <jelly> moha, yes
[13:16:53] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:17:27] * jelly likes /sys/block/*/device/rescan , /sys/block is full of symlinks and shorter to type
[13:17:56] <Masklin__Gurder> selckin: Well I think it's irresponsible that it means so different impactful things
[13:18:24] <selckin> Masklin__Gurder: file a complaint with the ethics department
[13:19:23] <Masklin__Gurder> >:(
[13:19:42] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: The Lounge - https://thelounge.chat)
[13:20:23] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[13:20:36] *** Joins: lord4163 (~lord4163@81-233-183-142-no86.tbcn.telia.com)
[13:20:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:28] <jelly> Masklin__Gurder, best switch the shell to vi key bindings instead of emacs key bindings, so you get less confused!
[13:22:28] *** Quits: noobaroo (~noobaroo@user/noobaroo) (Remote host closed the connection)
[13:22:58] *** Joins: sinaowolabi (~SinaOwola@160.152.135.2)
[13:23:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[13:25:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:25:54] <Masklin__Gurder> Right
[13:26:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:28:06] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[13:29:10] <tsujp> I'm trying to assign a parameter to the output of a command involving openssl running in a subshell but suddenly openssl breaks and ONLY breaks here? `abc=$(openssl rsa –noout –modulus –in the_key.pem | openssl sha256)` -- if I paste in `openssl rsa –noout –modulus –in the_key.pem | openssl sha256` it works fine
[13:29:24] <tsujp> Strange subshell things borking openssl or openssl being dumb and being borked by the subshell?
[13:29:32] <tsujp> How can I assign the output of this command to `abc` now?
[13:29:46] <Soliton> how does it break?
[13:29:54] <tsujp> Oh right, it says:
[13:29:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:30:00] <tsujp> `rsa: Use -help for summary.`
[13:30:35] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:30:47] <Soliton> so fix the command.
[13:30:53] <tsujp> It's not broken
[13:31:02] <tsujp> The EXACT SAME COMMAND works if you remove the subshell component
[13:31:03] <Soliton> talk it out with the command.
[13:31:10] *** Quits: roadie (~user@2a02:8108:5a40:1d87:979:9ca:a232:d7e9) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[13:31:12] <tsujp> I can't... then it would be useless
[13:31:13] <Soliton> maybe you two can get to an agreement.
[13:31:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:31:42] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:31:45] <Soliton> it's quite clearly not the exact same command.
[13:32:12] <Soliton> also hopefully not what you pasted here since that contain en dashes.
[13:32:15] <tsujp> `$(openssl rsa –noout –modulus –in the_key.pem | openssl sha256)` <-- does not work with the `rsa: Use -help for summary` error
[13:32:27] <tsujp> OH
[13:32:32] <tsujp> have I been destroyed by en dashes?
[13:32:54] <tsujp> Oh my god I have
[13:34:40] *** Quits: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[13:36:02] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 250 seconds)
[13:36:10] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[13:37:42] *** TheSilentLink_ is now known as TheSilentLink
[13:38:16] <osse> 5~
[13:38:24] <osse> oops
[13:38:42] <geirha> 4~
[13:41:10] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[13:43:37] *** Joins: MiLeon (~MiLeon@ip-078-042-179-074.um17.pools.vodafone-ip.de)
[13:44:42] *** Quits: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 252 seconds)
[13:45:59] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[13:50:55] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae)
[13:51:57] *** Joins: lavaball (felix@31.204.155.215)
[13:53:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:17] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[13:57:43] <dionys> What does the - accomplish in a bash var reference like: ${SOMEVAR-}  ?
[13:58:03] <Soliton> !:-
[13:58:03] <greybot> ${parameter:-word} Use Default Values. If parameter is unset or null, the expansion of word is substituted. Otherwise, the value of parameter is substituted.
[13:58:15] <Soliton> !pe:
[13:58:15] <greybot> When using the default value parameter expansion (${var:-default}), the test checks if var is not set (unset -v var) or empty (var=''). If you omit the colon (${var-default}) it only checks if the var is not set. Same applies for :=, :?, and :+
[13:58:55] <Soliton> ${SOMEVAR-} looks like a silly workaround for set -u.
[13:59:45] <dionys> It's used in debian's /etc/profile:  ${BASH-} when checking if shell is bash.
[14:00:32] *** Quits: StathisA (~StathisA@ppp-94-66-225-211.home.otenet.gr) (Ping timeout: 240 seconds)
[14:00:39] <Soliton> it does nothing there.
[14:01:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[14:01:21] <emanuele6> i doubt they are setting -u in /etc/profile, it's probably just there because of cargo culting; it does nothing
[14:01:25] <jelly> dionys, which debian release is that?  Mine has if [ "$BASH" ]; then
[14:01:42] <pj> Maybe they use it because there are some other shells that will error out if you try to access a variable that doesn't exist?
[14:02:18] *** Joins: soham (~soham@115.187.42.72)
[14:02:29] <dionys> It's used that way in a test both for $BASH and $PS1
[14:03:05] <dionys> if [ "${BASH-}" ] && ...
[14:03:26] <Soliton> an unset variable will expand to empty either way so it does nothing unless set -u is in effect.
[14:04:24] <dionys> I tried testing it before I asked and I can't tell that it has any effect.
[14:04:29] <pj> ...or if -u is set in bash, for that matter
[14:04:54] <pj> Soliton: is there no shell that defaults to the -u behavior of bash?
[14:05:02] *** Joins: maggotbrain (~maggotbra@c-73-225-163-217.hsd1.wa.comcast.net)
[14:05:27] <Soliton> set -u is POSIX.
[14:05:43] <Soliton> i doubt any shell turns it on by default.
[14:06:13] <pj> So the only reason to even do that at all is "just in case" it somehow got turned on, heh.
[14:06:27] *** Joins: StathisA (~StathisA@178-147-88-111.haap.nym.cosmote.net)
[14:07:12] <pj> Anyways, that said, I've seen a lot of stupid stuff done by distro scripts.  I would not take anything you see in one of them too seriously.
[14:08:16] <Soliton> it's weird that they set PS1 if it's already set and not otherwise.
[14:08:35] <Soliton> seems backwards if anything.
[14:08:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:09:23] <pj> true
[14:10:12] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[14:11:24] <dionys> Seems like if you had set -u you would want to see the unbound var error if you had one. I mean that's whole point of the option.
[14:12:16] <Soliton> sure, but the logic here should not care if it's set or not. (weird logic as it is or not)
[14:12:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[14:13:16] * dionys grumbles uselessly about footguns in distro scripts
[14:13:32] *** Quits: StathisA (~StathisA@178-147-88-111.haap.nym.cosmote.net) (Ping timeout: 240 seconds)
[14:14:27] *** Joins: StathisA (~StathisA@178-147-22-170.haap.nym.cosmote.net)
[14:14:57] <pj> the point of setting -u would, I think, be to catch errors of mis-spelled variables and the like.  In this particular case they are testing for the existence of the variable by attempting to expand it, so they would not want an unset variable to error out, but merrily to not pass the test.
[14:15:11] <jelly> debian 10 vs debian 11 /etc/profile : https://paste.debian.net/1234695/
[14:15:13] <pj> so it makes sense if they think that -u might be set somehow.
[14:15:35] <jelly> apparenty dionys is on debian 10 or older
[14:15:49] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[14:16:05] <pj> yeah
[14:16:09] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:16:22] <pj> I have a debian 10-based system as well that I looked at.
[14:16:25] *** Joins: ano (~ano@user/ano)
[14:16:28] <Soliton> i have it on 11.2 as well.
[14:16:30] <pj> so interesting they changed that in 11
[14:16:33] *** Quits: ano (~ano@user/ano) (Client Quit)
[14:16:40] *** Joins: unop (~unop@195.91.20.32)
[14:16:44] <geirha> why did they remove the /etc/profile.d/* stuff? Won't that break a ton of existing stuff?
[14:16:52] <jelly> wait, maybe my debian 11 workstation has a custom or very old /etc/profile
[14:18:13] *** Joins: ano (~ano@user/ano)
[14:18:18] *** Joins: StathisA_ (~StathisA@ppp-94-66-225-211.home.otenet.gr)
[14:18:35] <jelly> right, sorry.  They're actually very similar
[14:18:49] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:5cca:aa73:a158:2834)
[14:19:02] *** Quits: StathisA (~StathisA@178-147-22-170.haap.nym.cosmote.net) (Ping timeout: 240 seconds)
[14:20:07] <jelly> they only difference is `` -> $()
[14:20:59] * jelly had a /etc/profile from 2011
[14:20:59] <Soliton> starting an interactive shell with -u still shows an unbound variable error in /etc/bash.bashrc anyway.
[14:21:09] *** Joins: roadie (~user@2a02:8108:5a40:1d87:a1ef:afc1:26dc:c3d4)
[14:21:23] <pj> heh
[14:21:37] <pj> so it's completely pointless.
[14:22:06] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae) (Ping timeout: 252 seconds)
[14:22:23] <pj> sounds like it was an attempt to not error out with -u, but they fell short.
[14:22:52] *** Joins: ekathva_ (~ekathva@mobile-access-5d6abb-218.dhcp.inet.fi)
[14:22:58] *** Quits: MiLeon (~MiLeon@ip-078-042-179-074.um17.pools.vodafone-ip.de) (Quit: Leaving)
[14:24:25] *** Quits: sinaowolabi (~SinaOwola@160.152.135.2) (Read error: No route to host)
[14:25:07] <jelly> https://tracker.debian.org/media/packages/b/base-files/changelog-11.1deb11u2 way down at 9.6 version mentions:   * Change default /etc/profile to not warn about possibly undefined variables PS1 and BASH. Closes: #776154 (https://bugs.debian.org/776154).
[14:25:17] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 240 seconds)
[14:25:54] <jelly> and yup, that bug is about someone trying set -u
[14:26:03] <dionys> jelly: I'm on current stable, debian 11, but /etc/profile is from aug 2019.
[14:26:09] <pj> yeah, that makes sense, and then at some point someone would have come along and broken it again later in bash.bashrc.
[14:27:44] <Soliton> the report didn't involve bash so probably just wasn't tested.
[14:29:19] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[14:29:54] <Soliton> a bit silly either way. if you use set -u in your interactive shell you can keep the pieces. they even mention sourcing /etc/profile from a non-interactive shell...
[14:30:14] <Soliton> doesn't hurt to be conservative in system files anyway i guess.
[14:30:26] <jelly> if that was a real important use-case then all the packages that ship anything in profile.d/ would need checking and fixing as well
[14:30:34] <Soliton> yeah.
[14:30:40] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:33:00] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 240 seconds)
[14:33:43] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[14:35:32] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (Ping timeout: 240 seconds)
[14:35:33] <pj> Soliton: it makes sense to try to fix that stuff, and it makes sense that it only got half-fixed.
[14:36:42] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[14:37:54] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[14:38:11] *** Joins: w0ng (~w0ng@185.218.127.24)
[14:38:51] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:42:13] *** Joins: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com)
[14:42:45] *** Joins: fef (~thedawn@user/thedawn)
[14:45:17] *** Quits: ekathva_ (~ekathva@mobile-access-5d6abb-218.dhcp.inet.fi) (Ping timeout: 256 seconds)
[14:48:32] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[14:50:42] *** Joins: guesswhat (~guesswhat@89.177.103.59)
[14:50:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:51:26] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 250 seconds)
[14:52:06] *** Joins: cliluw (~cliluw@47.147.77.43)
[14:55:20] *** Joins: nightw0lf (~nightw0lf@77.125.126.151)
[14:57:56] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[14:58:15] *** Joins: optative (~optative@198.13.144.145)
[14:58:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:59:24] *** Quits: nightw0lf (~nightw0lf@77.125.126.151) (Client Quit)
[14:59:28] *** Quits: optative (~optative@198.13.144.145) (Client Quit)
[14:59:32] *** Joins: cK (~cK@77.125.126.151)
[15:00:20] *** Quits: cK (~cK@77.125.126.151) (Remote host closed the connection)
[15:00:24] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[15:00:27] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Client Quit)
[15:00:35] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:00:44] *** Joins: unop (~unop@195.91.20.32)
[15:02:28] *** Joins: osXnut (~osXnut@77.125.126.151)
[15:03:17] *** Joins: wedwards (~wedwards@46.44.154.209)
[15:03:17] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[15:03:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:04:31] *** Quits: osXnut (~osXnut@77.125.126.151) (Remote host closed the connection)
[15:04:48] *** Joins: osXnut (~osXnut@77.125.126.151)
[15:06:03] *** Joins: optative (~optative@198.13.144.145)
[15:06:10] *** Quits: optative (~optative@198.13.144.145) (Client Quit)
[15:07:06] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[15:07:18] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:09:12] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[15:10:29] *** Joins: optative (~optative@198.13.144.145)
[15:12:56] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:13:45] *** Quits: optative (~optative@198.13.144.145) (Client Quit)
[15:14:01] *** Joins: optative (~optative@198.13.144.145)
[15:15:11] *** Joins: et (~et@user/et)
[15:15:12] *** osXnut is now known as osXnuts
[15:16:03] *** osXnuts is now known as osXnut
[15:16:15] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Quit: Leaving)
[15:16:27] *** Quits: osXnut (~osXnut@77.125.126.151) (Quit: leaving)
[15:16:32] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 240 seconds)
[15:18:30] *** Quits: et (~et@user/et) (Read error: Connection reset by peer)
[15:18:34] *** Joins: et_ (~et@user/et)
[15:18:57] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: Changing server)
[15:20:29] *** Joins: alive (~alive@ng.nixy.dk)
[15:21:27] *** et_ is now known as et
[15:21:29] <alive> I have a consesus-based question. When writing scripts or one-liners, when should I refer to variables by $foo and when is it more appropriate to use ${foo}? I have started using ${foo} primarily everywhere but I'm worried if this is bad style.
[15:22:11] <Nomikos> $foo can be an issue when it inside a string as, say, prefix $foo_directory
[15:22:40] <alive> Indeed, this is what I base my impression of ${foo} being "safer" on.
[15:22:42] <Nomikos> ${foo} doesn't have that issue, and also allows a bunch of operations (if needed). iirc the latter is preferred
[15:22:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:23:42] <alive> Yeah I think this is called shell parameter expansion?
[15:24:06] <alive> The docs are a little difficult for me to grok properly so I use expansions very sparingly.
[15:24:10] <selckin> !${
[15:24:10] <greybot> Without curly braces parameter expansions refer to the longest valid variable name or shortest positional parameter. "${var}bar" expands the parameter named "var" while "$varbar" expands "varbar". "$123" references argv[1] and "${123}" references argv[123]. Braces are requried for parameters > 9, special PEs, and array expansions: ${10}, ${var##pat}, ${arr[5]}. BRACES AREN'T A SUBSTITUTE FOR QUOTES!
[15:24:19] *** Joins: nyex (~Thunderbi@177.84.107.26)
[15:24:38] <selckin> !pe
[15:24:39] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[15:24:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:30] <Nomikos> I often peek at https://devhints.io/bash#parameter-expansions
[15:25:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[15:26:27] <alive> Nomikos: Oooh that is very helpful. Thank you
[15:26:38] <Soliton> the examples only use quotes where they do nothing, nice.
[15:27:30] <Soliton> ah well, a couple of places actually need them.
[15:27:36] <alive> So the consensus is that it's OK to use ${var} even though it is strictly needed in the context?
[15:27:54] <alive> s/strictly/not strictly/
[15:28:31] <selckin> you'll only get yelled at for using names in capital letters
[15:28:33] <Soliton> sure, it's ok. i doubt those that know the rules do it though.
[15:28:51] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Remote host closed the connection)
[15:28:54] <Soliton> in general i would guess that people that know the rules only write longer syntax when it is actually needed.
[15:28:58] <Nomikos> my editor complains when I use $foo, so.. >.>
[15:29:50] <osse> Nomikos: does it complain about "$foo" ?
[15:30:00] * Nomikos tris
[15:33:06] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 272 seconds)
[15:33:09] <Nomikos> ... I can't reproduce it now >.< maybe I disabled that warning one evening. it doesn't care about double quotes though
[15:33:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:34:01] *** Quits: makara_ (~makara@196.214.171.83) (Ping timeout: 256 seconds)
[15:34:17] *** Joins: furrymcgee (~devuan@cgn-213-196-210-225.nc.de)
[15:34:35] <alive> Cool. Thanks for the advice good people
[15:34:40] <optative> Nomikos: what's your editor?
[15:34:49] <alive> I'll try to use ${var} when it's needed and $var when not
[15:35:12] *** Joins: zeden (~zeden@user/zeden)
[15:35:13] <Nomikos> optative: the one that complains is phpstorm
[15:35:27] *** Joins: gilesw (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk)
[15:36:57] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[15:37:48] *** Quits: sinaowolabi_ (~SinaOwola@160.152.135.2) (Ping timeout: 250 seconds)
[15:38:18] <osse> maybe it complained about foo=basket; echo $fooball.
[15:38:19] *** Quits: gilesw_ (~gwestwood@static-83-146-62-213.vodafonexdsl.co.uk) (Ping timeout: 256 seconds)
[15:38:38] <osse> complaining about lack of { } in general sounds weird
[15:40:01] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 256 seconds)
[15:41:20] *** Quits: agrosant (~agrosant@46.12.50.59.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[15:41:57] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[15:42:40] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[15:46:46] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 260 seconds)
[15:46:58] *** Joins: cdown (~cdown@188.214.11.14)
[15:47:19] *** Joins: cliluw (~cliluw@47.147.77.43)
[15:47:37] *** Joins: et (~et@user/et)
[15:50:29] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[15:50:52] <cart_> Is there a command that will look for a specific string in a file and replace it with something I pass?
[15:51:00] <Nomikos> sed
[15:51:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:51:54] <Soliton> sed is not particularly suited for arbitrary string input. you will have to sanitize it before injecting.
[15:52:02] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[15:53:02] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:53:03] <Soliton> blindly replacing a string anywhere in a file does not sound that great anyway.
[15:53:15] *** Joins: et (~et@user/et)
[15:56:07] *** Joins: maryo_87 (~Maryo@user/maryo)
[15:56:22] <alive> What is a more elegant way to do expand "ssh{d,}" into "ssh" and "sshd"
[15:56:59] <Soliton> why not write it out?
[15:57:12] <alive> It's a theoretical question
[15:57:34] *** Joins: agrosant (~agrosant@79.103.7.27.dsl.dyn.forthnet.gr)
[15:59:02] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[15:59:37] *** Joins: clime (~clime@37-48-56-199.nat.epc.tmcz.cz)
[15:59:49] <selckin> none
[16:00:32] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[16:01:10] <osse> alive: ssh{,d} is more elegant because it expands in the order you want :p
[16:01:13] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Remote host closed the connection)
[16:01:33] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[16:02:37] *** Joins: makara (~makara@196.214.171.83)
[16:03:12] *** Joins: makara_ (~makara@196.214.171.83)
[16:03:30] *** Quits: agrosant (~agrosant@79.103.7.27.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[16:04:38] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[16:04:51] *** Joins: fifihyperbola_ (~fifihyper@lf2.warkscol.ac.uk)
[16:08:32] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:08:46] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:08:46] *** Joins: mowcat (~mowcat@host86-134-139-152.range86-134.btcentralplus.com)
[16:09:53] <alive> osse: Thank you :d
[16:11:03] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[16:14:20] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[16:14:54] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[16:16:43] <Earnest> Being clear is more elegant than not
[16:16:50] *** fifihyperbola_ is now known as fifihyperbola
[16:17:48] <Earnest> Relying on esoteric bash syntax to express something is not as elegant as just expressing it explicitly, this much should be immediately obvious
[16:18:16] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:18:25] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[16:18:37] <Earnest> (Relying on syntax in general is worse /if/ it can be laid out bare)
[16:18:53] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:19:08] *** Joins: agrosant (~agrosant@79.103.143.96.dsl.dyn.forthnet.gr)
[16:19:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:19:45] <cart_> Soliton: Well its not blindly... I have the full default string . Its just that this syntax is pretty fugly and / makes it prone for errors -> sed 's/listen=udp:0.0.0.0:5060/listen=udp:'${LOCAL_IP}':5060/2' /etc/opensips/opensips.cfg
[16:20:53] <Soliton> why do you not just use a text editor?
[16:21:23] <Soliton> or maybe this is a template file.
[16:21:26] <Soliton> !template
[16:21:26] <greybot> http://mywiki.wooledge.org/TemplateFiles
[16:22:24] <cart_> Soliton: because the containers are being configured on the fly and SED would have been greate for that
[16:22:37] <Soliton> !docker
[16:22:38] <greybot> https://xkcd.com/1988/ The fad of the month (as of June 2018) is Docker. It's always Docker. Why are they doing it THAT WAY? Because Docker.
[16:23:23] *** Quits: agrosant (~agrosant@79.103.143.96.dsl.dyn.forthnet.gr) (Max SendQ exceeded)
[16:24:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:25:24] <cart_> Soliton: haha well unfort I am tasked and not really into fads in general
[16:25:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:28:32] <geirha> just COPY a complete file
[16:28:59] <geirha> editing a config file non-interactively like that is asking for trouble. Especially when doing it with sed which won't tell you whether it succeeded or not
[16:30:27] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:30:36] <geirha> Soon you'll also be able to embed the file in the Dockerfile by using heredoc syntax, though I think that feature is still in experimental state
[16:30:57] *** Quits: mowcat (~mowcat@host86-134-139-152.range86-134.btcentralplus.com) (Remote host closed the connection)
[16:32:32] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:34:44] *** Joins: shad (~shad@user/shad)
[16:36:20] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:36:24] <furrymcgee> heredocs with parameter expansion?
[16:36:57] *** Joins: drd (~drd@93-42-66-75.ip85.fastwebnet.it)
[16:37:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:38:12] *** Quits: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com) (Quit: (Read error: Connection reset by beer, You Phuq With Me, You Phuq With The B0rg.0rg))
[16:38:19] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:40:48] <geirha> partially. It would be docker that expands the $VARs, and it doesn't support the full range of PE
[16:41:12] <geirha> on the upside, that means $() and `` won't be expanded
[16:42:17] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[16:42:30] *** Joins: carl- (~carl-@185.103.188.130)
[16:42:42] <geirha> https://github.com/moby/buildkit/blob/master/frontend/dockerfile/parser/parser_heredoc_test.go example in the form of test cases
[16:43:17] <furrymcgee> you can embed them dockerfile in a bash heredoc anyway
[16:43:43] <geirha> very cumbersome though
[16:45:05] <alive> Earnest: (re: being elegant) by that logic I should avoid using vars and loops and instead rely on explicitly written commands...
[16:45:19] *** Quits: jimgray (~weechat@user/jimgray) (Quit: jimgray)
[16:45:26] <alive> Earnest: However I do realize your point is that it is a matter of balancing which approach is clearer
[16:46:33] *** Joins: CodePoint (~jonathan@50-192-38-69-static.hfc.comcastbusiness.net)
[16:46:36] <alive> In my case the real use case was something like mkdir ${rootmnt}/${host}/etc/ssh/ssh{,d}_config.d which is supposed to work for many permutations of $rootmnt and $host
[16:47:07] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:47:43] <Soliton> the more important part are the missing quotes.
[16:47:49] <osse> imho it's a little better to use { } with natural word boundaries. e.g. {ssh,ssd}.
[16:48:05] *** Quits: quhar (~quhar@192.162.148.48) (Quit: WeeChat 3.3)
[16:48:21] <osse> yes, "ssh" is duplicated. but it's easier to read because "ssh" and "sshd" are things the reader of the script have heard of
[16:48:24] *** Joins: masber (~masber@2001:620:808:1200:8000::1e)
[16:48:25] <osse> *has
[16:48:45] <osse> and look, I even made a typo that I would have avoided if I hadn't tried to use my own suggestion
[16:48:47] <jelly> also easier to typo, as we have just seen
[16:49:41] <jelly> helping people over irc we often tell them to show eg. /etc/apt/sources.list{,.d/*}
[16:50:19] <jelly> yeah it looks like line noise or perl but SAVES BYTES
[16:50:56] <Soliton> golfing saves bytes, too.
[16:51:16] <osse> Despite my glaring mistake, I stand by what I said
[16:51:23] <Soliton> you should golf all your code. think of the trees.
[16:51:55] <osse> e.g. touch *.{txt,tiff,toml} instead of touch *.t{xt,iff,oml}
[16:51:58] *** Joins: darkbit (~db@136.158.8.67)
[16:53:11] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[16:54:36] *** Quits: drd (~drd@93-42-66-75.ip85.fastwebnet.it) (Ping timeout: 240 seconds)
[16:55:21] *** Joins: SyedThrowingBric (~SyedThrow@2405:3800:8a0:5c93:b9df:939d:286e:1aa8)
[16:55:46] <jelly> osse, that's completely different!
[16:56:04] <Earnest> alive: (Not using variables and loops, yes exactly)
[16:56:17] <jelly> semantically ssh{,d} are semantically close
[16:56:18] <alive> osse: Great point
[16:56:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae)
[16:57:02] <Earnest> I am quite against variables and the such like because it invariably is used to store intermediate computation from one command which is then passed on to another
[16:57:43] <alive> Dont even get me started on perl line noise ... i used to have a sado/masochistic fascination with that stuff in my early 20's
[16:57:48] <Earnest> And loops tend to be replaced with blocking IO over pipes.  This approach has on average halved the line count of everything I can apply it to and massive improved performance because the bottleneck becomes the command's efficiency rather than the shell's
[16:58:06] <Earnest> But this is a completely different mental model, the shell is not a programming language
[16:58:09] <jelly> also, three registers are enough for everyone: A, X, Y
[16:58:18] <alive> Earnest: Can you give an example of that in bash specifically?
[16:58:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:00:06] <Earnest> alive: A common 'pattern' I see is typically: v0=$(cmd); v1=$(cmd2 <<< "$v0"); v2=$(cmd3 <<< "$v1") and so on.  This could just be cmd | cmd2 | cmd3.  Not everything can be arranged as a pipeline, but if they can you can draw from APL and treat a pipeline as though it was a sieve; invalid data is simply excluded and only valid falls through, each step computes directly the input
[17:01:01] <alive> OK that is a very specific but great point.
[17:01:08] <Earnest> alive: I had a script which interfaced to twitch's API, it was a bloated monster using arrays, slicing, loops, all sorts of "programming language" style bullshit.  I turned into one pipeline; theortically a single line of code, but split up over 50 (awk being the majority) of it
[17:01:15] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[17:01:56] <Earnest> And that's the other point, an old unix idea called 'full exploitation', that if you introduce some tool you might as well make the most of what it can do for you.  So much of the grep | awk | sed stuff you see can be collapsed into just awk
[17:02:54] <alive> Now that can be a limitation on the users knowledge of awk. I often do the grep | awk | sed pipeline just because I do not have any idea of how to do it all in awk
[17:03:00] <Earnest> alive: More extreme example of twitch proof of concept thing I made while exploring their undocumented gql api: https://0x0.st/oNim.sh -- it all executes in parallel, and makes use of curl's parallelism
[17:03:31] <alive> And then I f eel like we have gone full circle to your initial point: Rather make it readable than correct.  grep | awk | sed can be easier to interpret for a human than a pure-awk solution
[17:03:44] <Earnest> (That's also why pipelines are so nice, you don't have to pay the cost of initialising each component as much if the first "masks" the cost of the rest; i.e. curl network access is much slower, once that even sees data output the rest of the pipeline is already all running)
[17:04:42] <alive> oh boy that oNim.sh sure is hard to parse for my squishy human brain
[17:04:44] <Nomikos> suspect a lot of the variable way comes from debugging and checking the intermediate values
[17:04:50] *** Joins: jimgray (~weechat@user/jimgray)
[17:04:53] <Earnest> alive: So long as each tool used is used in a clear manner, I'm not going to limit myself because people don't know awk
[17:04:55] <Nomikos> then if it works, they leave it like that
[17:05:08] <jimgray> Hello, I see some .bashrc line like this:  PATH="$HOME/.local/bin:$HOME/bin${PATH+:$PATH}"
[17:05:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:05:24] <jimgray> Looks weird
[17:05:56] <Earnest> Nomikos: It comes from imperative thinking, where each proceedure is done in isolation and sentinels are needed to track state (typically in loops).  Developments in proceedural (what some call functional) style routines tries to think more widely about the context, this is where "data oriented programming" comes in
[17:06:00] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 252 seconds)
[17:06:09] <Soliton> !+: > jimgray
[17:06:18] <Soliton> !:+ > jimgray
[17:06:18] <greybot> jimgray: ${parameter:+word} Use Alternate Value. If parameter is null or unset, nothing is substituted, otherwise the expansion of word is substituted.
[17:06:30] <Earnest> alive: It's hard to parse because it's utterly alien
[17:06:32] <Soliton> i guess you typoed that.
[17:06:43] *** Quits: SyedThrowingBric (~SyedThrow@2405:3800:8a0:5c93:b9df:939d:286e:1aa8) (Remote host closed the connection)
[17:07:26] <Soliton> ah no, the : is the PATH delimiter there.
[17:07:27] <Earnest> alive: The cost of forking all of those pipeline commands is completely hidden by cost of network access, most of this pipeline is idle and it still executes as fast as the network allows
[17:08:11] <alive> I have never thought about pipelines in those terms before... I'll absolutely take this with me
[17:08:13] <Earnest> alive: (I also like to use posix sh because it limits me in a way which forces creative solutions.  Sometimes this is not possible, such as needing read -d '' in which case I use bash fullu)
[17:08:16] <Earnest> fully*
[17:08:20] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:09:02] <Soliton> jimgray: should really be  "$HOME/.local/bin:$HOME/bin${PATH:+:$PATH}"  so that you don't expand a colon for an empty PATH either.
[17:09:37] <Soliton> jimgray: PATH should pretty much never be empty though so the whole thing probably never matters.
[17:09:52] <Earnest> alive: It clicked for me after reading Agha's actor model and Hoare's CSP and then coming across Cox's short article on plan9's libthread: https://swtch.com/~rsc/thread/
[17:10:04] <Soliton> more important for LD_LIBRARY_PATH or so.
[17:10:08] <jimgray> Soliton: yep, PATH must be set to /bin /sbin
[17:10:18] <Earnest> I converted a script to this approach as a /joke/ and it just sort of fell out
[17:10:30] <furrymcgee> please write pipe and end of line | \
[17:10:47] <Earnest> furrymcgee: No
[17:10:56] <Earnest> furrymcgee: Also if you write it at the end of a line you don't need \
[17:11:26] <Earnest> But I want to see | at the start so that I know it's part of a pipeline without having to scan the ragged-right for one
[17:11:50] *** Quits: CodePoint (~jonathan@50-192-38-69-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[17:12:01] <Earnest> alive: Here is another example I did which is half-imperative and half-pipeline: https://0x0.st/oNi2.sh
[17:12:07] <furrymcgee> it looks like all commands are part of a pipeline
[17:12:08] *** Joins: et (~et@user/et)
[17:12:20] <jimgray> Soliton: I will set this env:   export PROMPT_COMMAND="history -a; history -c; history -r${PROMPT_COMMAND:+:$PROMPT_COMMAND}"
[17:12:27] <Earnest> furrymcgee: Almost all, unfortunately the menu system doesn't quite allow it
[17:12:38] *** Joins: tuxmania (~tuxmania@cosium-fo-152-18.fib.nerim.net)
[17:12:55] <Soliton> jimgray: why do you export PROMPT_COMMAND?
[17:13:16] <Soliton> jimgray: PROMPT_COMMAND="history -a; history -c; history -r${PROMPT_COMMAND:+;$PROMPT_COMMAND}"
[17:13:22] <jimgray> Soliton: do you mean it is already exported?
[17:13:30] <Soliton> why would it be?
[17:13:39] <Earnest> alive: Also this guy has thankfully collected a lot of this thinking into one place and it's nice to see someone else who gets it: https://github.com/oilshell/oil/wiki/Perlis-Thompson-Principle
[17:13:44] <Soliton> what child process should care about it?
[17:14:05] <Soliton> you set it for the current shell surely. not one you'll start later.
[17:14:12] <jimgray> for example, i need tmux to know about it when tmux -new s
[17:14:28] <Soliton> tmux uses PROMPT_COMMAND?
[17:14:38] <Soliton> that seems unlikely.
[17:14:48] <phy1729> no hit for PROMPT in man tmux
[17:15:05] <jimgray> ok
[17:15:07] <Soliton> if you mean some shell in tmux then surely you set it in the shell's dotfiles.
[17:15:08] <jimgray> got it
[17:15:12] <jimgray> let me update a bit
[17:16:10] <jimgray> does that mean, I should NOT "export" PATH in .bashrc as well
[17:16:35] <Soliton> PATH is an env variable. it should already be exported though.
[17:17:02] <Earnest> alive: (The second example could be a single pipelne but curl's --parallel flag will interleave output)
[17:17:16] <Soliton> PROMPT_COMMAND is an internal shell variable. it's not an env variable usually.
[17:18:11] <jimgray> ha, got it!
[17:18:19] <jimgray> shell internally only!
[17:19:15] <tuxmania> Hi all. I am trying to replace 2 lines by 1 in a file. I don't know how to do with sed, awk or another tool to take the carridge return (\n \r ???). How can I do this please?
[17:19:45] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[17:19:48] <Earnest> tuxmania: How does CRLF come into this?  Otherwise you'd use an editor like ed or ex which is most suitable for that
[17:20:15] <Earnest> If you just want to remove CRLF, try dos2unix
[17:20:16] <Soliton> you need to read two lines in to replace them.
[17:20:35] <tuxmania> Soliton, yes exactly
[17:21:01] <Soliton> for example with N in sed or getline, i think, in awk.
[17:21:12] <tuxmania> Earnest: sorry, I did not explain well. I do not have CRLF in file
[17:21:20] <Soliton> maybe you rather want to use a file editor though.
[17:21:28] *** Joins: sinaowolabi_ (~SinaOwola@160.152.135.2)
[17:21:49] <tuxmania> Soliton: maybe a more reliable solution, indeed
[17:21:59] <tuxmania> I will try this way. Thank you both
[17:25:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[17:25:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:27:59] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[17:29:23] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 256 seconds)
[17:29:25] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[17:29:36] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[17:29:41] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:29:44] *** Joins: tejr (~tejr@user/tejr)
[17:30:12] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:a0e8:161:d037:4cae) (Ping timeout: 252 seconds)
[17:32:49] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Quit: Leaving)
[17:37:55] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:38:02] *** Joins: guesswhat46 (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz)
[17:40:02] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[17:40:03] *** Joins: \\Mr_C\\ (~mrc@cpe-75-187-191-230.neo.res.rr.com)
[17:40:12] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[17:40:47] *** Joins: unop (~unop@195.91.20.32)
[17:40:57] *** Quits: guesswhat (~guesswhat@89.177.103.59) (Ping timeout: 256 seconds)
[17:41:00] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:41:09] *** Quits: jimgray (~weechat@user/jimgray) (Quit: jimgray)
[17:42:27] *** Joins: jimgray (~weechat@user/jimgray)
[17:43:07] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[17:43:42] *** Quits: unixman_home (~unixman2@237-104-35-72.mtaonline.net) (Remote host closed the connection)
[17:44:01] *** Joins: unixman_home (~unixman2@237-104-35-72.mtaonline.net)
[17:44:14] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[17:45:48] *** Joins: kj (~kj@beta.aerisnetwork.net)
[17:45:52] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[17:47:00] *** Joins: greycat (~greg@209.142.155.49)
[17:50:21] <Nomikos> is tee called tee because the output splits in 2 (or more) like a T ?
[17:50:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[17:50:42] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[17:51:38] <xmb> cool figure
[17:52:04] <Nomikos> ah, wikipedia says it is
[17:52:15] <grawity> http://man.cat-v.org/unix_8th/1/tee
[17:52:17] *** Quits: masber (~masber@2001:620:808:1200:8000::1e) (Ping timeout: 256 seconds)
[17:52:36] <grawity> "tee - pipe fitting" love the style of old manual pages
[17:56:00] <greycat> It's named after the plumbing tee, yes.
[17:56:33] <greycat> (which in turn is named for its shape, which is the same as a capital T)
[17:56:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:59:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[17:59:54] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 252 seconds)
[17:59:54] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:00:12] <Earnest> Which itself is figured after the shape of a bull's head
[18:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:01:35] <greycat> I think the letter A was supposed to be for cattle, not T.
[18:01:50] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[18:02:15] <Earnest> T is the horns and head, the ox, Tford
[18:02:32] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[18:02:34] <Earnest> At least from greek, maybe A is also ox too
[18:02:42] *** cdown_ is now known as cdown
[18:02:55] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[18:03:08] *** Joins: tejr (~tejr@user/tejr)
[18:05:17] <Earnest> greycat: Seems like aleph is like sideways <| (A)
[18:05:17] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:05:19] <Earnest> Is ox
[18:05:20] *** Joins: et (~et@user/et)
[18:07:16] *** Joins: carl-- (~carl-@185.103.188.130)
[18:09:37] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[18:09:51] *** Quits: tuxmania (~tuxmania@cosium-fo-152-18.fib.nerim.net) (Quit: leaving)
[18:11:32] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[18:18:48] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:ca00:a7f3:60c8:c144:5351)
[18:19:02] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 240 seconds)
[18:19:29] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:24:17] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[18:26:04] *** Joins: masber (~masber@2001:620:808:1200:8000::d)
[18:29:48] *** Joins: sinaowolabi (~SinaOwola@160.152.135.2)
[18:30:24] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[18:30:42] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[18:32:32] *** Quits: Mo (~Mo@dynamic-077-001-065-245.77.1.pool.telefonica.de) (Ping timeout: 240 seconds)
[18:34:44] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[18:34:50] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[18:36:14] <Nod0n[m]> Hi, when doing `arr[$name]=whatever`, is there any reason to do `arr["$name"]=whatever` instead? Second question: when writing scripts, somebody else should be able to read and modify, when do you quote the value that you assign to a variable (`var=asdf` vs `var="asdf"`)?
[18:36:53] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:37:34] <xmb> no, its optional, in var assignments
[18:37:36] <tirnanog> arr[$name]= is fine. as for the second question, it's a matter of taste.
[18:37:44] <Soliton> !quoteoptional
[18:37:44] <greybot> "Double quotes" are optional for the word following 'case', the RHS of simple assignments (e.g. foo=$bar), or inside [[ except for the RHS of =~, =, == or != (e.g. [[ -f $file ]]); "Double quotes" are also optional for substitutions in associative array subscripts ( e.g. declare -A foo; ...; foo[$k]=abc )
[18:40:22] *** Joins: sa0 (~sa0sin@88.120.82.205)
[18:41:35] *** Quits: soham (~soham@115.187.42.72) (Ping timeout: 256 seconds)
[18:42:11] *** Joins: Kyuzo68 (~Kyuzo@host-80-116-148-150.retail.telecomitalia.it)
[18:42:16] <Nod0n[m]> Thank you! For the second question, what is your taste? Can't decide and just looking for some ideas of why doing one over the other...
[18:43:16] <xmb> the quotes take more cpu to parse,
[18:43:26] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:dce3:39ec:6605:20a)
[18:43:26] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:dce3:39ec:6605:20a) (Changing host)
[18:43:26] *** Joins: skapata (~Skapata@user/skapata)
[18:43:27] <tirnanog> one thing I would say is that, where your assigned values contain whitespace - or otherwise rely on some quoting mechanic - quotes are not going to be optional. so, keep it consistent at least.
[18:43:58] <tirnanog> in some editors, syntax highlighting can be affected, which is another potential consideration. otherwise, whatever; you decide.
[18:45:41] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:46:27] *** Joins: Masterphi (~Masterphi@user/masterphi)
[18:46:29] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[18:47:14] *** Quits: xmb (~xmb@178.197.204.248) (Quit: 'se la wii)
[18:47:32] <Soliton> i would usually just quote when necessary and then use the "strongest" quotes possible. i.e. use single quotes unless you need expansions.
[18:48:46] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Remote host closed the connection)
[18:49:11] *** Joins: A|an (~Alan@173.216.48.26)
[18:50:15] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:50:58] <OnlineCop> My PS1 is messed up, and https://mywiki.wooledge.org/BashFAQ/050 doesn't mention a certain edge case: the terminal window's title: `\e]0;...some title text...\a`. I haven't updated that wiki before; should I suggest it at the bottom as a comment, or add a section directly?
[18:51:35] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:51:38] *** a1 is now known as ekaj
[18:51:52] <Nomikos> \e]0; should be \e]0m
[18:52:28] <Nomikos> unless there's .. other numbers following or I don't know enough about it
[18:52:31] <OnlineCop> For colors, it's `\e[0m` but I've seen most PS1 guides mention that for the title, the sequence should actually be `\e]0;`. I'm willing to be wrong.
[18:52:38] <Nod0n[m]> Thank you for your input.
[18:52:45] <Nomikos> yeah ok I'll shut up :)
[18:53:34] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[18:53:35] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:53:36] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[18:53:45] <OnlineCop> I'm curious about the \[ ... \] placement, though. Since the title should be "0-width" like color codes, do I want \[...\] or \001...\002 ? Or is that only when it's coming from a $(function) ?
[18:53:46] <Soliton> what does faq 50 have to do with your prompt?
[18:54:02] <OnlineCop> Whoops: https://mywiki.wooledge.org/BashFAQ/053
[18:54:19] <OnlineCop> I must have typed '050' into the URL, but didn't hit ESC to clear it back to '053'
[18:54:27] <greycat> if part of your PS1 sets the terminal "title", that entire sequence should be enclosed in \[ \[
[18:54:30] *** Joins: richardm645 (~quassel@2600:8801:c507:b200:9474:3644:1364:4bfd)
[18:54:52] *** Quits: john1_ (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[18:55:01] <greycat> the bytes constituting that sequence don't move the cursor
[18:55:02] <OnlineCop> The guide says \[...\] unless it's being set within a function?
[18:55:09] *** Quits: fifihyperbola (~fifihyper@lf2.warkscol.ac.uk) (Quit: Client closed)
[18:55:11] <greycat> *sigh*
[18:55:25] <OnlineCop> I'm fine using \[...\].
[18:55:30] <greycat> First know that people are FUCKING IDIOTS and they overcomplicate everything.  Especially PS1.
[18:55:52] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:56:03] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[18:56:12] <OnlineCop> But would I do this: PS1='\[$(rename_window_func)\]\$ ' ?
[18:56:37] <OnlineCop> I figure that it's better to ask the dumb/obvious questions here, then update the wiki only with correct info. :D
[18:56:42] <greycat> Some of these idiots in particular will try to construct a PS1 that calls a command whose output contains a mixture of regular text, and markup sequences.  If part of your PS1 is DYNAMICALLY GENERATED, whether it be by variable expansion or command substitution or anything else, then you can't use \[ \] in those bits, because \[ \] in an EXPANSION is treated as ordinary data to be displayed.
[18:57:03] <OnlineCop> Got it.
[18:57:16] <greycat> As I read the things that you typed while I was typing, I am starting to fear that you are one of said idiots.
[18:57:18] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:57:24] <OnlineCop> ^ That explanation makes a lot more sense. Maybe the wiki should say it that way.
[18:57:30] <greycat> what does this "rename_window_func" command do?
[18:57:44] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[18:57:48] *** Quits: sinaowolabi (~SinaOwola@160.152.135.2) (Ping timeout: 240 seconds)
[18:58:00] *** Quits: sinaowolabi_ (~SinaOwola@160.152.135.2) (Ping timeout: 250 seconds)
[18:58:14] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:59:08] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:59:09] *** Joins: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net)
[18:59:31] <OnlineCop> I don't know yet. If I added a wiki entry for it, I'd want to include information to prevent people having to come in here to ask stupid questions for clarification. I'd like to just have it already explained to them there.
[18:59:37] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[18:59:46] <OnlineCop> Maybe renames the terminal window according to the current git status.
[19:00:39] <greycat> You have a PS1 that calls a command and you don't know what the command does.
[19:00:50] <justsomeguy> What is the character encoding of strings in bash?
[19:00:58] <greycat> Raw.
[19:01:26] <OnlineCop> You have a wiki entry with `8 PS1='$(active_prompt)\$ '` ;-) Someone's bound to ask questions about how to set PS1 dynamically.
[19:01:29] <greycat> Bash will attempt to decipher the raw bytes of a string as characters according to the current locale you've chosen.  That's it.
[19:03:12] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 250 seconds)
[19:03:18] *** Quits: Kyuzo68 (~Kyuzo@host-80-116-148-150.retail.telecomitalia.it) (Quit: Konversation terminated!)
[19:05:00] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[19:08:19] <Earnest> justsomeguy: (Try to avoid thinking of the shell as having "strings" as you might think of them in python)
[19:08:49] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[19:09:13] *** Joins: frostwork (~frostwork@user/frostwork)
[19:09:30] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[19:10:34] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:11:01] <greycat> unicorn:~$ var='¡Olé!'
[19:11:01] <greycat> unicorn:~$ echo "${#var}"
[19:11:01] <greycat> 5
[19:11:01] <greycat> unicorn:~$ LANG=en_US.iso88591; echo "${#var}"
[19:11:01] <greycat> 7
[19:11:23] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[19:12:12] *** Joins: sinaowolabi (~SinaOwola@160.152.1.201)
[19:12:13] *** Joins: sinaowolabi_ (~SinaOwola@160.152.1.201)
[19:12:51] <OnlineCop> # var='¡Olé!'; echo "${var}: ${#var}"; LANG=en_US.iso88591; echo "${var}: ${#var}"
[19:12:52] <shbot> OnlineCop: ¡Olé!: 7
[19:12:52] <shbot> OnlineCop: ¡Olé!: 7
[19:13:11] <Soliton> you need to use an installed locale.
[19:13:22] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[19:13:33] <greycat> The C locale is always available.
[19:14:13] <greycat> # locale | grep LANG=
[19:14:14] <shbot> greycat: LANG=
[19:14:24] <greycat> ok....
[19:14:45] <Soliton> # var='¡Olé!'; echo "${var}: ${#var}"; LANG=en_US.UTF8; echo "${var}: ${#var}"
[19:14:46] <shbot> Soliton: ¡Olé!: 7
[19:14:46] <shbot> Soliton: ¡Olé!: 5
[19:15:06] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[19:15:40] *** Joins: labrador (~labrador@user/labrador)
[19:15:49] <OnlineCop> Does that mean that printing the hex value of those two strings differs based on LANG?
[19:16:13] *** Joins: zebrag (~chris@user/zebrag)
[19:16:17] <greycat> I don't know what you mean by "printing the hex value".
[19:16:58] <Soliton> what bash considers a character changes not the variable content.
[19:17:01] <greycat> All we demonstrated was that the *length* of the "string" as measured by bash's ${#foo} expansion depends on the locale.
[19:17:04] *** Joins: TomyWork (~TomyLobo@p200300e80f15820044581b6bd1987dd4.dip0.t-ipconnect.de)
[19:17:05] *** docmax_ is now known as docmax
[19:17:09] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:17:25] <noteness> Can someone help me with my bash code? I am very clueless on bash, and wrote some code to print a character if my mic/camera is being used. but it seems like it is nor termininating it's children correctly or something? because sometimes, after a long time of running, it starts using up a lot of resources.
[19:17:28] <noteness> https://www.toptal.com/developers/hastebin/axuzomahox.bash the mic code
[19:17:49] <noteness> https://www.toptal.com/developers/hastebin/iyejevikuq.bash camera code
[19:18:02] <Soliton> !check
[19:18:02] <greycat> checkbot probably can't read that site
[19:18:02] <checkbot> Soliton: Unable to read that :/
[19:18:38] <greycat> someone... *cloned* the hatebin site?  like, on purpose?
[19:18:55] <noteness> they were acquired by toptal it seems
[19:19:07] *** Joins: Minvera (~Minvera@user/Minvera)
[19:19:45] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:20:15] <han-solo> !check https://www.toptal.com/developers/hastebin/raw/axuzomahox.bash
[19:20:16] <checkbot> han-solo: Line 23: read without -r will mangle backslashes. Line 23: dir appears unused. Verify use (or export if used externally). Line 23: file appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb32216 for all 4 issues.
[19:20:26] <han-solo> !check https://www.toptal.com/developers/hastebin/raw/iyejevikuq.bash
[19:20:26] <checkbot> han-solo: Line 23: read without -r will mangle backslashes. Line 23: dir appears unused. Verify use (or export if used externally). Line 23: file appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb32226 for all 4 issues.
[19:21:00] <Soliton> why are you constantly killing and restarting the background loop?
[19:21:15] <Soliton> why do you have the background loop at all?
[19:22:35] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[19:22:40] <noteness> Soliton, the so if i connect a camera for example, it would create a new /dev/videoX device, which wouldn't have been monitored by the inotifywait in video_mon. so i monitor creates in /dev, if a new create happens, kill the background video_mon, and restart, which would include the new device
[19:22:55] *** Joins: tejr (~tejr@user/tejr)
[19:23:02] <noteness> what i think is the way i kill is probably not the correct way.
[19:23:29] <greycat> "I'm writing my own udev in bash using inotify, and ..."
[19:23:45] <Friithian> why kill and restart?
[19:24:01] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Read error: Connection reset by peer)
[19:24:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[19:24:37] *** Joins: jfnrp (~jfnrp@117.214.111.248)
[19:25:38] <noteness> greycat, Can udev help me here? I'm not familiar with bash, udev, etc. Can I use udev instead here as a normal user?
[19:28:03] *** Joins: crised (~crised@200.112.228.40)
[19:28:08] <noteness> Friithian, so basically, in the function, i do inotifywait on all /dev/video*. but if a new camera is connected, it wouldn't have been included in the initial inotifywait. so i kill that background function(?) i called, and restart it again when a new device is created in /dev. and call the function again. so that now, the inotifywait will include the new device too. I am not sure it is the best way, as i said, i am not familiar with this shit at all. i
[19:28:08] <noteness> just duct taped a bunch of code i found in stackoverflow and shit.
[19:28:42] <crised> In a bash script, how do I use a variable value for a sed command?
[19:29:01] <Soliton> preferably not at all.
[19:29:13] <crised> `sed -i -e "s/PLACEHOLDER/$myvalue/g"` is working
[19:29:22] <Soliton> sometimes, sure.
[19:29:22] <Earnest> crised: It doesn't have a mechanism for that, so all uses involve code injection.  Try to find another way
[19:29:40] <Soliton> might also often do what you want it to.
[19:29:44] <Earnest> crised: E.g. If you know the format of your file you can use m4 -DPLACEHOLDER "$myvalue" < input > output
[19:30:13] <Nod0n[m]> should I `nullglob=$(shopt -p nullglob); shopt -s nullglob; do_some_thing; $nullglob` or what would you do to restore nullglob at the end?
[19:30:13] <crised> html
[19:30:14] <Earnest> (m4 recognises syntax, so it may not work consistently given arbitrary inputs)
[19:30:19] *** Quits: phr3ak (~noreply@gnet.hu) (Ping timeout: 256 seconds)
[19:30:28] <Earnest> m4 should be good for html, some random guy does his blogs using it
[19:30:42] <crised> Earnest: Any other way to use the value here?
[19:30:54] <Earnest> crised: Or use xmlstarlet, html-xml-utils, or even XSLT, to generate it properly
[19:31:02] <crised> Why not sed?
[19:31:12] <Earnest> Injection and sed doesn't produce valid html
[19:31:16] <Earnest> Whereas xslt would
[19:31:39] <crised> Earnest: I just to replace PLACEHOLDER->valueofVariable
[19:31:42] <Earnest> That guy using m4 https://chrisman.github.io/9.html
[19:31:46] <Soliton> Nod0n[m]: if you store code in a variable you need to eval it. why do you have no idea if nullglob is set or not?
[19:31:51] <Earnest> crised: You can't "just" do that, there are considerations herte
[19:31:55] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[19:32:05] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[19:32:24] <crised> Earnest: You are telling me that sed cannot replace a string in a file?
[19:32:33] <Earnest> crised: You need to produce valid html, if your output contains '&' then it needs to be entity encoded, etc.  Using sed means that if the input contains sed commands, sed will evaluate it, this is injection
[19:32:44] <Soliton> an arbitrary string you inject into its code? no it cannot.
[19:32:48] <crised> I don't want to produce HTML, the HTML is there.
[19:32:53] <Soliton> just like any other language.
[19:32:53] <Earnest> Did I just get a "So you're saying?" on IRC?
[19:33:32] <Earnest> I'd use a tool that's designed for templating
[19:33:40] <Earnest> And not a stream editor
[19:33:54] <Soliton> # myvalue=date/e#; sed "s/PLACEHOLDER/$myvalue/g" <<< PLACEHOLDER
[19:33:55] <shbot> Soliton: Thu Mar 17 16:03:54 UTC 2022
[19:34:02] <Nod0n[m]> Soliton: In this case it is a snippet, copy pasted into shell, not a script...
[19:34:54] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.4)
[19:35:01] <Earnest> Nod0n[m]: Tell the user in the text above to enable nullglob, even show them how to do it
[19:35:25] <Earnest> (Perhaps even why and why not, link to wooledge about the topic)
[19:36:18] <Earnest> Or design your snippet to not need nullglob
[19:37:16] *** Joins: phr3ak (~noreply@gnet.hu)
[19:37:53] <Nod0n[m]> How could I? https://paste.debian.net/hidden/172d58fb/
[19:38:20] <Earnest> if statements
[19:38:21] <Soliton> noteness: you can check with ps if there are more child processes when the issue happens. from the code you always kill a child before you start another one though. your sk function does not look sensible though.
[19:39:00] <Earnest> Nod0n[m]: E.g. In this specific case you can check if the zeroth element points to a file
[19:39:04] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[19:39:13] <Earnest> In the array war_files[0]
[19:39:19] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:39:38] <Earnest> Nod0n[m]: You can also avoid regex in the initial set by using a case statement
[19:40:11] <Nod0n[m]> [[ -f ${f} ]] && cp -a "${f}" "${i}/webapps/${f##*/}"
[19:40:14] <Nod0n[m]> (?)
[19:40:41] <Earnest> Nod0n[m]: E.g. case: https://0x0.st/oNoo.txt
[19:41:06] <Nod0n[m]> Oh I like that case. 🙂
[19:41:27] <Earnest> Nod0n[m]: And yes, check the file exists.  Also if you're exposing variables directly to commands like cp, make sure you guard them with --
[19:41:56] <Nod0n[m]> oh yes, I forgott about that!
[19:42:02] <Nod0n[m]> thank you!
[19:42:40] <Soliton> you don't need declare -a, btw.
[19:43:19] <Earnest> Nod0n[m]: https://0x0.st/oNoP.txt here is what I might do
[19:43:38] <Earnest> Nod0n[m]: There's no point in checking array length, the for loop will essentially no-op if it is empty
[19:43:53] <Earnest> Nod0n[m]: In fact
[19:44:20] <Nod0n[m]> Ah right. This is some leftover of a different version^^. thank you!
[19:44:21] <Earnest> Nod0n[m]: There's no point in even storing an array there, just loop over the glob directly: https://0x0.st/oNoZ.txt
[19:45:06] <Soliton> you can also loop over the instances glob directly.
[19:45:14] <Earnest> Yeah, I was about to suggest
[19:45:20] <Earnest> The entire thing can be lifted out
[19:45:30] <Soliton> probably no need for bash at that point.
[19:45:45] <Nod0n[m]> what?
[19:45:57] <Soliton> which is probably a plus if you want to paste that into random shells.
[19:45:57] <Earnest> Nod0n[m]: That you could use sh
[19:46:41] <Nod0n[m]> It's running on bash anyways.
[19:48:24] <Earnest> Nod0n[m]: I.e. for inst in /usr/local/tomcat/*_bck/webapps/*war; do ...; done where ... filters out the template backup and bck bits, usually by inverting match so: case $foo in match) ;; *) do stuff; esac
[19:49:01] <Earnest> If bash could use extglob to filter it in the for loop expansion directly
[19:49:18] <Nod0n[m]> I need the list of instances at other places to. The instances snippet is used in multiple occasions.
[19:49:21] <Earnest> (Although I don't think extglob can express bck$)
[19:49:27] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:49:38] <Earnest> Nod0n[m]: Fair enough, but you can see
[19:50:17] <Soliton> why do you do this snippet thing? why not write a function for it at least?
[19:50:45] <Nod0n[m]> people can just click the copy button in the wiki and then paste on shell...
[19:51:02] <Earnest> :(
[19:51:20] <Earnest> Such is the way things are
[19:52:52] <Soliton> weird stuff
[19:53:11] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[19:53:12] <Earnest> It's probably like the archwiki where people often provide small examples
[19:54:17] <Soliton> and you know everyone uses bash and they just want to do this one time?
[19:54:54] <Nod0n[m]> yes^^
[19:55:03] <Earnest> They can at least be pretty explicit about it being for bash
[19:55:11] <Earnest> And just assume some charity to the reader
[19:55:23] <Nod0n[m]> they might want to do it in the future again, but I can't deploy scripts to the servers...
[19:55:37] <Earnest> Right there is where you should focus attention
[19:55:44] <Soliton> because that would be too easy?
[19:55:55] <Earnest> "I can't do xyz, so I'm doing some workaround".  Don't forget to solve xyz when you can
[19:56:03] <Earnest> Otherwise workarounds become permanent
[19:56:07] <Nod0n[m]> I'll add some [[ $SHELL =~ bash$ ]] || { printf 'not bash!' >&2; exit 1 }
[19:56:38] <Nod0n[m]> They have planned to go to a deployment strategy for the future, they are not there right now...
[19:56:40] <Soliton> SHELL has little to do with the running shell.
[19:56:54] <Nod0n[m]> really?
[19:56:58] <Earnest> I don't personally advocate for polishing workarounds, the worse the better, because it might eventually promot proper fix ._.
[19:57:05] <Earnest> Nod0n[m]: Yeah, not useful for this
[19:57:12] <Soliton> SHELL is the configured login shell.
[19:57:19] <Earnest> bash has some variables you could use, but I wouldn't bother
[19:57:30] <Nod0n[m]> LOL
[19:58:56] *** Joins: jensen (~jensen@65.78.100.184)
[19:59:57] *** Quits: dsrt^ (~dsrt@65.240.140.18) (Remote host closed the connection)
[20:01:16] <blei> hi
[20:01:28] <blei> what was the joke?
[20:04:44] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[20:05:01] <tirnanog> there wasn't one.
[20:06:03] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[20:06:10] <OnlineCop> Does `find` allow me to provide different `-maxdepth` to different paths? I didn't see mention on http://mywiki.wooledge.org/UsingFind.
[20:06:13] <OnlineCop> !find
[20:06:14] <greybot> http://mywiki.wooledge.org/UsingFind
[20:07:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:08:02] <greycat> OnlineCop: -path '*/*/*' -prune  and so on.  It will be atrocious.
[20:09:11] <OnlineCop> Prune on the paths I want to keep, or the paths I want max depths on?
[20:09:27] *** Joins: shad (~shad@user/shad)
[20:09:32] <OnlineCop> I'm trying `find /path1 -maxdepth 2 /path2 /path3 /path4 -maxdepth 3 -type f -exec ... \;` but it says "paths must precede expression: `/path2'" and "possible unquoted pattern after predicate `-maxdepth'?"
[20:09:58] <greycat> you forgot the /* bits
[20:10:19] *** Joins: thiras (~thiras@user/thiras)
[20:10:21] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:10:27] <greycat> oh, no, you just ignored what I said and went back to what you were doing BEFORE you asked the question
[20:10:37] <OnlineCop> I was typing that before I saw your message, actually.
[20:10:50] <twkm> you can't apply -maxdepth to specific paths.
[20:10:58] <OnlineCop> Ah.
[20:11:13] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Remote host closed the connection)
[20:11:34] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[20:11:35] <twkm> once you start using primaries no more paths are accepted.
[20:12:26] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 245 seconds)
[20:12:34] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[20:14:51] *** Quits: crised (~crised@200.112.228.40) (Quit: Leaving.)
[20:19:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:19:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:21:10] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[20:23:19] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[20:24:47] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Client Quit)
[20:26:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[20:26:34] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:27:11] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[20:27:26] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[20:27:26] *** Joins: iliv (~iliv@user/iliv)
[20:30:12] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[20:33:20] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Ping timeout: 252 seconds)
[20:35:26] *** Quits: kdc (~kdc@196.211.197.133) (Quit: Leaving)
[20:38:24] *** Joins: magla (~gelignite@d5364d83.access.ecotel.net)
[20:38:59] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:39:37] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:39:58] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[20:41:02] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:41:30] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:42:08] *** Joins: seninha (~chatzilla@user/seninha)
[20:42:51] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:43:01] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[20:43:11] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[20:43:32] *** Quits: StathisA_ (~StathisA@ppp-94-66-225-211.home.otenet.gr) (Ping timeout: 240 seconds)
[20:46:34] *** Joins: cart_ (~cart@109.249.184.191)
[20:46:47] *** Joins: StathisA (~StathisA@178-147-14-19.haap.nym.cosmote.net)
[20:47:43] *** Quits: greknod (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[20:48:17] *** Joins: tijuco (~tijuco@user/tijuco)
[20:49:09] *** Joins: greknod (~grek@120.88.171.98)
[20:52:25] *** Quits: TomyWork (~TomyLobo@p200300e80f15820044581b6bd1987dd4.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:52:32] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[20:54:19] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:5cca:aa73:a158:2834) (Ping timeout: 250 seconds)
[20:55:47] *** Quits: jfnrp (~jfnrp@117.214.111.248) (Remote host closed the connection)
[20:57:46] *** Joins: Kyuzo68 (~Kyuzo@host-80-116-148-150.retail.telecomitalia.it)
[20:58:42] *** Joins: Mo (~Mo@dynamic-077-001-065-245.77.1.pool.telefonica.de)
[20:59:39] *** Joins: roadie` (~user@2a02:8108:5a40:1d87:51ec:827b:4a24:d15f)
[20:59:47] *** Joins: Xanthaos (~ke4nhw@user/ke4nhw)
[21:00:30] *** Parts: Xanthaos (~ke4nhw@user/ke4nhw) ()
[21:01:02] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 240 seconds)
[21:02:16] *** Joins: Betal (~Betal@user/betal)
[21:02:54] *** bboles_ is now known as bboles
[21:03:03] *** Quits: roadie (~user@2a02:8108:5a40:1d87:a1ef:afc1:26dc:c3d4) (Ping timeout: 252 seconds)
[21:03:20] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[21:05:35] *** Joins: StathisA_ (~StathisA@178-147-14-19.haap.nym.cosmote.net)
[21:06:32] *** Quits: StathisA (~StathisA@178-147-14-19.haap.nym.cosmote.net) (Ping timeout: 240 seconds)
[21:06:51] *** Quits: jgrossholtz (~Julien@249.164.25.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:06:55] *** Joins: jgrossholtz_ (~Julien@249.164.25.93.rev.sfr.net)
[21:08:22] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[21:08:51] *** Quits: unop (~unop@195.91.20.32) (Remote host closed the connection)
[21:09:05] *** Quits: masber (~masber@2001:620:808:1200:8000::d) (Quit: Client closed)
[21:09:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:09:55] *** Quits: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net) (Remote host closed the connection)
[21:11:02] *** Quits: cart_ (~cart@109.249.184.191) (Ping timeout: 240 seconds)
[21:25:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[21:29:40] *** Quits: Mo (~Mo@dynamic-077-001-065-245.77.1.pool.telefonica.de) (Ping timeout: 250 seconds)
[21:30:35] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[21:30:42] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[21:31:08] *** Joins: eck (~root@user/eck)
[21:31:30] *** Joins: Enissay (~Enissay@user/enissay)
[21:33:57] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[21:34:00] *** Joins: CodePoint (~jonathan@2607:fb90:c69:64e:11dc:1c88:ffd2:77df)
[21:37:10] *** Joins: KevinX (~KevinX@user/KevinX)
[21:39:11] *** Quits: maryo_87 (~Maryo@user/maryo) (Quit: Leaving)
[21:41:33] *** Quits: CodePoint (~jonathan@2607:fb90:c69:64e:11dc:1c88:ffd2:77df) (Ping timeout: 252 seconds)
[21:42:17] *** Quits: Kyuzo68 (~Kyuzo@host-80-116-148-150.retail.telecomitalia.it) (Quit: Konversation terminated!)
[21:50:15] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[21:51:01] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 240 seconds)
[21:54:03] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:59:44] *** Quits: wedwards (~wedwards@46.44.154.209) (Quit: Textual IRC Client: www.textualapp.com)
[22:00:05] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[22:06:41] *** Inline__ is now known as Inline
[22:06:51] *** Quits: Inline (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de) (Quit: Leaving)
[22:08:53] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[22:10:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[22:10:43] *** Quits: sinaowolabi (~SinaOwola@160.152.1.201) (Read error: No route to host)
[22:11:02] *** Quits: StathisA_ (~StathisA@178-147-14-19.haap.nym.cosmote.net) (Ping timeout: 240 seconds)
[22:11:27] *** Joins: StathisA (~StathisA@178-147-93-218.haap.nym.cosmote.net)
[22:13:12] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[22:13:52] *** Quits: sinaowolabi_ (~SinaOwola@160.152.1.201) (Ping timeout: 250 seconds)
[22:17:18] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[22:18:12] *** Joins: justAstache (~justache@user/justache)
[22:18:42] *** Quits: firewyre- (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Quit: ZNC - https://znc.in)
[22:19:14] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[22:21:09] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[22:21:48] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[22:23:25] *** Quits: guesswhat46 (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz) (Quit: Client closed)
[22:24:13] *** Joins: ChmEarl (~chmearl@user/chmearl)
[22:24:51] *** Quits: iomari891 (~iomari891@197.210.76.112) (Ping timeout: 256 seconds)
[22:28:07] *** Quits: drewlander (~drewlande@74.196.20.3) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[22:28:08] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:28:23] *** Joins: osXnut (~osXnut@77.125.126.151)
[22:28:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:31:19] *** Joins: drewlander (~drewlande@74.196.20.3)
[22:31:45] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:1971:b69a:3f2f:7c6d)
[22:32:36] *** Joins: sudomann (~sudomann@98.219.211.182)
[22:33:10] *** Joins: crashrep (~crashrep@user/crashrep)
[22:38:11] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:38:48] *** Joins: Inline (~Inline@p200300cd470bec006530e405655b2087.dip0.t-ipconnect.de)
[22:40:02] *** Joins: aidalgol_ (~aidalgol@user/aidalgol)
[22:40:09] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 256 seconds)
[22:42:34] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[22:43:54] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[22:44:28] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:1971:b69a:3f2f:7c6d) (Read error: Connection reset by peer)
[22:44:59] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:45:49] *** Joins: darkbit (~db@152.32.100.99)
[22:46:18] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:46:54] *** Joins: cart_ (~cart@2a00:23c4:2b81:5401:b86b:a5ff:8c43:249c)
[22:47:56] *** Quits: cart_ (~cart@2a00:23c4:2b81:5401:b86b:a5ff:8c43:249c) (Client Quit)
[22:48:11] *** Joins: cart_ (~cart@2a00:23c4:2b81:5401:b86b:a5ff:8c43:249c)
[22:49:14] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[22:49:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[22:53:45] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 256 seconds)
[22:54:01] *** aidalgol_ is now known as aidalgol
[22:55:27] *** Joins: joo-_ (~joo-_@87-49-147-204-mobile.dk.customer.tdc.net)
[22:55:27] *** Quits: joo-_ (~joo-_@87-49-147-204-mobile.dk.customer.tdc.net) (Changing host)
[22:55:27] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[22:59:25] *** Quits: jlj (~jlj@cpc77371-stav19-2-0-cust1487.17-3.cable.virginm.net) (Ping timeout: 240 seconds)
[22:59:49] *** Joins: sudomann (~sudomann@98.219.211.182)
[23:02:31] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[23:03:38] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[23:03:43] *** Joins: cdown_ (~cdown@188.214.11.14)
[23:05:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 240 seconds)
[23:06:08] *** cdown_ is now known as cdown
[23:09:17] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[23:09:23] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[23:10:07] <ash_worksi> is there a "this letter is optional" special character in find's `-name` option?
[23:11:19] <larryv> no
[23:12:56] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:13:21] <ash_worksi> k
[23:13:22] <ash_worksi> thanks
[23:14:06] <Earnest> ash_worksi: Have multiple -name's instead
[23:14:29] <ash_worksi> yeah
[23:15:17] *** Quits: cart_ (~cart@2a00:23c4:2b81:5401:b86b:a5ff:8c43:249c) (Ping timeout: 240 seconds)
[23:17:18] <greycat> \( -name 'foo*' -o -name 'fomo*' \)
[23:17:50] *** Joins: yustin (~yustin@user/yustin)
[23:18:12] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[23:20:11] *** Joins: wurstwasser (~frank.hol@2001:a61:3553:801:db7b:e3f3:d25e:f375)
[23:20:22] *** Joins: unop (~unop@195.91.20.32)
[23:22:39] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 256 seconds)
[23:22:55] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 240 seconds)
[23:23:17] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 240 seconds)
[23:24:35] *** Joins: joo-_ (~joo-_@80-62-117-94-mobile.dk.customer.tdc.net)
[23:24:35] *** Quits: joo-_ (~joo-_@80-62-117-94-mobile.dk.customer.tdc.net) (Changing host)
[23:24:35] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[23:25:37] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[23:26:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:27:24] *** Joins: blei (~blei@user/blei)
[23:28:37] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[23:29:10] *** Quits: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:29:35] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[23:29:51] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:30:59] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[23:31:50] *** Joins: jkwnki (~jkwnki@p2e57985d.dip0.t-ipconnect.de)
[23:32:43] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:33:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[23:33:47] *** Joins: Everything (~Everythin@37.115.210.35)
[23:33:59] *** Lord_of_Life_ is now known as Lord_of_Life
[23:37:49] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[23:41:04] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:f87e:42e6:dc86:d5cf)
[23:42:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:42:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:44:45] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:46:00] <jensen> i have a script that uses a small program called "utimer" which simply exits 0 after a certain time duration passed. i want the script to conditionally run in the background depending on options passed. the problem i'm encountering is killing the script (kill <script's $$>) won't kill the script unless i kill utimer's pid. i simplified the script to its most basic form, any ideas?
[23:46:02] <jensen> https://0x0.st/oNH_.txt
[23:46:58] <greycat> When bash is running a command, and you send it a signal which is trapped, the trap doesn't run until the command finishes.
[23:47:45] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[23:47:56] <greycat> If you need immediate trappage, run the command in the background, and then run "wait" in the foreground.  Bash will allow "wait" to be interrupted.
[23:49:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:52:02] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[23:52:32] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[23:52:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[23:53:22] <jensen> thank you
[23:53:58] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[23:54:45] <geirha> Also, I'd remove INT HUP and TERM from that trap. EXIT is enough
[23:55:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:59:26] <jensen> ok
[23:59:45] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
