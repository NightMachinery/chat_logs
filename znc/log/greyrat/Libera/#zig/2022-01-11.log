[00:00:19] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:01:41] <Seng> yeah, as far as I have understood the self thing is just syntactic sugar for calling that function with the instance of the struct as the first parameter. So equal behviour is expected :)
[00:05:06] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:05:23] *** Quits: phaleth (~user@user/phaleth) (Quit: phaleth)
[00:16:26] *** Quits: nurbl (~jofo@c83-252-92-24.bredband.tele2.se) (Ping timeout: 256 seconds)
[00:19:31] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Quit: WeeChat 3.3)
[00:21:47] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:25:15] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:26:00] *** Parts: bmp (b6cc5e8850@2604:bf00:561:2000::184) ()
[00:27:09] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:56] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:35:34] <Seng> What's the philosophy on what's to put in the stdlib and what should come from packages?
[00:36:01] <ifreund> Seng: it's not been full decided, the std is not a priority yet.
[00:36:14] <ifreund> not until the self hosted compiler and language have stablized
[00:38:51] <Seng> Is this simply a matter of priorities or because it, for example, takes too much effort rewriting a larger stdlib?
[00:39:00] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:39:43] <ifreund> just a matter of priorites
[00:53:25] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[01:02:30] <Seng> Can I declare a slice and not an array directly to a variable?
[01:05:29] <Seng> The most clean I can find is to declare a variable with a dereferenced string, but I'd still have to slice it when passing it to a function taking a []u8 parameter
[01:13:40] <Franciman> Seng: https://godbolt.org/z/va5rGb9WG
[01:13:44] <Franciman> basically
[01:13:57] <Franciman> const x: []const u8 = &[_]u8 { 1 , 2, 3 }
[01:14:40] <Seng> can I get rid of the const? :)
[01:14:46] <Franciman>  this i don't knowT!
[01:14:57] <Franciman> i think not for a simple reason
[01:15:04] <Franciman> [_]u8 {1, 2, 3}
[01:15:13] <Franciman> is a literal, and is the array to which you refer
[01:15:14] <Franciman> ok?
[01:15:21] <Franciman> so it basically is like a string literal
[01:15:37] <Franciman> you can't modify it, because of its particular status. I think it gets saved in the .data fragment of the program
[01:15:44] <Franciman> if you do
[01:15:52] <Franciman> var arr = [_] u8 {1 , 2 , 3 }
[01:15:56] <Franciman> it gets saved on the stack, instead
[01:16:03] *** Quits: Piraty (~irc@user/piraty) (Quit: -)
[01:16:10] <Franciman> i mean, the litearl is always in the data fragment of the program
[01:16:13] *** Joins: Piraty (~irc@user/piraty)
[01:16:13] <Franciman> but then you copy it on the stack
[01:16:17] <Franciman> and thus you can update it
[01:16:26] <Franciman> but please, really. Let us wait for the knowledgeables
[01:16:37] <Seng> So it's const/var that determines whether it goes to stack or .data?
[01:16:48] <Franciman> no, 
[01:16:54] <Franciman> literals are in the .data
[01:16:56] <Franciman> ok?
[01:16:58] <Franciman> if you do
[01:17:04] <Franciman> const x = [_]u8 {1, 2, 3}
[01:17:15] <Franciman> you copy it on the stack (potentially, up to zig optimisations)
[01:17:18] <Franciman> the problem is that
[01:17:21] <Franciman> you are doing:
[01:17:42] <Franciman> const: []const u8 = & <PLEASE SEE THIS &> [_]u8 {1, 2, 3 }
[01:17:45] <Franciman> what it is doing is:
[01:17:54] <Franciman> take the slice of the literal
[01:17:59] <Franciman> and put it into arr
[01:18:14] <Franciman> ops, it's: const arr: []const u8 = ....
[01:18:33] <Franciman> so you take a pointer to a literal
[01:18:37] <Franciman> and put it in the variable
[01:18:42] <Franciman> the pointer is saved on the stack
[01:18:44] <Franciman> you can also do
[01:19:10] <Franciman> https://godbolt.org/z/PbWGo13oj
[01:19:14] <Franciman> ^- note i used var
[01:19:17] <Franciman> it doesn't change
[01:19:27] <Franciman> you can't get rid of the []const u8
[01:19:41] <Franciman> it's because you are taking the address of a literal, which is a constant
[01:19:43] <Franciman> value
[01:20:01] <Franciman> it's the literal that is always saved in the .data
[01:22:49] <freshcoffee> Seng: which "const" do you want to get rid of? there's two of 'em :)
[01:24:20] <Franciman> the one you cna't get rid :D
[01:24:47] <Seng> I want this behavior; https://godbolt.org/z/h8Garb56r
[01:25:01] <Seng> just with line 5 and 6 being a single line.
[01:25:10] <Seng> That's all :) 
[01:25:17] <Seng> I'm lazy <3
[01:26:05] <ifreund> just use an array and pass &foo instead of foo when you are wanting to have a slice instead
[01:27:07] <ifreund> temporaries such as the array in `const x: []const u8 = &[3]u8{1, 2, 3};` are always const
[01:27:34] <Franciman> ifreund: are they saved in the .data segment?
[01:28:42] <freshcoffee> I mean if all you want to do is simplify that example, then `var slice: []const u8 = "123";`
[01:29:00] <ifreund> that's an implementation detail of the compiler, not part of the language spec
[01:29:03] <Franciman> freshcoffee: iiuc they want to modify the string
[01:29:03] <ifreund> but yeah probably
[01:29:11] <Franciman> wait wwwwait is there a spec?
[01:29:35] <freshcoffee> oh sorry I missed line 7. yeah you want to modify.
[01:32:19] <Seng> freshcoffee, he got awfully quiet when you asked to the spec :)
[01:32:48] <Seng> freshcoffee, yeah, the modify part is what's my goal. 
[01:33:34] <Seng> Actually I would just like to run my tests with the test input, being []u8, inlined in the call to the function not having to do acrobatics before passing it in.
[01:33:51] <Franciman> i have been thinking about having another implementation of zig
[01:33:52] <Franciman> for fun
[01:34:04] <Franciman> a spec would be nice
[01:34:11] <freshcoffee> i think a while ago there was some discussion about one-liner to mean "copy" and "slice" for mutability of the data and I can't remember how it got resolved but I'm guessing that it hides too much of what is being done
[01:35:20] <ifreund> Seng: "awfully quiet" == not replying for 3 whole minutes? I don't spend *every* second of my time in my IRC client...
[01:35:31] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:35:32] <freshcoffee> what! why not!
[01:35:40] <Seng> I do nothing but stare at my chat window ._.
[01:35:55] <Franciman> ifreund: very bad ahahahaha xd
[01:36:02] <ifreund> Franciman: there is no complete spec yet, there will be one well before the 1.0 release
[01:36:05] <Franciman> or very good tbf
[01:36:16] <Franciman> nice
[01:36:58] <ifreund> until there is a fairly stable language spec, I'd recommend contributing to the stage2 zig compiler rather than starting an alternative implementaiton
[01:37:19] <ifreund> even if you intend to start your own later, you'll learn a lot that will help you achieve that goal
[01:37:27] <Seng> ifreund, just to be clear, I was joking about being "awfully quiet". I have no expectation to anyone being there for me "right now" (or ever for that matter).
[01:37:32] <Franciman> oh ofc, it was just an idea for the future, not for now :D
[01:37:38] <Franciman> now it's a bit ludicrous
[01:37:38] <ifreund> Seng: no worries :P
[01:37:51] <Franciman> i'd love to help
[01:37:54] <Franciman> really a lot
[01:38:06] <Franciman> i don't think i'm competent enough, though
[01:38:13] <Seng> ^ +1
[01:38:21] <freshcoffee> andrewrk: Scaleway and M1 for CI. ooh nice. Let me know if you have < 5 mins to chat about it. I'm on discord if privat is better there
[01:41:25] <Franciman> let's see what i can help with for stage2
[01:41:40] <Franciman> ifreund: sorry to bother again, is there a roadmap somewhere? Or open isseus are the chief way to know?
[01:42:27] <ifreund> Franciman: https://github.com/ziglang/zig/issues?q=is%3Aopen+is%3Aissue+label%3A%22contributor+friendly%22+label%3Astage2
[01:42:38] <ifreund> ^ contributor friendly issues about stage2
[01:43:21] <Franciman> thanks
[01:56:01] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[02:00:08] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[02:03:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[02:18:59] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:26:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:33:09] *** Joins: pkap (~pkap@193.32.127.225)
[02:34:21] <Seng> I made a thing! https://github.com/bdoner/zig-permutate
[02:34:52] <Seng> It's five past midnight, and I gotta work tomorrow.. So I better sign off for today! later :)
[02:38:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[02:39:01] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[02:39:54] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[02:43:03] *** Quits: pkap (~pkap@193.32.127.225) (Ping timeout: 256 seconds)
[02:44:22] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Remote host closed the connection)
[02:45:56] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:56:09] *** Parts: nomagno (~nomagno@2001:470:69fc:105::c1f0) ()
[03:01:22] *** Quits: Snetry (~snetry@ipservice-092-209-148-073.092.209.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[03:11:17] *** Joins: Snetry (~snetry@dslb-146-060-142-064.146.060.pools.vodafone-ip.de)
[03:20:36] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[03:26:13] *** Quits: _Vi (~vi0oss@2a0d:7c40:3000:1326::3) (Ping timeout: 240 seconds)
[03:26:51] *** Joins: user (~user@62.216.61.67)
[03:27:04] *** Parts: user (~user@62.216.61.67) ()
[03:27:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[03:39:09] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[03:40:13] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cb46:c04b:665a:c687) (Ping timeout: 240 seconds)
[03:45:54] *** Joins: kron (~weechat@user/qaph)
[03:49:33] *** Joins: livoreno (~livoreno@user/notzmv)
[03:51:08] *** Joins: isolier3987495 (~isolier@174.31.13.161)
[03:53:19] *** Quits: isolier398749 (~isolier@174.31.22.17) (Ping timeout: 256 seconds)
[04:03:00] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:04:59] *** Quits: l1x (uid1954@id-1954.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:05:59] *** Joins: notzmv (~zmv@user/notzmv)
[04:12:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[04:41:38] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:87d8:fa0a:4d3d:df57)
[05:09:29] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:48:28] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:87d8:fa0a:4d3d:df57) (Ping timeout: 268 seconds)
[05:58:05] *** Joins: neurocyte09175 (~neurocyte@user/neurocyte)
[06:00:15] *** Quits: neurocyte0917 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:00:15] *** neurocyte09175 is now known as neurocyte0917
[06:06:13] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Read error: Connection reset by peer)
[06:06:45] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[06:29:08] *** Joins: rgrinberg (~textual@187.223.71.231)
[06:47:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:11:11] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:26:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[07:30:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[07:32:46] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:35:27] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:53:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[08:06:02] *** Parts: Tekk (~tekk@193.27.13.201) (Leaving)
[08:07:45] *** Quits: haze (~haze@cpe-68-174-143-88.nyc.res.rr.com) (Ping timeout: 256 seconds)
[08:08:20] *** Joins: haze (~haze@2603-7000-a300-1741-74f3-a9f4-80ea-c407.res6.spectrum.com)
[08:21:17] *** Quits: moog (~moog@107.126.53.103) (Remote host closed the connection)
[09:06:50] *** Quits: tsmanner_ (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net) (Ping timeout: 256 seconds)
[09:26:14] *** Joins: phaleth (~user@user/phaleth)
[09:31:27] *** Joins: aKriJcz (~jirka@mail.tcz.cz)
[10:00:02] *** Quits: truemedian (~truemedia@47-211-197-23.bcstcmta05.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[10:26:24] *** Quits: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:28:26] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[10:36:09] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[10:36:09] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[10:39:24] *** Joins: Erutuon (~Erutuon@user/erutuon)
[10:43:24] *** Joins: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de)
[10:43:54] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[10:51:30] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[10:51:31] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[10:52:11] *** Quits: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de) (Quit: anthon)
[10:52:38] *** Joins: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de)
[11:00:37] *** Quits: rom1504 (rom1504@rom1504.fr) (Ping timeout: 240 seconds)
[11:01:43] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[11:02:47] *** Joins: rom1504 (rom1504@rom1504.fr)
[11:06:06] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[11:06:06] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[11:09:25] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[11:11:04] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[11:20:29] *** Quits: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:20:55] *** Joins: h4ze (~haze@cpe-68-174-143-88.nyc.res.rr.com)
[11:22:05] *** Quits: haze (~haze@2603-7000-a300-1741-74f3-a9f4-80ea-c407.res6.spectrum.com) (Ping timeout: 268 seconds)
[11:22:05] *** h4ze is now known as haze
[11:24:51] *** Joins: anthon (~Thunderbi@p2e52aa21.dip0.t-ipconnect.de)
[11:37:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[11:45:14] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:58:17] *** Quits: danderson (~dave@tailscale/danderson) (Ping timeout: 240 seconds)
[11:59:52] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyvx7r8au7kuyx7.ipv6.telus.net)
[12:00:35] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl)
[12:01:42] *** Quits: rgrinberg (~textual@187.223.71.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:09:10] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[12:09:10] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[12:13:05] *** Joins: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b)
[12:19:55] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[12:21:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[12:24:34] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[12:24:47] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[12:27:25] *** Quits: hiljusti (~hiljusti@2601:600:c681:23b0:960b:7cc3:3849:e69b) (Ping timeout: 240 seconds)
[12:30:59] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[12:30:59] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[12:42:06] *** Quits: neurocyte0917 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[12:42:57] *** Joins: danderson (~dave@tailscale/danderson)
[12:43:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:44:49] *** Joins: neurocyte0917 (~neurocyte@user/neurocyte)
[12:53:02] *** Joins: xd1le (~xd1le@user/xd1le)
[12:57:26] *** Quits: philtor (~philtom@50.53.105.83) (Ping timeout: 245 seconds)
[13:00:48] *** Joins: shimonaga (~shimonaga@199.58.81.203)
[13:00:48] *** Quits: shimonag1 (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[13:11:12] *** Joins: pkap (~pkap@185.209.196.174)
[13:15:13] *** Joins: earnestly (~earnest@user/earnestly)
[13:20:14] *** Joins: shimonag1 (~shimonaga@199.58.81.203)
[13:20:14] *** Quits: shimonaga (~shimonaga@199.58.81.203) (Read error: Connection reset by peer)
[13:25:05] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[13:34:18] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 256 seconds)
[13:40:08] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[13:47:33] *** Joins: philtom (~philtom@50.53.105.83)
[13:53:47] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyvx7r8au7kuyx7.ipv6.telus.net) (Ping timeout: 268 seconds)
[13:55:23] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:4f29:e68c:50c9:fe2)
[13:59:30] *** Joins: l1x (uid1954@id-1954.tinside.irccloud.com)
[14:00:37] *** Quits: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d455) (Ping timeout: 240 seconds)
[14:01:20] *** Joins: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d455)
[14:01:31] *** Joins: _Vi (~vi0oss@2a0d:7c40:3000:1326::3)
[14:10:47] *** Joins: Guest5748 (~Guest57@2a02:8071:191:2100:9547:8d26:1440:e991)
[14:11:27] *** Parts: Guest5748 (~Guest57@2a02:8071:191:2100:9547:8d26:1440:e991) ()
[14:12:08] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:12:57] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyzdcwi6kb6gwev.ipv6.telus.net)
[14:14:58] <pkap> The docs mentions anonymous structs as tuples. Can I have a tuple as a return value somehow? I mean like tuple unpacking in Python.
[14:15:38] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:18:47] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[14:23:01] *** Joins: terminalpusher (~terminalp@2a01:586:946:1:67a:7d5f:5461:5559)
[14:26:44] <squeek502> pkap, it's an accepted proposal: https://github.com/ziglang/zig/issues/498#issuecomment-440521357
[14:28:02] <squeek502> sorry, *was* accepted, not sure of the status now
[14:28:56] <pkap> Thanks, I read through it.
[14:36:13] <ifreund> pkap, squeek502: Allowing tuple types to be defined is accepted: https://github.com/ziglang/zig/issues/4335
[14:36:44] <ifreund> It's not entirely clear if we will have destructuring or not yet though
[14:38:07] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[14:49:55] <pkap> Ah nice. In the meantime, I guess it's best to make a custom struct as return type for every function I want to return to values of?
[14:50:01] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyzdcwi6kb6gwev.ipv6.telus.net) (Remote host closed the connection)
[14:50:24] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyywvaltmwy9z87z.ipv6.telus.net)
[14:50:55] <pkap> Or maybe somehow with a generic e.g. `Pair(type1, type2)`?
[15:02:02] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyywvaltmwy9z87z.ipv6.telus.net) ()
[15:15:55] <ifreund> pkap: I'd just use a separate struct type for functions you wish to return multiple values from
[15:16:10] <ifreund> I think a generic is overengineering here
[15:17:24] <Franciman> is there any intent in having concepts
[15:17:26] <Franciman> for genercs?
[15:17:28] <Franciman> generics*
[15:18:30] <Franciman> dumb example: fn find(comptime A: type, comptime It: InputIteratorType(A), begin: It, end: It, value: A) bool
[15:19:18] <ifreund> Franciman: there have been various proposals if you search through the issue tracker, none seem likely to get accepted thus far though 
[15:19:58] <Franciman> ah yes, I mean is there any... how to say, philosophical reason to avoid them
[15:20:08] <Franciman> or is it just a matter of having the right proposal?
[15:20:51] <ifreund> they would have to provide significant value to the language without introducing complexity
[15:21:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[15:21:44] <ifreund> zig highly values simplicity, so there's a high bar for new language features to pass
[15:22:56] <Franciman> very well
[15:28:28] <pkap> ifreund: Ok, thanks!
[15:31:27] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 256 seconds)
[15:35:37] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[16:05:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[16:05:56] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:17:25] *** Quits: terminalpusher (~terminalp@2a01:586:946:1:67a:7d5f:5461:5559) (Remote host closed the connection)
[16:18:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:33:13] *** Quits: pkap (~pkap@185.209.196.174) (Ping timeout: 256 seconds)
[16:39:28] *** Joins: Dko1905 (~Dko1905@5.103.140.28.static.fibianet.dk)
[16:46:28] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:49:46] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[16:59:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:04:27] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[17:08:21] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[17:09:14] *** Joins: kron (~weechat@user/qaph)
[17:11:20] *** Quits: Snetry (~snetry@dslb-146-060-142-064.146.060.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:12:32] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[17:16:33] *** Joins: Snetry (~snetry@dslb-188-101-117-082.188.101.pools.vodafone-ip.de)
[17:18:07] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[17:20:35] *** Joins: gwizon (~gwizon@ool-45798cb0.dyn.optonline.net)
[17:22:12] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:26:29] *** Quits: aKriJcz (~jirka@mail.tcz.cz) (Remote host closed the connection)
[17:28:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[17:30:40] *** Joins: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[17:31:00] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:31:30] *** Joins: nyah (~nyah@94.6.71.219)
[17:42:18] *** Joins: bmp (b6cc5e8850@2604:bf00:561:2000::184)
[17:48:36] <Seng> how do I get the max size of a integer type?
[17:49:00] <Franciman> std.math.maxInt(yourType)
[17:49:14] <Franciman> https://ziglang.org/documentation/0.6.0/std/#std;math.maxInt
[17:51:09] <Seng> ah, math. thanks
[17:54:25] *** Joins: pkap (~pkap@185.213.155.160)
[18:17:00] *** Joins: arkurious (~arkurious@user/arkurious)
[18:17:00] *** Quits: Dko1905 (~Dko1905@5.103.140.28.static.fibianet.dk) (Quit: Leaving)
[18:26:13] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[18:35:04] *** Quits: pkap (~pkap@185.213.155.160) (Ping timeout: 256 seconds)
[18:38:13] *** Joins: notapenguin (~ryu@187.3.254.107)
[18:44:40] *** Joins: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95)
[18:50:13] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:51:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[19:01:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:14:35] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[19:20:49] *** Joins: moog (~moog@107.126.53.135)
[19:29:14] *** Joins: nvmd (~nvmd@user/nvmd)
[19:41:58] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:53:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:10:58] *** Quits: Nulo (~Nulo@user/nulo) (Ping timeout: 256 seconds)
[20:28:39] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[20:28:52] *** philtom is now known as philtor
[20:44:29] *** Quits: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:51:26] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:56:11] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:09:25] *** Joins: terminalpusher (~terminalp@2a01:586:946:1:1612:4fb1:6a45:af83)
[21:11:55] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[21:15:49] *** Quits: neurocyte0917 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[21:15:50] *** Joins: neurocyte0917 (~neurocyte@user/neurocyte)
[21:42:28] *** Joins: xackus (~xackus@185.15.0.3)
[21:42:54] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:53:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[22:02:35] *** Joins: Erutuon (~Erutuon@user/erutuon)
[22:09:44] *** Quits: terminalpusher (~terminalp@2a01:586:946:1:1612:4fb1:6a45:af83) (Remote host closed the connection)
[22:11:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:15:01] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[22:18:54] *** Joins: chgr (~ek@nat-91-137-25-18.net.encoline.de)
[22:25:07] *** Quits: gwizon (~gwizon@ool-45798cb0.dyn.optonline.net) (Ping timeout: 256 seconds)
[22:26:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:27:40] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[22:34:15] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[22:43:05] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:43:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:45:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:57:12] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[23:25:01] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[23:48:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[23:59:42] *** Quits: ofelas (~ofelas@ti0071a400-7012.bb.online.no) (Remote host closed the connection)
