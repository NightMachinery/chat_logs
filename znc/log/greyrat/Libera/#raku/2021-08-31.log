[00:14:56] *** Joins: patrickb (~quassel@55d467fe.access.ecotel.net)
[00:24:50] *** Quits: patrickb (~quassel@55d467fe.access.ecotel.net) (Quit: Quit.)
[00:27:07] *** Quits: xinming (~xinming@115.219.35.181) (Ping timeout: 245 seconds)
[00:27:38] *** Joins: xinming (~xinming@115.219.35.181)
[00:27:41] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:27:56] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[00:50:17] <gfldex> lizmat: are we all in this together like this? https://i.redd.it/k4b07zoc69l41.jpg
[01:11:53] <japhb> I remember when they used to summer near where I lived.  It was really cool looking at a grove, not seeing *anything* because they were all pretending to be leaves, and then *foom* suddenly the air is full of butterflies.
[01:14:55] <El_Che> I had that experience in Australia
[01:14:58] <El_Che> wonderful
[01:19:31] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Quit: so long, and thanks for all the fish)
[01:35:29] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[01:46:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:09:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[02:10:27] *** Joins: tejr (~tejr@user/tejr)
[02:37:14] *** Joins: juanfra__ (~juanfra@user/juanfra)
[02:46:01] <lizmat> gfldex El_Che that's indeed a nice picture!
[02:57:11] <kybr> if ::("&infix:«$op»") only interpolates at compile time and ::("&infix:<$op>") seems to fail on $op like < or >=, then what form might i turn to?
[02:57:19] <kybr> my $op = "<"; say ::("&infix:<$op>")(4,5)
[02:57:26] <kybr> m: my $op = "<"; say ::("&infix:<$op>")(4,5)
[02:57:26] <camelia> rakudo-moar 5492452b2: OUTPUT: «No such symbol '&infix:<<>'␤  in block <unit> at <tmp> line 1␤␤»
[02:58:35] <gfldex> m: my $op = "<"; say ::("&infix:«$op»")(4,5)
[02:58:35] <camelia> rakudo-moar 5492452b2: OUTPUT: «Use of uninitialized value $op of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤True␤  in code  at <tmp> line 1␤»
[02:58:59] <kybr> m: my $op = "<"; say ::("&infix:['$op']")(4,5)
[02:59:00] <camelia> rakudo-moar 5492452b2: OUTPUT: «No such symbol '&infix:['<']'␤  in block <unit> at <tmp> line 1␤␤»
[03:00:22] <moon-child> kybr: ::("&infix:«$op»") doesn't interpolate at compile time; &infix:«$op» does
[03:00:25] <gfldex> m: my $op = "<"; say ::('&infix:«' ~ $op ~ '»')(4,5)
[03:00:26] <camelia> rakudo-moar 5492452b2: OUTPUT: «True␤»
[03:00:38] <moon-child> oh, wait
[03:03:59] *** Quits: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se) (Ping timeout: 250 seconds)
[03:04:45] <gfldex> lizmat: the search term was "butterfly swarm"
[03:05:16] <lizmat> ok, now to see whether I may use it  :-)
[03:20:50] <tbrowder> .ask tonyo have you seen my recent Data::Dump issue? would you consider a PR for the env var suggestion? or, better, change the api and and the default behavior (with a PR)?
[03:20:51] <tellable6> tbrowder, I'll pass your message to tonyo_
[03:23:36] <tbrowder> wow, i see tonyo just took care of 2 issues as i asked him about a new one! what a meeting of interests!
[03:26:04] <tbrowder> i don't know why jmerelo hasn't been on irc in a long time, but i know he is very busy with his $dayjobS (note the plural)
[03:29:55] <tbrowder> i wish he  were here to talk about public-facing docs. i still don't like it that documentable doesn't properly consider user desires of alpha sorting of topics on major groups on the Language page.
[03:30:38] <tbrowder> imho, it's a major design flaw.
[03:31:03] *** Joins: dogbert11 (~dogbert@c83-253-59-194.bredband.tele2.se)
[03:32:25] <Geth> ¦ doc/special-chars-in-char-ranges: 9741c66cc2 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: Explain behavior of non-alphanumerics in <[ ]> 
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: 
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: The docs previously mentioned that you can  use \ to escape characters inside <[  ]> ; this
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: commit adds the fact that you don't need to escape most non-alphanumeric characters the way 
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: you do in the portion of a regex outside <[ ]> and that you must escape (rather than quote) 
[03:32:26] <Geth> ¦ doc/special-chars-in-char-ranges: characters inside <[ ]> for them to have their literal meaning.
[03:32:27] <Geth> ¦ doc/special-chars-in-char-ranges: review: https://github.com/Raku/doc/commit/9741c66cc2
[03:33:12] <Geth> ¦ doc: codesections++ created pull request #3948: Explain behavior of non-alphanumerics in <[ ]>
[03:33:12] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3948
[03:44:42] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[03:45:51] *** Joins: tejr (~tejr@user/tejr)
[04:32:45] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:43:28] *** Quits: lichtkind (~lichtkind@p200300d0a730b0dab0e40a09bada4fc7.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:05:31] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[05:25:22] *** Joins: frost (~frost@59.71.240.119)
[05:34:25] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:34:58] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[05:42:34] *** Quits: rakuUser (~rakuUser@179.215.180.176) (Quit: Connection closed)
[06:43:42] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:43:42] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:43:42] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:43:42] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:43:42] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:43:42] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:43:42] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:43:42] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:43:42] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:43:42] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:43:42] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:43:42] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[06:43:42] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[06:43:42] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[06:43:42] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[06:43:46] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[06:43:46] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[06:44:02] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:44:03] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (Quit: WeeChat 2.8)
[06:44:09] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[06:44:45] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[06:44:45] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:47:05] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[07:39:19] <Geth> ¦ doc/special-chars-in-char-ranges: 3a0d01c988 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[07:39:20] <Geth> ¦ doc/special-chars-in-char-ranges: Fix whitespace
[07:39:20] <Geth> ¦ doc/special-chars-in-char-ranges: 
[07:39:20] <Geth> ¦ doc/special-chars-in-char-ranges: Remove trailing whitespace.
[07:39:20] <Geth> ¦ doc/special-chars-in-char-ranges: review: https://github.com/Raku/doc/commit/3a0d01c988
[07:44:54] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:44:55] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[07:44:59] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[07:45:24] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[07:45:29] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[08:29:07] *** Joins: keutoi (~keutoi@157.47.59.144)
[08:33:17] <Geth> ¦ doc: 9741c66cc2 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[08:33:17] <Geth> ¦ doc: Explain behavior of non-alphanumerics in <[ ]> 
[08:33:17] <Geth> ¦ doc: 
[08:33:17] <Geth> ¦ doc: The docs previously mentioned that you can  use \ to escape characters inside <[  ]> ; this
[08:33:17] <Geth> ¦ doc: commit adds the fact that you don't need to escape most non-alphanumeric characters the way 
[08:33:18] <Geth> ¦ doc: you do in the portion of a regex outside <[ ]> and that you must escape (rather than quote) 
[08:33:18] <Geth> ¦ doc: characters inside <[ ]> for them to have their literal meaning.
[08:33:19] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/9741c66cc2
[08:33:20] <linkable6> Link: https://docs.raku.org/language/regexes
[08:33:21] <Geth> ¦ doc: 3a0d01c988 | (Daniel Sockwell)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[08:33:23] <Geth> ¦ doc: Fix whitespace
[08:33:25] <Geth> ¦ doc: 
[08:33:27] <Geth> ¦ doc: Remove trailing whitespace.
[08:33:27] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:33:29] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/3a0d01c988
[08:33:31] <Geth> ¦ doc: c6b9012fee | (Will Coleda)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6
[08:33:33] <Geth> ¦ doc: Merge pull request #3948 from Raku/special-chars-in-char-ranges
[08:33:35] <Geth> ¦ doc: 
[08:33:37] <Geth> ¦ doc: Explain behavior of non-alphanumerics in <[ ]>
[08:33:39] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/c6b9012fee
[08:34:42] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[08:45:10] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:45:36] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:00:47] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[09:01:12] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[09:20:09] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:22:49] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[09:35:37] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:43:12] *** Joins: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[09:46:04] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:47:19] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Ping timeout: 244 seconds)
[09:56:04] <tib> Hello :) 
[09:57:52] <tib> https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-clement-oudot-2a1a and https://dev.to/thibaultduponchelle/the-ephemeral-miniconf-jose-joaquin-atria-2m5h jjatria maybe plans to talk about Raku (?)
[09:58:58] *** Joins: aleksb (~aleksb@202-159-174-62.tpgi.com.au)
[10:05:34] <aleksb> hi, something counter-intuitive is happening, if this isn't a compiler bug can someone please explain this behaviour?
[10:05:58] <aleksb> sub test {
[10:05:58] <aleksb>     gather {
[10:05:59] <aleksb>         loop (my $d = 1; $d < 5; $d++) {
[10:05:59] <aleksb>             take (0, $d);
[10:06:00] <aleksb>         }
[10:06:00] <aleksb>     }
[10:06:01] <aleksb> }
[10:06:01] <aleksb> say test();           # output: ((0 1) (0 2) (0 3) (0 4))
[10:06:02] <aleksb> say eager test(); # output: ((0 5) (0 5) (0 5) (0 5))
[10:29:00] *** Joins: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de)
[10:32:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:33:46] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:39:29] *** Quits: markus_ (~markus@193-154-202-236.adsl.highway.telekom.at) (Quit: Leaving)
[10:43:03] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[11:35:19] *** Quits: keutoi (~keutoi@157.47.59.144) (Ping timeout: 250 seconds)
[11:35:34] *** Joins: keutoi (~keutoi@157.47.59.144)
[11:41:38] <MasterDuke> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; say test(); say eager test()  # aleksb fyi you can run code here
[11:41:38] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0 1) (0 2) (0 3) (0 4))␤((0 5) (0 5) (0 5) (0 5))␤»
[11:42:35] <gfldex> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; say eager test();
[11:42:36] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0 5) (0 5) (0 5) (0 5))␤»
[11:43:05] <moon-child> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; my $x = eager test; say $x[0] === $x[1]
[11:43:06] <camelia> rakudo-moar 5492452b2: OUTPUT: «False␤»
[11:43:21] <moon-child> huh.  Thought that might be it
[11:48:05] <gfldex> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; my $l := eager test(); say $l.WHAT;
[11:48:05] <camelia> rakudo-moar 5492452b2: OUTPUT: «(List)␤»
[11:48:25] <gfldex> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; my $l := eager test(); dd $l.WHAT;
[11:48:25] <camelia> rakudo-moar 5492452b2: OUTPUT: «List␤»
[11:48:28] <gfldex> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d); } } }; my $l := eager test(); dd $l;
[11:48:28] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0, 5), (0, 5), (0, 5), (0, 5))␤»
[11:49:03] <gfldex> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take 0, $d; } } }; my $l := eager test(); dd $l;
[11:49:03] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0, 5), (0, 5), (0, 5), (0, 5))␤»
[11:49:11] <MasterDuke> m: sub test { gather { my $d = 1; while $d < 5 { take (0, $d++); } } }; say test(); say eager test()
[11:49:12] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0 1) (0 2) (0 3) (0 4))␤((0 1) (0 2) (0 3) (0 4))␤»
[12:35:34] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:35:34] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:39:01] *** Joins: lichtkind (~lichtkind@p200300d0a7115d84b0e40a09bada4fc7.dip0.t-ipconnect.de)
[12:49:14] *** Joins: neither (~neither@94.235.65.224)
[12:58:22] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[13:15:44] <gfldex> aleksb: "the variable is declared as a lexical variable in the loop's outer or containing scope so that it can be used in code following the loop statement."
[13:16:04] *** Joins: neither12 (~neither@94.235.65.224)
[13:16:05] *** Quits: neither12 (~neither@94.235.65.224) (Client Quit)
[13:16:12] <gfldex> and gather/take must preserve the scope
[13:16:18] *** Joins: neither81 (~neither@94.235.65.224)
[13:16:33] *** Quits: neither81 (~neither@94.235.65.224) (Client Quit)
[13:18:07] *** Quits: neither (~neither@94.235.65.224) (Ping timeout: 244 seconds)
[13:50:06] *** Joins: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[13:50:08] *** Quits: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Client Quit)
[13:50:28] *** Joins: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[13:51:18] *** Joins: C0l0mb0 (~kvirc@14-0-173-121.static.pccw-hkt.com)
[13:51:50] *** Quits: C0l0mb0 (~kvirc@14-0-173-121.static.pccw-hkt.com) (Client Quit)
[13:53:25] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 252 seconds)
[13:53:26] *** Joins: col0mbo (~kvirc@14-0-173-121.static.pccw-hkt.com)
[13:53:27] <aleksb> gfldex: does (0, $d) capture a reference to $d rather than its value? Using [0, $d] instead does what I expect
[13:53:40] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 240 seconds)
[13:53:58] <aleksb> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take [0, $d] } } }; say eager test()
[13:53:58] <camelia> rakudo-moar 5492452b2: OUTPUT: «([0 1] [0 2] [0 3] [0 4])␤»
[13:54:42] *** Quits: lizmat_ (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 245 seconds)
[13:54:48] <aleksb> m: sub test { gather { loop (my $d = 1; $d < 5; $d++) { take (0, $d) } } }; say eager test()
[13:54:48] <camelia> rakudo-moar 5492452b2: OUTPUT: «((0 5) (0 5) (0 5) (0 5))␤»
[13:57:52] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[13:59:16] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:59:44] <MasterDuke> aleksb: yeah, i seem to recall someone wrote a blog post recently talking about the difference between Arrays and List and how they interact with containers/values
[14:02:53] <aleksb> m: my $x = 1; my $y = (0, $x); $x++; say $y
[14:02:53] <camelia> rakudo-moar 5492452b2: OUTPUT: «(0 2)␤»
[14:08:36] *** Joins: neither (~neither@94.235.65.224)
[14:09:51] <aleksb> well, I guess that's just how it works... seems strange for "immutable" lists to be so easy to change
[14:11:30] <MasterDuke> well, it's a matter of perspective. the lists themselves can't change, but the things in the lists can
[14:20:18] <aleksb> Is there a "correct" way to store the value, not the variable, in the list? I can do +$d or $d.clone
[14:20:25] *** Quits: col0mbo (~kvirc@14-0-173-121.static.pccw-hkt.com) (Ping timeout: 252 seconds)
[14:23:16] <MasterDuke> m: my $x = 1; my $y = (0, $x<>); $x++; say $y  # another way
[14:23:16] <camelia> rakudo-moar 5492452b2: OUTPUT: «(0 1)␤»
[14:24:42] <aleksb> ah I think I needed that operator for something recently thanks
[14:25:34] <MasterDuke> it's the decont (de-containerizer) operator
[14:26:28] <MasterDuke> mentioned in https://docs.raku.org/language/containers (and probably other places, but that's the first place i looked)
[14:27:02] <aleksb> yeah thanks I need to review that
[14:37:26] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:38:19] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[15:18:38] <frost> hello, does raku have the similar things as [x;y;z] in python, where i can use index from x to y counting by z steps?
[15:19:24] <lizmat> m: my @a = ^20; say @a[1,3..*]
[15:19:24] <camelia> rakudo-moar 5492452b2: OUTPUT: «(1 (3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))␤»
[15:19:32] <lizmat> m: my @a = ^20; say @a[1,3...*]
[15:19:32] <camelia> rakudo-moar 5492452b2: OUTPUT: «(1 3 5 7 9 11 13 15 17 19)␤»
[15:20:52] *** Joins: kylese (~kylese@p5dd8b430.dip0.t-ipconnect.de)
[15:22:15] <frost> oh, thanks lizmat
[15:22:47] <lizmat> or any other algorithm you can think of with ...
[15:26:37] <frost> Yes, it is really impressive.
[15:26:58] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:27:36] <MasterDuke> m: my @a = ^20; say @a.skip.rotor(1 => 1).flat # TIMTOWTDI
[15:27:36] <camelia> rakudo-moar 5492452b2: OUTPUT: «(1 3 5 7 9 11 13 15 17 19)␤»
[15:31:32] <neither> hi, I have a class `A` and its implementation in a file. I also have some infix operator declarations for type `A` outside the class e.g., to have `$a1 + $a2`. Can I move these operator subroutines to another file and `use` them along with the class?
[15:32:34] <frost> MasterDuke thanks, it's also a good way,TMTOWTDI!
[15:32:47] <MasterDuke> benchable6: compare my @a = ^20; my @b; @b = @a[1,3...*] for ^10_000; ||| my @a = ^20; my @c; @d = @c.skip.rotor(1 => 1).flat for ^10_000;
[15:32:49] <benchable6> MasterDuke, ¦my: «Cannot find this revision (did you mean “nom”?)»
[15:33:02] <MasterDuke> benchable6: HEAD compare my @a = ^20; my @b; @b = @a[1,3...*] for ^10_000; ||| my @a = ^20; my @c; @d = @c.skip.rotor(1 => 1).flat for ^10_000;
[15:33:02] <benchable6> MasterDuke, starting to benchmark the 1 given commit
[15:33:02] <benchable6> MasterDuke, No new data found
[15:35:23] <MasterDuke> benchable6: compare HEAD my @a = ^20; my @b; @b = @a[1,3...*] for ^1_000; ||| my @c = ^20; my @d; @d = @c.skip.rotor(1 => 1).flat for ^1_000;  # i didn't the sequence version would be that much slower
[15:35:23] <benchable6> MasterDuke, starting to benchmark the 1 given commit
[15:35:23] <benchable6> MasterDuke, ¦HEAD: «04===SORRY!04=== Error while compiling /tmp/Q5mKSSUk5I␤Missing block␤at /tmp/Q5mKSSUk5I:1␤------> 03y $b = Bench.new; $b.cmpthese(10, %subs)08⏏04<EOL>␤»
[15:35:30] <gfldex> m: sub f { gather for ^19 { state $i = 1; take $i++ } }; say (my @a = ^20)[&f];
[15:35:31] <camelia> rakudo-moar 5492452b2: OUTPUT: «(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19)␤»
[15:35:42] <gfldex> frost: subscripts also take callables ^^^
[15:36:28] <MasterDuke> benchable6: compare HEAD my @a = ^20; my @b; @b = @a[1,3...*] for ^1_000; ||| my @c = ^20; my @d; @d = @c.skip.rotor(1 => 1).flat for ^1_000;
[15:36:28] <benchable6> MasterDuke, starting to benchmark the 1 given commit
[15:36:34] *** Joins: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:36:34] <benchable6> MasterDuke, https://gist.github.com/cea6e1eb84580f6f218770953295b805
[15:37:10] <gfldex> neither: The operators will refere to the type object produced by the class. As long as those are available at compile time, you can put the operators where you like.
[15:37:12] <MasterDuke> ugh, don't know why that took so long to get right
[15:44:47] <neither> gfldex: Yes that's the issue: I get `Invalid typename 'A' in parameter declaration.` as you say. I don't know how to make it available at compile time.
[15:45:48] <gfldex> neither: did you try a forward declaration?
[15:49:11] <gfldex> neither: You will have to `use` the module with the class definitions in the file with the operators.
[15:54:10] *** Quits: neither (~neither@94.235.65.224) (Ping timeout: 240 seconds)
[16:07:49] *** Joins: neither (~neither@94.235.65.224)
[16:19:53] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:20:47] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[16:20:53] *** Quits: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net) (Client Quit)
[16:21:44] *** Joins: lizmat (~textual@89.205.138.64)
[16:23:02] *** Quits: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Ping timeout: 245 seconds)
[16:24:14] *** Quits: lizmat (~textual@89.205.138.64) (Client Quit)
[16:24:33] *** Joins: lizmat (~textual@ipv4-wenzperl.connected.by.freedominter.net)
[16:25:00] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[16:33:02] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:49] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:01:06] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:09:43] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[17:12:04] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: Bridge terminating on SIGTERM)
[17:15:43] *** Joins: juanfra (~juanfra@user/juanfra)
[17:23:10] *** Quits: unixcat64 (thelounge@fedora/hyperreal) (Quit: the lounge - https://webirc.envs.net)
[17:24:03] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:26:18] *** Joins: unixcat64 (thelounge@envs.net)
[17:26:22] *** Quits: unixcat64 (thelounge@envs.net) (Client Quit)
[17:26:49] *** Joins: unixcat64 (thelounge@envs.net)
[17:32:27] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[17:32:27] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[17:32:27] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[17:32:27] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[17:32:41] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[17:33:12] <neither> gfldex: I have 3 files: `main.rakumod`, `ops.rakumod` and `script.raku`. If I `use` the `main` module in `ops`, rakumod files are compiling fine. Aim is to `use main` from `script.raku` and to be able to use the class in `main` module along with its operations available, e.g., `$a1 + $a2` to be possible. But from `script.raku`, it doesn't see the
[17:33:12] <neither> operators.
[17:36:31] *** Joins: rakuUser (~rakuUser@179.215.180.176)
[17:38:52] *** Quits: unixcat64 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[17:39:19] *** Joins: unixcat64 (thelounge@envs.net)
[17:41:20] *** Quits: kylese (~kylese@p5dd8b430.dip0.t-ipconnect.de) (Quit: Leaving)
[17:49:34] *** Quits: Xliff_ (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[17:58:13] *** Quits: neither (~neither@94.235.65.224) (Ping timeout: 252 seconds)
[17:59:21] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[18:00:51] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.2)
[18:07:35] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:16:52] * lizmat clickbaits https://rakudoweekly.blog/2021/08/30/2021-35-superseding/
[18:32:46] *** Joins: neither (~neither@94.235.65.224)
[18:45:11] *** Quits: b2gills (~brad@subscriber-dhcp-cgn-64-191-7-0.wcufiber.net) (Read error: Connection reset by peer)
[18:45:23] *** Joins: b2gills (~brad@64.191.7.0)
[18:57:10] *** Joins: neither55 (~neither@94.235.65.224)
[18:58:36] *** Quits: neither (~neither@94.235.65.224) (Ping timeout: 244 seconds)
[18:59:21] *** Quits: keutoi (~keutoi@157.47.59.144) (Quit: leaving)
[19:03:40] *** Quits: unixcat64 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:04:07] *** Joins: unixcat64 (thelounge@envs.net)
[19:16:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[19:16:52] *** Joins: tejr (~tejr@user/tejr)
[19:18:43] *** Quits: unixcat64 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:19:10] *** Joins: unixcat64 (thelounge@envs.net)
[19:24:44] *** Quits: unixcat64 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:25:11] *** Joins: unixcat64 (thelounge@envs.net)
[19:54:00] *** Quits: unixcat64 (thelounge@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:54:28] *** Joins: unixcat64 (hyperreal@envs.net)
[20:00:12] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[20:06:05] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:07:50] *** Quits: neither55 (~neither@94.235.65.224) (Ping timeout: 244 seconds)
[20:32:58] *** Quits: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de) (Ping timeout: 250 seconds)
[20:38:08] *** Joins: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de)
[21:07:59] *** Joins: MoC (~moc@user/moc)
[21:27:34] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[21:29:51] *** Joins: ufobat__ (~martin@dynamic-077-004-014-173.77.4.pool.telefonica.de)
[21:32:34] *** Quits: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de) (Ping timeout: 244 seconds)
[21:52:36] *** Quits: rakuUser (~rakuUser@179.215.180.176) (Quit: Ping timeout (120 seconds))
[22:02:55] *** Joins: rakuUser (~rakuUser@179.215.180.176)
[22:14:07] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[22:32:40] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:06:23] *** Quits: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[23:08:10] *** Quits: SmokeMachine__ (sid19088@id-19088.tinside.irccloud.com) (Ping timeout: 240 seconds)
[23:08:23] *** Joins: SmokeMachine__ (sid19088@id-19088.tinside.irccloud.com)
[23:55:07] *** Quits: ufobat__ (~martin@dynamic-077-004-014-173.77.4.pool.telefonica.de) (Ping timeout: 252 seconds)
