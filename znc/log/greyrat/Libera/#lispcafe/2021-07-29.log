[00:00:06] <selwyn> it would be if my physics are wrong i.e. i fucked something up
[00:00:29] <selwyn> if it were the laws of physics that were wrong, then it would be sort of scary but it would be an excellent research result :p
[00:00:35] <selwyn> everyone wants to discover new physics
[00:01:05] <gilberth> I mean, nasty things could happen, like when Newton invented gravity. Consider how easy it was before to haul heavy things without it.
[00:02:18] <pjb> gilberth: well, you could have several comments after an opening parenthesis.
[00:02:55] <gilberth> pjb: I'll join them.
[00:03:04] <pjb> (#| one |#  #| two |#  ; three \n ; four \n let (us) ; five \n (goo us) #|yay|#)
[00:03:43] <selwyn> return to freefall
[00:03:53] <gilberth> They all apply to (goo us). So i'd have (comment (goo us) ...whatever..)
[00:04:22] <pjb> ok
[00:04:31] <gilberth> Harder is (setf x ;blah \n (+ x y))
[00:04:46] <gilberth> Does "blah" apply to (setf ...) or to just x?
[00:05:54] <gilberth> In the ...whatever... I could have multiple comments and their kind like block, inline, line.
[00:06:43] <gilberth> So when I move (goo us) around, I could move the whole (comment (goo us) ..) node instead and let the poor pretty printer cope with that. Hmm.
[00:06:58] <gilberth> Modifying the LALR driver shouldn't be too hard.
[00:11:00] <White_Flame> and this is the failing of plain text as intentional representation
[00:11:16] <White_Flame> the linkage between documentation and the code it documents needs to be actually expressed somehow, not just inferred
[00:11:50] <White_Flame> and of course some comments are about an entire section of code, or describing some internal protocol something uses, etc and not necessarily to some concrete individual form
[00:11:54] <gilberth> pjb: Oh, I misread your example. How about (comment (let (us) (comment (goo us) (:block "five") (:inline "yay"))) (:inline "one") (:inline "two") (:line "three") (:block "four")) ?
[00:12:16] <gilberth> Tricky is #|yay|# right before the rparen. Hmm *scratchhead*
[00:12:46] <White_Flame> developers need to grow up and get past the tinker-toy monospace text areas
[00:12:50] <gilberth> White_Flame: I guess those are on top-level.
[00:14:26] <gilberth> So, yes, perhaps I'll them in-between nodes, not at them. In statements. Although Lisp has not this distinction for statements and expressions. My Pascal has, at that is what I am concerned about right know.
[00:15:28] <gilberth> My agenda is to turn those nasty TeX sources using this nasty "literate programming" macro processor into readable SEXPR-based Pascal.
[00:18:03] <gilberth> Or traditional PASCAL syntax, if you wish. Writing PPRINT methods for that is easy. Hard is to place the comments.
[00:19:33] <gilberth> Perhaps I revisit the PPRINT work I did for McCLIM, where presentations were around what is printed, plus suppor for variable width fonts. <http://bauhh.dyndns.org:8000/mcclim/screenshots/pprint-1.png> <http://bauhh.dyndns.org:8000/mcclim/screenshots/pprint-2.png>
[00:27:55] <pjb> gilberth: yes, that could do it.
[00:28:28] <pjb> gilberth: you can imagine that a file is surrounded by a (progn …) so you can attach prefix comments to the file progn.
[00:36:09] <gilberth> Yes, that was my idea. And in my special Pascal case, it even is, as the whole program is in a "PROGRAM" form.
[00:36:59] <gilberth> I flatten that in the s-expr form I dump, so that I could nicely c-c c-c there.
[01:15:07] *** Quits: lad (~lad@user/lad) (Ping timeout: 245 seconds)
[01:36:20] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Ping timeout: 256 seconds)
[01:51:24] *** Joins: derelict (~derelict@user/derelict)
[02:01:53] <gilberth> After all the s-expr form already is pretty readable, but for all those WEB macros being expanded. <http://clim.rocks/gilbert/tex/tex.lisp>
[02:03:02] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 245 seconds)
[02:18:48] *** Joins: lad (~lad@user/lad)
[02:20:19] *** Joins: emacsomancer (~emacsoman@c-98-202-136-109.hsd1.ut.comcast.net)
[02:42:35] <gilberth> Oops. METAFONT triggers a variant violation right away. :(
[02:44:55] <gilberth> More checks?
[03:06:02] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:60a6:d0c5:4d01:36c6) (Remote host closed the connection)
[03:09:51] *** Joins: zacts (~zacts@user/zacts)
[03:16:20] <gilberth> Ok. I was able to build cmr10, though I have no .tfm file, will need to read the manual.
[03:24:04] <selwyn> r.tfm
[03:34:31] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[03:36:46] <gilberth> selwyn: Indeed :)
[03:39:08] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[03:40:06] *** Joins: emacsoma1 (~emacsoman@136.60.128.68)
[03:42:10] <gilberth> But I have to TeX it first.
[03:42:12] *** Quits: emacsomancer (~emacsoman@c-98-202-136-109.hsd1.ut.comcast.net) (Ping timeout: 276 seconds)
[03:42:51] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Client Quit)
[03:43:12] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[03:59:23] *** Joins: zacts (~zacts@user/zacts)
[04:01:04] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[04:01:26] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:29:50] <gilberth> Ok. I need to define "modes" and have "fontmaking" set to 1, to get tfm files. sigh
[04:31:25] <gilberth> Which of course didn't work. Grr.
[04:52:38] * edgar-rft makes a font in D minor mode for gilberth
[04:57:31] <White_Flame> you mean aeolian mode on D?
[05:05:32] *** Quits: random-nick (~random-ni@87.116.182.181) (Ping timeout: 252 seconds)
[05:18:14] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[05:20:16] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Quit: leaving)
[05:20:17] <edgar-rft> White_Flame: congrats, finally someone who has understood how fonts should sound :-)
[05:20:54] <White_Flame> transpose by swapping a new font file
[05:22:37] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:22:56] <dave0> maw
[05:24:09] <edgar-rft> maw dave0 :-)
[05:25:13] <dave0> maw edgar-rft 
[05:25:22] <edgar-rft> White_Flame: transposition is difficult with diatonic modes, you usually need a different font set for playing in a different key
[05:31:18] <aeth> oh wow, https://www.youtube.com/watch?v=dQw4w9WgXcQ hit 1 billion views
[05:31:19] -ixelp- Rick Astley - Never Gonna Give You Up (Official Music Video) - YouTube
[05:31:40] <dave0> rick roll!
[05:32:04] <aeth> I first saw that video on IRC, whenever the trend started
[05:32:21] <aeth> 2007, apparently
[05:33:33] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:36:55] <edgar-rft> aeth: you lucky one, I had to endure the original on TV!
[05:42:43] <White_Flame> it's unironically not a bad song for its time, just got way overplayed
[05:43:15] <aeth> but radios are never going to give it up because it would let you down
[05:43:56] <dave0> they'll never desert you
[05:44:44] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[05:47:46] *** Quits: lad (~lad@user/lad) (Ping timeout: 240 seconds)
[05:55:08] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[05:58:50] <White_Flame> if your spouse is on a diet, they'll never dessert you
[06:01:19] <edgar-rft> White_Flame: the Rick Astley song was written by the same people who made Kylie Minogue from being a soap-opera starlet into becoming a pop singer -> https://en.wikipedia.org/wiki/Stock_Aitken_Waterman
[07:18:42] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[07:26:34] <hayley> https://www.youtube.com/watch?v=lb79fD_ez2c
[07:26:34] -ixelp- Telegraph (The Manor Version 1981) - YouTube
[07:33:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[07:35:05] *** Joins: derelict (~derelict@user/derelict)
[07:36:44] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[08:04:54] <hayley> https://twitter.com/halflife_txt/status/1420434171101601792
[08:05:11] *** Joins: Fare (~fare@2601:184:4a7f:995c:8cb5:3c64:8b2b:5a1)
[08:05:26] <gilberth> I now could read those .gf files that METAFONT generates and render them with CLIM: <http://clim.rocks/gilbert/tex/cmr10.600gf.pdf>
[08:05:58] <gilberth> I could perhaps write a DVI viewer :)
[08:12:38] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[08:16:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[08:32:32] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[08:42:35] *** Joins: notzmv (~zmv@user/notzmv)
[09:00:01] *** Quits: Fare (~fare@2601:184:4a7f:995c:8cb5:3c64:8b2b:5a1) (Remote host closed the connection)
[09:13:39] *** Joins: nihaal (~nihaal@106.201.177.18)
[09:32:37] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[09:44:55] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:46:23] *** Quits: zos (~zosthegoa@ool-457a8044.dyn.optonline.net) (Quit: WeeChat 2.8)
[09:49:36] <hayley> How good are processors at skipping NOPs? Would it matter if I replace a (perhaps "long") jump with a load instruction and some NOPs?
[10:15:05] <dave0> hayley: on x86, there is a bunch of official nop instructions that takes 1,2,3,4,5, up to i think 10 bytes, that are a single instruction, so i'd expect it to be fast
[10:15:15] <hayley> Right.
[10:16:00] <dave0> i know 1 byte nop is   xchg ax,ax   and one of the longer nops is   lea si,[si+0]
[10:16:48] <dave0> https://www.felixcloutier.com/x86/nop
[10:16:49] -ixelp- NOP — No Operation
[10:18:01] <dave0> https://community.intel.com/t5/Software-Archive/Multi-byte-NOP-opcode-made-official/td-p/932580      The latest version of IA-32 Intel Architecture Software Developers Manual Volume 2B: Instruction Set Reference, N-Z
[10:18:01] <dave0> (ftp://download.intel.com/design/Pentium4/manuals/25366719.pdf) contains the opcode for a multi-byte NOP instruction. 
[10:18:02] -ixelp- Multi-byte NOP opcode made official - Intel Community
[10:18:19] <hayley> Okay.
[10:19:10] <hayley> Then I suppose the next question is how to atomically whack in an instruction. Suppose we could reserve 8 bytes (maybe too large, maybe not, idk) then CMPXCHG it with an instruction and NOP padding.
[10:26:51] <hayley> (My "extension" to call-site optimization is to whack in the instruction stream if it's small enough, e.g. the instruction is literally one load or store.
[10:26:53] <hayley> )
[10:35:11] <dave0> hayley: oh wow i found it: https://xem.github.io/minix86/manual/intel-x86-and-64-manual-vol2/o_b5573232dd8f1481-843.html
[10:35:11] -ixelp- Page 843
[10:56:27] <pjb> hayley: I doubt you can atomically replace an instruction. First there's the i-cache problem!  Next, as you can see the instructions on x86 1- are not aligned, 2- can be of any size!
[10:57:26] <pjb> So you have to ensure that nobody is trying to execute it while you replace it, and don't forget to invalidate the i-cache.
[10:57:28] <hayley> pjb: Yes, you try not to blow out icache. Then it's not like the x86 ISA ever cared about alignment. Then we have CMPXCHG16B which covers enough instructions with 16 byte CAS.
[10:59:07] <pjb> hayley: check whether CMPXCHG16B locks out the execution as well as data accesses (probably, if they lock the memory bus in general, but it would have to lock explicitely the i-cache too).
[10:59:21] <hayley> Right.
[11:02:02] <hayley> Every atomic instruction on x86 uses the LOCK prefix, so I'd have to check that.
[11:02:05] <dave0> you could align the start of the instruction with a nop :-p
[11:02:25] <dave0> multi-byte nop ; instruction ; multi-byte nop
[11:03:20] <dave0> even better pad the   { instruction ; multi-byte nop ; multi-byte nop }   to 16 bytes
[11:03:40] <dave0> then there's no alignment funny stuff with cmpxchg
[11:13:27] *** Quits: slyrus_ (~slyrus@135.180.166.51) (Quit: Leaving)
[11:32:07] *** Joins: selwyn (~selwyn@user/selwyn)
[12:30:49] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[12:33:52] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[12:43:32] <hayley> .oO( Can't you make a data race in safe Rust by performing any write operation on an Atomic«Integer-type» with Relaxed ordering, which would not produce any happens-before relations? )
[13:58:51] *** Joins: makomo (~makomo@user/makomo)
[14:06:56] *** Joins: lotuseater (~user@p200300e7871b3f0034ed9e810c3724ce.dip0.t-ipconnect.de)
[14:07:03] <lotuseater> hello hayley
[14:07:14] <hayley> Oh, hey.
[14:07:53] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40)
[14:08:12] <lotuseater> so go on if you want
[14:08:19] <edgar-rft> hayley: how can nuclear safety be maintained in Rust when even integers are atomic?
[14:08:27] <hayley> So, my initial complaint is mostly based on the sheer existence of <https://github.com/akkartik/mu> to be honest.
[14:08:27] -ixelp- GitHub - akkartik/mu: Soul of a tiny new machine. More thorough tests → More comprehensible and rewrite-friendly softwar [...]
[14:08:37] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[14:08:41] <lotuseater> edgar-rft: seriously? :D
[14:09:29] <edgar-rft> nuclear safety is important if you remember what happened in Fukuchima
[14:09:36] <hayley> That was from a previous comment I made where you can make an atomic update in safe Rust with relaxed ordering, i.e. no constraint on when it happens, and so you have a data race.
[14:09:50] <lotuseater> I thought it was a word joke.
[14:10:16] <hayley> edgar-rft was making a word joke, yes. He is good at doing those.
[14:10:30] <lotuseater> of course nuclear safety is very important, focus on safety in programming in general with various strong techniques
[14:10:31] <edgar-rft> I'm impressed to get a serious answer :-)
[14:10:50] <lotuseater> yes me too (but more situation dependent and in german)
[14:11:12] <hayley> So, the idea of that project is to make a "simple" computing environment by building as few layers between you and the processor as possible. Which, in the rudest phrasing possible, is on Temple OS level madness.
[14:11:13] <edgar-rft> but I think we wanted to talk about the automated mathematician...
[14:11:39] <lotuseater> we don't have to
[14:12:02] <edgar-rft> okay, let's talk about TempleOS then :-)
[14:12:02] <hayley> A more polite counter-argument is that x86 isn't very simple to start with, so your dear user is going to be stuck thinking in terms of that. Rather than, say, the actual simplicity of Scheme or Self where there is a simple enough language to reason about.
[14:12:03] <lotuseater> aren't there also boxed integers in rust?
[14:12:29] <hayley> You could box any ol value, but I've heard someone unironically say they are wary of any heap allocations.
[14:13:02] * edgar-rft puts on his boxing gloves to punch some integers
[14:13:45] <lotuseater> be careful edgar-rft, they'll catch up with their bignum brothers
[14:13:58] <hayley> If you read any actual source code, there is a lot of diddling of machine registers, and statements that look like little more than nicer names for x86 instructions. So it's not simple at all.
[14:14:59] <lotuseater> you mean the actual (current) implementation of rustc?
[14:15:24] <hayley> No, that Mu project rather. rustc emits LLVM IR and so it never touches registers.
[14:15:24] <lotuseater> I don't know so deep how GHC does, but it also boxes stuff.
[14:15:36] <lotuseater> that sounds better
[14:15:46] <hayley> Some...time ago (I am bad at remembering when I did things exactly that weren't like last week) I published an article entitled "Terminal boredom" <https://applied-langua.ge/posts/terminal-boredom.html> which mentions another project that achieves simplicity by offloading everything else onto the user in a way.
[14:15:47] -ixelp- Terminal boredom, or how to go on with life when less is indeed less
[14:16:17] <lotuseater> so now LLVM just has to be verified in a prove system ...
[14:17:05] <hayley> My opinion these days is that you either make the implementation messy, the user's head messy, or you put a lot of thought into making both clean. All the nice mathematical statements like Maxwell's equations IMO are the third, Self and Scheme are the first, anything else claiming to be "simple" is probably the second.
[14:17:49] <lotuseater> i see
[14:18:08] <hayley> There is CompCert for C, and something sort of similar for ML from memory.
[14:18:23] <lotuseater> i know that project :)
[14:18:25] <hayley> Right, right CakeML.
[14:18:34] <lotuseater> mhm Cake, what sort of?
[14:18:46] <hayley> https://github.com/CakeML/cakeml
[14:18:47] -ixelp- GitHub - CakeML/cakeml: CakeML: A Verified Implementation of ML
[14:18:47] <dave0> carrot cake
[14:19:04] <lotuseater> delicious, but I'm more talented with cooking
[14:19:35] <hayley> You could have Rust target ML, and make everyone mad because now their code has a GC or something. Or maybe compile the LLVM IR back to C and then pass through CompCert.
[14:19:40] <edgar-rft> I'm most talented with eating
[14:19:57] <lotuseater> edgar-rft: so we can combine our powers!
[14:20:27] <edgar-rft> we're like Ninja Turtles :-)
[14:20:28] <dave0> are you a power ranger?
[14:20:43] <dave0> what's the one where they turn into a big robot
[14:21:01] <lotuseater> oh damn that metaseries ... (series of series, there are 20 of them or so)
[14:21:01] <dave0> what is'nt the one i guess
[14:21:28] <lotuseater> or like in the land of lisp music video where the figures transform into one
[14:21:56] <hayley> But anyway, that's why I think the guy is a hackjob. Nothing simple about it. And if you look at the "Lisp-based language" at the bottom you start to think he's a bit clueless of it. /me uses kebab-case as a litmus test.
[14:22:01] <lotuseater> here: https://youtu.be/HM1Zb3xmvMc?t=211
[14:22:01] -ixelp- Land of Lisp- The Music Video! - YouTube
[14:22:04] <edgar-rft> "Common Lisp Metaseries" makes a great book title
[14:22:21] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[14:22:40] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:23:07] <lotuseater> edgar-rft: so one day we can write a book together
[14:23:19] <lotuseater> your hoster seems to be from Germany
[14:23:25] <edgar-rft> Thank you, damn internet provider :-(
[14:23:51] <edgar-rft> I'm in Karlsruhe Baden/Württemberg
[14:24:25] <hayley> So, young hacker (I kid, I'm probably not older than you to start with), just beware that people appropriate the things you like. And then they also like to pretend they know the meaning of philosophical words like convival or social ecology or whatever.
[14:24:39] <lotuseater> we have Telekom, it's good, about 1.5 months ago there were Construction work on the road and apparently a fiber optic cable important for the road was caught in the process
[14:24:58] <lotuseater> okay I'm from Dortmund
[14:25:11] <lotuseater> i was sometimes in Karlsruhe for Gulaschprogrammiernacht
[14:25:19] <edgar-rft> my parents are both from Dortmund :-)
[14:25:32] <lotuseater> nice tell me when you're in town
[14:26:07] <lotuseater> hayley: words are everything :D
[14:26:35] <hayley> "Words on paper, written in sand." https://www.youtube.com/watch?v=lb79fD_ez2c
[14:26:36] -ixelp- Telegraph (The Manor Version 1981) - YouTube
[14:26:51] <lotuseater> edgar-rft: are you also member of Entropia?
[14:27:04] <lotuseater> hayley: or for catching customers
[14:27:36] <lotuseater> the song starts cool, I'll take it to my playlist
[14:27:41] <edgar-rft> lotuseater: not a member, but I know most of them
[14:27:56] <lotuseater> okay cool
[14:30:34] <edgar-rft> I'm mainly an electrician, only a hobby programmer
[14:30:55] <lotuseater> "only"
[14:31:18] <hayley> (Also n.b. in "private" communication the guy said metacircularity was overrated. So rather than learn one language, we are meant to know one already to learn others, and that is to be learnt by magic. Sheesh!)
[14:31:24] <edgar-rft> I'm "only" using Common Lisp :-)
[14:31:36] <lotuseater> The really capable people I know have taught themselves things.
[14:32:25] <edgar-rft> there is no area in electronics anymore that can be done with no clue of computer programming
[14:32:34] <lotuseater> haha me too, so people (like yesterday this C# guy) think i use a special purpose niche interpreter language that has some weird things like CLOS
[14:33:14] <lotuseater> someone I know works on an open source suite for SPS (Speciherprogrammierbare Steuerung)
[14:33:18] <hayley> You could do a fair few calculations for passives on paper. But /me perhaps literally grew up on http://falstad.com/circuit/
[14:33:18] -ixelp- Circuit Simulator Applet
[14:33:33] <hayley> Fun stuff to watch e.g. the DRAM simulation.
[14:33:39] <lotuseater> hui looks cool
[14:33:45] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:a5ab:8555:d9e0:dbd2)
[14:34:23] <lotuseater> about 2 weeks ago we met at hackerspace in Recklinghausen again and two designed something with KiCAD but complained about some parts of the GUI
[14:36:55] <lotuseater> other question: there's eg CL-Python and numcl, are there other python to be nice to have?
[14:37:33] <lotuseater> I thought of pandas ... but it's big. using April (the APL compiler by pahntomics) would be excellent for some parts of it
[14:38:14] <hayley> https://www.youtube.com/watch?v=5_ZlhmOiRwQ
[14:38:15] -ixelp- Richard Wright gets revenge on Roger Waters for kicking him out of Pink Floyd - YouTube
[14:38:24] <lotuseater> haha ok?
[14:38:37] <lotuseater> omg :D
[14:38:50] <hayley> I reckon a anything numeric library would be more maintainable with Petalisp rather than writing tight loops for everything c.f. numcl.
[14:39:10] <lotuseater> yes petalisp seems great
[14:39:36] <lotuseater> i tried to load numcl an hour ago but got a heap failure :D
[14:40:03] <lotuseater> this song is very funny: https://www.youtube.com/watch?v=CAb_bCtKuXg
[14:40:03] -ixelp- Life is Fun - Ft. Boyinaband (Official Music Video) - YouTube
[14:40:12] <hayley> Huh, so numcl does bottom out e.g. SUM with a reduction function. Still, having lazy evaluation gives you more of an APL vibe and lets the compiler be cleverer.
[14:40:25] <lotuseater> :)
[14:41:49] <hayley> Note that I wrote a GPU backend for Petalisp (and accidentally helped heisig figure out that reductions are just funny maps and transforms), so I am probably biased.
[14:42:10] <edgar-rft> most of the Python math stuff is nothing than Python-FFI wrappers around Fortran code, you don't need Python for that
[14:42:31] <lotuseater> that sounds very tricky
[14:42:41] <hayley> edgar-rft BLASTS Python users with BLAS
[14:43:15] <hayley> Well, to be fair, it is crap and slow. But if you only have to implement maps and transforms, you have substantially less work to do.
[14:43:25] <edgar-rft> If you like Python then use it, but I don't :-)
[14:43:43] <lotuseater> i don't want using it
[14:44:17] <lotuseater> but read it gives community boost if one translates such libs to CL ^^
[14:45:09] <hayley> Still, Petalisp can do a lot of type inference and propagation of stuffs that you can't do eagerly. See http://www.softwarepreservation.org/projects/apl/Papers/DYNAMICINCREMENTAL for perhaps the first time it was used in APL.
[14:45:27] <lotuseater> sad that there are no certification programs (just for resume). FranzInc had one
[14:45:30] <edgar-rft> I think everyone should use the language that fits his/her way of thinking best. I have no problems with people who like Python, but I still won't want to use it.
[14:46:07] <lotuseater> yes of course that's part of the freedom
[14:46:50] * edgar-rft reads the petalisp stuff...
[14:47:10] <hayley> The paper isn't about Petalisp rather, but it pulls off the same trick.
[14:47:11] <lotuseater> there's also the Master thesis about it
[14:47:51] <hayley> "being instead a dynamic incremental compiler which uses the techniques of Drag-along and Beating to produce optimized code."
[14:48:14] <hayley> TLDR the compiler beats you up and drags your corpse away to hide it if you write bad code.
[14:48:14] <lotuseater> I wonder if this job with AutoLISP works out (wish me luck) what it will be.
[14:48:38] <lotuseater> haha yes beating compilers are fun :D
[14:49:03] <lotuseater> GHC complains when you even use TABs. TABs kill people.
[14:49:42] <edgar-rft> Beware, I still haven't taken my tabs today!
[14:49:52] <lotuseater> oh damn you're good
[14:50:08] <lotuseater> i need new ones for the dish washer this week
[14:50:09] <edgar-rft> veeeeery old joke
[14:50:24] <lotuseater> ah old ones become new sometime
[14:51:16] <lotuseater> hayley: there was also VERY special but powerful vector hardware for APL as far as i know
[14:52:49] <hayley> Right. I heard though that you can nearly "interpret" APL and call a bunch of specially coded tight loops for maps and reductions on stock hardware.
[14:53:19] <lotuseater> or now using FPGAs to boost up
[14:59:34] <lotuseater> should go and buy some food
[15:06:41] *** Quits: hayley (~theemacss@user/hayley) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Bridge terminating on SIGTERM)
[15:06:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[15:09:13] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[15:11:20] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[15:11:20] *** Joins: hayley (~theemacss@user/hayley)
[15:25:56] <dave0> candy?
[15:26:40] <lotuseater> maybe also ^^
[15:26:58] <lotuseater> no first something with more substance
[15:27:02] *** Joins: silasfox (~sbv@xdsl-87-78-183-74.nc.de)
[15:41:39] *** Joins: shka (~herr@109.231.62.239)
[15:44:14] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:47:32] *** Joins: treflip (~user@95.79.32.99)
[16:01:30] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Ping timeout: 272 seconds)
[16:03:40] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[16:03:57] <hayley> https://www.cs.princeton.edu/~appel/papers/conteq.pdf "Intensional Equality ;=) for Continuations"
[16:04:04] * hayley thinks = makes for a worse nose than - even
[16:09:27] <dave0> pointy nose...   ;^)
[16:10:08] <hayley> Rather ;=) is the intensional equality operator.
[16:12:27] <edgar-rft> lotuseater: you could eat a really really *BIG* candy if you need more substance
[16:20:59] <lotuseater> oh damn continuations can be so powerful
[16:21:20] <lotuseater> edgar-rft: no ^^ I was at ALDI and got Nussbeisser chocolate
[16:21:40] <lotuseater> also bought new toilet paper but surely NOT to eat it! :D
[16:22:48] <lotuseater> caution this could be very disturbing for your minds: https://www.youtube.com/watch?v=NsxRvl5g5f8
[16:22:49] -ixelp- Maria isst zur Not auch Klopapier - YouTube
[16:27:13] * hayley attempts to watch Cliff Click on the big TV again.
[16:27:16] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[16:27:41] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[16:27:45] <lotuseater> oh what's that?
[16:28:14] <hayley> Java compiler and concurrency guy.
[16:28:21] <lotuseater> uii
[16:30:59] <lotuseater> i also like talks by Joe Armstrong
[16:31:15] <hayley> You'd think he would be irrelevant to us Lisp compiler hackers, but eh, not really. Being able to ask about hacking HotSpot for...20 years is a lot to get a reply from.
[16:31:23] <selwyn> is aldi better than lidl?
[16:31:31] <lotuseater> no i didn't think so :)
[16:31:33] <hayley> Indeed. But they'd hate each other as one did shared memory and the other did actors.
[16:31:44] <hayley> selwyn: We only have Aldi here.
[16:32:12] <lotuseater> selwyn: hm hard to answer, both have their strong points but it seems lidl has bigger sortiment
[16:32:35] <lotuseater> haha yes hayley. message passing :3
[16:32:45] <lotuseater> where do you live?
[16:33:11] <lotuseater> in my townpart there is Penny, ALDI, Netto and in the next also Rewe and LIDL
[16:33:16] <hayley> "Should we ditch callee saves registers in SICL?" Turns out he answered that in a talk years ago (A: yes on x86, I can't reach him on twitter for a more general answer though).
[16:33:54] <hayley> Melbourne, Australia
[16:34:54] <lotuseater> wow ALDI is everywhere :D big German business
[16:35:05] <lotuseater> haha okay for SAP goes the same
[16:35:25] <lotuseater> hayley: never have been to Australia :( or new zealand
[16:35:26] <hayley> (Right now our bet is that if you inline small functions, you never wanted those stinkin callee saves even with lots of registers.)
[16:35:54] <lotuseater> so inlining small functions is still good?
[16:36:10] <lotuseater> I'm not so much in this topic but like to hear about it from you.
[16:36:38] <hayley> Yes. The smallest functions to inline in CL would be accessors, and avoiding all the call stuff for one load/store instruction would be huge.
[16:36:55] <lotuseater> okay
[16:37:02] <pjb> Well, accessors are often generic functions. Inlining generic functions can be difficult.
[16:37:03] <selwyn> australian lisp symposium when
[16:37:07] <pjb> or useless.
[16:38:12] <lotuseater> pjb: you mean in case different kind of objects have the same accessor symbol? cause if one knows explicitely it then could be done just with DEFUN :)
[16:38:25] <hayley> pjb: Not with call site optimization; if you know the type you can at worst make a better polymorphic inline cache, and at best pick one effective method. Then I reckon rather than a jump to the snippet, you just inline the one instruction.
[16:38:30] <pjb> (mapc (lambda (o) (incf (position-x o) dx (position-y o) dy)) (mapcar (function make-instance) '(hero monster gold gold gold sword ham)))
[16:38:56] <pjb> s/dx /dx) (incf /
[16:39:18] <pjb> Perhaps we should patch incf and decf to behave like setf? :-)
[16:39:19] <lotuseater> ds/dx would be velocity :D
[16:39:32] <lotuseater> but just by convention in x direction
[16:39:39] <pjb> well Δx
[16:40:58] <lotuseater> also
[16:41:19] <lotuseater> but d/dx is another operator for it (symbolically)
[16:41:26] <hayley> Rather (defmethod jump ((m monster)) ... (position-x m)) or even the effective method for MONSTER would kick butt.
[16:41:29] <lotuseater> or with partial differentials
[16:41:55] <hayley> Holy shit guys
[16:42:19] <hayley> Click implemented TCO in the JVM but Sun stopped it, then he quit his job
[16:42:37] <lotuseater> what's TCO? or did i miss something?
[16:42:48] <hayley> Tail call optimisation
[16:42:57] <lotuseater> good decision of him as Sun being Sun
[16:43:18] <lotuseater> ahh okay then i "know" what you talk about, but never seen the abbreviation for it
[16:44:01] <lotuseater> Scheme is good at TCO afaik and of course the first class continuations. in Haskell conts are abstracted via a monad
[16:45:05] <hayley> This guy is pretty much a compiler god tbqh
[16:48:28] <lotuseater> sounds cool
[16:49:11] <lotuseater> so there's this beatles song "Here comes the Sun"
[16:49:33] * hayley rather prefers Peter Gabriel's Here Comes the Flood
[16:49:50] <lotuseater> haha
[16:54:50] <lotuseater> hayley: so you can become too :)
[16:57:30] <edgar-rft> lotuseater: You bought toilet paper? I always thought the Corona toilet paper hoarding season is over, but somehow I'm not so sure anymore.
[16:57:42] <lotuseater> it's not for hoarding?
[16:58:28] <edgar-rft> let's form a toilet paper horde
[16:58:31] <lotuseater> i run on the last roll and just picked up a new pack
[16:58:37] <lotuseater> haha
[16:58:55] <lotuseater> better make a lisp meeting over Jitsi sometime
[17:33:04] <lotuseater> edgar-rft: since tuesday one needs again a shopping cart when going buy stuff in NRW
[17:34:14] <hayley> My dad started watching the presentation, thought it'd be boring and had a fair bit to laugh about.
[17:35:09] <selwyn> cliff quit his job over tco in the jvm?
[17:35:58] <lotuseater> or then doing own business with a better Java
[17:37:03] <selwyn> if so he is a functional programming martyr lol
[17:37:09] <lotuseater> hehe
[17:37:56] <lotuseater> better Java could also mean better sort of island coffee
[17:38:23] <hayley> selwyn: Then he shit talked F# in the presentation so I'm surprised he survived.
[17:38:57] <lotuseater> this microsoft ocaml
[17:40:15] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 265 seconds)
[17:40:25] <selwyn> lol
[17:40:40] <selwyn> my haskell weenie friend likes f# as a compromise solution
[17:41:24] <lotuseater> i think i could also be more friends with it in contrast to C#
[17:41:42] <hayley> selwyn: Rather he quit though, in part cause the managers shot down his ideas including TCO. But the summary is funnier.
[17:42:25] <hayley> Then he mentioned his programming school for PhD graduates and my dad asked why they need more school. Well, they're still not Cliff Click.
[17:42:32] <lotuseater> maybe they said "no one needs that academic thing"
[17:44:13] <hayley> But still, based on the modes of failure of the last two startups, it does indeed seem Ungar was right to say that the right partner is everything. And /me will use the hiring strategies next semester to pick a better project partner.
[17:45:06] <lotuseater> wish you the best
[17:47:11] <hayley> A shame that I'll never find anyone close to, let alone better than, my actual hacking partner who I have amazing coordination ("chemistry"?) with but anything is better than last semester.
[17:48:09] <selwyn> i think i would die if i had to carry on going to school after this phd
[17:50:03] * hayley reports an ad which says you could get money for reporting a software pirate.
[17:50:41] <hayley> The thing is they have to pay you more than you'd save from sailing the high seas.
[17:51:42] * selwyn plays the pirates song
[17:52:14] <hayley> "Dude, this captain is sourcing twinks" - mseddon
[17:53:08] <lotuseater> maybe I can a nontrivial PhD too anytime in my life :(
[17:53:12] <hayley> selwyn: but it is the Cliff Click school of high performancing, probably 1e9x better than the best bachelor courses imo
[17:53:35] <selwyn> yeah
[17:53:48] <selwyn> i would go to that actually
[17:53:52] <selwyn> imagine meeting cliff click
[17:53:55] *** Joins: makomo (~makomo@user/makomo)
[17:54:21] <selwyn> ok, i have come up with a shitty mathematical argument that may save my research if you believe it
[17:54:28] <selwyn> happily, it is rigorous enough for physics
[17:55:49] * hayley still contemplates writing an email. If she writes it with her fancy domain name, no one will know she runs r/cliffclickmemes?
[17:56:40] <selwyn> would have been great if elp did the soundtrack for dune
[17:58:35] <lotuseater> ah your pronouns are she/her? ^^
[17:58:55] <lotuseater> okay, hayley is a female name
[18:00:05] <hayley> Yes.
[18:00:21] <hayley> You got Brian Eno for some theme at least?
[18:01:45] <selwyn> yes
[18:06:52] <hayley> lotuseater: Fun fact, I picked the name by misspelling the Haley who found that comet in a joke.
[18:07:05] <lotuseater> nice
[18:07:32] <hayley> ";;; Hayley's comment" "Uh, that's Haley? But  I'll take the name."
[18:07:44] <lotuseater> my nickname has to do with greek mythology and a radio speech by David Hilbert or more clearly a quote that he gives
[18:08:00] <hayley> Bollocks, I meant Halley's comet.
[18:08:09] <lotuseater> ok now i got it!
[18:08:29] <hayley> As you can see I haven't learnt much.
[18:08:32] <lotuseater> so you're a comet flying around :3
[18:08:43] <selwyn> hayley: do you have a greek name
[18:08:45] <lotuseater> ah i won't say so
[18:09:07] <hayley> selwyn: Once I did.
[18:09:29] <lotuseater> some very sexy female greek name like "Helena"
[18:10:06] <hayley> Heh, sure.
[18:10:25] <lotuseater> but Haley is also as good :)
[18:12:11] <lotuseater> But completely independent of how someone identifies himself/herself, I simply find most important how much this other person can offer me intellectually or I can offer him/her/them.
[18:12:46] <lotuseater> also independent about age, one can for special things your senpai and the other way around
[18:14:55] <lotuseater> i hate it such phrases as "no I'm older and work in this field for 20 years so i know everything" ehm ...
[18:15:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:18:59] <lotuseater> hayley: how is your viewpoint with that?
[18:26:18] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:39:46] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:41:55] <lotuseater> hm when I wanna check the slot value of one CLOS objects slot that depends on another, would I better specialize MAKE-INSTANCE or INITIALIZE-INSTANCE with a :before method?
[18:55:02] <gilberth> initialize-instance :after
[18:55:37] <lotuseater> yeah okay you're right, :after makes more sense
[18:55:44] <gilberth> Good morning #lispcafe! btw
[18:55:50] <lotuseater> and as initialize-instance is called by make-instance
[18:55:57] <lotuseater> hey there gilberth :)
[18:56:36] <gilberth> Well, initialize-instance :after is the idiomatic way.
[18:57:28] <lotuseater> it's enough
[19:14:48] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[19:16:22] *** Joins: selwyn (~selwyn@user/selwyn)
[19:16:37] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:17:02] *** Joins: selwyn (~selwyn@user/selwyn)
[19:25:21] <gilberth> Can there be please a damn day, I don't discover bugs? This time Safari renders SVGs with a glitch.
[19:28:19] <gilberth> Although my SVG is silly as I render a bitmap as a lot of tiny rectangles. Still.
[19:29:29] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:29:53] *** Joins: selwyn (~selwyn@user/selwyn)
[19:31:08] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:35:02] <gilberth> $AMD over $100 now. Nice.
[19:35:55] <White_Flame> huh, maybe my $150 call option isn't so outlandish anymore? :-P
[19:37:07] <gilberth> Pretty ambiguous.
[19:37:12] *** Joins: zacts (~zacts@user/zacts)
[19:38:16] <gilberth> * ambitious ;grr
[19:39:24] <aeth> White_Flame: will it reach $150? Probably not. Will the $150 call be the most profitable until theta decay takes over about 3 months out? Possibly.
[19:40:03] <aeth> s/will it reach $150/will it reach $150 before expiration/
[19:40:21] <White_Flame> june 2022
[19:45:00] <aeth> I'm January 2022
[19:48:37] <White_Flame> I've had a lot of AMD calls die worthless this year, so I went out long
[19:48:56] <aeth> Calls > 3 months out
[19:49:14] <aeth> Puts, though? buy a bunch that die worthless because they'll continuously lose value anyway
[20:01:39] <edgar-rft> AMD = Another Million Dollars
[20:08:26] *** Joins: selwyn (~selwyn@user/selwyn)
[20:11:51] * gilberth coughs.
[20:12:11] <phoe> oi
[20:12:14] <phoe> https://netsplit.de/networks/top10.php
[20:12:20] <phoe> has it finally happened or what
[20:21:23] <selwyn> a lovely cliff edge
[20:22:44] <lotuseater> freenode seems dead :D
[20:22:53] <lotuseater> and hi phoe :)
[20:30:24] *** Joins: lad (~lad@user/lad)
[20:33:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[20:36:06] <shka> huh, i knew that freenode used to be the biggest irc network
[20:36:18] <shka> i didn't knew that it has more users then other networks combined
[20:36:59] <shka> but it worries me that libera didn't get as many users as freenode had
[20:37:28] <lotuseater> can still grow
[20:38:03] <lotuseater> I'm more worried something like with freenode happens to it, or there are from beginning on some safety mechanisms
[20:41:19] <phoe> hey lotuseater 
[20:41:25] <phoe> shka: blah
[20:41:34] <phoe> I assume that 50% of freenode was unused anyway
[20:41:44] <phoe> like, old IRC sessions and bouncers and what not
[20:41:55] <phoe> can't be any other way for a network that has been around for almost a decade
[20:42:04] <phoe> and was stable until the recent events
[21:03:26] <selwyn> such a pointless act of destruction
[21:03:32] <selwyn> i still don´t get what he hoped to achieve
[21:07:09] *** Joins: zacts (~zacts@user/zacts)
[21:07:16] <lotuseater> i should watch your talk from January in detail again the "immutable conversation"
[21:07:36] <shka> damn, arcane dimensions is cool
[21:08:11] <lotuseater> shka: I just know of Haussdorff (fractal) dimensions, so what are arcane dimensions? ^^
[21:08:25] <shka> mod for the quake
[21:08:38] <shka> really nice levels in there
[21:11:55] <lotuseater> ahh :D forgive me
[21:18:17] * selwyn wonders if fractal dimension can be related to dimensional renormalisation in qft
[21:18:24] <selwyn> probably, someone else has already had this idea
[21:18:24] *** Joins: zos (~zosthegoa@ool-457a8044.dyn.optonline.net)
[21:18:37] <selwyn> *regularisation
[21:19:49] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:34:27] <ck_> phoe: hey, your contact section on https://phoe.github.io/ says "Freenode" on it, maybe the time has come to .. and so on
[21:34:27] -ixelp- Michał "phoe" Herda
[21:34:49] <phoe> ck_: gasp
[21:34:51] <phoe> you are right
[21:35:00] <phoe> ;; I am curious why you ended up on that page now
[21:35:19] <ck_> I was looking for the slides to your clcs talk
[21:35:37] <phoe> oh! I don't know if I have them uploaded there, do I?
[21:35:43] <phoe> I know that I have a video
[21:36:25] <ck_> yes, I didn't see them there -- that's why I made it all the way to the bottom
[21:36:28] <phoe> ck_: fixed, thank you
[21:41:03] <phoe> ck_: I think I found them
[21:41:53] <ck_> phoe: it's okay if you'd like to keep them unpublished, but if you don't mind, I'd like to take another look
[21:43:13] <phoe> ck_: pushed, they should be available in a moment
[21:43:22] <phoe> or just https://github.com/phoe/phoe.github.io/blob/master/slides/control-flow.pdf
[21:43:23] -ixelp- phoe.github.io/control-flow.pdf at master · phoe/phoe.github.io · GitHub
[21:43:34] <ck_> thanks a bunch!
[21:43:51] <phoe> note that you need to view them on a program that supports full-slide switching rather than scrolling, because there's tons of animations there
[21:44:04] <ck_> Yes, I remember
[21:44:07] <phoe> so, navigating by left/right rather than up/down
[21:44:32] <ck_> looking forward to the cop cars
[21:44:33] <aeth> phoe: freenode is blocking unregistered connections
[21:44:55] <phoe> aeth: oh, so basically everyone
[21:45:10] <aeth> phoe: and since virtually everyone there is an unregistered account on an unattended bouncer that's just autoconnecting to a domain squat, when their connections drop they will drop and not be able to reconnect
[21:45:16] <aeth> probably like 2k or so registered nicks, tops
[21:45:19] <aeth> https://www.hinner.com/ircstat/Socip_F.html
[21:45:20] -ixelp- Kajetan Hinner, IRC Statistics Freenode
[21:45:23] <aeth> So IRC is now a battle royale
[21:45:33] <aeth> phoe: that statbot is still connected, though, so until it disconnects...
[21:46:00] <aeth> it's about to go under 15k
[21:46:08] <aeth> ##apocalypse is going to celebrate it
[21:48:43] <ck_> in what way?
[21:50:57] <phoe> in the usual way I guess, which is via shitposting
[22:04:57] *** Joins: derelict (~derelict@user/derelict)
[22:09:06] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[22:11:22] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[22:13:12] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:a5ab:8555:d9e0:dbd2) (Remote host closed the connection)
[22:21:56] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[22:23:16] *** Joins: zacts (~zacts@user/zacts)
[22:30:45] *** Joins: selwyn (~selwyn@user/selwyn)
[22:38:00] *** Joins: christophergray (~christoph@190.148.52.48)
[22:42:30] <shka> with the force of the thousand rectums
[22:50:45] <ck_> it is more idiomatic to say "with the force of a thousand", unless I'm missing a key piece of cultural history with the proper name "The Thousand Rectums", which is entirely possible
[22:50:59] <ck_> shka: thanks for posting the followup to the Prechelt study
[22:52:05] <shka> ck_: you are welcome
[22:52:13] <shka> i found it to be interesting
[22:52:36] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:52:55] <ck_> yes it is, absolutely. I often think of those studies
[22:53:15] * selwyn misses the context
[22:53:28] <ck_> one context, coming up
[22:53:42] <ck_> selwyn: https://norvig.com/java-lisp.html
[22:53:43] -ixelp- Lisp as an Alternative to Java
[22:54:08] <selwyn> the unbeatable language
[22:54:11] <ck_> and the one I saw shka post (yesterday?) https://renato.athaydes.com/posts/revisiting-prechelt-paper-comparing-languages.html
[22:54:11] -ixelp- Renato Athaydes
[22:54:16] <selwyn> yeah that thing
[22:54:20] <shka> yes, yesterday
[22:55:14] <ck_> argh.. I've been struck with the slime bug that doesn't close completion windows after completing, and can't remember what I did to fix it last time.
[22:55:18] <selwyn> there are some job postings which i am interested in that claim to not judge based on which language you have experience in
[22:55:26] <selwyn> i wonder what they would make of lisp
[22:55:41] <shka> oh, i can tell you waht
[22:55:58] <shka> "Oh god, he is one of THOSE people"
[22:56:01] <shka> "RUN"
[22:56:38] <selwyn> https://www.youtube.com/watch?v=p-JgNTvTA4E
[22:56:38] -ixelp- Hank Hill – I tell you hwhat - YouTube
[22:57:18] <shka> anyway, lispers are treated as weirdos 
[22:57:34] <shka> which i personally find to be very unfortunate
[22:57:55] <shka> because, sure, i am a weirdo, but why would you assume that by what write programs in?
[22:58:07] <shka> *I write
[23:00:03] <selwyn> to be fair
[23:00:06] <selwyn> i think we are weird
[23:00:35] <ck_> depends on who you compare with
[23:01:33] <shka> perhaps "unique" is a nicer word for that
[23:03:36] <phoe> selwyn: honestly, yes, we are unique
[23:03:38] <phoe> just like everyone else
[23:04:09] <selwyn> indeed
[23:04:21] <shka> no, there are 12 people on earth, rest is pasted
[23:04:37] <phoe> you got it wrong
[23:04:37] <selwyn> apostles?
[23:04:48] <phoe> there's only three people on the IRC: me, you, and the guy who types real fast
[23:07:00] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[23:08:17] <selwyn> the holy trinity
[23:25:09] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:28:19] <gilberth> I consider people who outright refuse to use their brain as weird.
[23:28:25] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[23:42:51] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2)
[23:47:26] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:51:38] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[23:52:59] <pjb> gilberth: it's energy-costly… 
[23:53:06] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:a270:4060:876f:9f40) (Ping timeout: 256 seconds)
[23:53:24] <pjb> gilberth: but right, I don't understand people who say thinking hurt their brains.  Brains don't have nerves inside them to sense any pain.
