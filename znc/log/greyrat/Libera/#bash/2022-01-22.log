[00:00:04] *** Quits: sinaowolabi__ (~SinaOwola@160.152.179.228) (Ping timeout: 256 seconds)
[00:03:45] *** Joins: Betal (~Betal@user/betal)
[00:07:08] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:08:06] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:08:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:8582:352:d913:c6a5) (Ping timeout: 240 seconds)
[00:13:18] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[00:13:20] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[00:14:42] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[00:17:14] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.232) (Quit: leaving)
[00:19:44] *** Joins: malina (~malina@user/malina)
[00:22:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[00:23:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[00:24:39] *** Joins: cliluw (~cliluw@47.147.73.223)
[00:27:08] *** Quits: aliosablack (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Quit: Leaving)
[00:27:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[00:28:35] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:31:36] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:32:12] <magyar> hi, can I pass a grep string as a command output?
[00:32:18] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:32:54] <phy1729> That didn't quite parse
[00:32:59] <magyar> grep -v $(hostname)
[00:33:02] <tirnanog> grep -F "$(...)" maybe
[00:33:19] <phy1729> also --
[00:33:25] <magyar> grep -v $(hostname) some_host_file
[00:33:36] <tirnanog> -F "$(hostname)"
[00:33:38] <emanuele6> i think -e, not --
[00:34:13] <phy1729> -e works too
[00:34:14] <emanuele6> -- also works it seems, nevermind
[00:34:33] <phy1729> magyar: you _must_ quote and you may want -F
[00:35:00] <magyar> tirnanog: can I or it " egrep -v "(stringA|$(hostname))" some_host_file
[00:35:02] <magyar> ?
[00:35:23] *** Joins: Hawker_ (~pi@user/hawker)
[00:35:31] <emanuele6> grep -F -ve "$(hostname)" -ve stringA
[00:35:51] <emanuele6> or, in bash, just use $HOSTNAME.
[00:35:51] <magyar> cool, thank you #bash
[00:36:05] *** Quits: Hawker_ (~pi@user/hawker) (Client Quit)
[00:36:16] *** Joins: ih8wndz (~ih8wndz@alpha.trunkmasters.com)
[00:37:06] *** Joins: zebrag (~chris@user/zebrag)
[00:38:36] <tirnanog> oh, inversion. yes, as above.
[00:38:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[00:43:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[00:43:42] *** Quits: zro (~zro@user/zro) (Ping timeout: 256 seconds)
[00:44:15] *** Joins: zro (~zro@user/zro)
[00:51:11] *** Joins: schamea (~schamea@user/schamea)
[00:51:31] <emanuele6> # printf '%s\n' {a..d} | grep -F $'a\nd'
[00:51:32] <shbot> emanuele6: a
[00:51:32] <shbot> emanuele6: d
[00:51:35] <emanuele6> yuck
[00:52:12] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[00:52:18] <emanuele6> $'a\nb' is the same as `-e a -e b'
[00:52:26] <emanuele6> i didn't know that
[00:53:04] <tirnanog> yeah. it's no infallible in this instance.
[00:53:06] <tirnanog> not*
[00:53:16] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[00:55:59] *** Quits: dreamon (~dreamon@p54b14230.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:56:33] *** Joins: pigweed (~pigweed@97.119.204.166)
[00:58:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:58:59] <phy1729> # printf '%s\n' {a..d} | grep -Fe $'a\nd
[00:59:05] <shbot> phy1729: Missing terminating quote, bracket or keyword
[00:59:13] <phy1729> # printf '%s\n' {a..d} | grep -Fe $'a\nd'
[00:59:15] <shbot> phy1729: a
[00:59:15] <shbot> phy1729: d
[00:59:56] *** Joins: n4dir (~user@mue-88-130-56-093.dsl.tropolys.de)
[01:00:31] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Ping timeout: 256 seconds)
[01:01:27] *** Quits: schamea (~schamea@user/schamea) (Quit: Quit)
[01:02:22] *** Parts: ham5 (iamfive@user/ham5) ()
[01:02:47] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 256 seconds)
[01:03:46] <lmat> How do I tell if a file exists in a directory tree? It looks like find always returns exit code 0.
[01:04:16] <lmat> I think   if [[ -z **/myfile ]]; is no good because if the file doesn't exist that will expand to "**/myfile" giving a false positive.
[01:04:38] <lmat> if [[ -e **/myfile ]]; doesn't seem good in case there are multiple files...
[01:04:40] <emanuele6> if ! find -name something -exec false {} +; then
[01:04:40] *** Joins: GuiToris (~GuiToris@user/guitoris)
[01:04:53] <lmat> emanuele6: Oh...didn't expect something so ... hacky ^_^
[01:04:54] <lucerne> What does `bash -9 -1` do? (The last -1)
[01:05:03] <emanuele6> lmat: **/file is literal in [[ -e
[01:05:06] <lucerne> sorry, `kill -9 -1`
[01:05:15] <GuiToris> hello, can you tell me what I messed up here? https://bpa.st/3TKA  no matter which button I choose, the exit code is 0
[01:05:17] <emanuele6> if you want to use dotglob you can do something like
[01:05:48] <lmat> lucerne: I'm guessing it sends signal 9 then signal 1...
[01:05:49] <emanuele6> a=( **/file ); if [[ ${#a[@]} = 0 ]]
[01:05:59] <emanuele6> err !=
[01:06:08] <lmat> emanuele6: Ahh, slick. What is dotglob?
[01:06:10] <emanuele6> (with nullglob obviously)
[01:06:33] <emanuele6> lmat: oops
[01:06:37] <lmat> emanuele6: No sweat, I follow :-D
[01:06:39] <lucerne> lmat: I found it using google: https://askubuntu.com/questions/995517/what-is-the-function-of-kill-1-9-command#:~:text=EXAMPLES%20kill%20%2D9%20%2D1%20Kill,that%20they%20do%20not%20own.
[01:06:39] <emanuele6> i meant glob star
[01:06:40] *** Joins: gry (gry@botters/gry)
[01:06:52] <lmat> emanuele6: Yes, I use globstar ^_^ Thank you!
[01:06:59] <emanuele6> !nullglob
[01:06:59] <greybot> Causes unmatched globs to expand to nothing rather than themselves. shopt -s nullglob; files=(*); echo "There are ${#files[@]} files." - see: http://mywiki.wooledge.org/glob#nullglob
[01:07:04] <gry> how on earth do i navigate to next file in 'less' when it is viewing multiple files please?
[01:07:05] <emanuele6> and also nullglob
[01:07:11] <emanuele6> !dotglob
[01:07:11] <greybot> dotglob, if set, makes bash include filenames beginning with a '.' (excluding . and ..) in the results of pathname expansion (shopt -s dotglob)
[01:07:15] <lmat> emanuele6: Yes, so the array is empty with no match!
[01:07:18] <emanuele6> dot glob only if you need it
[01:07:36] <akoana> gry: just :n
[01:07:53] *** Joins: ASDF123 (~ASDF123@89.128.41.255)
[01:07:54] <gry> ta
[01:07:56] <lmat> emanuele6: Okay. I have dotglob on in my interactive terminal...shouldn't matter in this case.
[01:08:43] <lmat> lucerne: Wow... -1 is scary.
[01:09:03] <Soliton> GuiToris: safe the exit status in a variable if you want to use it later. don't assume it somehow is not overwritten by the next command.
[01:10:24] <Soliton> GuiToris: also hopefully you're an expert on how the syntax works there. otherwise i'd write a shell script and call that.
[01:10:47] <emanuele6> # bash -c 'false; echo "$?"'
[01:10:49] <shbot> emanuele6: 1
[01:10:56] <GuiToris> haha, expert, sure :D
[01:11:06] <emanuele6> # bash -c "false; echo $?"
[01:11:07] <shbot> emanuele6: 0
[01:11:11] <emanuele6> that is what you have ^
[01:11:15] <emanuele6> see the problem?
[01:11:29] <Soliton> i doubt that but who knows.
[01:11:41] *** Joins: vlm (~vlm@user/vlm)
[01:11:48] <Soliton> that is a desktop file or something not called by a shell.
[01:11:57] *** Quits: ASDF123 (~ASDF123@89.128.41.255) (Ping timeout: 240 seconds)
[01:12:04] <GuiToris> I hardly noticed the quotes
[01:12:29] <tirnanog> the syntax is decribed - at least in part - in the command lines section of systemd.service(5). I, too, would highly recommend using a script unless you enjoy pain.
[01:12:31] *** Joins: seninha (~seninha@user/seninha)
[01:13:32] <GuiToris> emanuele6, did you mean [ "$?" = 0 ]
[01:13:51] <GuiToris> or that's not the point
[01:14:04] <emanuele6> i meant that you have $? in a   bash -c "...."
[01:14:24] *** Quits: pigweed (~pigweed@97.119.204.166) (Quit: Leaving)
[01:14:43] <emanuele6> so, in bash at least, $? would get expanded to whatever (probably 0) everywhere in the command before running bash-c
[01:14:45] <Soliton> one point is that you use $? after if and hope it has a previous value the other is that you need to know the syntax rules of your context.
[01:14:51] <emanuele6> but maybe doesn't matter as Soliton pointed out
[01:16:00] <Soliton> if you don't know the syntax rules you don't even know what you're calling bash with.
[01:16:30] <Soliton> not even talking about the %U injection.
[01:17:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:17:42] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[01:19:07] <GuiToris> I don't understand how I could move $? after 'if' : https://bpa.st/G4SQ  I somewhat simplified
[01:19:33] <emanuele6> it is not a bash question.
[01:19:49] <larryv> why don't you just get rid of the $?
[01:19:49] <emanuele6> if it is systemd, read systemd.service(5) and learn the syntax
[01:19:49] <geirha> ![$? > GuiToris
[01:19:50] <greybot> GuiToris: Don't do this: ``mycommand; if [ $? -eq 0 ]'' -- You're running the [ command and checking its exit code to test whether "mycommand"'s exit code is 0. That's a pointless operation, test mycommand directly: ``if mycommand''
[01:19:50] <tirnanog> use a script, then we can get things done. I highly doubt anyone here is going to relish debugging systemd's quoting layer.
[01:20:15] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d)
[01:20:38] <geirha> inside the then or else block, $? will be the exit status of the [ command used in the if
[01:21:15] <emanuele6> also GuiToris has "$?" inside "..."
[01:21:28] <emanuele6> in the then path of the if
[01:23:18] <geirha> yeah, it's a mess for multiple reasons
[01:23:41] <tirnanog> that being said, I just tried ExecStart=bash -c "false; echo $?". it produces 1, which is fun.
[01:24:27] <GuiToris> I played around with it in the command line, and bash -c "" must be the source of the problem
[01:24:46] <tirnanog> it's almost as if we are suggesting not to do that.
[01:24:55] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:25:02] <geirha> how systemd parses those quotes matters, yes, and the broken shell code inside is also an issu
[01:25:04] <geirha> e
[01:25:04] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d) (Ping timeout: 250 seconds)
[01:25:27] <GuiToris> I'll check this ![$?
[01:25:35] *** Joins: unop (~unop@194.154.249.71)
[01:26:13] <geirha> simplify it by removing the systemd parsing issue; put the script in a file and then just Exec=konsole -e /path/to/your/script
[01:26:36] <geirha> once you've nailed the bash part, you can try to re-embed it into the systemd unit file
[01:27:15] <GuiToris> I'm afraid  won't get substituted if it is in a scriptfile :S
[01:27:27] <GuiToris> \
[01:27:32] <GuiToris> it's not visible here
[01:27:35] <Soliton> myscript %U
[01:27:37] <GuiToris> I wrote % U
[01:27:53] <GuiToris> I see
[01:27:54] <geirha> yeah, pass it as argument and use "$1" instead of %U inside the script
[01:28:06] <Soliton> it's a good thing that it's not injected.
[01:28:16] <GuiToris> thank you, I'll give it a try :)
[01:28:17] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[01:28:50] <emanuele6> why are you even checking [ "$?" = 0 ] if you are appending "$?" to the same file either way? is that supposed to be some sort of obfuscated way of doing $(( $? != 0 ))?
[01:29:41] <geirha> it's also a possibility that konsole is messing up the quoting; depending on whether it treats -e like gnome-terminal's -e or like xterm's -e
[01:30:01] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:30:17] *** Quits: Minvera (~Minvera@162.223.44.49) (Quit: Leaving)
[01:30:39] *** Joins: idego (~idego@user/idego)
[01:39:27] *** Joins: jimr (~jimr@cpe-67-246-126-46.twcny.res.rr.com)
[01:39:49] *** Parts: jimr (~jimr@cpe-67-246-126-46.twcny.res.rr.com) (Leaving)
[01:41:08] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[01:41:39] <GuiToris> I don't understand what shellcheck says: https://bpa.st/raw/4T2Q
[01:41:40] <GuiToris> !check
[01:41:41] <checkbot> GuiToris: Line 2: Couldn't parse this test expression. Fix to allow more checks. Line 2: The mentioned syntax error was in this if expression. Line 2: Expected a test operator. Fix any mentioned problems and try again. See https://shellcheck.net/?id=cb3101
[01:42:23] <phy1729> !ifgrep
[01:42:23] <greybot> if grep -q word "$file"; then blah blah; fi # DO NOT use [[ or [ or ` or $() or any other crap. "if" expects a command. "grep" is a command. "[" is too. You don't need both. Likewise, if foo | grep -q bar; then ...
[01:44:41] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:44:43] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:44:59] <GuiToris> thanks, apparently it's working without [[]], and shellcheck is also silent
[01:48:13] <GuiToris> geirha, use "$1" instead of  inside the script   , can I use "$@" ?
[01:48:33] <geirha> sure
[01:48:38] <GuiToris> thanks :)
[01:50:43] *** Quits: nyex (~Thunderbi@177.84.107.55) (Quit: nyex)
[01:53:14] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[01:53:51] <wiscii> confused parenthisees ;-)
[01:54:01] <GuiToris> Argument mixes string and array :S
[01:54:17] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[01:54:31] <GuiToris> https://bpa.st/ULPA
[01:54:37] * wiscii *gulps*
[01:55:33] <tirnanog> you may use $* for expansion within your message.
[01:55:36] <geirha> use "$*" or "${*@Q}" to expand all arguments to a string instead of as separate strings
[01:56:01] <geirha> for the shred command you still want "$@"
[01:56:31] <tirnanog> inded, "${*@Q}" would be nicer.
[01:56:36] <GuiToris> ahh, so that's why I saw the first path only!
[01:56:38] <GuiToris> thanks a lot
[01:56:48] <wiscii> what i observed was the use of [[ with the if and the command
[01:57:21] <wiscii> cos' i make the same mistake
[01:57:29] <wiscii> made*
[02:01:14] <GuiToris> "${*@Q}" worked well. is it possible to insert \n in between every paths? The message is hard to read
[02:01:56] <tirnanog> begin the script with IFS=$'\n'
[02:02:14] <tirnanog> (seeing as it's not going to affect anything else it's doing)
[02:03:02] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[02:03:40] *** Quits: dfinr (~dfinr@user/dfinr) ()
[02:03:41] <GuiToris> oh, much better! much much better
[02:03:45] <GuiToris> thank you very much! :)
[02:03:59] *** Joins: dfinr (~dfinr@user/dfinr)
[02:04:08] <tirnanog> by way of explanation, a subscript of * effectively joins on the first character of IFS.
[02:04:24] *** Quits: dfinr (~dfinr@user/dfinr) (Remote host closed the connection)
[02:05:57] *** Quits: kj (~kj@beta.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:07:00] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[02:08:46] <wiscii> tirnanog: is that a bash array thing ?
[02:09:08] <tirnanog> it works with arrays as well as the positional parameter list, yes.
[02:09:22] <wiscii> ah so .. but bash only ?
[02:09:36] <tirnanog> sh also, as far as positional parameters are concerned.
[02:09:59] <wiscii> oh, that is really nice then ! thanks
[02:10:13] * wiscii checks some new results!
[02:10:15] <tirnanog> sh# set foo bar baz; IFS=-; printf '%s\n' "$*"
[02:10:16] <shbot> tirnanog: foo-bar-baz
[02:10:41] <wiscii> excellent
[02:10:43] <tirnanog> alternatively:
[02:11:04] <tirnanog> sh# splat() { printf '%s\n' "$*"; }; set foo bar baz; IFS=- splat "$@"
[02:11:05] <shbot> tirnanog: foo-bar-baz
[02:11:22] <tirnanog> which might be useful in the case that you don't want to alter IFS beyond the ... splatting.
[02:11:36] * wiscii pours tirnanog a glass with a little crushed ice ;-)
[02:12:16] <wiscii> already scoping IFS but that's some great tipping!
[02:13:02] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:14:09] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[02:14:45] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:21:36] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[02:22:15] <larryv> !ifs > wiscii
[02:22:15] <greybot> wiscii: Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and https://wiki.bash-hackers.org/syntax/words
[02:22:32] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[02:23:07] *** Quits: magla (~gelignite@55d4db0b.access.ecotel.net) (Quit: Stay safe!)
[02:23:26] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[02:23:34] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d)
[02:23:59] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Quit: WeeChat 3.4)
[02:24:23] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d) (Client Quit)
[02:24:27] <wiscii> larryv: ty :)
[02:26:41] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[02:26:56] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[02:27:09] *** Quits: timm (~timm@user/timm) (Ping timeout: 268 seconds)
[02:30:48] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[02:31:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Remote host closed the connection)
[02:33:04] *** Joins: smrtz (~smrtz@user/smrtz)
[02:34:34] <welder> does "foo < ./a.out" work?
[02:35:13] <welder> sec...
[02:35:17] <welder> i messed up, nvm
[02:35:18] <tirnanog> it's valid syntax. whether it does what you wish is another matter.
[02:35:21] <larryv> that runs "foo" with ./a.out open for reading on stdin
[02:35:26] <larryv> if that's what you want, it "works", sure.
[02:35:57] <welder> no that's not what i wanted, it was a coincidence that it worked haha
[02:36:05] <welder> i was so confused
[02:36:08] <welder> nevermind
[02:39:21] *** Joins: igemnace (~ian@user/igemnace)
[02:39:25] *** Joins: ChmEarl (~chmearl@user/chmearl)
[02:42:32] * wiscii searches xkcd foor confused ;-)
[02:42:41] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[02:43:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:44:17] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[02:45:30] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:46:24] <flower_> nohup sh -c ". $HOME/.jackdrc" > /tmp/jackd.log 2>&1 &
[02:46:42] <flower_> seems to run the first line in .jackdrc as command... hm
[02:46:52] *** Quits: mooz (~none@23.254.112.158) (Remote host closed the connection)
[02:47:06] <flower_> or maybe the whole file?
[02:47:32] <emanuele6> what are you trying to do?
[02:47:57] <flower_> /usr/bin/jackd -dalsa -dhw:CODEC -r48000 -p256 -n3 -s
[02:48:07] <flower_> this command is in .jackdrc
[02:48:09] *** Joins: son0p (~ff@181.136.122.143)
[02:48:24] <flower_> I want to read that line and run it (to start jackd)
[02:48:46] <flower_> actually the plan is to do it via pythons subprocess
[02:49:02] <flower_> then store the pid of jackd in a file, so I can kill it
[02:49:04] <flower_> later
[02:49:55] <flower_> I was reading someone else code, he uses the nohup command apparently.
[02:50:15] <Blondie101010> so you decided to use it just because someone else did?
[02:50:30] <Blondie101010> it seems appropriate, but a bad idea to run things blindly
[02:50:38] <flower_> no, I didn't decide anything yet
[02:50:54] <emanuele6> sh -c ". $HOME/jackrc" is injecting a path and sourcing a file unnecessarily either way, nohup or not
[02:51:19] <flower_> it uses sh, so I thought, is there a bash equivalent or something
[02:51:23] <Blondie101010> and I suspect that jackd probably daemonizes on its own
[02:51:36] <emanuele6> sh - "$HOME/.jackrc"
[02:51:57] <Blondie101010> woohoo :)
[02:52:14] *** Joins: mooz (~none@23.254.112.158)
[02:52:15] <emanuele6> but why would a program require you to run it's "rc" (which usually means configuration) file to start it.
[02:52:17] <flower_> does it make sense to use sh in a bash script?
[02:52:35] <emanuele6> also you don't seem to expect that to run jackrc as a script.
[02:52:42] *** Quits: znf (ibm86@blender.linge-ma.ro) (Excess Flood)
[02:52:45] <llua> depends
[02:52:45] <emanuele6> <flower_ > seems to run the first line in .jackdrc as command... hm
[02:53:03] <Blondie101010> we'd have to see the script to know
[02:53:21] <emanuele6> why are you doing that? are you sure this is about bash?
[02:54:38] <flower_> I was trying to make a curses app in python, using subprocess.Popen to run the jackd command. But the messages spoil my curses screen
[02:54:52] <Blondie101010> learn redirection
[02:55:02] <flower_> so, plan b was to make a bash script, the redirects the output to a logfile
[02:55:16] <flower_> and run that from pythons subprocess
[02:55:40] <Blondie101010> why do you need a script that calls another script that calls another script instead of a proper service set up?
[02:55:46] <flower_> but maybe subprocess Popen can do some redirection too...
[02:55:50] *** Joins: znf (ibm86@blender.linge-ma.ro)
[02:56:32] <flower_> because I know how to setup a script, but not how to setup a service.
[02:56:34] <flower_> :)
[02:57:01] <Blondie101010> so this jackd only needs to run when you start it?
[02:57:31] <flower_> I was planning to start it with a key and kill it with a key
[02:57:34] <flower_> as simple start
[02:57:58] <Blondie101010> hmmm ok
[02:58:17] <flower_> as 'works for me solution'... and then explore how to do it properly from there
[02:58:33] <Blondie101010> why does it need to be stopped?
[02:58:51] <Blondie101010> and why write python and bash scripts to do that?
[02:59:05] <flower_> when there are problems with jackd / sound... then a restart might help
[02:59:45] <flower_> I want a visual curses app,
[02:59:50] <flower_> but good question
[03:00:04] <Blondie101010> note that a quick Google search tells me that jackd2 has a systemd service
[03:00:27] <flower_> jackdbus indeed
[03:00:43] <Blondie101010> that's probably something else
[03:01:40] <flower_> but I want to avoid dbus and systemd too
[03:01:45] <flower_> :)
[03:02:12] *** Joins: akoana (~ah@user/akoana)
[03:03:32] <Blondie101010> to me it sounds like you want to waste hours to do something you could learn to do properly in 5 minutes
[03:04:58] <flower_> and what do you think I've to learn?
[03:05:17] <Blondie101010> probably basic systemd usage
[03:05:23] <flower_> write a simple c/ c++ application probably
[03:05:46] <flower_> I think I need to learn how to do proper redirection with pythons subprocess
[03:05:47] <emanuele6> probably how to correctly run a shell script.
[03:06:07] <emanuele6> i.e.   sh /path/to/file
[03:06:26] <flower_> yes, thx for that command
[03:06:54] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[03:07:12] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:07:14] <Blondie101010> do you only know the language names or are you familiar with any of them?
[03:08:36] <flower_> I'm doing Python atm. But try to *read* some c code now and then
[03:09:17] <flower_> I did look at the JACK (jackd) API for instance
[03:09:46] <emanuele6> is this about using the jackd program or about learning programming? i don't get it.
[03:10:19] <emanuele6> there are #jack and ##programming if your question is about those things and not bash
[03:10:25] <wiscii> always best to establish a common goal ;-)
[03:10:30] <flower_> this is about making working with linuxaudio tools like jackd more easy and build myself some handy tools for it.
[03:10:32] <emanuele6> i am failing to understand your question otherwise
[03:10:42] <Blondie101010> so far the main focus seems to be to make a curses interface
[03:10:58] <flower_> the question started with: nohup sh -c
[03:11:09] <Blondie101010> which means you don't know shell basics
[03:11:10] <flower_> and I was wondering how that should be done with bash
[03:11:20] <Blondie101010> what does `nohup` do?
[03:11:23] <emanuele6> you never said what
[03:11:33] <wiscii> it was `nohup foo &` ;-)
[03:11:36] <emanuele6> "how should be done in bash" what?
[03:12:08] <flower_> sh -c ... or read the first line from a file and run it.
[03:12:25] <Blondie101010> so you only want to run the first line?
[03:12:38] <Blondie101010> head -1
[03:13:07] <flower_> that's not bash, is it!? ;)
[03:13:34] <Blondie101010> not sure if I should cry now or hold it in for worse later
[03:14:30] <wiscii> the hippy in me says hold it in ;-)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:08] <flower_> you're very happy with your state of knowledge of bash it seems. Good for you. So am I.
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:06] *** Joins: Gerula (~Gerula@user/gerula)
[03:17:23] <wiscii> flower_ | seems to run the first line in .jackdrc as command... hm
[03:17:41] <wiscii> that appears to be the crux of your question ?
[03:18:10] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:18:43] <Blondie101010> bash -c "$(head -1 ~/.jackdrc)"
[03:19:00] <flower_> wiscii, I was looking for ways to do that. I saw the sh -c command, which I failed to understand for 100%. So I chimed in to learn something.
[03:19:17] *** Joins: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt)
[03:19:38] <geirha> s/-1/-n 1/
[03:19:45] <emanuele6> ^
[03:19:58] <geirha>  >
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:07] <flower_> Blondie101010, bash -c. ok
[03:20:25] <Blondie101010> man bash # will tell you the -c is to specify a command
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:48] *** Joins: foul_owl (~kerry@94.140.8.106)
[03:23:19] *** Quits: furrymcgee (~devuan@cgn-89-1-211-103.nc.de) (Ping timeout: 256 seconds)
[03:24:54] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:25:27] *** Quits: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt) (Read error: Connection reset by peer)
[03:25:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[03:26:30] *** Joins: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt)
[03:28:06] <wiscii> so long as that furry rock lobster gets a regular sheering, it's all guud :p
[03:30:47] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:33:57] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[03:34:40] *** Joins: ferdna (~ferdna@user/ferdna)
[03:37:31] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[03:39:44] <tirnanog> scripting in the kitchen; his shell code broke; lots of trouble; #bash got hustled; he was in a jam (ooh ah); should have listened to the chan!
[03:40:34] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[03:42:30] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[03:42:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:44:19] *** Parts: gry (gry@botters/gry) ()
[03:46:28] *** Quits: amcorrigal (~alexcorri@185.92.25.98) (Quit: WeeChat 3.4)
[03:47:39] *** Quits: pgp (~pgp@a213-22-199-96.cpe.netcabo.pt) (Quit: Leaving)
[03:48:09] *** Quits: zoe (~zoe@fsf/member/zoe) (Remote host closed the connection)
[03:48:57] <wiscii> tirnanog: LOL ;-) i can't quite name that tune though, care to hint
[03:50:02] <wiscii> it sounds to me like "shampoo: trouble" ;-) power rangers!
[03:50:07] <tirnanog> rock lobster by the B-52s.
[03:50:15] <wiscii> oh right ..
[03:50:17] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:50:29] * wiscii adjusts tuning
[03:50:48] <wiscii> yep, cool
[03:51:10] <wiscii> !rock
[03:51:14] <wiscii> hehe
[03:51:53] *** Quits: n4dir (~user@mue-88-130-56-093.dsl.tropolys.de) (Remote host closed the connection)
[03:52:34] <wiscii> !learn
[03:52:34] <greybot> usage: !learn key value...
[03:53:16] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 250 seconds)
[03:53:26] <wiscii> !learn whorox tirnanog,wiscii
[03:53:26] <greybot> OK, wiscii
[03:53:35] <wiscii> !whorox
[03:53:35] <greybot> tirnanog,wiscii
[03:54:04] <wiscii> !learn whorox
[03:54:04] <greybot> usage: !learn key value...
[03:54:19] <wiscii> !fiiorget whorox
[03:54:21] *** Joins: timm (~timm@user/timm)
[03:54:26] <wiscii> !forget whorox
[03:54:27] <greybot> OK, wiscii
[03:54:30] <wiscii> ii
[03:58:56] <wiscii> i just created #bash-offtopic because i would like to discuss something completely unrelated to bash
[03:59:24] <wiscii> the subject i would like to discuss would be ancient egypt
[03:59:50] <wiscii> if that is something of interest to you then i implore you to join me :)
[03:59:56] <Blondie101010> why not call it #ancient-egypt ?
[03:59:59] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[04:00:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[04:00:23] <wiscii> meh .. i did not think of that
[04:01:20] <wiscii> very well, so now it is #ancient-egypt
[04:02:25] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 256 seconds)
[04:03:48] *** Joins: ouestbillie (~gallup@185.195.233.158)
[04:04:17] <emanuele6> i think #ancient-egypt breaks libera.chat's rules
[04:04:31] <emanuele6> it should be #ancientegypt
[04:05:16] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:05:26] <wiscii> really ?
[04:05:38] <wiscii> sounds a bit stiff ?
[04:06:00] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[04:07:29] <wiscii> actually #openvpn-devel is therefore also in error ..
[04:07:53] <emanuele6> no
[04:07:55] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[04:08:05] <emanuele6> see https://libera.chat/chanreg/
[04:08:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:08:52] <wiscii> i have not registered the channel
[04:09:18] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[04:09:20] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[04:09:26] <wiscii> ##
[04:09:29] <emanuele6> i know, i was just saying in case you wanted to make it somewhat permanent
[04:09:34] <wiscii> nevermind .. next time
[04:09:34] *** Joins: crashrep (~crashrep@user/crashrep)
[04:09:43] <emanuele6> and also to explain why #openvpn-devel is not against the rule
[04:09:45] <wiscii> thanks :)
[04:10:04] <wiscii> yep, i see what you're getting to :)
[04:10:49] <wiscii> your example should have been ##ancient-egypt ?
[04:11:02] *** Joins: steam (~steam@user/steam)
[04:12:12] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[04:12:20] <crashrep> couldn't you just talk about this in ##chat
[04:12:54] *** Joins: yetoo (~yetoo@user/yetoo)
[04:14:32] *** Quits: timm (~timm@user/timm) (Ping timeout: 240 seconds)
[04:14:59] <wiscii> crashrep: sure, sorry for the noise
[04:15:17] <crashrep> yeah, but i meant the ##ancient-egypt chat too
[04:15:34] <wiscii> i know ;-)
[04:15:44] <wiscii> !ot
[04:15:44] <greybot> Please try to keep offtopic chatter to a minimum. Feel free to join ##chat for social chat.
[04:16:01] <yetoo> In my .profile is export ENV=$HOME/.shrc and there is a comment saying this would load .shrc at shell startup. But testing some variables finds .shrc not being called. What can be done to get that line to successfully call .shrc?
[04:19:54] <pj> yetoo: bash only looks at ENV when invoked in posix mode (as sh).
[04:20:31] <e36freak> you can have .basrc source .shrc
[04:20:34] *** Quits: wurstwasser_2 (~frank.hol@aftr-62-216-207-210.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[04:20:41] <pj> look at the bash(1) man page at the section INVOCATION
[04:20:42] <e36freak> if you want an shrc that's portable and also  to have bash read it
[04:28:53] <yetoo> would it be possible to look at the file in a separate instance and transfer the .shrc variables with something like  export ENV=$(bash --posix -c "$HOME/.shrc")
[04:28:58] <tirnanog> waht do you intend to do in .shrc? if it's just a case of setting environment variables, you might as well use .profile instead.
[04:30:31] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[04:31:03] *** Joins: nunggu (~q@user/nunggu)
[04:32:52] <yetoo> tirnanog: I am using netbsd and comes with /etc/.shrc (told to be read by ~/.shrc) having logic to change PS1. It would be great that along with sh reading .shrc to set PS1, bash would do so as well so there arent different files the shells are reading from and as well as keep things neat. The only time I would be using sh that would be calling these configuration files would be during some sort of recovery, but again I want to keep things neat
[04:34:17] <e36freak> yetoo: just source .shrc in .bashrc
[04:34:18] <tirnanog> ok. just source it from .bashrc then?
[04:34:33] <tirnanog> and make sure you have a .profile (or .bash_profile) that sources .bashrc if it exists.
[04:34:42] <tirnanog> if the former, then guard it with a [ "$BASH" ] test, also.
[04:35:06] <tirnanog> that way, login shells will also be covered.
[04:36:02] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[04:36:18] <tirnanog> !dotfiles
[04:36:18] <greybot> Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
[04:37:14] <tirnanog> bash - as a login shell - does also check for .profile, if .bash_profile is missing.
[04:37:50] *** Joins: nickdiaz3wag209 (~bjpenn_@98.42.87.100)
[04:40:34] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[04:40:34] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.42) (Ping timeout: 256 seconds)
[04:41:17] <yetoo> tirnanog: sh at least on my os reads .profile
[04:41:38] <yetoo> source isn't a command accepted by sh
[04:42:00] <tirnanog> if you have a .profile already, append this to it: if [ "$BASH" ] && [ -f ~/.bashrc ]; then . ~/.bashrc; fi
[04:42:01] <e36freak> use '.'
[04:42:09] <tirnanog> it doesn't matter if you use source or . as long as it's properly guarded.
[04:42:18] <tirnanog> well, maybe in posix mode. yeah, better use .
[04:42:42] <tirnanog> anyway, once done, source .shrc from .bashrc and you're all set.
[04:43:27] <tirnanog> and you still get to use .profile as intended for both bash and the vast majority of sh implementations.
[04:43:53] <yetoo> what are the differences in effect if I do . $HOME/.shrc vs export ENV=$HOME/.shrc
[04:43:58] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[04:44:21] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[04:44:32] <yetoo> would export ENV=. $HOME/.shrc source it or would I need to do export ENV=$(. $HOME/.shrc)
[04:44:44] <tirnanog> for one, bash doesn't care about ENV in posix mode. for another, if ENV isn't set at the time that bash is launched, it's already too late.
[04:44:59] <tirnanog> I don't understand why it would need to be any more complicated than was already described.
[04:45:06] <tirnanog> er, unless in posix mode, I mean.
[04:45:13] <yetoo> sh I'm using isnt bash posix mode, its the real sh
[04:45:37] <yetoo> it's just like export ENV=$HOME/.shrc works with sh and it doesn't work with bash
[04:45:51] <tirnanog> correct. it won't work.
[04:45:57] *** Quits: clime (~clime@78-80-115-5.customers.tmcz.cz) (Quit: WeeChat 3.3)
[04:47:01] <tirnanog> how and where is ENV being set to begin with in your OS? is it in your environment prior to the point at which you launch a shell for interactive use?
[04:47:17] *** Joins: luckiswithme (~luckiswit@149.167.139.159)
[04:47:35] <tirnanog> or, put more concretely, does the parent process of your terminal emulator and/or shell already propagate ENV?
[04:48:35] <pj> if you run `export ENV=$HOME/.shrc` and *then* call sh, then yes, it will work, because sh will see that ENV is set.  This will work regardless of which shell is actually linked to /bin/sh.
[04:48:47] <pj> It won't work with bash because bash doesn't look at ENV.
[04:49:30] <yetoo> I was able to set it with . $ENV on the line after the export. All I could find is ENV being set to .shrc in .profile
[04:50:56] <pj> but as others have said, source $HOME/.shrc from .bashrc and then bash will see it, or if you want bash to explicitly see whatever is in ENV, then, `if [[ $ENV && -r $ENV ]]; then . "$ENV"; fi`
[04:51:07] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:51:13] <pj> note if that code is in .bashrc you can use bash-specific code like that there.
[04:52:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:52:20] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[04:53:16] <pj> then also, as others have said, make sure .bash_profile has `. $HOME/.bashrc` in it, but better yet: `if [[ -r $HOME/.bashrc ]]; . "$HOME/.bashrc"; fi`
[04:53:17] <tirnanog> source .bashrc from .profile if confirmed to be running bash. then source .shrc from .bashrc. that's all.
[04:53:45] <pj> well, just source it from .bash_profile
[04:54:48] <wiscii> crashrep: i went to ##chat and got banned
[04:55:00] <crashrep> rip
[04:55:01] <wiscii> room fuull of sjw's
[04:55:24] <wiscii> define chat - shut the fuck up
[04:55:31] <tirnanog> doing it from .profile can be useful in the case that .profile is already being used for other things (such as defining env vars) and one does not wish to duplicate the effort for bash.
[04:55:42] <tirnanog> but either way would do.
[04:55:48] *** Joins: hashbangenjoyer (~hashbange@192.160.216.63)
[04:56:04] <pj> yeah, although you can also source .profile from .bash_profile if that's the case
[04:56:26] <hashbangenjoyer> hey, i have a problem with the sed command and i cannot find a solution online
[04:56:30] <tirnanog> timtowtdi, yes.
[04:56:47] <hashbangenjoyer> i want to append a file after the html tag <main> but it is also being appended after </main>
[04:57:21] <pj> hashbangenjoyer: use a proper html parser, sed is a poor and problematic way to attempt to parse and edit html
[04:57:25] <hashbangenjoyer> the solution can either be fixed by only appending the first result it finds or by not ignoring the slash when looking
[04:57:27] <pj> !html
[04:57:27] <greybot> You can't parse tag-based languages like HTML or XML using bash, grep, sed, cut, etc. See http://mywiki.wooledge.org/BashFAQ/113 instead.
[04:58:13] <hashbangenjoyer> i really don't want to do that, because my script is more than an html parser and i don't want any dependencies
[04:58:42] <hashbangenjoyer> the problem can be solved by using <div id="content> instead, because the closing tag is not the same as the opening tag
[04:59:28] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 268 seconds)
[05:00:16] <hashbangenjoyer> greybot: all i'm doing is combining two html files together with sed, the html files are not long strings in sed
[05:00:25] <pj> when all you have is a hammer everything looks like a nail.
[05:00:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:00:44] <pj> go get a screwdriver
[05:00:47] <hashbangenjoyer> ah yes, a good generic expression that can be inserted anywhere
[05:01:19] <hashbangenjoyer> i'm sorry if you hear people like me a lot but sed has been perfectly suited for everything else in my project
[05:01:45] <hashbangenjoyer> i have my own solution, i was just wondering if there was something i had to learn about sed parameters, with only doing first match for example
[05:01:51] * rkta wonders how to drive in nails with a screwdriver
[05:01:54] *** Parts: yetoo (~yetoo@user/yetoo) (Leaving)
[05:02:01] <pj> if you're going to use sed then just do it, but don't blame us when you have problems down the road.  There is a reason we're saying it's the wrong tool for the job.
[05:02:19] *** Joins: n4dir (~user@mue-88-130-56-093.dsl.tropolys.de)
[05:02:29] <pj> rkta: one tap at a time
[05:02:29] <hashbangenjoyer> is awk better suited?
[05:02:36] <pj> no
[05:02:41] <hashbangenjoyer> didn't think so
[05:03:58] <rkta> pj: thx, will try :)
[05:05:37] *** Joins: vysn (~vysn@user/vysn)
[05:06:39] <pj> hashbangenjoyer: really, all I'm trying to say is you will save yourself grief if you just bite the bullet and use a proper tool now.  I get that may make things more difficult.  If you want to use sed then go ahead, but I believe it will give you problems later on when the format of the html changes a bit, or some other content is inserted in the doc that fools sed.
[05:07:56] <hashbangenjoyer> this is a personal project, and i know that shell scripting can do the job because other shell scripts already do what i'm trying to do right now to an extent
[05:08:17] <hashbangenjoyer> it's really not an advanced job that needs to scale and needs a perfect tool
[05:10:52] <rkta> hashbangenjoyer: you didn't tell us the expression you are using with sed, did you?
[05:11:49] <hashbangenjoyer> yeah i didn't, didn't really get that far
[05:11:53] <hashbangenjoyer> you want to see?
[05:12:27] <hashbangenjoyer> i'm working with very small, completely static webpages
[05:13:40] <rkta> yep, show me
[05:13:53] <hashbangenjoyer>  sed -i "/\<main\>/r $FILE" index.html
[05:14:15] <hashbangenjoyer> if you're wondering how that works, the index.html is copied over from a template so it's the same every time
[05:14:53] <hashbangenjoyer> i realized that it's ignoring the slash in </main> so i changed the delimiter and that didn't change the outcome
[05:15:02] <rkta> hashbangenjoyer: why are you escaping the <>? you want to match literal angle brackets.
[05:15:23] <hashbangenjoyer> i don't know what needs escaping and what doesn't to be honest
[05:15:29] <tirnanog> "the same every time" doesn't mean much to us if we can't see it.
[05:15:35] <hashbangenjoyer> i thought you had to do that for those characters
[05:16:07] <hashbangenjoyer> and i guess the fact that it worked until i switched the tag helped hide the mistake
[05:16:10] <e36freak> if it's the same every time why don't just change the template?
[05:16:13] <pj> hashbangenjoyer: including $FILE that way means it will be parsed as sed code
[05:16:21] <tirnanog> e36freak: yes, I suspect that's going to be where this is headed.
[05:16:31] <hashbangenjoyer> e36freak:
[05:16:35] <hashbangenjoyer> tirnanog: i already said that
[05:16:51] <hashbangenjoyer> i said that i can solve the problem by switching the template and css to <div id="content">
[05:17:08] <hashbangenjoyer> but <main> is already a tag so i wanted to see if i could use it first
[05:17:08] <tirnanog> are you going to show your input or not?
[05:17:50] <rkta> hashbangenjoyer: your approach is wrong, but drop the backslashes.
[05:17:54] <hashbangenjoyer> let me try not escaping those symbols and see what happens
[05:18:04] <hashbangenjoyer> thanks rkta :)
[05:18:11] *** Quits: knstn (~knstn@ppp-94-66-57-241.home.otenet.gr) (Quit: leaving)
[05:18:49] <hashbangenjoyer> yeah it did the job
[05:18:50] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:19:13] <hashbangenjoyer> i'll have to touch up on what characters need escaping or not
[05:19:28] <rkta> it's still broken, what if it's get the job done
[05:19:38] <rkta> s/what/but
[05:19:54] <hashbangenjoyer> it's not
[05:20:08] <hashbangenjoyer> it does not interpret the file as sed code
[05:20:34] <larryv> it interprets the contents of the $FILE variable as sed code
[05:21:09] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[05:21:10] <hashbangenjoyer> but it appends exactly what's in the file to the other file and gives no error messages?
[05:23:23] <larryv> only if the value of $FILE is safe
[05:23:46] <larryv> if you're content with assuming that, go forth
[05:25:51] *** Joins: ano (~ano@user/ano)
[05:26:07] <hashbangenjoyer> i just put sed code in it and nothing went wrong
[05:26:19] <hashbangenjoyer> and as i said, this is a very small humble project
[05:26:49] <hashbangenjoyer> i'm sorry for the hostile exchange, but we each had something that wasn't really getting through to the other person
[05:27:15] <wiscii> crashrep: ##chat are really, really, REALLY strict about "chat" .. my shit does not qualify
[05:27:47] <wiscii> reminds me of freaknoodle
[05:28:48] <rkta> hashbangenjoyer: if you know what you are doing it's fine to use some shortcuts. if you have to ask, most people will sense you don't know what you are doing and tell you to don't take shortcuts.
[05:29:26] <hashbangenjoyer> that makes a lot of sense
[05:30:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:21] <tirnanog> well over 20 minutes later, it's still not clear what the problem even was. the command wasn't initially shown and, once it was, you didn't divulge any of the inputs, only the pattern. as for $FILE being a form of code injection, ed would be safer in this regard.
[05:35:59] <tirnanog> # printf '%s\n' '<main>' '</main>' > html; echo ... > maincontent; file=maincontent; printf '%s\n' H "/^<main>$/r $file" w q | ed -s html; cat html
[05:36:00] <shbot> tirnanog: <main>
[05:36:00] <shbot> tirnanog: ...
[05:36:00] <shbot> tirnanog: </main>
[05:36:24] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[05:37:00] <tirnanog> bonus: ed's exit status is actually useful in the event that the match is not made and/or the insertion not performed.
[05:37:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:38:11] *** Quits: webchat23 (~webchat23@2600:8805:a00:5800:6bbf:8227:b2c2:dcb4) (Ping timeout: 256 seconds)
[05:38:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:38:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:38:50] <rkta> otoh, there is a subtle difference between sed -i and ed with wq
[05:42:31] <rkta> now that I'm thinking about it, it might be the same if I only write once and then quit in ed...
[05:42:47] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[05:43:15] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:44:50] *** Joins: ano (~ano@user/ano)
[05:48:54] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:49:39] <emanuele6> using ed also has the advantage that if you use   printf '%s\n' ... q wq    you can make it not change the modification time of the file if no changes were made
[05:49:57] <emanuele6> but then the exit status becomes less useful (ed will always "fail")
[05:50:28] <emanuele6> if you use ex instead of ed, you can just use the `x' to do that more cleanly
[05:51:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:52:55] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:56:09] *** Joins: Atque (~Atque@user/atque)
[05:56:45] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[05:57:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:57:49] *** Joins: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143)
[06:03:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:04:18] * rkta is annoyed by ex because it reads his .vimrc and then spits a lot of errors
[06:05:18] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[06:05:30] <JanC> I assume you are using vim's ex-emulation then?
[06:06:34] <rkta> I use the ex provided by my distro and yes, it's the vim emulation. Is there still a real ex present?
[06:07:39] *** Quits: n4dir (~user@mue-88-130-56-093.dsl.tropolys.de) (Ping timeout: 256 seconds)
[06:09:13] <e36freak> ya
[06:09:38] *** Joins: n4dir (~user@i577BC862.versanet.de)
[06:11:00] *** Joins: A|an (~Alan@173.218.175.171)
[06:11:03] <rkta> e36freak: what linux distro provides it?
[06:12:37] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[06:12:55] <emanuele6> ArchLinux doesn't use vim as ex
[06:13:19] *** Quits: ouestbillie (~gallup@185.195.233.158) (Ping timeout: 256 seconds)
[06:13:26] <emanuele6> it uses http://ex-vi.sourceforge.net/
[06:13:57] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[06:14:37] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[06:14:41] <e36freak> any non-vim vi should provide it
[06:15:08] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[06:15:23] <emanuele6> yes, `vi' is just `ex -v'
[06:17:05] <tirnanog> I can't bring myself to trust ex-vi. here's a fun bug: dd if=/dev/zero bs=4096 count=1 of=f; vi f
[06:18:19] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[06:18:44] *** Joins: nunggu (~q@user/nunggu)
[06:20:20] <pj> does vi not show you 4096 null bytes?
[06:20:42] <emanuele6> it crashes
[06:20:43] <tirnanog> that implementation offers a segfault for one's troubles.
[06:20:46] <emanuele6> "f" [Incomplete last line] 1 line, 4096 characters (4096 null) Segmentation fault (core dumped)
[06:20:47] <pj> oh fun
[06:21:26] <pj> I wonder if emacs could handle it
[06:22:13] <pj> yep, emacs shows 4096 null bytes
[06:22:27] <akoana> interesting, my vim (8.1) shows the 4096 null bytes, no crash
[06:22:34] <tirnanog> sure. it's vim.
[06:23:10] <akoana> what vi flavor crashes then?
[06:23:15] <emanuele6> ex-vi
[06:23:18] <tirnanog> the broader point is that implementations that are not in common usage may have code that is atrophying in some respect.
[06:23:20] <pj> oh, I see, yeah I won't see it in vi, then, because vi is just vim for me.
[06:23:32] <akoana> same for me :)
[06:23:36] <tirnanog> I wouldn't mind seeing a port from one of the BSDs or such.
[06:23:50] * rkta wonders if one deserves a segfault if one tries to edit a file wit 4096 null bytes :)
[06:24:17] <pj> rkta: nah, but 4097 null bytes ... now that's a different matter
[06:24:28] <rkta> fair point
[06:24:46] <rkta> 4097 looks like an overflow
[06:24:46] <emanuele6> pj: it's funny because it does not crash for 4097 null bytes
[06:24:54] <tirnanog> heirloom has an implementation. not sure what else is on offer for linux users.
[06:24:54] <pj> oh true
[06:25:17] <pj> emanuele6: so it's likely an off by one memory allocation error or something
[06:25:37] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Gone.)
[06:26:23] <pj> so it would crash if you allocate an exact page boundary number of bytes?
[06:26:24] <rkta> the real problem is that i can't rely on these tools be present across different devices besides required by POSIX. ex is vim, ed is not installed anymore, but sed -i is present nearly everywhere
[06:26:27] *** Joins: texasmynsted (~texasmyns@99.96.221.112)
[06:26:47] <pj> emanuele6: so 8192 bytes?
[06:27:03] <tirnanog> rkta: this is true. linux vendors just don't care.
[06:27:14] <tirnanog> the overwhelming majority of the, at least.
[06:27:16] <tirnanog> them*
[06:27:22] <rsjw> why do you need ex to not be vim?
[06:27:42] <emanuele6> pj: crash for 8192
[06:27:48] <tirnanog> rsjw: there was a some grumbling earlier about .vimrc being parsed.
[06:27:59] <tirnanog> which seems like a fair criticism.
[06:28:02] <pj> fortunately for me nearly everything I script for is for a specific platform, so I know what tools will be present and what may be present but are available to be installed.
[06:28:13] <texasmynsted> What am I not seeing? I need to pass an array out to a command, but this one entry needs quotes because there are spaces. How do I preserve the "?
[06:28:19] <pj> emanuele6: ahhh, yep, so likely any page boundary will crash it.
[06:28:47] *** Quits: itachi19 (~itachi19@46.232.210.60) (Quit: Ping timeout (120 seconds))
[06:28:59] <tirnanog> texasmynsted: no. this conception is wrong.
[06:29:00] *** Joins: itachi19 (~itachi19@46.232.210.60)
[06:29:09] <tirnanog> if you're talking about parameters.
[06:29:10] <rkta> tirnanog: i wouldn't mind if ex would read my .vimrc and just ignore unkown options - but don't throw an error
[06:29:11] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:30:05] <texasmynsted> testCommand++('-JFoo="This has spaces so must be quoted '"${Bar}"'"')
[06:30:50] <tirnanog> wrong.
[06:31:10] <tirnanog> # files=('foo bar' baz); touch "${files[@]}"; ls -l "${files[@]}"
[06:31:11] <shbot> tirnanog: -rw-r--r-- 1 root root 0 Jan 22 03:01 baz
[06:31:11] <shbot> tirnanog: -rw-r--r-- 1 root root 0 Jan 22 03:01 foo bar
[06:31:15] <texasmynsted> I later do baz ${testCommand[@]}
[06:31:19] <tirnanog> which is wrong.
[06:31:21] <tirnanog> !qefs
[06:31:21] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[06:31:31] <texasmynsted> no
[06:31:34] <tirnanog> this injecting quotes business is just nonsense. stop doing it.
[06:31:57] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[06:31:58] <texasmynsted> hm
[06:31:59] <Friithian> is it normal to add ``.'' to $PATH ?
[06:32:03] <pj> rkta: what happens if you alias ex to ex -u/dev/null
[06:32:28] <wiscii> sorry, libera is more broken than freenode, i am leaving
[06:32:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[06:32:36] <texasmynsted> This Last parameter has a value with spaces, so must be quoted when passed out to the shell or the shell will think break it. I think.
[06:32:41] <tirnanog> no.
[06:32:53] <tirnanog> you must double quote the array expansion, yes.
[06:32:54] <texasmynsted> okay. Removing all quotes and see what happens
[06:32:58] <tirnanog> but that is all.
[06:33:01] <pj> ...or wrap it in a function
[06:33:12] <rkta> pj: yes, i have an alias like that, i use 'ex --clean'
[06:33:21] * pj nods
[06:33:42] <tirnanog> the only exception would be if the program responds in some defined, purposeful manner to a quote being part of one if its operands but this has absolutely nothing to do with the shell.
[06:34:00] <texasmynsted> Originally it was like testCommand+=("-JFoo=This ahs spaces so must be quoted ${Bar}")
[06:34:10] <texasmynsted> I will put it back and see what happens
[06:34:21] <pj> rkta: interesting, I don't see --clean as an option
[06:34:21] <rkta> it's still annoying because i don't know what config will be read on a system
[06:34:22] <tirnanog> leave it that way, then double quote the array expansion.
[06:34:42] <rkta> pj: it's a vim option
[06:35:06] <pj> this is vim, don't see it in the man page
[06:35:15] <texasmynsted> oh lol
[06:35:24] <texasmynsted> Yes, I see the array expansion is not double quoted
[06:35:33] <rsjw> the vim man page says you can pass -u NONE to ignore the .vimrc. there's more information in :help initialization. maybe ex -s -u NONE would be what you want?
[06:35:53] <tirnanog> !b18
[06:35:53] <greybot> The newbie will not accept the answer you give, no matter how right it is.
[06:36:14] <pj> It can also be used to skip all initializations by giving the name "NONE".
[06:36:18] <pj> yep
[06:36:20] <rkta> my man vim has --clean
[06:36:47] <rkta> but yes, NONE works too
[06:36:59] <Friithian> tirnanog: are you named after the tv show, the island itself, or the celtic woman song
[06:37:15] <emanuele6> --clean         Similar to "-u DEFAULTS -U NONE -i NONE"
[06:37:27] <tirnanog> Friithian: the zx spectrum game is probably the closest to anything that I had in mind.
[06:37:39] <pj> maybe you have a newer version of vim than me
[06:37:43] *** Parts: wiscii (~tct@user/wiscii) (WeeChat 2.8)
[06:37:53] <tirnanog> Friithian: it's the only nick I've ever had that has generated any intrigue.
[06:37:58] <emanuele6> but the manual says: --clean     Do  not  use  any  personal  configuration (vimrc, plugins, etc.).  Useful to see if a problem reproduces with a clean Vim setup.
[06:38:26] <Friithian> tirnanog: I saw it and instantly thought of the celtic woman song with oonagh
[06:38:33] <tirnanog> texasmynsted: ah, yes. I know the one.
[06:38:35] <tirnanog> oops
[06:38:37] <tirnanog> Friithian: ^
[06:39:15] <texasmynsted> :-)
[06:39:16] <tirnanog> texasmynsted: in summary, you need the double quotes to suppress word splitting for both the array element itself, and for the expansion of the array. it's no more (or not much more) complicated than that.
[06:39:29] *** Joins: maryo (~Maryo@user/maryo)
[06:39:31] <pj> VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Dec 15 2020 16:44:08)
[06:39:31] <pj> VIM - Vi IMproved 8.0 (2016 Sep 12, compiled Nov  9 2021 14:26:09)
[06:39:42] <texasmynsted> yes. This is far better syntax anyway thank you
[06:39:48] <emanuele6> since --clean is similar to -u DEFAULTS and other stuff, it is not really like -uNONE
[06:39:55] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:40:10] <tirnanog> working syntax does tend to be better, yes ;)
[06:40:17] <Friithian> so does anyone know why someone would add . to their $PATH ? I don't see why it is something you'd want
[06:40:24] <akoana> pj: in my vim manpage --clean is missing too, but vim/ex it allow --clean, and :help --clean gives a result
[06:40:27] <emanuele6> also not sure if it is fine to use --clean in /bin/ex mode
[06:40:35] <emanuele6> maybe
[06:40:47] <pj> akoana: ahhh, okay
[06:40:49] <texasmynsted> ha silly jmeter. Now complaining about an option that it shows as an option after complaining
[06:41:10] <pj> $ vim --clean
[06:41:10] <pj> VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Dec 15 2020 16:44:08)
[06:41:10] <pj> Unknown option argument: "--clean"
[06:41:25] <tirnanog> Friithian: being a cmd.exe refugee perhaps. I can't recall encountering many that have seen fit to do it.
[06:41:51] <Friithian>  https://friithian.dev/pictures/screenshots/./2022-01-21T21-59-42.png well, my prof likes it
[06:41:51] <emanuele6> i have  VIM - Vi IMproved 8.2 (2019 Dec 12, compiled Jan 16 2022 12:09:56)  and --clean is both :help and man page
[06:42:00] <akoana> ah, 7.1 (mine is 8.1) so I got the working version with an old man page...
[06:42:06] <Friithian> VIM - Vi IMproved 8.1 (2018 May 18, compiled Jan 20 2022 11:59:01)
[06:42:09] <Friithian> works for me
[06:42:13] <pj> works in 8.0, though
[06:42:50] <pj> so if you want to make sure that it works on a system with older vim, then you can't use --clean
[06:43:03] <pj> but -uNONE should work
[06:43:07] <rkta> point is, i want my ex to work with --clean or -uNONE or whatever option, just give me ex!
[06:43:23] <rkta> s/with/without
[06:43:45] <emanuele6> pj: well, but --clean is not -uNONE is -uDEFAULTS + other stuff
[06:44:05] <emanuele6> that is why i am not sure it is fine to use it in /bin/ex mode, maybe it enables non-compatibility stuff
[06:44:11] <pj> I imagine you could do the -uDEFAULTS ... if you want to be compatible with older vim
[06:44:45] <pj> of course it's likely going ot cause non-vim ex to crap if you try that.
[06:45:30] <emanuele6> oh, i found it
[06:45:39] <emanuele6> i think -uDEFAULTS is also a new feature
[06:45:45] <pj> oh, okay
[06:45:56] <emanuele6> When {vimrc} is equal to "DEFAULTS" (all uppercase), this has the same effect as "NONE", but the defaults.vim script is loaded, which will also set 'nocompatible'.  Also see --clean.
[06:46:00] <emanuele6> yeah, as i thought
[06:46:09] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 267 seconds)
[06:46:18] <pj> oh, okay
[06:46:27] <pj> so perhaps -uNONE is what you would really want anyways.
[06:46:28] <emanuele6> -u DEFAULTS sources defaults.vim which is the file that sets non-compatible default stuff
[06:46:31] * akoana hopes there is no sed version using a .sedrc ...
[06:46:34] <emanuele6> -u NONE should be used
[06:47:19] <rkta> do all ex version understand -u NONE or only the vim emulation ones?
[06:47:30] <emanuele6> only vim clones
[06:47:37] <emanuele6> it is not standard
[06:47:37] <pj> so if you want a compatible ex in your script and don't know what ex will actually be, you need to somehow check if it's vim ex and if so pass -uNONE to it.
[06:47:53] <rsjw> -u DEFAULTS loads plugins, -u NONE doesn't
[06:48:01] <emanuele6> indeed.
[06:48:07] <rkta> then it's not really a solution
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:48:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[06:49:38] <emanuele6> i think you could just can add a line to your vimrc to "return early" if you are running in ex + batch + compatibility mode or something like that
[06:49:54] <emanuele6> like some bashrc files do [[ $- == *i* ]] || return
[06:50:16] <emanuele6> s/can//1
[06:50:21] <tirnanog> rkta: changing the attitudes of linux vendors would be the only real solution. still, even before contending with the prospect of trying to herd cats, I wonder whether ex-vi is what we would really want.
[06:50:34] <rkta> my options are checking checking if ex is vim, checking if ed is present or use sed -i - hoping my sed has -i :D
[06:51:07] <emanuele6> !sed-i
[06:51:07] <greybot> sed -i isn't portable; standard sed doesn't have it at all, GNU sed -i has an optional argument, and BSD sed -i has a mandatory argument. See !editing and <https://mywiki.wooledge.org/BashFAQ/021> for advice
[06:51:30] <emanuele6> sed -i not only is non standard, it works completely differently on different oses
[06:51:59] <emanuele6> you could check if `gawk' is present before `sed' and use `gawk -i inline' before sed; that is probably more portable
[06:52:01] <rsjw> implement all solutions, pass the choice on up to the user, and have the user fret about the ease of use of his operating system instead of you :D
[06:52:04] <rkta> tirnanog: i'm not sure if it would be a good use of my time going to tell all the linux vendors that they are wrong :D
[06:52:05] <pj> oh, what about: export EXINIT=-uNONE
[06:52:26] <tirnanog> rkta: for all the good it would likely do, I can only agree!
[06:52:49] <pj> or export VIMINIT=-uNONE
[06:53:03] <tirnanog> that looks promising.
[06:53:23] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[06:53:49] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[06:53:51] <pj> oh, that doesn't work
[06:54:10] <pj> but possibly just setting VIMINIT=
[06:54:30] <pj> because I think that vim looks for VIMINIT first and uses that for the rc file
[06:54:52] <pj> anyways, not sure, heh
[06:55:31] <rsjw> only vim would make startup this complicated...
[06:55:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[06:56:00] <rkta> env VIMINIT= vim seems to source my plugins atleast
[06:56:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:57:58] <quesker> echo foo\*bar > file; for x in foo\*bar duh\*whee; do grep "$x" file; done       # nada.  why?
[06:58:08] <pj> bleh, I give up.
[06:58:40] <emanuele6> quesker: grep -Fe
[06:58:50] <rsjw> there's --noplugin, but it's not clear how to give that to vim without vim/non-vim ex detection
[06:58:59] <quesker> fgrep.  just tried it yep. why?
[06:59:29] <emanuele6> foo*bar is a regular expression that matches  fobar foobar fooobar foooobar ...
[06:59:38] <emanuele6> foo*bar does not match foo*bar
[06:59:43] <quesker> ah ok
[06:59:55] <quesker> when do you need egrep then?
[07:00:00] <emanuele6> a* means nothing or any number of a
[07:00:12] <quesker> like grep "foo|bar" no.  needs egrep
[07:00:17] <emanuele6> !ere
[07:00:17] <greybot> Extended Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_04 or https://man7.org/linux/man-pages/man7/regex.7.html
[07:00:20] <emanuele6> !bre
[07:00:20] <greybot> Basic Regular Expressions. See http://mywiki.wooledge.org/RegularExpression or (POSIX) https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html#tag_09_03
[07:00:24] <pj> egrep, or grep -E is just for extended regex
[07:00:26] <quesker> ah ok.  thanks
[07:00:28] <emanuele6> grep uses basic regular expressions
[07:00:43] <emanuele6> grep -E  uses extended regular expressions
[07:00:46] <pj> there's also grep -P for the sake of completeness.
[07:01:15] <emanuele6> quesker: if you ever need something like   grep -E 'foo|bar'
[07:01:26] <emanuele6> you can just use two patterns
[07:01:35] <emanuele6> i.e.  grep -e foo -e bar
[07:01:36] <quesker> -e foo -e bar
[07:01:38] <quesker> yeah
[07:01:54] <emanuele6> this is useful if foo and bar must be checked literally
[07:02:14] <emanuele6> in   grep -E 'foo|bar'  foo and bar are EREs
[07:02:15] <pj> also I think there are systems that work with grep -E but don't have the egrep alias, so I tend to just stick to grep -E for that reason.
[07:02:23] <emanuele6> ^
[07:02:33] <emanuele6> `grep -E' is POSIX
[07:03:15] <emanuele6> anyway, in   grep -F -e 'foo' -e 'bar'   foo and bar are both literal strings
[07:03:42] <pj> ...and I tend to use grep -P from time to time (I know -P has issues, but I'm used to coding in perl so it comes a lot more naturally to me).
[07:03:43] <rkta> man grep tells that egrep is deprecated
[07:04:08] <emanuele6> pj: just use perl :^)
[07:04:19] <pj> emanuele6: when using perl is appropriate, sure.
[07:04:51] <quesker> interesting.  I guess I should use the -E and -F then but no -P here
[07:04:54] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[07:05:01] <pj> there are features of -P that come in handy sometimes, though, like zero length assertions and word boundaries.
[07:05:11] <emanuele6> quesker: -P is a GNU grep feature
[07:05:32] <pj> yes, true
[07:05:48] <quesker> but yeah I should just use perl for everything.  much easier
[07:06:04] <emanuele6> it basically makes grep behave like    perl -ne 'chomp; print "$_\n" if /something/'
[07:06:20] <emanuele6> (  grep -P -e something  )
[07:06:25] <pj> I normally end up using plain grep (with BREs) or -F a lot.  On the rare occasion I use -E if I need the extra features and -P if I need even those extra features.
[07:06:46] <emanuele6> same
[07:07:17] <emanuele6> today i learned that  $'something\nhello' is equivalent to -e something -e hello :(
[07:07:19] <pj> emanuele6: I can rely on GNU grep being installed more often than perl nowadays.
[07:07:41] <quesker> linux maybe.  other unix though?
[07:08:07] <pj> other unix you can't rely on GNU grep, so you need to pretty much stick to grep -E at best.
[07:08:10] <quesker> every aix solaris hpux for the last 20 years has perl
[07:08:23] <phy1729> OpenBSD too
[07:08:35] <pj> newer distros don't come with perl by default anymore.
[07:08:51] <emanuele6> new distros are boring
[07:08:54] <pj> because system utilities tend to be more python than perl nowadays.
[07:08:58] <emanuele6> no perl no fun
[07:09:07] <pj> perl is definately still available
[07:09:28] <pj> just can't rely on it being there if I don't have the option to install it.
[07:11:43] <pj> ex: I wrote the migrate2rocky script which migrates other EL8 distros to Rocky Linux.  I can rely on the distro having anything installed in it that a minimal EL8 will have, so pretty much GNU everything, a particular version of bash in /bin/bash, etc.  But I don't want to have that script install a bunch of extra stuff during the migration process so I can't rely on perl being there because perl is no longer part of a minimal EL8 install.
[07:12:13] <pj> so I can use grep -P in the script but not perl.
[07:12:33] <ormaaj> python has been a more reliable default install than perl for almost as long as I've known. Less the slight hiccup during 2->3 transition.
[07:13:01] <e36freak> "slight hiccup"
[07:13:14] <pj> ormaaj: for around 15 to 20 years, yes.  before about 2005 or so perl was reliably on everything.
[07:13:21] <ormaaj> :D
[07:14:41] <ormaaj> pj: makes sense. I was AFK > 15 years ago
[07:15:03] <e36freak> TIL ormaaj is 15
[07:15:46] <ormaaj> close enough.
[07:15:52] <pj> hahaha
[07:16:02] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:16:22] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:17:26] <rsjw> rkta: how about VIMINIT="set noloadplugins" ex?
[07:18:14] <pj> the cool thing about that is if it's a different ex it will simply ignore the VIMINIT environment variable and still work.
[07:18:38] <rsjw> right
[07:19:00] *** Joins: Betal (~Betal@user/betal)
[07:19:01] <hashbangenjoyer> thanks for your help earlier. i went to eat dinner and i came back, read some more stuff. going to take my perfectly functional script right now and using as a jumping off point for writing better shell, based off of the greg's wiki that was linked in here.
[07:19:51] <hashbangenjoyer> going to get rid of sed -i firstly, see what else there is to do
[07:19:55] <pj> hashbangenjoyer: I do apoligize if I came across as harsh, I wish you the best of luck.
[07:20:04] <hashbangenjoyer> no i was definitely not helping
[07:20:45] <hashbangenjoyer> i'm sure you guys have to sit in here and have people come in wanting the wrong things for the wrong reasons all day
[07:21:08] <emanuele6> could also use:  ex () { local ex_opts=(); [[ $(command -v vim) -ef $(command -v ex) ]] && ex_opts+=(-u NONE); command ex "${ex_opts[@]}" "$@" ;}
[07:21:24] <hashbangenjoyer> my motive that i didn't get across is that this script is first and foremost just supposed to work on my machine, but now that i have that i want to make it better so it's safer for others to use
[07:21:52] <e36freak> hashbangenjoyer: honestly it might be more common than the opposite, kinda used to it
[07:22:00] <pj> hashbangenjoyer: that doesn't excuse any kind of attitude, though.  I do try to be helpful but it does sometimes come through and if I really don't have anything good to say then I try to just keep my mouth (or fingers as it is) shut.
[07:22:17] <e36freak> how does one shut their fingers
[07:22:26] <hashbangenjoyer> closed fist?
[07:22:27] *** Quits: jos1 (~jos3@dyndsl-091-248-048-199.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:22:29] <pj> hehehe
[07:23:21] <hashbangenjoyer> sometimes when someone comes at you strong in a certain way you can get defensive around a position you don't even care much about
[07:24:32] <pj> emanuele6: `ex () { VIMINIT="set noloadplugins" ex "$@"; }` just seems a lot more simple and elegant, though.
[07:25:10] <tirnanog> pj: command ...
[07:25:17] <pj> ahhh, yep
[07:25:30] <pj> ex () { VIMINIT="set noloadplugins" command ex "$@"; }` just seems a lot more simple and elegant, though.
[07:26:05] <e36freak> but infinite recursion is awesome
[07:26:10] <pj> hahaha
[07:26:52] <emanuele6> infinite recursion is elegant ;)
[07:27:22] <pj> infinite recursion may not be good but recursion can accomplish some pretty cool things.
[07:27:38] <emanuele6> pj: vimhelp compatible-default says that VIMINIT in the environment implicitly enables nocompatible mode
[07:28:57] <pj> hrmmmmm, can that be explicitly disabled, then?
[07:29:04] <pj> in the VIMINIT itself?
[07:30:41] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[07:31:20] <e36freak> what about EXINIT?
[07:31:26] <pj> I came up with this a couple weeks ago in answer to a question: g () { if (( $# > 0 )); then grep -Fwe "$1" | g "${@:2}"; else cat; fi; } ... recursion is great sometimes.
[07:31:51] <pj> e36freak: that would work as well, but I didn't mention it because I wasn't certain it was specific to vim ex.
[07:32:00] <e36freak> ah
[07:32:09] <tirnanog> emanuele6: does it matter? :set in ex shows a very limited number of options.
[07:32:21] <emanuele6> not sure
[07:32:24] <e36freak> ah, yeah, my ex-vi ex also has an EXINIT
[07:32:35] <e36freak> whelp
[07:32:41] <pj> yeah, I wasn't sure but I thought that might be the case.
[07:32:45] <e36freak> you might just get a spare question mark
[07:32:51] <tirnanog> emanuele6 pj: setting compatible or nocompatible doesn't make any visible difference there, at least.
[07:32:54] <tirnanog> in vim proper, yes.
[07:32:58] <rsjw> emanuele6: vim and ex don't share an inode here, yet ex is vim ex
[07:33:16] <tirnanog> another one of those funny Apple wrappers, perhaps.
[07:33:36] <pj> who knows
[07:33:41] <rsjw> maybe, I don't know
[07:33:43] <akoana> :echo mode()  shows 'c' in ex mode, 'n' in visual mode
[07:33:51] *** Joins: malina (~malina@user/malina)
[07:34:05] <emanuele6> rsjw:   less -- "$(type -P ex)"
[07:34:16] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 250 seconds)
[07:34:24] <emanuele6> unless it is a binary i guess
[07:34:25] <tirnanog> it will be a mach-o.
[07:34:28] <tirnanog> I'm betting on it.
[07:35:08] *** Joins: jos1 (~jos3@dyndsl-178-142-065-197.ewe-ip-backbone.de)
[07:35:24] <tirnanog> (just as /bin/sh is)
[07:35:29] <ormaaj> maybe some OS has /proc/self/exe as a hardlink (or a virtual one)
[07:36:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:32] <pj> always fun to see the hoops that people will go to to reinvent the symbolic link
[07:37:36] <rsjw> it's a binary
[07:39:25] *** Parts: idego (~idego@user/idego) ()
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:27] <rsjw> oh
[07:40:37] <rsjw> /usr/bin/ex is a symbolic link to vim
[07:41:01] <pj> it can be, not always
[07:41:01] <rsjw> so that's why the inodes don't match... because it's not a hardlink
[07:41:09] <rsjw> I mean on my system
[07:41:51] <pj> oh, it is on mine as well.  funny thing, I had to install a separate package to get that link.
[07:42:04] <rsjw> lol
[07:42:57] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[07:44:16] <emanuele6> interesting
[07:44:31] <ormaaj> A virtual hardlink has the advantage of not requiring path-resolution I suppose. It can be guaranteed to point to the right entity regardless of whether it's reachably by path.
[07:44:43] <ormaaj> *reachable
[07:45:16] <rsjw> what's a "virtual" hardlink?
[07:46:13] <ormaaj> Any regular file on a virtual filesystem
[07:50:34] <rsjw> hey did anybody text VIMINIT="set noloadplugins" ex? I'm not sure how to so I'm just wondering if anybody already did test it
[07:51:19] <rsjw> *test
[07:53:33] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:55:25] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[07:56:31] *** Quits: luckiswithme (~luckiswit@149.167.139.159) (Remote host closed the connection)
[07:57:13] <tirnanog> rsjw: it appears to help, though it doesn't suppress everything. at least, here I'm finding that it will still read /etc/vim/vimrc if present, along with ~/.viminfo and a few others.
[07:57:27] <Friithian> the commands: ll and la  https://friithian.dev/pictures/screenshots/./2022-01-21T23-27-08.png
[07:57:42] <tirnanog> rsjw: ~/.vimrc is not among them, however.
[07:58:09] <tirnanog> Friithian: oh dear.
[07:59:29] <Friithian> if you remember me ranting in #c++-general about my prof, get ready for it again, but about bash!
[08:01:14] *** Joins: luckiswithme (~luckiswit@149.167.139.159)
[08:02:45] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:03:26] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[08:03:51] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:10:14] <rsjw> you might be able to avoid the viminfo file with something like VIMINIT='set noloadplugins|set viminfofile=NONE' but it looks like the only way to avoid the system startup files is to pass the -s option
[08:11:13] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:12:07] <emanuele6> isn't -s silent/batch mode like in regular ex?
[08:12:15] <rsjw> or the -u option, of course
[08:13:53] <rsjw> it says "If Vim was started in Ex mode with the "-s" argument, all following initialization until 4. are skipped. Only the "-u" option is interpreted." the system initialization file is in step 3b
[08:14:13] <rsjw> *initializations
[08:14:56] <rsjw> in :help initializations
[08:15:13] <rsjw> err :help initialization
[08:16:50] <emanuele6> rkta: oh, then ex (vim) reading .vimrc really an issue you have?
[08:16:54] <emanuele6> i mean in scripts
[08:17:12] <emanuele6> because you always use -s in scripts with ex, there is no point in not using it
[08:17:42] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-49-2.pa.qld.optusnet.com.au)
[08:17:46] <rsjw> you might use it when debugging, of course
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:18:19] <rsjw> I mean... you might use it without -s
[08:18:24] <rsjw> when debugging
[08:19:41] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[08:20:30] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[08:20:49] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:33:17] *** Joins: Distemper (harry@2a01:7e00::f03c:91ff:fe6c:8379)
[08:34:56] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[08:36:40] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) ()
[08:40:34] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[08:42:02] <texasmynsted> WOW.
[08:42:57] <texasmynsted> I am not sure what is happening but if I wrap my array of parameters in double quotes the command fails, if I do not, it works. The resulting "string" looks the same.
[08:43:18] <texasmynsted> From what I can tell the wrapped with double quotes version _should_ be correct.
[08:44:12] <emanuele6> is that actually an array or just a string?
[08:44:13] <Distemper> Can you paste exactly what you're trying to do to debian.paste.net or similar please
[08:44:50] <emanuele6> if it is actually an array, perhaps you are appending to it with  arr+=$element  instead of arr+=("$element")
[08:44:54] <tirnanog> such should include details of the exact application you are executing and the contents of the array prior to expansion (declare -p arrayname)
[08:44:57] *** Joins: bluedust (~bluedust@103.160.194.145)
[08:45:23] <emanuele6> (which will append to the first element)
[08:45:26] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:46:45] <texasmynsted> a bunch of things like testCommand+=("--testfile $TEST_FILE_PATH")
[08:46:52] <tirnanog> wrong!
[08:47:07] <tirnanog> testCommand+=(--testfile "$TEST_FILE_PATH")
[08:47:11] <Distemper> ^
[08:47:21] <tirnanog> also, learn to use declare -p for debugging.
[08:47:40] <texasmynsted> whaat
[08:47:51] <emanuele6> "--testfile $TEST_FILE_PATH" is one string.
[08:47:59] <texasmynsted> hmm. I will try that
[08:48:06] <emanuele6> --testfile /path/to/file is two strings
[08:48:13] <emanuele6> --testfile   and   /path/to/file
[08:48:14] <tirnanog> # args=(); args+=("--testfile foo"); declare -p args
[08:48:15] <shbot> tirnanog: declare -a args=([0]="--testfile foo")
[08:48:18] <tirnanog> that's clearly wrong.
[08:48:27] <tirnanog> # args=(); args+=(--testfile foo); declare -p args
[08:48:28] <shbot> tirnanog: declare -a args=([0]="--testfile" [1]="foo")
[08:48:31] <tirnanog> this is not.
[08:49:40] <tirnanog> however, and once again, you need to retain the double quotes _where_ they are needed to inhibit word splitting. for the expansion of your path-holding variable, in this case.
[08:49:52] <texasmynsted> Is this also wrong?
[08:49:54] <texasmynsted> testCommand+=("-J$testType.numberOfUsers=${!users}")
[08:50:09] <tirnanog> that looks fine to me. it should be one parameter, right?
[08:50:14] <texasmynsted> yes
[08:50:19] <tirnanog> it's fine then.
[08:50:51] <tirnanog> although ... $testType will expand, which looks a little suspicious.
[08:50:57] *** Joins: et_ (~et@user/et)
[08:51:00] <tirnanog> use declare -p when in doubt, to see how your array is formed.
[08:51:36] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[08:51:36] *** et_ is now known as et
[08:52:20] <texasmynsted> I will try delcare -p
[08:52:21] <emanuele6> i generally prefer to split "-n$var" in -n "$var" since it prevents problems when var is empty, but in this case i guess it is fine sinc eyou will always have  .numberOfUsers=  after -J.
[08:52:24] <texasmynsted> and see what that does
[08:52:29] *** Joins: Earnestly (~earnest@user/earnestly)
[08:53:24] <tirnanog> for debugging purposes, you may invoke declare -p just before you expand your testCommand array.
[08:54:20] <texasmynsted> ooh interesting
[08:54:35] <tirnanog> declare -p testCommand, that is.
[08:54:48] <texasmynsted> what I see is not what I expexct
[08:54:52] <texasmynsted> let me get a gist
[08:55:17] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[08:56:42] <texasmynsted> https://gist.github.com/mmynsted/2efcb230cf96fc88779918a264c03210
[08:57:06] <texasmynsted> first, there is an empty argument in the 0 index
[08:57:08] <tirnanog> yes.
[08:57:14] <tirnanog> must be a bug somewhere in your code.
[08:58:33] <tirnanog> some appears to be missing values also. did you sure you want to be using indirect notation i.e. ${!namref}?
[08:58:39] <tirnanog> nameref*
[08:58:53] <tirnanog> good heavens, that was a poorly articulated sentence.
[08:59:08] <texasmynsted> I am not sure what you are asking me
[08:59:20] <tirnanog> ok. do you know what ${!nameref} does, first of all?
[09:00:02] <tirnanog> # users=123; nameref=users; echo "${!nameref}"
[09:00:04] <shbot> tirnanog: 123
[09:00:15] <tirnanog> but why not just "${users}", for example?
[09:00:17] *** Joins: bluedust_ (~bluedust@81.92.205.22)
[09:00:57] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[09:01:19] <emanuele6> it says  numberOfUsers=   and `users' sounds like the name of an array, perhaps you meant ${#users[@]}
[09:01:29] <texasmynsted> Heh, that is part of the code I did not write actually. I do not know why it is an indirect refernce
[09:01:40] <tirnanog> can you perhaps show more of it then?
[09:02:03] <texasmynsted> sure
[09:02:15] <tirnanog> or, at the very least, figure out what users is, exactly. again, declare -p can help.
[09:02:47] <texasmynsted> https://gist.github.com/mmynsted/bf881bf223a98c1cfe757446c09c10d4
[09:02:57] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[09:03:09] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:03:28] *** Joins: nickdiaz1wag209 (~bjpenn_@13.110.54.42)
[09:03:40] <emanuele6> looks like some weird hack to reimplement an associative array
[09:03:42] <tirnanog> yeah.
[09:03:58] <emanuele6> also is that a YAML injection?
[09:04:33] <texasmynsted> I am okay with the empty variables for now. The 0 index "" is what is bothering me. I think it is because the first use of testCommand is adding a parameter which is not there.
[09:04:47] <texasmynsted> Better would be to only add that parameter if the variable exists
[09:04:53] <tirnanog> wherever it was added, it wasn't in the code fragment you are showing.
[09:04:56] <texasmynsted> testCommand+=("$PROXY")
[09:05:03] <emanuele6> bash has actual associative arrays by the way
[09:05:05] <texasmynsted> PROXY does not exist right now
[09:05:09] <tirnanog> that would explain it.
[09:06:09] *** Quits: nickdiaz3wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[09:06:20] <emanuele6> you can write stuff like   userCount=${UserCounts[$testType]}
[09:06:42] <tirnanog> but not yet, obviously.
[09:06:43] <emanuele6> you don't need to construct a variable name and use a reference
[09:07:11] <emanuele6> unless this is a compatibility for bash3 because of macos
[09:07:48] *** Quits: luckiswithme (~luckiswit@149.167.139.159) (Remote host closed the connection)
[09:08:24] <texasmynsted> It is a complicated way to solve a problem that could be eliminated if the config file was built differently. I tried making the config file different and that part worked simpler but
[09:08:34] <texasmynsted> I had to go back to this for now.
[09:09:54] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:10:12] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[09:10:13] *** Joins: timj (~timj@user/timj)
[09:10:29] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[09:10:32] *** Quits: n4dir (~user@i577BC862.versanet.de) (Remote host closed the connection)
[09:11:04] *** Joins: randm (~randm@user/randm)
[09:11:17] <texasmynsted> yes
[09:23:21] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:03] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:26] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 250 seconds)
[09:34:19] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:34:52] <texasmynsted> declare -p is useful thank you
[09:35:08] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[09:35:15] <texasmynsted> and adding only when proxy exists, seems to have fixed this.
[09:36:43] *** Joins: fef (~thedawn@user/thedawn)
[09:38:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:39:36] *** Joins: ferdna (~ferdna@user/ferdna)
[09:48:25] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:49:47] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:53:17] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[09:54:14] *** Joins: han-solo (~han-solo@user/han-solo)
[09:57:50] *** Joins: xx (~xx@user/xx)
[09:59:03] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[10:00:23] *** Quits: hashbangenjoyer (~hashbange@192.160.216.63) (Quit: zzz)
[10:03:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[10:07:40] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 250 seconds)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:16:46] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[10:17:56] *** Joins: fef (~thedawn@user/thedawn)
[10:20:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[10:21:00] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr)
[10:21:17] *** Joins: momonster (~mo@ip1f105454.dynamic.kabel-deutschland.de)
[10:25:11] *** Joins: han-solo (~han-solo@user/han-solo)
[10:25:49] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:35:42] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:37:35] *** Joins: nunggu (~q@user/nunggu)
[10:39:27] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:43:33] *** Quits: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:43:34] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[10:43:43] *** Joins: sinaowolabi__ (~SinaOwola@160.152.107.239)
[10:45:41] *** Joins: jensen (~jensen@65.78.100.184)
[10:47:22] *** Joins: ravan (~ravan@user/ravan)
[10:47:26] *** Quits: jensen (~jensen@65.78.100.184) (Quit: WeeChat 3.4)
[10:56:35] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:59:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:15] *** Joins: unop (~unop@194.154.249.71)
[11:03:34] *** Quits: Earnestly (~earnest@user/earnestly) (Ping timeout: 250 seconds)
[11:07:57] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[11:09:32] *** Quits: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com) (Ping timeout: 240 seconds)
[11:09:53] *** Joins: maryo87 (~Maryo@user/maryo)
[11:10:09] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[11:11:10] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[11:11:48] *** Joins: chrfle (~chrfle@217-209-195-249-no206.tbcn.telia.com)
[11:12:37] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[11:13:06] *** Joins: nunggu (~q@user/nunggu)
[11:15:05] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:15:42] *** Joins: unop (~unop@194.154.249.71)
[11:17:04] *** Joins: Rue_ (~rue@61-231-136-36.dynamic-ip.hinet.net)
[11:17:27] *** Quits: momonster (~mo@ip1f105454.dynamic.kabel-deutschland.de) (Quit: Konversation terminated!)
[11:27:14] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:27:49] *** Quits: zro (~zro@user/zro) (Ping timeout: 256 seconds)
[11:29:31] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[11:32:14] *** Joins: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80)
[11:32:54] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[11:32:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[11:48:57] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:49:12] *** Joins: unop (~unop@194.154.249.71)
[11:51:31] *** Quits: bluedust_ (~bluedust@81.92.205.22) (Remote host closed the connection)
[11:53:07] *** Joins: lavaball (felix@31.204.155.215)
[11:56:06] *** Joins: ASDF123 (~ASDF123@89.128.41.255)
[11:57:54] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:58:17] *** Joins: qub411 (~user@14-202-13-18.tpgi.com.au)
[11:58:19] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:58:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[11:58:54] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:59:24] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:00:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[12:02:23] *** Quits: sinaowolabi__ (~SinaOwola@160.152.107.239) (Ping timeout: 256 seconds)
[12:03:02] *** Joins: master_ (~master@89.128.41.255)
[12:03:52] *** Joins: logstash (~logstash@89.128.41.255)
[12:03:52] *** Joins: master__ (~master@89.128.41.255)
[12:03:54] *** Joins: master___ (~master@89.128.41.255)
[12:04:07] *** Joins: master____ (~master@89.128.41.255)
[12:04:09] *** Joins: master_____ (~master@89.128.41.255)
[12:04:11] *** Joins: master______ (~master@89.128.41.255)
[12:06:44] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[12:07:35] *** Joins: unop (~unop@194.154.249.71)
[12:09:45] *** Joins: frostwork (~frostwork@user/frostwork)
[12:17:36] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[12:17:45] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[12:18:17] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:19:55] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[12:22:30] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[12:22:39] *** Joins: yustin (~yustin@user/yustin)
[12:23:18] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:25:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[12:28:12] <uuidNuni1> array good, associate array is the best
[12:29:44] <uuidNuni1> # srv_a= ; srv_b= ; echo ${!srv_@}
[12:29:45] <shbot> uuidNuni1: srv_a srv_b
[12:30:23] <uuidNuni1> # srv_a= ; srv_1= ; echo ${!srv_@}
[12:30:24] <shbot> uuidNuni1: srv_1 srv_a
[12:30:30] <uuidNuni1> how is this sorted?
[12:30:37] <emanuele6> lexicographically
[12:30:44] *** Joins: asdf1 (~asdf1@89.128.41.255)
[12:30:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[12:31:36] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:31:38] *** Joins: rendar (~rendar@user/rendar)
[12:35:00] <uuidNuni1> aha, not in the order they were defined
[12:36:26] *** Joins: bluedust (~bluedust@89.238.130.70)
[12:36:37] *** Parts: fmirkes (~fmirkes@user/fmirkes) ()
[12:37:01] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:37:43] *** Joins: tejr (~tejr@user/tejr)
[12:47:25] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[12:48:13] <omegatron> associative arrays or dictionaries are usually not sorted (in almost any language) - because there would be no common ground how - so, you have to provide your own sort function if any
[12:48:40] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[12:49:01] <omegatron> and yes, I can understand, that at least the order of definition would be nice
[12:49:10] *** Joins: b0b (~bob@user/b0b)
[12:49:30] <omegatron> but that's not how they work - the order is not recorded anywhere
[12:49:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[12:50:04] <emanuele6> omegatron: associative array keys are indeed not sorted when you expand them with "${!a[@]}"
[12:50:13] <emanuele6> but "${!srv_@}" is another thing
[12:50:31] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:50:40] <emanuele6> that expands to the names of all the defined variables that start with srv_
[12:50:44] <omegatron> yeah - I was talking in general (since php for example doesn't do that either)
[12:50:46] *** Joins: sinaowolabi__ (~SinaOwola@41.58.218.180)
[12:50:52] *** Joins: ano (~ano@user/ano)
[12:51:30] <omegatron> but one could always use an array to implement a custom associative array (in bash)
[12:51:59] <omegatron> (which then might keep track of any kind of order)
[12:52:14] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:54:01] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[12:55:16] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[12:55:24] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:58:17] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[13:07:23] *** Joins: gareth_ (~gareth@2001:8003:a08c:b00:1789:487d:b30e:4010)
[13:08:17] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[13:09:18] *** Quits: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80) (Remote host closed the connection)
[13:09:30] <dirtwash> how would one go about finding the relative complement between 2 lists? I assume sorting is required for performance reasons
[13:09:48] *** Joins: nickdiaz2wag209 (~bjpenn_@98.42.87.100)
[13:10:52] <dirtwash> so far im using comm -23
[13:11:13] <uuidNuni1> you got it. this is it
[13:11:14] <emanuele6> define "list"
[13:11:37] <dirtwash> emanuele6: file with lines of strings
[13:11:54] <emanuele6> ok, two text files.
[13:11:57] *** Quits: nickdiaz1wag209 (~bjpenn_@13.110.54.42) (Ping timeout: 240 seconds)
[13:12:07] <emanuele6> just say files
[13:12:11] *** Joins: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80)
[13:12:18] <dirtwash> yea, so far im using sort and comm, i figure to get this faster I'd have to write something in some code
[13:12:21] <uuidNuni1> you can grep -f file1 file2
[13:12:36] <emanuele6> uuidNuni1: no
[13:12:44] *** Joins: millido (~millido@84.210.150.128)
[13:12:52] <dirtwash> basically I need all the lines found in file2 but not file1
[13:13:12] <dirtwash> i mean this works fine, given the size its fast too
[13:13:15] <dirtwash> sorting takes longest
[13:13:17] <uuidNuni1> grep -vf file1 file2
[13:13:24] <emanuele6> uuidNuni1: no.
[13:13:26] <emanuele6> stop
[13:13:31] <emanuele6> use -F
[13:13:33] <emanuele6> at least
[13:13:42] <emanuele6> and -x
[13:13:54] <kurahaupo_> uuidNuniq: If the sort takes so long that it matters, grep is likely to barf too
[13:14:18] <dirtwash> grep -vxF -f set2 set1 ?
[13:14:23] <kurahaupo_> grep has a limit on the total size of patterns
[13:14:24] *** Joins: timm (~timm@user/timm)
[13:14:43] <emanuele6> no, using grep like that is not a good idea
[13:14:51] <dirtwash> yea i wouldnt dare :)
[13:14:53] <emanuele6> but at least with -F and -x is correct.
[13:14:58] <dirtwash> it takes long because its billions lines
[13:14:59] <emanuele6> without it is not
[13:15:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[13:15:21] <dirtwash> but sort is pretty fast, i doubt writing something of my own would improve things
[13:15:29] <uuidNuni1> true. -x -F is indeed needed
[13:16:11] <omegatron> billions of lines?
[13:17:09] <uuidNuni1> dirtwash:-> you try grep and commm and measure the time, which is faster? when grep put file1 as the arg for '-f'
[13:17:26] <dirtwash> sort test2 test2 test1 | uniq -u
[13:17:28] <dirtwash> this works as well ha
[13:18:04] <dirtwash> omegatron: ah no, my bad, mixed up the files, but about 100mio
[13:18:15] *** Quits: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80) (Remote host closed the connection)
[13:18:44] *** Joins: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80)
[13:18:46] <dirtwash> uuidNuni1: i think i just leave it with sort+comm, its fast enough for my needs, I was just curious what others say the best approachw ould be
[13:18:52] <uuidNuni1> with uniq you don't need sort, i guess?
[13:19:12] <emanuele6> using grep like that is just insane.
[13:19:18] <uuidNuni1> just cat file1 file2 | uniq -u
[13:19:30] <emanuele6> !uuoc
[13:19:30] <greybot> Useless Use Of Cat (cat foo | grep bar). See https://mywiki.wooledge.org/BashFAQ/119 and http://www.iki.fi/era/unix/award.html#cat
[13:19:58] <emanuele6> nevermind i forgot how uniq works
[13:20:14] <uuidNuni1> i was like wtf
[13:20:26] <uuidNuni1> uniq needs standard input
[13:21:18] <omegatron> perhaps you want to pre-process your 100 mio lines text file to a suffix tree and then do your operations on it? but really, I would cut the file into chunks of smaller files (say, 100k lines) and then maybe use grep on them ..
[13:21:43] <dirtwash> uuidNuni1: how is your cat'in the 2 files produce a complement?
[13:21:45] <dirtwash> :D
[13:22:00] <dirtwash> omegatron:I think the runtime of sort+comm was <10min, sorting is slowest
[13:22:11] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:22:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:22:19] <dirtwash> cutting it up wouldnt help much I think?
[13:22:26] <dirtwash> hard to parallize that
[13:22:30] <omegatron> is your large constantly changing or not ?
[13:22:31] <uuidNuni1> dirtwash:->  it is not the job of cat , it is the job of uniq
[13:22:33] <omegatron> large file
[13:22:57] <uuidNuni1> uniq -u just removes all the duplicated lines and output the unique lines
[13:23:09] <dirtwash> uuidNuni1: but it doesnt, you just get the data of both sets
[13:24:03] <dirtwash> uuidNuni1: each line is unique if you just cat it?
[13:24:08] *** Joins: furrymcgee (~devuan@cgn-89-1-211-103.nc.de)
[13:24:12] <dirtwash> omegatron: yes
[13:24:26] <dirtwash> omegatron: well i run it once a day
[13:24:45] <uuidNuni1> # echo -e "test\ntest1\ntest2" > file1 ; echo -e "test1\ntest2" > file2 ; cat file1 file2 | uniq -u
[13:24:49] <dirtwash> as I said this was a mere query into wondering if there is a faster way, I dont need it though
[13:24:51] <shbot> uuidNuni1: test
[13:24:51] <shbot> uuidNuni1: test1
[13:24:52] <shbot> uuidNuni1: etc... ( http://ix.io/3N6M )
[13:24:56] <kurahaupo_> uniq only works if its input is already sorted
[13:25:23] <emanuele6> uuidNuni1: that is not relative complement
[13:25:48] <uuidNuni1> ok, stupud -u
[13:25:54] <dirtwash> hehe
[13:26:01] <dirtwash> now i wonder if python can sort this faster
[13:26:08] <dirtwash> but sort in C should be pretty quick
[13:26:13] *** Joins: han-solo (~han-solo@user/han-solo)
[13:26:18] <omegatron> I mean your task is in fact stupid simple and has been solved many decades before, since NASA et al. had to work on large datasets, which includes searching for matches, calculating complement, union etc. of them - i'm pretty sure I have seen such (open source) software in the past years (could have been a perl-based tool collection though - maybe coming from some bio-informatics package)
[13:26:42] <dirtwash> yea there is solutions for sure
[13:27:11] *** Quits: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80) (Remote host closed the connection)
[13:27:43] <uuidNuni1> # echo -e "test\ntest1\ntest2" > file1 ; echo -e "test1\ntest2" > file2 ; cat file1 file2 | sort -u
[13:27:44] <shbot> uuidNuni1: test
[13:27:44] <shbot> uuidNuni1: test1
[13:27:44] <shbot> uuidNuni1: test2
[13:28:35] <kurahaupo_> uuoc does apply to cat|sort
[13:28:35] <emanuele6> again that is the complement of the union...
[13:28:39] <dirtwash> uuidNuni1: https://en.wikipedia.org/wiki/Complement_(set_theory)
[13:29:26] <uuidNuni1> well well.
[13:29:43] *** Joins: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80)
[13:30:29] <uuidNuni1> dirtwash:-> go rust should be faster than c
[13:30:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[13:31:10] <uuidNuni1> kurahaupo_:->  yes, uuoc i know, but i was just testing the sort -u
[13:31:11] *** Quits: gareth_ (~gareth@2001:8003:a08c:b00:1789:487d:b30e:4010) (Quit: gareth_)
[13:31:28] *** Joins: gareth_ (~gareth@2001:8003:a08c:b00:1789:487d:b30e:4010)
[13:32:02] <dirtwash> uuidNuni1: if u curious as me https://levelup.gitconnected.com/which-is-faster-rust-or-c-lets-find-out-who-is-the-usain-bolt-87495c774c8
[13:32:24] <dirtwash> doubt Go is faster than either
[13:34:15] <dirtwash> sort is smart anyway since it splits the file up
[13:42:11] <uuidNuni1> dirtwash:->  indeed. sort is smarter than uniq.
[13:43:57] *** Joins: fef (~thedawn@user/thedawn)
[13:45:16] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:53:02] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:55:17] *** Quits: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80) (Ping timeout: 240 seconds)
[13:59:59] <dirtwash> anyone got any experience using redis-cli with bash much?
[14:01:58] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[14:08:11] *** Quits: sinaowolabi__ (~SinaOwola@41.58.218.180) (Ping timeout: 256 seconds)
[14:09:45] *** Joins: spy_ (~spy@2804:29b8:5078:3b44:fd97:1cdb:324:f06f)
[14:11:22] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[14:13:09] *** Quits: willist_ (~swilli@194.191.233.46) (Quit: Lost terminal)
[14:13:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:13:49] *** Joins: tercaL (~tercaL@user/tercal)
[14:14:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:14:57] <tercaL> Greetings everyone, hope you're enjoying the weekend! In my PC, I have many folders containing text files like; 1.txt 2.txt 3.txt....10.txt 11.txt 12.txt, and because the first 9 files are not starting with "0", (like, not 01.txt but 1.jpg) I have sorting problem when I merge them into a single file. How can I add a "0" to the filenames ONLY starting with 1.txt ending with 9.txt? To make 1.txt -> 01.txt, 2.txt -> 02.txt and so on, till 9.txt -> 09.txt
[14:15:16] <tercaL> *but 1.txt
[14:15:50] <geirha> for file in [1-9].txt ; do mv "$file" "0$file" ; done
[14:15:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:00] *** Joins: millido (~millido@84.210.150.128)
[14:16:56] *** Joins: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br)
[14:17:28] <tercaL> geirha: Thank you. Would that work if the filenames start with a letter, like; p1.txt, p2.txt?
[14:17:44] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:18] <tercaL> to convert: p1.txt into p01.txt
[14:18:47] *** Parts: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br) ()
[14:19:41] <geirha> # touch p1.txt p4.txt p10.txt ; for file in p[1-9].txt ; do prefix=${file%%[1-9]*} ; mv -v "$file" "${prefix}0${file#"$prefix"}" ; done
[14:19:42] <shbot> geirha: renamed 'p1.txt' -> 'p01.txt'
[14:19:42] <shbot> geirha: renamed 'p4.txt' -> 'p04.txt'
[14:19:46] *** Joins: sinaowolabi__ (~SinaOwola@160.152.107.239)
[14:21:47] *** Joins: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80)
[14:23:18] <tercaL> geirha: It worked great! Thanks.
[14:24:46] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:88d7:a532:5ff2:a82d)
[14:26:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:27:22] *** Joins: skraito (~skraito@user/skraito)
[14:27:35] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[14:28:06] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[14:29:24] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:30:05] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[14:31:43] *** Joins: hlauk (~hlauk@176.33.108.116)
[14:33:01] *** Joins: Earnestly (~earnest@user/earnestly)
[14:33:31] *** Quits: bluedust (~bluedust@89.238.130.70) (Remote host closed the connection)
[14:34:35] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:35:24] *** Quits: luckiswithme (~luckiswit@2405:6e00:a72:cf00:e094:58fb:9471:af80) (Remote host closed the connection)
[14:42:29] *** Quits: spy_ (~spy@2804:29b8:5078:3b44:fd97:1cdb:324:f06f) (Quit: Leaving)
[14:42:51] *** Joins: cdown (~cdown@163.114.131.1)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:51:41] <tercaL> geirha: And how to do that recursively within a main folder (that has many subdirectories and files like them) ?
[14:51:43] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:88d7:a532:5ff2:a82d) (Quit: Leaving...)
[14:53:09] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[14:53:14] <tercaL> I mean into all the folders it finds.
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[14:56:53] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[15:04:57] *** Quits: sinaowolabi__ (~SinaOwola@160.152.107.239) (Ping timeout: 240 seconds)
[15:05:25] <malina> I ordered a t-shirt last week. on the back it says "I'm with team"
[15:05:29] <malina> and on the front it just says
[15:05:30] <malina> geirha
[15:06:01] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:06:09] <malina> he's in the wrong workplace. get out of that northern dump and join the it team with moss and ross
[15:06:22] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:06:44] <malina> well roy but ross rhymed
[15:08:15] *** Joins: vishal (~vishal@fedora/vishal)
[15:08:24] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:15:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:23:05] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:23:21] *** Joins: unop (~unop@194.154.249.71)
[15:29:47] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[15:36:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:39:16] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[15:39:48] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:40:43] *** Joins: unop (~unop@194.154.249.71)
[15:45:10] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:47:18] <geirha> tercaL: enable globstar, then you can do  for file in **/p[0-9].txt
[15:47:23] <geirha> !globstar
[15:47:24] <greybot> In bash 4, when the globstar shell option is enabled ( shopt -s globstar ), the glob ** expands to all files and directories found recursively under the current directory, and **/ to all directories. Combinations like foo/**/*.txt work, but **.txt and foo** do not.
[15:55:56] *** Joins: Intelo (~Intelo@88.246.72.239)
[15:59:15] *** Joins: seninha (~seninha@user/seninha)
[16:00:07] <tercaL> geirha: What does "/p" do?
[16:01:30] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:02:42] *** Joins: clime (~clime@78-80-115-5.customers.tmcz.cz)
[16:03:58] <geirha> p[0-9].txt matches your filenames, **/p[0-9].txt matches them recursively
[16:06:19] <geirha> you might also like the perl rename command;   find . -type f -exec rename -n 's/([^0-9])([0-9]\.[^0-9]*)$/\10\2/' {} +
[16:06:19] <tercaL> many thanks
[16:06:35] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:06:43] <geirha> that should try to rename any file that ends with a single digit followed by .someext
[16:07:16] <geirha> but note that rename is not standard, and there are multiple, completely incompatible rename commands. The above only works with the perl one
[16:08:09] <geirha> err wait, I mixed up the syntax with sed. Instead of \1 \2 it's $1 $2
[16:08:44] <geirha> and -n means dryrun, so it only prints what it would've renamed. Change -n to -v to have it actually rename
[16:12:43] <tercaL> I guess no "rename" under FreeBSD terminal.
[16:13:25] <geirha> typically not installed by default, but probably evailable through the package manager
[16:14:15] <tercaL> Will check that too, thanks once again
[16:14:19] <tercaL> superb tips
[16:17:37] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[16:18:42] <dirtwash> hm did I need to sort before I run uniq -D ?
[16:18:57] * dirtwash trying to remember something about sort and uniq
[16:20:04] *** Joins: spy_ (~androirc@2804:29b8:5078:3b44:2ce0:566a:5996:4cb0)
[16:20:17] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[16:21:07] <geirha> yes, uniq expects sorted input
[16:21:47] <dirtwash> yea
[16:22:19] <welder> dirtwash: you can do it with awk too
[16:23:02] <welder> sort clogs the pipeline, awk with associative array does not and it immediatelly prints the duplicates
[16:23:22] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Ping timeout: 250 seconds)
[16:24:50] *** Joins: CaCode (~CaCode@user/cacode)
[16:25:18] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 260 seconds)
[16:25:40] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[16:27:31] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[16:28:07] *** Joins: somlis (~somlis@user/somlis)
[16:29:00] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[16:29:51] *** Joins: zeden (~zeden@user/zeden)
[16:29:52] *** Quits: spy_ (~androirc@2804:29b8:5078:3b44:2ce0:566a:5996:4cb0) (Remote host closed the connection)
[16:31:55] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[16:32:16] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[16:33:04] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[16:33:59] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[16:36:05] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[16:36:24] <dirtwash> how do I get a sorted uniq -c? if I throw it in sort it wont work
[16:36:29] <dirtwash> i want highest counts first
[16:37:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 256 seconds)
[16:39:04] <dirtwash> got it
[16:39:57] *** Quits: XV8 (~XV8@2601:5cb:c001:50:552:a21c:75c1:657) (Quit: Textual IRC Client: www.textualapp.com)
[16:42:30] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:44:22] <geirha> sort file | uniq -c | sort -rn
[16:47:25] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 256 seconds)
[16:50:45] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[16:51:51] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[16:52:53] *** Joins: Atque (~Atque@user/atque)
[16:53:22] *** Joins: cdown (~cdown@188.214.11.14)
[16:54:59] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[16:57:53] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:59:20] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:06:00] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[17:19:17] *** Quits: hlauk (~hlauk@176.33.108.116) (Ping timeout: 240 seconds)
[17:21:06] *** Joins: fuzzybear3965 (~fuzzybear@185.38.217.76)
[17:32:45] *** Joins: bluedust (~bluedust@103.160.194.145)
[17:34:18] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[17:36:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:36:18] *** Joins: nunggu (~q@user/nunggu)
[17:37:18] <dirtwash> why is it that if i have a curl that doesnt work that echo $? outputs nothing
[17:37:22] <dirtwash> shouldnt it give me 1?
[17:39:29] *** Joins: XV8 (~XV8@2601:5cb:c001:50:812:6105:a298:6382)
[17:41:39] <omegatron> yeah, without seeing the code lines in question, one can only guess
[17:43:43] <NRK[m]> you probably want `curl -f`
[17:43:43] <omegatron> echo $?   should always output  0 or the respective error code of the last command - therefore, if you see nothing, your code is borked
[17:44:59] <dirtwash> i wasnt even using code, just curl that timed out
[17:45:56] <dirtwash> curl -k -s -I https://8.8.8.5 --max-time 5 && echo $?
[17:45:59] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[17:46:01] <dirtwash> doesnt give me anything?
[17:46:35] <omegatron> I knew it
[17:46:44] <omegatron> can you explain that line of yours=
[17:46:45] <omegatron> ?
[17:46:56] <NRK[m]> `&&` kek
[17:47:09] <dirtwash> run command and echo lasts command result?
[17:47:14] <omegatron> nope
[17:47:19] <dirtwash> how is it done properly
[17:47:44] <omegatron> replace the '&&' with ;  for example  - do you know what '&&' means ?
[17:47:56] <dirtwash> and?
[17:48:30] <dirtwash> hm ok thanks, learning something new every day
[17:48:30] <omegatron> https://www.gnu.org/software/bash/manual/bash.html#Lists
[17:48:51] <dirtwash> ohh
[17:48:55] <dirtwash> that explains lol
[17:49:08] <omegatron> your echo is executed ONLY if curl returns an exit code of 0
[17:49:12] <dirtwash> yes makes sense
[17:49:19] <dirtwash> gawd i feel like a noob again
[17:49:36] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Ping timeout: 250 seconds)
[17:52:53] *** Joins: webchat23 (~webchat23@2600:8805:a00:5800:34dc:9e5b:e64b:66c7)
[17:53:19] <dirtwash> ok ehm..if i have a curl something > file , does this eval to true if the curl fails? would it write an empty line to file?
[17:54:28] <NRK[m]> depends. it might report errors to stderr.
[17:56:04] *** Joins: asdf1_ (~asdf1@89.128.41.255)
[17:59:05] <dirtwash> hm shoudlnt this work? cat test | grep $(echo $line | awk '{print $3}')
[17:59:22] <dirtwash> grep complains "Usage: grep [OPTION]... PATTERNS [FILE]..."
[17:59:35] *** Quits: asdf1 (~asdf1@89.128.41.255) (Ping timeout: 256 seconds)
[18:00:19] <grawity> it should if the $(...) actually expands to something, but have you checked whether it actually does?
[18:00:39] <grawity> would recommend quoting it as "$(...)" though
[18:00:54] <dirtwash> ah yes..
[18:01:42] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:01:59] <NRK[m]> probably want to quote "$line" as well
[18:02:04] <NRK[m]> !qefs
[18:02:04] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[18:02:57] <furrymcgee> \e\C-e
[18:03:27] <omegatron> and remove the cat ; just do  grep ... < file
[18:04:09] <dirtwash> grep pattern < file works the same?
[18:04:27] <dirtwash> uff what im trying is complicated
[18:04:38] <NRK[m]> does bash has some parameter subsitution which can replace the `awk $3` ?
[18:04:49] <omegatron> can you describe in plain English what you want to achieve?
[18:04:57] *** Quits: webchat23 (~webchat23@2600:8805:a00:5800:34dc:9e5b:e64b:66c7) (Quit: Client closed)
[18:05:19] <omegatron> for '<'  see  https://www.gnu.org/software/bash/manual/bash.html#Redirecting-Input
[18:05:29] <grawity> NRK[m]: a bit manual but I thought something like tmp=${line#* * }; tmp=${tmp%% *} would do it
[18:06:02] <dirtwash> im reading a file line by line, while i do that i also read from another file line by line and create an array for all input that goes via grep, later i iterate over the array and if something evals true i break that for loop and it continues to the next on the line of first file
[18:06:10] <NRK[m]> hmm, i was thinking bash would have something more powerful/robust
[18:07:25] <dirtwash> omegatron:probably doesnt tell you much without seeing the code
[18:07:52] <omegatron> write a function .. 1) construct your array 2) process it in a loop 3) do whatever is necessary 4 ) ...
[18:08:44] <grawity> NRK[m]: there are arrays, but I'm not sure what's the "safe" way to write the 1st half of `tmp=($line); echo ${tmp[2]}`
[18:08:48] *** Quits: Strom- (strom@fedora/strom) ()
[18:08:59] <omegatron> what I can tell is: don't try to write a shitty one-liner, when you have limited knowledge of the shell and third-party programs - you will only earn frustration
[18:09:00] <grawity> NRK[m]: in some cases `while read -r _ _ thethirdword _; do ... done < thefile` is also used, when you want the 3rd column of every line
[18:09:14] <furrymcgee> set - $line ; echo $2
[18:09:23] *** Parts: Intelo (~Intelo@88.246.72.239) ()
[18:09:42] <NRK[m]> dirtwash: so you want to stop at a line when grep matches? there's `grep -m 1`
[18:10:09] <omegatron> or an alternative to set would be   IFS="whatever" read -r -a myarrayvar <<< "some text"
[18:10:11] <dirtwash> so far i have this https://pastebin.com/raw/Vbf9qw5q
[18:10:21] <dirtwash> but grep fails on me
[18:11:16] <dirtwash> ah small error for that grep its < $2
[18:11:31] *** Joins: Strom (~strom@fedora/strom)
[18:11:48] <dirtwash> but i reckon that done () might be the problem?
[18:12:19] <grawity> ah I had forgotten about set
[18:12:35] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[18:12:37] <grawity> isn't there some catch with both `set -- $line` and `arr=($line)` when $line contains potential globs?
[18:16:21] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:16:40] <geirha> yes. Instead use read or mapfile to split a string into an array
[18:17:02] <dirtwash> ah stupid me
[18:17:06] * dirtwash found the issue
[18:17:11] <grawity> hmm, can mapfile deal with words? I've used it a few times but only for whole lines
[18:17:21] <grawity> oh right, there's a delimiter option I think
[18:17:44] <grawity> still don't like <<< creating a temporary file
[18:19:12] <geirha> in newest bash it creates a pipe instead if the content is small enough
[18:19:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:21:15] *** Quits: fuzzybear3965 (~fuzzybear@185.38.217.76) (Quit: Client closed)
[18:21:28] *** Joins: fuzzybear3965 (~fuzzybear@185.38.217.76)
[18:22:29] <dirtwash> oh yes, works on second attempt
[18:23:06] <geirha> I find your indentation rather weird
[18:23:44] <geirha> alternating between 2, 4, 1 and 0 spaces
[18:24:30] *** Joins: webchat23 (~webchat23@2600:8805:a00:5800:ce50:f000:35f1:b738)
[18:24:59] <dirtwash> stupid question but can just store a curl output in a bash var?
[18:25:10] <dirtwash> geirha: yea havent cleaned that up yet
[18:25:14] <dirtwash> comes from copy/pasting
[18:25:27] *** Quits: moto (~moto@user/moto) (Ping timeout: 268 seconds)
[18:25:56] <geirha> var=$(curl -s ...)
[18:26:10] <dirtwash> yes so it doesnt matter how big the output is?
[18:26:25] <dirtwash> i just dont want to repeat the same curl calls over and over
[18:26:31] <geirha> as long as you have enough memory available, it'll work
[18:26:36] <dirtwash> ok thx
[18:26:40] <geirha> and as long as the data is not binary
[18:27:19] *** Joins: dreamon (~dreamon@p57a4c923.dip0.t-ipconnect.de)
[18:27:51] *** Joins: yeirr (~yeirr@user/yeirr)
[18:28:33] <dirtwash> how can I echo multiple variables into the same line?
[18:29:05] <geirha> printf '%s %s\n' "$var1" "$var2"
[18:29:28] <geirha> don't use echo in new scripts; consider it deprecated even though it isn't officialy
[18:29:41] <dirtwash> ok
[18:29:43] *** Joins: uc50ic4more (~uc50ic4mo@dyn98-143-76-228.HSIA.mnsi.net)
[18:30:19] <dirtwash> can i do : printf '%s %s\n' "$var1" "$var2 | grep something | awk ..."
[18:30:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b)
[18:30:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b) (Changing host)
[18:30:30] *** Joins: skapata (~Skapata@user/skapata)
[18:30:46] *** Quits: uc50ic4more (~uc50ic4mo@dyn98-143-76-228.HSIA.mnsi.net) (Client Quit)
[18:31:07] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[18:31:51] <geirha> printf '%s ' "$var1" ; printf '%s\n' "$var2" | awk ...
[18:32:04] *** Joins: moto (~moto@user/moto)
[18:32:07] <geirha> usually pointless to combine grep and awk
[18:32:09] <dirtwash> geirha:but does it go to the same line then?
[18:32:24] <dirtwash> i need to write to fie
[18:32:28] <geirha> yes, since the first printf didn't output a newline
[18:32:29] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:42] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[18:32:42] <dirtwash> so after the second printf it goes > file?
[18:32:51] <geirha> wrap it in { ... ; } > file
[18:32:58] <geirha> !{
[18:32:59] <greybot> Command grouping. Like (), but doesn't spawn a subshell. See http://mywiki.wooledge.org/BashGuide/CompoundCommands#Command_grouping
[18:33:02] <dirtwash> dear god this is getting complicated :)
[18:33:19] <dirtwash> btw if I break in a while loop it quits yes?
[18:33:33] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:33:54] <geirha> It sounds like you're programming in another language and try to translate word for word to bash
[18:34:07] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:34:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:34:21] <dirtwash> geirha: well how do I exit a while loop early?
[18:34:25] <geirha> break breaks out of a loop, yes
[18:34:30] <dirtwash> yea its similar to python
[18:36:37] <dirtwash> ok id be surprised if this runs first attempt again...
[18:40:05] <dirtwash> if I want to only run a while loop for a bit i could just add a counter variable and upon if [ counter == 100 ] I could break the loop right?
[18:40:05] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (Quit: ZNC 1.8.2 - https://znc.in)
[18:40:13] <dirtwash> i'd just do counter=counter+1 ?
[18:40:50] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[18:41:19] *** Joins: luckiswithme (~luckiswit@149.167.139.139)
[18:42:35] *** Joins: Kruppt (~Kruppt@50.111.28.175)
[18:42:39] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-49-2.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[18:42:57] <Blondie101010> for ((i=0; i < 10; i ++)); do echo $i; done
[18:43:24] <dirtwash> Blondie101010: but my loop is reading lines from file, i just want to abort earlier
[18:43:26] <geirha> using a while loop works too, but it would look like   while (( counter < 100 )) ; do (( counter++ )) ; ... ; done
[18:43:39] <geirha> or while (( counter++ < 100 )) ; do
[18:44:06] <dirtwash> basically i just want to abort the reading if i found X amount of lines
[18:44:12] <Blondie101010> you should include your read in the code
[18:44:14] <dirtwash> i think it works anyway, seems all good
[18:44:27] <Blondie101010> it does look ok
[18:44:59] *** Parts: fef (~thedawn@user/thedawn) (Leaving)
[18:48:28] *** Quits: master_____ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: master___ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: master______ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: master__ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: logstash (~logstash@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: master____ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: master_ (~master@89.128.41.255) (Remote host closed the connection)
[18:48:28] *** Quits: asdf1_ (~asdf1@89.128.41.255) (Remote host closed the connection)
[18:48:40] <Blondie101010> wow
[18:49:02] <Blondie101010> I'm surprised having so many connections is allowed
[18:49:50] *** Joins: goldfish (~goldfish@user/goldfish)
[18:50:07] <dirtwash> whats wrong with my grouping: { printf '%s ' "$a" ; printf '%s' "$check" | grep 'pattern' | awk '{print $2}' ; printf '%s\n' "$line" } >> file
[18:50:21] * dirtwash is getting character blind
[18:50:59] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[18:51:57] <furrymcgee> printf '%s %s' ?
[18:52:56] <dirtwash> why 2?
[18:53:01] <dirtwash> single vars
[18:53:54] <dirtwash> without the third var it was working fine hm
[18:54:39] *** Joins: ano (~ano@user/ano)
[18:55:46] <dirtwash> ok i dont see it, maybe im blind after staring into a terminal for 8h straight
[18:56:03] <furrymcgee> ; }
[18:56:39] <geirha> awk -v a="$a" -v line="$line" '/pattern/{printf("%s %s %s\n", a, $2, line); exit}' <<< "$check"
[18:56:42] <dirtwash> oh
[18:57:47] <dirtwash> hm seems my bash version doesnt understand counter++
[18:58:01] <geirha> you need an arithmetic command for that
[18:58:05] <geirha> (( counter++ ))
[18:58:07] <dirtwash> oh
[18:58:10] <geirha> !math
[18:58:10] <greybot> Add 7 to a variable: ((a+=7)) OR a=$((a+7)) OR let 'a+=7' # See http://mywiki.wooledge.org/ArithmeticExpression
[18:58:24] *** Joins: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net)
[18:58:35] <dirtwash> thanks a lot
[18:58:54] <dirtwash> now its running, final run hopefully
[18:59:03] <dirtwash> bet i forget edgecases but well
[18:59:08] <dirtwash> thanks everybody, I learned a lot
[19:00:25] <dirtwash> hm why do I see a newline after my second variable
[19:00:32] <dirtwash> i only have \n ont he third
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:03:12] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:03:16] *** Joins: millido (~millido@84.210.150.128)
[19:04:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[19:04:02] *** Quits: fuzzybear3965 (~fuzzybear@185.38.217.76) (Quit: Client closed)
[19:04:15] <dirtwash> i assume its due to awk, switched order, works now
[19:04:54] <Blondie101010> switched order?
[19:05:02] <Blondie101010> you put the line first?
[19:05:17] <dirtwash> i put the var with the awk last
[19:05:28] <dirtwash> and $line seond
[19:05:41] <dirtwash> doesnt matter to me, as long as it works
[19:06:38] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:09:52] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[19:14:08] *** Joins: rMdes (~rmdes@my.armada.digital)
[19:15:53] *** Joins: A|an (~Alan@173.218.175.171)
[19:19:20] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:20:37] <furrymcgee> try cut and paste
[19:20:37] *** Quits: timm (~timm@user/timm) (Ping timeout: 240 seconds)
[19:21:07] *** Quits: ASDF123 (~ASDF123@89.128.41.255) (Quit: Leaving)
[19:23:02] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[19:23:40] *** Joins: millido (~millido@84.210.150.128)
[19:23:57] *** Quits: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953) (Ping timeout: 240 seconds)
[19:24:54] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[19:25:32] *** Joins: millido (~millido@84.210.150.128)
[19:30:51] <dirtwash> is the use of my counter variable to break the while loop correct? https://pastebin.com/raw/FizV9yYt
[19:31:06] <dirtwash> becuase Im beginning to question it ever breaks out
[19:33:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:35:58] <Blondie101010> can't you test it?
[19:36:16] <Blondie101010> just add a simple trace (echo)
[19:36:57] <dirtwash> already running it and i rather not abort for fun
[19:37:00] <dirtwash> but i see nothing wrong with it
[19:37:16] <dirtwash> or is there?
[19:37:41] <Blondie101010> not at first sight, but I would test it
[19:39:35] <Blondie101010> and no it's not good
[19:40:06] <Blondie101010> once I noticed it didn't work, the test problem jumped at me
[19:40:14] <dirtwash> if damn the if doesnt work
[19:40:23] *** Quits: luckiswithme (~luckiswit@149.167.139.139) (Remote host closed the connection)
[19:40:25] <dirtwash> but why
[19:40:26] <Blondie101010> no, test (`[`)
[19:40:33] <Blondie101010> because you don't know how to use it
[19:40:41] <Blondie101010> = is for strings
[19:41:17] <dirtwash> counter -eq 30?
[19:41:21] *** Joins: luckiswithme (~luckiswit@149.167.139.139)
[19:41:26] <Blondie101010> test it
[19:41:56] <Blondie101010> I follow an agile mentality, and that often involves test based development
[19:42:52] <dirtwash> god damn i forgot the $
[19:42:56] <dirtwash> and the equal doesnt work hm
[19:43:12] * dirtwash facepalms so hard
[19:43:14] <Blondie101010> since you're using bash, you should use bash's test: [[
[19:43:25] <Blondie101010> actually for number: ((
[19:43:32] *** Joins: n4dir (~user@i577bc862.versanet.de)
[19:43:49] <Blondie101010> that's more intuitive and has less implementation limitations
[19:44:13] <dirtwash> (( $counter -eq 30 )) ?
[19:44:23] <Blondie101010> do you have a computer?
[19:44:33] <dirtwash> i cant test run every line
[19:44:46] <Blondie101010> so you prefer to paste them on IRC instead?
[19:44:51] <gr33n7007h> dirtwash: (( counter == 30 )) && break
[19:46:01] <dirtwash> [ $counter -eq 30 ] seems to work as well though?
[19:46:13] *** Joins: jensen (~jensen@65.78.100.184)
[19:46:25] <Blondie101010> dirtwash:  test it!!!!!!!!!!!!
[19:46:29] <Blondie101010> # i=31; (( i > 30 )) && echo "too big"
[19:46:30] <shbot> Blondie101010: too big
[19:46:59] <dirtwash> Blondie101010: I did, it worked
[19:47:36] <dirtwash> running quite succesfully now
[19:47:53] <Blondie101010> it's usually better to use <, <=, >, >= for changing numbers to make your code more maintainable
[19:48:27] <Blondie101010> otherwise a tiny change in one place breaks things elsewhere
[19:48:31] <jensen> what is a reasonably efficient way to sift through the output of `pactl list sink-inputs` (https://0x0.st/oo21.txt) and get all the Sink Input # of sinks with `application.name = "mpv"`? E.g. "87" in this example
[19:48:41] <dirtwash> Blondie101010: ok I will remember that, thanks
[19:49:02] <boreas> in the spirit of defensive programming ">=" is better than "="
[19:49:10] <humky> I want to write a helper script to do some tasks faster, basically I run the script (in the terminal) and get a prompt : 1) blabla bla 2) blablalba 3) blabla, can I do it so that just typing 1 get me into that menu, without typing enter? or is it only possible with ncurses type of program?
[19:49:41] <dirtwash> I wonder if I can easily take all data from an array and throw it in xargs at once...to parallize some things. Instead of for looping
[19:50:02] <Blondie101010> do you know how to run things in the background?
[19:50:34] <dirtwash> boreas: will fix
[19:50:40] <dirtwash> Blondie101010:was that for me?
[19:50:44] <Blondie101010> yep
[19:50:44] *** Joins: wiscii (~tct@user/wiscii)
[19:51:20] <dirtwash> Blondie101010: by using &?
[19:51:28] <Blondie101010> correct
[19:51:55] <Blondie101010> if you want things to run in parallel, they can't all be in the foreground
[19:52:17] <dirtwash> so if I for loop I just add & and it will at once go to the next item
[19:52:32] <Blondie101010> yes, but be careful not to overload the machine
[19:52:41] <dirtwash> yea im familiar with that haha
[19:52:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:53:42] <dirtwash> hm I forgot this wont help me given I save the command output in a variable and process this then
[19:54:16] <Blondie101010> don't know your process, but you could possibly save it to a temp file
[19:56:43] <dirtwash> yea right now I push the data from a file into the bash script, I think to parallize this whole thing here I'd have to rewrite the script to except single input to stdin and then simply spawn many of the bash scripts and pull in data from a queue system
[19:56:59] <dirtwash> because trying to parallize things inside a single script is hard..
[19:58:05] <Blondie101010> what do you need to do with the output?
[19:58:19] <dirtwash> just write to same file
[19:58:26] <dirtwash> order dont matter either
[19:58:33] <Blondie101010> that's unclear
[19:58:42] <Blondie101010> your output appends to your input?
[19:58:54] <dirtwash> oh typo, some file
[19:58:59] <Blondie101010> ok
[19:59:03] <dirtwash> just some output file
[19:59:13] <Blondie101010> what do you put in variables?
[20:00:51] <dirtwash> unsure how to answer, theres a bunch of vars, input file lines, then other lines from another input file as well as temp variables that hold results from commands run in between
[20:01:33] <Blondie101010> oh well, you won't get help with such information
[20:02:00] <dirtwash> yea ;) not sure what you'd wanted to hear
[20:02:08] <Blondie101010> if the results you mention that need to be reprocessed are line specific, change the line you run
[20:02:34] <Blondie101010> if there's some kind of aggregation, combine them
[20:03:20] <humky> humky: I think I found it: https://unix.stackexchange.com/questions/356020/what-does-read-n1-s-mean-in-this-script (read -n1 -s)
[20:03:54] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[20:04:39] <Blondie101010> also, one way you can parallelize easily is to prepare split batches that you run in parallel instead of making a monstruous script that does it
[20:05:04] <dirtwash> Blondie101010: well imagine you have a variable and based upon that you have e.g. 100 items that you all have to process in another process and the result of each you'd have to temp. store in a variable. so I dont see how to do this dynamically in bash
[20:05:09] <dirtwash> easier to just have X processes
[20:05:31] <Blondie101010> dirtwash:  that sounds like what I refered to by changing the (command) line
[20:05:44] <Blondie101010> make the individual commands as complete as possible
[20:05:52] <boreas> jensen: https://pastebin.com/raw/fBwupHvW
[20:06:36] <Blondie101010> dirtwash: an approach you could take is to have 2 scripts: runbatch.sh and runline.sh
[20:06:56] <Blondie101010> runbatch.sh would simply look for the list and call runline.sh as needed
[20:07:03] <dirtwash> Blondie101010: well they are but I have to a) eval them for true and so if I dont want to rerun the same things over and over I also have to store them temporarily. Or at least I dont know how I eval a statemand while at the same time process its output
[20:07:06] <Blondie101010> or make those functions
[20:07:12] <boreas> jensen: the example uses awk to search for the "Sink Input*" and the "application.name" keys
[20:07:21] <dirtwash> Blondie101010: ah yes 2 scripts is an idea, I'd just spawn then
[20:07:27] <Blondie101010> dirtwash:  that is one macro operation, not a bunch of them
[20:07:34] <dirtwash> good idea..saves me a queue system
[20:07:44] <dirtwash> as long as its on single node
[20:08:08] <dirtwash> Blondie101010: great idea with splitting it up, thanks
[20:08:14] <Blondie101010> np
[20:11:44] *** Joins: Betal (~Betal@user/betal)
[20:11:51] *** Quits: Earnestly (~earnest@user/earnestly) (Quit: WeeChat 3.4)
[20:12:00] <dirtwash> Blondie101010: every time I read your nick I have to think of the Band, love them
[20:13:00] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:13:28] <Blondie101010> it's not bad but not relevant
[20:13:37] <dirtwash> Blondie101010: if i read from file and spawn a process for each...can I somehow limit this to not run more than x at once? similar to flags that parallel/xargs have
[20:13:43] *** Joins: Earnestly (~earnest@user/earnestly)
[20:13:54] *** Quits: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:14:01] <Blondie101010> no reason to avoid those
[20:14:03] <dirtwash> ah nvm I just cat the file to xargs
[20:14:46] <Blondie101010> there was a decent example shown recently but I don't remember precisely as it didn't work on my version
[20:15:15] <Blondie101010> one sec
[20:17:01] <Blondie101010> !wait-n
[20:17:01] <greybot> Run up to 5 processes in parallel (bash 4.3): i=0 j=5; for elem in "${array[@]}"; do (( i++ < j )) || wait -n; my_job "$elem" & done; wait
[20:17:20] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:17:33] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[20:21:10] <boreas> dirtwash: https://pastebin.com/raw/H4iahVHh
[20:21:57] <dirtwash> boreas:thanks
[20:21:59] <boreas> dirtwash: that's an example script for converting image files using multiple processes. Maybe you can change the image converting part to suit your needs
[20:22:27] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:22:57] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[20:24:30] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[20:26:34] <dirtwash> just gotta fix last kink then its ready to spawn
[20:26:43] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[20:28:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[20:33:16] <geirha> Rare to see a bourne script these days
[20:33:27] <geirha> It mishandles SIGINT
[20:34:02] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[20:35:13] <boreas> geirha: why?
[20:35:13] <dirtwash> im confused af, I grep for grep 'server\|Server' but I get output Warning: unknown mime-type for "HTTP/1.0" -- using "application/octet-stream"
[20:35:31] <dirtwash> that being from curl, but why is this passing grep
[20:35:37] <geirha> It exits instead of re-sending SIGINT to itself
[20:35:40] <geirha> !sigint > boreas
[20:35:40] <greybot> boreas: How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[20:37:51] <geirha> dirtwash: error messages are typically written to stderr. Only stdout goes through the pipe
[20:38:20] <dirtwash> btw can I do like: grep 'pattern' $var
[20:38:28] <dirtwash> or does it expect a file then
[20:39:24] <geirha> grep 'pattern' <<< "$var"
[20:39:57] *** Quits: clime (~clime@78-80-115-5.customers.tmcz.cz) (Ping timeout: 240 seconds)
[20:40:07] *** Quits: lopid (~lopid@user/lopid) (Quit: WeeChat 3.3)
[20:40:53] <dirtwash> geirha:if I use this in an if...it should only go through if there is the given pattern found right>
[20:41:18] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:41:20] <geirha> yes, but then you might as well just use [[ instead
[20:41:27] <geirha> if [[ $var = *pattern* ]] ; then
[20:41:48] <geirha> if [[ $var = *[Ss]erver* ]] ; then
[20:41:56] <dirtwash> differnt in my case, my pattern is fixed and i send the var through grep
[20:42:21] <dirtwash> if grep 'xxx' <<< "$check"
[20:42:27] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[20:42:38] *** Joins: lopid (~lopid@user/lopid)
[20:42:41] <geirha> if [[ $check = *xxx* ]]
[20:42:51] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[20:43:02] <geirha> unless you actually want the output from grep as well
[20:43:06] <dirtwash> but check has many lines, its a curl output, i just want to check if a certain header exists
[20:43:19] <dirtwash> if it exists then..
[20:43:50] <geirha> then I'd first parse out the header into an associative array, then do a quick lookup there instead
[20:44:11] <dirtwash> i jsut saved the curl output to the var and did a grep, that was working fine earlier
[20:44:16] <dirtwash> seems more simple?
[20:44:37] <geirha> less exact
[20:45:01] <geirha> you might get false positive by matching something in the body
[20:45:22] <dirtwash> geirha:I did -I
[20:45:27] <dirtwash> header only
[20:45:56] <dirtwash> but my bigger problem is that my previously working header grep is not working anymore hmm
[20:46:11] *** Joins: phr3ak (~noreply@88.151.102.124)
[20:46:52] <dirtwash> im getting a no such file error which means that somewhere grep things the input is the file ..
[20:47:19] <geirha> missing quotes, perhaps
[20:47:31] <jensen> boreas: excellent, thanks
[20:48:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:49:31] <phr3ak> hi guys, can you please check it why does it give different result than 'B'?
[20:49:33] <phr3ak> https://pastebin.com/U7DxsgdS
[20:49:33] <pasteban> Paste is available without ads on https://pastebin.com/raw/U7DxsgdS
[20:49:46] <dirtwash> solved
[20:50:09] <geirha> + is probably in the range between ' and _
[20:50:25] <phr3ak> oh
[20:50:29] <phr3ak> thanks
[20:51:38] <geirha> # printf '%d ' \'\' \'_ \'+
[20:51:39] <shbot> geirha: 39 95 43
[20:51:52] <geirha> yep, 43 is in the range 39-95
[20:54:20] *** Joins: clime (~clime@78-80-115-5.customers.tmcz.cz)
[21:01:24] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[21:01:41] <dirtwash> hm i just learned the hard lesson of when 100 processes write to the same file your lines are all over the place
[21:01:44] <dirtwash> how does one get around that?
[21:02:07] <boreas> geirha: according to your link, the script handles SIGINT correctly. The article calls it "IUE". Note that the subshell does not ignore SIGINT, but handles it as well
[21:02:28] <grawity> dirtwash: what kind of processes? you want them to do line-buffered writes, instead of block-buffered, but how you achieve that might depend
[21:02:50] <dirtwash> hm actually i wonder why this fails
[21:02:51] <grawity> some programs can just be run through `stdbuf -oL ...` if they use libc stdio
[21:03:27] <dirtwash> I do this : { printf '%s ' "$a" ; printf '%s' "$check" | grep 'pattern' | awk '{print $2}' ; printf '%s\n' "$line"; } >> file
[21:03:49] <dirtwash> for each script process, but the file seems a bit chaotic now, there is missing newlines sometimes for example
[21:03:58] <grawity> ok so that's 4 separate writes
[21:04:10] <grawity> find a way to combine them into a single write
[21:04:25] <grawity> didn't someone suggest a single-awk-call alternative earlier? the one with `awk -v`
[21:04:41] <dirtwash> I asked earlier how to write multiple vars into same line, i was told to do it that way
[21:05:03] <grawity> and the first person who told you to do it in a certain way wins
[21:05:05] <dirtwash> didnt know its separate writes, that explains it I guess
[21:05:05] <grawity> right?
[21:05:11] <dirtwash> grawity: fair enuf
[21:05:21] <dirtwash> on the upside..this is the last hurdle, otherwise it works fast
[21:05:29] <grawity> yeah it's separate writes, the { } or ( ) only result in the file being *opened* once
[21:05:36] <grawity> but they don't actually combine the output
[21:05:54] <grawity> so it's no different from `printf '%s ' "$a" >>file; printf|grep|awk >>file; etc`
[21:06:09] <grawity> if you want to keep these separate printfs, one possible option would be
[21:06:27] <dirtwash> I need a single write
[21:06:30] <grawity> output=$(printf '%s ' "$a" ; printf '%s' "$check" | grep 'pattern' | awk '{print $2}' ; printf '%s' "$line"); printf '%s\n' "$output" >> file
[21:06:46] <dirtwash> that looks better indeed
[21:06:54] <grawity> that first gathers the whole write in a variable, then writes it all at once to the file
[21:06:59] <dirtwash> thanks
[21:07:16] <grawity> though geirha's single `awk -v` command looks nicer IMHO
[21:09:07] *** Quits: n4dir (~user@i577bc862.versanet.de) (Remote host closed the connection)
[21:11:00] <dirtwash> ok last question hopefully, easy way to remove newline from string
[21:11:08] *** Joins: n4dir (~user@i577BC862.versanet.de)
[21:11:14] <dirtwash> probably not echo $string1 | tr "\n" " "
[21:11:22] <grawity> where does the newline come from
[21:11:29] <grawity> sometimes the answer "don't add it in the first place"
[21:11:30] <dirtwash> bad people putting crap in headers lol
[21:11:32] <grawity> it depends
[21:11:38] <dirtwash> from a variable
[21:12:01] <dirtwash> need to clean a variable
[21:12:06] <phy1729> !pe
[21:12:06] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[21:14:04] <dirtwash> finally its done, learned a lot today
[21:19:22] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.232)
[21:22:21] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[21:22:22] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[21:24:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:25:05] *** Joins: crashrep (~crashrep@user/crashrep)
[21:25:29] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.4)
[21:25:51] *** Joins: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143)
[21:28:46] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:32:50] *** Joins: somlis (~somlis@user/somlis)
[21:34:43] *** Joins: lavaball (felix@31.204.155.215)
[21:39:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[21:40:26] *** Quits: luckiswithme (~luckiswit@149.167.139.139) (Remote host closed the connection)
[21:43:44] *** Joins: luckiswithme (~luckiswit@149.167.139.139)
[21:44:59] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[21:45:20] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Ping timeout: 250 seconds)
[21:46:06] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[21:47:43] *** Joins: zro (~zro@user/zro)
[21:47:49] *** Quits: jonatura1 (~jonatura@80.71.142.166.ipv4.parknet.dk) (Quit: WeeChat 3.3)
[21:48:19] *** Quits: XV8 (~XV8@2601:5cb:c001:50:812:6105:a298:6382) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:48:58] <Blondie101010> I don't like that factoid...  it would be so much more useful if it said what the commands do
[21:51:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:52:27] *** Joins: bluedust_ (~bluedust@185.248.85.22)
[21:52:41] <llua> you do know that irc has a small message limit right?
[21:53:10] <han-solo> there are 2 links too
[21:53:45] <llua> that explains what those expansions do
[21:55:57] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[21:56:33] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:57:12] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:57:27] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[21:58:05] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[22:00:04] *** Joins: bluedust (~bluedust@103.160.194.145)
[22:01:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:01:12] *** Quits: luckiswithme (~luckiswit@149.167.139.139) (Read error: Connection reset by peer)
[22:01:26] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:03:15] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Ping timeout: 256 seconds)
[22:03:34] *** Joins: dr_snack (~dr.snack@2a0c:5a80:1609:8600:a17f:57a4:f3dc:cfc2)
[22:03:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:03:49] *** Quits: bluedust_ (~bluedust@185.248.85.22) (Ping timeout: 256 seconds)
[22:07:50] *** Joins: bluedust_ (~bluedust@103.160.194.145)
[22:08:02] *** Quits: bluedust (~bluedust@103.160.194.145) (Read error: Connection reset by peer)
[22:08:49] *** Joins: XV8 (~XV8@2601:5cb:c001:50:812:6105:a298:6382)
[22:11:14] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:11:51] *** Joins: seninha (~seninha@user/seninha)
[22:13:51] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[22:14:09] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[22:14:18] *** Quits: dr_snack (~dr.snack@2a0c:5a80:1609:8600:a17f:57a4:f3dc:cfc2) (Quit: Leaving)
[22:27:35] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:31:33] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[22:31:50] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[22:32:28] *** Joins: ChmEarl (~chmearl@user/chmearl)
[22:38:02] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[22:38:15] *** Joins: smrtz (~smrtz@user/smrtz)
[22:39:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:39:36] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:43:26] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[22:44:17] *** Joins: tmm8829 (~tmm88@user/tmm88)
[22:44:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:44:43] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[22:44:49] *** Joins: crashrep (~crashrep@user/crashrep)
[22:45:41] *** Joins: jkwnki (~jkwnki@p4fedb70b.dip0.t-ipconnect.de)
[22:47:57] *** Quits: tmm8829 (~tmm88@user/tmm88) (Client Quit)
[22:48:11] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[22:50:00] *** Joins: tmm88 (~tmm88@user/tmm88)
[22:50:17] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: leaving)
[22:51:08] *** Joins: tmm88 (~tmm88@bl22-240-102.dsl.telepac.pt)
[22:52:12] <uuidNuni1> # alias foo='bar' ; type -p foo ; type -P foo ; command -v foo ; command -V foo
[22:52:14] <shbot> uuidNuni1: alias foo='bar'
[22:52:14] <shbot> uuidNuni1: foo is aliased to `bar'
[22:53:27] <uuidNuni1> # alias foo='bar' ; echo -n typep: ;  type -p foo ; echo -n typeP: ; type -P foo ; echo -n cmdv : ; command -v foo ; echo -n cmdV: ; command -V foo
[22:53:28] <shbot> uuidNuni1: typep:typeP:cmdv :alias foo='bar'
[22:53:28] <shbot> uuidNuni1: cmdV:foo is aliased to `bar'
[22:53:44] *** Quits: Rue_ (~rue@61-231-136-36.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[22:54:07] *** Joins: D4mned (~D1mned@212.101.251.96)
[22:55:10] <D4mned> hello, im trying to write a small bash script a for loop that should open multiple terminals and run a command on them
[22:55:29] *** Joins: ferdna (~ferdna@user/ferdna)
[22:55:39] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[22:55:42] <D4mned> its working but then it opens one terminal and i have to close it inorder for the next one to open
[22:55:48] <D4mned> im i missing a flag or something
[22:56:06] <D4mned> for CONT in $CONTAINERS
[22:56:06] <D4mned>     do
[22:56:06] <D4mned>     konsole --noclose -e echo $CONT;
[22:56:06] <D4mned>     done
[22:56:33] <D4mned> minus that semicolon i was trying things
[22:56:39] <uuidNuni1> "${CONTAINERS[@]}"
[22:57:36] <uuidNuni1> CONTAINERS=( a b c d ...)
[22:57:46] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[22:58:01] <D4mned> i should put ${CONTAINERS[@]} instead of $CONT ?
[22:58:43] <uuidNuni1> # arr=(a b c) ; for CONT in "${arr[@]}" ; do echo "$CONT" ; done
[22:58:44] <shbot> uuidNuni1: a
[22:58:44] <shbot> uuidNuni1: b
[22:58:44] <shbot> uuidNuni1: c
[22:59:21] <predmijat> Hi, once upon a time I saw an image related to BASH - it was a simple diagram with "does it work?", yes/no, and "add some quotes/remove some quotes". I am failing to find it now. Anyone knows what I'm talking about?
[22:59:38] <uuidNuni1> # arr="a b c" ; for CONT in $arr ; do echo "$CONT" ; done
[22:59:39] <shbot> uuidNuni1: a
[22:59:39] <shbot> uuidNuni1: b
[22:59:39] <shbot> uuidNuni1: c
[23:00:14] <uuidNuni1> ok... same stuff, but. it depends
[23:00:22] <larryv> D4mned: is CONTAINERS an array or just a string you're word-splitting on
[23:00:37] <D4mned> CONTAINERS=$(docker ps -a -q)
[23:00:42] <D4mned> iam getting names of containers
[23:00:48] <larryv> gross
[23:00:49] <larryv> either way, it's not going to fix the problem you asked about
[23:00:54] <geirha> mapfile -t containers < <(docker ps -a -q)
[23:01:53] <geirha> you probably need to run konsole in the background
[23:02:33] <D4mned> i want terminals to open
[23:02:41] <geirha> while read -r container ; do konsole --noclose -e printf '%s\n' "$container" & done < <(docker ps -a -q) ; wait
[23:02:56] <uuidNuni1> geirha:->  do we need mapfile really? containers=( $(docker...) )
[23:03:53] <geirha> if you make sure IFS is sane, that should work in this case, since the output of that docker command will just be lines of hashes, but in general, it's bad practice
[23:04:37] <larryv> konsole itself might also have an option that avoids blocking
[23:05:30] <D4mned> yeah i think it might be konsole blocking it
[23:05:47] <D4mned> because its working i just have to close one so the other one opens
[23:06:02] <uuidNuni1> add a &
[23:06:13] <D4mned> same thing
[23:06:31] <uuidNuni1> konsole --noclose -e echo $CONT &
[23:07:19] <D4mned> yeah nothing happens when i add it
[23:07:38] <uuidNuni1> they are all in background
[23:08:06] <geirha> so even though you run 20 konsole at the same time, one of them blocks the 19 others?
[23:08:07] *** Quits: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net) (Read error: Connection reset by peer)
[23:08:07] <D4mned> i want to see them though and interact
[23:08:24] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[23:08:33] *** Joins: csm3105 (~csm3105@static-107-54-230-77.ipcom.comunitel.net)
[23:08:46] <D4mned> what iam trying to do is get 3 container names from this (docker ps -a -q)
[23:08:55] <D4mned> and i want to start them interactively
[23:09:25] <geirha> and that will happen with or without the &
[23:09:40] <geirha> the difference is only whether the three konsole's are started sequentially, or in parallel
[23:09:53] <D4mned> yeah
[23:10:13] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.232) (Quit: leaving)
[23:11:54] <geirha> so three konsole windows should pop up at the same time, and then you can interact with them one by one ...
[23:12:23] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 256 seconds)
[23:13:28] <D4mned> please excuse my ignorance, its the 1st time i write a bash script
[23:13:30] <kurahaupo1> uuidNuni1: apropos command -v vs type -p etc: I find the simplest way is just avoid aliases, at least for the purpose of defining commands. My .bash_aliases contains “unalias 2>/dev/null cd.. cp d l. la ll ls lsd md more mtr mv p r rd rm sp vi which” to get rid of the stupid cruft introduced by /etc/bash* on Debian-derived systems. (I do have a few aliases like «sudo='sudo '» that make tab completion work better but don't change the command; and a ver
[23:13:43] <D4mned> what should i write in the for loop
[23:14:02] <kurahaupo1> D4mned: "for" loops aren't the only type of loop in Bash
[23:14:47] <geirha> while read -r container ; do konsole --noclose -e printf '%s\n' "$container" & done < <(docker ps -a -q) ; wait
[23:14:48] <D4mned> yeah im sure theres a way to do it with a while loop
[23:16:11] <geirha> I'm guessing the real command you want to run in each console is docker attach "$container", or maybe exec or logs -f
[23:16:19] <kurahaupo1> Is konsole one of those programs that does funky whitespace mashing on the "command" arguments it's given?
[23:16:19] <geirha> *konsole
[23:17:48] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.232)
[23:18:25] <geirha> wow, konsole's man-page is pretty useless
[23:18:55] <geirha> but it does appear to implement -e sanely, like xterm, and not the stupidity gnome-terminal does
[23:19:14] * ormaaj is fanboy
[23:19:31] <kurahaupo1> (execve without an intervening /bin/sh)
[23:19:47] *** Joins: tmm8899 (~tmm88@user/tmm88)
[23:20:06] *** Quits: tmm8899 (~tmm88@user/tmm88) (Client Quit)
[23:20:08] *** Quits: rgrinberg (~textual@2806:101e:7:2b:bcc3:4b5c:4ace:b143) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:21:14] <ormaaj> konsole can host mutiple instances in a process. There's an option to start new real instances
[23:22:37] <kurahaupo1> ormaaj: that's fine until something breaks it, then you've lost a whole bunch of shells instead of just one.
[23:23:20] <uuidNuni1> kurahaupo1:-> type -P is the only working one.
[23:23:44] <Earnestly> kurahaupo1: This is the case with urxvtd as well, and for my entire life so far, I've never actually seen that failure mode happen
[23:23:47] <Earnestly> Perhaps very lucky
[23:23:58] <uuidNuni1> # alias foo=bar ; type -P foo ; echo $? ; command -v foo &>/dev/null ; echo $?
[23:24:00] <shbot> uuidNuni1: 1
[23:24:00] <shbot> uuidNuni1: 0
[23:24:04] <kurahaupo1> Earnestly: keep trying :-)
[23:24:23] <Earnestly> I ended up with xterm
[23:24:54] <kurahaupo1> uuidNuni1: for the purpose of checking within a script, aliases can be ignored, because the script would have to explicitly enable aliases (and would need a good reason to do that)
[23:24:59] <kurahaupo1> Earnestly: /metoo
[23:25:14] <kurahaupo1> Earnestly: or rather, I've just always come back to Xterm
[23:25:32] <uuidNuni1> kurahaupo1:-> yes, but functions ... hell. type -P is reliable
[23:26:27] <kurahaupo1> Earnestly: for me, the killer feature of Xterm is click-to-extend / click-to-paste.
[23:26:30] *** Quits: n4dir (~user@i577BC862.versanet.de) (Remote host closed the connection)
[23:27:06] <uuidNuni1> # foo () { bar ; } ; type -P foo ; echo $? ; command foo ; command -v foo ; echo $?
[23:27:12] <shbot> uuidNuni1: 1
[23:27:12] <shbot> uuidNuni1: bash: foo: command not found
[23:27:12] <shbot> uuidNuni1: etc... ( http://ix.io/3Nac )
[23:27:19] <kurahaupo1> Earnestly: and the "slow" multiclick that only counts the time from release to press, not the time from press to press
[23:28:21] <kurahaupo1> (Why doesn't every other app adopt that feature? It'd make them much more usable by people with limited dexterity.)
[23:28:49] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[23:30:02] *** Joins: yustin (~yustin@user/yustin)
[23:31:07] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:32:08] <ormaaj> I guess. I never run lots of shells without tmux.
[23:33:42] <Earnestly> kurahaupo1: textfields in html does this
[23:33:48] <Earnestly> word, sentence, paragraph
[23:34:34] <kurahaupo1> Earnestly: probably just a side effect of whichever browser using Xlib rather than something fatter
[23:35:17] <ormaaj> geirha: yeah that's pretty much all of kde except incidental things that are geared towards cli. kde likes --help and --help-all
[23:35:47] <Earnestly> kurahaupo1: No it's html feature, lots of js editors people use break this
[23:38:12] <kurahaupo1> Earnestly: I suspect "html" isn't relevant; the lack of js is.
[23:39:04] <kurahaupo1> Does HTML5 have "onRelease" to go with "onClick"?
[23:41:44] <Earnestly> kurahaupo1: https://drewdevault.com/2021/06/27/You-cant-capture-the-nuance.html
[23:43:30] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[23:45:40] <kurahaupo1> Earnestly: what is that supposed to illustrate? The clicking in the text box there behaves very differently from clicking in Xterm.
[23:45:51] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:46:53] <Earnestly> kurahaupo1: No that's a nice feature that is shared with xterm, I also set the class characters in xterm to define words enough to include typical urls
[23:47:02] <Earnestly> that it is a nice*
[23:47:21] <kurahaupo1> Earnestly: In Xterm, you can switch the selection mode character->word->line->character by adding another click *at any time*, not just at the beginning.
[23:47:41] <Earnestly> Yeah xterm is better version of it
[23:48:39] <kurahaupo1> And Xterm does left-click to start selecting, and right-click to extend selection (unless you've told it to swap middle and right for this purpose, or disabled it)
[23:48:51] <kurahaupo1> no messing about with the shift key
[23:48:52] <Earnestly> Yeah I use that a lot, very handy
[23:49:05] <Earnestly> Took a second to figure it out
[23:49:11] <kurahaupo1> After using that, everything else seems pretty lame.
[23:49:16] <Earnestly> yeah heh
[23:49:43] <Earnestly> kurahaupo1: Read this some time http://contemporary-home-computing.org/turing-complete-user/
[23:50:03] <kurahaupo1> "man xterm" is actually useful on those points; see "SELECTION USAGE"
[23:52:03] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 256 seconds)
[23:53:30] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:54:40] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[23:55:04] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Read error: Connection reset by peer)
[23:55:56] <uuidNuni1> xterm you mean $TERM or the program?
[23:56:21] <Earnestly> That question hurts
[23:57:11] <uuidNuni1> 🛻
[23:57:11] *** Quits: magyar (~magyar@user/magyar) (Remote host closed the connection)
[23:57:31] <kurahaupo1> uuidNuni1: the program
[23:57:35] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[23:57:46] <uuidNuni1> do xterm have a good looking UI?
[23:58:09] <emanuele6> it's a terminal emulator.
[23:58:29] <kurahaupo1> uuidNuni1: "good looking"? It's absolutely minimal, which makes it perfect from my PoV
[23:59:01] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Client Quit)
[23:59:21] *** Joins: mongy (~mongy@user/mongy)
[23:59:34] *** Joins: chiselfu1e (~chiselfus@user/chiselfuse)
