[00:04:17] *** Joins: witchc (~witch@88-106-221-9.dynamic.dsl.as9105.com)
[00:04:17] *** Quits: witchc (~witch@88-106-221-9.dynamic.dsl.as9105.com) (Changing host)
[00:04:17] *** Joins: witchc (~witch@user/witch)
[00:05:23] *** witchc is now known as ff
[00:05:27] *** ff is now known as ff`
[00:05:53] *** Joins: anotheruser (~user@197.54.20.200)
[00:05:56] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:07:39] *** Quits: someuser (~user@197.54.108.24) (Ping timeout: 256 seconds)
[00:10:21] *** Quits: pa (~pah@user/pah) (Quit: quit.)
[00:11:11] *** Joins: pah (~pah@user/pah)
[00:12:27] *** ff` is now known as fae
[00:20:13] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:21:35] *** pah is now known as pa
[00:23:08] *** Joins: NovelHawk (~mhawk@host-79-18-69-223.retail.telecomitalia.it)
[00:24:27] *** Quits: NovelHawk (~mhawk@host-79-18-69-223.retail.telecomitalia.it) (Remote host closed the connection)
[00:27:11] *** Quits: pa (~pah@user/pah) (Quit: quit.)
[00:29:39] <emcodem> dears, did anyone ever convert vbi decoded subtitles into webvtt or such?
[00:30:42] <emcodem> it extracts the data successfully but -map 0:5 c:\tmp\test.srt says error while opening encoder
[00:33:08] *** Joins: pah (~pah@user/pah)
[00:46:45] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[00:53:54] *** Quits: Volgaar (~volgaar@193.137.116.78.rev.sfr.net) (Quit: WeeChat 3.3)
[00:57:07] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[00:58:58] *** pah is now known as pa
[00:59:09] *** Joins: keypusher (keypusher@user/keypusher)
[01:06:08] <emcodem> it feels like nothing in ffmpeg understands what to do with the output of libzvbi_teletextdec
[01:07:38] *** Quits: spaam (johan@i19.se) (Ping timeout: 252 seconds)
[01:13:23] *** Quits: ChocolateArmpits (~Chocolate@88.223.162.30) (Ping timeout: 256 seconds)
[01:13:38] <JEEB> emcodem: you get images by default from it btw
[01:13:45] <JEEB> -txt_format ass or text
[01:14:04] <JEEB> I think ass adds for some unknown reason some \t which nothing handles
[01:14:11] <emcodem> i just realized that the term bitmap really maps to an image in this context
[01:15:04] <emcodem> thanks for answering this Jan, really appreciated, but i already tried text format as well, it all leads to tears
[01:15:30] <JEEB> well dunno, it works for me
[01:15:38] <JEEB> I utilize text output every day
[01:15:47] <JEEB> from the decoder that is
[01:16:06] <JEEB> like the only issue is that ffmpeg.c does not handle "unknown duration" subtitles by default
[01:16:14] <JEEB> even though there is a value specified for it
[01:16:24] <JEEB> so you need to set -fix_sub_duration
[01:16:25] <JEEB> plus
[01:16:35] <JEEB> you need to specify the teletext page unless the default subtitle filtering works
[01:16:47] <JEEB> although I think it outputs *all* pages marked with that field in that case
[01:17:01] <JEEB> so it works if there's a single page that's marked subtitle but not if there's more than one
[01:18:25] <emcodem> i think in my case there is only the subtitle line, it comes from 708 data in mxf
[01:18:35] <emcodem> -fix_sub_duration -txt_format text -c:s libzvbi_teletextdec  -eia608_extract 1
[01:18:41] <emcodem> thats my pre-input
[01:19:07] <emcodem> would txt_format text usually produce a human readable file?
[01:19:12] <JEEB> *yes*
[01:19:16] <emcodem> damn
[01:19:24] <JEEB> literally poke at any MPEG-TS sample withe teletext
[01:19:47] <JEEB> I have no idea what you're doing or expecting to be doing
[01:20:23] <emcodem> currently playing with extracting the subtitle from mxf, smtpe 2... something vanc track
[01:20:25] <JEEB> the only problems with teletext are: page selection, lack of default lookup for "oh look, this subtitle has no known duration"
[01:20:37] <JEEB> and latter is an ffmpeg.c problem
[01:20:38] <emcodem> want to go transform that to webvtt format
[01:20:52] <JEEB> the teletext decoder outputs UINT32_MAX duration just fine
[01:21:01] <JEEB> which is code for "I have no effing idea, show until next"
[01:21:20] <emcodem> makes sense
[01:21:48] <JEEB> it used to be 30 seconds by default which was thankfully changed later
[01:21:49] <emcodem> ok, one more question:
[01:22:27] <emcodem> ffmpeg.exe -fix_sub_duration -txt_format text -c:s libzvbi_teletextdec  -eia608_extract 1 -i C:\Users\emcod\Downloads\UCN12039.mxf -codec copy -map 0:5 -f u8 c:\tmp\test.bin
[01:23:26] <emcodem> this produces a file that obviously contains the subtitles, but like this:
[01:23:44] <emcodem> https://usercontent.irccloud-cdn.com/file/MBCYMAVE/Untitled.png
[01:23:54] <JEEB> you are not doing anything to it since you're doing -c copy, other than WTF eia608_extract is doing
[01:24:00] <JEEB> the teletext decoder is doing nada there
[01:24:21] <emcodem> ah thats mxf specific, it extracts the 708 data from some other klv
[01:24:52] <emcodem> oh thats interesting
[01:25:25] <emcodem> whats needed to let the decoder do something?
[01:25:51] <emcodem> -c:s webvtt wouldn't initialize
[01:26:08] <emcodem> well it does but it is also not outputting anything
[01:26:17] <emcodem> Stream #0:5 -> #0:0 (dvb_teletext (libzvbi_teletextdec) -> webvtt (native))
[01:26:49] <JEEB> I am not sure how you think you are getting zvbi decoding from a US caption track
[01:27:05] <JEEB> I know you guys are paid a lot and smoke a lot of crack, I'm not on that level yet :P
[01:27:41] <emcodem> hehe well there is not much info about that available and the only non working samples one finds are like that
[01:28:03] <JEEB> I don't even know wtf you're attempting to do nor why you think something like that would even work
[01:28:06] <emcodem> so you think libzvbi dont even support plain 708 packets?
[01:28:33] <JEEB> I have no idea what it supports or doesn't support - or what the zvbi *teletext* decoder wrapper does
[01:28:47] <JEEB> I am trying to find you a sample so I can make you see that it can actually decode DVB teletext
[01:29:00] <emcodem> well the goal is just to transform 708 vbi subtitles into webvtt
[01:29:12] <emcodem> ok cool thanks
[01:29:20] <JEEB> well let's just say that even if zvbi library did support those
[01:29:32] <JEEB> I am not sure if the *teletext* wrapper would do that for you
[01:29:37] <JEEB>  since it's meant for DVB *teletext*
[01:29:39] <JEEB> not *US* captions
[01:30:03] <JEEB> do you see why I am looking at what you are doing and going "what the flying f is this guy smoking?"
[01:30:44] <emcodem> hehe yea i am absolutely noob with this subtitle stuff... some seems to be derived from teletext
[01:31:08] <emcodem> also i am working with mxf and SDI signals, where teletext and other vanc data gets mixed up occasionally
[01:35:45] <JEEB> I think this should actually have a packet on the teletext stream https://kuroko.fushizen.eu/samples/2018-04-04-funky_teletext_mux.cut.ts
[01:35:48] <JEEB> this is actual teletext :P
[01:36:34] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:40:32] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:41:50] <emcodem> ok, thanks... so i'll now need to find out if 708 has anything to do with teletext or how it maps into libzvbi
[01:42:08] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:46:16] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[01:46:36] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[01:46:40] <bencc1> emcodem: so is it possible to set fixed framerate without re-encode?
[01:47:15] <emcodem> depends, what's your input video codec?
[01:48:06] <bencc1> h264
[01:48:42] <emcodem> then my example above should work
[01:49:22] *** Quits: Buster_ (~Buster@buster-net.ru) (Ping timeout: 265 seconds)
[01:50:33] <bencc1> can you explain the flags please?
[01:50:33] <bencc1> -bsf:v h264_metadata=tick_rate=1001/60000:fixed_frame_rate_flag=1
[01:51:18] <emcodem> where should i start? :D
[01:51:30] <emcodem> tick_rate
[01:51:32] <bencc1> does it spread the expand or compress the time to make it fixed?
[01:51:44] <emcodem> hehe
[01:52:04] <bencc1> I'm trying to keep a/v sync and have the same time
[01:52:14] <emcodem> as far as i understand, it would set every frame to have the same duration
[01:52:26] <bencc1> if it just takes the same frames and play them in fixed rate it's not what I'm looking for
[01:52:27] <bencc1> thanks
[01:53:07] <emcodem> so what you look for?
[01:54:14] <bencc1> take variable framerate video, drop, delay and duplicate frames to make it a fixed framerate
[01:54:44] <bencc1> theoretically it should be possible to do it without re-encoding but maybe too complex
[01:55:24] <emcodem> i am not aware of any way to drop frames without reencoding, there is no flag for drop or repeat
[01:55:32] <emcodem> in the bitstream
[01:55:45] <bencc1> logically I think it should be possible
[01:55:58] <emcodem> how?
[01:55:59] <bencc1> maybe not dropping frames
[01:56:08] <bencc1> but duplicating should
[01:56:16] <emcodem> again, how?
[01:56:32] <bencc1> as long as the input framerate isn't higher than the target framerate I think it should be possible
[01:56:39] <bencc1> but I see that it's too complex
[01:57:03] <emcodem> i think you mix up perspectives of the encoded bitstream and the final display
[01:57:07] <bencc1> there is MediaRecorder in browsers but it can't do fixed framerate
[01:57:13] <JEEB> emcodem: to my knowledge the commonalities between teletext and US closed captions start and stop with "in analog video, they were passed through as part of the video signal (in differing ways)"
[01:57:27] <JEEB> so if you have US closed captions -> ccaption decoder with the realtime option
[01:57:36] <JEEB> if you have teletext -> libzvbi
[01:58:04] <bencc1> emcodem: by without re-encoding I'm mean, without losing quality
[01:59:50] <emcodem> @bencc1 yeah this could be in theory possible but it would require insane amounts of knowledge and development, totally not worth the efforts
[02:00:03] <bencc1> ok. thanks
[02:00:12] <emcodem> @JEEB thanks, i didnt even look into ccaption, doing now
[02:00:40] *** Quits: durandal_1707 (~computer@95.168.116.172) (Read error: No route to host)
[02:03:16] <emcodem> cc_dec ok
[02:04:02] *** Quits: LRN_ (~LRN@broadband-95-84-200-6.ip.moscow.rt.ru) (Read error: Connection reset by peer)
[02:11:23] <emcodem> https://www.irccloud.com/pastebin/UxCCNKCn/
[02:12:24] <emcodem> i need to use -eia608_extract 1 as input option to make "eia_608" appear... but i am unsure how i could apply cc_dec now
[02:13:30] <JEEB> https://wikileaks.org/sony/docs/05/docs/IMF/S436m-2006_MXF%20Mapping%20for%20VBI%20and%20VANC.pdf
[02:13:41] <emcodem> when i use -c:s cc_dec as input option, the mxf demuxer complains and bails out
[02:13:44] <JEEB> I don't think that might be "pure" closed captions
[02:13:45] *** Joins: spaam (johan@i19.se)
[02:14:43] <emcodem> yeah i thought -eia608_extract takes care of that
[02:15:05] <emcodem> it is the one and only option for mxf demuxer actually :D
[02:15:32] <JEEB> you'll have to know much more about what the flying heck you have there
[02:15:50] <JEEB> also the cc_dec decoder is by default handling codec id AV_CODEC_ID_EIA_608
[02:15:58] <JEEB> so it should be the one attempted
[02:16:10] <JEEB> but I have a feeling your vanc data is not just US closed captions
[02:16:23] <JEEB> just start verifying with trying to figure out wtf is actually in your input, and in what encapsulation
[02:16:31] <JEEB> after you figure out WTF you're dealing with
[02:16:38] <JEEB> you can start looking at what can decode it
[02:17:20] <emcodem> yeah i'll need to check what exactly the -eia608_extract option does actually output
[02:17:43] <JEEB> no
[02:17:46] <JEEB> *before* that
[02:17:51] <JEEB> what the flying fuck is in that stream
[02:17:55] <JEEB> start with that
[02:18:00] <emcodem> vbi_vanc_smpte_436M
[02:18:04] <JEEB> well yes
[02:18:06] <JEEB> I threw you the spec
[02:18:39] <JEEB> vanc is just "random stuff that used to be in the out of visible image data region"
[02:18:51] <JEEB> also might be encapsulated in some manner
[02:18:59] <JEEB> which is why the spec probably comes in handy
[02:19:22] <emcodem> no worries i got all the smpte papers
[02:19:45] <JEEB> bloody highly paid MXF work generators :P
[02:19:53] <emcodem> i just read that the eia608_extract stuff is specifically designed to pull out 708 from smpte436
[02:20:19] <JEEB> it is probably specifically meant for cases when you already know you have specific data in there
[02:20:29] <JEEB> you literally do not seem to know what is encapsulated there
[02:20:33] <JEEB> and in what manner
[02:20:37] <emcodem> yeah professional stuff is maybe even more mess than consumer stuff :D
[02:20:53] <JEEB> well, someone needs to generate those consultant hours
[02:21:01] <JEEB> MXF clearly seems like consultancy hour generation
[02:21:01] <JEEB> ;)
[02:21:02] <emcodem> well i know it's 708
[02:21:30] <emcodem> hehe i am the consultant :P
[02:21:42] <JEEB> that is why I was throwing shade at you well employed and paid people :P
[02:21:56] <JEEB> unlike me answering you for no cost at almost 1 am
[02:22:09] <emcodem> hehe i just ignored that ;-)
[02:22:10] <JEEB> but do you know it's a similar packet data structure/encapsulation as it would be in a video stream?
[02:22:22] <JEEB> even if you know it's supposed to be 708
[02:22:48] <emcodem> no worries, nobody pays me for working with ffmpeg
[02:23:09] <emcodem> it's like fun and interest for me
[02:23:36] <emcodem> not yet but thats what i need to get out next
[02:24:05] <JEEB> if the option in the demuxer is supposed to output data that is similar to what is in the H.264 SEI messages f.ex., then the eia_xxx codec id should be enough for the cc_dec decoder to get auto-selected
[02:24:12] <JEEB> so if that doesn't work it's not the case
[02:25:06] <JEEB> anyways, I'm off. I need to sleep and then work -_-
[02:25:59] <emcodem> got it
[02:26:10] <emcodem> thanks a lot Jan, really appreciated
[02:26:25] <emcodem> and good night!
[02:29:32] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:35:37] *** Quits: fling (~fling@user/fling) (Ping timeout: 250 seconds)
[02:50:37] *** Quits: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua) (Quit: Konversation terminated!)
[02:51:59] *** Joins: sagax (~sagax_nb@user/sagax)
[02:52:39] *** Joins: DonRichie (~DonRichie@ricl.de)
[02:53:08] *** Joins: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com)
[03:04:14] *** Quits: cosimone (~user@93-47-228-203.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[03:27:09] *** ___Myst___ is now known as __Myst__
[03:27:36] *** Quits: fkaa (~fkaa@81-226-20-99-no256.tbcn.telia.com) (Remote host closed the connection)
[03:30:03] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[03:30:03] *** Quits: zmt01 (~zmt00@user/zmt00) (*.net *.split)
[03:30:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[03:30:03] *** Quits: jos1 (~jos3@host-091-097-188-114.ewe-ip-backbone.de) (*.net *.split)
[03:30:03] *** Quits: Jan\ (~kvirc@104.204.200.118) (*.net *.split)
[03:30:03] *** Quits: l4yer (~l4yer@195.181.170.210) (*.net *.split)
[03:30:03] *** Quits: palasso (~palasso@user/palasso) (*.net *.split)
[03:30:03] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[03:30:03] *** Quits: rya (~ry@user/rya) (*.net *.split)
[03:30:03] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[03:30:03] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[03:30:03] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:1a55:3bda:b5db:66c6) (*.net *.split)
[03:30:03] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (*.net *.split)
[03:30:03] *** Quits: whitekidney (~wk@c7C8B5BC1.dhcp.as2116.net) (*.net *.split)
[03:30:04] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[03:30:04] *** Quits: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net) (*.net *.split)
[03:30:04] *** Quits: TheSashm_ (~TheSashmo@174.119.184.190) (*.net *.split)
[03:30:04] *** Quits: Aelius (~Aelius@user/aelius) (*.net *.split)
[03:30:04] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[03:30:04] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (*.net *.split)
[03:30:04] *** Quits: marcj (~marc@205.175.215.25) (*.net *.split)
[03:30:04] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:fcc3:c2aa:476f:b540) (*.net *.split)
[03:30:04] *** Quits: Stalker (~Stalker@89.201.5.246) (*.net *.split)
[03:30:04] *** Quits: af (~af@awalgarg.me) (*.net *.split)
[03:30:04] *** Quits: tyep (~hatseflat@hatsuseno.rootaccess.nl) (*.net *.split)
[03:30:04] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[03:30:04] *** Quits: jkqxz (~mrt@jkqxz.net) (*.net *.split)
[03:30:04] *** Quits: MapMan (mapman@rick.hlds.pl) (*.net *.split)
[03:30:04] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[03:30:05] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[03:30:05] *** Quits: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com) (*.net *.split)
[03:30:05] *** Quits: Jonno_FTW (~come@api.carswap.me) (*.net *.split)
[03:30:05] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[03:30:05] *** Quits: Arokh (~MoveAlong@ip-88-153-209-30.hsi04.unitymediagroup.de) (*.net *.split)
[03:30:05] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[03:30:05] *** Quits: pit_ (~quassel@v22016102921539034.goodsrv.de) (*.net *.split)
[03:30:05] *** Quits: ocrete (~ocrete@gyros.collabora.co.uk) (*.net *.split)
[03:30:05] *** Quits: haasn (~nand@haasn.dev) (*.net *.split)
[03:30:05] *** Quits: KyleSiefring (~quassel@ec2-35-174-255-234.compute-1.amazonaws.com) (*.net *.split)
[03:30:05] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[03:30:05] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (*.net *.split)
[03:30:05] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[03:30:05] *** Quits: WereSquirrel (~Squirrel@user/navithefairy) (*.net *.split)
[03:30:05] *** Quits: thunfisch (~thunfisch@user/thunfisch) (*.net *.split)
[03:30:05] *** Quits: gnurou (~gnurou@2001:470:69fc:105::c23b) (*.net *.split)
[03:30:05] *** Quits: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc) (*.net *.split)
[03:30:06] *** Quits: tuxd3v (~tuxd3v@93.102.33.166.rev.optimus.pt) (*.net *.split)
[03:30:06] *** Quits: root1 (root@2600:3c02::f03c:92ff:fe1a:c779) (*.net *.split)
[03:30:06] *** Quits: TheLink (~TheLink@user/thelink) (*.net *.split)
[03:30:06] *** Quits: DarkG (~DarkG@user/darkg) (*.net *.split)
[03:30:06] *** Quits: Buliarous (~gypsydang@46.232.210.139) (*.net *.split)
[03:30:06] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[03:30:06] *** Quits: englishm (sid6629@id-6629.tinside.irccloud.com) (*.net *.split)
[03:30:06] *** Quits: Icedream (~icedream@144.76.223.175) (*.net *.split)
[03:30:06] *** Quits: averne (~averne@2001:861:5102:3290:9952:d870:185e:c44c) (*.net *.split)
[03:30:11] *** Joins: Jonno_FTW (~come@api.carswap.me)
[03:30:11] *** Joins: deltab (~deltab@95.154.230.49)
[03:30:12] *** Quits: deltab (~deltab@95.154.230.49) (Changing host)
[03:30:12] *** Joins: deltab (~deltab@user/deltab)
[03:30:16] *** Joins: whitekidney (~wk@c7C8B5BC1.dhcp.as2116.net)
[03:30:17] *** Joins: pit (~quassel@v22016102921539034.goodsrv.de)
[03:30:18] *** Joins: palasso (~palasso@2a02:2149:8728:4b00:7f10:1964:a4f7:8cf0)
[03:30:18] *** Joins: Stalker (~Stalker@89.201.5.246)
[03:30:19] *** Joins: jos1 (~jos3@host-091-097-188-114.ewe-ip-backbone.de)
[03:30:21] *** Joins: root1 (root@2600:3c02::f03c:92ff:fe1a:c779)
[03:30:23] *** Joins: Riviera (Riviera@user/riviera)
[03:30:25] *** Quits: palasso (~palasso@2a02:2149:8728:4b00:7f10:1964:a4f7:8cf0) (Changing host)
[03:30:25] *** Joins: palasso (~palasso@user/palasso)
[03:30:31] *** Joins: englishm (sid6629@id-6629.tinside.irccloud.com)
[03:30:34] *** Joins: tuxd3v (~tuxd3v@93.102.33.166.rev.optimus.pt)
[03:30:36] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:c95d:1641:e0ec:f82c)
[03:30:37] *** Joins: thunfisch (~thunfisch@2a01:170:117b:1:4857:26ff:fee0:eeb9)
[03:30:38] *** Joins: tyep (~hatseflat@193.200.132.183)
[03:30:38] *** Joins: MapMan (~mapman@94.23.94.190)
[03:30:38] *** Joins: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net)
[03:30:42] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[03:30:45] *** Quits: palasso (~palasso@user/palasso) (Client Quit)
[03:30:52] *** Joins: homura (uid398348@helmsley.irccloud.com)
[03:30:53] *** Joins: KyleSiefring (~quassel@ec2-35-174-255-234.compute-1.amazonaws.com)
[03:31:02] *** Joins: itok (sid418430@2a03:5180:f:3::6:627e)
[03:31:11] *** Joins: TheSashm_ (~TheSashmo@174.119.184.190)
[03:31:14] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[03:31:15] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[03:31:27] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:31:38] *** homura is now known as Guest6120
[03:31:40] *** Quits: Guest6120 (uid398348@helmsley.irccloud.com) (Changing host)
[03:31:40] *** Joins: Guest6120 (uid398348@user/homura)
[03:31:46] *** Joins: HumanG33k (~HumanG33k@dau94-2-82-66-65-160.fbx.proxad.net)
[03:31:47] *** thunfisch is now known as Guest7435
[03:31:50] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[03:32:16] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[03:32:18] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[03:32:42] *** Joins: DarkG (~DarkG@user/darkg)
[03:32:45] *** Joins: TheLink (~TheLink@user/thelink)
[03:33:02] *** Joins: l4yer (~l4yer@195.181.170.210)
[03:33:28] *** Joins: Colt (~Colt@user/colt)
[03:33:54] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[03:34:04] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[03:34:06] *** Joins: averne (~averne@2001:861:5102:3290:9952:d870:185e:c44c)
[03:34:31] *** Joins: haasn (~nand@haasn.dev)
[03:34:33] *** Joins: NaviTheFairy (~Squirrel@user/navithefairy)
[03:34:46] *** Joins: Arokh (~MoveAlong@ip-88-153-209-30.hsi04.unitymediagroup.de)
[03:34:52] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[03:35:01] *** Joins: marcj (~marc@205.175.215.25)
[03:35:10] *** Joins: jkqxz (~mrt@jkqxz.net)
[03:35:16] *** Joins: Buliarous (~gypsydang@46.232.210.139)
[03:35:35] *** Joins: koolazer (~koo@user/koolazer)
[03:35:37] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[03:35:38] *** Joins: DonRichie (~DonRichie@ricl.de)
[03:36:26] *** Joins: af (~af@awalgarg.me)
[03:37:02] *** Joins: Aelius (~Aelius@user/aelius)
[03:37:39] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:849b:790b:ee58:764d)
[03:38:36] *** Joins: Jan\ (~kvirc@104.204.200.118)
[03:39:11] *** Quits: djk (~Thunderbi@pool-96-242-218-239.nwrknj.fios.verizon.net) (Quit: djk)
[03:40:48] *** Joins: msmith12[m] (~msmith12m@2001:470:69fc:105::bdfc)
[03:42:07] *** Joins: gnurou (~gnurou@2001:470:69fc:105::c23b)
[03:45:59] *** Joins: slisnake0 (~slisnake@82.102.25.12)
[03:46:08] *** Quits: bencc1 (~bencc1@2a00:a040:197:3af:c95d:1641:e0ec:f82c) (Quit: Leaving)
[03:46:27] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:c95d:1641:e0ec:f82c)
[03:47:07] *** Quits: slisnake0 (~slisnake@82.102.25.12) (Client Quit)
[03:47:26] *** Joins: slisnake (~slisnake@82.102.25.12)
[03:49:26] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[03:49:55] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[03:51:01] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[03:51:08] *** Joins: Kei_N_ (~Kei_N@user/kei-n/x-2886111)
[03:53:45] *** Quits: Kei_N (~Kei_N@user/kei-n/x-2886111) (Ping timeout: 256 seconds)
[03:54:17] *** Quits: iive (~iive@87.119.101.204.client.entry.bg) (Quit: They came for me...)
[04:15:03] *** Quits: anotheruser (~user@197.54.20.200) (Ping timeout: 268 seconds)
[04:22:39] *** Joins: BUSY (~BUSY@user/busy)
[04:24:04] *** Joins: someuser (~user@197.54.117.91)
[04:28:05] *** Joins: theracermaster (~theracerm@52.79.209.35.bc.googleusercontent.com)
[04:28:17] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[04:28:58] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[04:43:27] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:55:26] *** Joins: darkapex (~darkapex@user/darkapex)
[04:55:31] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[05:04:31] *** Joins: Shiyou (~Shiyou@202.141.160.96)
[05:18:54] *** Joins: bysho (~bysho@70.109.130.4)
[05:54:27] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[05:54:50] *** Joins: keypusher (keypusher@user/keypusher)
[06:03:30] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:15:28] *** Keshl_ is now known as Keshl
[06:17:37] *** Quits: bysho (~bysho@70.109.130.4) (Ping timeout: 240 seconds)
[06:18:52] *** Joins: Guest48 (~Guest48@192.55.46.56)
[06:29:29] *** Quits: Guest48 (~Guest48@192.55.46.56) (Ping timeout: 256 seconds)
[06:43:34] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[06:55:45] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.3)
[06:55:49] *** Quits: jos1 (~jos3@host-091-097-188-114.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:08:40] *** Joins: jos1 (~jos3@dyndsl-091-248-053-224.ewe-ip-backbone.de)
[07:22:28] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:23:47] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:26:49] *** Quits: Shiyou (~Shiyou@202.141.160.96) (Quit: Connection closed)
[07:30:54] *** Joins: LRN (~LRN@broadband-95-84-200-6.ip.moscow.rt.ru)
[07:48:11] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:51:24] *** Quits: tlacatlc6 (~tlacatlc6@097-101-132-062.res.spectrum.com) (Quit: Leaving)
[07:53:12] *** Quits: nd (~nd@user/nd) (Ping timeout: 265 seconds)
[08:01:50] *** Joins: beaver (~beaver@user/pong)
[08:05:30] *** Joins: nd (~nd@user/nd)
[08:20:35] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[08:36:21] *** Joins: Guest4886 (~Guest48@192.55.46.56)
[08:44:33] *** Joins: Kei_N (~Kei_N@user/kei-n/x-2886111)
[08:47:42] *** Quits: Kei_N_ (~Kei_N@user/kei-n/x-2886111) (Ping timeout: 260 seconds)
[08:51:43] *** Quits: Guest4886 (~Guest48@192.55.46.56) (Ping timeout: 256 seconds)
[09:01:54] *** Joins: fling (~fling@user/fling)
[09:05:25] *** Joins: derwin (~NOPE@wait-wtf.com)
[09:06:22] <derwin> hi there! anyone know why ffmpeg can't support flac inside of m4a, but can (experimentally) in mp4? related trac ticket - https://trac.ffmpeg.org/ticket/9311
[09:08:04] *** Joins: vivek599 (~kvirc@180.151.8.122)
[09:14:06] *** Joins: Guest4831 (~Guest48@192.55.46.56)
[09:30:02] *** Quits: vivek599 (~kvirc@180.151.8.122) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[09:34:41] <furq> because they're two different muxers
[09:35:13] <derwin> right, but is there anything about the m4a ("mov?") format that can't contain flac?
[09:35:35] <furq> no they're basically the same format
[09:35:43] <furq> flac in mp4 likely won't play back in anything though
[09:36:02] <furq> it's not part of the mp4 spec
[09:36:56] <furq> https://github.com/FFmpeg/FFmpeg/blob/master/libavformat/movenc.c#L7394
[09:37:14] <furq> you can probably just add that to codec_ipod_tags
[09:47:31] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:56:53] *** Quits: Guest4831 (~Guest48@192.55.46.56) (Ping timeout: 256 seconds)
[09:58:41] <derwin> vlc plays back FLAC in mp4, hilariously
[09:59:09] *** Quits: Al2O3 (~Al2O3@user/al2o3) (Ping timeout: 268 seconds)
[09:59:52] <derwin> now, in fairness, I want *traktor* to playback flac inside of m4a, and it probably won't even if I manage to produce such a thing, lol.
[10:02:10] *** Joins: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de)
[10:03:32] *** Joins: Guest4831 (~Guest48@192.55.46.56)
[10:03:47] <furq> does it have to be in m4a
[10:05:05] <derwin> yeah, basically they have this jank format called "stems" which are multichannel m4a, which their tool to create supports aac and ALAC. but apparently ALAC doesn't work on windows version, and it's pseudo-supported.
[10:05:38] <derwin> I'm hypothesizing if I managed to get a m4a in the same format with flac streams instead of ALAC, it might (but probably won't) work.
[10:09:24] <furq> if it doesn't work with the mp4 muxer then it probably won't work at all
[10:12:45] *** Quits: Guest4831 (~Guest48@192.55.46.56) (Ping timeout: 256 seconds)
[10:13:55] <derwin> traktor may not support mp4 is the thing
[10:30:59] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:33:02] *** Quits: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa01) (Ping timeout: 240 seconds)
[10:39:54] *** Joins: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa01)
[10:41:41] <derwin> hrm, I did that change and it still says : "[ipod @ 0x7ffff6d97380] flac only supported in MP4."
[10:43:00] <derwin> ah, I see :             if (track->par->codec_id == AV_CODEC_ID_FLAC ||
[10:43:09] * derwin monkeypatches, recompiles
[10:45:50] <furq> i meant just use mp4 and not m4a
[10:46:01] *** Joins: serhii (~serhii@184-13-50-63.dr01.clbg.wv.frontiernet.net)
[10:46:16] <JEEB> essentially nowadays m4a is just mp4 with another extension
[10:46:47] <JEEB> the code in movenc attempts to adhere to some limitations from when that code was written
[10:47:26] <derwin> furq : I already tried, and it didn't work. I also just tried flac inside of m4a and it also didn't work in traktor.
[10:47:58] <derwin> (which isn't really too surprising, they probably hardcore m4a to only support aac and alac)
[10:48:00] <JEEB> but yes, applications not knowing of that codec mapping or codec won't suddenly be able to play it
[10:48:12] <derwin> *hardcode
[10:48:36] <serhii> is it OK to ask help with vaapi transcoding with scaling from an rtsp stream? the transcoding works fine until I add scale_vappi to the filter chain
[10:48:37] <JEEB> I don't think apple's frameworks support it, either. which most likely on macOS etc things utilize
[10:48:38] <derwin> VLC continues to play it just fine, heh.
[10:49:27] <furq> it's defined by flac but it's not in mp4ra
[10:49:35] <furq> so i wouldn't expect anything to play it
[10:49:46] <derwin> I am surprised that VLC plays it, frankly, lol.
[10:49:53] <furq> also by defined i mean there's a draft spec
[10:50:43] <furq> basing this stem format on mp4 seems kind of stupid honestly
[10:50:45] <furq> but then what else is new
[10:52:26] <derwin> the whole idea of the stem format was stupid and didn't really get any adoption. the only reason it's interesting to me now is that source separation is mature enough to create my own from arbitrary tracks.
[10:53:25] <derwin> (as a commercial product, that is)
[10:53:39] *** Quits: intrac (~intracube@user/intracube) (Ping timeout: 256 seconds)
[10:58:03] <derwin> furq: what container would you use?
[11:02:33] <furq> probably matroska
[11:03:00] <furq> i assume they use mp4 because there are os apis for it so they don't need to provide their own
[11:03:06] <furq> like with most commercial av stuff
[11:03:22] <furq> so it does make sense just for shitty reasons
[11:08:40] <derwin> yeah. it's weird though because their command line tool just uses ffmpeg.
[11:09:29] *** Joins: luc4 (~luca@mi-18-13-149.service.infuturo.it)
[11:09:38] <derwin> which, for teh record, I had it use my custom compiled ffmpeg and put flac inside m4a with all the relevant meta info and it now detects it as a stem file (as opposed to when I just transcoded it with ffmpeg) ... but still doesn't "analyze" correctly
[11:10:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[11:14:17] <furq> if it's a separate tool then that's much easier to deal with licensing stuff
[11:14:24] *** Quits: serhii (~serhii@184-13-50-63.dr01.clbg.wv.frontiernet.net) (Quit: Connection closed)
[11:14:40] <furq> both oss licensing and codec licensing if it just calls an ffmpeg binary
[11:15:01] <derwin> traktor supports FLAC natively though, in a .flac container
[11:15:16] <derwin> so presumable it could have supported .mka
[11:15:20] <furq> libflac is bsd licensed
[11:15:31] <furq> idk if there's an equivalent extant thing for matroska
[11:15:42] <derwin> I like how they chose mp4 and ALAC and then apple and microsoft basically immediately screwed them on support
[11:15:49] <furq> lol
[11:16:25] <furq> i guess you could also do ogg since that does multiple streams and compressed formats
[11:16:31] <furq> but then you lose mp3 and aac support which i guess is a big deal
[11:16:50] <derwin> so they ended up basically only supporting aac inside of m4a, even though almost no one in the DJ world uses anything but wav/aiff, flac or mp3
[11:16:57] <furq> yeah that's stupid
[11:17:05] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:17:21] <derwin> I'm just hoping that ALAC in m4a still works on osx, I still have to test
[11:19:05] <JEEB> well that's apple's thing so most likely it does
[11:19:09] <JEEB> apple lossless
[11:19:18] <galad> derwin: maybe try to contact traktor developers
[11:19:26] <furq> i googled it and people seemed to think they dropped alac support
[11:19:28] <galad> even apple's decoder is open source
[11:19:38] <furq> apparently you need quicktime installed for aac support on windows
[11:19:43] <galad> there is nothing preventing them from supporting alac
[11:19:44] <furq> so it wouldn't make sense for alac to not work on windows
[11:20:15] <furq> but again commercial av stuff so who knows
[11:20:27] <derwin> their CLI tool uses mutagen and GPAC as well, ftr
[11:21:01] <furq> i assume they just open sourced that
[11:21:14] <furq> doesn't sound very complicated
[11:21:19] <galad> furq: alac decoder? it was something like 10 years ago
[11:21:26] <furq> ?
[11:21:51] *** Joins: dreamon (~dreamon@ppp-88-217-82-137.dynamic.mnet-online.de)
[11:21:56] *** Joins: intrac (~intracube@user/intracube)
[11:22:05] <derwin> yeah, apparently windows used to support ALAC by installing Quicktime, but hasn't since around Windows 7
[11:22:09] <galad> apple's alac decoder being open source years ago, but maybe you meant the traktor cli tools
[11:22:14] <furq> yeah i mean traktor
[11:23:46] <derwin> Yeah, maybe I'm wrong, and Microsoft added support for ALAC in Windows 10, but it's still not working in Traktor-for-Windows
[11:26:33] *** Joins: cosimone (~user@93-47-229-223.ip115.fastwebnet.it)
[11:32:57] *** Quits: luc4 (~luca@mi-18-13-149.service.infuturo.it) (Read error: Connection reset by peer)
[11:33:31] *** Joins: anotheruser (~user@197.54.45.229)
[11:35:55] *** Joins: luc4 (~luca@151.82.67.254)
[11:35:57] *** Quits: someuser (~user@197.54.117.91) (Ping timeout: 240 seconds)
[11:38:50] *** Joins: ivanich (~ivanich@45-140-123-239.broadband.tenet.odessa.ua)
[11:43:39] *** Joins: Volgaar (~volgaar@193.137.116.78.rev.sfr.net)
[11:44:39] <derwin> boo, yeah. the same ALAC m4a file works on OSX Traktor but not on Windows Traktor. The FLAC m4a doesn't work on either.
[11:46:47] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:52:22] *** Quits: cosimone (~user@93-47-229-223.ip115.fastwebnet.it) (Remote host closed the connection)
[11:52:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[11:53:27] <derwin> anyway, thanks for your help on this totally random and stupid thing I was trying to do. also thank you for ffmpeg, software I've consistently found unbelievably useful for all sorts of things for decades.
[11:53:53] *** Joins: rsx (~dummy@ppp-188-174-130-48.dynamic.mnet-online.de)
[12:13:02] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[12:17:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e0b9-1b23-8395-a665.res6.spectrum.com)
[12:18:50] *** Joins: lavaball (felix@31.204.155.215)
[12:21:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e0b9-1b23-8395-a665.res6.spectrum.com) (Client Quit)
[12:22:35] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:27:01] *** Quits: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa01) (Ping timeout: 245 seconds)
[12:46:17] *** Joins: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa01)
[13:00:35] *** Joins: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net)
[13:00:38] <Chatter> hi
[13:02:37] <Chatter> How can I figure out what the most up to date ffmpeg version I can use for Linux kernel 2.6.32-954.3.5.lve1.4.86.el6.x86_64
[13:13:58] *** Quits: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa01) (Quit: wallace dozed off)
[13:17:09] *** Joins: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa07)
[13:17:49] <derwin> Chatter: if I were you, I'd look for ffmpeg release dates around 2009 (when that kernel was released) and jump up until it doesn't compile/run
[13:19:16] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[13:19:58] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[13:21:04] <Chatter> @derwin: thanks for your reply :)  . I have ffmpeg version 3.4.2-static, and it's working for some things with php-ffmpeg, but with others it's not which is why I'm trying to find the most up to date ffmpeg that will work for the linux version and hopefully it will work with php-ffmpeg
[13:21:27] <Chatter> @derwin: thanks for your reply :)  . I have ffmpeg version 3.4.2-static, and it's working for some things with php-ffmpeg, but not with others it's not which is why I'm trying to find the most up to date ffmpeg that will work for the linux version and hopefully it will work with php-ffmpeg
[13:32:07] <emcodem> you sure that you dont need an older version? :D
[13:32:49] <emcodem> you can potentially just download ffmpeg here and replace the binary https://johnvansickle.com/ffmpeg/
[13:34:44] *** Joins: durandal_1707 (~computer@212.15.178.138)
[13:35:59] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[13:36:42] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[13:51:30] <Chatter> emcodem Good point. I don't know why they couldn't list which version of FFmpeg is required for this to work :p  https://github.com/PHP-FFMpeg/PHP-FFMpeg
[13:52:56] <emcodem> well you can just ask :D
[13:53:09] <emcodem> i guess as it's maintained they keep up with most recent versions
[13:53:18] *** Joins: bysho (~bysho@70.109.130.4)
[13:54:34] <Chatter> emcodem I would. I just don't think anyone would be able to answer now (it's 5 AM my time). Worth a shot I guess.
[13:54:47] *** Quits: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net) (Quit: Client closed)
[13:54:59] <furq> pretty sure you can build the latest ffmpeg on that kernel
[13:55:08] <furq> just the static builds aren't provided for such old kernels any more
[13:56:57] *** Joins: Muimi (~Muimi@141.164.37.7)
[13:57:39] *** Joins: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net)
[13:58:39] *** Joins: Lukas (~Lukas@p4fed3756.dip0.t-ipconnect.de)
[14:00:29] *** Quits: Seirdy (~Seirdy@76-247-182-44.lightspeed.sjcpca.sbcglobal.net) (Ping timeout: 250 seconds)
[14:00:54] <emcodem> i bet johnvansickle's build works
[14:01:14] <bysho> does anyone know of a way to convert pngs into a video without compression? i have a general idea and have used
[14:01:14] <bysho> "ffmpeg -y -framerate 24 -i %07d.png -c:v libx264rgb -crf 0 output.mp4" but it seems to not open in different environments. i've only been able to play the output in VLC
[14:01:14] <emcodem> as long as you dont need alsa i gues
[14:04:46] <emcodem> @bysho which environments you want it to run on? you could try uncompressed in mkv or such
[14:06:28] <Chatter> I am trying to get it to work on CentOS Stream 8 I believe.
[14:06:37] <Chatter> cpanel
[14:07:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[14:07:42] <bysho> emcodem social media platforms mostly, and on a website once i learn enough about that
[14:09:11] <bysho> emcodem its mostly just pngs creative code projects i work on and i am failing to figure out a way to make videos of them that resemble the color accuracy of the html canvas
[14:09:26] <bysho> pngs from* creative code projects
[14:09:58] <emcodem> @Chatter try johnvansickle build 4.4 release
[14:10:11] <emcodem> it usually works os independent
[14:11:10] <emcodem> @bysho usually you would encode it for a html5 compatible format, or some animation picture that the img tag supports plus provide a download link for the uncompressed version
[14:12:02] <emcodem> you don't want your users to need to download >100mb before the play starts, thats a bad user experience
[14:12:35] *** Parts: derwin (~NOPE@wait-wtf.com) ()
[14:15:33] <bysho> emcodem  true, hmm. i guess a better question would be are there any color focused formats that are compatible with html5? i also am open to longer format reading if you know of anywhere i can get some in depth knowledge on the topic
[14:22:32] <emcodem> not an expert in this topic, unless someone else replies you can start reading here :D https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img
[14:22:49] *** Quits: Guest7435 (~thunfisch@2a01:170:117b:1:4857:26ff:fee0:eeb9) (Ping timeout: 250 seconds)
[14:22:54] <furq> bysho: rgb x264 isn't very well supported
[14:22:54] *** Joins: cmp (~cmp@lfbn-ren-1-1460-105.w90-27.abo.wanadoo.fr)
[14:23:12] <furq> if you just want it to play in a browser then use apng
[14:23:51] *** Joins: Muimi_ (~Muimi@141.164.37.7)
[14:23:55] <furq> or animated webp
[14:24:37] <bysho> emcodem thanks for the link!
[14:24:38] <bysho> and furq i'll try those out
[14:25:49] *** Quits: Muimi (~Muimi@141.164.37.7) (Ping timeout: 240 seconds)
[14:25:57] *** Muimi_ is now known as Muimi
[14:29:47] *** Joins: a0z (~a0z@90.244.184.28)
[14:31:20] <Beam> yo
[14:34:28] <Beam> i'm trying to forward a webrtc stream over rtp > rtsp > tcp, so i'm reading from a rtsp sdp file, and outputting to tcp://. However i'm having some issues that ffmpeg doesn't wait long at all for a client to connect before it gives up and closes down. Sometimes it will wait, but sometimes it gets into some kind of mode where it won't, i can't really see the pattern of it.
[14:37:17] *** Quits: durandal_1707 (~computer@212.15.178.138) (Read error: Connection reset by peer)
[14:38:34] <emcodem> Beam, did u try set the listen timeout?
[14:38:36] <emcodem> ffmpeg -h protocol=tcp
[14:40:37] <Beam> no. thanks.
[14:40:49] <Beam> also it seems if a client has recently been connected, it does wait?
[14:41:04] <Beam> but the source being rtp / udp i don't see how that is relevant?
[14:41:27] <Beam> something is going on that i don't understand :p
[14:42:45] <Beam> that command doesn't work for me
[14:43:05] <emcodem> ffmpeg -h dont work?
[14:43:21] <Beam> with protocol=tcp parameter
[14:43:28] <Beam> unknown help option protocol
[14:44:18] <emcodem> whut?
[14:44:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[14:44:37] <emcodem> https://www.irccloud.com/pastebin/6LwoKyIO/
[14:46:39] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[14:46:54] <pikapika> My ffmpeg is able to convert "from" xwm files but not "to" xwm files
[14:47:01] <pikapika> Is that expected and normal?
[14:49:12] <furq> yes
[14:49:32] <furq> there are lots of codecs that have decoders but not encoders
[14:49:37] <pikapika> Is there any inherent trouble with xwm or can it be corrected with some plugin etc?
[14:49:51] <furq> nobody's bothered to write an encoder
[14:49:53] <pikapika> For instance I just tried 'vlc' and it was able to effect the wav -> xwm conversion
[14:50:07] <pikapika> I'll have to investigate if vlc made some custom additions to ffmpeg for that
[14:51:37] <Beam> emcodem: hmm seems the listen_timeout does make a difference, albeit random
[14:52:43] <Beam> emcodem: before i added it, it would run for like 1-2 seconds 2-3 times, then start quitting almost immediately. after i added it, it still ran 1-2 seconds a few times, but on 3rd run it stuck listening.
[14:52:46] <Beam> i don't get it :p
[14:53:05] <Beam> there must be something it encounters in the rtsp/rtp stream that makes it exit
[14:53:57] <Beam> but nothing in log about exiting
[14:54:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:56:48] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:57:04] <emcodem> well it's sockets... that stuff was always kind of obscure and it didnt really get better over time :D
[14:57:55] <emcodem> webservers usually do a good job working around all the obscurities
[14:57:59] <Beam> hmm actually it doesn't open the listening socket
[14:58:29] <Beam> it's missing the Opening an output file: tcp://...
[14:58:50] <Beam> gonna check if my script has stderr redirected
[15:01:02] *** Joins: demon__ (~user@45.130.86.7)
[15:01:48] <Beam> now of course it doesn't happen anymore :(
[15:02:18] <emcodem> i knows you are watching now
[15:03:57] *** Quits: anotheruser (~user@197.54.45.229) (Ping timeout: 240 seconds)
[15:28:23] *** Quits: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net) (Ping timeout: 256 seconds)
[15:29:51] *** Joins: djk (~Thunderbi@pool-96-242-218-239.nwrknj.fios.verizon.net)
[15:33:51] *** Quits: luc4 (~luca@151.82.67.254) (Read error: Connection reset by peer)
[15:35:48] *** Joins: cosimone (~user@93-47-229-223.ip115.fastwebnet.it)
[15:36:23] *** Joins: luc4 (~luca@151.82.23.220)
[15:38:42] *** Quits: djk (~Thunderbi@pool-96-242-218-239.nwrknj.fios.verizon.net) (Quit: djk)
[15:46:41] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[15:47:53] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[15:50:11] <vlt> pikapika: `ffmpeg -codecs` lists "D" and "E" for de- and encoding abilities.
[15:53:06] <pikapika> vlt, mine shows only D for 'xwma'
[15:53:14] <pikapika> and its in -foramts not -codecs
[15:53:41] <pikapika> But anyways, it was useful to know how to list the supported formats/codecs
[15:55:48] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Quit: frrrp!)
[15:56:45] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[15:58:14] <vlt> pikapika: Ah, so xwma is a (container) format. Thanks.
[15:59:18] *** Joins: nillyhan (~00000000@user/nillyhan)
[16:14:35] *** Joins: Al2O3 (~Al2O3@user/al2o3)
[16:14:41] *** Joins: alankelly (~alankelly@104.133.160.107)
[16:31:56] *** Joins: lavaball (felix@31.204.155.215)
[16:33:57] *** Quits: Lukas (~Lukas@p4fed3756.dip0.t-ipconnect.de) (Quit: Connection closed)
[16:35:28] *** Joins: gucky-chat-laden (~gucky-cha@46.41.28.214)
[16:37:07] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[16:37:26] *** Joins: fkaa (~fkaa@81-226-20-99-no256.tbcn.telia.com)
[16:41:17] <emcodem> is xwma just transporting wma audio?
[16:42:25] <emcodem> it seems to be a riff wav style header, so dead simple actually
[16:44:28] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[16:47:44] *** Quits: Volgaar (~volgaar@193.137.116.78.rev.sfr.net) (Quit: WeeChat 3.3)
[16:48:48] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Client Quit)
[17:03:14] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[17:03:45] <ezzieyguywuf> how can I capture every 30th frame from my input and store it in my output to create a 1 frame-per-second time-lapse of the original?
[17:03:55] <ezzieyguywuf> thus, if I have a 90-second input, the output should be 3-seconds
[17:12:48] <emcodem> select filter
[17:15:31] *** Joins: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net)
[17:16:01] *** Joins: Muimi_ (~Muimi@141.164.37.7)
[17:16:12] <furq> ezzieyguywuf: -vf framestep=30
[17:16:41] <ezzieyguywuf> emcodem: is that one of the filters listed here? https://ffmpeg.org/ffmpeg-all.html#toc-Video-Filters
[17:16:49] <Chatter> Anyone know how to compress a video that works? crf doesn't work, makes the file actually large some of the time.
[17:16:51] <ezzieyguywuf> furq: would I need to do anything with setpts?
[17:17:01] <furq> if you want the output to be 1fps then no
[17:17:14] <Chatter> I just want to lower the file size somehow
[17:17:19] <furq> otherwise framestep=30,setpts=N/FRAME_RATE/TB
[17:17:48] <ezzieyguywuf> furq: I'm still pretty new to video editing and ffmpeg - what does that setpts expression do exactly?
[17:18:04] <DHE> it manually sets the timestamp of each frame
[17:18:09] <ezzieyguywuf> the documentation says FRAME_RATE is only defined for constant framerate videos - how do I know if my input is constant framerate?
[17:18:50] *** Quits: Muimi (~Muimi@141.164.37.7) (Ping timeout: 268 seconds)
[17:18:57] *** Muimi_ is now known as Muimi
[17:19:07] <furq> you can also do N/25/TB for 25fps
[17:19:11] <ezzieyguywuf> furq: so when I run just -vf framestep=30, I can check the output with ffprobe and I see that the fps is indeed 1. the duration is still 90 seconds though
[17:19:20] <furq> well yeah
[17:19:53] <ezzieyguywuf> I'm trying to speed it up - so instead of a 90-second clip, I want to speed it up to 3 seconds
[17:19:54] <furq> if you want it to be three seconds then the output would need to be 30fps
[17:20:00] <furq> so setpts=N/30/TB
[17:20:01] <ezzieyguywuf> hmmmm
[17:21:18] <ezzieyguywuf> I have a feeling I'm probably thinking about this wrong
[17:21:32] <ezzieyguywuf> 30 fps sounds high for a timelapse, it'll probably be impossible to tell what's going on
[17:22:12] <ezzieyguywuf> hunh - actually it looks pretty good
[17:22:25] <furq> you probably want to mess around with different values for framestep and setpts
[17:22:28] <ezzieyguywuf> I guess I just need to improve my intuition for this video stuff :-P
[17:22:48] <ezzieyguywuf> furq: makes sense.
[17:23:02] <ezzieyguywuf> so framestep will literally skip every n frames right?
[17:23:14] <furq> it'll pick the first frame of every n
[17:23:22] <ezzieyguywuf> gotcha
[17:23:28] <ezzieyguywuf> hopefully that'll help performance
[17:23:41] <ezzieyguywuf> it took a while do run the 90 second clip though, I'm trying to scale this up to 90 minute clip
[17:24:11] <furq> sadly you can't skip those frames when decoding
[17:24:17] <furq> not to that level of accuracy anyway
[17:24:32] <furq> you can have the decoder skip all non-keyframes but that could leave you with one frame in 250
[17:24:35] <ezzieyguywuf> hmmm I see
[17:24:37] <furq> and generally at inconsistent intervals
[17:24:51] <ezzieyguywuf> perhaps I can use hardware accelerated encoding to help
[17:25:30] <ezzieyguywuf> is this an ffmpeg error or something else I have to figure out? "[h264_nvenc @ 0x55c6807d15c0] dl_fn->cuda_dl->cuInit(0) failed -> CUDA_ERROR_SYSTEM_DRIVER_MISMATCH: system has unsupported display driver / cuda driver combination"
[17:25:46] <furq> probably your drivers
[17:26:07] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 250 seconds)
[17:26:22] <furq> i wouldn't expect nvenc to be much faster unless you have a weak cpu
[17:26:53] <furq> unless there's a cuda framestep/select filter now you'd have to copy everything between ram and vram to do the filtering
[17:27:00] <furq> which is a big bottleneck
[17:27:04] <ezzieyguywuf> hm I see
[17:27:11] <ezzieyguywuf> my cpu isn't great, first gen ryzen
[17:27:14] <ezzieyguywuf> it's not terrible either though
[17:27:26] <furq> if it's a desktop ryzen then that's all right
[17:27:34] * ezzieyguywuf nods
[17:27:37] <ezzieyguywuf> thanks for all your help furq
[17:36:10] *** Joins: ocrete (~ocrete@gyros.collabora.co.uk)
[17:36:17] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[17:36:37] <mhicks> Hey guys, I've got RTSP streaming from Java working great, but it's delayed by about 2 seconds: ffmpeg -rw_timeout 1000000 -f webm -i - -c copy -f rtsp rtsp://localhost:8554/mystream
[17:37:53] <mhicks> when I load the stream in: vlc rtsp://localhost:8554/mystream I also get a few error messages that might be the reason: avcodec decoder error: unspecified video dimensions, main decoder error: buffer deadlock prevented, [vp8 @ 0x7fb268069b80] get_buffer() failed, [vp8 @ 0x7fb268069b80] thread_get_buffer() failed
[17:38:20] <mhicks> I'm trying to get this as close to real-time as possible and I'm close. :)
[17:40:45] <Beam> Hi it's me again. So i'm trying to read a rtp / webrtc stream. it works ok as VP8/opus input (althought it takes long to get started) but the transcode to h264 is really slow and takes alot of cpu. i can send h264 over the rtp, but ffmpeg seems to never be able to decode it, so it never starts forwarding to tcp
[17:40:57] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[17:41:05] <Beam> i tried -vcodec copy
[17:41:28] <Beam> is there any other parameters i can set to hint ffmpeg to what to expect on the stream so it doesn't have to scan forever?
[17:43:39] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[17:45:59] *** Joins: jbg (~jbg@user/jbg)
[17:46:40] <jbg> what could cause ffmpeg to exit during rtmp streaming with "rtmp://example.org/xyz: Operation not permitted"?
[17:51:51] *** Joins: deltab (~deltab@user/deltab)
[17:52:35] <luc4> Hello! I'm using libavformat for acquire frames through v4l2. Anyone who knows what is supposed to happen in case the code reading the frames is too slow? Are frames dropped or are frames kept somewhere in a buffer?
[17:54:03] <luc4> According to the pts of the frames, it seems like there is a buffer somewhere, cause pts increases of around 30ms each time, which I do not expect as my calls are much slower.
[17:57:53] *** Joins: carbonator (~Corvus@centos/community/carbonator)
[17:59:20] <carbonator> hi, is it normal for ffmpeg that output sizes change with versions? I converted a video with a version from 2016 and another one from this year, using the exactly same command. the older ffmpeg created a 30M output, the newer 40M instead
[18:00:48] <kepstin> carbonator: if you didn't include any command-line options to get bitrates/quality, then the result is arbitrary and subject to change.
[18:00:51] <kepstin> to set*
[18:01:19] <kepstin> it could have chosen a completely different set of codecs even, in some cases.
[18:01:35] <carbonator> kepstin: I ran this one: ffmpeg -i "in.mp4" -ss 00:00:00.000 -map_metadata -1 -dn -sn -vf "yadif=1" -c:v libx265 -pix_fmt yuv420p -preset medium -crf 28 -s 1280x720 -aspect 16:9 -r 25 -af "volume=0.7dB" -c:a aac -b:a 64k  -y "out.mkv"
[18:02:33] <kepstin> ok, so the difference with a command like that is probably mostly attributable to changes in libx265 or ffmpeg's wrapper thereof.
[18:03:08] <kepstin> hmm. 2016ish? i recall that in older versions of ffmpeg a lot of the libx265 options weren't actually hooked up, so it's possible so of the options you set were being ignored.
[18:03:12] <carbonator> that would cause such a diff? 30 vs 40?
[18:04:00] <carbonator> version N-82966-g6993bb4 if that helps
[18:04:17] <carbonator> versus 4.4
[18:04:56] <kepstin> well, the libx265 version would be needed too since i assume that changed as well.
[18:05:12] <kepstin> hmm. that first build is ... somewhere between 3.2 and 3.3 i think
[18:07:18] <carbonator> the older one is standalone on Win, so I guess the codecs are inside. the 4.4 on linux has also x265-libs-3.5-1 installed
[18:07:46] <kepstin> lets see, crf and preset options should have always worked
[18:07:53] <kepstin> (or at least did work in your older version)
[18:08:07] <kepstin> so yeah, it's probably just changes in the libx265 library between versions
[18:08:12] <kepstin> which changed what those options do/mean
[18:08:39] <pa> hi folks, i have a few videos that partly fail decoding using qsv h264 decoder, with errors such as [h264_qsv @ 0x5575036fdd80] Error during QSV decoding.: incompatible video parameters (-14). My question is: is there a way to automatically catch these errors, and then f.ex., abort the transcoding?
[18:08:43] <carbonator> hah, fun. means I got to play with the settings now, heh
[18:08:49] <carbonator> kepstin: thanks!
[18:09:15] *** Joins: minimal (~minimal@user/minimal)
[18:10:35] <kepstin> pa: try the -xerror or -max_error_rate options for making ffmpeg exit on decoding errors rather than attempt to keep going.
[18:10:58] <pa> kepstin: would i get an ERRCODE in that case?
[18:11:03] <pa> or how would i detect?
[18:12:55] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 250 seconds)
[18:16:43] <carbonator> kepstin: you know if there's a way to dump the parameters ffmpeg uses for calling the x265 lib?
[18:18:45] <carbonator> going from crf28 to crf30 gives pretty much the filesize of the old version, but artifacts are more visible
[18:23:00] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[18:24:24] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:25:04] <kepstin> carbonator: well, the only things you're setting are preset and crf
[18:25:21] <kepstin> and those get passed directly to libx265
[18:25:29] <carbonator> kepstin: I was thinking of internal defaults
[18:25:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:29:08] <kepstin> i don't think ffmpeg actually sets any internal defaults, it just uses the libx265 library defaults
[18:29:26] <carbonator> ah, okay
[18:29:44] <kepstin> the most likely cause for the difference you're seeing, if i had to guess, is that the meaning of the 'medium' preset changed
[18:30:05] <kepstin> i'm not sure how crf works in x265, but it's possible that it's dependent on other options, and therefore it could have changed too
[18:30:19] <carbonator> yeah, I'll see if I can dig some more information about the presets
[18:33:58] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[18:47:05] <ezzieyguywuf> are the two solutions provided here the best way to accomplish what the OP is asking? https://stackoverflow.com/questions/55233465/ffmpeg-speed-up-video-for-time-lapse-quicker-faster
[18:50:13] <kepstin> the issue with those solutions (and the op's original command) is that it's still keeping all of the frames of the video, just with really high framerate
[18:50:28] <kepstin> so it's e.g. turning a 60fps video into a 360fps video
[18:50:47] <ezzieyguywuf> hm, yea I sort of noticed that
[18:50:56] <kepstin> the solution is to take the OP's original command and add ",fps=30" or something like that after the setpts to drop frames
[18:51:00] <ezzieyguywuf> guess I'll keep playing with framestep and setpts
[18:51:29] <ezzieyguywuf> can you recommend any references where I can learn more about PTS and setpts?
[18:51:57] <kepstin> hmm? the setpts is fine. I just told you the solution to the problem.
[18:52:53] <ezzieyguywuf> kepstin: I'm sure your solution will work (I'm trying it now)
[18:53:03] <ezzieyguywuf> I'd just like to educate myself more on these things so it's not such a black box
[18:53:41] <kepstin> yeah, it's kind of hard to explain the setpts filter on it's own, you need to know what pts is, heh
[18:54:25] <kepstin> each frame has a timestamp attached to it called 'pts' which indicates when it's supposed to be shown during playback
[18:54:45] <kepstin> the setpts filter lets you apply arbitrary mathematical expressions to change the value of this timestamp
[18:55:29] <kepstin> so "PTS/60" means "take the frame's current timestamp, and divide it by 60", the end result of which is that the entire video plays 60 times faster
[18:55:33] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.3)
[18:57:14] <ezzieyguywuf> so earlier, I was doing something like "framestep=30,setpts=N/30/TB" - the idea was to take every 30th frame, so that I could speed up the output but make it look more like stop-motion rather than everything moving faster
[18:57:23] <ezzieyguywuf> I don't understanding the calculation done for setpts though
[18:57:53] <kepstin> alright, so 'N' is just the frame number - 0, 1, 2, ...
[18:58:14] <kepstin> "N/30" gives you the frame timestamp in seconds, since it's 30fps
[18:58:28] <kepstin> but the values aren't actually stored in units of seconds
[18:59:04] <kepstin> they're stored as fractional values, and the "timebase" is the fraction. So the additional "/TB" at the end is converting from seconds to timebase units
[18:59:42] <ezzieyguywuf> so the units of "timebase" is "X/s" where X is some unit of time?
[19:00:20] <kepstin> the "pts" timestamp is actually an integer - to convert it to seconds you multiply by timebase which is a fraction.
[19:01:10] <ezzieyguywuf> so the part about "framestep=30,setpts=N/30/TB" that still confuses me is if I increase framestep to 60, I'd expect the duration of the video to cut in half, but this is not what happens
[19:01:21] *** Parts: carbonator (~Corvus@centos/community/carbonator) ()
[19:01:45] <kepstin> hmm, that should be what happens...
[19:02:35] <kepstin> ah, i'm forgetting now whether the setpts filter ever got fixed to handle EOF timestamps :(
[19:02:56] <ezzieyguywuf> hrm, maybe I'm just confusing myself, I tihnk I was using a different `setpts` earlier, without the hard-coded 30 in there
[19:03:31] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[19:03:33] <ezzieyguywuf> yea, I was using "framestep=30,setpts=N/FRAME_RATE/TB"
[19:04:07] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[19:04:25] <kepstin> (just checked, current versions of setpts do update the EOF timestamp correctly)
[19:04:48] <ezzieyguywuf> oh sweet
[19:05:11] <ezzieyguywuf> yea I saw some SO stuff about the last frame getting repeated to keep the overall length the same as the input, which sounded annoying
[19:05:20] *** Joins: xkuru (~xkuru@user/xkuru)
[19:05:36] <kepstin> there used to be an issue where if you used setpts followed by fps, the fps would fill in the time between the last frame output by setpts and the eof, yes
[19:05:58] <tar_xvf> ezzieyguywuf: you can do that with the tpad filter if you wish
[19:06:06] <kepstin> so, the issue with "framestep=30,setpts=N/FRAME_RATE/TB" is that the "framestep" filter updates the framerate
[19:06:12] <tar_xvf> wait, i am confused, ignore me
[19:06:23] <kepstin> i.e. with framestep=30, it updates the stream framerate to framerate/30
[19:06:40] <ezzieyguywuf> tar_xvf: ignoring :-P
[19:06:49] <ezzieyguywuf> kepstin: ah hah.
[19:07:11] <kepstin> which is of course perfectly correct :)
[19:07:24] *** Quits: rsx (~dummy@ppp-188-174-130-48.dynamic.mnet-online.de) (Remote host closed the connection)
[19:07:29] <ezzieyguywuf> but also explains why I wasn't getting a shorter output video initially
[19:07:43] <kepstin> indeed.
[19:07:47] *** Joins: rsx (~dummy@ppp-188-174-130-48.dynamic.mnet-online.de)
[19:08:00] <ezzieyguywuf> I also noticed that if I got too creative with my output framerate, vlc started having problems playing the video
[19:08:13] <ezzieyguywuf> are there constraints I should keep in mind for the framerate?
[19:08:28] <kepstin> well, uh, 360fps 4k is probably unplayable on most systems
[19:09:15] <kepstin> the "setpts=…,fps=…" solution is nice because you can set the speed and the desired output fps independently
[19:09:23] <ezzieyguywuf> does the fps need to be a multiple of 30?
[19:09:48] <kepstin> no reason for it to be, that's just conventional
[19:10:21] <kepstin> (in uk/eu, 25 and 50 are common instead of 30 and 60, the numbers are just references to standard tv system framerates)
[19:10:37] <ezzieyguywuf> kepstin: "setpts=...,fps=..." solution won't quite work if I want to also use "framestep" though, will it? because in that case don't I have to manually recalculate the PTS thing?
[19:10:56] <kepstin> you don't need framestep with setpts and fps filters
[19:11:04] <kepstin> since the fps filter will take care of dropping the extra frames
[19:12:08] <ezzieyguywuf> so if my input file is 30ps, you're saying "framestep=30,setpts=N/30/TB" is equivalent to "setpts=PTS/30,fps=30"?
[19:12:57] *** Quits: rsx (~dummy@ppp-188-174-130-48.dynamic.mnet-online.de) (Quit: rsx)
[19:13:12] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[19:13:58] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[19:14:36] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[19:14:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[19:15:08] *** Joins: Muimi_ (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2)
[19:15:53] *** Joins: kib (~kib@user/kib)
[19:16:25] <kepstin> yes, although the exact frames chosen might end up different
[19:17:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:18:29] <ezzieyguywuf> hm, ok then
[19:18:33] <ezzieyguywuf> I think I'm starting to get it
[19:18:33] *** Quits: Muimi (~Muimi@141.164.37.7) (Ping timeout: 256 seconds)
[19:18:35] *** Muimi_ is now known as Muimi
[19:18:37] <ezzieyguywuf> kepstin: thanks so much for your help!
[19:18:41] <ezzieyguywuf> tar_xvf: thanks for trying :)
[19:28:47] <ezzieyguywuf> so the "setpts=...,fps=..." seems to produce a smaller file, but definitely selects different frames than the "framestep=30...." approach
[19:31:30] *** Quits: jos1 (~jos3@dyndsl-091-248-053-224.ewe-ip-backbone.de) (Remote host closed the connection)
[19:32:15] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[19:33:39] *** Quits: luc4 (~luca@151.82.23.220) (Read error: Connection reset by peer)
[19:35:49] *** Joins: luc4 (~luca@151.82.56.214)
[19:36:17] *** Joins: jos1 (~jos3@dyndsl-091-248-053-224.ewe-ip-backbone.de)
[19:40:58] *** Joins: phonemic (~phonemic@2600:1700:3379:140::30)
[19:41:05] *** rhys- is now known as rhys
[19:46:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:47:21] *** Quits: Chatter (~Chatter@70.15.56.172.res-cmts.pbg.ptd.net) (Ping timeout: 256 seconds)
[19:48:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:57:36] *** Quits: alankelly (~alankelly@104.133.160.107) (Quit: Connection closed)
[20:19:24] *** Quits: th0rne (~enomaae1@lyta.org.aalto.fi) (Ping timeout: 240 seconds)
[20:22:01] *** Quits: gucky-chat-laden (~gucky-cha@46.41.28.214) (Ping timeout: 256 seconds)
[20:23:38] *** Joins: th0rne (~enomaae1@lyta.org.aalto.fi)
[20:29:14] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[20:30:01] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[20:31:26] *** Quits: phonemic (~phonemic@2600:1700:3379:140::30) (Ping timeout: 260 seconds)
[20:39:57] *** Quits: th0rne (~enomaae1@lyta.org.aalto.fi) (Ping timeout: 240 seconds)
[20:42:55] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[20:44:08] *** Joins: th0rne (~enomaae1@lyta.org.aalto.fi)
[20:49:33] *** Joins: durandal_1707 (~computer@212.15.178.138)
[20:57:09] *** Quits: luc4 (~luca@151.82.56.214) (Ping timeout: 256 seconds)
[21:02:49] *** Quits: th0rne (~enomaae1@lyta.org.aalto.fi) (Ping timeout: 256 seconds)
[21:05:56] *** Joins: th0rne (~enomaae1@lyta.org.aalto.fi)
[21:12:25] *** Quits: cmp (~cmp@lfbn-ren-1-1460-105.w90-27.abo.wanadoo.fr) (Quit: Connection closed)
[21:17:29] *** Quits: dreamon (~dreamon@ppp-88-217-82-137.dynamic.mnet-online.de) (Ping timeout: 268 seconds)
[21:20:14] *** Joins: Muimi_ (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2)
[21:21:11] *** Quits: Muimi (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2) (Ping timeout: 268 seconds)
[21:21:19] *** Muimi_ is now known as Muimi
[21:21:25] *** Joins: dreamon (~dreamon@ppp-88-217-82-137.dynamic.mnet-online.de)
[21:22:24] *** Joins: alankelly (~alankelly@178-83-153-82.dynamic.hispeed.ch)
[21:24:50] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:30:29] *** Quits: alankelly (~alankelly@178-83-153-82.dynamic.hispeed.ch) (Quit: Connection closed)
[21:35:41] *** Quits: th0rne (~enomaae1@lyta.org.aalto.fi) (Ping timeout: 256 seconds)
[21:37:04] *** Joins: Buster_ (~Buster@buster-net.ru)
[21:40:18] *** Joins: mago (~mago@user/mago)
[21:40:20] <mago> Hi there
[21:54:46] *** Joins: th0rne (~enomaae1@lyta.org.aalto.fi)
[21:55:21] *** Joins: jerome_ (~jerome@88.173.24.196)
[21:55:47] *** Quits: Muimi (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2) (Read error: Connection reset by peer)
[21:56:39] *** Quits: jerome- (~jerome@88.173.24.196) (Ping timeout: 256 seconds)
[21:56:57] *** Joins: Muimi (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2)
[21:59:51] *** Joins: arcatech (~arcatech@user/arcatech)
[22:05:30] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[22:06:20] *** Joins: System_Error (~SystemErr@user/systemerror)
[22:06:20] *** Quits: Muimi (~Muimi@2401:c080:1c02:ed3:5400:3ff:feb1:90a2) (Read error: Connection reset by peer)
[22:06:35] *** Joins: palasso (~palasso@user/palasso)
[22:07:55] *** Joins: Muimi (~Muimi@141.164.37.7)
[22:12:28] *** Joins: amatchneer (~amatchnee@pool-108-21-57-229.nycmny.fios.verizon.net)
[22:13:00] *** Quits: th0rne (~enomaae1@lyta.org.aalto.fi) (Ping timeout: 268 seconds)
[22:14:53] <mago> Hi, how can i use yt-dlp for downloading sample rate 44100 ?
[22:16:19] *** Joins: th0rne (~enomaae1@lyta.org.aalto.fi)
[22:17:50] <DHE> that's probably a question for them. but if an option isn't available, ffmpeg could do it same way it does any other audio sample rate conversion
[22:30:33] <kepstin> note that on youtube, for example, the best audio quality is an opus stream, which is always 48kHz sample rate.
[22:30:46] <kepstin> (although iirc they do usually have an aac alternate which could be 44.1kHz)
[22:35:05] *** Quits: amatchneer (~amatchnee@pool-108-21-57-229.nycmny.fios.verizon.net) (Quit: Connection closed)
[22:41:33] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:45:54] *** Quits: cc0 (~cc0@2001:bc8:1830:2329::1) (Remote host closed the connection)
[22:55:38] <mago> Hi what would be the ffmpeg command to convert to 44100 sample rate?
[22:57:23] <another|> Are you sure you actually need that?
[23:02:46] <mago> Think i found it googling
[23:03:16] <another|> ffmpeg -i in -ar 44100 <output options> output
[23:06:04] <DHE> you'll want -c:v copy at a minimum for one of the output options
[23:06:27] <another|> implying there is video
[23:10:16] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[23:28:46] *** Joins: Fohsap (~Muimi@2001:19f0:6001:5706:5400:3ff:feb7:9796)
[23:28:53] *** Quits: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com) (Quit: Client closed)
[23:29:22] *** Joins: phinxy (~phinxy@78-71-229-90-no500.tbcn.telia.com)
[23:32:37] *** Quits: Muimi (~Muimi@141.164.37.7) (Read error: Connection reset by peer)
[23:32:59] *** Joins: Muimi (~Muimi@141.164.37.7)
[23:41:28] *** Joins: someuser (~user@197.54.11.153)
[23:43:45] *** Quits: demon__ (~user@45.130.86.7) (Ping timeout: 256 seconds)
[23:45:37] *** Quits: someuser (~user@197.54.11.153) (Ping timeout: 240 seconds)
[23:46:52] *** kib is now known as jelle-big-g
[23:48:14] *** Joins: gothicserpent (~gothicser@204.152.215.249)
[23:50:41] *** Joins: lavaball (felix@31.204.155.215)
[23:52:06] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[23:59:37] *** Quits: dreamon (~dreamon@ppp-88-217-82-137.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[23:59:46] *** Quits: gothicserpent (~gothicser@204.152.215.249) (Quit: Leaving)
