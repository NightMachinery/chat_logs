[01:01:03] *** Joins: makomo (~makomo@user/makomo)
[01:07:09] *** Quits: CrashTestDummy (~CrashTest@ool-ad020ec7.dyn.optonline.net) (Quit: Leaving)
[01:43:29] *** Quits: dlowe (~dlowe@user/dlowe) (Read error: Connection reset by peer)
[01:43:47] *** Joins: dlowe (~dlowe@user/dlowe)
[01:45:52] *** Quits: dlowe (~dlowe@user/dlowe) (Read error: Connection reset by peer)
[02:37:07] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[02:51:15] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[03:31:09] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[03:32:37] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:49:35] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 240 seconds)
[03:53:09] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[05:33:39] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[05:35:34] *** Joins: aeth (~aeth@user/aeth)
[05:57:59] *** Joins: libniwtr (~libniwtr@2408:8207:2422:3b11:b88b:135:2fa6:c9a)
[06:37:21] *** Quits: mala (~mala@user/malaclyps) (Read error: Connection reset by peer)
[06:38:55] *** Joins: mala (~mala@user/malaclyps)
[07:41:29] *** Quits: isoraqathedh (~isoraqath@supersolid.equilibrium.tymoon.eu) (*.net *.split)
[07:46:01] <libniwtr> Just tried cl-opengl, very handy! One little concern, though: when using vertex buffer data, one has to call `allocate-glarray`, manually set the values, and free the glarray. This seems to be inefficient to me, because of the frequent allocation/de-allocation of heap memory. I wonder, is it possible to pass a pointer to a `lisp-array` instead of having to allocate a `gl-array`?
[07:47:45] <mfiano> static-vectors
[07:48:05] * |3b| 's advice is to ignore the array/buffer APIs in GL: package, and pass pointers to the low-level functions in %gl
[07:48:25] <mfiano> I agree with that
[07:48:45] <|3b|> static-vectors is a convenient way to portably get something you can use as a CL vector and also pass as a pointer to %gl:whatever
[07:49:14] <libniwtr> Oh, I haven't heard of static-vectors. Did you mean this: https://github.com/sionescu/static-vectors ?
[07:49:15] <|3b|> or you can allocate and manage foreign memory manually with cffi (or use cffi to access mapped memory)
[07:49:48] <mfiano> libniwtr: Yes
[07:50:00] <mfiano> But you can just quickload it
[07:50:44] <libniwtr> Thank you mfiano and |3b|. I'll try.
[07:53:10] <libniwtr> One other question: What's your recommendation for loading png files into memory and pass into GL for texture rendering? I have found this library but haven't tried it: https://github.com/bufferswap/pngload
[07:54:28] <libniwtr> Another approach I can think of is to wrap a simple function call to stb-image via cffi, but I want it to be more lispy.
[07:57:28] <|3b|> well, we wrote pngload for that, so that's our (biased) recommendation :)
[07:58:07] <libniwtr> |3b|: Awesome! I'll try that first!
[07:58:56] <|3b|> it has an option to load into a static-vector, and also to load with lower-left of image first as gl expects for textures
[08:03:19] <libniwtr> Sounds very handy. And thank you again for cl-opengl. I feel nearly no pain learning OpenGL in pure lisp, and that's an amazing adventure.
[08:04:38] <libniwtr> I'm currently following Cherno's OpenGL tutorial videos. I'll try writing my own 2d game in CL in the (not far away) future :)
[08:04:38] <mfiano> libniwtr: Enjoy, and yes, it was me and |3b| that wrote pngload primarily for this purpose :)
[08:05:16] <libniwtr> mfiano: Nice work! Thanks for your efforts :)
[08:05:37] <mfiano> There was only one existing solution at the time, and required copying data around to put it in the right format GL expects, and was slow before even doing that
[08:05:55] <mfiano> That was well worth it. I think we wrote that about 5 years ago
[08:06:57] <libniwtr> Cool. So are you guys still active in making/maintaining lisp games/libraries? 
[08:07:14] <mfiano> I did spend about a week trying to optimize that other library before I gave up and started pngload.
[08:07:43] <mfiano> I am active making graphics libraries that could be used in gamedev, not so much gamedev anymore. I think |3b| is in the same situation.
[08:12:16] <mfiano> (It's funny how I say "that other library" because I forgot the name of it since it has become obsolete)
[08:12:56] <libniwtr> maybe png-read?
[08:13:02] <mfiano> Ah yes, that is it.
[08:13:36] <mfiano> That is the only other pure Lisp png decoder I know about, and I am pretty sure it is unmaintained
[08:14:07] <mfiano> pngload has the added benefit (apart from speed and useful for GL) in that it passes the reference decoder's (libpng) test suite.
[08:16:09] <libniwtr> You seems to be very proud of pngload XD, and I can tell that from your github README page.
[08:17:09] <mfiano> Well it hasn't failed me or anyone that uses it, so I would say yes :)
[08:17:54] <libniwtr> Good work mfiano, very cool :)
[08:18:19] <mfiano> Thanks. It was a collaborative effort. |3b| deserves credit too. :)
[08:20:03] <libniwtr> Ditto my thanks to |3b| :)
[08:53:17] *** Quits: libniwtr (~libniwtr@2408:8207:2422:3b11:b88b:135:2fa6:c9a) (Ping timeout: 240 seconds)
[09:54:57] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[09:58:21] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[10:17:09] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[10:20:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[10:25:01] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[10:25:17] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[10:40:40] *** Joins: libniwtr (~libniwtr@123.119.100.178)
[10:41:09] *** Quits: libniwtr (~libniwtr@123.119.100.178) (Client Quit)
[10:41:49] *** Joins: libniwtr (~libniwtr@123.119.100.178)
[10:51:25] <aeth> but where is pngunload
[11:10:48] *** alMalsamo is now known as lumberjack123
[11:22:03] <libniwtr> aeth, https://github.com/bufferswap/pngload
[11:27:12] <aeth> wouldn't be unload, would be write
[11:27:19] <aeth> unless you wanted the confusing pun name
[12:09:27] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[12:26:09] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[12:33:04] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[12:43:26] *** Joins: rtypo (~alex@user/rtypo)
[13:30:37] *** Joins: crumpo (~crumpo@user/crumpo)
[13:36:16] <borodust> mfiano: do you have upcoming jam dates?
[13:48:52] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[13:49:32] <libniwtr> A little problem has confused me for a long time: In package A, I'm calling a function F from package B. I forgot to export F from package B so the compiler complains about undefined symbol. So I modified the `defpackage` of B, adding the export statement. However, when re-compiling package B, the compiler says "exporting F causes name confliction in package A". Why? How?
[13:51:46] <|3b|> because READ interns symbols into the current package
[13:51:47] <libniwtr> In package A, there's no defun about F, only funcall.
[13:52:20] <libniwtr> READ auto-interns every symbol it reads?
[13:52:28] <|3b|> so after you READ the token "f" in the package A, a symbol is created in A with name F
[13:52:35] <|3b|> unless it finds one there already
[13:52:46] <|3b|> that's how it finds symbols
[13:53:42] <libniwtr> Oops. So how can I solve this problem? Should I unintern F, or just restart Lisp?
[13:53:52] <|3b|> if a symbol named F already exists in A, either because you imported it from another package or because it already read a token with that name and created it, it returns the symbol it finds
[13:54:13] <|3b|> sbcl gives a restart to pick which one you want visible, i usually just use that
[13:54:45] <|3b|> but manually uninterning, deleting package and recompiling things, or restarting would also work
[13:56:32] <libniwtr> okay, this makes sense to me. However I do not use sbcl so I don't have the handy restart. I'll restart Lisp then. Thank you :)
[14:05:41] <pjb> libniwtr: all CL implementations provide handy restarts.
[14:06:45] <libniwtr> Ahh, maybe I missed something. I used LW but only saw an compilation error.
[14:08:33] <|3b|> are you using a proper interactive development setup?
[14:09:11] * |3b| could see missing that if you always (COMPILE (LOAD ...)) or load with ASDF/QL for every change, but hopefully you aren't doing either of those things
[14:10:06] * |3b| assumed "recompiling package B" meant "hit C-c C-c on the defpackage form", which would probably end up in debugger with restarts
[14:10:10] <libniwtr> I used slime-compile-defun, it should be interactive, right?
[14:10:31] <|3b|> yeah, would expect debugger+restarts there :/
[14:11:17] <libniwtr> No worries, I'll pay more attention to this later :)
[14:22:41] *** Quits: libniwtr (~libniwtr@123.119.100.178) (Quit: Leaving)
[14:26:28] *** Joins: kevingal (~quassel@92.51.199.18)
[14:30:13] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[14:47:29] *** Joins: notzmv (~zmv@user/notzmv)
[15:47:37] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[15:53:27] *** Joins: libniwtr (~libniwtr@123.119.100.178)
[16:04:03] *** Quits: kevingal (~quassel@92.51.199.18) (Ping timeout: 256 seconds)
[16:11:29] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[16:13:38] *** Joins: kevingal (~quassel@92.51.199.18)
[16:26:38] *** Joins: yewscion (~yewscion@52.94.133.128)
[16:33:43] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[16:35:36] *** Joins: aeth (~aeth@user/aeth)
[17:11:01] *** Quits: kevingal (~quassel@92.51.199.18) (Ping timeout: 240 seconds)
[17:42:28] *** Quits: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr) (Remote host closed the connection)
[17:46:01] *** Joins: libreniwtr (~libniwtr@123.119.100.178)
[17:49:31] *** Quits: libniwtr (~libniwtr@123.119.100.178) (Ping timeout: 245 seconds)
[17:56:01] *** Quits: libreniwtr (~libniwtr@123.119.100.178) (Quit: Leaving)
[18:00:34] *** Quits: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b) (Remote host closed the connection)
[18:00:56] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[18:07:04] *** Joins: OlCe (~user@lfbn-nic-1-262-219.w90-116.abo.wanadoo.fr)
[18:08:12] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 240 seconds)
[18:34:29] *** Joins: kevingal (~quassel@92.51.199.18)
[18:51:17] *** Joins: libniwtr (~libniwtr@2408:8207:2422:3b11:2170:bd88:80c0:af4e)
[18:55:05] <libniwtr> |3b|: hi, I'm trying out `pngload` and I just have no idea how to get the actual pointer from the loaded png object in order to pass as an argument to `gl:tex-image-2d`. Can you help me with that? 
[18:56:43] *** Joins: yewscion (~yewscion@52.94.133.128)
[18:58:18] <libniwtr> More specifically I'm using `with-png-in-static-vector`, but I found out that I cannot just pass the png variable into gl:tex-image-2d.
[19:03:18] <|3b|> something like (static-vectors:static-vector-pointer (pngload:data png))
[19:04:45] *** Joins: thrig (~thrig@207.108.197.156)
[19:04:49] <libniwtr> Thanks! I'll try that out!
[19:16:50] *** Quits: thrig (~thrig@207.108.197.156) (Remote host closed the connection)
[19:17:08] *** Joins: thrig (~thrig@207.108.197.156)
[20:07:04] *** Quits: thrig (~thrig@207.108.197.156) (Read error: Connection reset by peer)
[20:07:29] *** Joins: thrig (~thrig@207.108.197.156)
[20:10:31] *** Quits: pjb (~pjb@user/pjb) (Read error: Connection reset by peer)
[20:11:15] <technomancy> borodust: it's the 15th of April, pretty sure
[20:11:28] <technomancy> borodust: https://gist.github.com/mfiano/d7818a73eed89abaf0e32a9edf3f2b83
[20:49:28] <borodust> technomancy: thanks!
[20:50:52] <thrig> beware the ides of april?
[20:59:06] <technomancy> I have a bot that can run the jam date calculation but apparently it can't join here because the channel's +r; wups
[20:59:45] <thrig> thanks, spammers?
[21:00:28] <technomancy> I guess I should get my bot to register anyway at some point
[21:00:43] <technomancy> but I gotta get back to Real Work
[21:09:17] *** Quits: kevingal (~quassel@92.51.199.18) (Remote host closed the connection)
[21:11:24] *** Quits: libniwtr (~libniwtr@2408:8207:2422:3b11:2170:bd88:80c0:af4e) (Ping timeout: 240 seconds)
[22:13:49] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[22:20:34] *** Quits: thrig (~thrig@207.108.197.156) (Remote host closed the connection)
[22:44:36] *** Joins: treflip (~user@user/treflip)
[23:19:05] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
