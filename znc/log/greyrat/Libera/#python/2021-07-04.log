[00:00:31] *** Joins: upsala (~zcb@185.213.155.160)
[00:00:44] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[00:02:48] *** Joins: cedric (~cedric@2a01:cb11:867:c200:b2e2:5ccf:bbc6:6bc0)
[00:02:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[00:05:07] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 256 seconds)
[00:06:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[00:06:51] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[00:09:33] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:09:41] *** Joins: waynew (~wayne@user/waynew)
[00:10:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[00:12:16] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[00:13:06] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[00:13:54] *** Joins: thiras (~thiras@user/thiras)
[00:14:11] *** Joins: wyclif (~wyclif@user/wyclif)
[00:15:41] *** Quits: __that__ (~Guest10@195.59.68.214) (Quit: Client closed)
[00:16:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:16:39] <Alex123> hello all, does anyone know to library in python similar to https://github.com/victordomingos/optimize-images which can optimize images
[00:17:22] *** Joins: acresearch (~acresearc@user/acresearch)
[00:19:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:20:03] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[00:20:17] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[00:21:03] <ChrisWarrick> Alex123: you could just use whatever pillow functions it calls
[00:21:14] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[00:21:21] <ChrisWarrick> Alex123: although for image optimization, I’d probably just use pngout/optipng/pngcrush/zopflipng in a subprocess
[00:22:16] <ba> Hi. Does setuptools handle package_data files involving a folder called 'lib' differently somehow? A pattern like '*/*' picks up everything in 'bin/' but nothing in 'lib/'
[00:22:54] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[00:24:15] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[00:24:32] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[00:26:05] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:28:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[00:28:21] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[00:28:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:30:32] *** Leonarbro_ is now known as Leonarbro
[00:30:44] <SnoopJ> Pillow's compression is good, yea.
[00:30:55] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ohuwuteu)
[00:31:18] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[00:31:50] <SnoopJ> ba, are there files directly underneath lib/, or is there maybe an intermediate folder?
[00:32:24] <ba> SnoopJ: files directly under it. I think my workspace isn't being cleaned properly before the build, so that might explain things according to SO. Will check...
[00:32:56] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[00:32:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[00:33:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[00:33:49] *** Joins: wyclif (~wyclif@user/wyclif)
[00:34:18] *** Joins: Warkruid (~MarderIII@2001:985:e889:1:10cc:e538:764:8883)
[00:34:19] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[00:34:54] *** Joins: pnoud (~pnoud@user/pnoud)
[00:35:36] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[00:37:44] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:10cc:e538:764:8883) (Ping timeout: 250 seconds)
[00:38:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:39:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[00:42:07] *** Joins: audiocat (~audio@2603-8081-1800-6a65-82d4-8900-8a7b-f45b.res6.spectrum.com)
[00:42:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[00:44:41] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[00:44:55] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[00:45:37] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:45:44] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:46:50] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 258 seconds)
[00:50:36] *** Quits: TechnoDelver (~TechnoDel@user/technodelver) (Ping timeout: 272 seconds)
[00:50:53] *** Joins: wyclif (~wyclif@user/wyclif)
[00:51:14] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[00:55:32] *** Joins: jess (~jess@libera/staff/jess)
[00:56:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[00:59:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[00:59:41] *** Quits: lmmx (~louis@host-92-0-187-249.as13285.net) (Quit: Leaving)
[00:59:49] *** Joins: PyCharm (~PyCharm@user/pycharm)
[00:59:55] *** Joins: cheater (~Username@user/cheater)
[00:59:57] *** Joins: Auron (Auron956@user/auron)
[01:00:21] *** Quits: cheater (~Username@user/cheater) (Client Quit)
[01:00:44] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[01:01:00] *** Joins: cheater (~Username@user/cheater)
[01:01:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[01:01:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Client Quit)
[01:02:23] *** Quits: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:02:56] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[01:03:38] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[01:03:47] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:04:16] <KombuchaKip> bjs: Thanks. I'll add -Werror to my sh'bang line for /usr/bin/python3
[01:05:16] <ba> SnoopJ: this is mighty confusing. It will happily pick up a directory full of '.dylib' files, but no '.so' files.
[01:05:35] <ba> SnoopJ: may be a bug in 'wheel', will test a few versions
[01:05:58] <SnoopJ> ba, huh, interesting.
[01:06:52] *** Joins: wyclif (~wyclif@user/wyclif)
[01:08:16] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:09:00] *** Joins: interpolite (~interpoli@gl53-39.master.pl)
[01:10:35] *** Joins: djapo (~archangel@user/djapo)
[01:11:24] *** Joins: srilyk (~wayne@user/waynew)
[01:12:12] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[01:14:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[01:14:02] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[01:14:12] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[01:14:31] *** Joins: waynew (~wayne@user/waynew)
[01:14:33] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[01:14:48] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:15:50] <ba> SnoopJ: nevermind, stupid error on my end. I had only symlinks in the lib/ directory (facepalm)
[01:15:57] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Ping timeout: 256 seconds)
[01:16:09] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[01:16:09] <SnoopJ> aha, and I suppose it doesn't follow them :)
[01:16:36] <ba> I'm glad it's not some deep deep wheel bug
[01:16:43] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[01:17:39] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 256 seconds)
[01:17:57] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:18:02] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[01:18:03] <habnabit_> ba, are you trying to ship your own shared libraries?
[01:18:15] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:18:35] <ba> habnabit_: yep, but they're not Python extension modules, just generic libs wrapped in a wheel for convenient installation.
[01:18:51] <habnabit_> ba, but do you have an extension module which links them?
[01:18:52] <ba> Well, the focus is some binaries
[01:19:36] <ba> habnabit_: no. I have a small `__init__.py` with some attributes giving the paths to some of the distributed executables
[01:20:50] <habnabit_> ba, and the executables link the shared libraries?
[01:21:26] <ba> Yep. On Mac/Linux the executables find the libraries via RPATHs. On Windows they're stuffed in the same directory.
[01:21:39] *** Quits: interpolite (~interpoli@gl53-39.master.pl) (Quit: Client closed)
[01:22:05] <habnabit_> ba, do you know about `auditwheel repair`?
[01:22:41] <ba> I've just come across it while googling this issue! It says it's geared towards only Linux, though?
[01:22:42] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[01:23:19] <habnabit_> ba, https://pypi.org/project/delocate/
[01:23:43] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b8b1:7bef:6923:6942) (Quit: Leaving)
[01:23:46] <ba> habnabit_: amazing. I'll do some reading, thanks
[01:25:07] *** Quits: totenkoph (~scythe@gateway/tor-sasl/totenkoph) (Ping timeout: 244 seconds)
[01:26:25] *** Quits: cheater (~Username@user/cheater) (Quit: BitchX: use it, it makes you bulletproof)
[01:27:01] *** Joins: cheater (~Username@user/cheater)
[01:27:02] *** Joins: wyclif (~wyclif@user/wyclif)
[01:27:51] *** Quits: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net) (Quit: bilb_ono)
[01:29:36] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[01:30:34] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[01:31:30] *** Quits: xy0 (~xy0@137.193.139.44) (Changing host)
[01:31:30] *** Joins: xy0 (~xy0@user/xy0)
[01:32:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:34:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[01:34:29] *** Joins: cheater (~Username@user/cheater)
[01:35:28] <PyCharm> https://bpa.st/JYUQ
[01:36:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:36:41] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:36:46] <PyCharm> NameError: name 'button' is not defined
[01:37:04] <PyCharm> Do threads lose variable state?
[01:37:22] <nedbat> PyCharm: when you start the thread, you want ` timer `, not ` timer()  `
[01:39:36] *** Quits: truth (~truth@user/truth) (Quit: bye)
[01:39:56] *** Joins: truth (~truth@user/truth)
[01:40:01] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[01:40:11] *** Joins: jazzy (~jaziz@2600:380:4542:186:d06f:248f:12cd:b2a4)
[01:40:23] *** Joins: pycurious (~Adium@user/pycurious)
[01:40:44] <PyCharm> if button["text"] == "Start":
[01:40:45] <PyCharm> NameError: name 'button' is not defined
[01:40:49] <pycurious> on a apple m1 - I cant install sklearn using pip - any ideas on how to fix that? I'd prefer not to use conda.
[01:41:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:42:52] *** Joins: cheater1__ (~Username@user/cheater)
[01:42:54] <nedbat> PyCharm: seems like the thread is starting before your assignment statement is done
[01:43:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[01:43:13] *** Joins: y1n (~y1n@84-115-64-142.wifi.dynamic.surfer.at)
[01:43:19] *** cheater1__ is now known as cheater
[01:43:59] <jinsun> pycurious: looks like conda-forge is the only option for you for right now https://github.com/scikit-learn/scikit-learn/issues/19137
[01:44:39] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[01:45:38] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:47:02] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[01:47:05] *** Quits: Jormungandr89 (~brad@136.49.61.2) (Quit: Konversation terminated!)
[01:47:34] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[01:47:55] <lesshaste> I have a list of strings. How can I make a set of the letters in the strings?
[01:48:12] <habnabit_> lesshaste, one set of all letters in all strings?
[01:48:24] <lesshaste> one set of all the letters in all the strings
[01:48:48] <habnabit_> lesshaste, what part of that is giving you trouble? you could do it with a comprehension or a for loop and set:update
[01:49:09] <lesshaste> I feel there is a compact way of doing this
[01:49:31] <habnabit_> lesshaste, {l for s in yourlist for l in s} ?
[01:49:41] <lesshaste> that looks like it! thanks
[01:50:07] <truth> how about: set(''.join(yourlist))
[01:50:28] <lesshaste> truth, ah yes. That's the one I saw before. Thankyou
[01:50:46] <habnabit_> sure, if you're ok with having one very large string that's all the other strings joined
[01:51:03] <Jin^eLD> habnabit_: how would you translate struct can_frame from /usr/include/linux/can.h to cffi? the struct defines one of its fields as __attribute__((aligned(8))) and I understand cdef does not support that?
[01:51:18] <pycurious> jinsun: Thanks. scipy is giving this error -> ImportError: cannot import name 'show_config' from 'numpy' (unknown location)
[01:51:28] <habnabit_> Jin^eLD, i don't have a linux system handy if you could pastebin it or something
[01:51:48] *** Quits: sazawal (~sazawal@110.224.174.213) (Quit: Leaving)
[01:51:57] <PyCharm> it seems that button['command'] = _thread.start_new_thread(timer, ()) is actually executing the command
[01:52:00] <PyCharm> is that right?
[01:52:01] <lesshaste> how can I write the byte 200 (that is 0b11001000) to a file?
[01:52:07] <Jin^eLD> habnabit_: https://paste.ee/p/5PHig
[01:52:09] <pycurious> jinsun: numpy was corrupted- fixed
[01:52:13] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[01:52:23] *** Joins: cheater (~Username@user/cheater)
[01:52:36] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[01:52:37] <habnabit_> PyCharm, use the threading module
[01:52:53] <nedbat> PyCharm: start_new_thread is going to call the function you give it. it doesn't know about buttons.
[01:53:05] <habnabit_> lesshaste, with open(fname, 'wb') as outfile: outfile.write(b'\xc8')
[01:53:06] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:53:21] <lesshaste> habnabit_, ah you converted to hex?
[01:53:27] <habnabit_> lesshaste, yep
[01:53:34] <nedbat> PyCharm: I think maybe you want:  command=timer  ?  Why mention threads there?
[01:53:50] <lesshaste> habnabit_, thanks. so if 200 is in a variable num how would I do this?
[01:53:54] <PyCharm> I have a loop that takes a long time
[01:53:56] <PyCharm> it's a timer
[01:53:59] <habnabit_> lesshaste, bytes([200])
[01:54:00] <nedbat> PyCharm: or, if you want the button to start a thread, then:  command=start_thread_and_do_timer_thing
[01:54:36] <habnabit_> Jin^eLD, if you declare that as a struct with a final `...;` element in it, cffi will take it as API and not ABI and use the struct definition from whatever you #included in set_source
[01:54:38] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:54:52] <AhmedAmerican> within the following example https://bpa.st/4ISQ , why i should use `Method 2` instead of 1 ?
[01:54:53] <lesshaste> habnabit_, I had no idea that existed! Thank you
[01:55:06] <habnabit_> lesshaste, python 3 makes working with bytes kinda awful
[01:55:07] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:b8b1:7bef:6923:6942)
[01:55:09] <Jin^eLD> oh, that's what the docs meant by "...", I failed to understand that part
[01:55:15] *** Quits: a7rs (~a7rs@86.10.115.139) (Quit: WeeChat 3.2)
[01:55:31] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[01:55:32] <Jin^eLD> habnabit_: thank you!
[01:55:36] <lesshaste> habnabit_,  how so>
[01:55:37] <lesshaste> ?
[01:55:59] <habnabit_> lesshaste, this exact issue among other things. you used to be able to write chr(200)
[01:56:15] <lesshaste> habnabit_,  yes that is what I tried first
[01:57:01] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[01:57:25] <KombuchaKip> How do I set PYTHONWARNINGS environment variable so all warnings are treated as errors, except for ResourceWarning?
[01:57:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:57:37] <PyCharm> how do I kill a thread with _thread
[01:58:28] <Jin^eLD> habnabit_: how would I handle the __attribute__((packed)); for the union thats inside the struct?
[01:58:58] <Jin^eLD> pack=True would influence the whole definition, right?
[02:00:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:02:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:02:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:05:30] <Jin^eLD> habnabit_: I do not think it works that way, so my cdef looks like this now: https://paste.ee/p/wlia1 and I put exactly the same into the .h file that I set as ffibuilder.set_source() with the exception that in the .h I do not have this ...; struct member anymore
[02:05:42] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:05:42] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[02:05:52] *** Joins: cursey (uid186300@id-186300.charlton.irccloud.com)
[02:05:53] <Jin^eLD> and it says cffi.CDefError: cannot parse "} __attribute__((packed));"
[02:06:10] <Jin^eLD> am I supposed to add another ...; to the union?
[02:06:33] <pycurious> Is this correct -> >>> dir(scipy.interpolate) —>  ['__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__']
[02:07:11] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[02:08:29] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:09:13] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[02:09:18] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:09:31] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:10:31] *** Joins: wyclif (~wyclif@user/wyclif)
[02:11:11] <KombuchaKip> bjs: How do I set PYTHONWARNINGS environment variable so all warnings are treated as errors, except for ResourceWarning?
[02:13:55] <bjs> KombuchaKip: see https://docs.python.org/3/library/warnings.html#describing-warning-filters for a description of how it works
[02:14:03] <bjs> pycurious: "correct" ?
[02:14:27] <KombuchaKip> bjs: I saw it, but it looks like that's for doing it programmatically, but isn't any help if you can't change the source but can only run the binary.
[02:14:34] <bjs> KombuchaKip: huh?
[02:15:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:15:23] <KombuchaKip> bjs: Imagine you have some foo.py. It's running in a CI test bed. You want to know if it generates any warnings, and to stop the test before it continues.
[02:15:28] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 272 seconds)
[02:15:34] <bjs> KombuchaKip: yes you use the -W flag for Python
[02:16:34] <bjs> KombuchaKip: `python -W<filter> ...`
[02:16:59] <KombuchaKip> bjs: I tried that. I tried -Werror which works, but the ResourceWarnings are things that are innocuous and I'd like to shut them up. I tried this and the ResourceWarnings are still emitted: -Werror -W"ignore:ResourceWarning"
[02:18:16] *** Joins: cheater1__ (~Username@user/cheater)
[02:18:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[02:18:53] *** cheater1__ is now known as cheater
[02:19:36] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[02:19:54] *** Quits: Warkruid (~MarderIII@2001:985:e889:1:10cc:e538:764:8883) (Quit: Leaving)
[02:20:34] <bjs> KombuchaKip: did you mean ignore::ResourceWarning
[02:20:52] <KombuchaKip> bjs: Ah, missing colon.
[02:20:58] <KombuchaKip> bjs: Let me give that a try.
[02:21:26] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:22:24] *** Joins: srilyk (~wayne@user/waynew)
[02:22:24] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 268 seconds)
[02:22:35] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[02:22:46] <KombuchaKip> bjs: And if I want to set it via PYTHONWARNINGS environment variable, like so? PYTHONWARNINGS="error,ignore::ResourceWarning"
[02:22:55] <bjs> KombuchaKip: I guess so yeah
[02:22:58] *** Joins: slbtty (~slbtty@69.166.120.196)
[02:23:37] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:24:05] <Soni> " ".join("MULTI_" + ty for ty in result_types) vs "MULTI_"+" MULTI_".join(result_types) ?
[02:24:28] *** Joins: waynew_ (~wayne@user/waynew)
[02:24:34] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:24:39] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:24:42] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Ping timeout: 265 seconds)
[02:25:16] <bjs> Soni: I mean they look like they should do the same thing,  but the first more obviously says what you want to say I guess?
[02:26:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:27:08] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[02:27:30] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[02:27:33] *** Joins: wyclif (~wyclif@user/wyclif)
[02:30:20] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 258 seconds)
[02:30:38] <habnabit_> Jin^eLD, yeah, drop the __attribute__ and put a ...; again
[02:30:52] <habnabit_> Jin^eLD, i don't think you can have __attribute__ in a cdef at all
[02:31:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 272 seconds)
[02:31:28] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[02:32:09] <AhmedAmerican> within the following example https://bpa.st/4ISQ , why i should use `Method 2` instead of 1 ? in real world, which one i should consider?
[02:32:17] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[02:32:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:33:06] <habnabit_> AhmedAmerican, but those do entirely different things? it's not like they're different ways of accomplishing the same thing; one returns a tuple and one returns a Point
[02:33:12] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[02:33:23] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[02:33:52] *** Joins: cheater (~Username@user/cheater)
[02:34:18] <AhmedAmerican> @habnabit_ for `Method 1`, if i did `x = a+b` and then print `x`, i will get the same tuple
[02:35:44] *** Joins: pnoud (~pnoud@user/pnoud)
[02:37:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[02:38:41] *** Quits: y1n (~y1n@84-115-64-142.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[02:38:57] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:39:56] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:40:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[02:42:00] <bjs> AhmedAmerican: but with "Method 2" then x isn't a tuple at all
[02:42:37] <AhmedAmerican> Yea, returning a Point object.
[02:42:54] <bjs> AhmedAmerican: so the two methods aren't the same
[02:43:01] <bjs> it depends, do you want adding two points together to give you another point?
[02:43:09] <bjs> or do you want it to give you a tuple?
[02:44:03] <AhmedAmerican> @bjs Got it. Thank you. it's based on which output then
[02:44:13] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[02:44:15] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:44:23] <AhmedAmerican> meant based on the output which i need.
[02:44:29] <bjs> AhmedAmerican: yes the two methods return different things so which one you want depends on which thing you want to return
[02:46:08] *** Joins: wyclif (~wyclif@user/wyclif)
[02:46:19] *** Joins: noobly (~user@50.38.89.219)
[02:47:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:48:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[02:48:19] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:48:35] *** Joins: waynew_ (~wayne@user/waynew)
[02:48:49] *** Quits: ulu (~ulu@user/ulu) (Remote host closed the connection)
[02:49:03] *** Joins: ulu (~ulu@user/ulu)
[02:49:06] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 240 seconds)
[02:49:29] <argoneus> hi, what library would you use for just a simple GUI with a single text/label and a reset button?
[02:50:26] <Jin^eLD> habnabit_: ack
[02:51:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:52:21] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:52:39] *** Joins: greedom (~greedom@2001:16b8:2e7a:c700:f31f:cd14:9778:9146)
[02:52:40] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:52:58] *** Joins: waynew_ (~wayne@user/waynew)
[02:55:44] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:55:51] *** Joins: waynew (~wayne@user/waynew)
[02:56:09] *** Joins: gry (~quassel@botters/gry)
[02:56:33] <PyCharm> I made a tomato timer yay
[02:56:35] <PyCharm> https://github.com/andrewjohnroy/pomodoro-timer/blob/main/pomodoro.py
[02:56:56] <gry> nice
[02:57:39] <PyCharm> first time I used threads in a project
[02:57:47] <gry> can i ask you whats your email
[02:57:54] <gry> ild like to write you a pull request..
[02:57:58] <gry> to add a licence header to this file
[02:58:08] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[02:58:12] <gry> ive got it all ready just not your email address, github doesnt show it
[02:58:25] *** Joins: Lando-HoloNet (~LandoC@user/lando-spacepimp)
[02:58:32] <PyCharm> can't you write a pull request without my email?
[02:58:54] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:59:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[02:59:17] *** Joins: nattiestnate (~nate@180.243.15.91)
[02:59:38] <gry> ok you can add it later, one sec
[02:59:39] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[03:00:07] *** Quits: Lando-HoloNet (~LandoC@user/lando-spacepimp) (Client Quit)
[03:00:18] <PyCharm> all you need to do is fork it
[03:00:47] <PyCharm> you don't need emails
[03:01:25] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[03:01:26] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[03:02:09] <gry> done
[03:02:13] <PyCharm> oh cool
[03:02:21] *** Joins: srilyk (~wayne@user/waynew)
[03:02:23] <PyCharm> no one has ever written a pull request to me before
[03:02:36] *** Joins: driib1 (~driib@185.195.233.163)
[03:02:45] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[03:03:18] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[03:03:32] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-b5e6-b86e-8999-d75d.res6.spectrum.com) (Quit: Leaving.)
[03:03:37] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[03:03:43] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Remote host closed the connection)
[03:03:49] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:04:00] *** Joins: wyclif (~wyclif@user/wyclif)
[03:04:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[03:04:57] *** Quits: driib (~driib@185.195.233.165) (Ping timeout: 268 seconds)
[03:04:58] *** driib1 is now known as driib
[03:07:06] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[03:07:35] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[03:08:08] *** Quits: nattiestnate (~nate@180.243.15.91) (Quit: WeeChat 3.2)
[03:09:08] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:09:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:12:41] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:14:14] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:15:38] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[03:17:38] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[03:18:54] *** Joins: matsaman (~matsaman@user/matsaman)
[03:19:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[03:19:10] *** Joins: cheater1__ (~Username@user/cheater)
[03:19:16] *** cheater1__ is now known as cheater
[03:19:20] *** Joins: hyperknot (~hyperknot@254C3C5E.nat.pool.telekom.hu)
[03:23:04] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[03:23:47] *** Joins: wyclif (~wyclif@user/wyclif)
[03:24:05] *** Joins: Naan (~naan@user/naan)
[03:25:00] <ChrisWarrick> PyCharm: you shouldn’t import _thread, it’s a low-level api - try threading instead (or better, asyncio)
[03:27:28] *** Joins: Notgnoshi (~nots@2001-48F8-8-40-D54D-A979-AEE-17D9-dynamic.midco.net)
[03:28:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[03:30:40] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[03:31:10] *** Joins: wyclif (~wyclif@user/wyclif)
[03:34:15] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[03:34:30] *** Joins: waynew (~wayne@user/waynew)
[03:36:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[03:37:00] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[03:39:17] *** Joins: TechnoDelver (~TechnoDel@user/technodelver)
[03:41:13] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[03:41:38] *** Quits: hyperknot (~hyperknot@254C3C5E.nat.pool.telekom.hu) (Ping timeout: 258 seconds)
[03:42:38] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[03:44:25] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 268 seconds)
[03:44:25] *** Quits: cedric (~cedric@2a01:cb11:867:c200:b2e2:5ccf:bbc6:6bc0) (Quit: Konversation terminated!)
[03:45:02] <noobly> Post this on ##machinelearing as well, but thought I'd try here too. Goal is to develop a (Perceptron) ML model that returns 1 when an even number of it's three inputs are 1, and 0 otherwise. Here is the base code I'm working with: https://dpaste.com/D7Q76XJYR, and the commands I've entered: https://dpaste.com/BFEPLX73F. The result of running my commands was either all 0's or all 1's, even up 14k iterations.
[03:45:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[03:45:54] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:46:32] *** Joins: hyperknot (~hyperknot@254C0D66.nat.pool.telekom.hu)
[03:49:01] <shibboleth> is there an envvar that'll the python scripts to use a socks5/socks5h proxy?
[03:50:37] <PyCharm> ChrisWarrick, I tried to make my code use asyncio but it just hangs
[03:51:10] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[03:51:12] *** Quits: hyperknot (~hyperknot@254C0D66.nat.pool.telekom.hu) (Ping timeout: 268 seconds)
[03:51:25] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[03:52:09] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:38] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[03:52:48] *** Joins: hyperknot (~hyperknot@254C1FD4.nat.pool.telekom.hu)
[03:53:46] *** Joins: wyclif (~wyclif@user/wyclif)
[03:54:31] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:55:02] <Russell> no-reply keeps getting a ton of emails atm from the undernet abuser
[03:55:22] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[03:55:36] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:56:08] <Russell> ignore that message
[03:56:10] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 272 seconds)
[03:57:11] <PyCharm> Does anyone have any hints on how to change threading to asyncio for this python file https://github.com/andrewjohnroy/pomodoro-timer/blob/main/pomodoro.py
[03:57:23] <PyCharm> I've never used asyncio before.
[03:58:00] <PyCharm> Pull requests are welcome :)
[03:58:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[04:00:36] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 272 seconds)
[04:01:04] *** Joins: justinf210 (~justinf21@34.sub-97-44-2.myvzw.com)
[04:02:55] *** Joins: noona (~noona@45.129.56.204)
[04:03:46] *** Quits: TechnoDelver (~TechnoDel@user/technodelver) (Ping timeout: 252 seconds)
[04:03:52] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[04:04:25] *** Joins: cheater (~Username@user/cheater)
[04:05:38] *** Quits: magla (~gelignite@55d46396.access.ecotel.net) (Quit: Stay safe!)
[04:10:33] *** Quits: justinf210 (~justinf21@34.sub-97-44-2.myvzw.com) (Ping timeout: 265 seconds)
[04:12:27] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:12:51] *** Joins: wyclif (~wyclif@user/wyclif)
[04:14:32] <bjs> PyCharm: I'd start with `import asyncio` :)
[04:16:01] <PyCharm> I tried using async but my program hanged
[04:16:45] <bjs> PyCharm: okay, well, maybe we should start there
[04:16:48] <bjs> what exactly did you try? :)
[04:17:38] <PyCharm> some random edits
[04:17:48] *** Quits: hyperknot (~hyperknot@254C1FD4.nat.pool.telekom.hu) (Ping timeout: 265 seconds)
[04:18:11] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[04:18:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[04:18:44] <bjs> PyCharm: well uhm,  okay then
[04:18:51] <bjs> PyCharm: my hint is to try make the right edits?
[04:18:59] *** Joins: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com)
[04:18:59] <bjs> I don't know what you're looking for with such vague questions :)
[04:19:24] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[04:19:56] <bjs> PyCharm: like, what are you trying to do? Why are you trying to switch from threads?
[04:20:10] <bjs> and what have you tried and what went wrong?
[04:20:44] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[04:20:44] <PyCharm> ChrisWarrick said asyncio is better than threads
[04:21:11] *** Quits: noobly (~user@50.38.89.219) (Ping timeout: 265 seconds)
[04:21:57] <graingert> tk doesn't work well with asyncio
[04:22:26] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[04:22:41] <graingert> https://github.com/richardsheridan/trio-guest/blob/master/trio_guest_tkinter.py there's this
[04:22:54] <bjs> PyCharm: well,  but does it make _your_ code better?
[04:23:12] *** Quits: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com) (Ping timeout: 252 seconds)
[04:23:21] <graingert> PyCharm: use bpaste to show your code
[04:23:35] <bjs> what's wrong with github?
[04:23:49] *** Joins: justinf210 (~justinf21@208.sub-97-44-1.myvzw.com)
[04:24:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:24:07] <graingert> Or yeah github
[04:24:19] <bjs> graingert: I mean PyCharm did share a github link
[04:24:21] <graingert> Did you make a fork?
[04:24:34] <graingert> I thought that was some 3rd party
[04:24:41] <graingert> I want to see the code that hangs
[04:25:18] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 272 seconds)
[04:25:23] <PyCharm> oh I reverted it
[04:25:29] <PyCharm> but it's in the git commits
[04:25:40] <PyCharm> not even sure I pushed it actually
[04:26:07] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[04:26:08] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[04:26:28] *** Quits: deepy (deepy@user/deepy) (Read error: Connection reset by peer)
[04:26:30] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:27:03] *** Joins: deepy (deepy@user/deepy)
[04:27:19] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:27:30] *** Quits: jazzy (~jaziz@2600:380:4542:186:d06f:248f:12cd:b2a4) (Ping timeout: 256 seconds)
[04:27:33] *** Quits: justinf210 (~justinf21@208.sub-97-44-1.myvzw.com) (Read error: Connection reset by peer)
[04:27:42] *** Quits: Hummer12007 (~Hummer120@static.214.80.76.144.clients.your-server.de) (Remote host closed the connection)
[04:27:50] *** Joins: justinf210 (~justinf21@208.sub-97-44-1.myvzw.com)
[04:27:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Client Quit)
[04:28:02] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:28:03] *** Quits: ulu (~ulu@user/ulu) (Ping timeout: 256 seconds)
[04:28:12] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:28:28] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Ping timeout: 272 seconds)
[04:28:51] *** Joins: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de)
[04:28:53] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (Ping timeout: 244 seconds)
[04:28:55] *** Quits: lambda (~weechat@cyka.blyat.vodka) (Ping timeout: 272 seconds)
[04:29:02] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:29:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[04:29:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:29:08] *** Quits: jasiek (~jps@kuweta.sanepid.org) (Ping timeout: 250 seconds)
[04:29:14] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (Read error: Connection reset by peer)
[04:29:46] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[04:29:53] *** Joins: ulu (~ulu@user/ulu)
[04:29:55] <graingert> PyCharm: What's your end goal?
[04:29:57] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[04:30:12] <PyCharm> it's fine, I was just advised to use asyncio
[04:30:14] *** Joins: jasiek (~jps@kuweta.sanepid.org)
[04:30:18] <PyCharm> I will just use threading
[04:30:19] *** Quits: o (~niko@libera/staff/niko) (Ping timeout: 622 seconds)
[04:31:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:31:20] *** Wulf4 is now known as Wulf
[04:31:32] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[04:31:55] *** Joins: Hummer12007 (~Hummer120@static.214.80.76.144.clients.your-server.de)
[04:32:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:33:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:34:12] *** Quits: justinf210 (~justinf21@208.sub-97-44-1.myvzw.com) (Ping timeout: 252 seconds)
[04:34:34] *** Joins: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com)
[04:35:19] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[04:36:04] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[04:36:20] *** Quits: waxfire23 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:36:33] *** Joins: Pickchea (~private@user/pickchea)
[04:36:34] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[04:36:34] *** Joins: pnoud (~pnoud@user/pnoud)
[04:36:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:37:18] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[04:37:54] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:38:55] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:40:56] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:40:57] *** Jacktar_ is now known as jacktar
[04:41:26] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[04:42:16] *** Joins: ionface_ (~ionface@user/ionface)
[04:42:24] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 272 seconds)
[04:42:38] *** Joins: wyclif (~wyclif@user/wyclif)
[04:44:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[04:48:20] *** Joins: cheater1__ (~Username@user/cheater)
[04:48:29] *** Joins: y1n (~y1n@84-115-64-102.wifi.dynamic.surfer.at)
[04:48:47] *** cheater1__ is now known as cheater
[04:50:15] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[04:50:52] *** Joins: canton7 (~canton7@about/csharp/canton7)
[04:51:24] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[04:52:15] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 268 seconds)
[04:52:50] <KombuchaKip> bjs: Thank you. It worked!
[04:53:10] <AhmedAmerican> @PyCharm or trio (async)
[04:53:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:54:26] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[04:54:46] *** Joins: cheater (~Username@user/cheater)
[04:56:23] <gry> PyCharm: you're developing that on windows, or on a linux? how do you install tkinter?
[04:56:40] *** Quits: noona (~noona@45.129.56.204) (Quit: noona)
[04:57:06] <nubonix> hey im trying to turn a function into a class [win32 library] but i am having some difficulties in doing so and im not sure why [pyHandle object]. The original code, my class attempt, and traceback are here https://bpa.st/YMIQ
[04:57:56] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:59:06] <PyCharm> gry, Windows
[04:59:08] <nubonix> PyCharm asyncio is lighter than threading, but it really depends on what you are doing. Threading is used for i/o operations, while async is used for non i/o
[04:59:35] <PyCharm> the reason my program needs threading or async is because one of my methods sleeps a lot
[04:59:38] <PyCharm> it's a timer
[04:59:50] <nubonix> are you waiting for the result to get back to you?
[05:00:00] <PyCharm> it keeps on sleeping for 1 second
[05:00:16] <nubonix> ok, so the delay is fixed?
[05:00:19] <PyCharm> yes
[05:00:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[05:00:31] <nubonix> probably threading then
[05:00:34] <PyCharm> so I use a thread but now I have a race condition because the code isn't synchronised or critical section
[05:00:35] <nubonix> if its i/o
[05:00:37] *** Quits: greedom (~greedom@2001:16b8:2e7a:c700:f31f:cd14:9778:9146) (Remote host closed the connection)
[05:00:46] <nubonix> use queues
[05:01:21] <nubonix> use queues as well*
[05:02:59] <AhmedAmerican> nubonix: otherwise PyCharm  has to construct whatever argument inside the function itself instead of using global variables.
[05:03:56] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[05:04:16] *** Joins: cheater (~Username@user/cheater)
[05:04:57] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[05:06:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:07:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[05:09:38] *** Quits: y1n (~y1n@84-115-64-102.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[05:10:13] *** Joins: y1n (~y1n@84-115-64-63.wifi.dynamic.surfer.at)
[05:10:44] *** Quits: camel_case (~iphone@user/iphone) (Ping timeout: 250 seconds)
[05:11:40] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-89f5-afbc-95b5-1aa0.res6.spectrum.com)
[05:14:45] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[05:17:21] <PyCharm> AhmedAmerican, what do you mean? how can start() know if it is started without a global var
[05:17:22] *** Quits: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com) (Remote host closed the connection)
[05:17:30] <PyCharm> or class variable
[05:18:16] *** Joins: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com)
[05:18:42] *** Quits: emerent (~quassel@p200300cd5703bb90ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:19:22] *** Quits: justinf210 (~justinf21@186.sub-97-43-193.myvzw.com) (Client Quit)
[05:19:29] *** Joins: emerent (~quassel@p200300cd5703bb84ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:21:36] <AhmedAmerican> PyCharm: something like that will cause a race condition. https://bpa.st/CYUA
[05:21:58] <AhmedAmerican> but in case if you've move the global dict into the function, Then you will avoid the race condtion.
[05:22:27] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[05:22:32] <PyCharm> I found out about threading.Lock
[05:22:55] *** Joins: cheater (~Username@user/cheater)
[05:23:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:23:53] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[05:25:30] <nubonix> pretty sure locks lock the entire program until the lock has completed, therefore making it sequential until it get passed that poiint
[05:25:57] <nubonix> queues are definitely a better option for what you are doing
[05:26:08] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:26:19] <nubonix> as well as what Ahmed recommended
[05:26:47] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[05:27:32] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[05:28:05] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[05:29:00] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[05:29:06] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:348b:67e6:d17d:f079) (Ping timeout: 240 seconds)
[05:29:56] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 252 seconds)
[05:31:18] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:31:22] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:32] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[05:32:44] *** Joins: jdmark (~jdmark@67.8.137.130)
[05:33:15] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:34:11] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 268 seconds)
[05:37:16] *** Joins: vlm (~vlm@user/vlm)
[05:39:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[05:39:32] <nedbat> locks are fine if you use them around as small a region as possible.  queues use locks internally, so you can't avoid them
[05:40:07] * grym wonders about threading.bosnian_bill 
[05:41:18] *** Quits: DaNeenjah (~jake@70.sub-72-106-108.myvzw.com) (Ping timeout: 252 seconds)
[05:44:02] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 252 seconds)
[05:44:39] *** Joins: mkbloke (~mkbloke@tunnel94377-pt.tunnel.tserv5.lon1.ipv6.he.net)
[05:45:25] *** Parts: gpanders (~gpanders@user/gpanders) (WeeChat 3.1)
[05:48:43] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:48:49] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[05:48:57] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[05:49:10] <PyCharm> https://bpa.st/JFEQ
[05:49:19] <PyCharm> I'm trying to place a lock but I still get the race condition
[05:49:31] *** Joins: jpe__ (~sharpergu@2001:16b8:5c94:c300:c082:2b1e:cb71:7145)
[05:50:07] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[05:50:33] *** Joins: fakemaze (~dexinmaze@105.102.89.222)
[05:51:46] *** Joins: pete443_ (~pete@user/pete443)
[05:52:29] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c08:9c00:f78e:1d53:ebe4:494f) (Ping timeout: 256 seconds)
[05:53:53] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 258 seconds)
[05:53:58] <nedbat> PyCharm: what is the race condition? For each lock, you should be able to say what shared data it protects.  What does your lock protect?
[05:54:27] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[05:55:52] *** Quits: y1n (~y1n@84-115-64-63.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[05:57:46] <PyCharm> If I call start() three times in one second, it will create 3 threads, the main thread and two other threads
[05:58:17] *** Joins: vimart (~vimart@85.255.232.192)
[05:58:33] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[05:59:02] *** Joins: heco (~redrum@user/redrum88)
[05:59:12] <PyCharm> the start() thread doesn't go into timer() only threads do
[05:59:35] *** Parts: grantwu (~grantwu@user/grantwu) (WeeChat 3.1)
[05:59:46] <PyCharm> https://bpa.st/Z6OA
[05:59:50] <nedbat> PyCharm: i don't understand your last statement
[06:00:12] <nedbat> PyCharm: do you want only one thread to run at a time?
[06:00:39] <PyCharm> yes
[06:00:56] <nedbat> PyCharm: then you should have some indication of whether a thread is running now or not.
[06:01:08] <PyCharm> I have a global called started
[06:01:15] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Quit: ZNC - http://znc.in)
[06:01:17] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:01:21] <nedbat> PyCharm: you have "started", but you are toggling that, without indicating when the thread has finished
[06:02:57] *** Joins: Snyp (~rksht@49.207.196.247)
[06:07:26] <nubonix> im using rpyc, and i am trying to screen capture a window that is out of focus on a remote[slave] computer. i wrote a program to get the screenshot of a window that is out of focus, but i dont know how to send it back to the master computer, nor continuously
[06:07:36] <nubonix> any ideas?
[06:07:42] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:07:52] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:07:54] *** Joins: pycurious (~Adium@user/pycurious)
[06:12:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:15:33] *** Joins: et_ (~et@user/et)
[06:15:44] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:15:54] *** Joins: pycurious (~Adium@user/pycurious)
[06:16:08] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[06:16:08] *** et_ is now known as et
[06:17:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[06:19:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[06:19:27] *** Joins: cheater (~Username@user/cheater)
[06:20:58] *** Joins: gggp (~textual@60.10.194.47)
[06:22:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[06:22:17] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[06:23:54] <gry> how do you install tkinter on debian gnu/linux?
[06:24:13] <gry> it does not seem to be in pip
[06:24:22] <PyCharm> it comes with python
[06:24:57] <habnabit_> PyCharm, not on debian
[06:25:05] <habnabit_> gry, apt install python3-tkinter i think
[06:25:09] <grym> probably not on debian :P
[06:25:46] <grym> gry: sudo apt install python<something>-tk
[06:26:36] <gry> thanks, tried to run the program as 'python3' instead of 'python', it finds tkinter now. next bug: https://dpaste.com/4U9KDGURA.txt PyCharm
[06:27:26] <habnabit_> gry, where did you get the source?
[06:28:18] *** SarahMalik is now known as Reinhilde
[06:28:30] <gry> https://github.com/andrewjohnroy/pomodoro-timer/blob/main/pomodoro.py
[06:30:54] <PyCharm> brb
[06:31:01] *** Parts: PyCharm (~PyCharm@user/pycharm) (Leaving)
[06:32:02] *** Joins: Roey (~Roey@user/Roey)
[06:35:05] *** Quits: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[06:35:38] *** Joins: andrews (~andrews@user/andrews)
[06:36:02] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[06:37:12] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[06:37:23] *** Joins: pnoud (~pnoud@user/pnoud)
[06:38:15] *** Joins: wyclif (~wyclif@user/wyclif)
[06:40:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:41:42] *** Joins: k000 (~k000@179.104.107.228)
[06:42:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[06:48:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:49:21] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[06:50:58] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[06:51:34] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Client Quit)
[06:53:07] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[06:56:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:56:39] *** FinnElija is now known as Guest8250
[06:56:39] *** Quits: Guest8250 (~finn_elij@user/finn-elija/x-0085643) (Killed (strontium.libera.chat (Nickname regained by services)))
[06:56:39] *** finn_elija is now known as FinnElija
[07:01:29] <humanBird> https://bpa.st/HFSQ  i'm on python 3.6
[07:01:32] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:01:42] *** Quits: NeoCore (~neocore@45.152.181.180) (Read error: Connection reset by peer)
[07:04:52] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[07:05:22] *** Joins: tims1 (~tims@203.221.207.62)
[07:06:05] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[07:08:44] *** Quits: vimart (~vimart@85.255.232.192) (Quit: WeeChat 2.8)
[07:09:35] *** Quits: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net) (Read error: Connection reset by peer)
[07:10:28] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a1ed:beda:4867:8745)
[07:16:25] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:18:34] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[07:18:49] *** Joins: totenkoph (~scythe@gateway/tor-sasl/totenkoph)
[07:19:02] *** Joins: cheater (~Username@user/cheater)
[07:20:06] *** Quits: andrews (~andrews@user/andrews) (Ping timeout: 272 seconds)
[07:21:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:22:15] <kevr> Any neat things in python to use to take a subset of values from a list with a (start, end) index without splicing?
[07:22:20] <kevr> s/splicing/slicing/
[07:22:33] <kevr> that is, I basically want a .pop() for a range
[07:22:34] <habnabit_> kevr, how about itertools.islice
[07:22:39] <kevr> :o
[07:22:47] <habnabit_> kevr, oh, you want to mutate the list? not really
[07:22:55] <kevr> habnabit_: alright.
[07:23:17] <kevr> habnabit_: Well, it doesn't _have_ to mutate, I just want to take some values in a range and return the sliced out list without performing the two separate ops
[07:23:18] <Repiphany> kevr: https://docs.python.org/3/library/operator.html#operator.itemgetter
[07:23:56] <habnabit_> kevr, i'm not sure what two separate operations you mean
[07:24:32] <kevr> habnabit_: First, I need to retrieve the values: L[start:end], then I need to trim L to take those values away, L = L[end + 1:]
[07:24:52] <habnabit_> kevr, i thought you said you didn't want to mutate the list
[07:25:41] <kevr> habnabit_: The mutation word brings complication here. When you say mutate, I think of "changing a list in-place." while that is what i do want to do, i understand that this isn't really viable for certain immutable things in python, like strings, and list doesn't provide those mutations off the bat as far as i know.
[07:25:48] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 252 seconds)
[07:25:50] <kevr> L = L[end + 1:] does not seem like a mutation to me
[07:26:07] <kevr> because it's just taking a subset of L and assigning the new expression.
[07:26:50] <kevr> so that original L is not mutating in place.
[07:27:26] <kevr> but, yes, i basically want to perform a mutation in some way.
[07:27:38] <Repiphany> del L[start:end]
[07:27:42] <kevr> i would be fine to settle with a copy. i'm just trying to really reduce the two statements to one.
[07:27:47] <kevr> Repiphany: oh?
[07:27:49] <kevr> :O
[07:28:13] <kevr> Repiphany: Nice! TIL. Thanks!
[07:28:47] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[07:28:57] *** Joins: srilyk (~wayne@user/waynew)
[07:32:09] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:32:24] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[07:33:21] *** Quits: k000 (~k000@179.104.107.228) (Remote host closed the connection)
[07:33:46] *** Joins: k000 (~k000@179.104.107.228)
[07:35:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:36:28] *** Joins: pabogr (uid27497@id-27497.tinside.irccloud.com)
[07:36:57] *** Joins: luejames (~luejames@72.252.198.112)
[07:40:02] *** Joins: Nyeogmi (~Nyeogmi@2601:645:8700:bea0:bcb8:b9ef:af27:7b7c)
[07:40:06] *** Quits: luejames (~luejames@72.252.198.112) (Client Quit)
[07:40:45] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[07:41:12] *** Quits: Nyeogmi (~Nyeogmi@2601:645:8700:bea0:bcb8:b9ef:af27:7b7c) (Changing host)
[07:41:12] *** Joins: Nyeogmi (~Nyeogmi@user/nyeogmi)
[07:42:19] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[07:42:26] *** Joins: andrews (~andrews@user/andrews)
[07:43:36] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[07:45:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[07:47:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[07:49:36] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[07:49:44] *** Joins: waynew (~wayne@user/waynew)
[07:51:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[07:52:20] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[07:52:55] *** Joins: gggp (~textual@106.37.74.209)
[07:56:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:56:51] *** Joins: KevinX (~KevinX@94.140.11.99)
[07:57:20] *** Quits: gggp (~textual@106.37.74.209) (Ping timeout: 252 seconds)
[07:58:34] *** Joins: gggp (~textual@60.10.194.47)
[08:00:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:00:46] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:02:03] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[08:03:17] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[08:04:14] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:04:29] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[08:04:56] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[08:05:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[08:05:42] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[08:06:56] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[08:08:09] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[08:08:35] *** Quits: c4017_ (~c4017@S010664777dab66f3.vf.shawcable.net) (Read error: Connection reset by peer)
[08:09:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:09:00] *** Quits: jabberwock (~jessy@user/jabberwock) (Remote host closed the connection)
[08:09:21] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[08:09:52] *** Joins: jabberwock (~jessy@user/jabberwock)
[08:10:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[08:10:17] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:10:34] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[08:11:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:11:38] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[08:12:50] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:14:10] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b8b1:7bef:6923:6942) (Quit: Leaving)
[08:14:11] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 258 seconds)
[08:15:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:17:09] *** Joins: plancksconstant (~plancksco@103.98.128.96)
[08:17:44] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 272 seconds)
[08:18:21] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:19:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:19:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:20:42] *** Quits: k000 (~k000@179.104.107.228) (Remote host closed the connection)
[08:21:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:22:41] *** Joins: k000 (~k000@179.104.107.228)
[08:23:32] *** Quits: plancksconstant (~plancksco@103.98.128.96) (Quit: Client closed)
[08:24:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:24:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[08:25:56] *** Quits: MikZyth (~MikZyth@188.65.243.49) (Ping timeout: 252 seconds)
[08:26:01] *** Quits: k000 (~k000@179.104.107.228) (Read error: Connection reset by peer)
[08:26:03] *** Joins: gggp (~textual@60.10.194.47)
[08:26:12] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:26:15] *** Quits: gggp (~textual@60.10.194.47) (Client Quit)
[08:30:39] *** Joins: uKi` (~vicorp@user/uki/x-9954492)
[08:31:15] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:31:40] *** Quits: fstd (~fstd@xdsl-84-44-233-102.nc.de) (Ping timeout: 272 seconds)
[08:32:23] *** Quits: uKi` (~vicorp@user/uki/x-9954492) (Quit: Wᴷaͦlͨkᴴeͥr)
[08:34:13] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-400d-41e9-4425-71b4.res6.spectrum.com) (Read error: Connection reset by peer)
[08:34:20] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[08:34:27] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[08:34:33] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 256 seconds)
[08:34:54] *** Joins: cheater (~Username@user/cheater)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:15] *** Joins: gggp (~textual@36.112.135.215)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:31] <creese> I'm using pytest to debug a command-line tool written with click. The fails because the result object contains an error. However, it doesn't tell me the line number where the exception occurs. It just says, `<Result AttributeError("'NoneType' object has no attribute 'groups'")>` which I'm pretty sure is related to a regular expression, but it could
[08:37:31] <creese> be in any number of places. Is it possible to see the raw exception as it occurs or at least get the line number? Pytest and/or Click seem to swallow this up.
[08:38:05] *** Abrax is now known as |_
[08:38:13] *** Joins: pnoud (~pnoud@user/pnoud)
[08:38:13] *** |_ is now known as |__
[08:38:14] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[08:38:17] <yitz> Any recommended tools/libraries for working with Google Calendar?
[08:38:48] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[08:39:38] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[08:40:36] *** Quits: gggp (~textual@36.112.135.215) (Ping timeout: 252 seconds)
[08:40:51] *** Parts: |__ (~Abrax@user/abrax) ()
[08:41:14] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[08:41:19] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[08:41:46] *** Joins: gggp (~textual@60.10.194.47)
[08:41:50] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:43:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[08:43:20] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:46:11] *** Quits: Snyp (~rksht@49.207.196.247) (Quit: WeeChat 3.2)
[08:46:27] *** Joins: Abrax (~Abrax@user/abrax)
[08:48:20] *** Abrax is now known as ___
[08:48:23] *** ___ is now known as group
[08:48:30] *** group is now known as ___
[08:48:51] *** ___ is now known as __
[08:49:16] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-296d-f1c1-584d-ae36.res6.spectrum.com)
[08:49:37] <BrenBarn> Pytest should show you the whole traceback usually
[08:49:47] <BrenBarn> not sure if click interferes somehow
[08:49:56] *** Quits: __ (~Abrax@user/abrax) (Client Quit)
[08:50:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:52:19] *** Joins: Abrax (~Abrax@user/abrax)
[08:56:56] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-296d-f1c1-584d-ae36.res6.spectrum.com) (Quit: Leaving.)
[08:59:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[08:59:44] *** Joins: cheater (~Username@user/cheater)
[09:00:23] <creese> BrenBarn: I think it's Click.
[09:04:03] <tpr> creese: have you tried to use -v or -vv or -vvv to see if you get more output that way?
[09:06:31] *** Joins: frost (~frost@59.71.241.179)
[09:09:20] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:09:31] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Ping timeout: 246 seconds)
[09:10:04] *** Quits: bertiger (~bertiger@user/bertiger) (Ping timeout: 272 seconds)
[09:13:59] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[09:14:26] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:15:00] *** Joins: node1 (~node1@user/node1)
[09:16:42] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a1ed:beda:4867:8745) (Read error: Connection reset by peer)
[09:18:41] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[09:18:58] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[09:19:10] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[09:19:26] *** Joins: cheater (~Username@user/cheater)
[09:23:52] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[09:24:14] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[09:24:19] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[09:25:06] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:f581:e826:f27a:d455)
[09:25:21] *** Joins: gggp (~textual@36.112.135.215)
[09:26:00] *** Quits: gggp (~textual@36.112.135.215) (Client Quit)
[09:26:56] *** Joins: QuantumAtom (~marc@2600:1700:1f30:1540:e267:4233:906:79c2)
[09:27:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[09:27:52] *** Joins: cheater (~Username@user/cheater)
[09:28:19] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:28:30] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[09:28:51] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:252a:1b39:e806:69c8)
[09:29:30] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:f581:e826:f27a:d455) (Ping timeout: 240 seconds)
[09:29:46] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[09:29:59] *** Joins: zaquest (~notzaques@5.128.210.178)
[09:30:04] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:31:35] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[09:31:53] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[09:31:54] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:32:19] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:34:19] *** Joins: cjb (~cjb@user/cjb)
[09:34:24] *** Quits: QuantumAtom (~marc@2600:1700:1f30:1540:e267:4233:906:79c2) (Quit: Leaving)
[09:35:08] *** Quits: cjb (~cjb@user/cjb) (Client Quit)
[09:37:26] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[09:40:31] *** Joins: bpalmer (~user@user/bpalmer)
[09:40:52] *** Joins: white_shadow (~brey@59.91.246.229)
[09:41:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:45:46] *** Quits: white_shadow (~brey@59.91.246.229) (Ping timeout: 272 seconds)
[09:46:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[09:47:21] *** Joins: jaggz (~jaggz@user/jaggz)
[09:47:27] <jaggz> go back to freenode!
[09:47:41] *** Joins: frost (~frost@59.71.241.179)
[09:47:50] <jaggz> ok srsly.. with jupyter, if displaying an audio wave (like with librosa.display.waveplot), how can I label it?  Perhaps with vertical zones?
[09:48:16] <jaggz> I'm doing audio identification and want to have a visualization of what's making noise at each point, when this neural net classifies it
[09:48:19] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[09:48:29] *** Joins: node1 (~node1@user/node1)
[09:48:29] <jaggz> (like, color coding the areas would work)
[09:50:06] <nubonix> so im trying to take a screenshot of a window that is not in focus and i have done so, but instead of saving the screenshot to the disk, i want the function to return the image, however, im having some difficulties https://bpa.st/2ZQQ
[09:50:50] <jaggz> someone asked here but .. I don't think they got an answer https://stackoverflow.com/questions/54967388/color-librosa-waveplot
[09:51:20] *** Joins: jtck (~jtck@222.164.13.173)
[09:51:32] <jaggz> ooh https://stackoverflow.com/questions/65680166/how-can-i-add-rectangles-and-labels-above-an-audio-timeseries-plot
[09:52:06] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:52:41] <Gustavo6046> Is the PyPI compatible with Cargo.toml or package.json?
[09:52:58] <BrenBarn> creese: Did you look at this?  https://click.palletsprojects.com/en/8.0.x/exceptions/
[09:53:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:53:19] <Gustavo6046> Hm, maybe it could be the other way around - Cargo.toml / package.json specifying tooling to produce tarballs and the like that are PyPI compatible :o
[09:53:27] <BrenBarn> I mean, if I were using pytest to test a CLI I probably wouldn't actually be testing the click wrapper, but directly calling whatever functions are getting called by my command
[09:55:09] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:55:17] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[09:55:33] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[09:58:57] <creese> BrenBarn: I'm testing both.
[09:59:47] <creese> The CLI currently calls about four functions. I can certainly create one to stand in for those.
[10:00:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:03:23] *** Quits: schumaml (~schumaml@p57b7e4d4.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[10:03:51] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[10:05:07] *** Joins: schumaml (~schumaml@p200300e2ef04630053c1821a43d17d29.dip0.t-ipconnect.de)
[10:05:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:06:31] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Read error: Connection reset by peer)
[10:06:50] <BrenBarn> You could try using the `invoke` thing described there
[10:07:01] *** Joins: chaosite (~chaosite@user/chaosite)
[10:07:26] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[10:09:40] *** Joins: NeilRG (~NeilRG@204.48.95.26)
[10:10:34] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[10:11:32] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[10:13:06] *** Joins: iflema (~ian@user/iflema)
[10:14:42] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[10:17:02] *** Quits: LiftLeft (~LiftLeft@154.21.28.43) (Ping timeout: 252 seconds)
[10:17:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[10:18:19] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[10:20:31] *** Quits: meti (~meti@user/meti) (Quit: ZNC - http://znc.in)
[10:21:04] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[10:21:06] *** Joins: kona__ (~kona@d-162-223-183-61.pae.cpe.atlanticbb.net)
[10:23:25] *** Joins: meti (~meti@user/meti)
[10:24:15] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Quit: Client closed)
[10:29:20] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[10:30:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[10:30:26] *** Joins: cheater (~Username@user/cheater)
[10:30:31] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[10:32:30] *** Joins: gggp (~textual@60.10.194.47)
[10:33:08] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[10:33:31] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:34:19] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:36:26] *** Joins: upsala (~zcb@185.213.155.160)
[10:36:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:37:42] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[10:38:09] *** Joins: gggp (~textual@60.10.194.47)
[10:39:04] *** Joins: pnoud (~pnoud@user/pnoud)
[10:40:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:40:34] *** Joins: meti_ (~meti@user/meti)
[10:41:04] *** Quits: meti (~meti@user/meti) (Killed (NickServ (GHOST command used by meti_)))
[10:41:11] *** meti_ is now known as meti
[10:42:08] *** Joins: mokulus (~mokulus@user/mokulus)
[10:44:10] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:44:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[10:44:50] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[10:46:25] *** Quits: pabogr (uid27497@id-27497.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:38] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:08] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 258 seconds)
[10:47:19] *** Joins: seednode (~seednode@user/seednode)
[10:47:47] <andrews> https://github.com/andrewjohnroy/pomodoro-timer I finished my pomodoro timer GIU
[10:47:50] <andrews> GUY
[10:47:52] <andrews> GUI
[10:47:57] <andrews> no more race conditions
[10:48:16] <andrews> basically the thread gets killed when the stop button is pressed
[10:51:16] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[10:51:35] *** Joins: sgn (~sgn@user/sgn)
[10:51:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:52:54] *** Joins: gareppa (~gareppa@user/gareppa)
[10:52:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:53:14] *** Joins: LiftLeft (~LiftLeft@212.102.59.158)
[10:53:27] *** Joins: gggp (~textual@60.10.194.47)
[10:53:32] *** Quits: fakemaze (~dexinmaze@105.102.89.222) (Ping timeout: 272 seconds)
[10:54:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:57:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[10:57:43] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:59:49] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-89f5-afbc-95b5-1aa0.res6.spectrum.com) (Quit: Client closed)
[10:59:56] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:59:57] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:01:29] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[11:04:37] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[11:05:09] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[11:06:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:06:37] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[11:06:55] *** Joins: gggp (~textual@60.10.194.47)
[11:07:34] <no_gravity> Good Morning! Why does argparse add_argument('--something', required=False) still requires the argument "--something" to be passed and complains otherwise?
[11:08:18] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[11:11:52] <BrenBarn> Hmmm, can you give an example?  I don't see that behavior
[11:12:41] <no_gravity> Uhh.. you are right. I tried this:
[11:12:52] <no_gravity> add_argument('--something', default='hello', required=False)
[11:13:25] <no_gravity> That makes it even more confusing that it wants a value. As it is not required and has a default :)
[11:14:26] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[11:16:51] *** Joins: rsx (~dummy@ppp-188-174-156-63.dynamic.mnet-online.de)
[11:16:55] <mokulus> please post full example
[11:16:56] *** Joins: gggp (~textual@36.112.134.194)
[11:18:31] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:20:11] <mokulus> I've tried on simple example and it works correctly
[11:21:24] <no_gravity> Hmm.. maybe I was wrong. Sorry. Should not have posted here so quick.
[11:21:53] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[11:22:11] <mokulus> it's fine. maybe something else was wrong?
[11:22:23] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[11:22:36] *** Quits: gggp (~textual@36.112.134.194) (Ping timeout: 268 seconds)
[11:24:08] *** Joins: white_shadow (~brey@59.91.246.229)
[11:24:45] <no_gravity> Yeah, but now I am much further down the refactoring already :)
[11:25:17] <white_shadow> anyone know a way to decrypt .piiq files?
[11:27:44] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:27:51] *** Joins: a7rs (~a7rs@86.10.115.139)
[11:33:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:34:17] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[11:34:24] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:36:19] *** Joins: Pickchea (~private@user/pickchea)
[11:37:56] *** Quits: white_shadow (~brey@59.91.246.229) (Quit: Leaving)
[11:39:25] *** Joins: susam (~susam@user/susam)
[11:39:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[11:41:32] *** Parts: susam (~susam@user/susam) ()
[11:43:52] *** Joins: bomzh1018 (~user@176.52.32.38)
[11:50:59] *** Joins: y1n (~y1n@84-115-64-57.wifi.dynamic.surfer.at)
[11:52:09] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[11:52:10] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[11:53:24] *** Quits: bomzh1018 (~user@176.52.32.38) (Quit: Leaving.)
[11:57:50] *** Joins: bomzh1018 (~user@176.52.33.203)
[11:57:52] *** Joins: gggp (~textual@60.10.194.47)
[11:57:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:57:57] *** Parts: bomzh1018 (~user@176.52.33.203) ()
[11:57:59] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[11:58:05] <fluter> hi
[11:58:07] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-28c3-0bd6-827b-0433.res6.spectrum.com)
[11:58:15] <no_gravity> OMG it is *fluter*!
[11:58:20] <fluter> how can i let setup.find_packages ignore namespace packages?
[11:58:27] <fluter> no_gravity: ?? what??
[11:58:33] *** Joins: cheater (~Username@user/cheater)
[11:58:46] <fluter> OMG here comes no_gravity
[11:58:49] <no_gravity> fluter: What what? Which part of "OMG it is fluter" don't you understand?
[11:58:49] <fluter> but do i know you?
[11:59:06] <fluter> no_gravity: i don't know you, you are talking to the wrong person
[11:59:18] <no_gravity> fluter: Ok, I will stop talking to you then.
[12:00:23] <no_gravity> fluter: But I can still talk to the rest of the channel and celebrate that you are here!
[12:00:34] <no_gravity> *FLUTER* is here! Hurray!
[12:00:39] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:f581:e826:f27a:d455)
[12:00:48] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[12:00:48] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[12:01:23] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:02:18] <fluter> again, I DON"T KNOW YOU no_gravity
[12:02:29] <fluter> Hurray no_gravity is LOST!
[12:02:46] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[12:03:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[12:03:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[12:03:54] *** Joins: cheater (~Username@user/cheater)
[12:04:08] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:05:21] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:f581:e826:f27a:d455) (Ping timeout: 256 seconds)
[12:06:36] *** Joins: rendar (~rendar@user/rendar)
[12:08:45] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[12:09:14] *** Joins: o (~niko@libera/staff/niko)
[12:09:17] *** Joins: bomzh1018 (~user@176.52.33.35)
[12:09:19] *** Parts: bomzh1018 (~user@176.52.33.35) ()
[12:09:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:09:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:10:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:10:15] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[12:10:34] *** Joins: gggp (~textual@36.112.135.215)
[12:12:09] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[12:12:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[12:13:36] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:15:30] *** Quits: andrews (~andrews@user/andrews) (Quit: Leaving)
[12:15:54] *** Joins: bomzh1018 (~user@176.52.32.137)
[12:18:27] *** Quits: NeilRG (~NeilRG@204.48.95.26) (Remote host closed the connection)
[12:18:36] *** Quits: bomzh1018 (~user@176.52.32.137) (Client Quit)
[12:19:08] *** Quits: gggp (~textual@36.112.135.215) (Ping timeout: 252 seconds)
[12:19:26] *** Joins: gggp (~textual@60.10.194.47)
[12:20:57] *** Joins: bomzh1018 (~user@176.52.32.137)
[12:23:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:24:06] *** Quits: a7rs (~a7rs@86.10.115.139) (Quit: WeeChat 3.2)
[12:27:16] *** Joins: NeilRG (~NeilRG@204.48.95.26)
[12:33:36] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[12:34:34] *** Joins: gggp (~textual@60.10.194.47)
[12:36:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:38:45] *** Joins: greedom (~greedom@2001:16b8:2ef8:ad00:46b9:e27f:34a0:c112)
[12:39:43] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[12:39:54] *** Joins: pnoud (~pnoud@user/pnoud)
[12:40:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:40:46] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 252 seconds)
[12:42:30] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[12:43:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:43:30] <The-Compiler> huh :D
[12:44:06] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Client Quit)
[12:44:31] *** Joins: dhanesh (~Dhanesh@117.195.18.94)
[12:44:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[12:45:09] *** Joins: gggp (~textual@60.10.194.47)
[12:47:44] *** Joins: tspng (~tspng@2a02:168:a1a1:1:7d8f:93a3:8d7c:2cd1)
[12:48:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:49:37] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:50:07] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:39] *** Joins: magla (~gelignite@55d4825a.access.ecotel.net)
[12:51:20] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[12:51:20] *** Lord_of_Life_ is now known as Lord_of_Life
[12:51:46] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[12:52:48] *** Quits: totenkoph (~scythe@gateway/tor-sasl/totenkoph) (Ping timeout: 244 seconds)
[12:54:29] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[12:55:08] *** Quits: y1n (~y1n@84-115-64-57.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[12:55:12] *** Joins: Auron (Auron956@user/auron)
[12:59:52] *** Quits: NeilRG (~NeilRG@204.48.95.26) (Read error: Connection reset by peer)
[12:59:57] *** Joins: NeilRG_ (~NeilRG@192.222.196.111)
[13:01:00] *** Joins: Adoi (~Adoi@user/adoi)
[13:03:48] *** Joins: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at)
[13:04:25] *** Joins: cheater1__ (~Username@user/cheater)
[13:04:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[13:04:41] *** cheater1__ is now known as cheater
[13:05:30] *** Quits: audiocat (~audio@2603-8081-1800-6a65-82d4-8900-8a7b-f45b.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:05:54] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[13:06:39] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-28c3-0bd6-827b-0433.res6.spectrum.com) (Quit: Leaving.)
[13:09:57] *** Joins: OPK (~OPK@user/opk)
[13:10:12] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:15:04] *** Quits: bomzh1018 (~user@176.52.32.137) (Quit: Leaving.)
[13:17:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[13:18:21] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[13:19:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:24:49] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:27:22] *** Joins: pycode (~pycode@2001:b07:5d28:551:f483:aa78:4121:99a)
[13:30:21] *** Quits: Nyeogmi (~Nyeogmi@user/nyeogmi) (Ping timeout: 256 seconds)
[13:32:07] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:33:08] *** Quits: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad) (Ping timeout: 244 seconds)
[13:34:45] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[13:39:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[13:39:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:46] *** Joins: HaMsTeRs (~mx@49.130.58.67)
[13:42:55] *** Quits: HaMsTeRs (~mx@49.130.58.67) (Client Quit)
[13:43:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:43:54] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[13:44:16] *** Joins: jazzy (~jaziz@2600:380:c133:bd59:9922:d194:4a54:84dc)
[13:44:31] *** Joins: cheater (~Username@user/cheater)
[13:45:02] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[13:45:22] *** Joins: The-Compiler (~compiler@2001:41d0:2:3b68::1)
[13:45:35] *** Quits: jvalleroy (~quassel@user/jvalleroy) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:47:29] *** Joins: jvalleroy (~quassel@user/jvalleroy)
[13:49:49] *** Joins: dvx (~dvx@185.63.97.64)
[13:50:24] *** Joins: ntdll (~ntdll@user/ntdll)
[13:51:10] *** Joins: amogorkon (~amogorkon@port-92-196-85-82.dynamic.as20676.net)
[13:52:13] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Ping timeout: 244 seconds)
[13:52:39] *** Joins: HaMsTeRs (~mx@14-0-158-084.static.pccw-hkt.com)
[13:53:13] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:53:30] <amogorkon> what's the easiest way to coerce types of keys and values in a dict loaded from json? i'm thinking pydantic, but not sure what's the best approach there
[13:54:18] *** Joins: Schnouki (~schnouki@user/schnouki)
[13:55:23] *** Quits: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[13:55:43] *** Joins: wyclif (~wyclif@user/wyclif)
[13:55:46] *** Joins: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at)
[13:56:01] *** Quits: HaMsTeRs (~mx@14-0-158-084.static.pccw-hkt.com) (Client Quit)
[13:58:05] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[13:58:18] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:00:18] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 240 seconds)
[14:00:20] *** Quits: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[14:00:37] *** Joins: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at)
[14:00:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:02:50] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:02:52] *** Joins: doev (~doev@p4ff44beb.dip0.t-ipconnect.de)
[14:03:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:04:53] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a50c-2277-1864-ff3d.res6.spectrum.com)
[14:09:06] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a50c-2277-1864-ff3d.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:09:25] *** Quits: NeilRG_ (~NeilRG@192.222.196.111) (Remote host closed the connection)
[14:10:59] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[14:12:04] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:12:07] *** Joins: wyclif (~wyclif@user/wyclif)
[14:13:17] *** Joins: Velika (~R-One@gyore-net.one)
[14:15:02] *** Joins: rhax (~yannick@user/rhax)
[14:15:12] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:5760:9bdb:910c:2812)
[14:16:23] *** Joins: jamesmartinez (~keinbock@37.44.247.165)
[14:17:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:18:36] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[14:21:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[14:22:22] *** Joins: chaosite (~chaosite@user/chaosite)
[14:22:41] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:22:46] *** Quits: doev (~doev@p4ff44beb.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[14:25:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:29:54] *** Joins: wyclif (~wyclif@user/wyclif)
[14:32:16] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[14:33:08] *** Joins: dme86 (~dan@user/dan86)
[14:34:51] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:34:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[14:35:00] *** Joins: gggp (~textual@60.10.194.47)
[14:35:00] *** Joins: thiras (~thiras@user/thiras)
[14:35:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:35:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:36:14] *** Joins: __that__ (~Guest15@2a00:23a8:8c5:cf00:2c66:44d7:eac9:128e)
[14:36:16] <__that__> Hi all
[14:36:39] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Ping timeout: 256 seconds)
[14:38:42] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:39:10] <__that__> When you have a bunch of async tasks that are sharing a aiohttp ClientSession to take advantage of HTTP pool connections to avoid excessive round trips, are those coroutines assigned their own socket? Is the socket somehow shared among them? Or does it follow the same principle of Threads and try to avoid sharing sockets? Actually who decide that?
[14:39:10] <__that__> Is the. underlying OS or the Python interpreter? I am not clear with this concept
[14:39:16] *** Joins: xsperry (~as@user/xsperry)
[14:39:41] *** Joins: armistace (~armistace@114-198-60-53.dyn.iinet.net.au)
[14:39:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:40:24] <bjs> __that__: the ClientSession object has the socket
[14:40:44] *** Joins: pnoud (~pnoud@user/pnoud)
[14:41:43] <__that__> bsj as is the ClientSession object assigning one socket per coroutine run?
[14:41:48] <__that__> *bjs
[14:41:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[14:42:07] <bjs> __that__: the ClientSession knows nothing about "coroutines"
[14:43:12] <__that__> that was badly expressed.  A coroutine would use the Client session object to access the other end. The socket that is given is unique to that coroutine?
[14:44:42] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 272 seconds)
[14:45:26] <bjs> __that__: no, the ClientSession object has the sockets on it and the ClientSession object doesn't know anything about your coroutines
[14:45:29] *** Quits: armistace (~armistace@114-198-60-53.dyn.iinet.net.au) (Ping timeout: 268 seconds)
[14:45:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[14:47:31] <__that__> bjs, I understand that but I guess if a coroutine is actually using socket x do send data to the other end and it has been sent to wait and another coroutine comes now into picture having to use the socket provided by the Client Session object, the latter would be provided with a different socket to the latter?
[14:47:57] <bjs> __that__: why would it use a different socket?
[14:47:59] *** Joins: wyclif (~wyclif@user/wyclif)
[14:48:15] *** Joins: waynew (~wayne@user/waynew)
[14:48:38] <__that__> Isn't sharing sockets generally a bad idea when using threads for example? I am trying to understand if that principle applies to asynchronous programming too
[14:49:28] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 252 seconds)
[14:49:37] <bjs> __that__: where are the threads here?
[14:49:51] <__that__> I have two versions of the a snippet based on threads and async. The former completes task all the time without a problem while the latter always hit at some point a TimeOut exception. I just can get it working with retries. I wonder what the difference could be and if there is something conceptual that I don't understand
[14:50:34] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[14:51:22] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[14:51:52] <bjs> __that__: there can be so many reasons why that might happen,  and it's almost always due to subtle differences in how you set things up:  not quite accessing the same url or passing the same parameters,  subtly different timeouts, etc
[14:51:56] <__that__> I am not saying that coroutines use threads. I am just asking whether they follow similar principles when dealing with sockets. I have got the feeling that in the async version the socket is share and somehow one of the tasks block that socket, making the rest to time out. Once a timeout occurs within an event loop, all the tasks within would time
[14:51:57] <__that__> out. Once the loop is closed and retried they carry on running as usual
[14:52:31] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[14:52:43] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[14:52:48] <bjs> __that__: I mean the point of a ClientSession object is to be shared between lots of coroutines and to share connections
[14:52:56] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[14:53:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:55:04] <__that__> So my diagnose for what is happening to me is that somehow the async version has less margin for the timeouts. Once a timeout occurs, the socket is blocked for the rest, making them to time out too. I have tried to increased the timeout but still the problem persists. So I wonder what the difference is.
[14:55:21] *** Quits: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[14:55:43] *** Joins: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at)
[14:56:27] *** Joins: brumla (~brumla@cst-prg-22-188.cust.vodafone.cz)
[14:57:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:57:55] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[14:58:18] <bjs> __that__: isn't that something that'd be easy to check
[14:59:11] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[14:59:38] <__that__> bjs, how do I do that? All I can see is that when one task times out, all the rest within the event loop do too. I'd like to know why in the first place the first task time out and why it impacts the rest.
[14:59:47] *** Joins: Cyp (~cyp@213.237.82.162)
[14:59:54] <__that__> How would you check that please?
[15:00:23] *** Joins: BlueShark (sid10311@user/blueshark)
[15:00:58] <BlueShark> Are pyproject.toml and setup.cfg both required usually for automatic releases via CI/CD?
[15:01:11] <BlueShark> I'm using Github Actions if it matters.
[15:01:40] <bjs> __that__: I mean,  make a little test that concurrently accesses things with some timeouts and see that just because one timed out doesn't mean the others did too
[15:02:09] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[15:02:54] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[15:03:18] *** Quits: tspng (~tspng@2a02:168:a1a1:1:7d8f:93a3:8d7c:2cd1) (Remote host closed the connection)
[15:03:58] <no_gravity> Is there a way to make DictReader read a whole file and return an array of the rows?
[15:04:01] *** Quits: Cyp_ (~cyp@192038130124.mbb.telenor.dk) (Ping timeout: 265 seconds)
[15:04:36] <bjs> no_gravity: I assume you mean a csv.DictReader and I assume you mean a list
[15:04:43] <bjs> no_gravity: in that case,  list(csv.DictReader(...))
[15:04:48] <no_gravity> bjs: Yes and yes
[15:05:28] *** Joins: Crassus (~Crassus@user/crassus)
[15:05:34] <no_gravity> bjs: Interesting. Are you sure this works?
[15:05:39] <bjs> no_gravity: why do you ask
[15:05:48] <no_gravity> I will try it ...
[15:05:59] <bjs> no_gravity: https://docs.python.org/3/library/csv.html#csv.DictReader  the docs has `for row in reader: ...`
[15:06:04] <bjs> so...
[15:06:11] <bjs> yes it should work
[15:06:20] *** Joins: wyclif (~wyclif@user/wyclif)
[15:06:51] <no_gravity> Ha, seems to work indeed!
[15:06:53] <no_gravity> Thanks!
[15:09:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[15:10:20] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[15:11:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:11:56] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[15:13:20] *** Joins: dme86 (~dan@user/dan86)
[15:14:01] *** Joins: gggp (~textual@60.10.194.47)
[15:14:14] *** jpe__ is now known as sharperguy
[15:15:04] *** Joins: entuland (~entuland@user/entuland)
[15:16:49] <Marvin> Hi! is this a place to ask pylatex questions? I have http://lutolf.vserver.nimag.net/files/pylatex-help.pdf and http://lutolf.vserver.nimag.net/files/pylatex-help.py
[15:18:15] *** Quits: gggp (~textual@60.10.194.47) (Remote host closed the connection)
[15:19:47] *** Joins: gggp (~textual@60.10.23.171)
[15:19:59] *** Joins: fdsfew (~fdsfew@178.49.152.151)
[15:20:39] <fdsfew> I tried to use map function to create a list, but I cannot use it again? why?
[15:20:50] <fdsfew> (it=list)
[15:21:34] <bjs> fdsfew: because map doesn't return a list
[15:22:11] <fdsfew> so what is the purpose of it?
[15:22:27] <bjs> fdsfew: you can turn it into a list: `new_list = list(map(f, old_list))` or you can just use a list comprehension `new_list = [f(x) for x in old_list]`
[15:22:37] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[15:22:47] <bjs> fdsfew: a lot of the time you don't need a list, you just want to loop over it once without storing a whole new list in memory
[15:23:06] *** Joins: wyclif (~wyclif@user/wyclif)
[15:25:54] *** Quits: pycode (~pycode@2001:b07:5d28:551:f483:aa78:4121:99a) (Ping timeout: 240 seconds)
[15:28:15] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[15:28:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:29:11] *** Quits: gggp (~textual@60.10.23.171) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:29:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:30:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:32:11] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:33:59] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17)
[15:35:46] *** Joins: Pickchea (~private@user/pickchea)
[15:35:58] *** Joins: Schnouki (~schnouki@user/schnouki)
[15:37:17] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:37:46] *** Joins: mexen (uid495612@user/mexen)
[15:38:52] *** Joins: wyclif (~wyclif@user/wyclif)
[15:40:23] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 268 seconds)
[15:40:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[15:41:05] *** Joins: yates_home (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[15:42:02] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[15:43:45] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:44:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:44:44] *** Joins: tspng (~tspng@2a02:168:a1a1:1:d950:a73f:2eaf:6701)
[15:45:22] *** Quits: brumla (~brumla@cst-prg-22-188.cust.vodafone.cz) (Ping timeout: 246 seconds)
[15:47:04] *** Joins: pabogr (uid27497@id-27497.tinside.irccloud.com)
[15:50:00] *** Joins: frostschutz (~frostschu@2a01:c23:804b:7800:838d:9dc5:8f51:a644)
[15:51:06] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Ping timeout: 240 seconds)
[15:51:27] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[15:54:06] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[15:54:53] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[15:55:06] *** Quits: y1n (~y1n@84-115-64-12.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:55:55] *** Joins: wyclif (~wyclif@user/wyclif)
[15:56:08] *** Joins: y1n (~y1n@84-115-64-226.wifi.dynamic.surfer.at)
[15:57:06] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 240 seconds)
[15:59:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:00:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:01:48] *** Quits: __that__ (~Guest15@2a00:23a8:8c5:cf00:2c66:44d7:eac9:128e) (Quit: Client closed)
[16:05:00] *** Quits: y1n (~y1n@84-115-64-226.wifi.dynamic.surfer.at) (Remote host closed the connection)
[16:05:08] *** Joins: y1n (~y1n@84-115-64-226.wifi.dynamic.surfer.at)
[16:06:22] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 265 seconds)
[16:06:23] *** Quits: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ohuwuteu)
[16:07:08] *** Joins: dagb (~dagb@241.92-220-211.customer.lyse.net)
[16:08:23] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:08:50] *** Joins: waynew (~wayne@user/waynew)
[16:10:34] *** Quits: noctavian_ (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[16:11:23] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[16:12:30] *** Joins: wyclif (~wyclif@user/wyclif)
[16:13:03] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[16:13:26] *** Joins: ohuwuteu (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:13:40] <dba> I am trying to do some conditional formatting with xlswriter but the format2 does not get executed. https://bpa.st/PNXA
[16:14:14] <dba> the end result get formated with format3 and format1 but format2 does not work
[16:14:28] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:14:53] <nedbat> dba: format2 is using a string value, maybe the value is different than you expect?
[16:15:55] <dba> nedbat, do you mean the value that come from the python code, it is string as well
[16:16:00] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[16:16:52] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:16:59] <tspng> dba: see, https://xlsxwriter.readthedocs.io/working_with_colors.html#colors
[16:17:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:17:59] *** Joins: bikeshedder (~bikeshedd@2001:a62:15f0:e501:f02b:9c99:7ef1:aff5)
[16:18:01] <bikeshedder> r
[16:18:11] <bikeshedder> whops... sorry... this was not meant to land here.
[16:18:51] *** Quits: Nact (~l@host-85-27-123-83.dynamic.voo.be) (Quit: Konversation terminated!)
[16:19:04] <dba> tspng, the format1 and format3 is working but format2 does not.
[16:20:39] <bjs> dba: what do you mean by "does not work".  Maybe it's just that nothing matches the condition you have
[16:21:30] *** Quits: jazzy (~jaziz@2600:380:c133:bd59:9922:d194:4a54:84dc) (Ping timeout: 240 seconds)
[16:22:01] <fdsfew> dba: try =
[16:22:29] <nedbat> dba: I like fdsfew's idea
[16:22:36] <grawity> what results do you get though
[16:22:44] <grawity> is the cell formatted using format1 or format3, or is it not formatted at all?
[16:22:52] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[16:22:55] <jinsun> yeah in excel it was single equals for equality check I think
[16:24:11] <dba> bjs, as you can see in the code the for condition is to format all the cells that has value > 1 with red (but it is instead formating strings too) and second condition is to format cells with value < 0 with yellow  ( works fine) the third condition is to format all cell with value that equal to Ok in green but the cell with Ok values does not get formated with green but red instead
[16:25:27] <dba> but for some reason with start with formatting string then number all formatting condition worked
[16:26:56] <bjs> dba: but isn't that what Excel would do?  if you set a conditional formal > 1 then the cell with Ok would get highlighted
[16:27:39] *** Joins: gggp (~textual@36.112.135.215)
[16:28:45] *** Quits: gggp (~textual@36.112.135.215) (Client Quit)
[16:28:54] *** Joins: wyclif (~wyclif@user/wyclif)
[16:30:35] <dba> bjs, frankly not sure how excel work.
[16:31:45] <bjs> dba: probably you just want to change the order you apply the rules
[16:32:08] <dba> bjs, yes that what I did and it worked like a charm . Thanks
[16:32:17] <bjs> dba: trust me, you don't want to know how it works :)
[16:33:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:33:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[16:33:52] <dba> bjs, lol I know. but I recall somebody help me find an issue with excel file in the past and mention it is just  a bunch of xml data
[16:34:09] <bjs> but  ="Ok">1  should be TRUE  so you have to be careful with conditions that mix datatypes in Excel
[16:34:13] *** Joins: Trieste (T@user/pilgrim)
[16:34:16] <bjs> dba: yes the xlsx format is just a zip of xml
[16:34:31] <bjs> it's what lets us have tools in Python that read/write them so easily :)
[16:35:17] <jinsun> why does mypy complain if I return Any when function annotation says str, but it doesn't complain when I assign Any to a variable annotated as str? I am using --strict mode.
[16:35:44] <dba> yep good for the community :)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:18] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 240 seconds)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:11] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[16:40:09] <bjs> jinsun: --strict implies --warn-return-any   (see mypy --help)
[16:40:22] *** Joins: jamea (~jamea77@177.239.87.167)
[16:40:45] <jinsun> bjs: yeah but why? both look equally bad or equally good to me
[16:41:34] *** Joins: pnoud (~pnoud@user/pnoud)
[16:41:47] *** Joins: Blankspace (~abcd@user/blankspace)
[16:42:06] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 258 seconds)
[16:42:12] <bjs> jinsun: I guess in general the point of mypy and gradual typing is to check functions that get annotated. A function that is annotated as returning a str which actually returns something of type Any is probably because it's calling something untyped that you want to warn on
[16:42:25] *** Joins: ionface (~ionface@user/ionface)
[16:42:29] <bjs> jinsun: the other case you basically have to manually do the Any->str cast by annotating it
[16:42:37] <bjs> so I guess the mypy devs didn't care too much
[16:43:47] <jamea> They asked me for a demo of my program, but I'm not sure it's a demo, is there a way to protect it? give it a validity of 20 days?
[16:44:30] <nedbat> jamea: who is they?
[16:44:31] <jinsun> bjs: hmm okay, it is actaully good I don't like to cast, so when it complains about Any I just assign to another variable and return that
[16:44:42] *** Quits: grawity (grawity@star.nullroute.eu.org) (Read error: Connection reset by peer)
[16:44:45] <bjs> jinsun: why are you using Any ?
[16:44:52] *** Joins: wyclif (~wyclif@user/wyclif)
[16:45:10] *** Joins: grawity (grawity@star.nullroute.eu.org)
[16:45:16] <jinsun> it is coming from an import of another library
[16:45:20] *** Quits: grawity (grawity@star.nullroute.eu.org) (Client Quit)
[16:45:32] <bjs> jinsun: so the other library didn't want to annotate their code?
[16:45:46] *** Joins: SoleSoul (~SoleSoul@134.191.233.204)
[16:45:49] <bjs> yeah I guess that's what --strict is trying to do, warn you if you call something that hasn't got real annotations
[16:46:10] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[16:46:13] <jamea> nedbatÑ a possible client
[16:46:23] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[16:46:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[16:46:32] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[16:46:38] <SoleSoul> How do I know for a _bz2.pyd file which bzip2 version it was built against?
[16:46:43] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[16:46:59] *** Joins: grawity (grawity@star.nullroute.eu.org)
[16:47:07] <jinsun> bjs: yes that doesn't have  annotations, so I ignored missing import for that, and now all functions from there are treated likethey are returing Any
[16:47:23] <bjs> jinsun: yes
[16:47:35] <nedbat> jamea: if you give them the program, and you don't trust them to stop using it, there's not much you can do.
[16:47:40] <bjs> jinsun: I think "Any" is a bad name,  perhaps it should've been called "Untyped"
[16:48:09] <bjs> (and therefore "allow any operation")
[16:48:12] <bjs> hence why --strict warns
[16:48:26] <jamea> by sample in Delphi language gneerate a .exe and i can controll the date expiration...
[16:49:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:50:23] <jamea> can i generate an .exe ?
[16:51:19] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[16:51:44] <bjs> jamea: tools like PyInstaller can make an .exe for you yes, if you really want one.  You might want to clarify with your client about what kind of demo they would be happy with
[16:51:48] *** Quits: fdsfew (~fdsfew@178.49.152.151) (Quit: Client closed)
[16:52:27] <jamea> if generate a .exe can decrypt it and get back the code?
[16:52:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[16:52:36] <bjs> jamea: yes of course
[16:52:42] <bjs> like with any other .exe
[16:53:41] <nedbat> jamea: how valuable are the secrets in the code?
[16:54:15] *** Joins: derelict (~derelict@user/derelict)
[16:54:43] <jamea> nothing secret only wate time coding
[16:54:48] <jamea> *waste
[16:54:58] <bjs> jamea: remember that a demo of some code does not mean you have to give them the real full program,  you could give them a version without all the secret features or things you don't want them to use,  or maybe you can make videos of _you_ using the software
[16:55:36] *** Quits: y1n (~y1n@84-115-64-226.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[16:56:12] *** Joins: y1n (~y1n@84-115-65-162.wifi.dynamic.surfer.at)
[16:56:25] <jamea> in my delphi program i do:   if strtodate('12/02/2022')<date then   begin     showmessage('Error Connection Internet 3.458');     Application.terminate;  end;
[16:56:32] <jamea> something...
[16:56:55] <jamea> and never cant decrypt my exe program and get back the code..
[16:56:59] <bjs> jamea: you can do the same in Python for sure,  it's all about how much you want to protect and why
[16:57:01] <bjs> jamea: of course they can
[16:57:19] <bjs> it's just a matter of how much they care/will want to and what legal consequences they could face if they get caught
[16:57:37] *** Quits: SteveP (~steve@76-216-123-158.lightspeed.tukrga.sbcglobal.net) (Quit: This computer has gone to sleep)
[16:58:49] <jamea> I don't want them to use my demo code, and from there they follow him and tell me at the end, my boss did not authorize us, thank you.
[16:59:00] <jamea> use and continue coding
[16:59:20] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:00:07] <bjs> jamea: you can do the same thing you'd do in your Delphi program and check the date and exit if it's after that date
[17:00:37] <bjs> but like with your delphi program, nothing is really stopping them digging into the .exe and surgically removing that check.
[17:00:45] <jamea> yes but you say you can get code back...}
[17:00:55] <bjs> jamea: yes,  of course,  like with *any* exe
[17:01:08] <jamea> delphi exe?
[17:01:16] <bjs> jamea: *any* exe
[17:01:34] <bjs> an .exe is just a blob of code,  _you_ may not be able to read it or understand it, but other people do
[17:01:37] *** Quits: tspng (~tspng@2a02:168:a1a1:1:d950:a73f:2eaf:6701) (Remote host closed the connection)
[17:02:18] <jamea> bjs, ok thanks, if can share a link for generate a .exe and a link for read about understand a .exe
[17:03:07] <bjs> jamea: you know, big companies do lots of things to protect their software like having activation codes and keys and doing checks over the internet and having accounts and yet you still hear about them being "cracked" within hours of release,  you can try slow people down but really if you put code on their machine you cannot _physically_ stop them running it
[17:03:35] <bjs> jamea: https://www.pyinstaller.org/ is a common way people like to generate .exe files containing Python code to distribute to people
[17:05:08] <jamea> That they fight in case they try, return the code, of course here I would say, I better pay jak2000 to give me the code than to pay someone who gives me the code, it would be cheaper, right?
[17:05:35] <jamea> thanks for https://www.pyinstaller.org/ ....
[17:05:48] <bjs> jamea: this is why I suggest, if you're really concerned about it,  trying to make demonstrations in other ways.  Videos and documentation of the software,  example generated output that you make,  cut down versions without very many features so they can't really use it,  trying to put it online so you can just turn off the webpage etc
[17:06:05] <bjs> jamea: I'm not sure what you mean,  which would be cheaper?
[17:06:43] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 268 seconds)
[17:07:05] <jamea> if they try get back the code.... is more cheaper pay to jamea for code, than pay to bjs for get back the code, not?
[17:07:06] *** Joins: wyclif (~wyclif@user/wyclif)
[17:07:07] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[17:07:23] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:07:26] <bjs> jamea: it's certainly cheaper than the lawsuit they'd get if you found out they'd paid me to break their contract with you
[17:07:27] <bjs> :)
[17:07:40] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[17:07:52] <jamea> bjs, interesting this part:
[17:07:58] <jamea> "trying to put it online so you can just turn off the webpage etc"
[17:08:18] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 240 seconds)
[17:08:29] <bjs> jamea: I mean obviously not all of those options apply to all software.  Some things don't have generated output you can just share as an example,  some things you cannot just put on a webpage.  But they can be good demonstrations as well
[17:08:55] *** Quits: kmh (~kmh@p200300df5f069e001103edbbdf5759c4.dip0.t-ipconnect.de) (Quit: Leaving)
[17:09:12] <jamea> ok, the job is this: given a directory, go through all the folders and extract information from each folder (with excel files), and concentrate it in 1 general file.
[17:09:31] <bjs> But like if you have software that generates music, you can share a video of you using it to make some music and then share some sample tracks that it generated and not actually have to give the entire software away.  Or maybe you can put a version of it online so they can make their own for a few days before you take it down,  or maybe you give them a version that can only make 30 second clips and only with a trumpet
[17:09:41] <bjs> you know, they get the idea but cannot actually use it
[17:09:54] <jamea> yes
[17:10:08] <jamea> how do you protect or cut part of the code?
[17:10:25] <bjs> jamea: I mean if you just cut parts out then they don't exist in their version, that's pretty protected
[17:10:49] <jamea> yes understand..
[17:10:52] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:11:13] <jamea> ok, i will do the work and then i show them to you for more suggestions or advice ok?
[17:11:27] <bjs> jamea: I'm not your client, you should talk to your client about what they want
[17:12:00] *** Joins: cdown (~cdown@89.32.122.5)
[17:12:00] <jamea> him want this: the job is this: given a directory, go through all the folders and extract information from each folder (with excel files), and concentrate it in 1 general file.
[17:12:00] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[17:12:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:12:24] *** Joins: brickfat (~brickfat@user/brickfat)
[17:12:38] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:12:48] <bjs> jamea: I mean pretty much all of my previous ideas could work,  I'm sure you'll find some solution that makes both you and your client happy
[17:13:56] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:14:47] *** Joins: SteveP (~steve@2600:1700:2980:9b00:409d:2227:9b2e:2bee)
[17:15:53] *** Joins: zebrag (~chris@user/zebrag)
[17:15:59] <jamea> ok
[17:18:31] *** Joins: kmh (~kmh@p200300df5f069e00d0e5bde3844d0c37.dip0.t-ipconnect.de)
[17:18:52] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[17:20:47] *** Joins: mokulus (~mokulus@user/mokulus)
[17:22:49] *** Quits: greedom (~greedom@2001:16b8:2ef8:ad00:46b9:e27f:34a0:c112) (Remote host closed the connection)
[17:23:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:23:01] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[17:23:34] *** Quits: mokulus (~mokulus@user/mokulus) (Client Quit)
[17:23:43] *** Joins: cedric (~cedric@2a01:cb11:867:c200:cb15:8aa9:e7ca:be4)
[17:24:30] <Payam> hi dear people
[17:25:47] <amogorkon> helo
[17:28:37] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:28:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:31:20] *** Joins: Pickchea (~private@user/pickchea)
[17:32:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:33:00] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[17:35:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[17:35:32] *** Joins: dme86 (~dan@user/dan86)
[17:36:19] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[17:37:38] *** Joins: heco (~redrum@user/redrum88)
[17:38:52] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[17:38:57] *** Joins: lmmx (~louis@host-92-0-187-249.as13285.net)
[17:38:59] *** Joins: cheater (~Username@user/cheater)
[17:39:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[17:40:30] *** Joins: Kvothe (~weechat@user/elodin)
[17:41:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 265 seconds)
[17:42:07] *** Joins: audiocat (~audio@2603-8081-1800-6a65-d8c9-10c4-de39-1dcd.res6.spectrum.com)
[17:42:28] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 268 seconds)
[17:43:31] *** Joins: greedom (~greedom@2001:16b8:2ef8:ad00:46b9:e27f:34a0:c112)
[17:44:36] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:44:42] <jamea> "trying to put it online so you can just turn off the webpage etc"   i get the idea.... the idea would be...That the user upload a zip file, with all the files to manipulate ... as soon as I upload it and I have it on the server here, I unzip it, do the work and ... I download the final result ... 2 files
[17:44:50] <jamea> bjs what do you think?
[17:47:14] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[17:47:28] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:49] *** Joins: tspng (~tspng@2a02:168:a1a1:1:487c:907a:fdd9:571f)
[17:48:21] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[17:48:29] *** Joins: cheater (~Username@user/cheater)
[17:48:42] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[17:49:37] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[17:50:27] <nedbat> jamea: that sounds like a  good way to keep control
[17:51:54] *** Joins: skapata (~Skapata@user/skapata)
[17:52:20] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:52:57] <jamea> and the client test and test.. but enver see the code ...
[17:52:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:53:05] *** Joins: dme86 (~dan@user/dan86)
[17:53:08] <jamea> nedbat flask or django for this task?
[17:53:19] <nedbat> jamea: either, or fastapi
[17:54:02] <jamea> wither?
[17:54:03] * vdamewood hugs Django.
[17:54:06] <jamea> *eiter
[17:54:16] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[17:54:40] <jamea> i need a fast and easily for install and configure..
[17:54:52] <vdamewood> Both do that.
[17:55:25] *** Quits: y1n (~y1n@84-115-65-162.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[17:55:35] *** Joins: astroanax (~astroanax@2001:19f0:7402:f82:5400:1ff:fec4:f7d7)
[17:55:51] <jamea> which both? i have 4 ways: django, flask, fastapi and either
[17:56:04] <nedbat> jamea: "either" is an english word, not a web framework
[17:56:08] *** Joins: y1n (~y1n@84-115-65-162.wifi.dynamic.surfer.at)
[17:56:47] <amogorkon> can someone explain to me the relation between pyproject.toml and wheels?
[17:57:22] <amogorkon> i'm just reading https://discuss.python.org/t/pronouncement-on-peps-660-and-662-editable-installs/9450 and i'm wondering what the fuss is about
[17:58:01] <jamea> ok nedbat / vdamewood 3django, flask, fastapi
[17:59:22] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[18:00:05] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:00:33] *** Joins: mossman93 (~quassel@user/mossman93)
[18:00:42] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[18:00:55] *** Joins: nyah (~nyah@90.221.186.180)
[18:00:57] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:01:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 256 seconds)
[18:01:46] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17) (Remote host closed the connection)
[18:02:03] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17)
[18:04:20] *** Joins: pycurious (~Adium@user/pycurious)
[18:05:23] <Yhg1s> amogorkon: they're both to do with packaging. that's about the extent of their relation.
[18:05:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:05:50] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:05:52] <amogorkon> Yhg1s, but why is there an either-or decision?
[18:05:54] <Yhg1s> amogorkon: pyproject.toml is how you define how your package should be built and distributed (the replacement for setup.py/setup.cfg, basically.) wheels are a distribution format of built packages.
[18:05:54] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[18:06:00] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[18:06:16] <Yhg1s> amogorkon: PEPs 660 and 662 are about editable installs, and defining a standard around those, so things other than setuptools know how to implement them.
[18:06:34] <Yhg1s> amogorkon: the PEPs describe the issues themselves.
[18:06:56] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[18:07:01] <amogorkon> yeah, i tried to read them but it's kind of confusing
[18:07:02] <jamea> its good use the library glob? for get subdirectories from a directory?
[18:07:18] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[18:07:33] *** Joins: dme86 (~dan@user/dan86)
[18:07:58] <amogorkon> Yhg1s, does pyproject.toml somehow concern the installation-side of things?
[18:08:01] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[18:08:01] *** Quits: audiocat (~audio@2603-8081-1800-6a65-d8c9-10c4-de39-1dcd.res6.spectrum.com) (Ping timeout: 256 seconds)
[18:08:21] <Yhg1s> amogorkon: yes, of course. it's a way to define how things should be installed.
[18:08:26] <amogorkon> oh god
[18:08:28] *** Joins: waynew (~wayne@user/waynew)
[18:09:01] *** Quits: bikeshedder (~bikeshedd@2001:a62:15f0:e501:f02b:9c99:7ef1:aff5) (Quit: Leaving)
[18:09:01] <amogorkon> is there an automatic way to install something pyproject.toml-ish?
[18:09:10] <Yhg1s> amogorkon: 'pip' installs them.
[18:09:15] <amogorkon> how?
[18:09:19] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:09:22] *** Joins: ApostleInTriumph (~ApostleIn@eth-east-parth2-46-193-66-215.wb.wifirst.net)
[18:09:26] <Yhg1s> I'm not sure what you're asking. It's what pip *does*.
[18:09:52] <amogorkon> i mean, does pip itself use something to install pyproject?
[18:10:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:10:04] <Yhg1s> I'm not sure what you mean by 'pyproject' here.
[18:10:14] <amogorkon> pyproject.toml stuf
[18:10:31] <Yhg1s> that's not a thing you install. it's a thing you use to describe how pip (or other tools) should install your project
[18:10:32] *** Quits: SteveP (~steve@2600:1700:2980:9b00:409d:2227:9b2e:2bee) (Quit: This computer has gone to sleep)
[18:10:56] *** Quits: Madda (~Madda@51.9.249.208) (Remote host closed the connection)
[18:11:18] <amogorkon> that's what i mean, is there a canonical way, something in the stdlib (not pip) to install pyproject.toml stuff?
[18:11:27] <amogorkon> like zipimport for wheels
[18:11:33] <nedbat> amogorkon: why don't you want to use pip?
[18:11:38] <Yhg1s> so, the canonical way, except not the canonical way? No, besides the canonical way there isn't a canonical way.
[18:11:44] <amogorkon> nedbat, because you can't import pip
[18:11:48] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 272 seconds)
[18:12:12] <Yhg1s> amogorkon: it *sounds* like you are trying to ask how to solve a particular problem, but it's very hard to tell. Why would you need to *import* this canonical way to install modules?
[18:12:59] <amogorkon> you both know i'm working on justuse, and one of its features is auto-installation of packages
[18:13:05] <amogorkon> it works with wheels
[18:13:20] <amogorkon> pip can't be imported
[18:13:39] <nedbat> amogorkon: "you both know" it always helps to establish the background, it can be hard for us to remember everyone's projects from day to day
[18:13:57] <Yhg1s> I vaguely recall telling you it was a bad idea.
[18:14:04] <Yhg1s> amogorkon: are you trying to *build* wheels, or *use* wheels?
[18:14:09] <amogorkon> use wheels
[18:14:16] <Yhg1s> amogorkon: then I'm not sure what you're worried about.
[18:14:17] <amogorkon> i'm on the user side
[18:14:33] <Yhg1s> or, why you want to import pip. or, why you're asking about PEPs 660 and 662.
[18:14:47] <amogorkon> <Yhg1s> amogorkon: yes, of course. it's a way to define how things should be installed. <- i'm worried about that
[18:14:48] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[18:15:05] *** Joins: SteveP (~steve@76-216-123-158.lightspeed.tukrga.sbcglobal.net)
[18:15:10] <Yhg1s> amogorkon: using wheels doesn't change, unless you're trying to support editable installs.
[18:15:22] *** Joins: cheater (~Username@user/cheater)
[18:15:27] *** Joins: rany_ (~rany@user/rany)
[18:15:34] *** Parts: rany (~rany@user/rany) ()
[18:16:34] <amogorkon> okay, if there's no push away from wheels i can live with that
[18:16:47] <amogorkon> i never thought about editable installs, tbh
[18:17:03] <jamea> any help?  https://bpa.st/UPEQ
[18:17:11] *** rany_ is now known as rany
[18:17:40] <Yhg1s> jamea: why are you doing 'os.listdir("//" + dirname)'?
[18:17:57] <jamea> FileNotFoundError: [WinError 3] El sistema no puede encontrar la ruta especificada: '//01 Bodega 01\\'
[18:18:14] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[18:18:16] <jamea> i want get files on the first directory
[18:18:24] <jamea> its incorrect?
[18:18:27] <Yhg1s> jamea: yes, I wouldn't expect that directory to exist, considering you're getting that directory name from a different directory
[18:18:32] <Yhg1s> jamea: yes, it's incorrect.
[18:18:57] <jamea> the directory exists because this get the name: directories = glob.glob("*/")
[18:19:14] <jamea> in traceback see line 2
[18:19:44] <Yhg1s> jamea: the directory exists *in the current directory*. It doesn't exist *in //*
[18:19:52] <jamea> and in third file.. is the content of the first subdirectory
[18:20:13] <jamea> ooo understand
[18:20:57] <jamea> removed the \\  and work!
[18:20:58] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-400d-41e9-4425-71b4.res6.spectrum.com)
[18:22:43] *** Joins: wyclif (~wyclif@user/wyclif)
[18:23:19] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:23:27] <amogorkon> nedbat, sorry, i didn't mean to offend you. considering we've talked about it only a few days ago, i assumed it's obvious what i was talking about. on the other hand, Yhg1s remembered telling me he thought it was a bad idea, and that was 2 months ago :D
[18:23:32] <The-Compiler> jamea: \\ and // are two different things, you had // there
[18:24:07] <nedbat> amogorkon: i'm not offended, just explaining the dynamics.
[18:24:15] <Yhg1s> amogorkon: it's more of a matter of thinking "messing with wheels without understanding the whole ecosystem sounds like a bad idea, oh wait, I already told them that"
[18:24:18] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:24:31] <amogorkon> Yhg1s, nah, that was a different context
[18:24:36] *** Joins: rindolf (~rindolf@87.68.241.247.adsl.012.net.il)
[18:24:50] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 258 seconds)
[18:24:55] <jamea> for work with excel files its ok: xlsxwriter (its good library) or... recommend me one
[18:25:15] <amogorkon> Yhg1s, auto-installation wasn't even a thing back then
[18:25:15] <rindolf> hi all. shavua tov. sup?
[18:26:17] <amogorkon> Yhg1s, iirc i asked you to review my use of importlib so i don't use anything that might be deprecated in the near future
[18:26:32] <ChrisWarrick> jamea: there’s also openpyxl
[18:26:50] <jamea> thanks test...
[18:28:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:28:12] <ChrisWarrick> xlsxwriter advertises itself with an excel 2011 screenshot… not the best choice this decade
[18:28:20] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:28:34] <no_gravity> Since "filter" is a reserved word in Python, what could be a good alternative?
[18:28:43] <no_gravity> For a variable name I mean.
[18:28:51] <The-Compiler> no_gravity: it's not reserved, you'd just be shadowing a builtin
[18:28:57] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[18:29:05] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[18:29:05] <amogorkon> Yhg1s, also, i managed to avoid messing with sys.path, all way
[18:29:06] <no_gravity> The-Compiler: Yes
[18:29:17] <The-Compiler> no_gravity: as for a good alternative, entirely depends on what that thing is/does exactly
[18:29:33] <jamea> ChrisWarrick also: It cannot read or modify existing Excel XLSX files.
[18:29:42] <jamea> then better openpyxl
[18:29:47] <ChrisWarrick> jamea: yeah, probably
[18:29:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:29:53] <no_gravity> The-Compiler: It defines what is filtered.
[18:30:18] <ChrisWarrick> no_gravity: `filter` is a fine choice 99% of the time
[18:30:20] <rindolf> jamea: best i could find: https://stackoverflow.com/questions/13437727/writing-to-an-excel-spreadsheet
[18:30:25] *** Joins: wilk (~wilk@user/wilk)
[18:30:35] <no_gravity> ChrisWarrick: It looks akward because it gets syntax highlighted.
[18:30:57] <ChrisWarrick> no_gravity: you’ll learn to ignore that
[18:31:07] <amogorkon> nedbat, you wondered about importing pip - there are only unofficial and unsupported ways to use pip from code, by design, with no intention of changing it, they want to stay CLI-only
[18:31:16] <no_gravity> I think I will go with the_filter
[18:31:30] <jamea> rindolf thanks
[18:31:36] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[18:31:59] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[18:32:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:32:21] <rindolf> jamea: you're welcome
[18:32:34] <The-Compiler> no_gravity: filters (if multiple), pattern, predicate, condition, etc. etc.
[18:33:39] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[18:33:58] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[18:34:03] *** Joins: cheater (~Username@user/cheater)
[18:34:25] *** Joins: joo-_ (~joo@87-49-45-207-mobile.dk.customer.tdc.net)
[18:35:05] <no_gravity> The-Compiler: Hmmm.. it is just one and the other words do not indicate well that it is a filter. So I still like the_filter best.
[18:35:14] <joo-_> I am sorry about this, but i have to ask, what is up with them line numbers / buffer numbers whatever they are that are increased incrementally for each line - what is that called? Whats going on ? Can anyone direct me to more information? I got FOMO
[18:35:25] <joo-_> (inside ipython)
[18:35:50] <Yhg1s> joo-_: do you mean the number you see in the prompt?
[18:35:53] <grym> joo-_: that's just some ipython chrome for displaying what "cell" you're in
[18:36:22] <joo-_> yeah, but what is a cell and what is its meaning? Can i go back to them cells ? Can i save all cells to a file? What is the deal
[18:36:38] <joo-_> Should I consider it like a workbook in librecalc ?
[18:36:44] <Yhg1s> joo-_: it's so you can refer back to the results of previous lines.
[18:36:56] <grym> if you want to return to a previous cell and rerun it, you probably want jupyterlab
[18:36:59] <joo-_> yeah, but i can do that without cells with just a normal python file
[18:37:15] <joo-_> yeah i got jupyterlab installed too, but i still feel like i dont really "get it"
[18:37:17] <grym> note that nonlinear execution of cells can lead to truly puzzling stale state bugs
[18:37:30] <joo-_> Can I do non linear stuff ?
[18:37:31] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[18:37:33] <Yhg1s> joo-_: I'm not sure what you're asking, sorry.
[18:37:53] <grym> notebooks are just gussied-up REPLs, though
[18:37:54] <joo-_> Yhg1s, thanks for trying man, means a lot !!! :-)
[18:38:53] <joo-_> ah ok i dont know about REPL either yet, i will try and look into that for some basic understanding
[18:39:29] <Yhg1s> joo-_: you asked what a specific thing meant, which we answered. You don't have to use the specific thing, and you don't have to worry about it existing if you don't want to use it :)
[18:40:15] <joo-_> Somethings I just get like a hunch that i MIGHT need it and that it is something very genius that i don't understand, that may elevate my coding life to a new level
[18:40:26] *** Joins: candyman (~candyman@user/candyman)
[18:40:35] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[18:40:50] *** Joins: wyclif (~wyclif@user/wyclif)
[18:41:20] <joo-_> Also, thanks !!! :-)
[18:42:24] *** Joins: pnoud (~pnoud@user/pnoud)
[18:42:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:43:15] <amogorkon> Yhg1s, are you also involved in zipimport, btw
[18:43:16] <amogorkon> ?
[18:43:21] <no_gravity> Why does this output nothing? o = lambda: None; o.name = 'Joe'; repr(o)
[18:43:42] <no_gravity> Oh, print(repr())
[18:43:52] <no_gravity> Ok, but how do I get to see the properties of o?
[18:44:04] <amogorkon> dir(o)?
[18:44:06] <Yhg1s> amogorkon: depends on which one you mean.
[18:44:20] <amogorkon> Yhg1s, there is more than one zipimport in the stdlib?
[18:44:32] <Yhg1s> amogorkon: not at the same time, no.
[18:44:43] <no_gravity> amogorkon: I see. Is there a way to get an object without all the properties I see in the output of dir()?
[18:44:50] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:45:04] *** Joins: Naan (~naan@user/naan)
[18:45:14] <amogorkon> no_gravity, that doesn't make much sense to me, sorry
[18:45:14] <Yhg1s> no_gravity: dir(object()) is the minimal set of attributes.
[18:45:34] <amogorkon> Yhg1s, you are saying that zipimport got replaced over time?
[18:45:39] <Yhg1s> amogorkon: yes.
[18:45:43] <amogorkon> ah.
[18:45:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:45:56] <amogorkon> and you were involved in the older or the newer version?
[18:46:05] <no_gravity> In other words, what is the Python equivalent of this in JS? a={name: 'Joe'}; console.log(a);
[18:46:12] <Yhg1s> I haven't looked at the newer version. I'm not sure what you mean by 'involved'.
[18:46:20] <Yhg1s> no_gravity: what does that JS do?
[18:46:30] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[18:46:42] <amogorkon> Yhg1s, involved as in did you program it :)
[18:46:58] <no_gravity> Yhg1s: Create an object with a property name and print it.
[18:47:00] <Yhg1s> no_gravity: because you're *probably* looking for a dict, possibly with the json module, but it's hard to tell.
[18:47:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[18:47:09] *** Joins: waynew (~wayne@user/waynew)
[18:47:10] <Yhg1s> no_gravity: JS 'objects' are more like Python dicts, usually, but it depends.
[18:47:17] <Yhg1s> amogorkon: not all of it, no.
[18:47:30] *** Joins: Pickchea (~private@user/pickchea)
[18:47:32] *** Joins: botfather (~botfather@botd.io)
[18:47:36] <no_gravity> Yhg1s: A dict has this ugly dictname['propertyname'] syntax which I despise.
[18:47:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[18:47:48] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 252 seconds)
[18:47:51] <Yhg1s> no_gravity: don't use Python then. Or, don't expect output to match JSON.
[18:47:58] <Yhg1s> no_gravity: you may be looking for attrs, I don't know.
[18:47:58] <KirkMcDonald> (Except JS objects are their own thing, and it's the JS `Map` type that's more similar to a Python dict. But so it goes.)
[18:47:59] *** Quits: greedom (~greedom@2001:16b8:2ef8:ad00:46b9:e27f:34a0:c112) (Remote host closed the connection)
[18:48:14] <bjs> no_gravity: make a class, you can make objects print out however you want
[18:48:23] <bjs> Python isn't JavaScript so things look different
[18:48:32] *** Quits: dme86 (~dan@user/dan86) (Quit: Lost terminal)
[18:48:39] <amogorkon> Yhg1s, because i love zipimport, it's very useful. i just wondered why .so files are such a pita with it
[18:49:07] <Yhg1s> amogorkon: that's more of a question about ELF shared objects. They can't be loaded from inside another file. They have to be extracted.
[18:49:43] <no_gravity> bjs: I don't want a custom class. I just want an empty object.
[18:49:46] <Yhg1s> amogorkon: I could've told you that even if I'd never touched zipimport, by the way.
[18:49:54] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[18:49:58] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[18:50:11] *** Joins: greedom (~greedom@2001:16b8:2ef8:ad00:46b9:e27f:34a0:c112)
[18:50:54] <bjs> no_gravity: in Python all objects need a type,  what type do you want your object to be?
[18:50:56] <amogorkon> Yhg1s, when i checked zipimport for .so support it was mentioned somewhere that the lack thereof was due to sys.path, so i wasn't sure
[18:50:58] <bjs> no_gravity: maybe types.SimpleNamespace?
[18:51:08] <Yhg1s> amogorkon: I don't understand that comment, sorry.
[18:51:13] <no_gravity> bjs: Maybe. Let me try the SimpleNamespace thing.
[18:51:18] *** Joins: srilyk (~wayne@user/waynew)
[18:51:20] <Yhg1s> amogorkon: what does 'due to sys.path' even mean?
[18:51:21] <bjs> no_gravity: `types.SimpleNamespace(x=42).x == 42`  but like I said,  this is Python not JavaScript and things just look different
[18:51:26] <bjs> making a class is not very hard
[18:51:45] <The-Compiler> there's also dataclass (or attrs)
[18:51:58] <The-Compiler> err, dataclasses rather
[18:52:06] <amogorkon> Yhg1s, exactly my confusion.
[18:52:29] <Yhg1s> amogorkon: what does 'checking zipimport' mean? Where did you look? What was the actual mention you ran across?
[18:52:34] <no_gravity> bjs: SimpleNamespace looks a tad better, thanks.
[18:53:05] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[18:53:33] *** Joins: jdmark (~jdmark@67.8.137.130)
[18:53:35] <no_gravity> Looks like namespace will be my main object type to store stuff.
[18:53:43] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[18:54:28] <no_gravity> The main downside of Python so far it that it makes too much a fuzz about types.
[18:55:03] <bjs> no_gravity: the upside is of course, that it makes a fuss about types :)
[18:55:14] *** Quits: y1n (~y1n@84-115-65-162.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[18:55:39] *** Joins: y1n (~y1n@84-115-65-120.wifi.dynamic.surfer.at)
[18:55:39] <amogorkon> Yhg1s, code, peps, docs, discord.. probably a misunderstanding on my side. thanks for clearing it up.
[18:56:07] <amogorkon> Yhg1s, could you help me understand why .so libs can't be used from inside a zip?
[18:56:54] <no_gravity> In PHP: $a=[2,'3','x'=>4]; echo ($a[0]+$a[1]+$a['x']); // 9
[18:57:02] <no_gravity> In Python ... don't get me started :)
[18:57:03] <P403n1x87> 👋 if you've been using Austin, perhaps you'd be happy to know that version 3 is out. Major highlight is CPU time profiling: https://github.com/P403n1x87/austin
[18:58:11] *** Joins: wyclif (~wyclif@user/wyclif)
[18:58:51] <hogarius> no_gravity: the PHP you just showed us is good?!
[18:59:11] <The-Compiler> P403n1x87: this is a great README :)
[18:59:18] <no_gravity> hogarius: Yeah because you type stuff just like your mind works and it works inside the computer too.
[18:59:26] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:59:30] <bjs> no_gravity: yes Python is different to other languages,  I think a lot of people prefer the structure to Python objects/types.
[18:59:32] <P403n1x87> <The-Compiler "Gabriele Tornetta: this is a gre"> thanks :)
[18:59:35] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Ping timeout: 256 seconds)
[18:59:56] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[19:00:52] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[19:01:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:01:13] <hogarius> no_gravity:  like no_gravity's mind works isn't like how my mind works.  Maybe it isn't how a lot of minds work.
[19:01:24] <catern> would anyone take a look at an article I'm writing about a new distributed systems library? I'm just looking for some first reactions to know that it makes sense http://catern.com/integration.html
[19:01:36] <ChrisWarrick> P403n1x87: (the readme looks bad in dark mode)
[19:01:43] <catern> (wait the people who are currently active have all read it. dang it.)
[19:02:02] <no_gravity> hogarius: The popularity of PHP and Javascript indicate that a lot of minds do not put values into types :)
[19:02:06] <bjs> no_gravity: I'm happy that Python objects don't conflate sequence/indexing with attributes,  and instead here they're totally separate.  I also personally quite like stronger types, so that "1"+2 would fail rather than do some coersion
[19:02:31] <bjs> no_gravity: I mean one can also make the other argument that all the newer languages have much stronger struct types
[19:02:33] <amogorkon> bjs, agreed
[19:02:56] <P403n1x87> <ChrisWarrick "Gabriele Tornetta: (the readme l"> hmm I thought it was ok. It was originally designed for light mode, but when I switched to dark the only issue was icons would stay black :)
[19:02:59] <no_gravity> bjs: I would see popularity as a stronger indicator than "newity".
[19:03:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:03:14] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:03:29] <no_gravity> bjs: All the lose typed languages came *after* Java. And they came for a reason.
[19:03:44] *** Joins: gvsa123 (~gvsa123@d23-17-234-244.abhsia.telus.net)
[19:03:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[19:03:56] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[19:03:57] <no_gravity> bjs: It is a cycle. Things start elegant. Bloat creeps in. A new elegant thing comes up.
[19:03:59] *** Joins: cheater (~Username@user/cheater)
[19:04:06] <bjs> no_gravity: PHP, JavaScript and Java are all basically the same age
[19:04:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:04:18] * jabberwock cries
[19:04:21] * jabberwock runs away from bjs
[19:04:37] <hogarius> no_gravity: maybe you should use PHP or JavaScript then, rather than trying to make Python work like those languages.
[19:04:51] <jabberwock> Don't use PHP
[19:05:00] <jabberwock> it's the most exploited language of all time
[19:05:03] <ba> JS is actually an OK language nowadays
[19:05:09] <no_gravity> bjs: Isn't "Java" in "Javascript" a reference to the language "Java"?
[19:05:27] *** Joins: akaWolf (~akaWolf@akawolf.org)
[19:05:31] <jabberwock> PHP is inherently broken from a security perspective. Java just gets crappy libraries like apache commons
[19:05:34] <ba> no_gravity: the similarities end there
[19:05:41] <no_gravity> hogarius: I use all 3 heavily. All 3 have their upsides and downsides.
[19:05:55] <no_gravity> ba: We were talking about age, not about similarities.
[19:05:58] *** Quits: tspng (~tspng@2a02:168:a1a1:1:487c:907a:fdd9:571f) (Remote host closed the connection)
[19:06:15] <bjs> no_gravity: yes there was this fancy new language called Java, and they wanted to put it in a browser but it didn't work so well, so they made their own language they could put in the browser
[19:06:17] <ba> The age of the names of the languages?
[19:06:37] <no_gravity> hogarius: Python I started using just recently. One reason is that it has the vastly better code-reuse mechanisms compared to PHP.
[19:07:06] <no_gravity> bjs: See?
[19:07:11] <bjs> no_gravity: see what
[19:07:20] <jabberwock> https://security.stackexchange.com/questions/643/why-do-people-say-that-php-is-inherently-insecure
[19:07:26] <jabberwock> Not sure if these links are all good
[19:07:26] <no_gravity> bjs: Java was first then Javascript was created.
[19:07:48] <ba> The canonical 'php bad' is http://phpsadness.com/
[19:07:56] <bjs> no_gravity: yes but they're basically the same age,  and JavaScript wasn't created because of some bad design of Java or anything like that, I think you're re-writing history to suit your own narrative
[19:08:01] <jinsun> no_gravity: 26 years and 25.5 years is basically same age
[19:08:02] <amogorkon> javascript only wanted to jump on the java bandwaggon becaues java was corporate sponsored and spend lots of money on advertisement
[19:08:12] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[19:08:19] <jabberwock> ba: good one
[19:09:09] <jabberwock> Unlearn PHP and apply the fundamentals of programming to python
[19:09:20] <jabberwock> Python, Rust, Go.. just omg not PHP
[19:09:22] <jabberwock> I will die
[19:09:35] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:09:42] <ba> I learned PHP first (I'm of that generation). Took a bit of unlearning.
[19:10:07] <ba> In PHP's defense, `split()` is named `explode()` which is absolutely great
[19:10:09] <jabberwock> I was a web dev and PHP was my first "server side" language. I get it
[19:10:18] <jabberwock> well, not counting perl CGI
[19:10:31] <jabberwock> lol @ explode
[19:10:32] <no_gravity> There is a bunch of stuff in PHP which I would love to see in Python. PHP arrays are just awesome. Type handling is much better. Speed is much better.
[19:10:38] <bjs> no_gravity: a bunch of languages like Python, Ruby,  Java, PHP, JavaScript, etc came out of the early-mid 90s.
[19:10:45] <ba> PHP arrays are an absolute shitshow
[19:10:52] <jabberwock> <?php mushroom_cloud_layin_motha_fucka(); ?>
[19:11:08] <bjs> no_gravity: okay but I'd hate to see PHP-array-like objects take over Python objects, and PHPs handling of types is just
[19:11:15] <bjs> a recipe for bugs :)
[19:11:23] <bjs> it's always a trade-off
[19:11:28] <no_gravity> But code reuse is a desaster in PHP. That is why I am leaning more towards Python these days.
[19:12:27] <jabberwock> lol... I was using C for a webcounter as far back as 2000 apparently: https://www.linuxjournal.com/article/4062
[19:12:30] <jabberwock> (unicount)
[19:12:52] <jabberwock> that was in 2600 too I think
[19:12:54] * jabberwock flexes
[19:13:19] <amogorkon> 2600?
[19:13:27] <jabberwock> -_-
[19:13:38] <grym> i still have a "free kevin" poster somewhere ...
[19:13:40] <amogorkon> can i borrow your timemachine? ;)
[19:13:45] <jabberwock> -_-
[19:13:54] *** Quits: {HD} (~{HD}@102.165.16.161) (Ping timeout: 258 seconds)
[19:14:02] <The-Compiler> quick remember that this is #python, and there's #python-offtopic too ;)
[19:14:05] <jabberwock> You don't have the gigawatts!
[19:14:07] <The-Compiler> err, reminder*
[19:14:19] <grym> The-Compiler: i prefer the imperative form :)
[19:14:48] *** Joins: wyclif (~wyclif@user/wyclif)
[19:15:05] <The-Compiler> grym: would be at least missing a comma then :D
[19:15:10] <bjs> no_gravity: anyway, my point was that these languages you speak of evolved "together" so while they may have influenced each other as they grew the fundamentals were essentially independent choices.  Now ~25/30 years later people have opinions on which decisions they preferred.
[19:15:23] <no_gravity> bjs: Maybe
[19:15:43] <jabberwock> I just jumped in mid-conversation. I have no idea what it was about. I simply saw "PHP" and "Java" and got the sadness
[19:16:29] <f8e4_> folks, what module to build a simple archive?
[19:16:32] *** Joins: tspng (~tspng@2a02:168:a1a1:1:206c:8f5e:52dd:f64b)
[19:16:36] <ba> Python and JS both have good fundamentals IMO, which has allowed them to adapt to new things. PHP has a lot of design baked all the way down.
[19:16:41] *** Quits: ano (~weechat@user/ano) (Quit: ano)
[19:16:43] <amogorkon> f8e4_, zipfile
[19:16:57] *** Joins: ano (~weechat@user/ano)
[19:17:01] <bjs> We can see this in Python,  newer libraries tending towards more structure (attrs/dataclasses etc) and typing.  In newer languages (Elm, Rust, Go, etc) which have stronger struct types.  It seems the trend today is towards stronger, static types.  But we'll see in 20 years if people actually like this decision or not
[19:17:01] *** Joins: Adoi (~Adoi@user/adoi)
[19:18:01] <greyblue9> I think the zipfiles have to do with dlopen
[19:18:14] <bjs> greyblue9: huh?
[19:18:48] <Yhg1s> amogorkon: because the part of libc that's responsible for loading .so's doesn't offer a way to load from zipfiles, or from a particular offset in an archive, or from memory. You can only open .so's as files on disk.
[19:19:34] *** Quits: cdown (~cdown@89.32.122.5) (Quit: https://chrisdown.name)
[19:19:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[19:19:41] <amogorkon> Yhg1s, thanks!
[19:20:17] <amogorkon> so libc is actually the source of the problem :/
[19:20:28] *** Quits: gvsa123 (~gvsa123@d23-17-234-244.abhsia.telus.net) (Quit: Leaving)
[19:20:47] <amogorkon> Yhg1s, what about virtual FS?
[19:21:01] <The-Compiler> f8e4_: the shutil utility functions (e.g. shutil.make_archive) for simple cases, otherwise zipfile/tarfile
[19:21:06] <amogorkon> in-memory FS should work?
[19:21:07] <greyblue9> Windows has a similar limitation I think
[19:21:07] *** Quits: tspng (~tspng@2a02:168:a1a1:1:206c:8f5e:52dd:f64b) (Ping timeout: 256 seconds)
[19:21:59] *** Joins: zeden (~zeden@user/zeden)
[19:22:23] <amogorkon> if the underlying FS pretends to be on disk..
[19:22:29] *** Parts: Keij0 (~Keij0@user/keij0) ()
[19:23:00] <grawity> it would, that's how AppImage works, but then you need to get the OS involved a bit more than just running a .zip
[19:23:17] <amogorkon> hm
[19:23:55] *** Joins: fdan (~textual@192.146.154.3)
[19:24:09] <fdan> Hi
[19:24:12] <amogorkon> i guess mounting a virtual FS only to unzip the zip there without unzipping it on disk would be a bit overkill
[19:24:12] *** Quits: ApostleInTriumph (~ApostleIn@eth-east-parth2-46-193-66-215.wb.wifirst.net) (Quit: Client closed)
[19:24:17] <grawity> and tbh maybe you should just use the existing AppImage tools instead of rolling your own
[19:25:12] <jabberwock> amogorkon: not if it works in a pinch of desperation
[19:25:13] <amogorkon> grawity, is there a way to use it from inside code?
[19:26:12] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[19:26:22] <amogorkon> jabberwock, not the first time that emotion crossed my path on this endeavor :p
[19:26:52] <no_gravity> How do you copy a SimpleNamespace thingyß
[19:26:54] <no_gravity> How do you copy a SimpleNamespace thingy?
[19:27:11] <greyblue9> so one could mount the zipfile to a directory perhaps using a special driver?
[19:28:08] <no_gravity> Using copy.copy() now. Sounds funky but works.
[19:28:08] <bjs> no_gravity: copy.copy i guess
[19:28:13] <no_gravity> bjs: Thanks :)
[19:28:20] <grawity> on Linux, yes, most likely using a FUSE-based filesystem such as archivefs or zipfs
[19:28:41] <bjs> no_gravity: it's weird you're trying to write Python as if it were PHP or something,  it'll probably be a much nicer experience to just write classes
[19:28:45] <grawity> on macOS it's common to use .dmg images in this way
[19:28:54] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:29:03] <amogorkon> grawity, any way there's something for windows in that regard, too?
[19:29:03] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[19:29:28] <no_gravity> bjs: No, because that would be more code without any benefit to me.
[19:29:31] <grawity> well, Win10 can mount ISO images (and VHDs, but I think that's admin-only)
[19:29:54] <amogorkon> iso.. oh my
[19:29:57] <grawity> but you need third-party drivers (such as WinFSP) for things like sshfs or zip archives
[19:30:03] <amogorkon> that's so 2000
[19:30:27] <rud0lf> `if not ntype == NT_ERROR and five` ... does it equal `if (not (ntype == NT_ERROR)) and five` ?
[19:30:45] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Ping timeout: 256 seconds)
[19:30:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:31:38] <bjs> rud0lf: yes
[19:31:42] <rud0lf> thank you bjs
[19:31:45] <bjs> rud0lf: I'd just use != if that's what you meant
[19:31:50] <rud0lf> yes
[19:32:17] <grawity> I had to use ast.parse to verify this
[19:32:24] <lericson> is it possible to type annotate in a for loop
[19:32:30] <lericson> for a: MyType in seq:
[19:32:35] <lericson> very ugly but
[19:32:41] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 258 seconds)
[19:32:52] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[19:33:07] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[19:33:16] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[19:33:53] <no_gravity> Is there a shorter version of "if x is not None and x!=y" ?
[19:34:02] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17) (Quit: Leaving)
[19:34:20] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[19:34:38] <bjs> no_gravity: no
[19:34:42] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17)
[19:34:46] <no_gravity> I see
[19:34:55] <lericson> well
[19:34:58] <lericson> if x and x != y
[19:35:02] <lericson> under some circumstances
[19:35:10] <no_gravity> lericson: Yeah, might work in my usecase.
[19:35:12] <bjs> does not mean the same thing, but might also work
[19:35:18] <powerjungle> or if x == y :D
[19:35:29] <grawity> hmm I would use "x not in (None, y)" but
[19:35:34] <lericson> really
[19:35:35] <grawity> shorter != easier_to_maintain
[19:35:43] <no_gravity> powerjungle: No
[19:35:46] *** Joins: wyclif (~wyclif@user/wyclif)
[19:35:54] <lericson> if x and [thing with x]: is a fairly common idiom
[19:36:17] <lericson> not super clean but it's too practical to forego
[19:36:30] <no_gravity> lericson: What do you mean?
[19:36:46] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[19:37:14] <lericson> i have a design question
[19:37:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[19:37:35] <lericson> i'm working with widgets, and i make a module called widgets.py right.  so i can call widgets.load_all().
[19:37:42] <lericson> what do i call the returned variable of load_all?
[19:37:49] <lericson> it can't very well be widgets, because that's the module name
[19:37:59] *** Joins: cheater (~Username@user/cheater)
[19:37:59] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[19:38:03] <lericson> there is of course a symmetrical problem with the singular widget
[19:38:06] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Read error: Connection reset by peer)
[19:38:26] <no_gravity> I think I find this even easier to read: "if x: if x!=y:" then "if x and x!=y:"
[19:38:42] <lericson> my very unsatisfying solution right now is a) widget_list/set/collection, or b) wdgets = …
[19:38:49] <bjs> lericson: `herd_of_widglets = widgets.load_all()`
[19:38:55] <bjs> :D
[19:39:22] <no_gravity> Oh, why is that a syntax error?
[19:39:29] <lericson> because it's ugly, no_gravity
[19:39:31] <lericson> :D
[19:39:33] <no_gravity> https://www.online-python.com/lNDmJc4wn1
[19:39:43] <bjs> no_gravity: because it's on one line
[19:39:52] <grawity> wondering why the module isn't namespaced better, like "widgets = myapp.widgets.load_all()"
[19:39:57] <no_gravity> bjs: I see
[19:40:08] <lericson> grawity: in my eyes, that's namespaced worse
[19:40:19] <greyblue9> `widgets` gets my vote
[19:40:21] <lericson> my widget module is not dependent on some myapp package
[19:40:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:40:44] <bjs> lericson: `all_widgets` is probably what I'd use just to avoid shadowing
[19:41:03] <bjs> unless there's some extra contextually nice name that captures the collection of widgets
[19:41:06] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:41:09] <grawity> hmm, `from widgets import load_all as load_all_widgets`? `import widgets as Widgets`?
[19:41:22] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[19:41:42] <grawity> I kind of like using Upper.Case.Names for my internal python modules, even though it's not really the approved syntax
[19:41:47] <bjs> grawity: why `as load_all_widgets`?  as for the second, it's not very nice to rename modules with uppercase names
[19:41:56] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17) (Quit: Leaving)
[19:42:05] *** Quits: fdan (~textual@192.146.154.3) (Ping timeout: 256 seconds)
[19:42:07] <bjs> as in Python Classes typically are what have uppercase names and it might be confusing
[19:42:08] <lericson> uppercased module names is all fun and games until your filesystem is case insensitive
[19:42:50] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[19:42:51] <greyblue9> there's always `widgets = _widgets.load_all()`
[19:42:55] <grawity> bjs: not any less confusing as local variables & global module names both having identical-looking lowercase names, imo
[19:43:03] <lericson> it's actually slightly wonky that the classes get initial uppercase and not modules, should probably be the other way around
[19:43:07] <grawity> bjs: more*
[19:43:39] <bjs> grawity: would probably write that as `widgets_ = widgets.load_all()` rather than trying to put an underscore in the module name
[19:43:45] <bjs> oops greyblue9^
[19:43:47] <lericson> same
[19:44:19] <lericson> i'm going with all_widgets
[19:44:26] <bjs> grawity: I don't follow,  why would naming a module with an uppercase letter be confusing with local and global variables
[19:44:32] <greyblue9> or `the_widgets`
[19:44:50] <lericson> i'm going to be taking subsets of all widgets, so it's actually pretty nice
[19:45:02] <lericson> training_widgets, validation_widgets
[19:45:05] <lericson> yes i'm doing ML sue me
[19:46:45] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:47:03] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[19:47:12] *** Quits: y1n (~y1n@84-115-65-120.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[19:47:49] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[19:47:50] <greyblue9> wonders why these wisgets have to be loaded as opposed to being attributes of the module
[19:48:46] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[19:48:56] <lericson> they're defined in xml files
[19:49:00] <lericson> hundreds upon hundreds
[19:49:25] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:49:46] *** Joins: gvsa123 (~gvsa123@d23-17-234-244.abhsia.telus.net)
[19:49:53] <greyblue9> ah, well that's a good reason :p
[19:50:50] <lericson> thanks for sparring with me
[19:50:55] <lericson> bye for now
[19:51:08] <rindolf> <lericson> uppercased module names is all fun and games until your filesystem is case insensitive ==> evil!
[19:51:26] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[19:51:30] *** Quits: Blankspace (~abcd@user/blankspace) (Ping timeout: 240 seconds)
[19:53:06] *** Quits: Notgnoshi (~nots@2001-48F8-8-40-D54D-A979-AEE-17D9-dynamic.midco.net) (Quit: Leaving)
[19:53:35] <greyblue9> or 'case-preserving' :p
[19:53:54] *** Joins: Trieste_ (T@user/pilgrim)
[19:54:09] *** Quits: lmmx (~louis@host-92-0-187-249.as13285.net) (Ping timeout: 258 seconds)
[19:54:32] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 258 seconds)
[19:55:54] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Ping timeout: 240 seconds)
[19:56:00] <greyblue9> don't ever change the case of a file then check it into git
[19:56:38] *** Joins: wyclif (~wyclif@user/wyclif)
[19:57:11] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:58:16] *** Joins: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311)
[19:59:11] *** Quits: gvsa123 (~gvsa123@d23-17-234-244.abhsia.telus.net) (Quit: Leaving)
[19:59:25] *** Joins: giga84 (~giga84@171.76.51.31)
[19:59:33] *** resmo__ is now known as resmo
[20:01:39] <deniska> lericson: python module loading machinery checks the case even on case-insensitive file systems
[20:01:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:02:00] <deniska> which is not the case with all module systems (ahem node)
[20:03:20] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[20:03:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[20:03:46] *** Joins: RougeR (~rougex250@user/rouger)
[20:03:48] *** Joins: cheater (~Username@user/cheater)
[20:04:26] <giga84> hi i am new to python and vscode and and learning python via python crash course 2nd edition. Under chapter 10 i have a problem running the program because of file path issue in https://bpa.st/E35Q
[20:04:39] <giga84> under vscode any idea how to change it
[20:05:49] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[20:06:17] <jinsun> giga84: File -> Open folder -> chap_!0
[20:06:32] <giga84> ok
[20:06:37] <jinsun> but better idea will be to keep absolute paths so that it doesn't depend on your cd
[20:07:02] <giga84> how to do that in vscode
[20:07:10] *** Joins: pycurious (~Adium@user/pycurious)
[20:07:53] <jinsun> do that in the python code `open(absolute_path)`
[20:07:54] *** Joins: tspng (~tspng@2a02:168:a1a1:1:485f:bb7c:c6ab:27b6)
[20:08:12] <giga84> i don't get it
[20:08:19] <bjs> giga84: like   open("C:\\blah\\blah\\blah\\chap_10\\res\\pi_digits.txt")
[20:08:28] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[20:08:30] <bjs> (I assume this is windows with the \\)
[20:08:41] <giga84> yes windows 10
[20:08:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:09:23] <giga84> can you please modify the code and paste it for me
[20:10:38] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[20:10:43] <giga84> ok i got it thanks
[20:11:17] <giga84> https://bpa.st/5ADA
[20:12:50] *** Joins: wyclif (~wyclif@user/wyclif)
[20:12:52] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[20:13:39] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[20:14:07] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[20:14:30] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:14:53] *** Joins: mickey (~user@user/mickey)
[20:14:59] *** Joins: ChrisVim (~ChrisVim@dslb-178-000-148-031.178.000.pools.vodafone-ip.de)
[20:16:56] *** Quits: rsx (~dummy@ppp-188-174-156-63.dynamic.mnet-online.de) (Quit: rsx)
[20:17:26] <ChrisVim> Hey folks! I just wrote a simple script to get information based on a wordlist. I use it to get the translation of the words in the list and download images and tts. To make the image-downloading part faster I tried to use threading but it doesn't work any faster. Does anyone know where this behaviour is coming from?
[20:17:30] <ChrisVim> https://bpa.st/BUAA
[20:18:01] *** Joins: Notgnoshi (~nots@2001-48F8-8-40-3080-B2E0-C715-A48E-dynamic.midco.net)
[20:18:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:18:11] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[20:18:21] *** Joins: cheater (~Username@user/cheater)
[20:19:18] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[20:20:27] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[20:20:27] *** Quits: yates_home (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[20:20:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:21:10] <bjs> ChrisVim: line48 you say target=card.download_img(),  those brackets shouldn't be there
[20:21:11] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[20:21:33] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[20:22:22] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[20:22:38] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[20:22:53] *** Joins: jinsun_ (~quassel@user/jinsun)
[20:23:27] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[20:23:32] <ChrisVim> bjs: You're absolutely right. Thanks for your help!
[20:23:59] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[20:24:13] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[20:25:26] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[20:25:59] *** Parts: giga84 (~giga84@171.76.51.31) ()
[20:26:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:17] *** Joins: korg815 (~korg815@user/korg815)
[20:28:01] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[20:29:13] *** Joins: jtck (~jtck@222.164.13.173)
[20:29:34] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[20:29:44] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[20:30:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:30:26] *** Joins: Pickchea (~private@user/pickchea)
[20:30:29] *** Joins: constant_desc (~noah@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[20:30:31] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:30:44] *** Quits: ChrisVim (~ChrisVim@dslb-178-000-148-031.178.000.pools.vodafone-ip.de) (Quit: WeeChat 3.2)
[20:30:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:32:10] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:33:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[20:33:22] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:33:57] *** Joins: cheater (~Username@user/cheater)
[20:34:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:34:56] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[20:35:07] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17)
[20:35:08] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[20:35:54] *** Joins: upsala (~zcb@185.213.155.160)
[20:35:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:36:08] *** Quits: RougeR (~rougex250@user/rouger) (Read error: Connection reset by peer)
[20:36:09] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[20:36:17] *** mh3f_ is now known as mh3f
[20:36:42] *** Quits: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311) (Ping timeout: 240 seconds)
[20:36:54] *** Joins: todda7 (~torstein@ppp-94-65-226-6.home.otenet.gr)
[22:00:59] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[22:01:00] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[22:01:55] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[22:02:25] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[22:02:52] *** Server sets mode: +Ccnrtf #python-unregistered
[22:04:00] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[22:05:41] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:05:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:07:51] *** Joins: anas (~anas@196.235.97.18)
[22:10:49] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[22:12:10] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Client Quit)
[22:12:47] <feoh> ChrisWarrick: Thank you I was being stupid and not capitalizing the I in IPython :) That works like a charm! Been super impressed at how smooth Python is on Windows these days. Lots of blood, sweat and tears went into that and it shows :)
[22:13:10] *** Joins: susam (~susam@user/susam)
[22:13:11] *** Joins: wyclif (~wyclif@user/wyclif)
[22:13:21] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[22:13:36] *** Quits: skali (~skali@46.191.137.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:13:38] <ChrisWarrick> feoh: windows isn’t that difficult to work with
[22:14:11] *** Joins: Akuli (~Akuli@82-203-161-143.bb.dnainternet.fi)
[22:15:28] <Natt0> I'll try updating the rasberry pi it is on, see if that help things. But I'm trying to make something that doesn't require user intervention, and keep working. (or at least be notified when it fails)
[22:15:42] *** Joins: CoolerY (~CoolerX@user/coolerx)
[22:16:04] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a9b0:960e:c8b7:a6f1)
[22:16:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[22:16:26] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[22:16:26] <jokoon> how do convert a string an unicode string?
[22:16:28] *** Joins: slav0nic (slav0nic@python.su)
[22:16:28] <jokoon> that shows as u'fdfd' in repr() ?
[22:16:39] <grawity> depends, are you writing in python2 or python3?
[22:16:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:16:45] <nedbat> jokoon: that is a unicode string, with four characters.
[22:17:02] <jokoon> python 3
[22:17:06] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[22:17:11] <jokoon> I want PIL to draw UTF8 characters
[22:17:25] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[22:17:25] <grawity> regular strings in python 3 are already "unicode strings"
[22:17:26] <jokoon> apparently the string should have u'' in front of them
[22:17:34] <grawity> the u'' was more of a python2 thing
[22:18:12] <nedbat> jokoon: strings in python3 are full unicode strings.
[22:18:15] <grawity> but in python3 it's kind of the opposite -- *binary* data (bytes/bytearrays) has b'', while unicode strings have just ''
[22:18:35] <jokoon> so PIL cannot draw UTF8 characters?
[22:18:43] <jokoon> I've tried several fonts without success
[22:18:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:18:48] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 272 seconds)
[22:20:00] <grawity> what results do you get though?
[22:20:13] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[22:21:01] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[22:21:05] *** Joins: milosz (~milosz@user/milosz)
[22:22:06] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[22:23:45] <nedbat> jokoon: show us details
[22:25:36] *** Quits: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it) (Ping timeout: 252 seconds)
[22:26:17] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-c1e9-eec7-70ac-a636.res6.spectrum.com)
[22:27:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[22:27:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:28:19] *** Quits: noobly (~user@50.38.124.186) (Remote host closed the connection)
[22:28:20] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[22:30:01] *** Joins: derelict (~derelict@user/derelict)
[22:30:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:31:21] <pulec> Is there some better way of doing "string='path to thing #explanation';cut_string=string[:string.rfind('#')]" ?
[22:31:43] *** Joins: wyclif (~wyclif@user/wyclif)
[22:32:34] <nedbat> pulec: s.partition is good
[22:32:42] *** Quits: Habbie (peter@lorentz.7bits.nl) (Quit: upgrades)
[22:32:56] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:33:04] <nedbat> pulec: you probably wanted find, not rfind
[22:33:25] <pulec> ah partition sounds new
[22:33:42] <pulec> yeah find or rfind is detail in this case
[22:34:00] <pulec> you can just do + or - 1 in the []
[22:34:11] <pulec> https://docs.python.org/3/library/stdtypes.html#str.partition
[22:34:33] <bjs> pulec: what do you mean + or - 1 ?
[22:35:20] <pulec> cut_string=string[:string.rfind('#')-1] for example
[22:35:30] <pulec> moves the cut position bjs
[22:36:05] *** Quits: schumaml (~schumaml@p200300e2ef04630053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[22:36:11] <bjs> pulec: sure i just wasn't sure what it had to do with find vs rfind
[22:36:21] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:10f2:5c76:e409:ae17) (Quit: Leaving)
[22:36:42] <pulec> > string.partition(" #")[0] is better, nice, thanks nedbat
[22:37:01] <pulec> well bjs depends on what do you want from the string
[22:37:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[22:37:17] <pulec> in my case I'm just having some path script and ignore list
[22:37:35] <pulec> so I wanted to implement comments to the ignore list, so for the script I am only interested in the path, not comment
[22:38:21] <nedbat> pulec: consider this:      pathtothing  # explanation with #hash in it.
[22:38:29] <bjs> pulec: I still don't see what + or - 1 has to do with find vs rfind :)
[22:39:06] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-c1e9-eec7-70ac-a636.res6.spectrum.com) (Quit: Leaving.)
[22:39:35] *** Joins: anddt (~anddt@net-93-144-12-118.cust.vodafonedsl.it)
[22:39:58] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[22:40:41] <pyzozord> hey I installed my local package with pipx install -e ./mypackage but when I change code in the package it doesn't seem to be reflected when i run mypackage
[22:40:42] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[22:41:36] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 272 seconds)
[22:42:16] <pyzozord> ah nevermind, i had it configured to run a different function in the egg-info
[22:42:25] <pulec> bjs: ask nedbat what he meant by rfind vs find
[22:42:37] <pyzozord> btw can anyone explain what is the egg-info stuff? Is it a pipx only thing?
[22:42:46] <pulec> afaik it's just if you want to search from begining or end and then use +- /d to pinpoint the "format" in your case
[22:43:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:43:04] <pulec> nedbat: what would the #hash be useful for?
[22:43:05] <nedbat> pulec: look at the example i showed.  i think you want the leftmost #, not the rightmost.
[22:43:17] <pulec> oh right
[22:43:30] <bjs> pulec: what if the description contains a hash symbol?  rfind finds the rightmost "#"
[22:43:30] <pulec> I don't have any hashes, it's just really small ignore_list
[22:43:45] <pulec> yes, we are all on one point :-)
[22:44:03] <bjs> (the + or - 1 still seems unrelated to find vs rfind :))
[22:44:05] *** Joins: pnoud (~pnoud@user/pnoud)
[22:44:13] <pulec> pipx, egg-info those are the questions now!
[22:44:21] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[22:44:22] <pulec> pyzozord: perhaps github of your package?
[22:44:24] <pulec> rip
[22:44:33] <pulec> bjs: it's fine :-)
[22:44:57] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[22:45:06] <pulec> pyzozord: perhaps github of your package?
[22:45:39] <pyzozord> pulec: huh? I don't undrestand. But I don't use github. It's just local project on my disk
[22:46:09] <bjs> pyzozord: how did you end up with egg-info ?
[22:46:38] <pulec> I meant for terms of others to quickly check it and help you faster
[22:46:45] *** Quits: todda7 (~torstein@ppp-94-65-226-6.home.otenet.gr) (Quit: Konversation terminated!)
[22:47:01] <bjs> pyzozord: are you sure it's not some leftover thing you did a while ago,  you shouldn't really be seeing any egg-related things for modern packages
[22:47:20] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900) (Quit: WeeChat 3.2)
[22:47:51] <pyzozord> bjs: I'm ont sure I thin I was following instructions of someone in this channel few months ago
[22:48:12] <bjs> pyzozord: maybe you should start from a clean slate rather than trying to dig through old broken installs?
[22:48:25] *** Joins: wyclif (~wyclif@user/wyclif)
[22:49:03] *** Joins: cheater1__ (~Username@user/cheater)
[22:49:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[22:49:12] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[22:49:17] <pyzozord> bjs: I'm not sure what I'm doing. So do you think I could remove that myprojec.egg-info directory?
[22:49:20] *** cheater1__ is now known as cheater
[22:49:47] <bjs> pyzozord: I'm not sure where you're looking, or what generated it, or what package it's associated with, or anything
[22:50:01] <bjs> so I'm not going to make any claims about what random directories you can delete and what it would do
[22:50:28] <amogorkon> rm -rf / >:]
[22:50:55] <pyzozord> ok it seems like `pipx install ./myproj` is generating ./myproj/myproj.egg-info directory
[22:51:12] *** Quits: dhanesh (~Dhanesh@117.195.18.94) (Quit: Leaving)
[22:52:05] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:08] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:52:33] *** Joins: waynew (~wayne@user/waynew)
[22:52:35] <jinsun> we shouldn't see .egg-info? I see it still for many packages inside my site-packages
[22:52:40] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Remote host closed the connection)
[22:52:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[22:53:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[22:53:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:53:52] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[22:54:18] *** Joins: reedrichards (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[22:54:41] *** Joins: snurre (~snurre@cm-84.210.64.132.getinternet.no)
[22:55:05] *** Joins: audiocat (~audio@2603-8081-1800-6a65-6dff-c754-bdca-ccd0.res6.spectrum.com)
[22:55:10] <pyzozord> so .egg-info is a pipx specific thing?
[22:55:26] <jinsun> no
[22:55:32] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 272 seconds)
[22:55:32] *** reedrichards is now known as MrFantastik
[22:55:45] <bjs> eggs are just very old
[22:55:49] <jinsun> it is something to do with building packages
[22:55:55] <bjs> pyzozord: it's the --editable, it's generating an egg.  It's fine
[22:56:05] <bjs> you don't need to worry about how it works, it looks like a hack ontop of another hack :)
[22:57:08] <pyzozord> so then eggs are something specifix to pip?
[22:57:39] <bjs> pyzozord: no, they predate pip
[22:58:07] <pyzozord> ok I see
[22:58:09] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[22:58:19] <pyzozord> so pipx uses pip which uses /something/ that makes eggs?
[22:58:29] <pyzozord> presumably some chicken?
[22:58:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:58:43] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[22:58:56] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:59:11] *** Joins: betuxy (~ole@158.181.77.59)
[22:59:43] <ChrisWarrick> eggs are a rare sight in modern python, but egg-info might still appear
[22:59:45] <bjs> pyzozord: yes, pipx -e uses pip which uses some very old setuptools tooling which builds an egg (and creates a symlink-like link which points to it) and the egg then points to the source files
[23:00:12] <pyzozord> ah I see
[23:00:25] *** Quits: betuxy (~ole@158.181.77.59) (Client Quit)
[23:00:26] <bjs> well actually I doubt it's actually making an egg
[23:00:37] <pyzozord> bjs: thanks for explanation
[23:00:48] <bjs> because the point is you _dont_ want to pack the code up, it's another layer of hacks just to use the egg-info metadata format
[23:01:43] <pyzozord> ugh, python's packages system is so crufty
[23:01:57] *** Joins: RougeR (~rougex250@user/rouger)
[23:01:57] <pyzozord> layers upon layers of legacy
[23:02:26] <bjs> pyzozord: it's been a very very very long time since i saw an actual egg,  modern distribution methods are much better and actually have something that approaches documentation https://www.python.org/dev/peps/pep-0427/
[23:03:04] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[23:03:13] <pyzozord> oh so that's what wheels are
[23:03:15] *** Joins: srilyk (~wayne@user/waynew)
[23:03:22] <bjs> ChrisWarrick: where else would you see .egg-info ?
[23:03:37] <pyzozord> I was wondering about that... The only thing I know was that "wheel" in unix jargon meant admins/roots
[23:03:37] *** Joins: cheater1__ (~Username@user/cheater)
[23:03:46] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[23:03:47] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[23:03:53] *** cheater1__ is now known as cheater
[23:04:03] <bjs> ChrisWarrick: modern whl's come with a .dist-info directory instead
[23:04:39] <ChrisWarrick> bjs: setup.py can still sometimes generate an .egg-info
[23:05:00] <pyzozord> I got setup.py, I think pipx is using it when I do pipx install
[23:05:28] <bjs> ChrisWarrick: is there a good writeup of how to set up setup.{cfg,py} in a modern way to actually produce distributions that behave?
[23:05:38] <ChrisWarrick> bjs: I’m not aware of one
[23:05:48] <jinsun> bjs: there are some egg-info folders like pip-21.1.3-py3.9.egg-info in my site-packages, I'm using anaconda so maybe it is conda's fault
[23:06:19] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[23:06:51] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:07:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:07:58] <pyzozord> it looks like "wheel" is part of "setuptools" package. I thought "setuptools" was the old stuff that was making eggs?
[23:08:12] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 272 seconds)
[23:08:47] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:52] <bjs> pyzozord: new things are built ontop of the old things
[23:09:42] <pyzozord> ok so setuptools is old but still actively used? and it makes both eggs and wheels?
[23:09:54] <bjs> wheels are defined in a way that does not require setuptools,  that page I linked is the definition for what a wheel file should contain so that tools can use it
[23:10:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:10:33] <bjs> setuptools is just a library that knows how to build them
[23:11:00] <pyzozord> bjs: I see, thanks for explaining more
[23:11:12] *** Joins: sazawal (~sazawal@2409:4043:510:d63:c75b:e309:9afb:dcd3)
[23:11:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[23:12:31] <pyzozord> so wheels and eggs are just different formats describing a python package. setuptools is a module that can create both types of packages. Pip is a package manager. Pipx is another package manager which uses pip. Pipx will use pip which will use setuptools which will create .egg-info directory in my project
[23:13:15] *** Joins: Celeo (~Celeo@user/celeo)
[23:13:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:14:58] <pyzozord> is that correct?
[23:16:07] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:16:23] *** Joins: mickey (~user@user/mickey)
[23:16:33] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[23:17:46] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:20:48] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:22:02] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:23:09] *** jmcantrell is now known as Guest4023
[23:23:09] *** __jmcantrell__ is now known as jmcantrell
[23:24:02] *** Quits: Guest4023 (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:26:31] *** Joins: Pickchea (~private@user/pickchea)
[23:27:06] *** Joins: bertiger (~bertiger@user/bertiger)
[23:27:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:31:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:32:09] *** Quits: P4ddyF (~PaddyF@user/yogoyo) (Quit: WeeChat 3.0.1)
[23:32:43] <pyzozord> ah there is some explanation here https://docs.python.org/3/distributing/index.html
[23:34:32] *** Joins: mogan (~mogan@132.140.7.93.rev.sfr.net)
[23:37:24] *** Joins: ice9 (~ice9@user/ice9)
[23:38:34] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[23:38:54] *** Joins: betuxy (~ole@158.181.77.59)
[23:39:38] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[23:40:28] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[23:40:58] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[23:41:30] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[23:42:34] *** Quits: betuxy (~ole@158.181.77.59) (Client Quit)
[23:43:07] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[23:43:08] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:b082:52de:7098:a900)
[23:43:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:43:39] <pyzozord> what's the difference between "distribution package" and "import package"?
[23:43:43] *** Joins: betuxy (~ole@158.181.77.59)
[23:44:38] <altendky> the name of a distribution package is what you find on pypi or using with `pip install thepackage`.  the import package name is what you use such as with `import thepackage`.  while many packages make the two match, there's no technical requirement for that.
[23:44:51] *** Joins: wyclif (~wyclif@user/wyclif)
[23:45:15] *** Joins: pnoud (~pnoud@user/pnoud)
[23:45:19] *** Joins: ray (~ray@user/re)
[23:46:26] <pyzozord> altendky: I'm not sure if I understand the last sentence well. Can you let me know if this is correct "While many projects make their distribution package and import package have the same name, there is no technical requirement for that"?
[23:46:28] <jinsun> one example of mismatch https://pypi.org/project/python-dateutil/, python-dateutil is the distribution package and dateutil is the import package
[23:46:54] <altendky> pyzozord: you `pip install pillow` but you `import PIL`
[23:47:07] <pyzozord> oh ok yeah I see, thanks
[23:47:45] <pyzozord> when people say package which one do they refer to more commonly, or is it dependent on the context of the discussion usually?
[23:47:59] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:48:51] <altendky> pyzozord: mostly it is used vaguely to mean any number of things.  usually it doesn't much matter if you are talking about the abstract library, the package on pypi, or the package you import since they generally have a one to one relationship
[23:49:14] <altendky> well, not one to one i suppose since there are many installations of the pypi package.  but...  maybe you get the point anyways.
[23:49:29] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[23:49:32] <pyzozord> yeah, got it, thanks
[23:49:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:49:46] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:50:00] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[23:50:15] <BrenBarn> I always find it kind of irritating when the names aren't the same
[23:50:40] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[23:52:32] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[23:53:10] <jinsun> this discussion reminded me, is there a way to ban some package in setup.cfg, don't install if that other package is installed? at work I depend on package x which you import as y, but people end up installing y and then python gives more preference to y, so I want to ban y
[23:55:20] <The-Compiler> altendky: have you ever tried https://github.com/nektos/act to debug the CI stuff you do sometimes? :)
[23:55:29] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[23:55:30] *** Quits: notevil (notevil@user/notevil) (Quit: ZNC - http://znc.in)
[23:55:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:55:55] <BrenBarn> what do you mean by "python gives more preference to y"?
[23:57:29] *** Parts: betuxy (~ole@158.181.77.59) ()
[23:59:33] *** Quits: rindolf (~rindolf@87.68.241.247.adsl.012.net.il) (Ping timeout: 265 seconds)
