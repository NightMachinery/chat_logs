[00:00:05] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 264 seconds)
[00:00:22] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[00:03:30] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Client Quit)
[00:03:45] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[00:05:19] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:24:59] <OnlineCop> jargon: Which regex flavor is this using?
[00:31:55] <OnlineCop> jargon: If this were to match one or more lines, which line(s) should that be?
[00:33:41] <jargon> PCRE2.
[00:34:13] <jargon> Anything capturing a "THEN PUT" line.
[00:35:21] <OnlineCop> Such as lines 24-27 (1065, 1070, 1080, 1090)?
[00:36:55] <jargon> Yes.
[00:37:15] <OnlineCop> https://regex101.com/r/Pqd5Ch/1: I've used /x so I could break the logic apart. It looks like line 10 in the pattern (the first line starting with '#') is the last place this is matching.
[00:38:04] <OnlineCop> I think it's because the `(\s|...)\s` will try to match 2 spaces, but the text only contains 1.
[00:38:18] <jargon> Yeah, I'm trying to remove all lines that don't match any of my regex.
[00:38:48] <OnlineCop> The `\s` after `(PUT|GET)\s` also fails to match, as the text has '(' immediately after PUT.
[00:39:13] <OnlineCop> You might want to change the `\s` to `\s?`.
[00:39:34] <OnlineCop> https://regex101.com/r/Pqd5Ch/2
[00:39:56] <OnlineCop> Yeah; two of those `\s` didn't actually occur in the text: the ones where you see `\s?` now seem to match.
[00:40:54] <OnlineCop> You can combine a lot of single-character "this OR this OR this" checks like `(=|<>|<=|>=|<|>)` using [character groups].
[00:41:59] <OnlineCop> `(=|<>|[<>]=?)` would take care of the '<', '>', '<=', '>='
[00:42:32] <jargon> OnlineCop, please teach me PCRE! :D
[00:43:17] <OnlineCop> Things like `(\+|\-|\*|\/)` could also be combined: `([+\-*\/])` or (if you put the '-' first so it doesn't think you're trying to make a "range"): `([-+*\/])`
[00:43:34] <jargon> I bought two books on regex but both disappared/were stolen. :(
[00:43:36] <OnlineCop> If you no longer need the capture group, you can exclude those too.
[00:44:21] <OnlineCop> Could you explain to me what you're trying to match with `(|((=|<>|<=|>=|<|>)|(\+|\-|\*|\/))([A-Z]+|[0-9]+))` ? (last part of lines 4 and 5)
[00:45:06] <OnlineCop> That  `(|...)` means that it will TRY to match nothing at all (which always succeeds). Then if something to the right (on line 4, it would be a comma) fails to match, it will go back and try one of the alternate paths.
[00:45:49] <jargon> https://regex101.com/r/ikQJSo/1
[00:45:53] <OnlineCop> You can usually ask it to try all the others first and, if that fails, to then allow "nothing" (either by putting an empty "OR" last, such as `(...|)`, or adding a `?` after it).
[00:46:56] <OnlineCop> Yeah; that would certainly be shorter (some of your lines actually start with 5-digit numbers, so changing {4} to {4,5} might be advised).
[00:47:18] <jargon> https://regex101.com/r/ikQJSo/1
[00:47:58] <OnlineCop> That looks like the same link. Did you click "Update regex" in the top-left?
[00:47:59] <jargon> https://regex101.com/r/R69s1G/1/
[00:48:50] <OnlineCop> Are you doing a substitution for those lines?
[00:49:21] <OnlineCop> You can click the SUBSTITUTION option on the left, and put in whatever replacement you want there (including nothing, which would simply remove the matched text).
[00:51:27] <OnlineCop> If you don't need to group things, like `(IF)`, regex will match those letters literally: 'I' followed by 'F'.
[00:52:02] <OnlineCop> It's useful to (group) things if you want to use them in a substitution, or if you want "all of the things inside it" to match, or nothing at all.
[00:53:10] <jargon> How do I substitute for nothing if it is not a match?
[00:53:29] <OnlineCop> Which lines do you want to actually match?
[00:53:44] <jargon> Just the ones using Th
[00:53:49] <jargon> Just the ones using THEN PUT
[00:53:53] <OnlineCop> Every line in the file except those with "THEN PUT"?
[00:54:05] <jargon> Yes, as per the regex.
[00:54:40] <OnlineCop> If you're using PCRE/PCRE2, my favorite is to use a SKIP-FAIL-OR.
[00:55:04] *** Quits: shark (~lemonade@sharkdrip.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:55:13] <jargon> What is the difference between PCRE and PCRE2?
[00:55:26] <OnlineCop> PCRE2 is just newer.
[00:55:57] <OnlineCop> First, match everything that you want to EXCLUDE. In this case, do you want lines from https://regex101.com/r/R69s1G/1 to be excluded, or do you want those lines to be the ones that you're replacing with "nothing"?
[00:56:00] <jargon> What is a SKIP-FAIL-OR?
[00:56:26] <jargon> The matches in my last link are an example of ones to keep.
[00:57:19] <OnlineCop> Okay, so you first match those things. Then you use `(*SKIP)(*F)|` and then add everything you want to match (which will be replaced by "nothing"). So ".+" would work there.
[00:57:55] <jargon> ?
[00:58:16] <OnlineCop> https://regex101.com/r/R69s1G/2
[01:00:06] <OnlineCop> It basically says "if this matches stuff that I don't want to replace, do nothing (force it to "fail to match"); for everything else that DOES match, replace with [nothing]."
[01:00:34] <jargon> I don't think that I did it right. :( https://regex101.com/r/k3pX5T/1
[01:01:20] <OnlineCop> Did you see this ^^ example?
[01:02:01] <OnlineCop> I like to use this SKIP-FAIL-OR pattern to match stuff while I'm programming, but there are always edge cases (like code that's been commented out, or that are parts of strings) that I want to exclude.
[01:02:44] <jargon> How do I now encorporate this into PHP?
[01:03:04] <OnlineCop> It works just fine with PHP (click 'code generator' on the left!).
[01:03:23] <OnlineCop> The code generator can also escape all the special \ characters for you.
[01:08:55] *** Joins: shark (~lemonade@sharkdrip.com)
[01:17:22] *** Quits: shark (~lemonade@sharkdrip.com) (Quit: ZNC 1.8.2 - https://znc.in)
[01:23:04] <jargon> OnlineCop, what did I do wrong? :( https://regex101.com/r/1DeqYM/1
[01:23:33] <OnlineCop> You don't put (*SKIP)(*F)| first.
[01:23:45] <jargon> Notice I didn't force that certain values need to match
[01:23:47] <OnlineCop> First, match the stuff you want to exclude. That's what you put this `(*SKIP)(*F)|` after.
[01:24:52] <OnlineCop> So remove line 1. That should shift lines 2-9 to 1-8.
[01:25:04] <OnlineCop> Then, append (*SKIP)(*F)|.+\n
[01:25:22] <OnlineCop> Maybe like this: https://regex101.com/r/1DeqYM/2
[01:26:05] <jargon> per match [0-9]+ needs to be the same valud
[01:26:06] <jargon> per match [0-9]+ needs to be the same value
[01:26:24] <jargon> same with [A-Z]{2}
[01:26:30] <OnlineCop> What do you mean?
[01:26:37] <jargon> one is the file mode the other is the variable name
[01:26:41] <OnlineCop> Does this remove the correct lines?
[01:27:35] <jargon> I need it to verify that the code is legit using only one unique variable and one unique filemode per match
[01:27:55] <jargon> each match shows 2 variables and 3 filemodes.
[01:27:57] <jargon> as is.
[01:28:36] <jargon> [.a-z0-9]+ is the filename.
[01:29:11] <OnlineCop> Wrap those things in (...) so it captures the values.
[01:29:28] <jargon> For example if one var is GR and the other is PE, it should detect the glitch.
[01:30:17] <jargon> (per 5 line match)
[01:31:42] <OnlineCop> Do you mean the variable name 'TT' on line 43 (starts with '2020')? You want to ensure all the places that use it below will use 'TT' instead of some other variable name?
[01:31:55] <OnlineCop> "FOR TT=1 TO 16:FOR T=1 TO 16" <-- that 'TT'
[01:37:02] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[01:37:59] <jargon>  https://regex101.com/r/JJRhmy/1
[01:38:11] <OnlineCop> jargon: https://regex101.com/r/1DeqYM/3 might show an example of capturing some input and then reusing the same value to ensure some new variable name isn't used.
[01:42:34] <jargon> Yes, I need to confirm that the loops vars don't criss-cross.
[01:43:11] <jargon> "FOR TT=1 TO 16:FOR T=1 TO 16" should pair with NEXT T:NEXT TT
[01:44:11] <jargon> Also DIM GD(16,16) should match with 2350 GET(1,1)-(16,16),GD
[01:44:16] <jargon> Also DIM GD(16,16) should match with GET(1,1)-(16,16),GD
[01:45:24] <jargon> Also OPEN, INPUT # and CLOSE should all match for the filename numeric.
[01:46:03] <jargon> It should also match that the PUT "T,TT" matches
[01:46:20] <jargon> It should also consider that the PUT "T,TT" matches
[01:46:48] <OnlineCop> From my latest link, anything that was captured, I named. Then you can use (?&whatever_the_name_was) to refer to the exact value that had been captured earlier.
[01:47:34] <jargon> Also it should take into consideration that "GD(16,16)"
[01:47:35] <jargon> matches "FOR TT=1 TO 16:FOR T=1 TO 16"
[01:48:33] <jargon> Yes, these are two different code isolations. (The put, versus the get)
[01:48:58] <jargon> The program itself is written in GW-BASIC.
[01:49:09] <OnlineCop> I remember GW-BASIC. And QBASIC.
[01:49:47] <jargon> Yeah, Pastebin doesn't have a Gw-BASIC syntax mode.
[01:51:09] <OnlineCop> As you read through the above regex, did you understand what each part was doing?
[01:56:05] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 265 seconds)
[01:57:11] *** Joins: re101-quoll-57 (~re101-quo@2600:1700:31f0:64f0:f016:fb08:ff88:4425)
[01:57:23] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[01:57:55] *** Quits: maroloccio (~marolocci@93-136-18-134.adsl.net.t-com.hr) (Quit: WeeChat 3.0)
[02:01:15] <jargon> Sorry, I'm back, I had to order soe Grub Hub via McDonald's.
[02:01:19] <jargon> some
[02:01:37] <jargon> *very hungry*
[02:03:51] <jargon> OnlineCop, no I didn't.
[02:04:13] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:04:45] <jargon> I'm learning slowly how regex works in the more complicated formulas.
[02:05:11] <OnlineCop> Anywhere you see (?<some_name>...) it will capture that value and give the group that specific name.
[02:05:23] <jargon> I generally just Lego-Brick my formulas.
[02:05:27] <OnlineCop> Anywhere you see (?&some_name) it uses the value that was captured earlier.
[02:05:59] <jargon> Oh yeah, I am starting to slowly get my memories back! :D
[02:06:19] <OnlineCop> So this was first capturing the "GA" from the "DIM GA(16,16)" line, then later, we were ensuring that its value was still "GA" instead of "GS" or something else.
[02:06:58] <jargon> I need to capture DIM GA(0 to 15,0 to 15) versus DIM GA(16,16)
[02:07:31] <jargon> The former is the newer way I allocate memory.
[02:08:33] <jargon> However it should be DIM GA(0 to 16 * 16 / 2 + 5)
[02:09:15] <re101-quoll-57> Hey yall, i need some help with creating a regex expression. Could I get some help?
[02:09:22] <jargon> (since it isn't actually used as an array and more-so a video memory data bank.)
[02:10:23] <jargon> OnlineCop, I am trying to write a PCRE/2 powered service that uses ai in PHP to combine multiple similar game files into a single engine.
[02:10:31] <re101-quoll-57> The string's requirements are that: 1) Can optionally start with a "+",  2) Will have upto 15 digits in length, not including the "+", 3) Digits can be between 0-9, but the first digit can never be 0 
[02:10:42] <jargon> (as originally written in GW-BASIC)_
[02:10:46] <re101-quoll-57> Do yall mind helping me out with this?^
[02:11:42] <OnlineCop> jargon: Sorry, but I'm going to have to clock out. I'm really not getting all of what you're trying to do.
[02:12:16] <OnlineCop> re101-quoll-57: `^+?[1-9][0-9]{0,14}$`
[02:12:35] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:13:02] <ash_worksi> I thought I'd put it out there in the universe that the PHP code generator on regex101 doesn't yield expected results when using trasnformations
[02:14:27] <jargon> https://regex101.com/r/5iemam/1
[02:15:05] <jargon> Nite,Nite OnlineCop! Thank you for all the assistance! :D
[02:15:21] <re101-quoll-57> thank you so much both of you are beautiful people jargon OnlineCop
[02:18:33] <re101-quoll-57> do yall know the syntax to match that regex in java?
[02:19:22] <re101-quoll-57> something like str.matches() ? but what's in the parantheses? I'm getting errors with invalid delimiters
[02:20:46] <ash_worksi> re101-quoll-57: regex101 has a java code generator; you could plop it in that
[02:22:43] <re101-quoll-57> I tried this: (number.matches("^(\+{0,1}[1-9]{1}[0-9]{1,14})$")) but it still gives me an error
[02:23:06] <ash_worksi> re101-quoll-57: can you provide an example on regex101.com ?
[02:23:46] <re101-quoll-57> yeah just did at https://regex101.com/r/5iemam/1
[02:23:59] <re101-quoll-57> the regex works just fine it's just the java syntax error lol
[02:24:18] <ash_worksi> did you check the code generator?
[02:25:00] <ash_worksi> it gives static strings for the arguments, so you have to make some adjustments (unless you're checking that exact number for some reason)
[02:26:05] <ash_worksi> at the very least you'll need an extra leadling '\'
[02:28:13] <re101-quoll-57> just tried that, it works now!!! thank you all so much
[02:30:53] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[02:32:40] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Read error: Connection reset by peer)
[02:33:02] *** Quits: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9) (Read error: Connection reset by peer)
[02:33:12] *** Joins: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9)
[02:34:14] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 246 seconds)
[02:35:16] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[02:39:57] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Client Quit)
[02:42:08] <jargon> Np.
[02:42:30] <jargon> Np, re101-quoll-57
[02:42:56] <jargon> I am a newbie, but I am glad to be of help! :D
[02:46:20] <jargon> I lost my memories due to recieving Electro-Convulsize Therapy against my personal best interests.
[02:46:28] <jargon> ECT
[02:47:36] <jargon> As a result I now have a lot of false memories.
[02:48:12] *** Quits: re101-quoll-57 (~re101-quo@2600:1700:31f0:64f0:f016:fb08:ff88:4425) (Quit: Client closed)
[02:57:25] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[03:00:32] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[03:01:53] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 246 seconds)
[03:04:19] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[03:12:19] *** Joins: shark (~lemonade@sharkdrip.com)
[03:18:32] *** Quits: shark (~lemonade@sharkdrip.com) (Quit: ZNC 1.8.2 - https://znc.in)
[03:21:13] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[03:32:05] <jargon> ash_worksi https://regex101.com/r/W8CFbL/1 Does this look ok?
[03:33:13] <jargon> https://regex101.com/r/dN1HjN/1
[03:33:31] <ash_worksi> uuuuuh
[03:34:27] <jargon> ( I'm capturing the same routine that repeats over and over in-order to capture the variables.
[03:34:34] <jargon> )
[03:35:27] <ash_worksi> I don't know the syntax of this language well enough to tell you that; but it _looks_ ok.
[03:35:43] <ash_worksi> (generally speaking, it is unwise to parse language constructs with regex)
[03:36:12] <ash_worksi> I wonder what the factoid is for it
[03:36:16] <ash_worksi> !prase
[03:36:18] <ash_worksi> !parse
[03:50:21] <jargon> https://pastebin.com/p5Rdunm0
[03:50:45] <jargon> Btw, sometime in the past 3 hours, now PasteBin supports Gw-BASIC :D
[04:00:07] *** Joins: elvis (~elvis@2804:431:c7c2:4075:a886:4bcb:ccfa:41c7)
[04:00:10] <elvis> hello
[04:00:24] <elvis> Help regex
[04:00:41] <elvis> https://regex101.com/r/U8cZPy/1/ 
[04:00:42] <elvis> take all the elements between li and find the first one : and replace the content by strong and the rest by span
[04:03:47] <elvis> https://regex101.com/r/mjtEB1/1/
[04:06:35] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 265 seconds)
[04:18:41] <jargon> Warning: preg_replace(): Unknown modifier 'g' in C:\xampp8\htdocs\dungeon\mkget.php on line 126
[04:23:45] <digitok> https://regex101.com/r/mjtEB1/2
[04:24:14] <digitok> 07jargon, preg_replace is /g by default
[04:26:31] <elvis> @digitok thanks
[04:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:19] *** Joins: shark (~lemonade@sharkdrip.com)
[04:31:42] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:58] *** Joins: vlm (~vlm@user/vlm)
[04:36:54] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[04:37:39] *** Joins: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se)
[04:37:40] *** Quits: maetthew (~maetthew@c188-150-100-85.bredband.tele2.se) (Changing host)
[04:37:40] *** Joins: maetthew (~maetthew@user/maetthew)
[04:58:14] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[05:02:16] *** Joins: pluri (~pluri@user/pluri)
[05:02:25] *** Quits: OutreEE (~OutreEE@modemcable105.60-176-173.mc.videotron.ca) (Quit: leaving)
[06:22:58] <elvis> digitok https://regex101.com/r/PnoIQF/1 in some cases it didn't work
[06:23:06] <elvis> help
[06:24:06] <Me-me> That's because of the <br> in the text.
[06:24:15] <Me-me> And cases like that are why we recommend not using regex on html.
[06:26:19] <elvis> the final element of the string is the</li>
[06:26:33] <Me-me> Yup.
[06:28:35] <Me-me> https://regex101.com/r/PnoIQF/2
[06:29:58] <jargon> Why does this regex not isolate the described lines? https://regex101.com/r/Cg7oxT/1
[06:31:44] <jargon> I made a compact engine called "nenGame" that parsed HTML output using PCRE. was cool, but the PCRE scripting was Hella slow.
[06:32:17] <jargon> But nenGame is not why I am here.
[06:32:25] <jargon> Well, kinda.
[06:32:41] <Me-me> That is quite the dense regex.
[06:33:40] <jargon> OnlineCop was helping me earlier, but they went to sleep.
[06:34:42] <Me-me> That makes sense, this is exactly his style.
[06:35:08] <jargon> Sometime in the past 3 or 4 hours, Gw-BASIC support was added to PasteBin.
[06:37:15] <jargon> Me-me, any idea why it isn't isolating the desired lines?
[06:37:57] *** Quits: elvis (~elvis@2804:431:c7c2:4075:a886:4bcb:ccfa:41c7) (Quit: Client closed)
[06:38:59] <Me-me> A couple. I don't know what you were going for, exactly, due to the aforementioned density, but you have the whole thing on an alternative where the other alternative is .+\n, meaning you've got this whole parsing regex followed by "then if that doesn't match, just match absolutely anything"
[06:39:20] <Me-me> That's, in fact, why you have any match at all.
[06:39:30] <Me-me> The rest doesn't match.
[06:39:45] <jargon> I meant to erase anything that isn't a match.
[06:40:08] <Me-me> Then you have /m enabled but not /g, meaning you'll only get one match no matter what. Enabling that makes every line match - but again, due to the .+\n, not the actual parsing thing.
[06:40:39] <Me-me> Right, well, it sure can do that. It's just that none of it matches.
[06:42:59] <Me-me> 14 lines start with DIM, as required, they all have the graphic code, then fit the (##,##) format. But you have $^ here, which doesn't actually consume characters - you want \n there to get to the next line.
[06:43:41] <Me-me> I think that's done it.
[06:43:46] <Me-me> https://regex101.com/r/Cg7oxT/2
[06:43:48] <jargon> https://regex101.com/r/2vyQyM/1
[06:44:26] <jargon> That is an example of a piece of intended isolated match.
[06:45:01] <jargon> But still, that is just pasting a piece of intended code as isolated by hand.
[06:45:08] <Me-me> Please click my link.
[06:47:30] <jargon> It doens't work either in my webpage. :(
[06:47:44] <Me-me> Did you enable multiple matches.
[06:48:42] <Me-me> Alright, I'm a bit busy, best of luck.
[06:49:17] <jargon> How do I enable multiple matches? O_O
[06:49:31] <Me-me> I don't know, what's your tool?
[07:21:21] <jargon> It claims g is undefined.
[07:21:35] <jargon> PCRE2 under XAMPP.
[07:25:29] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:26:22] <jargon> Me-me I am using the Apache Friends Windows 10 Home x86 build of Apache using PHP8 and PCRE2.
[07:26:34] <jargon> erm
[07:26:41] <jargon> Me-me I am using the Apache Friends Windows 10 Home x86 build of XAMPP using PHP8 and PCRE2.
[07:29:38] <jargon> Me-me? .__.
[07:30:02] <Me-me> I am busy. Don't worry, you'll get a full refund of the cost of my services.
[07:31:49] <jargon> https://pastebin.com/bHxaUE1Y
[07:32:10] <jargon> See?
[07:47:41] *** Joins: lavaball (felix@31.204.155.215)
[08:01:42] <jargon> Me-me, then I need more bandwidth, someone seems to by attempting to drop my lan.
[08:01:48] <jargon> be*
[08:06:53] <jargon> I discontinuted services of roughly 1.5 million viewbots in the last two  months. So someone is prolly very confused.
[08:52:53] *** Quits: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9) (Read error: Connection reset by peer)
[08:54:12] *** Joins: davido (~daobrien@2402:a040:26b:f600:b5c4:b735:5621:65d9)
[08:59:46] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[09:04:38] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 260 seconds)
[09:08:34] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[09:12:22] <digitok> what are we supposed to see
[09:12:27] <digitok> just some php code
[09:21:20] *** Quits: shark (~lemonade@sharkdrip.com) (Quit: ZNC 1.8.2 - https://znc.in)
[09:36:44] <jargon> digitok are you referring to me?
[09:36:57] <digitok> yes
[09:37:06] <jargon> https://pastebin.com/bHxaUE1Y This?
[09:37:27] <digitok> yes
[09:37:57] <jargon> It doens't work the same in Regex101 site as it does on my personal server.
[09:38:11] <digitok> can you clarify
[09:55:37] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[09:57:41] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[10:03:36] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[10:05:11] *** Quits: rebot (~death@about/regex/rebot) (Remote host closed the connection)
[10:05:12] *** Quits: digitok (~death@about/regex/digitok) (Remote host closed the connection)
[10:11:00] *** Joins: re101-mau-14 (~re101-mau@157.40.126.37)
[10:11:16] *** Quits: re101-mau-14 (~re101-mau@157.40.126.37) (Client Quit)
[10:19:45] *** Joins: palasso (~palasso@user/palasso)
[10:30:50] *** Joins: digitok (~death@about/regex/digitok)
[10:30:53] *** Joins: rebot (~death@about/regex/rebot)
[10:30:53] *** ChanServ sets mode: +v rebot
[10:37:00] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:38:14] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:46:41] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 246 seconds)
[11:16:48] *** Parts: jargon (~jargon@184.101.212.50) ()
[11:22:52] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:31:30] *** Joins: ravan (~ravan@user/ravan)
[11:37:24] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[11:42:05] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[12:20:15] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:24:20] *** Joins: shark (~lemonade@sharkdrip.com)
[12:30:17] *** Quits: re (~re@user/re) (Quit: WeeChat 3.2)
[12:32:46] *** Quits: jle (~jle@aftr-88-152-185-251.unity-media.net) (Ping timeout: 260 seconds)
[12:33:41] *** Joins: re101-robin-76 (~re101-rob@176.59.201.153)
[12:33:52] <re101-robin-76> 34
[12:34:01] *** Quits: re101-robin-76 (~re101-rob@176.59.201.153) (Client Quit)
[12:39:38] *** Joins: jle (~jle@aftr-88-152-185-251.unity-media.net)
[12:40:59] *** Joins: re (~re@user/re)
[12:43:57] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[12:48:07] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[12:49:11] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 246 seconds)
[13:54:55] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:11:11] *** Quits: shark (~lemonade@sharkdrip.com) (Quit: ZNC 1.8.2 - https://znc.in)
[14:20:11] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 246 seconds)
[14:20:54] *** Joins: palasso (~palasso@user/palasso)
[14:36:10] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:52:50] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[15:00:41] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 264 seconds)
[15:06:43] *** Joins: re101-z-83 (~re101-z-8@4.15.229.66)
[15:06:52] <re101-z-83> https://regex101.com/r/Ilj6K6/1
[15:07:01] <re101-z-83> How can I get BIG BORE?
[15:08:39] <digitok> you did it
[15:08:55] <re101-z-83> No
[15:09:05] <digitok> yep
[15:09:26] <re101-z-83> It's just highlighting that
[15:09:29] <digitok> 4 times you did it
[15:09:32] <re101-z-83> no code is there 
[15:09:41] <Me-me> !codegen
[15:09:42] <perlbot> Select code generator on the left side of regex101 to view sample code for your language of choice.
[15:10:22] <digitok> 07Me-me, knows all the secrets
[15:10:26] <digitok> Me-me knows all the secrets
[15:13:06] <re101-z-83> can I just get the RE for it? to use find all in my code?
[15:14:06] <re101-z-83> because I want to apply it in a data frame
[15:20:48] *** Quits: re101-z-83 (~re101-z-8@4.15.229.66) (Quit: Client closed)
[15:24:44] *** Joins: lavaball (~Melissa@31.204.155.215)
[15:40:10] *** Joins: re101-dusky-61 (~re101-dus@net-37-119-220-178.cust.vodafonedsl.it)
[15:40:29] *** Quits: re101-dusky-61 (~re101-dus@net-37-119-220-178.cust.vodafonedsl.it) (Client Quit)
[15:54:19] *** Joins: re101-zonkey-57 (~re101-zon@4.15.229.66)
[15:54:21] <re101-zonkey-57> https://regex101.com/r/AUJtbI/1
[15:55:39] <re101-zonkey-57> how can I get the first two characters that separated by comma for each row? 
[15:58:22] <digitok> https://regex101.com/r/AUJtbI/2
[15:58:31] <digitok> https://regex101.com/r/AUJtbI/3
[16:02:05] *** Joins: cth (~Cthulchu@193.194.107.250)
[16:03:34] <re101-zonkey-57> it gives me an error
[16:03:42] <re101-zonkey-57> it gives me an error
[16:03:46] <digitok> nah
[16:03:49] <digitok> nah
[16:04:05] <re101-zonkey-57> df4['SIZE']=pd.Series(df4['Size'].str.findall(r"^\['([^']*)', '([^']*")) 
[16:04:37] <digitok> that looks like code
[16:04:49] <digitok> incorrect code at that
[16:05:15] <re101-zonkey-57> where?
[16:05:17] <digitok> r"^\['([^']*)', '([^']*)'"
[16:05:28] <re101-zonkey-57> I just replace the Regex in the code
[16:05:35] <digitok> nah
[16:06:43] *** Joins: re101-heron-87 (~re101-her@102.132.140.144)
[16:06:58] <re101-zonkey-57> can you help me pls?
[16:07:20] <re101-zonkey-57> how should I apply it to get all first two characters in my df?
[16:09:30] <re101-heron-87> https://regex101.com/r/986zUw/1 how do I invert this so that the special characters in the substitution are what is removed? using javascript
[16:10:08] <re101-zonkey-57> no way to get in Python?
[16:10:18] <re101-zonkey-57> I dont know Java
[16:10:50] <re101-heron-87> I mainly just need the actualy regex inverted if thats possible
[16:11:07] <re101-heron-87> like a "replace everything not found by the regex"
[16:11:23] <re101-zonkey-57> But I need to find them 
[16:14:01] <digitok> he's asking a question, not helping you
[16:16:06] <digitok> 07re101-heron-87, what does !(]) represent
[16:16:28] <re101-zonkey-57> the previous regex is working now
[16:16:36] <re101-zonkey-57> thank you 
[16:16:55] <digitok> yw
[16:20:24] <re101-heron-87> I added that to include the ] character
[16:22:44] <digitok> i'm not sure whether you know exactly what the other regex was doing, but i've simplified it while not altering what it does
[16:23:13] <digitok> https://regex101.com/r/986zUw/3
[16:23:53] <re101-heron-87> yeah I am still quite new to regex, it looks like Egyptian writing to me. thank you though! you are a god!
[16:24:09] <digitok> hehe, yw
[16:25:16] *** Quits: re101-heron-87 (~re101-her@102.132.140.144) (Quit: Client closed)
[16:33:03] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[16:41:41] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[16:55:49] *** Joins: shark (~lemonade@sharkdrip.com)
[17:22:57] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Ping timeout: 276 seconds)
[17:36:23] *** Quits: re101-zonkey-57 (~re101-zon@4.15.229.66) (Quit: Client closed)
[17:44:08] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[18:16:29] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[18:27:05] *** Quits: lavaball (~Melissa@31.204.155.215) (Ping timeout: 264 seconds)
[18:28:57] *** Joins: lavaball (felix@31.204.155.215)
[18:51:04] *** Joins: pluri (~pluri@user/pluri)
[18:54:08] *** Joins: hanif (~hanif@gateway/tor-sasl/hanif)
[18:56:57] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net)
[19:01:14] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-88b4-455a-dc10-3560.fixed6.kpn.net) (Ping timeout: 246 seconds)
[19:07:46] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:08:48] *** Joins: lavaball (felix@31.204.155.215)
[19:13:19] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 265 seconds)
[19:13:25] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[19:32:08] *** Quits: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a) (Remote host closed the connection)
[19:32:08] *** Quits: testuser[m] (~testuserm@user/testuserm/x-4779273) (Read error: Connection reset by peer)
[19:32:08] *** Quits: Vol[m] (~notvolmat@2001:470:69fc:105::c79b) (Read error: Connection reset by peer)
[19:32:11] *** Quits: lkhn (~lkhn@user/lkhn) (Read error: Connection reset by peer)
[19:32:12] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Write error: Connection reset by peer)
[19:32:13] *** Quits: johnny_bit (~johnnybit@2001:470:69fc:105::629) (Remote host closed the connection)
[19:32:14] *** Quits: syanna (~syannamat@2001:470:69fc:105::9e7) (Remote host closed the connection)
[19:32:15] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[19:34:41] *** Joins: spanwysm[m] (~spanwysm@2001:470:69fc:105::e0a)
[19:55:14] *** Joins: lkhn (~lkhn@user/lkhn)
[19:55:15] *** Joins: johnny_bit (~johnnybit@2001:470:69fc:105::629)
[19:55:15] *** Joins: psydroid (~psydroid@user/psydroid)
[19:55:15] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[19:55:15] *** Joins: Vol[m] (~notvolmat@2001:470:69fc:105::c79b)
[19:55:15] *** Joins: testuser[m] (~testuserm@user/testuserm/x-4779273)
[19:55:26] *** Joins: syanna (~syannamat@2001:470:69fc:105::9e7)
[20:04:32] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[20:27:55] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[21:03:07] *** Quits: hanif (~hanif@gateway/tor-sasl/hanif) (Quit: quit)
[21:07:11] *** Joins: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net)
[21:07:12] *** Quits: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net) (Changing host)
[21:07:12] *** Joins: joo (~joo@fsf/member/joo--)
[21:44:51] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[21:46:26] *** Joins: pluri (~pluri@user/pluri)
[21:48:43] *** Joins: Xavier7 (~Xavier7@179.6.136.210)
[22:26:10] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) (Remote host closed the connection)
[22:50:32] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[23:43:10] *** Quits: rtjure (~rtjure@bras-79-132-17-74.comnet.bg) (Quit: Leaving)
[23:43:23] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[23:48:48] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:f02b:e56b:4df5:94e2) (Quit: ZNC 1.8.2 - https://znc.in)
[23:49:02] *** Joins: Albright (~Albright@149.28.13.173)
[23:50:29] *** Joins: re101-fly-45 (~re101-fly@cpc144482-stap13-2-0-cust325.12-2.cable.virginm.net)
[23:50:39] <re101-fly-45> <@([0-9])>
[23:50:40] <re101-fly-45> this regex only matches <@1> with one number inside. I want it to match infinite. How can I do that?
