[00:00:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[00:00:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:00:55] *** Joins: apteryx (~maxim@dsl-153-36.b2b2c.ca)
[00:01:41] *** Joins: koo5_ (~quassel@51.140.155.227)
[00:02:10] *** Joins: bluedust_ (~bluedust@194.37.96.105)
[00:04:33] *** Joins: off^ (~off@207.5.21.20)
[00:04:38] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:05:30] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Quit: leaving)
[00:05:32] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[00:05:34] *** Joins: KombuchaKip (~kip@192.252.230.5)
[00:05:34] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 260 seconds)
[00:05:38] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:05:44] *** Joins: FabTG (~ftg@120.ip-51-178-81.eu)
[00:06:03] *** Joins: sgn (~sgn@user/sgn)
[00:06:29] *** Quits: remote (~self@user/hackers) (Quit: leaving)
[00:06:53] *** Joins: hackers (~self@user/hackers)
[00:06:53] *** Quits: maxzor (~maxzor@2a01cb04054faa001c7dac944e140668.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[00:06:53] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 268 seconds)
[00:07:31] *** Joins: demsh (srjgxif39q@hermod.demsh.org)
[00:07:31] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Client Quit)
[00:07:44] *** Joins: FabTG (~ftg@120.ip-51-178-81.eu)
[00:08:05] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:09:45] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Client Quit)
[00:09:54] *** Quits: hackers (~self@user/hackers) (Client Quit)
[00:10:16] *** Joins: FabTG (~ftg@120.ip-51-178-81.eu)
[00:11:07] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Client Quit)
[00:11:21] *** Joins: FabTG (~ftg@120.ip-51-178-81.eu)
[00:12:19] *** Quits: FabTG (~ftg@120.ip-51-178-81.eu) (Client Quit)
[00:12:36] *** Joins: FabTG (~ftg@120.ip-51-178-81.eu)
[00:14:17] *** Joins: humberto1 (~humbertow@187.202.198.61)
[00:14:27] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[00:14:47] *** pizzaiolo is now known as pizza
[00:15:23] *** Joins: {HD} (~{HD}@86.106.121.213)
[00:16:43] *** Reign`___ is now known as Reign
[00:17:59] *** Cyp_ is now known as Cyp
[00:18:14] *** Cyp is now known as Cyp_
[00:18:17] *** Quits: ge0rgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[00:18:27] *** Parts: martingale1 (~beta@170-83-120-154.customer.nbtos.com.br) ()
[00:18:33] *** Cyp_ is now known as Cyp
[00:18:35] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[00:18:47] *** Quits: lorogue_ (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 256 seconds)
[00:21:11] *** Joins: darksun (~darksun@user/darksun)
[00:21:18] *** Joins: jellyknight (~gelignite@55d4e4de.access.ecotel.net)
[00:22:52] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:23:26] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:23:31] *** Joins: yanmaani1 (~yanmaani@gateway/tor-sasl/yanmaani)
[00:24:36] *** Parts: mennoh_ (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) ()
[00:24:54] *** Joins: thorbw (~tw@46.230.130.50)
[00:25:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[00:25:02] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 240 seconds)
[00:25:24] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:26:29] *** Joins: Algernon91 (~Algernon6@i19-lef01-t2-89-85-246-57.ft.lns.abo.bbox.fr)
[00:27:04] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:28:47] *** Joins: jug (~jug@user/jug)
[00:28:55] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[00:29:02] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:30:13] *** Joins: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[00:31:42] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:32:00] *** ryu_ is now known as ryu`
[00:32:02] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[00:32:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:33:11] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:33:12] *** Joins: frmlof (~frmlof@70.243.238.191)
[00:33:41] *** Joins: reset (~reset@user/reset)
[00:33:56] *** Joins: OPK (~OPK@user/opk)
[00:34:18] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[00:34:38] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:34:50] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[00:34:58] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[00:35:03] *** Joins: sgn (~sgn@user/sgn)
[00:35:27] *** Joins: newpy (~newpy@206.168.231.90)
[00:36:15] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[00:36:24] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[00:36:26] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[00:36:41] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[00:37:25] *** Quits: Algernon91 (~Algernon6@i19-lef01-t2-89-85-246-57.ft.lns.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:37:26] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[00:37:31] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9d7b:9dc9:6c46:c2cd)
[00:37:37] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[00:37:48] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[00:37:53] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[00:38:21] *** Quits: spuz (~spuz@95.149.135.181) (Quit: Client closed)
[00:38:41] *** Quits: Milos_ (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[00:38:51] *** Quits: zer0bitz__ (~zer0bitz@196.244.192.57) (Read error: Connection reset by peer)
[00:38:57] *** Joins: Milos (~Milos@user/milos)
[00:39:01] <yolo> curl http://ix.io/3KIg -sO class.py | black class.py | cat class.py
[00:39:05] *** Joins: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com)
[00:39:16] <yolo> why black fails to reformat such a simple python file
[00:39:48] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[00:42:37] <mefistofeles> yolo: black is uncompromising by design, so if it changes spaces I guess it "feels" it's changing the logic... even though in that case... hmm, I guess it's a bit trivial and should handle it
[00:43:37] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[00:43:44] <jinsun> this is one of the cases where mandatory indentation works against python
[00:44:06] <mefistofeles> ya
[00:44:32] <mefistofeles> when would we get blocks separators in python? :P
[00:44:54] *** Joins: ice9 (~ice9@user/ice9)
[00:45:07] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[00:45:55] *** Joins: nomic (~nomic@185.198.243.236)
[00:45:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[00:46:04] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: crabbedhaloablut)
[00:46:04] *** Joins: Pickchea (~private@user/pickchea)
[00:46:20] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[00:46:34] <yolo> is there any alternative for python reformat, this simple test lost a lot of my confidence with black :(
[00:47:28] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[00:48:35] *** Joins: Everything (~Everythin@37.115.210.35)
[00:48:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[00:48:49] <jinsun> haven't used the others, but all of them try to not change the meaning of the code, so they all won't format invalid syntax I think
[00:48:55] *** Joins: esther (~esther@2607:fb90:20dd:1ff2:5013:20dd:78f2:66e)
[00:49:27] <yolo> ok, guess that's the best I can use. thanks
[00:49:30] <mefistofeles> yeah, that sounds more like an editor/IDE feature rather than a formatter... but I guess they could also do it, with a risk
[00:50:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:50:43] *** Joins: bluedust (~bluedust@103.148.20.45)
[00:50:45] *** Joins: sgn (~sgn@user/sgn)
[00:50:53] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[00:51:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:51:15] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[00:51:25] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Read error: Connection reset by peer)
[00:51:26] <jinsun> yeah maybe some kind of guesswork can be done to determine which indentation level would be better for that line
[00:51:38] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[00:51:55] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[00:52:19] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[00:52:20] <jinsun> but it would have to be some other tool that extends black or some configuration, wouldn't want the formatter to do guesswork about what I meant by default
[00:53:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:53:22] *** Joins: sgn (~sgn@user/sgn)
[00:54:09] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:54:29] *** Quits: bluedust_ (~bluedust@194.37.96.105) (Ping timeout: 256 seconds)
[00:54:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[00:56:18] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:56:38] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:57:10] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[00:58:09] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[00:58:16] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[00:58:53] *** vishwin60 is now known as vishwin
[00:59:11] *** Quits: The_Jag (~The_Jag@host-79-33-196-10.retail.telecomitalia.it) (Quit: The_Jag)
[00:59:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:59:27] *** Joins: asix (~Anders@user/asix)
[01:00:07] *** Quits: paul424 (~tom@ip-31-0-125-200.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:00:13] *** Joins: martingale (~beta@170-83-120-154.customer.nbtos.com.br)
[01:01:00] *** Parts: r3m (~launch@user/r3m) (WeeChat 3.5-dev)
[01:01:51] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[01:03:52] *** Joins: audiobirb (~audio@user/audio)
[01:04:13] *** Quits: jellyknight (~gelignite@55d4e4de.access.ecotel.net) (Quit: Stay safe!)
[01:05:50] *** Joins: bluedust_ (~bluedust@194.37.96.105)
[01:06:13] <bjs> yolo: isn't that just invalid syntax?
[01:06:25] <bjs> or am I missing something
[01:07:42] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[01:07:43] *** Joins: rohit[m]1 (~rohitrohi@2001:470:69fc:105::1:5d55)
[01:07:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[01:08:10] *** Joins: kevr (~kevr@user/kevr)
[01:09:01] *** Quits: bluedust (~bluedust@103.148.20.45) (Ping timeout: 240 seconds)
[01:09:08] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[01:09:14] *** Joins: humberto1 (~humbertow@187.202.198.61)
[01:09:28] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[01:09:44] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:09:46] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:09:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:09:50] <kevr> hey folks. so, i have a decorator that needs to be able to deal with arguments passed to the original function. I've done this here with `functools.wraps`. However, I would like to set these decorators up as decorators where i don't need to pass an argument. Check out this simple case: http://sprunge.us/EbJSQ0?py - How exactly would I go about achieving `auth_required` while omitting the `goal`
[01:09:52] <kevr> kwarg?
[01:10:52] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[01:11:15] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[01:11:35] *** Quits: mingdao_ (~mingdao@107-146-172-064.res.spectrum.com) (Quit: leaving)
[01:11:43] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[01:12:01] <jinsun> return decorator if not callable(goal) else decorator(goal)
[01:12:21] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:12:22] <jinsun> and you'll hae to write overloads if you are type checking
[01:12:24] <kevr> :o
[01:13:04] <kevr> i see!
[01:13:14] <kevr> jinsun: thank you very much <3
[01:13:28] <kevr> (also, completely makes sense)
[01:14:06] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[01:14:06] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:14:45] <yolo> bjs: wrong indentation only, otherwise it's simple class-python code
[01:14:57] *** Joins: alex11 (~alex11@user/alex11)
[01:15:08] <yolo> i was playing with black and realized it's, as stated, _very_ opinionated
[01:15:40] <ali1234> kevr: you can use auth_required without passing goal, you just need to have brackets and it will take the default value
[01:15:48] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:15:49] <ali1234> ie @auth_required()
[01:16:04] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:16:08] <kevr> ali1234: indeed; the end goal here for me is just using it without any parens.
[01:16:29] <ali1234> allowing it to be used with or without brackets seems a bit too magical for my taste
[01:16:34] <kevr> its probably confusing because it looks pointless to do so, i'm wrapping the decorator with other decorators that go more direct.
[01:16:44] <kevr> requires_auth -> auth_required(True), for example
[01:16:57] <bjs> yolo: tbh "I won't try reformat files that aren't valid Python" isn't *that* opinionated
[01:17:07] <kevr> hmm.
[01:17:24] <ali1234> there's lot of different ways to compose decorators
[01:17:59] <ali1234> they are after all just functions
[01:18:35] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[01:18:37] <ali1234> for example you can apply decorators inside decorators :)
[01:18:54] *** Quits: rohit[m]1 (~rohitrohi@2001:470:69fc:105::1:5d55) (Write error: Connection reset by peer)
[01:18:55] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Read error: Connection reset by peer)
[01:18:56] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Write error: Connection reset by peer)
[01:18:56] *** Quits: Vipulk (~vipulk@user/vipulk) (Write error: Connection reset by peer)
[01:18:57] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Read error: Connection reset by peer)
[01:18:57] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Write error: Connection reset by peer)
[01:18:57] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Read error: Connection reset by peer)
[01:18:57] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Read error: Connection reset by peer)
[01:18:57] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Read error: Connection reset by peer)
[01:18:58] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Write error: Connection reset by peer)
[01:18:58] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Read error: Connection reset by peer)
[01:18:58] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Write error: Connection reset by peer)
[01:18:59] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Write error: Connection reset by peer)
[01:18:59] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Read error: Connection reset by peer)
[01:18:59] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Read error: Connection reset by peer)
[01:18:59] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Write error: Connection reset by peer)
[01:18:59] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Read error: Connection reset by peer)
[01:19:10] <yolo> bjs: that makes sense, just recall the fixers I used for go/c++/typescript and indeed if the code is invalid,the reformat won't do well.
[01:19:16] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[01:19:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:19:46] *** Joins: sgn (~sgn@user/sgn)
[01:19:53] <jinsun> those languages have the advantage that mixing up indentation isn't invalid syntax
[01:19:55] <yolo> it's a reformatter, not a bug-fixer
[01:19:55] *** Joins: bluedust (~bluedust@89.238.143.233)
[01:20:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:20:23] *** Quits: upsala (~zcb@2a03:1b20:6:f011::a10e) (Quit: WeeChat 3.4)
[01:20:43] *** Joins: Nei_ (~ailin@openSUSE/member/ailin-nemui)
[01:20:58] *** Joins: wh (~wh@85.154.68.131)
[01:21:01] <yolo> jinsun: right, well python4(will never come) might support {}/() and make indentation optional...python is just so different
[01:21:07] *** Quits: wh_ (~wh@5.37.250.212) (Ping timeout: 256 seconds)
[01:21:15] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[01:21:18] <kevr> lol
[01:21:26] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[01:21:41] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 256 seconds)
[01:21:47] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34) (Ping timeout: 252 seconds)
[01:21:59] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:37] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (Remote host closed the connection)
[01:22:38] *** Nei_ is now known as Nei
[01:22:46] *** Quits: aNickName (~Throgkt@sps03-1-78-220-132-145.fbx.proxad.net) (Quit:  )
[01:23:01] *** Quits: bluedust_ (~bluedust@194.37.96.105) (Ping timeout: 240 seconds)
[01:23:11] *** Joins: Throgkt (~Throgkt@user/throgkt)
[01:23:22] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 268 seconds)
[01:23:32] <jinsun> yeah that is not happening, `from __future__ import braces`
[01:23:35] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[01:23:35] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:23:35] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:23:35] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:23:35] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:23:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:23:48] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[01:24:04] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[01:24:23] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[01:24:23] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:24:23] *** Joins: psydroid (~psydroid@user/psydroid)
[01:24:23] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[01:24:23] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[01:24:23] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:24:23] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[01:24:24] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:24:24] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[01:24:24] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:24:24] *** Joins: Vipulk (~vipulk@user/vipulk)
[01:24:35] *** Joins: frmlof (~frmlof@70.243.238.191)
[01:24:46] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[01:24:49] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:24:49] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:24:49] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[01:24:49] *** Joins: ormaaj2 (~ormaaj@user/ormaaj)
[01:24:49] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[01:24:49] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[01:25:04] *** Joins: holgersson (~quassel@user/holgersson)
[01:25:08] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[01:25:16] <jinsun> and supporting {} will probably be too difficult, it is already too overloaded
[01:25:49] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[01:25:59] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[01:26:00] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[01:26:02] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:26:18] *** Joins: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb)
[01:26:18] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:26:19] *** Joins: vitali64 (~notrealvi@2001:470:69fc:105::c1bf)
[01:26:20] *** Parts: PantelicGR2 (~pantelicg@user/pantelicgr) ()
[01:26:25] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:26:32] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[01:26:40] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[01:26:41] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:26:41] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[01:26:53] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[01:26:54] *** Joins: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8)
[01:26:54] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[01:26:54] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[01:27:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:29:02] *** Quits: resmo (~resmo@2a00:d420:9:8a00:f30e:de10:9d5d:2b07) (Quit: Leaving)
[01:30:02] *** Quits: rakoon_ (~rakoon@2001:985:f4c6:1:313b:29e1:2eb8:db43) (Ping timeout: 252 seconds)
[01:30:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:23] *** Quits: raxor2k (~raxor2k@78.158.254.45) (Remote host closed the connection)
[01:30:50] *** Joins: rakoon_ (~rakoon@80-100-166-138.ip.xs4all.nl)
[01:31:52] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:48c8:920f:83dd:ae34)
[01:33:01] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[01:33:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[01:33:35] <kevr> i dont really see a point in doing so
[01:33:53] <kevr> languages have their own syntaxes, they're not all C-family syntaxed.
[01:34:52] <kevr> adding or removing braces changes absolutely nothing about the functionality of the language; linters would have to patch it up, version differences would be insane
[01:34:59] <kevr> way worse than 2-to-3
[01:36:35] <kevr> yolo: tip - you can disable or enable black warnings for a particular project. some of them are truly very opinionated, but most of it is legit good practice.
[01:36:46] <jinsun> well not this one
[01:37:15] <jinsun> but yeah mixing up indentation in python is like not putting enough brackets in those languages, auto-formatters cannot help you in that case
[01:37:17] *** Quits: bluedust (~bluedust@89.238.143.233) (Remote host closed the connection)
[01:37:24] *** Joins: Algernon91 (~Algernon6@i19-lef01-t2-89-85-246-57.ft.lns.abo.bbox.fr)
[01:39:43] <kevr> ah, the good ol' mixing \t and ' '
[01:42:29] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[01:42:46] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[01:43:29] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 20000)
[01:43:34] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (Quit: Client limit exceeded: 20000)
[01:43:40] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Client limit exceeded: 20000)
[01:43:42] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Client limit exceeded: 20000)
[01:43:43] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[01:43:53] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 250 seconds)
[01:43:59] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[01:44:27] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[01:44:27] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Client limit exceeded: 20000)
[01:44:27] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 20000)
[01:44:29] *** Quits: ormaaj2 (~ormaaj@user/ormaaj) (Quit: Client limit exceeded: 20000)
[01:44:40] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[01:44:49] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Quit: Client limit exceeded: 20000)
[01:44:51] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[01:45:26] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Quit: Client limit exceeded: 20000)
[01:45:28] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Client limit exceeded: 20000)
[01:45:53] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Client limit exceeded: 20000)
[01:45:54] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 20000)
[01:45:58] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[01:45:58] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[01:45:58] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[01:45:58] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:45:58] *** Joins: ormaaj2 (~ormaaj@user/ormaaj)
[01:45:59] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:45:59] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:45:59] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:46:00] *** Quits: DX099 (~dx099@2001:470:69fc:105::21ce) (Quit: Client limit exceeded: 20000)
[01:46:09] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:46:12] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[01:46:12] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[01:46:12] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[01:46:12] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:46:13] *** Joins: Vipulk (~vipulk@user/vipulk)
[01:46:13] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[01:46:13] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:46:19] *** Quits: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450) (Quit: Client limit exceeded: 20000)
[01:46:24] *** Quits: mdk[m] (~mdk@python/psf/mdk) (Quit: Client limit exceeded: 20000)
[01:46:26] *** Quits: vitali64 (~notrealvi@2001:470:69fc:105::c1bf) (Quit: Client limit exceeded: 20000)
[01:46:32] *** Joins: holgersson (~quassel@user/holgersson)
[01:46:41] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Client limit exceeded: 20000)
[01:46:43] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Client limit exceeded: 20000)
[01:46:46] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Client limit exceeded: 20000)
[01:46:53] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Quit: Client limit exceeded: 20000)
[01:46:58] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Quit: Client limit exceeded: 20000)
[01:47:03] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[01:47:29] *** Parts: SnowCode (~debian@vps-709aceac.vps.ovh.net) (WeeChat 3.0)
[01:47:32] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[01:47:33] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[01:47:46] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Client limit exceeded: 20000)
[01:48:04] *** Quits: barbaros- (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:48:06] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:48:17] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[01:48:36] *** Joins: humberto1 (~humbertow@187.202.198.61)
[01:49:45] *** dbristow__ is now known as dbristow
[01:51:03] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[01:51:34] *** Quits: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8) (Quit: Client limit exceeded: 20000)
[01:53:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[01:53:20] *** Joins: parv (~quass@user/parv)
[01:53:35] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:54:16] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:55:24] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[01:57:37] *** Quits: tricklynch (~tricklync@216-180-94-57.starry-inc.net) (Ping timeout: 240 seconds)
[01:58:22] *** Joins: mmalter (~mmalter@88.126.10.237)
[01:58:24] *** Joins: tricklynch (~tricklync@216-180-94-57.starry-inc.net)
[02:02:43] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[02:03:12] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[02:03:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:04:57] *** Quits: tricklynch (~tricklync@216-180-94-57.starry-inc.net) (Ping timeout: 240 seconds)
[02:06:27] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:06:30] *** Joins: ThanatosJ (~Thanatos@105.112.29.157)
[02:06:48] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:08:18] *** Quits: willow (~willow@user/willow) (Quit: willow)
[02:08:43] *** Quits: Ilyu_ (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[02:08:50] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:09:00] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[02:09:06] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:09:16] *** Joins: sgn (~sgn@user/sgn)
[02:09:22] *** Joins: willow (~willow@user/willow)
[02:09:42] *** Quits: Thanattt (~Thanatos@197.210.45.7) (Ping timeout: 260 seconds)
[02:09:58] *** Quits: mantiX (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:10:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4)
[02:11:08] *** Quits: Guest7944 (~quassel@cpc123780-trow7-2-0-cust177.18-1.cable.virginm.net) (Quit: Quit)
[02:11:20] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[02:11:26] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[02:12:05] <ac_slater> wtf is up with python3's venv? Is there a transition guide away from virtualenv? Our of the gate doing `source venv/bin/activate && pip list` is listing my global packages and not the venv's
[02:12:06] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[02:12:06] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[02:12:06] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[02:12:06] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[02:12:06] *** Joins: jinsun_ (~jinsun@user/jinsun)
[02:12:07] *** Joins: schemanic[m] (~schemanic@2001:470:69fc:105::1:2450)
[02:12:07] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[02:12:07] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[02:12:08] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[02:12:13] <ac_slater> Out *
[02:12:13] *** Joins: vitali64 (~notrealvi@2001:470:69fc:105::c1bf)
[02:12:13] *** Joins: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8)
[02:12:13] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[02:12:28] *** Joins: mdk[m] (~mdk@python/psf/mdk)
[02:12:32] <ac_slater> also, no setuptools in the venv by default?
[02:12:47] <ChrisWarrick> ac_slater: python3’s venv (a) works fine for me (b) has setuptools and pip in it
[02:12:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:12:52] <ac_slater> wtf
[02:12:56] <ChrisWarrick> ac_slater: are you on debian/ubuntu?
[02:12:56] <ac_slater> thanks ChrisWarrick
[02:13:00] <ac_slater> ChrisWarrick: yea deb11
[02:13:08] <ChrisWarrick> ac_slater: sudo apt install python3-venv
[02:13:17] <ChrisWarrick> then try creating your venv again
[02:13:44] <ac_slater> yea it's installed
[02:13:45] *** Joins: sabbas (~sabbas@user/sabbas)
[02:14:25] <ac_slater> I think I see the issue
[02:14:34] <ac_slater> phew I thought it was just a regression
[02:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:15:43] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:15:51] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[02:15:55] <NeilRG> how do I pip install https://github.com/python/mypy/pull/11633 ?
[02:16:03] <NeilRG> I tried pip install "git+ssh://git@github.com/python/mypy.git@refs/pull/11633/head", but it didn't work
[02:16:43] *** Quits: synbiose (~synbiose@coxa.pt) (Changing host)
[02:16:43] *** Joins: synbiose (~synbiose@user/synbiose)
[02:18:10] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[02:18:12] *** Joins: rapier (~rapier@user/rapier)
[02:18:16] *** Quits: mmalter (~mmalter@88.126.10.237) (Quit: Lost terminal)
[02:19:03] *** Joins: mmalter (~mmalter@88.126.10.237)
[02:20:17] *** Quits: esther (~esther@2607:fb90:20dd:1ff2:5013:20dd:78f2:66e) (Ping timeout: 240 seconds)
[02:20:25] <ac_slater> ChrisWarrick: when I do some tricky things in docker, running pip against my venv has an ModuleNotFoundError with distutils.util
[02:20:29] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:20:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[02:20:59] <ChrisWarrick> ac_slater: tricky things in docker?
[02:21:00] <ac_slater> apparently deb11 needs some help on the base environment
[02:21:27] *** ormaaj2 is now known as oormaaj
[02:21:27] <ChrisWarrick> ac_slater: are you creating the venv inside docker? are you using the python base image?
[02:21:31] <ac_slater> basically building venvs inside docker. I guess I'm spoiled by archlinux's python3 metapackage pulling in a lot of things like distutils by default
[02:21:41] <ac_slater> ChrisWarrick: no, I'm using deb11 base image :-/
[02:21:49] *** oormaaj is now known as ormaaj
[02:22:05] <ChrisWarrick> ac_slater: would it be possible to switch to the python base image?
[02:22:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:22:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:22:46] <ac_slater> sadly no. All good mate! I just need to massage this path
[02:22:51] <ac_slater> might just switch back to virtualenv
[02:23:14] <ChrisWarrick> the python base image is guaranteed to be sane
[02:23:25] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:23:28] <ChrisWarrick> the debian base image should work too if you aren’t doing anything unusual with the venv
[02:23:29] <ac_slater> ChrisWarrick: yea but I need more than just python. I need a lot of support for native modules
[02:23:47] <ac_slater> ChrisWarrick: I just figured it out. Apparently I need python3-distutils in my runner image as well.
[02:23:47] *** Joins: sgn (~sgn@user/sgn)
[02:23:54] <ac_slater> as a runtime dependency
[02:23:58] <ac_slater> shrug
[02:24:06] <ac_slater> didn't need that with virtualenv
[02:24:13] <ChrisWarrick> https://hub.docker.com/_/python has variants based off debian
[02:24:56] *** Quits: Galladite27 (~Galladite@host-92-24-75-159.as13285.net) (Quit: Leaving)
[02:24:57] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:25:13] <ac_slater> ChrisWarrick: also, python3-wheel needs installed too. jeeze
[02:25:27] <ChrisWarrick> debian is famous for messing up python3, yes
[02:25:40] <ac_slater> ChrisWarrick: thanks mate
[02:26:15] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[02:26:57] *** Quits: Saxtheowl (~roro@78.192.226.182) (Ping timeout: 240 seconds)
[02:27:10] <ac_slater> my largest dependency is causing me hell. It's a java8 library which uses jcc to build a native C wrapper for python. So durring runtime, I need java8, a local set of JARs, and the native shared library
[02:27:34] <ac_slater> in the docker world, this is the java8 image + python + a sane runtime for modern Linux like deb11
[02:27:44] <ac_slater> kinda worst case
[02:29:37] *** Quits: thickrocks (e46ff6ac16@2604:bf00:561:2000::13d) (Remote host closed the connection)
[02:30:02] *** yanmaani1 is now known as yanmaani
[02:30:11] *** Joins: Macuser (~Macuser@2600:1003:b46e:747e:c053:f977:a2d4:e642)
[02:31:15] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[02:31:28] <jinsun> NeilRG: `pip install git+https://github.com/python/mypy.git@refs/pull/11633/head` seems to be working, got the idea from https://stackoverflow.com/a/50095199
[02:32:47] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:03] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Quit: Client limit exceeded: 20000)
[02:33:50] *** Quits: oscarplaisant (~OsKaR3141@2a01cb008b0e460021de626dc2bb6dc9.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:33:59] *** Joins: tricklynch (~tricklync@216-180-94-57.starry-inc.net)
[02:36:07] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[02:36:31] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:36:31] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:36:32] *** Quits: Algernon91 (~Algernon6@i19-lef01-t2-89-85-246-57.ft.lns.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:37:25] *** Joins: atom951 (~atom951@2a02:c7f:1f58:500:30dc:962d:f2cb:6bb9)
[02:37:41] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:37:52] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Read error: Connection reset by peer)
[02:39:11] *** Quits: greedom (~greedom@p200300de67496a006bdbceea60d0f73d.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:39:13] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:39:20] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[02:40:11] *** Quits: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8) (Quit: Client limit exceeded: 20000)
[02:40:14] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[02:41:01] *** Quits: rakoon_ (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:41:19] *** Joins: rakoon_ (~rakoon@2001:985:f4c6:1:15c:b6a8:3453:5a78)
[02:41:54] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[02:41:58] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[02:43:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:43:52] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[02:44:02] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:44:16] *** Quits: Guest138 (~Guest138@88.103.7.38) (Quit: Client closed)
[02:44:29] *** Parts: que (~nerd@rektnet.com) ()
[02:44:44] *** Joins: Terexen (~terexen@user/terexen)
[02:45:40] *** Joins: Guest138 (~Guest138@88.103.7.38)
[02:45:44] *** Joins: onosendi3 (~onosendi@user/onosendi)
[02:46:22] *** Joins: grooverman (~grooverma@177.102.117.95)
[02:46:43] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[02:46:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:46:48] *** Joins: queue- (~nerd@user/queue/x-7267619)
[02:47:09] *** Joins: sgn (~sgn@user/sgn)
[02:48:28] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Ping timeout: 268 seconds)
[02:49:07] *** Joins: Saxtheowl (~roro@78.192.226.182)
[02:49:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[02:50:02] *** scoobydoo_ is now known as scoobydoo
[02:52:00] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[02:52:02] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[02:55:18] *** Parts: onosendi3 (~onosendi@user/onosendi) (WeeChat 3.3)
[02:56:15] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:56:28] *** Parts: pflanze_ (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) ()
[02:57:00] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[02:59:26] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:38] *** Quits: delvian (~delvian@41.13.208.22) (Ping timeout: 260 seconds)
[02:59:41] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[03:00:40] *** Joins: Bakunin (~maplefing@user/lindis)
[03:01:57] *** Quits: dreamon (~dreamon@pd950387b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:02:02] *** Quits: medium_cool_ (~medium_co@2605:a601:a9aa:f800:c45a:1cfb:b6d9:9c5a) (Quit: I have gone to sleep. ZZZzzz…)
[03:03:05] *** Quits: dextercd1 (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:03:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:04:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[03:05:33] <lantech19446> am I wrong in thinking that % is the operator for floor division?'
[03:05:34] *** Joins: worldofgeese (~worldofge@2001:470:69fc:105::1:3cd8)
[03:05:34] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[03:05:56] <ChrisWarrick> lantech19446: % is modulo, // is floor division
[03:06:19] <lantech19446> oo ok that explains why i keep getting none as a result, thank you
[03:08:27] *** Quits: yitz (~yitz@exercism/yitz) (Quit:  )
[03:09:15] *** Joins: yitz (~yitz@exercism/yitz)
[03:11:00] *** Quits: atom951 (~atom951@2a02:c7f:1f58:500:30dc:962d:f2cb:6bb9) (Quit: Client closed)
[03:11:22] <lantech19446> ok so that wasn't the only reason I was getting none, I forgot to return a value but for once i figured it out and I got it right a lot faster than normal
[03:12:02] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[03:12:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:14:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:15:30] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[03:16:17] *** Quits: rakoon_ (~rakoon@2001:985:f4c6:1:15c:b6a8:3453:5a78) (Ping timeout: 240 seconds)
[03:16:30] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:18:03] *** Quits: djhankb9 (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:18:16] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:18:42] *** Joins: djhankb9 (~djhankb@208.113.164.68)
[03:19:20] *** Joins: hackers (~self@user/hackers)
[03:19:24] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:22:47] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:22:55] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[03:23:10] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[03:23:13] *** Joins: sgn (~sgn@user/sgn)
[03:23:26] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[03:23:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[03:24:12] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:24:13] *** Joins: Enitin (~Enitin@37.80.148.79)
[03:24:30] *** Quits: Enitin (~Enitin@37.80.148.79) (Remote host closed the connection)
[03:25:07] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:25:21] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:26:20] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:26:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:26:45] *** Joins: sgn (~sgn@user/sgn)
[03:27:38] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[03:27:45] <JimmyRustles> hi
[03:28:13] <JimmyRustles> i've got a list of bunny objects which all have a pygame image associated with them
[03:28:16] *** Joins: sw (~sw@176-58-113-251.ip.linodeusercontent.com)
[03:28:22] <JimmyRustles> i made this function to draw the bunnies: https://bpa.st/PJHQ
[03:28:32] <JimmyRustles> but if i don't use copy.copy on the first line, all the bunnies end up the same colour
[03:28:37] <JimmyRustles> any idea why that is?
[03:28:46] <JimmyRustles> i can post more of the code if necessary
[03:30:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:39] *** Quits: tretka_ (~trekta@ip5f5afdb1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:32:09] <Yhg1s> JimmyRustles: I would guess it's because you only have one instance of 'bunny' (which is hard to tell from just this one function), and one of the functions you call does something to it.
[03:32:15] <Yhg1s> (So, yes, show more of the code.)
[03:32:57] <Wulf> Should there be a blank line after a function's/method's docstring? Is there any standard for this?
[03:33:07] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[03:33:24] *** Quits: Bakunin (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[03:34:05] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:34:40] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:35:04] <Yhg1s> Wulf: https://www.python.org/dev/peps/pep-0257/, no blank line after the docstring (but PEP 8 says 'a blank line surrounding method definitions', so it depends on what follows.)
[03:35:11] *** Quits: sabbas (~sabbas@user/sabbas) (Quit: leaving)
[03:35:38] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:36:04] *** Joins: WarpedAI (~Warped@user/warped)
[03:36:20] <JimmyRustles> Yhg1s: https://bpa.st/VLWQ - there should be multiple instances of bunny in the bunnies list
[03:37:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:37:12] <Wulf> Yhg1s: pep-0257 defines "There's no blank line". I meant multi-line doc strings.
[03:37:21] <Repiphany> JimmyRustles: Where's the definition of the Bunny class
[03:37:56] *** Joins: Thanattt (~Thanatos@105.112.29.157)
[03:37:58] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[03:37:59] *** Joins: newbie|3 (~Warped@user/warped)
[03:38:02] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:38:05] *** Joins: C0MPU73R (~C0MPU73R@d27-96-168-61.nap.wideopenwest.com)
[03:38:46] <JimmyRustles> Repiphany: https://bpa.st/HVHA
[03:38:50] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 260 seconds)
[03:39:01] <jim87> Hello! Is there a way to serialize an inspect.Signature instance, or to pass it from a python execution to another somehow? I need to create a vault of available functions, storing their module, their name and their signature
[03:39:13] *** Joins: Viewday11 (~Viewday@user/viewday)
[03:39:21] *** Quits: ThanatosJ (~Thanatos@105.112.29.157) (Read error: Connection reset by peer)
[03:39:30] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[03:39:59] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:40:21] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[03:40:37] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 240 seconds)
[03:40:44] <Repiphany> JimmyRustles: Are they all supposed to be initialized with the same costume image `9    bunnies.append(Bunny(x=x, y=y, costume=images[0], colour=colour))`
[03:40:55] <JimmyRustles> yeah Repiphany
[03:40:57] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:41:29] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[03:41:34] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:41:36] *** Joins: ThanatosJ (~Thanatos@197.210.45.7)
[03:41:41] <jim87> I need at least a list of arguments and the eventual result type
[03:42:57] *** Quits: Thanattt (~Thanatos@105.112.29.157) (Read error: Connection reset by peer)
[03:43:00] *** Joins: Bakunin (~maplefing@user/lindis)
[03:43:52] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:45:10] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:45:34] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:47:23] <lantech19446> just learned why I keep getting not defined errors, I have no concept of scope
[03:47:34] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:48:06] *** Joins: Soni (~quassel@autistic.space)
[03:48:10] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Client Quit)
[03:49:11] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[03:49:16] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[03:49:32] <Yhg1s> JimmyRustles: I think something you haven't pasted is modifying bunny_image somewhere. Perhaps pygame.transform.threshold? All the bunnies start with the same costume (images[0]), not a copy of it.
[03:51:27] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:5572:85e6:1399:6185)
[03:51:32] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:51:57] *** Joins: sgn (~sgn@user/sgn)
[03:52:45] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[03:55:17] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 240 seconds)
[03:58:14] <JimmyRustles> Yhg1s: https://bpa.st/KVCQ
[03:58:19] <JimmyRustles> could it be that function at the top?
[03:58:27] <JimmyRustles> it modifies bunny.costume so would that directly modify the image?
[03:58:37] *** ouestbillie is now known as desproges
[03:59:09] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[04:00:26] <JimmyRustles> https://github.com/sgriffin53/bunnyfarm
[04:00:28] <JimmyRustles> that's the whole project
[04:00:30] <Yhg1s> JimmyRustles: 'bunny.costume = ...' doesn't modify the object that is bunny.costume, it reassigns the attribute. What you describe happening sounds more like something modifies the data that bunny.costume holds.
[04:00:37] <Yhg1s> (see bit.ly/pynames1)
[04:01:35] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[04:01:37] *** Quits: tricklynch (~tricklync@216-180-94-57.starry-inc.net) (Ping timeout: 256 seconds)
[04:01:54] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:02:16] *** Quits: desproges (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[04:02:16] *** Joins: tricklynch (~tricklync@2600:1000:b067:4b2:9d58:a469:37d6:80a0)
[04:02:36] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:04:36] *** Joins: dodo (~dodo@186.11.26.75)
[04:04:53] *** Quits: ThanatosJ (~Thanatos@197.210.45.7) (Ping timeout: 256 seconds)
[04:07:20] *** dodo is now known as uniqdom
[04:07:43] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:07:49] <bjs> JimmyRustles: pygame.transform.threshold is actually changing the image you give it,  so if you don't use a copy you're actually changing the images[0] image that all the objects are using
[04:08:28] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[04:09:01] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[04:09:11] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[04:09:14] *** Joins: Wulf (~Wulf@user/wulf)
[04:10:15] *** Joins: foul_owl (~kerry@94.140.8.107)
[04:10:37] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[04:11:04] *** Joins: ilmostro (~ilmostro@user/ilmostro)
[04:11:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:11:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[04:11:51] *** Joins: ge0rgios (~georgios@user/georgios)
[04:12:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:13:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:13:37] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Ping timeout: 240 seconds)
[04:14:04] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[04:14:04] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[04:14:04] *** Joins: hams (~hams@user/hams)
[04:15:32] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[04:16:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[04:16:33] *** Joins: geek1 (~geek5@109.70.99.67)
[04:17:38] *** Quits: C0MPU73R (~C0MPU73R@d27-96-168-61.nap.wideopenwest.com) (Quit: Leaving)
[04:17:49] *** Joins: Viewday110 (~Viewday@user/viewday)
[04:18:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:18:48] *** Viewday110 is now known as Viewday11
[04:19:03] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[04:19:06] *** Quits: grimvar (~grimvar@i5C75F45F.versanet.de) (Ping timeout: 245 seconds)
[04:19:33] *** Joins: KombuchaKip (~kip@192.252.230.5)
[04:19:54] <Wulf> Okay, I finally decided: Blank line after module/class docstring, no blank line after function/method docstring.
[04:20:57] *** Joins: grimvar (~grimvar@i5C75F6AD.versanet.de)
[04:22:34] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[04:22:37] *** Quits: tricklynch (~tricklync@2600:1000:b067:4b2:9d58:a469:37d6:80a0) (Ping timeout: 240 seconds)
[04:22:48] *** Joins: mickey8 (~user@user/mickey)
[04:22:55] <JimmyRustles> oh, thanks for the explanation, bjs
[04:23:20] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[04:25:14] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[04:25:18] *** Joins: tricklynch (~tricklync@216-180-94-57.starry-inc.net)
[04:25:40] *** Joins: Viewday113 (~Viewday@user/viewday)
[04:25:43] <rapier> wow... i didn't know that: i can make dictionary comprehension
[04:25:51] <rapier> wow... this is so awesome
[04:26:03] <mefistofeles> now abuse it!
[04:26:06] <mefistofeles> :P
[04:26:36] *** Quits: geek1 (~geek5@109.70.99.67) (Quit: Leaving)
[04:27:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:27:10] *** Viewday113 is now known as Viewday11
[04:27:21] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[04:27:42] <rapier> why didn't it work the same way for tuple?
[04:27:47] <rapier> i can see their values
[04:27:50] <rapier> a = (i for i in range(6))
[04:27:52] <rapier> print(a)
[04:28:09] <rapier> it isn't working like list comprehension
[04:28:41] <rapier> i can't see their values*
[04:28:56] <grym> rapier: that's not a tuple, that's why
[04:29:00] <grym> (it's a generator)
[04:29:07] <rapier> i see
[04:29:07] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[04:29:23] <grym> tuple(i for i in range(6)) is, though
[04:29:23] <rapier> python brings me the message: "generator object <genexpr>"
[04:29:26] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f)
[04:29:31] <rapier> ok
[04:29:35] <rapier> thank you, grym
[04:29:35] *** Quits: runelind_ (~runelind@user/runelind) (Ping timeout: 268 seconds)
[04:29:37] <grym> yes, that's the repr of a generator; they're lazily evaluated
[04:30:10] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[04:30:20] <rapier> grym, what is the reason happened for it and not for list and dictionary?
[04:30:47] <rapier> ok
[04:30:48] *** Joins: zircona (~zircona@c-24-99-200-244.hsd1.ga.comcast.net)
[04:30:49] *** Quits: zircona (~zircona@c-24-99-200-244.hsd1.ga.comcast.net) (Client Quit)
[04:31:05] <grym> those two aren't lazily evaluated
[04:31:32] <rapier> ok
[04:31:40] <rapier> thank you again
[04:31:42] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:31:42] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:32:32] *** Joins: brabrax (~brabrax@user/brabrax)
[04:32:38] *** Quits: phlixi_ (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[04:35:13] *** Joins: runelind (~runelind@user/runelind)
[04:35:16] *** Joins: Viewday115 (~Viewday@user/viewday)
[04:35:25] *** Joins: califax (~califax@user/califx)
[04:36:40] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f) (Quit: Konversation terminated!)
[04:36:45] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:36:45] *** Viewday115 is now known as Viewday11
[04:37:12] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[04:37:18] <rapier> python supports: tuple(i for i in range(6))
[04:37:22] <rapier> python supports: list(i for i in range(6))
[04:37:26] <rapier> python doesn't support: dict(i:i for i range(6))
[04:37:34] <rapier> interesting
[04:37:57] *** Quits: Macuser (~Macuser@2600:1003:b46e:747e:c053:f977:a2d4:e642) (Ping timeout: 240 seconds)
[04:38:50] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[04:39:17] <gjvc> set(i for i in range(6)) is ok too
[04:39:25] <rapier> great
[04:39:29] <grym> dict's ctor is complicated
[04:39:39] <bjs> rapier: because there are dictionary comprehensions directly. {i:i for i in range(6)}
[04:39:45] <grym> so the explicit comprehension is i guess the only way
[04:40:08] <rapier> i see
[04:40:12] <bjs> rapier: the syntax f(... for ... in ...) is really making a generator comprehension and passing it to the function.  `f(x for x in y)` is the same as `f((x for x in y))` where `(x for x in y)` makes a generator object.
[04:40:29] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f)
[04:40:45] *** tdsmith_ is now known as tdsmith
[04:40:49] <bjs> rapier: in this case, dict(...) is a function that takes an iterable of pairs, so you can have dict((i,i) for i in range(6))   for example
[04:41:37] <rapier> ok
[04:42:16] <rapier> great, bjs
[04:42:17] <bjs> rapier: Python has lots of comprehensions, `(x for x in y)` makes a generator,  but `[x for x in y]` makes a list, `{x for x in y}` makes a set, `{x:x for x in y}` makes a dict.
[04:42:20] <rapier> i got it
[04:43:04] <rapier> it's funny, this info doesn't seem to be on the most website to learn python
[04:43:12] <grym> most websites are bad!
[04:43:20] *** stonkey2 is now known as stonkey
[04:43:22] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[04:43:26] <bjs> rapier: it'll definitely be on docs.python.org/ !
[04:43:37] *** Joins: stonkey (~stonkey@user/stonkey)
[04:43:58] <rapier> they show comprehension lists as [x for loop] only
[04:44:09] <bjs> rapier: yes, that is the most common kind, but it's not the only.
[04:44:17] <rapier> ok
[04:44:49] *** Joins: Macuser (~Macuser@2600:1003:b451:8e4a:98b8:e5ae:6160:1cad)
[04:45:17] *** Dap is now known as DaPinkOne
[04:45:45] <Yhg1s> rapier: even docs.python.org/tutorial mentions dict comprehensions and generator expressions.
[04:46:11] <rapier> thank you too, Yhg1s
[04:46:53] <rapier> python is a powerful too... the more I study, the more it me impressed
[04:47:18] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[04:47:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:47:45] *** Joins: sgn (~sgn@user/sgn)
[04:48:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:49:43] *** Joins: sabx (~sabbas@user/sabbas)
[04:50:26] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[04:51:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:51:56] *** Joins: sgn (~sgn@user/sgn)
[04:52:26] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[04:53:20] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:53:57] *** Quits: sabx (~sabbas@user/sabbas) (Ping timeout: 240 seconds)
[04:54:17] *** Joins: ensyde (~ensyde@2600:1702:2e30:1a40:c809:1c51:d4e7:3d0a)
[04:54:55] *** Joins: smoke (~smoke@user/smoke)
[04:55:10] *** Quits: smoke (~smoke@user/smoke) (Max SendQ exceeded)
[04:55:28] *** Joins: smoke (~smoke@user/smoke)
[04:57:42] *** Joins: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com)
[04:58:32] *** Joins: Viewday117 (~Viewday@user/viewday)
[04:59:07] <jello> Hello, I have two dicts of string->dict with matching keys that I'd like to combine. So, I've tried `data = { r: {**foo[r],**bar.get(r)} for r in foo }`. How do I make this robust if the second dict (bar) is missing one of the keys in the first (foo)?
[04:59:43] <jello> at the moment I get TypeError: 'NoneType' object is not a mapping
[05:00:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:00:02] *** Viewday117 is now known as Viewday11
[05:00:16] <jello> presumably because you can't apply ** to a None returned by bar.get() when it's missing one of the keys that exists in foo
[05:00:37] <Yhg1s> jello: well, if you really want to write it like that, dict.get() takes a second argument that's the default to use when the key isn't in the dict.
[05:00:37] <grym> jello: bar.get(r, dict()), possibly
[05:00:41] *** Quits: nomic (~nomic@185.198.243.236) (Quit: Leaving)
[05:00:55] <jello> Yhg1s: i'm open to other approaches
[05:01:15] <jello> grym: that seems reasonable to me
[05:01:35] <jello> or maybe bar.get(r, {})
[05:01:49] <jello> oh nvm, that would be a set, right?
[05:01:55] <Yhg1s> no, that would be a dict.
[05:02:23] <Yhg1s> (I would wouldn't cram everything into a single comprehension like that, and instead do the foo/bar getting and dict merging in a helper function.)
[05:03:35] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[05:04:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:04:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:05:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[05:07:08] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[05:07:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:07:47] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:07:56] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[05:09:02] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[05:09:06] *** Joins: Valeria (~Valeria@user/valeria)
[05:09:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:09:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:10:44] <parv> It was mildly surprising that insertion order in "dict" is rather strong (at least in python 3.10): { 'a': 3, 'b' : 4, 'a': 7 } results in { 'a': 7, 'b': 4 } not vice versa
[05:11:45] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[05:11:46] <Yhg1s> parv: you mean "it surprises me that dicts are ordered"? They've been ordered since 3.6.
[05:12:13] <parv> Yhg1s, No; that did not result in { 'b': 4, 'a': 7 }
[05:12:29] <jello> grym, Yhg1s: thanks that worked. Much appreciated!
[05:12:40] *** Parts: jello (~joe@cpe-67-247-57-25.nyc.res.rr.com) ()
[05:12:51] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[05:12:52] <Yhg1s> parv: oh, I see. Yes, the keys are evaluated left to right, just like almost everything.
[05:13:36] <parv> ... it is not that last key-value wins but last value for key added earlier wins
[05:13:38] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[05:13:48] <Repiphany> You have to delete a key instead of overwriting if you really wanted to change the order for some reason
[05:13:52] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:14:09] <Repiphany> Overwriting keeps the original key order
[05:14:15] *** Joins: tejr (~tejr@user/tejr)
[05:14:17] <jim87> is it possible to make a console_script in setup.cfg optional, like requirements?
[05:14:22] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:5572:85e6:1399:6185) (Quit: I have gone to sleep. ZZZzzz…)
[05:14:32] <parv> I was just thinking about the dict-merging, that's all
[05:14:36] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:e80b:197f:ca5b:a131)
[05:14:48] <jim87> i.e. if I install mypackage[gui], I'll install both the extra requirements for the GUI and the command itself
[05:17:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:17:51] *** Joins: gil (~gil@2603-8080-e007-3e82-0000-0000-0000-1742.res6.spectrum.com)
[05:18:47] *** Parts: gil (~gil@2603-8080-e007-3e82-0000-0000-0000-1742.res6.spectrum.com) ()
[05:18:59] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[05:19:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:19:34] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:908d:913a:17a0:82a4)
[05:20:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:21:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:21:46] *** Quits: uniqdom (~dodo@186.11.26.75) (Quit: Leaving)
[05:24:57] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::1f) (Remote host closed the connection)
[05:26:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:26:11] *** Joins: sgn_ (~sgn@user/sgn)
[05:26:39] *** Joins: artag (~adrian@2a00:1098:8:128::1)
[05:27:26] *** Joins: jazzy (~jaziz@user/jaziz)
[05:28:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:28:30] *** Joins: esv (~esv@74.124.178.154)
[05:28:33] *** Quits: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28) (Quit: Konversation terminated!)
[05:30:05] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:30:55] *** Quits: xizhendu_ (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Quit: Leaving)
[05:31:41] *** Joins: fef (~thedawn@user/thedawn)
[05:33:49] *** Quits: ge0rgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:35:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[05:35:51] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[05:36:05] *** Quits: rjwiii (~mr-rich@072-187-031-098.res.spectrum.com) (Changing host)
[05:36:05] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[05:39:20] *** Joins: bluedust (~bluedust@89.238.143.233)
[05:41:47] *** Quits: sgn_ (~sgn@user/sgn) (Ping timeout: 256 seconds)
[05:42:33] <grym> looks like he left, but apparently yes: https://setuptools.pypa.io/en/latest/userguide/entry_point.html#dependency-management
[05:42:37] <grym> which i did not know!
[05:43:18] <grym> that's very nice actually
[05:43:37] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 240 seconds)
[05:44:13] *** Quits: wh (~wh@85.154.68.131) (Ping timeout: 240 seconds)
[05:44:19] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[05:44:22] *** Joins: wh (~wh@82.178.218.104)
[05:44:48] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[05:44:59] *** Joins: tristan_ (~tristan@223.62.162.12)
[05:46:09] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[05:50:28] *** Joins: califax- (~califax@user/califx)
[05:52:18] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 260 seconds)
[05:53:05] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:53:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:53:57] *** brabrax_ is now known as brabrax
[05:53:59] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[05:54:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[05:54:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:54:28] *** califax- is now known as califax
[05:56:03] *** Joins: dowcet (~dowcet@c-24-91-133-188.hsd1.ct.comcast.net)
[05:56:47] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[05:57:03] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[05:58:17] *** Quits: Macuser (~Macuser@2600:1003:b451:8e4a:98b8:e5ae:6160:1cad) (Quit: Textual IRC Client: www.textualapp.com)
[05:58:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[05:59:11] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[05:59:52] *** Quits: dowcet (~dowcet@c-24-91-133-188.hsd1.ct.comcast.net) (Client Quit)
[06:00:19] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[06:04:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:04:53] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:05:04] *** Joins: Guest57 (~Guest57@2600:1010:b1ea:a51b:f83e:d919:dc5:858e)
[06:05:25] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[06:05:51] *** Joins: qpdb (~qpdb@user/qpdb)
[06:07:58] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[06:09:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:09:23] *** Quits: XV8 (~XV8@2601:5cb:c001:50:c524:87c6:af5c:7cdb) (Quit: Textual IRC Client: www.textualapp.com)
[06:10:07] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[06:10:14] *** Quits: parv (~quass@user/parv) (Quit: parv)
[06:10:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:10:42] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:11:21] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 268 seconds)
[06:11:51] *** Joins: PyMaster22 (~pymaster2@2600:1010:b1ea:a51b:c5c2:ff39:4011:c904)
[06:13:19] *** Joins: lethu (~lethu@user/lethu)
[06:14:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:15:33] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:15:54] *** dodo__ is now known as dodo
[06:16:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:17:34] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[06:17:50] *** Quits: Guest57 (~Guest57@2600:1010:b1ea:a51b:f83e:d919:dc5:858e) (Quit: Client closed)
[06:21:50] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:06] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:25:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:25:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:26:21] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[06:28:23] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[06:30:06] *** Joins: Lazenca (Lazenca@user/lazenca)
[06:31:01] *** Quits: zaz_ (~zaz@poneybl.eu) (Quit: bye)
[06:31:08] *** Joins: Vonter (~Vonter@user/vonter)
[06:31:19] *** Joins: jamea (~jamea@177.239.81.39)
[06:31:26] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:33:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:33:21] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:37] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[06:36:28] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:37:31] <altendky> grym: last i played with that, not super recently, it setuptools still created the entry point executable file and it failed with a complaint about the extra.  i think...  note they say "only viable" not "only available", and "might exclude".
[06:38:00] *** Joins: Warped (~Warped@user/warped)
[06:38:00] *** Quits: Bakunin (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[06:38:27] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[06:38:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:40:14] *** Joins: Bakunin (~maplefing@user/lindis)
[06:40:14] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:40:17] *** Quits: newbie|3 (~Warped@user/warped) (Ping timeout: 240 seconds)
[06:42:49] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:43:55] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[06:45:43] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Changing host)
[06:45:43] *** Joins: Peng_ (~mnordhoff@user/Peng)
[06:45:43] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Changing host)
[06:45:43] *** Joins: Peng (~mnordhoff@user/Peng)
[06:46:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:46:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:46:40] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:52:27] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[06:52:49] *** Joins: r3m (~launch@user/r3m)
[06:55:55] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f0a6)
[06:57:08] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[06:57:52] <bilb_ono> when I enter this string as a variable is it actually getting changed? Or does it just format it like that for my sake? https://bpa.st/LUVQ
[06:59:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[07:01:17] *** Quits: tristan_ (~tristan@223.62.162.12) (Ping timeout: 240 seconds)
[07:01:22] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 260 seconds)
[07:01:34] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[07:02:34] <Peng> bilb_ono: Try print(d)
[07:03:10] <bilb_ono> Peng: oh yeah that does it the same
[07:03:28] <bilb_ono> like without the double \\
[07:03:45] <bilb_ono> so I guess its something about the shell?
[07:03:55] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[07:03:59] <Peng> bilb_ono: It's displaying the repr()
[07:04:13] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[07:05:14] <bilb_ono> why does the repr() have escaped \'s ?
[07:05:48] *** Joins: jamea (~jamea@177.239.81.39)
[07:08:41] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[07:09:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:10:11] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[07:11:43] <Peng> Well, \ is used for escape sequences. I don't know why repr() always escapes them instead of only when required.
[07:11:55] <Peng> *I* always escape them since it's simpler than remembering the more obscure escape sequences
[07:13:05] *** Joins: adeliktas9 (~adeliktas@i59F5F8A0.versanet.de)
[07:13:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:14:04] *** Quits: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55) (Quit: Client limit exceeded: 20000)
[07:14:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:14:30] <bilb_ono> Im having trouble getting this regex expression to match https://bpa.st/7P5A It seems to match on regexpr.com but Im not sure how to get the python formatting to the right thing so that it matches
[07:14:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:14:43] *** Quits: adeliktas (~adeliktas@i59f52f41.versanet.de) (Ping timeout: 256 seconds)
[07:14:43] *** adeliktas9 is now known as adeliktas
[07:14:43] *** Joins: Rohit[m] (~rohitrohi@2001:470:69fc:105::1:5d55)
[07:16:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:17:00] <Peng> bilb_ono: re.match() acts like ^ is at the beginning. Try re.search()?
[07:17:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:17:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:17:14] *** finn_elija is now known as FinnElija
[07:17:28] <bilb_ono> oh wow that totally works
[07:17:45] <bilb_ono> for both string formats
[07:17:49] <bilb_ono> thanks Peng
[07:18:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:19:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:19:24] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[07:20:00] *** Quits: wh (~wh@82.178.218.104) (Quit: Be gone.)
[07:20:57] *** Joins: wh (~wh@82.178.218.104)
[07:21:26] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[07:22:33] *** Joins: perrierjouet (~perrier-j@185.128.26.174)
[07:22:37] *** Quits: thorbw (~tw@46.230.130.50) (Remote host closed the connection)
[07:22:39] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[07:24:57] *** Joins: jcsteele (~textual@104-2-180-239.lightspeed.rlghnc.sbcglobal.net)
[07:27:39] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:29:27] *** Quits: martingale (~beta@170-83-120-154.customer.nbtos.com.br) (Ping timeout: 256 seconds)
[07:29:39] *** Joins: djapo (~archangel@user/djapo)
[07:30:00] <Feuermagier> I have a list that looks like this: [("a",stuff), ("a", stuff), ("b",stuff), ("c", stuff), ("c", stuff)] - How do I transform it into: [("a_0",stuff), ("a_1", stuff), ("b",stuff), ("c_0", stuff), ("c_1", stuff)] ?
[07:30:09] *** Quits: perrierjouet (~perrier-j@185.128.26.174) (Ping timeout: 256 seconds)
[07:31:29] <phy1729> not {"a": [stuff, stuff], "b": [stuff], "c": [stuff, stuff]} ?
[07:31:45] *** Quits: jcsteele (~textual@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Quit: jcsteele)
[07:32:11] *** Joins: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net)
[07:33:12] <Feuermagier> phy1729, It's a list of names to links, but the names are not unique
[07:33:37] <KirkMcDonald> Feuermagier: Are these initial letters always grouped like this?
[07:33:51] <Feuermagier> the links get passed on as ("filename", url) to a downloader, so I need to make them unique
[07:33:51] <KirkMcDonald> So all the "a" items are in a group, then all the "b" items, and so on?
[07:33:52] <phy1729> indices = {}; new_list = []; for key, value in old_list: index = indices.get(key); new_list.append((f'{key}_{index}', value)); indicies[key] = index + 1
[07:33:57] *** Quits: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net) (Client Quit)
[07:33:59] <phy1729> but with newlines
[07:34:33] *** Joins: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb)
[07:36:00] *** Joins: data_dan_ (~user@ip68-224-22-86.lv.lv.cox.net)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:23] <Peng> phy1729: .get(key, 0)
[07:36:31] <Peng> Or defaultdict/Counter. :D
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:52] <KirkMcDonald> Or, if the items are adjacent like that: itertools.groupby()
[07:36:54] <Feuermagier> KirkMcDonald, think of it less then a group - in theory, yes, in practice i handle each of them as a separate object. It's more of an edge case.
[07:37:43] <phy1729> Peng: bah I had that in my head, but my fingers forgot; thanks
[07:38:52] *** Parts: data_dan_ (~user@ip68-224-22-86.lv.lv.cox.net) (ERC 5.4 (IRC client for GNU Emacs 28.0.90))
[07:44:50] *** Quits: bninja (~bloodninj@user/bloodninja) (Quit: So long King Bowser!)
[07:45:05] *** Joins: bninja (~bloodninj@user/bloodninja)
[07:45:10] *** bninja is now known as bloodninja
[07:49:30] <rapier> i didn't know that, guys >>> Loop statements may have an else clause; it is executed when the loop terminates through exhaustion of the iterable (with for) or when the condition becomes false (with while), but not when the loop is terminated by a break statement. T
[07:49:36] <rapier> why?
[07:49:55] *** Parts: Norkle_ (~norkle@admin.nasa-g0v.com) ()
[07:49:55] <rapier> is it confusion too much?
[07:50:18] <rapier> how can you combine 'for loop' with 'else'?
[07:50:38] <rapier> that was bizarre
[07:50:41] <rapier> is*
[07:52:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:52:59] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[07:53:57] <rapier> the beauty of python is its identation
[07:54:15] <rapier> why is there things like 'continue'?
[07:56:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:32] <Peng> I don't know. Some computer scientist 50 or 60 years ago had a good idea.
[07:59:54] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[08:00:26] *** Joins: bluedust (~bluedust@89.238.143.233)
[08:00:56] <phy1729> it's real handy for things like retry attempts or finding a thing in a collection
[08:01:53] <phy1729> for item in ...: if we_want(item): break         else: raise ValueError(...)     do stuff with item
[08:03:36] <rapier> hum...
[08:03:47] <rapier> i'll think about it
[08:04:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:04:15] *** Joins: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net)
[08:04:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:04:51] <phy1729> for attempt in range(5): try to do thing; if success: break      else: raise SomeError
[08:06:31] *** llua` is now known as llua
[08:07:03] <hackers> dicts are ordered!? hah!
[08:07:41] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:d47d:56db:5959:f325) (Ping timeout: 252 seconds)
[08:10:27] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:10:33] *** Phase is now known as Phase_
[08:10:51] <Peng> hackers: Yes, for the last few versions
[08:11:01] *** Joins: Phase3 (~phase@user/phase)
[08:11:07] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[08:11:29] *** Phase3 is now known as Phase
[08:11:32] *** Quits: sreve (~quassel@p4ff441bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:11:56] *** Joins: sreve (~quassel@p549d7115.dip0.t-ipconnect.de)
[08:12:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:14:55] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[08:15:01] *** Joins: sabx (~sabbas@user/sabbas)
[08:15:40] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[08:19:24] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:20:30] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[08:23:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:23:37] *** Joins: nac5 (~nac@user/nac)
[08:24:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[08:24:57] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 240 seconds)
[08:24:59] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[08:25:06] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[08:25:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[08:25:50] *** Quits: nac (~nac@user/nac) (Ping timeout: 260 seconds)
[08:25:50] *** nac5 is now known as nac
[08:26:55] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[08:28:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:28:57] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:29:07] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[08:31:32] *** Joins: frost (~frost@user/frost)
[08:32:23] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[08:32:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[08:32:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[08:36:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[08:38:47] *** Quits: foxbox (~cammy@user/cammy) (Read error: Connection reset by peer)
[08:40:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[08:41:18] *** Joins: foxbox (~cammy@user/cammy)
[08:44:43] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:45:35] <Feuermagier> Are the aquire() calls to a python Semaphore executed in order?
[08:46:00] <Feuermagier> as in: will the thread requesting .aquire() first get the next free resource?
[08:46:16] <Feuermagier> or will a random thread in the waiting pool get access?
[08:46:37] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[08:48:28] *** Joins: analoq (~yashi@user/dies)
[08:50:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:54:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:54:57] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 240 seconds)
[08:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:59:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:01:14] *** Joins: dvx (~dvx@5.181.92.64)
[09:03:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:04:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:04:40] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[09:06:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:06:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:09:01] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Ping timeout: 240 seconds)
[09:09:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:11:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:15:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:16:46] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[09:17:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:22:12] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:22:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[09:23:57] *** Joins: oda (~oda@189.4.77.89)
[09:25:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:25:48] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[09:27:31] *** Joins: stranac (~stranac@195.29.239.126)
[09:27:31] *** Quits: oda (~oda@189.4.77.89) (Read error: Connection reset by peer)
[09:29:43] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[09:30:10] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[09:30:58] *** Joins: iflema (~ian@user/iflema)
[09:31:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:32:44] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:33:01] *** Joins: pantax (~pantax@46.198.170.131)
[09:33:41] *** Joins: oda (~oda@189.4.77.89)
[09:36:15] <pantax> Why does the first print, prints None while the second prints the expected value? https://bpa.st/4E6A
[09:37:25] <BrenBarn> because `.remove()` returns None
[09:38:47] <pantax> Thanks
[09:38:59] *** Joins: bluedust_ (~bluedust@117.207.230.68)
[09:39:05] <pantax> Can I make it an one-liner anyway?
[09:39:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:41:35] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[09:41:39] <Repiphany> Walrus abuse `(b := a.copy()).remove('one')`
[09:42:37] *** Quits: bluedust (~bluedust@89.238.143.233) (Ping timeout: 256 seconds)
[09:44:05] <Repiphany> List comprehension is more straightforward if you don't mind removing all instances of the element, `b = [elem for elem in a if elem != 'one']`
[09:44:30] <Peng> pantax: Not everything has to be a one liner. Computer screens are multiple lines tall for a reason.
[09:44:54] <Peng> pantax: For that case you could do "b = a[1:]" though. :D
[09:46:11] *** Parts: oda (~oda@189.4.77.89) ()
[09:49:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:49:26] *** Joins: sudomann (~sudomann@98.219.211.182)
[09:53:16] *** Joins: pepper (~pepper@user/pepper)
[09:54:05] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[09:54:05] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[09:55:28] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[09:55:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:57:12] *** BillyZane2 is now known as BillyZane
[09:58:55] *** Quits: bluedust_ (~bluedust@117.207.230.68) (Remote host closed the connection)
[09:59:33] *** Joins: bluedust (~bluedust@103.148.20.45)
[10:05:16] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:06:05] *** Joins: foxbox3 (~cammy@user/cammy)
[10:08:08] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Read error: Connection reset by peer)
[10:09:17] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:10:27] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[10:11:49] *** Joins: delvian (~delvian@41.13.208.22)
[10:11:58] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:12:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:13:36] *** Quits: off^ (~off@207.5.21.20) (Remote host closed the connection)
[10:19:16] *** Parts: pystardust_ (~pystardus@2001:19f0:4401:f8:5400:3ff:fec4:f98c) ()
[10:20:05] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:21:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:22:49] *** Joins: pystardust (~pystardus@2001:19f0:4401:f8:5400:3ff:fec4:f98c)
[10:23:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:24:21] *** Quits: wh (~wh@82.178.218.104) (Read error: Connection reset by peer)
[10:26:57] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[10:26:57] *** Joins: demon__ (~user@62.114.149.127)
[10:26:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:27:12] *** Joins: Maikel (~Maikel@130.61.63.136)
[10:27:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:27:49] *** Parts: Maikel (~Maikel@130.61.63.136) ()
[10:29:26] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:30:13] *** Quits: anotheruser (~user@62.114.166.128) (Ping timeout: 256 seconds)
[10:30:55] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:31:16] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-237-28.poda.cz)
[10:31:30] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[10:32:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:34:17] *** Quits: demon__ (~user@62.114.149.127) (Ping timeout: 240 seconds)
[10:34:58] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[10:36:46] *** foxbox3 is now known as foxbox
[10:36:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:38:33] *** Joins: teut (~teut@2401:4900:1c68:ebe9:406e:a6ef:775b:b5e7)
[10:39:51] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[10:40:16] *** Quits: plitter (~user@user/plitter) (Remote host closed the connection)
[10:41:10] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:41:16] *** Joins: andreasbuhr (~quassel@p5dcf911a.dip0.t-ipconnect.de)
[10:42:20] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:43:01] *** Quits: seabre (~seabre@user/seabre) (Quit: ZNC 1.8.2 - https://znc.in)
[10:43:20] *** Joins: seabre (~seabre@user/seabre)
[10:43:54] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[10:44:28] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:45:08] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[10:45:10] *** Quits: bluedust (~bluedust@103.148.20.45) (Remote host closed the connection)
[10:45:15] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[10:45:28] *** Quits: andreasbuhr (~quassel@p5dcf911a.dip0.t-ipconnect.de) (Client Quit)
[10:45:49] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:46:19] *** Joins: bluedust (~bluedust@103.148.20.45)
[10:46:21] *** Joins: andreasbuhr (~quassel@p5dcf911a.dip0.t-ipconnect.de)
[10:46:37] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.236)
[10:46:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:48:24] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[10:48:57] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:49:03] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:49:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:49:38] *** Quits: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:49:39] *** Joins: humberto1 (~humbertow@187.202.198.61)
[10:50:17] *** Quits: bluedust (~bluedust@103.148.20.45) (Ping timeout: 240 seconds)
[10:50:41] *** Quits: pantax (~pantax@46.198.170.131) (Quit: Leaving)
[10:51:11] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.236) (Ping timeout: 256 seconds)
[10:52:07] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[10:54:55] *** Joins: bluedust (~bluedust@103.148.20.45)
[10:55:54] *** Joins: v__ (~v@194.226.32.200)
[10:55:57] *** Joins: palasso (~palasso@user/palasso)
[10:56:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:56:36] *** Joins: rendar (~rendar@user/rendar)
[10:56:36] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[10:56:52] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[10:57:11] *** Quits: Strom (strom@fedora/strom) ()
[10:57:47] *** Quits: bluedust (~bluedust@103.148.20.45) (Remote host closed the connection)
[10:58:17] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[10:59:18] *** Joins: Strom (strom@fedora/strom)
[11:00:56] *** Quits: v__ (~v@194.226.32.200) ()
[11:01:48] *** noord_ is now known as noord
[11:03:15] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:03:41] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:102f:e281:42e:89a4)
[11:04:09] *** Joins: seednode (~seednode@user/seednode)
[11:05:29] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[11:06:06] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e6:2aaa:ed7c:b42f:6ab4:354f)
[11:06:57] *** Joins: dsrt^ (~dsrt@207.5.21.20)
[11:08:16] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:08:19] *** Joins: esenegoid (~diogenese@diogenese.velotech.net)
[11:08:24] *** Quits: esenegoid (~diogenese@diogenese.velotech.net) (Client Quit)
[11:11:48] *** Joins: mrwick (~mrwick@user/mrwick)
[11:15:15] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:15:18] *** Joins: manti7 (~manti7@176.10.104.94)
[11:18:14] *** Joins: sudomann (~sudomann@98.219.211.182)
[11:21:22] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Quit: Leaving...)
[11:22:23] *** Quits: inomoz (~inomoz@176.59.118.12) (Remote host closed the connection)
[11:22:34] *** Quits: Hazza (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[11:22:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[11:22:50] *** Joins: kosh (~kosh@user/kosh)
[11:23:26] *** Joins: SmplyPddy (~SmplyPddy@user/SmplyPddy)
[11:24:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[11:24:46] *** Joins: inomoz (~inomoz@176.59.118.12)
[11:25:01] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[11:25:10] *** Joins: saroy (~Sandipan@43.252.250.96)
[11:26:05] *** Joins: humberto1 (~humbertow@187.202.198.61)
[11:26:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:26:27] *** Quits: saroy (~Sandipan@43.252.250.96) (Client Quit)
[11:26:33] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[11:27:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:31:50] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:32:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:32:12] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[11:32:28] *** Quits: delvian (~delvian@41.13.208.22) (Quit: Leaving)
[11:32:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:34:24] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[11:34:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:35:23] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:57] *** Joins: sudomann (~sudomann@98.219.211.182)
[11:36:02] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Client limit exceeded: 20000)
[11:37:47] *** Joins: maharshipatel (~maharship@43.250.157.181)
[11:38:00] *** Joins: rakoon_ (~rakoon@2001:985:f4c6:1:4d79:b0:a92a:f6cb)
[11:38:10] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[11:39:21] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[11:39:55] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[11:40:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[11:41:37] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 240 seconds)
[11:41:51] *** Joins: wilk (~wilk@user/wilk)
[11:43:38] *** Quits: wilk (~wilk@user/wilk) (Quit: Reconnecting)
[11:43:45] *** Joins: wilk (~wilk@acdu45.neoplus.adsl.tpnet.pl)
[11:43:45] *** Quits: wilk (~wilk@acdu45.neoplus.adsl.tpnet.pl) (Changing host)
[11:43:45] *** Joins: wilk (~wilk@user/wilk)
[11:44:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:44:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:45:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:45:49] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[11:48:40] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:49:38] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[11:51:31] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:52:08] *** Joins: sudomann (~sudomann@98.219.211.182)
[11:52:17] *** Quits: teut (~teut@2401:4900:1c68:ebe9:406e:a6ef:775b:b5e7) (Quit: Client closed)
[11:53:29] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:e80b:197f:ca5b:a131) (Read error: Connection reset by peer)
[11:56:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[11:57:03] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:6ebd:9831:1706:e3de:b0b8) (Remote host closed the connection)
[11:57:41] *** Joins: chele (~chele@user/chele)
[11:58:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:58:50] *** Joins: delvian (~delvian@41.13.208.22)
[12:00:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:23] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[12:00:31] *** Joins: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr)
[12:02:37] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[12:03:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[12:04:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:07:03] *** Joins: shad (~shad@user/shad)
[12:07:38] *** Joins: fef (~thedawn@user/thedawn)
[12:09:11] *** Quits: Madda (~Madda@2a05:f6c3:1935:0:f177:b74:7b4:295c) (Ping timeout: 250 seconds)
[12:12:07] *** Quits: raek (~raek@2.70.208.106.mobile.tre.se) (Quit: raek)
[12:13:25] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:13:46] *** Joins: raek (~raek@2.70.208.106.mobile.tre.se)
[12:14:26] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[12:14:50] *** Joins: lazy1 (~tebeka@2a10:8008:5423:0:dd80:6d2e:a777:c8de)
[12:15:11] *** Quits: maharshipatel (~maharship@43.250.157.181) (Quit: Client closed)
[12:15:38] *** Joins: pycode (~pycode3@2001:b07:5d28:551:d18f:9471:441b:1759)
[12:16:28] *** Joins: SallyAhaj__ (~SallyAhaj@user/sallyahaj)
[12:18:37] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[12:18:47] *** Quits: dmr_ (~rdumitru@95.76.135.3) (Quit: WeeChat 3.3)
[12:21:18] *** Joins: Madda (~Madda@2a05:f6c3:1935:0:3cb3:ab65:d036:3f4)
[12:23:37] *** Quits: hackers (~self@user/hackers) (Ping timeout: 240 seconds)
[12:23:59] *** Joins: sudomann (~sudomann@98.219.211.182)
[12:24:31] *** Joins: hackers (~self@user/hackers)
[12:24:46] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:24:59] *** Parts: neolem (~neolem@2001:470:69fc:105::c675) ()
[12:25:03] *** Quits: apteryx (~maxim@dsl-153-36.b2b2c.ca) (Ping timeout: 268 seconds)
[12:26:27] *** Joins: raxor2k (~raxor2k@78.158.254.45)
[12:26:30] *** Parts: raxor2k (~raxor2k@78.158.254.45) ()
[12:28:01] *** Joins: iob (~iob@2a00:1028:8390:9e8a:5cf8:25c0:aa4e:e57d)
[12:28:30] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 260 seconds)
[12:28:39] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[12:29:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:30:00] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[12:30:50] *** Quits: moose (~moose@user/moose) (Ping timeout: 260 seconds)
[12:31:05] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[12:31:51] *** Joins: nickodd (~nickodd@user/nickodd)
[12:32:21] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[12:34:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:34:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:36:16] *** simplici1y is now known as simplicity
[12:36:24] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:38:09] *** Joins: apteryx (~maxim@dsl-152-60.b2b2c.ca)
[12:39:39] *** Joins: agonhajdari (~textual@user/agonhajdari)
[12:40:37] *** Joins: Thanatos (~Thanatos@105.112.29.192)
[12:42:56] *** Quits: lazy1 (~tebeka@2a10:8008:5423:0:dd80:6d2e:a777:c8de) (Quit: Leaving)
[12:43:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:43:31] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[12:44:39] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[12:46:19] *** Joins: tristan_ (~tristan@223.62.188.145)
[12:48:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[12:49:19] *** SallyAhaj__ is now known as SallyAhaj
[12:50:35] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[12:50:57] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:52:57] *** Joins: Vonter (~Vonter@user/vonter)
[12:53:09] *** Joins: Adridri (~Adridri@user/Adridri)
[12:53:30] *** Quits: Adridri (~Adridri@user/Adridri) (Client Quit)
[12:55:17] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[12:56:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:d18f:9471:441b:1759) (Ping timeout: 240 seconds)
[12:58:11] *** Joins: sudomann (~sudomann@98.219.211.182)
[12:59:27] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:00:19] *** Joins: nomic (~nomic@185.198.243.236)
[13:00:29] *** Quits: Betal_ (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:01:37] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:04:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[13:04:55] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[13:07:02] *** erry_ is now known as erry
[13:07:53] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[13:12:28] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:12:46] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[13:12:46] *** Joins: l4yer (~l4yer@84.69.191.245)
[13:13:33] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[13:14:33] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:14:36] <sreve> Can someone recommen an api for generating UML diagram in python? I don't search the api for generating the diagrams for python code. Just for free painting them.
[13:14:51] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[13:15:44] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:36] <energizer> sreve: UML has many different kinds of diagrams. which kind do you want?
[13:17:08] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1b8b:86aa:8c4b:5377)
[13:17:31] *** Quits: l4yer (~l4yer@84.69.191.245) (Ping timeout: 256 seconds)
[13:18:12] *** Quits: SmplyPddy (~SmplyPddy@user/SmplyPddy) (Quit: bye)
[13:18:14] <sreve> energizer: Dataflowdiagrams
[13:19:06] <energizer> sreve: do you know about https://app.diagrams.net/
[13:19:57] *** Quits: tristan_ (~tristan@223.62.188.145) (Ping timeout: 240 seconds)
[13:20:00] *** Joins: ThanatosJ (~Thanatos@105.112.182.234)
[13:20:19] <sreve> energizer: sorry, I don't want to manually create them.
[13:20:20] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[13:20:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:01] *** Joins: The_Jag (~The_Jag@host-79-52-45-220.retail.telecomitalia.it)
[13:22:18] *** wyre_ is now known as wyre
[13:22:24] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[13:23:03] *** Quits: Thanatos (~Thanatos@105.112.29.192) (Ping timeout: 256 seconds)
[13:23:20] <energizer> sreve: maybe https://github.com/blockdiag/blockdiag
[13:24:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:24:45] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[13:26:23] *** Quits: andreasbuhr (~quassel@p5dcf911a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:26:40] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-85.range86-160.btcentralplus.com)
[13:28:10] <sreve> energizer: I will take a deeper look to it.
[13:28:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:29:01] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:30:24] <energizer> sreve: tbh it's probably pretty straightforward to write some functions and generate Mermaid strings yourself
[13:30:47] *** Joins: l4yer (~l4yer@178.239.168.223)
[13:31:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:34:43] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:37:45] *** Joins: parv (~quass@user/parv)
[13:38:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[13:40:39] *** Joins: dingen (~dreamer@user/dreamer)
[13:40:45] *** dingen is now known as dreamer
[13:44:37] <sreve> energizer: it looks like draw.io
[13:44:43] *** Quits: ThanatosJ (~Thanatos@105.112.182.234) (Ping timeout: 256 seconds)
[13:44:45] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-85.range86-160.btcentralplus.com) (Quit: Leaving.)
[13:45:27] <sreve> ups, sorry my fault.
[13:46:32] <rapier> i didn't understand. In docs.python.org, why doesn't example of match statements work?
[13:46:48] <nedbat> rapier: which example, and how doesn't it work?
[13:47:20] <rapier> https://bpa.st/K37Q
[13:47:30] <rapier> i got syntax error
[13:47:42] <rapier> match seems invalid command
[13:47:48] <nedbat> rapier: match is new in 3.10
[13:48:02] <rapier> thanks, nedbat
[13:48:05] <rapier> wow
[13:48:19] <rapier> i need to update my python
[13:50:00] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[13:51:05] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[13:52:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:53:37] *** Quits: ensyde (~ensyde@2600:1702:2e30:1a40:c809:1c51:d4e7:3d0a) (Ping timeout: 240 seconds)
[13:54:17] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[14:00:13] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:01:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[14:01:30] *** Lord_of_Life_ is now known as Lord_of_Life
[14:03:46] *** Joins: sdfgsdfgsdfgsfsd (~sdfgsdfg@user/sdfgsdfg)
[14:03:51] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[14:04:55] *** Joins: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs)
[14:05:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:07] *** Joins: paul424 (~tom@ip-31-0-124-77.multi.internet.cyfrowypolsat.pl)
[14:05:47] <rapier> i'm reading the pep 636... i'm trying to understand why do they add 'match' to the python? I feel things like 'match' takes away all simplicity from python.
[14:05:48] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:05:56] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:06:07] *** Joins: xkuru (~xkuru@user/xkuru)
[14:06:50] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[14:07:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:07:17] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:07:49] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[14:08:30] <supakeen> other people find it's an often used thing that can simplify certain usecases
[14:08:33] <energizer> i was definitely surprised to hear match is a statement
[14:08:46] *** Joins: Vonter (~Vonter@user/vonter)
[14:09:45] *** Joins: someuser (~user@197.54.98.58)
[14:10:41] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[14:10:51] *** Joins: tristan_ (~tristan@223.62.216.10)
[14:10:57] <energizer> PEP doesn't explain why it's designed that way
[14:12:09] *** Quits: ano (~ano@user/ano) (Quit: ano)
[14:12:10] <rapier> i see... but i'm reading pep 635, it is saying somthing about motivation for match
[14:12:21] <rapier> something*
[14:12:38] *** Joins: ano (~ano@user/ano)
[14:13:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:13:14] <rapier> supakeen, people come from another languages
[14:13:22] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:13:31] <rapier> i know, i know languages are just tools
[14:13:38] *** Joins: bkhl (~bkhl@user/bkhl)
[14:13:39] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[14:14:07] <rapier> you have a small set of instruction, it easy for learning
[14:14:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:14:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:15:05] <nedbat> rapier: if it's any consolation, you are not alone in feeling that way
[14:15:11] <Wulf> rapier: you'd rather write code in brainfuck?
[14:15:12] <supakeen> programming languages rarely get optimized for learning
[14:15:20] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:15:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:15:49] <nedbat> even with things like match/case, python is a great language for learning. it had metaclasses in python 2, and people didn't say metaclasses stopped python from being good for learning.
[14:16:06] <Wulf> People ranted much about the walrus := operator. I like it and use it. Not sure about match/case yet, but it looks useful for some things too.
[14:16:40] <rendar> `while True: async with get_resource as r: command = self.queue.wait(); r.run(command)` this is a common pattern to retain 'r', and not creating a new one every time, right?
[14:17:10] <energizer> wrong
[14:17:11] <Wulf> rendar: that will create a new r on every iteration.
[14:17:17] <VaniaPy> i'm trying to run gunicorn in a docker-compose container. But i'm getting the following error python3: can't open file '/usr/src/app/gunicorn': [Errno 2] No such file or directory
[14:17:17] <VaniaPy> here's the docker-compose and Dockerfile : https://bpa.st/K3JQ https://bpa.st/5EXA
[14:17:33] <rendar> sorry guys, while True is *after* async wait
[14:17:51] <Wulf> rendar: then it will be the same r every time.
[14:18:01] *** Quits: tristan_ (~tristan@223.62.216.10) (Ping timeout: 256 seconds)
[14:18:04] <rapier> Wulf, yeah, because people is getting lazy lately and when it happens, you have poor code.
[14:18:12] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:20] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:40] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[14:18:49] *** Joins: Techcable (~Techcable@168.235.93.147)
[14:18:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:20:34] <energizer> aha, the writeup i wanted is https://gvanrossum.github.io/docs/PyPatternMatching.pdf
[14:20:54] <user2001> I am looking for examples when static classes make sense. I've read, that the class math in several programming languages is such an example.
[14:21:17] <Wulf> user2001: What's a "static class"?
[14:21:25] <jinsun> in python math is a module not static class
[14:21:45] <user2001> a class you do not need to make an instance out of it, because it is already such
[14:21:47] <jinsun> and I don't think we have "static" classes
[14:22:07] <user2001> but similar stuff
[14:22:12] <rapier> thanks for pdf
[14:22:18] <user2001> you can make methods static
[14:22:24] <energizer> user2001: in python they called modules
[14:22:28] <energizer> user2001: in python they are called modules
[14:22:30] <Wulf> user2001: there are static methods.  class User2001: @staticmethod def add(a, b): return a + b
[14:23:00] <user2001> what for well known examples for popular static methods exist
[14:23:09] <Wulf> user2001: and there are class methods too: class User2001: @classmethod def sub(cls, a): return cls.x - a
[14:23:22] <energizer> user2001: there are no well known examples for static methods
[14:23:35] <henco> VaniaPy: I believe your entrypoint/cmd in your dockerfile will need to run gunicorn not python - but I'm not a gunicorn expert
[14:23:36] <energizer> user2001: @staticmethod was created by mistake
[14:23:39] <jinsun> you can make a math class with staticmethods yes, but the class itself is not static, and it is kinda useless, just make a module
[14:23:59] <user2001> and none well known?
[14:24:10] <energizer> that's not hyperbole, it was literally a mistake
[14:24:26] <Wulf> energizer: there are use cases. E.g. override the method in each child class.
[14:24:43] <user2001> so all those modules could be examples for static classes?
[14:24:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:24:58] <energizer> user2001: python does not have static classes
[14:24:59] <user2001> Wulf, which use cases would make most sense
[14:25:08] <user2001> energizer, it has modules
[14:25:15] *** Joins: rsrx_ (~rsrx@109-93-126-62.dynamic.isp.telekom.rs)
[14:25:17] <energizer> user2001: yes
[14:25:39] <energizer> Wulf: what do you mean?
[14:25:49] <jinsun> user2001: yes but you shouldn't call modules "static classes" and confuse everyone
[14:26:25] <user2001> jinsun, what is the difference between a static class and modues
[14:26:39] <Wulf> energizer: https://bpa.st/OHWQ
[14:26:59] <energizer> user2001: there is nothing in python called static class
[14:27:07] <energizer> it doesn't exist
[14:27:12] <jinsun> user2001: in python modules exist and static classes don't
[14:27:41] <energizer> Wulf: def fun(self, a): return a + 10
[14:28:17] *** Quits: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[14:28:26] <Wulf> energizer: means you'd have to instantiate it first. Could use a classmethod. But why, if the method won't access cls?
[14:29:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[14:30:04] <energizer> Wulf: sure i'm fine with that
[14:30:35] <jinsun> normally you wouldn't have that method as a part of the class at all, but if it is one of those less common cases where it makes sense to stuff it in the class then staticmethods are fine
[14:30:53] *** Quits: rsrx_ (~rsrx@109-93-126-62.dynamic.isp.telekom.rs) (Quit: Leaving)
[14:32:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:32:37] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[14:32:43] <Wulf> energizer: another use case is a _private method which is only used by the class itself and doesn't access cls either. Could use @classmethod too, but same argument.
[14:33:14] <energizer> eh that's just a regular method
[14:33:29] <Wulf> sure, you could put that into the module.
[14:33:40] <energizer> no i mean instance method
[14:33:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:34:34] <Wulf> won't work if you don't have an instance
[14:34:52] <energizer> that's the first case again
[14:35:04] <Wulf> nope
[14:35:11] <energizer> ?
[14:35:22] *** Joins: tristan_ (~tristan@223.33.165.219)
[14:35:43] <Wulf> energizer: first use case were subclasses.
[14:35:56] <energizer> but the subclasses were irrelevant
[14:36:09] <Wulf> on the contrary
[14:36:57] *** Joins: ice9 (~ice9@user/ice9)
[14:37:50] <energizer> That's not an argument; it's just contradiction!
[14:38:25] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[14:41:10] <energizer> (in case somebody is missing out the reference is Python's namesake https://www.youtube.com/watch?v=xpAvcGcEc0k  )
[14:41:30] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:41:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:43:22] <wyre> why apparently I cannot load this .json in the python console? https://bpa.st/2DOA
[14:43:41] *** sdfgsdfgsdfgsfsd is now known as dikhed
[14:44:09] *** dikhed is now known as dfghfgdh
[14:44:16] <jinsun> json.load takes a file object not a string
[14:44:18] <wyre> have I to use open() first?
[14:44:40] <jinsun> better to use json.loads and pathlib.Path.read_text
[14:45:04] <energizer> better?
[14:45:14] <jinsun> json.loads(pathlib.Path("./folder_tree2.json").read_text())
[14:45:14] <energizer> wyre: yes
[14:45:33] *** Joins: cursey (~cursey@user/cursey)
[14:45:40] <jinsun> better because it is a single expression
[14:45:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:34] <energizer> tell that to `match` ayyy
[14:46:42] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:47:27] <energizer> using open might use less memory, i'm not actually sure how json.load works
[14:48:14] <energizer> it doesn't matter eithe way in this case of course
[14:48:20] <jinsun> it just calls loads(fp.read() https://github.com/python/cpython/blob/3.10/Lib/json/__init__.py#L293
[14:48:22] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[14:48:27] <jinsun> so no memory savings
[14:48:58] *** Joins: ubert (~Thunderbi@p200300ecdf0994ce1454eef4b6fa1895.dip0.t-ipconnect.de)
[14:49:17] <energizer> alrite
[14:49:24] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:49:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[14:50:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[14:51:00] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[14:51:16] <energizer> Hence, both control and data
[14:51:16] <energizer> flow from a case clause to its surrounding context would be
[14:51:16] <energizer> severely hindered and limited. Since Python is statementand not expression-oriented, this would effectively reduce
[14:51:16] <energizer> the application of pattern matching statements to being the
[14:51:16] <energizer> single statement inside a function’s body.
[14:51:21] <energizer> there we go
[14:51:46] <jinsun> match is cursed by the fact that needs indentation has to be a statement
[14:52:39] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[14:52:55] <jinsun> so yeah match would have to be wrapped up in functions to be useful in many places
[14:54:32] <energizer> trying to think of new languages with significant whitespace
[14:55:14] <nedbat> significant indentation :)
[14:55:25] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[14:55:35] <energizer> yeah that
[14:56:52] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[14:57:33] <energizer> part of the problem is that there's no short word opposite of "end"
[14:57:37] *** Joins: KvL (~KvL@user/KvL)
[14:57:57] <energizer> begin is too long to do the job of {
[14:58:18] *** Joins: cdown (~cdown@188.214.11.14)
[14:59:24] <energizer> CJK languages are gonna be awesome
[15:00:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:00:27] *** Quits: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46) (Remote host closed the connection)
[15:00:35] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:00:47] *** Joins: bluedust (~bluedust@103.148.20.45)
[15:01:02] *** Joins: ano (~ano@user/ano)
[15:01:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:01:50] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[15:02:32] *** Joins: Guest6286 (~Guest62@dyx0pyyckgjfhcv-501mt-3.rev.dnainternet.fi)
[15:03:14] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[15:06:10] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:06:12] <Guest6286> Hi, can anyone comment how this multiprocessing.Pool should work: https://bpa.st/DROA
[15:06:16] <Guest6286> I am a bit confused
[15:06:33] *** Joins: JigolKa (~Jigolka@user/JigolKa)
[15:06:45] <Guest6286> trying to change the commented for loop into a multiprocessing for loop
[15:06:58] <lericson> imagine if you had SimpleNamespace and you could go SimpleNamespace(attr1=val1, attr2=val2, …)
[15:07:04] <lericson> what a world that would be
[15:07:32] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-85.range86-160.btcentralplus.com)
[15:07:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:08:02] <lericson> wait you can
[15:08:18] <lericson> w00t, to dig up an old expression
[15:08:32] *** Joins: Everything (~Everythin@37.115.210.35)
[15:08:38] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Remote host closed the connection)
[15:09:18] <energizer> namedtuple
[15:09:31] <lericson> please no cursing
[15:09:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:09:51] <energizer> i don't think it's as bad as it used to be
[15:10:18] <ChrisWarrick> there is no point in using namedtuple in 2022
[15:10:26] <lericson> namedtuple manages to be both declarative and uninformative
[15:10:50] <lericson> a dataclass does it better, but you sacrifice malleability
[15:11:37] *** Joins: cosimone` (~user@93-47-228-11.ip115.fastwebnet.it)
[15:11:46] <Peng> SimpleNamespace's docs say "However, for a structured record type use namedtuple() instead." :>
[15:11:47] <energizer> oh i forgot namedtuple isn't actually convenient
[15:11:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[15:12:07] <energizer> you still have to build the type before you can put values into it
[15:12:19] <energizer> dunno why
[15:12:25] <lericson> SimpleNamespace is the closest you come to JavaScript's inline object syntax in Python
[15:12:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 240 seconds)
[15:12:33] <lericson> object literal syntax that is
[15:12:40] <energizer> {}
[15:12:40] *** Joins: oda (~oda@gateway/vpn/pia/oda)
[15:12:46] <lericson> that's a dict
[15:12:48] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[15:13:05] *** Joins: bluedust_ (~bluedust@117.207.230.68)
[15:13:22] *** Quits: oda (~oda@gateway/vpn/pia/oda) (Remote host closed the connection)
[15:13:28] <energizer> what is a js object?
[15:13:37] <lericson> a dictish object
[15:13:40] <jinsun> you can do stuff like `type("x", (), dict(a=1, b=2))`
[15:13:46] <jinsun> (but don't)
[15:13:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:14:11] <ChrisWarrick> lericson: but do you really need that behavior?
[15:14:12] <energizer> ha nice jinsun
[15:14:40] *** Joins: shad (~shad@user/shad)
[15:14:45] <lericson> ChrisWarrick: it looks way cleaner and makes refactoring to a proper class if and when that is necessary easier
[15:14:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:15:26] <lericson> oftentimes i have some intermediary state representation i need to deal with for maybe 5-10 lines of code, and then never again
[15:15:33] <jinsun> making proper class is not really that difficult with dataclass
[15:15:47] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[15:15:48] <energizer> but not doing it at all is easier
[15:15:57] *** Quits: bluedust (~bluedust@103.148.20.45) (Ping timeout: 240 seconds)
[15:16:03] <jinsun> so no need to leave it for later, do it now
[15:16:04] <ChrisWarrick> not writing code is easier than writing code
[15:16:11] <lericson> exactly
[15:16:20] <ChrisWarrick> so let’s stop programming altogether
[15:16:41] <jinsun> you can use dict if you think you don't need class
[15:17:02] <lericson> i'm not about to start declaring new datatypes in a jupyter notebook
[15:17:04] <lericson> there is a time and place
[15:17:55] <energizer> you can write a function that takes the arguments, makes the class and instantiates it
[15:18:17] <energizer> it's just a one liner around attr.make_class or whatever the dc version is callsed
[15:18:30] <lericson> so i would have one type per instance?
[15:18:36] <ChrisWarrick> lericson: what’s wrong with declaring datatypes in a jupyter notebook?
[15:18:55] <energizer> i guess you could cache the type or something
[15:19:12] <Guest6286> Hi, can anyone comment to do thi multiprocessing.Pool properly: https://bpa.st/DROA
[15:19:21] <energizer> there's also a bunch of attrdict libraries
[15:19:38] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[15:19:51] <jinsun> Guest6286: you didn't say what goes wrong there
[15:19:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:19:58] <lericson> ChrisWarrick: nothing in a general sense, but it's not approriate on this occasion
[15:20:18] <ChrisWarrick> lericson: is declaring functions in a notebook “not appropriate”?
[15:20:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:20:31] <Guest6286> jinsun I am not sure how to make it but if you compare to the other for loop i am not inserting the nums anywhere
[15:21:09] <Guest6286> for n in range(100):  r=squart(nums)
[15:21:12] <ChrisWarrick> Guest6286: did you try print(n) in the loop?
[15:21:25] <ChrisWarrick> Guest6286: or do you get an exception in this code?
[15:21:39] <lericson> ChrisWarrick: that's impossible to say, but i would avoid ti
[15:21:51] <Guest6286> no but i dont udnerstand the logic where to put nums, and where to put in range(100) if you compare to the commented out function
[15:22:10] <lericson> it really depends on what you're trying to demonstrate
[15:22:12] <ChrisWarrick> Guest6286: what are you actually trying to do here?
[15:22:12] <Guest6286> where it should read: r = squart(nums)
[15:22:31] <Guest6286> do the same as commented out code but for many cores
[15:22:53] <ChrisWarrick> Guest6286: be more specific
[15:23:06] <Guest6286> nums = range(1000_000)
[15:23:07] <Guest6286> for n in range(100):
[15:23:07] <Guest6286>     r = squart(nums)
[15:23:19] <ChrisWarrick> Guest6286: what should run on many cores?
[15:23:20] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e6:2aaa:ed7c:b42f:6ab4:354f) (Read error: Connection reset by peer)
[15:23:24] *** Joins: ub (~Thunderbi@p200300ecdf0994ceb42bd33431e7317f.dip0.t-ipconnect.de)
[15:23:25] *** Quits: Alina-ma| (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[15:23:28] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[15:23:39] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e6:2aaa:ed7c:b42f:6ab4:354f)
[15:23:41] <lericson> Guest6286: please don't paste multiline python code here, this is like the second sentence of the /topic
[15:24:24] *** Quits: Guest6286 (~Guest62@dyx0pyyckgjfhcv-501mt-3.rev.dnainternet.fi) (Quit: Client closed)
[15:24:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:13] *** Joins: JayDoubleu (~jdoubmatr@2001:470:69fc:105::1:3831)
[15:25:36] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[15:26:02] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:27:31] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[15:29:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:29:35] *** Joins: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs)
[15:29:50] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:30:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:30:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[15:31:52] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[15:32:38] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[15:33:03] *** Joins: grooverman (~grooverma@177.102.117.95)
[15:35:38] *** Quits: nomic (~nomic@185.198.243.236) (Quit: Leaving)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:28] *** Quits: tristan_ (~tristan@223.33.165.219) (Remote host closed the connection)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:38] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:36:48] *** Joins: tristan_ (~tristan@223.33.165.219)
[15:37:34] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:37:48] *** Joins: bauripalash (~bauripala@2401:4900:382e:9ffb:1:2:2af6:efac)
[15:38:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:39:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:39:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:41:48] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[15:42:10] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 260 seconds)
[15:42:25] *** Quits: bauripalash (~bauripala@2401:4900:382e:9ffb:1:2:2af6:efac) (Client Quit)
[15:42:43] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:43:51] *** Joins: oda (~oda@gateway/vpn/pia/oda)
[15:43:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:43:57] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:2c6d:c30a:eff:e9b9)
[15:44:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:45:18] *** Quits: paul424 (~tom@ip-31-0-124-77.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:46:37] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:49:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:50:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:50:30] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:50:58] *** Joins: anotheruser (~user@197.54.14.247)
[15:52:59] *** Joins: user51 (~user51@176.228.148.215)
[15:53:04] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[15:53:21] *** Quits: someuser (~user@197.54.98.58) (Ping timeout: 256 seconds)
[15:55:31] *** Joins: stonkey (~stonkey@user/stonkey)
[15:56:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[15:58:13] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[15:58:36] *** Joins: d0ku (~d0ku@178.43.48.143.ipv4.supernova.orange.pl)
[15:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:00:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:01:08] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:02:49] *** Quits: oda (~oda@gateway/vpn/pia/oda) (Remote host closed the connection)
[16:02:52] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[16:03:40] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[16:04:43] *** Joins: jamea (~jamea@177.239.81.39)
[16:05:11] *** Quits: Hackerpcs (~user@user/hackerpcs) (Ping timeout: 268 seconds)
[16:05:32] *** gitesh is now known as ramkrishnahari
[16:05:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:05:57] *** ramkrishnahari is now known as gitesh
[16:06:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:06:46] *** Joins: Hackerpcs (~user@user/hackerpcs)
[16:06:47] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[16:06:59] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:09:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:09:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:10:00] <enoq> is there something like ?. in Python?
[16:10:02] *** Joins: jcsteele (~j@104-2-180-239.lightspeed.rlghnc.sbcglobal.net)
[16:10:15] <enoq> if obj?.optionalProperty:
[16:10:21] <Yhg1s> enoq: nope.
[16:10:43] <enoq> so I need something like: if 'optionalProperty' in obj and obj.optionalProperty?
[16:10:45] <Yhg1s> enoq: unless you count the three-argument form of getattr(). Generally speaking, don't make attributes optional. Always give them a value, even if it's None.
[16:11:10] <enoq> so if getattr(obj, 'optionalProperty') should work?
[16:11:21] <Yhg1s> enoq: no, the three-argument form.
[16:11:28] <enoq> ah I see thanks
[16:11:37] <Yhg1s> (but really, don't have optional attributes.)
[16:11:56] <enoq> currently working on ansible which has some optional config parameters
[16:12:30] <enoq> ah, my bad those are probably dicts
[16:12:39] <enoq> wrote too much js lately
[16:13:06] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[16:13:13] <enoq> written*
[16:13:25] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1b8b:86aa:8c4b:5377) (Ping timeout: 240 seconds)
[16:13:56] <Yhg1s> Then 'in' would be the way to check, or use the two- or three-argument form of dict.get.
[16:13:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:14:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:14:51] <enoq> plus jinja2 on top ofc
[16:15:28] <enoq> sometimes I think code with utility APIs might be a better idea but then I look at Gradle and I'm not so sure anymore
[16:16:07] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[16:16:30] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[16:16:54] *** Joins: SmplyPddy (~SmplyPddy@user/SmplyPddy)
[16:18:11] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[16:18:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:20:10] *** Joins: Klinda (~superleag@user/klinda)
[16:21:20] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[16:22:11] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:23:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:23:52] *** Joins: ravan (~ravan@user/ravan)
[16:24:29] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.236)
[16:26:23] *** Joins: agonhajdari (~textual@user/agonhajdari)
[16:26:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[16:27:58] *** Joins: han-solo (~han-solo@user/han-solo)
[16:29:03] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.236) (Ping timeout: 256 seconds)
[16:29:38] *** dcaro is now known as dcaro_lunch
[16:30:39] *** Quits: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46) (Remote host closed the connection)
[16:31:45] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[16:33:11] *** Joins: grooverman (~grooverma@177.102.117.95)
[16:34:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:35:04] *** Joins: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de)
[16:35:51] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[16:36:11] *** Quits: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:36:17] *** Quits: user2001 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[16:38:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:39:17] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) (Read error: Connection reset by peer)
[16:40:15] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:40:57] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[16:41:13] *** Joins: yaalon (~yaalon@189.163.204.195)
[16:42:08] *** Joins: digilink (~digilink@user/digilink)
[16:42:58] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[16:43:06] *** Joins: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de)
[16:43:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:45:21] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[16:45:57] *** Quits: yaalon (~yaalon@189.163.204.195) (Ping timeout: 240 seconds)
[16:45:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[16:47:27] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:47:57] *** Quits: Bardon_ (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[16:48:35] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:49:49] <csm3105> hi guys, one question, what is SOL_SOCKET used for in this example:  sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) ?
[16:50:35] *** Quits: anotheruser (~user@197.54.14.247) (Ping timeout: 256 seconds)
[16:51:02] *** Joins: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30)
[16:51:03] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:51:20] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:51:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[16:51:50] <supakeen> It's the thing to set the SO_REUSEADDR option on.
[16:51:55] <supakeen> SOL stands for socket layer.
[16:52:29] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:53:52] *** Joins: someuser (~user@197.54.14.247)
[16:54:02] <supakeen> and SO_REUSEADDR means well, allow reuse of an already existing address
[16:54:26] <Yhg1s> (a recently released address)
[16:54:37] *** Quits: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[16:54:42] <supakeen> (depending on the actual protocol in use)
[16:55:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:56:18] <supakeen> ain't networking fun :>
[16:57:29] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[16:57:51] *** Joins: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com)
[16:58:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:58:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:58:36] *** Quits: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com) (Client Quit)
[16:58:54] *** Joins: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80)
[16:59:00] *** Quits: tristan_ (~tristan@223.33.165.219) (Remote host closed the connection)
[16:59:38] *** Joins: tristan_ (~tristan@223.33.165.219)
[17:00:17] *** Quits: someuser (~user@197.54.14.247) (Ping timeout: 240 seconds)
[17:00:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b440:1fdb:a9a9:c6fa)
[17:00:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b440:1fdb:a9a9:c6fa) (Changing host)
[17:00:25] *** Joins: skapata (~Skapata@user/skapata)
[17:00:57] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Client limit exceeded: 20000)
[17:00:59] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[17:01:03] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:01:04] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[17:02:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[17:03:06] *** Quits: JigolKa (~Jigolka@user/JigolKa) (Quit: Going offline, see ya!)
[17:03:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:05:11] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[17:06:13] *** Parts: irc (~irc@h-158-174-80-2.A357.priv.bahnhof.se) ()
[17:07:12] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[17:07:37] *** Quits: PyMaster22 (~pymaster2@2600:1010:b1ea:a51b:c5c2:ff39:4011:c904) (Ping timeout: 240 seconds)
[17:08:35] *** Quits: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80) (Quit: Client closed)
[17:08:42] *** Quits: d3x (michal@bielaw.ski) (Remote host closed the connection)
[17:08:53] *** Joins: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80)
[17:08:54] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[17:09:09] *** Joins: d3x (~d3x@bielaw.ski)
[17:09:13] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[17:10:17] *** Quits: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80) (Client Quit)
[17:10:29] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:11:41] *** Joins: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80)
[17:12:46] <Kyron> Hi there, I am working in Python and I'm processing Sqlite data. To keep my code a bit elegant, I want to put my queries in a single file (as a connector to the database)
[17:12:47] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[17:13:01] *** Joins: martingale (~beta@170-83-120-154.customer.nbtos.com.br)
[17:13:36] <Kyron> Let's say my table contains people, and in class X I want to acces their name and age, in class Y I want to access their name and profession, etc. I don't want to write individual def's for all possible combinations, and I don't want to collect that information with one query per parameter
[17:13:48] <ChrisWarrick> Kyron: it looks like you want an ORM, eg. sqlalchemy’s
[17:14:00] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[17:14:10] <grym> Kyron: and if you really like writing actual queries, you can use sqlalchemy with https://pugsql.org/ to do so
[17:14:11] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:10da:965a:3a7c:5a1)
[17:14:29] <Kyron> What does Sqlalchemy do?
[17:14:35] <Kyron> Is it an adaptor/wrapper for SQL data into Python?
[17:14:39] <grym> yes
[17:14:55] <grym> there are many ways to use it
[17:14:57] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:15:22] <grym> i'd start with plain sqla and then look around for things on top of it later
[17:15:40] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[17:15:49] <zen_coder> how can I safe a file in visual studio code and automatically execute my pytest's? Is there a way?
[17:15:59] <Kyron> Is it viable for millions of records, to convert all of it to python objects?
[17:16:05] <grym> Kyron: sure
[17:16:11] <grym> that's not very many
[17:16:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:16:16] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[17:16:28] <grym> and it's good about being lazy when it can
[17:16:34] <grawity> apparently there's pytest-watch, and probably a ton of generic "run command when file changes" tools
[17:16:50] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:16:57] <Kyron> Sounds cool, I will check it out. Up until now I have been dynamically creating my queries (if parameter A is also requested, add "AND WHERE A=X") but I feel like there must be a better way. I will check it out, thanks
[17:18:11] <ChrisWarrick> Kyron: an ORM is the nicest way to interact with databases if what you’re doing is querying data in tables
[17:18:55] *** Joins: bluedust (~bluedust@61.3.70.192)
[17:19:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[17:19:25] *** Quits: bluedust_ (~bluedust@117.207.230.68) (Ping timeout: 240 seconds)
[17:20:08] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[17:22:30] *** Joins: shad (~shad@user/shad)
[17:24:08] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[17:25:09] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[17:25:11] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[17:25:50] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:26:11] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[17:26:28] <zen_coder> does nobody know?
[17:26:36] <zen_coder> or is there really nothing?
[17:27:30] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:27:49] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:2c6d:c30a:eff:e9b9) (Ping timeout: 268 seconds)
[17:28:40] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:28:59] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[17:29:11] *** Joins: stonkey (~stonkey@user/stonkey)
[17:31:10] <Kyron> zen_coder It seems like that question is very specific to the software, but why would you even want this? Why not just run the unit-tests when building the solution, rather than having every save first build the solution and then execute the pytests?
[17:31:29] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[17:31:46] <bjs> zen_coder: vscode is very extensible,  I'm sure there are ways. It's not really a Python question it's more a vscode question.  I'm sure that there's an option (or some extension) to do something on saving the file
[17:31:59] <Kyron> But if you really want it I think you should be looking for "continous testing" or "live testing", of which there are many options and extensions.
[17:32:08] <ChrisWarrick> also, saving files is so 1995
[17:32:12] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:32:19] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:32:19] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:32:30] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[17:32:52] *** Joins: stonkey2 (~stonkey@user/stonkey)
[17:33:15] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:33:20] *** Joins: sagax (~sagax_nb@user/sagax)
[17:33:37] <bjs> zen_coder: not to mention that VSCode lets you setup a "launch configuration" so you can just push a button to run the tests or whatever https://code.visualstudio.com/docs/editor/debugging#_launch-configurations and the python extension has lots of debugging features
[17:33:50] *** Quits: yaalon (~yaalon@2806:102e:d:46d:782d:6654:f500:30) ()
[17:34:13] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[17:34:57] <Kyron> ChrisWarrick are you insinuating that the data storage option visualized by a floppy disk is somehow old-fashioned?
[17:35:18] *** Quits: zardian[m] (~zardi@2001:470:69fc:105::1:4444) (Quit: Client limit exceeded: 20000)
[17:35:30] <ChrisWarrick> Kyron: I’m suggesting to configure your editor to autosave and never think about ctrl+s or floppy disks again
[17:35:44] *** Joins: zardian[m] (~zardi@2001:470:69fc:105::1:4444)
[17:36:23] *** Joins: esther (~esther@2607:fb90:20d3:476f:bea2:8370:19c2:bc58)
[17:36:30] *** Joins: JigolKa (~Jigolka@89-89-20-182.abo.bbox.fr)
[17:36:31] *** Quits: JigolKa (~Jigolka@89-89-20-182.abo.bbox.fr) (Changing host)
[17:36:31] *** Joins: JigolKa (~Jigolka@user/JigolKa)
[17:36:37] <grym> run tests as a pre-commit action is more compelling to me than running tests on a save -- because my files save when the window loses focus
[17:36:42] *** Parts: lidless_ (lidless@2600:3c02::f03c:92ff:fe1d:6a82) ()
[17:36:45] <Kyron> I actually auto-burn my code straight to a cd.
[17:36:50] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:36:56] *** Joins: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82)
[17:37:02] <SmplyPddy> haha
[17:37:08] <Kyron> The ORM tip looks promising by the way,  I guess I will have to get used to a new structure of data handing but it might be worth it
[17:37:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:38:25] <ChrisWarrick> Kyron: so you’re backing up to amazon glacier on save? (allegedly it stores data on blu-ray)
[17:38:51] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[17:39:20] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[17:40:37] *** Quits: esther (~esther@2607:fb90:20d3:476f:bea2:8370:19c2:bc58) (Ping timeout: 240 seconds)
[17:41:07] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:41:59] *** Joins: zeden (~zeden@user/zeden)
[17:42:09] *** dcaro_lunch is now known as dcaro
[17:42:20] <zen_coder> Kyron: I also use rust and these kind of tools are all there, independent of vscode or the IDE
[17:43:00] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Remote host closed the connection)
[17:43:05] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[17:43:10] <zen_coder> cargo-watch
[17:43:22] <zen_coder> so when I save a file, it will compile everything and will run the tests
[17:43:24] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[17:43:29] *** Joins: Naan (~naan@user/naan)
[17:43:32] <zen_coder> I want the same for python
[17:43:44] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[17:43:53] <zen_coder> of course there is no compilation, but maybe at least the tests can be executed
[17:44:01] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:44:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:44:54] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:45:50] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[17:45:51] *** Joins: KeiraT (~k@lulzsec.co.uk)
[17:48:02] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Quit: Leaving)
[17:48:09] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[17:48:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:49:08] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:49:17] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[17:49:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:50:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:52:03] *** Parts: grym (~grym@user/grym) ()
[17:52:11] *** Joins: grym (~grym@user/grym)
[17:52:29] <grym> there is compilation, but nevermind :)
[17:52:49] <grym> i assert without proof that vscode has a save hook
[17:52:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:53:16] *** Joins: Jigolka_ (~Jigolka@89-89-20-182.abo.bbox.fr)
[17:53:16] *** Quits: Jigolka_ (~Jigolka@89-89-20-182.abo.bbox.fr) (Changing host)
[17:53:16] *** Joins: Jigolka_ (~Jigolka@user/JigolKa)
[17:53:17] <grym> i'd plonk venv/bin/python -m pytest [options] in it, if you want vscode to do something when a file is saved
[17:53:27] *** Quits: d3x (~d3x@bielaw.ski) (Quit: leaving)
[17:53:43] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:53:45] <grym> the langauge ecosystem doesn't really have a file watcher like this, though
[17:54:03] *** Quits: JigolKa (~Jigolka@user/JigolKa) (Ping timeout: 256 seconds)
[17:54:07] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[17:54:12] *** Jigolka_ is now known as JigolKa
[17:54:29] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 256 seconds)
[17:54:53] <grym> so it's an editor tooling question in python, not a python tooling question regardless of editor
[17:55:07] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:55:14] *** Joins: whaley (~whaley@2603-6080-a301-33d1-04d5-01f1-6926-43d4.res6.spectrum.com)
[17:56:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:57:53] *** Quits: KeiraT (~k@lulzsec.co.uk) (Read error: Connection reset by peer)
[17:58:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:58:52] *** Joins: KeiraT (~k@lulzsec.co.uk)
[18:00:59] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:02:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[18:04:47] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[18:05:11] *** Quits: Kyron (~Kyron@2001:1c05:3608:3f00:498c:cf1f:390:fd80) (Quit: Client closed)
[18:06:46] *** Joins: wombawomba (~andre@89-253-80-164.customers.ownit.se)
[18:07:08] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:07:56] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[18:08:47] *** Quits: dfghfgdh (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[18:09:47] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[18:09:47] *** cdown_ is now known as cdown
[18:10:13] *** Joins: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:10:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:11:19] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[18:12:01] *** Joins: nomic (~nomic@185.198.243.236)
[18:12:23] *** Joins: Auron (~Auron956@user/auron)
[18:13:01] *** Quits: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 240 seconds)
[18:13:04] *** Quits: nomic (~nomic@185.198.243.236) (Read error: Connection reset by peer)
[18:15:07] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[18:18:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:18:37] *** Joins: nomic (~nomic@185.217.117.87)
[18:20:07] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[18:20:10] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:20:15] *** Joins: rsx (~dummy@ppp-188-174-153-38.dynamic.mnet-online.de)
[18:20:37] *** Quits: stonkey2 (~stonkey@user/stonkey) (Remote host closed the connection)
[18:22:02] <Jong> Any reason pendulum isn't preinstalled when installing python? sqlite is, and sqlite is much less common
[18:22:30] <sco1> Because sqlite is part of the standard library and pendulum isn't
[18:22:44] *** Joins: lorogue_ (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:25:15] <Jong> I wonder why it isn't? date time manipulation is important, and pendulum makes it easy
[18:25:24] <grym> Jong: stdlib has datetime
[18:25:26] *** Joins: netpipe (~netpipe@user/netpipe)
[18:25:31] <Amnesia> question, I'm currently in the process of getting a virtual environment of my host, to work in a python container
[18:25:37] *** Quits: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 240 seconds)
[18:25:45] <Jong> grym but everyone seems to prefer pendulum. Am I wrong?
[18:25:54] <grym> Jong: it's a popular library to be sure
[18:26:12] <grym> rarely if ever are things on pypi subsumed into stdlib
[18:26:13] <Amnesia> however, despite the fact that the $VIRTUAL_ENV/bin/python symlink is correct, and VIRTUAL_ENV is set, the virtualenv's lib dir is not path of sys.path
[18:26:44] *** Joins: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:27:02] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[18:28:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-091d-1081-f4eb-7cf8.res6.spectrum.com)
[18:28:59] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:28:59] <Amnesia> not part of sys.path*
[18:29:37] *** Quits: lorogue_ (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 240 seconds)
[18:29:58] *** Parts: grym (~grym@user/grym) ()
[18:30:13] *** Joins: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:30:19] *** Joins: grym (~grym@user/grym)
[18:30:28] *** Parts: Amnesia (~Amnesia@user/amnesia) ()
[18:31:25] *** Joins: bartmanus (~bartmanus@cpe-146-212-109-144.dynamic.amis.net)
[18:31:36] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:31:45] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:31:53] *** Joins: ADHD (~xxx@user/ADHD)
[18:32:04] *** Joins: frmlof (~frmlof@12.50.11.83)
[18:32:13] *** Quits: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 240 seconds)
[18:32:36] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:35:08] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[18:35:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:35:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[18:35:24] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[18:36:33] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[18:36:36] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[18:36:41] *** Joins: georgios (~georgios@user/georgios)
[18:38:19] *** Joins: n0ts (~n0ts@195-198-10-108.customer.telia.com)
[18:39:07] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[18:41:36] *** Joins: humberto1 (~humbertow@187.202.198.61)
[18:42:37] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[18:42:38] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:42:59] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:43:55] *** Joins: Macuser (~Macuser@2600:1003:b447:e8e:ecb6:a4e5:40a1:d1ff)
[18:43:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:44:01] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[18:44:49] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[18:45:05] *** Joins: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il)
[18:45:45] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[18:45:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:46:27] *** SmplyPddy is now known as Pddy
[18:46:36] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:46:43] *** Joins: pycode (~pycode3@2001:b07:5d28:551:cdee:f4d6:a3fe:359a)
[18:49:23] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[18:50:09] *** Quits: n0ts (~n0ts@195-198-10-108.customer.telia.com) (Ping timeout: 256 seconds)
[18:51:06] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[18:52:13] *** Joins: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:53:08] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[18:53:31] <jim> hi... is there a web page that explains pudb to new users?
[18:53:46] *** Joins: lorogue_ (~lorogue@77.33.23.154.dhcp.fibianet.dk)
[18:53:53] <jim> they're getting stuck in various places
[18:54:17] <grym> https://documen.tician.de/pudb/
[18:54:50] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[18:55:01] *** Quits: lorogue (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 240 seconds)
[18:55:16] *** Joins: humbertowoody (~humbertow@187.202.198.61)
[18:55:23] <grym> (first hit for  'pudb documentation' )
[18:55:30] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[18:56:52] *** santzes1 is now known as Santzes
[18:56:57] *** Quits: lorogue[PC] (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Ping timeout: 256 seconds)
[18:56:59] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[18:57:16] *** Joins: djapo (~archangel@user/djapo)
[18:58:01] <jim87> Hello! I'm developing a package modules explorer, and this is the function I've made to extract all the modules from a package: https://bpa.st/N5PA - the problem is that it seems not be able to detect modules in form of files. As a practical example, the cryptography package has fernet.py and hazmat and x509 folders (they are all modules). With my function I'm able to detect only hazmat and x509. What am I doing wrong? Thank you :)
[18:58:28] *** Quits: humberto1 (~humbertow@187.202.198.61) (Ping timeout: 268 seconds)
[18:59:05] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[19:01:00] *** Quits: tristan_ (~tristan@223.33.165.219) (Remote host closed the connection)
[19:01:25] *** Joins: tristan_ (~tristan@223.33.165.219)
[19:01:35] *** Quits: djhankb9 (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:01:53] <grym> jim87: answering your question from last night: yes: https://setuptools.pypa.io/en/latest/userguide/entry_point.html#dependency-management
[19:02:15] *** Joins: djhankb9 (~djhankb@208.113.164.68)
[19:02:35] <jim87> grym: awesome, thanks :)
[19:02:38] *** Parts: nic (~nic@2607:f2c0:9452:5000:ef50:8b71:648e:eb43) ()
[19:03:02] *** Joins: nicode (~nic@2607:f2c0:9452:5000:ef50:8b71:648e:eb43)
[19:03:53] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Quit: morrigan)
[19:03:54] *** Joins: rajkosto (~rajkosto@109-93-186-147.dynamic.isp.telekom.rs)
[19:04:12] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[19:04:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[19:06:01] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[19:06:09] <jim87> as per the modules iterator, I might have misunderstood what a module is... if you can do from x import y, y is a module right? And if I can do from cryptography import fernet, fernet should be a module of the cryptography package. The cryptography directory has both __init__.py and fernet.py, though iter_modules([path_to_cryptography_package]) won't find it
[19:06:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:06:17] *** Quits: humbertowoody (~humbertow@187.202.198.61) (Ping timeout: 240 seconds)
[19:06:26] <grym> jim87: y can be anything, really
[19:06:34] <grym> if i have a module x that defines y=5
[19:06:36] <grym> i can import y
[19:06:42] <grym> (an integer)
[19:06:44] <cemotyz09> Would anyone be able to explain what needs to be done to get the desired output of (application)?  https://paste.centos.org/view/a03d1f6c
[19:07:02] <jim87> grym: in this case fernet is a python file containing functions, which should be a module?
[19:07:05] <supakeen> The gist of it usually boils down to a module is a file, a package is a directory (that tends to contain modules).
[19:07:14] <supakeen> But you can import any name from either.
[19:07:15] <grym> jim87: a python file is a module, yeah
[19:07:23] <grym> it doesn't have to have any names in it for that to be true
[19:07:31] <jim87> grym: so why doesn't iter_modules see it?
[19:07:48] <grym> jim87: got me :)
[19:08:44] <cemotyz09> Currently I get the provides of (python3-application)
[19:10:32] *** Joins: cemotyz09_ (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com)
[19:10:46] <jim87> grym: mmm apparently it started detecting it now u.u I have no clue what I did, because I did nothing :D
[19:10:50] <jim87> though... it works now
[19:11:00] <grym> jim87: oh, you asked
[19:11:04] <grym> so it started behaving
[19:11:09] <grym> >:)
[19:11:17] <jim87> grym: magic happens all the times
[19:11:55] <jim87> cemotyz09: is that a SPEC file?
[19:12:48] <cemotyz09_> jim87: yes it is. it builds just doesn't allow install since provides is wrong.
[19:12:49] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[19:14:05] <jim87> just as a start, I don't see python3_pkgversion defined anywhere
[19:14:46] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[19:15:43] <cemotyz09> Typo if I'm not mistaken, that is a macro for in this case 3. So anywhere with that should be "python3"
[19:15:54] *** Joins: mokulus (~mat@user/mokulus)
[19:16:08] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:16:17] <jim87> it seems no repository contains the package "python3.10dist"
[19:16:45] <jim87> or actually "python3.10dist(application)"
[19:17:11] <jim87> have you tried echoing %{python3_pkgversion} to check what that variable actually is?
[19:17:47] *** Quits: mokulus (~mat@user/mokulus) (Quit: leaving)
[19:18:15] *** Joins: magla (~gelignite@55d4d852.access.ecotel.net)
[19:18:20] *** Quits: rajkosto (~rajkosto@109-93-186-147.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[19:19:13] *** Joins: jamea (~jamea@201.77.110.253)
[19:19:19] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Quit: Client closed)
[19:19:19] *** cemotyz09_ is now known as cemotyz09
[19:19:31] *** Joins: d3x (michal@bielaw.ski)
[19:19:38] <cemotyz09> jim87: the output of the build is https://paste.centos.org/view/668b1202.  so it just isn't outputting the name the other package is looking for
[19:20:02] *** Joins: cemotyz0947 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[19:22:30] *** Quits: cemotyz0947 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Client Quit)
[19:22:31] *** Quits: bluedust (~bluedust@61.3.70.192) (Remote host closed the connection)
[19:22:49] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:23:08] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:23:11] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Remote host closed the connection)
[19:23:35] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[19:24:14] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[19:24:24] <jim> grym, thanks
[19:24:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:26:44] *** Joins: rick123 (~rick123@157.245.192.96)
[19:26:48] *** Parts: rick123 (~rick123@157.245.192.96) ()
[19:27:36] <jim87> mmm... I've installed (locally) a python app which is then being run in a venv (via pipenv). The Pipfile has the pytz dependency, and if I run pipenv run python -c 'import pytz' it works just fine. If though I run pipenv run my-python-app and it tries to import pytz, it won't find it (ModuleNotFoundError). Any clue?
[19:28:30] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:28:37] <Yhg1s> jim87: when you say 'installed (locally)', do you mean outside of the virtualenv? What does 'which my-python-app' say?
[19:28:42] *** Joins: newpy (~newpy@2601:280:4381:1390:3d0c:64dc:3003:dbe5)
[19:29:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:29:12] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:29:23] <jim87> Yhg1s: it is installed in my home directory (~/.local/bin). Should I install the command within the venv, too?
[19:29:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:30:09] <Yhg1s> jim87: I would say 'only install it in the virtualenv'. I'm not sure what you expect 'pipenv run' to do if the thing isn't installed in the virtualenv.
[19:30:14] *** Joins: cemotyz0915 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[19:30:53] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[19:31:04] <jim87> Yhg1s: I'd expect pipenv to run the python script within the venv, though I now saw it runs via the hashbang. I could try running it via python specifying the bin's path
[19:31:41] *** Joins: jpaa_ (~jpaa@vmi762709.contaboserver.net)
[19:31:58] <Yhg1s> jim87: I'm still not sure why you're combining the virtualenv with things not installed in the virtualenv. Why are you installing outside the virtualenv at all?
[19:32:16] *** Joins: szymon (~ugh@5.253.206.221)
[19:32:23] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[19:32:30] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:32:47] *** Joins: fef (~thedawn@user/thedawn)
[19:33:18] <jim87> Yhg1s: it's a qt-based application which needs to run within the venv to read the available packages. I though I could install once for all the projects, but it seems it needs to be installed in the venv directly
[19:33:36] *** Joins: de-facto (~de-facto@user/de-facto)
[19:34:21] *** Quits: d0ku (~d0ku@178.43.48.143.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[19:34:26] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[19:35:12] *** Quits: frmlof (~frmlof@12.50.11.83) (Quit: frmlof)
[19:35:31] *** Quits: cemotyz0915 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Quit: Client closed)
[19:36:06] *** Joins: Gerula (~Gerula@user/gerula)
[19:36:13] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[19:37:46] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:39:02] *** Joins: digitalice (~digitalic@user/digitalice)
[19:39:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:40:43] *** Joins: Bakunin (~maplefing@user/lindis)
[19:43:37] *** Joins: bluedust (~bluedust@61.3.70.192)
[19:46:30] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[19:46:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:47:46] <cemotyz09> jim87: you were correct it needed to be defined. it still builds but with incorrect provides here is the updated spec file.  https://paste.centos.org/view/4e63ff33
[19:48:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:48:43] *** Joins: cemotyz0974 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[19:48:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:49:18] <jim87> cemotyz09: I think you could have more help in #fedora-devel
[19:49:38] <cemotyz0974> Jim87 thanks I will try there
[19:50:02] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[19:51:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:53:05] <jim87> What might cause an error like the following? TypeError: can't apply this __setattr__ to object object
[19:53:12] *** Joins: aniketgm (~Aniket@49.36.107.163)
[19:53:46] <jim87> (it throws me this error on Python 3.7, not on Python 3.10)
[19:53:53] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com) (Read error: Connection reset by peer)
[19:54:21] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com)
[19:54:47] *** Parts: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com) ()
[19:55:39] <bjs> jim87: i don't think i've seen that exact message before, but it implies something trying to call a particular __setattr__ with an object that it wasn't expecting
[19:55:47] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com)
[19:56:34] *** Quits: cemotyz0974 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Quit: Client closed)
[19:56:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:58:02] *** Joins: xa0s (~xa0s@mab.sdf.org)
[19:58:02] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:58:13] <jim87> bjs: the code is the following: https://bpa.st/JMLA - the error is on line 6, and the attribute is actually an extension of it: https://bpa.st/W25Q
[19:59:21] <jim87> maybe the problem is that I'm trying to overwrite a class attribute (viewFlowsChanged = Signal(bool)), and I should rather init it in the __init__ function?
[20:01:08] *** Joins: thorsten` (~thorsten@ananke.uberspace.de)
[20:01:17] *** Quits: cosimone` (~user@93-47-228-11.ip115.fastwebnet.it) (Ping timeout: 240 seconds)
[20:01:24] <bjs> jim87: the error said "object object", is that right?
[20:01:31] <bjs> the code from what you have here "looks" okay
[20:01:37] *** Joins: cemotyz0982 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[20:02:00] *** Joins: humbertowoody (~humbertow@187.202.198.61)
[20:02:23] <thorsten`> Why does the following fail? b'foo\nbar\\Utest'.decode('unicode_escape') # I would have expected that \\U expands to literally \U
[20:02:33] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-630-171.w86-246.abo.wanadoo.fr)
[20:02:35] <jim87> bjs: yup, I just copy/pasted it. This is the full backtrace (I've added a print): https://bpa.st/MA6Q
[20:02:42] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:02:57] <jim87> ops, typo
[20:03:11] <bjs> that's not the same error
[20:03:11] <bjs> what is that
[20:03:26] <jim87> this one: https://bpa.st/LQYA
[20:03:42] <Yhg1s> thorsten`: that's a bytestring with \U in it, not \\U. Perhaps you meant br'foo\nbar\\Utest' or b'foo\nbar\\\\Utest' instead
[20:03:57] <jim87> (I've added a print(name, value, getattr(self, name) on top)
[20:03:58] <bjs> jim87: what version of Python is this?
[20:04:12] <jim87> bjs: 3.7.12
[20:04:22] *** Quits: cemotyz0982 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Client Quit)
[20:04:23] <jim87> PySide6 should support down to version 3.6
[20:04:28] *** Quits: bartmanus (~bartmanus@cpe-146-212-109-144.dynamic.amis.net) (Quit: Leaving)
[20:04:32] <jim87> (if it's a PySide issue)
[20:05:03] <thorsten`> Yhg1s: I see, thanks! (and my main issue is indeed that the \ wasn't escaped properly in the text file)
[20:05:03] *** Quits: inomoz (~inomoz@176.59.118.12) (Read error: Connection reset by peer)
[20:05:47] *** Joins: Nact (~l@host-85-27-122-83.dynamic.voo.be)
[20:06:15] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:8d0e:9b3:51b0:c9a5)
[20:06:34] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:07:08] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[20:07:20] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:31ff:a804:81e3:5196)
[20:07:42] <bjs> jim87: this error is weird; the root cause of this error message is trying to apply the "wrong" __setattr__ to the object
[20:07:55] <bjs> jim87: e.g. `object.__setattr__(MyClass, "x", 42)`  will give a similar (but not exactly the same) error
[20:08:06] *** Joins: jinsun (~quassel@user/jinsun)
[20:08:06] *** davidlowryduda is now known as dld
[20:08:22] <Yhg1s> It's very likely https://bugs.python.org/issue39960
[20:09:20] *** Quits: Macuser (~Macuser@2600:1003:b447:e8e:ecb6:a4e5:40a1:d1ff) (Quit: Textual IRC Client: www.textualapp.com)
[20:09:41] <jim87> mmm... is there a way to bypass it somehow? The idea is to have a __setattr__ proxy to plug-in additional logics (as the code is shown)
[20:09:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:10:04] <bjs> Yhg1s: it seems likely
[20:11:25] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[20:11:35] *** Joins: inomoz (~inomoz@176.59.121.54)
[20:11:40] <bjs> Yhg1s: but super().__setattr__ ("in general") is fine,  so I can't really see in jim87's paste what went wrong
[20:12:10] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[20:12:29] <jim87> might super's __setattr__ doing something weird?
[20:12:38] <bjs> jim87: the traceback implies it isn't being called
[20:12:51] <Yhg1s> bjs: what goes wrong is that it's subclassing a C type that's a heaptype.
[20:12:56] <Yhg1s> It's a bug in Python, fixed in 3.8.
[20:12:57] *** Quits: wombawomba (~andre@89-253-80-164.customers.ownit.se) (Ping timeout: 240 seconds)
[20:13:03] <bjs> Ah
[20:13:09] <Yhg1s> So, the fix is to upgrade to 3.8 or later.
[20:13:13] <Yhg1s> Or, not subclassing the C type.
[20:13:21] *** Joins: _janus (~janus@blotter.ld-linux.so)
[20:13:36] <jim87> what if I can't do that, due to being locked to python 3.7 for this particular project?
[20:13:37] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[20:13:42] *** Parts: thorsten` (~thorsten@ananke.uberspace.de) (WeeChat 2.7.1)
[20:13:48] *** Quits: _janus (~janus@blotter.ld-linux.so) (Remote host closed the connection)
[20:13:58] <jim87> Is there any way I could still proxy __setattr__ without using super().__setattr__?
[20:14:07] <bjs> Yhg1s: is the problem that there's a non-Python-defined heap type in the middle of the MRO?  I'm struggling to follow the bpo
[20:14:13] <bjs> well I mean the bug
[20:14:15] *** Joins: _janus (~janus@blotter.ld-linux.so)
[20:14:30] <Yhg1s> bjs: pretty much, yes.
[20:15:18] <Yhg1s> The code bridging between static types (the usual C type) and heap types (Python types, and a rarer form of C type) is making the incorrect assumption that 'heap type' means 'python type', which isn't always the case.
[20:15:24] *** Quits: VaniaPy (~VaniaPy@46.12.95.180.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:15:29] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[20:15:41] <bjs> Yhg1s: does CPython itself have any built-in heap types in the C?  or are they all from extension modules or something
[20:16:14] <Yhg1s> jim87: you're not proxying __setattr__, you're overriding it. You can't override it without calling the parent __setattr__, and you can't call the parent __setattr__ of this particular type correctly in Python 3.7.
[20:16:39] <Yhg1s> bjs: I'm sure there's a couple, at least for tests.
[20:16:43] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:17:20] <bjs> Yhg1s: I assume at least >=3.8 has one for testing this :)
[20:17:42] <bjs> interesting, I'd never seen this bug before
[20:17:48] *** Parts: akk (~akk@174-28-122-47.albq.qwest.net) (+++)
[20:18:01] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 268 seconds)
[20:18:06] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[20:18:40] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[20:19:44] *** Joins: Mattiaslndstrm (~Mattiasln@185.213.154.230)
[20:19:46] <Yhg1s> you would need to subclass a C type, which is a heap type, which implements tp_setattro, and in your subclass implement __setattr__, and call the parent method.
[20:19:54] <Yhg1s> each of those isn't particularly common.
[20:19:59] *** Joins: zer0bitz (~zer0bitz@196.244.192.60)
[20:20:40] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:20:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:21:17] <jim87> Yhg1s: what if I'd set the attribute via self.__dict__[name] = value?
[20:21:30] *** Joins: reset (~reset@user/reset)
[20:21:49] <Yhg1s> jim87: then you'd be bypassing properties and the parent __setattr__, which is probably going to be bad.
[20:22:15] *** Joins: cemotyz091 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com)
[20:22:45] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[20:23:05] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:23:37] <jim87> Yhg1s: there's no way this fix will be ported on Python 3.7, right?
[20:23:50] *** Quits: cemotyz091 (~cemotyz09@2603-8081-6300-9e12-9866-6794-a43a-65b9.res6.spectrum.com) (Client Quit)
[20:24:13] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:24:33] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[20:24:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:24:46] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:24:59] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:27:20] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:27:35] <bjs> jim87: https://www.python.org/dev/peps/pep-0537/ 3.7.8 was the last scheduled release for bug fixes
[20:27:44] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[20:29:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:29:33] <jim87> that's very unfortunate... is there any other way to implement an observer pattern without touching __setattr__ somehow?
[20:30:27] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:30:37] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[20:31:48] *** Joins: stonkey (~stonkey@user/stonkey)
[20:32:52] <bjs> jim87: are you trying to keep track of only a specific set of attributes in particular?  You could make them @property objects (or something similar). I don't know what those Signal objects are, maybe they can already play that role?
[20:33:43] <jim87> bjs: Signal is a Qt object which is more or less a UI-level pipe
[20:33:57] *** Quits: martingale (~beta@170-83-120-154.customer.nbtos.com.br) (Ping timeout: 240 seconds)
[20:34:10] <jim87> I could try making them properties indeed, or simply create a @autotrigger_property decorator
[20:34:24] *** Joins: moose (~moose@user/moose)
[20:35:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:37:28] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[20:37:34] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:37:46] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[20:38:21] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[20:39:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:39:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:41:10] *** Joins: jinsun (~quassel@user/jinsun)
[20:41:58] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:19c5:fafd:9977:3f71)
[20:42:13] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:43:16] *** Joins: indigo256 (~indigo256@2605:a601:ac65:7400:b8b5:9140:ebf0:ce8f)
[20:44:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:45:07] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:ed7c:b42f:6ab4:354f)
[20:45:13] *** dcaro is now known as dcaro_ooo
[20:45:17] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:3de0:3119:bacc:ffbd) (Ping timeout: 250 seconds)
[20:46:37] *** Quits: rsrx (~rsrx@109-93-126-62.dynamic.isp.telekom.rs) (Quit: Leaving)
[20:47:45] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:49] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e6:2aaa:ed7c:b42f:6ab4:354f) (Ping timeout: 240 seconds)
[20:47:58] *** Quits: indigo256 (~indigo256@2605:a601:ac65:7400:b8b5:9140:ebf0:ce8f) (Remote host closed the connection)
[20:48:00] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[20:48:17] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[20:48:52] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:49:17] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-237-28.poda.cz) (Ping timeout: 240 seconds)
[20:49:59] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[20:50:50] *** Quits: jamea (~jamea@201.77.110.253) (Read error: Connection reset by peer)
[20:51:01] *** Joins: jamea22 (~jamea@201.77.110.253)
[20:54:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:55:04] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[20:55:31] *** Joins: kcrk (~kcrk@user/kcrk)
[20:56:10] *** netpipe is now known as is
[20:57:05] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[20:57:08] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 252 seconds)
[20:57:10] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:57:22] <jim87> bjs: can I somehow decorate a class attribute not transforming it in a getter/setter couple of functions?
[20:57:45] <bjs> jim87: I'm not sure what you mean exactly
[20:58:46] *** Joins: oprypin (~irc@pryp.in)
[20:58:48] <jim87> bjs: usually a class attribute can be set and got via instance.var. I'd like to decorate it so that when I set it, I actually set it and do other logics
[20:59:01] <bjs> jim87: that's what a @property does right?
[20:59:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:59:13] <jim87> bjs: yup, but it requires a function AFAIK?
[20:59:24] <bjs> jim87: well yes your "other logics" will be some code in a function
[20:59:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:59:58] <bjs> jim87: what kind of "other logics" are you looking for?
[21:00:05] <jim87> Maybe I could decorate decorating the decorator with property?
[21:00:11] <bjs> jim87: what?
[21:00:24] <jim87> bjs: I need to emit a signal (send data via a pipe)
[21:00:27] *** Joins: fef (~thedawn@user/thedawn)
[21:00:45] <jim87> i.e. @emit_on_change(my_signal_instance)(my_attribute)
[21:00:55] <jim87> (actually without @ if I call it like that)
[21:01:00] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:01:19] <bjs> jim87: oh I see
[21:01:31] *** Quits: szymon (~ugh@5.253.206.221) (Quit: szymon)
[21:01:31] <bjs> jim87: you can write a function that *returns* a property object, with setter and getter and do that.
[21:01:50] <bjs> jim87: like `class C: viewFlows = signalattr("viewFlows")` where the signalattr returns a property
[21:02:08] *** Joins: adeliktas4 (~adeliktas@i59F52F7D.versanet.de)
[21:02:17] *** Quits: adeliktas (~adeliktas@i59F5F8A0.versanet.de) (Ping timeout: 240 seconds)
[21:02:17] *** adeliktas4 is now known as adeliktas
[21:03:39] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:102f:e281:42e:89a4) (Quit: pvergain)
[21:04:25] <bjs> jim87: here's an example https://bpa.st/IKRA
[21:05:33] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:908d:913a:17a0:82a4) (Quit: Leaving)
[21:05:36] <jim87> bjs: could this work as a decorator? https://bpa.st/GI3A
[21:05:42] <bjs> The getter/setter can do whatever you want, in this case I just made them set/get some similarly named attribute
[21:05:50] *** Joins: jmd (~user@de.cellform.com)
[21:06:10] <bjs> jim87: what exactly are you going to "decorate" with this?
[21:06:33] <jim87> bjs: good point u.u
[21:06:34] *** Joins: carl- (~carl-@185.103.188.130)
[21:06:44] <jim87> I can't decorate a property, right?
[21:06:59] <bjs> jim87: you keep saying decorate but I'm not sure what it is you're trying to decorate
[21:07:47] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:07:57] <jim87> bjs: I was thinking something like this: https://bpa.st/BQHQ
[21:08:49] *** Quits: is (~netpipe@user/netpipe) (Quit: Client closed)
[21:09:06] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:09:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:09:44] <bjs> jim87: did you see my example?
[21:09:57] <jim87> bjs: yup, and I'll go with it :D
[21:10:01] *** Quits: ecdhe (~ecdhe@user/ecdhe) (Read error: Connection reset by peer)
[21:10:11] <jim87> just realized I just can't decorate but classes or functions
[21:10:14] <bjs> jim87: you could add a Signal() into the args (or create one inside signalattr
[21:10:52] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[21:11:17] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 240 seconds)
[21:11:53] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:12:51] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:13:00] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:f949:8533:c03:a236)
[21:13:14] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[21:13:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:14:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:14:33] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:15:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[21:16:04] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:16:37] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 240 seconds)
[21:16:54] *** Quits: LucaTM (~LucaTM@user/lucatm) (Read error: Connection reset by peer)
[21:18:34] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:18:56] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:18:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:19:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:23:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:24:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:26:02] *** Joins: Narrat (~omnius@p200300df5f0aab1406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:26:29] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[21:26:42] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:28:07] *** Joins: Bardon (~Bardon@user/Bardon)
[21:28:16] *** Joins: georgios (~georgios@user/georgios)
[21:28:19] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[21:28:53] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Quit: beli6147)
[21:29:01] <andi_> do i need the MySQL driver installed for a MySQL query using SQLAlchemy?
[21:29:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:29:16] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:29:35] <ChrisWarrick> andi_: yes
[21:29:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:30:23] <andi_> ChrisWarrick: alright thank you :)
[21:30:52] <ChrisWarrick> https://docs.sqlalchemy.org/en/14/dialects/mysql.html has a list of supported libraries (you probably want mysqlclient unless you’re doing async)
[21:32:19] *** LiENUX is now known as LiENUS
[21:33:35] *** Quits: grooverman (~grooverma@177.102.117.95) (Remote host closed the connection)
[21:34:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:34:39] *** Joins: grooverman (~grooverma@177.102.117.95)
[21:35:55] *** Quits: newpy (~newpy@2601:280:4381:1390:3d0c:64dc:3003:dbe5) (Remote host closed the connection)
[21:36:20] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 268 seconds)
[21:36:21] *** Joins: newpy (~newpy@2601:280:4381:1390:3d0c:64dc:3003:dbe5)
[21:36:38] *** Joins: parv (~quass@user/parv)
[21:36:48] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[21:36:57] *** Quits: JigolKa (~Jigolka@user/JigolKa) (Quit: Going offline, see ya!)
[21:36:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[21:37:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:9d55:1633:59af:c7a5)
[21:37:26] *** Joins: kujo (~kujo@188.166.12.52)
[21:38:51] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[21:44:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:45:19] <jim87> If I install an editable copy of my package in a virtual environment and I call the entrypoint within my venv (started by a script in my_venv/bin/command), should it use the venv packages? It seems it's not able to locate a package I've installed in that venv
[21:45:33] <ChrisWarrick> jim87: it should
[21:45:36] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Client closed)
[21:45:58] <ChrisWarrick> jim87: are you sure you’re using the venv? did you do anything that could break the venv (upgrades, moving?)
[21:46:51] <jim87> ChrisWarrick: nope, not that I'm aware of. This is the output of the command: https://bpa.st/3JHQ
[21:47:40] <ChrisWarrick> jim87: it found google.protobuf
[21:48:36] *** Quits: aniketgm (~Aniket@49.36.107.163) (Quit: leaving)
[21:48:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:48:39] <ChrisWarrick> jim87: your import might be `protobuf` (and you seem to be doing weird import tricks, which you should not be)
[21:49:26] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:50:06] <jim87> ChrisWarrick: mmm you _might_ be right :D
[21:50:10] *** Parts: user51 (~user51@176.228.148.215) ()
[21:50:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:50:39] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[21:50:48] <jim87> ChrisWarrick: actually the package in pypi is protobuf, not google.protobuf
[21:51:04] <ChrisWarrick> jim87: pypi package names are not always equivalent to import names
[21:51:34] <jim87> What I'm doing is to read the Pipfile and try to import the packages. Is there any smarter way to do this?
[21:52:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:52:54] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:04] <ChrisWarrick> jim87: pkg_resources might be able to do that
[21:55:30] <jim87> Thanks :) will look into it
[21:56:19] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: brb.)
[21:58:18] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:58:47] *** Quits: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46) (Remote host closed the connection)
[22:01:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[22:01:57] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:02:45] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com) (Quit: cemotyz09)
[22:02:57] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:03:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:03:56] *** Joins: p-i- (~Ohmu@180.183.72.66)
[22:04:27] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:04:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:05:32] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[22:05:49] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:07:21] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[22:07:44] <jim87> ChrisWarrick: are all packages installed via pip having a folder in site-packages called {packagename}-{version}.dist-info? Could I use the dist-info to find out their packages?
[22:07:48] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Ping timeout: 256 seconds)
[22:07:58] <ChrisWarrick> jim87: pkg_resources uses that
[22:08:41] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:08:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:09:13] *** Joins: Jigsy (~Jigsy@user/jigsy)
[22:09:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:09:49] <hodapp_> I realize monkeypatching is usually not the answer, but if I have module foo, foo has classes Bar and Quux, Bar has methods instantiating some Quux, and I monkey-patch foo.Quux to my own version of the class, will this properly change behavior in Bar?
[22:10:08] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:10:13] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com)
[22:10:17] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:10da:965a:3a7c:5a1) (Ping timeout: 240 seconds)
[22:11:32] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[22:11:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:12:31] <jim87> ChrisWarrick: I think pkg_resources.get_distribution should be the start to find out the packages, though I'm blind or there isn't any information about it, apparently (but a list PackagePaths in the files attribute?)
[22:12:55] <jim87> ah no wait, that's the importlib.metadata.distribution(package_name)
[22:13:04] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:13:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[22:13:59] *** Joins: matsaman (~matsaman@user/matsaman)
[22:14:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:14:30] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:14:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:14:55] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b547-ef3f-a0b7-179d.res6.spectrum.com)
[22:16:55] *** Joins: Vonter (~Vonter@user/vonter)
[22:17:25] *** Quits: jamea22 (~jamea@201.77.110.253) (Ping timeout: 256 seconds)
[22:17:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:18:17] *** Joins: jamea (~jamea@201.77.110.253)
[22:18:39] <Lando-SpacePimp> https://www.nist.gov/news-events/news/2022/01/when-atoms-dont-blend
[22:18:49] <Lando-SpacePimp> Oh oops
[22:18:56] <Lando-SpacePimp> Thought this was ##physics
[22:18:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:18:58] <Lando-SpacePimp> My apologies
[22:20:05] <matsaman> Lando-SpacePimp: =)
[22:21:41] <matsaman> can't wait for those quanta of solaces, could really help the environment given our disposition to never give up technology
[22:23:37] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 240 seconds)
[22:23:44] *** Joins: Viewday111 (~Viewday@user/viewday)
[22:23:44] <jim87> ChrisWarrick: I found out the top_level.txt metadata, which actually for the protobuf package the top_level is google. Thing is though that google has no __init__.py, making it no package, no module, no nothing. It only contains the protobuf folder in it. How should I move now?
[22:24:01] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[22:24:05] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[22:24:19] <bilb_ono> \quit
[22:24:21] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Quit: ERC (IRC client for Emacs 27.2))
[22:24:29] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:24:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:25:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:25:20] *** Viewday111 is now known as Viewday11
[22:25:32] *** Joins: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126)
[22:27:11] *** Quits: delvian (~delvian@41.13.208.22) (Read error: Connection reset by peer)
[22:27:47] *** Joins: delvian (~delvian@41.13.208.22)
[22:27:48] *** Joins: kujo (~kujo@188.166.12.52)
[22:27:56] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:27:58] *** Quits: newpy (~newpy@2601:280:4381:1390:3d0c:64dc:3003:dbe5) (Quit: Leaving)
[22:28:16] *** Joins: pankid (~quassel@pankid.club)
[22:29:07] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[22:29:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:29:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:30:34] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[22:32:41] *** Joins: ianliu (~ianliu@200-150-188-220.static-user.ajato.com.br)
[22:33:37] *** Quits: delvian (~delvian@41.13.208.22) (Ping timeout: 240 seconds)
[22:33:43] <hexology> https://pypi.org/project/cryptography/#files am i missing something? it looks like they only publish python 3.6 wheels for this package, but the docs claim that "the latest version of pip will be able to install a binary wheel", but isn't that only true for python 3.6?
[22:33:56] <hexology> or can you use cp36 wheels on python >= 3.6?
[22:33:59] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[22:34:25] *** Quits: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[22:35:47] <ianliu> I have several files which I would like to access via importlib.resources api. The library I'm using expects to read physical files from a directory. Is it possible to "extract" all resources from a package into a directory recursively?
[22:36:03] <nedbat> hexology: you can't use cp36 wheels on other versions of python
[22:36:24] *** Joins: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126)
[22:36:25] <SnoopJ> hexology, well, there are pypy wheels for 3.7, 3.8 there, too, but it does look like there are only 3.6 wheels (???) for CPython.
[22:36:31] <sco1> https://cryptography.io/en/latest/faq/#why-are-there-no-wheels-for-my-python3-x-version
[22:36:47] <nedbat> i was wrong. TIL
[22:37:40] <SnoopJ> I guess it's only using the stable ABI, then?
[22:38:23] <hexology> oh interesting
[22:38:24] *** Joins: aku (~aku@163.172.137.34)
[22:38:37] * SnoopJ missed the 'abi3' tag
[22:38:44] <hexology> now i know what "abi3" means
[22:39:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:40:02] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 240 seconds)
[22:40:03] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[22:40:28] *** Quits: pycode (~pycode3@2001:b07:5d28:551:cdee:f4d6:a3fe:359a) (Ping timeout: 268 seconds)
[22:40:34] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f5:37d:ed7c:b42f:6ab4:354f) (Read error: Connection reset by peer)
[22:41:42] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 260 seconds)
[22:41:51] *** Joins: LucaTM (~LucaTM@user/lucatm)
[22:42:37] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[22:42:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:43:27] *** Joins: remline (~remline@user/remline)
[22:44:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:44:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[22:45:08] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:43] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:46:02] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:15] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[22:47:33] *** Joins: Guest28 (~Guest28@2a02:21b0:644d:adcb:fcc7:63bb:ced:113f)
[22:48:09] *** Quits: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[22:48:11] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[22:48:49] *** Joins: beli6147 (~Thunderbi@174.128.60.162)
[22:49:51] *** Quits: hackers (~self@user/hackers) (Ping timeout: 256 seconds)
[22:50:08] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[22:50:39] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[22:51:05] *** Joins: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs)
[22:51:20] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[22:51:25] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[22:51:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:51:40] *** Joins: hackers (~self@user/hackers)
[22:51:44] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[22:52:30] *** hackers is now known as remote
[22:54:08] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:55:23] *** Joins: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126)
[22:55:47] <nedbat> me too :)
[22:56:15] *** Joins: cosimone (~user@93-47-228-11.ip115.fastwebnet.it)
[22:56:22] *** Quits: beli6147 (~Thunderbi@174.128.60.162) (Quit: beli6147)
[22:57:01] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:59:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:00:13] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[23:00:36] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8342:dbc7:3c0c:7f29:54c7:3625)
[23:00:37] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:00:37] *** Quits: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[23:01:51] *** Joins: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126)
[23:03:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:04:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:07:12] <supakeen> ye
[23:07:17] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 240 seconds)
[23:07:25] <supakeen> funnily enough we ran into that a few days ago as well and i made that mistake too
[23:07:28] <supakeen> (the abi3 part)
[23:07:41] <supakeen> i was trying to debug why it selected the wrong one
[23:08:29] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com) (Quit: cemotyz09)
[23:08:48] *** Joins: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com)
[23:08:56] *** Joins: bloody (~bloody@user/bloody)
[23:08:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[23:09:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:09:29] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Client limit exceeded: 20000)
[23:09:39] *** Joins: tsiolkov (~tsiolkov@c-68-32-217-32.hsd1.mi.comcast.net)
[23:09:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:11:34] *** Quits: pk (~tsiolkov@c-68-32-217-32.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:13:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[23:14:07] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[23:14:34] *** Quits: ecdhe (~ecdhe@user/ecdhe) (Read error: Connection reset by peer)
[23:14:37] *** Quits: jay-m126_ (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[23:15:10] *** Joins: grooverman (~grooverma@177.102.117.95)
[23:16:08] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[23:19:15] *** Quits: djhankb9 (~djhankb@208.113.164.68) (Quit: The Lounge - https://thelounge.chat)
[23:19:20] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[23:19:45] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:21:29] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:f949:8533:c03:a236) (Quit: I have gone to sleep. ZZZzzz…)
[23:23:17] *** Joins: delvian (~delvian@41.13.208.22)
[23:23:17] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[23:23:58] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:24:26] *** Quits: lorogue_ (~lorogue@77.33.23.154.dhcp.fibianet.dk) (Quit: Leaving)
[23:24:44] *** Joins: ham5urg (~ham5urg@149.233.196.80.dynamic-pppoe.dt.ipv4.wtnet.de)
[23:24:57] *** Quits: ckdCreations (~ckdCreati@2607:fb90:8342:dbc7:3c0c:7f29:54c7:3625) (Ping timeout: 240 seconds)
[23:25:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[23:27:15] *** Quits: Mattiaslndstrm (~Mattiasln@185.213.154.230) (Ping timeout: 256 seconds)
[23:27:52] *** Joins: greedom (~greedom@p200300de6706c800f85da5a876ae3ebc.dip0.t-ipconnect.de)
[23:28:04] *** Joins: RubbishPubTomato (~RubbishPu@node-1w7jr9yhpl489ygdw3xrn7i78.ipv6.telus.net)
[23:28:30] <ham5urg> Recently I built a little GUI. First I went along with MVC pattern but soon I used pubsub and eliminated my C (controller). The pubsub-bus became my controller. Is this a correct way of doing a GUI? pubsub makes life easy.
[23:28:45] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[23:30:28] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Quit: RabidToaster)
[23:30:52] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[23:30:57] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[23:35:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:36:08] <dob1> using arrow I want to get epoch, there is the timestamp() method but it includes ms,  I could do  int(dt.timestamp())  but there is dt.floor('second') too but it keeps .0 , do I miss a specific method for this operation?
[23:37:11] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[23:37:32] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Client Quit)
[23:37:51] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[23:38:22] *** Joins: xcurva (~xcurva@116.111.31.238)
[23:39:41] *** Quits: xcurva (~xcurva@116.111.31.238) (Client Quit)
[23:39:56] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b8d6:5c48:edc7:2f2e) (Quit: Textual IRC Client: www.textualapp.com)
[23:41:05] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[23:42:38] <dba> I am a bit confused of what would be the outcome of this https://bpa.st/LOSQ without knowing  what  is/in validated_data (I assume it is a dictionary). can you help simplified that 2 lines of code. Thanks
[23:43:27] <grym> dba: it gives you the contents of validated_items, but not the ones whose keys are "password1" and "password2"
[23:43:40] *** Joins: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net)
[23:43:50] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[23:44:02] <grym> so if you started with {"password1":"hunter2", "user_name":"bob"}, you'd obtain {"user_name":"bob"}
[23:44:07] *** Quits: led_belly (~led_belly@196.240.57.118) (Ping timeout: 256 seconds)
[23:44:13] *** Quits: tup (~tup@cpc84029-pool15-2-0-cust183.15-1.cable.virginm.net) (Client Quit)
[23:44:31] <dba> grym, so it simply rewriting validated_data without "passowrd1" and "password2" keys?
[23:45:03] <grym> dba: it is creating a new dictionary with all the values whose keys aren't password1 or password2, and assigning the resulting new dictionary the name "data"
[23:45:20] <grym> with all the keys and values from validated_data*
[23:45:31] <dba> Thanks grym, much appreciated
[23:45:51] <grym> (it doesn't touch validated_data itself)
[23:46:21] <dba> grym, one more question, why tupple used for password1 and password2?
[23:46:29] *** Pddy is now known as Pddy_
[23:46:41] <grym> dba: no particular reason, i suspect
[23:46:59] <grym> you need something you can use `in` with, and a tuple is one of the things for which that's true
[23:47:19] <dba> if key not in ('password1', 'password2') is it differetnt then if key not in ['password1', 'password2']
[23:47:32] <grym> dba: different syntax, same result
[23:47:54] <grym> you could also pre-declare the collection of keys to drop and then `if key not in disallowed_keys`
[23:47:59] <phy1729> Could also use { } to round out the _set_
[23:48:02] <grym> you could also make it a set, yes
[23:48:22] <dba> Gotcha!!
[23:48:24] <grym> (and i generally would)
[23:49:02] <phy1729> For 2 I usually go for tuple and more than that a set.
[23:49:04] <grym> with two elements i doubt you'll care, but if you're testing against lots of objects, sets will be a _lot_ faster
[23:49:08] <grym> (in general)
[23:49:28] <phy1729> I suspect the speed difference is negligable at small n, but at larger n sets will win
[23:49:34] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[23:49:38] <grym> that's how **2 works, yeah
[23:51:15] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:51:29] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[23:53:13] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[23:53:26] *** Joins: audiobirb (~audio@user/audio)
[23:53:59] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[23:57:09] *** Quits: delvian (~delvian@41.13.208.22) (Ping timeout: 256 seconds)
[23:57:37] *** Joins: raxor2k (~raxor2k@78.158.254.45)
[23:57:51] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[23:58:09] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[23:58:09] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[23:58:09] *** Joins: hams (~hams@user/hams)
[23:58:27] *** MrChristmas is now known as MrC
[23:58:55] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Quit: Client limit exceeded: 20000)
