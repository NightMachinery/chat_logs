[00:16:34] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[00:19:45] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[00:36:45] *** Joins: jeosol (~jeosol@user/jeosol)
[01:01:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[01:12:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[01:12:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:13:57] *** Quits: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 250 seconds)
[01:14:06] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 260 seconds)
[01:21:27] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[01:23:29] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:32:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:34:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:41:01] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:3df8:ed64:e02c:f418) (Remote host closed the connection)
[01:48:35] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[01:48:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:50:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:56:19] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:d046:1fb3:1e18:ff47)
[02:05:00] *** Joins: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:05:59] *** Joins: hayley (~theemacss@user/hayley)
[02:11:46] *** Quits: mgl (~mgl@82.11.145.235) (Ping timeout: 250 seconds)
[02:24:50] <hayley> "In the late 1970's and early 1980's, several (now) well-know people from a certain large commercial laboratory in New Jersey decided to give numerous talks designed to purposely mislead their audience about the costs of garbage collection vs. its alternatives. I can only speculate why they did this, but it was one of the most successful big lies since Germany in the 1930's." — Henry Baker
[02:27:17] <drakonis> that's a hot take
[02:27:39] <moon-child> 'goal was to divert Soviet attention from truly productive computer languages like Lisp, and convince them that only a bloated, grossly inefficient, high order compiled language along the lines of PL/I could be reasonably utilized in the deployment of military embedded systems'
[02:28:16] <pl> even your heroes had shit takes
[02:28:18] <hayley> It was in https://groups.google.com/g/comp.lang.lisp/c/n26ga2si67I/m/1hVGy7r_RHQJ, not the Ada history paper.
[02:28:20] -ixelp- Why garbage collection?
[02:30:21] <hayley> pl: Knew that already. See everything Baker wrote on linear types.
[02:30:27] <hayley> (^:
[02:31:34] <pl> (btw, for some extra context - CL's condition system is, afaik, at least partially derived from PL/I, and Ada has obvious Lispism in its type system, like full equivalent of CL:SATISFIES)
[02:32:26] <hayley> Don't think he was the biggest fan of CL. But moon-child's quote is from an April Fool's article on the "history" of Ada. 
[02:32:41] <hayley> "Twenty years ago, the US DoD asked "What color is my parachute [programmed in]?" The answer was `Green,' and the rest is history, or so we have been told"
[02:35:08] <pl> I find Ada quite interesting. Yes, I could do the same in CL or other Lisp, but it would probably involve implementing Ada in parens first, and I can stomach the syntax :V
[02:37:55] <hayley> https://plover.com/~mjd/misc/hbaker-archive/sigplannotices/gigo-1997-04.html
[02:37:56] -ixelp- Sigplan Not. Apr 1997: I Have a Feeling We're Not in Emerald City Anymore
[03:23:23] <selwyn> https://ar5iv.labs.arxiv.org/html/1709.07020
[03:23:24] -ixelp- [1709.07020] The arXiv of the future will not look like the arXiv
[03:24:23] <hayley> "Most researchers outside of physics, and consequently outside of the arXiv world, write their manuscripts in Microsoft Word or other WYSIWYG editors" so
[03:26:43] * hayley uploaded an image: (114KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/WCygWOqjdPACcdvfyjvWxwwr/lamport-is-dead-inside.jpeg >
[03:29:28] *** Joins: aeth_ (~aeth@user/aeth)
[03:29:29] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[03:29:31] *** aeth_ is now known as aeth
[03:33:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[03:36:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[03:40:32] <qhong> latex is much worse than m$ word
[03:40:36] <qhong> plz use texmacs
[03:41:34] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[03:42:30] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[03:43:02] <moon-child> I have no idea what texmacs is
[03:43:14] <moon-child> but I would rather use latex than ms word
[03:47:52] <qhong> moon-child: latex the language ewww
[03:48:09] <qhong> imagine programming in C preprocessor
[03:48:22] <qhong> (that's the feeling of writing latex)
[03:48:48] <moon-child> I don't program in tex.  I use it as a markup language and a layout engine
[03:48:51] <moon-child> a task it does a fine job of
[03:49:07] <moon-child> (that said I also have my own templating thingy which composes with normal cl)
[03:50:00] <qhong> I feel like if you're dealing with any more advanced layout control/fancy graphics you always need to deal with latex the language
[03:50:37] <qhong> that's unless you really use it as a bare layout engine only, which basically means invoking plaintex and reimplement everything in your high-level language
[04:11:00] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[04:28:35] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a3d9:5253:a1a8:660f) (Ping timeout: 252 seconds)
[04:43:23] *** Joins: molson_ (~molson@172-103-21-94-dynamic.midco.net)
[04:43:25] *** Quits: Brucio-61 (~Brucio-95@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[04:44:08] *** Quits: minion (~minion@common-lisp.net) (Killed (NickServ (GHOST command used by minion1)))
[04:44:37] *** Joins: minion (~minion@common-lisp.net)
[04:44:48] *** Joins: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[04:48:04] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Ping timeout: 272 seconds)
[04:50:03] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:50:09] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (Ping timeout: 240 seconds)
[04:50:09] *** Quits: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[04:50:56] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[04:51:54] *** Joins: commandoline_ (~commandol@ubuntu/member/commandoline)
[04:54:01] *** Joins: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[05:13:52] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 260 seconds)
[05:19:46] *** Joins: Aeres (~Aeres@user/aeres)
[05:36:11] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:2ad9:1465:5fb9:8672)
[05:42:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[05:58:49] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[05:59:15] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[05:59:42] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:2ad9:1465:5fb9:8672) (Ping timeout: 260 seconds)
[06:00:31] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:203:625:d7c4:9b0)
[06:25:31] *** Joins: Inline__ (~Inline@p200300cd470f690069ffd8a9e8710708.dip0.t-ipconnect.de)
[06:28:03] *** Quits: Inline (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:30:08] <lagash> moon-child: hmm? what templating thingie? does it have to do with TeX?
[06:57:41] *** Quits: Aeres (~Aeres@user/aeres) (Quit: WeeChat 3.5)
[07:06:11] <gilberth> How could JIT work at all? Could I keep a map from 8080 address to a piece of native code to execute? Whenever the PC is loaded from something unknown (which includes RET), I would go through this map. Hmm. What needs to happen, if a byte is written? Hmm.
[07:10:09] <gilberth> And can I be clever? What I have seen is that after startup applications behave fine and show no self modifying code anymore. What I'd like to look at, if RETs make to somewhere else than the last CALL. I could perhaps observe that with an interpreter and stop the CPU, if a RET doesn't match, stare at the code and wonder.
[07:32:29] <moon-child> lagash: well, it just generates a tree.  I only made an html generator, but could as easily make a tex generator
[07:34:06] <moon-child> gilberth: hmm, if you generate assembly rather than c, then you can just replicate the call/ret behaviour exactly the way it worked in the source
[07:34:37] <hayley> I'd use a "write barrier" which checks if there is code to kill for JIT.
[07:35:22] <moon-child> I would just use the mmu
[07:36:23] <hayley> I mean, it's just like a card barrier for a generational GC. Find the right card for the write, and if it is set, then go to a slow path which figures out what has to be removed.
[07:36:46] <gilberth> moon-child: Well, that will be complicated for a CALL and RET on AMD64 pushes and pops 8 bytes, the 8080 pushes and pops 2 bytes.
[07:37:22] <gilberth> MMU is out of question because of the huge page size of 4KB.
[07:38:05] <moon-child> gilberth: I meant, use mmu to protect against self-modifying code.  Protect the entire code segment.  Unless they mix code and data?
[07:38:24] <moon-child> hayley: overhead of recompiling is great enough anyway, it doesn't seem worth the bother
[07:38:29] <gilberth> moon-child: I am talking about JIT. Translation of a whole program at once to C is another idea.
[07:38:52] <gilberth> moon-child: The page size is too large for that.
[07:39:34] <gilberth> As what is code and data with the program isn't separated by that much.
[07:40:26] <moon-child> I see
[07:40:29] <gilberth> And although there isn't much self-modifying code. I have some programs, which a joined data and text segment in modern speak.
[07:42:00] <gilberth> .com files are not relocated in any way. It's a pure image of what to place in RAM. No header, no nothing. So they didn't bother and have say some global variables of a subroutine right next to the subroutine's text.
[07:45:02] <gilberth> Meanwhile I wonder why the 8085 has undocumented instructions specifically for compiled ALGOL^WPascal^WC code which beat the Z80 hands down. I don't wonder why those instructions are there, I wonder why they are undocumented.
[07:45:56] <gilberth> I mean, the 8085 has indirect 16-bit load/store instructions. Neither the 8080 nor the Z80 have indirect 16-bit load or store instructions.
[07:48:41] <gilberth> Well, it's completely useless what I do, but it's a nice puzzle.
[07:52:08] *** Joins: semz_ (~semz@user/semz)
[07:54:51] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:00:03] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[08:00:18] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:203:625:d7c4:9b0) (Ping timeout: 260 seconds)
[08:00:26] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[08:09:23] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:d046:1fb3:1e18:ff47) (Remote host closed the connection)
[08:46:23] <gilberth> Oh, I found an error in Zilog's Z80 User Manual. There is a wrong encoding given for the "RR r" instruction. Hmm.
[08:47:02] <gilberth> This is new, now not only software bugs chase me, but also documentation glitches. What's next? Hardware bugs?
[08:51:19] <hayley> gilberth: Have you heard of partial derivatives of REs? They make NFAs rather than DFAs.
[08:52:55] <gilberth> hayley, why would I want an NFA?
[08:53:19] <hayley> idk. Just wondering if you heard of them.
[08:53:59] <gilberth> What is partial of that derivative?
[08:54:26] <gilberth> lol. I can't send email to Zilog. This is funny.
[08:56:03] <hayley> I read the paper, and I don't really know. But you make a NFA from it.
[09:03:45] <gilberth> Anyhow, would I wish to design VM like the one you talked about, I would pick something I could target gcc at. Pick the easiest RISCy target you find and go from there. And if I would be so silly to persue a 16-bit route, I would use gcc, too. gcc is quite happy with 16-bit targets as well. You will get a good compiler and the whole toolchain of binutils e.g.
[09:06:46] <hayley> idk, I would not design a VM like that one.
[09:07:24] <gilberth> The one you look at is a stack machine. Which is bad to begin with.
[09:08:26] <gilberth> Why do you use stack machines? Because you could get away with a trivial compiler. That compiler would just need to turn your expression into postfix and whould be done.
[09:16:15] <hayley> I haven't seen anyone use a compiler though. They use the stack instructions directly.
[09:17:14] <hayley> Again, makes for a terrible Forth, but people pretend it's Forth still.
[09:20:40] <gilberth> Oh dear, so they essentially write assembly?
[09:21:20] <gilberth> I mean, is that a VM, or is it a poor programming language. What is the purpose of that anyway?
[09:21:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[09:22:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:24:25] <hayley> Yes. And it is a bad programming language.
[09:25:02] <hayley> I say it's bad Forth, because you don't define words. You push a label and call it. Not very Forth-like, and it doesn't give you that "ball of mud" sort of language extension in Lisp or Forth. And the stack is really made of bytes, and not words.
[09:27:46] <gilberth> The whole design is byte oriented?
[09:28:07] <hayley> Yes.
[09:28:36] <gilberth> The longer I think about it, the more I dislike byte oriented machines. I like the word oriented approach better.
[09:35:59] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[09:46:19] <gilberth> Any Emacs experts around? Can I make incremental search behave, so that when I search for "a  " there is no match for just "a "? Incremental search once searched for what I typed, not what it did see fit. Perhaps this is another improvement? idk
[09:52:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:56:33] *** Quits: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[09:59:55] <hayley> gilberth: The thing is, that you can combine byte and word-oriented instructions arbitrarily, leading to some very odd "type" errors.
[10:00:56] <gilberth> Yep, and the whole idea of being able to push and pop bytes is strange.
[10:01:36] <hayley> It's really a byte machine, but some instructions just happen to process two bytes at a time. Probably doesn't help that I almost only used the word oriented instructions in my article.
[10:01:44] <dave0> gilberth: i don't even know the key combination for search, but you could try a normal search (ctrl-s ?) and type   a space space   and then press the i-search key to parry from normal search to incremental search
[10:01:50] <gilberth> Is the value stack and the control stack the same?
[10:01:56] <hayley> The fib procedure I wrote takes in a byte and returns a word.
[10:01:58] <hayley> No, they are separate.
[10:02:53] <gilberth> dave0: c-s is isearch. I would need to figure out where normal search is.
[10:03:24] <hayley> https://www.youtube.com/watch?v=PGNiXGX2nLU looks funny for being a pretty 80s-looking music video, but in 4K resolution.
[10:03:24] -ixelp- Dead Or Alive - You Spin Me Round (Like a Record) (Official Video) - YouTube
[10:04:34] <dave0> gilberth: esc x apropos search
[10:04:55] <gilberth> dave0: I was hoping for a flag to flip to make Emacs behave as it did a few years ago. This is why I don't update it. Not only is the cursor unbearable with recent Emacs, but each time I update, there a new "features" I do not want and I need to figure out how to turn them off.
[10:06:00] <dave0> gilberth: i've been using `jove` (jonathans own version of emacs) since the mid 90's ;-)
[10:06:07] <hayley> gilberth: Geoff Langdale told me that in his experience there were enough REs that wouldn't make nice DFAs, so he would have a backup NFA engine too.
[10:06:11] <gilberth> m-x search --- that seems to work. I never use normal search. Emacs tells me it is bound to the <find> key. Whatever the <find> key is. Do I have one?
[10:06:40] <dave0> jove is so old it's written in pre-ansi c
[10:06:49] <gilberth> dave0: Jove is nice. Before I had GNU Emacs I was an uemacs user. With DOS.
[10:07:34] <dave0> gilberth: i've tried microemacs, and it is nice, but i had already invested a lot of time in jove, so i didn't really switch
[10:07:45] <gilberth> And when I got XENIX, the first thing I did was porting uemacs as I really cannot use vi. *beep* *beep* I physically disconnected the speaker while porting. It was a pain.
[10:08:15] <gilberth> dave0: uemacs = microexpand. It was all I had at that time.
[10:08:29] <hayley> And IIRC Hyperscan has this "bit parallel" NFA simulation, which uses SIMD registers to get a lot of bits.
[10:09:26] <hayley> The issue, of course, is that I have no idea how a bit-parallel Mealy machine simulation would work.
[10:09:34] <gilberth> Before XENIX, I married XLISP to uemacs. XLISP was living inside uemacs and I had an inferior lisp like buffer.
[10:10:54] <gilberth> hayley: Yes, grepers would want to do that.
[10:11:01] <hayley> ):<
[10:12:06] <gilberth> s/microexpand/microemacs/ lol
[10:12:21] <gilberth> Coffee! I need coffee! Quick.
[10:14:48] <dave0> get that man a drink! stat!
[10:15:44] <dave0> i've been using jove forever, but there is one problem, it can't handle binary files with NUL in it, and one missing feature, undo/redo
[10:17:04] <dave0> oh and it can't handle unusually long lines (which has come up when trying to edit a web page that doesn't use line breaks)
[10:17:17] <dave0> but it's been so long i even have muscle memory for it :-p
[10:20:02] <gilberth> dave0: What stops you from adopting GNU Emacs?
[10:21:05] <gilberth> I mean as soon I learned about GNU Emacs and got hold of the sources I ported it to my poor XENIX. It helped that I already ported gcc.
[10:21:40] <dave0> gilberth: nothing, really
[10:22:10] <gilberth> Anyhow, for quick edits I use jove, too.
[10:22:14] <dave0> but jove is very lightweight
[10:22:18] <dave0> oh cool
[10:22:44] <gilberth> export EDITOR=jove :-)
[10:23:17] <gilberth> But for hacking it's Emacs for me. Especially for Lisp as I cannot imagine not having an inferior lisp mode.
[10:23:57] <gilberth> There was some time I use Hemlock, which comes with CMUCL. Very fast, much faster than Emacs because it's written in CL.
[10:24:15] <hayley> "A Speculative Parallel DFA Membership Test for Multicore, SIMD and Cloud Computing Environments" Hm, enough buzzwords?
[10:24:19] <dave0> i thought gnu emacs would be a professional piece of software, it's very famous, so i assumed it used the best algorithms... but then i looked into it, and the text buffer is implemented with realloc
[10:24:27] <moon-child> hayley: needs more blockchain
[10:25:05] <dave0> i was expecting some kind of b-tree or even a rope. it was a flat array that it reallocs.. i was disaapointed
[10:25:08] <gilberth> dave0: The text buffer is a gap buffer. And that is a sound idea.
[10:25:22] <moon-child> that is not very sound
[10:25:36] <moon-child> if I edit a huge file in emacs, it chugs.  Vim does fine
[10:25:39] <dave0> gilberth: it's a work-around for a slow data structure
[10:25:40] <moon-child> because vim uses a tree
[10:25:51] <dave0> moon-child: that's what i assumed gnu emacs used
[10:26:24] <gilberth> moon-child: Well, I don't edit a 1GB file each day.
[10:26:27] <dave0> it has so many features and so many people hacking on it, why wouldn't it use the best algorithms
[10:26:29] <moon-child> fwiw I hear very bad things about emacs code
[10:26:58] <moon-child> gilberth: no, but wouldn't you rather if your text editor didn't chug when you did end up with a 1gb file?
[10:27:17] <gilberth> I believe that all routines which constantly scan the buffer for regular expressions like font lock benefit more from seeing a linear buffer.
[10:27:46] <gilberth> But: I could imagine that when I would teach Emacs how to match REs it could be way faster here.
[10:28:00] <moon-child> it's not a completely linear buffer, as you must skip the gap.  And you can make your leaves large enough in a rope that the constant factors are fine
[10:28:04] <dave0> that only matters for what you can see, and at most you can see... i dunno how big is a terminal? 200x100 ?
[10:28:50] <moon-child> yeah
[10:29:13] <gilberth> What is really slow though is indention. Indenting a whole Lisp function takes time. This is the reason I used Hemlock once. On an i486/66MHz. There re-indention time was not noticable with hemlock (which uses a linked list of line) and could take seconds with Emacs. For a like 200 lines function.
[10:29:34] <moon-child> dave0: well, sort of.  Say I open a quotation mark early in the file, and then go late in the file; it should all be coloured as though it's part of a string
[10:30:29] <gilberth> moon-child: Whether I look for the gap or the end of the buffer while scanning doesn't matter much. The second benefit is that pointers (markers) into the buffer are just some offset. Granted, you could do the latter with a tree either.
[10:31:08] <gilberth> Anyhow, would I implement an editor I would go with a tree.
[10:31:20] <moon-child> getting from an offset to a pointer is O(logn) with a rope
[10:31:22] <moon-child> not too bad
[10:32:16] <dave0> another trick with a tree is you can load on demand
[10:32:19] <gilberth> Whatever a rope is. I would use a binary tree.
[10:32:45] <moon-child> https://en.wikipedia.org/wiki/Rope_(data_structure)
[10:33:04] <dave0> gilberth: yeah rope is just a tree for a string, rather than an array or linked list
[10:33:29] <gilberth> moon-child: Looks like a binary tree to me.
[10:33:58] <moon-child> yeah
[10:34:07] <dave0> but i expected even a highly optimized b-tree in gnu emacs.. why not? lots of very smart people use emacs (gilberth i'm looking at you!)
[10:34:42] <gilberth> The height of that tree could be small.
[10:36:16] <gilberth> When you edit you could either realloc the substring at the leaf or split the node. When idle you could reduce the height again and balance.
[10:37:22] <moon-child> 'When idle you could reduce the height'   I spent some time thinking about that a while ago.  I think to do it ideally would be very delicate, as you need to interrupt when an event comes in
[10:37:32] <moon-child> but should be doable
[10:37:43] <moon-child> and I wondered why existing editors don't do it (if indeed they don't)
[10:38:02] <hayley> Real Time Tree Rebalancing on a Serial Computer
[10:38:38] <gilberth> And I really don't know what the font lock does. I would -- and did for hemlock -- craft an automaton to actually scan/parse the buffer and cache its state at certain points. When something changes in the middle, later on scanner/parser state would be the same again. I would prefer that indentation works that way too.
[10:39:31] <moon-child> hayley: rather than rebalance, I would try to compact, and ideally end up with just one node for the whole file
[10:39:57] <gilberth> moon-child: That was what I meant by "reduce height".
[10:40:09] <moon-child> yeah, I got that
[10:41:22] <moon-child> I think I worked out that you should try to repeatedly cut the height of the tree in half
[10:42:14] <gilberth> Leaves could also share a memory buffer. mmap the whole file get one node. Insert a character: Split the node into three. One pointing to the original buffer left of the point the other right of the point and the third to the character you inserted.
[10:42:28] <moon-child> yes
[10:42:40] <moon-child> I mean, if you don't do that, you get bad asymptotics
[10:43:09] <gilberth> Yep, the same thing that a gap buffer suffers from: Moving bits all the time.
[10:43:45] <moon-child> (aghhh, don't mmap though.  I missed that)
[10:43:49] <gilberth> Now, could we be likewise clever for undo information? Just never modify substrings, just keep different trees for each point in time. Hmm.
[10:44:09] <moon-child> for undo, I am tempted to say you should use diffs
[10:44:21] <moon-child> even though I have generally advocated snapshots in the past
[10:44:23] <moon-child> hmmm
[10:45:00] <dave0> i think you're approaching copy-on-write
[10:45:03] <moon-child> if you never modify substrings, then you need a realloc on every character insert/backspace
[10:45:24] <gilberth> For Hemlock I kept a kind of transaction log. I boiled down all editing into (subseq buffer i j) <- new ; where new could be of different size.
[10:46:00] <moon-child> probably realloc per keystroke is ok.  But you make a lot of garbage.  Since the leaves should have some minimum size to avoid cache blowout when traversing
[10:46:16] <gilberth> moon-child: No, I was just thinking. I won't realloc, I would craft a new tree, w/o copying anything.
[10:46:39] <gilberth> I have no idea. I am brain storming at bit.
[10:46:40] <moon-child> sure.  But a leaf should not just be one character, but a chunk of one
[10:46:51] <moon-child> s/one/them/
[10:46:56] <moon-child> so you have to realloc the leaf you edited
[10:47:07] <gilberth> Yes, but this is where your compaction comes in, doesn't it?
[10:47:50] <moon-child> sure.  But you can go for a bigger leaf if you can edit in-place
[10:48:44] <gilberth> Sure, when I append chars to a substring some other tree pointing to the subseq before isn't affected. Or I ditch the idea to replicate trees for undo.
[10:49:45] <moon-child> Right.  This would be specifically an optimization for the point most recently inserted to
[10:49:53] <moon-child> kinda like a mini gap buffer in each leaf, I guess :P
[10:50:02] <gilberth> Yes.
[10:50:44] <gilberth> Well, I like to design things general at first and see special cases as an optional optimization.
[10:51:09] * moon-child nods
[10:57:16] *** Joins: shka (~herr@109.231.3.55)
[11:00:08] <hayley> Actually, no, I only use the word-oriented instructions in my article. It's just that annoying to mix bytes.
[11:00:34] <hayley> The usual combinators like SWAP don't work, you need some interesting rotations to swap 1 byte and 2 byte values on the stack.
[11:08:53] <hayley> https://www.reddit.com/r/reddit/comments/tqbf9w/bringing_back_rplace/
[11:08:56] <hayley> Self logo on r/place when
[11:34:58] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[11:35:04] *** Quits: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[11:48:10] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:51:49] *** Joins: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[11:51:57] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:55:51] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[11:56:18] *** Quits: Brucio-61 (~Brucio-61@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Remote host closed the connection)
[11:56:38] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Remote host closed the connection)
[12:03:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[12:05:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:14:55] <gilberth> Oops. $GME jumped by +24%. What happened?
[12:16:06] <moon-child> /r/wallstreetbets happened
[12:16:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[12:17:57] <gilberth> I see. I wonder if I still own some. Perhaps I stashed a few for some losses to realize when handy.
[12:18:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:18:55] <gilberth> Can you get rich quick (tm) by reading /r/wallstreetbets?
[12:22:14] <edgar-rft> I think you can get faster rich by reading rich text
[12:24:35] <gilberth> Hmm, what would I need to read then?
[12:24:43] <moon-child> 1. read /r/wallstreetbets
[12:24:45] <moon-child> 2. hodl $gme
[12:24:47] <moon-child> 3. ???
[12:24:49] <moon-child> 4. profit
[12:25:31] <gilberth> Is that the new slashdot?
[12:26:27] <gilberth> But that sounds easy, all I need now is an HTML to rich text converter.
[12:27:34] <gilberth> c-x c-f get-rich.lisp RET (defpackage :get-rich (:use :closure-html :cl))
[12:27:46] <gilberth> Ooops. Wrong window.
[12:30:55] <shka> gilberth: only if gamestonks is going on 
[12:31:14] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[12:31:51] <shka> gamestonks was fun
[12:32:50] *** Joins: aeth (~aeth@user/aeth)
[12:46:23] * hayley spots the permission warning "Play remote sound files with 'bass'." That's the library that eats 100% CPU on randomly.
[12:53:22] <gilberth> Is "/123" a potential number?
[12:54:36] * gilberth should write a POTENTIONAL-NUMBER-P function.
[13:00:07] <moon-child> use read-from-string, check it read the whole string, and numberp on the result?
[13:01:31] <hayley> Now gmod is giving me a load of 7.6 or so. Not fun.
[13:03:50] <hayley> And it's SSL_peek and __strchr_avx2 giving me problems again.
[13:04:14] <moon-child> strchr ... sounds a lot like O(n^2) sscanf again ...
[13:04:46] <hayley> Yeah, idk what is going wrong here.
[13:05:08] * moon-child makes jasmine tea
[13:05:14] <moon-child> this will never not make me feel like a really old chinese lady
[13:06:04] <gilberth> moon-child: Try with (read-from-string "1_2") => 1_2 doesn't work.
[13:06:19] * hayley has to work out stuff from info registers and the calling convention.
[13:06:30] <moon-child> gilberth: well, 1_2 isn't a number, is it?
[13:06:37] <moon-child> or you want to know if the string starts with a number?
[13:07:20] <moon-child> meaning: you would like a grepper? :)
[13:07:30] <gilberth> moon-child: I asked about potential numbers. And 1_2 is one as well as 10Q3 e.g.
[13:07:57] <hayley> Hm, I broke at random times and SSL_peek read 0x34 bytes twice. I wonder if it's just reading the same bytes.
[13:08:20] <moon-child> right
[13:08:48] <gilberth> I was not sure about the slash. But I read the spec again. "/100" is not a potential number. Good.
[13:09:03] <hayley> Yes, something is wrong(tm).
[13:09:24] <hayley> SSL_peek produces only 52 bytes repeatedly, but it is called with a limit of 1,999 bytes.
[13:11:24] <gilberth> moon-child: You're right. "/100" does not begin with a digit to begin with.
[13:12:50] <gilberth> Nice. "34h" be a potential number. Good. I can read [0-9][0-9A-F]*h as hex.
[13:15:24] * hayley is having fun in gdb.
[13:15:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[13:15:34] <moon-child> I never liked the 'h' suffix for hex
[13:15:39] <gilberth> Heh, /5 is even listed as an example in the spec.
[13:15:43] <hayley> If I issue set $rdx = 0 before the call, the threads will actually finish and stop hogging my CPU.
[13:15:57] <moon-child> you have to read through the whole number before you realise it is supposed to be hex
[13:16:08] <moon-child> and you cannot write e.g. 'ffh', as that is ambiguous; you must write 0ffh
[13:16:19] <gilberth> moon-child: The trouble with 'h' is that cafeh is not a number. It must start with a digital digit.
[13:16:50] <moon-child> yes, as I said
[13:17:14] <gilberth> moon-child: I can't read as quick as you type. This always happens to us, doesn't it?
[13:17:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:17:33] <moon-child> :)
[13:17:34] <gilberth> Anyhow, you grow accustomed to it. 0...h is not longer than #x... or 0x...
[13:18:05] <moon-child> it is not longer.  But I read left to right
[13:18:06] <gilberth> I always have a preceding '0'. I write 000h if I mean the octet with value zero.
[13:18:13] * moon-child quickly hides his apl interpreter
[13:18:40] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[13:18:52] <gilberth> What's wrong with your interpreter?
[13:18:53] <hayley> And, if I issue set $rdx = 0 after the file is done loading, it'll actually play in game.
[13:19:07] <moon-child> it executes from right to left
[13:19:30] <gilberth> Right. So do you use a mirror then when using it?
[13:20:00] <moon-child> :D
[13:20:47] *** Joins: aeth (~aeth@user/aeth)
[13:21:05] <gilberth> Or you hacked your CRT and reversed the polarity of the horizontal deflection coil. Would be more convenient, I suppose.
[13:23:07] <hayley> Is there a way that I can check if a particular library is loaded into my process in C?
[13:23:44] <gilberth> Lock at what is mmapped?
[13:23:50] <gilberth> Look
[13:24:02] <hayley> I might add a patch to libssl which will tell the client that it EOF'ed, if it tries to SSL_peek too many times, without moving anywhere, and it didn't fill the whole buffer either.
[13:24:03] <moon-child> ldd + ltrace dlopen?
[13:24:11] <shka> hayley: not in c, shared libraries is an OS thing to do
[13:24:15] <hayley> But only if it's got this crappy libbass loaded too.
[13:24:25] <moon-child> oh
[13:24:28] <hayley> shka: I mean with the POSIX stuff and all. Sure.
[13:24:29] <moon-child> I would just make a custom libssl
[13:24:32] <moon-child> and LD_PRELOAD it
[13:24:39] <moon-child> not for the whole system
[13:24:41] <hayley> Yeah, that works too.
[13:24:45] <shka> hayley: https://superuser.com/questions/310199/how-to-see-the-currently-loaded-shared-objects-in-linux\
[13:24:46] -ixelp- libraries - How to see the currently loaded shared objects in Linux? - Super User
[13:25:21] <shka> oh, scratch that
[13:25:25] <moon-child> basically, LD_PRELOAD a proxy function that uses libdl to call the real function
[13:25:27] <shka> https://stackoverflow.com/questions/5103443/how-to-check-what-shared-libraries-are-loaded-at-run-time-for-a-given-process/27522149#27522149
[13:25:28] -ixelp- c++ - How to check what shared libraries are loaded at run time for a given process? - Stack Overflow
[13:25:30] <moon-child> I did it once to munge inputs for some game
[13:25:34] <shka> this appears to be better 
[13:25:43] <moon-child> easier than rebuilding the whole library
[13:26:30] <hayley> I'll just LD_PRELOAD then. IIRC there is a script which sets up LD_PRELOAD for Source games already.
[13:27:23] <moon-child> also __attribute__((constructor)) to actually do the loading of the original function
[13:29:32] * moon-child hits an audible underrun
[13:29:51] <moon-child> I blame pulse.  There is no excuse for that.  Especially with buffers as big as you use for non-realtime music
[13:31:17] <hayley> Hm, so I'll just patch SSL_peek to use a thread-local counter for the number of times it's failed to "progress" while peeking, and I'll munge the buffer size if it's failed enough times. 100 should suffice for non-broken programs to work.
[13:31:31] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:8141:5349:2781:19d2)
[13:39:59] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[13:44:24] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[13:50:54] <hayley> "version `OPENSSL_1.0.1' not found" Really, I need to patch OpenSSL version 1.0.1 specifically?
[13:51:09] <hayley> That's bad, since it's not updated now.
[13:56:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:57:12] <hayley> Now where is my .so file?
[13:57:35] <hayley> There's a .a archive, but I figure that's not quite right.
[13:57:51] <moon-child> ldd?
[13:58:00] <moon-child> also check it's not actually launched through a script that sets LD_LIBRARY_PATH
[13:58:52] <hayley> I know gmod uses a script setting LD_LIBRARY_PATH, and I put the library in that directory.
[13:59:56] <hayley> Apparently I am supposed to utter "./config shared" for a shared library.
[14:02:09] <hayley> More like "CFLAGS=-fPIC ./config shared" nowadays.
[14:02:34] <moon-child> doesn't new gcc do pic by default?
[14:02:57] *** Joins: lisp123 (~lisp123@143.238.171.43)
[14:04:20] <hayley> Seems not. But now gmod boots...
[14:09:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[14:09:08] <hayley> Didn't seem to help though. ):
[14:09:42] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:09:49] <hayley> "The inferior has not yet allocated storage for thread-local variables in the shared library" ???
[14:11:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:18:27] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[14:19:05] <hayley> I could use a global counter, I guess.
[14:26:19] *** Joins: Brucio-61 (~Brucio-51@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[14:27:31] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:28:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[14:30:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:33:47] <shka> https://www.dw.com/en/germanys-far-right-split-by-russia-ukraine-war/a-61283065
[14:33:47] -ixelp- Germany′s far-right split by Russia-Ukraine war | Germany | News and in-depth reporting from Berlin and beyond | DW | 28 [...]
[14:34:20] <shka> "Hans, I am confused, which side is ours?"
[14:36:07] <hayley> Oh, helps that apparently it loaded the wrong version of libssl maybe.
[14:37:40] *** Joins: tfeb (~tfb@88.98.95.237)
[14:38:08] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[14:39:04] <shka> https://en.wikipedia.org/wiki/Mission_Earth_(novel_series)
[14:40:00] <hayley> Hey, it works now!
[14:40:22] *** Joins: treflip (~user@user/treflip)
[14:41:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:43:03] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[14:44:10] <hayley> https://gist.github.com/no-defun-allowed/abeea4a4b5a5d3f547bef89510e419ba
[14:44:10] -ixelp- fix libbass.so not knowing how to use SSL in Garry's Mod · GitHub
[14:46:25] <moon-child> I think those peek_failures accesses can be acqrel, maybe?  Not that it matters
[14:46:48] <hayley> ):<
[14:49:39] * hayley listens to Ram Ranch now that the music player works
[14:56:32] * shka is in continues awe of bullshit Hubbard managed to pull off
[14:58:53] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
[15:03:57] <selwyn> the telescope?
[15:04:56] <selwyn> thats hubble lol
[15:08:11] <shka> selwyn: the scientology guy
[15:10:10] <selwyn> scientology doesnt have good branding
[15:10:12] <selwyn> no good logo
[15:10:27] * shka should invent his own religion
[15:10:33] <selwyn> https://upload.wikimedia.org/wikipedia/en/3/38/Heavensgatelogo.jpg now this is what you want
[15:11:13] <selwyn> this logo means a whole bunch of people are going to die over some weird shit
[15:11:47] <selwyn> https://www.heavensgate.com/ christ they are still online
[15:11:48] -ixelp- Heaven's Gate - How and When It May Be Entered
[15:14:12] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[15:15:49] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[15:25:33] *** Joins: treflip (~user@user/treflip)
[15:31:00] *** Quits: lisp123 (~lisp123@143.238.171.43) (Remote host closed the connection)
[15:34:49] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 246 seconds)
[15:36:20] *** semz_ is now known as semz
[15:39:13] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[15:40:00] *** Joins: treflip (~user@user/treflip)
[15:40:49] *** Joins: razetime (~quassel@117.254.35.62)
[15:43:15] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:46:25] <hayley> https://www.tandfonline.com/doi/full/10.1080/15592324.2021.1977530
[15:46:26] -ixelp- Full article: Boquila trifoliolata mimics leaves of an artificial plastic host plant
[15:46:44] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[15:48:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:07:29] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:08:37] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:8141:5349:2781:19d2) (Ping timeout: 240 seconds)
[16:13:16] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[16:16:24] <selwyn> shka: its interesting how some regions are packed with new religious movements and others arent
[16:17:03] <selwyn> america/russia the most
[16:17:13] <selwyn> it must have something to do with having a frontier
[16:18:21] *** Joins: treflip (~user@user/treflip)
[16:19:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[16:20:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:26:07] <shka> selwyn: well, back when USA actually had the frontier, it was not nearly as religious 
[16:26:53] <selwyn> they had lots of religious movements back then no
[16:27:30] <shka> uh, mormons, unitarians, quackers...
[16:27:35] <shka> those come to mind
[16:28:54] <selwyn> yeah
[16:29:04] <selwyn> and now it is scientologists and cults
[16:29:45] <shka> yeah... i guess my thinking is tainted by how much political power religion amassed in USA
[16:30:19] <selwyn> hm
[16:33:28] *** Joins: Lycurgus (~juan@98.4.112.204)
[16:34:50] <selwyn> are they even that powerful anymore though
[16:35:50] <selwyn> evangelicals were humiliated by supporting trump
[16:36:10] <selwyn> he gave them nothing but disrespect, and now they have no leverage
[16:36:12] <Lycurgus> hardly
[16:37:02] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:8141:5349:2781:19d2)
[16:37:12] <Lycurgus> if he, like zuck, had referred to them as dumb fucks you could maybe say that
[16:37:32] <Lycurgus> however their bubble is fully intact
[16:37:34] <selwyn> lycurgus: he did express such views quite a lot actually
[16:37:55] <Lycurgus> about evangelicals?
[16:37:55] <selwyn> not in public though
[16:38:13] <selwyn> lycurgus: yes
[16:38:19] <Lycurgus> well yeah in private, I doubt he's a believer
[16:38:31] <selwyn> https://www.theatlantic.com/politics/archive/2020/09/trump-secretly-mocks-his-christian-supporters/616522/
[16:38:31] -ixelp- Trump Secretly Mocks His Christian Supporters - The Atlantic
[16:39:01] <selwyn> > Trump returning from his 2011 meeting with the pastors who laid hands on him and sneering, “Can you believe that bullshit?” 
[16:39:03] <selwyn> lol
[16:39:10] <Lycurgus> they're so far in they just discount that as fake news
[16:39:23] <selwyn> it reminds me of northern ireland politics actually
[16:39:49] <Lycurgus> evangelicals don't read the Atlantic, which is an arch liberal publication
[16:41:18] <Lycurgus> most of the world is religious in varying degrees, a rough 80%
[16:41:24] <selwyn> the protestant loyalists supported brexit and were possibly key in forcing it through
[16:41:32] <Lycurgus> the major exception is east asia
[16:41:37] <selwyn> yet they were thrown under the bus by the conservative party
[16:42:16] <Lycurgus> biden for example can't seem to make a speech without mentioning g_d
[16:42:23] <selwyn> and their main party will probably not survive
[16:43:09] <Lycurgus> well in NI religion is a surrogate for culture/ethnicity, it's not really about religion
[16:44:03] <Lycurgus> it's about being irish vs being british
[16:45:19] <selwyn> well, to an extent, yes, but it makes little difference
[16:45:35] <selwyn> the main loyalist party was set up by a protestant pastor
[16:45:35] <Lycurgus> from my perspective the differences between protestantism and cathoolicism or any other form of christianity are neglibile
[16:46:26] <selwyn> the fact that they managed to fuse intolerant protestantism and politics does not mean that religion is irrelevant, rather the opposite
[16:46:29] <Lycurgus> a ufo religion like heavens gate though is pretty far removed from Do's christian roots
[16:48:09] <Lycurgus> in fact from my perspective there isn't enough difference to make a difference between any system of asserted belief with a wholly specious basis
[16:48:33] <Lycurgus> that's just the reality of primitive human cultures
[16:48:36] <selwyn> lycurgus: don't say that in northern ireland lol
[16:49:34] <Lycurgus> it's also false that the US is more religious than in the past
[16:49:40] <hayley> Someone: "School uniforms are a good thing because they discourage individuality" beach: "Hold my coffee"
[16:49:48] <Lycurgus> in the past it was simply assumed, taken for granted
[16:50:17] <Lycurgus> the number of americans who declare as atheists is still in the single digits
[16:50:39] <Lycurgus> the low single digits
[16:50:55] <Lycurgus> versus a majority in china for example
[16:51:17] <selwyn> imo it is a mistake to talk about a single atheism
[16:52:33] <Lycurgus> eg.meansofproduction.biz/eg/index.php/Antireligion is my position
[16:53:51] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[16:54:52] <selwyn> there are at least 1) soviet humanist atheism 2) post industrial western atheism 3) ataturk-style 'islamic atheism'
[16:55:05] <selwyn> its not possible to shed the underlying culture
[16:55:20] *** Joins: treflip (~user@user/treflip)
[16:55:26] <Lycurgus> a mistake to think the matter of belief is thoroughly examine in the average person's mind, their class or culture notwithstanding
[16:55:26] <selwyn> i don't see how anyone can say that brezhnev and richard dawkins believe the same thing
[16:55:46] <Lycurgus> the vast majority of people live in a fog of concepts
[16:56:59] <Lycurgus> however the situation of people adhering to absurd systems of made up belief is so out of line with the current state of human development
[16:57:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 246 seconds)
[16:57:12] <Lycurgus> that it is in precipitous decline
[16:57:44] <Lycurgus> the situation in china will be the case globally in a few generations
[16:58:06] <Lycurgus> in the US every 5 years or so there's a marked decline now
[16:59:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:01:06] <Lycurgus> the chinese have a huge cultural advantage as belief in gods at the level of the intellectual classes pretty much went out in the classical period
[17:01:48] <Lycurgus> leaving a rump in folk deities, ancestor worship, and mysticism, e.g. taoism
[17:03:44] <Lycurgus> in the west, the more or less uniform atheism of the academe is fairly new and far from complete
[17:04:02] <Lycurgus> though it is substantially complete especially in some fields
[17:04:20] <Lycurgus> virtually any with high intellectual standards
[17:04:22] <selwyn> confession: i don't like atheism
[17:04:27] <selwyn> it is reddit and boring
[17:04:33] <Lycurgus> not a surprise
[17:05:11] <Lycurgus> this really is the most fundamental human issue, the core thing humans think about existence
[17:06:02] <Lycurgus> most people are uncomfortable dealing with fundamental existential issues
[17:06:34] <Lycurgus> since they intuitive sense they are on muddy ground in that respect
[17:06:44] <Lycurgus> *intuitively
[17:07:46] <Lycurgus> being in a scientific or engineering community only somewhat affects the situation since individuals there are sample from the general culture
[17:07:59] <Lycurgus> *sampled
[17:09:28] * hayley is fine with lack of religion being boring. Also sub to r/cliffclickmemes
[17:13:37] <Lycurgus> the secularism of Ataturk wasn't/isn't atheism
[17:15:03] <Lycurgus> there's a huge gap between rejecting specific religion and rejecting the religion belief in general
[17:15:36] <hayley> .oO( I don't need a bible, I have metamodular.com to look at for all my problems )
[17:15:37] <Lycurgus> s/the religion/religious/
[17:18:06] <Lycurgus> typically, in the west, if you are trying to have a fundamental world view consistent with science, you will be called 'scientistic'
[17:19:03] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:9dda:4bff:cdb5:90b8)
[17:19:11] <Lycurgus> also as I think I may have noted with the surview of beliefs of modern professional philosophers
[17:19:29] <Lycurgus> the situation of the masses not even having a clear idea of the concept of truth
[17:19:43] <Lycurgus> is also in evidence in the academe
[17:20:24] <selwyn> lycurgus: ataturk almost managed to totally crush the religious infrastructure, and the majority of his disciples today are at least closeted atheists
[17:20:49] *** Joins: X-Scale` (~ARM@231.197.28.37.rev.vodafone.pt)
[17:21:05] <Lycurgus> it must not have been very crushed if erdogan could bring it back
[17:21:32] <Lycurgus> can you imagine it being brought back in berlin or eastern de in general?
[17:22:07] *** Quits: X-Scale (~ARM@89.214.146.40) (Ping timeout: 256 seconds)
[17:22:07] *** X-Scale` is now known as X-Scale
[17:23:57] <selwyn> eh, erdogan did not manage to revive religion tbh
[17:24:07] <selwyn> he correctly laments that the people are not as religious as he wants
[17:24:30] <selwyn> as for east germany being different, this is another piece of evidence that different atheisms are different
[17:25:31] <Lycurgus> the differences you refer to are the degree of examination, convinction, etc
[17:25:47] <Lycurgus> at bottom either you are a believer or not
[17:26:20] <Lycurgus> tha fact that many/most people are wishy washy just reflects the general state of examination of their lives period
[17:26:55] <Lycurgus> and their inability to break with the kids that don't wanna hear there's no santa
[17:29:02] <Lycurgus> inability to face the reality of animal death, think critically in general, etc.
[17:30:19] <Lycurgus> the Conservative George Will is good case in point for me
[17:31:00] <Lycurgus> as a clear thinker he ultimately had to come the position where he described himself as 'a low voltage atheist'
[17:31:12] <Lycurgus> obviously I'm the other kind
[17:33:06] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[17:36:37] <Lycurgus> a couple of things could effectively wipe religion, relegate it to cultural heritage
[17:36:51] <Lycurgus> effectively unlimited lifetimes
[17:37:24] *** Quits: razetime (~quassel@117.254.35.62) (Read error: Connection reset by peer)
[17:37:27] <Lycurgus> or contact with actual advanced beings elsewher in the real universe
[17:38:34] <Lycurgus> but even without them i doubt we could be having this conversation in a hundred years from now
[17:42:24] <edgar-rft> Lycurgus: if you continue like this we still *will* have this monologue in a hundred years from now
[17:42:48] <Lycurgus> edgar-rft, how so?
[17:43:02] <Lycurgus> oh i see monologue
[17:46:06] <Lycurgus> but no, if I make 168, I will not be giving such (near) monologues, there won't be a need
[17:46:46] <Lycurgus> (one of the two mentioned conditions having been achieved)
[17:47:31] * Lycurgus fills a bowl
[17:47:44] <sham1> Why would (effective) immortality mean the end of religion?
[17:48:06] <sham1> I mean, the average human lifespan has increased n-fold, and people are still religious
[17:48:18] * Lycurgus will let others respond
[17:48:21] <sham1> Well, religious, spiritual or whatever
[17:48:44] <Lycurgus> but that's false
[17:48:54] <Lycurgus> average lifespan has increased
[17:49:03] <Lycurgus> but not total really
[17:49:16] <Lycurgus> people on average live to their 80s
[17:49:25] <sham1> I literally said "average lifespan"
[17:49:42] <sham1> Well, literally "average human lifespan" although that's implied
[17:49:47] <Lycurgus> and that has not been uncommon in any historical epoch although the average has varied
[17:53:09] <Lycurgus> another common misperception along those lines: most people that have ever lived are alive today or within the last century
[17:53:22] <Lycurgus> which isn't even close the case
[17:56:04] <Lycurgus> also average lifepan has not increased n-fold, if you count people that make it to adulthood
[17:56:42] <Lycurgus> it's increased 20-30% at most
[17:58:38] <Lycurgus> the average roman imperial citizen probably had a better or as good a chance of reaching 70 than a person born in the US in the 1920s
[18:08:15] *** Joins: razetime (~quassel@117.254.35.62)
[18:11:02] *** Quits: Brucio-61 (~Brucio-51@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 260 seconds)
[18:11:11] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 256 seconds)
[18:30:41] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:31:06] *** Joins: Brucio-61 (~Brucio-61@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[18:35:26] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[18:39:07] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[18:41:07] *** Quits: razetime (~quassel@117.254.35.62) (Remote host closed the connection)
[18:49:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[19:03:40] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[19:25:43] *** Joins: razetime (~quassel@117.254.35.62)
[19:50:08] *** Joins: rogersm (~rogersm@90.166.180.250)
[19:56:38] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Remote host closed the connection)
[20:02:03] *** Joins: lisp123 (~lisp123@143.238.171.43)
[20:03:30] *** Joins: Lycurgus (~juan@98.4.112.204)
[20:06:35] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[20:08:02] *** Quits: razetime (~quassel@117.254.35.62) (Remote host closed the connection)
[20:10:56] *** Joins: treflip (~user@user/treflip)
[20:12:48] *** Joins: rotateq (~user@p200300e787143500a6f16de1b1c2e823.dip0.t-ipconnect.de)
[20:14:39] *** Joins: razetime (~quassel@117.254.35.62)
[20:30:05] *** Quits: sepanko (~sepanko@user/sepanko) (Quit: You have been kicked for being idle)
[20:31:09] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:36:43] <gilberth> It just occurs to me that given CLOS, read table could have been implemented solely in terms of CLOS. Just have a (CHARACTER-SYNTAX readtable char) generic function and be set. It would return the syntax of a char like terminating macro, non-terminating macro, single escape, multiple-escape, white-space, constituent, or illegal. No need anymore for SET-MACRO-CHARACTER and friends.
[20:37:19] <gilberth> And BTW there is no sane way to ask a readtable for a character's syntax. All you could do is measure.
[20:39:33] <gilberth> The benefit would be that there could be mixins. You could make up a new readtable by mixing various flavours.
[20:40:10] <gilberth> But what I really want is to be able to hook into the token reader.
[20:41:36] <gilberth> And easy way to alter a readtable to accept my beloved 0...h syntax for hex. Or ignoring #\_ in numbers, so that I could have a separator.
[20:43:48] <rotateq> rewrite the #x readmacro for that :)
[20:43:58] <gilberth> The latter would perhaps rather need sth like *pprint-dispatch*. *parse-token-hooks* a list of functions to try to make sense of a token. But that should be inside a readtable, we don't need another random special variable which alters syntax.
[20:44:19] <gilberth> rotateq: Have you listened?
[20:44:41] <rotateq> no :D
[20:45:01] <gilberth> I want (+ 0FFh 1) => 256 ;How would the #x macro help here?
[20:45:14] <rotateq> doesn't
[20:45:29] <sham1> 0FFh. What is this, assembly
[20:45:36] <rotateq> ah something like i asked you last year maybe? if the reader can also read "back"
[20:45:36] <kakuhen> good morning
[20:45:45] <kakuhen> i just woke up to ffmpeg hanging 4.5 hours into COPYING a stream
[20:45:46] <rotateq> hey kakuhen 
[20:45:57] <gilberth> And moon-child and me want (- 1_000_000 9) => 999999
[20:46:13] <kakuhen> and in typical unix fashion, the binary is stripped so sample returns nothing useful besides "libavformat did an oopsie at 5am"
[20:46:26] <gilberth> sham1: Yes. Intel syntax.
[20:46:28] <sham1> I assume that you mean (- 1_000_000 1) => 999999
[20:46:45] <sham1> Because (- 1_000_000 9) is 999991
[20:46:47] <gilberth> Yes, coffee! More coffee!
[20:46:59] <sham1> But I do agree
[20:47:45] <gilberth> I mean to do this proper you need to reimplement the token reader. And that is difficult as you cannot ask whether a character is say a single escape.
[20:48:05] <selwyn> i dont get what _ does
[20:48:24] <gilberth> And if you want to cling into symbol syntax -- Good luck with setting char-code-limit minus a bit macro characters.
[20:48:27] <sham1> Suddenly your tokenisation process is context-sensitive and that's never fun
[20:48:34] <sham1> selwyn: at least in this it'd just be a digit separator 
[20:48:44] <gilberth> selwyn: I want that _ in numbers is ignored.
[20:48:57] <selwyn> ok
[20:49:17] <gilberth> So I could group my numbers. 1_000_000 is a potential number by the CL spec.
[20:50:41] <selwyn> don't you want 1,000,000
[20:50:44] <selwyn> like a proper european
[20:50:51] <gilberth> However if I would have a hook to be invoked between the reader filling a buffer and dealing with single and multiple escapes and then trying to make sense of it would be great. Macro characters are not the right device here.
[20:50:54] <selwyn> oh wait
[20:51:03] <sham1> Those are decimal commas
[20:51:19] <gilberth> selwyn: 1,000,000 is not a potential number in CL. That would be incompatible.
[20:52:06] <gilberth> sham1: I hate it when "," is used as a decimal "dot" or comma. Never liked it.
[20:53:04] <gilberth> Actually I would prefer 1,000,000 but that is not compatible.
[20:53:27] <sham1> Yeah. I always write decimals with a "." due to early exposure to programming, even though the correct separator here is the comma
[20:53:43] <sham1> The advantage of the underscore is that it looks less weird with other radices
[20:53:50] <gilberth> And I really like it when numbers are printed that way. I hacked my /bin/ls to do that. For decades.
[20:55:49] <rotateq> without calling FORMAT? ^^
[20:56:08] <gilberth> sham1: 64-bit numbers could be quite long in hex. I would prefer to group them by four digits. Like 0000_3020_019A_EBCD say.
[20:56:48] <gilberth> even w/o calling FORMAT. If 1_000_000 is accepted by the reader there would be no harm it printing it that way.
[20:57:08] <gilberth> * in printing
[20:58:48] <gilberth> If you rely on PRIN1 for generating some data to be read by anyone or anything without your current printer and reader settings like when producing some file, you are in trouble anyway.
[21:01:10] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[21:01:25] <gilberth> The problem is a bit with unicode. In ASCII days just installing what 96, less perhaps, macro character to catch tokens was feasible. It's not with Unicode.
[21:02:04] <pjb> gilberth: it would be feasible if the readtable was implemented "correctly" for unicode.
[21:02:27] <gilberth> Even then, the reader macro would read a token, look at it and then invoke perhaps READ-FROM-STRING again on it, if it hasn't seen what it wants. Or forge a concatenated stream.
[21:03:12] <pjb> Granted, for something like 1_000, my idea of a token parser hook would work better indeed.
[21:03:24] <pjb> I should really write down a CDR for it...
[21:03:32] <gilberth> pjb: I would still need to say (loop for code below char-code-limit do (set-macro-character (code-char code) #'my-evil-fun)). But yes, read tables could use trees on intervals.
[21:04:30] <gilberth> pjb: Yes, a hook is what I want. But it should get the traits information too for each character as there is no portable way to get at those traits.
[21:05:22] <gilberth> And the hook should be part of the readtable, so that named readtables continues to work. We don't need another reader control variable.
[21:06:08] <gilberth> As this also would break assumptions. You could assume that when you set all standard reader variables to the defaults, you get standard syntax.
[21:07:45] <gilberth> [And I don't want 0FFh in general. Only now as I play with the 8080.]
[21:08:04] <gilberth> But it is a good example, I guess.
[21:09:09] <pjb> Indeed. Have a look at: https://github.com/informatimago/lisp/blob/master/common-lisp/lisp-reader/reader.lisp#L103
[21:09:10] -ixelp- lisp/reader.lisp at master · informatimago/lisp · GitHub
[21:09:27] <pjb> This is why we need a CDR specification to be integrated in implementations.
[21:10:15] <pjb> Or you could use my library, but it's difficult to hook in existing implementations (if you don't what to use set-macro-character on all the characters, etc). So you get to implement, load, then compile, then etc, the whole CL…
[21:12:15] <kakuhen> i just learned mac os suppresses core dumps by default, even if you sigquit
[21:12:26] <kakuhen> i hate this
[21:12:53] *** Quits: treflip (~user@user/treflip) (Quit: Quit)
[21:12:54] <sham1> User unfriendliness
[21:13:12] <kakuhen> signal manpage says the "create core image" is default action, but turns out that is not true unless you enable core dumps in your terminal
[21:13:31] <gilberth> pjb: I rolled my own READ-TOKEN which just reads a token according to the standard syntax wrt to escapes, if what I see is not what I want I pass it to read-from-string.
[21:14:02] <gilberth> However, for hooks the question arises if we even would allow for a hook to be run, if there are escapes.
[21:14:41] *** Joins: treflip (~user@user/treflip)
[21:15:34] <gilberth> If we don't a mere string for a token would be suffice.
[21:16:11] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:19] <gilberth> And I would be surprised if |FOO| would ever read as sth different from a symbol. But then somebody may come along and wants to alter that.
[21:19:38] <pjb> You may want to change the escape characters.
[21:20:11] <gilberth> I can do that with SET-SYNTAX-FROM-CHAR.
[21:21:13] <gilberth> My trouble is: How to pass the escaped/not-escaped information? and (2) would the token hook see the case folded thing?
[21:22:00] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:8141:5349:2781:19d2) (Remote host closed the connection)
[21:22:46] <pjb> https://github.com/informatimago/lisp/blob/master/common-lisp/lisp-reader/reader.lisp#L588
[21:22:46] -ixelp- lisp/reader.lisp at master · informatimago/lisp · GitHub
[21:23:21] <pjb> with https://github.com/informatimago/lisp/blob/master/common-lisp/lisp-reader/reader.lisp#L248
[21:23:21] -ixelp- lisp/reader.lisp at master · informatimago/lisp · GitHub
[21:23:37] <pjb> But as I said, a CDR with a more "public" API should be written down.
[21:24:24] <gilberth> I want something where asking "Is there anything escaped." is quick.
[21:27:02] <gilberth> But yes, otherwise there could be just a protocol. That way it should be easy to write implementations for existing readers.
[21:27:42] <gilberth> We could even say that the buffer and the traits object have dynamic extent.
[21:28:56] <gilberth> pjb: Do we want a single hook function, or a list of hooks?
[21:33:41] <gilberth> How about: The hook is passed a traits object. There is a (TOKEN-CHAR-TRAIT trait index) protocol function. Or even more abstract (TOKEN-CHAR-ESCAPED-P trait index)
[21:35:42] <gilberth> And IIRC you can't say (set-syntax-from-char #\, #\.) and have 3,1459 read as almost pi. Those traits are not part of the token reader only part of the parser later on. So I would only be concerned about escapiness.
[21:39:13] <pjb> gilberth: (find-if (lambda (cs) (or (eql cs +cs-single-escape+) (eql cs +cs-multiple-escape+))) (token-traits token))
[21:39:36] <gilberth> Nope. That is silly.
[21:40:01] <pjb> Oops, yes. 
[21:40:07] <pjb> I always confuse cs with ct.
[21:40:16] <gilberth> You really want to cons token traits for each character? You really want to define a concrete data type?
[21:41:02] <gilberth> A TOKEN-CHAR-TRAIT protocol function would be suffice. It could then use what ever the existing reader has.
[21:41:35] <pjb> escaping is performed early, it's not retained in the token.  It depends on the difference between the character syntax stored (virtually) in the readtable, and the processing of the character in the token.
[21:41:38] <gilberth> And when there are no escapes, I bet some readers have some fast path or sth not considering traits at all. At least this is what I would do.
[21:42:59] <gilberth> As in: If I were to implement a reader I would work on the stream buffer to hash symbols and parse numbers. No need to copy anything if there are no escapes. And in 99% of the cases there are no escapes at all.
[21:43:45] <gilberth> Which gets me to the other other thing I want: Stream buffer access. Like CMUCL has it internally. For some speed.
[21:45:04] <gilberth> However if the interface is to pass a string and some abstract traits object, a clever reader implementation could pass a displaced array to the stream buffer, if it cares for any speed.
[21:49:00] <gilberth> I'll dig into some CL implementations on what their internal interface is.
[21:50:33] <gilberth> Case folding is an issue, the hook could do it itself, if it wishes. Someone may actually want that, others will hate that. I don't know.
[21:51:27] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[21:55:19] *** Quits: razetime (~quassel@117.254.35.62) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:13:05] *** Joins: Oddity (~Oddity@user/oddity)
[22:25:32] *** Joins: treflip (~user@user/treflip)
[22:31:24] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[22:31:26] *** Joins: Aeres (~Aeres@user/aeres)
[22:32:26] *** Joins: treflip (~user@user/treflip)
[22:51:32] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 250 seconds)
[22:58:29] *** Quits: Aeres (~Aeres@user/aeres) (Ping timeout: 252 seconds)
[23:00:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[23:14:27] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[23:15:33] *** Joins: lisp123 (~lisp123@143.238.171.43)
[23:17:21] *** Joins: Lycurgus (~juan@98.4.112.204)
[23:20:48] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[23:26:45] <gilberth> Ok. Doing is portably doesn't work. Because when you also want to see escaped tokens, you must make the escape characters macro characters, and once they are macro characters they are no escaped characters anymore. This breaks the #\ reader as it also reads a token. The spec for #*, #b, #o, #x, and #r also mentions tokens.
[23:27:38] <qhong> Why no existing Lisps seem to support arbitrary ordinal numbers?
[23:27:39] <gilberth> For the radix reader macros, I wish that they would have been specified as binding *read-base* and then reading following object, then there wouldn't be a problem.
[23:28:01] <qhong> CL and scheme claim to have numeric tower, but doesn't even have the smallest limit ordinal \omega. Curious
[23:29:30] <gilberth> I have no idea what that is. Is arithmetic defined for those? CL also has no vectors or matrices.
[23:30:30] <gilberth> For #\ and #* I see a problem for a token hook. I mean, the hook would not be aware that a character name or a bit string is to be read. My assumption was that a token would turn into a Lisp object.
[23:31:05] <qhong> gilberth: yes. https://en.m.wikipedia.org/wiki/Surreal_number
[23:31:32] <gilberth> Hence we need to alter the spec for the mentioned read macros.
[23:34:30] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:34:55] <gilberth> qhong: I never came across those. For what computations are they useful? Perhaps they are not in CL because nobody needs them.
[23:36:00] <gilberth> Anyhow, I can provide a prototype w/o support for escape characters. Something I don't like to begin with it only makes matters too complicated.
