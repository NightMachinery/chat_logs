[00:07:50] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[00:08:32] *** Quits: re101-eagle-47 (~re101-eag@198.190.156.225) (Quit: Client closed)
[00:08:45] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[00:18:37] *** Quits: capn (~capn@user/capn) (Remote host closed the connection)
[00:18:57] *** Joins: capn (~capn@user/capn)
[00:27:04] *** Joins: re101-numbat-25 (~re101-num@h69-21-4-159.mdtnwi.broadband.dynamic.tds.net)
[00:28:58] <re101-numbat-25> Hi, I'm have this ^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\/<>?:;|=.,)]{1,20}$ that exclude several characters from a string. I'm trying to also exclude double spaces. I'm struggling to find how to incorporate that into the regex. Can you help?
[00:30:46] <re101-numbat-25> https://regex101.com/r/ieAgf8/1
[00:32:15] <rewt> re101-numbat-25: https://regex101.com/r/ieAgf8/2
[00:33:03] <re101-numbat-25> wow ... thank you! I tried incorporating that string, but was putting it at the end ... and running into problems. Thank you so much!
[00:35:22] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-58a7-82ec-a93a-185c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[00:35:33] <rewt> np
[00:35:40] *** Quits: re101-numbat-25 (~re101-num@h69-21-4-159.mdtnwi.broadband.dynamic.tds.net) (Quit: Client closed)
[00:47:35] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[00:50:06] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[00:55:17] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 240 seconds)
[00:56:05] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[00:57:55] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:58:00] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:58:24] *** Joins: lavaball (~Melissa@31.204.155.215)
[00:59:20] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net)
[01:00:15] *** Quits: luva (~luva@45.141.152.53) (Ping timeout: 256 seconds)
[01:01:35] *** Joins: luva (~luva@37.120.197.54)
[01:05:35] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 256 seconds)
[01:05:51] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Quit: Bye)
[01:09:06] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[01:15:28] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[01:19:52] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[01:22:22] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[01:28:20] *** Joins: d1cor (~diego@179.63.242.122)
[01:29:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:29:47] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[01:30:16] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:32] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[01:34:49] *** Quits: luva (~luva@37.120.197.54) (Ping timeout: 256 seconds)
[01:35:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:35:33] *** Joins: luva (~luva@45.141.152.54)
[01:40:34] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[01:43:18] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[01:45:50] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net) (Ping timeout: 250 seconds)
[01:47:44] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[01:49:08] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[01:49:41] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[01:52:17] <AhmedAmerican> what am missing here ? https://regex101.com/r/ED662d/1
[01:54:24] <OnlineCop> The '.' character doesn't support newlines. Do you want it to match line 2?
[01:55:03] <OnlineCop> The `*` quantifier tries to match as MUCH as possible; many times, `*?` is what you want instead, since that will try to match as LITTLE as possible.
[01:55:46] <OnlineCop> AhmedAmerican: Could you elaborate on what is going wrong?
[01:56:51] <OnlineCop> I see that you have a `(?:...)` group. If you want to make that optional so it can match any of the lines, add `?` after it.
[01:57:06] <OnlineCop> https://regex101.com/r/ED662d/2
[01:57:23] *** Joins: src (~src@user/src)
[01:58:33] <AhmedAmerican> OnlineCop: thank you. am trying to match the numbers which after `Vol` , `No` < can be optional and between `()`
[01:58:56] <OnlineCop> Do versions /2 or /3 work for what you're doing?
[01:59:19] <AhmedAmerican> thank you. version 3 works
[02:11:37] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 240 seconds)
[02:13:09] *** Joins: luva (~luva@146.70.62.252)
[02:27:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:41:32] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: toadtoad)
[02:42:01] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[02:42:39] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net)
[02:44:09] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[02:46:47] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 256 seconds)
[02:49:08] *** Joins: epony (epony@user/epony)
[02:50:17] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[02:54:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net) (Ping timeout: 240 seconds)
[02:54:55] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[02:56:27] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[02:59:47] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[03:01:02] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[03:05:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:07:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:09:34] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[03:10:49] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[03:14:09] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[03:15:30] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[03:20:41] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[03:21:51] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[03:26:18] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[03:40:17] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 240 seconds)
[03:44:18] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Read error: Connection reset by peer)
[03:44:42] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[03:45:16] <varrg> Is it sane to attempt this: https://regex101.com/r/mlzuWc/1
[03:45:38] <varrg> specifically, match the same subpattern multiple times, in a conditional pattern?
[03:46:48] <varrg> I am trying to get values from syntax as this (cli wise): [mode[:arg,..] [class=]method[:arg,...][|method[:arg,...]|...
[03:46:59] <varrg> or should I break it down to multiple regexes?
[03:47:24] <OnlineCop> I would worry about it taking a long time due to backtracking.
[03:47:39] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 256 seconds)
[03:47:47] <OnlineCop> I literally copied your text `[mode[:arg,..] [class=]method[:arg,...][|method[:arg,...]|...` into it, and it dies during backtracking.
[03:47:51] <varrg> is that implicit backtracking because I'm not using it
[03:48:22] <varrg> well, that syntax is not regex, [] means optional, and ... repeat * times
[03:48:57] <varrg> the sample text in the paste is the "fullest" text, except that each arg can repeat more times
[03:48:58] <OnlineCop> I know. But when it encountered some unknown text, that won't simply "fail early, fail fast"... it will keep parsing till the system screams and dies.
[03:49:10] <varrg> indeed
[03:50:01] <varrg> what do you recommend?
[03:50:04] <OnlineCop> For the key-value pairs, can the values allow a single non-whitespace "value" followed by a comma, and then more non-whitespace values?
[03:50:38] <varrg> which one are you referring to?
[03:50:55] <OnlineCop> `[:arg,..]`
[03:51:04] <OnlineCop> That is, some key=val1,val2,val3 ?
[03:51:27] <varrg> yes
[03:51:50] <varrg> oh no
[03:52:07] <OnlineCop> Are you doing this in .NET? Otherwise your repeated capture groups can "clobber" whatever value it had matched/captured on the previous `*` iteration.
[03:53:09] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[03:53:09] <varrg> "append:arg1,arg2" is one part, except for number of arg, if it exists it is followed by 1 space, otherwise it is the start of the text. Then "myclass=" is second part, it exists or not, if it does it ends with =
[03:53:28] <varrg> then the last part: foo:arg1,...|bar:arg1,... is the third part
[03:53:37] <varrg> it is the only required one, so "foo" is valid
[03:53:41] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[03:53:55] <OnlineCop> Which one is the only required one?
[03:53:58] <varrg> but it can repeat multiple times or once. separated by |
[03:54:21] <varrg> "foo" in the sample text
[03:55:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:55:13] <OnlineCop> For most PCRE flavors, I use a non-capturing group to repeat stuff, and that's wrapped in an outer capturing group: `(...(?:stuff)*...)`
[03:55:50] <varrg> okay, so I would receive arg,arg,arg,arg instead of each in its own match?
[03:55:59] <varrg> that's fine and trivial to later split
[03:56:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:56:48] <OnlineCop> Right. Because otherwise, `append:arg1,arg2,arg3` would capture 'arg1' into Group 2, then when the loop repeats, 'arg2' overwrites Group 2, and then 'arg3' overwrites Group 2 again.
[03:56:49] <varrg> I don't want to match "foo" and "bar" separated by |, in one match though. I'd like a separate match for each separated by |
[03:57:46] <varrg> okay. just to be clear; the paste seem to work (not fully tested though), right? It does catch each. I dunno how I would identify the results later tthough ;p
[03:58:53] <OnlineCop> Is | a delimiter?
[03:59:54] <varrg> yes, in my domain, not regex
[04:01:36] <OnlineCop> Okay, so within the context of 'myclass', you have `foo:arg3,arg4` as its key-value pair, and `bar:arg1,arg2` as its second key-value pair?  Do I understand that correctly?
[04:01:59] <varrg> https://regex101.com/r/ZXhzrQ/1
[04:02:02] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Remote host closed the connection)
[04:02:17] <varrg> yes, but "myclass" is optional
[04:02:26] <varrg> so: "foo:arg1|bar:arg2" is valid as well
[04:02:38] <OnlineCop> Okay, gotcha.
[04:04:12] <varrg> basically: optional_mode:optional_arg,... SPACE optional_classname= required_method:optional_arg,...|optional_second_method...
[04:04:24] <varrg> so the least valid text is "foo"
[04:04:52] <varrg> and most valid is the sample text of the paste (except that every "arg" can repeat more times
[04:05:41] <varrg> also, syntax is in my full control, so if there's some delimiter or other structure that I could benefit from changing, it is possible
[04:05:55] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[04:07:23] <OnlineCop> I don't believe there's a way to capture the optional_methods independently, but you could always do that in a 2nd stage.
[04:07:25] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:25] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:44] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[04:08:47] <OnlineCop> https://regex101.com/r/mlzuWc/2
[04:08:57] <OnlineCop> Not sure if I got all those in there correctly, though.
[04:08:58] <varrg> again, "not possible", I think the paste, although not fully tested, shows that it is possible. Do you mean something else by not possible?
[04:09:10] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:09:57] <OnlineCop> The "not possible" is mainly referring to keeping each capture group without a new value for some same group, clobbering the values for that same group when the `*` quantifier repeats.
[04:10:11] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:10:11] *** ChanServ sets mode: +v perlbot
[04:11:11] <varrg> okay. I am also fine with breaking the application if the text doesn't follow syntax
[04:11:21] <OnlineCop> You can accomplish it if you know ahead of time how many variables you could expect. For example: `(capture1)(, capture2)?(, capture3)?(, capture4)?(,capture5)?` because then capture2-capture5 have unique "group numbers" so they won't clobber anything when they repeat.
[04:11:44] <varrg> that's not possible though
[04:12:02] <OnlineCop> Now, .NET will support capture groups in a different way: each one is added to a stack of Group 2's, so you don't actually clobber an old value for the same group.
[04:12:22] <OnlineCop> But PCRE just needs to take these groups as a "whole" and then parse them via a second regex/process.
[04:13:12] <varrg> yeah, using php. I looked for a way to group matches, but it doesn't have it
[04:13:17] <varrg> what does ?> do?
[04:13:37] <OnlineCop> Looks like my version /2 chokes when I add a `|baz:arg3,arg4` to the end, so I've got some groups in the wrong location.
[04:14:09] <OnlineCop> `(?:....)` is a non-capturing group; `(?>...)` is an atomic non-capturing group that forbids backtracking INTO it.
[04:14:37] <varrg> okay
[04:14:40] <OnlineCop> So once it's made its match, if something fails down the road and it backtracks over the group, it won't try one of its next alternations.
[04:15:34] <varrg> okay. do you recommended first splitting by SPACE,=,|
[04:15:53] <varrg> as these are unique to its own "part" of the text
[04:16:17] <OnlineCop> https://regex101.com/r/mlzuWc/3 seems to be working for the added |opt_method:opt_arg
[04:16:27] <varrg> SPACE will get mode:mode_args,..., = will get classname and methods, | will get each method
[04:16:40] <OnlineCop> Yes, split by space to get the major groups out.
[04:17:34] <OnlineCop> Next split on '=' to see whether "class" exists.
[04:18:00] <OnlineCop> Then split on '|' to break apart the optional methods.
[04:18:07] <varrg> I can then reuse the same ":args,.." regex to get arguments for each part
[04:18:20] <OnlineCop> And finally on ',' to break the optional methods into individual args for each of the methods.
[04:19:15] <OnlineCop> Yeah; after your initial split-by-space, your [0] will be your method, and everything else will be the optional class+methods.
[04:19:15] <varrg> is it possible to get this in one go, by using split instead of match?
[04:20:22] <varrg> maybe "split" is a php-made up concept..
[04:21:00] <OnlineCop> I think most languages support split(), but that's not a regex concept.
[04:21:10] <OnlineCop> Although split() usually uses regex in its pattern matching.
[04:21:40] <varrg> okay, so 3 regex to break it apart, then a common regex to get args
[04:21:59] <varrg> is it not possible to match a repeated pattern without duplicating it?
[04:22:06] <OnlineCop> text.split(" ") would give you three results on line 2 of https://regex101.com/r/mlzuWc/4.
[04:22:27] <OnlineCop> You can (DEFINE) a pattern and then reuse that same pattern over and over.
[04:22:39] <varrg> (:(([^\s,]+),?)*)?
[04:25:04] <OnlineCop> Quick question: Can a method contain "|" ?
[04:25:19] <OnlineCop> I'd expect it can't, but wanted to be sure while I'm constructing a (DEFINE) here...
[04:26:09] <varrg> no. and methods apply directly to a php class method, so it has more restrains
[04:26:32] <varrg> ^[a-zA-Z_\x80-\xff][a-zA-Z0-9_\x80-\xff]*$. according to php
[04:29:17] <OnlineCop> Still working on it. Sorry for the delay.
[04:32:11] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:11] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:17] *** Quits: davido (~daobrien@159.196.168.116) (Ping timeout: 240 seconds)
[04:35:43] *** Joins: re101-human-45 (~re101-hum@2607:fea8:4240:8a20:183c:723e:986d:72ec)
[04:36:26] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:36:59] <re101-human-45> https://regex101.com/r/dy8vT5/1 , trying this in Java but not receiving a match although I am getting one here.
[04:37:27] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:37:27] *** ChanServ sets mode: +v perlbot
[04:37:31] <OnlineCop> @varrg: Okay, my brain is failing on doing a multi-stage .split() in a single go. :-/
[04:38:25] <OnlineCop> re101-human-45: Use 'code generator' on the left. It looks like some of your  \   are being escaped.
[04:38:36] <OnlineCop> At least, when you see it within "double quotes".
[04:38:55] <OnlineCop> So, copy the text within the Code Generator's "quoted string" and that may work properly for you.
[04:39:08] <varrg> yeah, I'm amazed I even came up with a working pattern at all. Regex messes me up but once it works it's worth it. I don't know much about performance in regex though.
[04:39:48] <varrg> OnlineCop, what is \#.*(*SKIP)(*F)|? 
[04:40:12] <re101-human-45> OnlineCop my java code matches that exactly, not sure why it's not working
[04:40:57] <OnlineCop> re101-human-45: Do you have all the same Pattern.compile(regex, Pattern.MULTILINE); flags that you've got defined on the regex101 site?
[04:41:32] <OnlineCop> varrg: That's just a quick way to exclude any lines in the text that have '#' on it.
[04:42:05] <varrg> okay
[04:42:07] <OnlineCop> For example, if you throw a '#' on the beginning of the line, it will stop parsing the rest of that line 
[04:44:03] <OnlineCop> varrg: Yeah; it'd probably be best to chain your .split()s. PHP has a preg_replace_callback() which can let you chain one substitution onto the tail of another one.
[04:44:38] <re101-human-45> OnlineCop Ok, so I have figuired out the problem, it seems that I was using m.matches(). Using m.find() seems to be working now, do you happen to know the difference?
[04:45:25] <OnlineCop> re101-human-45: `.matches()` anchors your text with ^ and $ implicitly, but `.find()` is anywhere within the middle of a string.
[04:45:56] <re101-human-45> OnlineCop Makes sense, that match was occurring in the middle of the string. Thanks for the help!
[04:46:03] <OnlineCop> My pleasure.
[04:46:22] *** Quits: re101-human-45 (~re101-hum@2607:fea8:4240:8a20:183c:723e:986d:72ec) (Quit: Client closed)
[04:47:05] <varrg> OnlineCop, okay, I will break it up in split statements. Off to bed now though, so it's a thing for tomorrow. Thanks for your assistance, got me on the right track!
[04:47:12] <OnlineCop> o/
[04:47:23] <OnlineCop> I'll keep taking a look at https://regex101.com/r/mlzuWc/latest
[04:47:37] <OnlineCop> So if you revisit it tomorrow or sometime, it may have more updates on it.
[04:49:34] <varrg> cool. I'll bookmark the link. I should be on sometime during the weekend. Thanks! Night
[04:49:37] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[04:58:46] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net)
[05:03:26] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-38a6-2969-935f-fcc3.fixed6.kpn.net) (Ping timeout: 250 seconds)
[05:03:35] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 256 seconds)
[05:04:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:04:55] *** Joins: luva (~luva@146.70.62.252)
[05:08:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:29:59] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:32:53] *** Joins: vlm (~vlm@user/vlm)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:58:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:12:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:29:42] *** Joins: re101-wrasse-35 (~re101-wra@static-173-50-103-21.nrflva.fios.verizon.net)
[06:30:10] *** Parts: re101-wrasse-35 (~re101-wra@static-173-50-103-21.nrflva.fios.verizon.net) ()
[06:30:50] *** Joins: Kwaku (~Kwaku@static-173-50-103-21.nrflva.fios.verizon.net)
[06:36:20] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[06:36:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:47:04] *** Joins: luva8 (~luva@146.70.62.244)
[06:47:26] *** Quits: luva8 (~luva@146.70.62.244) (Client Quit)
[06:50:27] *** Quits: luva (~luva@146.70.62.252) (Ping timeout: 256 seconds)
[06:50:31] *** Quits: Hobadee (~Hobadee@108-202-76-88.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[06:50:51] *** Joins: Hobadee (~Hobadee@108-202-76-88.lightspeed.sntcca.sbcglobal.net)
[06:53:48] *** Quits: Kwaku (~Kwaku@static-173-50-103-21.nrflva.fios.verizon.net) (Quit: Client closed)
[06:54:01] *** Joins: luva8 (~luva@146.70.62.254)
[06:54:30] *** luva8 is now known as luva
[06:59:13] *** Joins: adeliktas3 (~adeliktas@i59F5FC83.versanet.de)
[07:00:17] *** Quits: adeliktas (~adeliktas@i59F52850.versanet.de) (Ping timeout: 240 seconds)
[07:00:17] *** adeliktas3 is now known as adeliktas
[07:07:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:10:29] *** Joins: loofy (~loofy@ip70-191-113-247.cl.ri.cox.net)
[07:28:51] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[07:49:42] *** Joins: davido (~daobrien@159.196.171.246)
[08:51:21] *** Joins: p-i- (~Ohmu@2403:6200:8978:7ad7:d1c7:ded6:188d:580e)
[10:13:32] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:13:51] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[10:35:25] *** Quits: davido (~daobrien@159.196.171.246) (Ping timeout: 256 seconds)
[10:37:28] *** Joins: callq (~callq@2409:4062:2e9e:2081:816d:3026:9fb1:625b)
[10:37:35] *** Joins: davido (~daobrien@159.196.171.246)
[10:52:19] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b941-f729-2473-fda1.fixed6.kpn.net)
[10:58:46] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-b941-f729-2473-fda1.fixed6.kpn.net) (Ping timeout: 250 seconds)
[11:05:27] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:34:49] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:41:23] *** Quits: davido (~daobrien@159.196.171.246) (Ping timeout: 256 seconds)
[11:45:11] *** Joins: davido (~daobrien@159.196.171.246)
[11:45:55] *** Joins: palasso (~palasso@user/palasso)
[12:05:42] *** Joins: lavaball (felix@31.204.155.215)
[12:06:57] *** Quits: callq (~callq@2409:4062:2e9e:2081:816d:3026:9fb1:625b) (Ping timeout: 240 seconds)
[12:14:37] *** Joins: DX66 (~DX@bb115-66-13-123.singnet.com.sg)
[12:16:53] <DX66> Hi all, requiring some help here:
[12:16:54] <DX66> https://regex101.com/r/LlAIO7/1
[12:16:54] <DX66> Im trying to match the above regex (with the sample test strings below)
[12:16:55] <DX66> However, for the case where I have 3 strings, e.g. while w1, w2, w3
[12:16:55] <DX66> I cannot get the group in the middle e.g. w2, only w1 and w3. What am I doing wrong?
[12:16:56] *** rebot sets mode: +q DX66!*@*
[12:16:57] <rebot> 14DX66: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[12:17:26] *** rebot sets mode: -q DX66!*@*
[12:34:01] *** Joins: re101-gerbil-64 (~re101-ger@50.200.202.150)
[12:34:18] <re101-gerbil-64> Hello
[12:35:02] *** Joins: re101-stoat-95 (~re101-sto@139.194.38.8)
[12:35:21] *** Quits: re101-stoat-95 (~re101-sto@139.194.38.8) (Client Quit)
[12:35:58] <re101-gerbil-64> How are you all
[12:38:33] *** Quits: re101-gerbil-64 (~re101-ger@50.200.202.150) (Client Quit)
[12:40:34] *** Quits: DX66 (~DX@bb115-66-13-123.singnet.com.sg) (Quit: Ping timeout (120 seconds))
[12:49:52] *** Joins: DX9 (~DX@bb115-66-13-123.singnet.com.sg)
[12:49:53] *** Quits: DX9 (~DX@bb115-66-13-123.singnet.com.sg) (Client Quit)
[12:53:07] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[13:16:38] *** Joins: ecalogero (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com)
[13:16:58] *** Joins: ecalogero52 (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com)
[13:21:13] *** Quits: ecalogero (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com) (Ping timeout: 256 seconds)
[13:22:01] *** Quits: ecalogero52 (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com) (Ping timeout: 256 seconds)
[13:24:48] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:34:21] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[13:34:49] *** Joins: ecalogero (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com)
[13:39:02] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[13:40:18] *** Joins: rvalue (~rvalue@user/rvalue)
[13:40:55] *** Quits: ecalogero (~ecalogero@host31-53-245-117.range31-53.btcentralplus.com) (Quit: Connection closed)
[13:41:31] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:24:24] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:47:32] *** Quits: p-i- (~Ohmu@2403:6200:8978:7ad7:d1c7:ded6:188d:580e) (Quit: Leaving...)
[14:47:44] *** Joins: dandyn (~dandyn@user/dandyn)
[15:11:27] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[15:13:48] *** Joins: lavaball (felix@31.204.155.215)
[15:58:07] *** Joins: re101-guppy-7 (~re101-gup@2001:a61:34f2:d01:50ec:c30e:ca4d:397c)
[16:11:40] *** Joins: re101-poodle-8 (~re101-poo@2405:201:1002:2c21:bed1:4090:c756:ed2a)
[16:11:48] <re101-poodle-8> hi
[16:13:17] <re101-poodle-8> How do I parse string rules with nested conditions as in this string {1069} AND ({1070} OR {1071} OR {1072}) AND {1244} AND ({1245} OR {1339})
[16:14:59] <purplex> doesn't look like a regex, start with parenthesis first
[16:15:52] <re101-poodle-8> Its a test string and I want to know I do I get conditions within () using regex
[16:16:40] <purplex> do ANDs and then ORs
[16:17:21] <purplex> so its a test string
[16:18:25] <re101-poodle-8> yeah I need to parse it and convert into an object like
[16:18:25] <re101-poodle-8>  {
[16:18:26] <re101-poodle-8>  and: [1069, { or: [1070, 1071, 1072] }, 1244, { or: [1245, 1339] }],
[16:18:26] <re101-poodle-8> }
[16:18:27] *** rebot sets mode: +q re101-poodle-8!*@*
[16:18:28] <rebot> 14re101-poodle-8: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[16:18:57] *** rebot sets mode: -q re101-poodle-8!*@*
[16:27:48] <purplex> seems like a bit complicated, I think you'll need another regex to extract values https://regex101.com/r/hf7SMU/1 not sure about the best solution
[16:36:23] *** Joins: d1cor (~diego@179.63.242.122)
[17:01:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:48:22] *** Joins: callq (~callq@92.119.19.230)
[18:04:44] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 250 seconds)
[18:10:34] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:17:33] *** Quits: re101-guppy-7 (~re101-gup@2001:a61:34f2:d01:50ec:c30e:ca4d:397c) (Quit: Client closed)
[18:20:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[18:27:27] *** Quits: luva (~luva@146.70.62.254) (Ping timeout: 256 seconds)
[18:28:49] *** Joins: luva (~luva@45.141.152.53)
[18:59:37] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 240 seconds)
[19:17:52] *** Quits: loofy (~loofy@ip70-191-113-247.cl.ri.cox.net) (Changing host)
[19:17:52] *** Joins: loofy (~loofy@user/loofy)
[19:21:31] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:32:31] <rawtaz> re101-poodle-8: thats really a use case for a proper parser rather than regex
[19:33:27] <rawtaz> at least if one's definition of doing it using regex is that it should be done with one regex, which is what i'd prefer :)
[19:33:53] <rawtaz> if it cant be done with one regex but requires multiple steps, thats a pretty strong signal it should possibly be done in other ways
[19:46:25] *** Joins: z_lehinsun__ (~lehinsun@188.113.178.220)
[19:46:33] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Remote host closed the connection)
[20:59:44] *** Quits: re101-poodle-8 (~re101-poo@2405:201:1002:2c21:bed1:4090:c756:ed2a) (Quit: Client closed)
[21:00:14] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[21:12:27] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[21:43:42] *** Quits: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Quit: macbook)
[22:08:36] *** Joins: macbook (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net)
[22:11:57] *** macbook is now known as toadtoad
[22:13:17] *** Quits: toadtoad (~macbook@cpc101496-gill19-2-0-cust142.20-1.cable.virginm.net) (Client Quit)
[22:35:46] *** Joins: maroon (tinycrypt@user/maroon)
[22:35:46] *** ChanServ sets mode: +v maroon
[22:36:28] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:07:57] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 256 seconds)
[23:21:05] *** Joins: travisghansen (~travisgha@192.74.130.86)
[23:24:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:47:46] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
