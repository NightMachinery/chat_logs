[00:02:22] *** Joins: djinni` (~djinni@static.38.6.217.95.clients.your-server.de)
[00:03:39] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[00:09:17] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[00:10:31] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[00:30:08] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[00:37:28] *** Joins: livoreno (~livoreno@user/notzmv)
[00:38:17] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[00:44:50] *** Quits: cosimone (~user@93-47-230-23.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:46:06] *** Joins: johnjaye (~pi@173.209.65.233)
[00:52:46] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[00:55:30] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[00:56:15] *** Quits: sheb (~sheb@31.223.228.71) (Quit: Leaving)
[01:02:12] *** Joins: karlosz (~karlosz@47.151.136.69)
[01:04:57] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:17:47] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:13] *** Quits: ukari (~ukari@user/ukari) (Ping timeout: 256 seconds)
[01:27:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[01:32:14] *** Joins: parjanya (~esb@200.173.186.29)
[01:33:20] *** Joins: ukari (~ukari@user/ukari)
[01:38:29] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:40:11] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:c67d:fb9e:353d:4cf3) (Ping timeout: 256 seconds)
[01:51:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[01:59:59] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:00:58] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[02:01:22] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e6:8fde:298f:e728:848d:e9fd)
[02:03:42] *** Joins: xiews (~wxie@101.93.17.62)
[02:13:35] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e6:8fde:298f:e728:848d:e9fd) (Ping timeout: 268 seconds)
[02:17:37] *** Quits: parjanya (~esb@200.173.186.29) (Ping timeout: 240 seconds)
[02:26:04] *** Joins: pyook (~pyook@user/puke)
[02:32:06] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:45:47] *** Joins: nytpu (5a8c9ec580@2604:bf00:561:2000::33)
[02:47:29] *** Joins: dra (~dra@2a04:4540:6405:4a00:9da1:d2d3:1f56:71e5)
[02:52:12] *** Joins: parjanya (~esb@200.173.186.29)
[02:53:51] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:57:15] *** Quits: clintm (~user@98.20.67.102) (Ping timeout: 256 seconds)
[02:59:55] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10e6:8fde:298f:e728:848d:e9fd)
[03:04:46] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10e6:8fde:298f:e728:848d:e9fd) (Ping timeout: 268 seconds)
[03:04:49] *** r3st` is now known as r3st
[03:04:59] *** Joins: Akiva (~Akiva@user/Akiva)
[03:12:36] *** Joins: lispy (~lispy3@84.69.59.93)
[03:14:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[03:23:53] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:24:31] *** Quits: dra (~dra@2a04:4540:6405:4a00:9da1:d2d3:1f56:71e5) (Quit: Leaving)
[03:28:06] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[03:28:08] *** Quits: xiews (~wxie@101.93.17.62) (Ping timeout: 250 seconds)
[03:33:42] *** Quits: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[03:33:58] *** Joins: xiews (~wxie@101.93.17.62)
[03:48:17] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:53:57] *** Quits: MatSharrow (~matthew@169.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[03:59:04] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com)
[04:02:25] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 256 seconds)
[04:03:48] *** Joins: ouestbillie (~gallup@185.195.233.158)
[04:06:27] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[04:46:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[04:51:57] *** Quits: VincentVega (~user@212.97.0.240) (Remote host closed the connection)
[04:54:17] *** Quits: xiews (~wxie@101.93.17.62) (Ping timeout: 240 seconds)
[05:16:04] *** Joins: xiews (~wxie@2409:891f:1106:3d8:21a7:7c53:76ba:7bdd)
[05:19:16] *** Joins: Common-Lisp (~o@2600:1700:94cc:cf:cec6:abc9:37c0:8449)
[05:24:18] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[05:25:20] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[05:26:41] *** Joins: neirac (~neirac@181.42.50.228)
[05:30:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:32:29] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:39:25] *** Joins: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net)
[05:43:26] *** Joins: unyu (~pyon@user/pyon)
[05:45:06] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 268 seconds)
[05:56:37] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[05:59:57] *** Quits: xiews (~wxie@2409:891f:1106:3d8:21a7:7c53:76ba:7bdd) (Ping timeout: 240 seconds)
[06:00:40] *** Joins: xiews (~wxie@101.93.17.62)
[06:01:25] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[06:09:13] *** Quits: gdsg (~wergsdfg@84-82-244-199.fixed.kpn.net) (Quit: Leaving)
[06:12:24] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[06:12:48] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 250 seconds)
[06:13:19] *** Quits: ouestbillie (~gallup@185.195.233.158) (Ping timeout: 256 seconds)
[06:15:08] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[06:27:57] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[06:35:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:45:18] *** Joins: jeosol (~jeosol@user/jeosol)
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:56:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:59:47] *** Quits: parjanya (~esb@200.173.186.29) (Ping timeout: 256 seconds)
[07:04:12] *** Quits: Common-Lisp (~o@2600:1700:94cc:cf:cec6:abc9:37c0:8449) (Quit: Leaving)
[07:12:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[07:16:22] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:18:24] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[07:24:50] *** Quits: jpl01 (~user@2001:16b8:49b9:f300:b583:4fba:1c07:2929) (Remote host closed the connection)
[07:44:56] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:49:05] *** Quits: ukari (~ukari@user/ukari) (Remote host closed the connection)
[07:49:23] *** Quits: danieli (~danieli@user/danieli) (Remote host closed the connection)
[07:49:54] *** Joins: ukari (~ukari@user/ukari)
[07:50:08] *** Joins: danieli (~danieli@user/danieli)
[07:50:42] *** Quits: danieli (~danieli@user/danieli) (Remote host closed the connection)
[07:52:29] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[07:53:16] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[08:04:55] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Quit: Reconnecting)
[08:05:07] *** Joins: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net)
[08:07:24] *** Quits: xiews (~wxie@101.93.17.62) (Ping timeout: 256 seconds)
[08:08:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[08:09:15] *** Quits: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net) (Remote host closed the connection)
[08:14:42] *** Joins: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net)
[08:17:49] *** Joins: xiews (~wxie@2409:891e:3460:52c:711f:e4c8:d8da:50e3)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:18:06] *** Quits: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Quit: WeeChat 3.0)
[08:20:30] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:25:34] *** Parts: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[08:33:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Read error: Connection reset by peer)
[08:40:42] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[08:45:56] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:49:29] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:59:36] *** Joins: Alfr (~Alfr@user/alfr)
[09:05:03] *** Joins: lunarkitty (uid501895@user/pyra)
[09:06:57] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 240 seconds)
[09:08:42] *** Joins: parjanya (~esb@200.173.186.29)
[09:11:26] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[09:15:38] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[09:19:56] *** Quits: neirac (~neirac@181.42.50.228) (Ping timeout: 256 seconds)
[09:20:41] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:21:37] *** Quits: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3) (Remote host closed the connection)
[09:21:51] *** Joins: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3)
[09:24:52] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[09:27:17] *** Quits: xiews (~wxie@2409:891e:3460:52c:711f:e4c8:d8da:50e3) (Ping timeout: 240 seconds)
[09:28:08] *** Joins: xiews (~wxie@2409:891e:3460:52c:711f:e4c8:d8da:50e3)
[09:49:02] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Ping timeout: 240 seconds)
[09:53:11] *** Joins: Jing (~hedgehog@115.207.51.203)
[10:14:45] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[10:15:09] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[10:15:25] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:20:51] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:27:37] *** Quits: xiews (~wxie@2409:891e:3460:52c:711f:e4c8:d8da:50e3) (Ping timeout: 240 seconds)
[10:33:31] *** Joins: asarch (~asarch@2806:10ae:7:9368:d6a5:a45a:93c6:c233)
[10:46:57] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[10:49:47] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[10:50:59] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:56:50] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[10:57:45] *** Joins: notzmv (~zmv@user/notzmv)
[11:05:47] *** Quits: Jing (~hedgehog@115.207.51.203) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:08:20] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[11:13:10] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:9dd8:fa79:cee0:389c)
[11:13:13] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[11:13:22] *** Joins: karlosz (~karlosz@47.151.136.69)
[11:13:35] *** Quits: asarch (~asarch@2806:10ae:7:9368:d6a5:a45a:93c6:c233) (Quit: Leaving)
[11:25:17] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[11:25:51] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[11:32:16] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[11:32:47] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[11:45:15] *** Joins: danieli (~danieli@user/danieli)
[11:49:31] *** Quits: ukari (~ukari@user/ukari) (Remote host closed the connection)
[11:49:57] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[11:50:16] *** Joins: karlosz (~karlosz@47.151.136.69)
[12:00:18] *** Joins: kevingal (~quassel@80.233.43.128)
[12:10:02] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c83a:1a80:bf93:c803)
[12:28:16] <qhong> kagevf: You have first-class environment, for any good Schemes (like GNU/MIT Scheme) :)
[12:31:00] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[12:32:15] <qhong> is there any good way to do `timer-create' in CL? lparallel (which I'm already using) has a task scheduler, but it doesn't seem to support running task at specific time?
[12:32:39] <phoe> qhong: I know of https://github.com/jcguu95/cl-schedule
[12:32:46] <moon-child> (make-thread (lambda () (sleep whatever) (do-task)))
[12:33:17] <moon-child> phoe: haha wow, that looks like a complete cron implementation
[12:33:53] <phoe> :D
[12:49:40] *** Joins: shka (~herr@109.231.0.226)
[12:53:41] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c83a:1a80:bf93:c803) (Ping timeout: 268 seconds)
[12:54:50] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c83a:1a80:bf93:c803)
[13:01:21] *** Joins: vats (~vats@103.158.91.8)
[13:01:30] *** Quits: vats (~vats@103.158.91.8) (Client Quit)
[13:01:43] *** Joins: vats (~vats@103.158.91.8)
[13:11:52] <qhong> phoe: Thanks! I also found trivial-timer. And SBCL's built-in sb-thread
[13:12:00] <qhong> `sb-timer'*
[13:22:33] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[13:27:33] *** Joins: lwhjp (~user@2400:2411:a080:4700:be5f:f4ff:fee9:7fbf)
[13:38:04] *** Quits: kevingal (~quassel@80.233.43.128) (Remote host closed the connection)
[13:39:56] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:c83a:1a80:bf93:c803) (Ping timeout: 268 seconds)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:53:43] *** Joins: xiews (~wxie@101.93.17.62)
[13:58:44] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[14:08:20] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[14:14:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:15:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:17:15] *** Joins: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br)
[14:17:44] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:56] *** Parts: test_1235 (~Guest32@45-226-119-37.static.sumicity.net.br) ()
[14:25:48] *** Quits: xiews (~wxie@101.93.17.62) (Remote host closed the connection)
[14:29:15] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:30:36] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[14:36:02] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[14:36:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:36:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:42:56] *** Quits: vats (~vats@103.158.91.8) (Ping timeout: 256 seconds)
[14:44:43] *** Joins: xiews (~wxie@2409:891e:3460:52c:dfa5:4539:7d38:ae29)
[14:47:45] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:08:34] *** Joins: vats (~vats@103.158.91.8)
[15:19:09] *** Joins: paul_j (~user@67.26.169.217.in-addr.arpa)
[15:23:16] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[15:32:57] *** Quits: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[15:33:11] *** Joins: yoonkn (~user@175.197.208.79)
[15:33:32] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:34:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:36:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:50:20] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[15:54:17] *** Quits: xiews (~wxie@2409:891e:3460:52c:dfa5:4539:7d38:ae29) (Ping timeout: 240 seconds)
[16:12:23] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:13:18] *** Joins: VincentVega (~user@212.97.0.240)
[16:13:59] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 256 seconds)
[16:14:18] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[16:18:31] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 256 seconds)
[16:18:38] *** Joins: wacki (~wacki@87.122.82.23)
[16:20:10] *** Joins: strajder (~strajder@user/strajder)
[16:22:19] *** Joins: gproto23_ (~gproto23@user/gproto23)
[16:22:39] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[16:22:45] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[16:23:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:23:56] *** Joins: xiews (~wxie@61.152.201.154)
[16:24:22] *** Quits: vats (~vats@103.158.91.8) (Ping timeout: 256 seconds)
[16:32:17] *** Joins: kevingal (~quassel@80.233.35.128)
[16:34:17] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[16:34:57] *** Quits: xiews (~wxie@61.152.201.154) (Ping timeout: 240 seconds)
[16:47:23] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:48:42] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[17:06:08] *** Joins: xiews (~wxie@61.152.197.34)
[17:07:50] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[17:25:04] *** Joins: silasfox (~fox@p200300cec749ab00c73f14147946d259.dip0.t-ipconnect.de)
[17:28:37] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[17:29:20] *** Joins: amb007 (~a_bakic@101.36.22.93.rev.sfr.net)
[17:34:00] *** Quits: kevingal (~quassel@80.233.35.128) (Remote host closed the connection)
[17:34:04] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[17:38:51] *** Joins: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net)
[17:42:06] *** Quits: amb007 (~a_bakic@101.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[17:43:15] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[17:43:22] *** Joins: Necktwi (~necktwi@49.206.203.103)
[17:54:57] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[17:55:41] *** Joins: amb007 (~a_bakic@101.36.22.93.rev.sfr.net)
[17:55:59] *** Quits: xiews (~wxie@61.152.197.34) (Ping timeout: 256 seconds)
[17:58:46] *** Quits: amb007 (~a_bakic@101.36.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[18:00:42] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[18:17:42] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[18:18:33] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[18:19:07] *** Joins: shozo (~user@178.74.52.55)
[18:20:32] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[18:20:48] *** Joins: xiews (~wxie@101.93.17.62)
[18:20:53] *** Joins: amb007 (~a_bakic@101.36.22.93.rev.sfr.net)
[18:23:14] *** Joins: bendersteed (~user@188.4.114.117.dsl.dyn.forthnet.gr)
[18:29:23] *** Joins: johnjaye (~pi@173.209.65.233)
[18:30:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b)
[18:30:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9850:4c31:3544:119b) (Changing host)
[18:30:30] *** Joins: skapata (~Skapata@user/skapata)
[18:30:49] *** Quits: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3) (Remote host closed the connection)
[18:31:03] *** Joins: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3)
[18:39:31] *** Joins: vats (~vats@103.216.143.18)
[18:40:40] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[18:43:37] *** Quits: amb007 (~a_bakic@101.36.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[18:43:55] *** Joins: amb007 (~a_bakic@165.144.204.77.rev.sfr.net)
[18:56:22] *** Joins: JoshYoshi (~user@37.25.47.130)
[18:58:17] *** Quits: Josh_2 (~user@37.25.47.130) (Ping timeout: 240 seconds)
[19:00:16] *** Joins: rtypo (~alex@user/rtypo)
[19:01:37] *** Quits: JoshYoshi (~user@37.25.47.130) (Ping timeout: 240 seconds)
[19:05:14] *** Parts: shozo (~user@178.74.52.55) (ERC (IRC client for Emacs 27.2))
[19:11:17] *** Quits: amb007 (~a_bakic@165.144.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[19:11:40] *** Joins: amb007 (~a_bakic@143.198.204.77.rev.sfr.net)
[19:21:21] *** Joins: kuao (uid504326@id-504326.helmsley.irccloud.com)
[19:21:23] *** Quits: kuao (uid504326@id-504326.helmsley.irccloud.com) (Client Quit)
[19:24:09] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[19:26:01] *** Quits: xiews (~wxie@101.93.17.62) (Remote host closed the connection)
[19:29:16] *** Quits: amb007 (~a_bakic@143.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[19:29:24] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[19:36:08] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:43:14] <qhong> Is there a way to "inject" a function definition available at load time during macroexpansion?
[19:44:04] <qhong> i.e. I need to define a function from within a macro which not necessarily occurs at top level
[19:44:47] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[19:44:52] <White_Flame> (defmacro foo (...)  `(labels ((local-function (..) ..)) ...) ?
[19:45:11] <White_Flame> the expanded macro body would then have access to call LOCAL-FUNCTION?
[19:45:47] <qhong> I need it to be global, i.e. resides in function cell of a symbol...
[19:46:28] <White_Flame> when and from where do you want this function called?
[19:46:59] <White_Flame> there's also `(eval-when ... (defun ...))
[19:47:30] <qhong> function is called from the macro body. The problem I'm tackling is closure redefinition, so I want other closures created before also see this new definition
[19:48:07] <White_Flame> you could give the closures some DECLARE bodies to forward-declare it
[19:48:59] <White_Flame> but what's the reason behind not wanting the DEFUN to be top level?
[19:49:05] <qhong> White_Flame: Hmm, I don't know such DECLARE before. What's the spell?
[19:49:21] <qhong> White_Flame: closures are typically defined within body of other functions
[19:50:09] <White_Flame> if you have (let ((x 4)) (defun foo () ...)) then the entire DEFUN is still a globally-accessible closure
[19:51:10] <qhong> The problem is in (defun bar () (let ((x 4)) (defun foo () ...))), definition of `foo` is available only after `bar` is first called, not immediately after evaluating the toplevel defun
[19:51:37] <White_Flame> right, that's not a good code smell.  What's the overall picture of what you're trying to do?
[19:52:17] *** Joins: alejandrozf (~user@190.191.153.68)
[19:52:20] <qhong> I'm making redefinable closure, basically the same as lambda, but whose body can be redefined just as normal function symbols
[19:52:47] <qhong> Context: https://www.reddit.com/r/lisp/comments/s9yz39/question_closures_in_most_lisps_suck_how_to_fix/
[19:53:47] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:54:24] <White_Flame> so you want to be able to redefine the function of a closure while it continues to close over the exact same data?
[19:55:25] <White_Flame> that does smell to me like an object
[19:55:37] <qhong> Yes, or even close over different data to a certain extend, I'm using CLOS under the hood and there's CHANGE-CLASS -- part is solved issue
[19:55:42] <White_Flame> because the data that a closure closes over is implicity defined by the body of the closure code
[19:56:01] <White_Flame> with an object, the data is explicitly defined, regardless of the function bodies
[19:56:19] <White_Flame> and generic functions decouple the code from the data
[19:56:25] <qhong> People still love to write `lambda` s
[19:56:39] <White_Flame> sure, and they close over a runtime artifact
[19:56:48] <White_Flame> an a lexical artifact
[19:57:06] <qhong> I've reproduced almost the same syntax as `lambda` using code walker and funcallable-instance, but the definition time semantics I get currently is incorrect
[19:57:09] <White_Flame> there is no declaration of a closure, and thus no consistency of its data section if you were to redefine its code section
[19:57:25] *** Joins: wmblathers (~wm.blathe@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net)
[19:58:02] <White_Flame> if you had an explicit definition of a closure, then I don't see any difference between that and an object
[19:58:08] <qhong> Correct redefinition behavior is still partly possible in the sense that free variables with the same name gets carried over
[19:58:33] <White_Flame> have you read Let Over Lambda?
[19:58:38] <qhong> Sure
[19:59:06] <White_Flame> so I could see passing in a body to be EVAL'd within the closure, but it'd have to have captured the compilation environment to pass in
[19:59:10] <White_Flame> not sure if that would work
[19:59:47] <qhong> I understand closure are similar to object, but there are tiny but important bits missing in the context of a long-running live system
[19:59:50] <White_Flame> but if the eval'd form could be made to see the closed-over value slots, that might have a chance to work without reconstructing an entire infrastructure
[20:00:36] <qhong> White_Flame: That part of issue is solved. I use code walker to get fvs, and WITH-SLOTS to redirect fvs to value slots
[20:00:37] *** Quits: wmblathers (~wm.blathe@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net) (Client Quit)
[20:00:49] <qhong> White_Flame: The only issue I have currently is wrong definition time
[20:01:42] <qhong> Namely, for interpreter environment, the DEFUNs have to happen at macroexpansion time to take effect immediately
[20:02:16] <qhong> But this makes the definition not carried over to runtime environment during compilation
[20:02:39] <White_Flame> does `(progn (defun ...) (..other code..)) not see the results of the DEFUN?
[20:03:09] <qhong> See above: The problem is in (defun bar () (let ((x 4)) (defun foo () ...))), definition of `foo` is available only after `bar` is first called, not immediately after evaluating the toplevel defun
[20:03:28] <White_Flame> what code refers to FOO?
[20:03:49] <White_Flame> and also, skip th edefun bar
[20:03:58] <qhong> `#'foo` will be stored and floated around in data structures in the memory
[20:04:01] <White_Flame> but I don't know where your macro call is either
[20:04:27] <White_Flame> ok in that case it should not be #'foo but rather 'foo
[20:04:32] <qhong> so the actualy syntax is sth like (defun make-inc (x)  (nclo inc (y) (setf x (+ x y))))
[20:04:35] <qhong> White_Flame: Yes
[20:04:41] <White_Flame> calling through a symbol will look up its fdefinition every time
[20:04:45] <qhong> `nclo` is my macro
[20:05:14] <White_Flame> ah, ok, I think I recognize this problem
[20:05:49] <White_Flame> you need a macro to be able to stuff things into the program's toplevel even though the macro isn't at toplevel
[20:05:58] *** Joins: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net)
[20:05:59] <White_Flame> *macro call isn't at toplevel
[20:06:01] <qhong> exactly
[20:06:47] <White_Flame> try LOAD-TIME-VALUE
[20:08:10] <qhong> Hmm, interesting, haven't thought about that. Let me try play around...
[20:08:48] <White_Flame> yeah, I know.  EVAL-WHEN relies on being a toplevel form for most things
[20:10:22] <White_Flame> the other extreme fallback option is to split into 2 macros. where NCLO stuffs a compile-time variable with definitions, then another macro at the very end of your program dumps all those out to toplevel code
[20:10:41] <White_Flame> but that kinda sucks
[20:10:46] <qhong> White_Flame: tru
[20:12:09] <qhong> Maybe another hack: we may have to mechanism that work for compilation and runtime redefinition. Note that expanding to a DEFUN inplace during compilation seems to actually work, because it's not possible to have 'inc float around before the first ever call to `make-inc-1` in runtime environment
[20:12:21] <qhong> to mechanism -> two mechanisms
[20:12:33] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:cf2:af63:d2b:de9)
[20:12:47] <White_Flame> btw, I think that #commonlisp would probably be more applicable for this discussion, as this is the "general lisp family" channel now
[20:12:48] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[20:13:33] <qhong> Sure, if anything more comes up let's switch to #commonlisp
[20:13:44] *** Parts: wmblathers (~wmblather@162-199-148-123.lightspeed.mdsnwi.sbcglobal.net) ()
[20:19:55] *** Quits: parjanya (~esb@200.173.186.29) (Ping timeout: 256 seconds)
[20:21:40] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e6:8fde:6139:6fde:c6a9:296b)
[20:24:27] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[20:25:17] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:25:42] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:cf2:af63:d2b:de9) (Ping timeout: 268 seconds)
[20:27:16] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:9dd8:fa79:cee0:389c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:29:37] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[20:30:18] *** Joins: amb007 (~a_bakic@143.198.204.77.rev.sfr.net)
[20:32:24] *** Joins: rogersm (~rogersm@90.166.180.250)
[20:34:18] *** Joins: lispy (~lispy3@84.69.59.93)
[20:34:57] *** Quits: bendersteed (~user@188.4.114.117.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[20:44:29] *** Quits: silasfox (~fox@p200300cec749ab00c73f14147946d259.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[20:46:34] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ea:da13:6139:6fde:c6a9:296b)
[20:46:34] *** Quits: amb007 (~a_bakic@143.198.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:46:57] *** Quits: alejandrozf (~user@190.191.153.68) (Ping timeout: 240 seconds)
[20:47:54] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[20:50:22] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e6:8fde:6139:6fde:c6a9:296b) (Ping timeout: 268 seconds)
[21:03:44] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[21:03:59] *** Joins: amb007 (~a_bakic@143.198.204.77.rev.sfr.net)
[21:09:07] *** Joins: strajder (~strajder@user/strajder)
[21:16:13] *** Quits: puke (~puke@user/puke) (Ping timeout: 256 seconds)
[21:17:17] *** Quits: amb007 (~a_bakic@143.198.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[21:20:37] *** Joins: jeosol (~jeosol@user/jeosol)
[21:24:05] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[21:24:42] *** Joins: amb007 (~a_bakic@32.147.204.77.rev.sfr.net)
[21:30:23] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[21:31:17] *** Quits: Necktwi (~necktwi@49.206.203.103) (Quit: leaving)
[21:36:37] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ea:da13:6139:6fde:c6a9:296b) (Ping timeout: 268 seconds)
[21:47:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:50:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:50:38] *** Joins: cosimone (~user@93-47-231-147.ip115.fastwebnet.it)
[21:51:38] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:56:10] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:5969:aa36:1621:6eb9)
[21:56:15] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:5969:aa36:1621:6eb9) (Excess Flood)
[22:01:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:01:26] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:03:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:08:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:15:11] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:35:09] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[22:44:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[22:56:56] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:57:41] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[23:07:46] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:09:42] *** Quits: VincentVega (~user@212.97.0.240) (Quit: ERC (IRC client for Emacs 27.2))
[23:10:06] *** Joins: tfeb (~tfb@195.213.60.52)
[23:11:18] *** Quits: r3st (~user@2601:282:b00:ba30::90c9) (Remote host closed the connection)
[23:11:55] *** Joins: johnjaye (~pi@173.209.65.233)
[23:18:18] *** Quits: johnjaye (~pi@173.209.65.233) (Quit: WeeChat 3.3)
[23:22:51] *** Joins: johnjaye (~pi@173.209.65.233)
[23:30:17] *** Quits: amb007 (~a_bakic@32.147.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[23:31:57] *** Quits: tfeb (~tfb@195.213.60.52) (Quit: died)
[23:35:27] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[23:35:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:39:36] <kagevf> qhong: I just use emacs ... it has a built in Scheme mode, and some of the keybindings are similar to SLIME ... C-h m will show a list of what's available. DR Racket is another option (it has an MIT Scheme mode, might have to download it?) but I find emacs much easier to use. YMMV
[23:39:55] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:41:05] *** Joins: amb007 (~a_bakic@84.196.204.77.rev.sfr.net)
[23:44:06] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:44:26] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[23:48:37] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[23:53:30] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[23:55:28] *** Quits: amb007 (~a_bakic@84.196.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[23:59:04] *** Quits: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7) (Ping timeout: 268 seconds)
[23:59:34] *** Joins: chiselfu1e (~chiselfus@user/chiselfuse)
[23:59:48] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
