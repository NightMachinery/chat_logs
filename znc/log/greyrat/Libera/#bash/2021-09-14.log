[00:00:21] <greycat> This is wrong.  It's fundamentally wrong.  It is not the right way.
[00:00:36] <kurahaupo> wizhurd: Try to keep clear the distinction between the data that's read from and with to files, and data that's kept in shell variables. Those two mechanisms don't mix except in a few specific cases.
[00:01:10] <koala_man> wizhurd: you'll probably end up with xargs or a while read loop
[00:01:15] <wizhurd> kurahaupo: as in bash is not the ridht tool
[00:01:25] <wizhurd> right
[00:01:36] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:01:53] <greycat> What does "the value of each file" mean here?
[00:01:53] <kurahaupo> wizhurd: a pipe connecting two commands takes the output of the first one and feeds it as the input of the second one. Commands like echo or mkdir don't read 'input'
[00:02:30] <kurahaupo> wizhurd: You mentioned using a regex to get something out of the file. what exactly?
[00:02:38] <greycat> If your filename is foobar.html, then do you want "foobar"?
[00:03:22] <kurahaupo> greycat: For the sake of your sanity I recommend a preemptive /ignore on this one. I can deal with it
[00:03:23] <wizhurd> greycat: if the wave is foobar.html I want foobar.html
[00:03:34] <wizhurd> name*
[00:03:49] <greycat> The you already have it.  There is nothing to be done.
[00:03:51] <kurahaupo> wizhurd: where do you get the name from?
[00:04:05] <greycat> 15:29  wizhurd> I wrote that as a test. I want to know 'cat * | echo <what do I write here to get the value of each file>
[00:04:21] <greycat> If you simply want *all the filenames*:  printf '%s\n' *
[00:04:37] <greycat> Or even:  echo *   (but this has caveats)
[00:04:41] <kurahaupo> wizhurd: you need to write a loop to run a few commands for each file.
[00:05:15] <wizhurd> kurahaupo: yes
[00:05:22] <kurahaupo> for filename in * ; do {stuff here using $filename}; done
[00:05:53] <kurahaupo> wizhurd: Neither cat nor echo will be useful
[00:06:09] <greycat> they might use echo to see which file is being processed
[00:06:30] *** Patsie_ is now known as Patsie
[00:06:31] <greycat> for f in *; do echo "Now processing $f"; slowthing "$f"; done
[00:06:31] <kurahaupo> greycat++ (pedantry)
[00:07:32] <kurahaupo> wizhurd: With that "for" loop, each filename will be available as $filename, one at a time
[00:07:50] <greycat> or $f in mine, or whatever variable name you choose
[00:08:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[00:08:21] <greycat> I think most people use either "f" or "file".
[00:08:52] <wizhurd> thank you!
[00:09:11] <kurahaupo> yeah, though when they aren't clear on the distinction between a file name and a file's contents, I figure the extra clarity wouldn't hurt
[00:11:02] <wizhurd> when you said mkdir and echo couldn't access the filename was it because only it's content is passed through the pipe when doing cat?
[00:11:23] <kurahaupo> for filename in * ; do stuff here using $filename ; done # bold words are keywords that you don't change. blue word you can choose. Orange is where you put the list of files, or a pattern that will match them
[00:11:29] <greycat> It's because piping to them makes no sense.
[00:11:34] <greycat> mkdir doesn't read standard input.
[00:12:14] <wizhurd> okay
[00:12:37] <kurahaupo> wizhurd: cat * | something does not send the file names to something, it sends the file contents to something
[00:12:56] <wizhurd> oh
[00:13:05] <phy1729> kurahaupo: channel is +c so no color
[00:13:11] <wizhurd> I realy want to become good at bash
[00:13:38] <kurahaupo> phy1729: awww. It's really useful for syntax highlighting
[00:14:07] <phy1729> vOv not my decision just figured I'd let you know we can't see it
[00:14:16] <kurahaupo> yeah, thanks
[00:15:04] <kurahaupo> I'm guessing that means you don't see bold or italics either
[00:15:17] *** Joins: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net)
[00:15:19] *** Parts: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net) ( )
[00:15:26] <greycat> is your client showing you what you sent, not what the IRC server sent back to you?
[00:15:30] <phy1729> nope no control chars come through
[00:15:38] <phy1729> greycat: that's how IRC works
[00:15:58] <kurahaupo> Yes I see what I sent, apparently
[00:16:27] <phy1729> Unless you use this (I think) https://ircv3.net/specs/extensions/echo-message
[00:16:31] *** Joins: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net)
[00:17:10] <kurahaupo> I thought it was normal not to round-trip one's own messages?
[00:18:01] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Remote host closed the connection)
[00:18:20] *** Joins: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com)
[00:19:41] *** Quits: n4dir (~user@i577bc80c.versanet.de) (Remote host closed the connection)
[00:19:56] *** Joins: tex (~dee@user/dix)
[00:21:09] *** Joins: blingrang (~blingrang@user/blingrang)
[00:21:10] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:21:45] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:23:49] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 268 seconds)
[00:25:34] *** Joins: nvmd (~nvmd@user/nvmd)
[00:25:36] *** Joins: anddam (~anddam@user/anddam)
[00:26:12] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[00:26:36] *** Joins: Krail (~Krail@user/alexdelarge)
[00:27:51] *** Joins: Betal (~Betal@user/betal)
[00:28:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:29:19] <anddam> howdy, odd question but having to get the first n chars of a string of fixed length N in POSIX shell, should I be using cut command or should I use suffix pattern removal ${foo#????}  with N-n question marks?
[00:29:21] *** Joins: Voxel (~Voxel@173-46-68-178.baltnet.ru)
[00:29:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[00:29:39] <anddam> the latter is builtin, but â€¦ seems a bit odd
[00:29:58] *** Joins: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de)
[00:30:18] <greycat> tmp=${input#???} out=${input%"$tmp"}
[00:31:43] <greycat> # input=123456789 tmp=${input#???} out=${input%"$tmp"}; declare -p out
[00:31:44] <shbot> greycat: declare -- out="123"
[00:32:22] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[00:35:02] <earnestly> That can be done in a nested PE
[00:37:22] *** Quits: magla (~gelignite@55d46203.access.ecotel.net) (Quit: Stay safe!)
[00:37:41] <earnestly> d# input=123456789; printf %s "${input%${input#???}}"
[00:37:43] <shbot> earnestly: 123
[00:38:00] <greycat> needs more quotes, I think
[00:38:02] <earnestly> anddam: There's no away around using ? many times
[00:38:18] <earnestly> greycat: If %this-can-be-patterns, then yeah
[00:38:18] <anddam> ooohh those both took me a while to understand
[00:38:31] <earnestly> d# input=123456789; printf %s "${input%"${input#???}"}"
[00:38:32] <shbot> earnestly: 123
[00:38:44] <anddam> case in point I need 7 chars out of 40, I wanted to be a bit more succint than 33 '?'
[00:38:47] <greycat> It's a fairly common idiom for sh.
[00:39:01] <greycat> anddam: well, you only need 7 ?
[00:39:26] <anddam> greycat: with your middle tmp approach, right?
[00:39:38] <earnestly> You don't need a tmp variable
[00:39:43] <greycat> earnestly's is the same as mine, just without the temp variable to make it easier to read
[00:39:58] <earnestly> Also, in general, depending in the inputs in many cases this can be subsummed by the larger pipeline
[00:40:21] <earnestly> If your inputs are already going through a static pipe full of awk and such then it can be handled immediately
[00:40:39] <earnestly> (Rather than storing variables between commands)
[00:41:18] *** Joins: cdown (~cdown@194.207.141.245)
[00:41:41] <earnestly> anddam: (The ability to nest PEs like this in POSIX (and bash) only works if you're taking a head or tail (think of it like a mask of the head or tail).  If you need to extract anything inbetween things then it needs two PEs
[00:41:43] <earnestly> (or more)
[00:42:07] <earnestly> (Unless you're zshpants)
[00:43:14] <adac> For some reasons i cannot get this to work within a docker container:    "ls -1tr /backup/ | head -n -10 | xargs -d '\n' rm -rf --" It seems that xargs is not applied correctly. Any ideas on how I can debug this or what the reason might be for this to do nothing at all?
[00:43:51] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[00:44:25] *** Quits: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:44:54] *** Joins: seninha (~seninha@user/seninha)
[00:45:39] *** Joins: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de)
[00:45:41] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:46:01] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[00:46:46] *** Parts: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net) ( )
[00:47:53] <anddam> greycat: I'd argue earnestly's is not easier to read
[00:48:03] <anddam> earnestly: I see the points about PEs, thanks
[00:48:16] <kurahaupo> !ls > adac
[00:48:16] <greybot> adac: DO NOT USE ls' output for anything. ls is a tool for interactively looking at directory metadata. Any attempts at parsing ls' output with code are broken. Globs are much more simple AND correct: ''for file in *.txt''. Read http://mywiki.wooledge.org/ParsingLs
[00:48:16] <kurahaupo> adac: try list=( /backup/* ) ; rm -rf "${list[@]::10}"
[00:48:44] <greycat> anddam: that's what I said too.  The temp variable makes it easier to read.
[00:48:50] <kurahaupo> oh, except you want date sorted
[00:48:55] <koala_man> adac: I'm guessing you're not running this in /backup/, so it's trying to delete the same filenames from the current dir. It's not saying anything's wrong since you added -f
[00:49:43] <greycat> maybe they have a priori knowledge that in their special D-word container, the filenames in /backup/ are all "sane"
[00:50:02] *** Quits: sdu (~doo@185.44.146.64) (Remote host closed the connection)
[00:50:14] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[00:50:18] <greycat> of course, they didn't even know enough to know that they had to THINK about that, so...
[00:50:22] *** Joins: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d)
[00:50:38] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[00:50:40] <adac> koala_man, kurahaupo thanks guys!!!
[00:51:11] <kurahaupo> adac: I suggest using a time cutoff rather than "oldest 10 files or directories"
[00:51:22] <earnestly> adac: Add -- to that rm -rf
[00:51:58] <kurahaupo> adac: Incidentally, the last-modified timestamp of a directory is unrelated to the last-modified timestamp of any files inside it
[00:52:18] <kurahaupo> earnestly: my bad, sorry
[00:52:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:53:21] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:53:50] <adac> What my goal would be would be to delete all oldest files and directories and keep only last 10
[00:53:56] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[00:53:59] <kurahaupo> # find / -maxdepth 1 -printf '%y,%p\0' | sort -nz
[00:54:00] <shbot> kurahaupo: d,/d,/bind,/devd,/etcd,/libd,/procd,/rootd,/tmpd,/usrd,/varf,/.triggersf,/initl,/lib64
[00:54:05] *** Joins: xiao (~xiao@37.165.80.162)
[00:54:11] *** Quits: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[00:54:16] <adac> I also have a timestamp in these files/dirs name so I could also sort by that
[00:54:24] <kurahaupo> # find / -maxdepth 1 -printf '%T@,%p\0' | sort -nz
[00:54:26] <shbot> kurahaupo: 1615669288.0000000000,/init1615669288.0000000000,/lib641615669288.0000000000,/usr1615669288.0000000000,/var1616358864.0000000000,/root1620160202.0000000000,/tmp1620160203.0000000000,/1620160203.0000000000,/.triggers1620160203.0000000000,/bin1620160203.0000000000,/lib1620160336.0480000000,/proc1620160342.8750151880,/dev1620160342.9390151870,/etc
[00:54:40] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Ping timeout: 265 seconds)
[00:54:52] <kurahaupo> then just trim off the timestamps to get the file in timestamp order
[00:55:32] <adac> kk I will try tomorrow. Thanks for all the hints! Got to go cu!
[00:55:47] <Voxel> Bash is amazing, adac ^^
[00:56:06] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[00:56:39] <greycat> Amazingly devoid of commonly desired features?
[00:57:06] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[00:57:09] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nz ) ; list=( "${list [@]::-10}" ) ; list=( "${list[@]#*,}" ) ; declare -p list
[00:57:10] <shbot> kurahaupo: bash: ${list [@]::-10}: bad substitution
[00:57:12] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:57:25] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nz ) ; list=( "${list[@]::-10}" ) ; list=( "${list[@]#*,}" ) ; declare -p list
[00:57:27] <shbot> kurahaupo: bash: -10: substring expression < 0
[00:57:36] <akoana> "${list[@]: -10}"
[00:57:46] <kurahaupo> akoana: no
[00:57:50] <akoana> no?
[00:57:55] <kurahaupo> akoana: two colons
[00:58:23] <kurahaupo> Apparently negative length works for substrings but not subarrays
[00:58:29] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Remote host closed the connection)
[00:58:44] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[00:59:01] <earnestly> Lack of stat(1p) and generally pretty bad handling of a/mtime sorted and comparsion features in the shell is a serious oversight
[00:59:23] <earnestly> renew=$(touch -d "$(TZ=UTC+00:15:00 date +%FT%TZ)" -- "$cachedir"/timeref
[00:59:24] <earnestly>         TZ=UTC find "$cachedir"/livestreams ! -newer "$cachedir"/timeref
[00:59:26] <earnestly>         rm -f -- "$cachedir"/timeref)
[00:59:29] <earnestly> This is ridiculous
[00:59:39] <akoana> # list=(1 2 3 4); printf '%s \t' "${list[@]: -2}"
[00:59:40] <Voxel> greycat, like someone told me recent chat: "That's your opinion, man. Get over it."
[00:59:42] <shbot> akoana: 3       4
[00:59:44] <greycat> The people who designed the shell obviously intended for most of the "sort the last n things ..." type work to be done in a different language.
[01:00:14] <earnestly> I do appreciate zsh here since it can be told to sort arrays of files by time
[01:00:19] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nz ) ; list=( "${list[@]:0:${#list[@]}-10}" ) ; list=( "${list[@]#*,}" ) ; declare -p list
[01:00:21] <shbot> kurahaupo: declare -a list=([0]="/init" [1]="/lib64" [2]="/usr")
[01:00:43] <greycat> And the tools are all clearly designed around the concept of filenames being sane single words, with no whitespace or punctuation beyond . and maybe _ -
[01:00:44] <akoana> # list=(1 2 3 4); printf '%s|' "${list[@]: -2}" # kurahaupo
[01:00:44] <earnestly> greycat: This wouldn't be so bad if find's -*time flags could consider things less than 24 hours old
[01:00:46] <shbot> akoana: 3|4|
[01:00:55] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[01:01:39] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nz ) ; list=( "${list[@]#*,}" ) ; remove=( "${list[@]:0:${#list[@]}-10}" ) ; keep=( "${list[@]:${#list[@]}-10}" ) ;  declare -p keep remove
[01:01:40] <shbot> kurahaupo: declare -a keep=([0]="/var" [1]="/root" [2]="/tmp" [3]="/" [4]="/.triggers" [5]="/bin" [6]="/lib" [7]="/proc" [8]="/dev" [9]="/etc")
[01:01:40] <shbot> kurahaupo: declare -a remove=([0]="/init" [1]="/lib64" [2]="/usr")
[01:01:54] <greycat> kurahaupo: why are you not just doing [@]:0:10
[01:01:55] <earnestly> akoana: IFS='|'; printf '%s\n' "${list[*]: -2}" # probably
[01:02:11] <kurahaupo> last ten not first 10
[01:02:23] <kurahaupo> though I suppose I could just reverse the sort
[01:02:24] <greycat> then sort in the opposite direction
[01:02:30] <kurahaupo> snap
[01:02:43] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[01:03:08] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nrz ) ; list=( "${list[@]#*,}" ) ; remove=( "${list[@]:10" ) ; keep=( "${list[@]::10" ) ;  declare -p keep remove
[01:03:14] <shbot> kurahaupo: Missing terminating quote, bracket or keyword
[01:03:25] <kurahaupo> ugh
[01:03:36] <kurahaupo> # readarray -d '' -t list < <( find / -maxdepth 1 -printf '%T@,%p\0' | sort -nrz ) ; list=( "${list[@]#*,}" ) ; remove=( "${list[@]:10}" ) ; keep=( "${list[@]::10}" ) ;  declare -p keep remove
[01:03:37] <shbot> kurahaupo: declare -a keep=([0]="/etc" [1]="/dev" [2]="/proc" [3]="/lib" [4]="/bin" [5]="/.triggers" [6]="/" [7]="/tmp" [8]="/root" [9]="/var")
[01:03:37] <shbot> kurahaupo: declare -a remove=([0]="/usr" [1]="/lib64" [2]="/init")
[01:03:45] <kurahaupo> yeah that's tidier
[01:03:49] <Voxel> Awesome, kurahaupo ^^
[01:03:51] <earnestly> (Also I'm mildly proud of finding that date trick of using TZ for math but only secretly)
[01:03:53] *** Joins: zebrag (~chris@user/zebrag)
[01:04:59] <kurahaupo> earnestly: gnu find has -*min to test minutes rather than days
[01:05:02] <earnestly> kurahaupo: Btw, when working with files like this it's often useful to actually use / as the separator character
[01:05:08] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[01:05:18] <earnestly> kurahaupo: Yeah but I'm always refering to posix utils, I know gnu has it
[01:05:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[01:05:43] <kurahaupo> earnestly: any non-digit (non-decimal-point) will do
[01:06:03] <akoana> what's wrong with
[01:06:05] <akoana> #list=("o n e" 2 "t h r e e" 4); printf '%s\n' "${list[@]: -2}"
[01:06:06] <earnestly> IFS=/ is nice because if you pass data in that is formatted such as: 'metadata path' then IFS=/ read -r meta rest; just works nicely
[01:06:12] <akoana> for the last 2 elements?
[01:06:24] <akoana> # list=("o n e" 2 "t h r e e" 4); printf '%s\n' "${list[@]: -2}"
[01:06:26] <shbot> akoana: t h r e e
[01:06:26] <shbot> akoana: 4
[01:06:52] <kurahaupo> akoana: What about all except the last 2 elements?
[01:07:49] <akoana> fair enough, that's a different requirement...
[01:08:11] <earnestly> Hmm
[01:08:17] <earnestly> Surprise math contexts
[01:09:26] <greycat> https://mywiki.wooledge.org/BashProgramming/05#Arithmetic_Expansion
[01:10:16] <earnestly> # a=(a b c d); echo "${a[@]::${#a[@]}-2}"
[01:10:17] <shbot> earnestly: a b
[01:10:28] <earnestly> The thing is, if there's a math context, there's eval
[01:10:28] <kurahaupo> # s=abcdef ; echo ${s::-2} # should be same as ${s::4}
[01:10:30] <shbot> kurahaupo: abcd
[01:10:33] <akoana> # list=("o n e" 2 "t h r e e" 4 5); printf '%s\n' "${list[@]:0:((${#list[@]} -2))}"
[01:10:34] <shbot> akoana: o n e
[01:10:34] <shbot> akoana: 2
[01:10:34] <shbot> akoana: t h r e e
[01:10:53] <earnestly> greycat: RANDOM has eval characteristics
[01:10:54] <greycat> akoana: you don't need the extra parens
[01:11:03] <earnestly> So don't expose RANDOM to user input lol
[01:11:05] <kurahaupo> # s=(a b c d e f) ; echo "${s[@]::-2} # should be same as ${s[@]::4}
[01:11:12] <shbot> kurahaupo: Missing terminating quote, bracket or keyword
[01:11:15] <greycat> earnestly: you mean *seeding* it?
[01:11:19] <kurahaupo> # s=(a b c d e f) ; echo "${s[@]::-2}" # should be same as ${s[@]::4}
[01:11:21] <shbot> kurahaupo: bash: -2: substring expression < 0
[01:11:26] <akoana> greycat: ok, thanks
[01:11:58] <kurahaupo> I figure that inconsistency is worth a bug report
[01:12:04] <earnestly> greycat: Yeah, because it does math, so the RANDOM='x[$(date ...)]' trick works
[01:12:10] <kurahaupo> # echo $BASH_VERSION
[01:12:11] <shbot> kurahaupo: 5.1.8(1)-release
[01:12:34] <greycat> Can't say I've ever seen anyone seed RANDOM from user input....
[01:13:22] *** Joins: seninha (~seninha@user/seninha)
[01:13:29] <earnestly> Hopefully no one does
[01:13:38] <earnestly> But it is a case of surprise arith context
[01:13:51] *** Parts: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net) ()
[01:13:57] *** Joins: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net)
[01:14:26] <earnestly> And where there's arith context, there's arbitrary code execution
[01:14:29] *** Joins: sublim20 (~sublim20@user/sublim20)
[01:14:36] *** Quits: adac (~adac@213-47-187-80.cable.dynamic.surfer.at) (Ping timeout: 268 seconds)
[01:15:21] <earnestly> greycat: Do you know of cases in posix sh where this happens, besides $(( ))?
[01:15:29] <greycat> assigning to SECONDS does it too... looking for mroe
[01:15:44] <greycat> earnestly: POSIX sh doesn't do the recursive evaluation thing
[01:16:36] <greycat> OPTIND
[01:16:49] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:17:05] <greycat> SRANDOM
[01:17:39] <earnestly> I figured it was safe(r) just because it had none of these features
[01:20:13] <earnestly> seedval = evalexp (value, 0, &expok);
[01:20:30] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[01:22:16] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[01:24:42] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:e01b:541f:aed7:7e2d)
[01:26:05] *** Joins: alguien (~alguien@user/alguien)
[01:27:55] <knstn> 22:59 < anddam> howdy, odd question but having to get the first n chars of a string of fixed length N in POSIX shell, should I be using cut command or should I use suffix pattern removal ${foo#????}  with N-n question marks? ---- I would suggest: echo ${string: -N:n}
[01:28:09] <greycat> knstn: "in POSIX shell"
[01:30:59] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:31:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:32:09] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:33:42] *** Lord_of_Life_ is now known as Lord_of_Life
[01:34:08] *** Joins: JarbonFeh (~JarbonFeh@41.225.171.23)
[01:36:50] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.2.1)
[01:39:26] *** Quits: blingrang (~blingrang@user/blingrang) (Ping timeout: 260 seconds)
[01:40:54] *** Quits: drd (~drd@93-42-69-35.ip85.fastwebnet.it) (Ping timeout: 268 seconds)
[01:42:26] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:e01b:541f:aed7:7e2d) (Quit: Textual IRC Client: www.textualapp.com)
[01:48:16] *** Joins: semeion (~semeion@user/semeion)
[01:48:41] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[01:51:01] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571105003c821a729f15ae5f.dip0.t-ipconnect.de)
[01:54:14] <cryptonector> I couldn't find a decent long options getopts for bash, so I wrote my own: https://gist.github.com/nicowilliams/f3fe2b10b380aecdef403acb246dced2
[01:55:47] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[01:56:03] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:56:39] <earnestly> knstn: It'd be nice if posix sh had string slicing
[01:58:39] <earnestly> cryptonector: Does this work: -si foo
[01:59:42] <earnestly> (From your example)
[02:00:03] <cryptonector> should!
[02:00:28] <earnestly> And to be evil, do optional options work?  --foo[=bar]
[02:01:16] <cryptonector> does!
[02:01:59] <earnestly> How does it handle --foo=bar --baz where -foo takes an optional argument, why wouldn't --foo --bar just look like --foo=--bar ?
[02:02:00] <cryptonector> optional... good question -- if you declare a long option as needing an argument, then it's required
[02:02:27] <earnestly> getopts_long has optional options, and it is pretty insane imo
[02:02:40] <cryptonector> so if you say --foo requires an argument and you say --foo --bar, then --bar is the OPTARG for --foo
[02:02:57] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:03:05] <cryptonector> earnestly: optional options sounds maddening
[02:03:17] <earnestly> cryptonector: https://mywiki.wooledge.org/ComplexOptionParsing#getopts_long_option_trickery
[02:03:24] <earnestly> Yeah it is
[02:04:00] <cryptonector> I had never noticed that has_arg == 2 -> optional option
[02:04:19] <cryptonector> I... would refuse to implement such nonsense
[02:04:42] <earnestly> Good lol
[02:04:57] <earnestly> cryptonector: GNU sed -i is such an example, btw
[02:05:18] <cryptonector> lol @ getopt_long()
[02:05:23] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[02:05:27] <cryptonector> eek
[02:05:43] <cryptonector> yes, I see that
[02:06:18] <cryptonector> I guess what I would be willing to do is to say that if you want an optional option argument, then you must use --long[=arg]
[02:06:24] <cryptonector> I'd be happy to implement that
[02:06:58] <cryptonector> I don't want to implement logic that says the first thing after --whatever-long is the optional arg unless it starts with -, because that's just nuts
[02:06:58] <earnestly> When it comes to option parsing I think the two reasonable ones are getopts (plan9 implementation is ridiculously simple: https://0x0.st/zltK.c ) and Google's options, which are basically just -words
[02:07:16] <cryptonector> oh there are alternatives
[02:07:26] <cryptonector> Heimdal has a getarg() thing
[02:07:30] <cryptonector> it works well enough
[02:07:55] <earnestly> Because -words can be maintainable, getopt_long tries to support both the terse short opts and -words but the result is silly complexity
[02:07:55] <cryptonector> it will even generate stub man pages
[02:08:16] <cryptonector> right, you have to stop the madness somewhere
[02:08:16] <earnestly> (Like curl's author, I do think man pages have to be written, not generated)
[02:08:44] <cryptonector> of course; the stub it generates is just useful as a starting point
[02:08:51] <cryptonector> you have to do the rest, and it's not nothing
[02:08:54] <earnestly> https://daniel.haxx.se/blog/2021/09/04/making-world-class-docs-takes-effort/ basically
[02:09:02] <earnestly> Michael Kerrisk also thinks the same
[02:09:13] <cryptonector> I'm not sure I'd call the curl man page a world class doc
[02:09:19] <earnestly> They are very, very good
[02:09:25] <cryptonector> but mostly that would be because curl itself is not a world-class UI
[02:09:39] <earnestly> Not only does it explain what each flag does but it even includes the version those flags were added
[02:09:43] <earnestly> Which few tools do
[02:09:57] <earnestly> (Actually I don't know of any other tool that does this)
[02:10:07] <cryptonector> I also think curl tries to do too much (speaking more than HTTP)
[02:10:26] <cryptonector> back to bash...
[02:10:47] <earnestly> Same with ffmpeg, the scope will be complex, but the documentation is still good with that taken into account
[02:10:50] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[02:10:52] *** Joins: fullstop (~fullstop@user/fullstop)
[02:10:53] <cryptonector> I've a use case where I'd like really tight control over commands being executed, and I landed at: just use rbash
[02:11:41] <fullstop> Hi all. If I have a script which sets environment variables, why does it work fine with ". /tmp/env.sh" but not with ". /tmp/env.sh | logger -t test" ?
[02:11:45] <fullstop> What's magical about the pipe?
[02:12:12] <earnestly> fullstop: They run in parallel
[02:13:21] <cryptonector> and in different processes
[02:13:23] <fullstop> earnestly: Not quite following.  Does the pipe cause an implicit fork?
[02:13:27] <cryptonector> yes
[02:13:35] <fullstop> Understood.  Bummer.
[02:13:36] <earnestly> fullstop: A subshell
[02:13:49] <cryptonector> `(. /tmp/env.sh; logger -t test)` is what you want
[02:13:52] <earnestly> fullstop: It's not "do this then that", an entire pipeline executes and runs in parallel
[02:13:55] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[02:14:19] <earnestly> Or without the subshell if you want the stuff from env.sh to stick around
[02:14:33] <fullstop> I want the env.sh stuff to stick around
[02:14:56] <fullstop> .. and the output to be written to syslog.  :-)
[02:15:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[02:15:09] <earnestly> Then just . /tmp/env.sh; logger -t test
[02:15:16] <earnestly> Where ; can be a newline, etc.
[02:15:30] <fullstop> I don't think that's quite the same.
[02:16:20] <earnestly> fullstop: So your env.sh (don't call bash scripts .sh fwiw) is not just environments, it also prints things, and you want those things printed to syslog (or journald, whatever)?
[02:16:30] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[02:16:43] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[02:16:46] <fullstop> correct
[02:17:13] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:17:27] <cryptonector> ah, well, that's tricky -- you want logger to see the env var settings from your env.sh but also its output...  I don't think you can do that except by sourcing it twice
[02:17:36] *** Joins: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com)
[02:17:54] <cryptonector> or saving its output
[02:18:03] <fullstop> Right, that's what I was afraid of.  For some reason I thought that it would still source.
[02:18:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[02:18:22] <fullstop> I can change things, but wanted to understand it a bit more.
[02:18:53] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:19:11] <earnestly> fullstop: . /tmp/env.sh > >(logger -t test)
[02:19:32] <fullstop> I'll give it a shot.
[02:19:35] *** sublim20 is now known as sublim21
[02:19:38] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:20:27] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[02:22:06] *** Quits: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com) (Remote host closed the connection)
[02:24:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[02:25:24] <earnestly> fullstop: exec 3> >(logger -t test); { . /tmp/env.sh; } >&3; exec 3>&- # for another sort of example
[02:25:44] <earnestly> Not sure if the {  } are needed here
[02:25:48] *** Quits: peregrinator (uid441290@id-441290.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:26:10] <earnestly> But it won't create a subshell so you don't lose the variables
[02:26:30] <kurahaupo> earnestly: yes, the body of a function has to be a compound block, not a simple command
[02:26:34] <earnestly> If you need to use pipes then you have to use: cmd | { ...; whatever; }
[02:26:51] <anddam> apropos the "don't use ls output" thing, what if I have a list of file named foo-bar-XX.baz and I only need the one with the most recently changed one?
[02:27:07] <anddam> I mean $(ls -1t) would come to my mind
[02:27:35] <earnestly> anddam: Just do it properly and accept the suffering
[02:27:43] *** Quits: richardm75_ (~richardm7@2600:8801:c507:2900:9c3:8ce4:8f5b:95fc) (Quit: Leaving)
[02:28:08] <earnestly> anddam: One of these http://mywiki.wooledge.org/BashFAQ/003
[02:28:24] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:28:36] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[02:29:47] <earnestly> kurahaupo: What is that in relation to?
[02:29:53] <kurahaupo> anddam: if you know for sure that the names are "safe" (and nobody else can create files in that directory) then sure. But if you have that much control, you might as well choose the naming convention so that the filename includes its date
[02:30:03] <anddam> earnestly: oh the pain-joy
[02:30:12] <earnestly> anddam: Also what kurahaupo wrote, is what I'd suggest
[02:30:33] <anddam> kurahaupo: I am building packages with part of the commit hash for identification
[02:30:39] <earnestly> anddam: E.g. this is why you have current symlinks
[02:31:01] <anddam> mm but then I need to copy over network "current" while retaining its name
[02:31:23] <anddam> I might just rsync the whole shebang and let it deal with skipping remotely existing files
[02:31:32] <anddam> he's good at it
[02:31:37] <earnestly> This is where none of what you write makes sense because crystal balls and stuff
[02:31:46] <earnestly> But that sounds good
[02:33:10] *** Joins: n4dir (~user@i577BC80C.versanet.de)
[02:33:11] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:33:24] <cryptonector> earnestly: it was easy to add optional arguments: I just had to delete code
[02:33:27] <cryptonector> https://gist.github.com/nicowilliams/f3fe2b10b380aecdef403acb246dced2
[02:33:38] *** Joins: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de)
[02:34:09] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 268 seconds)
[02:34:10] *** Quits: knstn (~knstn@ppp-94-66-57-40.home.otenet.gr) (Quit: leaving)
[02:34:22] <cryptonector> https://gist.github.com/nicowilliams/f3fe2b10b380aecdef403acb246dced2/revisions
[02:35:04] <earnestly> cryptonector: How does it distinguish between --foo --bar and --foo=--bar?
[02:35:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[02:35:23] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[02:35:35] <earnestly> (The optional = is what really seems to make optional arguments quite confusing to me)
[02:36:06] *** Joins: kuidos23 (~kuidos26@31-10-151-6.cgn.dynamic.upc.ch)
[02:36:51] <phy1729> --foo --bar where --foo takes an optional argument is   foo=<present but null> bar=true  and --foo=--bar is foo="--bar"
[02:37:02] <phy1729> optional optargs are terrible things
[02:37:36] <phy1729> For short flags you have to  -fbar not -f bar
[02:37:56] <cryptonector> earnestly: it doesn't.  if you say --foo --bar you get what you deserve
[02:37:57] <earnestly> cryptonector: But I do like that your implemention uses getopts to handle shortopts.  Keep in mind that OPTIND=1 has special meaning (you don't do this, just fwiw)
[02:38:38] <earnestly> cryptonector: phy1729 notes that --foo --bar where --foo[=opt] is --foo and --bar.  --foo=--bar is accepted as optional value
[02:38:47] <earnestly> So the optional = disappears for optional argument arguments
[02:38:49] <earnestly> lol
[02:39:12] <cryptonector> with my scheme you get optional option arguments IFF you're smart enough to use =
[02:39:35] <earnestly> It's like a captcha for command-line utils
[02:39:42] <cryptonector> I'm not a mind reader, and I don't write mind reading code
[02:40:59] <cryptonector> but with just a tiny deletion of code I got you optional option arguments w/o ambiguity or mind reading, and it only costs you a little bit of intent denotation
[02:41:05] <cryptonector> seems like a fair trade
[02:41:27] <cryptonector> and yes, I used getopts to handle short options because why write that code when it exists
[02:41:48] <earnestly> cryptonector: You could try implement GNU's system, if you want, but nice
[02:41:54] *** xv8 is now known as XV8
[02:42:09] <cryptonector> I could also choose to live my life
[02:42:41] <earnestly> You wrote this lol
[02:42:50] <cryptonector> well, yes, but because I needed it
[02:42:59] <cryptonector> I don't need the rest of GNU
[02:43:02] <earnestly> It's not too bad, GNU's method is basically what you have
[02:43:12] <cryptonector> but nutty
[02:43:52] <cryptonector> and, importantly, this didn't exist for shell scripts
[02:43:58] <earnestly> Without the warning stickers
[02:49:22] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[02:50:11] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 268 seconds)
[02:50:48] *** Quits: kuidos23 (~kuidos26@31-10-151-6.cgn.dynamic.upc.ch) (Ping timeout: 268 seconds)
[02:51:49] <anddam> earnestly: what? did you break the Palantir _again_??
[02:52:38] <earnestly> I need to read those books (again)
[02:54:14] <wizhurd> I pipe a url to wget ang want to dowlad it to a folder I do not know how to wrap it ' | wget -O ./$filename-dir' -dir in not part op the variable
[02:56:28] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[02:56:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:57:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:57:41] <akoana> cryptonector: nice work, you could simplify your last   if ... then ... else ... fi in the getopts_long function just to    getopts "$optstr" "$optvar" "$@"
[02:58:23] <cryptonector> oh yes, indeed
[02:58:27] <cryptonector> akoana
[02:58:46] <cryptonector> I think I must have had some other code in one of those branches for a bit then deleted it and forgot
[02:59:12] <cryptonector> thank you for the review!
[02:59:16] <akoana> :)
[02:59:20] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[03:00:03] *** Quits: humky (~humky@user/humky) (Ping timeout: 268 seconds)
[03:00:19] *** Joins: humky (~humky@user/humky)
[03:01:51] <cryptonector> it could probably do with a check of $# as well, and a usage message
[03:02:57] <cryptonector> and I've a typo in the handling of $3
[03:09:12] <anddam> earnestly: yep
[03:11:09] *** Quits: jkwnki (~jkwnki@p2e5791bd.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:13:15] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[03:14:01] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 268 seconds)
[03:17:03] *** Joins: totenkoph (~scythe@user/totenkoph)
[03:20:22] <wizhurd> can we pipe a url to wget?
[03:21:01] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 268 seconds)
[03:21:31] *** Joins: reset (~reset@user/reset)
[03:23:07] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[03:24:28] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Ping timeout: 252 seconds)
[03:24:44] <llua> see it's man page
[03:24:57] <llua> or #wget
[03:25:00] *** Joins: kj (~kj@kj.aerisnetwork.net)
[03:26:31] <greycat> pipe sickness.  very contagious.
[03:26:31] <akoana> wizhurd: printf %s\\n the-url | wget -i -
[03:29:04] <akoana> wizhurd: man 1 wget: ... "-i  --input-file=file Read URLs from a local or external file.  If - is specified as file, URLs are read from the standard input." ...#
[03:30:03] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[03:32:25] <akoana> greycat: lol, "pipe sickness...", I must remember that
[03:34:21] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[03:35:09] <wizhurd> I've added wargs to convort stdin into argument
[03:35:14] <wizhurd> xargs
[03:36:11] <wizhurd> sorry for typo I've swiched to dvorak and I try to be quick
[03:40:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[03:40:23] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:43:22] *** Joins: tangy (~tangy@user/tangy)
[03:43:29] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:af60:3be7:3677:cfb7:cdf)
[03:44:44] *** Joins: cdown (~cdown@194.207.141.245)
[03:48:30] *** XV8 is now known as xv8
[03:49:42] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:49:55] *** Quits: supernovah (~supernova@mail.ijk.nz) (Ping timeout: 252 seconds)
[03:50:37] *** Joins: supernovah (~supernova@mail.ijk.nz)
[03:51:20] *** Joins: andril (~andril@2601:586:8400:e4::1007)
[03:51:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:51:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:55:20] *** Quits: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[03:56:42] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:58:12] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:af60:3be7:3677:cfb7:cdf) (Quit: Leaving)
[03:59:38] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[03:59:45] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:02:20] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[04:02:50] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 260 seconds)
[04:08:24] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:08:26] *** Quits: winstonsmith (~winstonsm@77.247.181.211) (Remote host closed the connection)
[04:08:49] *** Joins: winstonsmith (~winstonsm@109.201.152.161)
[04:09:09] *** Quits: darkxploit (~jay@32.209.19.50) (Quit: darkxploit)
[04:09:10] *** Quits: xberry (~LSD@2.lsd.systems) (Ping timeout: 252 seconds)
[04:11:02] *** Joins: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net)
[04:11:11] *** Quits: xx (~xx@user/xx) (Quit: xx)
[04:13:12] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:13:53] *** Joins: acidsys (~LSD@2.lsd.systems)
[04:14:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:14:50] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 260 seconds)
[04:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:15:43] *** Joins: moviuro_ (~moviuro@car.popho.be)
[04:16:15] *** Quits: moviuro (~moviuro@znc.popho.be) (Ping timeout: 260 seconds)
[04:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:23:54] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:23:55] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:24:15] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:24:56] *** Quits: andril (~andril@2601:586:8400:e4::1007) (Ping timeout: 268 seconds)
[04:25:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 245 seconds)
[04:25:56] *** scoobydoo_ is now known as scoobydoo
[04:26:07] *** Quits: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[04:30:05] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:30:06] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:30:26] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:30:27] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:31:08] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[04:32:26] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:32:27] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[04:32:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[04:32:48] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:32:48] *** scoobydoo_ is now known as scoobydoo
[04:32:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Excess Flood)
[04:33:30] *** xv8 is now known as XV8
[04:34:46] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:39:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[04:40:34] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 268 seconds)
[04:43:06] <wizhurd> when there is the ' char inside a regex into ' ' bracket doing \' should work right?
[04:43:13] <greycat> !'
[04:43:13] <greybot> EVERYTHING inside single quotes (') is taken literally by bash. If you want to embed a ' inside '...', write it as the four characters '\'' or use $'...' quoting instead.
[04:43:36] <wizhurd> nice
[04:43:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:44:43] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[04:45:50] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[04:46:38] <wizhurd> !;
[04:46:38] <greybot> The ";" character is used to separate between commands. It does the (almost) exact same thing that <ENTER> does in a shell or a newline in a script.
[04:56:30] *** Joins: andril (~andril@2601:586:8400:e4:6abc:4535:850:ceaa)
[04:59:28] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 268 seconds)
[05:01:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[05:02:09] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[05:04:21] *** Quits: alzgh (~alzgh@user/alzgh) (Quit: WeeChat 2.8)
[05:07:57] *** Quits: n4dir (~user@i577BC80C.versanet.de) (Remote host closed the connection)
[05:08:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:11:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:16:04] *** Quits: cdown (~cdown@194.207.141.245) (Remote host closed the connection)
[05:19:24] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:19:25] *** Quits: andril (~andril@2601:586:8400:e4:6abc:4535:850:ceaa) (Ping timeout: 268 seconds)
[05:20:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:27:27] *** Quits: suffer (znc@mutant.penguin.fyi) (Quit: ZNC - https://znc.in seek the truth or pay the price)
[05:27:36] <wizhurd> Why does grep '.z5\|.blorb' display .glorb files?
[05:27:41] <wizhurd> !.
[05:27:54] *** Joins: suffer (znc@mutant.penguin.fyi)
[05:27:57] <greycat> What that does will depend on which grep you're using.
[05:27:58] <wizhurd> .gblorb I meant
[05:28:29] <greycat> In standard unix grep, that should match a literal pipeline character.  But in GNU grep, \| means "break BRE compatibility and pretend this is an ERE just for one character, and do a union".
[05:28:42] <greycat> also, applying grep to a stream of filenames is idiotic
[05:29:18] <wizhurd> they are strings in .html
[05:29:50] <greycat> well, grep -E '.z5|.blorb' will match any string that contains "blorb" not at the start of a line.
[05:29:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[05:30:07] <greycat> and GNUgrep '.z5\|.blorb' is the same as grep -E '.z5|.blorb'
[05:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:30] <greycat> did you think the . would only match literal dots?
[05:30:36] <wizhurd> yes
[05:30:46] <wizhurd> !'
[05:30:47] <greybot> EVERYTHING inside single quotes (') is taken literally by bash. If you want to embed a ' inside '...', write it as the four characters '\'' or use $'...' quoting instead.
[05:30:48] <greycat> . is a single-character wildcard in BRE or ERE
[05:30:54] <wizhurd> that's what it say
[05:31:04] <greycat> # echo foo | grep f.o
[05:31:06] <shbot> greycat: foo
[05:31:13] <wizhurd> can I escape it with \
[05:31:16] <greycat> yes
[05:31:58] <wizhurd> nice thank you and good job on the bot it fixed my problem easily earlier
[05:34:34] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Quit: WeeChat 2.8)
[05:34:53] *** Joins: vlm (~vlm@user/vlm)
[05:35:44] <wizhurd> greycat: should people say thank you on IRC or is it taking useless screen space?
[05:36:41] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[05:41:08] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[05:41:53] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:44:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[05:47:10] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[05:48:01] <wizhurd> I ment precious screen space uselessly and I'm serious
[05:52:28] <greycat> Thanks are good.  Not required, but good.
[05:54:34] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 268 seconds)
[05:55:22] <wizhurd> thanks
[05:59:29] *** Joins: docmax_ (~docmax@dynamic-077-008-245-099.77.8.pool.telefonica.de)
[06:01:35] *** Quits: docmax (~docmax@dynamic-077-000-086-210.77.0.pool.telefonica.de) (Ping timeout: 265 seconds)
[06:03:12] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:04:50] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 268 seconds)
[06:06:57] *** Quits: sublim21 (~sublim20@user/sublim20) (Quit: Leaving)
[06:09:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[06:14:50] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:14:57] <alguien> Hello. Why does ssh try to execute each of the ARGS elements here: ssh "$username@$remote" "bash -s" < "$SCRIPT" -- "${ARGS[@]}"
[06:16:03] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[06:16:05] *** Quits: birkoff (birkoff@user/birkoff) (Quit: ZNC 1.8.2 - https://znc.in)
[06:17:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:17:34] <alguien> Disambiguation: It executes the contents of the $SCRIPT file, but then tries to execute elements of ARGS as if each were a command
[06:18:58] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:19:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[06:20:41] <greycat> !faq cflags
[06:20:42] <greybot> https://mywiki.wooledge.org/BashFAQ/096 -- ssh eats my word boundaries!  I can't do ssh remotehost make CFLAGS="-g -O"!
[06:21:09] <e36freak> not sure if that's the problem. i mean it's *a* problem, but i don't see that causing that
[06:21:14] *** Quits: peterrooney (~peter@S0106589630ce41f9.gv.shawcable.net) (Quit: new kernel compiled - reboot)
[06:21:32] <greycat> Your command is exactly equivalent to:  ssh "$username@$remote" "bash -s" -- "${ARGS[@]}" < "$SCRIPT"
[06:21:34] <e36freak> with a new enough bash you can get around that with "${ARGS[@]@Q}"
[06:22:09] <e36freak> i'd probably write it as ssh "$username@$remote" "bash -s -- ${ARGS[*]@Q}" < "$SCRIPT"
[06:22:34] <greycat> And as the FAQ says, ssh user@host bash -s "arg one" "arg two"   is equivalent to   ssh user@host bash -s arg one arg two   because of how ssh works.
[06:24:37] <alguien> ARGS=("$(printf '%q\n' "${@:2}")");
[06:24:44] <alguien> FYI
[06:24:56] <alguien> oops, nvm the semicolon
[06:25:11] <e36freak> why even use an array then, you've bade a single string?
[06:25:24] <greycat> you can avoid the forks too
[06:25:26] <e36freak> oh no, you have newlines there
[06:25:29] <e36freak> that's why
[06:25:36] <e36freak> ssh sees bash -s -- arg1
[06:25:40] <e36freak> then arg2 on a new line
[06:25:53] <e36freak> '%q ', not '%q\n'
[06:26:31] <alguien> guess i'll never get bash arrays then
[06:26:36] <alguien> how do i get an array?
[06:26:48] <e36freak> you actually don't want or need an array here
[06:26:50] <greycat> You don't WANT an array because ssh won't PASS an array.  It passes a single string.
[06:26:51] <e36freak> because of how ssh works
[06:27:20] <alguien> it'll pass a single string to what?
[06:27:27] <greycat> To the remote host's shell for re-parsing.
[06:27:36] <e36freak> ssh takes all the arguments and clobbers them together into a single string separated by spaces
[06:27:42] <e36freak> and then does what greycat said
[06:27:53] <greycat> !faq cflags
[06:27:53] <greybot> https://mywiki.wooledge.org/BashFAQ/096 -- ssh eats my word boundaries!  I can't do ssh remotehost make CFLAGS="-g -O"!
[06:28:10] <alguien> i was there already -_-
[06:28:28] <greycat> read it again, more slowly
[06:28:36] <e36freak> printf -v args '%q ' "${@:2}"; ssh "$username@$remote" "bash -s -- $args" < "$SCRIPT"
[06:30:03] *** Joins: coroner (~Jasper@ip70-190-125-167.ph.ph.cox.net)
[06:34:03] <alguien> e36freak, thanks. greycat you too, but I wish you didn't think I should get it from the link though
[06:35:10] <alguien> now i can sleep. Thank you again e36freak
[06:40:49] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[06:43:34] *** Quits: jos2 (~jos3@dyndsl-091-096-041-221.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[06:51:39] *** Joins: gnoo (~gnoo@user/gnoo)
[06:53:40] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[06:55:08] *** Joins: jos2 (~jos3@dyndsl-091-096-036-018.ewe-ip-backbone.de)
[07:00:11] *** XV8 is now known as xv8
[07:03:04] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:04:14] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 260 seconds)
[07:07:07] *** Quits: greknod2 (~grek@114-198-63-62.dyn.iinet.net.au) (Ping timeout: 268 seconds)
[07:11:26] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[07:12:38] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[07:13:52] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[07:13:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:14:05] *** Joins: igemnace (~ian@user/igemnace)
[07:15:24] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:18:01] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[07:24:15] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:24:20] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[07:33:37] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:33:51] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 268 seconds)
[07:35:41] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:54] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[07:37:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:27] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:44:15] *** Quits: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net) (Remote host closed the connection)
[07:48:30] *** Joins: greknod2 (~grek@114-198-44-89.dyn.iinet.net.au)
[07:50:55] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[07:51:18] *** birkoff is now known as Guest2026
[07:55:17] *** Quits: JarbonFeh (~JarbonFeh@41.225.171.23) (Remote host closed the connection)
[07:57:57] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[07:58:33] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:03:05] *** Joins: ferdna (~ferdna@user/ferdna)
[08:03:14] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 268 seconds)
[08:04:06] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.2)
[08:04:13] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[08:04:22] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:07:35] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[08:07:55] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:09:27] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[08:09:46] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[08:16:37] *** Quits: xiao (~xiao@37.165.80.162) (Remote host closed the connection)
[08:18:43] *** Joins: fdan (~fdan@192.146.154.3)
[08:23:24] *** Quits: xv8 (~xv8@2601:5cb:c001:50:1cc7:7365:d8fd:905d) (Quit: Konversation terminated!)
[08:26:46] *** Joins: peterrooney (~peter@S0106589630ce41f9.gv.shawcable.net)
[08:30:19] *** Quits: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:32:45] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:35:11] *** Joins: greywolf (~Greywolf@50.213.99.137)
[08:36:07] <greywolf> How do I get bash to quit sending ESC [ 2004 h and ESC [ 2004 l every time I hit return?  I'm on an actual wy60 terminal and this is a problem.
[08:36:56] <greywolf> Is this a .inputrc/readline setting or is there something bash itself is just doing?
[08:40:56] <greywolf> ( sorry -- ESC [ ? 2004 h / ESC [ ? 2004 l )
[08:42:18] *** Quits: timj (~timj@user/timj) (Ping timeout: 268 seconds)
[08:43:57] *** Joins: russw_ (~russw@bras-base-otwaon0150w-grc-05-184-147-145-168.dsl.bell.ca)
[08:44:17] *** Joins: litugou (~litugou@171.82.132.119)
[08:45:13] *** Quits: litugou (~litugou@171.82.132.119) (Read error: Connection reset by peer)
[08:46:53] *** Quits: russw (~russw@bras-base-otwaon0150w-grc-06-184-147-146-48.dsl.bell.ca) (Ping timeout: 265 seconds)
[08:48:15] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:50:02] *** Joins: vishal (~vishal@fedora/vishal)
[08:50:12] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:51:57] <llua> looks like bracketed-paste, readline toggles it with enable-bracketed-paste
[08:53:24] <llua> not sure what the bind command will have to look like
[08:54:44] *** Joins: xv8 (~xv8@2601:5cb:c001:50:b12c:b8d7:dc13:307b)
[08:55:55] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:57:11] *** Joins: timj (~timj@user/timj)
[09:01:54] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:07:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:13:09] *** Quits: peterrooney (~peter@S0106589630ce41f9.gv.shawcable.net) (Remote host closed the connection)
[09:18:52] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[09:19:10] *** xv8 is now known as XV8
[09:22:38] *** Joins: peregrinator (uid441290@id-441290.ilkley.irccloud.com)
[09:22:52] <greywolf> llua: Thank you -- that's at least a direction for me to look at!
[09:25:56] <greywolf> Can inputrc handle multiple tests on an $if?  i.e.,
[09:26:29] <greywolf> $if term != xterm || term != ansi || term != rxvt
[09:26:30] <greywolf> ??
[09:29:27] <llua> i don't even less about readline than i do bash
[09:29:35] <greywolf> :)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:55] *** Joins: litugou (~litugou@171.82.132.119)
[09:34:45] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Read error: Connection reset by peer)
[09:34:46] *** Quits: litugou (~litugou@171.82.132.119) (Read error: Connection reset by peer)
[09:35:02] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[09:40:15] *** Joins: litugou (~litugou@171.82.132.119)
[09:40:29] *** Quits: litugou (~litugou@171.82.132.119) (Read error: Connection reset by peer)
[09:41:57] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:43:47] <greywolf> llua: thank you for your help -- I have solved my problem!
[09:46:43] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374)
[09:49:31] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 268 seconds)
[09:51:19] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[09:55:04] *** Quits: LiftLeft (~LiftLeft@172.98.80.65) (Ping timeout: 268 seconds)
[09:58:17] <hendry> is there some dmenu like thing for macos? I want to prompt for a filename for a shell script
[10:01:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[10:01:49] *** Quits: greywolf (~Greywolf@50.213.99.137) (Quit: Soyuz laser!)
[10:02:49] <jetchisel> #macosx <-- that way
[10:04:05] <wizhurd> sed 's/^.\././ I am trying to get a file extension what am I doing wrong?
[10:04:29] * wizhurd solved
[10:06:30] <wizhurd> actialy, not: extention=$(echo "$gameFile" | sed 's/^.\./\./'
[10:07:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:07:11] <wizhurd> $gameFile is a string that end with .z5 i want to extract it
[10:07:13] <llua> extention=${gameFile%%*.}
[10:07:28] <llua> extention=${gameFile##*.}
[10:07:30] <llua> rather
[10:07:52] <llua> yeah, time to go to sleep.
[10:13:03] <wizhurd> oh wow thank youb
[10:17:10] <e36freak> !faq 100 > wizhurd
[10:17:10] <greybot> wizhurd: https://mywiki.wooledge.org/BashFAQ/100 -- How do I do string manipulations in bash?
[10:18:05] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:21:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[10:21:37] *** Joins: sdu (~doo@185.44.146.64)
[10:22:59] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[10:25:01] *** Joins: Mo (~Mo@dynamic-077-000-058-187.77.0.pool.telefonica.de)
[10:28:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 260 seconds)
[10:30:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[10:31:44] *** Joins: thiras (~thiras@user/thiras)
[10:35:43] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[10:39:09] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[10:39:17] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 245 seconds)
[10:39:52] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:40:56] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[10:43:44] *** Joins: earnestly (~earnest@user/earnestly)
[10:49:35] *** Joins: litugou (~litugou@171.82.132.119)
[10:50:03] *** Quits: litugou (~litugou@171.82.132.119) (Client Quit)
[10:50:42] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b)
[10:52:20] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b) (Client Quit)
[10:53:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[10:56:46] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[11:00:05] *** Joins: vysn (~vysn@user/vysn)
[11:00:40] *** Joins: tobybl (~tobybl@208.193.115.87.dyn.plus.net)
[11:00:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[11:04:05] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[11:04:31] *** Joins: b0b (~bob@user/b0b)
[11:04:36] *** Joins: b0o (~maddy@2600:2100:0:8010:7285:c2ff:feb7:f02b)
[11:07:32] *** Quits: zouhair (~zouhair@lnsm2-montreal02-142-117-230-145.internet.virginmobile.ca) (Ping timeout: 265 seconds)
[11:14:33] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[11:14:46] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[11:32:20] *** Quits: peregrinator (uid441290@id-441290.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:33:34] *** moviuro_ is now known as moviuro
[11:36:45] *** Quits: samnob (~samnob@user/samnob) (Read error: Connection reset by peer)
[11:37:19] *** Joins: samnob (~samnob@user/samnob)
[11:38:23] *** Joins: mihael (~mihael@ec2-13-251-247-159.ap-southeast-1.compute.amazonaws.com)
[11:40:06] *** Quits: samnob (~samnob@user/samnob) (Read error: Connection reset by peer)
[11:40:27] *** Joins: samnob (~samnob@user/samnob)
[11:40:45] *** Joins: lavaball (~Melissa@31.204.155.215)
[11:42:18] *** Joins: adac (~adac@clnet-b03-098.ikbnet.co.at)
[11:45:14] *** Joins: brelod (~me@90.244.150.142)
[11:46:31] *** Joins: engblom (~foo@user/engblom)
[11:47:17] *** Quits: yetoo (~yetoo@user/yetoo) (Ping timeout: 252 seconds)
[11:48:30] <engblom> I am looking for a good way to resolv a hostname. I could use "nslookup hostname" and then with help of tools like grep, tail and cut get it, but is there a better way?
[11:51:00] <igemnace> engblom: host
[11:53:08] <engblom> igemnace: Would it not also require some mangling before I have the result?
[11:53:26] <igemnace> engblom: oops, hold on, i thought this was a distro channel and not #bash. i don't know if there's one without extraneous input
[11:53:34] <jelly> engblom, dig +short name QUERYTYPE, eg. dig +short example.org AAAA
[11:53:54] <engblom> Now I do "nslookup hostname |grep Address |tail -1 |cut -d\  -f 2"
[11:54:25] <jelly> nslookup output varies across OSes
[11:54:28] <earnestly> If glibc: getent hosts
[11:54:42] <engblom> jelly: Thanks, that is what I need
[11:54:49] <jelly> didn't solaris also have getent?
[11:55:21] <earnestly> No idea
[11:55:36] <jelly> linux and gnu people have reimplemented only the best features.  and PAM for some reason.
[11:58:07] *** docmax_ is now known as docmax
[11:58:14] <jelly> engblom, if you omit querytype you might get either an A or an AAAA.  if you need reverse lookup, -x is helpful.  dig +short -x 1.1.1.1 PTR
[11:58:32] *** Joins: fdan (~fdan@192.146.154.3)
[12:00:57] <jelly> engblom, you may still get multiple results in some cases, account for that or pick one with ... | head -n1 or ... | tail -n1
[12:05:28] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[12:07:31] *** Joins: rendar (~rendar@user/rendar)
[12:13:21] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[12:13:48] *** Joins: shad (~shad@user/shad)
[12:15:55] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[12:16:26] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:16:32] *** Joins: UnnamedBeer (~UnnamedBe@225.red-79-152-222.dynamicip.rima-tde.net)
[12:17:33] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[12:24:34] *** Quits: mihael (~mihael@ec2-13-251-247-159.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[12:26:27] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[12:26:47] *** Joins: vysn (~vysn@user/vysn)
[12:27:51] *** Joins: mihael (~mihael@ec2-13-251-247-159.ap-southeast-1.compute.amazonaws.com)
[12:27:53] *** Joins: alguien (~alguien@user/alguien)
[12:30:44] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[12:33:50] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:37:04] *** Joins: sQVe (~sQVe@user/sqve)
[12:40:52] *** Joins: xx (~xx@user/xx)
[12:41:34] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 268 seconds)
[12:41:38] *** Joins: Everything (~Everythin@37.115.210.35)
[12:44:17] *** Joins: Milos (~Milos@user/milos)
[12:52:03] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 268 seconds)
[12:55:42] *** Joins: Bhavuk (~BTaneja@103.132.28.33)
[12:56:09] *** Joins: Milos (~Milos@user/milos)
[12:59:24] *** Quits: Milos (~Milos@user/milos) (Client Quit)
[12:59:40] *** Joins: Milos (~Milos@user/milos)
[13:00:04] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:01:29] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[13:02:54] *** Joins: chomwitt (~chomwitt@ppp-94-67-221-96.home.otenet.gr)
[13:06:27] <funabashi> Hi I have ip addreses ranges which loooks like 10.10.10.10-10.10.10.20. Anyone know any smart solution for print all addresses between these?
[13:11:34] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:13:31] <geirha> write or find conversion methods that convert from a.b.c.d to number and back again
[13:13:49] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:15:24] <funabashi> the file with ip address looks like  https://pastebin.com/EiuXdr1E
[13:15:24] <pasteban> Paste is available without ads on https://pastebin.com/raw/EiuXdr1E
[13:16:04] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:19:01] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:19:17] *** Joins: cdown (~cdown@194.207.141.245)
[13:19:54] <geirha> # x=168430100; printf '%s\n' "$((x >> 24)).$((x >> 16 & 255)).$((x >> 8 & 255)).$((x & 255))"
[13:19:55] <shbot> geirha: 10.10.10.20
[13:20:19] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:22:35] *** Joins: shad (~shad@user/shad)
[13:22:47] *** Joins: Atque (~Atque@user/atque)
[13:23:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:25:59] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[13:26:27] *** Joins: Atque (~Atque@user/atque)
[13:28:26] *** Joins: thiras (~thiras@user/thiras)
[13:28:38] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[13:28:48] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:29:22] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:30:09] *** Quits: s0dyy[m] (~s0dymatri@2001:470:69fc:105::d0f4) (Quit: You have been kicked for being idle)
[13:32:42] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Client Quit)
[13:33:09] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[13:33:20] <Soliton> # IFS=. read -r a b c d <<< "10.10.10.20"; printf '%s\n' "$((a << 24 | b << 16 | c << 8 | d))"
[13:33:21] <shbot> Soliton: 168430100
[13:33:59] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[13:35:00] <dionys> !exit
[13:35:00] <greybot> Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit integer, 0 to 255 inclusive, with 0 meaning "success" and 1-255 meaning "failure". A script returns the exit status of the last command executed, unless you call "exit" with an argument. Functions "return" an 8-bit status code also.
[13:38:25] *** Joins: LiENUX (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[13:39:25] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Ping timeout: 252 seconds)
[13:40:26] <funabashi> grr dont get it to work
[13:42:28] <Soliton> process each line: 1) extract the range 2) convert to int 3) loop from int1 to int2 4) convert back to ip
[13:43:51] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[13:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[13:54:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:57:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[13:57:46] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-8.dyn.luxfibre.pt.lu)
[13:57:55] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[13:58:20] *** XV8 is now known as xv8
[13:59:34] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 260 seconds)
[14:00:10] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:02:07] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[14:04:13] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:06:14] *** Joins: mongy (~mongy@user/mongy)
[14:07:41] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 268 seconds)
[14:08:25] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:08:40] <LuksNuke> how much should I refuse to use bash for html parsing?
[14:08:50] <LuksNuke> xmllint works very well imo
[14:09:05] <Soliton> !html
[14:09:05] <greybot> You can't parse tag-based languages like HTML or XML using bash, grep, sed, cut, etc. See http://mywiki.wooledge.org/BashFAQ/113 instead.
[14:09:22] <LuksNuke> whats about xmllint --xpath ?
[14:09:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[14:09:40] *** Quits: engblom (~foo@user/engblom) (Ping timeout: 252 seconds)
[14:09:42] <LuksNuke> sure it ever prints smth to stderr for some sites
[14:10:13] <LuksNuke> however if the command u're using for html parsing behaves correctly...
[14:10:24] <LuksNuke> ...you still could invoke it via bash without any regret
[14:10:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 252 seconds)
[14:11:00] <LuksNuke> wait lemme click on that link first
[14:11:30] *** Joins: engblom (~foo@83-148-209-38.dynamic.lounea.fi)
[14:12:08] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[14:14:35] <LuksNuke> so if u're using the right tool at least
[14:16:31] *** Joins: shad (~shad@user/shad)
[14:17:28] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[14:18:19] *** Joins: cdown (~cdown@194.207.141.245)
[14:18:37] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[14:18:55] *** Joins: xcm (~xcm@user/xcm)
[14:23:41] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:24:56] <Krail> is there a bot trigger for arrays?
[14:24:59] <Krail> !arrays
[14:24:59] <greybot> An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). http://mywiki.wooledge.org/BashSheet#Arrays http://mywiki.wooledge.org/BashFAQ/005 http://wiki.bash-hackers.org/syntax/arrays
[14:25:03] <Krail> ty
[14:25:12] <geirha> yes
[14:26:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 260 seconds)
[14:27:54] <alguien> How would you get a major version, from stuff like 13, 13.4, 13.4-alpine, and 13-alpine? So... just the longest prefix consisting of numbers
[14:28:52] *** Quits: sQVe (~sQVe@user/sqve) (Ping timeout: 268 seconds)
[14:29:39] *** Quits: cdown (~cdown@194.207.141.245) (Remote host closed the connection)
[14:29:53] *** Joins: cdown (~cdown@194.207.141.245)
[14:30:21] <geirha> "${version%%[.-]*}"
[14:30:22] <Soliton> [[ $version =~ ^[0-9]* ]]
[14:30:37] <geirha> or "${version%%[!0-9]*}"
[14:31:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[14:33:36] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[14:37:13] *** Quits: engblom (~foo@83-148-209-38.dynamic.lounea.fi) (Read error: Connection reset by peer)
[14:38:16] *** Joins: legola (~legola@46.235.100.27)
[14:38:17] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:39:10] <jetchisel> # version=13-alpine; echo "${version%%[.-]*}"
[14:39:11] <shbot> jetchisel: 13
[14:40:29] *** Joins: engblom (~foo@83-148-209-38.dynamic.lounea.fi)
[14:43:27] *** Joins: LuksNuke_ (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[14:45:31] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-8.dyn.luxfibre.pt.lu) (Ping timeout: 268 seconds)
[14:46:09] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[14:46:26] *** Quits: mihael (~mihael@ec2-13-251-247-159.ap-southeast-1.compute.amazonaws.com) (Quit: Client closed)
[14:46:58] *** Joins: ninjabuf- (~ninjabuff@user/ninjabuffet)
[14:47:01] *** Quits: engblom (~foo@83-148-209-38.dynamic.lounea.fi) (Ping timeout: 252 seconds)
[14:47:33] *** Quits: ninjabuf- (~ninjabuff@user/ninjabuffet) (Remote host closed the connection)
[14:47:59] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 268 seconds)
[14:48:32] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[14:48:55] *** Joins: engblom (~foo@83-148-202-151.dynamic.lounea.fi)
[14:49:29] *** Joins: shad (~shad@user/shad)
[14:51:42] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Remote host closed the connection)
[14:52:57] *** Joins: mr-red (~drd@93.55.100.239)
[14:53:40] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[14:53:42] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[14:58:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 240 seconds)
[15:03:52] *** Joins: darkxploit (~jay@32.209.19.50)
[15:03:54] <LuksNuke_> would there be any problem using `ls -A1 | wc -l` ?
[15:04:08] <LuksNuke_> or should I really do $(( $(find .) - 1 )) ?
[15:04:21] <osse> !faq count
[15:04:22] <greybot> https://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files, or count how many there are?
[15:05:51] <alguien> geirha, thanks, i came up with the first one, but i'm really after the second one. Was one char off, you probably know which one
[15:08:14] *** Joins: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2)
[15:13:33] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 265 seconds)
[15:18:36] *** Joins: yetoo (~yetoo@user/yetoo)
[15:20:19] *** Quits: adac (~adac@clnet-b03-098.ikbnet.co.at) (Ping timeout: 265 seconds)
[15:20:41] *** Joins: adac (~adac@static.207.111.9.176.clients.your-server.de)
[15:21:31] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[15:21:50] *** Joins: yetoo_ (~yetoo@user/yetoo)
[15:22:01] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[15:22:01] <LuksNuke_> how to check in a bash script if stdin has some data to deliver?
[15:22:10] *** Quits: yetoo (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[15:22:59] <Soliton> read -t 0
[15:24:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[15:25:18] *** Joins: Strykar (~wakka@signald/Strykar)
[15:26:33] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[15:29:14] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:29:18] *** Quits: yetoo_ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[15:29:27] *** Joins: yetoo__ (~yetoo@user/yetoo)
[15:30:57] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[15:31:09] <funabashi> I have a file which looks like 10.10.10.{10..20}. but if i do for i in `cat file` ; do echo $i;done it doesnt print all ip adresses. what do i do wrong?
[15:31:45] <Soliton> !drlwf
[15:31:45] <greybot> https://mywiki.wooledge.org/DontReadLinesWithFor ... "for" is for iterating arguments/arrays, not strings. Never do: for x in $(cat file), or for x in $var; instead, use a glob (*.txt), an array ("${hosts[@]}") or a while-read loop. See also https://mywiki.wooledge.org/BashPitfalls#pf1
[15:32:34] <Soliton> while IFS=. read -r a b c d; do ...
[15:32:36] *** Joins: WinterStar (~IceLight@user/icelight)
[15:32:40] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[15:32:40] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:33:00] *** Quits: mr-red (~drd@93.55.100.239) (Ping timeout: 268 seconds)
[15:33:52] <funabashi> :/
[15:33:55] <Soliton> do you mean the curly braces are literally in the file?
[15:34:08] *** Joins: thiras (~thiras@user/thiras)
[15:34:09] <funabashi> Soliton: yep
[15:34:33] <Soliton> so you had a sane format before and now you have pseudo shell code?
[15:34:51] <Soliton> i guess you want to make it harder on yourself.
[15:35:02] <funabashi> i did it manually yes
[15:36:24] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:36:59] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Remote host closed the connection)
[15:37:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[15:38:30] *** Quits: yetoo__ (~yetoo@user/yetoo) (Remote host closed the connection)
[15:38:49] *** Joins: yetoo__ (~yetoo@user/yetoo)
[15:39:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[15:42:14] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 260 seconds)
[15:43:34] <funabashi> Soliton: any idea?
[15:44:16] <Soliton> why not use the sane format you already had?
[15:44:57] <funabashi> was to diffecult for me to manage
[15:45:29] *** Quits: wwilliam (~Wiilliam@user/wwilliam) (Quit: Konversation terminated!)
[15:46:24] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[15:47:07] <Soliton> so instead of asking follow up questions you came up with a more difficult format.
[15:47:56] <Soliton> the previous format could trivially parsed with: IFS=.- read -r a1 b1 c1 d1 a2 b2 c2 d2
[15:48:47] <Soliton> the new format i guess suggests you want to use eval or shell injection or something crazy.
[15:48:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:49:08] *** Joins: seninha (~seninha@user/seninha)
[15:53:27] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[15:53:38] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[15:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[15:55:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[15:55:53] <funabashi> not easy for a beginner
[15:57:55] <Soliton> i have no clue what the goal is but if you want a list of ip addresses in a shell script either use a simple to parse format or make the config file a shell script and source it.
[15:58:53] <Soliton> naturally there is a big difference in what can go wrong between writing a shell config and plain text.
[15:59:15] <funabashi> i just want a text file with plain ip addressses
[16:00:13] <Soliton> it sounded like you want ranges but ok even easier. what is even the issue?
[16:02:00] *** Joins: motherr (~motherr@user/motherr)
[16:02:47] <grondilu> how can I get all the elements of an array but the last n?  Please don't tell me it's ${a[@]::${#a[@]}-n}
[16:03:32] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[16:03:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[16:03:42] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[16:03:54] <Soliton> ok.
[16:06:26] <funabashi> the file with ip address looks like  https://pastebin.com/EiuXdr1E
[16:06:26] <pasteban> Paste is available without ads on https://pastebin.com/raw/EiuXdr1E
[16:06:36] <funabashi> and i want to print out all the addreses
[16:09:18] *** Joins: viv (~viver@2a02:908:121:8b20:682f:2a4:3ab6:a1a6)
[16:09:32] <Soliton> while IFS=.- read -r a1 b1 c1 d1 a2 b2 c2 d2; do i1=$((a1 << 24 | b1 << 16 | c1 << 8 | d1)); if [[ $a2 ]]; then i2=$((a2 << 24 | b2 << 16 | c2 << 8 | d2)); else i2=$i1; fi; for ((i=i1; i<=i2; ++i)); do printf '%d.%d.%d.%d\n' "$((i >> 24))" "$((i >> 16 & 255))" "$((i >> 8 & 255))" "$((i & 255))"; done; done <<< $'10.10.10.10\n20.20.20.5-20.20.20.6'
[16:09:37] <Soliton> # while IFS=.- read -r a1 b1 c1 d1 a2 b2 c2 d2; do i1=$((a1 << 24 | b1 << 16 | c1 << 8 | d1)); if [[ $a2 ]]; then i2=$((a2 << 24 | b2 << 16 | c2 << 8 | d2)); else i2=$i1; fi; for ((i=i1; i<=i2; ++i)); do printf '%d.%d.%d.%d\n' "$((i >> 24))" "$((i >> 16 & 255))" "$((i >> 8 & 255))" "$((i & 255))"; done; done <<< $'10.10.10.10\n20.20.20.5-20.20.20.6'
[16:09:39] <shbot> Soliton: 10.10.10.10
[16:09:39] <shbot> Soliton: 20.20.20.5
[16:09:39] <shbot> Soliton: 20.20.20.6
[16:10:24] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[16:10:38] *** Joins: fuzzybear3965 (~fuzzybear@2a03:7380:2102:a812:198a:6053:695e:e665)
[16:11:00] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:14:06] <viv> Hey, what does [ -e "$file" ] || continue ? this is from https://mywiki.wooledge.org/BashPitfalls#for_f_in_.24.28ls_.2A.mp3.29
[16:14:24] <geirha> "$file" shall exist, else continue
[16:14:32] <fuzzybear3965> I have a process tree of unknown depth. I want to `lsof` on a "parent" process and see open files for *all* descendants (children, grandchildren, etc.).
[16:14:49] <fuzzybear3965> Is there a good solution besides a recursive script that I write myself to enumerate all descendants and then aggregate all open files from each one?
[16:14:50] <fuzzybear3965>  Ideally, the solution would be atomic (evaluated at same point in time for the set of all PIDs in that process tree).
[16:15:41] <geirha> viv: it's for the case where the glob doesn't match any files, in which case it will iterate once with file variable being the non-existent file "./*.mp3".
[16:16:11] <viv> ok thanks
[16:16:11] <alguien> cmd "$ARG" <- is there a way to leave out ARG if it's an empty string or unset (either works for me), but so that the check happens inline (there's a lot around "$ARG" irl that i don't want to repeat in an else branch)?
[16:16:23] <Soliton> fuzzybear3965: probably have to implement yourself. i doubt lsof does that on its own.
[16:16:31] <fuzzybear3965> :(  Noooo
[16:16:39] <geirha> cmd ${ARG:+"$ARG"}
[16:17:13] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 252 seconds)
[16:17:13] * alguien squints
[16:17:21] *** Joins: shad (~shad@user/shad)
[16:17:33] <geirha> !:+
[16:17:33] <greybot> ${parameter:+word} Use Alternate Value. If parameter is null or unset, nothing is substituted, otherwise the expansion of word is substituted.
[16:17:42] <alguien> but that's the opposite of what i want
[16:17:50] <Soliton> how so?
[16:17:59] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[16:18:19] *** Joins: yetoo__ (~yetoo@user/yetoo)
[16:18:30] <alguien> i want nothing if the string is empty, this seems to default to an empty string (idk why $ARG is in there if) if ARG is unset
[16:18:44] <Soliton> so you didn't even test it.
[16:19:11] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:19:13] <alguien> no, i'm going off of what i think i know about default args, and what you confirmed
[16:19:17] <Soliton> you ask for help and the answer does not seem to do what you want so the first thing is to complain.
[16:19:30] <alguien> Soliton, sure, to get an explanation
[16:19:35] <geirha> you're confusing :- and :+
[16:19:43] <Soliton> why not ask for an explanation?
[16:19:50] <alguien> It might as well work for me, but I would like to know how
[16:19:57] <Soliton> or even explain what in the given description you don't understand.
[16:20:11] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:20:14] <alguien> Soliton, I thought it more probably that geirha misunderstood me
[16:20:49] <alguien> *more probable
[16:20:53] <geirha> # printf '<%s>' a "$ARG" b
[16:20:55] <shbot> geirha: <a><><b>
[16:21:03] <geirha> # printf '<%s>' a ${ARG:+"$ARG"} b
[16:21:05] <shbot> geirha: <a><b>
[16:21:12] <geirha> # ARG=whatever; printf '<%s>' a ${ARG:+"$ARG"} b
[16:21:14] <shbot> geirha: <a><whatever><b>
[16:21:20] *** Quits: LuksNuke_ (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[16:22:06] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:22:15] <alguien> sorry geirha i misinterpreted your factoid, it does say that the thing does what i want
[16:22:23] <alguien> thanks
[16:22:48] <reddishblue[m]> Can I rename files as they come in the directory? Like while script is running,  I want to rename files which are being copied to a directory? Sort of dynamically renaming files??
[16:23:13] <Soliton> !upload
[16:23:13] <greybot> If you're asking "How can I find all the files that have been uploaded recently?" then you're probably in deep trouble. The server side can't tell when a file is finished uploading unless the client renames it or uploads an "all done" file afterward.
[16:23:22] <reddishblue[m]> My basic loop to rename files works only for first file and abandons the thing
[16:23:36] *** Joins: cdown (~cdown@194.207.141.245)
[16:23:51] <Soliton> how are the files copied? do you know when they are complete?
[16:24:47] <viv> geirha: thanks again for your answer and can you tell me for what -e stands for?
[16:25:02] <geirha> viv: run ''help test''
[16:25:33] *** Quits: useretail (~useretail@185.132.19.151) (Read error: Connection reset by peer)
[16:25:39] <geirha> test and [  is the same command (just that the [ command requires the last argument to be ])
[16:27:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[16:27:13] *** Joins: useretail (~useretail@185.132.19.151)
[16:27:32] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[16:27:37] <Soliton> in the pitfall it is used to make sure the glob expanded. the case where the -e test fails is when there was no match.
[16:27:39] <viv> ok, so it is the same thing as test from the gnu coreutilities if I understood it correctly?
[16:28:01] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:28:04] <Soliton> no, test is a builtin in bash.
[16:28:11] <Soliton> # type test
[16:28:12] <shbot> Soliton: test is a shell builtin
[16:28:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:28:34] <geirha> They're related though, but they'll have different sets of extensions
[16:28:45] <viv> oh ok
[16:28:47] <viv> thanks
[16:28:52] <viv> :D
[16:29:05] <geirha> bash's builtint test and [Â commands can test if a variable is set for instance, something the external test command naturally can't
[16:30:07] <reddishblue[m]> <Soliton> "how are the files copied? do you..." <- They are being sent over via bluetooth
[16:30:21] <reddishblue[m]> But the device is sending all files with same name
[16:30:45] <Soliton> sounds like the best you can do is wait a bit and hope for the best.
[16:31:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[16:32:31] <Soliton> though i guess there is a good chance that renaming on the same fs might not be an issue even in the middle of writing.
[16:33:28] *** Joins: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com)
[16:35:28] *** Quits: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com) (Client Quit)
[16:39:07] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[16:39:16] *** Quits: fuzzybear3965 (~fuzzybear@2a03:7380:2102:a812:198a:6053:695e:e665) (Quit: Client closed)
[16:40:13] *** Quits: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2) (Ping timeout: 268 seconds)
[16:40:13] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:40:26] *** Joins: yetoo_ (~yetoo@user/yetoo)
[16:41:42] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[16:43:22] *** Quits: yetoo__ (~yetoo@user/yetoo) (Ping timeout: 260 seconds)
[16:43:55] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 268 seconds)
[16:47:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:47:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[16:48:20] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[16:50:33] *** Joins: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net)
[16:50:44] *** Quits: engblom (~foo@83-148-202-151.dynamic.lounea.fi) (Read error: Connection reset by peer)
[16:50:57] *** Parts: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net) ( )
[16:53:03] *** Joins: kj (~kj@kj.aerisnetwork.net)
[16:54:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:55:01] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[16:55:01] *** Quits: timj (~timj@user/timj) (Ping timeout: 268 seconds)
[16:57:03] *** nyx_o is now known as nyx__o
[16:58:14] *** Joins: andre144k (~andre144k@213.221.88.82)
[16:58:24] <andre144k> hello all
[16:59:02] <osse> hello one
[16:59:09] *** andre144k is now known as andre144k_
[17:00:52] *** andre144k_ is now known as andre144k__
[17:01:39] *** andre144k__ is now known as andre144k
[17:02:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 260 seconds)
[17:04:41] *** Quits: Voxel (~Voxel@173-46-68-178.baltnet.ru) (Quit: Client closed)
[17:06:58] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[17:08:12] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:08:32] <useretail> how can i print hex 0x00 with printf?
[17:08:48] <Soliton> printf '\0'
[17:09:17] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Remote host closed the connection)
[17:09:36] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 268 seconds)
[17:09:39] <useretail> Soliton, and using arguments?
[17:09:39] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[17:09:55] <pj> useretail: what are you trying to do?
[17:10:00] <Soliton> what does that mean?
[17:10:27] <Soliton> you cannot have NUL in an argument if that's the question.
[17:10:28] <useretail> printf '%s' arg1 arg2
[17:10:47] <pj> and how is null incorporated into that?
[17:10:49] *** Joins: jinsun__ (~quassel@user/jinsun)
[17:10:50] <Soliton> printf '%s\0' arg1 arg2?
[17:11:01] <useretail> how about 0x01
[17:11:12] <Soliton> \1
[17:11:18] <djph> !wayrttd > useretail
[17:11:19] <greybot> useretail: What are you /REALLY/ trying to do!?
[17:12:01] <useretail> djph, print hex chars with printf
[17:12:06] <Soliton> if you get to actual hex numbers you can use \xNN.
[17:12:16] <useretail> *using arguments
[17:12:34] <Soliton> so the hex value is the argument?
[17:12:51] <useretail> i want to pass it as an argument
[17:13:03] <useretail> not sure if its possible though
[17:13:14] <Soliton> easier if you use printf format.
[17:13:21] <useretail> sure
[17:13:28] <pj> you can do: printf '%s' $'\x00'
[17:13:31] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[17:13:46] <Soliton> no.
[17:13:46] <pj> although I'm not entirely sure why you would want to do that.
[17:14:03] <Soliton> but you can do: printf %b '\x00'
[17:14:08] <pj> oh, right
[17:14:19] *** Joins: Atque (~Atque@user/atque)
[17:14:22] <pj> but still not entirely sure why you would want to do that.
[17:14:43] <Soliton> # arg='\x42'; printf %b "$arg"
[17:14:45] <shbot> Soliton: B
[17:15:41] *** jinsun__ is now known as jinsun
[17:15:47] <useretail> works like a charm, thanks
[17:16:05] <pj> or if you just want "42" in arg...
[17:16:09] <pj> # arg=42; printf '%b' '\x'"$arg"
[17:16:11] <shbot> pj: B
[17:18:29] *** Joins: engblom (~foo@83-148-202-151.dynamic.lounea.fi)
[17:18:38] <pj> # args=(42 43 44); printf '%b' "${args[@]/#/\\x}"
[17:18:39] <shbot> pj: BCD
[17:19:41] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[17:20:30] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[17:21:35] *** Quits: itu (~wp@wikipedia/itu) (Remote host closed the connection)
[17:22:26] *** Joins: besnn (~besnn@user/besnn)
[17:23:05] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[17:23:17] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: The Lounge - https://thelounge.chat)
[17:25:51] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[17:25:51] *** Quits: motherr (~motherr@user/motherr) (Quit: motherr)
[17:26:16] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[17:29:33] *** Joins: timj (~timj@user/timj)
[17:32:54] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:32:58] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:33:10] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:37:30] *** Joins: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0)
[17:38:04] <StyXman> I'm trying to read a trace line that I can't detangle
[17:38:14] <StyXman> + eval 'x_remote_cmd_res='\'''\'''
[17:38:50] <StyXman> I _guess_ that's
[17:39:07] <StyXman> eval "x_remote_cmd_res=''"
[17:39:14] <StyXman> but the ammount of 's is puzzling
[17:39:33] <Soliton> !'
[17:39:34] <greybot> EVERYTHING inside single quotes (') is taken literally by bash. If you want to embed a ' inside '...', write it as the four characters '\'' or use $'...' quoting instead.
[17:43:29] <StyXman> jesus
[17:43:50] <StyXman> one learns something every day
[17:44:31] <StyXman> taht's not even in the manual?
[17:45:17] *** Parts: engblom (~foo@83-148-202-151.dynamic.lounea.fi) ()
[17:45:25] <StyXman> it even says
[17:45:39] <StyXman> Enclosing characters in single quotes preserves the literal value of each character within the quotes.  A single quote may not occur between single quotes, even when preceded by a backslash.
[17:45:42] *** Joins: motherr (~motherr@user/motherr)
[17:46:25] <StyXman> Soliton: are greybot's help messages online somewhere, so i can point my coworkers to it?
[17:46:40] <pj> yes, the sequence '\'' is not so much in the manual itself, but rather an implied trick to get a single quote where you otherwise can't.
[17:46:41] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[17:46:55] <pj> !greybot
[17:46:55] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[17:46:57] <StyXman> yeah, I'm not so worried that itÅ› not tehre
[17:47:05] <StyXman> it simply says it's prohibited
[17:47:41] <pj> well technically it is, when you do '\'' the \' actually occurs *outside* of the single-quoted text.
[17:48:31] *** Quits: motherr (~motherr@user/motherr) (Client Quit)
[17:48:42] <StyXman> urrgrhhgrhg
[17:49:04] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[17:50:47] *** Quits: yetoo_ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[17:50:55] *** Joins: yetoo_ (~yetoo@user/yetoo)
[17:51:36] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[17:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:55:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:01:36] <StyXman> I'm getting "(standard_in) 1: syntax error" I'm guessing that could be a botched eval?
[18:01:51] <StyXman> we use eval a lot :(
[18:02:15] <StyXman> all references to that message point to bash so far
[18:02:39] *** Joins: dave_uy (~dave_uy@hs-nc-219248cd08-68559-1.tingfiber.com)
[18:02:41] <Soliton> # bc -l <<< 'a,'
[18:02:43] <shbot> Soliton: (standard_in) 1: syntax error
[18:03:56] <geirha> suddenly it points to bc
[18:04:02] <Soliton> bash error messages should mention bash or the script name.
[18:04:10] <StyXman> yeah, I found references to it too, but I can't find calls to bc in that code
[18:04:21] <StyXman> hmm
[18:04:32] <StyXman> letme open up the search space
[18:05:03] <geirha> I'm fairly certain I've encountered that type of error message format with another command too, but I can't remember which one
[18:05:31] <geirha> set -x should help regardless
[18:05:34] <geirha> !-x
[18:05:34] <greybot> set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[18:05:54] <StyXman> yeah, that's why I was asking for the trace text up tehre :)
[18:06:17] <Soliton> well, can you show the exact trace that produces the error?
[18:06:29] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:06:31] <StyXman> hmm, $? looks like a nice thing to add to PS4
[18:06:52] <Soliton> !ps4
[18:06:53] <greybot> The value of $PS4 is printed (after expansion) before each command bash displays during an execution trace. See man bash, under PROMPTING. # http://wiki.bash-hackers.org/scripting/debuggingtips#use_shell_debug_output Try PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[18:07:00] <StyXman> I'm also adding ${#FUNCNAME[@]} to see how deep in s**t I am
[18:07:35] <Soliton> the number of + tells you how deep you are.
[18:07:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[18:07:47] <Soliton> or whatever you put as first char.
[18:08:21] *** Quits: dave_uy (~dave_uy@hs-nc-219248cd08-68559-1.tingfiber.com) (Quit: dave_uy)
[18:09:10] <StyXman> no, not subshells, but stack depth
[18:09:29] <StyXman> helps weeding out traces of function I'm not interested in
[18:09:41] <StyXman> like functions to run commands remotely or logging
[18:09:48] <StyXman> which are calles every 20ms
[18:09:53] <StyXman> called*
[18:10:50] <StyXman> and sometimes thousands of lines of big functions
[18:10:52] <geirha> have you tried   bash -x script 2>&1 | less   and then search for  standard_in
[18:11:13] <StyXman> I can't, the situation is not that easy right now
[18:11:27] <StyXman> but yes, thanks for the tip
[18:11:30] <geirha> oh, interactive script?
[18:11:38] <StyXman> no, unreachable script
[18:11:46] <StyXman> can't login on the machine
[18:11:54] <StyXman> and can't easily reproduce the env
[18:12:11] <StyXman> this is a 26kLoC monster runnig behind a web interface
[18:12:17] <StyXman> _don't ask_
[18:12:25] <geirha> ... why?
[18:12:35] <StyXman> because I'm paid for it :)
[18:14:36] <StyXman> it started being a shell script that installed our product
[18:15:12] <StyXman> it grew a menu interface, input validation, and gazillion tricks
[18:15:36] <StyXman> we _are_ rewriting it, but it's not going to be overnight
[18:15:51] <StyXman> anyways, thanks, I found references to bc in other parts of the code
[18:15:54] *** Joins: magla (~gelignite@55d4261d.access.ecotel.net)
[18:18:42] *** Parts: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0) (cheers!)
[18:24:17] <depesz> i have 'trap cleanup EXIT', in the cleanup function, can I somehow tell what line exit/die was called from/by? and, what is the return status code?
[18:27:08] <Soliton> exit status is $?
[18:27:38] <depesz> bash_lineno[0] is 1, which is not really helpful. sample: https://paste.depesz.com/s/V61
[18:28:16] <depesz> Soliton: ah. it has to be the first thing in the cleanup function. great.
[18:28:26] <depesz> now, any idea if it's possible to catch where the exit happened?
[18:28:42] *** Joins: thiras (~thiras@user/thiras)
[18:29:26] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[18:29:48] *** Joins: legola (~legola@46.235.100.27)
[18:30:36] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Ping timeout: 268 seconds)
[18:31:45] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:29] *** Joins: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2)
[18:34:26] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Remote host closed the connection)
[18:34:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[18:38:41] *** Joins: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[18:41:21] <wizhurd> "%s/foo/bar/g only change the first instance of every line how da I chande them all?
[18:42:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 260 seconds)
[18:43:10] *** Quits: ouzel8_ (~ouzel8_@shams.boastblast.com) (Remote host closed the connection)
[18:43:30] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[18:44:22] <Soliton> # printf 'foo%s\n' foo bar baz > file; ed -s file <<< $'%s/foo/bar/g\nw'; cat file
[18:44:24] <shbot> Soliton: barbar
[18:44:24] <shbot> Soliton: barbar
[18:44:24] <shbot> Soliton: barbaz
[18:45:45] <wizhurd> is this implying that it should work?
[18:45:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:46:29] <Soliton> it shows that it works with ed. no clue what your context is.
[18:46:32] *** Joins: paws_ (uid89121@id-89121.lymington.irccloud.com)
[18:46:38] <wizhurd> vim
[18:46:39] *** Joins: arash (arash@thinks.life.is-a.beauty)
[18:46:53] <Soliton> should work there as well.
[18:47:04] <Soliton> this channel is about shell scripting, btw.
[18:47:15] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:47:36] <wizhurd> I thought it was a standard like ERE
[18:47:51] <arash> Hello, how can i write a bash file to execute this mysql query -u root -pPASSWORD use test_db; UPDATE this SET that = '9999999', server_ip = '99999999' WHERE id = 2;
[18:49:50] *** Quits: odoood (~odoood@2601:c8:c003:a550::1) (Ping timeout: 260 seconds)
[18:50:05] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Quit: ZNC - https://znc.in)
[18:50:18] <Soliton> mysql -u root -pPASSWORD <<< "use test_db; UPDATE this SET that = '9999999', server_ip = '99999999' WHERE id = 2;"
[18:50:26] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:50:34] <Soliton> i wouldn't put the password in the script.
[18:50:37] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[18:50:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[18:52:19] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[18:53:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[18:53:49] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:54:16] <paws_> I'm starting a daemon from the terminal, with & at the end to run it on the background. If I run `jobs` after it, it doesn't list anything. It clearly still running because I still see the output of the process on the terminal. Any ideas?
[18:54:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:55:13] <Soliton> the daemon presumably backgrounds itself so the process you called is gone.
[18:55:16] <colo> paws_, maybe it double-forked, and the parent terminated? like a proper daemon does.
[18:55:26] <paws_> a simpler process like `command ping -i 5 google.com &` works as expected. What is this program doing to not show up? spawning a new process or something?
[18:55:53] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 268 seconds)
[18:55:58] <paws_> colo that might be the case!
[18:56:53] <Soliton> perhaps it has a mode to not do that nonsense.
[18:57:21] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[18:57:43] <paws_> hmm yeah trying to control it, since I'm running this as part of an integration test, but I'll backtrack on this and try out a different approach
[18:58:32] *** Joins: yetoo__ (~yetoo@user/yetoo)
[18:59:07] *** Quits: yetoo_ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[18:59:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[19:00:21] <colo> if you have systemd-run, you can usethat to track it inside a control group of its own. but having it run in "foreground" mode would surely be preferable.
[19:00:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:00:50] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:07:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:07:30] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[19:07:55] *** Joins: yetoo__ (~yetoo@user/yetoo)
[19:09:25] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:10:23] <Celmor[m]> is this safe? output=$(myprogram) || echo "$output" > errorlog
[19:10:44] <Celmor[m]> the problem is that "myprogram" is more complex and even uses quote so I can't do the usual "$()"
[19:12:54] <Soliton> perhaps you want to capture stderr.
[19:13:08] <Soliton> no clue what the safety question is about.
[19:13:32] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b0ff:a1ca:9931:1ae5)
[19:13:32] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b0ff:a1ca:9931:1ae5) (Changing host)
[19:13:32] *** Joins: skapata (~Skapata@user/skapata)
[19:13:33] <Celmor[m]> about the output="$(myprogram)"
[19:13:37] <Celmor[m]> with or without quotes
[19:13:51] <pystardust> Celmor[m]: ::: output=$(myprog) ::: is equivalent to ::: output="$(myprog)" ::: also its perfectly safe to use quotes inside $( ... )
[19:14:03] *** Joins: laibach (~laibach@2404:e801:2001:579:90e2:e464:2afc:a775)
[19:14:11] <Celmor[m]> I recall having seen somewhere that bash is smart enough that it doesn't need quotes in this case where I assign the output to a var
[19:14:20] <pystardust> this is only because command substitution doesn't undergo word splitting
[19:14:29] <Celmor[m]> "also its perfectly safe to use quotes inside $( ... )" you mean: output="$(myprogram "arg")"
[19:14:40] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[19:14:40] <pystardust> variable assignment ** command substitution ^
[19:14:51] <pystardust> Celmor[m]: yes its safe
[19:14:54] *** Joins: yetoo__ (~yetoo@user/yetoo)
[19:14:59] <Celmor[m]> not sure what that means
[19:15:32] <Celmor[m]> I do understand what each phrase means but not in this combination with stars
[19:15:37] <phy1729> I'd use printf '%s\n' "$output"  if you're concerned about weirdness in output
[19:15:55] <pystardust> what that means is suppose command gives output "1 2", then ::: var=$(command) ::: is safe during variable assignment
[19:16:11] <viv> Hey I am new to bash scripting and I wrote a small bash script that will change the filenames to the dates they were created (for photos and videos). How do I check which suffix the filename has (.mov, .png, .jpeg, ...) so the script will add the suffix to the filename?
[19:16:11] <Celmor[m]> yeah, I thought about that but my program writes these commands might have difficulties with more complicated programs
[19:16:52] <viv> I can also upload the script to pastebin or something similair
[19:16:55] <Celmor[m]> is `echo "$output" > /tmp/file` safe if the output variable contains lots of text? why would printf be better in this case?
[19:17:14] <edk> echo interprets options
[19:17:33] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[19:17:39] *** Joins: fakuve (~fakuve@192.210.243.250)
[19:18:08] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:18:15] <fakuve> hi guys , how do I increment a value of a variable? `$(($n+1));` is not working . Neither is `$((n+1));`
[19:18:50] <OMGOMG> !(( > fakuve
[19:18:50] <greybot> fakuve: ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[19:18:57] <edk> many echos will just print everything if the argument doesn't look like a sensible option string, but it's fragile to rely on that
[19:19:24] <koollman> fakuve: $((n++)) , or n=$((n+1))
[19:19:43] *** Quits: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[19:20:30] <OMGOMG> # $((n++))
[19:20:32] <shbot> OMGOMG: bash: 0: command not found
[19:20:32] <Celmor[m]> edk: so I just need echo -- "$output"
[19:20:46] <fakuve> kold: thanks!
[19:20:50] <viv> How do I get the ending of an filename in a variable?
[19:20:51] <fakuve> OMGOMG: thanks
[19:20:52] <edk> echo -- isn't a thing
[19:21:34] <fakuve> what is wrong then with this ? is incrementing now the index variable , but keeps spitting `command not found line 7` on each iteration
[19:21:55] <fakuve> https://paste.ubuntu.com/p/q6384dcw26/
[19:21:58] <OMGOMG> viv: ending? extension?
[19:22:33] <viv> OMGOMG: .txt for example
[19:22:49] <Celmor[m]> well, I know that my output always starts with newline, does characters at start of lines matter if I do `echo "$output"`?
[19:23:03] <Soliton> !echo
[19:23:04] <greybot> echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[19:23:15] <osse> fakuve: $(( )) expands to the resulting value
[19:23:27] <osse> similar to $var or $(cmd) in that sense
[19:23:37] <fakuve> so it will echo it , is it?
[19:23:52] <OMGOMG> # a=foo.tar.gz; echo "${a##*.}"
[19:23:53] <osse> sure, if you put echo in front of it
[19:23:54] <shbot> OMGOMG: gz
[19:24:46] <viv> OMGOMG: thanks
[19:24:47] <edk> Celmor[m]: i doubt it, but i don't know; printf '%s\n' is the echo -- that never was, i suggest it's easier to use that than figure out if your echo will always work everywhere
[19:25:24] <Celmor[m]> alright, so this is always safe: printf '%s\n' "$output" > file
[19:25:40] <fakuve> osse: well how can I perform a Math operation without it trying to output something to be executed then?
[19:26:22] <fakuve> I know there may be other ways to increment a counter but I want to do it this way
[19:26:32] <edk> Celmor[m]: yes
[19:27:06] <osse> fakuve: assign the result
[19:27:13] <osse> like koollman showed
[19:27:37] *** Quits: laibach (~laibach@2404:e801:2001:579:90e2:e464:2afc:a775) (Quit: WeeChat 3.2.1)
[19:28:12] <fakuve> Ok now . Thank you guys
[19:28:31] <Soliton> you can use (()) in bash.
[19:28:42] <Soliton> !math
[19:28:42] <greybot> Add 7 to a variable: ((a+=7)) OR a=$((a+7)) OR let 'a+=7' # See http://mywiki.wooledge.org/ArithmeticExpression
[19:28:52] <fakuve> I just dont understand why it gets expanded
[19:29:08] <fakuve> Why it tries to execute
[19:29:09] *** Joins: besnn (~besnn@user/besnn)
[19:29:12] <Soliton> because that is how $(()) works.
[19:29:17] <koollman> because $(( )) expands to the arithmetic result
[19:29:33] <osse> fakuve: because it works in the same way as $var or $(cmd)
[19:30:13] <fakuve> ah ok
[19:30:18] <fakuve> I see
[19:30:32] <fakuve> ThanksSsS
[19:30:35] *** Quits: yetoo__ (~yetoo@user/yetoo) (Remote host closed the connection)
[19:30:55] *** Joins: yetoo__ (~yetoo@user/yetoo)
[19:32:11] *** Joins: besnn00 (~besnn@31.22.58.101)
[19:32:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:33:46] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[19:35:23] *** Joins: LiftLeft (~LiftLeft@172.98.80.53)
[19:35:58] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 268 seconds)
[19:38:27] *** Joins: karakedi (~eAC53C340@user/karakedi)
[19:39:48] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[19:42:00] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:b107:5890:fc9:b696)
[19:44:48] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[19:45:17] *** Joins: yetoo__ (~yetoo@user/yetoo)
[19:45:27] *** Joins: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[19:45:45] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[19:46:07] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[19:48:16] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[19:48:21] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[19:52:25] *** Joins: fdan (~fdan@192.146.154.3)
[19:53:05] *** Quits: varazir (~mircwars@217-115-51-247.cust.bredband2.com) (Ping timeout: 260 seconds)
[19:53:49] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[19:54:15] *** Joins: yetoo__ (~yetoo@user/yetoo)
[19:54:54] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[19:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:56:43] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:57:08] *** Parts: stemid (~nocturnal@i-lands.anark.ist) ()
[19:57:09] *** Quits: andre144k (~andre144k@213.221.88.82) (Read error: Connection reset by peer)
[19:58:10] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Ping timeout: 240 seconds)
[19:59:15] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:02:31] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[20:02:53] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[20:03:21] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[20:03:24] *** Joins: yetoo__ (~yetoo@user/yetoo)
[20:03:26] <arash> when i execute .sh file using command line its working fine but when i put it in crontab i got some wired errors in syslog, any idea what is wrong and how to solve this?
[20:03:45] <Soliton> !cron
[20:03:46] <greybot> Cron is used for scheduling recurring jobs. at(1) is used for scheduling one-time jobs. crontab -e, /etc/crontab or /etc/periodic are places where you can configure jobs. The most common problems with cron jobs include %'s in a crontab (escape with backslash: date +\%Y), commands that rely on $DISPLAY, and having a different environment (eg. PATH/SHELL). See man 5 crontab.
[20:04:10] *** Quits: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 240 seconds)
[20:04:27] <Soliton> perhaps read the errors to see what they say.
[20:04:44] *** Quits: Mo (~Mo@dynamic-077-000-058-187.77.0.pool.telefonica.de) (Ping timeout: 268 seconds)
[20:05:47] *** Joins: varazir (~mircwars@217-115-51-247.cust.bredband2.com)
[20:07:17] <arash> what does it means ? (CRON) info (No MTA installed, discarding output)
[20:07:25] *** Quits: besnn00 (~besnn@31.22.58.101) (Ping timeout: 265 seconds)
[20:08:14] <arash> they errors are wired, because when i execute that file from command line its working fine. mysqld[16675]: 2021-09-14T15:36:01.420093Z 9116 [Note] Aborted connection 9116 to db:
[20:08:15] <Soliton> mta is a mail transfer agent.
[20:08:44] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[20:08:50] <Soliton> cron mails you the output. you could also redirect the output to a file.
[20:09:38] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Read error: Connection reset by peer)
[20:10:00] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[20:10:33] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Remote host closed the connection)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:13:33] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[20:14:12] *** Quits: UnnamedBeer (~UnnamedBe@225.red-79-152-222.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[20:14:23] <wizhurd> I have some file with same file name plus ending winh a digit. 100 come before 2... what is the good way to zero pad them
[20:14:44] <wizhurd> s/digit/number
[20:15:35] *** Quits: iomari891 (~iomari891@129.205.113.2) (Read error: Connection reset by peer)
[20:16:09] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:17:40] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[20:18:09] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[20:18:24] <Soliton> # printf '%03d' 2
[20:18:26] <shbot> Soliton: 002
[20:18:28] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Remote host closed the connection)
[20:18:43] *** Quits: adac (~adac@static.207.111.9.176.clients.your-server.de) (Ping timeout: 252 seconds)
[20:19:12] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[20:19:37] <wizhurd> nice
[20:24:36] *** Joins: tradar (~tradar@user/tradar)
[20:25:18] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:26:15] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[20:26:41] *** Joins: kill (~killown@user/killown)
[20:26:45] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 265 seconds)
[20:26:59] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[20:28:36] *** Joins: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net)
[20:28:46] *** Joins: op0x0f05 (uid512716@id-512716.tinside.irccloud.com)
[20:29:23] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[20:29:37] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 245 seconds)
[20:30:17] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[20:31:15] *** Quits: tobybl (~tobybl@208.193.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[20:32:11] *** Joins: joo-_ (~joo-_@jodb.mikjaer.com)
[20:32:11] *** Quits: joo-_ (~joo-_@jodb.mikjaer.com) (Changing host)
[20:32:11] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[20:33:12] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:35:26] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:35:28] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[20:37:51] *** xv8 is now known as XV8
[20:38:38] *** Joins: sublim20 (~sublim20@user/sublim20)
[20:38:50] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 265 seconds)
[20:39:45] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[20:40:07] *** Joins: austin987 (~null@100.42.98.196)
[20:40:49] *** Joins: iomari891 (~iomari891@129.205.113.2)
[20:41:38] *** Joins: totenkoph (~scythe@user/totenkoph)
[20:42:58] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Ping timeout: 268 seconds)
[20:43:13] *** Quits: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:45:20] *** Quits: iomari891 (~iomari891@129.205.113.2) (Client Quit)
[20:48:19] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:49:08] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 268 seconds)
[20:52:42] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[20:52:47] *** Joins: joo-_ (~joo-_@jodb.mikjaer.com)
[20:52:47] *** Quits: joo-_ (~joo-_@jodb.mikjaer.com) (Changing host)
[20:52:47] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[20:53:03] <wizhurd> rename -n -v 's/^(.(5))//' search\?searchfor\=\&sortby\=pold\&browse\&pg\= doesn't verbone it?
[20:53:24] *** Joins: yetoo__ (~yetoo@user/yetoo)
[20:53:44] *** Joins: iomari891 (~iomari891@129.205.113.2)
[21:00:04] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:01:30] *** Joins: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[21:03:27] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[21:04:32] <wstrnr> # touch search\?search=for\&pg\={1,2,3}; prefix=search\?search=for\&pg\=;   for x in {1..3}; do printf -v ox %03d "$x"; mv -v "$prefix$x" "$prefix$ox"; done
[21:04:34] <shbot> wstrnr: renamed 'search?search=for&pg=1' -> 'search?search=for&pg=001'
[21:04:34] <shbot> wstrnr: renamed 'search?search=for&pg=2' -> 'search?search=for&pg=002'
[21:04:34] <shbot> wstrnr: renamed 'search?search=for&pg=3' -> 'search?search=for&pg=003'
[21:06:28] * wstrnr guesses pg= is page number... and page numbers should go sequentially
[21:07:14] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 268 seconds)
[21:08:11] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[21:08:24] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[21:10:44] *** Quits: iomari891 (~iomari891@129.205.113.2) (Ping timeout: 265 seconds)
[21:13:21] *** Joins: joo-_ (~joo-_@jodb.mikjaer.com)
[21:13:21] *** Quits: joo-_ (~joo-_@jodb.mikjaer.com) (Changing host)
[21:13:21] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[21:14:58] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:b107:5890:fc9:b696) (Ping timeout: 260 seconds)
[21:18:38] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:19:15] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:20:53] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:21:14] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:21:25] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 268 seconds)
[21:22:18] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:26:10] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[21:26:23] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[21:27:59] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 268 seconds)
[21:30:49] *** Joins: rinkydink (~tirnanog@user/tirnanog)
[21:31:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:31:18] *** Quits: cdown (~cdown@194.207.141.245) (Ping timeout: 260 seconds)
[21:34:09] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 268 seconds)
[21:34:23] <grondilu> how can I capture the output of a command while also testing for its return status?  `foo=$(bar) || oops` does not seem to work
[21:35:13] <yitz> Capturing the STDOUT doesn't change the return code
[21:35:18] <Soliton> # foo=$(exit 1) || oops
[21:35:19] <shbot> Soliton: bash: oops: command not found
[21:35:30] <yitz> # a=$(false) || echo Failed
[21:35:32] <shbot> yitz: Failed
[21:36:46] <grondilu> hum yeah that works but its weird because my actual code does not.  I'll try to snip it to something that does work either
[21:37:04] <grondilu> *that does not
[21:38:07] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:39:38] <grondilu> ok apparently it's because I'm using an array
[21:39:42] *** Quits: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 268 seconds)
[21:40:00] <grondilu> # declare -a a=(false) || echo fail
[21:40:01] <shbot> grondilu: no output
[21:40:40] <phy1729> the builtin false isn't run there
[21:40:54] <grondilu> oh yeah my bad
[21:41:00] <grondilu> # declare -a a=($(false)) || echo fail
[21:41:01] <shbot> grondilu: no output
[21:41:14] <phy1729> # a=($(false)) || echo fail
[21:41:15] <shbot> phy1729: fail
[21:42:09] <phy1729> It's just like   true "$(false)" || echo fail    with declare
[21:42:38] *** Joins: n4dir (~user@i577BC8D5.versanet.de)
[21:42:47] <grondilu> why?
[21:45:05] <grondilu> I guess I can declare first, and then affect
[21:45:16] <grondilu> # declare -a a; a=($(false)) || echo fail
[21:45:17] <shbot> grondilu: fail
[21:47:24] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:48:00] <yitz> grondilu: shellcheck catches that
[21:48:20] <yitz> It'll warn you that you get the exit status of `declare`
[21:48:33] <koala_man> it actually doesn't when it's in an array
[21:49:33] <yitz> Oh :(
[21:49:35] *** Joins: tobybl (~tobybl@208.193.115.87.dyn.plus.net)
[21:49:46] <yitz> Is that a bug?
[21:50:08] <koala_man> probably, yes
[21:50:27] <yitz> Should I file an issue on Github?
[21:50:59] *** Joins: junagu_ (~junagu@2a02:8010:6989:0:73bc:34ce:86c4:f8c1)
[21:51:04] <koala_man> sure, it should be relatively simple to extend the check to cover this
[21:51:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:51:30] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:51:38] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 268 seconds)
[21:52:47] <grondilu> the bash repo is on Github?  I've never seen it.
[21:53:06] <yitz> shellcheck isn't bash
[21:53:21] <yitz> You got issue 2329.
[21:55:34] *** Quits: Junagu (~junagu@2a02:8010:6989:0:d6cc:2cc9:dc0f:bcf2) (Ping timeout: 260 seconds)
[21:55:40] *** Quits: tobybl (~tobybl@208.193.115.87.dyn.plus.net) (Remote host closed the connection)
[21:56:20] *** Quits: Bhavuk (~BTaneja@103.132.28.33) (Quit: Leaving)
[21:56:54] *** Joins: cdown (~cdown@194.207.141.245)
[21:56:56] *** Quits: paws_ (uid89121@id-89121.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:57:04] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:57:17] * grondilu didn't know about ShellCheck, proceeds to install it
[21:58:15] *** Joins: tobybl (~tobybl@208.193.115.87.dyn.plus.net)
[21:59:17] *** Joins: jess (~jess@libera/staff/jess)
[21:59:45] <grondilu> ok, just tried it and got "SC1064: Expected a { to open the function definition."
[22:00:47] <grondilu> actually a function definition needs a compound command, which does not necessarily use brackets
[22:03:00] <koala_man> this is an intentional choice described on the wiki: https://www.shellcheck.net/wiki/SC1064
[22:05:07] <wizhurd> wstnr it work I am exited thank you :D
[22:05:25] <koala_man> it got really confusing when bad array syntax suggested that maybe you wanted "for" after a parenthesis
[22:05:36] *** Joins: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[22:07:40] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Ping timeout: 240 seconds)
[22:08:26] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[22:13:37] <grondilu> hum.. shellchecks informs me that FUNCNAME is actuall an array.  I was using $FUNCNAME extensively for recursion but perhaps that's a bad idea?
[22:14:11] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:14:42] <koala_man> grondilu: $FUNCNAME is equivalent to ${FUNCNAME[0]}, and ${FUNCNAME[1]} would give you the next function on the stack
[22:16:10] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:17:02] <grondilu> typing ${FUNCNAME[0]} would be a hassle.  Is there an other shell variable I could use?
[22:18:02] <grondilu> I guess I could use the literal name of the function, but that would be lame
[22:21:20] <koala_man> you can echo disable=SC2128 >> ~/.shellcheckrc  if you prefer using $array as a shortcut for ${array[0]}
[22:21:58] *** Joins: greentree (~greentree@pool-100-2-24-182.nycmny.fios.verizon.net)
[22:22:20] *** izabera is now known as izanurse
[22:22:51] <greentree> if im running systemctl restart through cron tab of a user that isn't specifically `root`, do i have to preface systemctl with sudo
[22:24:34] <grondilu> koala_man: noted, thanks
[22:26:19] *** Quits: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319) (Ping timeout: 252 seconds)
[22:26:50] <llua> possibly
[22:26:57] <llua> more of a os question tho
[22:32:30] *** Joins: greycat (~greg@209.142.155.49)
[22:32:41] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[22:33:26] *** Joins: akoana (~ah@user/akoana)
[22:33:36] *** Quits: viv (~viver@2a02:908:121:8b20:682f:2a4:3ab6:a1a6) (Quit: Leaving)
[22:37:08] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[22:37:52] *** Quits: tobybl (~tobybl@208.193.115.87.dyn.plus.net) (Remote host closed the connection)
[22:38:20] *** Joins: alzgh (~alzgh@user/alzgh)
[22:39:02] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[22:39:03] *** Joins: Krail (~Krail@user/alexdelarge)
[22:39:10] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 240 seconds)
[22:41:43] *** Joins: iomari891 (~iomari891@129.205.113.2)
[22:42:28] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[22:43:10] *** Quits: yetoo__ (~yetoo@user/yetoo) (Read error: Connection reset by peer)
[22:43:25] *** Joins: yetoo__ (~yetoo@user/yetoo)
[22:44:52] *** Joins: adac (~adac@213-47-187-80.cable.dynamic.surfer.at)
[22:45:10] *** Joins: zro (~zro@user/zro)
[22:50:18] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 265 seconds)
[22:51:02] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[22:51:18] *** Joins: fdan (~fdan@192.146.154.3)
[22:53:12] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[22:54:46] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[22:58:23] *** Joins: justanotheruser (~justanoth@gateway/tor-sasl/justanotheruser)
[22:58:57] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[22:59:19] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[22:59:45] <justanotheruser> I'm trying to create a single line for bandwidth monitoring. How can I make combine the two print statements from `awk` into one so I get "up: 444b, down: 20Kb"? `sudo iftop -i wlp0s20f3 -t | awk '/Total send rate/{print $4} /Total receive rate/{print $4}'`
[23:00:55] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:01:55] <justanotheruser> nevermind, figured it out. "sudo iftop -i wlp0s20f3 -t | awk '/Total send rate/{UPRATE=$4} /Total receive rate/{print UPRATE "," $4}'"
[23:02:12] *** Joins: YaoNai (~YaoNai@user/yaonai)
[23:02:21] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Read error: Connection reset by peer)
[23:03:18] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[23:03:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:05:22] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[23:05:22] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[23:05:22] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[23:06:00] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[23:08:23] *** Joins: Betal (~Betal@user/betal)
[23:09:38] *** Joins: semeion (~semeion@user/semeion)
[23:10:05] <wizhurd> how can i remove duplicate from a text file without sorting?
[23:12:01] <greycat> !uniq
[23:12:01] <greybot> is a utility for removing or reporting repeated lines. uniq will only work for showing unique lines when used with sorted input (sort | uniq). Alternatively, use sort -u. awk '!s[$0]++' is an order-insensitive alternative.
[23:12:04] <wizhurd> except if the sort command can be used in that, which I don't understand
[23:13:29] <phy1729> There's an awk alternative
[23:13:34] <greycat> Most of the standard Unix tools were developed in the days when computer memory was measured in kilobytes, not megabytes or gigabytes.  Memory usage is kept low.
[23:14:18] <greycat> Take uniq(1) as an example.  It can detect duplicate lines in sorted input.  It does this by remembering only the *previous* line, and comparing that to the current line.  Memory use is therefore very low, no matter how large the input is.
[23:14:42] <wizhurd> interesting
[23:15:02] <greycat> In order to detect duplicates in unsorted input, you either have to remember every line you've seen so far, or else keep a hash of each input line you've seen, and have a way to go back to the original line in case the hash is seen again.
[23:15:17] <wizhurd> do I just do uniq file file2
[23:15:28] <greycat> The awk command in the bot's factoid keeps track of every line seen.  It uses a lot of memory.
[23:15:42] <greycat> ... now I'm seeing why people told me to /ignore you.
[23:15:49] <wizhurd> heh
[23:16:04] <wizhurd> the bot got all the logs?
[23:17:19] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[23:18:08] <earnestly> The awk, while retaining order, also has the benefit of being able to stream output whereas sort "blocks" until it has seen all of it
[23:19:16] <wizhurd> thank you for not /ignore me earnestly
[23:20:32] *** Joins: sublim20 (~sublim20@user/sublim20)
[23:20:45] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b)
[23:21:43] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b) (Client Quit)
[23:21:48] <wizhurd> or did you
[23:22:03] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[23:23:19] *** Joins: guest734 (~guest@host102.186-109-243.telecom.net.ar)
[23:23:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[23:26:38] <wwilliam> !tar
[23:26:38] <greybot> tar is an archiver but not the only one. Usually tar is a good choice (e.g. to duplicate an ENTIRE file system), but if you need fine-grained control, find|cpio or find|pax wins
[23:26:48] <wwilliam> !ssh
[23:26:48] <greybot> Secure SHell (#openssh, http://mywiki.wooledge.org/CategorySsh). To run rm "$localVar" remotely, use: printf 'rm %q\n' "$localVar" | ssh user@host bash
[23:26:55] <greycat> you can /msg the bot
[23:27:02] <wwilliam> sorry
[23:27:33] <wwilliam> What is that factoid that shows how to tar and send to remote server?
[23:28:45] <wizhurd> greycat: uniq file1 file2 worked why do people ignore me?
[23:29:00] <wizhurd> whois greycat
[23:29:01] <greycat> because you ask questions like *that*
[23:29:46] <wizhurd> okay I'll try to be more modest in my questions
[23:29:51] <greycat> yes, I suppose you could send *two* files to a uniq command at once, and thereby detect duplicates between the two files, as long as they are both sorted, and one is sorted entirely before the other, but that sounds super unlikely
[23:30:17] <greycat> it's far more common to try to detect duplicates lines in *one* file at a time
[23:31:14] *** Quits: Ders (MrA@user/ders) (Ping timeout: 260 seconds)
[23:31:23] <wizhurd> you are wrong file2 is the output
[23:31:28] <greycat> ...
[23:31:54] <greycat> # printf 'one\ntwo\n' > file1; uniq file1 file2; ls
[23:31:56] <shbot> greycat: file1  file2
[23:32:15] <koala_man> TIL
[23:32:19] <greycat> oh, uniq is weirder than I realized
[23:32:46] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Ping timeout: 268 seconds)
[23:34:02] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[23:34:09] <greycat> (why in the *fuck* does uniq have this [inputfile [outputfile]] thing?  was it from the days before the shell had redirection?)
[23:34:44] <koala_man> wikipedia says it's from UNIX v3
[23:36:12] <koollman> greycat: think about it differently: it can't do anything meaningful with two inputs. it uses stdin/stdout, but will read from the first argument if provided and write to the second if provided
[23:36:24] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:36:34] <greycat> it breaks expectations, at the very least
[23:36:36] <koollman> (but, yes, it makes it weird)
[23:38:02] <koala_man> it's just a quick hack for a dozen machines, I'm sure it won't confuse people 50 years later
[23:38:40] <koollman> if unsure, don't give it arguments ;)
[23:39:06] <greycat> definitely don't give it arguments whose names are "file1" and "file2"
[23:39:15] <greycat> because THAT is even more confusing
[23:40:56] *** Quits: Strom (strom@fedora/strom) ()
[23:41:02] <wizhurd> oh okay
[23:41:24] <koollman> command source dest, is not too strange a pattern. But it's not too common for 'pipeline filters'
[23:41:53] <greycat> are there *any* other standard unix/posix tools that have that usage?
[23:42:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:42:33] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[23:43:00] *** Joins: Strom (strom@fedora/strom)
[23:43:10] *** Joins: earendel (uid498179@user/earendel)
[23:45:19] <koala_man> ghostscript does it and I hate it
[23:46:13] *** Joins: chenxuezhao (~chenxuezh@120.244.238.69)
[23:46:18] <koala_man> ps2pdf *.ps  will delete one of your ps files if you have two
[23:46:24] <greycat> There's another tool that alters its input file by default.  I'm forgetting which one, but it's one of the text conversion ones.
[23:46:27] <earnestly> rm, cp
[23:46:28] <earnestly> mv
[23:46:42] <earnestly> Wait no, rm is fine
[23:46:59] <greycat> cp and mv will at least yell at you if the last argument is a file
[23:47:09] <earnestly> I sort of wish cp and mv worked as: mv dest target..., GNU added -t for this
[23:47:09] <koollman> cp will definitely not. cp a b :)
[23:47:12] <greycat> (and if there are >= 3 args)
[23:47:27] <earnestly> koollman: cp a b c ^ as noted
[23:47:36] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[23:47:47] <earnestly> (Although dest src would be weird)
[23:47:57] <koollman> scp is even worse. "surely, if it is not a url with a host ... it must be a filename, not someone forgetting ':' " :)
[23:47:59] *** Joins: thebombzen (~thebombze@587232703.guest.umich.net)
[23:48:43] <koollman> (and then you end up with a file named 'mysshserver' and wonder why the transfer was fast :) )
[23:48:44] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[23:49:20] <thebombzen> I have a BASH script and I'd like it to run some function, defined in the script itself, in the background but exit first. Is it sufficient to put "run_long_command & exit" as the last line of the file? or does that command have to be a separate script and not a simple function?
[23:49:46] <koala_man> no that's fine. if it's the last line you don't even need the exit
[23:49:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:50:01] *** Joins: roadie` (~user@2a02:8108:ec0:1427:291c:12e4:39e6:6319)
[23:50:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:50:14] <thebombzen> and the fact that bash itself is still running won't be an issue for whatever (non-interactive) thing is calling this script, right?
[23:51:02] <thebombzen> (basically I have a script that checks if some image is valid, and if it is, it goes "it's valid" and it uploads it to a location on the network. ideally I'd like that network upload to not block)
[23:51:03] <koala_man> that depends more on that thing
[23:52:38] <thebombzen> I mean, in this case it's actually python invoking subprocess.run on the script, which blocks until the process exits, so I'm wondering if the process will exit if I run "run_long_command & exit" or if the bash process will stay open until the & job is complete
[23:52:58] <thebombzen> but it appears you said it should work
[23:52:59] <koala_man> the process will exit
[23:53:14] <thebombzen> thanks
[23:53:25] <koala_man> however, stdin/out and any other FDs will remain open
[23:53:54] <thebombzen> ah, I see. so if it works by checking open FDs rather than by the process, then it might continue to block
[23:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:54:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:54:44] <koala_man> yes, this tends to happen when you capture the output
[23:54:55] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[23:54:56] <greycat> If it works like command substitution, it'll block until stdout is closed.
[23:56:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:56:32] *** Joins: thyriaen (~thyriaen@dynamic-078-055-255-174.78.55.pool.telefonica.de)
[23:57:28] <thebombzen> hm, in this case I do want to capture output, but the "long_command" produces no output
[23:57:42] <thebombzen> it just dumps errors to a file if they occur
[23:58:15] <thebombzen> in this case, do I close fds 0-2 before calling "long_command"?
[23:58:20] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[23:58:40] <koala_man> yeah you could do that. long_command < /dev/null > /dev/null 2>&1 &
[23:58:55] <thebombzen> Ah, so I don't even need to close them, I can just redirect them
[23:59:10] <koala_man> you can close them but some tools don't like that
[23:59:27] <thebombzen> in this case if I run long_command </dev/null >/dev/null 2>some_file.log &, does that work too? or does it have to be something dummy like null
[23:59:28] *** Joins: humky (~humky@user/humky)
[23:59:45] <koala_man> either way
[23:59:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
