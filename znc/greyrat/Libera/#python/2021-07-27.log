[00:00:07] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[00:01:31] <AhmedAmerican> jinsun: thing is you created a generator without `Parenthesis()`. interested that pandas take it directly.
[00:01:45] *** Quits: shan (shan@user/shan) (Remote host closed the connection)
[00:02:03] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:02:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:02:47] <graingert> SilverFox: I'm working on a fix
[00:02:51] <graingert> well I think I have a fix
[00:02:54] <SilverFox> graingert: you rock
[00:02:55] <graingert> working on a test :D
[00:03:00] <SilverFox> <3
[00:03:21] *** Joins: wyclif (~wyclif@user/wyclif)
[00:04:48] <jinsun> AhmedAmerican: that is allowed by python if the generator is the only argument, if you had other arguments to pd.DataFrame then parens would have been necessary
[00:05:16] <AhmedAmerican> got it. Thanks
[00:06:12] <thecoder> nevermind found the answer to my question
[00:06:24] <thecoder> my pagination was working properly, was using the wrong identitypool.
[00:08:09] *** Joins: vsantana (~Thunderbi@fttx-177136149143.usr.predialnet.com.br)
[00:08:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[00:08:55] *** Joins: wyclif (~wyclif@user/wyclif)
[00:09:09] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[00:09:40] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[00:10:14] *** Quits: schumaml (~schumaml@dslb-178-010-035-014.178.010.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[00:10:58] *** Quits: computeiro (~Wender@189.15.143.67) (Ping timeout: 240 seconds)
[00:11:03] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 252 seconds)
[00:12:37] *** Joins: schumaml (~schumaml@ipservice-092-211-200-227.092.211.pools.vodafone-ip.de)
[00:13:00] *** Quits: jpe__ (~sharpergu@static.230.72.47.78.clients.your-server.de) (Ping timeout: 272 seconds)
[00:14:35] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:68a0:f76f:c20a:17b7) (Quit: Textual IRC Client: www.textualapp.com)
[00:15:03] <philipp64|work> Hi. I’m using Apache, python3, Flask, and mod_wsgi and wondering if there are any good examples of doing client TLS authentication in this framework.  Thanks…
[00:15:47] *** Joins: pnoud (~pnoud@user/pnoud)
[00:16:14] <philipp64|work> Oh, also using urllib3…
[00:18:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:19:05] *** Joins: shan (shan@user/shan)
[00:19:06] *** Quits: bookworm (~bookworm@neomutt/bookworm) ()
[00:19:41] <squirrel> philipp64|work: as in client certificates?
[00:20:01] *** Joins: celphi (sid97751@user/celphi)
[00:20:15] <celphi> https://regex101.com/r/kDMmq2/1 (why am i still capturing `>`)
[00:21:23] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[00:21:23] <ssbr> celphi: it's part of the "whole regexp"
[00:21:40] <celphi> is there a way i can not include it
[00:21:58] *** Joins: bookworm (~bookworm@neomutt/bookworm)
[00:21:58] <celphi> i thought (?:...) was supoosed to make it not captured
[00:22:19] <ssbr> celphi: it groups things, but doesn't omit them from the parent regexp
[00:22:29] <ssbr> celphi: does this work? (?:[>])('[^<]+)
[00:22:34] <ssbr> celphi: if you do that, then group 1 will exclude >
[00:23:03] <squirrel> (?:[>]) is the same as >
[00:23:08] <philipp64|work> squirrel: affirmative, the client certificates are from the same (self-signed) Enterprise Root CA. The clients are mobile, so I’m not verifying the client’s IP address.  Just relying on the subject DN, the correct issuer DN, and (of course) possession of the private key associated with the client cert.
[00:23:09] <ssbr> simpler way to express this: >('[^<]+)
[00:23:10] <ssbr> yes, that
[00:23:18] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:23:30] <ssbr> the (?:) is only useful for grouping multiple things, which this doesn't do
[00:23:59] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[00:24:43] <celphi> yeah im not showing more of string
[00:24:59] <celphi> but ty ill make it work
[00:25:24] <graingert> SilverFox: https://gitlab.com/pgjones/hypercorn/-/merge_requests/56/diffs
[00:26:56] <squirrel> philipp64|work: i'm not in any way knowledgeable here, but i'm betting you can have your apache verify your client certificates (use a subdomain for best results) and then expose DN/fingerprint to the backend via headers
[00:28:50] <SnoopJ> celphi, what you're seeing is the entire match, because it has no sub-groups, as it would if you'd done (>) instead (the [] aren't really necessary here). I think you want a group around the rest of it to get the group you want
[00:29:06] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[00:29:12] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:29:18] <SnoopJ> That said, this looks an awful lot like parsing XML with regex, which is best avoided where possible
[00:29:26] <Payam> I want to package a python project to a .deb package. But the application when installing needs to install geckodriver and export the path. how can this be done? Any have experiences in this regard?
[00:29:48] *** Quits: y1n (~y1n@84-115-64-234.wifi.dynamic.surfer.at) (Ping timeout: 268 seconds)
[00:30:03] *** Joins: y1n (~y1n@84-115-64-234.wifi.dynamic.surfer.at)
[00:30:19] *** Joins: schumaml1 (~schumaml@dslb-188-104-168-240.188.104.pools.vodafone-ip.de)
[00:30:21] *** Quits: Bl4ckpajamas (~Blackpaja@167.167.46.2) (Quit: Bl4ckpajamas)
[00:30:48] *** Joins: mcglk (~mcglk@131.191.49.120)
[00:31:25] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[00:31:31] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:31:47] *** Quits: schumaml (~schumaml@ipservice-092-211-200-227.092.211.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[00:32:30] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[00:32:41] *** Joins: driib (~driib@185.195.233.169)
[00:33:08] *** Parts: mensinda[m] (~mensindam@2001:470:69fc:105::c7a6) ()
[00:34:02] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[00:34:22] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8130-a387-318d-d58e.res6.spectrum.com) (Read error: Connection reset by peer)
[00:34:32] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:edf6:bb6b:3ce5:23f8) (Ping timeout: 272 seconds)
[00:36:28] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
[00:36:41] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04)
[00:37:09] *** Joins: pnoud (~pnoud@user/pnoud)
[00:37:16] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[00:37:32] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:38:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:38:51] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:39:42] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[00:39:47] *** Quits: Roey (~Roey@user/Roey) (Remote host closed the connection)
[00:41:00] <b0nn> grym: heh, I ended up calling it directly (ie ~/.pyenv/versions/3.8.11/bin/python)
[00:41:20] *** Joins: schumaml2 (~schumaml@dslb-188-104-186-201.188.104.pools.vodafone-ip.de)
[00:41:44] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: reboot)
[00:42:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[00:42:26] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[00:42:28] *** Joins: jochum (~jochum@user/jochum)
[00:43:11] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:43:50] *** Quits: schumaml1 (~schumaml@dslb-188-104-168-240.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[00:43:54] <jochum> Payam: hey there :)
[00:43:59] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[00:44:26] <jochum> Payam: a very easy solution is https://click.palletsprojects.com/en/5.x/ - been using it in multiple projects without any hassle.
[00:44:41] <jochum> https://click.palletsprojects.com/en/7.x/
[00:45:02] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Client Quit)
[00:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:21] <sco1> (8.x is current)
[00:45:23] *** Joins: hyperknot (~hyperknot@2a02:3033:404:e40c:ed69:fc1:e04c:d61)
[00:45:43] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:45:54] <jochum> sco1: thanks :)
[00:45:55] <Payam> jochum, will have a look. thanks bud :)
[00:46:26] <sco1> Though I'm not sure I follow the relevance to packaging
[00:46:33] <jochum> Payam: if you don't like external dependencies, which I understand. Its also not that hard to read some data from input and put it in a config file.
[00:46:52] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[00:46:57] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:47:04] <jochum> sco1: he needs a path go geckoengine somewhere stored
[00:47:10] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:47:21] <Payam> jochum, I don't undranstand. This is the problem: My console applications needs the geckodriver to run .
[00:47:23] <jochum> sco1: I came up with the idear that the easiest solution is to ask on firstrun
[00:47:38] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:47:43] <Payam> My idea was to download the geckodriver while installation of my .deb file.
[00:48:02] <jochum> Payam: that should also work!
[00:48:17] *** Joins: Roey (~Roey@user/Roey)
[00:48:21] <jochum> There are some tools that find you the latest release on github
[00:48:27] <Payam> This library looks like a argparser library.
[00:48:46] <jochum> Payam: with some handy additions :)
[00:49:11] <Payam> I don't see how
[00:50:06] *** Quits: Allegretto (~allegrett@84-236-53-146.pool.digikabel.hu) (Ping timeout: 255 seconds)
[00:50:22] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[00:50:32] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[00:50:57] <jochum> I believe click was the one that does ENV ( https://click.palletsprojects.com/en/8.0.x/arguments/#environment-variables ) and prompts ( https://click.palletsprojects.com/en/8.0.x/options/#prompting )
[00:53:09] *** Quits: greedom (~greedom@2001:16b8:2ea9:8500:6e1e:bfe3:798a:7994) (Remote host closed the connection)
[00:54:00] *** Joins: ramblebamble (~ramblebam@37.120.209.204)
[00:54:06] *** Quits: amogorkon (~amogorkon@port-92-196-13-44.dynamic.as20676.net) (Quit: just use()!)
[00:54:19] *** Parts: ramblebamble (~ramblebam@37.120.209.204) (WeeChat 3.2)
[00:54:35] *** Joins: hafat (~hafat@95.70.168.45)
[00:54:35] *** Joins: pnoud (~pnoud@user/pnoud)
[00:55:30] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[00:56:58] <thecoder> ......
[00:57:00] <thecoder> :D
[00:58:18] *** Joins: schumaml3 (~schumaml@ipservice-092-211-207-249.092.211.pools.vodafone-ip.de)
[00:59:25] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:59:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[00:59:42] <jochum> thecoder: ? :)
[01:00:32] *** Quits: schumaml2 (~schumaml@dslb-188-104-186-201.188.104.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[01:01:13] <_SKiTZO> How can I export reportlab PDF to variable instead of saving to file?
[01:01:58] *** Joins: Allegretto (~allegrett@94-21-139-70.pool.digikabel.hu)
[01:02:55] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[01:02:56] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[01:03:02] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[01:03:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[01:03:25] *** Quits: cellofellow (~user@166.70.50.58) (Read error: Connection reset by peer)
[01:03:32] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:05:23] <nedbat> _SKiTZO: StringIO will probably be useful
[01:05:30] *** Joins: ExpiredKebab (~sgreadly@121.74.209.17)
[01:05:50] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:06:18] *** Joins: thiras (~thiras@user/thiras)
[01:06:50] *** Joins: cecep (~weechat@dynamic-078-054-092-224.78.54.pool.telefonica.de)
[01:08:10] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[01:08:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[01:09:20] <grym> b0nn: that'll work too, but the shim system is worth understanding
[01:10:53] *** Quits: vsantana (~Thunderbi@fttx-177136149143.usr.predialnet.com.br) (Ping timeout: 252 seconds)
[01:11:33] *** Joins: calamari (~calamari@2600:8800:7000:33:1a31:bfff:fede:24ad)
[01:13:13] *** Joins: maroloccio (~marolocci@186.210.218.249)
[01:13:22] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[01:13:43] *** Joins: pnoud (~pnoud@user/pnoud)
[01:14:03] *** Quits: calamari (~calamari@2600:8800:7000:33:1a31:bfff:fede:24ad) (Client Quit)
[01:14:53] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:15:26] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 268 seconds)
[01:15:42] <maroloccio> Hi. Is it possible to send traffic from Nginx's uwsgi_pass directive to an uwsgi instance which doesn't talk WSGI to its upstream but rather calls another web server using HTTP?
[01:16:48] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[01:16:58] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[01:17:11] *** Joins: ano (~weechat@user/ano)
[01:17:31] <jochum> maroloccio: you want an UWSGI to HTTP proxy?
[01:17:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[01:18:01] <jochum> maroloccio: why don't you use HTTP -> HTTP in nginx? Permissions?
[01:18:34] *** Joins: computeiro (~Wender@189.37.65.71)
[01:18:35] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 252 seconds)
[01:19:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[01:20:16] *** Joins: stoneware (~stoneware@user/stoneware)
[01:20:20] <maroloccio> jochum I cannot change the Nginx part but I can spin up any instance of uwsgi I like, with whatever arguments I like
[01:20:33] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[01:22:03] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[01:22:58] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:23:18] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[01:26:09] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 265 seconds)
[01:26:51] *** Joins: jiffe (~jiffe@mail.nsab.us)
[01:27:52] *** Quits: SilverFox (~joe@64.223.223.162) (Quit: WeeChat 2.8)
[01:28:13] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:28:19] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:28:58] *** Quits: y1n (~y1n@84-115-64-234.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[01:29:30] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:30:01] *** Joins: y1n (~y1n@84-115-64-222.wifi.dynamic.surfer.at)
[01:30:20] *** Joins: ferz (~ferz@93.48.251.229)
[01:31:24] *** Quits: computeiro (~Wender@189.37.65.71) (Ping timeout: 276 seconds)
[01:32:30] *** explodes_ is now known as explodes
[01:32:35] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[01:32:37] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:33:10] *** Quits: cecep (~weechat@dynamic-078-054-092-224.78.54.pool.telefonica.de) (Quit: WeeChat 3.2)
[01:33:11] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[01:33:58] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-246.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:34:04] *** Quits: maroloccio (~marolocci@186.210.218.249) (Quit: Client closed)
[01:34:16] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[01:35:19] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[01:35:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:37:43] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[01:37:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:38:02] *** Joins: scabby (~scabby@user/scabootssca)
[01:39:25] *** Quits: raydeeam (uid325131@dgplug/raydeeam) (Quit: Connection closed for inactivity)
[01:40:39] *** Quits: c10l (~c10l@89.34.167.207) (Remote host closed the connection)
[01:41:10] *** Joins: c10l (~c10l@89.34.167.207)
[01:42:02] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 258 seconds)
[01:43:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04) (Quit: Leaving)
[01:45:45] *** Joins: ndegruchy (~nathan@156.55.174.130)
[01:46:47] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[01:47:09] *** Joins: Betal (~Beta@user/betal)
[01:48:41] *** Joins: finsternis (~X@23.226.237.192)
[01:49:56] *** Quits: ndegruchy (~nathan@156.55.174.130) (Remote host closed the connection)
[01:51:21] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[01:51:43] *** Joins: JanC (~janc@user/janc)
[01:51:49] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[01:52:20] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[01:52:42] *** Quits: schumaml3 (~schumaml@ipservice-092-211-207-249.092.211.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:53:18] *** Joins: schumaml3 (~schumaml@dslb-188-104-175-213.188.104.pools.vodafone-ip.de)
[01:53:46] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:55:27] *** Quits: thecoder (~mrrobot@c-73-27-71-147.hsd1.fl.comcast.net) (Ping timeout: 258 seconds)
[01:56:03] *** Quits: hyperknot (~hyperknot@2a02:3033:404:e40c:ed69:fc1:e04c:d61) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:56:42] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[01:58:38] *** Joins: ganchan (~thomas_w@user/ganchan)
[01:58:47] *** Joins: rpkilby (~rpkilby@2600:100f:b10e:78d2:8ca5:887:33fa:7763)
[01:58:56] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[01:59:03] *** Joins: schumaml4 (~schumaml@dslb-088-067-051-094.088.067.pools.vodafone-ip.de)
[01:59:05] *** Quits: ganchan (~thomas_w@user/ganchan) (Client Quit)
[02:00:49] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 258 seconds)
[02:01:50] *** Quits: schumaml3 (~schumaml@dslb-188-104-175-213.188.104.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[02:02:48] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:68a0:f76f:c20a:17b7)
[02:03:22] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 265 seconds)
[02:03:36] *** Joins: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net)
[02:03:40] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[02:04:47] <cahoots> hi, is some way to call a function on an object if the object is not None, otherwise, return None? the same as ?. in swift or &. in ruby. like object?.call()
[02:05:32] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 245 seconds)
[02:06:18] *** Quits: c10l (~c10l@89.34.167.207) (Remote host closed the connection)
[02:06:37] <grym> cahoots: maybe-dot was a rejected PEP
[02:06:41] *** Joins: c10l (~c10l@89.34.167.207)
[02:06:41] <grym> you'll have to do the juggling yourself
[02:07:44] <KirkMcDonald> obj or obj.method()
[02:08:00] <KirkMcDonald> Or, wait, that should be 'and'
[02:08:05] <KirkMcDonald> obj and obj.method9)
[02:08:08] <grym> gets everyone every time :/
[02:08:43] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:08:44] *** Joins: schumaml (~schumaml@dslb-188-104-180-196.188.104.pools.vodafone-ip.de)
[02:09:17] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 250 seconds)
[02:09:39] *** Quits: schumaml4 (~schumaml@dslb-088-067-051-094.088.067.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[02:10:18] <cahoots> kk ty
[02:10:43] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:10:58] *** Joins: Doffi (~doffi@91.132.197.188)
[02:11:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[02:12:47] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 268 seconds)
[02:13:59] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 255 seconds)
[02:15:52] *** Joins: hyperknot (~hyperknot@2a02:3033:404:e40c:ed69:fc1:e04c:d61)
[02:17:34] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[02:17:44] *** Quits: tspng (~tspng@2a02:168:a1a1:1:452:8dd7:7b09:ee69) (Quit: Leaving, bye!)
[02:18:43] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[02:19:09] *** Quits: hyperknot (~hyperknot@2a02:3033:404:e40c:ed69:fc1:e04c:d61) (Client Quit)
[02:19:17] <graingert> grym: https://www.python.org/dev/peps/pep-0505/ wasn't rejected yet
[02:20:18] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 240 seconds)
[02:21:31] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 258 seconds)
[02:22:43] *** Quits: stig124 (~stig124@2001:ac8:25:d2::3d) (Quit: stig124)
[02:23:09] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:23:22] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:23:40] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[02:26:15] <bjs> how long does it stay deferred before we say it's "effectively rejected" :P
[02:27:05] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:28:18] *** Joins: Bardon (~Bardon@user/Bardon)
[02:28:38] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:29:11] *** Quits: y1n (~y1n@84-115-64-222.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[02:29:17] *** Quits: p-i-_ (~Ohmu@node-169u.pool-118-173.dynamic.totinternet.net) (Ping timeout: 255 seconds)
[02:29:23] *** Joins: y1n (~y1n@84-115-65-18.wifi.dynamic.surfer.at)
[02:29:40] <jinsun> there is also pep for maybe syntax for type hints instead of optional https://www.python.org/dev/peps/pep-0645/, maybe 505 will be revived if this gets accepted
[02:30:31] <Yhg1s> hm, we didn't pick this up on our last PEP roundup, I'll add it to the Steering Council agenda.
[02:31:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:31:34] <NeilRG> is there a way to del using a string?
[02:31:43] <NeilRG> for example:
[02:32:02] <NeilRG> for x in dir(): if x not in __all__: del_by_name x
[02:32:04] <bjs> Yhg1s: what do you think of the PEP
[02:32:40] <ammar2> NeilRG: delattr but I gotta ask, why?
[02:32:53] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 255 seconds)
[02:33:16] <NeilRG> amanr: how do I use delattr to eliminate a global name?
[02:33:24] <bjs> NeilRG: if this is to cleanup things on an import, you can delattr() on the module object
[02:33:43] <NeilRG> bjs: how do I do that from within the module itself?
[02:33:44] <bjs> since globals are basically just attributes on the module object
[02:34:09] <NeilRG> I'm just investigating more elegant ways of keeping the list of exports clean
[02:34:28] <NeilRG> https://github.com/NeilGirdhar/tjax/blob/master/tjax/__init__.py
[02:34:37] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[02:34:44] <bjs> NeilRG: the usual way is that packages have an __init__.py that only imports the names it wants to expose
[02:34:49] <NeilRG> Maybe I could import * everywhere here, and then somehow del everything except what's in __all__
[02:34:52] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[02:34:59] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[02:35:17] <NeilRG> bjs: yes, which is why I end up having each name twice: once i the import and once in the __all__
[02:35:29] <bjs> NeilRG: as someone who spends a lot of time reading code like this, please don't do the * import thing
[02:35:39] <bjs> it annoys me when I read the code because I can't find where things come from easily
[02:35:52] <NeilRG> bjs: you don't have a global search tool?
[02:36:00] <bjs> it happens a lot here, when someone asks a question I often go to the source to find out what happened and if there's a * import it becomes a big hassle
[02:36:03] <Yhg1s> bjs: I think it's an incredibly bad idea.
[02:36:14] <bjs> Yhg1s: the delattr thing or Guido's PEP ?
[02:36:23] <NeilRG> what's guido's pep?
[02:36:33] <Yhg1s> bjs: PEP 505? It's not Guido's
[02:36:45] <bjs> Yhg1s: no 645, x?
[02:36:52] <bjs> that's `x?` not a question
[02:37:03] <Yhg1s> oh, that. I think it's totally not worth it.
[02:37:11] <Yhg1s> (it's also not Guido's PEP)
[02:37:13] <bjs> I thought that was the one you were meaning the SC were to talk about
[02:37:24] *** Joins: hafat (~hafat@95.70.168.45)
[02:37:28] <Yhg1s> no, that one is still in draft.
[02:37:51] <bjs> Ah so it is, it's been in draft a while
[02:38:05] <bjs> Yhg1s: wait why is PEP 505 a bad idea?
[02:38:24] <ammar2> I really love/hate the title of that PEP
[02:38:56] <Yhg1s> bjs: because it assumes uses of None that are only prevalent in one particular style of writing code, which has other issues besides the verbosity, and I don't think it's a good idea to promote it.
[02:39:13] <bjs> NeilRG: anyway, yes of course I do have grep and other tools.  But * imports make it hard, the bigger the project gets the harder it is to find things and people do really bad things sometimes (like having, sometimes by accident, names clash on import)
[02:39:37] *** Quits: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com) (Ping timeout: 265 seconds)
[02:40:04] <NeilRG> bjs so you like the way I've written it then https://github.com/NeilGirdhar/tjax/blob/master/tjax/__init__.py
[02:40:05] <NeilRG> ?
[02:40:22] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[02:40:54] <bjs> NeilRG: I wouldn't say I like it, I don't think it's particularly beautiful or elegant but it's (for me) much better to find that than something that does a bunch of * imports
[02:41:06] <phy1729> I'd one item per line so diffs are easier to read, but yes.
[02:41:48] <NeilRG> bjs:  well how would you do it?
[02:41:51] <phy1729> * imports espically suck when I'm just trying to figure out what some library is doing, so I take a look throught the github UI rather than clone it locally.
[02:42:22] <bjs> NeilRG: either that way, or with * imports. Python doesn't give you any other way really
[02:43:09] <bjs> some libraries like numpy use * imports everywhere,  but a very rigid structure otherwise you'd never be able to find things
[02:43:45] <rigid> numpy does a lot of things "differently"
[02:44:14] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[02:44:54] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 258 seconds)
[02:45:02] <bjs> Developers like * imports because it means they don't have to update some `import` lines in places.  I think they're always a bad idea as it makes it much harder to navigate the code for someone like me
[02:46:35] <bjs> Yhg1s: the other issues being the fact that you can't tell the difference between None (the absence of a value) and None (as a value itself)
[02:46:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:44] <bjs> perhaps there should be a real Option container type PEP that makes the difference known
[02:47:59] <bjs> sadly the prevelance of `is not None` checks would mean it'd be hard/impossible to retrofit existing APIs :(
[02:49:09] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[02:51:05] *** Quits: cedric (~cedric@2a01:cb11:867:c200:131d:e750:ebb9:4b59) (Quit: Konversation terminated!)
[02:52:00] *** Joins: Doffi (~doffi@91.132.197.188)
[02:52:12] *** Roey is now known as MyRagingHadron
[02:52:26] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:53:52] *** Quits: rpkilby (~rpkilby@2600:100f:b10e:78d2:8ca5:887:33fa:7763) (Ping timeout: 245 seconds)
[02:54:01] *** Joins: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com)
[02:54:48] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:55:18] *** Quits: schumaml (~schumaml@dslb-188-104-180-196.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:55:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[02:56:30] *** Quits: Akuli (~Akuli@82-203-165-163.bb.dnainternet.fi) (Quit: Leaving)
[02:58:01] *** Joins: adamts5 (~Adam@user/mysteryblokhed)
[02:58:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[02:58:42] *** Quits: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com) (Ping timeout: 258 seconds)
[02:59:47] *** Quits: r1ch (~r1ch@user/r1ch) (Quit: bye!)
[03:00:16] *** Joins: pnoud (~pnoud@user/pnoud)
[03:00:26] *** Joins: schumaml (~schumaml@dslb-188-104-190-185.188.104.pools.vodafone-ip.de)
[03:02:06] *** Quits: adamts (~Adam@user/mysteryblokhed) (Ping timeout: 252 seconds)
[03:02:06] *** adamts5 is now known as adamts
[03:03:16] *** Quits: oxipital (~oxipital@165.225.60.216) (Quit: Ping timeout (120 seconds))
[03:03:58] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:04:02] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:3100:1852:23b9:80b6) (Quit: Leaving)
[03:04:17] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[03:05:24] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 252 seconds)
[03:05:35] *** Joins: n00bn00b (~N00b@user/n00bn00b)
[03:05:39] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[03:06:19] *** Joins: user3456 (user3456@user/user3456)
[03:06:44] <n00bn00b> hey, I have problems with running pytests with tox (but happily building the module via setup.py)... where I could ask/discuss more?
[03:06:45] *** Quits: schumaml (~schumaml@dslb-188-104-190-185.188.104.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[03:06:53] <derek_v> I find the examples in PEP 505 much less readable than the code they would replace
[03:07:17] <n00bn00b> I checked the StackOverflow and tried fixes, but Import error still occurs
[03:07:55] <Yhg1s> n00bn00b: the usual problem is not actually having the setup.py file *install* the modules.
[03:08:28] <Yhg1s> n00bn00b: can you show your setup.py file, your tox.ini and how you're manually building/installing?
[03:09:39] <jochum> I love to have non "*" importants, my ide and I like to find fings
[03:10:21] *** Joins: schumaml (~schumaml@dslb-092-074-005-167.092.074.pools.vodafone-ip.de)
[03:10:29] <jochum> s/importants/imports/
[03:10:51] <n00bn00b> jochum: why not to use flake8 and pre-commit to validate that?
[03:11:13] <n00bn00b> Yhg1s: thanks, I will prepare answer for that and make my answer better
[03:11:22] <n00bn00b> *make my question better
[03:12:51] *** Joins: schumaml1 (~schumaml@dslb-092-074-013-036.092.074.pools.vodafone-ip.de)
[03:13:03] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[03:13:55] *** veegee_ is now known as veegee
[03:14:30] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[03:15:11] *** Quits: y1n (~y1n@84-115-65-18.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[03:15:11] *** Quits: schumaml (~schumaml@dslb-092-074-005-167.092.074.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[03:15:36] *** Joins: y1n (~y1n@84-115-65-249.wifi.dynamic.surfer.at)
[03:16:00] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:18:34] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 240 seconds)
[03:20:43] *** Joins: djapo (~archangel@user/djapo)
[03:21:13] *** Joins: rpkilby (~rpkilby@2600:100f:b129:d8bd:a464:778f:893e:c7eb)
[03:21:46] *** Joins: tims (~tims@61.69.131.46)
[03:22:33] <n00bn00b> Yhg1s: here is 1) setup.py - learn from github accessible sample ; 2) tox.ini derived from doc; 3) actual bug I got; 4) the module file; 5) test I am about to check (sanity check only) https://dpaste.org/0NwC
[03:22:53] <n00bn00b> tl;dr got E   ImportError: attempted relative import with no known parent package
[03:23:19] <n00bn00b> so probably these *install* issue you mentioned but not yet figured out on myself (looking for it)
[03:23:50] <Yhg1s> n00bn00b: okay! So, see how the error you're getting is from test_sanity.py's "from ..task3.steam_task import sanity_flag"?
[03:23:55] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:24:09] <Yhg1s> n00bn00b: the way you're running the tests, they're not inside a package, so you can't import from the parent package.
[03:24:24] <Yhg1s> n00bn00b: you *probably* just want to do 'from task3.steam_task import sanity_flag"
[03:24:50] *** Joins: schumaml2 (~schumaml@dslb-188-104-182-126.188.104.pools.vodafone-ip.de)
[03:25:06] <n00bn00b> hmm but tests are in tests/test_sanity.py
[03:25:12] <Yhg1s> yes, I undestand this.
[03:25:18] <n00bn00b> sorry very noob with pytest and tox ;/
[03:25:32] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 258 seconds)
[03:25:48] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:26:02] <Yhg1s> You have to decide whether the tests should be inside the package they're testing, or not. If they're not inside the package they're testing, they *cannot use relative imports* to import the package they're testing.
[03:26:08] <n00bn00b> if I change to import from global scope (as I understand Your tip) it says ModuleNotFoundError
[03:26:12] *** Joins: rpkilby_ (~rpkilby@2600:100f:b129:d8bd:a05f:4673:f412:8ec)
[03:26:14] <Yhg1s> It is recommended, for a variety of reasons, to not do that.
[03:26:30] *** Quits: schumaml1 (~schumaml@dslb-092-074-013-036.092.074.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[03:26:35] <n00bn00b> yeah I put them outside
[03:26:59] *** Quits: y1n (~y1n@84-115-65-249.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[03:27:02] *** Joins: schumaml3 (~schumaml@dslb-188-104-185-087.188.104.pools.vodafone-ip.de)
[03:27:06] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 276 seconds)
[03:27:07] <Yhg1s> n00bn00b: oh, I see 'task3' is a package, not a module. You also need to change your setup.py file to remove 'py_modules = ["task3"]', and instead say 'packages = ["task3"]', or 'packages = setuptools.find_packages()'
[03:27:16] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:27:26] <n00bn00b> tests are in the repo root ./ and module is too (./tests/test_sanity & ./task3/...)
[03:27:37] <n00bn00b> ah!
[03:27:44] <n00bn00b> that could be the problem indeed
[03:28:00] <n00bn00b> which PEP(s) I should read to be more fluent with these?
[03:28:02] *** Joins: y1n (~y1n@84-115-65-249.wifi.dynamic.surfer.at)
[03:28:04] <Yhg1s> well, it's certainly is *a* problem. it might not be the only one.
[03:28:09] <Yhg1s> n00bn00b: no PEPs. read packaging.python.org instead.
[03:28:33] <n00bn00b> oh I see, sorry for turning to being not able to research about proper documentation
[03:28:37] *** Joins: ice9 (~ice9@user/ice9)
[03:28:43] <n00bn00b> Thanks for Your help
[03:28:46] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Read error: Connection reset by peer)
[03:29:00] *** Joins: schumaml4 (~schumaml@dslb-092-074-012-200.092.074.pools.vodafone-ip.de)
[03:29:08] <jochum> n00bn00b: i prefer blake over flake8
[03:29:16] <n00bn00b> black?
[03:29:22] <n00bn00b> I use black + flake8
[03:29:22] <jochum> n00bn00b: the pre-commit hock sounds nice
[03:29:23] *** Joins: cjb (~cjb@user/cjb)
[03:29:24] *** Quits: schumaml2 (~schumaml@dslb-188-104-182-126.188.104.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[03:29:31] <n00bn00b> hooks
[03:29:49] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[03:29:52] *** Quits: rpkilby (~rpkilby@2600:100f:b129:d8bd:a464:778f:893e:c7eb) (Ping timeout: 256 seconds)
[03:29:52] <jochum> n00bn00b: but my teammates would hate me then :)
[03:30:53] <n00bn00b> jochum: will not if they willing to learn and would understand why
[03:31:12] <n00bn00b> for example, you could not follow the "dry-run" of pre-commit I love to do
[03:31:20] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[03:31:23] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Read error: Connection reset by peer)
[03:31:30] *** Joins: dre (~dre@2001:8003:c932:c301:8b30:ab03:98e9:eb57)
[03:31:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[03:31:45] <n00bn00b> and if black is able to build AST of code and fix it
[03:31:47] *** Joins: emika1 (~emika@83.136.182.184)
[03:31:49] *** Quits: schumaml3 (~schumaml@dslb-188-104-185-087.188.104.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[03:31:55] <n00bn00b> I do it in pre-commit hook (no need to run black again)
[03:32:03] *** Quits: emika (~emika@83.136.182.14) (Ping timeout: 250 seconds)
[03:32:03] *** emika1 is now known as emika
[03:32:11] <n00bn00b> also, I hated black because of " over ' war
[03:32:20] <n00bn00b> but still, this is just the " or '
[03:32:33] <dale> I run into this problem frequently where I need to do something like process groups of lines in a file without knowing how big the group is, and without being able to just load the whole thing into memory.  I'm curious how others solve it.  Here's today's example, failing test case at line 61: https://bpa.st/ODKA
[03:32:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:32:43] <n00bn00b> if I must put extra work to configure brunnete or other fork- not worth imho jochum
[03:32:58] <dale> How would you modify process_lines in that example?
[03:33:02] <n00bn00b> just configure end of line, and other pre-commit-hooks repo
[03:33:05] <n00bn00b> jochum: ^^^
[03:33:35] *** Quits: schumaml4 (~schumaml@dslb-092-074-012-200.092.074.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[03:34:00] <n00bn00b> Yhg1s: it worked, I would now get back to the documentation and follow it; thank You again (pointing to my pkg in packages not in py_modules)
[03:34:11] *** Joins: schumaml4 (~schumaml@dslb-188-104-182-188.188.104.pools.vodafone-ip.de)
[03:34:36] <jochum> n00bn00b: I like to left my teammates some freedom and we work realy well together without enforcing something.
[03:34:54] <dale> Here's my first idea, but I find it inelegant: https://bpa.st/RK3A
[03:34:55] *** Joins: zenloading (~zenloadin@user/zenloading)
[03:35:11] <Yhg1s> dale: seems to me the problem isn't with reading lines, it's with not dealing with appending to counts after the while ends.
[03:35:13] <dale> I kind of "unreadline()" was more of a thing.
[03:35:32] *** Quits: rpkilby_ (~rpkilby@2600:100f:b129:d8bd:a05f:4673:f412:8ec) (Ping timeout: 256 seconds)
[03:35:32] *** Quits: qlixed (~qlixed@181.45.80.239) (Ping timeout: 245 seconds)
[03:35:35] <dale> Yhg1s: So you'd just copy/paste the logic after the loop?
[03:35:39] <n00bn00b> jochum: "Art lives from constraints and dies from freedom." Leonardo da Vinci
[03:35:42] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:36:10] <Yhg1s> dale: sure. If it was more than one line I'd put it in a function, instead. Likely a method on the thing keeping state.
[03:36:40] *** Quits: y1n (~y1n@84-115-65-249.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[03:36:44] <n00bn00b> still, you could not enforce something - I had multiple extra excludes in the flake8 because probably your code now not follow the rules
[03:37:00] <n00bn00b> and most professionals could agree and conform
[03:37:03] *** Joins: y1n (~y1n@84-115-64-177.wifi.dynamic.surfer.at)
[03:37:10] <n00bn00b> even if You use pylint or any such tool
[03:37:15] <n00bn00b> You are dev not to make linter work
[03:37:15] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Read error: Connection reset by peer)
[03:37:41] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 250 seconds)
[03:37:46] <n00bn00b> or to test dumbly the code which machine is good at it; in that time You could play PS5 (if You bought it already)
[03:38:18] *** Quits: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[03:38:25] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:38:30] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[03:38:39] <dale> Yhg1s: Yeah, always an option, certainly.  I was hoping for some more elegant pattern.
[03:39:29] <n00bn00b> dale isn't that function somehow heavy?
[03:40:02] <dale> n00bn00b: How are we measuring a function's mass in this case, and should we assume nominal Earth gravity?
[03:40:16] *** Joins: trace987 (~trace@91.66.152.136)
[03:40:18] <n00bn00b> no, rather than simple complexity
[03:40:23] <Yhg1s> dale: a more elegant approach is certainly possible, by factoring out more of the code. I'm just pointing out that in this case, the problem isn't that you need to un-read a line.
[03:40:25] <n00bn00b> (i.e. measured by flake)
[03:40:41] <dale> Yhg1s: Oh, you are right.
[03:40:54] <dale> n00bn00b: Simpler version welcome.
[03:40:58] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[03:41:20] <n00bn00b> rather, try to take the part of responsibility outside and try to use it without modification
[03:41:24] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:41:30] <dale> n00bn00b: Personally I thought it was pretty simple.
[03:42:04] <n00bn00b> and try as most as You could, think about data it is immutable by default (even if that isn't)
[03:42:44] <n00bn00b> dale: maybe, but if You had the problem with some code then You probably missed sth obvious or make it to hard for yourself to maintain
[03:42:54] <n00bn00b> it is not the problem with You, this code is quite clever
[03:43:04] <n00bn00b> but the problem is that our brains arent state machines
[03:43:31] <n00bn00b> so if You chop the problem into simpler and shorter definitions
[03:43:48] <n00bn00b> and name them as you were about to write english
[03:43:57] <n00bn00b> then the outcome could be quite suprising
[03:44:46] <dale> Yhg1s: I guess I mentioned the unreadline thing because a previous iteration of this solution worked by reading lines in a run until EOF or a line that ended the run, and in the latter case I wanted to push that line back into the iterator. :)
[03:45:40] <n00bn00b> what if the input would be just generator?
[03:46:16] <n00bn00b> or, why You need to prepare whole data to start processing the first chunk?
[03:46:42] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[03:46:49] *** Quits: zenloading (~zenloadin@user/zenloading) (Remote host closed the connection)
[03:46:50] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:46:52] <n00bn00b> maybe that is too late for myself to be understandable, so sorry for messing in Your conversation Yhg1s & dale  :)
[03:46:53] <dale> n00bn00b: I don't think anything would change here if my input was a generator?
[03:47:07] <dale> n00bn00b: Or else I'm not seeing it.
[03:47:28] <n00bn00b> ok, so my idea is to start with processing line
[03:47:40] <n00bn00b> which would be agnostic for any source type
[03:47:47] <n00bn00b> test this
[03:47:51] *** Joins: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[03:48:05] <n00bn00b> make this simpler
[03:48:15] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 265 seconds)
[03:48:56] <n00bn00b> then, process multiple, with agnostic source type (file, stream, csv row, xlsx, tcp frame, cat img...)
[03:49:49] *** Quits: trace987 (~trace@91.66.152.136) (Ping timeout: 250 seconds)
[03:50:03] <n00bn00b> this would not be trivial as you have chunks
[03:50:24] <n00bn00b> but the client using process_line would manage the state
[03:51:55] *** Quits: n00bn00b (~N00b@user/n00bn00b) (Quit: WeeChat 3.0)
[03:52:29] *** Joins: n00bn00b (~N00b@user/n00bn00b)
[03:52:32] *** Quits: thinkofher (sid503725@user/thinkofher) ()
[03:55:12] *** Joins: iflema (~ian@user/iflema)
[03:56:12] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:56:26] <dale> Here's another solution but I wouldn't say I feel good about it: https://bpa.st/RPJA
[03:56:33] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[03:58:11] <dale> n00bn00b: Not quite following how breaking out the idea of chunks from the processing of individual chunks would help.  You could probably throw out the chunks entirely, I just kept them in while trying to simplify the real case of this I was running into today (which was actual unified diff parsing).
[03:58:40] <dale> The real problem is really what happens inside a chunk/hunk/whatever I called 'em.
[03:59:56] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:00:31] <dale> OTOH I find the hypothetical implementation of itertools.groupby as given in the docs pretty elegant, I like that.
[04:00:31] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[04:01:33] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: Ping timeout (120 seconds))
[04:01:41] <dale> I mean, ignoring things like instantiating object() every time __next__ is called.
[04:02:19] *** Quits: FastZ (~FastZ@pool-72-83-101-219.washdc.east.verizon.net) (Quit: Bye now!)
[04:03:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:03:17] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[04:03:41] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 250 seconds)
[04:03:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[04:04:08] *** Joins: dulanic (~dulanic@47.187.144.163)
[04:05:16] <dale> (islice wouldn't work for actual unified diff hunks, unfortunately, since AFAIK you can't tell how many lines will be in a hunk from its header.)
[04:06:30] *** __jmcantrell__ is now known as jmcantrell
[04:08:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:09:10] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04)
[04:10:29] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[04:13:26] *** Joins: vimart (~vimart@148.252.128.137)
[04:15:40] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) ()
[04:16:10] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[04:16:57] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[04:17:12] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[04:17:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:17:28] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:17:30] *** Joins: rany (~rany@user/rany)
[04:17:52] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:18:07] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[04:18:30] *** Joins: sgn (~sgn@user/sgn)
[04:19:53] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:19:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 255 seconds)
[04:19:59] *** Wulf4 is now known as Wulf
[04:22:08] *** Quits: ExpiredKebab (~sgreadly@121.74.209.17) (Quit: Textual IRC Client: www.textualapp.com)
[04:23:15] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[04:23:33] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[04:23:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:24:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[04:26:43] *** MyRagingHadron is now known as Roey
[04:27:21] *** Quits: tsaka__ (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[04:27:37] *** Quits: hposca (~hposca@node-1w7jr9phoke2uuevlzoqmsdks.ipv6.telus.net) (Ping timeout: 245 seconds)
[04:29:57] *** Joins: rany (~rany@user/rany)
[04:30:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f89d-a95a-fcab-101a.res6.spectrum.com) (Ping timeout: 245 seconds)
[04:30:49] *** Joins: V1mV1m (~VimVim@85.191.61.76)
[04:30:59] *** Quits: V1mV1m (~VimVim@85.191.61.76) (Remote host closed the connection)
[04:31:00] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:28) (Quit: Client closed)
[04:31:19] *** Joins: VimVim (~VimVim@85.191.61.76)
[04:31:45] *** Joins: audio (~audio@2603-8081-1800-00ad-277b-dcf0-c358-dfd5.res6.spectrum.com)
[04:33:35] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[04:34:27] *** Quits: y1n (~y1n@84-115-64-177.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[04:35:12] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:35:37] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 265 seconds)
[04:35:45] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[04:36:06] *** Quits: rany (~rany@user/rany) (Ping timeout: 265 seconds)
[04:36:42] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[04:36:46] *** ihaveamac_ is now known as ihaveamac
[04:36:50] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 258 seconds)
[04:37:28] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[04:39:47] *** Joins: ndegruchy (~nathan@c-76-122-38-176.hsd1.fl.comcast.net)
[04:40:04] *** Joins: rany (~rany@user/rany)
[04:41:10] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:42:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[04:42:49] *** Joins: ollieburt0n (~pc@78.183.218.121)
[04:43:24] *** Parts: ollieburt0n (~pc@78.183.218.121) ()
[04:43:35] *** Joins: ollieburt0n (~pc@78.183.218.121)
[04:43:37] *** Parts: ollieburt0n (~pc@78.183.218.121) ()
[04:45:43] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[04:45:53] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[04:46:53] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:46:59] *** Quits: rany (~rany@user/rany) (Ping timeout: 255 seconds)
[04:47:18] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:47:38] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[04:48:01] *** Joins: rany (~rany@user/rany)
[04:48:39] *** Joins: waveform (~quassel@waveform.plus.com)
[04:48:59] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[04:49:00] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:49:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:50:52] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[04:51:57] *** Joins: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr)
[04:51:58] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[04:52:27] *** Quits: kapad (~kapad@188.4.3.191.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[04:53:13] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[04:53:42] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[04:53:47] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[04:54:16] *** Joins: ioistired (~ioistired@signald/ioistired)
[04:54:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:54:47] *** Joins: rany_ (~rany@user/rany)
[04:55:04] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[04:55:17] <ioistired> i'm trying to train GPT-2 on custom text using this guide: https://medium.com/ai-innovation/beginners-guide-to-retrain-gpt-2-117m-to-generate-custom-text-content-8bb5363d8b7f i've installed CUDA 11.4 and cuDNN 8.2 and tensorflow seems to be picking up those libraries correctly as you can see in my log: https://tpaste.us/bVyX however, i keep getting OOM errors despite my graphics card having 6 GB of RAM. what should I do?
[04:55:59] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[04:56:15] <grym> ioistired: lower your batch size
[04:56:29] <grym> 6 GB is "ehhh, almost good enough" for most transformers
[04:56:38] <ioistired> i'm using the 117M model
[04:56:46] <ioistired> how do i lower it below 1?
[04:56:49] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[04:56:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[04:56:59] <ioistired> is it floating point?
[04:57:48] <grym> no, it's an integer
[04:57:54] <ioistired> the default is 1
[04:57:59] <grym> do you have other stuff hogging this gpu? a stale process, mabye?
[04:58:02] <ioistired> no
[04:58:06] <grym> nvidia-smi can usually show you
[04:58:20] <grym> it should be able to allocate 4 gigs on a 6 gig GPU
[04:58:22] <ioistired> i checked taskmgr 0 GB of GPU ram is in use
[04:58:50] <ioistired> i don't have a command called nvidia-smi
[04:59:24] <grym> mm, i don't know much about windows nvidia drivers
[04:59:25] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:59:43] <ioistired> i tried to do it in WSL but it was hassle
[04:59:43] <grym> ioistired: how big is posts.npZ
[04:59:46] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:59:48] <ioistired> uhh one sec
[05:00:19] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[05:00:40] <ioistired> 199 KB
[05:00:45] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[05:01:05] <grym> you might want to switch your optimizer to SGD
[05:01:08] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 268 seconds)
[05:01:50] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[05:01:54] *** Quits: AutomatedTester (uid395371@selenium/developer/AutomatedTester) (Quit: Connection closed for inactivity)
[05:02:13] <ioistired> how do i do that
[05:02:21] <ioistired> this is my first time doing anything with ML
[05:02:28] *** Joins: rany (~rany@user/rany)
[05:02:37] <grym> i don't know this codebase
[05:02:52] <grym> so grep for "Adam", perhaps, and see where that string gets set
[05:02:54] <grym> kind of a hack
[05:03:22] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 240 seconds)
[05:03:43] <grym> but right before you OOM, you see "Using Adam optimizer"
[05:03:53] <ioistired> opt = tf.train.AdamOptimizer(learning_rate=args.learning_rate)
[05:04:23] <grym> yeah, maybe change that
[05:05:15] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:05:25] *** Joins: driib (~driib@185.195.233.169)
[05:05:35] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 265 seconds)
[05:05:35] <ioistired> change it to…?
[05:05:45] <ioistired> i didn't find "SGDOptimizer" in the docs
[05:06:20] <ioistired> is it GradientDescentOptimizer?
[05:06:23] <grym> possibly https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/SGD ?
[05:06:32] <grym> tf is weird and the API's all over the place between versions
[05:06:53] <ioistired> i'll try it
[05:07:48] *** Joins: rany_ (~rany@user/rany)
[05:08:11] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:08:37] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:08:37] *** Joins: dermato (~dermatobr@154.3.251.98)
[05:08:58] <ioistired> ok looks like i just had to passs --optimizer sgd to get it to use GradientDescentOptimizer
[05:09:02] *** Quits: ndegruchy (~nathan@c-76-122-38-176.hsd1.fl.comcast.net) (Ping timeout: 255 seconds)
[05:09:04] <ioistired> however it still OOMs
[05:09:21] <ioistired> do i need more system RAM as well? i noticed they both spiked
[05:09:35] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[05:10:38] <grym> possibly but if CUDA is doing the yelling, it's probably GPU ram
[05:10:41] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:10:44] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[05:10:58] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:11:07] <ioistired> so what gives q_q
[05:11:20] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[05:12:01] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[05:12:16] <grym> https://github.com/openai/gpt-2/issues/226  some other options to fiddle, possibly
[05:12:25] <grym> what gives is that transformers are massive data chonkers
[05:12:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[05:13:30] <grym> and the designers of GPT-x's architecture had more or less unbounded compute available to them, and don't care about people who don't
[05:13:39] <grym> when it comes to architecture design, anyway
[05:14:19] *** Quits: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 250 seconds)
[05:14:24] *** Joins: rany (~rany@user/rany)
[05:14:43] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[05:16:10] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[05:16:57] *** Henry151 is now known as NotHenry151
[05:17:09] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:17:22] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 240 seconds)
[05:17:23] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:17:34] *** NotHenry151 is now known as Henry151
[05:17:42] *** Joins: rany (~rany@user/rany)
[05:19:41] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) ()
[05:21:01] *** Joins: frost (~frost@59.71.241.179)
[05:22:05] <dale> OK, I take it back, I like my itertools.groupby hack. ;)
[05:22:27] *** Quits: dermato (~dermatobr@154.3.251.98) (Quit: WeeChat 3.0.1)
[05:22:34] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:22:41] *** Joins: dermato (~dermatobr@154.3.251.98)
[05:22:58] *** Joins: rany (~rany@user/rany)
[05:23:52] *** Quits: user3456 (user3456@user/user3456) (Quit: ZNC - https://znc.in)
[05:23:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[05:24:58] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[05:25:12] *** Joins: user3456 (user3456@user/user3456)
[05:26:15] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[05:26:42] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 240 seconds)
[05:27:07] *** Joins: ali1234 (~al@user/ali1234)
[05:28:19] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:28:46] *** Joins: rany (~rany@user/rany)
[05:28:58] *** Quits: yte3 (~0@151.25.249.108) (Ping timeout: 240 seconds)
[05:30:18] *** Joins: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:42] *** Joins: vlm (~vlm@user/vlm)
[05:33:25] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:33:54] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[05:33:55] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:34:34] *** Joins: rany (~rany@user/rany)
[05:34:41] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[05:35:13] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[05:36:25] <ioistired> grym: i can't find any reference to "block_size" in the docs
[05:36:32] <ioistired> i'm already using a batch size of 1 also
[05:37:21] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:37:22] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 240 seconds)
[05:37:40] *** Joins: rany (~rany@user/rany)
[05:37:50] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[05:38:51] *** Joins: dcaro (~dcaro@user/dcaro)
[05:39:04] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[05:40:05] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 255 seconds)
[05:40:29] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[05:42:40] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:42:55] *** Joins: rany (~rany@user/rany)
[05:43:20] <grym> maybe drop your floating precision?
[05:43:26] <grym> this is all kind of voodoo, sorry
[05:43:30] <grym> but that's how it goes :/
[05:44:03] <ioistired> how do i do that
[05:44:49] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[05:45:00] <grym> i don't know this codebase at all.  but usually there's an option to set what floating point size you want; the issue i linked suggested fp16
[05:45:12] <grym> (the default is probably fp64)
[05:46:07] *** Joins: trace987 (~trace@91.66.152.136)
[05:46:53] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:1d74:1988:2cc4:be4a)
[05:47:55] *** Joins: rany_ (~rany@user/rany)
[05:49:05] *** Quits: rany (~rany@user/rany) (Ping timeout: 265 seconds)
[05:50:16] *** Quits: tf (~tf@user/tf) (Quit: tf)
[05:50:45] *** Joins: tf (~tf@user/tf)
[05:51:28] *** Joins: califax- (~califax@user/califx)
[05:52:05] *** Joins: rany (~rany@user/rany)
[05:52:11] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[05:54:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[05:54:14] *** Joins: brabrax (~brabrax@user/brabrax)
[05:54:22] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 256 seconds)
[05:54:42] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:54:43] *** califax- is now known as califax
[05:54:56] *** Quits: trace987 (~trace@91.66.152.136) (Ping timeout: 256 seconds)
[05:56:34] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[05:57:08] *** Joins: rany (~rany@user/rany)
[05:57:51] *** Joins: Auctus (~auctus@user/auctus)
[05:58:06] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[05:59:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[06:00:16] *** Joins: pnoud (~pnoud@user/pnoud)
[06:00:32] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:01:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:02:34] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[06:03:00] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:03:24] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Read error: Connection reset by peer)
[06:04:44] *** Joins: xa0s (~xa0s@mab.sdf.org)
[06:05:04] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[06:05:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[06:05:50] *** Joins: rany (~rany@user/rany)
[06:05:59] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[06:06:07] *** Joins: monkey_ (~user@190.104.116.134)
[06:06:10] <ioistired> grym i meant "how would i set it in tf" not in this codebase
[06:06:10] *** Quits: ioistired (~ioistired@signald/ioistired) (Quit: ioistired)
[06:06:11] *** Joins: iois_sleepy (~ioistired@signald/ioistired)
[06:06:18] *** Quits: xa0s (~xa0s@mab.sdf.org) (Client Quit)
[06:06:58] *** Quits: HaJo (~hajo@2a01:c23:8d43:8400:821f:2ff:feef:dabf) (Ping timeout: 240 seconds)
[06:07:06] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Client Quit)
[06:07:21] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[06:09:50] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[06:10:04] *** Quits: steam (~steam@user/steam) (Read error: Connection reset by peer)
[06:10:49] *** Joins: dermato_ (~dermatobr@154.21.114.128)
[06:11:25] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:11:50] *** Joins: rany (~rany@user/rany)
[06:14:12] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[06:15:10] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:15:32] *** Joins: rany (~rany@user/rany)
[06:15:51] *** Quits: vimart (~vimart@148.252.128.137) (Quit: WeeChat 2.8)
[06:18:14] *** Quits: iois_sleepy (~ioistired@signald/ioistired) (Remote host closed the connection)
[06:18:33] *** Joins: iois_sleepy (~ioistired@signald/ioistired)
[06:20:35] *** Quits: rany (~rany@user/rany) (Ping timeout: 255 seconds)
[06:21:07] *** Joins: rany (~rany@user/rany)
[06:21:52] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[06:22:04] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:23:54] *** Quits: baltazar (~baltazar@178-164-154-141.pool.digikabel.hu) (Ping timeout: 276 seconds)
[06:24:13] *** iois_sleepy is now known as ioistired
[06:24:20] <ioistired> grym i meant "how would i set it in tf" not in this codebase
[06:25:07] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[06:25:19] *** Joins: baltazar (~baltazar@92-249-212-91.pool.digikabel.hu)
[06:25:41] *** Joins: rany_ (~rany@user/rany)
[06:25:57] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-71ea-e5f1-6645-ae14.res6.spectrum.com)
[06:27:01] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:27:21] <grym> https://www.tensorflow.org/guide/mixed_precision  has some pointers, but it's going to be implementation and API flavor dependent
[06:28:34] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[06:29:27] *** Joins: derelict (~derelict@user/derelict)
[06:30:04] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[06:30:10] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 265 seconds)
[06:30:32] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:30:42] *** Quits: driib (~driib@185.195.233.169) (Read error: Connection reset by peer)
[06:30:50] *** Joins: rany (~rany@user/rany)
[06:30:55] *** Joins: driib (~driib@185.195.233.169)
[06:31:36] *** Quits: mout (~mout@li1502-46.members.linode.com) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[06:31:50] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[06:32:44] *** Joins: HaMsTeRs (~mx@121.202.70.46)
[06:34:00] *** Joins: humberto1 (~humbertow@2806:107e:f:5e63:146e:3155:2a83:a30e)
[06:35:54] *** Quits: HaMsTeRs (~mx@121.202.70.46) (Client Quit)
[06:36:17] *** Joins: HaMsTeRs (~mx@121.202.70.46)
[06:36:46] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:36:47] *** Quits: humbertowoody (~humbertow@2806:107e:f:5e63:b022:dbd7:f0ef:6dba) (Ping timeout: 255 seconds)
[06:37:20] *** Joins: rany_ (~rany@user/rany)
[06:37:52] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:38:04] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:38:35] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:38:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 258 seconds)
[06:38:57] <ioistired> what a clusterfuck tbh
[06:39:05] <grym> welcome to tensorflow!
[06:39:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:39:06] *** Quits: humberto1 (~humbertow@2806:107e:f:5e63:146e:3155:2a83:a30e) (Ping timeout: 240 seconds)
[06:39:16] <ioistired> tempted to just rent out a damn TPU
[06:39:28] <ioistired> or buy a stupid amount of RAM
[06:39:30] <grym> heeey you just discovered the business model
[06:39:46] <ioistired> fucking hate this trash software lol
[06:40:06] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-484e-cf87-53d2-b66c.res6.spectrum.com)
[06:40:11] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:40:15] <ioistired> never heard of something other than high end video games on top settings or graphics rendering choking on 6 GB of RAM
[06:40:26] <grym> ah.  well, welcome to machine learning
[06:40:34] *** Joins: Stonefruit (~Stonefrui@static-198-54-133-166.cust.tzulo.com)
[06:40:40] <ioistired> i do not feel welcome
[06:40:41] <grym> i have 8 and i OOM at high batch sizes
[06:40:47] <ioistired> i feel attacked and spit on
[06:41:09] <grym> big matrices are hungry for GPUs
[06:41:13] <grym> that's just how it is
[06:42:01] <grym> and many people generally don't profile or attempt to run fine tuning or even inference on small systems
[06:42:10] *** Quits: akk (~akk@75.161.155.222) (Quit: +++)
[06:42:11] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 258 seconds)
[06:42:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-71ea-e5f1-6645-ae14.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:42:18] *** Joins: rany (~rany@user/rany)
[06:42:26] <grym> (they _should_!)
[06:42:43] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[06:42:50] <grym> ioistired: but yeah it's very far from turnkey yet
[06:42:54] <grym> as you have discovered
[06:43:30] *** Quits: AkechiShiro (~licht@user/akechishiro) (Ping timeout: 268 seconds)
[06:44:03] *** Joins: jinsun (~quassel@user/jinsun)
[06:44:05] <Stonefruit> ioistired: I have no idea what I joined in the middle of, but how sad you feel this way. I hope things improve for you!
[06:44:18] <ioistired> thanks
[06:44:25] <ioistired> it's machine learning woes
[06:44:51] <grym> ioistired: if it helps, i regularly yell profanities at ML code and i've been doing it for years now
[06:45:03] <ioistired> i think that's just all code ;)
[06:45:13] <grym> upside: you're not alone.  downside: well, we're all still banging our heads into a brick wall
[06:45:33] *** Joins: AkechiShiro (~licht@user/akechishiro)
[06:45:47] *** Joins: derelict_ (~derelict@user/derelict)
[06:47:25] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:48:02] *** Quits: rany (~rany@user/rany) (Ping timeout: 255 seconds)
[06:48:46] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:49:15] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 276 seconds)
[06:49:53] *** Joins: rany (~rany@user/rany)
[06:53:42] *** Joins: rany_ (~rany@user/rany)
[06:54:30] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:54:33] <n00bn00b> hey, have you ever noticed that requests library "stash" (drop?) some keys from response as they are "too large" to process by it?
[06:54:34] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:54:47] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 255 seconds)
[06:55:08] <n00bn00b> i got response from exemplary API via webproxy and it contains some amount but response in pythondoes not
[06:55:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:55:54] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:57:54] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[06:58:56] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[07:00:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (copper.libera.chat (Nickname regained by services)))
[07:00:14] *** finn_elija is now known as FinnElija
[07:00:20] <n00bn00b> haha, sorry cruel world - I forgot that data payload in requests.get must be in url not in data dict because it would be treated as post payload
[07:00:32] *** Quits: n00bn00b (~N00b@user/n00bn00b) (Quit: WeeChat 3.0)
[07:01:47] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 252 seconds)
[07:02:38] *** Joins: rany (~rany@user/rany)
[07:02:57] *** Quits: Stonefruit (~Stonefrui@static-198-54-133-166.cust.tzulo.com) (Quit: Leaving)
[07:03:54] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[07:03:59] *** Quits: emerent (~quassel@p200300cd57058c73ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:04:58] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[07:05:00] *** Joins: emerent (~quassel@p200300cd57058cc0ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:05:15] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[07:05:33] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[07:06:01] *** Joins: rany_ (~rany@user/rany)
[07:06:09] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 276 seconds)
[07:06:15] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:07:34] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Client Quit)
[07:09:42] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[07:09:52] *** Joins: frost (~frost@59.71.241.179)
[07:11:13] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[07:11:23] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Client Quit)
[07:11:46] *** Joins: rany (~rany@user/rany)
[07:13:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[07:13:37] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[07:14:16] *** Joins: humberto1 (~humbertow@2806:107e:f:6403:c584:2c3:628c:330c)
[07:17:07] *** Joins: rany_ (~rany@user/rany)
[07:17:40] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:19:29] *** humberto1 is now known as humbertwoody
[07:20:56] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[07:21:48] *** Joins: rany (~rany@user/rany)
[07:22:45] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[07:23:20] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[07:24:18] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[07:24:46] *** Joins: Atque (~Atque@user/atque)
[07:27:06] *** Joins: derelict (~derelict@user/derelict)
[07:27:54] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:28:16] *** Joins: rany_ (~rany@user/rany)
[07:28:50] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:28:55] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:30:06] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 258 seconds)
[07:31:50] *** Joins: rany (~rany@user/rany)
[07:32:40] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[07:37:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:38:02] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:38:53] *** Quits: rany (~rany@user/rany) (Ping timeout: 255 seconds)
[07:39:31] *** Joins: rany (~rany@user/rany)
[07:40:38] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:41:08] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Ping timeout: 255 seconds)
[07:42:34] *** Joins: pnoud (~pnoud@user/pnoud)
[07:43:28] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[07:44:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[07:45:16] *** Joins: rany (~rany@user/rany)
[07:48:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:49:23] *** Joins: akashgp09 (uid500614@id-500614.brockwell.irccloud.com)
[07:49:46] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[07:50:57] *** Quits: squirrel (~sq@user/squirrel) (Ping timeout: 245 seconds)
[07:51:02] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[07:51:54] *** Joins: OPK (~OPK@user/opk)
[07:51:57] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[07:53:18] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 265 seconds)
[07:53:20] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:53:25] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[07:55:11] *** Joins: rany (~rany@user/rany)
[07:56:03] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[07:57:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:57:52] *** Joins: emika4 (~emika@83.136.182.49)
[07:58:03] *** Joins: djapo (~archangel@user/djapo)
[07:58:05] *** Quits: emika (~emika@83.136.182.184) (Ping timeout: 258 seconds)
[07:58:05] *** emika4 is now known as emika
[07:59:42] *** Quits: dermato (~dermatobr@154.3.251.98) (Quit: WeeChat 3.0.1)
[08:00:23] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:00:25] *** Joins: rany_ (~rany@user/rany)
[08:00:52] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[08:01:38] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[08:05:16] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 256 seconds)
[08:06:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[08:08:20] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[08:08:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:15:21] *** Joins: gggp (~gggp@60.10.194.43)
[08:15:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:15:30] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 240 seconds)
[08:15:43] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 258 seconds)
[08:16:21] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 276 seconds)
[08:16:26] *** Joins: derelict_ (~derelict@user/derelict)
[08:17:17] <gggp> atomic operation means doing with one instruction?
[08:18:21] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[08:18:26] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[08:18:50] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:19:11] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[08:19:23] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 255 seconds)
[08:19:41] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[08:20:23] *** Joins: pnoud (~pnoud@user/pnoud)
[08:20:41] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[08:20:56] <xrogaan> Stupid question here. Is `num ** exp` exactly the same as `math.pow(num, exp)`?
[08:21:23] <whatsupdoc> int object has no attribute left????
[08:22:07] <whatsupdoc> https://dpaste.com/HZM5QH63E
[08:22:11] <whatsupdoc> Help
[08:22:43] <whatsupdoc> xrogaan: num ** exp is faster
[08:23:19] <xrogaan> it doesn't look faster.
[08:23:27] <xrogaan> they seem identical.
[08:23:28] <whatsupdoc> xrogaan: one includes a function call, the other does not
[08:23:51] <xrogaan> yeah, no, that can be optimized
[08:23:59] *** Joins: HaMcHi (~mx@182.153.55.162)
[08:24:10] <xrogaan> what's your treenode object?
[08:24:10] <whatsupdoc> idk i always use **
[08:24:32] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[08:24:41] <whatsupdoc> definition is commented out
[08:24:43] <phy1729> curr = curr.left  means curr is now an int not a tree node
[08:24:53] <phy1729> or can be an int not a treenode
[08:25:38] <whatsupdoc> oh i see
[08:25:40] *** Quits: LiftLeft (~LiftLeft@138.199.13.135) (Ping timeout: 256 seconds)
[08:25:41] *** Quits: HaMsTeRs (~mx@121.202.70.46) (Ping timeout: 255 seconds)
[08:25:46] *** Joins: Atque (~Atque@user/atque)
[08:26:23] <xrogaan> forgot the .val heh?
[08:27:43] <xrogaan> Alright, so the documentation answered my question: Unlike the built-in ** operator, math.pow() converts both its arguments to type float. Use ** or the built-in pow() function for computing exact integer powers.
[08:29:08] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[08:31:00] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 265 seconds)
[08:31:38] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[08:33:07] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:34:10] *** Joins: dcaro_ (~dcaro@user/dcaro)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:02] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[08:36:13] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[08:36:22] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:34] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 256 seconds)
[08:37:34] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 256 seconds)
[08:37:34] *** dcaro_ is now known as dcaro
[08:39:42] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[08:41:09] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 265 seconds)
[08:44:57] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[08:47:08] <dale> altendky: Ugh, just ran into your https://github.com/sphinx-contrib/restbuilder/issues/25.  I hate the nested markup thing in rST, and I think I've hated it for over a decade now.
[08:47:32] *** Joins: HaMsTeRs (~mx@14-0-175-242.static.pccw-hkt.com)
[08:47:35] *** Joins: Mija (~Mija@user/mija)
[08:48:04] *** Quits: HaMcHi (~mx@182.153.55.162) (Ping timeout: 268 seconds)
[08:48:34] <dale> gggp: It depends on the context in which "atomic operation" is used.
[08:48:47] *** Joins: fdan (~fdan@192.146.154.3)
[08:49:05] <gggp> dale, memory access
[08:49:36] *** Quits: Melantha (~pyon@user/pyon) (Quit: WeeChat 3.2)
[08:49:53] *** Joins: Melantha (~pyon@user/pyon)
[08:49:59] <dale> gggp: I think it probably depends on details of the architecture but on x86-64 in common conditions let's go with "yes, a single instruction" as a simplified answer.
[08:50:53] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:51:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:51:31] <dale> Like, I have no idea if NUMA affects atomic reads, let alone writes, on x86-64 for example.  I'm also not sure if there are instructions that need to be issued to tell another CPU to flush cache or something like that.  There may be some way to coordinate memory "locks" between CPUs?  And technically I think at least some operations on x86-64 are instruction plus a modifier.
[08:51:54] <dale> Architectures other than x86-64 may be yet more different, I think.
[08:53:10] *** Joins: upsala (~zcb@185.213.155.160)
[08:55:36] *** __jmcantrell__ is now known as jmcantrell
[08:56:03] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.2)
[08:58:04] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 265 seconds)
[08:58:51] <SnoopJ> It has the same meaning it originally did in chemistry: it's intended to indicate that an operation is indivisible. It happens all the way, or not at all.
[08:59:47] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[09:00:29] *** Quits: VimVim (~VimVim@85.191.61.76) (Ping timeout: 265 seconds)
[09:00:57] *** Quits: adamts (~Adam@user/mysteryblokhed) (Ping timeout: 258 seconds)
[09:01:32] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[09:02:40] *** Quits: HaMsTeRs (~mx@14-0-175-242.static.pccw-hkt.com) (Read error: Connection reset by peer)
[09:04:00] <nurupo> what's the right channel to talk about tox? on freenode there used to be #pylib or something like that for that
[09:04:10] *** Joins: LiftLeft (~LiftLeft@138.199.10.80)
[09:04:37] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:04:46] <fdan> hi there when i do a re.compile i get an error
[09:04:48] <fdan> pattern = re.compile(r'?<=AWS_ACCESS_KEY_ID=)\S+')
[09:04:56] <fdan> re.error: nothing to repeat at position 0
[09:07:03] *** Joins: HaMsTeRs (~mx@121.203.229.184)
[09:07:22] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[09:09:37] <fdan> how to fix this
[09:09:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:12:23] <KirkMcDonald> fdan: You are missing an opening parenthesis.
[09:13:28] <fdan> KirkMcDonald sorry i think i have one.. where to put the opening paranethesis
[09:13:41] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[09:15:25] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:15:36] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: Ping timeout (120 seconds))
[09:17:03] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 268 seconds)
[09:17:35] <phy1729> fdan: it looks like you're parsing a config file with regex. Guessing from the variable name, perhaps https://docs.python.org/3/library/configparser.html would be helpful.
[09:18:10] *** Joins: dulanic (~dulanic@47.187.144.163)
[09:18:11] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[09:19:53] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:20:41] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:20:53] <KirkMcDonald> fdan: The regular expression itself is missing it.
[09:21:00] <fdan> sure fixed that
[09:22:22] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:22:56] *** Joins: gvsa123 (~gvsa123@d23-17-233-142.abhsia.telus.net)
[09:22:58] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[09:23:11] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[09:23:30] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[09:23:47] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[09:23:48] *** Joins: digilink (~digilink@user/digilink)
[09:24:02] *** Quits: gvsa123 (~gvsa123@d23-17-233-142.abhsia.telus.net) (Client Quit)
[09:26:23] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[09:28:41] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[09:30:04] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[09:30:10] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[09:30:15] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Quit: Leaving)
[09:30:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[09:30:28] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:37] *** Joins: c10l (~c10l@89.34.167.207)
[09:31:25] *** Joins: ferz (~ferz@93.48.251.229)
[09:32:44] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 255 seconds)
[09:33:12] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:34:15] *** Quits: gggp (~gggp@60.10.194.43) (Remote host closed the connection)
[09:36:21] *** Joins: dvx (~dvx@185.63.97.64)
[09:36:43] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:40:05] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:40:34] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:42:41] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[09:43:00] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 272 seconds)
[09:43:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:45:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[09:47:26] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[09:47:48] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[09:51:12] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[09:52:20] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Client Quit)
[09:53:00] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:53:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:53:59] *** Quits: HaMsTeRs (~mx@121.203.229.184) (Quit: Konversation terminated!)
[10:06:03] *** Joins: Blankspace (~abcd@user/blankspace)
[10:06:50] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:12:20] *** Joins: stevieh (~skrodzki@p579324be.dip0.t-ipconnect.de)
[10:13:42] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[10:17:43] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Quit: bye bye friends)
[10:17:54] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 276 seconds)
[10:18:05] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 250 seconds)
[10:19:53] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:20:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:22:37] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[10:22:42] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[10:23:00] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[10:23:06] *** Joins: digilink (~digilink@user/digilink)
[10:23:55] *** Joins: driib (~driib@185.195.233.169)
[10:24:04] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:26:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:27:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:27:40] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[10:28:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:29:27] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[10:30:12] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Quit: bye bye friends)
[10:32:01] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[10:32:21] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[10:32:34] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[10:33:35] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[10:34:05] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[10:34:18] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[10:34:56] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 272 seconds)
[10:35:07] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 245 seconds)
[10:36:51] *** Joins: gusto (~Augustus@109.255.100.54)
[10:39:03] *** Joins: cedric (~cedric@2a01:cb11:867:c200:17e6:53b6:42:d0c0)
[10:39:34] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[10:39:50] *** Joins: kosh (~kosh@user/kosh)
[10:40:08] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:40:15] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:41:05] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[10:41:27] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[10:41:39] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[10:41:44] *** Joins: digilink (~digilink@user/digilink)
[10:42:09] <ApostleInTriumph> Hello. I've 2 lists of tuples. One is certainly a subset of another, but I don't know the indices. How do I find them?
[10:42:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:42:16] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[10:42:40] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[10:43:13] <ssbr> ApostleInTriumph: do I understand right that, for each i < len(list1), you want to find k < len(list2) s.t. list1[i] == list2[k] ?
[10:43:14] <KirkMcDonald> ApostleInTriumph: Are the items in the subset in the same order as in the larger list?
[10:43:22] <ApostleInTriumph> no
[10:43:57] <ApostleInTriumph> they're in random order, so for each element (tupel) of smaller list, I want to find its index in the larger
[10:44:00] <ApostleInTriumph> tuple*
[10:44:26] <KirkMcDonald> I would start by making a dictionary that maps the tuples in the larger list to their index.
[10:44:32] <KirkMcDonald> Assuming the tuples are hashable.
[10:44:52] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[10:45:05] <ApostleInTriumph> the length of tuples are 3
[10:45:07] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[10:45:11] <KirkMcDonald> {t: i for i, t in enumerate(larger_list)}
[10:45:11] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:45:25] <kosh> what kind of data do you have in the tuple? is it something simple like an integer or float?
[10:45:26] <deniska> ApostleInTriumph: do you actually need to know the indices, or just the content?
[10:45:31] <KirkMcDonald> Whether they are hashable depends on whether the elements of the tuple are hashable.
[10:45:34] <ApostleInTriumph> kosh float
[10:45:48] <kosh> if it is just a float you could use numpy
[10:45:49] *** Quits: zaquest (~notzaques@5.128.210.178) (Read error: Connection reset by peer)
[10:45:49] <ApostleInTriumph> deniska the indices. contents are already known, no?
[10:45:52] <ApostleInTriumph> (same)
[10:45:55] *** Quits: seednode2 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:07] <kosh> that will be faster than anything you could do with dictionaries
[10:46:13] <deniska> ApostleInTriumph: I mean, what are you going to use the indices for? Accessing? Modifying the list?
[10:46:14] <ApostleInTriumph> kosh you mean by norm between 2 arrays?
[10:46:16] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:46:26] *** Joins: seednode2 (~seednode@user/seednode)
[10:47:48] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:47:52] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-484e-cf87-53d2-b66c.res6.spectrum.com) (Quit: jarthur_)
[10:47:53] <ApostleInTriumph> deniska i've another such pair. but i know the correspondences (in terms of a map) between smaller lists. with this, i can map two larger lists, upto their subset
[10:48:05] <ApostleInTriumph> not sure how i could've said it without confusing you mroe
[10:48:39] <kosh> https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html
[10:48:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:48:44] <kosh> that should do it
[10:49:01] *** Lord_of_Life_ is now known as Lord_of_Life
[10:49:22] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 240 seconds)
[10:49:49] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[10:49:59] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[10:50:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9d05-f087-6eb0-7a9f.res6.spectrum.com)
[10:50:57] <ApostleInTriumph> kosh it's a 2d array
[10:51:01] <ApostleInTriumph> list(tuples)
[10:51:07] *** Parts: thesemicolons (~thesemico@user/thesemicolons) ()
[10:51:59] <ssbr> I feel bad that you said "no" and the answer to my question appears to actually have been "yes" >:(
[10:52:33] <ssbr> ApostleInTriumph: if you create a dict from tuple -> index, then you can look up the index of a tuple efficiently. KirkMcDonald showed how to do this.
[10:52:36] *** Quits: d1b (~db@user/d1b) (Read error: Connection reset by peer)
[10:52:36] <kosh> ApostleInTriumph, ah
[10:52:39] <ApostleInTriumph> ssbr sorry I didn't actually see your previous message
[10:53:32] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:53:47] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[10:53:54] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[10:54:06] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:54:11] *** Quits: stevieh (~skrodzki@p579324be.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[10:55:17] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[10:56:22] *** Joins: c10l (~c10l@89.34.167.207)
[10:56:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:56:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 276 seconds)
[10:57:07] *** Joins: d1b (~db@user/d1b)
[10:57:22] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[10:58:25] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 265 seconds)
[10:58:41] *** Joins: HaMsTeRs (~mx@121.203.229.184)
[10:58:41] *** Quits: humbertwoody (~humbertow@2806:107e:f:6403:c584:2c3:628c:330c) (Read error: Connection reset by peer)
[10:59:26] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[11:00:15] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[11:00:26] *** Joins: humbertwoody (~humbertow@189.132.75.178)
[11:00:29] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:1d74:1988:2cc4:be4a) (Quit: Leaving)
[11:00:40] *** Joins: rendar (~rendar@user/rendar)
[11:01:42] <ApostleInTriumph> okay another small problem. KirkMcDonald's solution almost works. when i cast numpy float16 to list() python converts to foat64
[11:01:48] <ApostleInTriumph> why does this happen?
[11:02:58] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9d05-f087-6eb0-7a9f.res6.spectrum.com) (Quit: jarthur)
[11:03:07] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[11:03:16] <KirkMcDonald> ApostleInTriumph: When you convert to a list, it needs Python objects to put in that Python, and Python's float type is double-precision.
[11:03:21] <ApostleInTriumph> basically those subsets are a match only upto 4 places of decimal
[11:03:22] <KirkMcDonald> to put in that list(*
[11:03:43] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[11:03:49] <ApostleInTriumph> KirkMcDonald it should rather append 0, no? I'm not familiar with floating point science
[11:04:11] <Widdershins> ssbr: i think they were saying no to kirkmcd :)
[11:04:40] <ssbr> Widdershins: apparently so :'(
[11:04:45] <KirkMcDonald> ApostleInTriumph: The string representation of the floats may differ, but it should be the same underlying value.
[11:04:46] <ssbr> being ignored is even worse!
[11:04:47] <ApostleInTriumph> ssbr i didn't know at that time
[11:04:48] <ApostleInTriumph> :)
[11:05:11] <KirkMcDonald> ApostleInTriumph: It does not simply add more *decimal* digits because floats are not decimal values.
[11:05:18] <nubonix> how can i create a websocket when i am using a self signed cert for https [using starlette]
[11:05:35] <ApostleInTriumph> Oh
[11:05:41] *** Joins: BUSY (~BUSY@user/busy)
[11:05:42] <Widdershins> does numpy have scalar wrappers for non-python numerics?
[11:05:46] <Widdershins> i always forget
[11:05:54] *** Joins: stevieh (~skrodzki@p579324be.dip0.t-ipconnect.de)
[11:06:05] <KirkMcDonald> Widdershins: I believe it does.
[11:06:20] <ApostleInTriumph> So there is no way i can have a float16 list in python?
[11:06:35] <KirkMcDonald> Ah, and actually, it looks like list() does in fact give you a list of those wrappers.
[11:06:42] *** Quits: humbertwoody (~humbertow@189.132.75.178) (Ping timeout: 240 seconds)
[11:07:18] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[11:07:20] <KirkMcDonald> I expected it to convert to floats.
[11:07:32] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[11:08:29] <KirkMcDonald> Dang, a float16 is only 3-4 decimal digits of precision.
[11:08:30] <Widdershins> oh yeah so it sounds like you probably already do have a list of float16 wrappers ApostleInTriumph
[11:08:44] <Widdershins> yeah lol they're super tiny and only useful in a bare handful of cases
[11:09:00] <KirkMcDonald> ML uses 'em a bunch, innit?
[11:09:09] *** Joins: humbertwoody (~humbertow@2806:107e:f:6403:e4e0:f517:cf13:4c2d)
[11:09:32] <ApostleInTriumph> excellent list(np.array()) did the trick
[11:09:37] <ApostleInTriumph> thank you very much KirkMcDonald
[11:09:50] <Widdershins> yeah they're useful for stuff like that and for like color values in graphics rendering shaders and so forth
[11:10:11] <KirkMcDonald> Yeah, that makes sense.
[11:10:20] *** Quits: zwindl (~abc@user/abc) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:10:36] <Widdershins> stuff where the exact accuracy isn't super important but relative accuracy to a reasonable degree is desirable and a high dynamic range is important
[11:11:33] <kosh> what I wonder about on this is you are checking for exact float equality which is inherently a problem
[11:11:40] <kosh> and checking for close wouldn't work with this method
[11:12:03] <Widdershins> not if you don't use a k-d tree or other spatial index ;)
[11:12:24] <ApostleInTriumph> AttributeError: 'dict_keys' object has no attribute 'intersection'
[11:12:33] <ApostleInTriumph> why doesn't dict keys be treated like a set?
[11:12:33] *** Joins: abc_ (~abc@user/abc)
[11:12:39] <kosh> yeah I was thinking of one of those distance trees or even scipy.spatial.distance.cdist
[11:12:39] <ApostleInTriumph> they both are unique, no?
[11:12:45] *** Joins: sazawal (~sazawal@171.50.134.171)
[11:12:51] <Widdershins> good question, what version of python are you on ApostleInTriumph
[11:12:55] <Repiphany> Dictionary keys have an order
[11:12:56] <ApostleInTriumph> kosh yes, that'd be a good option
[11:13:00] <kosh> since checking floats for equality is usually a recipe for problems later
[11:13:06] <ApostleInTriumph> Widdershins 3.8
[11:13:20] <kosh> with cdist or a k-d tree you could find points within some distance
[11:13:21] <Widdershins> oh 3.9 doesn't have them either hm
[11:13:21] <ApostleInTriumph> kosh i agree
[11:13:41] <Widdershins> ApostleInTriumph: i guess you have to use the `&` operator, which should work
[11:14:05] <kosh> https://docs.scipy.org/doc/scipy/reference/generated/scipy.spatial.distance.cdist.html   that might work
[11:14:12] <ApostleInTriumph> Widdershins thanks
[11:14:17] <Widdershins> i agree that the key view should have the long-form set operator names though
[11:14:17] <KirkMcDonald> Curious that view objects support the set operators but not the named set methods.
[11:14:19] <kosh> you could then find all the entries where the distance is < some delta value
[11:14:20] <Widdershins> yeah
[11:14:33] <ApostleInTriumph> kosh https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.euclidean_distances.html will also do the tric
[11:14:37] <ApostleInTriumph> thanks a lot guy
[11:14:39] <ApostleInTriumph> guys
[11:14:43] *** Joins: acresearch (~acresearc@user/acresearch)
[11:14:44] <Widdershins> kosh: typically you would use a spatial index to query within the acceptable bounding box
[11:16:45] *** Joins: djapo (~archangel@user/djapo)
[11:16:47] <kosh> Widdershins, that makes sense
[11:18:18] *** Quits: humbertwoody (~humbertow@2806:107e:f:6403:e4e0:f517:cf13:4c2d) (Ping timeout: 240 seconds)
[11:19:01] <Widdershins> the k-d trees i've written are balanced as scapegoat-trees which are pretty efficient for rapid modification, it's cool
[11:19:15] <kosh> it is not something I have used before
[11:19:43] <ApostleInTriumph> Repiphany missed your message, but aren't dictionary not supposed to preserve order? which is why OrderedDict() was used , no?
[11:20:28] <Repiphany> Some history but at one point it turned into an implementation detail that insertion order was remembered and then it became a documented feature
[11:20:48] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:21:02] <Repiphany> OrderedDict has some extra features over standard dicts still though that keep it useful in cases
[11:21:20] *** Joins: humbertwoody (~humbertow@2806:107e:f:6403:e4e0:f517:cf13:4c2d)
[11:22:03] <Repiphany> https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6
[11:22:10] *** Joins: chele (~chele@user/chele)
[11:22:45] <Widdershins> kosh: it's a binary tree where each level of the tree cycles through which axis it discriminates on for the left/right children (or even chooses an axis randomly, that works too). if you store the midpoint that the node splits its children by and each node knows the distance to its deepest leaf, whenever a value is deleted you can replace it with that deepest leaf and just leave the midpoint the
[11:22:47] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:22:47] <Widdershins> same without breaking the tree invariant (because every node in a tree fits inside that trees bounding box so any of them could be at the top)
[11:23:14] <dob1> is python embedded package something like python portable?
[11:25:02] *** Joins: palasso (~palasso@user/palasso)
[11:25:31] *** Quits: HaMsTeRs (~mx@121.203.229.184) (Quit: Konversation terminated!)
[11:26:08] *** Quits: humbertwoody (~humbertow@2806:107e:f:6403:e4e0:f517:cf13:4c2d) (Ping timeout: 255 seconds)
[11:26:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[11:26:32] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:27:16] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:27:51] <ApostleInTriumph> Repiphany I see. Thanks a lot for this info
[11:31:03] *** Joins: jpe__ (~sharpergu@2001:16b8:5cc0:b600:e66:158b:e214:48b5)
[11:31:12] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[11:31:18] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 272 seconds)
[11:31:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[11:33:03] *** Joins: r0bby (r0bby@user/r0bby)
[11:35:32] *** Quits: audio (~audio@2603-8081-1800-00ad-277b-dcf0-c358-dfd5.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:36:31] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 250 seconds)
[11:37:02] *** Joins: visl_ (visl@user/visl)
[11:37:06] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 240 seconds)
[11:37:12] *** Quits: stigz (sid371747@id-371747.tinside.irccloud.com) (Ping timeout: 276 seconds)
[11:37:12] *** Quits: visl (visl@user/visl) (Ping timeout: 256 seconds)
[11:37:21] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[11:37:39] *** Quits: MercilessDeth (~brad@136.49.61.2) (Ping timeout: 268 seconds)
[11:38:01] *** Joins: stigz (sid371747@id-371747.tinside.irccloud.com)
[11:38:07] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 258 seconds)
[11:38:11] *** Joins: MercilessDeth (~brad@136.49.61.2)
[11:38:32] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[11:39:04] *** Quits: ndim (hun@moooo.n-dimensional.de) (Ping timeout: 252 seconds)
[11:39:09] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Ping timeout: 276 seconds)
[11:39:09] *** Joins: defn (~n0b0dy@user/defn)
[11:39:48] *** Joins: ndim (hun@moooo.n-dimensional.de)
[11:39:56] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[11:40:06] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[11:40:22] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:40:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:40:24] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Max SendQ exceeded)
[11:41:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:41:46] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[11:42:24] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 276 seconds)
[11:42:31] *** Joins: fdan (~fdan@192.146.154.3)
[11:42:40] <fdan> hi there
[11:42:44] <fdan> any idea to fix this?
[11:42:45] <fdan> https://dpaste.org/rtVE
[11:44:00] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[11:44:09] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[11:44:22] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Read error: Connection reset by peer)
[11:44:41] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[11:44:48] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[11:45:22] <Repiphany> You don't use i
[11:46:10] <Repiphany> finditer(i)
[11:46:34] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[11:47:22] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:47:36] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[11:47:43] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 265 seconds)
[11:50:41] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[11:51:40] <ApostleInTriumph> why does json.dump() puts all keys as str?
[11:52:22] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:52:38] <stevieh> isn't a key always a str?
[11:53:32] <ApostleInTriumph> even if the key of dict i'm dumping is an int?
[11:54:49] <stranac> ApostleInTriumph: yes, json keys are always strings
[11:55:06] <DPA> https://www.json.org/json-en.html
[11:56:00] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[11:56:13] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[11:56:58] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 246 seconds)
[11:57:30] <fdan> Repiphany then what should i be using
[11:58:10] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Ping timeout: 256 seconds)
[11:58:13] <Repiphany> You're doing "for i in a" but then you have "finditer(a)"
[12:00:03] *** Joins: somlis (~somlis@user/somlis)
[12:00:18] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[12:01:29] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[12:01:50] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:03:08] <fdan> Repiphany should i use finditer(i)
[12:03:37] <Repiphany> You're the one who knows what "a" is
[12:03:45] <fdan> a is a list of items
[12:04:04] <fdan> each item is a string
[12:04:05] <Repiphany> finditer works on strings, as the error message says
[12:04:29] <Byteflux> finditer(a) => TypeError: expected string or bytes-like object
[12:04:35] <Byteflux> is 'a' a "string or bytes-like object"?
[12:05:08] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[12:05:12] *** Quits: seednode2 (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:37] *** Joins: seednode2 (~seednode@user/seednode)
[12:06:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:06:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[12:07:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[12:07:10] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[12:07:14] <fdan> Byteflux its a str
[12:07:36] <fdan> a is list
[12:07:37] *** Quits: hifi (m-wi7l5u@m.vi.fi) (Remote host closed the connection)
[12:07:52] *** Joins: hifi (hifi@m.vi.fi)
[12:08:02] <Byteflux> fdan: a list is not a "string or bytes-like object"
[12:08:24] *** Quits: GNUtoo (~GNUtoo@cyberdimension.org) (Ping timeout: 252 seconds)
[12:08:38] <Byteflux> which means a list is not a valid argument for finditer()
[12:08:39] *** Quits: Strom (strom@fedora/strom) ()
[12:08:48] <Byteflux> as the error clearly states
[12:09:10] *** Joins: GNUtoo (~GNUtoo@cyberdimension.org)
[12:09:29] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Quit: bye bye friends)
[12:09:45] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[12:09:59] <fdan> Byteflux what can i do
[12:10:00] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[12:10:04] *** Quits: jpe__ (~sharpergu@2001:16b8:5cc0:b600:e66:158b:e214:48b5) (Ping timeout: 256 seconds)
[12:10:05] <fdan> how to get this working
[12:10:11] *** Joins: Strom (strom@fedora/strom)
[12:10:13] <Byteflux> fdan: you can read the error, it tells you
[12:10:41] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[12:10:41] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Client Quit)
[12:10:56] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[12:11:18] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[12:12:29] <Byteflux> fdan: the error is finditer() telling you that it cannot operate on 'a' because it's not a valid type. it tells you what type you need to give it.
[12:12:46] <fdan> yes it tells me i  need to give a str
[12:13:08] <Byteflux> that's right.
[12:13:54] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[12:13:56] <Byteflux> you said 'a' is a list of strings
[12:13:56] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[12:14:06] *** Joins: hifi (hifi@m.vi.fi)
[12:14:29] <Byteflux> fdan: perhaps you meant to give it a string from that list, not the list itself.
[12:14:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[12:14:48] <fdan> so i just realized that i have a list which contains a dictionary
[12:15:06] <fdan> and i m trying to extract some string out of it
[12:15:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:57] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[12:18:58] <fruitypunk> list of strings is a great datatype
[12:21:00] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[12:21:26] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:21:49] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[12:21:53] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 252 seconds)
[12:22:43] <fdan> :)  yeah
[12:22:58] *** Quits: emika (~emika@83.136.182.49) (Ping timeout: 258 seconds)
[12:23:51] *** Joins: emika (~emika@83.136.182.20)
[12:23:56] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[12:25:07] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Ping timeout: 245 seconds)
[12:26:07] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:26:20] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[12:28:20] *** Joins: sri19 (~Srain@240-205-21-31.ftth.glasoperator.nl)
[12:28:50] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[12:29:43] *** Quits: yemel (~yemel@user/yemel) (Quit: Goodbye!)
[12:30:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:30:53] *** Joins: yemel (~yemel@user/yemel)
[12:34:15] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:f8c5:ecee:9897:17f7)
[12:36:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[12:36:21] *** Joins: chele (~chele@user/chele)
[12:37:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[12:37:34] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:38:13] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:57] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:44:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[12:45:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:49:14] <VaniaPy> Hi,i have a while loop with some conditions (if else) .When the conditions are met i need to trigger an alert but only once and then move to the next iteration
[12:49:36] <VaniaPy> if i use continue it still creates duplicates
[12:50:29] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[12:50:32] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:51:01] <Repiphany> You can have a flag "alert_triggered = False" and send the alert if not alert_triggered while flipping it
[12:54:34] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[12:54:55] *** Joins: sazawal (~sazawal@171.50.134.171)
[12:55:42] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[12:56:46] *** Joins: rany (~rany@user/rany)
[12:58:28] <sazawal> Hi all. I am having problems incorporating subprocess and multiprocessing-queues in my python application. Here is a code which is giving me two different kinds of outputs at random. Can anybody explain me what is really happening, https://paste.ubuntu.com/p/DQzhsGP36k/
[12:58:34] <dob1> any idea on this after using pyinstaller ?  FileNotFoundError: [Errno 2] No such file or directory: 'C:\\Users\\myuser\\AppData\\Local\\Temp\\_MEI65962\\orderedmultidict\\__version__.py'
[12:58:43] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:01:12] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:02:59] <nubonix> so im creating a wss with fastapi, but im having connection problems [ip mismatch] heres the client.py, server.py and the client traceback as there is no server traceback https://gist.github.com/nubonics/50f1be98e86f7f43f8dfb0af244cef9a
[13:03:23] *** Quits: sri19 (~Srain@240-205-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[13:03:40] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:05:29] *** Joins: tristan__ (~tristan@110.11.238.160)
[13:05:47] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:06:00] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[13:06:41] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:07:45] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:abed:7f37:45fd:324)
[13:08:46] <deniska> nubonix: well, the error seems fairly self-explainatory, the client can't validate the certificate it got from a server
[13:08:46] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:09:12] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:09:28] *** Joins: exciteabletom (~tom@58-7-205-243.dyn.iinet.net.au)
[13:09:28] <deniska> nubonix: how did you get a a server certificate?
[13:09:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[13:09:35] <deniska> self-signed or some service?
[13:10:18] *** Quits: exciteabletom (~tom@58-7-205-243.dyn.iinet.net.au) (Remote host closed the connection)
[13:14:02] <nubonix> self-signed
[13:14:40] <stevieh> it seems like e2fsck needs a terminal when called, what do I have to change to start it from python? https://paste.debian.net/1205730/
[13:15:10] <deniska> maybe you created a cert for a wrong ip address? Or you need to add your CA cert to the client machine? (in this case an error was a bit misleading)
[13:19:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[13:19:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:21:00] *** Joins: Emil (emil@emil.fi)
[13:21:01] <Emil> Hi
[13:21:40] <Emil> How would I print format the following: sign, field of size 6 for a integer
[13:21:58] <nubonix> deniska: hmm
[13:23:01] <deniska> nubonix: as the last resort you can look for ways to disable certificate validation in the client library, but that's too easy to leave in the code and forget about it
[13:23:29] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[13:24:40] <mdk> Emil: f"{123:+6d}" ?
[13:30:19] *** Quits: dre (~dre@2001:8003:c932:c301:8b30:ab03:98e9:eb57) (Quit: Leaving)
[13:31:32] <stevieh> hmm... how do I start a linux command from python to mimick a terminal? I do not really need the output
[13:31:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[13:31:49] *** Joins: dcaro_ (~dcaro@user/dcaro)
[13:32:50] <sazawal> stevieh, try `os` module's os.command() function.
[13:33:13] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[13:33:35] <mdk> or subprocess.run with the argument fitting your need
[13:34:49] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 268 seconds)
[13:34:49] *** dcaro_ is now known as dcaro
[13:35:03] <stevieh> run is, what I used in https://paste.debian.net/1205730/
[13:35:31] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[13:35:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:38] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[13:37:57] <sazawal> stevieh, What is run()?
[13:38:06] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[13:38:13] <sazawal> Is this a function you have defined somewhere?
[13:39:17] <mdk> sazawal: it's from subprocess https://docs.python.org/3.6/library/subprocess.html#subprocess.run
[13:39:44] <stevieh> yep. I imported it like this.
[13:39:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[13:40:03] <sazawal> mdk, I see
[13:40:21] *** Joins: mei (~mei@user/mei)
[13:41:29] <sazawal> stevieh, Are you getting some exceptions on running this?
[13:42:35] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:42:50] <stevieh> e2fsck returns with val 8, "Operational error", starting the same command in Bash repairs the fs and returns.
[13:43:25] <sazawal> Do you have a python script where you are running this?
[13:43:35] <stevieh> yep
[13:43:46] <DPA> Not what you need, but what you asked for: open /dev/ptmx, pipe it's output to /dev/null, call grantpt, call unlockpt, call ptsname, open the pts, pass the pts as stdin, stdout and stderr.
[13:44:20] <jinsun> stevieh: you have to give the command as a list of arguments, not a string,` run(["esfsk", "-f", devicepath], ...)`
[13:44:20] *** Joins: redgloboli_ (~redglobol@user/redgloboli)
[13:44:48] <stevieh> jinsun: I will give it a try
[13:47:49] <jinsun> hmm actually passing a single string is allowed if shell=True, but in your case you can probably do without shell=True and use the list
[13:49:00] <jinsun> shell=True is not for starting an executable, it is for running shell specific syntax like pipes and wildcards
[13:49:10] <stevieh> Command '['e2fsck', '-f', '/dev/sos-thrrV6-UwBg-c4f8-A6G2-n1Mm-JrJB-JoMXbG/system']' returned non-zero exit status 8.
[13:49:57] <stevieh> https://paste.debian.net/1205732/ with this call
[13:50:33] *** Joins: y1n (~y1n@84-115-64-81.wifi.dynamic.surfer.at)
[13:51:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:52:18] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[13:53:57] <stevieh> sorry, have to catch the bus now...
[13:54:06] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:54:26] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[13:54:30] *** Joins: mickey (~user@user/mickey)
[13:54:44] <tims> stevieh: Use the full path to e2fsck eg /usr/sbin/e2fsck
[13:55:30] <stevieh> Command '['/usr/sbin/e2fsck', '-f', '/dev/sos-thrrV6-UwBg-c4f8-A6G2-n1Mm-JrJB-JoMXbG/system']' returned non-zero exit status 8
[13:55:33] <jinsun> stevieh: try looking at the p.stdout and p.stderr where p is the thing returned by run
[13:55:34] <stevieh> same
[13:55:53] <stevieh> ok, will do so. Thx and be back soon
[13:58:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:58:18] *** Quits: ioistired (~ioistired@signald/ioistired) (Ping timeout: 244 seconds)
[13:59:05] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:00:08] <sazawal> Can anybody explain why I am getting two different outputs from this script at random? https://paste.ubuntu.com/p/mvhbQVvpHP/
[14:00:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:00:38] *** Quits: stevieh (~skrodzki@p579324be.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[14:01:33] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:03:59] <sazawal> *Ignore the kwargs in the output
[14:05:18] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:18] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:10:01] <nedbat> sazawal: i can't puzzle through all of the code, but it looks like a race condition
[14:10:20] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Remote host closed the connection)
[14:10:53] <sazawal> nedbat, I see
[14:10:57] *** Joins: ioistired (~ioistired@signald/ioistired)
[14:11:08] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:11:37] <sazawal> nedbat, Well multiprocessing queues must wait until the data is present in them. That must avoid the race condition.
[14:12:08] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:12:39] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:12:43] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 265 seconds)
[14:14:26] <bjs> sazawal: they don’t remove race conditions they just let you communicate
[14:14:53] *** Joins: simplicity (~yti@user/simplicity)
[14:15:09] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:15:09] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:15:27] <sazawal> bjs, Yea that is true
[14:15:38] <bjs> the two threads for func1 and func2 are then free to do whatever they want: maybe you wanted to join them so they both waited to finish?
[14:16:09] <sazawal> I want to pass the output of func1 to func2
[14:16:13] <bjs> because as it is, your process will finish very quickly
[14:16:22] *** Joins: hsv (~unknown@user/hsv)
[14:17:26] <sazawal> My main data is coming via qsource, and then it should go to func1, then the output of func1 must go to func2, and then the output of func2 must be received in qsink in the received() function.
[14:17:37] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[14:17:49] <sazawal> I am filling qsource in sender() function.
[14:18:02] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:19:53] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:20:22] <bjs> why are you using a multiprocessing queue for communicating between threads?
[14:20:22] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:20:55] <bjs> anyway I still think your start_functions function is missing a join, or something at least to stop it immediately finishing
[14:21:53] <sazawal> bjs, I will replace them later with standard python queues. Remember I showed you a similar code yesterday. I tried to give lines 49-50 here in a function to be called inside start_functions(). But it didn't work, not sure what mistake I was making.
[14:22:03] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:22:33] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:23:10] <sazawal> Once this works, I will try to put your suggestion to use.
[14:23:11] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:23:21] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:23:50] *** Quits: y1n (~y1n@84-115-64-81.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[14:23:54] <bjs> the mp Queue should work too, it’s just a bit weird
[14:24:34] *** Joins: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at)
[14:24:50] <sazawal> bjs, Yea it should work. I just want to be careful everything is working before replacing them with standard queues later.
[14:26:23] <hsv> Hi, how to create a string with random text?  say, instead of msg = "Hello, World!"
[14:26:27] <hsv> msg = bytes([32 + (i % 95) for i in range(950)])
[14:27:06] *** Joins: pagnol (~user@014198154145.ctinets.com)
[14:27:10] <hsv> ^ my attempt.
[14:27:21] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:27:40] <bjs> sazawal: anyway I don’t see any reason why "ended" can’t appear anywhere in the output, if that’s your question
[14:28:07] *** Joins: slav0nic (slav0nic@python.su)
[14:28:19] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[14:28:47] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[14:28:49] <sazawal> bjs, "ended" is always appearing in the output at the end.
[14:29:19] <Repiphany> hsv: import string; import random; "".join(random.choice(string.printable[:95]) for i in range(950))
[14:29:28] *** Quits: theo (~theo@user/theo) (Quit: Ping timeout (120 seconds))
[14:29:29] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[14:29:39] <sazawal> My question is why the received function gets blocked sometimes after printing "1", other times it prints until "19" as it is supposed to do.
[14:29:47] *** Joins: ali1234 (~al@user/ali1234)
[14:29:48] *** Joins: theo (~theo@user/theo)
[14:29:49] <bjs> sazawal: well yes, but there could be any number of numbers before hand
[14:29:50] <Repiphany> string.printable also has \t, \n, \r etc in it
[14:30:01] *** Joins: SoF (~skius@user/skius)
[14:30:06] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:30:18] <bjs> sazawal: for a start, I’d guess the lack of joining of threads and processes
[14:30:30] <bjs> you just sort of throw them into the ether and don’t wait for them to finish
[14:30:34] <sazawal> bjs, Hmm why do you say so? Shouldn't it print from 1 to 19 everytime?
[14:30:46] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:30:54] <sazawal> I see
[14:30:54] <Repiphany> random.choices(string.printable[:95], k = 950) also works I guess
[14:31:14] <sazawal> Yes there could be a join() problem. I am checking that.
[14:31:22] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[14:32:10] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 268 seconds)
[14:32:16] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:32:32] *** Quits: hsv (~unknown@user/hsv) (Ping timeout: 265 seconds)
[14:33:06] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:33:06] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[14:33:15] *** Joins: hsv (~unknown@user/hsv)
[14:33:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[14:34:46] *** Joins: pnoud (~pnoud@user/pnoud)
[14:34:50] * hsv rejoined
[14:36:02] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f481:9f42:3d98:6d04) (Quit: Leaving)
[14:38:57] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:39:06] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:39:10] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[14:39:51] *** Quits: simplicity (~yti@user/simplicity) (Quit: leaving)
[14:40:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[14:40:05] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:40:09] *** Quits: codl (~codl@user/codl) (Quit: Version string here)
[14:40:59] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:41:28] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:44:53] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[14:45:25] *** Joins: pnoud (~pnoud@user/pnoud)
[14:45:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:46:00] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:46:50] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:46:55] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[14:47:21] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[14:50:57] <hsv> mystring = "".join(map(chr, bytes([32 + (i % 95) for i in range(950)])))
[14:51:06] <hsv> ^ is this correct?
[14:51:19] <supakeen> It's a bit weird why you'd write it like that.
[14:51:45] <supakeen> "".join(chr(32 + i % 95) for i in range(950)) works the same.
[14:52:05] *** Quits: tristan__ (~tristan@110.11.238.160) (Ping timeout: 258 seconds)
[14:53:12] <hsv> supakeen: thanks.  i'm just learning that's why :p
[14:53:16] *** Joins: pagnol (~user@014198154145.ctinets.com)
[14:54:18] <supakeen> Sure, usually 'map' can be done in the comprehension, `map(f, [x for x in .])` is 'the same' as `[f(x) for x in .]`. You can leave out the [ and ] if it's the only argument to a function (`"".join(..)`) in this case. Which has the advantage that it won't build an intermediate list.
[14:54:47] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:55:37] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[14:55:48] <hsv> i see.
[14:55:51] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Ping timeout: 250 seconds)
[14:55:56] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:56:26] *** Joins: candyman1 (~candyman@user/candyman)
[14:56:36] *** Quits: candyman1 (~candyman@user/candyman) (Client Quit)
[14:56:57] *** Joins: candyman1 (~candyman@user/candyman)
[14:57:42] *** Joins: codl (~codl@user/codl)
[14:58:38] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[14:59:59] *** Quits: alexyov (~alexyov@84.22.6.244) (Quit: alexyov)
[15:00:10] *** Joins: alexyov (~alexyov@84.22.6.244)
[15:01:09] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[15:03:43] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[15:04:23] *** Joins: ice9 (~ice9@user/ice9)
[15:06:39] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[15:07:21] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:07:54] *** Joins: simplicity (~yti@user/simplicity)
[15:08:07] *** Joins: sri19 (~sri@240-205-21-31.ftth.glasoperator.nl)
[15:09:03] *** Quits: sri19 (~sri@240-205-21-31.ftth.glasoperator.nl) (Client Quit)
[15:11:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:12:33] *** Joins: yte3 (~0@151.15.197.55)
[15:12:53] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[15:13:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:08] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[15:14:02] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[15:14:35] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[15:15:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:15:18] *** Joins: entuland (~entuland@user/entuland)
[15:17:01] <yte3> is it possible to use the multiprocessing module in an embedded Python interpreter? how does the child process call C functions exposed by the host application?
[15:18:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[15:18:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:18:52] *** Joins: deepy (deepy@user/deepy)
[15:18:55] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[15:19:27] <Yhg1s> yte3: it's very difficult to get right.
[15:19:47] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:20:10] <apollo13> yte3: I don't think you can just call into the host function. The host function can put a .so file on the path that you can import, but there won't be any sharing of data
[15:20:17] <apollo13> what is your high level goal?
[15:20:35] <yte3> I'm thinking of multiprocessing because there's no other simple way to interrupt Python code that is running for too long (e.g. it is stuck in an infinite loop, or in a deadlock between threads)
[15:21:01] <apollo13> ok, go even higher, what are you trying to achieve?
[15:21:02] <yte3> I mean Python code ran via PyRun_String()
[15:21:04] <Yhg1s> yte3: there isn't a good way to do this with multiprocessing either, it's still fairly easy to deadlock or get in a weird state.
[15:21:34] <Yhg1s> yte3: if you want interruptability, really the thign to do is to run it in a regular other process, like one started with subprocess.
[15:22:11] <apollo13> yte3: are you trying to run arbritrary python code received from a user?
[15:22:59] <yte3> the high level goal is to embed a python interpreter in an application; the end user can write python scripts, so he can make mistakes; in case of such mistakes the whole app should not freeze, but should handle this gracefully, e.g. "The script is running for too long. do you want to interrupt it?"
[15:23:05] *** Joins: omegatron (~some@p54bd5da4.dip0.t-ipconnect.de)
[15:23:19] <apollo13> then subprocess as Yhg1s suggested
[15:23:27] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[15:23:40] <apollo13> but do you trust the enduser? ie is the enduser executing your app locally or via a webpage in the cloud?
[15:23:42] <yte3> so I should use some message passing to call host C functions?
[15:23:44] <yte3> e.g. zmq
[15:23:49] *** Joins: redgloboli (~redglobol@user/redgloboli)
[15:23:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:24:03] <yte3> apollo13: it is a local app
[15:24:24] *** Quits: redgloboli_ (~redglobol@user/redgloboli) (Quit: ended)
[15:24:25] *** Joins: ammbauer (~c7031241@zid-gpl.uibk.ac.at)
[15:24:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:04] <apollo13> well if you need to pass information around, you need to expose some interface, yes
[15:25:09] *** Quits: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:25:27] <apollo13> I'd look what jupyter / ipython kernels do if I were in your position (I'd rather not reinvent the wheel)
[15:25:32] *** Joins: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at)
[15:26:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[15:26:25] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[15:26:27] <ammbauer> hi, why does `"" == [] ` evaluate to False in python? can anyone point me to some ressource explaining it
[15:26:57] <yte3> ammbauer: why should it evaluate to True?
[15:26:59] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:27:21] *** Joins: stevieh (~skrodzki@tmo-064-35.customers.d1-online.com)
[15:27:34] <apollo13> ammbauer: aside from both being "empty" they are really not the same
[15:27:35] <ammbauer> yte3: well, they both are empty lists.
[15:27:42] <apollo13> no they are not both empty lists
[15:27:47] <apollo13> the first one is a string
[15:28:02] <yte3> list('') == [] evaluates to True
[15:28:07] <stevieh> jinsun: your hint to examine stdout was good. Thx.
[15:28:39] <yte3> if you want to compare lists
[15:29:54] <yte3> ammbauer: why do you think they both are lists?
[15:30:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[15:30:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:57] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[15:31:07] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[15:31:13] <ammbauer> apollo13 yte3: ahh, I see. I thought python would just handle strings as list of chars.
[15:31:14] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: Bye)
[15:31:21] *** Joins: hifi (hifi@m.vi.fi)
[15:31:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[15:31:30] <yte3> ammbauer: they are both *iterable*
[15:31:34] <apollo13> ammbauer: no, you can indeed iterate over them, but that does not make them lists
[15:31:40] *** Joins: pnoud (~pnoud@user/pnoud)
[15:32:50] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:35:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:35:41] *** Quits: kilitary (~kilitary@kilitary.ru) (Excess Flood)
[15:37:41] *** Quits: chele (~chele@user/chele) (Ping timeout: 255 seconds)
[15:37:51] *** Joins: chele (~chele@user/chele)
[15:38:39] *** Joins: Ergo^ (~ergo@91.238.59.144)
[15:39:51] *** Joins: kilitary (~kilitary@kilitary.ru)
[15:40:36] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[15:41:30] <kieto> Hi! I have a library (let's say it's 'mylib') with a setup.cfg file with this line: 'pyOpenSSL >=19.0.0, <20.0.0'. I upload the mylib wheel package to a private CodeArtifact repo, and then with a `pip install mylib`, the following error appears: 'Could not find a version that satisfies the requirement pyOpenSSL<20.0.0,>=19.0.0 (from mylib) (from versions: 20.0.1)'. Why is it not trying to install
[15:41:31] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[15:41:31] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[15:41:32] <kieto> pyopenssl==19.1.0, which seems to be available in PyPI? https://pypi.org/simple/pyopenssl/
[15:42:10] <kieto> The weirdest thing is that I only get this error inside a Dockerfile based on python:3.8-slim. If I install it in a venv locally, it works
[15:42:14] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[15:42:17] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[15:42:24] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[15:43:18] <graingert> kieto: show the command you ran and the output?
[15:45:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[15:46:07] <kieto> graingert: https://bpa.st/RAWA
[15:48:13] <kieto> and same command but without docker, works fine: https://bpa.st/K6YQ
[15:48:28] <graingert> kieto: link to your Dockerfile?
[15:48:34] <altendky> dale: it does seem a bit restrictive.  Maybe don't support an admonition in a table in a code block but...
[15:48:43] <graingert> kieto: looks like you're missing a virtual environment
[15:50:03] <kieto> graingert: wait, I found something thanks to you, brb
[15:51:41] <graingert> you should use a virtual environment kieto: https://www.irccloud.com/pastebin/YT6eCUuv/Dockerfile
[15:51:48] *** Quits: Stx (stx@libera/staff/stx) (Ping timeout: 619 seconds)
[15:52:15] <graingert> kieto: also don't use the `pip` binary use `path/to/bin/python -m pip install`
[15:52:53] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Remote host closed the connection)
[15:53:07] <kieto> graingert: solved it! I had the following line in the Dockerfile: RUN pip config set global.extra-index-url https://pypi.python.org/pypi
[15:53:13] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[15:53:23] <kieto> changed it to: RUN pip config set global.extra-index-url https://pypi.org/simple/
[15:53:28] <kieto> voila :D
[15:53:54] *** Quits: stevieh (~skrodzki@tmo-064-35.customers.d1-online.com) (Ping timeout: 240 seconds)
[15:54:10] <kieto> graingert: is that really important inside a docker? it's already isolated, I never figured I'd need a separate venv there
[15:54:14] <graingert> yes
[15:54:19] <graingert> it's still important in docker
[15:54:28] *** Quits: Classic (~floks@user/classic) (Ping timeout: 256 seconds)
[15:54:31] *** Joins: fdan (~fdan@192.146.154.3)
[15:54:33] *** Quits: pwnd_sfw9 (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[15:54:36] <fdan> hi there
[15:54:43] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[15:54:49] <fdan> i want to extract the value of the access key from the dictionary's values
[15:54:49] <fdan> https://dpaste.org/NDhY
[15:54:57] <graingert> kieto: the OS you're running will have system-site-packages that will be patched to do random stuff
[15:55:16] <graingert> kieto: and remember to pass `--require-hashes --no-deps`
[15:56:17] <fdan> can anyone help me with this
[15:56:38] <kieto> graingert: why the no-deps option? won't that break mylib dependencies?
[15:56:52] <graingert> kieto: you should calculate them with `pip-compile --generate-hashes`
[15:57:07] *** Joins: trashbird6 (~trashbird@user/trashbird)
[15:57:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[15:58:15] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 250 seconds)
[15:58:15] *** trashbird6 is now known as trashbird
[15:59:40] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[16:01:18] <bjs> fdan: loop over them and print out the d["AccessKeyId"] ?
[16:01:50] <bjs> fdan: it looks like your values are lists of dicts, so you should be able to just loop over the values to get each list, then loop over the list to get each dict.
[16:02:12] <kieto> graingert: I'll try that, thanks!
[16:02:24] *** Quits: baltazar (~baltazar@92-249-212-91.pool.digikabel.hu) (Ping timeout: 276 seconds)
[16:02:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:02:29] <fdan> bjs my values is again a dictionary which has a list of only one item
[16:02:41] <bjs> fdan: that's not what your output shows?
[16:02:48] <graingert> kieto: pip-compile is from pip-tools
[16:03:12] *** Quits: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at) (Remote host closed the connection)
[16:03:12] <fdan> bjs this is my actual structure
[16:03:17] <bjs> fdan: your output shows that each value in `ddd` is a list
[16:03:19] <bjs> with a dict in it
[16:03:39] <kieto> graingert: yes yes I know. It's something I have to get my head around sometime, I'm trying to find if poetry is the best all-in-one tool, as well
[16:03:50] *** Joins: nyah (~nyah@90.221.186.180)
[16:04:05] *** Joins: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at)
[16:04:52] <fdan> bjs all i get is     ddd.values()['AccessKeyId']
[16:04:53] <fdan> TypeError: 'dict_values' object is not subscriptable
[16:05:01] <bjs> fdan: yes because the values aren't dicts
[16:05:13] <bjs> and even if they were ddd.values() is not *one* value
[16:05:40] <bjs> fdan: you need to loop over it, like `for value in ddd.values(): ...` and then probably you want _another_ loop for each dict in value, then print out its AccessKeyId
[16:05:44] <fdan> sure
[16:07:25] <kieto> graingert: would you mind telling me what is your workflow for developing, testing, building and publishing? I thought poetry would cover all of that with `poetry add`, `tox`, `poetry build` and `poetry publish`, but the last bit seems to not be flexible enough for AWS CodeArtifact
[16:08:09] <graingert> kieto: I use pre-commit to run poetry export
[16:08:11] *** Quits: simplicity (~yti@user/simplicity) (Quit: leaving)
[16:08:59] <graingert> kieto: https://github.com/celery/celery/pull/6874/commits/80495cd4a095d362f99500aa6867b2ce6c9a98f0#diff-63a9c44a44acf85fea213a857769990937107cf072831e1a26808cfde9d096b9R42
[16:09:23] <graingert> kieto: Then I use that requirements.txt with pip install -c
[16:09:42] <graingert> It's quite complicated which is why I use pip-compile for simple docker stuff
[16:09:43] *** Joins: mout (~mout@li1502-46.members.linode.com)
[16:10:43] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[16:11:08] *** Joins: simplicity (~yti@user/simplicity)
[16:12:09] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[16:12:11] <kieto> graingert: cool, that's a lot of wisdom for today, thanks!! :)
[16:12:41] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:13:36] <kieto> graingert: what difference does it make to use -r or -c ?
[16:13:45] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[16:14:03] <graingert> kieto: one is a contraints file
[16:14:09] <graingert> Rather than requirements
[16:14:21] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[16:15:13] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[16:15:41] <kieto> graingert: so you combine -c with --no-deps and --require-hashes?
[16:16:37] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:17:16] <rannnn8888> you know if have "easy" add to request the same "payload" in my browser ?
[16:17:34] *** Joins: BlickleTree (~ndean@pool-72-94-87-37.phlapa.fios.verizon.net)
[16:17:35] *** Parts: ammbauer (~c7031241@zid-gpl.uibk.ac.at) ()
[16:18:37] <kieto> Honestly I never knew about constraints files, but I guess you do `python -m pip install -c constraints.txt -r requirements.txt` ?
[16:20:41] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:20:53] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[16:25:06] *** Quits: y1n (~y1n@84-115-65-164.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:25:24] *** Joins: zeden (~zeden@user/zeden)
[16:26:02] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[16:26:57] <rannnn8888> https://bpa.st/2W5A how its need look :d ?
[16:27:29] <graingert> kieto: Yeah I've not quite worked it out
[16:29:00] <kieto> python packaging is still quite a mess, I don't know if pyproject.toml will solve all use cases (I hope!)
[16:30:04] *** Joins: Mija (~Mija@user/mija)
[16:30:56] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[16:32:38] <rannnn8888> https://bpa.st/BGMQ where i worng here :D  ?
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:46] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[16:38:07] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[16:38:40] <graingert> kieto: By definition pyproject.toml solves all use cases
[16:38:49] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[16:38:51] <graingert> It's just a hook to install and run arbitrary stuff
[16:40:03] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Read error: Connection reset by peer)
[16:42:01] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[16:42:41] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:43:05] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:43:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:43:27] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Ping timeout: 245 seconds)
[16:44:44] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[16:46:12] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[16:46:21] *** Joins: Mija (~Mija@user/mija)
[16:48:08] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[16:49:14] *** Quits: emika (~emika@83.136.182.20) (Ping timeout: 272 seconds)
[16:49:52] *** Joins: emika (~emika@83.136.182.143)
[16:50:08] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:26] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[16:51:11] *** Joins: stevieh (~skrodzki@2a01:598:c832:caa5:30c4:1446:510a:561f)
[16:51:58] *** abc_ is now known as zwindl
[16:52:08] *** Joins: JavaBean (~JavaBean@user/javabean)
[16:52:11] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[16:52:58] *** Joins: pnoud (~pnoud@user/pnoud)
[16:53:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[16:55:12] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[16:55:37] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Remote host closed the connection)
[16:56:15] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[16:56:42] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 240 seconds)
[16:57:57] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:58:19] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[17:00:16] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[17:00:53] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 258 seconds)
[17:01:00] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[17:01:59] *** Joins: adamts (~Adam@user/mysteryblokhed)
[17:02:12] *** Joins: schumaml (~schumaml@dslb-178-007-205-055.178.007.pools.vodafone-ip.de)
[17:03:13] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:03:32] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Remote host closed the connection)
[17:04:33] *** Quits: schumaml4 (~schumaml@dslb-188-104-182-188.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[17:05:17] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[17:06:14] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[17:06:57] *** Quits: stevieh (~skrodzki@2a01:598:c832:caa5:30c4:1446:510a:561f) (Ping timeout: 268 seconds)
[17:09:06] *** mh3f_ is now known as mh3f
[17:09:29] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[17:09:44] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[17:09:57] *** Joins: JavaBean (~JavaBean@user/javabean)
[17:12:27] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:13:07] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[17:13:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:13:50] *** Joins: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[17:13:55] *** Joins: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net)
[17:14:19] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[17:14:44] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Client Quit)
[17:15:11] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[17:15:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:16:15] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 252 seconds)
[17:18:15] *** Joins: mcope (~matt@user/mcope)
[17:22:11] *** Joins: thematrix (~Guest32@182.1.172.174)
[17:22:47] *** Joins: mickey6 (~user@user/mickey)
[17:22:56] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:22:59] *** Joins: ham5urg (~ham5urg@p2e54d6c3.dip0.t-ipconnect.de)
[17:23:25] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[17:23:26] *** mickey6 is now known as mickey
[17:24:19] <thematrix> hello
[17:24:27] <thematrix> print hello
[17:25:33] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[17:26:15] *** Quits: schumaml (~schumaml@dslb-178-007-205-055.178.007.pools.vodafone-ip.de) (Ping timeout: 276 seconds)
[17:26:30] <supakeen> You don't need to speak Python in #python :)
[17:26:33] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:26:59] *** Parts: thematrix (~Guest32@182.1.172.174) ()
[17:27:28] <ham5urg> How do I "for i in __all__: from .i import *"? The dot is a reserved character.
[17:29:46] *** Quits: michaelis (~michaelis@193.183.209.17) (Ping timeout: 268 seconds)
[17:30:11] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:30:25] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[17:30:40] *** Joins: heco (~redrum@user/redrum88)
[17:30:45] <mdk> ham5urg: Use https://docs.python.org/3/library/importlib.html ?
[17:31:02] *** Joins: ferz (~ferz@93.48.251.229)
[17:31:44] *** Joins: Tera (~Tera@h-85-24-240-165.A218.priv.bahnhof.se)
[17:32:19] *** Joins: stevieh (~skrodzki@185.238.219.59)
[17:32:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[17:33:19] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:33:52] *** Joins: thiras (~thiras@user/thiras)
[17:34:09] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[17:35:23] *** Joins: schumaml (~schumaml@dslb-094-216-173-103.094.216.pools.vodafone-ip.de)
[17:37:50] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[17:38:29] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[17:39:28] *** Quits: Tera (~Tera@h-85-24-240-165.A218.priv.bahnhof.se) (Quit: Leaving)
[17:39:54] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[17:39:56] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:39:59] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f472:b5db:88c6:67dd)
[17:40:51] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[17:41:12] *** Quits: omegatron (~some@p54bd5da4.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[17:41:19] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Read error: Connection reset by peer)
[17:41:39] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[17:42:21] *** Joins: Tera (~Tera@h-85-24-240-165.A218.priv.bahnhof.se)
[17:43:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[17:43:12] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Quit: Leaving)
[17:44:36] *** Joins: varaindemian (~varaindem@86.124.78.162)
[17:44:53] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[17:44:56] *** Joins: Naan (~Naan@user/naan)
[17:45:11] *** Joins: scabby (~scabby@user/scabootssca)
[17:45:14] <varaindemian> any idea how I can get rid of `/usr/lib/python3/dist-packages/urllib3/connectionpool.py:999: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.20.200.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings` ?
[17:45:31] <varaindemian> I am trying `requests.get('https://10.20.200.219:50003/vnc', verify=False)
[17:45:31] <varaindemian> `
[17:46:02] <barometz> did you read the link it shows?
[17:46:16] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:46:26] <varaindemian> actually what I want to do is to make my post and get requests
[17:46:33] <varaindemian> I cannot continue after this warning
[17:46:48] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[17:46:48] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:46:53] <supakeen> It's a warning, you can continue. The second sentence on the website it links to says how to turn it off.
[17:46:57] <barometz> the page it links tells you how to silence the warning as well as how to actually fix it.
[17:47:02] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:47:04] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[17:47:44] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[17:47:47] *** Joins: reset (~reset@user/reset)
[17:48:38] <varaindemian> I can continue but the post request is not made
[17:48:42] <varaindemian> `requests.post('https://10.20.200.219:50003/vnc', [('ip', IP), ('display', DISPLAY)], verify=False)`
[17:48:58] <varaindemian> I keep getting the same warning
[17:49:42] <bjs> varaindemian: are you sure it's not being made?  it's just a warning not an error afterall  (or have you turned warnings into errors?)
[17:50:26] *** Quits: KevinX (~KevinX@2.56.190.212) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:51:06] *** Joins: oxipital (~oxipital@165.225.60.216)
[17:52:06] *** Joins: Gerula (~Gerula@user/gerula)
[17:53:37] *** Joins: mcope_ (~matt@user/mcope)
[17:53:41] *** Joins: KevinX (~KevinX@2.56.190.212)
[17:54:12] *** Quits: mcope (~matt@user/mcope) (Ping timeout: 252 seconds)
[17:56:58] *** Quits: sockets (~hahaha@user/sockets) (Quit: ZNC 1.8.2 - https://znc.in)
[17:58:59] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 255 seconds)
[18:00:56] *** Joins: skapata (~Skapata@user/skapata)
[18:00:58] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Quit: bye bye friends)
[18:01:06] *** Quits: stevieh (~skrodzki@185.238.219.59) (Ping timeout: 240 seconds)
[18:01:07] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[18:01:43] *** Joins: thinkofher (~thinkofhe@user/thinkofher)
[18:01:57] <grym> supakeen: http://bash.org/?400459
[18:07:51] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[18:09:53] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[18:10:06] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[18:10:49] *** Joins: baltazar (~baltazar@178-164-240-29.pool.digikabel.hu)
[18:12:36] <Luyin> :D
[18:14:51] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[18:15:11] *** Joins: califax (~califax@user/califx)
[18:16:50] *** Joins: pnoud (~pnoud@user/pnoud)
[18:17:24] *** Joins: schumaml1 (~schumaml@dslb-188-104-186-143.188.104.pools.vodafone-ip.de)
[18:17:26] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[18:17:54] *** Quits: schumaml (~schumaml@dslb-094-216-173-103.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[18:19:23] <elmcrest> Hey everybody. What would be the fastest way to import a csv file into a postgres db while interpreting the data on import, f.e. extracting relational informations ... could I expect to benefit from asyncio given a single file as the input?
[18:19:41] <Luyin> pandas probably
[18:19:51] <Luyin> I think it handles both csv and postgres OOTB
[18:20:05] <Luyin> so you should be able to make a few adaptations between reading the csv and writing it to the db
[18:21:06] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[18:21:32] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[18:22:20] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[18:22:50] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 255 seconds)
[18:22:57] <grym> elmcrest: how big is the file
[18:23:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[18:23:30] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:24:08] <philectro> CMB
[18:24:35] <grym> i think you're IO-bound on file read, which is going to be serial, but after that if you have an in memory collection of many rows worth of data, that's easier to chunk up if you need to
[18:26:14] <grym> ..but i would naively trust postgres' drivers insert-many mechanics to do that parallelization for you
[18:26:29] <dale> Luyin: Golang. :)
[18:26:37] <grym> so my naive approach would be to go with a boring ETL serial approach
[18:26:44] <Luyin> dale: ?
[18:26:47] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:26:53] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[18:27:01] *** Joins: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at)
[18:28:09] <dale> Luyin: I recently played with importing some multi-gigabyte CSV files into PostgreSQL.  I didn't try Pandas but I tried other tricks to get it going as fast as possible.  Then I spent a few hours learning enough Go to implement the same there and it was many times faster.
[18:28:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[18:28:43] <dale> Luyin: I assume Rust or C++ or C would have all had the same effect.  Maybe I should have tried PyPy too.
[18:29:02] <Luyin> dale: I think you mean to highlight elmcrest instead :D
[18:29:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[18:29:11] <dale> Luyin: Lord yes
[18:29:20] <dale> Need moar sleep, sorry.
[18:29:21] <pragmaticenigma> I prefer to dump CSVs into temp tables on the DB, and then use a stored proc to read from that and do the processing. I find it easy to manipulate the data in the DB with the stored proc, than trying to do it during import
[18:29:38] <Luyin> dale: :D no worries
[18:29:46] <grym> dale: s/sleep/coffee
[18:30:15] <dale> pragmaticenigma: Literally CSV in text columns, or more like split CSV into table of text columns and then transform inside the DB?
[18:30:33] <dale> pragmaticenigma: I mean, for that first option, CSV rows in a single text column.
[18:30:55] <sazawal> Hi all. Please someone tell me what I am doing wrong here, https://bpa.st/WDTQ I have a secondary process which runs functions func1 and func2. The problem is that I am getting two different outputs probably because of race condition.
[18:31:23] <elmcrest> grym I expect something below 5GB but I can't tell it as of now
[18:31:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[18:31:27] <pragmaticenigma> dale: Convert the CSV to a temp table, multi-columns
[18:31:43] <grym> elmcrest: ok.  sounds like you're getting better advice from pragmaticenigma and/or dale here :)
[18:31:56] <grym> (i don't know anything about stored procs but "make the database do it" is nearly always the best answer)
[18:32:02] *** Quits: adamts (~Adam@user/mysteryblokhed) (Ping timeout: 252 seconds)
[18:32:42] <pragmaticenigma> It's just a personal preference of mine. Since I'm working with a DB anyways, it avoids the ReBAR (Row-By-Agonizing-Row) paradigm.
[18:33:43] <elmcrest> I see ... so to recap: load files with postgres' COPY into a temp table and have a stored procedure to do the logic, right?
[18:35:14] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:35:54] *** Parts: ioistired (~ioistired@signald/ioistired) ()
[18:36:16] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[18:36:28] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8130-a387-318d-d58e.res6.spectrum.com)
[18:36:58] <bjs> sazawal: for a start you're still missing any joins
[18:37:07] <pragmaticenigma> elmcrest: correct, you'll want to monitor performance. One of my daily files (on a personal system) can pull down 2,000+ records. My system can do it, but it chews on it for a bit. I'm working on breaking it down into batches that I can queue up.
[18:38:12] *** Joins: ferz (~ferz@93.48.251.229)
[18:38:41] <sazawal> Hi bjs. But joins are only to tell the main thread at which point to halt right? The main thread anyway waits for the other threads to finish.
[18:38:46] <dale> COPY is real fast if you can just point PostgreSQL at the file.
[18:38:58] <sazawal> I mean I am not using daemon threads
[18:39:11] <elmcrest> pragmaticenigma what I currently have is a csv with 4.4 million rows ... on my macbook with nvm-e ssd it's quite fast with a simple COPY statement ... including NULL AS 'null'
[18:39:26] *** Quits: y1n (~y1n@84-115-64-227.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[18:39:28] <pragmaticenigma> dale: I've tried doing that... but depending on configuration, like my DB, may not have access to the file system
[18:39:28] <bjs> sazawal: at the moment you just .start() things, what's stopping the the process finishing in the middle of the functions doing their thing
[18:40:00] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:40:19] <dale> pragmaticenigma: Yeah, I often have that problem too.
[18:40:30] *** Quits: Tera (~Tera@h-85-24-240-165.A218.priv.bahnhof.se) (Ping timeout: 256 seconds)
[18:40:30] <pragmaticenigma> elmcrest: if that works to get the data into the system, I see no reason not to do it
[18:41:01] <sazawal> bjs, A question, so you always supposed to use join statements when starting a thread?
[18:41:16] <bjs> sazawal: unless you're really sure what you're doing yes
[18:41:19] <elmcrest> pragmaticenigma building relations and such... I'm used to use django ORM *ducks*
[18:41:21] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:42:05] *** Joins: amahl (~amahl@84.251.202.64)
[18:42:22] <sazawal> bjs, I see. But the position of join statements are also important right? I mean the main thread pauses at the join statement and waits for the subthreads to finish.
[18:42:26] <pragmaticenigma> My only opinion on that matter, I'll never fault someone for choosing the best tool for them, to do the job they're trying to complete
[18:42:33] *** Joins: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster)
[18:42:36] <bjs> sazawal: you just don't want the parent to die before the children finish
[18:42:53] *** Joins: TeraT (~Tera@h-85-24-240-165.A218.priv.bahnhof.se)
[18:43:14] <bjs> sazawal: instead of just .start()ing and then letting the function fall off at the end,  just join everything back together so you don't have processes start being cleaned up while holding some shared data inside the queue or anything like that
[18:43:45] <pragmaticenigma> I'm a fan of stored procs, only because I see them as a hugely beneficial for the data sets I typically work with. And narrowing/filtering and some calculations done in the DB before it reaches the application is beneficial
[18:43:52] <sazawal> bjs, Right but that thing happens when you use daemon threads. Without join statements, the parent thread waits at the end of its execution for the children to finish. Please tell me if I am understanding this wrong.
[18:44:14] *** Joins: Quaking (~Quaking@167.89.254.27)
[18:44:28] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:46:11] <elmcrest> pragmaticenigma yeah you're right and also in case we're going with that approach I have in mind, we'll eventually do it this way ... as of now, prototyping and PoC stuff, trying to create excitement, I was hoping for some quick and dirt and fast way with python, maybe asyncpg or so
[18:46:24] <elmcrest> but yeah, COPY with psql should be fine
[18:46:42] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[18:47:11] *** Joins: andika (~Andika@subs46-116-206-42-117.three.co.id)
[18:47:15] *** Joins: nathanjell (~Nathan@64.141.52.164)
[18:47:38] <pragmaticenigma> yeah, I hate PoCs like that, it always feels like doubling the effort. And in my experience somehow the PoC becomes production and no one wants to go and actually do it the "right" way until it all comes crashing down
[18:48:02] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:48:02] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:48:15] *** Parts: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) ()
[18:49:48] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[18:50:43] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:51:16] <elmcrest> (╯°□°)╯︵ ┻━┻
[18:52:54] *** Quits: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster) (Remote host closed the connection)
[18:53:37] *** Parts: nathanjell (~Nathan@64.141.52.164) (Leaving)
[18:53:40] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[18:53:42] *** Joins: nathanjell (~Nathan@64.141.52.164)
[18:54:15] *** Joins: dez (uid92154@user/dez)
[18:54:39] *** Quits: pyfisch (~pyfisch@ip-37-201-119-196.hsi13.unitymediagroup.de) (Quit: Ping timeout (120 seconds))
[18:54:55] *** Joins: pyfisch (~pyfisch@ip-37-201-119-196.hsi13.unitymediagroup.de)
[18:56:57] <pragmaticenigma> pretty much what I'm doing right now
[18:56:58] <pragmaticenigma> haha
[18:59:32] *** Quits: andika (~Andika@subs46-116-206-42-117.three.co.id) (Quit: Leaving)
[18:59:51] *** Joins: andika (~Andika@subs46-116-206-42-117.three.co.id)
[19:01:23] <bjs> sazawal: yes you are, if you do nothing you're asking Python to clean up everything
[19:01:43] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[19:01:49] <bjs> but you don't want that, you want to just wait and let everything continue because all the threads are still using the queues
[19:02:24] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:02:47] *** Quits: simplicity (~yti@user/simplicity) (Quit: leaving)
[19:03:40] <bjs> sazawal: just put joins so that no thread/process "falls" off the end without explicitly joining the children
[19:04:25] *** Joins: Naan` (~Naan@user/naan)
[19:07:03] *** Joins: simplicity (~yti@user/simplicity)
[19:07:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:08:16] *** Quits: andika (~Andika@subs46-116-206-42-117.three.co.id) (Quit: Leaving)
[19:08:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 255 seconds)
[19:08:30] *** Joins: andika (~Andika@subs46-116-206-42-117.three.co.id)
[19:08:34] <dale> elmcrest: Three hours later you're still writing your application except it's all still only in PostgreSQL.
[19:08:48] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[19:09:27] *** Joins: schumaml2 (~schumaml@dslb-178-002-189-247.178.002.pools.vodafone-ip.de)
[19:09:58] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:10:04] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:11:24] <sazawal> bjs, I see. Let me use join statements at the end of the main thread/process then, I guess that is how it should work.
[19:11:44] *** Quits: schumaml1 (~schumaml@dslb-188-104-186-143.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[19:11:54] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 265 seconds)
[19:12:43] *** Joins: jmft2 (~JMFT@82.3.54.26)
[19:12:45] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[19:13:21] <bjs> sazawal: just make every start have a corresponding join, so that it’s explicitly where and when threads start and stop without letting other machinery get in the way
[19:13:25] <elmcrest> dale not sure if I get that ... ?
[19:13:34] *** Joins: akk (~akk@75.161.155.222)
[19:13:46] <sazawal> Right
[19:13:47] <dale> elmcrest: Just joking that PostgreSQL has a lot of functionality
[19:13:59] <sazawal> bjs, Thanks I will get back to you
[19:14:14] <elmcrest> dale ah ok ... ehm ... haha :D
[19:14:16] <elmcrest> hehe
[19:14:36] <dale> elmcrest: I've started several explorations like "I'll just dump the data in PostgreSQL and play with it in Python" but it ends up that I just have this one huge SQL file I'm working out of and I haven't touched the Python REPL hours later.
[19:14:53] <elmcrest> btw ... I could use the embedded python thing :P
[19:15:28] <elmcrest> would I have pdb and breakpoints when using Python in postgres?
[19:17:20] *** Quits: andika (~Andika@subs46-116-206-42-117.three.co.id) (Quit: Leaving)
[19:17:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 245 seconds)
[19:18:27] *** Joins: andika (~Andika@subs46-116-206-42-117.three.co.id)
[19:19:11] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Read error: Connection reset by peer)
[19:19:37] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[19:19:56] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[19:22:07] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:22:53] <dale> I kind of doubt it but I've also never tried.
[19:24:36] *** Quits: fluiD (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[19:24:39] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:24:43] *** Joins: colorado (~fluiD@161.97.231.145)
[19:27:00] *** Quits: andika (~Andika@subs46-116-206-42-117.three.co.id) (Quit: Leaving)
[19:27:40] *** Joins: andika (~Andika@subs46-116-206-42-117.three.co.id)
[19:28:15] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[19:29:34] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[19:29:54] *** Quits: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642) (Ping timeout: 240 seconds)
[19:31:05] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:31:20] <zodd> I wrote some code using imaplib which worked fine on a small test messageset. But now on a larger one the call: typ, data = M.fetch(msgnum, '(RFC822)')  gives me: imaplib.error: FETCH command error: BAD ['Error in IMAP command FETCH: Invalid messageset']
[19:31:30] <zodd> how can I debug this please?
[19:32:06] <zodd> is there a way to validate the messageset or otherwise analyse it?
[19:32:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[19:34:32] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1009) (Ping timeout: 272 seconds)
[19:35:36] *** Joins: shabius (~shabius@46.188.40.202)
[19:35:55] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[19:37:41] *** Joins: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at)
[19:37:45] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:38:32] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:38:38] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:39:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9d05-f087-6eb0-7a9f.res6.spectrum.com)
[19:39:50] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:40:17] *** Joins: andikadinata (~Andika@subs46-116-206-42-109.three.co.id)
[19:40:20] *** Quits: andikadinata (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[19:40:41] *** Joins: andikadinata (~Andika@subs46-116-206-42-109.three.co.id)
[19:40:58] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[19:41:17] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[19:41:54] *** Joins: d00gy (~tonberry@user/d00gy)
[19:42:07] *** Quits: andikadinata (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[19:42:22] *** Joins: andikadinata (~Andika@subs46-116-206-42-109.three.co.id)
[19:42:47] *** Quits: andika (~Andika@subs46-116-206-42-117.three.co.id) (Read error: Connection reset by peer)
[19:43:46] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[19:43:47] *** Quits: andikadinata (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[19:43:59] *** Joins: VimVim (~VimVim@85.191.89.249)
[19:44:44] *** Joins: rany (~rany@user/rany)
[19:44:58] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Ping timeout: 240 seconds)
[19:45:04] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:45:19] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[19:45:20] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:46:18] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[19:46:41] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[19:47:05] *** Joins: rany (~rany@user/rany)
[19:47:44] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[19:48:30] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[19:50:14] *** Joins: minip (~minip@user/minip)
[19:50:32] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[19:50:47] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[19:51:12] *** Joins: rany (~rany@user/rany)
[19:51:49] <Luyin> pydocstyle warns me that my __init__.py's don't have docstrings (D104: "Missing docstring in public package"). I would generally like to be warned about *packages* with missing docstrings, so ignoring this error isn't cool, but it sucks for the lot of __init__.py files in my package. is there a way around this?
[19:52:16] <grym> sed some ignores into your inits, possibly
[19:52:43] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[19:52:47] <sco1> add per-file-ignores = __init__.py:Xxxx to your flake8 configuration
[19:52:54] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[19:52:55] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[19:52:59] <Luyin> it's not flake8, it's pydocstyle
[19:53:11] <sco1> oh, right
[19:53:15] <sco1> use flake8 :D
[19:53:17] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[19:53:21] <sco1> idk, I've never used it directly
[19:53:22] <Luyin> I do use flake8...
[19:53:33] <sco1> So what's the issue?
[19:54:02] <Luyin> see my initial post. it's pydocstyle that's complaining, not flake8!
[19:55:29] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[19:55:36] <sco1> flake8-docstrings wraps pydocstyle
[19:55:37] *** Joins: thecoder (~mrrobot@static-47-206-93-60.tamp.fl.frontiernet.net)
[19:56:09] <sco1> Otherwise you probably have to inline ignore if you're using pydocstyle directly
[19:56:12] <thecoder> hi
[19:56:39] <Luyin> hmmm ok I'll think about using flake8-docstrings then
[19:56:49] <sco1> or maybe mess with the match pattern
[19:57:15] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:59:03] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Quit: Leaving)
[19:59:24] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[20:00:38] <Luyin> another question: if this is my package structure: https://paste.xinu.at/2kGcX/; __init__.py contains `from .utils import peek` (a function), shouldn't I be able to run `from voice_dataset.internals import peek` in my python console? I get an import error there. when I import it manually the long way: `from voice_dataset.internals.utils import peek` it works flawlessly. I thought that's the way to
[20:00:39] <Luyin> import stuff via __init__.py but I might have overlooked something. or misunderstood.
[20:00:58] <Luyin> (maybe superfluous, but peek is defined in utils.py :D )
[20:01:10] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[20:01:36] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[20:02:30] <bjs> Luyin: this kind of error is hard to figure out without pretty much all the information, e.g. a copy of the console session with both imports (the fail and the success) and the actual contents of each file
[20:02:52] <Luyin> bjs: ok, hang on. I'll compile the info
[20:03:31] <Luyin> bjs: nope, forget it, gotta go to dinner and that means closing time for work :D I'll try again tomorrow
[20:03:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:03:46] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[20:03:49] <SnoopJ> Does anyone have favored writing on "do less in __init__()"?  It's come up in a work PR and I'm realizing this comes up regularly enough that it'd be nice to have such a link.
[20:04:07] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 258 seconds)
[20:04:45] <Luyin> SnoopJ: you looking at me? >D
[20:04:48] <sco1> looking at numpy :D
[20:04:49] <SnoopJ> Luyin, I mean a class __init__
[20:04:57] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[20:05:01] <Luyin> ah
[20:05:25] <Luyin> I never did anything in there but setting self.stuff = stuff (the passed parameter)
[20:05:32] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:05:33] *** Parts: lantech19446 (sid237550@id-237550.brockwell.irccloud.com) ()
[20:05:35] <SnoopJ> someone's written a class that's doing `def __init__(self, foo, bar): self.foo, self.bar = self.some_computation()` instead of stuffing the computation somewhere else and writing a classmethod.
[20:05:45] <Luyin> ah I see.
[20:05:51] <Luyin> yeah, that sounds shady.
[20:05:59] <Luyin> anyway, time to call it a day. ttfn!
[20:06:45] <SnoopJ> I'm not sure it's a bad idea in this case because it's a pretty domain-specific tool, but I've stuck my foot in it already :)
[20:08:29] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[20:09:51] *** Joins: hposca (~hposca@node-1w7jr9phoke2t9sajlv8zcl7c.ipv6.telus.net)
[20:11:13] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:12:06] *** Joins: pagnol (~user@014198154145.ctinets.com)
[20:12:54] *** Joins: djapo (~archangel@user/djapo)
[20:13:17] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[20:13:21] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:15:06] *** Joins: greenx (~greenx@user/greenx)
[20:15:13] <sazawal> bjs, This still doesn't work for me https://bpa.st/SX2A. Though I am not getting arbitrary outputs now.
[20:15:28] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[20:16:23] *** Joins: mickey (~user@user/mickey)
[20:17:00] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:17:39] <bjs> sazawal: you shouldn't join in run()
[20:17:43] *** Joins: pnoud (~pnoud@user/pnoud)
[20:17:52] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:18:05] <sazawal> bjs, Hmm why not?
[20:18:10] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 240 seconds)
[20:18:19] <bjs> sazawal: you probably want to join that process at the end of B.start alongwith the sender and reciever threads
[20:18:26] *** Quits: greenx (~greenx@user/greenx) (Client Quit)
[20:18:58] <bjs> sazawal: well you call a.run() wait for a.run to finish, then start the sender/receivers
[20:19:03] *** Joins: greenx (~greenx@user/greenx)
[20:19:07] <bjs> so if a.run() waits for the process to finish the sender/receivers never start so...
[20:19:15] <bjs> (and I assume that's what you're seeing?)
[20:19:22] <sazawal> Oh right right
[20:19:26] <sazawal> Yes you are right
[20:19:34] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: Ping timeout (120 seconds))
[20:19:59] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:22:10] <sazawal> bjs, Then I guess joins in line 34 must also be moved to at the end of the b.start
[20:22:23] <bjs> sazawal: no no
[20:22:33] <bjs> those are inside the other process
[20:22:55] <bjs> sazawal: I really think A.run shouldn't exist,  it's weird that the A instance exists in both processes with different states
[20:23:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[20:23:22] <sazawal> Yes because if start_functions don't end, then run return the process object, which I will join at the end of the b.start
[20:23:38] <mefistofeles> hey, suppose you have some lib/software that uses a lot of np.random and similar in many of its classes/methods. If you want to have some deterministic testing, what would be a recommended thing to do to let users specify the random seed? Is there a general and safe way to accomplish that without having to edit every method/function individually to allow for it?
[20:23:42] <bjs> sazawal: no no you *cant* join them at the b.start, they're not threads of that process
[20:23:55] <bjs> sazawal: as far as I can see, they are being joined in the correct way in the correct place
[20:23:59] <sazawal> Ohsshhh bjs, true
[20:25:28] <sazawal> Yes I can omit run altogether and start the process in b.start itself
[20:26:08] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[20:26:56] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Quit: Leaving)
[20:27:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:27:51] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:28:25] <shlomif> Hi all! So today I had trailing commas convert heredocs into tuples...
[20:28:28] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:28:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:28:49] <sazawal> bjs, It works alright now. Thanks. But tell me bjs, is it not true that if there are no join statements, the main process/thread awaits at the end of its execution for the children to finish executing?
[20:29:02] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:29:08] <bjs> sazawal: that is one of the things it will do,  but there's a lot of other stuff that the process has to clean up too
[20:29:11] <bjs> like the queues.
[20:29:43] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:8d1e:9a6a:e03:adfe)
[20:30:28] <sazawal> bjs, What do you mean by clean up? You mean the cleaning the objects created in the children thread/process execution?
[20:31:06] <bjs> no I mean the queue
[20:31:35] *** Quits: nathanjell (~Nathan@64.141.52.164) (Quit: Leaving)
[20:33:38] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 258 seconds)
[20:34:48] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[20:36:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:36:42] *** Quits: mcope_ (~matt@user/mcope) (Quit: Konversation terminated!)
[20:36:55] <sazawal> bjs, Okay, for the time being I think it is enough for me to know that there is trouble cleaning queues if there are no join statement
[20:37:01] *** Joins: scabby_ (~scabby@user/scabootssca)
[20:37:07] *** Joins: hafat (~hafat@95.70.168.45)
[20:37:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[20:37:51] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[20:38:13] *** Joins: pagnol (~user@014198154145.ctinets.com)
[20:39:18] *** Joins: ramblebamble (~ramblebam@37.120.209.204)
[20:39:30] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 240 seconds)
[20:40:34] *** Joins: pnoud (~pnoud@user/pnoud)
[20:40:40] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Quit: Leaving)
[20:40:54] *** seednode2 is now known as seednode
[20:41:00] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[20:41:48] *** Quits: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[20:42:06] *** Joins: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at)
[20:42:06] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[20:43:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:43:43] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[20:43:54] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:98ff:d1ab:5789:5085) (Ping timeout: 240 seconds)
[20:44:09] *** Joins: Vonter (~Vonter@user/vonter)
[20:44:25] *** Joins: humbertwoody (~humbertow@2806:107e:f:6403:bcad:4f57:ec26:fc82)
[20:44:28] *** Joins: Betal (~Beta@user/betal)
[20:44:29] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:44:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:45:02] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[20:47:00] <twobitsprite> anyone have any experience or thoughts on Pipenv vs Poetry vs PDM? my team is currently using Pipenv and have had a lot of issues with it and are considering alternatives. any insights would be greatly appreciated
[20:47:51] <ramblebamble> twobitsprite, anaconda an option?
[20:48:00] <sco1> It might be helpful to understand what your current issues are with pipenv
[20:48:08] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Quit: Leaving)
[20:48:24] *** Joins: andika (~Andika@subs46-116-206-42-109.three.co.id)
[20:48:35] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[20:49:11] *** Joins: srhm (~ascii@user/srhm)
[20:49:13] <nedbat> twobitsprite: did i miss something? What is PDM?
[20:49:32] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:50] <twobitsprite> ramblebamble: just googled it, seems commercial, so we'd probably avoid that. plus, something about data science? not sure if that's what we're looking fir
[20:49:54] <twobitsprite> for*
[20:50:02] *** Joins: djapo (~archangel@user/djapo)
[20:50:08] <ramblebamble> twobitsprite, it is not just that and it is not commercial
[20:50:08] <twobitsprite> nedbat: https://pdm.fming.dev/
[20:50:12] <ramblebamble> or not just
[20:50:17] <ramblebamble> been using itfor years now
[20:50:23] <nedbat> twobitsprite: anaconda is free, but does specialize in fixing science package problems.
[20:50:25] <ramblebamble> not paid a dime
[20:50:49] <twobitsprite> ramblebamble: https://www.anaconda.com/products/individual
[20:51:07] <twobitsprite> ramblebamble: looks like it's for data science, and has a commercial version?
[20:51:32] *** Quits: andika (~Andika@subs46-116-206-42-109.three.co.id) (Client Quit)
[20:51:48] <twobitsprite> seems a bit too specialized for what we're doing
[20:51:52] <nedbat> twobitsprite: the personal edition is fine, you don't have to pay
[20:51:56] <jinsun> you have to pay for it if your company has more than 200 people
[20:52:08] <twobitsprite> jinsun: ours does
[20:52:37] <ramblebamble> it is a self contained python environment, I can run arbitrary installations and configurations side by side, datascience or not, and I can also use pip only downside is that e.g. containers with anaconda become rather big, but for that have a look at mamba
[20:52:51] <ramblebamble> ok then a different ballpark
[20:53:02] <twobitsprite> we just need a simple package/dependency manager to unify dev environments and production product builds
[20:53:40] <nedbat> twobitsprite: pip-tools, pip, and virtualenv are enough for us
[20:53:47] <sco1> What are your current issues with pipenv?
[20:53:54] <ramblebamble> pretty  much any package manager does that if propperly used
[20:54:08] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[20:54:19] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[20:54:20] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[20:54:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[20:54:41] *** Joins: ano (~weechat@user/ano)
[20:55:04] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[20:55:23] *** Joins: Pirx (~Nico@57.pool92-172-86.dynamic.orange.es)
[20:55:26] <twobitsprite> sco1: poor dependency resolution, installing packages before checking compatibility, leaving incompatible packages installed
[20:55:29] *** Joins: Lush-_ (~lushlush@user/lush-/x-1276235)
[20:55:56] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[20:56:00] <twobitsprite> oh, also, long build times with pipenv
[20:56:00] *** Joins: dulanic (~dulanic@47.187.144.163)
[20:56:18] *** Joins: SGautam (uid286066@charlton.irccloud.com)
[20:56:25] <twobitsprite> git merge issues with Pipfile.lock
[20:56:30] <nedbat> twobitsprite: have you tried pip-tools?
[20:56:54] <SGautam> What's a good library for audio generating sine, square, triangular and noise audio
[20:57:05] <SGautam> Preferably in the background
[20:57:10] <twobitsprite> nedbat: no, I just looked it up and I'm reading up on it. have you tried Poetry or PDM? just curious if you have any comparative experience between them and/or pip-tools
[20:57:18] <SGautam> Like those old school NES games
[20:57:46] <nedbat> twobitsprite: i work in a large Python place (edX), and we use pip-tools.  I haven't been in the trenches evaluating alternatives
[20:58:55] <twobitsprite> nedbat: ok, fair enough, I'll add it to my pipenv alternatives list to look in to. thanks
[20:59:15] <nedbat> twobitsprite: our repos are open source if you need inspiration for how to use it.
[20:59:27] <twobitsprite> nedbat: sure, send me a link
[21:00:03] *** Quits: mout (~mout@li1502-46.members.linode.com) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[21:00:16] <nedbat> twobitsprite: for example: https://github.com/edx/edx-platform/blob/master/Makefile#L81-L112
[21:00:44] <Pirx> hi, I need to create a very simple web app that basically receives data from a (multipart-form-data) form and serves a single page. No framework needed or wanted whatsoever. It could be a stand-alone http server sitting behind an Apache reverse proxy or some for of cgi/module/etc. The main requirement is that it is reasonably safe. Second one is minimum deployment headaches. Could you recommend
[21:00:44] <Pirx> something?
[21:01:49] *** Joins: Gerula_ (~Gerula@user/gerula)
[21:01:49] *** Gerula is now known as Guest9394
[21:01:49] *** Gerula_ is now known as Gerula
[21:01:55] <twobitsprite> nedbat: does it all have to be done on the pip-compile command line like that, or is there something comparible to a Pipfile which lists packages and version constraints?
[21:02:34] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:8d1e:9a6a:e03:adfe) (Ping timeout: 272 seconds)
[21:02:36] <nedbat> twobitsprite: those Makefile targets produce the .txt files that are used for installation: https://github.com/edx/edx-platform/tree/master/requirements/edx
[21:03:04] <nedbat> twobitsprite: (this repo is the most elaborate, most of our repos use pip-tools in a simpler way)
[21:03:32] *** Quits: visl_ (visl@user/visl) (Ping timeout: 258 seconds)
[21:05:00] *** Quits: Guest9394 (~Gerula@user/gerula) (Ping timeout: 265 seconds)
[21:05:20] *** Joins: magla (~gelignite@55d40f0c.access.ecotel.net)
[21:05:25] <twobitsprite> nedbat: either way, looks like you have to do a lot of boiler-plate to build pip-tools command lines and files
[21:05:42] <nedbat> twobitsprite: yes
[21:05:54] *** Quits: Pirx (~Nico@57.pool92-172-86.dynamic.orange.es) ()
[21:05:57] <twobitsprite> nedbat: ok, probably not what we're looking for then
[21:06:03] <sco1> I believe poetry's dependency resolver & caching is better than pipenv's but I haven't profiled in a long time. I switched from pipenv when it was basically unmaintained prior to moving into pypa's namespace
[21:06:12] <twobitsprite> Pipenv is already simpler than that
[21:06:38] *** Joins: echelon (~echelon@gateway/tor-sasl/steerpike)
[21:06:42] <echelon> hi
[21:06:59] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 258 seconds)
[21:07:03] <vd> How can I list the files installed under /usr/lib/python3.9/site-packages/foo/bar?
[21:07:07] <twobitsprite> sco1: what did you move to from Pipenv?
[21:07:12] <sco1> poetry
[21:07:18] <vd> (usually called with python -m foo.bar)
[21:07:27] <twobitsprite> so, +1 for poetry, cool thanks
[21:07:49] <echelon> i have.. payload = { "rrsets": [] } and i want to append items to the json array object in a for loop, how would i go about doing that?
[21:08:31] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 258 seconds)
[21:09:30] <nedbat> echelon: payload["rrsets"].append(new_thing)
[21:09:46] <echelon> thanks!
[21:09:55] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[21:10:17] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[21:12:20] *** Joins: Celeo (~Celeo@user/celeo)
[21:14:07] *** Joins: pnoud (~pnoud@user/pnoud)
[21:15:28] *** Quits: emika (~emika@83.136.182.143) (Ping timeout: 268 seconds)
[21:15:55] *** Joins: emika (~emika@185.207.249.102)
[21:16:20] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:1af2:9e87:9ae6:934c)
[21:16:53] <vd> How can I print the system path of the foo.bar module?
[21:17:07] <bjs> vd: print(foo.bar)  probably tells you
[21:18:32] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[21:18:50] <vd> bjs oops, foo.bar is a package, not a module
[21:19:19] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[21:19:21] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:19:30] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[21:19:46] <bjs> vd: oh, well in that case print(foo.bar) should still tell you :)
[21:20:50] <vd> bjs: `python3 -m foo.bar -c 'print(foo.bar)'` says: "/usr/bin/python3: No module named foo.bar.__main__; 'foo.bar' is a package and cannot be directly executed"
[21:21:26] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[21:21:28] <bjs> vd: huh why are you trying to run the package with -m ?
[21:21:44] <bjs> vd: I just meant that if you had `import foo.bar` somewhere then `print(foo.bar)` should tell you where it came from
[21:22:00] <vd> all the files are in /usr/lib/python3.9/site-packages/foo/bar/ but I do not wish to hardcode this path and would rather ask python instead
[21:22:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:22:58] <bjs> vd: oh, foo.bar.__path__ will be the path,  but why do you need the path to inside the library?
[21:23:13] *** Joins: paravida (~myChateau@user/paravida)
[21:23:31] *** Quits: Naan` (~Naan@user/naan) (Read error: Connection reset by peer)
[21:23:34] <echelon> nedbat: 1 more question when using .append() what if the new_thing is another json/dict, would i have to wrap it in double quotes?
[21:23:59] <vd> its outside of a library, I'm writing a wrapper for /usr/bin. Every file under foo/bar/ corresponds to a function I would like to use as argument
[21:24:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:06] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 272 seconds)
[21:24:32] *** Joins: Naan` (~Naan@user/naan)
[21:24:50] <bjs> vd: this is pretty unusual,  you really don't want to just start running files inside a package like that because the package imports often won't work at all, and when they do, you get weird behaviour
[21:25:22] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:26:49] <vd> bjs ok. what is the recommended way to have an executable calling these functions then?
[21:27:15] <bjs> vd: can't the script in /usr/bin just import the package and run the right function?
[21:27:19] *** Joins: zebrag (~chris@user/zebrag)
[21:27:25] <bjs> the script be a Python script and just import*
[21:27:54] <bjs> this is what e.g. `pip install` does for console entry points
[21:27:59] <vd> ok so I need a python wrapper in the package I guess, so this abstraction is done at the package level, not the system level
[21:28:29] <bjs> vd: well a typical package might have a couple of "entry point" functions that do different things, then a "script" is just a Python file that'd import the package, and call that function.
[21:28:38] <bjs> Much easier than trying to work with paths and run random files, typically.
[21:28:55] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[21:29:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:29:07] *** Joins: gloin (~gloin@user/gloin)
[21:30:00] <mawk> setuptools can generate such entrypoints no?
[21:30:08] <mawk> or whatever packaging thing that does the setup.py
[21:30:23] *** Parts: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Leaving)
[21:31:16] <vd> ho, if setup.py can generate such system wrapper, it'd be neat
[21:31:50] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 255 seconds)
[21:31:54] *** Joins: Auron (~Auron956@user/auron)
[21:32:01] <bjs> vd: yes it's a fairly standard feature of `pip install`
[21:32:38] <vd> the python project I'm package uses setup.py, is it the same thing?
[21:32:39] <bjs> vd: http://bit.ly/pypackages has an example of creating a script that will call a specific function in the package
[21:32:51] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:34:00] <twobitsprite> echelon: there isn't such a thing as a "json object" in python. if you're parsing JSON strings in to python dicts/lists, they're just python dicts/lists until you output them back in to JSON strings, which are just text
[21:34:16] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[21:34:27] <twobitsprite> echelon: so, basically, my point is, you don't need to worry about quotes unless you're dealing with python string literals
[21:34:41] *** Quits: ramblebamble (~ramblebam@37.120.209.204) (Quit: WeeChat 3.2)
[21:34:49] <echelon> yeah, it actually complained that i used string literals
[21:35:39] <twobitsprite> echelon: if you're doing .append("new_thing") python will assume you mean the literal string "new_thing" instead of referencing a variable named new_thing
[21:35:48] <echelon> gotcha
[21:37:22] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:39:06] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 276 seconds)
[21:39:22] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:40:50] *** Joins: pnoud (~pnoud@user/pnoud)
[21:41:03] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:41:14] *** Quits: y1n (~y1n@84-115-64-99.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[21:42:15] *** Joins: y1n (~y1n@84-115-64-245.wifi.dynamic.surfer.at)
[21:42:16] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[21:42:35] *** Quits: rendar (~rendar@user/rendar) ()
[21:43:27] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Client Quit)
[21:45:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 245 seconds)
[21:45:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[21:47:45] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[21:48:27] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[21:49:38] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[21:50:35] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[21:51:28] *** Joins: dulanic (~dulanic@47.187.144.163)
[21:52:04] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[21:52:16] *** Joins: JanC (~janc@user/janc)
[21:52:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[21:52:41] *** Joins: Naan (~naan@user/naan)
[21:52:56] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[21:53:09] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[21:53:11] *** Joins: goldfish (~goldfish@user/goldfish)
[21:53:27] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[21:53:31] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[21:54:29] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[21:54:31] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 258 seconds)
[21:54:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:54:51] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[21:56:36] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[21:59:19] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[21:59:23] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[22:02:11] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[22:02:20] *** Joins: dulanic (~dulanic@47.187.144.163)
[22:03:18] *** Quits: baltazar (~baltazar@178-164-240-29.pool.digikabel.hu) (Remote host closed the connection)
[22:05:16] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[22:05:57] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:06:56] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[22:07:05] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:07:20] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f472:b5db:88c6:67dd) (Ping timeout: 256 seconds)
[22:09:24] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[22:10:06] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[22:10:45] *** Quits: candyman1 (~candyman@user/candyman) (Remote host closed the connection)
[22:10:45] *** Parts: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) ()
[22:11:35] *** Joins: finster (~finster@2a01:4f8:c17:4faa::2)
[22:11:59] *** Quits: greenx (~greenx@user/greenx) (Quit: greenx)
[22:12:35] *** Joins: pnoud (~pnoud@user/pnoud)
[22:13:29] *** Joins: baltazar (~baltazar@178-164-240-29.pool.digikabel.hu)
[22:13:33] *** Joins: argento (~argent0@168-227-96-51.ptr.westnet.com.ar)
[22:13:38] *** Quits: dulanic (~dulanic@47.187.144.163) (Ping timeout: 265 seconds)
[22:14:32] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[22:14:46] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[22:15:12] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[22:16:21] *** Quits: Lush-_ (~lushlush@user/lush-/x-1276235) (Quit: atchou)
[22:16:32] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[22:16:33] *** Joins: Akuli (~Akuli@87-94-111-16.bb.dnainternet.fi)
[22:17:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[22:18:22] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:19:06] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f472:b5db:88c6:67dd)
[22:22:33] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[22:24:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[22:25:09] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[22:25:15] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:25:41] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:26:48] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:27:34] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[22:28:15] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Read error: Connection reset by peer)
[22:28:30] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 276 seconds)
[22:29:46] *** Joins: sedeki (~textual@user/sedeki)
[22:32:23] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:8d1e:9a6a:e03:adfe)
[22:32:30] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 272 seconds)
[22:33:53] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[22:34:38] *** Joins: JanC_ (~janc@user/janc)
[22:34:51] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[22:35:06] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[22:36:07] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[22:36:14] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[22:36:52] *** Quits: JanC (~janc@user/janc) (Ping timeout: 268 seconds)
[22:38:27] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:f438:5f31:7a5c:74c3)
[22:38:36] *** JanC_ is now known as JanC
[22:39:39] *** Joins: WinterHeart (~Guest35@134.126.93.123)
[22:40:18] *** Quits: humbertwoody (~humbertow@2806:107e:f:6403:bcad:4f57:ec26:fc82) (Ping timeout: 240 seconds)
[22:41:22] *** Quits: y1n (~y1n@84-115-64-245.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[22:41:33] *** Joins: pnoud (~pnoud@user/pnoud)
[22:43:27] *** Joins: goldfish (~goldfish@user/goldfish)
[22:46:30] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[22:46:54] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[22:47:12] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[22:47:27] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[22:48:39] *** Quits: traptrip (trip@brigaid.xs4all.nl) (Quit: reboot)
[22:48:44] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[22:50:06] <Noisytoot> What will replace the XMLRPC search API? pip search doesn't work
[22:50:10] *** Joins: willis928 (~asuka@59.41.245.147)
[22:50:17] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:50:36] <grym> Noisytoot: https://pypi.org/project/pip-search/ is a bandaid
[22:50:42] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:51:20] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[22:52:58] <willis928> I just tried to rebind __init__ with a function defined outside the class, then I found that __class__ can't be touched. I think maybe this feature can be added?
[22:53:53] *** Joins: audio (~audio@2603-8081-1800-00ad-7777-ea44-55cb-9a16.res6.spectrum.com)
[22:53:55] <willis928> Illustration: https://bpa.st/MDQA
[22:53:55] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:53:57] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:54:37] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[22:54:52] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[22:55:09] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[22:55:09] *** Joins: fofoni (~fofoni@user/fofoni)
[22:56:09] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:56:19] *** Joins: c10l (~c10l@89.34.167.207)
[22:56:52] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[22:57:12] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[22:57:23] <jinsun> willis928: super() is special thing, works only within class block
[22:57:47] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[22:58:17] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[22:59:55] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[23:00:03] *** Joins: Jefren1 (~Jefren@70.35.66.225)
[23:00:13] <willis928> Ya. I just thought that can we treat it as a class member at execution time if it is binded into a class, then called like normal class members? Dynamic.
[23:00:59] *** Quits: Jefren (~Jefren@208.104.190.60) (Ping timeout: 252 seconds)
[23:01:12] <BrenBarn> it will be treated as a normal method, but `super` specifically won't work
[23:02:30] <whatsupdoc> Why is this line of code giving me an error?
[23:02:34] <whatsupdoc> seen = {}
[23:02:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[23:02:49] <BrenBarn> probably you have an error on an earlier line
[23:02:55] <BrenBarn> like a missing parenthesis or something
[23:02:59] <whatsupdoc> first line
[23:03:08] <BrenBarn> what is the full traceback?
[23:03:11] <BrenBarn> and code?
[23:03:25] <whatsupdoc> use of undeclared identifier
[23:03:28] <whatsupdoc> 'seen'
[23:03:56] <whatsupdoc> https://dpaste.com/89C9AK59N
[23:04:12] <BrenBarn> please paste the actual code and actual traceback into an online paste tool
[23:04:42] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[23:04:50] <whatsupdoc> https://leetcode.com/problems/longest-substring-without-repeating-characters/
[23:04:55] <BrenBarn> that's not Python code
[23:05:08] <whatsupdoc> ?
[23:05:31] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 250 seconds)
[23:05:36] <whatsupdoc> oh omg lol
[23:05:48] <whatsupdoc> lmao
[23:05:55] *** Joins: Jefren2 (~Jefren@70.35.67.120)
[23:06:03] <whatsupdoc> yeah that's c++, it all looks the same to me
[23:06:08] <BrenBarn> ha ha ha
[23:06:21] <BrenBarn> looks pretty different to a computer :-)
[23:07:42] *** Quits: Jefren1 (~Jefren@70.35.66.225) (Ping timeout: 252 seconds)
[23:07:42] <willis928> BrenBarn: super indeed doesn't work .. In fact I was thinking to suggest the Python maintainers to add this feature. though I believe it would be not a very easy thing to implement
[23:08:00] <willis928> I feel it natural, haha
[23:08:29] *** Joins: anddt (~anddt@net-188-152-4-216.cust.vodafonedsl.it)
[23:08:32] <BrenBarn> you could probably use a mixin that defines the `__init__` you want to use
[23:08:49] <BrenBarn> but you'd have to be careful to get the ordering right
[23:08:51] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[23:09:36] <willis928> yeah, I have currently used super(type(self), self) in my code and it works fine
[23:09:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[23:11:12] <willis928> Like this: https://bpa.st/N4TQ         I was originally writing a decorator for the child classes to use the base class's `__init__`
[23:12:42] *** Joins: qunzhong_luxian (~qunzhong_@66.63.167.110)
[23:16:10] <lxer> shouldn't you use @classmethod for that?
[23:17:51] *** Joins: Jefren3 (~Jefren@208.104.190.27)
[23:18:09] <lxer> I mean, using a childclass with some custom initialisation
[23:19:55] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:c907:ac42:f088:482d)
[23:20:23] *** Quits: Jefren2 (~Jefren@70.35.67.120) (Ping timeout: 258 seconds)
[23:21:27] <willis928> Ya, I understand. My situation is rare, that there are many child classes, implementing some abstract methods in different ways. However, there is a common point, that they all initialise themselves the same way. Then I came up with this decorator, which is more self-descriptive - since without it I would have to write the same super().__init__ for every child classes
[23:21:35] *** Joins: djapo (~archangel@user/djapo)
[23:22:51] <jinsun> willis928: I don't think super(type(self), self) is right, like it won't work if you have a super call in the base class too, and I don''t see the point of that decorator at all, you save one line of super call and add two lines decorator + pass
[23:23:05] *** Joins: matsaman (~matsaman@user/matsaman)
[23:23:26] <echelon> hi, how do i add an argparse argument for a positional argument that should be either "add" or "delete" but nothing else?
[23:23:51] *** Joins: manti7 (~manti7@176.10.104.94)
[23:24:17] <thecoder> Hi, I am parsing some JSON data and I am getting a list of data here at this array `somedata["main"][0]` sometimes the data I am looking for is in either somedata["main"][10] or somedata["main
[23:24:54] <thecoder> somedata["main"][9], but sometimes there is only data up to somedata["main"][5] .... how can I skip anything with somedata["main"][5]
[23:24:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:26:20] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 272 seconds)
[23:26:30] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[23:26:32] <willis928> jinsun: Oops, it really doesn't work! I don't know that, and I think I need look carefully why doesn't it works. For line counts it indeed increases lines of code
[23:27:05] <thecoder> basically I guess, detecting if a dictionary has less values than other parts of that same dictionary
[23:27:05] <jinsun> echelon: parser.add_arument(..., choices=["add", "delete"]) ? https://docs.python.org/3/library/argparse.html#choices
[23:28:50] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[23:28:51] <willis928> jinsun: I understood why it becomes recrusive calls. Thanks a lot!
[23:28:56] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[23:29:18] <whatsupdoc> how do you do this in python? you want to loop through a string but then you want to back to a previous value inside that for loop
[23:29:24] <whatsupdoc> or you can't do that using for i in s?
[23:30:09] <willis928> thecoder: try len(somedata["main"])?
[23:30:30] <thecoder> wilis928, might work, i was using range.
[23:30:34] <thecoder> whoops :)
[23:30:38] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[23:30:56] *** Joins: zenloading (~zenloadin@user/zenloading)
[23:31:14] <thecoder> if len(somedata["main"]) > 10: ... cool
[23:31:28] <willis928> Glad if it helps
[23:31:39] *** Quits: finster (~finster@2a01:4f8:c17:4faa::2) (Quit: leaving)
[23:32:26] <programmerq> whatsupdoc: you could do for index, i in enumerate(s):
[23:32:42] <programmerq> then if you needed to, you could do s[index-5] or whatever offset you need
[23:34:22] <shlomif> whatsupdoc: whatsup.docx ;)
[23:34:23] <thecoder> willis928 i am from freenode, (rbo) is my old name, it was registered here already so, you've always been a help here and freenode. thank you again!
[23:34:23] <whatsupdoc> doc as in future doctor lol
[23:34:29] <shlomif> echelon: hi
[23:34:39] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[23:34:53] <whatsupdoc> hi jewish fish dude
[23:35:22] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[23:35:31] <whatsupdoc> roodolph
[23:35:32] <willis928> thecoder: lol, that's a coincidence. I haven't been on freenode
[23:36:04] <whatsupdoc> rudolph
[23:36:32] <shlomif> echelon: i presume using click.py is not an option
[23:36:38] <whatsupdoc> shlomif: you changed your name?
[23:37:23] <shlomif> whatsupdoc: only my nick
[23:37:26] <echelon> jinsun: thanks!
[23:37:45] <echelon> shlomif: shlomi fish?
[23:38:10] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[23:38:22] <shlomif> echelon: in the fish^W flesh!
[23:38:38] *** Quits: qunzhong_luxian (~qunzhong_@66.63.167.110) (Changing host)
[23:38:38] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[23:40:18] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[23:40:28] <gimzmoe> I have "ImportError: libpython3.6m.so.1.0: cannot open shared object..." I'm running python 3.9.5 that has libpython installed, I'm not very familiar with the way python versions play well is there an easy way out of this?
[23:41:02] <whatsupdoc> How do you access a tuple thing like this? (0, 'eat')
[23:41:12] *** Joins: CrypticS_ (~CrypticS_@user/crypticsquared)
[23:41:13] <grym> whatsupdoc: by indexing into it
[23:41:20] <whatsupdoc> l1 = ["eat","sleep","repeat"]
[23:41:24] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 256 seconds)
[23:41:24] <whatsupdoc> enumerate(l1)
[23:41:25] <SnoopJ> gimzmoe, it would help to see the complete error report. At a guess: it looks like you're trying to import a module that was compiled for 3.6.
[23:41:29] <grym> whatsupdoc: (0,'eat')[1] == 'eat'
[23:41:39] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[23:41:47] <whatsupdoc> alright thanks
[23:41:51] <SnoopJ> whatsupdoc, note: enumerate() doesn't make a tuple, it makes a special iterable object that yields tuples.
[23:41:52] <shlomif> gimzmoe: stale module likely
[23:41:59] <gimzmoe> SnoopJ: yeah GMAT (NASA tool)
[23:42:15] <grym> whatsupdoc: so `for index, value in enumerate(["eat","sleep","repeat"]):` and then you're unpacked already
[23:42:33] <grym> whatsupdoc: ie, the first time through the loop, index is 0 and value is "eat"
[23:42:40] <whatsupdoc> yep
[23:42:42] <whatsupdoc> got it
[23:42:52] <Byteflux> whatsupdoc: but do you need the index?
[23:43:02] <whatsupdoc> not really lmao
[23:43:06] <Byteflux> if not then just: for value in l1: ...
[23:43:06] *** Quits: willis928 (~asuka@59.41.245.147) (Ping timeout: 256 seconds)
[23:43:14] <whatsupdoc> i need to change the index
[23:43:20] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[23:43:20] <gimzmoe> "ImportError: libpython3.6m.so.1.0: cannot open shared object file: No such file or directory" was the full text, not much extra, was hoping I didn't have to start over with an older python
[23:43:22] <grym> whatsupdoc: you can't
[23:43:25] <whatsupdoc> i'm looping like this 1,2,3,4,5,4,3,4,5,6,7
[23:43:27] <grym> whatsupdoc: what are you really doing
[23:43:29] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[23:43:53] <whatsupdoc> Instead of sequentially running the code on every item, i need to be able to change the index
[23:43:58] <whatsupdoc> or is that a bad idea?
[23:44:21] <Byteflux> explain what you're trying to accomplish and we can say if it's good or bad
[23:44:41] <whatsupdoc> basically if something happens during the processing of the string, i want to restarted from an earlier part of the string
[23:44:43] *** Joins: jpcanepa (~jpcanepa@2800:300:62b1:a600::c)
[23:45:00] <whatsupdoc> *restart
[23:45:19] <whatsupdoc> does that make sense?
[23:45:38] <whatsupdoc> 1,2,3,4,5 (something happened, i need to backtrack), 3, 4,5, 6, 7
[23:46:03] <Byteflux> processing the string in what way? i only know that you're looping over a list of strings
[23:46:22] <whatsupdoc> i'm looping over characters in a string
[23:46:49] *** Joins: pnoud (~pnoud@user/pnoud)
[23:46:50] <whatsupdoc> https://leetcode.com/problems/longest-substring-without-repeating-characters/
[23:47:52] <gimzmoe> looks like my issue is with a file called _gmat_py.so
[23:48:00] *** Joins: schumaml3 (~schumaml@dslb-088-067-050-047.088.067.pools.vodafone-ip.de)
[23:48:58] <whatsupdoc> ugh i should just do it like in c++
[23:48:58] <DPA> i=0
[23:48:58] <DPA> while i < len(x):
[23:48:58] <DPA>   do_something(x[i])
[23:48:58] <DPA>   i++
[23:49:07] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:49:11] <whatsupdoc> range(len(s))
[23:49:26] *** Joins: minip (minip@user/minip)
[23:49:36] <whatsupdoc> i mean this seems like it should be a common task
[23:49:54] *** Quits: schumaml2 (~schumaml@dslb-178-002-189-247.178.002.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[23:50:12] <whatsupdoc> there's no way to do it without playing around with indices?
[23:50:52] <whatsupdoc> let's say if i run into the character "c" in the string, i want to jump back two indices
[23:50:58] <DPA> If you iterate over a generator or something similar, you may no longer have previous results, and you may not yet have future results.
[23:51:10] *** Joins: pgib (~textual@173.38.117.81)
[23:52:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[23:52:07] <SnoopJ> whatsupdoc, we're getting a lot of questions about how you think you want to solve the problem, and we don't know the problem. Our advice to you will be better if you tell us the problem.
[23:52:26] <whatsupdoc> 3. Longest Substring Without Repeating Characters
[23:52:30] <whatsupdoc> https://leetcode.com/problems/longest-substring-without-repeating-characters/
[23:52:56] <whatsupdoc> https://dpaste.com/5HHQ36NHU
[23:54:03] <whatsupdoc> Fix it?
[23:54:22] *** Joins: waynew (~wayne@user/waynew)
[23:54:51] *** Joins: mexen (uid495612@user/mexen)
[23:55:23] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:55:34] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:56:06] *** Quits: Jefren3 (~Jefren@208.104.190.27) (Ping timeout: 265 seconds)
[23:56:11] <whatsupdoc> Breaks on ""pwwkew"
[23:56:20] <gitesh> whatsupdoc: what is substring?
[23:56:33] *** Joins: Jefren3 (~Jefren@206.253.157.248)
[23:56:43] <whatsupdoc> a subsection of the string
[23:57:09] <Byteflux> substring in this case seems specifically to be a sequence of unique characters
[23:57:13] <whatsupdoc> https://images.slideplayer.com/15/4866335/slides/slide_2.jpg
[23:57:15] <Byteflux> the "repeating characters" is a poor description
[23:57:17] <qunzhong_luxian> for example "efghi" is a substring of "abcdefghijklmnop"
[23:57:56] <whatsupdoc> continuous section of a string
[23:58:18] <Byteflux> substring of unique characters is a better description
[23:58:51] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:59:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:59:01] *** Joins: Jefren4 (~Jefren@70.35.67.247)
[23:59:28] <whatsupdoc> ugh i just wish i could add i-=1
