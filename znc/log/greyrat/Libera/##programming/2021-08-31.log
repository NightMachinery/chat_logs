[00:02:25] <pyzozord> blahboybaz: we all do sometimes
[00:02:25] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[00:02:58] *** Quits: Arithmoquine (~ct@193.32.127.230) (Ping timeout: 252 seconds)
[00:03:08] <pyzozord> blahboybaz: I find it that sometimes it takes many attempts to solve the problem from different angles until everything clicks together and I can solve it
[00:04:57] *** Joins: Arithmoquine (~ct@185.195.232.132)
[00:05:01] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[00:05:59] *** Joins: arktnld (~arktnld@179.186.108.236)
[00:06:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[00:10:40] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[00:12:57] *** Quits: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451) (Quit: Leaving)
[00:13:47] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Client Quit)
[00:15:07] <blahboybaz> üëç
[00:15:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:15:49] *** Joins: mickey (~user@user/mickey)
[00:16:15] <rannnn8888> help in VBA https://wtools.io/paste-code/b6yp
[00:16:17] <bayaz> Title: DSAD text code | WTOOLS 
[00:17:20] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[00:17:53] <droid3> hey guys i got a quick question does anybody know an efficent way to extract the first n bits and the last n bits of a number.
[00:18:40] <webNET4> bitwise and with a mask
[00:18:43] <droid3> The catch is for a bignum or biginteger number not a regular int , long built in data type?
[00:20:16] <pikapika> droid3, cant say without knowing the internal representation of the number
[00:20:31] <droid3> we all know how to >> and xor when the sizes are managable like integer , longs ...etc with 0xFFFF xor number >> 3 for example.
[00:20:32] <pikapika> If its in a binary base then just do the operation on the first and last words
[00:20:47] <pikapika> but if its in decimal (most probable case), then the msb is much harder
[00:20:57] <pikapika> maybe lsb too
[00:21:02] <pikapika> it entails a full conversion to binary first
[00:21:39] <droid3> well i can do r.shiftRight(r.bitLength() - n); to get the n most significant bits of a number.
[00:21:59] <webNET4> sounds slow
[00:22:05] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Ping timeout: 244 seconds)
[00:22:19] <droid3> But i cannt get the least significant bits because if i shiftLeft it just appends zeros and i have no way to xor it with a number in reasonable amount of time.
[00:22:39] <pikapika> droid3, is that binary
[00:22:52] <pikapika> Bigints probably use decimal internally
[00:22:56] <pikapika> So thats a costly operation
[00:23:09] <pikapika> What language/library is that
[00:23:11] <droid3> not sure how BigInteger normally internalizes the arrays if its a bit array then sure but i think there using different bases.
[00:23:23] <pikapika> What language/library is that
[00:23:50] <droid3> I am using java but i can use c/c++ bignum i just run into the same issue in any language at the moment
[00:23:52] *** Quits: arktnld (~arktnld@179.186.108.236) (Ping timeout: 252 seconds)
[00:24:35] <pikapika> droid3, apparnetly java provides apis to convert to other bases
[00:24:42] <pikapika> so convert to binary then toString()
[00:24:50] *** Joins: arktnld (~arktnld@177.205.39.242.dynamic.adsl.gvt.net.br)
[00:25:12] <pikapika> droid3, how big are the numbers
[00:25:16] <droid3> confused on how you are thinking about this.
[00:25:24] <pikapika> and is it really necessary to get the answer in binary bits
[00:25:29] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[00:25:34] <pikapika> and not say decimal digits or whatever base it was instantiated as
[00:26:01] <pikapika> droid3, num.toString(2)
[00:26:17] <droid3> They are the lucas numbers for testing mersenne primes 
[00:26:31] <pikapika> https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#toString(int)
[00:26:31] <bayaz> Title: BigInteger (Java Platform SE 7 ) 
[00:26:48] <pikapika> droid3, yeah so how many digits are we talking, approximately
[00:28:40] <pikapika> like on the order of thousands of digits, or millions of digits or billions etc
[00:29:30] <droid3> and i wanted to implement the more efficient way to compute them. 
[00:29:31] <droid3> https://ibb.co/zrdzt4k
[00:29:32] <bayaz> Title: mps 
[00:29:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:29:58] <pikapika> droid3, yeah so tell us what sizes you expect
[00:30:34] <droid3> the problem is if i do regular s^2-2 mod Mp that time consuming in the for loop. In sxs and mod operator. And this formula in link makes the mod operate much more efficient to compute.
[00:30:43] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:30:55] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:31:18] <droid3> what do you mean what size these are really really big things like several million or even billion of digit primes !!!!
[00:31:35] <pikapika> Then java biginteger probably won't cut it
[00:31:44] <pikapika> There are specialized algorithms used at these sizes
[00:32:02] <pikapika> how much ram do you have
[00:32:32] <droid3> 16GB right now though i am working on an 8GB machine though so 8GB currently
[00:32:49] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Read error: Connection reset by peer)
[00:32:50] <webNET4> gcc only goes up to 128bit integer type :(
[00:33:10] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[00:33:19] <droid3> Anyway if biginteger wont do it from java. I cannt see how bignum for c/c++ or python is going to cut it either by much.
[00:33:58] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Ping timeout: 244 seconds)
[00:34:07] <droid3> This has to do highly on the implementation of bignum , biginteger ,...etc multiply , shift , mod , pow , arithmetic operations.
[00:34:32] <^-^hi> if you don't want exact numbers, doubles can go a long way
[00:34:36] <pikapika> droid3, gmp might have some tools to efficiently handle these sizes
[00:34:54] <pikapika> What do you want to do? Do you want that fat award sum?
[00:35:21] <droid3> And even if i could tell biginteger to store the numbers as a bit array base 2 i still have the issue of base 2 taking up lot more space then say internally base 10 or base 16 ...etc
[00:35:23] <pikapika> I don't know about the mersenne algorithm in particular
[00:35:32] <pikapika> droid3, binary is the most efficient
[00:35:42] <pikapika> By binary I mean any power of 2
[00:35:49] <^-^hi> droid3: what is the exact problem?
[00:35:50] <pikapika> for a 32 bit word, 2^32 is the best base
[00:35:56] <pikapika> and 10^9 the best binary base
[00:35:59] <pikapika> within the same constraints
[00:36:16] <pikapika> *best decimal base
[00:36:19] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[00:36:22] <^-^hi> droid3: is that an assignment or something? do you get the number from standard input?
[00:36:28] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:36:40] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:36:41] <droid3> int , double , long , floats or any other built in data type that in relation to register sizes on the physical computer wont cut it ^-^hi
[00:36:55] <pikapika> droid3, binary is the best packing
[00:36:58] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Ping timeout: 250 seconds)
[00:37:11] <pikapika> but it needs a base conversion if you want your output in decimal
[00:37:15] <droid3> you simply need a bignum api and if java api doesnt work well enough what languages api for bignum would work ???
[00:37:15] <pikapika> base conversion is a costly process
[00:37:30] <pikapika> I think O(n log n log log n) or something around that with a good algorithm
[00:37:33] <^-^hi> no really, do you get the number from standard input? that way it is trivial and doesn't need bignum
[00:37:35] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[00:37:35] <pikapika> but yeah internally its best to work with binary
[00:37:50] *** Quits: arktnld (~arktnld@177.205.39.242.dynamic.adsl.gvt.net.br) (Ping timeout: 250 seconds)
[00:38:13] <^-^hi> no much trivial now i think of it, but, probably doesn't need bignum, or does it?
[00:38:35] <droid3> pikapika i didnt say i need to display it so i dont need to convert it or display to the screen. I just need to compute it
[00:38:50] <webNET4> GMP should work
[00:39:04] <droid3> Its a test for primeness for numbers of 2^n-1 form.
[00:39:18] <pikapika> droid3, what algorithm in use
[00:39:30] <droid3> lucas-lehmer test
[00:39:57] *** Quits: Arithmoquine (~ct@185.195.232.132) (Quit: WeeChat 3.2)
[00:40:09] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[00:40:12] <jjido> Is mermaid good for diagrams?
[00:40:18] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Quit: Stay safe!)
[00:40:19] <droid3> its a simple algorithm to implement but to implement the sxs and the mod part of the loop efficiently with a biginteger java api is kind of difficult.
[00:40:26] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:40:41] <Akronymus> hey there pikapika
[00:40:45] <pikapika> droid3, whats the typical sizes of n you expect
[00:40:51] <pikapika> in 2^n-1
[00:41:23] <droid3> here all give you the code its in java currently you run it and see what i am talking about.
[00:41:38] <pikapika> yeah  s = ((s √ó s) ‚àí 2) mod M
[00:41:39] <pikapika> this thing
[00:41:41] <webNET4> https://rosettacode.org/wiki/Arbitrary-precision_integers_(included)#Java   this method is no good?
[00:41:49] <pikapika> if it ends up testing until s=M
[00:41:54] <pikapika> then the squaring is gonna be costly
[00:42:00] <pikapika> and it is better to use fft based squaring or similar
[00:42:06] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[00:42:11] <pikapika> which I think most general purpose bigint libraries don' do
[00:42:16] <pikapika> but libraries like gmp do
[00:42:35] <pikapika> I don't know fast module algorithms
[00:42:36] <pikapika> Akronymus, hi
[00:42:36] <jjido> droid3 you can divide by a power of two which allows to convert the number in 64 bit int, then use normal bit masking
[00:43:16] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[00:43:18] <webNET4> https://rosettacode.org/wiki/Arbitrary-precision_integers_(included)#Ada  GMP example
[00:43:37] <droid3> https://pastebin.com/4AQkU3ht
[00:43:39] <bayaz> Title: import java.math.BigInteger;public class Lucas { //This is a very powerf - Pastebin.com 
[00:44:20] *** Joins: Auron (Auron956@user/auron)
[00:44:26] <webNET4> lol bayaz ignoring meee!?
[00:45:01] *** Joins: mickey0 (~user@user/mickey)
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:33] *** Joins: scabby (~scabby@user/scabootssca)
[00:45:39] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[00:45:40] *** mickey0 is now known as mickey
[00:45:48] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[00:46:58] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[00:47:21] *** Joins: scabby_ (~scabby@user/scabootssca)
[00:48:26] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 244 seconds)
[00:48:37] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 252 seconds)
[00:48:57] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[00:50:05] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 250 seconds)
[00:50:06] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:50:49] <webNET4> https://rosettacode.org/wiki/Lucas-Lehmer_test
[00:51:39] <webNET4> they use java.math.BigInteger here
[00:52:29] <pikapika> The squaring might get very costly at large sizes if it uses O(n^2) multiplication
[00:53:05] *** Quits: Mach (~mach@2a02:2f09:d303:5d00::738) (Quit: q)
[00:53:53] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:54:00] <pikapika> Apparently the current record for primes is 2^82,589,933 ‚àí 1
[00:54:10] <droid3> well whats better pow(2) or multiply(s) 
[00:54:53] <droid3> yup i know that and i can print it out the largest prime so now i thought i use the lucas lehmer test on the next prime that as not been verified yet 
[00:55:34] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Remote host closed the connection)
[00:56:04] <droid3> But the loop seems slow because of both sxs and mod() operations. Still i can get up to about p=100 in a day or so that a far cry from 104999998 
[00:56:21] <droid3> 2^p -1 
[00:57:15] <droid3> so the only way to optimize this stuff is if it was in a huge bit array where you can just perform shifting operations 
[00:57:18] <pikapika> droid3, apparently BigInteger in newer java versions uses toom cook algorithm
[00:57:29] <pikapika> which is faster for moderately large numbers
[00:58:11] <karstensrage> webNET4, BigInteger has isProbablyPrime I think
[00:58:12] <droid3> but i find it difficult to do this when operators like >> << & | ^ only work on the long , int , double ,...etc built in data type that are far to small to use.
[00:58:45] <droid3> And they do have shiftRight , shiftLeft xor and ,...etc for these biginteger class 
[00:58:53] <pikapika> toom cook is probably okay for your range ie numbers around 50 million decimal digits
[00:59:05] <pikapika> but theres still the matter of computing the modulo quickly
[00:59:14] <pikapika> I don't know fast algorithms for modulo large numbers
[00:59:28] <Akronymus> Shifting would be my best guess.
[00:59:37] <pikapika> well tbh
[00:59:43] <pikapika> its modulo 2^n-1
[00:59:55] <pikapika> so if you use a binary representation actually its trivial in this case
[01:00:04] <pikapika> so it boils down to a fast squaring algorithm
[01:00:07] *** paulo is now known as lilo
[01:00:11] <droid3> But the problem is how do i get the bottom n bits of a huge number really fast  i got s.shiftRight(s.bitLength() - p) to get the top p bits of a biginteger
[01:00:13] *** lilo is now known as paulo
[01:00:18] <pikapika> toom cook or schonhage strassen would be valid candidates at these sizes
[01:00:28] <Akronymus> droid3 & ?
[01:00:32] <pikapika> you don't need to shift anyting if you have access to the internal array
[01:00:36] <pikapika> maybe subclass BigInteger
[01:00:58] *** Joins: anton (anton@tloks.com)
[01:01:57] <droid3> pikapika i was assuming biginteger like most bignum libraries implemented toom and schonhage because those are the most practically fast algorithms currently done for multiplication
[01:02:52] <droid3> i thought before they create bignum libraries they would have accounted for this. If there using the same elementary school O(n^2) operations for two n size numbers then i got a bigger problem with that aspect then my code.
[01:03:06] *** Parts: Guest522 (~Raguile@115-188-163-160-fibre.sparkbb.co.nz) ()
[01:03:19] *** Quits: anton (anton@tloks.com) (Client Quit)
[01:03:33] <droid3> I didnt really want to have to reimplement a bignum class from scratch thought they have the most efficient algorithms add to it by now. 
[01:03:56] <droid3> But anyway the problem still stands how do i implement this https://ibb.co/zrdzt4k 
[01:03:57] <bayaz> Title: mps 
[01:04:05] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[01:04:10] <droid3> from a bignum library efficiently
[01:04:32] <webNET4> build a machine that can do arbitrary arithmetic
[01:04:37] <webNET4> instead of emulating one
[01:04:38] <droid3> i have to have a means to extract the top n bits and a means to extract the bottom n bits to implement this
[01:05:03] <Akronymus> webNET4 you mean something like a asic but for bignum?
[01:05:22] <webNET4> yeah something like that
[01:05:51] *** Joins: anton (anton@tloks.com)
[01:05:52] <droid3> I have s.shiftRight(s.bitLength() - n) to get the top n bits. Not sure how efficient that is seems not efficient
[01:06:01] <pikapika> droid3, not really
[01:06:15] <pikapika> A general purpose biginteger most probably won't be implementing high perf multiplication algorithms
[01:06:22] <pikapika> because those only make sense at huge sizes of integers
[01:06:35] <pikapika> it seems newer java versions use toom cook now though
[01:06:41] <Akronymus> Hence asics
[01:06:46] <droid3> And i still need to know how to get the bottom n bits efficiently. I can use testbit and loop thru all the lowest n bits but thats like O(n) time just to extract the first n bits of these numbers
[01:06:57] <droid3> which seems like a huge waste of time
[01:07:01] <pikapika> repeatedly squaring and checking modulo 2^n-1 is trivial
[01:07:11] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:07:12] <pikapika> you don't need to implement full bignum functionality for that
[01:07:31] <Akronymus> num & 0xffff... until you get the right amount of bits?
[01:07:39] *** Quits: Akuli (~Akuli@87-94-109-202.bb.dnainternet.fi) (Quit: Leaving)
[01:07:43] <pikapika> Akronymus, we are talking millions of digits sizes
[01:08:02] <Akronymus> Millions of f's it is, then /s
[01:08:08] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:08:28] <pikapika> droid3, if you could access the interal array of the BigInteger then testing that modulo is simply a matter of checking the last n/32+1 words
[01:08:32] *** Joins: independent_ (~independe@95.144.68.39)
[01:08:37] *** Joins: arktnld (~arktnld@177.133.7.245.dynamic.adsl.gvt.net.br)
[01:08:51] <pikapika> assuming a 32 bit word size and base 2^32 being used internally
[01:09:12] <droid3> ya i dont know how many 0xFFFFF....FFF i need to xor with and plus that even more inefficent because now your holding a 0XFFFFF....FFFF huge number in memory as well. Just for extracting the bits. Plus each iteration the number size changes so you have to change the 0xFFFFF.....FFF as well. 
[01:09:14] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[01:09:17] <pikapika> n/32 lsb words should be 0, and the last (n-n/32) bits of the next word should be zero
[01:09:22] <Akronymus> Not xor.
[01:09:23] <Akronymus> And
[01:09:25] <pikapika> if n isn't an exact multiple of 32
[01:09:38] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:09:42] <Akronymus> A asic would need some efficient bit level addressing.
[01:09:54] <Akronymus> For truly arbitrary size ints.
[01:10:05] <pikapika> droid3, its truly trivial if you have access to the internal array
[01:10:21] *** Joins: independent56 (~independe@95.144.68.39)
[01:10:23] <droid3> pikapika now that assumption is wrong these numbers are much bigger then 32 bit or even 64 bit or even 256 bit sizes...etc
[01:10:36] <pikapika> droid3, I ma saying 32 bits is the word size
[01:10:39] <pikapika> not the size of the number
[01:10:42] <droid3> there huge several millions and billions of decimal digits
[01:10:49] <pikapika> ie the number is composed of 32 bit "digits"
[01:10:58] <pikapika> each array cell is a "digit"
[01:11:10] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:11:38] <droid3> ya so the most for one array cell is the max size of integer data type or long data type depending on what one is internally used in biginteger 
[01:11:48] <pikapika> if you can access the internal array then testing that modulo is trivial
[01:11:51] <webNET4> what is the purpose, to strengthen cryptography?
[01:11:52] <droid3> But what does this have to do with making my mod more efficient.
[01:12:01] <pikapika> k % (2^n-1) == 0 implies the n lsb bits are 0
[01:12:05] <webNET4> against known attacks
[01:12:29] <pikapika> which means, you only need to check the least significant n/32 elements of the array
[01:12:36] <pikapika> and another if n is not an exact multiple of 32
[01:12:53] <pikapika> Why n/32?
[01:12:54] <droid3> k is the issue it is k =s^2 -4 which get really really really .... big fast
[01:12:55] <pikapika> each digit is 32 bits
[01:13:05] <pikapika> so in total n bits would be spread across n/32 words
[01:13:08] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[01:13:15] <pikapika> and one more, if not an exact multiple
[01:13:26] *** Joins: independent56 (~independe@95.144.68.39)
[01:13:31] <droid3> sure s0 = 4 is nothing then it becomes 16-2 = 14  ...s^2-2 
[01:13:34] <pikapika> droid3, k is huge but you only need to access the first few dozen elements of it
[01:13:38] <pikapika> to check the modulo
[01:13:40] <pikapika> n is samll
[01:14:06] <pikapika> lets say n=235 (example)
[01:14:17] <droid3> ya and how do i go about accessing the first n bits of it and the top n bits of it efficently is what i am asking.
[01:14:27] <pikapika> so we need to check n/32 = 7 first words
[01:14:32] <pikapika> and then 11 lsb bits of the 8th word
[01:14:46] <pikapika> droid3, thats contingent on you having direct access to the array
[01:15:05] <webNET4> determine a word size, collect all full words, mask out the partial words with bitwise and op
[01:15:30] <droid3> but the array has to be a bit array also for this to be efficient https://ibb.co/zrdzt4k
[01:15:31] <bayaz> Title: mps 
[01:15:43] <pikapika> BigInteger most probably uses base 2^32
[01:15:47] <pikapika> so its already a binary array
[01:16:04] <pikapika> the second possibility is 10^9
[01:16:08] <pikapika> which would be extremely slow
[01:16:15] <pikapika> because it requires a full base conversion
[01:16:16] <webNET4> and pray it doesn't change endianness on other systems
[01:16:31] <droid3> ok but how do i get the internal array efficiently from  biginteger even if i could get it.
[01:16:34] <pikapika> Little endian is unquestionably prefered for big integers I think
[01:16:42] <pikapika> droid3, I already told you
[01:16:46] <pikapika> test the first n/32 words
[01:16:46] <droid3> Because i have to do this on each iteration of the for loop
[01:16:56] <pikapika> doesn't get faster than this
[01:17:25] <pikapika> droid3, java probably makes it private
[01:17:33] <pikapika> So you probably should use some other library
[01:17:35] <pikapika> but anyways
[01:17:41] <pikapika> implementing a squaring is trivial
[01:17:42] <webNET4> depends what are you trying to do, this could be the wrong approach entirely
[01:17:45] <pikapika> you can do it from first principles yourself
[01:18:09] <pikapika> don't need to write a full bigint library to implement fast squaring
[01:18:17] *** Quits: xenon- (~bc8167eb@217.29.117.252) (Quit: http://www.okay.uz/ (Session timeout))
[01:18:23] <pikapika> if you dont like schonhage strassen you could use ntt version
[01:18:24] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 244 seconds)
[01:18:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:19:04] <droid3> pikapika ya if it is base 2^32 and if i can efficiently get access to the internal array then i just test the first n/32 elements of it.
[01:19:16] <pikapika> droid3, exactly
[01:19:31] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (Quit: so long, and thanks for all the fish)
[01:19:37] <droid3> But the problem is i dont know how to get access to this internal array and even if i did i am not 100% sure its in base 2^32 
[01:19:47] <pikapika> Thats the issue really
[01:19:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:20:03] <pikapika> But as I said you can use a library which exposes the array or just implement yourself
[01:20:04] <pikapika> its not hard
[01:20:04] <webNET4> use a patched lib if all else fails
[01:20:10] <pikapika> let me check BigInteger's api
[01:20:17] <droid3> ya efficiently gaining access to this internal array even more then the base 2^32 later problem.
[01:20:21] <pikapika> webNET4, yeah or you can copy the java biginteger class and modify it
[01:20:52] <droid3> Because there is so many way to get at data not sure if its copying the data instead of referencing the data even if i could get at it.
[01:21:07] *** Lord_of_Life_ is now known as Lord_of_Life
[01:21:30] *** Joins: Pickchea (~private@user/pickchea)
[01:21:45] <droid3> I guess i might try extending BigInteger and see if i can get at this internal array efficiently
[01:22:03] <droid3> but i doubt it because its probably private 
[01:22:16] <webNET4> you can use libopenssl too probably
[01:22:27] <pikapika> droid3, BigInteger seems to support not and or operationd
[01:22:29] <pikapika> droid3, BigInteger seems to support not and or operations
[01:22:39] <pikapika> a & b = not (not a or not b)
[01:22:57] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:22:58] <droid3> ya but how is that going to help
[01:23:44] <pikapika> droid3, modulo 2^n-1 = k & 2^n-1
[01:23:49] <pikapika> droid3, also, there is this method https://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html#toByteArray()
[01:23:50] <bayaz> Title: BigInteger (Java Platform SE 7 ) 
[01:24:12] <pikapika> This is guaranteed to be a binary represenation in 2's complement which implies base 2^8
[01:24:28] <pikapika> It claims its big endian
[01:24:33] <droid3> as you can see mod(2^n) and integer division by 2^n is basically getting n top bits and n lower bits then your really just adding them together in this speed up https://ibb.co/zrdzt4k
[01:24:33] <bayaz> Title: mps 
[01:24:35] <pikapika> so we will have to test the last n/8 words instead
[01:24:48] <pikapika> droid3, just use toByteArray
[01:25:21] <pikapika> droid3, another point is, you will only start computing modulos once k is larger than 2^n-1
[01:25:34] <droid3> public byte[] toByteArray() ya but i fear that that method is making a copy and returning the copy.
[01:25:40] <webNET4> maybe perl lets you do it, perl always has the extra fun features
[01:25:58] <pikapika> droid3, unfortunately in BigInteger the internal array seems to be private
[01:26:02] <pikapika> so thats the best shot we have available
[01:26:19] <pikapika> of course as alluded to, you can try finding Java's implementation of the class, copy it and modify it to  expose the array
[01:26:28] <droid3> Which if i am correct would take number of bits to run thru and populate the array with. I can do this by testBit method myself at that point.
[01:27:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:27:32] <pikapika> droid3, openjdk seems to have sources for the libraries
[01:27:44] <droid3> Ya i think i have to modify BigInteger all look into getting and playing with this later.
[01:28:07] <pikapika> droid3, https://hg.openjdk.java.net/jdk8/jdk8/jdk/file/tip/src/share/classes/java/math/BigInteger.java
[01:28:09] <bayaz> Title: jdk8/jdk8/jdk: 687fd7c7986d src/share/classes/java/math/BigInteger.java 
[01:28:16] <droid3> Curious does c/c++ GMP or python or any other languages suffer from what java suffers from in this area???
[01:28:38] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[01:28:52] <droid3> because i dont mind in coding it up in a different language such as c/c++ , python or something else if i am not going to have this performance issue.
[01:28:56] <webNET4> if you use something C based you can just work off the address
[01:28:56] *** Joins: independent56 (~independe@95.144.68.39)
[01:29:29] <droid3> ya but how does bignum libraries for c/c++ store these huge numbers.
[01:29:46] <webNET4> could be a linked list for all we know
[01:29:58] <pikapika> It should be an array too
[01:29:58] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:30:08] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[01:30:10] <pikapika> An array is the most natural representation of big integers
[01:30:10] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:30:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:30:17] <droid3> sure if i work off the address i can traverse any digits/elements of the number but what base are these internally using for bignum or gmp ...etc becomes the question?
[01:30:20] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89)
[01:30:22] <webNET4> s/address/addresses/
[01:30:26] *** Joins: independent56 (~independe@95.144.68.39)
[01:30:28] <pikapika> addresses are not needed
[01:30:39] <pikapika> gmp also uses arrays internally
[01:30:49] <pikapika> the question is if it exposes the array or uses an opaque structure for numbers
[01:31:10] <pikapika> or even if it uses opaque handles does it have something like num.getWordAtIndex(i)?
[01:31:47] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[01:31:51] <droid3> well that the question does bignum for c/c++ or gmp libraries ...etc expose the internal structure to beable to quickly get at bits or element parts unlike java does?
[01:32:33] <pikapika> You'll have to look up the documentations of those libraries yourself
[01:32:33] <webNET4> too lazy to find the API spec
[01:32:37] <pikapika> I don't have experience with them
[01:33:07] <droid3> ya with class and abstraction and using get/set method it kind of hard to guarantee that there will be exposure. It could be the case it abstracts it like java and makes it impossible to get at efficiently
[01:33:44] <pikapika> if there is a method like getwordatindex(i) reason and common sense tells us it should be the obvious O(1) implementation internally
[01:33:53] <pikapika> it could even supply an iterator over the words
[01:33:59] <pikapika> idk, you'll have to read the docs
[01:34:05] <pikapika> Search gmp and read for yourself
[01:34:13] <droid3> ok all do my research thanks for the talk its extremely annoying that there is no efficient way in all bignum libraries to get the internal base representation in the most efficent manner. 
[01:34:19] *** Joins: stoneware (~stoneware@user/stoneware)
[01:34:24] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:9a7:49c3:809a:5db3) (Remote host closed the connection)
[01:35:29] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[01:35:44] <droid3> after all if you have to add on to stuff or do ridiculously fast bit arithemtic you really need the internal array or list structure.
[01:37:38] <webNET4> if its not multiple addresses then the lib could fail when address space is highly fragmented
[01:38:17] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[01:38:37] <droid3> I mean sure for built in data type one can use shifts >> << and xor with the appropriate numbers like  to get the first byte of an integer  0xFF & num or only the top bit 0xFF & num >> 8...etc
[01:39:23] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:40:06] <droid3> but that really doesnt apply anymore to bignum arithmetic  because working with 0xFFF.......FFF of arbitrary sizes is very very inefficent even though you got and ,or , xor , shiftright, shiftleft , not ,...etc functions to do it
[01:41:04] <droid3> you simply dont got 0xFFF...FFF or even if you did it take up way to much space and computing time to get it for doing the  and ,or , xor , shiftright, shiftleft , not ,...etc
[01:43:07] *** Quits: notABoxer (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[01:45:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:45:46] *** Quits: jan1 (~jan@user/jan1) (Quit: WeeChat 3.0.1)
[01:45:56] <droid3> anyway thanks for the talk all look into the major languages bignum libraries to see if some are better then others in this area...But java shits on this one they may have Toom‚ÄìCook , Karatsuba ...etc but without away to do fast base 2^n modding and fast division by 2^n there not going to cut it.
[01:46:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:47:09] <droid3> Another words the bignum library needs a fast way to grab particular groups of bits and make them into BigIntegers
[01:48:19] <karstensrage> wow
[01:48:47] <droid3> it does seem by reading a few bignum libraries they all implement some pretty fast multiplication , modpow , powering by doubling , and other very efficient ways to compute fast. It make sense after all these are big math based things so you need to work with big numbers in the most efficient manner.
[01:50:30] <droid3> Ok all stop my rambling on. The only thing i have to figure out is if there a good way fastest way to get at the internal bignum number. I would imagine c api would be my best bet because pointers are powerful things
[01:51:19] *** Quits: arktnld (~arktnld@177.133.7.245.dynamic.adsl.gvt.net.br) (Ping timeout: 252 seconds)
[01:52:32] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:52:40] <droid3> but also i imagine in c++ not c they abstract it thru class and making stuff private so they just like java might not have an efficient way to get at the internal base 2^32 array. Because they probably dont want you messing with internal stuff corrupting there bignum class potientially. That why the abstract but at the same time they dont realize there missing to include this functionality in the first place.
[01:53:19] *** Joins: CP-400 (~sjw@69.206.48.64)
[01:53:30] *** Joins: zaher (~zaher@37.48.191.218)
[01:56:26] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[01:56:50] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Remote host closed the connection)
[01:57:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[02:01:24] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:01:56] *** Joins: irado (~irado@177.12.221.61)
[02:03:30] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[02:06:38] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[02:07:22] *** Joins: independent56 (~independe@95.144.68.39)
[02:07:26] *** Joins: federico_it (~textual@151.95.116.125)
[02:08:00] *** Quits: gitgood (~gitgood@80.44.15.155) (Ping timeout: 244 seconds)
[02:10:04] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:10:13] <pyzozord> What is device like this used for? And how is it different from normal cpu or normal SoC? https://www.raspberrypi.org/products/rp2040/
[02:10:14] <bayaz> Title: Buy a RP2040 ‚Äì Raspberry Pi 
[02:11:38] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[02:11:53] *** Joins: Vlad2580 (~Vlad2580@user/vlad2580)
[02:11:56] *** Joins: independent56 (~independe@95.144.68.39)
[02:12:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:13:40] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[02:16:34] <rannnn8888> help in VBA https://wtools.io/paste-code/b6yp
[02:16:36] <bayaz> Title: DSAD text code | WTOOLS 
[02:17:12] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:17:21] *** Joins: inky (~inky@46.36.119.19)
[02:19:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:21:09] <pyzozord> Ah I see, I think a "microcontroller" is something between a cpu and a SoC. It has a cpu, ram and io, but is less sophisticated than a SoC.
[02:21:48] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:23:03] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[02:23:26] *** Joins: independent56 (~independe@95.144.68.39)
[02:24:07] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[02:25:04] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[02:25:49] <pyzozord> If I understan this correctly a microcontroller is a cpu and "stuff" intended to "control" something. So those are the things in microwaves, dishwashers, etc.
[02:26:15] <pyzozord> Probably even on computers/samrtphones, like an "usb microcontroller" or something like that.
[02:27:44] <beaky> so its been two weeks i am almost done with my solution to the 10-minute inteview problem where you must sort 1 million 32-bit unsigned ints in under 2 MiB of ram
[02:28:00] <beaky> how do i measure the memory consumption of my program
[02:31:23] <pyzozord> I usually use top(1). Recently I started started using malloc_stats(3)
[02:31:41] <beaky> nice does rust use malloc
[02:32:42] <cis> you could also check gnu `time`
[02:33:06] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[02:33:20] <pyzozord> I think they sooner go rewrite something in rust than use malloc
[02:34:40] *** Joins: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com)
[02:34:42] <cis> there's also valgrind
[02:34:54] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:35:06] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:35:09] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 276 seconds)
[02:35:28] <pyzozord> at some point rust must still make syscalls to request memory, malloc or not malloc
[02:36:33] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[02:36:54] <pyzozord> exit
[02:37:02] <pyzozord> lol forgot /
[02:37:28] <webNET4> on linux `cat /proc/self/maps` to see mapped ranges,  `cat /proc/self/status` to see mem usage
[02:38:04] <beaky> nice so its rssanon i must look at then
[02:38:13] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Quit: "Squawk 7600")
[02:38:28] <beaky> if it is under 2 MiB then i have finally after 2 weeks passed the 10-minute google interview
[02:39:41] <pyzozord> giving 10 minutes for that question is essentially asking "Have you done something similiar in the past? Because we look for people who have done something similiar in the past."
[02:41:24] <pyzozord> Not many valuble/interesting things can be done under ten minutes
[02:41:47] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[02:42:08] *** Joins: pavonia (~user@user/siracusa)
[02:42:17] *** Quits: Vlad2580 (~Vlad2580@user/vlad2580) (Quit: Leaving)
[02:44:48] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[02:45:00] <beaky> on whiteboard
[02:46:33] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[02:47:59] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:48:04] <pyzozord> I heard after you are done with the whiteboard they expect you to copy your program word for word into the computer and expect it to run flawlessly on the first try
[02:48:57] <webNET4> they're not asking youtube devs to do this i would wager
[02:49:39] <webNET4> definitely not the browser devs either
[02:49:51] <webNET4> mem usage is through the roof
[02:50:33] <pyzozord> heh
[02:50:52] <pyzozord> What was it 10k allocations per key stroke in the omnibar?
[02:51:08] <pikapika> pyzozord, what? on youtube?
[02:51:19] <pyzozord> In chrome.
[02:51:25] <pikapika> what version
[02:51:26] <webNET4> yeah everything has to be bloated and laggy so you can't tell when the spyware is running
[02:51:36] <pyzozord> pikapika: afaik all versions
[02:51:38] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:51:45] <pikapika> pyzozord, even today?
[02:52:00] <pyzozord> Dunno, haven't checked today :P
[02:52:14] <pikapika> today as in current verisons
[02:53:08] <pyzozord> Last I heard about it was a year ago or two. It seemed old and well known behavior. It didn't really sound like they are gonna get rid of it anytime soon
[02:53:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:53:39] <pyzozord> Or maybe I heard about it this year, I'm not sure.
[02:54:05] *** Joins: federico_it (~textual@151.95.116.125)
[02:54:52] *** Quits: codemin (~codemin@69.167.14.151) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:56:54] *** Joins: codemin (~codemin@69.167.14.151)
[02:59:12] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Ping timeout: 276 seconds)
[02:59:40] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 244 seconds)
[03:00:35] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[03:00:41] *** Joins: xenon- (~bc8167eb@217.29.117.252)
[03:02:46] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:49] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 252 seconds)
[03:06:19] <pyzozord> Apparently it's an old story. But I dont think they fixed it yet. https://groups.google.com/a/chromium.org/g/chromium-dev/c/EUqoIz2iFU4/m/kPZ5ZK0K3gEJ
[03:06:21] <bayaz> Title: Be careful when using std::string 
[03:06:53] *** Joins: Izem (~Izem@8.6.144.189)
[03:07:45] <pyzozord> Man waveshare 12" eink screens are so cool. I must have one.
[03:09:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 252 seconds)
[03:11:18] *** Quits: Izem (~Izem@8.6.144.189) (Quit: Going offline, see ya! (www.adiirc.com))
[03:11:22] *** Quits: irado (~irado@177.12.221.61) ()
[03:11:54] *** Joins: irado (~irado@177.12.221.61)
[03:12:28] *** Joins: lunarkitty (uid501895@user/pyra)
[03:13:52] *** Quits: irado (~irado@177.12.221.61) (Client Quit)
[03:13:57] *** Quits: deathonater (~deathonat@user/smeef) (Ping timeout: 250 seconds)
[03:14:16] *** Joins: Smeef (~deathonat@2603-7000-e206-3fd8-0d74-199a-7f6f-9629.res6.spectrum.com)
[03:14:16] *** Quits: Smeef (~deathonat@2603-7000-e206-3fd8-0d74-199a-7f6f-9629.res6.spectrum.com) (Changing host)
[03:14:16] *** Joins: Smeef (~deathonat@user/smeef)
[03:14:43] *** Joins: irado (~irado@177.12.221.61)
[03:15:03] *** Joins: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[03:15:05] *** Quits: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[03:15:05] *** Joins: Treebeard (~bland@user/benland100)
[03:15:28] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 252 seconds)
[03:15:31] *** Treebeard is now known as BenLand100
[03:15:34] <MrMobius> pyzozord, the microprocessor/microcontroller distinction is not always clear but yes microcontrollers are usually cheaper chips with ram, rom, and io all in one package that do one thing
[03:15:54] *** Joins: Atque (~Atque@user/atque)
[03:15:59] <MrMobius> vs an SOC which might also have ram and cpu in the same package but be more general purpose like in a smart phone
[03:16:07] *** Quits: byanka__ (~byanka@78.137.43.40) (Ping timeout: 240 seconds)
[03:16:54] <MrMobius> that raspberry pi you linked is a good example. technically a microcontroller but way more powerful than a lot of others and loads more memory
[03:18:32] <pyzozord> MrMobius: got it, thanks
[03:18:53] *** Joins: datcore (~unicore@83-84-151-109.cable.dynamic.v4.ziggo.nl)
[03:19:53] *** Quits: Akronymus (~Akronymus@85.118.189.59) (Quit: gnight)
[03:24:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[03:26:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:30:31] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[03:34:09] <droid3> hey simple question what is the difference or when would you use mpq over mpf for c bignum gmp libraries?
[03:34:35] *** Joins: src (~src@user/src)
[03:34:52] <droid3> mpz being the equivalent to BigInteger but now bigdecimal can be mpq or mpf 
[03:37:05] <droid3> note i am only interested for this project on using mpz but just for future if i want to work with bigdecimals in c gmp library what exact would be the major difference in using mpq over mpf and visa-versa
[03:38:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:39:24] *** Joins: dasdasd (~irado@189.40.100.156)
[03:40:39] *** Joins: Drek45 (~jrept371@129.59.122.18)
[03:41:41] *** Quits: irado (~irado@177.12.221.61) (Ping timeout: 250 seconds)
[03:41:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:42:39] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[03:42:45] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[03:44:06] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Client Quit)
[03:45:24] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-587b-b151-54d8-e1c1.inf6.spectrum.com)
[03:46:15] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[03:48:22] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-8805-df60-18eb-bff7.inf6.spectrum.com) (Ping timeout: 245 seconds)
[03:50:29] <webNET4> "simple" and "arbitrary precision" in the same sentence?
[03:53:59] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:54:49] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[03:55:03] *** Quits: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu) (Remote host closed the connection)
[03:55:09] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[03:55:39] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:55:54] *** Joins: webNET4 (~0x100@32.211.211.39)
[03:59:30] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:04:25] *** Quits: zaher (~zaher@37.48.191.218) (Ping timeout: 252 seconds)
[04:08:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:09:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:10:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:10:37] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:10:48] *** Joins: flynn (~mcbloch@user/flynn)
[04:12:08] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[04:12:13] *** Joins: rtypo (~alex@user/rtypo)
[04:13:46] <mawk> how come eclipse doesn't have a keyboard shortcut to run the program?????????????
[04:14:12] <mawk> it's an IDE, running the program is more or less an important feature, important enough to deserve a hotkey
[04:14:38] <webNET4> yeah there must be some way???
[04:15:04] <webNET4> the one redeeming gold standard feature of all IDE's
[04:15:51] <dodo> can't you customize shortcuts? probably because there's a million ways to run the program?
[04:15:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:16:04] <mawk> yes I can customize it
[04:16:09] <mawk> but why isn't it a default
[04:16:24] <mawk> eclipse devs lost their mind
[04:16:26] <Quietwalker> I think ctrl-f11 runs the last configuration you ran.
[04:16:48] <mawk> not in this eclipse build
[04:16:52] <Quietwalker> hmm.
[04:16:56] <Quietwalker> I haven't used eclipse in a while.
[04:17:00] <mawk> there is F11 to debug the current program
[04:17:15] <Quietwalker> gotta remember the folks who wrote it, they thought the whole J2EE thing was a stonkin' idea.
[04:17:26] <Quietwalker> So it's a bit straight-jacketed at times
[04:17:39] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:17:49] <mawk> yeah
[04:17:51] <mawk> I assigned it to F10, nothing was assigned
[04:17:54] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[04:18:08] *** Joins: kek_ (~kek_@178.197.228.232)
[04:18:57] *** Joins: alefir (~alefir@102.129.145.103)
[04:22:53] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: The Lounge - https://thelounge.chat)
[04:24:20] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[04:26:01] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[04:29:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:30:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:30:05] *** Quits: JuggleTux (~tux@mob-194-230-146-23.cgn.sunrise.net) (Ping timeout: 244 seconds)
[04:32:01] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: The Lounge - https://thelounge.chat)
[04:32:02] *** Joins: JuggleTux (~tux@mob-194-230-146-23.cgn.sunrise.net)
[04:35:06] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[04:39:22] *** Joins: zaher (~zaher@37.48.154.196)
[04:43:06] <smallville7123> what happens if i name a library "c" and then try to link to it? eg app_libs/libc.so
[04:43:27] <smallville7123> or "m", or any other system library?
[04:43:52] <smallville7123> what happens if i name a library "c", or "m", or any other system library, and then try to link to it? eg app_libs/libc.so 
[04:44:27] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:44:40] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:45:13] <webNET4> depends on the linker, and it's search path order
[04:45:36] <webNET4> maybe nothing, maybe chaos
[04:46:08] <webNET4> what would you try that for, instead of using a unique library name
[04:47:21] <webNET4> what happens if i try to link glibc but don't have unwinder symbols defined?
[04:47:53] <smallville7123> but there would be no way to gaurentee uniqueness right?
[04:48:33] <webNET4> scan system dir for max lib name
[04:48:36] <webNET4> add 1 character
[04:49:15] <smallville7123> :)
[04:49:41] <smallville7123> imma suffic my lib with -cmake so it doesnt conflict with the system's library then
[04:49:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[04:49:49] <smallville7123> suffix *
[04:50:20] <webNET4> or the project name, might be good enough
[04:51:10] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[04:52:33] *** Joins: independent56 (~independe@95.144.68.39)
[04:57:32] <smallville7123> how so?
[05:00:01] <webNET4> mv command might work
[05:01:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:01:51] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 250 seconds)
[05:05:59] <webNET4> wth is a register_tm_clones and deregister_tm_clones  function doing?
[05:07:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:07:17] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 244 seconds)
[05:07:39] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[05:09:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[05:10:11] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:11:49] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[05:13:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:13:43] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:13:56] <smallville7123> oh
[05:13:58] <smallville7123> 10:42:44 <irc.libera.chat> Closing Link: cpe-172-193-200-97.qld.foxtel.net.au (Ping timeout: 252 seconds)
[05:16:04] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Ping timeout: 244 seconds)
[05:16:35] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:17:38] <Caffeinated> dem bones dem bones dem...dry bones
[05:18:42] <smallville7123> boneless pizza
[05:19:05] <smallville7123> helps a lot
[05:19:10] *** Quits: datcore (~unicore@83-84-151-109.cable.dynamic.v4.ziggo.nl) (Quit: Offline)
[05:24:30] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:25:25] *** Joins: frost (~frost@59.71.240.119)
[05:26:12] <smallville7123> is it bad to call FT_New_Library every time in a resize call?
[05:26:17] <smallville7123> callback*
[05:26:57] <arahael> Probably.
[05:27:11] <smallville7123> as freetype is meant to be super fast at reloading fonts at different sizes right?
[05:27:24] <smallville7123> eg near instant loading
[05:27:28] *** Quits: alefir (~alefir@102.129.145.103) (Quit: alefir)
[05:28:09] *** Joins: Izem (~Izem@8.6.144.189)
[05:29:10] <smallville7123> as this is what imgui is doing every time it loads a font https://gist.github.com/mgood7123/e53b71571b6a417b1f01ee629c09ea1b
[05:29:10] <bayaz> Title: imgu_freetype.cpp 
[05:29:27] <smallville7123> or rather builds its atlas
[05:30:40] <smallville7123> eg generating the font gliphs for rendering
[05:31:19] <smallville7123> is this bad to do when it is done inside of a window resize callback?
[05:31:39] <webNET4> yeah
[05:31:50] <webNET4> unless you don't resize much at all
[05:31:56] <smallville7123> (eg allocating then deallocating the freetype library
[05:31:58] <webNET4> but still probably no benefit
[05:33:17] <webNET4> what kind of question is that anyway
[05:33:44] *** Joins: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83)
[05:33:46] <arahael> You want the overhead during resize as absolutely small as possible because otherwise the border and display will be weird in some platforms.
[05:33:57] <arahael> On windows, in particular, it's often out of sync.
[05:34:46] *** Joins: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0)
[05:35:04] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-69a2-efd2-4950-bbeb.inf6.spectrum.com)
[05:35:32] *** Quits: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0) (Client Quit)
[05:35:48] *** Joins: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0)
[05:37:57] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-587b-b151-54d8-e1c1.inf6.spectrum.com) (Ping timeout: 245 seconds)
[05:39:55] <smallville7123> yea
[05:40:26] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:d466:3a01:8:f55d)
[05:40:27] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709) (Ping timeout: 240 seconds)
[05:40:27] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:dd45:eb75:b968:bdc7) (Ping timeout: 240 seconds)
[05:40:32] <smallville7123> cus i find that the larger i resize my window, the more freetype takes to resize my font
[05:40:49] <smallville7123> and i am only loading a single font with a simple text "TextView"
[05:40:58] <smallville7123> from a memory TFF
[05:41:02] <smallville7123> TTF *
[05:41:17] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709)
[05:41:33] *** Quits: kmh (~kmh@p200300df5f0533005dc82434a697d12d.dip0.t-ipconnect.de) (Quit: Leaving)
[05:41:33] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709) (Remote host closed the connection)
[05:41:37] <^-^hi> the fonts aren't usually resized with windows
[05:41:43] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:d466:3a01:8:f55d) (Remote host closed the connection)
[05:41:52] <^-^hi> look at an app around you
[05:42:05] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d466:3a01:8:f55d)
[05:42:22] *** Quits: Cashlin (~hp@user/cashlin) (Write error: Connection reset by peer)
[05:42:35] *** Quits: Izem (~Izem@8.6.144.189) (Ping timeout: 250 seconds)
[05:42:39] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709)
[05:43:01] *** Joins: Cashlin (~hp@user/cashlin)
[05:43:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:43:37] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:43:58] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[05:45:18] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709) (Client Quit)
[05:45:33] <smallville7123> ^-^hi: i know
[05:45:58] <smallville7123> but i want my text to auto-resize to the height of the window
[05:46:16] <konivook> Hi I am new on IRC do you have some interesting irc channels to recommend ?
[05:46:34] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:5df4:b5b:92c4:e709)
[05:47:04] <^-^hi> smallville7123, isn't writing it on a bitmap and resizing it instead more efficient? what are trying to do?
[05:47:21] <^-^hi> konivook: #news is such a nice channel
[05:47:21] <smallville7123> i dont want to scale it
[05:47:48] <smallville7123> since some fonts dont resize well, specially imgui's default font
[05:48:14] <smallville7123> scale*
[05:48:19] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[05:49:28] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[05:54:20] *** Joins: pavonia (~user@user/siracusa)
[05:54:27] *** Quits: xenon- (~bc8167eb@217.29.117.252) (Quit: http://www.okay.uz/ (Ping timeout))
[05:55:03] *** Joins: Izem (~Izem@8.6.144.189)
[05:56:41] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[06:03:52] *** Joins: euouae (~euouae@user/euouae)
[06:04:03] <euouae> Hello, what is the point of giving GitHub.com your SSH key?
[06:04:11] <euouae> What can you do by using ssh on GitHub?
[06:04:52] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a) (Ping timeout: 252 seconds)
[06:04:55] <smallville7123> makes your account more secure
[06:05:06] <euouae> How does it accomplish that? I already have enabled 2FA
[06:05:35] <smallville7123> idk
[06:06:09] <smallville7123> 2FA is only used when looging into your account, and not when using github api operations
[06:06:12] <smallville7123> logging*
[06:06:39] <smallville7123> such as git clone or git push
[06:06:53] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:2c79:b44:78b6:918)
[06:06:57] <euouae> I see. I don't understand the relationship between gpg-agent and ssh keys. Is that something simple?
[06:07:01] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com)
[06:07:10] <smallville7123> eg someone could brute force your password using the git api
[06:07:32] <smallville7123> ssh is not required tho, an auth token works as well
[06:07:48] <smallville7123> (api token)
[06:08:07] <euouae> smallville7123: ssh is using public key cryptography right?
[06:08:22] <smallville7123> yes
[06:08:32] <smallville7123> BUT dont initialize your repo with ssh
[06:08:42] <smallville7123> it prevents people from cloning it
[06:08:44] <euouae> I know a bit about it. I already went through some pain to create my gnupg keys and load them into my hardware key
[06:09:08] <euouae> but whenever I've used ssh, I don't remember having to do this.
[06:09:12] <smallville7123> as when you clone a repo OR submodule that uses a ssh url, the ssh key is required
[06:09:14] <euouae> I.e. generating a public key
[06:09:35] <smallville7123> euouae: it probs does it for you
[06:09:43] <smallville7123> idk
[06:09:59] <smallville7123> check the website
[06:11:24] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[06:11:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[06:13:29] <smallville7123> how do i resize a font without scaling it (eg effectively zooming in which makes it appear blurred)
[06:14:03] <webNET4> resize without scaling???
[06:14:27] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[06:14:42] <smallville7123> how do i resize a font without scaling it (eg effectively zooming in which makes it appear blurred due to loss of quality, eg same as upscaling a low res image to a high res image)
[06:14:52] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[06:14:57] <webNET4> scale only by integers
[06:15:05] <webNET4> that might trick it into just working
[06:15:11] <smallville7123> -_-
[06:15:19] <euouae> smallville7123: If you just want to zoom in to some part of your display you can use the disability functions (if that's what they are called; apologies if the nomenclature is wrong)
[06:15:20] <webNET4> fonts are designed for specific pixel representation
[06:15:36] <smallville7123> webNET4: yea
[06:15:38] <webNET4> there is no way to scale correctly unless it's integer based
[06:15:44] <smallville7123> i know
[06:16:50] <smallville7123> eg if a font is loaded at 13 and i want to scale it to 100, then it would look no wear as sharp as if the font was originally loaded at 100, right?
[06:16:54] <webNET4>  unless its SVG font
[06:17:06] <webNET4> s/S//
[06:17:34] <droid3> ok i see why you use mpq instead of mpf because mpq handles rational numbers like mpz numerators and denominators
[06:18:26] <smallville7123> can i just load the font at an extremely large size and then scale down?
[06:18:40] <droid3> But i am going to the lowest level trying to figure out mp_limb _t
[06:19:08] <droid3> i am wondering i can n->mp_d to get all the mp_limb_t of a number aka the internal array
[06:19:10] <webNET4> maybe though it could end up blurry and weird looking still
[06:19:45] *** Quits: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0) (Quit: konivook)
[06:19:48] <droid3> but what i am wondering about is what base are these in as i printed out the array and i cannt figure out how to do it out by hand to convert it to decimal
[06:20:09] *** Joins: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0)
[06:20:12] <droid3> basically i dont know what base the internals are using for mp_limb_t arrays ???
[06:21:18] <droid3> i wrote out the binary for each array element and since it in little endian i think concatenation of the elements from biggest array element to smallest would give me back the original number
[06:21:40] <droid3> but i am not getting anything intelligent out of it. So i am make a mistake somewhere ???
[06:22:24] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[06:22:36] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[06:22:38] <droid3> what 2^n factor do i multiply the mp_limb_t array elements with?
[06:23:40] <droid3> that the issue with java i cannt even get at the internals. Only with getByteArray() but that inefficient at least c/c++ use pointers so you dont need copying O(n) to an array in the case of java.
[06:25:00] *** Joins: stoneware (uid515661@user/stoneware)
[06:25:01] <cis> if you think remembering tar args is hard, try composing an ffmpeg filtergraph from memory
[06:25:05] <droid3> Anyway i kind of need to know how this mp_limb_t is structured interms of what base it is using? Sure gmp supports similar multiplication , power ,...etc algorithms for mp_limb as its the underlying structure that mpz , mpq , mpf is based on.
[06:25:21] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:25:51] <droid3> so the issue becomes where is what bits of the number given the mp_limbs_t array to traverse anybody familar on tonight ?
[06:25:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:25:57] *** brabrax_ is now known as brabrax
[06:36:37] <droid3> ya mpz, mpq , and mpf are built ontop of mpn 
[06:36:46] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[06:36:56] <droid3> so mpn aka the mp_limb_t is the low level gmp stuff
[06:37:03] <droid3> /arithmetic
[06:37:25] <droid3> but what i am wondering on is what base the mp_limb_t array is ????
[06:37:31] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:37:56] <droid3> i can get the size of the mp_limb_t array as well as how much is allocated for it ...etc.
[06:38:15] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[06:38:40] <droid3> But what i am having hardtime with is mp_limb_t say element [0] , [1] , [2] ,...etc  
[06:39:07] <droid3> what base is these elements i know its little endian for the array so the number would be something like
[06:39:29] <cis> droid3: out of curiosity, what are you doing with all this anyway?
[06:39:55] <droid3> b^n limb[n] + b^n-1 limb[n-1] + ....+ limb[0]
[06:40:43] <droid3> cis i need to do some really low level multiplication , additions ,...etc with parts of a mpz number 
[06:40:46] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:41:08] <droid3> and its not going to cut it working on the high level mpz levels
[06:43:42] *** Quits: codemin (~codemin@69.167.14.151) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[06:43:42] <droid3> so i wanted to understand how these mp_limb arrays are storing the stuff for the mpz 
[06:43:42] <droid3> what base are they using because then i can do the computation at the most basic levels of the gmp library
[06:43:42] <droid3> to answer your question cis
[06:43:42] *** Joins: zaher_ (~zaher@37.48.154.196)
[06:43:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:43:42] <cis> droid3: that's interesting, why do you need that?
[06:43:42] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Excess Flood)
[06:43:42] <droid3> because this computation i am doing with a billion digit numbers needs speeding up.
[06:43:42] <droid3> And the only way to do it is thru this low level means
[06:43:42] *** Joins: remby (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[06:44:11] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[06:45:44] *** Quits: zaher (~zaher@37.48.154.196) (Ping timeout: 250 seconds)
[06:46:40] *** Quits: Izem (~Izem@8.6.144.189) (Ping timeout: 252 seconds)
[06:46:46] *** remby is now known as Izem
[06:46:52] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:47:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:47:37] *** Quits: EmOwl- (~EmOwl-@202.150.113.111) (Ping timeout: 248 seconds)
[06:52:49] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:54:15] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:56:33] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 256 seconds)
[06:57:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:57:43] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[06:58:01] <Sqaure> ATDD - adopt your assertions to what your code produce!
[06:59:55] *** Quits: zaher_ (~zaher@37.48.154.196) (Ping timeout: 244 seconds)
[07:00:25] <droid3> does anybody know what the mp_limb_t array is in? Like what base are these array elements in ???
[07:00:26] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:00:59] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:01:42] <droid3> like say i have a huge billion digit number and the mp_limb_t array for it. And say i wanted to get bits n thru n+k 
[07:02:16] <droid3> i need to know the baseX its in before i can xor the array elements to get the bit group 
[07:03:10] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:03:15] <droid3> I am stuck on this mp_limb array stuff and what baseX there in. I know there little endian that all i know.
[07:05:22] *** Quits: kek_ (~kek_@178.197.228.232) (Remote host closed the connection)
[07:05:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:06:51] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:12:17] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 250 seconds)
[07:13:31] <droid3> I think mp_limb_t is using base18446744073709551615  
[07:14:10] <droid3> for the array element aka each array element is 18,446,744,073,709,551,615  the max size of a unsigned long long
[07:14:55] <webNET4> thats a big number alright
[07:15:10] <droid3> because the first number i after that aka 18,446,744,073,709,551,616 i get a size 2 and a limb[0] = 0 and limb[1] = 1
[07:16:24] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:16:28] <droid3> another words webNET4 the first number i get that makes a size 2 mp_limb array is 18,446,744,073,709,551,616 aka unsigned long long max value + 1
[07:16:36] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:17:27] <droid3> And because the mp_limb[1] = 1 and mp_limb[0] = 0 in this case. I can only conclude its base18,446,744,073,709,551,615 
[07:18:39] <droid3> so its seems its not base 2^32 but base 2^64 that the mpz internally are using!!!
[07:18:54] <droid3> Anybody out there know for sure and want to validate my assertion?
[07:19:46] *** Quits: konivook (~Thunderbi@2a06:4944:18fd:d900::d5a0) (Quit: konivook)
[07:19:48] *** Quits: Drek45 (~jrept371@129.59.122.18) (Remote host closed the connection)
[07:20:24] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:20:35] <droid3> this is cool if it is because if i want to do arithmetic on a subsection of this huge mpz number or flip a few groups of bits i can do it by getting mp_limb[n] and selecting the approprate 64 bits of those specific elements
[07:20:36] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:21:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[07:22:25] *** Quits: Lynn (~Lyn@user/law) (Ping timeout: 252 seconds)
[07:22:35] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:25:06] <droid3> ya 18446744073709551617 gives me a size 2 with array [0] = 0 , [1] = 2 so starting to look like it is base2^64 arrays
[07:25:06] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[07:25:06] *** Joins: remby (~Izem@2a09:bac0:14::806:90bd)
[07:27:46] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Ping timeout: 250 seconds)
[07:27:52] *** remby is now known as Izem
[07:31:42] <droid3> ya for a number like 18446744073709551619 which is over the max size of a unsigned long long 18,446,744,073,709,551,615 by 4 i have limb[0] = 3 and limb[1] = 1  
[07:32:10] <droid3> so ya just being sure about the base gmp libraries are using
[07:32:36] <droid3> Make since they try to utilize the largest array data type size for each element they could.
[07:33:24] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:33:27] <droid3> So base to the max size a unsigned long long could be would theoretically be the biggest size number one could store in a long array 18,446,744,073,709,551,615 
[07:34:02] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[07:34:18] <droid3> so it is optimal interms of the biggest base one can do on a computer with arrays under the restrictions of arrays being no bigger then 64 bit element sizes.
[07:35:17] <droid3> cool its probably what java , python and all the rest of the major languages do to.
[07:36:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:41:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:43:12] *** Joins: _daoistmonk (~daoistmon@113.90.179.18)
[07:43:39] <droid3> So not if i want the 120 bit i can just go to  mp_limb[1] & 0x80000000000000
[07:44:49] <droid3> so cool so now that i am pretty sure i know the base these arbitrary precision libraries are using 
[07:45:23] *** Quits: daoistmonk (~daoistmon@113.116.89.164) (Ping timeout: 244 seconds)
[07:45:39] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 250 seconds)
[07:48:46] <edgar-rft> let's access array elements via floating-point numbers :-)
[07:50:02] <beaky> nice i like arrays
[07:50:27] <beaky> i use arrays in rust if i want a view into an array that i do not necessarily own but which i will use in a silce like form
[07:50:30] <droid3> why there no bigger then unsigned long long interms of number of bits 
[07:51:31] <droid3> why would you want to do double for indices. I say keep it integer based numbers first off and unsigned long long would be 2^64 
[07:51:43] *** Quits: Doffi_ (~doffi@91.132.197.188) (Ping timeout: 250 seconds)
[07:51:50] <webNET4> because we barely have machines that can do 128 
[07:52:09] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:2c79:b44:78b6:918) (Ping timeout: 250 seconds)
[07:52:16] <droid3> right so how is increasing the element sizes for arrays even possible until then.
[07:52:53] <droid3> like array elements can only be as big as 8 byte size for built in data types
[07:53:05] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:b53e:f2f2:3cdd:f236)
[07:53:33] <droid3> and unsigned long long = double and its integer restricted so it seems better to stay with what we have now.
[07:54:04] <droid3> Until we get larger register sizes and larger internal data type bigger then unsigned long long  , doubles , ...etc
[07:54:19] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[07:54:24] <webNET4> "long" and "int" are language defined
[07:55:35] <droid3> sure but i was kind of just focusing on c/c++ but ya its language dependent but for most languages we have a 4 byte and an 8 byte internal data structure to use for array elements
[07:56:00] <webNET4> they could use 128 for long long
[07:56:15] <webNET4> but nobody has a machine to randomly access that much memory
[07:56:19] <webNET4> so why
[07:56:38] <droid3> in java everything is signed but long is still 8byte it just internally would store it in a weird negative format for the elements of the array until you converted them to unsigned long.
[07:58:23] <droid3> ya thats my point webNET4 we dont have it for hardware yet so we obviously cannt have internal data type corropsonding to 128 or bigger registers
[07:59:24] <droid3> until we get these things then we will probably have new internal data type of languages for 128 , 256 ,...etc array element sizes. But until then are best option now is 2^64 bit array elements aka 8 byte element sizes.
[07:59:31] <webNET4> sure you can, but it just ends up running really poorly
[07:59:55] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:00:03] <webNET4> andyou definitely don't have enough ram to use itas an array index
[08:00:08] <webNET4> sanely
[08:00:43] <droid3> how can you create an array int[] long[] ...etc with elements that are bigger then 8 byte size for element? I doubt it the languages dont really allow it for most language i see.
[08:00:48] <droid3> Or have worked with 
[08:01:13] <droid3> with the exception of c/c++ have some odd things thrown in that dont really work well or default to long or int anyway.
[08:01:16] <webNET4> use a struct
[08:01:47] <droid3> O i am talking about built in data types not array of object or structure or class.
[08:01:55] *** Quits: anton (anton@tloks.com) (Quit: anton)
[08:02:13] <webNET4> that only matters if your language is too strict
[08:02:22] <droid3> but ya sure you can get around it like that in theory but its not built in datatypes. 
[08:03:22] *** Joins: BitsnBytes (~kukulkan@ip59-131-15-186.ct.co.cr)
[08:04:32] *** Quits: Izem (~Izem@2a09:bac0:14::806:90bd) (Quit: Going offline, see ya! (www.adiirc.com))
[08:05:17] *** BitsnBytes is now known as help
[08:05:23] <droid3> currently currently the biggest builtin array size we can create in languages is unsigned long long myarray[MAX_INT_SIZE] which comes out to be.
[08:05:31] *** help is now known as BitsNBytes
[08:05:36] <droid3> 18446744073709551615  √ó  4294967295 = 
[08:05:53] <droid3> 7.92281625√ó10¬≤‚Å∏
[08:06:06] <droid3> far more then the memory any computer has currently :)
[08:06:39] <webNET4> you could make a streaming array that uses a disk for swapping
[08:07:33] <droid3> alot of languages though restrict this because of there signed int and sign long nature but in any case that the theoretical limit of the largest array size we can make with internal data types
[08:08:27] <droid3> sure in theory if we allow for object,struct,class type array that are index by integer then it be the size of one of these structures x MAX_SIZE_OF_INT_TYPE.
[08:08:45] *** Quits: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:08:56] *** Joins: kmh (~kmh@p200300df5f053300905d845fbdcccb7b.dip0.t-ipconnect.de)
[08:09:36] <droid3> webNET4 "you could make a streaming array that uses a disk for swapping"
[08:10:20] <droid3> sure but then your really paging piece of the streaming array in and out to disk you could never view it completely if you exceed the memory limits anyway.
[08:10:54] <droid3> But it would give a kind of unlimited array affect yet would be very very much slower then using regular arrays to there max potential.
[08:11:23] <droid3> As it mostly becomes a speed for space trade off which sucks if its for fast computational things.
[08:11:52] <droid3> But ya just to have unlimited array data type that would never give out of memory errors i could see that being cool to code up sometime.
[08:12:24] <droid3> But for what i am into speed is more important alot of time then space. Though sometimes not so much.
[08:12:38] <PlanckWalk> Well, it may give out of disk space and therefore out of memory errors :)
[08:12:50] <PlanckWalk> Just like any system with swap space can do
[08:13:11] <PlanckWalk> (When they don't jusy outright kill processes)
[08:13:20] <droid3> But i just speculate with such an unlimited array type it take a life time just to read and write ridiculous amounts of data with it or manipulate tons of data with it. At this point i just use the regular harddrive
[08:13:58] <droid3> Ya it might give out of disk space which is secondary storage memory. But again you could always increase the storage much more easily then the memory you increase in your computer.
[08:14:23] <droid3> Less of a limit with HDD then with memory DDR sizes for your computer to work with.
[08:14:25] <PlanckWalk> What I mean is, every modern OS gives you this ability built in
[08:14:40] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[08:15:01] <droid3> At any extent maybe not so bad seeing as solid state drives are now getting ridiculously fast.
[08:15:04] <PlanckWalk> Plug in drive, set it to be used for swap, run process with enormous memory usage
[08:16:03] <droid3> ya true getting off on a tangent with all this stuff.
[08:16:24] <webNET4> maybe you can contract samsung to build you some nice PCIE bugnum coprocessor
[08:16:56] <droid3> Just glad i figured out the base these gmp , bigmath libraries are using is max unsigned long long aka 18,446,744,073,709,551,615 
[08:17:46] <droid3> its good to know that there maximizing the base they can use on a computer and this is the max numbers you can achieve on a computer as well because you cannt represent or store a bigger number then
[08:17:58] <droid3> the biggest base you can use.
[08:19:24] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[08:19:35] <droid3> So what happens when we check all the mersenne primes under the max we can store on are computers where already at 2^82,589,933 ‚àí 1 
[08:22:17] *** Quits: BitsNBytes (~kukulkan@ip59-131-15-186.ct.co.cr) (Quit: WeeChat 2.8)
[08:22:45] <PlanckWalk> Then we make bigger computers, obviously!
[08:23:15] <PlanckWalk> But practically speaking, the runtime to check them is a far bigger constraint that the storage space
[08:23:56] <PlanckWalk> 2^82,589,933 ‚àí 1  fits in about 0.01 GB
[08:24:52] <droid3> An(18446744073709551616)^4294967295 + An-1(18446744073709551615)^4294967294 +....+ A1(18446744073709551616) + A0  where the A's values can be in [0,18446744073709551615]
[08:25:33] <droid3> that the theoretical limit on the max size number are arbitrary precision libraries could ever hope to represent as of current!!!
[08:26:07] <PlanckWalk> We can deal with much larger numbers than that
[08:26:42] <PlanckWalk> Some specific libraries might not
[08:27:38] <PlanckWalk> There are libraries that handle more than 2^38 bits.
[08:27:38] <droid3> how all these bignum libraries at best using arrays can store base18446744073709551615 internally 
[08:28:02] <PlanckWalk> Arrays aren't limited to 2^32 entries
[08:28:37] <droid3> and since array are index by integers the largest array can have 4294967295 elements
[08:28:38] <PlanckWalk> And even in some languages where they might be, you can get around that
[08:29:12] <PlanckWalk> Dunno about you, but my C compiler has a 64-bit size_t 
[08:29:16] <PlanckWalk> Not 32-bit
[08:29:18] <droid3> so do the math 4294967295 element array each element is part of base18446744073709551615 
[08:30:34] <droid3> PlanckWalk you can index array with 64 bit indice not just 32bit indice?
[08:31:08] <droid3> in that case then you have much more element array possible 18446744073709551615 elements in array with base18446744073709551615
[08:31:16] <droid3> in theory 
[08:31:16] <beaky> i love rust
[08:31:35] <beaky> why does rust do everything right how did the rust designers manage to figure out the most optimal design 
[08:32:12] <droid3> but regardless the space isnt the issue seeing as computing with this many digits in that base18446744073709551615 would take ridiculous amount of time.
[08:33:16] <PlanckWalk> It certainly would
[08:33:33] <droid3> And i guess even mersenne prime being at 2^82,589,933 ‚àí 1 is a far cry from 18446744073709551615^4294967295 +lower base18446744073709551615
[08:34:17] <droid3> or in your case even more ridiculous 18446744073709551615^18446744073709551615 + lower order base18446744073709551615 terms 
[08:35:26] <audiocat> is there a way to (git) merge only certain files of a branch to another branch?
[08:35:32] <droid3> But again for one machine to do this sure. But we kind of have mersenne primes setup to be computed collaboratively / distributively which is a wild factor in how much addtional speed up this provides
[08:36:31] <droid3> And what the practical limits are for computing how many more mersenne primes we have until we hit the wall.
[08:37:04] <droid3> though we always seem with this distributive computing /collaboration to pull off another big prime  ever so often.
[08:37:26] <droid3> Anyway that being said thanks for discussion later guys.
[08:38:00] *** Joins: Atque (~Atque@user/atque)
[08:39:04] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[08:39:19] *** Joins: humky (~humky@user/humky)
[08:43:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[08:44:15] *** Quits: pizdets (~pizdets@183.182.114.107) (Ping timeout: 245 seconds)
[08:44:25] *** Joins: pizdets_ (~pizdets@183.182.114.153)
[08:44:44] <beaky> audiocat: yes check out the --no-commit option in git merge you can use that together with --no-ff to bring all the changes from the other branch, then you can unstage the changes using git reset and only git add the files you want to be included in the merge
[08:45:43] <audiocat> beaky, could you give me a more precise explanation (actual commands)? would love a pastebin
[08:45:47] <audiocat> or bpaste od dpaste
[08:45:49] <audiocat> or*
[08:48:26] <beaky> yes gime like 10 mins ill try to draw a full example with like files and everything
[08:49:36] <audiocat> beaky, thank you!
[08:50:41] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[08:53:08] <edgar-rft> I think a random generator is only truely random if it produces numbers that nobody knew before.
[08:54:31] <beaky> if you dont need it to be a proper git merge but just need to bring the files from another branch over you can also do it with git checkout too: git checkout <branch you want to put the files in>; then git checkout <branch with the files you want> <file1> <file2> ... 
[09:05:59] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 244 seconds)
[09:08:06] *** Joins: node1 (~node1@user/node1)
[09:08:39] *** Joins: mishugana (~antaoisea@user/mishugana)
[09:09:37] <beaky> since now that i think about it i find with the uncommitted merge approach it adds a lot of changes that you might have to clean up whereas 'git checkout <other-branch> <files...> lets you just pick only the new files you need
[09:13:07] *** Quits: mishugana (~antaoisea@user/mishugana) (Client Quit)
[09:14:17] *** Joins: mishugana (~antaoisea@103.5.134.18)
[09:14:17] *** Quits: mishugana (~antaoisea@103.5.134.18) (Changing host)
[09:14:17] *** Joins: mishugana (~antaoisea@user/mishugana)
[09:14:57] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[09:17:07] *** Joins: mei (~mei@user/mei)
[09:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:20:09] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:22:49] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[09:26:53] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:29:25] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Ping timeout: 252 seconds)
[09:33:59] *** Quits: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[09:39:49] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[09:46:04] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[09:47:40] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 240 seconds)
[09:50:21] *** Joins: Neverloads7 (NeverLoad@freakshells.net)
[09:50:34] *** Joins: tjr3 (nitemare@succubus.dkr.prd.ca.robotham.dev)
[09:50:36] *** Joins: Ruxnor4 (kevin@user/kddlb)
[09:51:19] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[09:51:32] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[09:51:48] *** Quits: Neverloads (NeverLoad@freakshells.net) (Read error: Connection reset by peer)
[09:51:48] *** Neverloads7 is now known as Neverloads
[09:52:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:52:31] *** Quits: Ruxnor (kevin@user/kddlb) (Ping timeout: 252 seconds)
[09:52:31] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 252 seconds)
[09:52:31] *** Quits: tjr (nitemare@succubus.dkr.prd.ca.robotham.dev) (Ping timeout: 252 seconds)
[09:52:31] *** Ruxnor4 is now known as Ruxnor
[09:52:31] *** tjr3 is now known as tjr
[09:53:08] *** Joins: segnior (segnior@user/segnior)
[09:55:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[09:56:05] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[09:56:21] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[09:56:54] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:57:38] *** tccki_ is now known as tccki
[09:57:51] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[09:58:48] *** Joins: blahblah441_ (~blahblah4@static-198-54-129-46.cust.tzulo.com)
[09:59:20] *** Joins: Izem (~Izem@8.6.144.189)
[09:59:28] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Read error: Connection reset by peer)
[10:00:30] *** Quits: bocaneri_ (~bismilah@li889-61.members.linode.com) (Changing host)
[10:00:30] *** Joins: bocaneri_ (~bismilah@about/linux/staff/sauvin)
[10:00:42] *** Joins: dan01 (~dan01@109.98.161.136)
[10:00:50] *** bocaneri_ is now known as bocaneri
[10:00:57] <audiocat> beaky, hi
[10:01:03] <audiocat> beaky, did you ever get a chance to make that demo?
[10:06:33] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[10:07:40] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Ping timeout: 250 seconds)
[10:07:50] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[10:12:07] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:12:44] *** Joins: Doffi (~doffi@91.132.197.188)
[10:12:45] *** Quits: mishugana (~antaoisea@user/mishugana) (Quit: leaving)
[10:16:04] <beaky> audiocat: nope i tried it out and it seems what i was going for wasn't actually a merge
[10:18:55] *** Joins: gggp (~textual@111.63.14.115)
[10:19:02] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[10:20:53] *** Joins: Mija (~Mija@user/mija)
[10:22:22] *** Joins: lunarkitty (uid501895@user/pyra)
[10:24:33] *** Joins: kodah (~kodah@user/kodah)
[10:24:41] *** Quits: dasdasd (~irado@189.40.100.156) (Ping timeout: 250 seconds)
[10:24:50] <beaky> oh nevermind it actually does do the merge
[10:25:22] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:25:22] *** Joins: irado (~irado@177.12.221.61)
[10:25:22] *** Quits: _daoistmonk (~daoistmon@113.90.179.18) (Remote host closed the connection)
[10:25:43] *** Joins: _daoistmonk (~daoistmon@113.90.179.18)
[10:25:52] <beaky> so it works but it can be a challenge cleaning up the files/changes you do not want to be merged
[10:27:44] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[10:29:10] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[10:30:45] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[10:30:54] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Remote host closed the connection)
[10:32:20] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[10:33:30] *** Joins: remby (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca)
[10:35:05] *** Joins: password (~password@user/password2)
[10:36:34] *** Quits: Izem (~Izem@8.6.144.189) (Ping timeout: 252 seconds)
[10:36:37] *** remby is now known as Izem
[10:39:23] *** Joins: mishugana (~mishugana@user/mishugana)
[10:48:22] <smallville7123> is it normal for this to segfault, as i am attempting to load a font at size 1000              dst[x] = IM_COL32(255, 255, 255, src[x]);      CVDisplayLink (5): EXC_BAD_ACCESS (code=1, address=0x11c63f000)
[10:48:25] <beaky> so something like this assuming everything goes right in the merge (if not usually git will prompt to fix the conflicts in which case you just want to reset everything anyway to include only the new added file) https://bpa.st/3NNQ
[10:48:28] <bayaz> Title: View paste 3NNQ 
[10:51:07] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[10:55:50] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:00:39] *** Joins: palasso (~palasso@user/palasso)
[11:00:53] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[11:01:02] <webNET4> size 1000 eh
[11:02:10] <webNET4> just throw more ram at it
[11:04:11] *** Joins: mrig (~mrig@user/mrig)
[11:04:33] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:04:59] <webNET4> or vram
[11:07:15] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[11:07:42] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[11:11:44] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Client Quit)
[11:13:15] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:13:19] <smallville7123> if imgui is allocating textures in chunks of 256k, what should happen when a single glyph exceeds the chunk size?
[11:13:31] <smallville7123> bitmap_size_in_bytes	const int	1328096
[11:13:36] <smallville7123> BITMAP_BUFFERS_CHUNK_SIZE	const int	262144
[11:13:58] <smallville7123> src_glyph.Info.Height	int	616
[11:13:58] <smallville7123> src_glyph.Info.Width	int	539
[11:14:50] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 250 seconds)
[11:15:13] <smallville7123> https://gist.github.com/mgood7123/a877417144f20d76e54f23d4962b5abb
[11:15:14] <bayaz> Title: imgu_freetype.cpp 
[11:17:10] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[11:17:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[11:19:40] *** Quits: irado (~irado@177.12.221.61) (Ping timeout: 240 seconds)
[11:19:49] *** Joins: archie (~archie@host-79-27-219-184.retail.telecomitalia.it)
[11:19:57] <archie> hello
[11:20:01] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:21:02] <Jck_true> 360 Degree feedback... Where I have to evaluate my coworkers... :| 
[11:22:06] <archie> I need to implement a function in c++ to generate pseudo random strings, given an integer input. With pseudo I mean that given the same input integer I'll get back the same string. Length must vary between a fixed range. Any help? Useful links? Maybe someone already solved something similar on stack overflow?
[11:23:29] <Stefan26> good luck smallville7123
[11:23:36] *** Quits: CinderellaMan (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[11:24:09] <deniska> archie: doesn't C++ stdlib has a few PRNGs which you can seed?
[11:24:28] *** Joins: CinderellaMu (~GodMode@user/h4x0r)
[11:24:31] <deniska> create an instance of an PRNG, use it to generate characters
[11:24:55] *** Quits: wwweary (~wwweary@2600:1700:138a:8d0:390e:2aad:e876:178b) (Ping timeout: 250 seconds)
[11:25:23] *** CinderellaMu is now known as CinderellaMan
[11:25:46] <archie> deniska yes it has, but how do I replicate the same sequence given an integer? an example?
[11:27:47] <Jck_true> archie: Many random number generators allows you to provide a seed
[11:28:11] *** Joins: reddit89 (~user@user/reddit89)
[11:28:41] <Jck_true> archie: https://stackoverflow.com/questions/9492581/c-random-number-generation-pure-c-code-no-libraries-or-functions
[11:28:42] <bayaz> Title: C Random Number Generation (pure C code, no libraries or functions) 
[11:29:22] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Remote host closed the connection)
[11:30:53] <archie> Jck_true uhm
[11:30:58] *** Quits: reddit891 (~user@user/reddit89) (Ping timeout: 252 seconds)
[11:31:01] <archie> I guess I need something like that https://en.wikipedia.org/wiki/Pseudorandom_number_generator
[11:31:03] <bayaz> Title: Pseudorandom number generator - Wikipedia 
[11:31:30] <archie> I need a sequence of random number, generated by the given int, which I can use to pick random characters from an array of chars[]
[11:31:34] <archie> wdyt?
[11:32:18] <Jck_true> archie: Or just use rand() and srand() for the seed?
[11:32:57] <Jck_true> archie: (But that requires that nothing else uses the rand() function while you generate your sequence
[11:34:02] *** Joins: independent56 (~independe@95.144.68.39)
[11:34:16] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[11:34:19] *** Quits: dan01 (~dan01@109.98.161.136) (Ping timeout: 252 seconds)
[11:34:31] <piou> archie: Yes, that's what you need. When talking about PseudoRandom Number Generators (more commonly called PRNG) the number you use to initialize it that defines the sequence of random numbers is called a seed. In C (I don't know what your language is) you can use the function rand() that can be seeded using srand(), meaning you first call srand() to set your defining value then successive calls
[11:34:37] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[11:34:37] <piou> to rand() will produce the sequence you're looking for.
[11:34:49] <archie> Jck_true It has to be replicable. Given the same integer input, I need to get the same string
[11:35:32] <piou> archie: to be sure, is that random string you're looking to produce meant to be a secret? If it is then being replicable will certainly be an issue.
[11:36:02] <Jck_true> archie: srand(my_seed); rand(); rand(); rand() rand(); srand(time(0)); //Restore randomness
[11:36:15] <archie> piou no
[11:36:19] <piou> nice
[11:37:10] <archie> damned c++, I'll never get used to it -.-
[11:37:45] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:38:24] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[11:38:57] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:39:06] <archie> that function is used in different threads at the same time, is that a problem?
[11:39:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net)
[11:39:17] <archie> s/is/will be
[11:39:49] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[11:41:23] <Jck_true> archie: Then yeah the srand/rand approach might be an issue
[11:41:43] <Jck_true> (I do not know if rand is threadsafe or what)
[11:42:18] <piou> Yep, that is a problem. What's the random string used for? There are plenty of PRNGs that are easy to implement in a few lines but they don't necessarily have great properties such as perfect statistical uniformity.
[11:42:19] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:42:55] <piou> If it's just for something like generating a random player name then surely you don't need much guarantees.
[11:43:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:44:45] <mrig> The man page says that it is MT-Safe
[11:44:46] <archie> piou simulate some traffic, something similar to a load test. I need replication to check correctness of the outputs
[11:45:01] <mrig> I forgot how good the man pages are for coding C
[11:45:17] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:20] <mrig> I wish that GO did this.
[11:46:00] <piou> Oh, right, you can probably use rand_r in a multi-threaded environment
[11:46:01] <Jck_true> So if another thread calls srand()?
[11:46:41] <piou> Jck_true: rand_r keeps a pointer to a seed in order to keep state between calls without messing with a global seed
[11:46:57] <mrig> no idea of the scope of that, but man srand in Linux says that it is MT safe and POSIX compliant.
[11:47:12] <piou> but I think the global srand seed is shared between threads
[11:47:50] <mrig> so long as the pointer is atomically incremented, and that would be pretty simple.
[11:48:21] <mrig> so that the same number is not given out predictably.
[11:48:46] <archie> https://bpa.st/VZ5A
[11:48:48] <bayaz> Title: View paste VZ5A 
[11:49:00] <archie> how do I use a random length here?
[11:49:19] *** Quits: _daoistmonk (~daoistmon@113.90.179.18) (Remote host closed the connection)
[11:49:44] *** Joins: _daoistmonk (~daoistmon@113.90.179.18)
[11:51:53] <archie> the random length, has to be replicated as well, given the same input integer, ofc
[11:52:20] <archie> simply using rand() should work, right?
[11:52:24] <piou> you know how to generate a random number, generate one for the length
[11:52:49] <piou> But srand()/rand() has issues with multithreading if you want each thread to be replicable
[11:52:52] <piou> you know how to generate a random number, generate one for the length
[11:52:58] <piou> archie: In any case, if you want something reproductible you need to keep a seed per thread. Then whether you use rand_r (probably best) or implement your own little LCG (5 lines at most really) it will be quite equivalent
[11:54:31] <archie> piou not sure about how to do that, will try and eventually come back later, thanks for the advice
[11:55:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:56:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:56:16] <Jck_true> archie: Quick and dirty - https://ideone.com/9tZclu
[11:56:19] <bayaz> Title: Ideone.com 
[11:56:56] <smallvil_> welp, loading a font at a size of 1024 consumes ~600MB of memory
[11:58:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[11:58:32] <Jck_true> archie: You can adjust what character set you want in your output. And what length the output should be. 
[11:59:01] <archie> :O
[11:59:07] <piou> Jck_true: consider multithreading
[11:59:25] <Jck_true> piou: Yeah. It will be an issue
[11:59:26] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: Lost terminal)
[11:59:39] <archie> what's lines between 12 and 14?
[11:59:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net) (Quit: Client closed)
[12:00:03] <Jck_true> archie: Just convert the random number into something printable from the ascii table 
[12:00:51] <Jck_true> I want something between ascii 32 decimal and 126 decimal. So I use modulus and then add the offset
[12:01:37] <archie> ot question: why seed 0 and 1 gives the same outputs?
[12:02:39] <Jck_true> archie: It gives different for me
[12:03:13] <vin> I a trying to figure out what motherboard is being used here http://www.nextgenio.eu/sites/default/files/documents/publications/NEXTGenIO_whitepaper2_OCT18_LO.pdf but haven't had luck finding it. Figure 3 looks interesting but hasn't helped
[12:03:15] <bayaz> Type: application/pdf Size: 866.7 kB 
[12:03:23] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[12:04:12] <archie> Jck_true try this please https://ideone.com/Q6QPRw
[12:04:15] <bayaz> Title: Ideone.com 
[12:05:30] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:05:49] <Jck_true> archie: Your modolus is wrong. It might give you a length of 0. 
[12:06:21] <archie> Jck_true thanks, fixed
[12:07:21] <archie> the len bug I mean, still getting equal outputs for 0 and 1
[12:07:30] <archie> not a big issue but would like to understand why
[12:07:54] <archie> I do also get this warning for using rand: Clang-Tidy: Rand() has limited randomness; use C++11 random library instead
[12:08:05] <archie> and 99% sure that thing won't work with multiple threads
[12:08:17] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Client Quit)
[12:08:33] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:08:36] <Jck_true> archie: Hmm weird. Some standard stuff I assume. It gives different output with Visual Studio
[12:09:05] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Client Quit)
[12:09:06] *** Joins: vysn (~vysn@user/vysn)
[12:09:20] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:10:36] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Client Quit)
[12:10:37] *** Quits: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83) (Ping timeout: 252 seconds)
[12:10:53] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:11:34] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Client Quit)
[12:11:50] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:12:17] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Remote host closed the connection)
[12:13:59] <piou> archie: yeah, rand() won't produce reproducible sequences accross threads
[12:16:11] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:18:30] *** Quits: archie (~archie@host-79-27-219-184.retail.telecomitalia.it) (Quit: Client closed)
[12:18:30] <smallvil_> can a font be loaded at half its intended font size without loosing quality?
[12:19:06] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[12:19:08] <smallvil_> eg instead of loading at 800, load at 400 and scale to 800
[12:19:27] <leduyquang753> If you rasterize and then scale back up yes.
[12:19:29] *** Joins: martums (~martums@user/martums)
[12:19:38] <smallvil_> yay
[12:19:55] <leduyquang753> I mean yes it will lose the quality.
[12:19:57] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:20:14] <smallvil_> hmm ok
[12:20:31] <merijn> archie: You need/want rand_r for multi-threading situations
[12:21:46] *** Joins: dan01 (~dan01@109.98.161.136)
[12:22:20] <smallvil_> if i load my font at size 800 i get a memory consumption of ~600 MB, but if i load my font at size 400 i get a memory consumption of ~180 MB
[12:22:36] *** Joins: Atque (~Atque@user/atque)
[12:24:22] *** Joins: archie (~archie@host-79-27-219-184.retail.telecomitalia.it)
[12:24:28] <archie> sorry, network outage
[12:24:31] <password> 800 what?
[12:24:33] <password> px?
[12:24:33] <audiocat> beaky, thanks!
[12:24:37] <smallvil_> yes
[12:24:43] <password> dats massive
[12:24:44] <smallvil_> freetype
[12:25:03] <password> well depends on what you doing with it
[12:25:07] <smallvil_> if i load my font at pixel size 800 i get a memory consumption of ~600 MB, but if i load my font at pixel size 400 i get a memory consumption of ~180 MB   *
[12:25:12] <leduyquang753> What requires you to load a font at such a size?
[12:25:17] <password> its and cost benefit you want to do on your own
[12:25:46] <password> if you are making some kind of poster , don't scale it down
[12:25:51] <smallvil_> so i can resize my font to my screen's height
[12:25:53] <mrig> Oh quite curious thinking about writing some C after go, makes me want to go straight for the pthreads lib. :|
[12:25:56] <password> if its regular font size , heck scale down more
[12:26:39] *** smallvil_ is now known as smallville7123
[12:27:50] *** Quits: jstoker (~jstoker@user/jstoker) (Quit: *disappears in a cloud of bits*)
[12:27:58] *** Joins: federico_it (~textual@151.95.116.125)
[12:28:53] *** Joins: jstoker (jstoker@user/jstoker)
[12:29:52] *** Joins: mithrin (mithrin@gateway/vpn/protonvpn/mithrin)
[12:30:55] <pyzozord> mrig: not-curses library has a video playing module
[12:31:40] <mrig> oh I'd want to keep this straight C and using my own terminal output, have the char now just need to buffer it from a file and print it out.
[12:31:42] <pyzozord> mrig: otherwise I think you could just capture mpv/vlc terminal output, and then simply print it
[12:31:46] <archie> Jck_true piou were you able to make it work with multiple threads?
[12:32:13] <mrig> Yes, ive got a nice firework display, just pondering buffering it for playback :)
[12:32:49] <piou> archie: I¬†didn't try, I just know that if you use a seed per thread and rand_r over that seed in each thread it'll work
[12:33:12] <mrig> or writing some physics and using the quarter character squares to do that. Using the film would be a classier result I'm sure and much quicker to do.
[12:33:24] <pyzozord> Should be pretty simple I think. Just a char *buffer = malloc(size_of_captured_output) kind of thing. There is probably a timing component to it though
[12:33:48] <mrig> pyzozord: yes, your highlighting the functionality of mpv the other day put me onto that :)
[12:34:03] *** Quits: Izem (~Izem@bras-base-london1483w-grc-38-65-95-41-242.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[12:34:30] <Jck_true> archie: https://ideone.com/r2vPHs
[12:34:33] <bayaz> Title: Ideone.com 
[12:35:19] <mrig> Yes, I think that you are right. I've the timing on my display part of the code, just need to work that part out in the data that ive got, feel quite inspired to do this now, as the data is all there :)
[12:35:34] <Jck_true> archie: That's also a little better since the output will be more evenly distributed across the output range instead of just doing a mod. 
[12:35:47] <mrig> was just thinking that it could be a fun thing to have slightly modual, 
[12:35:55] <^-^hi> how to be cache-friendly? just using less ram?
[12:36:04] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[12:36:14] <mrig> ops, modular, so that you could press the fireworks button in terminal whenever the fancy takes you :D
[12:37:26] <archie> Jck_true w8
[12:38:04] <^-^hi> weight then
[12:38:25] <Jck_true> archie: For some reason I needed to do a dummy call first time though or the random generator would always give me a 0 on the first request. 
[12:38:51] <archie> it works in multiple threads? I did an attempt using rand_r and seems ok, may you check that? https://ideone.com/V4oXUU
[12:38:54] <bayaz> Title: Ideone.com 
[12:40:09] <pyzozord> mrig: one interesting concept for things like fireworks is something like this https://youtu.be/9yJflbg0V38?t=1044. Basic concept there is that particles are simulated at "subpixel" resolution, So if you want to print things at the 1/6 of character resultion then you can simulate your particles at 1/8 or 1/16 resolution and use color intensity to mark position, it will make for smooether looking 
[12:40:10] <bayaz> Title: Cogmind & becoming a dev - Josh Ge 
[12:40:15] <pyzozord> fireworks
[12:41:23] <Jck_true> archie: yours should work too
[12:42:06] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[12:43:31] <pyzozord> mrig: word of warning, that most terminal emulators are not fast enough for 60 times 80x25 prints per second
[12:43:34] <mrig> pyzozord: oh cool clip, will take a look at the whole thing
[12:44:09] <mrig> yes I've realised the limits of the normal terminals in the past, having busted them :)
[12:44:13] <Jck_true> pyzozord: That's why you need a line printer :D
[12:45:21] <mrig> pyzozord: Thinking about SDL2 which you've been using has gotten me to thinking about rendering in as sane way again, been faffing with svg a bit, and could do with a break.
[12:45:29] <archie> Jck_true do you know if with boost log I can properly write the output to a file? each thread his own file
[12:45:40] <piou> archie: if you want Jck_true solution to work as you expect you need to define the generator as thread_local
[12:45:58] <Jck_true> archie: I don't know. I don't do C++ at all
[12:46:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:46:17] <mrig> Reading and working from specs that are not really hackable is painful.
[12:46:28] <pyzozord>  mrig: here is specific clip from that same video about particles https://youtu.be/9yJflbg0V38?t=1457
[12:46:29] <bayaz> Title: Cogmind & becoming a dev - Josh Ge 
[12:46:33] <archie> Jck_true ok. Thanks a lot though! Did you test your version with multiple threads?
[12:48:08] <mrig> pyzozord: oh cool, and that could be done with 4 colours per tile too.
[12:48:26] <mrig> would be pretty smooth but still terminalesque.
[12:48:27] <Jck_true> archie: No :)
[12:48:55] <Jck_true> But piou gave some comments in regards to it. 
[12:49:31] <archie> piou missed them
[12:49:35] <pyzozord> mrig: I can send you te source for my terminal. It's kind of messy, but basically there one .c file responsible for io and another .c file responsible for tty logic. You can remove tty logic and you'll be more or less left with a husk for terminal-like games
[12:49:56] <archie> oh, got it
[12:50:41] <archie> piou my version with rand_r is ok, or should I switch to Jck_true's one using thread_local?
[12:50:42] <mrig> pyzozord: That would be great, yes would be nice to read someone else's code too.
[12:50:52] <piou> archie: neither is usable as is
[12:51:09] <piou> archie: using Jck_true will avoid the compiler warning though
[12:51:49] <piou> archie: the part you'll struggle with isn't random number generation, as long as your PRNG doesn't share state with other threads that part's easy. But you need to set a deterministic seed for each thread and although that's absolutely doable that's probably what you're going to struggle with.
[12:51:55] <archie> piou it's ok as is? each thread can replicate the output given the same integer on his own?
[12:52:50] <piou> archie: no, it's not usable as it is right now, you'd want the generator to be thread_local, probably static thread_local although you'd have to check that it works as intended
[12:53:28] <mrig> pyzozord: I dont see why an isometric view game would not be possible too.
[12:53:30] <piou> and as explained, you should integrate your thread logic in your example because calling a PRNG isn't the messy part
[12:53:34] <mrig> could be fun.
[12:53:43] <archie> piou the seed will be just an index of a for cycle (or while, not sure yet). Each thread will start executing the cycle in parallel. 
[12:53:59] <Jck_true> archie: Multithreading issues are hard to debug. You can not just make two threads and assume it works. You don't really know in which order they get executed. 
[12:54:16] <piou> archie: that works.
[12:55:12] *** Joins: Rounin (~david@84.212.130.215)
[12:55:16] <archie> piou more or less will be something similar to https://ideone.com/0LNrb7
[12:55:20] <bayaz> Title: Ideone.com 
[12:56:22] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:56:43] <piou> archie: you don't seem to provide a different seed per thread here
[12:57:42] <mrig> pyzozord: For particle simulation, I'm back to needing to go study math again, it is on the list but I keep getting distracted. :D
[12:58:06] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[12:58:10] <archie> piou each thread will use all the seeds, from zero to n
[12:58:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[12:58:37] <archie> and each thread, for the given seed, must get the same string as output
[12:58:38] <piou> archie: so each thread will generate the same messages in the same order?
[12:58:53] <archie> that's the goal, yeah
[12:58:57] <archie> ideally
[12:59:08] <piou> archie: frankly, if the goal is just that everyone prints the exact same thing, why didn't you just go with a fixed array of strings?
[13:00:05] <archie> because there'll be at least one billion of seeds
[13:00:20] <piou> good reason
[13:00:45] <password> man I still need to get myself a tool that will spit for each line how deep the code block is
[13:01:13] <archie> piou 
[13:01:17] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[13:01:17] <archie> Jck_true
[13:01:18] *** Joins: silasfox47 (~silasfox@xdsl-85-197-57-82.nc.de)
[13:01:24] <archie> I'll use jck's approach then
[13:01:37] <archie> without any change, thread_local is not required as you said, right?
[13:01:47] <piou> archie: I said the exact opposite
[13:02:04] <piou> archie: you *need* thread_local, probably static thread_local even
[13:02:04] *** Quits: silasfox47 (~silasfox@xdsl-85-197-57-82.nc.de) (Client Quit)
[13:02:45] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[13:02:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:03:11] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[13:03:42] <archie> piou may you edit the snippet?
[13:03:47] <piou> actually I don't even know that you can use default_random_engine with thread_local... maybe you'll need to use an explicit generator such as std::mt19937
[13:03:54] <archie> piou otherwise, may I just use my solution with rand_r?
[13:04:31] <archie> rand_r should work as it is, no?
[13:04:31] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[13:06:18] *** Joins: Atque (~Atque@user/atque)
[13:06:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:28] <password> do linters tell how much code duplicaiton there is?
[13:07:31] *** Joins: independent56 (~independe@95.144.68.39)
[13:09:16] <piou> archie: rand_r should work as it is yes because it doesn't use shared state
[13:09:36] <archie> piou will stick on it for now then
[13:09:59] <archie> piou maybe do you know how to use boost log in a way that each thread will write on his own file?
[13:10:34] <Akronymus> httpw://i.imgur.com/CCMCKGR.png
[13:10:46] <Akronymus> https://i.imgur.com/CCMCKGR.png
[13:10:46] <bayaz> Type: image/png Size: 503 B 
[13:10:49] *** Joins: lunarkitty (uid501895@user/pyra)
[13:10:58] <Akronymus> Oh it was a N
[13:11:04] <Akronymus> https://i.imgur.com/CCNCKGR.png
[13:11:05] <bayaz> Type: image/png Size: 20.0 kB 
[13:11:28] <Akronymus> According to this definition, I can have a when clause for each individual assignement.
[13:11:34] <Akronymus> Which. AAAAAA
[13:12:07] <Akronymus> That just looks wrong.
[13:13:38] *** Joins: Akronymus_ (~Akronymus@85.118.189.59)
[13:13:40] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[13:13:45] <Akronymus_> > Many assignments within a single ASSIGN statement are more efficient than multiple ASSIGN statements.
[13:13:46] <Akronymus_> It saves r-code size and improves performance.
[13:13:52] <Akronymus_> HOW?
[13:14:03] <Akronymus_> And why?
[13:14:08] <merijn> archie: rand_r is "ok" for C, but the randomness isn't great, so it also depends on what you wanna use it for
[13:14:24] <Akronymus_> I wish C had something like /dev/random
[13:14:27] <Akronymus_> windows*
[13:14:33] <leduyquang753> It does.
[13:14:40] <Akronymus_> It does?
[13:14:42] <leduyquang753> Yes.
[13:14:48] <leduyquang753> Look at the crypto API.
[13:15:16] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:15:28] <Akronymus_> That's not quite the same
[13:15:37] <merijn> In C++ the easy/lazy way is probably use the stdlib Mersenne Twister, although that's a bit slow
[13:15:38] <archie> merijn it's fine, high randomness is not a requirement
[13:16:28] <merijn> PCG random is always a great option for non-crypto purposes: https://www.pcg-random.org/index.html
[13:16:28] <bayaz> Title: PCG, A Family of Better Random Number Generators 
[13:17:01] *** Akronymus is now known as Guest2960
[13:17:01] *** Akronymus_ is now known as akronymus
[13:18:06] *** Joins: diamondbond (~diamondbo@116.206.245.127)
[13:20:05] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[13:20:30] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[13:21:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:24:15] *** Quits: mithrin (mithrin@gateway/vpn/protonvpn/mithrin) (Remote host closed the connection)
[13:25:05] *** Quits: Guest2960 (~Akronymus@85.118.189.59) (Quit: Client closed)
[13:25:15] <smallville7123> for example https://imgur.com/a/vKUKugn
[13:25:15] <bayaz> Title: imgur.com 
[13:26:25] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[13:26:35] <piou> merijn: rand/rand_r is fine in this case
[13:26:39] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[13:26:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:31:18] *** Joins: EmOwl- (~EmOwl-@202.150.113.111)
[13:31:26] *** Joins: Lyn (~Lyn@user/law)
[13:33:35] <mrig> Does anyone know what the linker flag is for freetype2 ?
[13:33:46] <akronymus> What is it with programmers and listening to the weirdest music?
[13:34:14] <merijn> Most programmers I know just listen to lots of electronic shit, not really anything I'd qualify as weird
[13:34:32] <akronymus> mrig https://www.gamedev.net/forums/topic/518811-whats-the-linker-option-for-freetype2/
[13:34:34] <bayaz> Title: What's the linker option for freetype2 
[13:34:48] <akronymus> merijn fair nuff.
[13:34:55] <akronymus> Guess I extrapolated from myself.
[13:35:18] <mrig> thanks!
[13:35:27] <akronymus> https://www.youtube.com/playlist?list=PLywFQp5QJX9v-0UvTG-gvptlbD9gpB7d6 merijn
[13:35:34] <akronymus> My playlist I constantly add to.
[13:35:44] *** Quits: diamondbond (~diamondbo@116.206.245.127) (Quit: Leaving)
[13:35:44] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[13:35:56] <smallville7123> mrig: -lfreetype
[13:36:16] <smallville7123> or use cmake and find_package(freetype)
[13:36:28] *** Quits: archie (~archie@host-79-27-219-184.retail.telecomitalia.it) (Quit: Client closed)
[13:37:13] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:37:16] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[13:38:09] <smallville7123> mrig: or use https://github.com/mgood7123/freetype-cmake :)
[13:38:10] <bayaz> Title: GitHub - mgood7123/freetype-cmake: demonstrates how to build freetype using cmake 
[13:38:34] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:38:34] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:38:34] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:39:05] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:39:46] *** Joins: jmft2_ (~JMFT@82.3.54.26)
[13:43:38] <smallville7123> https://imgur.com/a/vKUKugn is loading fonts at half resolution and upscaling a good strategy for reduced memory usage?
[13:43:38] <bayaz> Title: imgur.com 
[13:46:10] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 240 seconds)
[13:47:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[13:47:20] *** Joins: flynn (~mcbloch@user/flynn)
[13:47:42] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[13:48:05] *** Joins: independent56 (~independe@95.144.68.39)
[13:50:03] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[13:50:08] <xcombelle> hi
[13:50:31] <smallville7123> hi
[13:51:35] *** Quits: dan01 (~dan01@109.98.161.136) (Read error: Connection reset by peer)
[13:52:20] <mrig> smallville7123: oh I like using make for small projects
[13:52:47] <smallville7123> :)
[13:53:12] *** Joins: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net)
[13:53:16] <mrig> I suppose cmake is a more considerate option given the sprawl of distributions setups though, if sharing code.
[13:53:28] <smallville7123> mrig: then refer to https://github.com/mgood7123/freetype-cmake/tree/5b778f0f1b66a99262487ab82b37581b310b1eb5
[13:53:28] <bayaz> Title: GitHub - mgood7123/freetype-cmake at 5b778f0f1b66a99262487ab82b37581b310b1eb5 
[13:53:41] <smallville7123> as it is buildable using make
[13:53:51] <smallville7123> (tho it just invokes cmake)
[13:54:01] <smallville7123> (tho its makefile just invokes cmake)
[13:54:15] <smallville7123> (tho its makefile just invokes cmake followed by make) *
[13:54:34] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:54:47] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[13:55:05] *** Joins: independent56 (~independe@95.144.68.39)
[13:55:27] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[14:01:41] *** Joins: rsx (~dummy@ppp-188-174-148-246.dynamic.mnet-online.de)
[14:02:13] *** Joins: kobalt (~rsonx@user/kobalt)
[14:02:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:03:46] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[14:05:34] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 250 seconds)
[14:06:32] *** Joins: chives (~brandon@64.130.100.177)
[14:11:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:11:13] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[14:11:27] *** Joins: kobalt (~rsonx@user/kobalt)
[14:11:59] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[14:12:37] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[14:13:23] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[14:13:29] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[14:15:26] *** Quits: CinderellaMan (~GodMode@user/h4x0r) (Remote host closed the connection)
[14:16:36] *** Joins: CinderellaMu (~GodMode@user/h4x0r)
[14:17:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:17:33] *** CinderellaMu is now known as CinderellaMan
[14:17:34] *** Joins: CoderGuy (~CoderGuy@2601:644:101:4f20:2141:1521:c9ad:6f50)
[14:18:45] *** Joins: nekodesu (~bit@user/nekobit)
[14:18:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:22:04] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Ping timeout: 252 seconds)
[14:22:37] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:b53e:f2f2:3cdd:f236) (Ping timeout: 252 seconds)
[14:23:15] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:2daa:f38a:b2b7:ac83)
[14:23:47] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[14:25:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:26:10] <Thedarkb-Work> Has anyone here ever dealt with Stripe?
[14:28:47] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[14:29:29] *** Joins: orondo (~orondo@user/orondo)
[14:30:50] *** Quits: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net) (Quit: Client closed)
[14:31:25] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[14:32:41] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[14:34:12] <varaindemian> can I find a list with SMTP gateways big companies such as microsoft use?
[14:34:33] <arahael> varaindemian: Wouldn't they use their own?
[14:34:39] <orondo> thunderbird has one.
[14:34:49] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:35:10] <orondo> When you config a new email address, they use that list. 
[14:35:14] <varaindemian> arahael: and what are those?
[14:35:27] <varaindemian> I am interested in naming
[14:35:34] <arahael> varaindemian: Their... Own...
[14:37:05] *** Joins: independent56 (~independe@95.144.68.39)
[14:37:23] <orondo> It would be easy the get a list of the 1000 most popular websites and then go one by one with the command "dig" showing only the MX register.
[14:38:53] <varaindemian> orondo: hmm that's inetersting
[14:39:04] <orondo> Programmatically, of course.
[14:39:13] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[14:40:46] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:41:00] <vdamewood> Hi, people etc.
[14:41:04] <varaindemian> orondo: example: `dig +nocmd google.com mx +noall +answer`?
[14:41:10] <arahael> Except large companies that use their own smtp gateway don't tend to make them public.
[14:41:21] <orondo> Let me see the man page for dig.
[14:41:42] <pyzozord> vdamewood: good morning
[14:41:57] <orondo> dig google.com mx +short
[14:42:00] <vysn> morning
[14:42:47] <jelly> hello and thank you for including us non-people, vdamewood
[14:43:09] <vdamewood> jelly: Always glad to be inclusive.
[14:43:20] <pyzozord> jelly-awareness is very important
[14:43:53] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[14:43:56] *** Joins: kron (~weechat@user/qaph)
[14:46:24] *** Joins: Twipply (~Twipply@user/twipply)
[14:47:20] *** Joins: ixil (~ixil@82.197.178.137)
[14:50:07] <inky> i think jellys are people, just non-human people.
[14:50:47] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[14:52:22] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 250 seconds)
[14:54:04] *** Joins: sjmulder (~Sijmen@2a02-a443-33e5-1-bc8c-f511-7748-e553.fixed6.kpn.net)
[14:54:36] <pyzozord> little bit more jiggly but yes the same basic concept I'd assume :)
[14:56:44] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:57:53] <vdamewood> If you prick lellies, do they bleed?
[14:57:58] <vdamewood> jellies*
[14:58:23] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[14:59:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 244 seconds)
[14:59:37] *** Joins: independent56 (~independe@95.144.68.39)
[15:00:18] *** Joins: gargus (~user@118.211.161.156)
[15:03:43] <orondo> I don't know if they bleed, but sure they are edible.
[15:03:48] <orondo> It's tragic.
[15:09:32] <sjmulder> ugh once IT get their hands on InTune/group policies everything looks like a nail
[15:09:52] <sjmulder> now I have a nail free build of Firefox
[15:10:23] <arahael> inky: Yeah, I don't want to join in this conversation, because I think Jelly makes an *amazing* dessert!
[15:10:42] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[15:11:12] * vdamewood hands arahael some jam
[15:11:23] *** Joins: kobalt (~rsonx@user/kobalt)
[15:11:30] <arahael> vdamewood: In Australia, Jam and jelly are *completely* different.
[15:11:41] <Stryyker> Aeroplane
[15:11:55] <arahael> vdamewood: And Australian Jam seems to be quite different to the american type. :)
[15:12:12] <vdamewood> arahael: They're technically different in the US, too.
[15:12:32] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 245 seconds)
[15:12:41] <vdamewood> But good luck finding someone who can tell you what the actual difference is.
[15:13:15] *** Joins: numsima (~numsima@101.175.64.73)
[15:14:26] <arahael> vdamewood: Heh, Australian jam is lumpy, and has loads of fruit in it. American jam has the hint of what might be fruit, and Jelly doesn't have even that hint. :)
[15:14:55] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:14:57] <arahael> Plus, as Stryyker pointed out, Jelly in Australia is specifically Aeroplane, generally.
[15:15:23] <vdamewood> Okay, so in both Oz and Us, jelly is just congeeled fruit juice.
[15:15:47] *** Joins: nekodesu_ (~bit@user/nekobit)
[15:16:12] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[15:16:38] <arahael> vdamewood: Well, in Oz, jelly is typically made from powder.
[15:16:58] <GeDaMo> In the UK, jam is a fruit preserve and jelly is fruit-flavoured gelatin
[15:16:58] <vdamewood> Oh, so it's what we in the US would call gelatin.
[15:17:26] *** Quits: nekodesu (~bit@user/nekobit) (Killed (NickServ (GHOST command used by nekodesu_)))
[15:17:32] *** nekodesu_ is now known as nekodesu
[15:18:02] <vdamewood> Though, most people call it Jell-o after a particular brand of gelatin.
[15:18:07] <arahael> vdamewood: YOu can buy gelatin here, but it's neither sweet nor flavoured. :)
[15:18:08] <jelly> preserves with bits of fruit inside are jam here, if there's a homogenous mass it's a marmalade
[15:18:33] <jelly> which is different from what rest of EU thinks "marmalade" should be
[15:19:02] <jelly> (someone legislated marmalade has to have citruseses in it)
[15:19:13] <arahael> This is a typical Jam here - this is from an advert, though, for Blackberry Jam: https://cdn.shopify.com/s/files/1/1639/7743/products/sc_org_blackberry_jam_cooked_1024x1024.jpg?v=1526535419
[15:19:15] <bayaz> Type: image/jpeg Size: 96.1 kB 
[15:19:49] <jelly> https://www.youtube.com/watch?v=oFRbZJXjWIA
[15:19:51] <bayaz> Title: Bob Marley Jammin 
[15:20:05] <pyzozord> Mmm I think I'll go buy some jam today and have some with toasts
[15:20:19] <pyzozord> jelly: no offence
[15:21:19] <jelly> none taken
[15:21:35] * vdamewood gives jelly some defense.
[15:22:01] *** Quits: sjmulder (~Sijmen@2a02-a443-33e5-1-bc8c-f511-7748-e553.fixed6.kpn.net) (Ping timeout: 252 seconds)
[15:22:02] * jelly absorbs, +1 fire resistance
[15:22:06] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[15:25:04] <vdamewood> Now I'm hungry.
[15:25:24] *** Quits: Cypris (uid511277@user/cypris) (Killed (NickServ (GHOST command used by cypris_!uid507362@id-507362.tinside.irccloud.com)))
[15:26:43] <arahael> jelly: Interesting, so I guess ginger marmalade wouldn't fly.
[15:27:00] <arahael> Though it probably does have citrus in it, too, now that I think of it.
[15:28:31] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:29:03] * arahael wonders if he's an idiot for thinking that a good use of a database might be to have a single table, with columns: identifier, data.
[15:29:22] <vdamewood> arahael: No, that's not the reason.
[15:29:26] <arahael> What data, do I hear you say?  That'll be google protocol buffers. :)
[15:29:47] <arahael> vdamewood: Ha.
[15:29:59] * arahael does not give vdamewood any jam.
[15:30:20] <vdamewood> Yep,that's the reason.
[15:30:49] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[15:31:11] <varaindemian> how can I generate unique URLs/identifiers for pics and links inside a .docx file?
[15:32:17] <vdamewood> You mean generate them inside the docx file, or generate them for use in a docx file?
[15:32:38] <arahael> Or do you mean, perhaps with macros in Microsoft Word?
[15:33:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:34:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:58] <vdamewood> I want to invent something called a meta.
[15:36:30] <GeDaMo> Would it be an acronym?
[15:36:43] <vdamewood> Nope.
[15:36:57] *** Joins: JavaBean (~javabean@user/javabean)
[15:37:17] *** Joins: codemin (~codemin@69.166.223.220)
[15:37:22] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:37:32] *** Joins: langstme (~langstme@user/langstme)
[15:37:50] <DPA> Does LibreOffice Calc use floats or something for big numbers? I thought I'd be lazy and calculate out some table in LO, instead of typing int in in bc, but then I noticed some big numbers were off...
[15:38:14] <DPA> s/int/it/
[15:38:29] <varaindemian> vdamewood: generate them inside
[15:39:13] <vdamewood> varaindemian: You would probably have to write a macro for that. Good luck.
[15:39:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:40:00] <varaindemian> vdamewood: anything similar to what I am looking for?
[15:40:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:11] <vdamewood> Similar?
[15:40:24] <varaindemian> yeah
[15:40:28] <varaindemian> like a similar macro
[15:40:34] <xcombelle> DPA nosupport of bignumber apparently "https://ask.libreoffice.org/t/large-numbers-truncated-in-calc/1906"
[15:40:36] <bayaz> Title: Large numbers truncated in Calc 
[15:40:42] <varaindemian> and if I wanna generate them outside and then put them back isnide the doc?
[15:40:52] <varaindemian> vdamewood: ^
[15:41:04] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[15:41:05] <GeDaMo> I see some Excel VBA for generating UUID/GUID
[15:41:05] <vdamewood> Macros aren't things that people often pass around.
[15:41:07] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:41:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:41:32] <vdamewood> varaindemian: And as for generating them outside, you  can use a guid. New-Guid in Powershell should work.
[15:42:11] <xcombelle> vdamewood: please don't be lazy and read the link I gave varaindemian 
[15:43:13] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:43:45] <varaindemian> xcombelle: DPA nosupport?
[15:44:38] <xcombelle> s/DPA/ varaindemian libre office/
[15:44:51] <akronymus> I had to add a password on a website.
[15:45:00] <akronymus> It disallowed certain special chars.
[15:45:07] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 252 seconds)
[15:45:19] <akronymus> Which is, quite frankly, indicative of a lack of security,
[15:45:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:45:46] <akronymus> Probably limited to ascii.
[15:45:57] <varaindemian> xcombelle: how can that help me
[15:45:58] <varaindemian> ?
[15:46:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:46:38] <xcombelle> read the page linked and you will have answers in it
[15:48:24] <vdamewood> xcombelle: I don't think that page is of any use to varaindemian.
[15:51:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:51:10] *** Joins: independent56 (~independe@95.144.68.39)
[15:51:31] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2)
[15:51:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:52:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:55:18] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Read error: Connection reset by peer)
[15:55:38] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 250 seconds)
[15:55:43] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:55:55] *** Joins: flynn (~mcbloch@user/flynn)
[15:57:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:57:15] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[15:57:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:02:41] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[16:02:43] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[16:02:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[16:03:54] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[16:03:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:07:17] <beaky> finally after 3 weeks of thinking about the interview problem where you have to sort 1 million 32-bit unsigned integers in under 2 MiB of storage i have achieved a 230% compression ratio by only storing the deltas of the sorted output but how do i efficiently sort it 
[16:07:26] *** Joins: caramel_ (~caramel@user/caramel)
[16:09:20] <beaky> nice so this is what they use haskell at facebook for https://github.com/facebookincubator/glean
[16:09:21] <bayaz> Title: GitHub - facebookincubator/Glean: System for collecting, deriving and working with facts about source code. 
[16:09:36] <beaky> looks like it is the future of language servers i think
[16:09:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[16:10:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:10:06] <beaky> facebook doesnt ask people in interviews to sort a million 32-bit integers right
[16:10:18] *** Quits: codemin (~codemin@69.166.223.220) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[16:10:27] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 240 seconds)
[16:11:37] <vdamewood> Dude... my frined just bought me 3 switch games.
[16:11:40] <vdamewood> friend
[16:11:43] <dodo> for what kind of job was that, head of sorting?
[16:12:23] <beaky> yes at google they sort all the world's information
[16:13:01] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[16:13:02] <vdamewood> Super Mario 3D All-Stars, Hyrule Warriors: Age of Calamity, and Bravely Default 2
[16:13:26] <vdamewood> Now if only I had a switch.
[16:13:34] <vdamewood> s/switch/Switch/g
[16:14:02] <pyzozord> beaky: I don't understand your compression technique, can you explain it a bit more, I'm curious
[16:14:13] *** Joins: independent56 (~independe@51.158.144.31)
[16:15:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[16:15:42] <pyzozord> I'm thinking maybe I should try to apply to FAANG if they have remote positions. Not to stay there (I heard it's quite a grind) but just to have that on my CV
[16:16:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:16:16] <pyzozord> I wonder if I'm good enough to even consider this
[16:16:23] <beaky> pyzozord: instead of storing the numbers themselves, i (1) store the deltas i.e. i first store the first number, then the difference between the first and second number, and then the difference between the second and third number, etc. and (2) because it is a sorted list the differences will be smaller between the elements so on top of the deltas i apply a variable length encoding like
[16:16:25] <beaky> golomb-rice https://en.wikipedia.org/wiki/Delta_encoding https://en.wikipedia.org/wiki/Golomb_coding
[16:16:25] <bayaz> Title: Delta encoding - Wikipedia 
[16:16:25] <bayaz> Title: Golomb coding - Wikipedia 
[16:16:27] *** Joins: codemin (~codemin@69.166.223.220)
[16:17:19] <smallvil_> does anyone know any vector graphics libraries for use with text rendering?
[16:17:22] <pyzozord> beaky: thanks
[16:17:33] *** Quits: independent56 (~independe@51.158.144.31) (Read error: Connection reset by peer)
[16:17:49] *** Joins: independent56 (~independe@51.158.144.31)
[16:19:04] <pyzozord> beaky: how is delta encoding compression at all? I mean I understand how it compressess data for a *sorted* array. But the input is unsorted, you must store the entire unsorted input somehow first to sort it, right?
[16:21:37] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:23:17] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[16:23:20] <beaky> yes it only works on a sorted array and the input must be sorted first for the compression to work, and (1) the delta encoding itself is not compression in itself but it keeps all the numbers as small as possible (with the outliers only at the beginning or maybe end of the sequence) to make it easier to compress and (2) the golomb-rice code then compresses those deltas into variable length
[16:23:23] <beaky> binary numbers by a tweakable parameter M and since the deltas are small in general they get to have a very small quotient with the right M
[16:24:54] <beaky> it is not necessary to store the entire unsorted input since you can sort and compress and merge the input
[16:25:25] <pyzozord> ooh so you chunk it up? Read some, sort it, store compressed, repeat?
[16:26:32] <pyzozord> that sounds like O(n¬≤)
[16:27:25] *** Quits: independent56 (~independe@51.158.144.31) (Read error: Connection reset by peer)
[16:27:40] <merijn> pyzozord: Sorting an array, then processing it is O(n log n)
[16:28:33] <pyzozord> merijn: in general yes, but you must have entire array available to you
[16:28:35] <pyzozord> I think
[16:28:51] *** Joins: independent56 (~independe@95.144.68.39)
[16:29:21] <merijn> If you do it in chunks, then it's still O(n log n), tbh
[16:29:32] <merijn> Since merging sorted chunks is only O(n)
[16:30:13] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:31:03] <pyzozord> Lets say the first chunk is 5,1,3 and second chunk 6,2,4. We read in and sort first chunk we get 1,3,5. Then we read in second chunk and sort it, we get 2,4,6. Now we need still need to merge these two chunks together
[16:31:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:31:14] <pyzozord> oh right maybe merging can be done O(n).
[16:31:47] *** Joins: scabby (~scabby@user/scabootssca)
[16:32:25] <pyzozord> well no, because at first chunk we have merging(0), at second chunk we have merging(chunk), at third chunk we have merging(2*chunk). That's O(n^2)
[16:33:18] *** Joins: numsima (~numsima@101.175.64.73)
[16:33:28] *** Joins: gggp (~textual@111.63.14.115)
[16:33:46] *** Quits: dld (~davidlowr@2601:197:600:1210:2dc5:f09c:7b2e:fda2) (Ping timeout: 250 seconds)
[16:33:54] <merijn> hmm?
[16:34:03] <merijn> You can do an N-way merge directly
[16:34:09] <merijn> Instead of doing it one at a time
[16:34:47] <beaky> nice i will figure out how to code merge sort in rust then
[16:35:11] <beaky> and then finally after 1 month i will have solved this 10 minute google interview problem
[16:35:15] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[16:35:55] <beaky> that every googler already did in whiteboard in 5 minutes perfectly in O(n) and under 1 MiB
[16:36:55] <pyzozord> Lets say entire input is 9 elements N = [5,1,3,2,6,4,7,8,9]. We chunk 3. Chunk 1) sort: 3log3 and  merge: 3, Chunk 2) sort: 3log3 and merge: 3+3, Chunk 3) sort: 3log3 and merge 3+6. In total 3*3log3 + (3)+(3+3)+(3+6)
[16:37:11] <orondo> I don't think so, beaky 
[16:37:33] *** Joins: sjmulder (~Sijmen@2a02-a443-33e5-1-bc8c-f511-7748-e553.fixed6.kpn.net)
[16:37:44] <orondo> It's hard to believe that every engineer came with the optimal solution on the spot, in less than 10 minutes.
[16:38:19] *** Joins: scabby_ (~scabby@user/scabootssca)
[16:39:26] <orondo> Don't be so hard on yourself.
[16:39:31] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:39:44] <orondo> The ocaml creator said that he needed 20 years to learn coc.
[16:39:57] <varaindemian> vdamewood: how aboutt thins thing? https://python-docx.readthedocs.io/en/latest/
[16:39:57] <bayaz> Title: python-docx ‚Äî python-docx 0.8.11 documentation 
[16:40:39] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 244 seconds)
[16:40:41] <akronymus> coc?
[16:41:18] <orondo> Coq, I meant.
[16:41:23] <orondo> I'm so sorry :(
[16:41:25] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[16:41:28] <akronymus> Oh coq
[16:41:46] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[16:42:36] <[itchyjunk]> Coq everywhere
[16:44:07] <akronymus> But can coq do this? `getRandomInt()[0] = getRandomInt();`
[16:44:45] <[itchyjunk]> why would coq need that?
[16:44:56] <[itchyjunk]> what's the translation of that in math?
[16:45:10] <pyzozord> Wait, I am misunderstanding something about merge sort
[16:45:11] <akronymus> (I was joking)
[16:45:20] <pyzozord> how is the merge in merge sort no n¬≤
[16:45:35] <akronymus> Because you can assume the small slices are already sorted
[16:45:46] *** Joins: pulse (~pulse@user/pulse)
[16:45:46] <akronymus> So you just need to merge them together, which is linear
[16:46:11] <pyzozord> how is merging linear
[16:46:21] <pyzozord> you must go through all elements of both sides
[16:46:28] <akronymus> Because you only need to compare the current element from each
[16:46:32] <akronymus> Take the lower one
[16:46:42] <akronymus> Then advance the element on the slice you took it from
[16:46:52] <akronymus> Just 1 pass to get all
[16:47:14] <pyzozord> Oh! Right, you don't have to check "back"
[16:47:14] <akronymus> Pretty sure mergesort is overall nlogn
[16:47:17] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[16:47:18] <akronymus> Indeed
[16:47:36] <akronymus> In time, and 2n in space, if you use out a out of place merge
[16:48:41] *** Joins: pizdets (~pizdets@183.182.110.19)
[16:48:55] *** Quits: pizdets_ (~pizdets@183.182.114.153) (Ping timeout: 252 seconds)
[16:49:12] <pyzozord> Ok so that proves that the merge part is not n¬≤ I guess. But how do I know that it's n?
[16:49:15] *** Joins: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451)
[16:49:17] <kek_> hi
[16:49:23] <akronymus> Hello there
[16:49:35] <beaky> yes i will use rust's borrowing and lifetime features to write the most memory-efficient and safe in-place merge of sequences of golomb-rice encoded delta encoded sorted integer values
[16:49:50] <beaky> this takes googlers <1 min on whiteboard
[16:50:02] <beaky> (and they get it correct the first time in c++ of course)
[16:50:09] <arahael> Of course.
[16:51:35] <kek_> I'd like to read memory from a program running on windows. Now I like my linux setup and would like to work on linux. :P Is it possible to read memory from a VM without having to dig through a bunch of overhead i.e. as if I am on the windows machine? Maybe using the linux subsystem? I guess if I use a VM I'd have to dig through the memory of the VM and find where inside of the VMs memory the actualy programs memory space is?
[16:53:00] <pyzozord> that doesn't sound like a good kind of effort
[16:53:49] <pyzozord> why would you be digging through memory of anyone's machine?
[16:53:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[16:54:27] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[16:55:19] <kek_> pyzozord, yeah, just wanted to know if there's some nice solution to it I didn't think of. Just for the fun of it really.
[16:55:34] *** Joins: qbt (~edun@user/edun)
[16:55:35] <kek_> pyzozord, not anyones machine, my machine of course. 
[16:56:21] <mrig> Does anyone here work with svg in blender?
[16:56:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:58:21] <kek_> I'll be offline, thanks though. mrig you might ask in belnders channel, quit sure they have one. Have a nice day. 
[16:58:24] *** Quits: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451) (Quit: Leaving)
[16:58:39] <mrig> I will have to invest the time with blender to find out a bit more about it.
[17:01:06] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:01:06] <[itchyjunk]> problem
[17:01:06] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:01:06] <[itchyjunk]> when i copy the content of file from online and paste it in eclipse
[17:01:06] <[itchyjunk]> it doesn't save the newline and shit
[17:01:06] <[itchyjunk]> the "code template" is being provided
[17:01:06] <[itchyjunk]> i can download and save it and open it
[17:01:07] *** xavie is now known as xcombelle
[17:01:07] <[itchyjunk]> but it doesn't open under the right "package name"
[17:01:07] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Excess Flood)
[17:01:07] <[itchyjunk]> which needs doing too
[17:01:07] <[itchyjunk]> the solution is to open it, then copy it then make new package etc
[17:01:46] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[17:01:50] <mrig> [itchyjunk]: you could have used a comma in place of the 'and shit' and had space to carry on with the same line :P
[17:01:58] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[17:02:52] <pyzozord> yes saving shit is considered harmful
[17:02:57] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[17:03:12] <[itchyjunk]> i tried pasting it in bpa.st and it's still all in 1 line
[17:03:22] <[itchyjunk]> the newline and stuff in eclipse is getting ignored or something
[17:03:32] <pyzozord> [itchyjunk]: are you on windows?
[17:03:32] <xcombelle> [itchyjunk]: https://alvinbunk.wordpress.com/2017/04/14/cut-paste-in-eclipse-removes-space/
[17:03:33] <bayaz> Title: Cut & Paste in Eclipse Removes Space 
[17:03:48] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[17:03:50] <beaky> yes bro if you are using linux qemu kvm you can dump the ram of the vm guest and if you need more hardcore realtime control of the vm guest memory you can write and use qemu plugins or debugging-related plugins like in this guide https://ariadne.space/2021/05/05/using-qemu-user-emulation-to-reverse-engineer-binaries/
[17:03:50] <bayaz> Title: using qemu-user emulation to reverse engineer binaries ‚Äì Ariadne's Space 
[17:04:02] <arahael> [itchyjunk]: Also, when you say "online", do you mean all online sources, or very specific websites?
[17:04:18] <mrig> [itchyjunk]: did you try ctrl shift v or perhaps y  ?
[17:04:36] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[17:04:45] <mrig> there are usually other key combos for alternate past options.
[17:05:21] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: quit)
[17:06:02] <peteyboy1> cheapest hosting option for postgres/node/react?
[17:06:10] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 240 seconds)
[17:08:08] <[itchyjunk]> i am on ubuntu
[17:08:24] <beaky> nice i like ubuntu
[17:08:32] <[itchyjunk]> a very specific source
[17:08:38] <[itchyjunk]> it's on my classe's canvas page
[17:08:39] <pulse> 2purple4me
[17:08:47] <pulse> mint is for real hackers
[17:08:52] <[itchyjunk]> it's a file.java that i can open in my firefox or download locally
[17:09:05] <[itchyjunk]> mrig, have not tried the shift thing
[17:09:42] <beaky> maybe it is a nonbreaking new line 
[17:09:46] <[itchyjunk]> it says "Clipboard contect could not be opened, refine and try atain"
[17:09:52] <arahael> [itchyjunk]: Have you tried pasting it into something else?
[17:09:57] <[itchyjunk]> yes
[17:10:00] <[itchyjunk]> i tried bpa.st
[17:10:06] <[itchyjunk]> no new lines appear there
[17:10:15] <[itchyjunk]> i can show you an example, one sec
[17:10:30] <[itchyjunk]> https://bpa.st/MRNA
[17:10:31] <bayaz> Title: View paste MRNA 
[17:10:35] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[17:10:40] <[itchyjunk]> they are supposed to be on different lines
[17:10:45] <arahael> [itchyjunk]: So it's specifically an eclipse thing?
[17:11:05] <[itchyjunk]> it's the file my professor uploaded that he made in eclipse
[17:11:11] <[itchyjunk]> i am not sure where the issue is
[17:11:26] <[itchyjunk]> so it might be an eclipse thing..
[17:11:34] <[itchyjunk]> if i save the file and open in eclipse, i do see the new lines
[17:11:44] <[itchyjunk]> but the file doesn't open in the right place
[17:12:03] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: szwux[m] (~szwuxhalo@2001:470:69fc:105::dc01) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: smlck (~smlckmatr@user/smlckz) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: justin[m]1234 (~justinsch@2001:470:69fc:105::c74a) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: andrew[m]1 (~andrewmtx@2001:470:69fc:105::3af2) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: blackcatmaxy (~blackcatm@2001:470:69fc:105::bae5) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: lockna (~lockna@2001:470:69fc:105::d697) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: mehrdad2000[m] (~mehrdad20@2001:470:69fc:105::dbc2) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: tjello[m] (~tjellomat@2001:470:69fc:105::3aac) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: Alpha3031 (~alpha3031@wikipedia/alpha3031) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: a_train[m] (~austintra@2001:470:69fc:105::da5e) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: z[m]12345 (~zincognit@2001:470:69fc:105::e306) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: MrLouis[m]1 (~lookneema@2001:470:69fc:105::c61a) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: life_is_pointles (~neon2919m@2001:470:69fc:105::e482) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: bfsuns2k[m] (~bfsuns2km@2001:470:69fc:105::e4ed) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Quit: Bridge terminating on SIGTERM)
[17:12:17] <beaky> maybe it needs newline conversion
[17:12:29] <mrig> Is intelij one of the biggest earning software producers at the moment?
[17:13:37] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2)
[17:13:54] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:14:00] <PlanckWalk> JetBrains?
[17:14:32] <PlanckWalk> I suspect they'd rank way below junk mobile app makers.
[17:15:28] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[17:15:47] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[17:16:01] *** xavie is now known as xcombelle
[17:16:03] <mrig> yes JetBrains, I'm not sure that I would cal
[17:16:06] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[17:16:06] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[17:16:06] *** Joins: Guest3517 (~smlckmatr@2001:470:69fc:105::c885)
[17:16:06] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[17:16:06] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[17:16:18] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[17:16:18] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[17:16:18] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[17:16:20] <mrig> class the junk makers as software producers, I suppose they are.
[17:16:30] *** Joins: justin[m] (~justinsch@2001:470:69fc:105::c74a)
[17:16:30] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[17:16:31] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:16:42] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[17:16:42] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[17:16:42] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[17:16:42] *** Joins: psydroid (~psydroid@user/psydroid)
[17:16:54] *** Joins: a_train[m] (~austintra@2001:470:69fc:105::da5e)
[17:16:54] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:16:54] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[17:16:54] *** Joins: Alpha3031 (~alpha3031@wikipedia/alpha3031)
[17:17:06] *** Joins: andrew[m]1 (~andrewmtx@2001:470:69fc:105::3af2)
[17:17:18] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[17:17:18] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[17:17:30] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[17:17:30] *** Joins: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2)
[17:17:42] *** Joins: lockna (~lockna@2001:470:69fc:105::d697)
[17:17:42] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[17:17:42] *** Joins: blackcatmaxy (~blackcatm@2001:470:69fc:105::bae5)
[17:17:51] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:17:54] *** Joins: mehrdad2000[m] (~mehrdad20@2001:470:69fc:105::dbc2)
[17:17:54] *** Joins: tjello[m] (~tjellomat@2001:470:69fc:105::3aac)
[17:17:54] *** Joins: szwux[m] (~szwuxhalo@2001:470:69fc:105::dc01)
[17:18:02] *** Joins: independent56 (~independe@95.144.68.39)
[17:18:07] *** Joins: life_is_pointles (~neon2919m@2001:470:69fc:105::e482)
[17:18:19] *** Joins: Z[m]1 (~zincognit@2001:470:69fc:105::e306)
[17:18:19] *** Joins: bfsuns2k[m] (~bfsuns2km@2001:470:69fc:105::e4ed)
[17:18:19] *** Joins: jinsun_ (~jinsunmat@2001:470:69fc:105::e50b)
[17:18:32] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:20:57] <merijn> Anyone else experience intermittent Github Action failures caused by apt-get 404ing?
[17:21:17] <merijn> Seems to be a recurring thing happening every so often, means my CI gets stuck for a day :\
[17:21:42] <mrig> [itchyjunk]: seems that there is a setting that you can change for this : https://alvinbunk.wordpress.com/2017/04/14/cut-paste-in-eclipse-removes-space/
[17:21:43] <bayaz> Title: Cut & Paste in Eclipse Removes Space 
[17:21:56] <beaky> nice i like github it is the best colaborative platform for software devlepment
[17:22:53] *** Joins: jamea (~jamea@187.185.190.209)
[17:22:57] <jamea> maria/mysql hi all, how to update a field (imovetleidastatus=0) duplicateds on this data: https://paste.debian.net/1209768/   the field for check..... duplicates id:  cmovetleidaserie  any advice? by sample: in this case: i need update lines: 7,9,10,11,12,14,15,16,17,18,19 and so on, any advice? thanks
[17:23:01] <bayaz> Title: debian Pastezone 
[17:23:55] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:26:47] *** Joins: fch (~myname87@mob-5-90-227-40.net.vodafone.it)
[17:27:50] <beaky> what are some common mistakes when implementing merge sort
[17:28:38] <pulse> beaky, implementing merge sort instead of using std::sort or equivalent
[17:30:13] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[17:30:54] <sjmulder> I vaguely recall there being a (nonstandard?) C function to convert a byte size to a string of specified length, e.g. '1.44M' (for 5 chars). anyone know which one it could be?
[17:31:00] *** Quits: akronymus (~Akronymus@85.118.189.59) (Quit: Client closed)
[17:31:06] <arahael> An uncommon mistake might be to implement it in Coq. ;)
[17:31:30] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[17:32:07] *** Joins: Akronymus_ (~Akronymus@85.118.189.59)
[17:32:11] <beaky> yes they have merge sort in coq i think but i think it is for lists (the infamous linked-list-like list widespread in functional programming examples)
[17:32:25] <beaky> https://xavierleroy.org/coq/Mergesort.html
[17:32:26] <bayaz> Title: Mergesort 
[17:33:29] <beaky> what makes it interesting is that mergesort needs general recursion 
[17:34:02] <beaky> as explained in this chapter in certified programming with dependent types http://adam.chlipala.net/cpdt/html/GeneralRec.html
[17:34:03] <bayaz> Title: GeneralRec 
[17:34:23] <[itchyjunk]> mrig, didn't fix
[17:35:08] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:35:19] <beaky> i think i need a nap maybe in my dreams i will come up with the most brilliant memory-efficient correct in-place O(n log n) merge sort implementation in rust
[17:36:01] <beaky> since sleep and showers seem to be unreasonably effective at producing programming solutions to long programming challenges
[17:37:41] <pyzozord> beaky: make a parallel on
[17:37:42] <[itchyjunk]> uh
[17:37:45] <pyzozord> *one
[17:38:00] <[itchyjunk]> oh
[17:38:11] <beaky> yes parallel and with SIMD to make the best impression on google interviewers that i not only know my algorithms but my low level stuff too
[17:38:33] <beaky> too bad stable rust does not have simd i thnk
[17:39:22] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:43:01] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:b1f6:39c7:2898:1aec)
[17:45:16] *** Quits: sjmulder (~Sijmen@2a02-a443-33e5-1-bc8c-f511-7748-e553.fixed6.kpn.net) (Quit: Leaving)
[17:46:40] <Tazy> I thought they gained SIMD by now
[17:49:18] <beaky> yes i think they have it in unstable https://github.com/rust-lang/rust/issues/48556
[17:49:21] <bayaz> Title: Tracking issue for stable SIMD in Rust ¬∑ Issue #48556 ¬∑ rust-lang/rust 
[17:50:42] <[itchyjunk]> holy crap
[17:50:48] <[itchyjunk]> i had worked with Math.random before
[17:50:54] <[itchyjunk]> and run into an issue ofcasting it before
[17:50:58] <[itchyjunk]>  we had discussed that here
[17:51:07] <[itchyjunk]> i ran into the same issue in my code and managed to fix it
[17:51:14] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:51:33] *** Joins: independent56 (~independe@95.144.68.39)
[17:53:13] <KillerWasp> hellyfish
[17:53:32] *** Joins: Cashlin (~hp@user/cashlin)
[17:53:53] <KillerWasp> .........
[17:54:14] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:54:32] *** Joins: independent56 (~independe@95.144.68.39)
[17:56:14] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[18:00:24] <[itchyjunk]> i'm getting more out of discussing here than going to labs
[18:00:57] <[itchyjunk]> i finished my lab work already.. lab is optional but TA's say its important to show up to lab if you're not a good coder..
[18:01:01] <[itchyjunk]> i guess i'll go :<
[18:03:44] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:05:05] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[18:05:33] <pyzozord> Honestly I feel dumber every day. I feel like I forget faster than I learn, and if this trend continues I'll end up not knowing anything
[18:06:51] <[itchyjunk]> happens to me all the time
[18:06:56] <[itchyjunk]> i forgot what i learned a few months ago
[18:07:03] <[itchyjunk]> and it would be real useful to remember it right now
[18:07:20] <[itchyjunk]> fortunately, i can ask unlimited dumb questions in ##math
[18:07:35] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:08:15] *** Joins: tiwEllien (~tiwEllien@host-79-34-247-87.business.telecomitalia.it)
[18:08:16] <KillerWasp> i'm happy with C/C++/ASM
[18:08:56] <Tazy> asm is kinda fun 
[18:10:26] <KillerWasp> Since I have been programming C/C++, I have no need to use ASM beyond gdb. Except later when I built a 486 Emulator and MOS6510 Emulator.
[18:10:53] <KillerWasp> I still have an incomplete ARM.
[18:11:48] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[18:11:56] <KillerWasp> 486 and ARM are good for using the gcc compiler, as it supports those processors, but since I have the 486, I don't need ARM. ARM looks so redundant, long and heavy.
[18:12:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:13:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:13:50] *** Quits: gargus (~user@118.211.161.156) (Quit: Leaving)
[18:17:28] *** Joins: independent56 (~independe@95.144.68.39)
[18:18:58] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[18:19:11] <InPhase> KillerWasp: Redundant maybe, but it's helpful to have two, as long as they end in hands.
[18:20:44] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net)
[18:21:35] *** Joins: dld (~davidlowr@2620:6e:6000:2900:3d0a:b99:963f:cf07)
[18:23:52] <vdamewood> I like the hands at the endd of my arms.
[18:24:26] <InPhase> KillerWasp claims his are incomplete.  But more specification details are needed.
[18:25:03] <smallville7123> https://gist.github.com/mgood7123/6d2ff26cb41d297dd28968bc24a8355a is this suitible for a texture atlas optimization?
[18:25:07] <bayaz> Title: fontCache.cpp 
[18:25:23] <vdamewood> InPhase: Maybe KillerWasp's ARMs don't have THUMBs?
[18:27:20] <KillerWasp> vdamewood# InPhase# hummm... it's a emulator, not a robot arms.
[18:27:44] <pyzozord> soft ware arms
[18:28:31] <Akronymus_> I hope my boss isn't in here.
[18:28:39] <Akronymus_> I am about to fall asleep.
[18:28:45] *** Akronymus_ is now known as akronymus
[18:28:57] <KillerWasp> also, arm != ARM
[18:31:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[18:31:22] <vdamewood> I think I want this: https://www.kickstarter.com/projects/magpiegames/avatar-legends-the-roleplaying-game
[18:31:25] <bayaz> Title: Avatar Legends: The Roleplaying Game 
[18:31:52] <akronymus> Oh, the good avatar.
[18:32:08] <KillerWasp> bored...
[18:32:23] * vdamewood boards up KillerWasp's arms.
[18:32:32] <akronymus> Just read some reference for something? KillerWasp
[18:33:17] <smallville7123> updated gist
[18:33:30] <KillerWasp> akronymus# no. I have the references and I have already read them all. The 486 I have already finished. Now I am only determined to complete their fake hardware.
[18:34:12] *** Joins: Inari (~Pinkishu@p4fe7ea07.dip0.t-ipconnect.de)
[18:35:07] <akronymus> btw, what client are you using?
[18:35:08] <KillerWasp> The rendering of the graphics, with windows, plans and tiles, are already finished too, the audio too. I just need to connect between the two.
[18:35:50] <akronymus> The added # after every pinging name is kinda confusing to me
[18:36:34] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[18:36:45] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 245 seconds)
[18:36:48] <KillerWasp> akronymus# i'm use hexchat, like all pro guys. :)
[18:37:07] <akronymus> Oh.
[18:39:12] <KillerWasp> The trickiest part of writing code in 486 is that I don't have a clean method for converting into ROMs. I haven't even created an ELF to ROM converter yet.
[18:39:14] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:40:27] <KillerWasp> So I manage to work directly with C/C++ and generate the correct function calls.
[18:40:39] <akronymus> Woo!
[18:40:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:40:58] <akronymus> Couldn't you just generate the rom directly?
[18:41:06] <akronymus> As a blob
[18:41:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:41:30] <mrig> Im using the this line in my Makefile `CFLAGS = -I/usr/include/freetype2` but still getting the error message `/usr/bin/ld: cannot find -lfreetype2` even though the lib is there; Can anyone suggest a cause or solution?
[18:41:31] <KillerWasp> akronymus# Yes, but I don't feel like it. :P
[18:41:57] <mrig> whereis freetype2 gives me the same address that I'm linking against.
[18:42:00] <akronymus> Maybe need a space between -I and the path?
[18:42:06] <mrig> oh
[18:42:16] <mrig> right will try that.
[18:42:23] <GeDaMo> mrig -I is for header files, not libraries
[18:42:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[18:42:40] <GeDaMo> -L is for the location of libraries
[18:42:51] <KillerWasp> mrig# CFLAGS="-I/usr/include/freetype2"
[18:42:59] <KillerWasp> don't need spaces
[18:43:10] <mrig> Ah well that could explain it, space didn't work.
[18:45:10] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[18:45:15] <pyzozord> mrig: the error is from linker it kind find an object file, -I are for header files not object files. So -I and the error you have are not related
[18:45:21] <mrig> GeDaMo: I'm using -lfreetype2 for the library, this is to include the header I think.
[18:45:36] <mrig> pyzozord: ah thanks.
[18:45:48] <GeDaMo> No, -lspecifies the name of a library to link
[18:46:04] <GeDaMo> -L specifies directories to search for libraries
[18:46:18] <GeDaMo> -I specifies directories to search for #include files
[18:46:27] <mrig> Right so I need the -L in the correct place.
[18:46:33] <mrig> for the objects file.
[18:47:52] <KillerWasp> -I for compiling and -L for linking
[18:48:18] <KillerWasp> -L and -l for linking
[18:48:49] <MrMobius> KillerWasp, what ROMs are these?
[18:49:15] <KillerWasp> MrMobius# hello, much time that i don't see you. :P
[18:49:30] <pyzozord> mrig: I said object file but I'm not sure if that is what they are called. Libraries for sure. I can see I have freetype.a and freetype.so. I know freetype.so is a shared object. Apparently .a are ar archives, but I don't know what is it when it's unarchived
[18:49:58] <GeDaMo> .a is for static linking
[18:50:02] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[18:50:08] <GeDaMo> It's just a different kind of library
[18:50:08] *** Joins: Dreg- (~Dreg@fr33project.org)
[18:50:10] <KillerWasp> It can be any ROM that works with the emulator. I have a format on how it should work. Although it is not implemented at all.
[18:50:27] <mrig> Whys it not finding it, is this because it is on debian or some such?
[18:50:49] <KillerWasp> Long ago I wanted to manipulate gcc to create a cross compiling in such a way as to generate the ROM. But it was useless.
[18:50:54] <pyzozord> mrig: you can do dpkg -l to see everything you have installed then / and search for freetype
[18:50:54] <mrig> I've got the headers in the /usr/include folder, whereis shows me this.
[18:51:06] <akronymus> AFAIK the 486 is basically a microcontroller.
[18:51:07] <mrig> right yes
[18:51:11] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[18:51:12] <GeDaMo> mrig: the error isn't about headers
[18:51:22] <akronymus> So, SP + memory mapping is all that really matters.
[18:51:29] <GeDaMo> mrig: can you see the difference between -l and -I ?
[18:51:40] <KillerWasp> mrig# showme your error.
[18:52:15] <akronymus>  lI <-- I don't even see the difference with those
[18:52:30] <GeDaMo> Get a better font :P
[18:52:51] <KillerWasp> lI|!
[18:52:51] <GeDaMo> the first is lowercase L, the second is uppercase i
[18:53:07] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[18:53:08] <akronymus> I am using the web libera chat
[18:53:36] <KillerWasp> akronymus# you must tell it in #libera
[18:53:43] <mrig> This gives me libfreetype6-dev:
[18:54:01] <mrig> how does one address an address like this?
[18:54:19] <GeDaMo> That looks more like the name of a package than the library itself
[18:54:29] <pyzozord> mrig: I got libfreetype-dev and libfreetype6-dev
[18:54:36] <KillerWasp> mrig# -lfreetype6-dev
[18:55:10] <KillerWasp> mrig# you're use debian? you can also use pkgconfig for generate the parameters
[18:56:11] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Quit: Leaving)
[18:56:15] <pyzozord> pkg-config is cool
[18:56:15] <mrig> I need to learn how this works, come unstuck with it, or because of it.
[18:56:16] <KillerWasp> if i remember good: "pkgconfig --cflags freetype" for compiling, and "pkgconfig --libs freetype" for linking
[18:56:29] <KillerWasp> pyzozord# yes, it's pkg-config
[18:56:40] <MrMobius> akronymus> AFAIK the 486 is basically a microcontroller. <-- what?
[18:56:59] <akronymus> 80486
[18:57:10] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[18:57:11] <akronymus> I mean, that you can drive it like any other microcontroller
[18:57:21] <MrMobius> how do you mean?
[18:57:21] *** Joins: src (~src@user/src)
[18:57:21] <akronymus> No memory safety and such
[18:57:25] <MrMobius> oh
[18:57:47] <akronymus> Just that you need to take care that some IO and such listens to certain memory ranges
[18:58:10] <GeDaMo> 486 has memory protection
[18:58:13] <mrig> Thank you, I'll give that a try.
[18:58:15] <akronymus> Oh?
[18:58:16] *** Quits: fch (~myname87@mob-5-90-227-40.net.vodafone.it) (Quit: Leaving)
[18:58:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 244 seconds)
[19:00:06] <akronymus> https://en.wikipedia.org/wiki/I486 didn't see anything about memory protection in there
[19:00:06] <bayaz> Title: i486 - Wikipedia 
[19:00:22] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:2daa:f38a:b2b7:ac83) (Ping timeout: 252 seconds)
[19:00:39] <akronymus> nvm
[19:00:44] <GeDaMo> https://en.wikipedia.org/wiki/Protected_mode
[19:00:45] <bayaz> Title: Protected mode - Wikipedia 
[19:00:45] <akronymus> Was introduced with the 386
[19:01:02] <KillerWasp> mrig# show all: pkg-config --cflags --libs freetype2
[19:01:27] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44)
[19:01:54] <mrig> whats that KillerWasp ?
[19:02:56] <mrig> oh I see just to run that as a pkg-config command
[19:03:18] <mrig> oh right, it just gives me the string in the terminal, thats great!
[19:03:39] <KillerWasp> mrig# you can also use inside of the gcc: gcc mycode.c -o mycode `pkg-config --cflags --libs freetype2`
[19:05:00] *** Quits: akronymus (~Akronymus@85.118.189.59) (Quit: done with work for the day)
[19:05:16] <mrig> Yay that got me passed that error onto the next one :D
[19:05:17] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net) (Ping timeout: 256 seconds)
[19:05:31] <Thedarkb-Work> The 486 can run modern Linux if you possess infinite patience.
[19:06:10] *** Joins: cahoots (~cahoots@163.182.128.74)
[19:06:14] <mrig> Thedarkb-Work: Is infinite patience is subject to the halting problem?
[19:06:34] <KillerWasp> Thedarkb-Work# you mean in very slow speed of MHz, maybe.
[19:07:24] <Thedarkb-Work> TinyCore Linux and Gentoo will both still run on a 486 for masochists who want to brag about running a modern OS on obsolete hardware.
[19:08:13] <KillerWasp> Thedarkb-Work# hey! that I use outdated hardware. >:(
[19:08:20] <mrig> KillerWasp: I was trying to use it in a make file like this CFLAGS += "pkg-config --cflags --libs freetype2" which does not seem to work.
[19:08:36] <mrig> oh those are backtics!
[19:08:54] <mrig> cool that got it
[19:09:20] *** Quits: silasfox (~sbv@xdsl-85-197-57-82.nc.de) (Quit: WeeChat 3.2)
[19:09:33] <KillerWasp> My machines are more than 10 years old, and I still use them.
[19:10:25] <KillerWasp> As if that weren't enough, I use old software from dosbox.
[19:10:44] <[_]> just like my wife!
[19:10:48] <[_]> jk jk im not married
[19:11:01] * KillerWasp stung [_] 
[19:12:02] * rexar89 sees [_] wife approaching ...
[19:12:03] <Thedarkb-Work> There was a 16 bit protected mode on the 286 but it hamstrung you where large data structures were concerned.
[19:12:06] <KillerWasp> ü•¶
[19:13:18] *** Joins: teut (~teut@106.212.2.35)
[19:13:26] <teut> Uploaded file: https://uploads.kiwiirc.com/files/caa27b1d8eef2339fe63e32e54848834/image.png
[19:13:26] <bayaz> Type: image/png Size: 14.8 kB 
[19:13:26] *** Quits: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de) (Quit: Ping timeout (120 seconds))
[19:13:29] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[19:13:29] <teut> plz tell
[19:13:33] <pyzozord> I need to use the bacticks more, i only use $() in bash
[19:13:39] *** Joins: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de)
[19:13:50] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[19:14:03] <pyzozord> teut: are you cheating? :P
[19:14:08] <teut> yes
[19:14:13] <teut> stupid quiz
[19:14:39] *** Quits: D-04 (~D-04@217.138.194.126) (Ping timeout: 250 seconds)
[19:14:40] <teut> Uploaded file: https://uploads.kiwiirc.com/files/87bd72d71d3e9c4c5afc5c278d45a897/image.png
[19:14:40] <bayaz> Type: image/png Size: 24.5 kB 
[19:14:45] <pyzozord> you know what is referred to as a row in a rdbms? A row :P
[19:14:49] <teut> thats tuple
[19:14:51] <pyzozord> Or a record
[19:14:53] <teut> I saw on interbet
[19:14:54] <GeDaMo> Tuple
[19:14:59] <teut> thanks
[19:15:03] <teut> this one too plz
[19:15:26] <GeDaMo> Pointer
[19:15:26] <pyzozord> Never really heard anyone say "tuple" for a database row irl
[19:15:28] <teut> why are they asking me this, I have taken frontend job
[19:15:48] *** Joins: D-04 (~D-04@45.87.212.70)
[19:16:20] <teut> pointer is not an option there
[19:16:41] <teut> Uploaded file: https://uploads.kiwiirc.com/files/fb0befdac9159c0e014971cbf6284f69/image.png
[19:16:41] *** Quits: EmOwl- (~EmOwl-@202.150.113.111) (Ping timeout: 244 seconds)
[19:16:42] <bayaz> Type: image/png Size: 50.5 kB 
[19:16:50] <teut> just tell these 2 plz 
[19:17:10] <mrig> Does anyone help me to understand these errors? https://termbin.com/z1nk
[19:17:11] <bayaz> Type: text/plain; charset=utf-8 
[19:17:19] *** Joins: EmOwl- (~EmOwl-@2404:4402:17b3:bc00:2fed:62a0:e176:c11d)
[19:17:33] <oldlaptop> pyzozord: that is because everyone speaks sql IRL, not relational theory :|
[19:17:46] <[_]> wtf is i3 gaps?
[19:17:49] <mrig> I wonder if there is a way to set the header message when sending to termbin, there must be :)
[19:17:53] *** [_] is now known as [itchyjunk]
[19:17:54] <pyzozord> oldlaptop: yeah that makes sense
[19:17:59] <GeDaMo> mrig: well, the first one is saying it can't link a function called setmode
[19:18:27] <mrig> GeDaMo: how can you tell that this is a function?
[19:18:45] <mrig> what is the @@ saying here?
[19:18:53] <GeDaMo> Technically, I can't but the name suggests it is :P
[19:19:25] <mrig> Is there a way to find out which file is causing the error?
[19:19:39] <pyzozord> mrig: probably this https://www.freebsd.org/cgi/man.cgi?query=setmode&sektion=3
[19:19:40] <bayaz> Title: setmode(3) 
[19:20:26] <mrig> I was wondering why it is referencing BSD when this is a debian system?
[19:20:33] <pyzozord> mrig: it kind of sounds like maybe you have wrong version of libbsd?
[19:20:34] <mrig> linux
[19:20:49] <pyzozord> mrig: I got 0.10.0-1
[19:20:59] <mrig> Is this some translation library?
[19:21:13] <pyzozord> it's just a bunch of nice functions that bsd had that linux people got envy about
[19:21:13] <GeDaMo> Do you have -lbsd ?
[19:21:16] <teut> 2 - 4 ye\rs new db tech 
[19:21:22] <teut> plz tell fast
[19:21:23] <mrig> no
[19:21:35] <teut> NodeJs, distributed databases casandra   I rote this
[19:21:41] <mrig> I'd no idea that it is being called :)
[19:22:14] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:25] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:9431:ac47:e213:66c4)
[19:22:34] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[19:23:17] <mrig> I cant see where this is being called.
[19:23:38] <GeDaMo> Which libraries are you using?
[19:24:35] *** Joins: Pickchea (~private@user/pickchea)
[19:25:07] <mrig> I'm just trying to work that out, this is not code that I've written and am trying to get the makefile together for it.
[19:25:29] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-69a2-efd2-4950-bbeb.inf6.spectrum.com) (Ping timeout: 250 seconds)
[19:25:43] <mrig> pyzozord: your folder compiles fine, I'm trying to get just the code and my own makefile to work.
[19:25:44] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[19:25:44] <CP-400> uhhhh ohhhhhhh
[19:25:52] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:25:59] <CP-400> use a build system
[19:25:59] <pyzozord> mrig: some libraries that you compile use gnu autotools, those libraries usually come with ./configure scripts that check what you have available on your system and produce a makefile compatible with your system
[19:26:04] *** Joins: flynn (~mcbloch@user/flynn)
[19:26:13] <CP-400> you gonna suffer in hell by making your own makefile
[19:26:17] <CP-400> I suggest using Bazel
[19:26:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:26:19] <pyzozord> mrig: oh ok
[19:26:43] <teut> GeDaMo  , were you asking me?
[19:26:45] <mrig> GeDaMo: essentially SDL2 freetype2
[19:26:53] <CP-400> I successfully recompiled some annoying open source libraries with it (e.g.: FreeImage)
[19:27:03] <mrig> and X11
[19:27:11] <teut> this company uses React, NodeJS, AWS something
[19:27:36] <GeDaMo> teut: that database question says "being used in your work environment"
[19:28:11] <teut> ah yes, the company told in the very start their stack , it was something of AWS
[19:28:20] <teut> i havent worked with AWS
[19:28:39] <teut> is casandra a correct option?
[19:28:50] <GeDaMo> I don't know what that is
[19:29:46] <teut> me too , except thats what these companies use for their distributed systems
[19:31:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:32:39] <mrig> libbsd is not recognised by pkg-config, would one normally need to add this to the pkg-config path?
[19:33:12] *** Joins: Noventicx6 (~Noventicx@crux.uberspace.de)
[19:34:10] <GeDaMo> Just try bsd, not libbsd
[19:34:28] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[19:34:38] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[19:34:52] <mrig> no it does not find that either.
[19:35:10] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Ping timeout: 240 seconds)
[19:35:11] *** Noventicx6 is now known as Noventicx
[19:35:17] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 244 seconds)
[19:35:57] <InPhase> mrig: Is libbsd-dev installed?
[19:36:20] *** Joins: magla (~gelignite@55d413e5.access.ecotel.net)
[19:36:30] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:9431:ac47:e213:66c4) (Ping timeout: 256 seconds)
[19:37:52] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Ping timeout: 244 seconds)
[19:39:58] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:43:11] <mrig> InPhase: ah! no it wasn't, now pkg-config is finding -lbsd :)
[19:43:48] <mrig> great that has got past that one!
[19:44:11] * vdamewood links against libnotthere
[19:44:35] *** Quits: teut (~teut@106.212.2.35) (Ping timeout: 244 seconds)
[19:44:45] <mrig> I am a little intrigued to understand how pyzozord has structured his code, none of this is required when complied in another way.
[19:45:19] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:46:40] <pyzozord> mrig: I just followed suit (poorly) of what was already done by the st.suckless team
[19:46:42] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net)
[19:47:12] <pyzozord> Although I admit I like the suckless setup, simple make file, no autotools
[19:47:23] <pyzozord> SDL2 and SDL2_ttf are different beasts though
[19:47:33] <mrig> Ah right, I cant understand the Makefile, was hoping to work through it gradually.
[19:47:58] <mrig> I like to know what code I'm running :|
[19:48:13] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[19:48:13] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[19:48:13] *** Joins: khanred (~khanred@user/khanred)
[19:48:20] *** Parts: khanred (~khanred@user/khanred) ()
[19:48:46] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[19:48:47] <pyzozord> make takes some time to get used to, I'm early on my jurney too
[19:49:28] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:49:44] <pyzozord> some ideas in make are kind of unintuitive, e.g. the error it returns when accidentally tabs and spaces are mixed
[19:49:47] <mrig> Nice though when it starts to make more sense.
[19:50:33] *** Joins: mickey (~user@user/mickey)
[19:50:38] <pyzozord> My first real encounter with gnu-like building systems was when I tried to build nvi. It took me few days and some reading
[19:51:31] <pyzozord> it can be as simple as ./configure; make; make install if you are lucky. Usually, though, something goes wrong
[19:52:12] *** Joins: luckyxxl (~luckyxxl@185.213.155.160)
[19:52:17] <pyzozord> but I'm glad someone took interest in it though, was a pretty intense week for me to put this together
[19:54:42] <pyzozord> mrig: fyi i never had any libbsd issues
[19:56:40] *** Joins: humanface (~humanface@20014C4E1C4F720028C56970D28F6F24.unconfigured.pool.telekom.hu)
[19:56:59] <humanface> I still don't know why do programmers need to give estimations for tasks
[19:57:15] <humanface> if I could work without using Google almost constantly for years (!!!) now
[19:57:18] <humanface> in every day
[19:57:25] <humanface> sometimes multiple times per day
[19:57:36] <humanface> then I propably could estimate my tasks
[19:57:36] <mrig> It's just complied now pyzozord from my makefile, is not quite running yet but there is progress :)
[19:58:00] <humanface> but most of my time I have no idea how the hell will I do each task of mine
[19:58:02] <InPhase> humanface: Because planning a project which depends upon software requires some sort of time estimates.
[19:58:35] <humanface> InPhase how to plan if still need to use hours of googling after years of development?
[19:58:56] <InPhase> humanface: This remains true despite the challenges of estimating projects with significant unknowns.  With experience you can get better at estimating the scope of probably unknowns.
[19:59:33] <humanface> usually I don't know what will I do in the end of the day
[19:59:50] <humanface> yesterday I didn't know what will I do today
[19:59:57] <humanface> I just had a very vague idea about what will I do
[20:00:23] <InPhase> humanface: I've been programming for 36 years, and if the thing I'm asked to estimate has aspects unknown to me (libraries, sections of code I didn't look at, hardware I can't predict well) then I give a range of values, which usually has a cluster at shorter values, and a longer tail on the estimate encompassing some bigger problems that can arise and my estimates of those.
[20:01:24] <InPhase> humanface: Giving a fixed estimate without a caveat is almost always a mistake, given how real world durations of programming time needed tend to have those long tails.
[20:01:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:02:00] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[20:02:06] <humanface> I was thinking on implementing a random number generator to get my estimations
[20:02:11] <humanface> because it's just like that
[20:02:58] <InPhase> humanface: If people are unhappy with the ranges I give, I explain that making better estimates is itself something that requires study of a problem, and that I can provide them with extra time dedicated to estimating.  People usually do not request this.  :)
[20:04:33] <humanface> I think bosses should also do some programming
[20:04:40] <InPhase> humanface: Although accepting an estimate with ranges is something that requires trust in the person estimating.  Ranges tend to not intuitively inspire confidence.  But it is typically the most correct thing one can give.
[20:04:42] <humanface> and they would realise how hard to plan any kind of task
[20:05:16] <mrig> There's a pretty cool video of Bob Martin on how the team leaders can and should install a system for estimation. It is down to them to do it though.
[20:05:35] <mrig> that is those who interact with the business end of the stick.
[20:05:41] <InPhase> My boss has plenty of experience programming, but his experience was decades ago when estimations tended to be easier, as there were fewer externalized dependencies.  You were mostly estimating yourself.  Now you're estimating how many surprises you'll get from other things.
[20:06:19] <InPhase> But, as he gained experience with me, now he trusts me to inform him of those sorts of ranges.
[20:09:23] *** Joins: tvm_ (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[20:09:32] <InPhase> I used to program in that long ago time, and my estimates tended to be much more reliable.  Now my estimates are still reliable if I'm implementing a contained problem that depends only on what I can whip up with tools, languages, and libraries that I know inside and out.
[20:09:46] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[20:11:12] *** Joins: teut (~teut@106.212.2.35)
[20:12:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net) (Ping timeout: 256 seconds)
[20:14:00] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Quit: cya)
[20:14:36] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[20:15:28] *** Joins: jazzy (~jaziz@172.58.36.139)
[20:16:03] *** Joins: jazzy2 (~jaziz@172.58.36.139)
[20:16:11] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:17:57] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Ping timeout: 245 seconds)
[20:20:07] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 252 seconds)
[20:21:12] *** Joins: keir (~keir@user/keir)
[20:22:15] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[20:23:27] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:28:10] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[20:29:02] <pyzozord> mrig: nice :)
[20:29:16] <pyzozord> humanface: business needs it for planning
[20:29:19] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[20:29:30] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[20:30:53] <pyzozord> Ah I forgot the jam :(
[20:30:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:31:43] <pyzozord> well TMI
[20:33:01] <pulse> we need a bob ross of programming
[20:33:13] <pulse> happy little functions
[20:33:35] <pyzozord> Yes.
[20:33:38] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net)
[20:33:45] <ross> no tests, only happy accidents
[20:33:55] <mrig> painting by numbers?
[20:34:03] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:398e:7ab8:d74e:d9a5)
[20:34:47] <pyzozord> Alan Kay comes close in some respects
[20:35:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:36:00] *** Quits: luckyxxl (~luckyxxl@185.213.155.160) (Ping timeout: 256 seconds)
[20:36:23] <pulse> isn't that the guy who said OOP is only used by devil worshipers
[20:36:57] <pulse> wait no, that's the guy who invented OOP
[20:37:00] <pyzozord> He invented OOP, I'm not sure if he'd say that :D
[20:37:25] <pulse> yes it was another guy
[20:37:30] <pyzozord> Although he does say that what he envisioned is not what we understand as OOP (the c++ oop model)
[20:37:41] *** Joins: Guest52 (~Guest52@70.90.132.249)
[20:38:35] <pyzozord> I just realized that most programming icons I look up to are not exactly paragons of friendlyness
[20:38:39] <[R]> Like how MS wrote an entire whitepaper on how to do hungarian notation, and decided to adopt a complete perversion of it?
[20:38:49] <[R]> Or something less bastardized?
[20:38:49] *** jazzy2 is now known as jazzy
[20:39:39] <deniska> [R]: HWNDHDLGHNDL is perfectly readable, what do you mean?
[20:39:52] <[R]> D:
[20:39:55] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[20:40:28] *** Quits: Guest52 (~Guest52@70.90.132.249) (Client Quit)
[20:41:16] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[20:42:53] *** Joins: Leone (~Leo@24.140.234.189)
[20:42:55] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Quit: Leaving.)
[20:43:32] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:44:21] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[20:44:52] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:04] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:45:18] *** Joins: luckyxxl (~luckyxxl@185.213.155.160)
[20:49:45] *** Joins: Guest96 (~Guest96@197.220.169.146)
[20:50:29] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[20:50:38] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:50:43] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 244 seconds)
[20:50:51] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[20:52:25] *** Joins: nostalgia (~treebeard@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[20:53:20] *** Joins: independent56 (~independe@95.144.68.39)
[20:53:38] <Guest96> Any pythonista here? 
[20:54:22] <KillerWasp> Guest96# NNNO!!!!
[20:54:46] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[20:55:45] <Guest96> #KillerWasp No?
[20:55:54] <pulse> i'm a javascriptarian by day
[20:58:15] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:58:49] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:58:59] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[20:59:04] * mrig has gone to the c side to day.
[21:00:11] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[21:00:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[21:00:48] *** BenLand100 is now known as Treebeard
[21:01:07] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[21:01:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:01:31] *** Joins: Drek45 (~jrept371@129.59.122.18)
[21:02:39] *** Treebeard is now known as BenLand100
[21:02:41] <mrig> I'd be intrigued to read that whitepaper.
[21:03:05] <vdamewood> Guest96 If you want to ask a question, or need help with something, it would probably be better to just ask for that. If someone can help, they will.
[21:03:28] *** Joins: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net)
[21:03:29] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d466:3a01:8:f55d) (Read error: Connection reset by peer)
[21:03:34] *** BenLand100 is now known as Treebeard
[21:03:38] *** Treebeard is now known as BenLand100
[21:04:44] <Guest96> vdamewood: Okay.   Which of the Anaconda distribution comes with python 3.7.1 supported for its (default) python distribution?
[21:06:10] <GeDaMo> mrig: this, maybe? https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-6.0/aa260976(v=vs.60)?redirectedfrom=MSDN
[21:06:11] <bayaz> Title: Hungarian Notation 
[21:06:33] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net) (Ping timeout: 256 seconds)
[21:08:01] *** Joins: arcatech (~arcatech@user/arcatech)
[21:08:30] <vdamewood> For some reason, no one uses reverse Hungarian notation.
[21:09:08] <droid3> hey guys i want to talk a little bit more about arbitrary precision libraries for math.  https://pastebin.com/U9hkizw6
[21:09:09] <bayaz> Title: /** * Returns a byte array containing the two's-complement - Pastebin.com 
[21:09:54] <droid3> taking a look further at how java implements its toByteArray function it does it thru a for loop making a copy of this huge bigint
[21:10:38] *** Joins: pufferfish (~pufferfis@182.70.229.195)
[21:10:38] <droid3> This is much less efficient then say using gmp mp_limp directly and accessing it by reference not by a copy each time.
[21:11:14] <droid3> Sure there are sometimes you want to make a new copy or a new copy of a piece of the bignum and that great in java as well as c/c++
[21:12:49] <droid3> But the issue becomes in java there is no good way i know of to get at the internal array its always giving you back it as a copy using a for loop like toByteArray does then you have to take piece of it and use the BigInteger(byte[]) constructor to make a new BigInteger for the piece of the byte[] you want.
[21:13:12] <mrig> Oh thank you GeDaMo, looks like it has the rundown.
[21:13:14] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[21:13:53] <droid3> Does anybody know of a way to do the equivalent of mp_limb[] in java efficiently so you dont have to copy with a toByteArray() method???
[21:14:45] *** Joins: eson123 (~eson123@118.69.128.37)
[21:14:54] <droid3> Anyway i dont think currently it exist but functionality should be add to java BigInteger class to allow to get at the piece of the BigInteger number efficiently. Like mp_limb gives you in gmp 
[21:15:02] <mrig> vdamewood: I think the reverse Hungarian notation is only ever performed on horseback, as such it can be tricky using the keyboard at the same time.
[21:15:37] <eson123> when we use the term ADT or Abstract Data Type, does it refer to things such as Stack, Queue, Nodes, etc or does it refer to things like a specific data type such as string, char, int, float instead ?
[21:15:38] <droid3> Anyway also a minor but other distinction is it seems java represents bigintegers in 2 complement for the negative numbers.
[21:16:05] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[21:17:01] <droid3> However gmp c/c++ is much better in that they use unsigned long long and just a mp_size being negative or positive to indicate a negative number from a positive number.
[21:17:11] <mrig> Hungarian notation is superb for c and use with regexp.
[21:17:24] <mrig> who needs classes then?
[21:17:37] *** Quits: keir (~keir@user/keir) (Quit: keir)
[21:18:16] <droid3> so gmp can reach higher theoretical number sizes then java implementation of biginteger. However they both implement similar to exactly same fast multiplication algorithms.
[21:19:30] <droid3> So pretty much for arithmetic the speed is comparable. It just java doesnt give you away to get at the underlying piece of the biginteger efficently like gmp does with mp_limb. 
[21:19:34] <GeDaMo> droid3: BigInteger has a testBit method
[21:19:38] <deniska> droid3: seems like gmp implementation may give you a negative zero which is funky
[21:19:47] *** Quits: nekodesu (~bit@user/nekobit) (Quit: uninstall gentoo)
[21:20:34] <droid3> ya one complement vs two complement your working with just an extra 0 representation for zero.
[21:20:45] *** Joins: alefir (~alefir@102.129.145.224)
[21:20:58] *** Quits: alefir (~alefir@102.129.145.224) (Client Quit)
[21:21:59] *** Guest96 is now known as ben10
[21:22:37] <droid3> testBit method is good to get at one bit or a few bits fast. However if you have to take huge chunks of the binary representation and work on add/mult them seperately there is no good way like mp_limb gives you in java.
[21:23:06] *** Joins: alefir (~alefir@102.129.145.224)
[21:23:32] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[21:23:42] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Remote host closed the connection)
[21:24:01] <droid3> "ya one complement vs two complement your working with just an extra 0 representation for zero."
[21:25:10] <droid3> my mistake there is one complement and two complement representation but for gmp it just using the negative sign in the mp_size variable to tell the difference as state above.
[21:26:46] <droid3> Anyway ya i feel like java has the ability to do the mp_limb stuff but its just really slow because your making copies of every thing aka the internal byte array representation of BigInteger thru toByteArray() ...etc
[21:27:46] <droid3> It be nice if there was some add BigInteger extended class to provide a mp_limb base low level stuff that all i am saying. Other then that low level stuff it great api in java.
[21:27:50] *** Quits: alefir (~alefir@102.129.145.224) (Read error: Connection reset by peer)
[21:28:05] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[21:28:37] <droid3> You can shift , xor , and ,compare , exp ,add , multiply ,...etc pretty much all the functionality of c/c++ gmp is there and as efficient or close to it.
[21:28:43] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[21:29:50] <droid3> except for mp_limb and low lever arithmetic on piece of the BigInteger. You always got to construct a new BigInteger and take piece of the byte array you got with toByteArray().
[21:30:00] *** Joins: alefir (~alefir@102.129.145.86)
[21:30:33] <droid3> which is going thru a few for loops of size of the byte array or piece of it. which is slow its all copies so take up double amounts of space two.
[21:30:51] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:31:04] *** Joins: flynn (~mcbloch@user/flynn)
[21:31:36] <droid3> Anyway it be nice to have a method in java to say  getBigInteger( int startbit , int endbit ) 
[21:32:33] <droid3> or multiply(startbit , int endbit , BigInteger ) ,...etc
[21:33:57] <droid3> Anyway you can do it however all i am getting at is its in efficient and not like mp_limb efficiency. Anyway all stop the rambling for now and move on i just found it weird they have away to shift , xor , and ,...etc and all the arithmetic operation pretty much as efficient.
[21:35:24] <droid3> But no way to fundamentally work with piece of the BigInteger or the bit string representation efficiently. Its all copying 
[21:37:01] <droid3> But maybe testBit , clearBit ,setBit in a for loop maybe used by the user efficiently can get around this
[21:37:46] <Caffeinated> wow
[21:37:51] <droid3> Anyway tonights talk will be different then arbitrary precision libraries which might get boring for everybody and its flooding the channel.
[21:37:57] <droid3> so later guys
[21:38:25] *** Joins: Akuli (~Akuli@82-203-166-202.bb.dnainternet.fi)
[21:39:19] *** Quits: federico_it (~textual@151.95.116.125) (Ping timeout: 252 seconds)
[21:39:37] *** Quits: jinsun_ (~jinsunmat@2001:470:69fc:105::e50b) (Changing host)
[21:39:37] *** Joins: jinsun_ (~jinsunmat@user/jinsun)
[21:39:44] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:39:52] *** Quits: eson123 (~eson123@118.69.128.37) (Ping timeout: 252 seconds)
[21:40:08] *** Joins: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca)
[21:41:11] *** Joins: Maker (~maker@70.18.215.45)
[21:42:18] *** Joins: federico_it (~textual@151.95.116.125)
[21:45:10] *** Quits: rsx (~dummy@ppp-188-174-148-246.dynamic.mnet-online.de) (Quit: rsx)
[21:47:32] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[21:48:32] *** Joins: Hercules (~Hercules@user/hercules)
[21:49:03] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Reconnecting)
[21:49:18] *** Joins: jinsun_ (~jinsun@user/jinsun)
[21:53:37] *** Quits: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44) (Ping timeout: 252 seconds)
[21:56:16] *** Joins: xff0x (~xff0x@2001:1a81:52bb:c200:954e:ca7f:9978:3e44)
[21:59:00] *** Joins: Pixi (~Pixi@user/pixi)
[21:59:02] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[22:02:46] *** Joins: Byteflux (~byte@byteflux.net)
[22:03:02] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:03:32] *** Quits: pufferfish (~pufferfis@182.70.229.195) (Quit: leaving)
[22:04:21] *** Quits: ben10 (~Guest96@197.220.169.146) (Ping timeout: 256 seconds)
[22:04:31] *** Joins: pufferfish (~pufferfis@182.70.229.195)
[22:10:21] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[22:10:35] *** Quits: humanface (~humanface@20014C4E1C4F720028C56970D28F6F24.unconfigured.pool.telekom.hu) (Ping timeout: 256 seconds)
[22:11:44] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Quit: phil294)
[22:13:22] *** Quits: sena (~sena@user/sena) (Ping timeout: 252 seconds)
[22:14:47] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 240 seconds)
[22:15:21] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:15:21] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:16:13] *** Quits: stoneware (uid515661@user/stoneware) (Ping timeout: 250 seconds)
[22:16:15] *** Joins: bjs (sid190364@user/bjs)
[22:16:17] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[22:16:39] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 250 seconds)
[22:16:59] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:17:24] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 272 seconds)
[22:17:53] *** Joins: stoneware (uid515661@user/stoneware)
[22:18:05] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[22:18:05] *** Joins: BlueShark (sid10311@user/blueshark)
[22:21:14] *** Joins: lunarkitty (uid501895@user/pyra)
[22:21:56] *** Quits: pufferfish (~pufferfis@182.70.229.195) (Quit: leaving)
[22:22:47] *** Quits: _daoistmonk (~daoistmon@113.90.179.18) (Remote host closed the connection)
[22:23:12] *** Joins: _daoistmonk (~daoistmon@113.90.179.18)
[22:27:05] *** Joins: hexingb (~hexingb@2409:8900:2940:7365:41ca:7385:3276:dd67)
[22:29:08] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net)
[22:29:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:31:32] *** Joins: plastico (~plastico@neomutt/plastico)
[22:31:50] *** Joins: snake (~snake@user/snake)
[22:32:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:33:59] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 250 seconds)
[22:34:34] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Ping timeout: 244 seconds)
[22:40:26] *** Quits: caef^ (~caef@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[22:40:56] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:41:24] *** Quits: inky (~inky@46.36.119.19) (Remote host closed the connection)
[22:41:38] *** Joins: inky (~inky@46.36.119.19)
[22:41:51] *** Joins: plastico (~plastico@neomutt/plastico)
[22:45:40] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:48:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:51:55] *** Joins: Auron (Auron956@user/auron)
[22:53:32] *** Joins: webNET4 (~0x100@32.211.211.39)
[22:53:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:59:07] *** Quits: Izem (~Izem@bras-base-london1483w-grc-30-74-12-157-86.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[23:02:06] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Read error: Connection reset by peer)
[23:03:44] *** Joins: andypandy (~andypandy@h-178-174-148-234.a163.priv.bahnhof.se)
[23:04:25] *** Joins: vysn (~vysn@user/vysn)
[23:05:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[23:07:14] *** Quits: Maker (~maker@70.18.215.45) ()
[23:08:09] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:a9d1:9a93:5493:f440)
[23:08:25] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 252 seconds)
[23:08:59] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[23:09:25] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[23:09:34] *** Quits: teut (~teut@106.212.2.35) (Quit: Connection closed)
[23:11:01] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:b1f6:39c7:2898:1aec) (Quit: Textual IRC Client: www.textualapp.com)
[23:12:00] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[23:12:06] *** Joins: SKI8040 (~SKI8040@177.12.40.77)
[23:13:05] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[23:15:34] *** Quits: codemin (~codemin@69.166.223.220) (Ping timeout: 252 seconds)
[23:17:12] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[23:18:18] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8457:f465:9db8:46f2)
[23:21:07] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[23:23:25] <SKI8040> OK
[23:23:29] <SKI8040> so
[23:23:39] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 244 seconds)
[23:23:46] <SKI8040> i'm about to make a script that will read a file using bitstream
[23:23:55] <SKI8040> a python script actually
[23:24:16] <SKI8040> using bitstream as a library on which to base my script on
[23:24:33] <SKI8040> are there any good ways to approach this?
[23:24:36] *** Joins: inky (~inky@5.77.147.123)
[23:25:40] *** Joins: meator (~meator@user/meator)
[23:26:25] *** Quits: cahoots (~cahoots@163.182.128.74) (Quit: leaving)
[23:28:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net) (Ping timeout: 256 seconds)
[23:29:12] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 245 seconds)
[23:32:08] *** Joins: arcatech (~arcatech@user/arcatech)
[23:32:32] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8938)
[23:32:37] <dodo> SKI8040: ask in #python ?
[23:32:57] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 244 seconds)
[23:33:29] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[23:34:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:35:08] *** Joins: Pickchea (~private@user/pickchea)
[23:41:02] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[23:41:33] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[23:42:13] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[23:43:01] *** Quits: inky (~inky@5.77.147.123) (Read error: Connection reset by peer)
[23:44:40] *** Joins: inky (~inky@46.36.119.19)
[23:45:16] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[23:45:44] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:37] *** Joins: Maker (~maker@70.18.215.45)
[23:50:28] *** Parts: SKI8040 (~SKI8040@177.12.40.77) ()
[23:53:35] *** Joins: plastico (~plastico@neomutt/plastico)
[23:54:49] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:55:09] *** Joins: flynn (~mcbloch@user/flynn)
[23:55:38] *** Joins: Maaaanu (~manuel@91.65.193.123)
[23:58:30] <Mangy_Dog> https://imgur.com/gallery/p74v2o2
[23:58:32] <bayaz> Title: The final scanning UI is finished. 
