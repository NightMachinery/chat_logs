[00:01:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:11:02] <ck_> rrl?
[00:11:43] <nij-> ? nope
[00:14:43] <ck_> https://www.sciencedirect.com/science/article/pii/089812219400218A
[00:16:31] <epony> camurla obscura
[00:16:47] <nij-> Oh, it's acl2 https://www.cs.utexas.edu/users/moore/acl2/manuals/current/manual/index-seo.php/ACL2____Common_02Lisp
[00:16:49] -ixelp- ACL2 - Common Lisp
[00:18:30] <epony> ln43(gone), it's the pkg specification in OpenBSD
[00:23:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:25:06] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[00:40:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:13:08] *** Quits: kevingal (~quassel@2001:770:c0:401:2925:bac0:faad:c07c) (Remote host closed the connection)
[01:14:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:16:27] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:17:01] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[01:27:09] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[01:37:11] <hayley> https://www.youtube.com/watch?v=aHPjBmusq8E
[01:37:12] -ixelp- [YTP] Sysbollocks 2 - YouTube
[01:44:57] * selwyn remembers when a greek ytp managed to get youtube banned in turkey for three years
[01:46:10] <hayley> lol
[01:47:08] <White_Flame> cool :)
[01:47:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:47:16] <White_Flame> (though not cool, but still lol)
[01:47:28] <selwyn> one of the greatest trolls ever
[01:50:28] <hayley> I recall one Greek YTP where the telemarketers go "Don't hit it on the table, you might break it!" "I'm going to break everyone in Greece!" 
[01:51:47] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[01:58:33] *** Joins: jeosol (~jeosol@user/jeosol)
[02:00:09] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[02:07:57] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:9003:ed0c:7525:f4b7)
[02:09:28] *** Quits: clintm (~user@98.20.67.102) (Ping timeout: 268 seconds)
[02:13:37] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[02:18:13] *** Joins: phantomics (~phantomic@71-218-126-185.hlrn.qwest.net)
[02:49:32] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[02:51:43] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:00:40] <lagash> for some reason I read that as yt-dlp, lol 
[03:02:05] <hayley> https://www.youtube.com/watch?v=Jnn9-xuwdqc
[03:02:05] -ixelp- [Greek YTP] Ο Άδωνις και ο Ζερβουδάκης κάνουν πολύ επιθετικό τηλεμάρκετινγκ - YouTube
[03:11:02] <hayley> "C is simple enough to be formally verified" l0l
[03:11:43] <hayley> pl: mind if I do some Baker posting
[03:11:54] <pl> feel free
[03:12:55] * hayley evil grins
[03:13:49] *** Joins: Buoy172 (~Buoy172@95.86.30.159)
[03:14:06] <hayley> Eh, idk any obtuse parts of C to make fun of. All I got is "Even though one of the goals of Ada was to enable a computer to construct (with human help) mathematical proofs that certain programs could meet certain specifications, the sheer complexity of the Ada language made the achievement of this goal so expensive that it cannot be routinely achieved. [...] The only hope for achieving some level of mathematical certainty about program
[03:14:06] <hayley> correctness is to require that the complexity of the language itself not get in the way of understanding the complexity of a program in the language. This means that the language should be amenable to a short denotational semantics, as has been achieved for languages such as ML and Scheme."
[03:14:58] <hayley> But then "While much remains to be done in providing proper specifications for software systems to avoid high-level hazards, there are a number of low-level hazards for which redundancy tools already exist, but which are not currently being used. We refer specifically to programming errors which cannot currently be caught by a compiler's typing system, but can be caught by a proper system of run-time type checking. Reducing these hazards does
[03:14:58] <hayley> not require millions of dollars of R&D for "specification languages" or theorem-provers, but simply requiring that existing run-time type-checks always be enabled."
[03:15:33] <hayley> So: one doesn't even need formal verification, just let that shit crash, instead of exposing a vulnerability.
[03:16:24] <hayley> Well, the first paper on "formal verification for c" does not seem too optimistic <https://trustworthy.systems/publications/nicta_full_text/7629.pdf>
[03:17:30] <pl> I'd say Ada is actually quite succesful, it's just that by the time it got released compilers became something expensive to sell, and for first few years there was an always-willing buyer (just like for Lisp Machines and Connection Machine)
[03:18:10] <pl> when the costs started to matter, one of the buyers pooled enough money to start an open source implementation that is now basis of one of the dominant commercial ones too
[03:18:16] <hayley> "We do not support references to local variables, goto statements, expressions with uncontrolled side-effects, switch statements using fall-through, unions, floating point arithmetic, or calls to function pointers"
[03:18:34] <lagash> Isn't there a formally verified subset of C though? At least one?
[03:19:00] <pl> There are specs for writing C that is easier to formally verify parts of
[03:19:03] <hayley> Seemingly, because the authors of that paper just gave a definition of that subset.
[03:19:05] <pl> Frama-C, MISRA C, etc.
[03:19:36] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-6F8B-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[03:21:30] <gilberth> I can simulate goto with for(;;) switch (pc) { .. } and I can simulate functions pointers with invoke (f, a) { switch (f) { case 0: return foo(x); case 1: return bar(x); ... } Now what?
[03:21:38] <hayley> And that paper seems to be by the seL4 people, so I expect they know what they're doing.
[03:22:45] <SAL9000> not sure about goto but function pointers by switch are significantly more constrained than the real ones -- the prover can statically see all possible invocations
[03:23:39] <gilberth> SAL9000: It can with function pointers, too. The set of functions whose pointer is taken from is known and finite.
[03:23:59] <SAL9000> yes but what if you do naughty things with the pointer values?
[03:24:34] <SAL9000> or get them from external (unverified) code which might do naughty things
[03:24:40] <gilberth> Like what? Cast them? Perhaps forbidden. Note that unions are also forbidden.
[03:25:42] <SAL9000> (funcptr + 1)("oops");
[03:25:46] <SAL9000> might be forbidden too though
[03:25:57] <gilberth> SAL9000: I doubt that getting pointers from external sources is within the scope of what hayley cited.
[03:26:46] <SAL9000> getting *data* from external sources might be and locking out function pointers makes that significantly safer, I think
[03:27:07] <SAL9000> if your API "I/O" is limited to integral non-pointer types you can't do much with your language
[03:27:16] <hayley> But there are interesting bugs that can be avoided by just checking your damn bounds, rather than theorem proving.
[03:27:36] <hayley> Apparently the pkexec bug involves argc == 0, but I haven't read into it much. 
[03:28:16] <gilberth> SAL9000: Is pointer arithmetric on function pointers even defined with C? Cannot be. At least it's UB.
[03:28:26] <SAL9000> probably UB or forbidden, no idea
[03:29:07] <gilberth> SAL9000: I don't need pointers. I'll could do the old school way and have a large static array for my heap.
[03:29:41] <SAL9000> if prover can guarantee bounds checks on that? should still be safe
[03:29:44] <gilberth> int car [10000], cdr [10000]; /* Look mum, no pointers needed */
[03:29:54] <hayley> Another thing is just to avoid the hazard, but I'd make Unix weenies flame at me if I said getting root is probably unnecessary.
[03:30:23] <hayley> No suid programs -> no way to exploit them.
[03:30:51] <SAL9000> *less* suid programs, and less-complicated ones
[03:31:13] <gilberth> SAL9000: Well, it has its limits and depends on what is regarded as "safe". I could write a CPU emulator in whatever safe language and then go from there. :-)
[03:31:29] <SAL9000> That's true :)
[03:33:11] <hayley> gilberth: Suppose I've mentioned the "pointer bugs in C programs compiled to WebAssembly" paper enough times?
[03:33:32] *** Parts: Buoy172 (~Buoy172@95.86.30.159) ()
[03:33:34] <gilberth> hayley: idk.
[03:33:54] <hayley> https://arxiv.org/abs/2111.01421
[03:35:15] <gilberth> Frankly I don't see the point. You could write a completely safe C implementation. The ISO C standard provides for that.
[03:36:11] <gilberth> Begins with that (int)(char*)p could be implemented by returning some object id or hash or whatever.
[03:37:55] <gilberth> Unions could be implemented in a safe fashion. When you have union { int x; void *p; } and just stick dynamically typed values into the perhaps shared slot, you're fine. Or have two separate slots to begin with. Bonus points, when you remember whether 'x' or 'p' was written and has a defined value.
[03:41:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[03:41:44] <gilberth> For those unions I did that approach with compiling TeX to CL. I was a bit paranoid about the compiled program doing the right thing and checked variant violations. Like writing 'p' and then reading 'x'. This way I found <http://clim.rocks/gilbert/tex/bug.txt>
[03:42:24] *** Quits: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[03:43:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:44:47] * mfiano made first patch to SBCL for a big performance increase :)
[03:44:57] <gilberth> ZETA-C also is completely safe being compiled to Lisp. <http://bauhh.dyndns.org:8000/gilbert/zeta-c.pdf>
[03:45:34] <hayley> You could, but practically...
[03:45:47] <gilberth> What practically?
[03:45:56] <hayley> mfiano: Welcome to the club!
[03:46:25] <mfiano> displaced array adjustment is 2x as fast in my tests, and no longer conses a ton
[03:46:29] <hayley> Practically, your compiler is not Zeta-C.
[03:47:09] <gilberth> hayley: Mine? I have a compiler like that, but I don't have a libc.
[03:47:28] <hayley> ...and if it is your compiler, you did not use it to compile PolKit.
[03:48:01] <gilberth> hayley: It's pretty mood. C has changed. C compilers these days do some type checking.
[03:48:25] <gilberth> hayley: Whatever PolKit is and whyever I would want to compile it.
[03:48:30] <hayley> Still "some".
[03:48:48] <hayley> It's the thing with the argc==0 bug in it.
[03:49:51] <gilberth> You can cast. But C code today has prototypes and doesn't expect that you could cast a pointer to an int.
[03:51:15] <gilberth> And usually you don't find that untyped code any more. Heck, 20yo C code doesn't even compile with GCC anymore.
[03:52:40] <pl> gilberth: I know someone who implemented C in Perl, it apparently passed ANSI test suite, but nothing actually worked :D
[03:53:19] <gilberth> pl: Had he a full libc?
[03:54:00] <pl> gilberth: Don't recall if full, but enough to theoretically cover the apps they tried to compile
[03:54:15] <gilberth> What did they try?
[03:54:19] <pl> thing is, he went bare minimum ANSI on things like pointers
[03:54:28] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[03:54:39] <gilberth> ANSI or ISO?
[03:54:52] <pl> gilberth: I think it was back with ANSI, or ISO C89
[03:55:07] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:55:11] <gilberth> See. Years have passed.
[03:56:21] <hayley> gilberth: https://www.youtube.com/watch?v=aHPjBmusq8E
[03:56:22] -ixelp- [YTP] Sysbollocks 2 - YouTube
[03:56:28] <gilberth> You really can't expect to be able to compile C code from the 80s today. It's a major pain to get those programs running even with gcc.
[03:57:02] <pl> gilberth: I don't know exactly the test vectors, but they claimed to support the same language version
[03:57:45] <pl> this was done, afaik, in 1990s
[03:58:12] <pl> (early 2000s they fucked off from software and computers and went teaching english in china before going back to computers in last few years)
[03:58:24] <gilberth> So 30yo ago.
[03:58:45] <pl> anyway, version of standard was contemporary to software they tried to run
[03:58:56] <pl> turned out a lot of stuff depended on UB ;)
[03:59:39] <gilberth> Yes, but as I said, you will have fun porting 90s C code to todays compilers and platforms too.
[04:01:07] <gilberth> Begins with that C compilers for 64-bit platforms decided to break the sizeof(int)=sizeof(void*) assumption.
[04:01:29] <pl> that afaik depends on specific platform
[04:02:03] <gilberth> Hmm, are there platforms where int is 64-bit?
[04:02:10] <pl> gilberth: IIRC yes
[04:02:19] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[04:02:25] <gilberth> What is short then 32-bit?
[04:02:44] <pl> ¯\_(ツ)_/¯ possibly
[04:02:48] <pl> then you could have short short
[04:02:57] <gilberth> Anyhow, I believe it was ANSI, which said that 'int' should match your word size. So 64-bit would have been the more logical choice.
[04:03:10] <gilberth> pl: short short? lol
[04:04:00] <gilberth> or rather a 'double char'?
[04:07:50] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[04:13:54] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:24:50] *** molson_ is now known as molson
[04:27:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[04:28:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:46:02] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:11:16] * hayley tries to avoid disagreeing with a guy with a PhD in formal methods or something.
[05:11:44] <hayley> "If someone is too lazy to learn a safer language (e.g., SPARK Ada), then they’ll probably be too lazy to be careful in how they write their C code." But my point is that being lazy should not lead to heap corruptions.
[05:12:27] <moon-child> gilberth: 'Is pointer arithmetric on function pointers even defined with C?'  there's syntax for it, at least: int (f[5])(int, int)
[05:12:31] <White_Flame> being lazy leads to haskell
[05:12:39] <hayley> The point in "Dubious achievement" is just that unsafe code comes out "naturally" and tends to be shorter and more "elegant" when bounds checks must be explicit.
[05:13:29] <pl> moon-child: I believe every pointer arithmetic that doesn't point to an array is illegal
[05:14:07] <moon-child> pl: sure, but above is syntax for creating an array of functions (note: not function pointers)
[05:14:49] <pl> yes, but then it's an array of references to functions, and the array can be traversed by arithmetic on its reference, but not anything else
[05:15:04] <moon-child> what is a 'reference' to a function?
[05:15:48] <moon-child> note above is very similar to int (f)(int, int), which is the same as int f(int, int)
[05:16:13] <pl> moon-child: whatever that you can pass as pointer. I used the term reference due to the fact that you do not have to implement pointers as memory addressess in order to pass ANSI
[05:16:42] <hayley> Okay, seems we don't disagree. Phew.
[05:17:35] <moon-child> pl: spec distinguishes 'objects'; an object is a value which has a location; perhaps that is what you refer to?
[05:17:40] <moon-child> but: a function is not an object
[05:17:48] <moon-child> even though you can create a pointer to it
[05:18:17] <gilberth> moon-child: Only because there is syntax for it doesn't make it even a legit C program. I am too lazy to read the standard now, but all my C compilers refuse to compile an array of functions.
[05:20:02] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[05:20:08] <gilberth> Besides, how would you get functions into that 'f' array?
[05:21:35] <gilberth> There is no way in C how you get even get at a function. When you say int (*f)(int) = foo; you get a pointer. The * unary operator on function pointers is a nop. That is *f yields a the very same function pointer.
[05:32:53] *** Joins: notzmv (~zmv@user/notzmv)
[05:35:26] <moon-child> gilberth: indeed.  It doesn't make sense
[05:35:31] <moon-child> the main problem is: what is the size of a function?
[05:40:29] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:12:05] <hayley> I'm going with 3
[06:13:49] <dave0> maw hayley 
[06:17:47] <sm2n> I'd say it's closer to 3.5
[06:23:24] <hayley> https://www.youtube.com/watch?v=IpnHx19tHNI
[06:23:25] -ixelp- My Shadow In Vain (Live 79) - YouTube
[06:31:24] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:9003:ed0c:7525:f4b7) (Remote host closed the connection)
[06:31:58] <moon-child> I don't really get https://gankra.github.io/blah/deinitialize-me-maybe/
[06:31:59] -ixelp- Destroy All Values: Designing Deinitialization in Programming Languages
[06:32:25] <moon-child> it leads by saying  'so you need to manage resources.  How you gonna do it?  GC?  Works for memory, but not for other resources'
[06:32:28] <moon-child> which sounds fine
[06:32:58] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[06:33:17] <moon-child> but the entire rest of it talks about avoiding copies, which--copying is not a super meaningful operation for files, locks, ...
[06:33:19] <moon-child> only on memory
[06:34:26] <gilberth> man cp
[06:34:47] <hayley> "Watch me"
[06:34:56] <moon-child> gilberth: file descriptor, not file record, obviously
[06:35:05] <gilberth> man dup
[06:35:10] <moon-child> listen, you
[06:35:47] <hayley> Copying is not meaningful for most objects, either.
[06:36:17] * hayley watches a "Don't write clever code." video by a guy with a shirt that says "Mind repeating that in C?"
[06:36:20] <moon-child> copy slots?
[06:36:31] <hayley> Well, good luck maintaining his code anyway. 
[06:36:47] <hayley> Sure, you can do a shallow copy. But should the slot values be recursively copied?
[06:36:56] <moon-child> yes
[06:37:01] <moon-child> shallow copy is not well defined, I agree
[06:37:21] <hayley> Hm.
[06:37:34] <hayley> I can redefine classes in CL though. Should I copy classes of objects? (Probably not.)
[06:37:52] <moon-child> hmm
[06:37:55] <epony> actually you want the cleverest of all computing, that is only achievable with cleavage and rest (or clever coding0
[06:38:09] <epony> )
[06:38:16] <gilberth> What is your definition of equality today?
[06:38:41] <moon-child> gilberth: https://plover.com/~mjd/misc/hbaker-archive/ObjectIdentity.html
[06:38:42] -ixelp- ACM OOPS Messenger 4, 4 (Oct 1993), 2-27
[06:38:46] <hayley> "If I diddle one object, I should see the same diddling in the other"
[06:39:01] <hayley> "...if they are the same object."
[06:39:34] <epony> the definitions of equality are typically in the measurement of speed of light set of experiments
[06:39:44] <moon-child> gilberth: but the job of 'copy' is to generate a non-equal object
[06:40:03] <gilberth> non-equal or non-eq?
[06:40:29] <moon-child> I said non-equal, not non-EQUAL :)
[06:40:32] <epony> or for common folk, propagation delays in digital logic circuitry and edge cases of metastability
[06:40:42] <moon-child> or, let's use english.  Identical vs same
[06:41:34] <gilberth> German would have been more precise as we have two words for "same" :-p
[06:42:04] <gilberth> moon-child: I was not serious.
[06:43:47] <gilberth> But yes, dup(2) or fork(2) do not copy file descriptors. They are references to the same shared underlying thing.
[06:56:07] *** Joins: jeosol (~jeosol@user/jeosol)
[07:02:59] <hayley> https://social.xenofem.me/notice/AFqvU9J6oLv8qLYebg
[07:03:17] <hayley> "few know this but Symbolics Inc. was a front for an insurrectionary affinity group"
[07:12:42] <hayley> https://squeak.myspreadshop.com/ squeak shop
[07:12:43] -ixelp- Squeak Foundation
[07:26:26] * moon-child squaks
[07:26:28] <moon-child> squeaks
[07:38:01] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[07:47:15] <hayley> https://www.youtube.com/watch?v=6RKjzC7Tg-4
[07:47:16] -ixelp- Bike - YouTube
[07:51:16] <hayley> Gees, I feel like shit now. I felt like I've bothered my grandparents enough, but I can't move back home cause my shitty dad is there.
[08:01:36] * hayley takes it to ye olde children's helpline (despite being 20).
[08:01:58] <moon-child> hayley: good luck
[08:02:02] <hayley> "Want to talk to others going through challenges ✨just like you✨?" No, they're probably as repulsive as I.
[08:02:40] <hayley> moon-child: Yeah, well, first I have to wait in line. Must be bad, because they don't even have a "you're gonna wait this long" message to get wrong.
[08:02:54] * hayley puts https://www.youtube.com/watch?v=L1XohGWRQSQ on jukebox
[08:07:20] <mfiano> yay https://sourceforge.net/p/sbcl/mailman/message/37599018/
[08:07:22] -ixelp- Steel Bank Common Lisp / [Sbcl-devel] Patch: Speed up displaced array adjustment
[08:14:26] *** Joins: semz_ (~semz@user/semz)
[08:14:49] <hayley> Hm, it asked me if I wanted to keep waiting, and that I could make a phone call instead, which apparently is faster. Someone failed at balancing supply with demand?
[08:17:00] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[08:17:34] <hayley> Oh, there is a progress bar at the top. Apparently I'm 60% the way through the queue. Hm.
[08:18:25] <moon-child> 60% of the way through the queue?  What a useless metric
[08:18:29] <hayley> 75% now. /me is using inspect element to get percentages, apparently.
[08:18:33] <moon-child> who knows how big the queue is?
[08:18:46] <hayley> That's the point.
[08:18:56] <moon-child> and: if they know how big the queue is, why can they not just tell you how close you are to the front?  Do you care how many people are behind you?
[08:19:21] <hayley> https://www.reddit.com/r/masterhacker/comments/iukycn/forb_counted_me_as_a_suspect_so_i_told_him_to/
[08:19:22] -ixelp- forb counted me as a suspect so i told him to fuck off. my man got mad salty lmaoo : masterhacker
[08:19:33] <hayley> I'll bring it up, after I get my actual problem sorted out.
[08:20:39] <hayley> 1/8 to go.
[08:21:04] <hayley> It also says "Not long to go", "Almost there", and so on. I guess you don't want people hurting themselves over how long the line is.
[08:21:45] <moon-child> Such things always seem trite to me.  But I don't know how they affect other people
[08:22:44] <sm2n> Having some form of feedback from the system no matter what it is is psychologically important
[08:23:00] <moon-child> Sure
[08:23:30] <hayley> I'm used to queue time predictions being complete shit, but as a rule of thumb you sure hope most people don't have to go queue for a helpline.
[08:23:36] <hayley> Now it's "Get Ready"!
[08:23:44] <hayley> "Get Hyped!!!"
[08:23:45] <moon-child> sm2n: but when that feedback is demonstrably fake, the user loses trust in the system
[08:23:54] <moon-child> that's not to say that you can't fake it
[08:24:06] <moon-child> cuz there's literally no real-time graphics that's not faked in some respect or other
[08:24:19] <moon-child> but 'almost there' is not really nice feedback
[08:24:28] <hayley> https://i.redd.it/e2d20pxnnoj61.png
[08:24:36] <hayley> Oh, it went back to "Almost there". lmao
[08:25:35] <sm2n> moon-child: Yeah, I see what you mean. But I think for this it's not about being factual i.e "almost there" is not in reference to "almost there to the front of the queue", but rather "almost there to getting some help", in which context I think it makes sense?
[08:26:05] <sm2n> Encouragement is not an ETA
[08:26:13] <hayley> "I got ready but then it said 'almost there' and now I'm burnt out" *quits*
[08:26:19] <moon-child> sm2n: sure.  Again: I find such things trite, I have no idea how other people find them.  Matter of taste
[08:26:28] <moon-child> gustibus non est disputandum!
[08:26:33] <sm2n> hahaha
[08:27:46] <moon-child> hayley: you joke but that actually happened to me kinda.  When I was like 10 I would go out bicycling w/my dad and he would always encourage me on hard hills; I always found it annoying and discouraging rather than motivationg
[08:28:17] * hayley is in
[08:28:57] <sm2n> moon-child: No, I agree. But it works in general. I think people who spend a lot of time around tech react differently to automated messages in general — for example, I immediately tune out when I notice something is templated etc, but most people I know who aren't too tech literate don't, and I don't think it's just because of the knowledge that it is, indeed, they behave the same way even if
[08:28:58] <sm2n> you verifiably show them how to identify the tells yourself.
[08:42:04] <White_Flame> yeah, I overheard my mom try to ask an automated menu to do two things at once
[08:42:37] <White_Flame> obviously she knew it was a robot, but the expectations are totally different
[08:45:24] <hayley> "Well, it happened on Sunday so it must all be sorted."
[08:51:54] <hayley> Interesting, https://smalltalkzoo.thechm.org/bootstraps/SysDefs%20St-76.PDF uses a quote character before literal symbols.
[08:52:43] <White_Flame> smallisp talk?
[08:53:01] <hayley> Or not, it is just a normal string and there is another ' at the end.
[08:53:19] <hayley> White_Flame: That's the language I'm working on.
[09:00:15] <hayley> So far I've just been told I can call emergency services, if things get very bad. Yeah thanks.
[09:04:11] <sm2n> seems kinda useless
[09:05:49] <sm2n> mfiano: I'm not sure how the sbcl workflow works, but usually you want to submit a patch created with git-format-patch to mailing lists, not a plain diff. If you weren't aware, the difference is that a plain diff just shows the difference between two files, but git patches describe full commits, with rich metadata.
[09:06:49] <sm2n> Congrats though! I probably use displaced arrays more than I should, so any change that speeds them up is a welcome one for me.
[09:06:54] <mfiano> sm2n: I kind of figured, but hopefully they can figure it out. I actually tried git-format-patch first, but it didn't produce any output.
[09:07:07] <sm2n> mfiano: did you commit your changes?
[09:07:11] <mfiano> yeah
[09:07:21] <hayley> It dumped out a file in my SBCL directory for me.
[09:07:37] <sm2n> ^ this is what it is supposed to do
[09:07:49] <sm2n> you get a file per new commit
[09:07:57] <mfiano> I am not familiar with creating git patches so i probably messed something up. with the -o flag, it created the directory but it's empty
[09:09:02] <sm2n> To be honest I use magit and am not too familiar with the mechanics of manually specifying everything in git
[09:09:28] <sm2n> but then my guess would be that you didn't specify the revision to start from correctly
[09:10:21] <mfiano> I'll post again, using magit this time. I honestly have no idea why I didn't try using magit for this. That's how I usually create patches. I was doing a lot of debugging at the time so my mind was probably gone.
[09:12:24] <hayley> Now I am being lectured on self-care. I thought the idea was I mentioned it and my dad would disappear.
[09:12:26] <hayley> Damn.
[09:13:28] <hayley> .oO(Should I just find an apartment at this rate?)
[09:14:16] <sm2n> wow that hotline seems useless
[09:14:31] <hayley> " What are your thoughts about connecting with your own professional support? Like a private therapist? " With all due respect, I'm not the one that needs a therapist.
[09:15:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:17:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:17:18] <hayley> They took that answer quite well. Probably supposed to.
[09:17:28] <sm2n> Did you actually say that?
[09:17:39] <hayley> Yes.
[09:17:50] <sm2n> impressive
[09:19:15] <hayley> https://www.youtube.com/watch?v=Nm4vxE5xY_k
[09:19:15] -ixelp- Call An Ambulance, But not fOr MeE - YouTube
[09:19:19] <hayley> "What do you think about reconnecting with us again when suitable so we can continue to support you with your current situation?"
[09:20:39] <mfiano> sm2n: sent
[09:20:46] <hayley> "when you're ready, we're here" And I'm here. So?
[09:20:53] <mfiano> Thanks for the heads up
[09:21:06] <hayley> Should I be asking someone else? Should I ask if I should be asking someone else?
[09:21:19] <mfiano> what do you expect from a "self" help hotline
[09:21:49] <hayley> I expected help with my prototype OO code, of course. 
[09:22:49] <mfiano> They are going to either tell you to talk to them to prevent any self harm, or to grow up and get your own place, or both, depending on how old you are of course.
[09:23:13] <sm2n> mfiano: seems it hasn't shown up on the archive yet, but nice. I assume it was easy with magit?
[09:23:21] <mfiano> Yeah
[09:23:21] <hayley> "If you're unsure about your options because of your dad we can support you then and explore further options for you" But I'm unsure of my options _now_?
[09:24:13] * hayley just made the usual joke about the Racket top level. Now, about this counsellor...
[09:24:42] <mfiano> sm2n: Yeah I noticed that the web frontend takes like 20 minutes to update compared to the email.
[09:25:16] <mfiano> sourceforge never fails to disappoint me. (why are we still using this dated technology)?
[09:25:57] <sm2n> especially after their thing with malware
[09:26:18] <mfiano> Yes
[09:26:36] <sm2n> I assume the reason is that it would be effort no one cares to put in to migrate for no real benefit considering that the active developers will never have to access the site
[09:26:52] <hayley> The counsellor has really missed the part where I am up shit's creek without a paddle right now, and not tomorrow.
[09:27:07] <mfiano> and launchpad is one of the worst ux/ui i've used
[09:27:55] <sm2n> oh your patch showed up
[09:27:56] <hayley> "Take some time for yourself and if you're needing further support we're here" Oh for fuck's sake.
[09:28:14] <sm2n> hayley: is this a government thing or a private thing?
[09:28:18] <sm2n> the helpline, I mean
[09:28:24] <hayley> Government thing.
[09:28:32] <sm2n> yikes
[09:31:40] <mfiano> Yup showed up here now. Time to go to bed.
[10:01:35] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:04:48] <hayley> I _could_ call the Child Protection Crisis Line, but I am not that definitely in shit right now. And idk if their definition of "child" is that of the helpline, admittedly.
[10:06:28] <hayley> "In addition, any person who believes on reasonable grounds that a child needs protection can make a report to Child Protection. " Can I report for myself?
[10:08:25] <White_Flame> at this point, I'm pretty sure you're going to have to go more for homeless style assistance, not child :-/
[10:08:34] <hayley> Damn.
[10:08:39] <mfiano> Are you 12 or under?
[10:09:06] <hayley> 20.
[10:09:12] <mfiano> Then you're not a child, in Australia.
[10:09:27] <hayley> That probably helps.
[10:10:06] <White_Flame> you're an adult, and so is your dad.  this is not a parent/child situation anymore, but between adults
[10:10:19] <mfiano> You're not even a "Young Person". You're an adult.
[10:10:58] <White_Flame> you should have legal possession of the things you've purchased yourself that are at the house, at least.  You don't really have that as a minor
[10:11:18] <aeth> what's going on?
[10:12:34] <White_Flame> incompatible living situation, it seems
[10:15:54] <hayley> @aeth: I'm away from home, and if I go home, I will get in deep shit with my dad.
[10:16:20] <hayley> And I can't say people seem very happy with my presence here.
[10:16:21] <aeth> sounds like an awful situation
[10:17:12] <ck_> what lead to all this?
[10:20:54] <hayley> It's domestic abuse of some sort, right?
[10:21:07] <hayley> @ck_ An argument over finding a fault in an AV system.
[10:25:10] <ck_> that sounds like the last drop, but what filled the bucket?
[10:30:46] <hayley> No idea.
[10:34:59] <ck_> hard to believe
[10:35:18] <ck_> anyway, good luck. maybe student housing is a good option
[11:10:50] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:11:42] <hayley> Thanks. /me also spots domestic abuse hotline, which may be less hopeless.
[11:13:04] <hayley> Eventually I should come out to my mother, but I can't do this all at once.
[11:13:07] * hayley sighs
[11:15:58] <hayley> There is another hotline I can contact. Let's see how useless that is.
[11:17:48] <hayley> Hey, I'm first in this queue.
[11:24:43] *** Joins: shka (~herr@109.231.0.226)
[11:33:20] <hayley> "This one gets it more than the last one - if I keep going at it, eventually one will put my dad away."
[11:33:38] <ck_> "come out to" in what way?
[11:34:01] <hayley> I can only think that I'm writing some of the darkest jokes I've ever written.
[11:34:08] <hayley> ck_: For being a trans woman. Not sure how to bring it up.
[11:34:39] <hayley> OTOH my dad is very outwards about being racist and sexist, and those things tend to correlate. So having him gone probably helps.
[11:34:39] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[11:35:48] <ck_> your mother doesn't know this?
[11:36:02] <hayley> Nope.
[11:36:54] <hayley> There is a lot of fudging to make this work. I don't enjoy do that. Nor do I enjoy having to shave all the damn time, which ends up being futile if I ever have to appear in person without a face-mask, since I can't get rid of it.
[11:37:48] <hayley> I don't mean to bother anyone on #lispcafe, but the latter is torture. I can do the former, as my parents are not very computer literate, and I'm mostly out to people who I talk to over computers.
[11:41:08] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[11:44:41] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[11:44:45] <ck_> shaving all the time is futile once face masks are gone? what.
[11:45:07] <hayley> I mean, I can't get rid of my facial hair.
[11:45:09] <ck_> anyway I don't really need to know that. Just one thing
[11:45:10] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:45:47] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Remote host closed the connection)
[11:46:06] <hayley> I can remove enough so that you can't see it on camera (how I survived the Coffee Compiler Club), but it's still obvious in person. Don't like it at all.
[11:46:10] <ck_> you're talking about hotlines and support groups, and then "putting someone away". If it really is that urgent, or criminal activity is happening, don't phone up hotlines -- go to the police
[11:47:27] <neominimum> You're no bother. I only check in time to time to mosty lurk while I'm doing other things but the topic says one can  chat about anything, so... It's helpful to have an outlet.
[11:48:40] <ck_> I can recommend a full beard, then you don't need to shave all the time either
[11:49:22] <dave0> hayley: i lived in a room at the pub for a year.. if you've got some money it might be an idea to explore
[11:51:19] *** Joins: humasect (~humasect@d24-235-181-179.home1.cgocable.net)
[11:52:26] <hayley> ck_: Yeah, but I need to know if I actually have a case for the police to do anything. I was told I didn't, but apparently now I do.
[11:54:24] <ck_> told by who? The police will tell you if what you describe is a case or not, if you think police intervention is required, don't get that determination from somewhere other than the police -- that's my recommendation anyway
[11:55:02] <hayley> My mother seems to have thought that there's only a case if either he is going to do it pretty soon, or he actually went through. Now I'm told that what has happened does suffice.
[11:55:05] <hayley> I guess so.
[11:55:13] <hayley> I'm also terrified of talking with the police.
[12:04:24] <neominimum> I imagine unless your father has committed an arrestable offence the police aren't going to come along, pick him up, and just take him away. Are you and your mother on the same page regarding your dad's behavior? You may not like the thought of  talking to the police, so can you both go together? It may help to have a unified front.
[12:05:08] <hayley> She is going to be busy for a while. Apparently I have grounds for an intervention order, idk.
[12:05:46] <hayley> I should also mention that, while he has not threatened violence on anyone else, he is also as verbally inflammatory towards my mother and younger brother.
[12:07:19] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:12:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[12:14:02] <neominimum> I believe one can submit an application for an intervention order online (I'm talking in Australia) but the police can also submit them on your behalf. They will be able to judge whether the specifics of your situation warrant an intervention too. Getting this sorted is no more complex than simply walking through the front door of your closest police station and requesting to talk to someone.
[12:14:51] <hayley> That's what I've been told.
[12:15:02] <hayley> Well, not the online part. Hm.
[12:18:34] <neominimum> Google the process for your state, but the short is, if you can't wait any longer then go to the police. The majority are friendly and compassionate and know the process better than you will right now.
[12:19:26] <neominimum> gotta head out, good luck!
[12:19:28] <hayley> I would, but I am waiting for confirmation from my mother. She is still at home, with my father and my younger brother. I am not going to start anything which might indirectly hurt them before then.
[12:19:33] <hayley> Sure.
[12:35:09] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[12:35:51] <selwyn>  hayley: sorry to hear about your troubles
[12:45:56] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Remote host closed the connection)
[13:09:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[13:11:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:16:21] <hayley> I got an apology from my father, but I don't believe it at all.
[13:17:17] <hayley> I asked why I should believe he won't start something new in six months, referring to the last time it happened, and he said cause he'd have left by then.
[13:17:41] <hayley> That's so not the point. If his answer is "I literally can't hit you, I'll be on the other side of town"...that doesn't say anything good about his intentions at all.
[13:23:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:28:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[13:28:18] <hayley> Guess I am proceeding as usual then.
[13:51:47] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Quit: WeeChat 3.3)
[14:00:42] <shka> https://www.youtube.com/watch?v=F4LYxaZGwK4
[14:00:43] -ixelp- TGR Jane V2 CE | 40g Clickiez™ | GMK Olivia++ | Sound Typing Test| [8K ASMR] - YouTube
[14:00:51] <shka> shame about the price 
[14:02:16] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[14:07:07] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Ping timeout: 256 seconds)
[14:07:41] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 256 seconds)
[14:07:45] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[14:07:45] *** Joins: kevingal (~quassel@149.157.101.196)
[14:09:26] *** Joins: selwyn (~selwyn@user/selwyn)
[14:11:39] *** Quits: jeosol (~jeosol@user/jeosol) (Ping timeout: 256 seconds)
[14:12:19] *** Quits: kevingal (~quassel@149.157.101.196) (Ping timeout: 250 seconds)
[14:12:49] *** Joins: kevingal (~quassel@hamilton-nat.nuim.ie)
[14:17:01] *** Quits: kevingal (~quassel@hamilton-nat.nuim.ie) (Ping timeout: 245 seconds)
[14:17:32] *** Joins: kevingal (~quassel@2001:770:c0:401:dd75:adc5:c248:9cdf)
[14:40:03] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[14:49:01] *** Joins: dickbar__ (~dickbaren@dyndsl-085-016-151-208.ewe-ip-backbone.de)
[14:51:25] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:51:43] *** Joins: mzan (~quassel@mail.asterisell.com)
[14:54:33] *** Quits: dickbar__ (~dickbaren@dyndsl-085-016-151-208.ewe-ip-backbone.de) ()
[15:00:11] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[15:10:25] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:11:37] *** Quits: OlCe (~user@amarseille-656-1-684-224.w90-8.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:47:31] <gilberth> Good morning #lispcafe!
[15:48:34] <hayley> pl: "Common Lisp is not an option because GC, etc. Ada, Pascal might be good, but unfortunately absolutely unpopular. Mb Fortran or even Jai. But IMHO C is still good enough." I am dying here
[15:50:43] <hayley> It is a "gimme root" service and this guy cares for performance or something. How often do you do that? Hint: you spawn a process once...
[15:50:44] <scymtym> has the Jai compiler even been released yet? 
[15:50:45] <dave0> maw gilberth !
[15:51:30] <gilberth> Hello dave0, thanks for the space.
[15:51:53] <dave0> gilberth: you must have a few by now!
[15:52:01] <dave0> spaces that is
[15:52:20] <gilberth> dave0: Yes, I could stash more, spaces compress well.
[15:52:34] <hayley> @scymtym I was gonna ask how Jai handles safety (I know, you just git gud skrub) but then I saw the C part.
[15:53:16] <hayley> Is this guy lost? I thought it was a stupid error that only happens in C. OTOH if you like Jai you probably don't believe good programmers write bugs ever.
[15:53:29] <scymtym> hayley: "crashes are fine, you just debug the problem and restart" would be my guess
[15:54:23] <hayley> lol
[15:55:12] <hayley> The problem is that you don't get a clean crash without -fsanitize=memory or the like. (And even then, idk if it'll trip all the time, never tested it.)
[15:57:46] <hayley> IIRC the philosophy of gameshits is that ye only write bugs if you a. make pointer soup and/or b. are an incompetent programmer and should be fired.
[16:02:03] <scymtym> don't use any libraries, don't make mistakes and you will have no bugs. bonus benefit: you don't need tests
[16:02:59] <hayley> Wow thanks!
[16:04:43] <ck_> I just cut that short and don't program anything
[16:05:12] <ck_> joke's on me though, now I have failing CI pipelines and inconsistent kubernetes deployments
[16:14:01] <hayley> Oh well, I asked what they do in Jai. inb4 "the compiler fires you" or something
[16:15:32] <hayley> But still IMO type systems, verification, etc aren't necessary. Just eat your vegetables and use runtime bounds checks.
[16:15:55] <hayley> *necessary for avoiding the pkexec exploit. They can be useful elsewhere, of course.
[16:16:09] <Gnuxie> compiler deadlocks and puts your computer in a blocklist 
[16:16:56] <hayley> Gnuxie: remind me to tell beach to make sure SICL won't run on Jon Blow's computer tomorrow pls
[16:16:59] <Gnuxie> can we have this in the next SBCL update for use of safety 0 please 
[16:17:38] <hayley> Well I am screwed, as OMRN generates (safety 0) code. I can also prove that the generated code won't go out of bounds.
[16:18:16] <Gnuxie> that's what they all say 
[16:18:23] <Gnuxie> well, some of the time at least
[16:18:43] <hayley> Either I do a bounds check just before the AREF, or I do a bounds check covering at least N transitions somewhere before doing N transitions.
[16:18:55] <sham1> It should be fully provable for a regular language
[16:18:58] <hayley> Sure they do.
[16:19:31] <hayley> It is.
[16:19:48] <scymtym> hayley: the SB-C:INSERT-ARRAY-BOUNDS-CHECKS declaration would be a less blunt instrument if you only need to omit the bounds checks
[16:20:04] <sham1> Yeah, since no pesky halting problem to get in the way
[16:21:05] <hayley> Sure, thanks.
[16:21:53] <hayley> I could probably move type and initial bounds checks into the generated FSM code, as I end up doing some before calling anyway.
[16:22:14] * hayley lives life very dangerously with the code cache.
[16:33:32] *** Quits: shozo (~user@178.74.52.55) (Remote host closed the connection)
[16:44:10] <contrapunctus> TFW the software metronome you're using has uneven timing
[16:55:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[16:58:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:58:54] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[17:08:07] <vms14> guys do you have some advice on how shold I provide ffi?
[17:08:33] <vms14> I have s7 scheme in android and using java jni to provide access to android functions
[17:09:12] <vms14> https://termbin.com/e08q 
[17:09:16] <vms14> https://termbin.com/eh75
[17:09:59] <vms14> I can die with jni and provide ffi bindings from C for every function I want to make it accessible
[17:10:59] <vms14> but I think it's better to just provide the jni functions to that scheme so scheme can define functions that call the jni ones, it means the ffi is provided by scheme code
[17:11:42] <vms14> and as this scheme let's you add new types from C I can put a java object as a "native" type in this scheme
[17:16:49] <vms14> the best approach seems to be to provide bindings for (*jni)->GetMethodID and the other functions, so scheme creates the bindings and can save a list of methods or whatever as it seems I should "save" the method id because they say it's "expensive" to get it 
[17:17:24] <vms14> but maybe you have better ideas
[17:18:44] <vms14> also there is no namespace sense in this scheme, but environments are first class objects, and macros... "everything" in s7 is a first class object, so I think I should use environments to provide the sense of "modules" or alike
[17:19:50] <vms14> btw documentation about s7 scheme is in https://ccrma.stanford.edu/software/snd/snd/s7.html
[17:19:52] -ixelp- s7
[17:37:20] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:58:45] *** Joins: shozo (~user@178.74.52.55)
[18:06:59] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[18:20:24] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Remote host closed the connection)
[18:23:41] *** Joins: jeosol (~jeosol@user/jeosol)
[18:33:40] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[18:40:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:44:51] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:48:04] *** Quits: humasect (~humasect@d24-235-181-179.home1.cgocable.net) (Remote host closed the connection)
[18:49:14] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[19:09:16] <Aurora_v_kosmose> netpbm seems nice indeed.
[19:18:51] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[19:21:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[19:23:46] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 260 seconds)
[19:33:55] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[19:34:45] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[19:35:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[19:48:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:54:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[19:56:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:06:13] *** Joins: treflip (~user@user/treflip)
[20:08:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:09:31] <gilberth> Fun: (xlib:list-fonts (xlib:open-display "") "-*-*-MEDIUM-R-*-*-*-*-*-*-*-*-*-*[8594]") may crash your X server.
[20:10:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:16:24] <gilberth> Though when you say (xlib:list-fonts (xlib:open-display "") "-*-*-MEDIUM-R-*-*-*-*-*-*-*-*-iso10646-1[8594]") the server survives. But still fonts are returned, which don't have the #\→ character.
[20:25:39] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[20:39:14] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[20:40:03] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[20:43:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:44:10] *** Quits: kevingal (~quassel@2001:770:c0:401:dd75:adc5:c248:9cdf) (Remote host closed the connection)
[20:46:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:23:44] <ck_> why does it crash?
[21:24:39] <gilberth> It's fun like Cocoa reports my screen is 144dpi and XQuartz says 96dpi. On the other machine the display is either 72dpi or 96dpi. What are those respective APIs for to get a physical display size, when both Cocoa and X11 report random values as they see fit?
[21:25:35] <gilberth> ck_: I don't know. Have I programmed the X server?
[21:26:12] <moon-child> X: at least it's not Wayland™
[21:26:14] <ck_> what's with the snarky remarks all the time? It was an honest question
[21:27:44] <gilberth> ck_: Sorry, but I really don't care why the X server is crashing -- I will not debug it; perhaps some of the usual bugs you get with C.
[21:27:57] *** Quits: shozo (~user@178.74.52.55) (Remote host closed the connection)
[21:29:57] <ck_> ok.
[21:31:17] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 240 seconds)
[21:31:33] <ck_> I wonder if this year's olympics will include the popular elevated equestrianism category. I'd like to watch some dismounts
[21:47:05] <gilberth> When you use "-ibm-courier-medium-r-normal--[~14 0 0 14]-0-0-0-m-0-iso8859-1" you get a font which is mirrored. The [~14 0 0 14] is a transformation matrix. "~" is the minus sign. So to rotate by 180°, negate both and say "-ibm-courier-medium-r-normal--[~14 0 0 ~14]-0-0-0-m-0-iso8859-1". Ooops, you get an upright font again. Say "adobe" instead of "ibm" and you get rotated glyphs. Say "[~14 0.1 0 ~14]" and it "works" with both.
[21:49:14] <gilberth> However, you can say eq "[14 0 3 14]" to get fake oblique. Which is nice as my preferred monospace font doesn't come with oblique or italic.
[21:50:59] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:36:46] <shka> gilberth: what font is that?
[22:47:44] <gilberth> shka: You stick the "[14 0 3 14]" to where the pixel size goes, like with "-b&h-lucidatypewriter-medium-r-normal-sans-[14 0 3 14]-*-*-*-m-*-iso10646-1" to get a fake oblique. Or what was your question?
[22:57:35] <gilberth> X servers would scale bitmap fonts for you, which here is handy, when you're careful, but in general you really want to avoid that. This is where this myth from before RENDER/Xft comes from that X11 fonts would be ugly. Just don't ask for a bitmap font to be scaled, they are not meant to be scaled.
[22:59:40] <moon-child> bitmap fonts are ugly even when not scaled
[22:59:44] * moon-child <3 antialiasing
[23:00:40] <gilberth> moon-child: They get particular ugly when scaled. Using them at they original size is ok. I am talking of a 00ish perspective here.
[23:01:40] <gilberth> Antialiasing is a hack for low dpi devices. I'd rather like to have a say 300dpi or more display :-)
[23:01:55] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:05:22] <moon-child> sure.  I don't _have_ a display with resolution so high that aa is irrelevant
[23:05:31] <mfiano> dpi only matters with viewing distance and biology/age
[23:05:44] <moon-child> (and besides, even if I did, who would design a bitmap font with such high resolution?)
[23:06:51] <gilberth> moon-child: With 300dpi you don't need to hand-tune.
[23:07:07] <moon-child> exactly--you'd use a vector font!
[23:07:20] <gilberth> moon-child: And?
[23:08:16] <moon-child> well, if you have the ability to do aa and get nicer results, why wouldn't you?
[23:09:36] <moon-child> (alright, when I am the implementor of a font renderer, I don't really want to do AA.  But as a reader of text, I want it)
[23:09:50] <moon-child> (though: subpixel aa is trash regardless)
[23:09:55] <gilberth> mfiano: How so? If DPI only matters for viewing distance, then I offer you a 320x200 display. Should give you about 12dpi or so.
[23:10:34] <gilberth> moon-child: I want a display that has high DPI. AA is a hack to make fonts look reasonable on a low DPI device.
[23:10:41] <mfiano> I have a few 300dpi device that I can only see pixels on if I put it up to my nose
[23:11:06] <gilberth> mfiano: Exactly.
[23:11:42] <moon-child> doesn't mean the antialiased text doesn't still look better, even if you can't make out individual pixels
[23:11:58] <gilberth> But you said DPI won't matter. Use a 9-dot matrix printer then and enjoy the quality from 100ft away.
[23:13:11] <moon-child> gilberth: how about this: given a fixed number of pixels, dpi doesn't matter
[23:13:17] <gilberth> moon-child: Well some printers do that too. Anyhow, I am stuck with Core X for the moment.
[23:13:27] <moon-child> obviously if you change how many pixels you have, that also changes things.  But that is separate
[23:14:43] <gilberth> moon-child: Given that my room has a limited size, I could put a display only so far. And it needs to get larger the more far I put it.
[23:15:04] <gilberth> There also is a limit on how near to my nose I want the display.
[23:15:21] <moon-child> sure
[23:15:27] <moon-child> latter point is more pertinent, I think :P
[23:16:26] <gilberth> The former is a point most people don't get when they buy the largest TV they could affort. It often is too large for their small living room.
[23:17:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[23:17:33] <gilberth> But then I don't get why people even want TVs. /me shrugs.
[23:19:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:21:11] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[23:21:30] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[23:21:37] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[23:22:00] <gilberth> And btw even scalable vector fonts have lots of hints to render them at a certain size. Ignore those and they turn out ugly as well.
[23:22:26] <moon-child> hinting is annoying
[23:22:38] <moon-child> I do not look forward to making a hintingcode->glsl compiler
[23:23:04] <gilberth> Yeah that sounds like fun.
[23:23:52] <shka> gilberth: thanks for the answer
[23:25:02] <shka> gilberth: have you figured out was wrong with the slime vs no slime?
[23:25:37] <gilberth> shka: Yes, I was silly *print-pretty* disagreed.
[23:31:02] <hayley> Good morning everyone!
[23:32:51] <gilberth> Hello hayley!
[23:35:03] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[23:35:56] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[23:36:11] <shka> the heck is going on with uiop:launch-program?
[23:36:20] <shka> it sometimes uses shell and sometimes not
[23:36:36] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 245 seconds)
[23:36:51] <shka> and it seems to depend on either system or sbcl version
[23:45:24] <Alfr> shka, iirc, if you give it list for command, then it runs (car list) and the as arguments, if command is a string then that's passed to a shell.
[23:45:51] <shka> ah, let me check that
[23:45:51] <Alfr> s/the as/the rest as its/
[23:51:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
