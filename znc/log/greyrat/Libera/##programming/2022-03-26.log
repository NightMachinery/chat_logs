[00:00:13] <junebug> Having trouble coming up with a good name for a method. I have a garden bed and I want to ask it whether I can plant a vegetable in it. The criteria that will be checking is whether the bed is past the rotation period for that vegetable's family. Any ideas what I can call this method? If you need more domain explanation I'd be happy to elaborate.
[00:00:41] <kee> junebug: suitable_for_planting
[00:01:10] <oldlaptop> pyzozord: I suppose this isn't ambient enough? https://www.youtube.com/watch?v=7vxhQqDoAeM
[00:01:11] <bayaz> Title: Anthony Newman Plays J.S. Bach on the Pedal Harpsichord and Organ - 1968 
[00:01:15] <pyzozord> I use it to play muds or read fantasy books etc, has to be pretty neutral so it can go with all scenes, dungeons or forest or city, fight or dialog etc :P
[00:01:30] <pulse> meetsCriteriaForPlanting()
[00:01:55] <junebug> kee, I thought of something like. Problem is I have another method in the bed which checks whether there is enough room to plant the vegetable which is named canSow(veg)
[00:02:22] <pyzozord> GeDaMo: that's a cool musical connection
[00:02:28] <junebug> pulse, I think same kind of issue above. I would like the name to be a bit more explicit that it's about rotation
[00:02:28] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 272 seconds)
[00:02:31] <pyzozord> GeDaMo: it reminds me of the opera from the fifth element
[00:02:39] <pyzozord> GeDaMo: very cool actually
[00:02:47] *** Joins: vitali64 (~vitali64@user/vitali64)
[00:02:50] <pulse> junebug, meetsRotationCriteria() ?
[00:02:55] <GeDaMo> The start of the Hollow Knight one you linked made me think of it
[00:02:58] <junebug> pulse, yeah that could work
[00:03:04] *** Joins: zeroc00l0 (~zeroc00l0@cpe-98-30-77-50.columbus.res.rr.com)
[00:03:11] <junebug> thank you pulse and kee 
[00:03:47] <pulse> junebug, just out of curiosity, what kind of project is that? sounds intriguing
[00:03:51] <pyzozord> oldlaptop: yeah that's also real music. I need things that are really really bland and not demanding attention. Kind of almost noise
[00:04:05] <oldlaptop> Pah! So you don't want music! :)
[00:04:06] <pyzozord> well nevermind I'll look a bit more, I'll message if I find something close
[00:04:13] <pyzozord> oldlaptop: yes pretty much :D
[00:04:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[00:04:27] <junebug> pulse, I'm building a library for a garden based on square foot gardening method: https://github.com/lodenrogue/garden
[00:04:28] <bayaz> Title: GitHub - lodenrogue/garden 
[00:04:33] <junebug> This is the first time I share with anyone
[00:04:37] <GeDaMo> https://www.youtube.com/watch?v=Gx_EhMM2S5Y
[00:04:38] <bayaz> Title: The Planets: Neptune, the Mystic - by Gustav Holst (1874-1934) 
[00:05:13] <pulse> junebug, sounds interesting. good luck with the project!
[00:05:20] <junebug> pulse, thanks
[00:05:40] <pulse> i do most of my gardening with intuition, but it doesn't always take
[00:06:16] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[00:06:17] <junebug> pulse, my wife and I want to buy some farm land so we want to be a bit methodical about it
[00:06:27] *** Joins: novns (~novns@user/novns)
[00:06:27] <junebug> I plan on building some software tools I may need
[00:06:32] <pulse> interesting
[00:06:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[00:06:47] <pulse> now i wonder if you could train a NN to help you with gardening
[00:06:59] <pulse> would probably need to extract some training data from somewhere though
[00:07:15] <junebug> pulse, oh yeah definitely. Predict yield or weather or something
[00:07:27] <pulse> even just telling you which plants go together would be useful
[00:07:38] <junebug> That's a good idea too
[00:07:43] <pulse> not all plants are friendly, and some form symbiotic relationships
[00:08:09] <junebug> That's true
[00:08:16] <pulse> carrot is friendly with everyone
[00:08:33] <pyzozord> GeDaMo: this works!
[00:08:37] <pyzozord> a great one
[00:08:53] <pyzozord> I though maybe it would work only for sci-fi but this totally works fo fantasy too
[00:09:32] <pulse> thyme is also friendly with everything
[00:10:01] <pyzozord> GeDaMo: that's great, thanks
[00:11:17] <GeDaMo> :)
[00:11:23] <junebug> Thyme in a bottle. My favorite Jim Croce recipe
[00:12:28] *** Parts: zeroc00l0 (~zeroc00l0@cpe-98-30-77-50.columbus.res.rr.com) ()
[00:12:59] <dan01[m]> Guys
[00:13:31] <pulse> i forgot which plant likes to grow alone
[00:13:36] <dan01[m]> Why can't one thread access the resources of another thread?
[00:13:36] <pulse> could be garlic
[00:13:51] <pulse> dan01[m], because of deadlocks and race conditions
[00:14:28] <GeDaMo> Threads /can/ access each others resources but you may not enjoy the results :P
[00:15:04] <pyzozord> is there memory that is dedicated for a thread? I thought it's all process memory
[00:15:30] <GeDaMo> There's thread local storage
[00:15:39] <pyzozord> oh right
[00:15:51] <pyzozord> how is that implemented
[00:16:05] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[00:16:06] <pyzozord> there needs to be some hardware support for that no?
[00:16:26] <GeDaMo> It varies but on x86, segment registers are used
[00:18:12] <GeDaMo> The thread local storage is likely in the same address space as the process so technically it could still be access by other threads
[00:18:39] <biberao> ok whats other name for lists in python?
[00:19:13] *** Joins: user51 (~user51@77.124.35.94)
[00:19:16] <GeDaMo> Array?
[00:19:36] <ProfSimm> biberu: there's no other name for lists in Python, but there are various list-like things
[00:19:50] <biberao> i was trying to google something
[00:19:59] <biberao> to easy my search:D
[00:20:07] <GeDaMo> What are you looking for?
[00:20:15] <ProfSimm> biberu: in general, it's lists, arrays, sequences, vectors, iterators. But they're not quite the same thing.
[00:20:28] <ProfSimm> biberu: and in some cases "streams".
[00:20:33] <biberao> ProfSimm: its biberao
[00:20:40] <ProfSimm> Whoops.
[00:20:41] <biberao> you're highlighting my fake twin
[00:20:50] *** Joins: Akuli (~Akuli@87-94-110-86.bb.dnainternet.fi)
[00:20:55] <biberao> thanks guys
[00:20:58] <biberao> ill search
[00:21:16] <ProfSimm> biberu: oh also tuples. Distinct type, but also kinda similar.
[00:21:20] <epony> ok, cicerao ;-)
[00:21:25] <ProfSimm> biberao: **
[00:21:47] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[00:22:43] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[00:23:39] *** Joins: vitali64 (~vitali64@user/vitali64)
[00:24:15] <biberao> ProfSimm: it doesnt bother me at all but he might ;=
[00:24:24] <user51> ProfSimm: i'm assuming the 1000 call stack limit is probably a sanity manner rather than trying to save memory :)
[00:25:07] <biberao> time to practice pathlib and scrapping
[00:25:22] <user51> i think it can be done both iteratively and recursively, but my iterative expr function got kinda big
[00:25:53] *** Joins: Cashlin (~hp@user/cashlin)
[00:26:01] <dan01[m]> GeDaMo: No but I mean in things like GUI programming
[00:26:28] <dan01[m]> You usually get an excetion if you modify say a lable from another thread
[00:26:30] <dan01[m]> but why?
[00:27:07] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Read error: Connection reset by peer)
[00:27:20] <biberao> guys heres my newb code https://github.com/gitmapd/ipynb/blob/master/Omega.ipynb
[00:27:21] <bayaz> Title: ipynb/Omega.ipynb at master ? gitmapd/ipynb 
[00:27:23] <GeDaMo> That doesn't sound like multi-threaded
[00:27:31] <biberao> im willing to learn btw
[00:29:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:29:47] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[00:32:57] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[00:33:16] <kee> dan01[m]: Have you ever tried to edit the same sentence as somebody else in a collaborative document editor (e.g. Google Drive)?
[00:33:29] <kee> It's that, but worse, because computers aren't clever enough to notice when that kind of thing happens.
[00:34:38] <kee> Imagine the code checks the length of the label, allocates a memory buffer of that size, then copies the label into it.
[00:34:54] <vdamewood> biberao: You need to improve your commit messages.
[00:35:18] <kee> If you change the label's length in the middle of that, you'll end up overrunning the buffer.
[00:35:26] <oldlaptop> Are any of those even human-written commit messages?
[00:35:28] <kee> That's called a "race condition".
[00:35:39] <pulse> vdamewood, obligatory https://xkcd.com/1296/
[00:35:39] <bayaz> Title: Git Commit 
[00:35:52] <vdamewood> pulse: Is that "Haaands"?
[00:35:59] <vdamewood> It is.
[00:36:02] <pulse> vdamewood, yep
[00:36:11] <biberao> vdamewood: lol
[00:36:13] <biberao> for sure
[00:36:17] <dan01[m]> Well ok, that's a high level overview
[00:36:20] <biberao> vdamewood: im a noob :(
[00:36:22] <kee> To prevent race conditions we lock resources, so they can only be accessed from one place at once.
[00:36:25] <biberao> i atleast made the pdf work now
[00:36:28] <dan01[m]> but like what happens?
[00:36:34] <dan01[m]> What goes wrong?
[00:36:40] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:36:40] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:36:41] *** Joins: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:36:44] <vdamewood> biberao: You mentioned that. So, a suggestion for improving is learn to write better commit messages.
[00:36:45] <pulse> kee, and we do this so we can enter deadlocks!
[00:36:47] <kee> dan01[m]: Locking means that when you try to access them from a thread that hasn't locked them, you can't.
[00:37:07] <vdamewood> Locking is the practice of making your threads say "dibs!"
[00:37:08] <biberao> vdamewood: ok
[00:37:13] <kee> Python raises an exception because that's Pythonic to do in this case.
[00:37:14] <biberao> but what about the python part
[00:37:16] <vdamewood> s/say/claim/
[00:37:17] <kee> C code might return -1 or something.
[00:37:17] <biberao> teach me good stuff
[00:37:32] <oldlaptop> I guess there's some python in here somewhere? https://raw.githubusercontent.com/gitmapd/ipynb/master/Omega.ipynb
[00:37:32] <bayaz> Type: text/plain; charset=utf-8 Size: 9.2 kB 
[00:37:45] <kee> pulse: Deadlocks don't always happen; that's just when you wait for a lock to be released.
[00:37:50] <biberao> oldlaptop: i dont know maybe not
[00:37:52] <biberao> :(
[00:38:00] <davve> C will give you a segmentation fault
[00:38:06] <biberao> im so bad at it
[00:38:07] <davve> to tell you that your code sucks
[00:38:09] <vdamewood> I'm not sure about Jupyter Notebook, but in Python, you put all the imports at the top before any other line of code.
[00:38:15] <oldlaptop> davve: Only if you're very lucky.
[00:38:18] <biberao> vdamewood: yes
[00:38:29] <biberao> it was a test situation but i will improve it
[00:38:31] <biberao> ok
[00:38:33] <biberu> biberao o/
[00:38:35] <biberao> thanks for the corrections
[00:38:38] <biberao> biberu: hey bro
[00:38:45] <kee> dan01[m]: If thread A has label Apple and won't release it until it also has label Banana, and thread B has label Banana and won't release it until it also has label Apple… you're stuck.
[00:38:59] <biberao> ok brb
[00:39:01] <vdamewood> s/Python/Vanilla Python/
[00:39:01] <kee> So it's much easier if things are only owned by one thread.
[00:39:02] <biberao> let me have some dinner
[00:39:13] <dan01[m]> No but
[00:39:14] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:19] <dan01[m]> Thread A has labble Apple
[00:39:28] <GeDaMo> It's possible for multiple threads to write different values to the same address simultaneously but there are no guarantees about the value that eventually ends up there
[00:39:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:39:36] <dan01[m]> Thread B wants to change it to Bannana
[00:39:38] * vdamewood shoves a stake in biberao's mouth.
[00:39:42] <kee> dan01[m]: Yeah, and it can't.
[00:39:45] <dan01[m]> What goes wrong?
[00:39:46] <oldlaptop> vdamewood: Rude.
[00:39:48] <biberao> vdamewood: that should hurt
[00:39:50] <dan01[m]> Is A unware of the change?
[00:39:51] *** Quits: Elzington (~Elzington@66.63.167.156) (Quit: Leaving)
[00:39:52] <kee> dan01[m]: It depends.
[00:39:56] <kee> Maybe A is unaware.
[00:39:56] <biberao> a steak its fine but a stake
[00:39:57] <vdamewood> biberao: Not if it's done right.
[00:40:04] <dan01[m]> kee: why can't it?
[00:40:12] <biberao> vdamewood: do you know to name the file based on the atag text associated to the href?
[00:40:14] <kee> Maybe A is aware of half the change, and thinks it says Apnana.
[00:40:28] <vdamewood> biberao: I mean, I shoved it in your mouth, but I didn't shove it*through* your mouth.
[00:40:30] <oldlaptop> Mmmm, apnanas
[00:40:38] <biberao> weirdo
[00:40:40] <biberao> :D
[00:40:41] <kee> Maybe A moved it to a different memory location a few seconds ago, and B accidentally wrote into invalid memory.
[00:40:42] <biberao> ok brb
[00:40:44] <biberao> codfish time
[00:40:59] <biberao> i just remembered
[00:40:59] <oldlaptop> biberao: you're making me hungry! :(
[00:41:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[00:41:07] <biberao> i could make a dictionary
[00:41:08] <kee> dan01[m]: There are several potential problems. We can't really discuss them in the context of Python, because Python doesn't provide good tools for describing these issues.
[00:41:22] <biberao> where the id for the drive is the id
[00:41:28] <biberao> and the href text
[00:41:28] <kee> We can only discuss them in theory, or in the context of a language which provides tools for describing them.
[00:41:33] <biberao> is the name
[00:41:43] <biberao> i will explore it when i come back
[00:41:44] <kee> Like C++, which has atomic and volatile. Or Rust, which has Send and Sync.
[00:41:46] <dan01[m]> I think I need to understand how thread works
[00:41:49] <biberao> oldlaptop: come eat it
[00:41:54] <dan01[m]> And how resource sharing in threads is done
[00:41:54] <biberao> i made a huge thing
[00:42:00] <kee> dan01[m]: Two bits of code run at the same time.
[00:42:02] *** Quits: on^ (~on@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[00:42:05] <oldlaptop> This problem *is* the reason "threads are no good in python", or whatever you may have heard about threading in CPython.
[00:42:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:42:27] <kee> They can modify RAM, but those changes don't necessarily get shared until one saves the cache to RAM and then the other reads from RAM (ignoring its cache).
[00:42:33] <vdamewood> Python has 'threads'
[00:42:39] <oldlaptop> (CPython solves a lot of these problems by just requiring each thread to hold a lock before it can do anything.)
[00:42:41] <kee> vdamewood: Well, that complicates things.
[00:43:01] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[00:43:14] <kee> oldlaptop: CPython only does that for the interpreter. The GIL is often released when native code wants to do something, so it's entirely possible that GUI resources could still have race conditions and stuff.
[00:43:19] <oldlaptop> vdamewood: It's good enough for I/O concurrency, which was all any threads at all were usually good for once upon a time.
[00:43:46] <vdamewood> oldlaptop: But myh cores!
[00:43:49] <vdamewood> muh*
[00:44:04] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[00:44:08] *** Joins: nicbk (~nicbk@user/nicbk)
[00:44:18] <oldlaptop> kee: I'll defer to people who care about CPython on that. :P
[00:44:47] <kee> dan01[m]: Caching is unpredictable, so you can't guarantee that you're looking at what's actually stored in RAM. Maybe you got none of the update, or only part of it.
[00:44:54] *** Joins: vitali64 (~vitali64@user/vitali64)
[00:45:00] <oldlaptop> (Tcl by contrast solves a lot of these problems by just preventing threads from sharing resources, and discouraging threading more generally.)
[00:45:07] <kee> There's a technique called memory fences that lets you guarantee this kind of thing, but Python doesn't make that easy
[00:45:37] <kee> And it's not really useful to solve this problem; it normally only applies to a tiny region of memory.
[00:45:46] <kee> But you can use it to implement locks.
[00:45:47] <pulse> JS solves this by not having mt at all :p
[00:46:01] * kee points at service workers
[00:46:04] <vdamewood> Well, before I got paralyzing pain last week, I was working on a project, and now I need to remember how to get a droplet's ID by it's hostname. What fun.
[00:46:27] <vdamewood> Don't point at service workers. They already have to deal with too many rude people.
[00:46:29] <pulse> yeah web workers are a thing fair enough
[00:46:39] <oldlaptop> I don't suppose "t'heck with digitalocean" is a helpful answer.
[00:47:07] <vdamewood> oldlaptop: Not really. But I'm curious why you'd say that.
[00:47:08] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[00:47:13] <kee> oldlaptop: What's better than Digitalocean?
[00:47:44] <vdamewood> oldlaptop: Also, I don't really need the help. I just need to focus, and announcing stuff like that helps.
[00:47:49] <pulse> out of all difficult things to debug, Gordian knots in MT code is probably high up on that list
[00:47:54] <jacekowski> dan01[m]: you can share memory with other threads
[00:47:57] <oldlaptop> (I don't have particular experience with digitalocean, and so OBVIOUSLY need to blame it for anyone's problems with digitalocean)
[00:48:05] <jacekowski> dan01[m]: but it has to be programmed correctly
[00:48:05] <vdamewood> A quick look through the API docs should get me the endpoint/request I need.
[00:48:15] <vdamewood> oldlaptop; So no useful criticism?
[00:48:29] <biberao> oldlaptop: 
[00:48:34] <biberao> https://imgur.com/R2TG0JG
[00:48:40] <oldlaptop> ISTR their cost structure was unattractive compared to vultr, and they didn't support the OS I wanted at the time
[00:48:52] <jacekowski> kee: on x86 you don't have to worry about caching
[00:49:01] <jacekowski> kee: and whet is actually stored in the ram
[00:49:04] <oldlaptop> (although in practice you don't actually want to run the openbsd images vultr gives you anyway, so that's somewhat moot)
[00:49:07] <jacekowski> kee: all threads on all CPU
[00:49:16] <jacekowski> kee: all threads on all CPUs and cores will have same view of the ram
[00:49:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:49:23] <DPA> I just found out about ".well-known/pgp-key.txt". It seams to be in use by a few sites, but I can't thing a spec, nor any articles nor anyone talking about it. Is this a thing?
[00:49:29] <kee> jacekowski: That's interesting. Is it guaranteed?
[00:49:31] <jacekowski> kee: yes
[00:49:51] <kee> You still need memory fences for re-ordering, though?
[00:50:03] <oldlaptop> (Also, the last time I had to care about this, no DO/vultr style service was cost-competetive with AWS for the kind of memory-to-CPU ratio I wanted)
[00:50:07] <vdamewood> oldlaptop: Oh, that's interesting. What's the difference cost-wise, or what's vultr like?
[00:50:12] <oldlaptop> including Amazon's dropletty service.
[00:50:43] <jacekowski> kee: not for reodering
[00:50:48] <jacekowski> kee: for non atomic operations
[00:50:57] <oldlaptop> vultr used to have a $2.50/month VPS option with a public IPv4 address and more than enough compute to, say, run a quasselcore, VPN hub, etc.
[00:50:57] <kee> Oooh, that makes sense.
[00:51:07] <oldlaptop> I guess they still have at least one of them. >:)
[00:51:35] <oldlaptop> (They still offer that machine, but now charge an extra US$1/month for the IPv4 address. Pretty reasonable, really, given the state of things.)
[00:51:41] <vdamewood> oldlaptop: Fair enough, DO tops out at $5 each month for the cheapest option.
[00:51:41] *** Joins: Elzington (~Elzington@66.63.167.156)
[00:52:06] <kee> Vultr is my new best friend.
[00:52:06] <oldlaptop> Yeah, for my personal stuff that's just wasted money
[00:53:09] <oldlaptop> and the last time I had to care on $employer's behalf I wanted more CPU cores and more of pretty much nothing else, which meant Amazon's t3a-micro or so
[00:53:11] <jacekowski> kee: basically, x86 achieves memory/cache consistency in a rather inefficient way so running two threads accessing same memory on two different cores is very ineffcient
[00:53:25] <oldlaptop> (in swarms of suitable size)
[00:53:26] <jacekowski> kee: basically, it will force cache to flush to ram and then invalidate other caches
[00:53:28] <kee> jacekowski: That explains so much.
[00:53:31] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[00:54:09] <jacekowski> kee: so your reads end up hitting ram rather than cache
[00:54:50] <pyzozord> hmm i wonder what happens with cpu cache in go because it does so many coroutines
[00:54:59] <oldlaptop> (Also, apparently they decided that since facebook was doing it too, they needed to change their company's name to "CONSTANT" and call "Vultr" their product. Weird.)
[00:55:18] <jacekowski> pyzozord: depends on how cores/caches are arranged
[00:55:22] <vdamewood> Googlebet did it first
[00:55:28] <DPA> Looks like the .well-known pgp-key.txt location is just an accidentally emerging quasi standard, due to the .well-known security.txt. security.txt has the example "https://example.com/pgp-key.txt", but other locations are possible, so people probably just put it in .well-known, because the security.txt is also already there.
[00:55:31] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[00:56:30] <pyzozord> jacekowski: I thought that modern x86-64 are pretty similar
[00:56:56] <pyzozord> I tried for few seconds if I could use here "homogenous" or "homomorphic" but you know, eh it's just pretencious
[00:56:58] <flaqoniun> amd gives you way more cache
[00:57:58] *** Joins: Pook (~Pook@2001:8a0:f996:1400:102d:1ec7:9019:dca9)
[00:58:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:58:36] <jacekowski> pyzozord: think about ryzen where you have multiple chiplets
[00:58:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:59:25] <jacekowski> pyzozord: if your code is all running on one chiplet then cache will have latest version of your write without having to read it from ram
[00:59:36] <pyzozord> right number of cores has been aggressively raising recently
[01:00:05] <jacekowski> pyzozord: but if part of your code is running on a different chiplet then writes from one core will invalidate cache in the other chiplet
[01:00:14] <jacekowski> and readinf from memory is the most expensive operation cpu can do
[01:00:24] <jacekowski> executing code is pretty much free on a cpu
[01:00:29] <pyzozord> that's kind of the NUMA situation isn't it?
[01:00:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[01:00:35] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[01:00:35] *** Joins: vitali64_ (~vitali64@user/vitali64)
[01:00:38] <pyzozord> or no?
[01:00:40] <jacekowski> pyzozord: yes
[01:00:57] <jacekowski> but not exactly
[01:01:06] <pyzozord> not exactly because those are just caches
[01:01:31] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 256 seconds)
[01:01:37] <pyzozord> in NUMA actual ram blocks would be faster to reach by certain cores
[01:01:44] <oldlaptop> (Some of AMD's older MCM products had the actual NUMA sitation *too*.)
[01:02:10] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[01:02:13] <jacekowski> and going back to executing code being free on a cpu
[01:02:26] <oldlaptop> It costs power, I guess. That's not quite free.
[01:02:40] <pyzozord> jacekowski: i get that if all the coroutines happens execute on single core then instruction cache is hot
[01:02:42] <jacekowski> you can see how much silicon space is dedicated to actual execution and how much to what can be vaguely described as "IO"
[01:02:45] *** Joins: kakysha_ (~kakysha@user/kakysha)
[01:02:46] <oldlaptop> Just not time, necessarily. (directly)
[01:03:00] <pyzozord> but I am thinking about memory cache, isn't that going to be trashed constantly?
[01:03:06] <oldlaptop> jacekowski: Or compiling "machine code" to the real machine code.
[01:03:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[01:03:19] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[01:03:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:03:40] <oldlaptop> although even throwing decode in, it's still striking how much of a CPU is "uncore" these days.
[01:03:56] <jacekowski> memory + i/o die on amd cpus is many times larger than individual cores
[01:04:19] <jacekowski> its similiar on intel but not as obvious
[01:04:21] <oldlaptop> (That's not quite a fair comparison, since the "I/O die" is also fabricated on a different, less-advanced process.)
[01:04:41] <oldlaptop> Less-advanced and presumably also better-suited to the task.
[01:05:09] <jacekowski> well, yes, but the point i was going for is executing code based on data from registers is instant and almost free
[01:05:21] <jacekowski> if you have to read from memory it's going to take 150 cycles
[01:05:23] *** Quits: kakysha_ (~kakysha@user/kakysha) (Client Quit)
[01:05:30] <jacekowski> and use a lot more power
[01:05:38] *** Joins: kakysha (~kakysha@user/kakysha)
[01:05:52] <oldlaptop> The eight tiny things are the actual CPUs: the big one in the middle is basically what we would have called a northbridge twenty years ago: https://images.anandtech.com/doci/13561/amd_rome-678_678x452.png
[01:05:52] <bayaz> Type: image/png Size: 537.6 kB 
[01:06:45] <jacekowski> oldlaptop: its a mix between what we would have called north bridge and part of cpu
[01:06:56] <oldlaptop> in re the time costs, GeDaMo likes to link this (obviously for excellent reason): http://ithare.com/infographics-operation-costs-in-cpu-clock-cycles/
[01:06:57] <bayaz> Title: Infographics: Operation Costs in CPU Clock Cycles - IT Hare on Soft.ware 
[01:07:11] <oldlaptop> jacekowski: What's on it that would have also been on a K7 die?
[01:07:19] <GeDaMo> https://en.wikichip.org/wiki/chiplet
[01:07:21] <bayaz> Title: Chiplet - WikiChip 
[01:07:36] <jacekowski> oldlaptop: all the "external" busses
[01:07:37] <oldlaptop> AIUI it's mainly the memory controller and the PCIe interface, none of which would have been on-die in the old days
[01:07:47] <oldlaptop> that was all the northbridge's job too
[01:08:01] <pulse> i though AIUI was some UI thing
[01:08:05] <oldlaptop> The only "external" bus the CPU itself spake was the FSB. (EV6, for the K7)
[01:08:17] <pulse> my brain is scrambled from all the API acronyms it absorbed over the years
[01:08:47] <pulse> (AUI is actually a thing in wxwidgets)
[01:09:03] <oldlaptop> although some wiseguys talked of a "BSB" with the old cartridge CPUs (backside bus, to talk to the off-die cache they used to have)
[01:09:44] <jacekowski> k7 had hypertransport iirc
[01:09:48] <jacekowski> but same idea
[01:10:01] <oldlaptop> No, HyperTransport is actually more or less the modern way of doing things.
[01:10:13] <jacekowski> also, wasn't k7 the first cpu to have on die memory controller
[01:10:27] <oldlaptop> No, that was K8.
[01:10:38] <oldlaptop> (the first "opterons", athlon64, etc.)
[01:10:46] <oldlaptop> K7 was the original "Athlon".
[01:11:09] *** Joins: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net)
[01:11:12] <oldlaptop> (and "Athlon XP", and "Athlon MP", and I guess "Duron" at the time... maybe something else?)
[01:11:19] *** Quits: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net) (Changing host)
[01:11:19] *** Joins: Auron (Auron956@user/auron)
[01:11:21] <jacekowski> there would have been separate memory bus 
[01:11:31] <jacekowski> fsb was not fast enough for memory access
[01:11:52] <oldlaptop> Sure it was: it was the only way to access memory.
[01:12:06] <oldlaptop> The memory controller was on the northbridge, which talked to the CPU over the FSB.
[01:12:27] <oldlaptop> I suppose you could argue "of course it wasn't fast enough, that's why they changed it", which would be fair in a sense.
[01:12:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:12:58] <oldlaptop> But before integrated memory controllers, memory accesses all had to go through the FSB just like everything else.
[01:13:19] <oldlaptop> Particularly painful for Intel's SMP i686 machines, IIRC.
[01:13:26] *** Joins: newpy (~newpy@2601:280:4381:1390:df05:c07d:331f:b2a3)
[01:13:34] <oldlaptop> (EV6 supported that a bit better for K7.)
[01:14:01] *** Joins: hololeap (~hololeap@user/hololeap)
[01:14:58] <oldlaptop> And (at least as I understand things) that's sort of how AMD's current products work today, only the "FSB" is some kind of point-to-point link purely within the CPU package itself. (If it's still "Infinity Fabric", it's a derivative of HyperTransport, after all these years.)
[01:16:19] <jacekowski> iirc it's pci-e based
[01:16:44] <newpy> does anyone have an opinion on devops tools (chef/puppet/ansible/salt/other)
[01:16:54] <newpy> obvious pros/cons etc?
[01:17:13] <koollman> newpy: they all suck in different ways but picking one is more important than picking the right one
[01:17:15] <epony> jacekowski, check it out  https://en.wikipedia.org/wiki/HyperTransport#Multiprocessor_interconnect
[01:17:15] <bayaz> Title: HyperTransport - Wikipedia 
[01:17:18] <oldlaptop> "Infinity Fabric" is a superset of HyperTransport, which is not particularly related to PCIe. (PCIe is a kind of point-to-point link though, so they're related in the same way a Ford Focus is related to a Chevy Corvette.)
[01:17:39] <newpy> koollman, I figured, just wondering if there is a way to judge which is best for your common use case or something
[01:17:47] <newpy> like push vs pull, etc
[01:18:02] *** Joins: vysn (~vysn@user/vysn)
[01:18:06] <biberao> ok im back
[01:18:07] <epony> "AMD used HyperTransport to replace the front-side bus in their Opteron, Athlon 64, Athlon II, Sempron 64, Turion 64, Phenom, Phenom II and FX families of microprocessors."
[01:18:21] <oldlaptop> newpy: ansible has one important advantage from my point of view (i.e. not requiring a client daemon of some kind on the manage-ees, other than sshd)
[01:18:36] *** Joins: bnchs (~bnchs@105.157.170.121)
[01:18:44] <newpy> oldlaptop, yea I was wondering if there was a downside to pushing
[01:18:46] <koollman> newpy: ansible is quick to start with. puppet requires a bit of setup, has large community. chef is a reaction to puppet flaws, but maybe goes to far in the other direction. salt is "this time we'll get it right", but brings it's own problems
[01:18:48] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:18:51] <bnchs> i'm trying to fix a linking error after having a sugar rush
[01:18:58] <koollman> *its
[01:19:13] <bnchs> why is linking openssl so hard
[01:19:28] *** Joins: Auron (Auron956@user/auron)
[01:19:58] <oldlaptop> newpy: Maybe your manage-ees have an easier time opening a connection to a central manager machine than the other way around, because of NAT or some such icky thing?
[01:20:04] <newpy> koollman, if I start with ansible would it help me understand the flaws in puppet/chef/etc?
[01:20:40] *** Joins: zaher (~zaher@37.48.145.12)
[01:20:43] *** Quits: bnchs (~bnchs@105.157.170.121) (Quit: Quit)
[01:20:50] <koollman> newpy: probably. Or you could see the things they can bring you in various ways, too. Knowing one tool helps understand why others made different choices sometimes
[01:22:06] <koollman> newpy: I think you want to at least understand a bit of ansible, and a bit of puppet or chef. But I am quite biased, so I expect others may have wildly different opinions
[01:23:17] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 240 seconds)
[01:23:37] *** Quits: vitali64_ (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[01:23:37] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:23:40] *** Joins: vitali64 (~vitali64@user/vitali64)
[01:24:04] *** Quits: jkotra (~jkotra@122.176.152.121) (Read error: Connection reset by peer)
[01:24:46] *** Joins: jkotra (~jkotra@122.176.152.121)
[01:24:47] <epony> only AMD is late to convert from https://en.wikipedia.org/wiki/Pin_grid_array#Ceramic to https://en.wikipedia.org/wiki/Land_grid_array#Use_in_microprocessors their mainstream desktop processors.. and has chiplets a while ago.. before Intel and the "recent standardisation"
[01:24:47] <bayaz> Title: Pin grid array - Wikipedia 
[01:24:47] <bayaz> Title: Land grid array - Wikipedia 
[01:25:59] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[01:28:19] <epony> https://en.wikipedia.org/wiki/Multi-chip_module#Overview  "ICs that perform only some of the functions, or "Intellectual Property Blocks", of a component in a computer. These are known as chiplets. An example of this are the processing ICs and I/O IC of AMD's Zen 2-based processors."
[01:28:20] <bayaz> Title: Multi-chip module - Wikipedia 
[01:29:45] <vdamewood> I think I nee to sleep... dammit.
[01:31:54] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[01:32:13] <pulse> sleep backwards spells out peels
[01:32:39] <pulse> thank you for listening to this episode of pulse's useless facts
[01:32:58] <vdamewood> s/facts//
[01:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[01:35:37] <vdamewood> "it sleeps" it an anagram of "eels spit".
[01:35:58] *** Joins: Matt|home (~matt@adsl-74-233-58-211.mia.bellsouth.net)
[01:35:59] <junebug> pulse, sleep is the cousin of death
[01:36:33] <pulse> ah, a Nas enjoyer
[01:36:57] <pulse> vdamewood, i hate when eels get in my hovercraft
[01:37:47] *** Quits: newpy (~newpy@2601:280:4381:1390:df05:c07d:331f:b2a3) (Quit: Leaving)
[01:37:48] *** Quits: pmercado (~pmercado@186.107.58.34) (Quit: Konversation terminated!)
[01:39:10] <vdamewood> pulse: Moje vozilo na zračni blazini je polno jegulj.
[01:39:36] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:39:48] *** Quits: ahungry (~user@c-68-51-134-46.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[01:40:05] <pulse> ugh, vozilo na zracni bazi
[01:40:09] <junebug> pulse, nah it's Thomas Sackville
[01:40:12] <pulse> is that really how we call a hovercraft
[01:40:47] <junebug> pulse, https://www.bartleby.com/331/586.html
[01:40:47] <bayaz> Title: Thomas Sackville, Earl of Dorset (1536-1608). Sleep. William Stanley Braithwaite, ed. 1907. The Book of Elizabethan Verse 
[01:40:54] <vdamewood> pulse: According to omniglot.com
[01:40:55] *** Joins: pavonia (~user@user/siracusa)
[01:40:58] <pulse> junebug, i see
[01:41:18] <pulse> vdamewood, it's literally translated as "air-based vehicle"
[01:41:29] <pulse> so very descriptive
[01:41:37] <pulse> oh, "blazini"
[01:41:52] <pulse> ok it is a little more descriptive than i thought
[01:42:01] <epony> wooah  https://www.amd.com/en/product/11786  Launch Date 3/8/2022 Architecture "Zen 3" CPU Cores 64 Threads 128
[01:42:11] *** Joins: vitali64_ (~vitali64@user/vitali64)
[01:42:14] <pulse> "vehicle based on air-cushion"
[01:42:20] <pulse> still a mouthful
[01:42:36] <vdamewood> At least it's separate words
[01:42:55] <pulse> epony, when memes become reality https://i.imgur.com/wRepfW3.jpg
[01:42:56] <bayaz> Type: image/jpeg Size: 37.4 kB 
[01:43:00] <pulse> pretty cool tho
[01:43:19] <pulse> i like how both axes on that meme are cores
[01:43:24] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[01:43:47] *** Joins: newwebdev13 (~newwebdev@78.135.92.217)
[01:44:20] <vdamewood> I want Pizza
[01:44:20] <biberao> so i managed to make a dict with an id and name 
[01:44:32] *** Quits: vitali64_ (~vitali64@user/vitali64) (Client Quit)
[01:44:38] <biberao> im not able to iterate over that dictionary to see its contents
[01:45:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:45:12] <pulse> i want pizza that has another pizza on it as a topping
[01:45:20] <vdamewood> biberao: Why not?
[01:45:46] <vdamewood> pulse: I can buy something like that at a local pizzeria.
[01:45:55] <biberao> vdamewood: it seems weird i dont know
[01:46:17] <pulse> vdamewood, my only local pizzeria is so bad i'd rather make my own now
[01:46:23] <pulse> the one that was good closed up
[01:46:49] <pulse> we need to start working on pizza printing technology
[01:46:59] <vdamewood> pulse: But you're so close to italy that they've literally taken your beach away
[01:47:17] <pulse> i've had pizza in italy numerous times, and i never liked it
[01:47:18] <pulse> idk why
[01:47:21] <pulse> it was always weird
[01:47:26] <pulse> probably just bad luck
[01:47:36] <vdamewood> Do you prever the American versions or something?
[01:47:39] <vdamewood> prefer*
[01:47:46] <biberao> ok i did it but not working as i want haha
[01:47:46] <pulse> i always went there expecting the most glorious pizza i've ever tasted, and then i got something soggy with very odd toppings
[01:47:51] * vdamewood perverts the American versions.
[01:47:57] <pulse> vdamewood, i've never had, but i did hear americans don't use real cheese
[01:48:11] <epony> pulse, speaking of hearsay, weibo meibo says check out this roadmap from the sources of all rumours  https://www.notebookcheck.net/fileadmin/Notebooks/News/_nc3/intel_amd_2021_22_roadmap.jpg
[01:48:12] <bayaz> Type: image/jpeg Size: 356.6 kB 
[01:48:17] <vdamewood> pulse: That's a half truth.
[01:48:46] <pulse> epony, i'm halfway tempted to just go with a threadripper for my eventual next build
[01:48:52] <pulse> but then i realize i have no need for all those cores
[01:49:11] <vdamewood> pulse: There are pizzas availble, usually frozen, in a box, that don't have real cheeze that cost about $1.00 USD. But if you get it from a good pizzeria, it will have real cheese.
[01:49:50] <pulse> vdamewood, if this video is anything to go by ... https://www.youtube.com/watch?v=lzAk5wAImFQ
[01:49:51] <bayaz> Title: Making New York-style pizza at home 
[01:49:59] <pulse> ... then NY-style pizza is really good
[01:50:00] <vdamewood> pulse: AMD is killing the non-Pro threadripper line.
[01:50:56] <epony> pulse, I'll pick a trivial performance 8C cheap Ryzen something
[01:51:02] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[01:51:05] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[01:51:06] <epony> can't wait for https://en.wikipedia.org/wiki/Socket_AM5
[01:51:07] <bayaz> Title: Socket AM5 - Wikipedia 
[01:51:54] <pulse> is ddr5 out yet
[01:51:57] <epony> but will want to pick the last of the AM4 ;-) inexpensively, or whatever comes with ¤300-350 USD/EUR price tag after the plannedemicwar
[01:52:05] <pulse> i'm waiting for ddr5 until i build my next pc
[01:52:06] *** Quits: moniker- (~mon@88.207.121.255) (Remote host closed the connection)
[01:52:29] <pulse> hmm, apparently it's been out for a year oO_
[01:52:39] <epony> I'll get cheapest DDR4 before it goes out
[01:53:19] <biberao> bfq
[01:53:21] <biberao> oops
[01:53:23] <biberao> vdamewood: 
[01:53:30] <biberao> https://github.com/gitmapd/ipynb/blob/master/Omega.ipynb <- lol
[01:53:31] <bayaz> Title: ipynb/Omega.ipynb at master ? gitmapd/ipynb 
[01:53:43] <biberao> let me change something first
[01:53:48] <biberao> wait dont see it yet
[01:53:57] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[01:54:15] <vdamewood> Too late
[01:54:26] <vdamewood> I gotta sleep Sorry.
[01:54:35] <biberao> do you slee?
[01:54:37] <biberao> liar
[01:55:00] <vdamewood> No. I mean, I'm about to fall asleep.
[01:55:05] <vdamewood> Laters
[01:55:08] <biberao> dont go
[01:55:13] <biberao> i dont allow you to
[01:55:21] <kee> biberao: Hush. You can wait until tomorrow.
[01:55:27] <kee> Sleep is important.
[01:55:28] <biberao> lol
[01:55:31] <biberao> kee: its a joke
[01:55:34] <biberao> he knows im joking
[01:55:40] <biberao> like i could boss him around
[01:56:06] <kee> biberao: https://en.wikipedia.org/wiki/Poe%27s_law
[01:56:06] <bayaz> Title: Poe's law - Wikipedia 
[01:56:06] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[01:56:26] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[01:56:27] <biberao> ah cool
[01:56:29] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[01:56:29] <biberao> thats new to me
[01:56:42] <biberao> "Po" in my language means Dust
[01:56:44] <biberao> so
[01:56:46] <biberao> :P
[01:57:46] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[01:58:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4302:423d:8a3e:7573) (Ping timeout: 240 seconds)
[01:58:37] *** Quits: widp (~widp@2406:7400:73:dbbb:e902:a28:1954:6217) (Ping timeout: 240 seconds)
[01:58:54] <austincheney> which language?
[01:59:00] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[02:00:17] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[02:00:58] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[02:01:31] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[02:01:41] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[02:01:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:02:18] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[02:02:44] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[02:03:16] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[02:05:00] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[02:05:09] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[02:05:29] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[02:06:28] *** Joins: widp (~widp@124.123.106.66)
[02:10:24] *** Joins: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it)
[02:12:03] <sonny> so like reading 8kb into a string is fine right?
[02:12:54] <sonny> I think I pre-optimize to much
[02:13:01] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[02:13:02] <sonny> s/to/too
[02:13:28] <CoderGuy> I have a question that is a bit of a repetitive one so i'm not asking in the proper channel but here's the gist of it
[02:14:03] *** Joins: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[02:14:06] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:14:27] *** Parts: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) ()
[02:14:35] *** Joins: algodatastruct (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[02:14:53] <sonny> my L1 cache is 128, so yeah :-)
[02:15:02] <sonny> 128kb*
[02:15:06] <CoderGuy> lets say you had a variable type string, but you wanted based on variable input determine the creation of a 2d,3d,4d,5d...nd array but your input could only be an int & You can't use dynamic, how would you achieve this? Also you can use dynamic just you'd have to write the dynamic code yourself
[02:15:51] <CoderGuy> so for example the function takes 5 as input, the result is string[][][][][]  But it's also cast in c#
[02:16:06] *** Quits: LuckyFire (~LuckyFire@46.217.32.109) (Ping timeout: 272 seconds)
[02:16:10] <CoderGuy> so far I can create the array but I can't cast it without prior knowledge of it being string[][][][][]
[02:16:17] <sonny> that's confusing
[02:16:29] *** Joins: LuckyFire (~LuckyFire@46.217.32.109)
[02:16:37] <sonny> is your input the dimension of the array?
[02:16:41] <CoderGuy> yeah
[02:16:49] <CoderGuy> you input the dimension fo the array, I know people don't like this question
[02:16:54] <CoderGuy> but that makes me even more curious
[02:16:57] <sonny> what is the problem?
[02:17:02] <CoderGuy> casting it
[02:17:12] <CoderGuy> I can make the array but I can't cast it without prior knowledge of the ND
[02:17:15] <CoderGuy> or the dimensions
[02:17:15] <sonny> why do you need to cast?
[02:17:25] <CoderGuy> i'm just curious if you could
[02:17:33] <sonny> cast to what?
[02:17:39] <CoderGuy> to it's proper dimension size
[02:17:48] <CoderGuy> so if it's string cast it as string[][][][][]
[02:18:46] *** Quits: ddakx (~ddakx@user/ddakx) (Quit: ddakx)
[02:18:46] <sonny> makeArray<T>(dim: int) --> <T>[]
[02:19:01] <CoderGuy> sorta but does that work?
[02:19:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:19:08] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:ed1d:2dd8:ba28:fa90)
[02:19:16] <sonny> I think so, isn't that what generics are for?
[02:19:21] <CoderGuy> no because
[02:19:32] <CoderGuy> the T part is gonna be string
[02:19:39] <CoderGuy> and the [] is a single array
[02:19:43] <CoderGuy> I need [][][][][]
[02:19:45] <sonny> well, now I am lost
[02:19:51] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[02:19:52] <sonny> describe your method signature
[02:19:57] <CoderGuy> it's the return part
[02:20:05] <CoderGuy> so sure you can make the array but then
[02:20:22] <CoderGuy> even the array has the type string[][][][][]
[02:20:29] <CoderGuy> but casting it to string[][][][][] is the problem
[02:20:44] <CoderGuy> cuz you need (string[][][][][])thearray;
[02:21:25] <CoderGuy> unless makeArray is something i'm not familiar with
[02:21:43] *** Quits: allegorical (~guest@cpe788df7e7edf3-cm788df7e7edf0.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[02:23:04] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:23:10] <CoderGuy> sonny so the problem is if you start with just an int value for the dimensions, you can create the return statement having the number of square brackets [][] match the int value
[02:23:20] <CoderGuy> can't*
[02:23:27] <CoderGuy> or atleast I don't know how
[02:23:47] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:24:09] <CoderGuy> see <T>[] is a single dimensions, but I want the dimensions to match the int value
[02:24:28] <CoderGuy> so for 2 you have <T>[][] 3 you have <T>[][][] 4 you have <T>[][][][]
[02:25:12] <sonny> Are those not equivalent to <T>[]?
[02:25:20] <CoderGuy> wait 4 real lemme test that
[02:25:29] <CoderGuy> I imagine that just produces a single dimension array
[02:26:07] <sonny> if you don't describe the method signature it will be hard to help
[02:26:53] <CoderGuy> Unable to cast object of type 'System.String[][]' to type 'System.String[]'
[02:27:09] <CoderGuy> so see I created a 2 dimensional array, I used (T[])returnvar;
[02:27:21] <CoderGuy> and it went "that's a single dimensional array, but you have a double"
[02:27:38] <CoderGuy> but maybe
[02:28:15] <CoderGuy> return <T>[]returnvar;  that's invalid syntax so i'm assuming you mean (T[])returnvar;
[02:28:33] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 256 seconds)
[02:28:54] <CoderGuy> if only somehow I could cast it properly so (T[][]) that works for 2dimensional but then how to make it also go (T[][][]) for 3dimensional
[02:28:57] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[02:29:39] *** Joins: flaqoniun (~F@32.211.211.39)
[02:30:00] *** Quits: magla (~gelignite@d5367a39.access.ecotel.net) (Quit: Stay safe!)
[02:30:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[02:30:16] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[02:30:32] *** Quits: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it) (Quit: Leaving)
[02:30:46] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[02:32:32] <kee> CoderGuy: Return Object[].
[02:32:42] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:32:45] <CoderGuy> kee if it's an Object that's already what I have
[02:33:06] <CoderGuy> I want to cast it to string but also have said string match the signature so string[][][] that's for 3, string[][][][] that's for 4
[02:33:07] <kee> Java's type system is nowhere near powerful enough for this.
[02:33:16] <kee> I don't think Rust's is even powerful enough.
[02:33:20] <kee> s/Rust/Haskell/
[02:33:25] <CoderGuy> i'm using c# but
[02:33:34] <kee> Well, C#'s isn't good enough either. :-)
[02:33:41] <CoderGuy> is it really not possible?
[02:33:43] <CoderGuy> I was just curious if it was
[02:33:55] <kee> What would the function's type be, then?
[02:34:08] <CoderGuy> um
[02:34:16] <CoderGuy> good point
[02:34:23] <CoderGuy> but what if i'm not returning what if i'm voiding
[02:34:46] <CoderGuy> I just want to cast it, is it possible to cast based on an unknown type that will be determined after input?
[02:34:47] <kee> You need different branches for T[], T[][], T[][][]…
[02:34:55] <CoderGuy> yeah there is the branch method
[02:35:01] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[02:35:02] <kee> That's the only method that'll work.
[02:35:06] <CoderGuy> but what about based on a number given not based on typing out every single potential outcome ever
[02:35:11] <kee> Nope, not possible.
[02:35:15] <CoderGuy> okay okay cool
[02:35:16] <kee> But also not useful.
[02:35:17] <CoderGuy> next question
[02:35:25] <CoderGuy> how come dynamic achieves it? what do they do to tackle this?
[02:35:39] <CoderGuy> what is this witchcraft that they do?
[02:35:43] <kee> The object contains information about what type it is.
[02:35:49] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:35:49] <CoderGuy> sure and what do they do with that?
[02:35:51] <kee> Then they have a load of branches somewhere further down the line.
[02:35:58] <CoderGuy> they branch it?
[02:36:01] <kee> Yup.
[02:36:04] <CoderGuy> holy crap
[02:36:11] <CoderGuy> what's the limit on the branch list?
[02:36:20] <kee> Well, they often use dynamic dispatch.
[02:36:28] <kee> Instead of explicitly branching, they call a function pointer.
[02:36:38] <CoderGuy> hows that work?
[02:36:50] <kee> The value of the function pointer is different depending on what code should run.
[02:36:58] <kee> So instead of a load of if statements, you just need to call that pointer.
[02:37:07] <kee> Whoever creates the object is responsible for making sure it's set to the right value.
[02:37:08] <CoderGuy> fine but the pointer contains the info right?
[02:37:15] <CoderGuy> so like for 9D they have a pointer to a 9D creator?
[02:37:24] <kee> From an information-theoretic perspective, yeah, the pointer contains the info.
[02:37:40] <CoderGuy> okay so how many of these did they make? is there a file somewhere I cna look at?
[02:37:49] <kee> Well, they don't have 9D, normally.
[02:37:57] <CoderGuy> how is 9D generated?
[02:37:57] <kee> You have 1D or 0D.
[02:38:03] <kee> And 9D is just a 9-long chain of 1D.
[02:38:11] <CoderGuy> how does that happen?
[02:38:16] <kee> It depends.
[02:38:30] <kee> Not sure how C# does it, sorry.
[02:38:31] <CoderGuy> how would you do it just with 2?
[02:38:37] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:38:42] <kee> Depends what I was doing
[02:38:42] <CoderGuy> darnit, I wanna know how they achieve this
[02:38:58] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:39:09] <kee> I'd have a type that had a few function pointers in it.
[02:39:16] <kee> The destructor, obviously. That's a classic.
[02:39:37] <CoderGuy> I don't wanna have to type it I just wanna get the concept
[02:39:37] <kee> Also, a isArray function (or maybe just storing the boolean directly).
[02:39:59] <kee> And then some other functions that do stuff I want to do, like printing maybe.
[02:40:04] <CoderGuy> wait
[02:40:08] <kee> Or getting the length of an array, or the nth element or something.
[02:40:14] <CoderGuy> does it have to do with how a 2D array is made to begin with?
[02:40:17] <kee> Not really.
[02:40:21] <kee> I mean, sorta.
[02:40:31] <kee> But not particularly.
[02:40:53] <CoderGuy> man how do they take a 1D array, and turn it into a ND array
[02:41:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:41:24] <CoderGuy> wait
[02:41:33] <kee> A 1D array of (N-1)D arrays?
[02:41:34] <CoderGuy> is an ND array actually just like N arrays
[02:41:49] *** Joins: filename (~kilitary@188.242.105.134)
[02:41:55] <kee> double[][] can be thought of as (double[])[]
[02:41:57] <CoderGuy> so for example even though I say 2D array is it really just Array A and Array B?
[02:42:03] <kee> No, it's not just two arrays.
[02:42:19] <kee> It's as many arrays as needed.
[02:42:24] <kee> And then an array holding all of those.
[02:42:37] <CoderGuy> hold on starting to make a bit of sense
[02:43:12] *** Joins: Chargen (~chargen@D964062A.static.ziggozakelijk.nl)
[02:43:32] <CoderGuy> also the cast (double[])[] I don't think works lemme try that
[02:43:48] <kee> No, it doesn't work.
[02:44:20] <CoderGuy> yeah so if that doesn't work but maybe there's a different version
[02:45:10] <kee> double[][] would work.
[02:45:31] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[02:45:43] <CoderGuy> sooo if A contains arrays and B contains Arrays
[02:45:57] <CoderGuy> sorry lets simplify
[02:46:07] <CoderGuy> if A contains an Array B or an Array C, or an Array N
[02:46:24] <CoderGuy> You can create A, and then Create B and put B inside A
[02:46:35] <CoderGuy> right?
[02:46:45] <kee> You can think of it that way, yeah.
[02:46:57] <CoderGuy> now if B works just like A
[02:47:04] <CoderGuy> then you can put an array inside B right?
[02:47:09] <kee> Not quite just like, but yeah.
[02:47:15] <kee> They're different types.
[02:47:21] <kee> A has one more level of [] in its type.
[02:47:21] <CoderGuy> so if we have a 3D array lets say
[02:47:35] <duckgoose> HOW
[02:47:43] <duckgoose> how do I program myself a girlfriend
[02:47:56] <kee> duckgoose: Step 1: AI ethics
[02:48:07] <CoderGuy> A[][][]      is A[0][0][0]   actually say C[0]? IE A[0] is B and B[0] is C and thus C[0] is the value A[0][0][0] ?
[02:48:18] <kee> Step 2: bury your head in theoretical xenopsychology.
[02:48:38] <kee> Step 3: develop the concept of "wanting" from pure mathematical first principles.
[02:48:53] <kee> Step 4: realise you probably shouldn't try to program yourself a girlfriend in the first place
[02:48:58] <kee> Step 5: accidentally destroy the world
[02:49:01] <kee> Step 6: ???
[02:49:05] <kee> Step 7: profit
[02:49:12] <CoderGuy> kee is that correct what I wrote?
[02:49:16] <kee> CoderGuy: That seems right.
[02:49:24] <CoderGuy> okay so since they're all individual arrays
[02:49:50] <CoderGuy> how through dynamic does it take that information & then say see look this is your string[][][]
[02:50:01] <CoderGuy> how does it get to that point?
[02:50:10] <kee> There are a few possible ways.
[02:50:27] <kee> One: every object has a pointer to another object that describes it.
[02:50:35] <kee> Two: some variation on that first one.
[02:50:49] <kee> Three: your compiler is just really clever.
[02:50:59] <CoderGuy> wait is there a way through pointers to use functions to point properly?
[02:51:00] <kee> Four: Magic
[02:51:14] <kee> Five: I shouldn't have said "a few possible ways" when there's only really one way.
[02:51:24] <kee> Six: Help I can't stop numbering
[02:51:29] <CoderGuy> okay okay listen
[02:51:38] <CoderGuy> can you like loop over pointers in order to get the right one?
[02:51:45] <kee> Not really.
[02:51:52] <CoderGuy> then how does it match it properly?
[02:52:09] <kee> If every array actually has a secret pointer at the beginning, then A has a pointer to something that says "this is a double[][][]".
[02:52:15] <kee> And B has a pointer to "this is a double[][]"
[02:52:21] <kee> And C has a pointer to "this is a double[]"
[02:52:33] <kee> And D is just a double, which is a primitive, not an object.
[02:52:33] <CoderGuy> ohhhh
[02:52:38] <kee> (This is how it works in Java.)
[02:52:46] <CoderGuy> it's okay it's fair enough
[02:53:02] <CoderGuy> so it just generates new pointer string[][][][] 
[02:53:07] <CoderGuy> and then points everyone to it?
[02:53:13] <kee> Yeah.
[02:53:19] <CoderGuy> cheeaky bstards
[02:53:25] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[02:53:34] <CoderGuy> and i'm like "lemme do it" and they like "no it's a type based language"
[02:53:39] <CoderGuy> "we can do it, dynamically you can't"
[02:53:48] <kee> Well… C# might not do it that way.
[02:53:56] <kee> Does C# have dynamic?
[02:53:56] <CoderGuy> nono I see very clearly why
[02:54:00] <CoderGuy> that was very yes they do
[02:54:04] <CoderGuy> they say "sure cast dynamic achieve this"
[02:54:07] <CoderGuy> and i'm like "what are you doing?"
[02:54:15] <CoderGuy> "why can you do that" and they like "try googling I dare you" XD
[02:54:32] <kee> Hmm. Sounds like C# actually uses method four.
[02:54:42] <CoderGuy> lololol
[02:54:46] <CoderGuy> no it made sense the java way 
[02:54:51] *** Quits: independent56 (~independe@2.26.38.133) (Ping timeout: 256 seconds)
[02:54:59] <CoderGuy> if you're able to use pointers, you can easily achieve this, and i'm stuck thinking my string[][] matters
[02:55:03] <kee> Rust does it a bit differently.
[02:55:08] <CoderGuy> but really when I type string[][] it's like "okay i'll make those pointers"
[02:55:17] <kee> Instead of the objects having a secret pointer at the beginning, dynamic pointers are secretly two pointers.
[02:55:23] <CoderGuy> and there's nothing I can type to generate said pointers, cuz it doesn't want me doing the pointer stuff
[02:55:39] <kee> CoderGuy: C# might have a reflection API.
[02:55:44] <CoderGuy> they do I think
[02:56:01] <CoderGuy> but that's not hte point, this is the point I wanted to learn what it is I"m missing about this casting, and you solved it the fact that pointers exist
[02:56:02] <kee> Java does. Rust kinda does (it's nightly-only). Python does, but it shouldn't.
[02:56:06] <CoderGuy> and this whole time i've been ignoring them
[02:56:30] <CoderGuy> I was so focused on how to cast to string[][] I forgot what that even means
[02:56:45] <CoderGuy> "so you want to assign the pointer of the variable properly"
[02:57:02] <CoderGuy> "well guess what, you can't just willy nilly assign pointers, unless you use dynamic that's the entire point of dynamic that it will handle any pointer"
[02:57:32] <kee> Well. I thought I disliked Java. C# is worse.
[02:57:36] <CoderGuy> and that explains the whole "tree" list, it's like "okay sure write out every pointer possible"
[02:57:51] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:57:57] <edgar-rft> once you have managed to cast stuff to pod you can make a podcast about it
[02:58:08] <CoderGuy> HAHAHAHAHAHAH good one edgar-rft 
[02:58:23] <CoderGuy> okay i'm content with this answer as to why you have to cast stuff ahead of time
[02:58:30] <CoderGuy> how else would a pointer determine what is happening
[02:58:39] <CoderGuy> and if you can't do it, well use dynamic and behind the scenes they will point the things
[02:59:09] <CoderGuy> in a way based on all of that it's like this
[02:59:25] <kee> The information has to be stored somewhere.
[02:59:34] <kee> Either it's stored in the program counter, or it's stored in the data.
[02:59:41] <CoderGuy> I can rewrite it instead of saying "well I just want ya know string[][] what's so hard" it'd be like saying "I'd like a variable we don't know about until runtime to be assigned to this thing"
[02:59:46] *** Joins: moniker- (~mon@dh207-122-170.xnet.hr)
[02:59:53] <kee> CoderGuy: Exactly right!
[03:00:00] <kee> That's a good explanation. I might steal it.
[03:00:03] <CoderGuy> yeah
[03:00:23] <CoderGuy> and it's confusing because <t> seems like "well surely" but T is saying "yeah, give me a known variable , not one we will determine at run time"
[03:00:42] <CoderGuy> and dynamic is like "okay bro, listen I will determine at run time it's fine"
[03:01:05] <CoderGuy> how? "well behind the scenes we have this other language called C where we actually use pointers and I know how that works"
[03:01:22] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[03:01:45] <CoderGuy> yee good talk kee, i've gone over this subject a lot this week, to the point I think some people were fed up with me but I think I actually get it now and I can move on finally :D
[03:01:47] *** tanto_ is now known as tanto
[03:01:49] <CoderGuy> and I learned a lot about pointers :D
[03:02:23] <kee> Well, I'm going to stick my head in some PHP now. I haven't suffered enough today.
[03:02:31] <CoderGuy> ay php isn't so bad
[03:02:34] <CoderGuy> atleast it's dynamic :D
[03:02:36] <CoderGuy> lolololol
[03:02:44] <kee> I'm connecting it to Rust, and from Rust, Python.
[03:02:49] *** Joins: soapsudsxx (~soapsudsx@141.193.188.145)
[03:02:50] <CoderGuy> holy shit
[03:02:54] <kee> Yeah.
[03:02:56] <CoderGuy> that sounds horrific, gl to you :D
[03:03:03] <kee> It's better than it used to be.
[03:03:06] *** Joins: duuude (~user@user/duuude)
[03:03:10] <CoderGuy> well that's good i'm glad they updated
[03:03:15] <CoderGuy> everyone loves a good rust update
[03:03:17] <kee> Rust now has the tools required to handle the four different memory allocators.
[03:03:26] <CoderGuy> holy crap lol
[03:03:28] <kee> And PHP 8 is slightly less nonsensical interally than PHP 7.
[03:03:35] <CoderGuy> interesting
[03:03:53] <CoderGuy> i'm gonna work on solving my problem with a proper data structure that we know AHEAD OF TIME
[03:04:17] <CoderGuy> it's interesting how this problem helped me to learn like how internally json works & also how different data types can be used to tackle what seems like a nested array solution
[03:04:29] <CoderGuy> ALSO that maybe dynamic isn't so bad, if you wanna lazily create something
[03:04:56] <CoderGuy> that superior data structures are really just superior memory/efficiency wise, but ultimately as humans we're kinda lazy
[03:05:27] <kee> Dynamic is actually superior full stop at some things.
[03:05:35] <kee> Usually, though, it's a deficiency in your programming language.
[03:05:43] <CoderGuy> ic
[03:05:58] <CoderGuy> yeah for me i'm using the dynamic to see how it "could work" and then replacing the dynamic with a superior data structure
[03:06:07] <kee> s/it's/the need for dynamic/; dynamic itself isn't a deficiency imo
[03:06:17] <kee> CoderGuy: That is an excellent strategy.
[03:06:32] <CoderGuy> yeah, it seems to work out cuz the loop is exactly the same, it's just how we store the data that needs fixing
[03:06:41] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[03:10:09] *** Joins: snake (~snake@user/snake)
[03:11:39] *** Joins: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net)
[03:12:20] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:12:22] <ProfSimm> Should function arguments be computed before you call a function or when a function reads the argument (uses it in some way)
[03:12:24] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:13:31] <ProfSimm> InPhase: if you're in the mood for bug hunting ;-) http://coltram.com/proto/
[03:13:32] <bayaz> Title: Parser 
[03:17:31] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:18:47] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:20:19] <bjs> ProfSimm: are you familiar with the phrases Call by Need and Call by Value and so on?  these are the standard names for different evaluation strategies for arguments to functions
[03:20:42] <bjs> those are the key phrases to find stuff
[03:22:19] *** Joins: nicbk (~nicbk@user/nicbk)
[03:22:30] <ProfSimm> bjs: yep, I've read a bunch of those. But I'm approaching this from pragmatic level, wondering what people think
[03:22:42] <ProfSimm> bjs: not having to wrap things in closure explicitly to make it lazy has benefits
[03:22:58] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5)
[03:23:12] <ProfSimm> bjs: I'm thinking of maybe having an action called "do" which forces full eval on everything you give to it.
[03:23:19] <ProfSimm> bjs: keeping the rest lazy
[03:24:52] *** Quits: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[03:28:16] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[03:29:42] <biberao> guys
[03:29:47] <biberao> https://github.com/gitmapd/ipynb/blob/master/Omega2.ipynb
[03:29:48] <bayaz> Title: ipynb/Omega2.ipynb at master ? gitmapd/ipynb 
[03:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.232)
[03:33:54] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[03:34:31] *** Quits: pizdets (~pizdets@183.182.111.82) (Ping timeout: 260 seconds)
[03:37:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:37:53] *** Joins: allegorical (~guest@2607:fea8:33e0:65c:ed1d:2dd8:ba28:fa90)
[03:38:52] <bjs> ProfSimm: are you familiar with Haskell's seq function and WHNF?
[03:39:05] *** Joins: pulse (~pulse@user/pulse)
[03:39:14] *** Joins: wauterboi (~wauterboi@185.195.233.148)
[03:39:24] <bjs> Because there are options somewhere between "lazy" and "evaluate everything immediately" that you might want to consider as well
[03:39:58] <nomagno> ProfSimm: can you relink to that language thingy?
[03:40:17] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c:ed1d:2dd8:ba28:fa90) (Ping timeout: 240 seconds)
[03:40:53] *** Quits: stanlib (~archblade@user/stanlib) (Remote host closed the connection)
[03:41:36] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 272 seconds)
[03:44:01] *** Joins: rtypo (~alex@user/rtypo)
[03:48:41] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 256 seconds)
[03:50:36] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[03:50:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:51:24] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[03:53:11] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[03:53:38] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 272 seconds)
[03:54:37] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[03:54:38] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[03:54:48] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:7861:791a:4334:354b:a4c3)
[03:58:17] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:58:20] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[03:58:59] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5) (Quit: Leaving)
[03:59:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:59:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:bc86:9875:5d48:1ce6) (Ping timeout: 260 seconds)
[04:00:24] *** Joins: zwr (~zwr@2804:d45:b966:fb00:e8a7:8c67:601:f50b)
[04:01:31] *** Quits: Akuli (~Akuli@87-94-110-86.bb.dnainternet.fi) (Quit: Akuli)
[04:03:09] *** Quits: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu) (Remote host closed the connection)
[04:03:19] <ProfSimm> nomagno: http://coltram.com/proto/
[04:03:20] <bayaz> Title: Parser 
[04:03:50] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:7495:30c4:96e6:e598) (Quit: Textual IRC Client: www.textualapp.com)
[04:04:55] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[04:05:05] <ProfSimm> bjs: not quite, checking, thanks
[04:05:49] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:07:01] *** Quits: null4bl3 (~null4bl3@87-59-100-236-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[04:09:13] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[04:12:02] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[04:14:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:15:16] *** Joins: Pickchea (~private@user/pickchea)
[04:17:36] <ProfSimm> nomagno: it's a bit like "JSON for languages" one could slap any semantics on that little parser. 
[04:17:45] <ProfSimm> nomagno: I do have specific thing in mind tho
[04:18:10] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[04:18:19] <ProfSimm> nomagno: FYI think of space as your dot operator, i.e. instead of Math.max(10, 20)  you do  math max (10, 20)
[04:18:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[04:19:52] <AmR> I need some help about idea with Qt. I want call parent from child to add widgets to parent, How I can do that ?
[04:20:49] <flaqoniun> idk
[04:23:40] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:c93e:f33d:df5:a660)
[04:31:22] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[04:32:54] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[04:33:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[04:35:29] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 252 seconds)
[04:35:43] *** Quits: aliosablack (~chomwitt@94.66.60.177) (Ping timeout: 256 seconds)
[04:42:02] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:43:30] <pulse> black tea + honey. a heavenly combo
[04:43:39] <jeaye> AmR: #qt may be more helpful.
[04:44:12] <jeaye> pulse: mm, yep. I had black tea + ovaltine this week. Also good.
[04:44:30] <jeaye> Though, normally just black tea alone is great.
[04:44:48] <pulse> i can't read ovaltine and not think of https://www.youtube.com/watch?v=j0qm0KUPeD8
[04:44:49] <bayaz> Title: That's gold, Jerry! Gold! 
[04:45:00] <pulse> i don't even know what ovaltine is lol
[04:45:02] <ProfSimm> I'm having a brainfart right now but what's the closest in Java from  foo.bar to foo["bar"]
[04:45:03] *** Joins: wauterboi7 (~wauterboi@185.195.233.155)
[04:45:09] <ProfSimm> I think there's nothing is there
[04:45:18] <flaqoniun> it's like some powedered chocolate milk i think
[04:45:53] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[04:45:58] <jeaye> https://en.wikipedia.org/wiki/Ovaltine
[04:45:59] <bayaz> Title: Ovaltine - Wikipedia 
[04:46:31] <jeaye> It's kind of like Milo, if you've had that.
[04:46:32] <ProfSimm> It's chocolate from wheat? Ok why not
[04:46:58] <ProfSimm> In Bulgaria we have "boza" which looks like hot chocolate, but it's nothing like
[04:47:00] *** Quits: wauterboi (~wauterboi@185.195.233.148) (Ping timeout: 240 seconds)
[04:47:01] *** wauterboi7 is now known as wauterboi
[04:47:10] <ProfSimm> From wheat
[04:47:10] <pulse> here we have čokolino which may or may not be similar
[04:47:17] <pulse> it's like chocolate flakes
[04:48:37] <jeaye> Nah, this has cocoa in it. Not chocolate from wheat.
[04:48:41] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[04:48:51] <jeaye> Sugar, Cocoa Processed With Alkali, Beet Juice Color, Whey, Caramel Color, Natural Flavor, Carrageenan, Soy Lecithin, Salt. Vitamins And Minerals: Calcium Carbonate, Magnesium Hydroxide, Vitamin C (Sodium Ascorbate), Ferric Orthophosphate (Iron), Zinc Sulfate, Vitamin E Acetate, Niacinamide, Copper Gluconate, Vitamin B6 (Pyridoxine Hydrochloride), Vitamin B1 (Thiamine Hydrochloride), Vitamin
[04:48:53] <jeaye> A Palmitate, Biotin, Vitamin D3.
[04:48:57] <jeaye> https://www.amazon.com/Ovaltine-Rich-Chocolate-12/dp/B003NS6FVO?th=1
[04:52:09] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[04:52:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:53:49] <apotheon> Does anyone here know off-hand of a Go framework/toolset for creating simple web applications at about the level of simplicity of Sinatra (for Ruby) or Flask (for Python)?
[04:55:09] <apotheon> I explicitly want a dynamic back end, not a static site generator, for these purposes.
[04:55:16] <apotheon> Actually, the same for Rust would be nice, too.
[04:55:36] <apotheon> . . . but I don't want anything that gets *anywhere near* the complexity of something like Rails or Django.
[04:56:05] *** Joins: wildo (~lain6141@202.180.111.143)
[05:01:54] <EdFletcher> apotheon: net/http in the standard library is actually really good, i've never really found myself needing anything on top of it: https://pkg.go.dev/net/http 
[05:01:56] <bayaz> Title: http package - net/http - pkg.go.dev 
[05:02:07] <EdFletcher> can't help with rust though, sorry 
[05:02:43] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[05:05:14] <apotheon> Well . . . lacking something more Sinatra-like, I guess I could give net/http a shot.
[05:05:44] <apotheon> Someone in the Rust channel helped me out with two options.  (There doesn't appear to be a Go channel at all.)
[05:06:25] <EdFletcher> it's #go-nuts (kinda dumb name) 
[05:06:46] <EdFletcher> i mean i get it, but still not great 
[05:08:04] <EdFletcher> and fwiw there are a lot of higher-level frameworks in the go ecosystem, the gorilla family is very popular and from what i've seen good https://www.gorillatoolkit.org/ 
[05:08:04] <bayaz> Title: Gorilla, the golang web toolkit 
[05:09:05] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:ec1b:f017:c304:ccde)
[05:12:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[05:18:33] *** Joins: filename (~kilitary@188.242.105.134)
[05:19:48] <apotheon> Hmm.  Gorilla looks kinda like a "build your own Sinatra", at first glance.
[05:20:16] <apotheon> LFS for web frameworks
[05:22:50] *** Joins: Intelo (~Intelo@user/Intelo)
[05:23:18] *** Quits: newwebdev13 (~newwebdev@78.135.92.217) (Quit: Leaving)
[05:23:40] <pulse> so go is the language with all the puns in library/toolkit names
[05:23:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:24:17] <flaqoniun> all the decent ones anyway
[05:24:35] *** Parts: filename (~kilitary@188.242.105.134) (Closing Window)
[05:25:06] <apotheon> With as generic a name as "Go", it's too easy to pun with it.
[05:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[05:25:31] <ProfSimm> apotheon: I hope we Pokemon Go to the Polls
[05:25:37] <apotheon> ugh
[05:25:38] <ProfSimm> apotheon: wait, wrong pun
[05:25:52] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[05:26:06] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:26:08] <apotheon> If you want an anime pun, try Goku.
[05:26:15] *** Parts: Intelo (~Intelo@user/Intelo) ()
[05:26:19] <apotheon> (from an anime I have no interest in watching)
[05:26:27] <oldlaptop> apotheon: the premier Redis client library for Tcl glories in the name "Retcl".
[05:26:40] <oldlaptop> (recall you usually pronounce it "tickle")
[05:26:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:26:55] <apotheon> Yeah, that's how I pronounce Tcl.
[05:29:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:30:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:31:48] *** Quits: linext (~linext@pool-173-63-46-155.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[05:32:36] *** Quits: wauterboi (~wauterboi@185.195.233.155) (Ping timeout: 240 seconds)
[05:33:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[05:34:25] *** Joins: qaph (~weechat@user/qaph)
[05:34:45] <ProfSimm> Is a data stream made of data, or commands which as you run, the data materializes for you as a result
[05:34:57] <ProfSimm> It's more the latter isn't it
[05:35:06] <ProfSimm> Encoding is commands you run to get the actual thing
[05:35:22] <ProfSimm> Encoding. Code.
[05:35:22] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[05:35:27] <ProfSimm> Code. Commands.
[05:35:32] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[05:35:41] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[05:37:15] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 256 seconds)
[05:37:17] *** qaph is now known as kron
[05:39:27] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:40:59] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[05:43:42] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[05:49:48] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[05:49:52] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:49:53] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:53:11] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Quit: WeeChat 3.4)
[05:57:02] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[05:58:06] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:01:31] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Ping timeout: 260 seconds)
[06:02:35] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[06:05:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:07:25] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[06:10:19] *** Joins: snake (~snake@user/snake)
[06:11:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:14:58] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[06:18:05] *** Joins: duuude (~user@user/duuude)
[06:28:40] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4a2c) (Quit: Textual IRC Client: www.textualapp.com)
[06:31:45] *** Joins: MaXxer0 (~MaXxer0@mue-88-130-53-245.dsl.tropolys.de)
[06:32:33] *** Quits: pizdets_ (~pizdets@183.182.111.232) (Ping timeout: 265 seconds)
[06:32:40] *** Joins: zaher_ (~zaher@37.48.188.159)
[06:32:46] *** Joins: yiggityswaps (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d)
[06:34:09] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[06:35:35] *** Quits: zaher (~zaher@37.48.145.12) (Ping timeout: 260 seconds)
[06:35:57] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:7861:791a:4334:354b:a4c3) (Ping timeout: 252 seconds)
[06:39:57] *** Joins: nicbk (~nicbk@user/nicbk)
[06:40:47] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:41:31] *** Joins: Akiva (~Akiva@user/Akiva)
[06:43:13] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:43:16] *** Joins: Inline__ (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de)
[06:43:37] *** Joins: filename (~kilitary@188.242.105.134)
[06:44:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:44:45] *** Quits: Pook (~Pook@2001:8a0:f996:1400:102d:1ec7:9019:dca9) (Quit: Leaving)
[06:45:33] *** Quits: Inline (~Inline@p200300cd472405000b711a3855c27fc9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:45:40] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:46:26] *** Joins: jdmark (~jdmark@user/jdmark)
[06:46:35] *** zaher_ is now known as zaher
[06:52:23] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[06:53:30] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:02:41] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10)
[07:03:58] *** Joins: newpy (~newpy@206.168.231.90)
[07:05:36] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[07:07:00] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[07:09:54] *** Joins: asocialblade (~quassel@static.16.62.161.5.clients.your-server.de)
[07:19:34] *** Joins: comet23 (comet23@user/comet23)
[07:19:40] <comet23> guys it's not fair i just got fired from my job
[07:19:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[07:21:10] <flaqoniun> what was your job?
[07:22:24] *** Quits: suss (~user@user/suss) (Ping timeout: 268 seconds)
[07:22:44] <flaqoniun> did you make fun of the bosses tupe`?
[07:23:17] <comet23> boss asked me to make the code and repo more efficient so i minified the entire dev branch, deleted all the backups we had to save space, and committed it... i also cloned our main branch with the minified files... everything is running so smooth and so much faster because there more space for the computer to breathe in
[07:23:30] <comet23> i guess do you job well enough they will fire you because you're no longer needed
[07:23:35] *** Joins: nicbk (~nicbk@user/nicbk)
[07:23:41] <comet23> so keep being bad at your job =*(
[07:25:13] <comet23> flaqoniun i'm a developer
[07:26:30] <InPhase> comet23: Pretty sure uou're trolling...  :-P  I just helped you with some intro Python code a few hours ago.
[07:26:52] <comet23> yeah i'm trolling lol
[07:26:54] <InPhase> s/uou/you/
[07:27:06] <comet23> i need to lay off the beer
[07:27:34] <comet23> python gets complicated :D
[07:27:35] *** [_] is now known as [itchyjunk]
[07:28:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[07:32:36] *** Quits: MaXxer0 (~MaXxer0@mue-88-130-53-245.dsl.tropolys.de) (Quit: Leaving)
[07:32:36] *** Quits: zaher (~zaher@37.48.188.159) (Ping timeout: 240 seconds)
[07:35:43] *** Joins: exgirl (uid545763@id-545763.tinside.irccloud.com)
[07:36:56] *** Parts: exgirl (uid545763@id-545763.tinside.irccloud.com) ()
[07:40:36] *** Joins: suss (uid545763@user/suss)
[07:43:18] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[07:44:22] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[07:47:50] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[07:53:32] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwome4n40xu0wu.ipv6.telus.net) (Remote host closed the connection)
[07:54:41] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyg09nhkxou7av.ipv6.telus.net)
[07:55:01] *** Joins: Macbethwin (~chargen@8.21.8.240)
[07:57:27] *** Quits: Chargen (~chargen@D964062A.static.ziggozakelijk.nl) (Ping timeout: 256 seconds)
[07:59:22] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[07:59:48] *** Quits: davros (~davros@host86-183-29-131.range86-183.btcentralplus.com) (Ping timeout: 240 seconds)
[08:01:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:04:11] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:04:14] *** Joins: Jck_true1 (~jcktrue@user/jck-true/x-0200799)
[08:04:48] *** Joins: sparkplugg (~sparkplug@2600:100d:b02d:55f3:4833:a62:185:8c38)
[08:04:49] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 256 seconds)
[08:04:49] *** Jck_true1 is now known as Jck_true
[08:07:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10) (Ping timeout: 240 seconds)
[08:08:46] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[08:09:04] *** Joins: Sadale (~Sadale@user/sadale)
[08:10:19] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[08:12:04] *** Joins: davros (~davros@host86-183-29-131.range86-183.btcentralplus.com)
[08:12:23] *** Joins: filename (~kilitary@188.242.105.134)
[08:13:23] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[08:13:35] *** Quits: AmR (~AmREiSa@156.199.157.142) (Quit: Konversation terminated!)
[08:15:55] *** Quits: Macbethwin (~chargen@8.21.8.240) (Ping timeout: 260 seconds)
[08:16:32] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:ec1b:f017:c304:ccde) (Read error: Connection reset by peer)
[08:18:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:18:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf)
[08:19:10] *** Quits: yiggityswaps (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d) (Quit: Leaving)
[08:19:22] <knusbaum> Bummer. I just bought 4 hard disks from NewEgg and all but 1 are DOA.
[08:19:32] <knusbaum> Never had that happen before...
[08:20:00] <knusbaum> https://www.newegg.com/seagate-barracuda-st4000dm004-4tb/p/N82E16822179299?Item=N82E16822179299
[08:20:01] <bayaz> Title: Seagate BarraCuda 4TB 5400 RPM 3.5" Hard Drives - Newegg.com 
[08:21:39] <flaqoniun> those are some odds, was it a refurb?
[08:22:14] <knusbaum> Wasn't supposed to be.
[08:22:25] <knusbaum> I wonder if they got banged around in shipping.
[08:23:00] <knusbaum> Weird thing is they didn't all fail immediately (So I guess not DOA) but 3/4 failed within 2 hours.
[08:23:02] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d)
[08:24:11] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[08:25:45] <pulse> knusbaum, that sucks
[08:25:52] <oldlaptop> The word always used to be that newegg killed drives in packaging.
[08:26:16] <oldlaptop> WD's factory boxes used to be good about that, made it hard for vendors to mess up
[08:26:51] <knusbaum> I'll order some WDs. There are comparably priced drives.
[08:26:55] <oldlaptop> and I'd call a two-hour lifespan DOA for hard disks - they're either going to live two hours or two+ years, generally
[08:27:07] <knusbaum> I thought Seagate was a good name though. 
[08:27:08] <oldlaptop> cheapie in ##hardware would know all about which models are good at any particular time
[08:27:09] <pulse> i'm pretty sure i bought a seagate once and it literally delivered wrapped in a single plastic bag, thrown into in an oversized container
[08:27:14] <knusbaum> But maybe it's not the OEM's fault.
[08:27:19] <flaqoniun> don't they usually put in some cushions? maybe someone fumbled the drives before they hit the box
[08:27:29] <oldlaptop> If newegg packaged them murderously, newegg packaged them murderously.
[08:27:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[08:27:36] <knusbaum> Yeah, they had decent packaging around them.
[08:28:00] <knusbaum> But doesn't look like OEM packaging. Looks like someone at Newegg packaged them.
[08:28:08] <knusbaum> Who knows what happened to them before that.
[08:30:19] *** Quits: comet23 (comet23@user/comet23) (Ping timeout: 256 seconds)
[08:35:27] *** Joins: snake (~snake@user/snake)
[08:35:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[08:35:54] *** Joins: password2 (~password8@user/password2)
[08:37:03] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f)
[08:37:22] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[08:48:58] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[08:52:25] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[08:54:10] *** Joins: swp (~Thunderbi@143.176.249.0)
[08:54:21] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[08:56:21] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyg09nhkxou7av.ipv6.telus.net) (Remote host closed the connection)
[08:56:45] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyg09nhkxou7av.ipv6.telus.net)
[08:58:39] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:00:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[09:02:24] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[09:10:35] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:14:54] *** Quits: MetaNova (~zero-one@znc/supporter/metanova) (Ping timeout: 252 seconds)
[09:15:22] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[09:21:58] *** Joins: programmar (~whatever@118.69.128.37)
[09:22:40] *** Joins: MetaNova (~zero-one@znc/supporter/metanova)
[09:24:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[09:25:34] <vdamewood> Yum, food!
[09:28:05] <programmar> has anyone here ever dealt with cloudflare ? i can't seem to hide my original ip but still manage to get CF to point to it :/
[09:28:30] <programmar> also i am out of channel to ask tho so if this doesn't fit to be asked here pls suggest me :P
[09:29:39] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:19] <BASHitup> Can anyone think of a reason why it would be a bad idea to use OpenSUSE as a daily driver? 
[09:30:26] *** Joins: Phandal (~Phandal@user/phandal)
[09:30:33] <BASHitup> I'm thinking about switching within the next 6 months to a year from Ubuntu. 
[09:30:58] <BASHitup> Cloudflare sucks. Sum total of my thoughts on it, programmar 
[09:31:14] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:30] <programmar> ok so how do u tend to hide your original site ip or avoid minor ddos ? ( say that u host it on-preme )
[09:31:44] <BASHitup> I could help with that. 
[09:32:02] <BASHitup> I'd have to think about it ... But it would involve a DMZ for sure 
[09:32:13] <BASHitup> Multiple firewalls 
[09:32:19] <BASHitup> But you're not paying me ... so 
[09:32:37] <programmar> nya it's ok, ideas are enough, i will figure it out 
[09:33:19] <programmar> but still, how is a firewall is going to hide my ip ?
[09:34:16] *** Joins: vysn (~vysn@user/vysn)
[09:34:38] <BASHitup> The firewall won't hide your IP 
[09:34:43] *** Quits: Phandal (~Phandal@user/phandal) (Client Quit)
[09:34:51] <BASHitup> ... But it will guard against a DDoS 
[09:35:14] <programmar> well yea sure that i know how to setup, but a little bit hassle, but the ip part tho
[09:35:16] *** Joins: Phandal (~Phandal@user/phandal)
[09:35:21] <programmar> cloudflare seems to be the only one doing that
[09:35:28] <BASHitup> And the DMZ is so that you can segment your devices and use SIEMs etc 
[09:35:31] <programmar> or just straight up host it on a vps
[09:35:34] *** Joins: jack_rabbit (knusbaum@gateway/vpn/protonvpn/knusbaum)
[09:35:48] <BASHitup> That too 
[09:36:10] <BASHitup> I would use the VPS, now that you're saying it ... Honestly, though, I think using cloud shit is a bad idea even though I will likely do it myself. 
[09:36:25] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:36:26] <BASHitup> It's being done because it's cheap and affordable and cost-effective, elastic etc 
[09:36:36] <BASHitup> But if those cloud stadiums get attacked, lights out for you 
[09:36:37] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 256 seconds)
[09:36:54] <programmar> yea but currently i am hosting my craps on-preme sadly :P
[09:37:04] <BASHitup> There seems to be no consideration in cybersecurity as to what is going to happen if something like AWS gets taken out ... If even one site gets taken out ... 
[09:37:07] *** Quits: widp (~widp@124.123.106.66) (Ping timeout: 260 seconds)
[09:37:16] <BASHitup> There are locations all over the worlds ... What if even one is nixed. 
[09:37:20] *** Joins: widp (~widp@2405:204:5704:6944::132a:70ad)
[09:37:46] <programmar> i am onl scared of showing my real ip because someone might be running an exploit straight on my router
[09:38:01] <programmar> and also, the management page is publicly available and can't be turned off for some reasons :(
[09:38:04] <programmar> that's also scary
[09:38:14] <BASHitup> I think you should have the backbone of your infrastructure in the cloud but have it backed up by something on-prem in case that fails. 
[09:38:27] <BASHitup> So the on-prem is a fail-safe and a go-to for recovery 
[09:38:53] <BASHitup> Wait, you're doing this in your home, dude? 
[09:39:01] <programmar> er, yea ?
[09:39:03] <BASHitup> Umm ... 
[09:39:15] <BASHitup> Why can't you just use a VPN client? 
[09:39:30] <programmar> well i don't have a credit card that's why
[09:39:30] <BASHitup> I can only think of two cheap ways to obfuscate an IP ... well, maybe three 
[09:39:35] <BASHitup> Proxy servers 
[09:39:38] <BASHitup> VPNs 
[09:39:41] <BASHitup> Tor 
[09:39:44] <BASHitup> Tor is too slow 
[09:39:57] <BASHitup> VPNs work but I've never used one in a production server environment 
[09:40:01] <programmar> Proxy servers don't seem to be trustworthy tho
[09:40:14] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[09:40:24] <BASHitup> Well, then pick a VPN that's not in one of the five-eyes countries 
[09:40:37] <BASHitup> Or, what is it, fourteen eyes now 
[09:41:12] <BASHitup> Then someone like Snowden says a VPN is a one-hop failure point. K, and for someone doing really stupid shit, the feds or whoever will find it ... If it's that intense 
[09:42:38] <programmar> actually most VPNs still require credit card tho, and if it's free, i ain't using it 
[09:42:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:42:45] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[09:42:53] <programmar> maybe i will just wait until i get a credit card and just get a linode host
[09:43:00] <programmar> that can takes some long time
[09:43:36] <programmar> and it's almost impossible to 100% evade the detection of the feds now so i don't wanna waste effort trying that
[09:43:42] <BASHitup> I don't know what you're doing, but I'm not endorsing anything naughty or illegal 
[09:43:54] <BASHitup> I should say since this isn't exactly private here 
[09:44:25] <programmar> my site isn't illegal, who would run an illegal site without Tor or something similar ?
[09:44:29] <programmar> that's stupid
[09:44:37] <BASHitup> Who would run an illegal site and talk about it on IRC, LOL. 
[09:44:46] <programmar> yea that too lol
[09:45:17] <BASHitup> Yeah, the VPNs require a credit card. This is true. But if they don't have logs and all that can be proven is you pay for the service, how is that even relevant. 
[09:45:23] <BASHitup> So someone can prove you use ExpressVPN
[09:45:25] <BASHitup> And ... 
[09:45:27] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:45:32] <BASHitup> So do millions of other customers. 
[09:45:59] <BASHitup> Paying for legal services which can be used for countless purposes isn't illegal or questionable. 
[09:46:14] <BASHitup> Buying a gun in most states and cities is legal. It's what you do with the gun that affects things. 
[09:46:46] <programmar> Uhmm... doesn't most VPNs require u to input the credit card info first before proceeding any further ? 
[09:48:19] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:48:45] <programmar> well either way, probably i will just wait until i get a vps 
[09:48:57] <programmar> that sounds like the best option now if no one here has ever dealt with CF in advance
[09:50:13] <BASHitup> I don't like the VPS idea for myself because you can only use one server, I assume ... Can't just hop around to any server in any country. 
[09:50:20] <BASHitup> So I'm going to pay a provider to give me that option 
[09:50:29] <BASHitup> Also, I can use it on my mobile devices. 
[09:51:06] <programmar> well i am not intending to hop to multiple countries anyway, one server sounds enough
[09:51:17] <programmar> if it avoids people ddosing or running exploit on my home router
[09:51:48] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:53:25] *** Joins: audio (~audio@user/audio)
[09:56:07] <BASHitup> You know there are such things as load balancers, RAID etc 
[09:56:19] <BASHitup> Different server configs e.g., round robin 
[09:56:57] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[09:57:03] <BASHitup> And how are they going to get to your home router through NAT? 
[09:57:11] <BASHitup> So they see your public IP ... Then your router is NAT'd 
[09:57:45] <BASHitup> And with all that you're talking about, you have to watch out for things like SMBv1 which is disabled by default on Windows. But if you're using certain Linux distros maybe it's not disabled 
[09:57:45] *** Quits: widp (~widp@2405:204:5704:6944::132a:70ad) (Read error: Connection reset by peer)
[10:00:53] *** Joins: wauterboi (~wauterboi@185.65.135.237)
[10:00:58] *** Quits: password2 (~password8@user/password2) (Ping timeout: 272 seconds)
[10:01:20] <programmar> BASHitup: do you mean that how they are going to get to my home router if i use a vps ?
[10:01:23] <programmar> or... wut ?
[10:01:51] <BASHitup> No ... haha, if it's on a VPS, it'll be in some other country, I presume. 
[10:01:55] <BASHitup> So off shore somewhere 
[10:02:14] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[10:02:17] <BASHitup> I also don't know all of the details. You can message me personally if you want ... Or we can keep going on about this on here. 
[10:02:49] <programmar> nya it's ok, i think i will try a vps later on, my original goal was to avoid the exploits and ddos only
[10:03:44] <programmar> i haven't thought about load balancing yet tho since it's not a big project
[10:05:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf) (Quit: Leaving)
[10:09:19] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[10:12:36] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[10:14:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:17:57] *** Quits: algodatastruct (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) (Quit: Going offline, see ya! (www.adiirc.com))
[10:24:55] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:28:42] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:32:55] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d) (Read error: Connection reset by peer)
[10:33:26] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[10:33:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[10:34:06] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 252 seconds)
[10:35:17] *** Quits: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:35:33] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[10:37:24] *** Joins: digilink (~digilink@user/digilink)
[10:38:40] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[10:44:21] *** Joins: widp (~widp@124.123.107.152)
[10:46:47] *** Quits: Phandal (~Phandal@user/phandal) (Remote host closed the connection)
[10:49:37] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[10:53:04] *** Joins: parrott (~parrott@2607:fb90:1774:24af:0:3:a0b0:1801)
[10:53:18] *** Parts: parrott (~parrott@2607:fb90:1774:24af:0:3:a0b0:1801) (Leaving)
[10:53:31] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[10:54:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:57:11] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[10:58:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:02:24] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[11:03:19] *** Quits: wauterboi (~wauterboi@185.65.135.237) (Ping timeout: 256 seconds)
[11:03:28] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:06:05] <KillerWasp> hello
[11:06:22] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[11:07:14] <KillerWasp> Since I can't win anything in programming, so I'm into 3D design a bit.
[11:08:15] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f) (Read error: Connection reset by peer)
[11:08:17] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:08:18] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Excess Flood)
[11:08:34] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:08:39] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f)
[11:11:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[11:11:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:12:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:12:05] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Excess Flood)
[11:12:29] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:12:32] *** Quits: LuckyFire (~LuckyFire@46.217.32.109) (Ping timeout: 272 seconds)
[11:12:42] *** Joins: LuckyFire (~LuckyFire@77.29.237.110)
[11:14:26] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[11:17:55] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[11:18:04] *** Joins: independent56 (~independe@2.26.38.133)
[11:18:11] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[11:20:50] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[11:21:09] <BASHitup> Can anyone explain why the outputs in fdisk always seem to be inconsistent with what I see in gparted? 
[11:21:49] <BASHitup> When I switch the disk to Windows using the Win native partition manager, it looks more like what I was seeing using fdisk ... But in Gparted, in some cases, it appears as though fdisk did nothing at all. 
[11:21:59] <BASHitup> Yet I know fdisk is working becuase the changes are obvious in Windows. 
[11:22:07] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[11:25:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[11:26:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:27:23] <Tech_8> BASHitup: what are you trying to do, dual boot?
[11:27:34] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Remote host closed the connection)
[11:27:44] <suss> I just know the frisk should have to sync in idk after changes ,didn’t it tip you?
[11:28:15] <suss> s/idk/disk
[11:28:26] <Tech_8> probaly because fdsisk in windows and gparted is like linux
[11:31:00] *** Joins: soapsudsxx_ (~soapsudsx@141.193.188.145)
[11:31:12] *** Quits: soapsudsxx (~soapsudsx@141.193.188.145) (Read error: Connection reset by peer)
[11:33:44] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[11:34:38] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:35:00] <BASHitup> No, I'm far bast dual booting, Tech_8
[11:35:23] <BASHitup> I've triple booted ... I'm just trying to figure out why the output of fdisk is inconsistent with what I see on Gparted
[11:35:26] <BASHitup> I've run partprobe 
[11:35:28] <BASHitup> Rebooted 
[11:35:35] <BASHitup> fstab should have updated the changes etc 
[11:36:23] <BASHitup> And it all looks right in Windows ... Also, I'm getting the sense that fdisk is a more basic first-level (for lack of better term) formattng program. I'm thinking fdisk is mostly just good for formatting to prepare for installs or raw storage 
[11:37:16] *** Quits: widp (~widp@124.123.107.152) (Read error: Connection reset by peer)
[11:37:29] *** Joins: widp (~widp@124.123.107.152)
[11:37:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:43:21] <pyzozord> KillerWasp: what do you mean by "win"
[11:44:06] <KillerWasp> pyzozord: by gain moneys.
[11:44:40] <pyzozord> oh
[11:46:03] <BASHitup> *Windows 
[11:46:06] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[11:46:25] <pyzozord> KillerWasp: i thought maybe you are into competetive programming
[11:47:13] <BASHitup> Need to get ya boys on dem bounty bugs. 
[11:47:22] <BASHitup> *bug bounties 
[11:49:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:50:22] <pyzozord> i'm more of a bug exterminator than finder to be honest
[11:50:27] <pyzozord> much easier job
[11:50:58] *** Joins: password2 (~password8@user/password2)
[11:51:26] <pyzozord> sneaky little things are good at hiding, but once found you can usually squash them easily
[11:54:42] *** Joins: diamondbond_ (~diamondbo@175.157.58.221)
[11:55:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:55:08] <KillerWasp> pyzozord: besides searching means finding a nest, which is a nightmare for much people.
[11:55:27] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[12:06:52] <pyzozord> ok, time to set up email
[12:07:38] *** Joins: aliosablack (~chomwitt@2a02:587:dc18:da00:eb71:868b:3400:4636)
[12:08:21] <pyzozord> hmm although $5 is kind of expensive :/
[12:11:48] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7)
[12:14:05] *** Joins: user51 (~user51@77.124.35.94)
[12:16:20] <pyzozord> god, i made a solution few years ago in my previous company, I can see they are still using it
[12:16:32] <pyzozord> but I can see how it deteriorates and rots away over the years
[12:16:39] <pyzozord> such a sad sight
[12:16:53] <pyzozord> that's the company that "gets shit done"
[12:17:30] <pyzozord> I'm glad I'm gone from that place
[12:17:59] <smallville7123> oof windows defender is using 200 mb
[12:19:03] <pyzozord> it was a shithole... they literally did so much shit. And they were so proud of "getting shit done"
[12:19:27] *** Joins: Lazenca (~lazenca@user/lazenca)
[12:20:13] <smallville7123> lol
[12:21:55] <KillerWasp> a fucking bug with firefox, don't save the previous links sites.
[12:22:27] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[12:22:59] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[12:23:15] <pyzozord> I don't like to swear but I feel I was excused when talking about a company that literally has swear word in the slogan
[12:23:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:23:55] <KillerWasp> fuckingfox, mmmm, not bad, fuckingzilla, much better
[12:26:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:27:43] <smallville7123> file:///C:/Users/small/AppData/Local/Temp/24753269_p0.jpg
[12:27:52] <smallville7123> oof nothing happen lol
[12:30:30] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[12:31:23] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[12:31:39] *** Joins: img (~img@user/img)
[12:31:57] *** Joins: filename (~kilitary@188.242.105.134)
[12:32:47] * smallville7123 has been debugging dispatchTouchEvent for hours ;-;
[12:35:07] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[12:35:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.179)
[12:36:16] * smallville7123 is very tired of it not working correctly :(
[12:37:57] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[12:38:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:39:32] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[12:39:41] <pyzozord> smallville7123: what is that project you've been working on
[12:40:41] <smallville7123> Android UI
[12:41:09] <pyzozord> that's a big one
[12:41:43] <pyzozord> i saw you checkedout skia, are you going to use it
[12:45:15] <smallville7123> wrong repo
[12:45:18] <smallville7123> :)
[12:45:28] *** Joins: rsx (~dummy@ppp-188-174-159-56.dynamic.mnet-online.de)
[12:45:36] <smallville7123> https://github.com/mgood7123/AndroidUI
[12:45:40] <bayaz> Title: GitHub - mgood7123/AndroidUI: an experimental port of the Android View System 
[12:46:53] <smallville7123> migrated from https://github.com/mgood7123/Xamarin-DAW
[12:46:55] <bayaz> Title: GitHub - mgood7123/Xamarin-DAW 
[12:47:14] <smallville7123> https://github.com/mgood7123/Xamarin-DAW/commits/main
[12:47:15] <bayaz> Title: Commits ? mgood7123/Xamarin-DAW 
[12:49:26] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.179) (Ping timeout: 272 seconds)
[12:50:43] * smallville7123 watches The Flash           <3
[12:53:43] <KillerWasp> nice. i update my list of most hated
[12:54:36] <KillerWasp> https://0x0.st/oq-g.txt
[12:54:37] <bayaz> Type: text/plain; charset=utf-8 Size: 794 B 
[12:54:42] *** Joins: Pickchea (~private@user/pickchea)
[12:55:27] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[12:56:05] *** Quits: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[12:58:38] *** Joins: programmar (~whatever@118.69.128.37)
[12:58:43] *** Parts: programmar (~whatever@118.69.128.37) (Leaving)
[13:00:13] *** Quits: derpy (~quassel@2a02:810d:800:10f8:981f:e570:c8d1:5aae) (Ping timeout: 240 seconds)
[13:00:24] *** Joins: derpy (~quassel@2a02:810d:800:10f8:981f:e570:c8d1:5aae)
[13:00:53] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[13:01:24] *** Joins: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net)
[13:01:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[13:02:19] <Bou> somehow I was expecting a list of IRC nicks there
[13:03:28] <epony> that looks so wrong file:///C:/Users/..
[13:03:47] <epony> there is no TLD /C:
[13:04:26] <epony> you have a C: in your root / directory
[13:04:51] <epony> (WIN/DOS never got URLs and DIRs right, always wrong, and also incorrect)
[13:05:01] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[13:07:56] <epony> if you try with C:\Users you'll need to have a C: sub-directory in your current directory, but then there is this \U escape sequence there, so it must be a 'C:\Users' sub-directory and since : is a reserved char it must be escaped too, so you have C\:Users since you don't need to escape the U char
[13:10:12] <epony> now, imagine you have to use a URL dispatch method, how would that work if it can't find it's "rootdir"
[13:10:39] <epony> "its"
[13:10:44] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[13:12:06] <epony> the magic window of WINDIRs in WIN/DOS makes WINNINGs and LEARNINGs ;-)
[13:12:55] <BASHitup> Yeah, whatever ... F*CK windows 
[13:13:06] <BASHitup> Hyper-inflated broken GUI nightmare 
[13:13:39] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:13:45] <BASHitup> Although ... I do like Windows 11 more than CNET and everyone else slamming it. It may be better than the Ubuntu I'm on ... But it's never going to topple nix as a whole. 
[13:13:51] <epony> it's a thing  http://www.google.com/search?q=Microsoft+"learnings"
[13:13:51] <beaky> nice i have to install windows one day its been years
[13:13:52] <bayaz> Title: Microsoft - Google Search 
[13:14:17] <BASHitup> Well, Win 11 is pretty much Win 10. What all the critics are saying is accurate enough. 
[13:15:02] <BASHitup> Thinly veiled Win 10 ... You have to click "more options" when you right click to rename or do certain other gui actions ... as the default options aren't immediate in some cases. 
[13:15:28] <BASHitup> Other than that I'm finding few if any differences. The main interface is probably stolen from Chromebook or some Linux variety 
[13:15:45] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 268 seconds)
[13:15:45] <epony> what is LAN/MAN for 5 USD?  https://en.wikipedia.org/wiki/LAN_Manager
[13:15:46] <bayaz> Title: LAN Manager - Wikipedia 
[13:15:59] *** Joins: jaysicks (~jaysicks@212-40-76-98.pool.digikabel.hu)
[13:16:47] <BASHitup> I keep thinking every now and then that Windows has fewer bugs than Ubuntu. That idea evaporated rapidly when literally none of the front USB ports on the machine would read. 
[13:18:11] *** Quits: diamondbond_ (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[13:18:19] <epony> what is SMB/CIFS for 10 USD?  https://en.wikipedia.org/wiki/Server_Message_Block
[13:18:20] <bayaz> Title: Server Message Block - Wikipedia 
[13:18:45] <vdamewood> for 10 USD?
[13:18:47] *** Joins: palasso (~palasso@user/palasso)
[13:19:33] *** Joins: namkeleser (~namkelese@101.175.155.55)
[13:20:14] <namkeleser> Hi, can anyone spot any security vulnerabilities in my website? https://github.com/jamesmahones/website2
[13:20:31] *** Joins: sozuba (~sozuba@user/sozuba)
[13:21:29] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[13:21:57] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[13:22:41] <epony> what is WIN/BIND for 15 USD?  https://en.wikipedia.org/wiki/NetBIOS_over_TCP/IP#Name_service
[13:22:41] <bayaz> Title: NetBIOS over TCP/IP - Wikipedia 
[13:29:49] <epony> what is WIN/RPC for 445 USD?  https://en.wikipedia.org/wiki/Samba_(software)#Security
[13:29:49] <bayaz> Title: Samba (software) - Wikipedia 
[13:30:00] *** Joins: rtypo (~alex@user/rtypo)
[13:36:10] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:37:08] *** Quits: widp (~widp@124.123.107.152) (Read error: Connection reset by peer)
[13:38:54] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Ping timeout: 252 seconds)
[13:42:33] *** Joins: teut (~teut@103.144.92.214)
[13:45:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:47:31] *** Joins: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941)
[13:47:37] *** Quits: Dreamwea- (~Dreamweav@37.48.111.199) (Ping timeout: 250 seconds)
[13:48:32] *** Quits: PsyZeus (~TheLight@user/psyzeus) (Ping timeout: 240 seconds)
[13:49:03] <terminalpusher> Does anyone here have a terminal that distinguishes Enter from CTRL+Enter? (So that not both give ^M)
[13:49:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:50:14] <epony> try with M+Return
[13:50:15] *** Joins: vitali64 (~vitali64@user/vitali64)
[13:50:15] *** Joins: DreamweaverN (~Dreamweav@37.48.111.199)
[13:50:18] <epony> remote services vulnerability reports:  480 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=SMB ; 73 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=CIFS ; 559 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=RPC ; 221 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=NFS ; 31 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=DCOM ; 22 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=LSASS ; 100 http://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=RDP
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:50:22] <bayaz> Title: CVE - Search Results 
[13:51:25] <terminalpusher> epony: that gives me an M and a \r character. It's not really possible to press them as a conmbination
[13:51:54] <epony> ^M is a control char
[13:52:07] <epony> the way to get it is to press C+Return
[13:52:45] <terminalpusher> Well I need to detect CTRL+Enter in the raw mode of a terminal
[13:53:18] <epony> https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Basic_ASCII_control_codes
[13:53:19] <bayaz> Title: C0 and C1 control codes - Wikipedia 
[13:53:20] *** amigojapan is now known as norm
[13:53:23] *** Joins: vitali64_ (~vitali64@user/vitali64)
[13:53:38] <epony> if you run an application inside your terminal emulator, it will be caught first by the application
[13:53:45] *** norm is now known as amigojapan
[13:53:46] <terminalpusher> https://stackoverflow.com/questions/598113/can-terminals-detect-shift-enter-or-control-enter supposedly gnome-terminal gives you <NL> instead of ^M when you press CTRL+V and then CTRL+Enter as a test
[13:53:47] <bayaz> Title: Can terminals detect <Shift-Enter> or <Control-Enter>? 
[13:54:25] <terminalpusher> but for me it doesn't
[13:54:54] <terminalpusher> all terminals I tested just give me \r (or ^M)
[13:55:43] <epony> then it will fallthrough to the terminal and then your (command) shell
[13:56:33] <KillerWasp> C0 and C1 is only an applicable standard, although the control characters already have their own functions. The same you can apply your own functions for the control characters.
[13:56:37] *** Joins: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::)
[13:56:37] *** Quits: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::) (Changing host)
[13:56:37] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[13:57:03] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[13:59:34] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[14:01:05] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:01:20] <sozuba> Is there a way to search for all functions with a .so file?
[14:02:33] <epony> see https://en.wikipedia.org/wiki/Newline#Representation for the Unicode ideographs
[14:02:33] <bayaz> Title: Newline - Wikipedia 
[14:04:09] <BASHitup> THE SAVAGE BRIGADE. THE HORROR. THE TERROR 
[14:04:45] <BASHitup> Wait, namkeleser? 
[14:04:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[14:04:50] <BASHitup> You're looking for a pentest? 
[14:04:55] <BASHitup> I just saw this 
[14:05:17] <epony> sozuba, http://man.openbsd.org/nm#e
[14:05:18] <bayaz> Title: nm(1) - OpenBSD manual pages 
[14:05:32] *** vitali64_ is now known as vitali64
[14:06:08] <sozuba> epony thanks
[14:08:15] <epony> there are others like strings(1), objdump(1), readelf(1)
[14:08:38] *** Joins: bnchs__ (~bnchs@160.176.36.81)
[14:08:46] <namkeleser> BASHitup you just saw what? any security vulnerabilities?
[14:09:09] <sozuba> epony: cool, looking into that :)
[14:11:45] <epony> on GNU which is used on most Linux kernel systems  https://en.wikipedia.org/wiki/GNU_Binutils#Commands
[14:11:46] <bayaz> Title: GNU Binutils - Wikipedia 
[14:14:00] <terminalpusher> What is an actual example of a Unicode character with 4 bytes? Is there actually any writing system or something using 4 bytes or who is a notable user of 4 bytes?
[14:14:18] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[14:14:20] <sozuba> i was aware if nm, readelf and objdump. But in a "just know what" kinda way. Didn't see it in the way i need. Will try and see how this works
[14:15:07] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:16:26] <epony> could be system dependent, https://stackoverflow.com/questions/4514745/how-do-i-view-the-list-of-functions-a-linux-shared-library-is-exporting
[14:16:26] <bayaz> Title: How do I view the list of functions a Linux shared library is exporting? 
[14:21:42] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:22:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:26:20] *** Quits: wildo (~lain6141@202.180.111.143) (Ping timeout: 272 seconds)
[14:26:54] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:30:27] *** Joins: veek (~veek@117.192.17.111)
[14:31:18] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:32:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:32:50] <epony> https://en.wikipedia.org/wiki/Name_mangling#See_also ; https://en.wikipedia.org/wiki/Template:Application_binary_interface
[14:32:50] <bayaz> Title: Name mangling - Wikipedia 
[14:32:50] <bayaz> Title: Template:Application binary interface - Wikipedia 
[14:35:19] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[14:35:35] *** Quits: veek (~veek@117.192.17.111) (Quit: Leaving)
[14:37:39] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[14:38:22] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Client Quit)
[14:39:28] *** Joins: vitali64 (~vitali64@user/vitali64)
[14:40:30] *** Joins: duuude (~user@user/duuude)
[14:42:03] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[14:42:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:43:11] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:44:09] *** Joins: pizdets (~pizdets@183.182.115.185)
[14:44:57] *** Quits: sozuba (~sozuba@user/sozuba) (Quit: Client closed)
[14:46:57] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[14:47:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:47:48] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[14:48:02] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:49:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[14:50:07] *** Joins: savolla (~quassel@95.10.200.51)
[14:52:02] *** Joins: sozuba (~sozuba@user/sozuba)
[14:52:08] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:52:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:52:59] <sozuba> epony, that's more related. Thanks. Sorry had a call and when i got back i got disconnected, :d
[14:53:34] *** Joins: aradesh (~aradesh@user/aradesh)
[14:58:16] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:58:17] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:58:17] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:58:45] <epony> no worries, it's all in the "non-standard" options to nm  https://pubs.opengroup.org/onlinepubs/9699919799/utilities/nm.html
[14:58:45] <bayaz> Title: nm 
[14:59:45] <smallville7123> is getPointerCount always == 1 in ACTION_DOWN ?
[14:59:49] <smallville7123> in MotionEvent
[15:00:16] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[15:00:32] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[15:00:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:01:42] <epony> sozuba, tangent on a greater topics  http://www.google.com/search?q=tips+and+tricks+for+working+with+shared+objects+.so
[15:01:43] <bayaz> Title: tips and tricks for working with shared objects .so - Google Search 
[15:06:52] <smallville7123> oof click-bait
[15:07:05] <smallville7123> dont post a google search :P
[15:08:17] *** Inline__ is now known as Inline
[15:08:41] <sozuba> Good point, thanks epony
[15:08:49] <sozuba> but yeah "google" hahaha
[15:09:33] <sozuba> i've even removed "to google" from my lexicon, replaced it with "web search"
[15:09:34] <sozuba> :D
[15:10:01] <sozuba> got to go, thank you.
[15:11:15] *** Quits: sozuba (~sozuba@user/sozuba) (Quit: Client closed)
[15:16:37] *** Quits: teut (~teut@103.144.92.214) (Ping timeout: 256 seconds)
[15:16:51] *** Joins: teut (~teut@106.207.199.0)
[15:20:02] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:21:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[15:21:31] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:21:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:22:05] *** Joins: lisp123 (~lisp123@143.238.164.103)
[15:23:05] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[15:23:10] *** Joins: xkuru (~xkuru@user/xkuru)
[15:24:24] *** Quits: suss (uid545763@user/suss) (Quit: Connection closed for inactivity)
[15:25:07] <ProfSimm> "Evaluate" implies producing a "value" rom the etymology doens't it
[15:25:13] <ProfSimm> from*
[15:25:28] <smallville7123> does the `MotionEvent.ACTION_DOWN` event always have a pointer count of 1
[15:29:40] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Ping timeout: 272 seconds)
[15:29:42] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:29:57] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[15:30:59] *** Quits: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941) (Remote host closed the connection)
[15:31:10] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[15:32:39] <ProfSimm> smallville7123: why not slap 5 fingers on the screen and test it 
[15:32:58] *** Joins: newwebdev13 (~newwebdev@78.135.92.217)
[15:34:07] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:35:07] <smallville7123> cant be bothered setting up a testing environment for that
[15:37:10] <ProfSimm> smallville7123: I don't code on Android, but I'm just curious about your question, found this: " A gesture starts with a motion event with ACTION_DOWN that provides the location of the first pointer down. As each additional pointer that goes down or up, the framework will generate a motion event with ACTION_POINTER_DOWN or ACTION_POINTER_UP accordingly." Tis seems to imply count is 1 I think
[15:37:18] <ProfSimm> https://developer.android.com/reference/android/view/MotionEvent
[15:37:20] <bayaz> Title: MotionEvent ?|? Android Developers 
[15:37:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:37:48] *** Quits: teut (~teut@106.207.199.0) (Quit: Ping timeout (120 seconds))
[15:40:57] <smallville7123> does not state anything regarding the amount of expected pointers in any specific event
[15:41:32] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[15:41:56] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[15:42:13] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:42:41] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[15:43:08] <ProfSimm> smallville7123: it doesn't but I'm reading it as ACTION_DOWN fires always on the first pointer down, then it's ACTION_POINTER_DOWN on additional ones.
[15:43:33] <ProfSimm> smallville7123: this makes sense logically if all you care about is one pointer, you can only monitor ACTION_DOWN and ACTION_UP
[15:43:40] <ProfSimm> smallville7123: it's a programming thing
[15:44:02] <smallville7123> yes but does it happen for ACTION_POINTER_DOWN as well
[15:44:06] <ProfSimm> smallville7123: they could've chosen better names tho
[15:44:14] <ProfSimm> smallville7123: what happens
[15:44:17] <smallville7123> eg would ACTION_POINTER_DOWN always have 1 pointer count
[15:44:27] *** Joins: Klinda (~superleag@user/klinda)
[15:45:39] <ProfSimm> smallville7123: that's not how I read it. I think additional pointers would return count 2, 3, 4 and so on, with each additional finger
[15:46:48] <ProfSimm> smallville7123: testing is the best teacher
[15:48:33] <smallville7123> cant be bothered setting up a testing environment for that
[15:48:40] *** Quits: independent56 (~independe@2.26.38.133) (Ping timeout: 272 seconds)
[15:52:33] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[15:53:16] <password2> ok
[15:53:22] <password2> lets see if someoen is smarter than me
[15:53:42] <password2> for ($i=0; $i < count($history) - $history % 3; $i++) 
[15:53:54] <GeDaMo> Bash?
[15:53:56] <password2> oh lol i see my issue
[15:53:58] <password2> nvm
[15:53:59] <password2> php
[15:54:02] <GeDaMo> Ah
[15:54:41] <password2> the goal was to loop through maximum set of data that would be divisible by three
[15:55:17] <password2> $history % 3 should have been count($history) % 3 
[15:55:48] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:539b:76e5:4f97:99bc)
[15:56:01] <password2> i'm proud of my for loop :P
[15:57:04] *** Joins: Rounin (~david@84.212.130.215)
[15:57:17] <Bou> hm, it does run count() twice though, I'd write `3 * floor( count($history) / 3)`
[15:57:22] <audio> https://preview.redd.it/yj253q39kop81.jpg?width=789&auto=webp&s=91fbf0077d9cfb7d84c63c7bcff1a488b31a43ec
[15:57:23] <bayaz> Type: image/jpeg Size: 75.1 kB 
[15:57:55] *** Joins: vitali64_ (~vitali64@user/vitali64)
[15:57:59] <smallville7123> oof
[15:58:07] <password2> yeah i'm not worried about running count twice
[15:58:14] <password2> i doubt it takes that long :P
[15:58:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:58:41] <smallville7123> it would if the data is large enough
[15:58:45] <password2> count is O(1)
[15:58:49] <Bou> depends on the storage
[15:58:50] <GeDaMo> You can always assign it to a variable first
[15:59:41] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[15:59:48] <password2> GeDaMo, wont make a difference
[15:59:54] <password2> it just looks up a property
[16:00:02] <GeDaMo> The remainder operator might
[16:00:07] <password2> unless i run this loop 100x a second
[16:01:10] <password2> i geus variable lookup is much faster than a function call , but again , its not called often
[16:01:24] <ProfSimm> In a pure OOP, objects have no type. They either respond to given interfaces or don't. So how'd you test your arguments are of a given type.
[16:02:06] <GeDaMo> Why do you need to test their type?
[16:02:38] <ProfSimm> GeDaMo: well you have function sum() that takes 2 numbers. You prolly wanna check if the caller sent you 2 numbers.
[16:03:13] <GeDaMo> Do you get the value from the numbers by sending a message to them?
[16:04:39] <ProfSimm> GeDaMo: that's the complicated part. If everything is a function, you're sending a message containing functions and getting back functions. I guess we do need one "real" data type. And after a lot of thinking, the only core data type that makes sense is bytes.
[16:04:51] <ProfSimm> GeDaMo: so let's assume you send bytes as a message and get bytes.
[16:07:52] <GeDaMo> In SmallTalk, numbers are added by sending an add message one with the other as a parameter
[16:08:39] <GeDaMo> Maybe a meta message whereby you can ask an object if it supports a particular message
[16:09:04] *** Joins: Vrganj (~Vrganj@93-142-89-137.adsl.net.t-com.hr)
[16:09:53] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 256 seconds)
[16:10:27] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[16:11:09] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[16:14:56] *** Quits: davros (~davros@host86-183-29-131.range86-183.btcentralplus.com) (Quit: Leaving)
[16:15:31] <ProfSimm> GeDaMo: re SmallTalk that solves the problem for the first argument sure, but not for the second one :)
[16:16:08] <ProfSimm> GeDaMo: meta message yes. Or alternatively have a "message not supported' response to any mesage.
[16:16:16] <ProfSimm> GeDaMo: but this again means you crash too late
[16:16:33] <ProfSimm> GeDaMo: I just wonder conceptually what types are 
[16:16:44] <ProfSimm> GeDaMo: "pre-knowledge" about the thing before it runs
[16:16:45] <GeDaMo> Object orientation as defined by Alan Kay uses late binding
[16:16:51] <ProfSimm> Sure
[16:16:56] <ProfSimm> Pure OOP is typeless.
[16:17:08] <ProfSimm> But also we know what happens with no types at all
[16:17:09] <ProfSimm> A mess.
[16:17:26] <ProfSimm> So what are types, I don't know. Rails of some sort. Constraints on a system, before it even runs
[16:17:52] <GeDaMo> I have wondered in the past about having a constraint system available at compile time
[16:17:53] *** Joins: suss (uid545763@user/suss)
[16:18:04] <ProfSimm> GeDaMo: I'm reducing my AST to just evaluation chains and bytes and wondering if I need core value types or not.
[16:18:38] <ProfSimm> I can technically represent any value as:   float = floatConstructor(bytes)
[16:18:55] *** Quits: sparkplugg (~sparkplug@2600:100d:b02d:55f3:4833:a62:185:8c38) (Ping timeout: 260 seconds)
[16:19:35] <ProfSimm> GeDaMo: but because everything is late bound, I technically don't know what floatConstructor is until I find it at runtime
[16:19:53] <ProfSimm> GeDaMo: so I see just   thing = anotherthing(bytes)
[16:19:54] *** Joins: xbkkd (~F0@user/xbkkd)
[16:19:57] <ProfSimm> In the AST
[16:20:14] <ProfSimm> With some arbitrary names
[16:20:20] <ProfSimm> Arbitrary as to their semantics i mean
[16:20:31] <ProfSimm> It's all determined by the std lib and runtime environment
[16:20:51] <GeDaMo> Alan Kay has said in the past that making everything an object may have been a mistake
[16:21:11] <GeDaMo> So maybe primitive types like int and float have special status
[16:21:14] <ProfSimm> GeDaMo: depends how wide his net when he says "object"
[16:21:44] <ProfSimm> GeDaMo: the problem with primitives is that it makes them privileged compared to any other content type
[16:22:15] <ProfSimm> GeDaMo: if you wanna add a value type, say raster image. You can't type it in source now, nor show it in the AST as a node type
[16:22:44] <ProfSimm> GeDaMo: primitives seem like an optimization, not a core need of the system is my point
[16:23:14] <ProfSimm> GeDaMo: i.e.  -1.2597e10 is just a special case of   constr(bytes)
[16:24:22] <ProfSimm> GeDaMo: so I wanted to maybe see if the "basic" AST can do away with primitives and they only happen at runtime when this tree starts reducing (evaluating)
[16:24:31] <ProfSimm> GeDaMo: i.e. that's when the numbers and text and so on emerges
[16:25:11] *** Joins: davros (~davros@host86-183-29-131.range86-183.btcentralplus.com)
[16:25:29] <ProfSimm> GeDaMo: technically "bytes" is also an eval chain. You know, the infamous church bools I keep yapping about 
[16:25:44] <ProfSimm> It's an eval chain to which you pass two functions. And the bit-stream calls one or the other in sequence
[16:26:03] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:26:11] <ProfSimm> So it's all eval chains
[16:27:06] <davros> before i go and buy a mac is there a way to get a hint how my wasm/webgl page would behave on their browser
[16:27:19] <ProfSimm> davve: hint?
[16:27:37] <ProfSimm> davve: you can go to an Apple store and open a test page and see for yourself
[16:28:03] <davve> i think you mean davros
[16:28:08] <ProfSimm> ffffuuu
[16:28:16] <ProfSimm> davve: pardon
[16:28:21] <ProfSimm> davros: ^
[16:28:58] <davros> i've been able to run my stuff on chrome, firefox on linux , and i've seen someone run it on windows but i'm told it doesn't work on a mac :/
[16:29:25] <davros> i've got ipads here but they dont seem to support webgl2  (a high effort solution is to do a cut down webgl 1 version  :/)
[16:29:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[16:30:25] <davros> i'm guessing Chrome and Firefox are the only linux web browsers that support wegbl2+wasm .. trying to think if I have other options for testing other configs, before I go buy new hardware
[16:30:40] <davros> the M1 is pretty awesome but I kind of want to boycott apple if i can
[16:30:54] <davros> prefer to save my $$$ for PC hardware, especially GPUs
[16:31:07] <GeDaMo> https://caniuse.com/webgl2
[16:31:07] <bayaz> Title: WebGL 2.0 | Can I use... Support tables for HTML5, CSS3, etc 
[16:31:32] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:33:25] <ProfSimm> davros: Macs have the same Chrome you run on Windows.
[16:33:40] *** Joins: xkuru (~xkuru@user/xkuru)
[16:33:40] <ProfSimm> davros: but again if you wanna buy a Mac, go and test it
[16:33:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:34:14] <ProfSimm> davros: "the M1 is pretty awesome but I kind of want to boycott apple if i can" lolwut
[16:37:37] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[16:38:17] <davros> there is the possibility of it being a driver / device differnce, e.g i'm using a pc with a gtx 970, they have run it on integrated graphics and a differnet card
[16:38:38] <davros> now I see there's a toggle for webGL2 on the iPad i have, and i'm seeing a test page work
[16:39:15] <ProfSimm> davros: if it runs on an iPad, then you have zero worries about M1 Macs
[16:39:24] <nomagno> WebKit also supports WebGL, but not WASM
[16:39:42] <nomagno> I'm using vimb, which is a thin WebKit wrapper, on FreeBSD atm
[16:39:46] <davros> before i google is there a 1liner that can get my linux pc serving something an ipad on my local netework can see (so far i've just been running on localhost, i'm  not so versed in web things)
[16:39:53] <nomagno> Works fine
[16:39:59] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[16:40:04] <davros> i use "python3 -m http.server" to test locally
[16:40:06] <ProfSimm> nomagno: hm https://www.infoq.com/news/2017/06/webkit-webassembly/
[16:40:07] <bayaz> Title: WebKit Now Has Full Support for WebAssembly 
[16:40:13] <ProfSimm> nomagno: maybe not shipped?
[16:40:26] <nomagno> Prons IDK
[16:40:32] <nomagno> probs*
[16:40:54] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[16:41:05] *** Joins: independent56 (~independe@2.26.38.133)
[16:44:36] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:44:50] <BASHitup> No, haha, I'm not digging through your site without any paperwork, dude. *namkeleser 
[16:45:13] <BASHitup> There's no scope, permission, redtape. Not about all of that 
[16:46:12] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f) (Ping timeout: 240 seconds)
[16:47:01] *** Joins: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f)
[16:48:03] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[16:49:15] *** Quits: password2 (~password8@user/password2) (Ping timeout: 260 seconds)
[16:51:15] *** Quits: savolla (~quassel@95.10.200.51) (Ping timeout: 256 seconds)
[16:51:25] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[16:52:10] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[16:52:28] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[16:53:16] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:54:36] *** Joins: norayr (376bc34bfc@37.252.78.253)
[16:55:21] *** Joins: inky (~inky@5.77.183.200)
[16:55:24] *** Joins: savolla (~quassel@95.10.200.51)
[16:56:06] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[16:56:06] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[16:57:04] *** Quits: inky_ (~inky@46.36.114.138) (Ping timeout: 272 seconds)
[16:58:49] *** Joins: Iolo (~iolo@user/Iolo)
[17:00:27] *** Quits: vitali64_ (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[17:00:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 252 seconds)
[17:01:00] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[17:07:33] *** Joins: Twipply (~Twipply@user/twipply)
[17:08:13] *** Karyon_ is now known as Karyon
[17:11:44] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[17:14:28] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[17:14:52] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[17:16:09] *** Quits: independent56 (~independe@2.26.38.133) (Quit: Leaving)
[17:16:15] *** Joins: hololeap (~hololeap@user/hololeap)
[17:16:25] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[17:16:44] *** Joins: Tazy (~Tazmainia@2001:1c02:170a:4000::1003)
[17:18:16] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[17:19:14] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[17:20:36] <davros> figured out how to serve something on my pc that my ipad can see, but my code still wont run on it hah. looks like its stalling on loading the wasm blob , asfar as i can tell
[17:20:58] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[17:21:14] <davros> ive seen how to enable webgl2 on safari on the ipad , and seen a test page running (although that was probably js)
[17:21:14] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.179)
[17:22:29] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:22:56] *** Joins: jsmooth (~quassel@2600:6c54:7b00:0:e9ed:33a0:b79e:46c)
[17:22:56] *** Quits: jsmooth (~quassel@2600:6c54:7b00:0:e9ed:33a0:b79e:46c) (Changing host)
[17:22:56] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:23:17] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:23:37] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[17:24:29] <ProfSimm> nomagno: did you mess with the parser ;-)
[17:24:44] <ProfSimm> nomagno: it's not much, but I'll put some runtime stuff on it these days
[17:24:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:26:49] <davros> i'm guessing you'd need a mac to get at an ipads web browser debug-console, right?
[17:27:46] <ProfSimm> 5k victims in Yugoslavia when NATO attacked. Ukraine victims have far surpassed this. Blood on Russia's hands.
[17:27:55] <ProfSimm> over 10k Russian soldiers dead alone
[17:28:02] <ProfSimm> Oops sorry wrong chan
[17:28:44] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[17:29:32] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[17:30:19] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[17:30:21] <ProfSimm> davros: iOS dev requires a Mac yes
[17:30:30] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:30:34] <ProfSimm> davros: including web
[17:32:46] *** Joins: Enitin (~Enitin@82.180.145.230)
[17:34:03] *** Joins: plastico (~plastico@neomutt/plastico)
[17:35:18] *** Joins: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net)
[17:37:02] <davros> i would guess they dont try hard with wasm (or may even cripple it) to keep people using the app store
[17:37:19] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[17:37:39] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[17:37:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:45] *** Joins: norayr (376bc34bfc@37.252.78.253)
[17:38:08] <ProfSimm> davros: the app store biases them, but security biases them the most.
[17:38:49] <ProfSimm> davros: apparently WASM is in technical preview for Safari.
[17:39:02] <ProfSimm> davros: to me this shows commitment to bring it in, when they feel it's done
[17:40:15] <ProfSimm> davros: Safari is being badmouthed a lot right now because it's behind Chrome. It's being compared to IE6, but this is ridiculous for anyone who remembers IE6.
[17:40:33] <ProfSimm> davve: Chrome on the other hand is way too trigger happy adding USB device support and what not to the web. Insanity
[17:40:43] <ProfSimm> davve: dude, sorry :P
[17:40:49] <ProfSimm> davros: ^
[17:42:23] <davros> usb read/write data ?
[17:42:29] <davros> or usb controllers and so on
[17:43:20] <Vrganj> would it be possible to connect regular bluetooth to an iphone? I think iphones only support bluetooth le at this point
[17:43:35] <Vrganj> I've got a wii remote and I want to mess around a bit with it
[17:43:45] <ProfSimm> davros: https://developer.chrome.com/docs/extensions/reference/usb/
[17:43:45] <bayaz> Title: chrome.usb - Chrome Developers 
[17:44:58] *** Joins: _filename (~kilitary@188.242.105.134)
[17:47:53] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[17:48:50] <davros> i'm trying to find a non-trivial wasm example to see if wasm even works on the  ipad
[17:49:00] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[17:49:08] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[17:49:17] <davros> my code just freezes. is it because my wasm blob is just defeating it.. or is it a compatability issue
[17:49:44] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[17:49:48] <amazigh> davros: look at https://github.com/schism-lang/schism
[17:49:49] <bayaz> Title: GitHub - schism-lang/schism: A self-hosting Scheme to WebAssembly compiler 
[17:50:09] <amazigh> there is a playground where you can compile scheme in the browser
[17:52:10] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 272 seconds)
[17:52:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:52:27] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Quit: Leaving)
[17:52:45] *** Joins: teut (~teut@103.144.92.141)
[17:56:20] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[17:58:07] *** Quits: bnchs__ (~bnchs@160.176.36.81) (Ping timeout: 256 seconds)
[17:58:40] *** Joins: duuude (~user@user/duuude)
[18:00:12] <epony> why in a browser, when you have a real computer ;-)
[18:00:31] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Quit: Leaving)
[18:00:41] <epony> that's not self-hosting, that's browser nested
[18:01:04] <epony> self-hosting is when it compiler itself without anything else required natively on the machine
[18:01:21] <epony> that is "independent" and "free from external stages"
[18:01:55] *** Joins: bnchs (~bnchs@105.154.67.78)
[18:02:00] <epony> https://en.wikipedia.org/wiki/Self-hosting_(compilers)
[18:02:00] <bayaz> Title: Self-hosting (compilers) - Wikipedia 
[18:02:40] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[18:02:40] *** Quits: xbkkd (~F0@user/xbkkd) (Remote host closed the connection)
[18:02:40] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Remote host closed the connection)
[18:02:40] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[18:02:40] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[18:02:58] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[18:03:06] <epony> https://en.wikipedia.org/wiki/History_of_compiler_construction#Self-hosting_compilers
[18:03:06] <bayaz> Title: History of compiler construction - Wikipedia 
[18:03:27] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[18:03:31] <epony> https://en.wikipedia.org/wiki/Bootstrapping_(compilers)#Process
[18:03:32] <bayaz> Title: Bootstrapping (compilers) - Wikipedia 
[18:03:47] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:03:59] *** Quits: Twipply (~Twipply@user/twipply) (Read error: Connection reset by peer)
[18:04:07] *** Joins: hololeap (~hololeap@user/hololeap)
[18:04:23] *** Joins: Twipply (~Twipply@user/twipply)
[18:06:22] <ProfSimm> epony: your definition strictly means the only self-hosting compiler is one that boostraps itself from boot
[18:06:31] <epony> https://en.wikipedia.org/wiki/Compiler-compiler#Variants  "Among the earliest programs of the original Unix versions being built at Bell Labs was the two-part lex and yacc system, which was normally used to output C programming language code, but had a flexible output system that could be used for everything from programming languages to text file conversion. Their modern GNU versions are flex and bison."  used in bootstrapping compilers
[18:06:32] <bayaz> Title: Compiler-compiler - Wikipedia 
[18:07:06] <epony> well, you can use an interpreted embedded in a web browser, as tooling
[18:07:07] <ProfSimm> epony: not enough, I say the only self-hosting compiler is one that can produce the computer it runs on
[18:07:22] *** Quits: swp (~Thunderbi@143.176.249.0) (Ping timeout: 272 seconds)
[18:07:29] *** Joins: easyme (~easyme@user/easyme)
[18:07:36] <epony> but it's just not feasible on small machines
[18:07:47] <ProfSimm> Maybe also produce the universe first
[18:07:55] <ProfSimm> Ultimate self-hosting compiler
[18:08:07] *** Joins: CaCode_ (~CaCode@user/cacode)
[18:08:09] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[18:08:17] <epony> so limits your portability to just a type of machine where your browser runs, and that's quite few types of computer (form factor) and software runtimes
[18:08:33] <epony> let's not talk philosophical nonsense each time technical details are discussed
[18:08:38] <smlckz> for pedagogical purposes, what would you recommend using for comparison of algorithms before delving into computational complexity?
[18:08:58] *** Joins: bnchs__ (~bnchs@105.154.70.104)
[18:08:58] <epony> pseudocode
[18:09:18] <epony> https://en.wikipedia.org/wiki/Pseudocode#Syntax
[18:09:19] <bayaz> Title: Pseudocode - Wikipedia 
[18:09:25] <ProfSimm> epony: you're the one who starts discussing what self-hosting means. The trivial meaning is quite simple: language that compiles itself. There's no requirement to "use nothing" on the computer
[18:09:29] <CaCode_> Which book can I read to gain strong fundamentals in  distributed systems design and development?
[18:09:33] <ProfSimm> epony: which means running in the browser is fine
[18:09:42] <epony> ^ pseudocode is good for teaching purposes
[18:09:54] *** Quits: bnchs__ (~bnchs@105.154.70.104) (Remote host closed the connection)
[18:10:06] <epony> (some simlper languages may be of use too, mostly easily comparable to pseudocode)
[18:10:17] <smlckz> the students have already implemented the algorithm in C
[18:10:25] <CaCode_> epony is there a compiler for pseudocode?
[18:10:26] <epony> ProfSimm, that's limiting and futile ;-)
[18:10:27] <smlckz> *algorithms
[18:10:36] *** Quits: bnchs (~bnchs@105.154.67.78) (Ping timeout: 240 seconds)
[18:10:48] *** Joins: bnchs__ (~bnchs@105.154.70.104)
[18:10:57] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[18:11:22] *** Parts: easyme (~easyme@user/easyme) ()
[18:11:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[18:12:04] <epony> CaCode_, should be (and are) for "Some syntax sources include Fortran, Pascal, BASIC, C, C++, Java, Lisp, and ALGOL."
[18:12:07] <CaCode_> epony this seems to be a compiler for pseudocode
[18:12:09] <CaCode_> https://pseudocode.deepjain.com/index.php
[18:12:12] <bayaz> Title: Online Pseudocode Editor & Compiler 
[18:12:28] <epony> interesting ;-)
[18:12:50] <ProfSimm> epony: self-hosting is not a binary proposition, it's more like a degree from 0% to 100%. Where between those extremes you have an element of loop, i.e. something produces itself, however small. That loop makes it self-hosting. 0% is no loop at all (say, JS compiler written entirely in C), and 100% would be recreating the universe :P
[18:13:38] <ProfSimm> epony: and it is interesting regardless because it means more portable platform.
[18:13:46] <ProfSimm> epony: and frankly browsers are damn portable.
[18:13:59] <epony> you can also fit a couple of music player and tetris games in your compiler, so you can entertain yourself while it compilers
[18:14:01] *** Joins: Sadale (~Sadale@user/sadale)
[18:14:05] <smlckz> pseudocode is good for description of the algorithms, but i want to compare different algorithms using some measure, hopefully not implementation-dependent
[18:14:07] <ProfSimm> epony: I'm writing my own language in TypeScript before I make it self-hosting as I want to run it on any site
[18:14:11] <epony> ProfSimm, the shit they are not
[18:14:30] <epony> target windows and linux on x86 and arm only
[18:14:52] <epony> and that "arm" is a "different" browser altogether
[18:15:07] <ProfSimm> epony: you see, if i make it self-hosted in a browser, then I only need to implement the RUNTIME in C and suddenly I have a self-hosted compiler without a browser.
[18:15:26] <epony> why did you put the browser in there ;-)
[18:15:27] *** Quits: bnchs__ (~bnchs@105.154.70.104) (Ping timeout: 256 seconds)
[18:15:38] <ProfSimm> epony: because as I said I want to run it on any browser
[18:15:57] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:16:19] <epony> smlckz, then that would be analysis of algorithms in time and space.. which is a bit more than the limitation you set in your previous question
[18:16:20] <ProfSimm> epony: I have a small binary with the prototype, do you want to download it and run it/
[18:16:25] <ProfSimm> epony: let me guess. No.
[18:16:34] <ProfSimm> epony: but if I give you a link, you might as well open it: http://coltram.com/proto/
[18:16:35] <bayaz> Title: Parser 
[18:16:38] <ProfSimm> epony: QED
[18:16:42] <epony> you mean the browser is smaller than a compiler?
[18:16:58] <epony> *that would be a major achievement in browsers*
[18:17:00] <ProfSimm> epony: who's talking about "smaller"
[18:17:10] <ProfSimm> epony: where is size in anything i said
[18:17:24] <CaCode_> markov chains?
[18:17:34] <epony> ProfSimm, you said "you have a small binary"
[18:17:52] <epony> dude, listen and read what you're typing ;-)
[18:18:15] <epony> right here:  Mar26 1346<ProfSimm> epony: I have a small binary with the prototype, do you want to download it and run it/
[18:18:53] <epony> and I raise the stake comparing with and without the browser (which is lowering the stake really)
[18:18:56] <ProfSimm> epony: you didn't understand what i said, I'll rephrase myself. Which one are you more likely to want and be able to run right now: 1) if I gave you a small binary with a parser 2) if i gave you a web page with a JS parser
[18:18:59] <ProfSimm> epony: pick one
[18:19:46] <ProfSimm> epony: the web is the most universal content and application distribution platform we have. Face it.
[18:19:52] <ProfSimm> epony: sandboxed too
[18:20:01] <ProfSimm> epony: ignoring it is, well, ignorant
[18:20:04] *** Joins: Kodaology (~Kodaology@80.7.169.16)
[18:20:07] <smlckz> ''most universal'' *siiiigh*
[18:20:18] <epony> since browsers are very complex and came to exist with an embedded interpreter in the late 90ies, maybe we should have waited between 1969 and 1999 for this bootstrap ;-)
[18:20:31] <ProfSimm> epony: the web runs the same on ARM, Intel and so on
[18:20:52] <epony> I like how you say my name before I have time to read your suggestion..
[18:21:16] <ProfSimm> Anyway
[18:21:45] <epony> but it's easy to understand that browsers are narrow targets on small number of platforms with extreme overhead and are just exercises in bytecode translation
[18:21:46] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:22:21] <ProfSimm> epony: yeah that's ignorant. You didn't answer my question too
[18:22:26] <ProfSimm> epony:  1) or 2)
[18:22:36] <epony> so might as well throw away the document render and webrtc when you're compiling shtuff (non-modular browsers, auch the sting, wow the burn)
[18:23:04] <ProfSimm> epony: I can throw away 95% of your operating system when running a binary compiler as well
[18:23:11] <ProfSimm> What's the point of saying it
[18:23:38] <ProfSimm> The web is a platform. You don't have to use ALL OF IT, for it to be useful.
[18:23:43] <epony> that you have a modular design of your operating system, and a non-modular all-in-one with your wowser
[18:23:43] <ProfSimm> What's useful is it's the same everywhere.
[18:23:56] <Kodaology> Exactly lol.
[18:24:01] <epony> it's not a no platform, it's a program that sucks
[18:24:14] <Kodaology> What program are you guys talking about?
[18:24:32] <epony> some Chrome dingies
[18:24:54] <ProfSimm> Kodaology: he was arguing what's a "self hosted compiler' arguing if it runs in a browser it's not self-hosted as it needs a browser.
[18:24:56] <Kodaology> Chrome, smh. Uses up too much ram if I am being honestr.
[18:25:01] <epony> (for example, since it's the dominant program)
[18:25:07] <ProfSimm> Kodaology: and I happen to be writing a compiler in JS which will eventually be self-hosted
[18:25:21] <Kodaology> Did you see that video that Linus made where he ran like 1000 chrome tabs
[18:25:39] <ProfSimm> Sigh.
[18:25:44] * ProfSimm goes back to better things
[18:25:49] <epony> ProfSimm, I don't argue, since I just said my opinion, it's you arguing against some person because you think the browser is something really special like a universal machine
[18:26:11] <epony> while it is just a program around a bytecode runtime
[18:26:24] <ProfSimm> epony: you didn't answer my question 1) or 2) because it defeats your entire argument
[18:26:40] <ProfSimm> epony: your CPU is also a bytecode runtime, genius
[18:27:01] <epony> might as well use a hyperviros (hyperviseur) GUI frontend to run a real OS inside and do the same
[18:27:22] <ProfSimm> epony: 1) or 2)
[18:27:30] <smlckz> then you have the physics is the ''real'' runtime
[18:27:37] <ProfSimm> Anyway your refusal to answer is QED enough.
[18:27:41] <epony> ProfSimm, you're a more believer than genius though ;-)
[18:27:51] <epony> ProfSimm, I skipped that question.. let me read it
[18:27:58] <ProfSimm> smlckz: that's the point
[18:28:06] <ProfSimm> smlckz: there's always a runtime
[18:28:29] <ProfSimm> smlckz: and somehow it's always way too bloated for any individual task you need it for ;-)
[18:29:44] <smlckz> and my question got drowned.. what are you actually debating about here?
[18:30:13] <ProfSimm> Nothing. Back to your question.
[18:30:18] <epony> ProfSimm, I use a web browser without an interpreter, just the text document parser, since the other alternative is non-modular and provides no choice and all-in-one approach that is problematic in a number of ways
[18:30:40] <epony> so, 2) is eliminated from your offers
[18:30:51] <ProfSimm> epony: and 1) also is
[18:30:59] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Ping timeout: 256 seconds)
[18:31:07] <ProfSimm> epony: so this about also describes the overlap between us 
[18:31:40] <epony> 1) I don't accept binaries from you, but if they are a group of people who did their work well.. I will have that as modular tooling in my operating system and programming environment
[18:31:57] <ProfSimm> epony: yes, yes you're very special turns out.
[18:32:07] <ProfSimm> Anyone else in the world would open a link and run the app
[18:32:22] <epony> cause I don't trust your design choices, not because I don't want your improvement on good design choices
[18:33:03] <epony> ProfSimm, well, maybe not just everyone else, only the people who are suckers and get infectored easily.. naive crowds that want to click links (believers)
[18:33:19] <ProfSimm> epony: do you have a smartphone
[18:33:30] <epony> that's like grabbing an archive and running it without knowing what that is too
[18:33:44] <ProfSimm> epony: the web is sandboxed. 
[18:34:01] <epony> ProfSimm, that's getting too personal, but as a matter of fact, why do you think the smartphone is where development work happens?
[18:34:01] <smlckz> ProfSimm: but the mind is not.
[18:34:09] <ProfSimm> Look, you wanna take your highly unique situation and somehow describe the world through it
[18:34:28] <ProfSimm> 99.9999% of the world uses normal browsers
[18:34:34] <ProfSimm> On their phone, computers and so on
[18:34:41] <ProfSimm> So I target them.
[18:34:49] <ProfSimm> Not epony.
[18:35:11] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:35:16] <smlckz> fine, what is the problem with that..
[18:35:25] <epony> be honest and admit in front of everyone, that the phone is a runtime not a development environment, since you design and program the applications on a larger computer with more resources and compile it for the embedded runtime in a mobile operating system like bytecode
[18:36:00] <ProfSimm> epony: I never said a phone is a "developer environment"
[18:36:07] <ProfSimm> epony: but it can be
[18:36:37] <epony> so, it's easy for you to assume "the browser" is the computer, while it's just a program that does not run on most server computers, just client viewers
[18:36:57] <epony> so think of it as one of many pagers
[18:37:11] <epony> that you have as extra software on your computer
[18:37:14] <ProfSimm> OK, way too silly. 
[18:37:17] <ProfSimm> See ya
[18:37:36] <epony> ProfSimm, you said genius, now silly.. make up your mind ;-)
[18:37:38] *** Quits: Inline (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de) (Quit: Leaving)
[18:38:19] <epony> ProfSimm, see, try with the watch.. there you will have more compelling browserlinking
[18:40:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[18:41:05] <ProfSimm> epony: I'll just say one last thing. One of the most frequent errors of the human mind I spot is absolute categorization. Just because you're used to thinking of a browser as an application, doesn't mean it's not a platform. A browser is an application to the OS it runs in. It's a platform that runs applications on its own right.
[18:41:13] <ProfSimm> epony: categories are always subjective and relative.
[18:41:22] <epony> I don't object to saying many things..
[18:41:26] <ProfSimm> epony: if you treat them as absolute, basically your thinking suffers.
[18:42:19] <epony> of course, you can prove that the JS interpreter works.. with whatever you like, just don't call it "self-hosted"
[18:43:14] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[18:43:40] <ProfSimm> epony: TypeScript is self-hosted.
[18:43:47] <ProfSimm> epony: and happens to compile to JS
[18:44:26] <epony> then, it means it compiles itself and then is a compiler on its own
[18:44:54] <epony> so why would it run in a nested runtime and call it self-hosted still
[18:45:29] <ProfSimm> I'm glad that after all the time we wasted, you still don't understand what self-hosted compiler means.
[18:45:40] <ProfSimm> It's a self-hosted compiler, not a "self-hosted runtime"
[18:45:45] <epony> "The full compiler is built twice in order to compare the outputs of the two stages. If they are different, either the bootstrap or the full compiler contains a bug."
[18:46:51] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 256 seconds)
[18:46:56] *** Quits: newwebdev13 (~newwebdev@78.135.92.217) (Read error: Connection reset by peer)
[18:47:09] *** Joins: newwebdev13 (~newwebdev@78.135.92.217)
[18:47:24] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651)
[18:47:31] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[18:48:27] <epony> quote: Mar26 1319<amazigh> davros: look at https://github.com/schism-lang/schism  Mar26 1319<bayaz> Title: GitHub - schism-lang/schism: A self-hosting Scheme to WebAssembly compiler
[18:48:28] <bayaz> Title: GitHub - schism-lang/schism: A self-hosting Scheme to WebAssembly compiler 
[18:49:24] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 240 seconds)
[18:49:40] <epony> self-hosting scheme to.. what? ;-) read carefully  https://en.wikipedia.org/wiki/Bootstrapping_(compilers)#Process
[18:49:40] <bayaz> Title: Bootstrapping (compilers) - Wikipedia 
[18:50:16] <amigojapan> epony: I am making an app for programming in nativescript on your mobile device now, here is a screenshot. I still want to add code highlighting  https://usercontent.irccloud-cdn.com/file/dGMi6pEI/2022_03_13_12.54.54.jpg
[18:50:16] <bayaz> Type: image/jpeg Size: 24.1 kB 
[18:50:16] * ProfSimm just imagines epony being in a continuous unending cultural shock ever since browsers became popular in the mid-90s
[18:51:27] <epony> ProfSimm, I just don't shove everything in a JS embedded interpreter, if that is what you call cultural shock, then it's not it
[18:51:28] <ProfSimm> amigojapan: I gotta ping you when my project advances, I think we have some similar ideas about enabling programming on any device and in a "blocks" type of UI
[18:52:04] <ProfSimm> amigojapan: NAtiveScript is JS with native APIs right?
[18:52:17] <amigojapan> Yup ProfSimm 
[18:52:19] <amazigh> native as native american
[18:52:21] <amazigh> ?
[18:52:31] <ProfSimm> amigojapan: what's the intended use case for your particular app.
[18:52:48] <amigojapan> amazigh: as in native UI controls for that mobile device
[18:52:54] <ProfSimm> amigojapan: i.e. how do you imagine people using it to make apps on phones
[18:53:00] <ProfSimm> amigojapan: what kinda apps
[18:53:40] <amigojapan> ProfSimm: GUI apps?
[18:53:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:54:01] <smallville7123> epony: indeed
[18:54:03] <smallville7123> like people that attempt to compile AOSP itself on their phone
[18:54:06] <amigojapan> ProfSimm: it's a general programming language
[18:55:01] *** Joins: Rathskalon (uid65285@id-65285.lymington.irccloud.com)
[18:55:02] <epony> phones now are relatively large memory devices, but not all of that is available to you.. so you end up running into hard limits if you try to compile your web browser on the phone
[18:55:10] <amigojapan> ProfSimm: I demonstrated adding a lable but you can add any control
[18:55:52] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[18:56:03] <epony> now imagine having to compile your browser in a JS bytecode interpreter embedded in your browser running on your populated phone..
[18:56:05] <ProfSimm> amigojapan: I wonder if you won't benefit from a language with more minimal syntax, which can compile to NativeScript
[18:56:34] <amigojapan> ProfSimm: once I add syntax highlighting and saving and loading scripts I will call it a day
[18:56:52] <ProfSimm> epony: do you understand the difference between runtime and compiler
[18:57:06] <epony> you will quickly find out it's not ideal as a "computing platform" and lacks operating system modularity and efficiency design choices (the application and programming environment, not the UI and syntax)
[18:57:07] <ProfSimm> epony: a self-hosted compiler doesn't have to compile the operating system it's running on, do you understand thart
[18:57:42] <ProfSimm> epony: most windows computers can't compile the windows operating system either
[18:58:15] <ProfSimm> epony: I have no idea why I keep entertaining your confusion
[18:58:30] <amigojapan> ProfSimm: after the script is finished it can be dropped into a shell script on a Mac to build both iOS and Android versions of the app
[18:58:30] <epony> ProfSimm, why do you want people to suffer in a constrained environment to make a wrong statement appear like it's universal and all empowering while it is impoverish strategy removing the power of your entire system and giving you a small subset of it, controlled by someone else?
[18:58:42] <ProfSimm> amigojapan: have you considered using an existing editor to do that and you do the blocks and so on
[18:59:01] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[18:59:07] <ProfSimm> amigojapan: I'm playing with Monaco editor, used in VS Code
[18:59:13] <ProfSimm> amigojapan: it's heavy tho
[18:59:14] <kee> epony: JavaScript is more efficient these days than you seem to think.
[18:59:17] <KillerWasp> hello
[18:59:22] <KillerWasp> amigojapan: o/
[18:59:29] <kee> It's JIT'd, and there are dedicated JavaScript x86 instructions,
[18:59:46] <amigojapan> O/ KillerWasp 
[18:59:50] <epony> the point is, self-hosting compiles itself with the compiler it compiled the first time which was in another language or runtime
[18:59:55] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 260 seconds)
[19:00:04] <ProfSimm> kee: TIL https://stackoverflow.com/questions/50966676/why-do-arm-chips-have-an-instruction-with-javascript-in-the-name-fjcvtzs
[19:00:05] <bayaz> Title: Why do ARM chips have an instruction with Javascript in the name (FJCVTZS)? 
[19:00:12] <kee> epony: Why isn't JavaScript a valid self-hosting target?
[19:00:15] <epony> if it remains running in another environment, why do you insist calling it self-hosting?
[19:00:17] <ProfSimm> kee: that's hilarious, but also very significant of what runs the world
[19:00:26] <amigojapan> epony: when you use a real keyboard in an iPad it's not that bad
[19:00:33] <epony> that project was "wasm"
[19:00:52] <kee> ProfSimm: I don't disagree that the web is the predominant platform, but I disagree that it's a good thing.
[19:00:57] <ProfSimm> kee: epony doesn't understand the difference between runtme and compiler. 
[19:01:05] <epony> kee, see carefully this section  https://en.wikipedia.org/wiki/Bootstrapping_(compilers)#Process
[19:01:05] <bayaz> Title: Bootstrapping (compilers) - Wikipedia 
[19:01:07] <kee> ProfSimm: epony seems to, to me.
[19:01:29] <kee> epony: What do you mean "another environment"?
[19:01:40] <epony> I think it's easy to understand why an interpreter is not a self-hosting compiler until it compiles itself
[19:01:42] <kee> Everything's always running in another environment.
[19:01:55] *** Joins: pulse (~pulse@user/pulse)
[19:01:57] <epony> and produces a compiler that does not need later stage interpreters
[19:02:15] <epony> yeah, you just don't call it self-hosted when it's not ;-)
[19:02:24] <kee> epony: If your self-hosting compiler targets JVM, is it self-hosting?
[19:02:38] <epony> only if it compiles itself
[19:02:43] <kee> Assume it does.
[19:02:47] <kee> And it compiles itself to JVM.
[19:03:05] <amigojapan> ProfSimm: I had a similar app made in the titatim framework and it was very popular, but it got taken down by Google
[19:03:16] <ProfSimm> amigojapan: sorry to hear
[19:03:17] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 256 seconds)
[19:03:17] <epony> Stage 0: preparing an environment for the bootstrap compiler to work with. Stage 1: the bootstrap compiler is produced. Stage 2: a full compiler is produced by the bootstrap compiler. Stage 3: a full compiler is produced by the stage 2 full compiler.
[19:03:24] <epony> ^ that's a quote
[19:03:49] *** Joins: defiant (~defiant@user/defiant)
[19:04:06] <amigojapan> ProfSimm: what do you mean by another editor? You mean in the phone itself?
[19:04:12] <epony> what was quoted was an interpreter
[19:04:23] <kee> Then stage 4, and compare the outputs of stages 3 and 4, and if they're not the same there's a bug.
[19:04:31] <epony> from some GH project that interprets Scheme to Wasm
[19:04:46] <ProfSimm> amigojapan: I think code entry on a phone is specific so my idea was not relevant
[19:05:00] <epony> (Scheme itself is self-hosting, but not in that implementation)
[19:05:07] <amigojapan> Ah ok ProfSimm 
[19:05:10] <kee> epony: Was it an interpreter?
[19:05:15] <kee> Why do you say that?
[19:05:24] <epony> the fact that "someone managed to pull off scheme to wasm interpreter, does not mean self-hosting"
[19:05:33] *** Quits: savolla (~quassel@95.10.200.51) (Ping timeout: 256 seconds)
[19:05:39] <kee> There's no such thing as “scheme to WASM interpreter”.
[19:05:41] *** Quits: Kodaology (~Kodaology@80.7.169.16) (Quit: Leaving)
[19:05:47] <kee> There are scheme interpreters written in WASM.
[19:05:58] <kee> But they don't do anything “to WASM”.
[19:06:26] <epony> repeat quote: Mar26 1319<amazigh> davros: look at https://github.com/schism-lang/schism  Mar26 1319<bayaz> Title: GitHub - schism-lang/schism: A self-hosting Scheme to WebAssembly compiler
[19:06:27] <bayaz> Title: GitHub - schism-lang/schism: A self-hosting Scheme to WebAssembly compiler 
[19:06:46] <epony> which I commented on, that it's not self-hosting ;-)
[19:06:53] <kee> Why do you say that?
[19:07:04] <epony> prove it is
[19:07:25] <amigojapan> epony: by self hosting you mean it can compile itself?
[19:07:28] <kee> Proof would be showing that it converts scheme to WASM.
[19:07:39] <kee> Also that it is written in a dialect of scheme that it can convert to WASM.
[19:08:03] <epony> no, it would mean that it can compile its compiler written in its language
[19:08:06] <kee> I think it's obvious it does both of those, though?
[19:08:11] <epony> nope
[19:08:11] <kee> epony: Yeah, that's what I said.
[19:08:18] <epony> and no, you did not say that
[19:08:55] <amigojapan> I don't care much of it is self hosting or not I guess
[19:09:09] <epony> that's what the project author claims
[19:09:15] <kee> A compiler converts code in language A to code in language B.
[19:09:23] <kee> A self-hosting compiler is written in language A.
[19:09:57] <kee> A = Scheme
[19:09:59] <kee> B = WASM
[19:10:01] <kee> Is this wrong?
[19:10:26] <epony> nope ;-)  Mar26 1349<ProfSimm> epony: the web is the most universal content and application distribution platform we have. Face it.
[19:10:53] <kee> That's not wrong either.
[19:11:06] <kee> (And it's bad.)
[19:11:31] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[19:12:06] <epony> kee, what you described is an interpreter, not a compiler
[19:12:13] <epony> a transpiler
[19:12:37] <epony> also known as a source to source compiler
[19:12:52] <epony> so yes, it's incorrect
[19:12:57] *** Joins: savolla (~quassel@95.10.200.51)
[19:12:59] <epony> (as terminology and definitions)
[19:13:09] <amigojapan> kee: is the scheme compiler written in scheme?
[19:14:00] <kee> amigojapan: I think so?
[19:14:13] <kee> epony: Transpiler is a type of compiler.
[19:14:17] <amigojapan> Then I think it is self hosting
[19:14:17] <kee> Not an interpreter.
[19:14:27] <kee> An interpreter runs code.
[19:14:34] <ProfSimm> kee: it was bad, but it's less bad every next day, because the web is always evolving. Who would've thought WASM would be a thing in the 90s for ex.
[19:14:49] <kee> ProfSimm: It's more bad every day, because the web is always bloating and Chrome's the only implementation.
[19:15:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:15:19] <amigojapan> kee: install Firefox
[19:15:21] <ProfSimm> kee: well that's bad not because of the web as a concept, but because of Google usurping it.
[19:15:28] <kee> ProfSimm: My thoughts exactly.
[19:15:36] *** Joins: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941)
[19:15:37] <kee> amigojapan: Firefox isn't sufficient. It's also almost as bad these days.
[19:15:44] <epony> in your example it is an interpreter not a compiler
[19:15:56] <kee> epony: https://en.wikipedia.org/wiki/transpiler
[19:15:57] <bayaz> Title: Source-to-source compiler - Wikipedia 
[19:16:02] <kee> Transpilers are compilers.
[19:16:04] <davros> imagine if the browser could be reduced to a more barebones wasm engine , with the rest of the bloat implemented *in* wasm
[19:16:09] <kee> Even if you claim WASM is source, which it isn't.
[19:16:11] <ProfSimm> kee: at least we have Safari ;-)
[19:16:19] <davros> ^as optional libraries
[19:16:19] <kee> WASM is just as valid a target as the JVM.
[19:16:33] <amigojapan> kee: at least Firefox let's you add plugins on Android
[19:16:50] <ProfSimm> amigojapan: Safari also has plugins
[19:17:00] <epony> kee, the point is, it's not self-hosting when it's a cross-compiler or transpiler
[19:17:07] <ProfSimm> amigojapan: limited, but enough for ads and the like
[19:17:10] <epony> also, what you listed is an interpreter
[19:17:24] <kee> epony: It is self-hosting if it's a cross-compiler…
[19:17:24] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[19:17:26] <ProfSimm> epony: your CPU is an interpreter
[19:17:31] <kee> Also, it's not a cross-compiler.
[19:17:41] <amigojapan> ProfSimm: yeah but I prefer Firefox cause it is opensource age multi platform
[19:17:43] <kee> It's WASM that compiles to WASM.
[19:17:44] <epony> ProfSimm, you don't know what CPUs I use ;-)
[19:18:00] <epony> you assume everyone uses a web browser to compile their compilers
[19:18:09] <ProfSimm> epony: let me guess, your made your CPU from whatever you had in the garage.
[19:18:23] <epony> ProfSimm, that's how browsers are made
[19:18:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:18:33] <ProfSimm> epony: all CPUs are interpreters regardless
[19:18:48] <epony> from other peoples garages
[19:19:00] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:19:13] <epony> ProfSimm, you just don't give your CPU source code to run, you give it machine code instructions
[19:19:42] <ProfSimm> epony: machine code instructions are opcodes
[19:19:50] <ProfSimm> epony: opcodes are what most interpreters run on
[19:20:05] <epony> otherwise it would have to be a fairly recent CPU with an embedded interpreter for your source code, while it executes machine code instructions according to some ISA which you target
[19:20:13] <oldlaptop> kee: It's still (amazingly enough) not quite correct that Chrome is the only implementation of GoogVM, amazingly enough.
[19:20:19] <amigojapan> Ok going to sleep guys, good night
[19:20:30] <oldlaptop> firefox is easily complete enough to qualify, even webkit hasn't teetered off the edge /yet/
[19:20:34] <ProfSimm> epony: I honestly don't understand if you're trolling or really that hard set into wrong definitions
[19:20:50] <ProfSimm> epony: your CPU is an interpreter, period
[19:20:54] <epony> ProfSimm, you definitely can run machine code on processors without interpreters but logic blocks implementing the instructions
[19:21:04] <oldlaptop> (This doesn't mean the situation is /good/, merely that it hasn't devolved to a *single* implementation quite yet)
[19:21:13] <davros> hang on
[19:21:23] <ProfSimm> epony: https://en.wikipedia.org/wiki/Interpreter_(computing)#Computer_processor
[19:21:24] <bayaz> Title: Interpreter (computing) - Wikipedia 
[19:21:35] <ProfSimm> epony: you have to start talking the same language the rest of the world does
[19:21:41] <davros> whilst technically speaking you might say "a cpu interprets machine code"... its not a useful description, we usually think of software interpreters when we say interpreter.
[19:21:50] <epony> ProfSimm, so assuming all microprocessors are interpreters embedded runtimes is just too much of a guess work
[19:21:59] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:22:03] <ProfSimm> davros: it doesn't matter what we usually think, what matters is what it is
[19:22:03] <oldlaptop> davros: The argument is that such a software interpreter exists within modern CPUs.
[19:22:17] <oldlaptop> (Unless ProfSimm is saying something rather sillier than that.)
[19:22:22] <epony> ProfSimm, you have to stop assuming the web browser is the only native runtime
[19:22:23] <davros> ProfSimm in general communication this strict definition isn't as useful as "what most poeple think it is"
[19:22:40] <davros> "this language uses an interpreter"
[19:22:41] <epony> ProfSimm, and that all processors are implemented as you assume they must be
[19:22:50] <davros> distnict from "it runs natively in machien code on the cpu"
[19:22:53] <ProfSimm> oldmagic: that's not my argument, "software interpreter in hardware" is nonsense
[19:23:05] <ProfSimm> oldmagic: if it's in hardware, then it's not software
[19:23:06] <oldlaptop> Why do you keep pestering this oldmagic person?
[19:23:10] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Read error: Connection reset by peer)
[19:23:16] <epony> ;-)
[19:23:25] <davros> you could say the term "interpreter" needs a parameter,  "software|hardware", and the defauilt is "software"
[19:23:32] <ProfSimm> oldlaptop: I don't wanna talk to you that's why ;-)
[19:23:45] <davros> communication DOES rely on "what most people think"
[19:23:55] <davros> good communicatoin does not confuse people
[19:24:05] <ProfSimm> Quote: "Even a non microcoding computer processor itself can be considered to be a parsing immediate execution interpreter that is written in a general purpose hardware description language such as VHDL to create a system that parses the machine code instructions and immediately executes them."
[19:24:13] <ProfSimm> QEfuckinD
[19:24:20] <oldlaptop> davros: in any case, there *is* a reasonable argument that nothing actually "runs natively in machine code" on modern CPUs anymore.
[19:24:25] <davros> microcode is still closer to native hardware 
[19:24:46] <oldlaptop> (although I would say what they do is closer to JIT compilers than to "interpreters")
[19:24:52] <davros> again we're better off being more specific here
[19:24:58] <epony> the point is, you can add more things embedded in your processor, but you can have them without these additions
[19:25:19] <epony> it's the same as with web browsers, you can use them as runtimes, but you can also run without them ;-)
[19:25:23] <davros> "microcoded" is a more helpful term than "interpreter". that guy is using the term interpreter to better explain what microcoded means
[19:25:33] <davros> he's not saying we should go and call our microcoded CPUs interpreters
[19:25:52] <epony> insisting that ALL runtimes are web browsers, and ALL processors are embedding interpreters and firmware and run web browsers, is a wild speculation
[19:26:22] <epony> also, what was given as an example by some GH quotation was not self-hosting ;-0
[19:26:24] <ProfSimm> "insisting that ALL runtimes are web browsers" <-- I'm starting to think you have some sort of reading comprehension issue
[19:26:47] <beaky> nice what is your favorite runtime
[19:26:48] <epony> maybe it's a writing issue ;-)
[19:26:59] *** Joins: Numocha (~anonkitty@user/anonkitty)
[19:27:21] <beaky> i miss the jvm runtime i heard it has improved a lot recently but i havnet programmed in  java in years
[19:28:20] <epony> a modern browser will probably have a JVM embedded in JS into a WASM, and interpreting Scheme to JVM and calling that self-hosting, while it still would not be
[19:28:40] * epony pokes ProfSimm with a feather
[19:29:00] *** Joins: Pixi (~Pixi@user/pixi)
[19:29:01] <ProfSimm> epony: look I tried, from this point on you're just being stubborn
[19:29:14] <epony> it's a joke ;-)
[19:29:32] <ProfSimm> epony: do you wanna hear another joke.
[19:29:43] <epony> (I'm already laughing but go ahead)
[19:29:56] <ProfSimm> epony: I'll take this shitty language I'm writing in JS, and make a billion dollar startup with it ;-)
[19:30:03] <epony> nice
[19:30:26] <epony> is it Dart or Vader..
[19:33:07] <epony> https://en.wikipedia.org/wiki/Dart_(programming_language)#Compiling_to_JavaScript
[19:33:07] <bayaz> Title: Dart (programming language) - Wikipedia 
[19:33:36] *** Joins: duuude (~user@user/duuude)
[19:34:04] *** Joins: pavonia (~user@user/siracusa)
[19:34:15] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[19:35:20] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[19:36:47] *** Quits: user51 (~user51@77.124.35.94) (Ping timeout: 260 seconds)
[19:37:09] <beaky> google flutter the future of application development according to google
[19:37:16] <epony> kee, see  https://en.wikipedia.org/wiki/Source-to-source_compiler  "A source-to-source translator, source-to-source compiler (S2S compiler), transcompiler, or transpiler is a type of translator that takes the source code of a program written in a programming language as its input and produces an equivalent source code in the same or a different programming language."
[19:37:17] <bayaz> Title: Source-to-source compiler - Wikipedia 
[19:39:24] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[19:40:04] *** Joins: norayr (376bc34bfc@37.252.78.253)
[19:40:40] <ProfSimm> epony: this description would be better if it said "produces source in a language of a similar abstraction level".
[19:40:49] <epony> https://en.wikipedia.org/wiki/Interpreter_(computing)#Self-interpreter  "If no compiler exists for the language to be interpreted, creating a self-interpreter requires the implementation of the language in a host language (which may be another programming language or assembler). By having a first interpreter such as this, the system is bootstrapped and new versions of the interpreter can be developed in the language itself."
[19:40:50] <bayaz> Title: Interpreter (computing) - Wikipedia 
[19:40:53] <ProfSimm> epony: because someone's source is another one's output, always
[19:42:00] <ProfSimm> epony: what you don't want to acknowledge is changing the abstraction level changes nothing about how things work, or are used. All that matters is the relative change in abstraction level, not the absolute level.
[19:42:05] <epony> "In computer science, an interpreter is a computer program that directly executes instructions written in a programming or scripting language, without requiring them previously to have been compiled into a machine language program."
[19:42:14] <smallville7123> ITS DARTH VADER
[19:42:18] *** _filename is now known as filename
[19:42:36] <jiffe> does anyone access financial institutions for personal use like bank and credit card transactions via api or similar?  I'm looking at my bank and credit card (wells fargo and discover) and failing to find much for personal use, all seems commercial.
[19:43:13] *** Quits: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941) (Remote host closed the connection)
[19:43:17] <smallville7123> never heard of them
[19:43:43] <epony> https://en.wikipedia.org/wiki/Self-hosting_(compilers)  "In computer programming, self-hosting is the use of a program as part of the toolchain or operating system that produces new versions of that same program—for example, a compiler that can compile its own source code. Self-hosting software is commonplace on personal computers and larger systems. Other programs that are typically self-hosting include kernels, assemblers, command-line interpreters an
[19:43:43] <epony> d revision control software."
[19:43:43] <bayaz> Title: Self-hosting (compilers) - Wikipedia 
[19:45:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:45:55] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Disconnected. Ah.....)
[19:47:48] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[19:48:55] *** Joins: Inline (~Inline@p200300cd472cf8009bb7e46c1da712cc.dip0.t-ipconnect.de)
[19:49:30] <yawkat> once you take a vm class you will realize that the distinctions are mostly meaningless
[19:49:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[19:50:53] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[19:51:49] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:52:27] <ProfSimm> yawkat: I imagine him opening a notebook and carefully writing "never take vm class" inside
[19:53:09] <yawkat> next let's have an argument about whether html is a programming language (which is also a poorly defined word)
[19:53:42] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[19:53:58] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[19:54:22] <ProfSimm> yawkat: especially since code is data and data is code
[19:54:48] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[19:55:01] *** Joins: vysn (~vysn@user/vysn)
[19:57:00] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:58:09] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:59:39] *** Joins: suss` (~user@user/suss)
[20:01:47] <epony> if the distinction was pointless, we would not have these definitions as separate programs classification, but they differ in how they operate and what features they have and what their implementations include
[20:02:08] <epony> and on what types of machines they can run
[20:02:34] <KillerWasp> money, money, giveme your money, GIVEME MONEY!! COMMON!! COMMON MONEY!!! MONEEEEYYY!!!!!! GIVE GIVE GIVE!!!! GRRRRR!!!! GIVEEEEEEEEEE!!! X@@@@@@@@@@~~~~~~~~~~
[20:02:48] <duuude> Does dotnet have any reason to work like the way it does (all the stuff about CLI bytecode and taking so much memory than a functionally-equivalent thing in C Go etc.), other than being a cargo-cult imitation of JVM?
[20:03:23] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[20:04:23] <epony> it tries to be an intermediate representation
[20:04:29] <duuude> Whose reason for such an architecture was portability, for which it didn't provide much useful assistance other than some common APIs across platforms?
[20:04:45] <duuude> epony: yeah but why
[20:05:00] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:05:02] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[20:05:35] <epony> yeasier to provide runtime for multiple languages without writing each of them as stand-alone, raises the complexity a bit but improves modularity
[20:05:57] <epony> compiler toolkits do taht
[20:06:46] <epony> instead of waiting someone else to provide such tools, bypassing their system, they do it from the start with a newer multistaged process
[20:07:00] <ProfSimm> duuude: you may be overestimating what the popular ABIs can do on their own
[20:07:04] *** Joins: wolfshappen (~waff@irc.furworks.de)
[20:08:06] <ProfSimm> duuude: you can have multiple languages in .NET sharing types and so on because of that runtime, and the runtime uses the IL representation to run things.
[20:08:13] <epony> https://en.wikipedia.org/wiki/Intermediate_representation#Languages
[20:08:13] <bayaz> Title: Intermediate representation - Wikipedia 
[20:09:46] <epony> "Any language targeting a virtual machine or p-code machine can be considered an intermediate language" "An intermediate representation (IR) is the data structure or code used internally by a compiler or virtual machine to represent source code. An IR is designed to be conducive for further processing, such as optimization and translation."  "A canonical example is found in most modern compilers." "Use of an intermediate representation such as this allows 
[20:09:46] <epony> compiler systems like the GNU Compiler Collection and LLVM to be used by many different source languages to generate code for many different target architectures."
[20:10:26] <duuude> ProfSimm: Don't C bindings do the same with less cost?
[20:11:34] <epony> C is not p-code though and does not target a virtual machine, but can be an intermediate language for source-to-source compilers.
[20:11:34] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[20:12:08] *** Joins: Auron (Auron956@user/auron)
[20:12:09] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[20:12:17] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[20:12:32] <duuude> epony: I think LLVM is mostly oriented toward making a language that is easy to translate to common architecture instructions, while JVM and dotnet try to simulate their whole-blown concept of virtual machines which is quite more detached from the way computers work
[20:12:36] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[20:13:10] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[20:13:18] <epony> "Though not explicitly designed as an intermediate language, C's nature as an abstraction of assembly and its ubiquity as the de facto system language in Unix-like and other operating systems has made it a popular intermediate language"
[20:13:39] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[20:13:46] <epony> duuude, yep
[20:14:05] <ProfSimm> duuude: which bindings, CFFI?
[20:14:17] <epony> JVM is a particular type of a virtual machine, a stack register p-code (bytecode) one
[20:14:37] <duuude> ProfSimm: various bindings of different natures that are used in a ton of languages
[20:14:40] *** Joins: vat0fgarbage (~at@149.28.224.202)
[20:14:59] *** Quits: vat0fgarbage (~at@149.28.224.202) (Client Quit)
[20:15:42] <ProfSimm> duuude: how do you safely pass a garbage collected object via FFI in one of those bindings of your choice
[20:16:50] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.59)
[20:16:50] <ProfSimm> duuude: there's no FFI that can do what .NET needed.
[20:17:25] *** Quits: px (~px@user/px) (Ping timeout: 240 seconds)
[20:17:30] <ProfSimm> duuude: you need to not only have some sort of interface, but also encapsulate it at a higher abstraction that enforces everyone goes through the proper APIs and not muck  around with memory pointers.
[20:17:32] <duuude> ProfSimm: hmm... maybe by declaring a destructor for the wrapper around the C object?
[20:18:05] <ProfSimm> duuude: doesn't solve the problem.
[20:18:19] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:18:25] <duuude> ProfSimm: well yeah. but the society at large has been doing that since forever. not much of a problem
[20:18:38] <ProfSimm> duuude: doing what
[20:18:45] <ProfSimm> what society...
[20:18:46] <duuude> compared to all the memory and speed overhead
[20:18:46] <epony> https://en.wikipedia.org/wiki/P-code_machine#Benefits_and_weaknesses_of_implementing_p-code  "In the 1990s, translation into p-code became a popular strategy for implementations of languages such as Python, Microsoft P-Code in Visual Basic, and Java bytecode in Java."
[20:18:46] <KillerWasp> FREELANCE OFFER: I prostitute myself by programming, give me money. Wiggle code x3. Dance in bracket x5. Kiss in segfault x10.
[20:18:46] <bayaz> Title: p-code machine - Wikipedia 
[20:18:59] <duuude> <ProfSimm> duuude: you need to not only have some sort of interface, but also encapsulate it at a higher abstraction that enforces everyone goes through the proper APIs and not muck  around with memory pointers
[20:19:35] <KillerWasp> *sigh*
[20:19:48] <ProfSimm> duuude: I know what I said, my question was to explain what YOU said
[20:20:00] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[20:20:02] <duuude> doing the thing you said
[20:20:07] *** Joins: Yonle (~Yonle@user/yonle)
[20:20:10] <duuude> KillerWasp: I could give you money if you give me more money in advance
[20:20:28] <ProfSimm> duuude: I don't think you understand very well what the IL/.NET does
[20:20:47] <ProfSimm> duuude: but I'll just say you can compile a subset of C# to a binary that doesn't need .NET
[20:20:52] <KillerWasp> Want a triple code with bytecode garnish and vector sauce? done, here you are.
[20:20:52] <ProfSimm> duuude: so there's that
[20:21:27] <ProfSimm> duuude: also sometimes C# is faster than C
[20:21:49] <ProfSimm> duuude: those ideas about performance and so on are very outdated. Abstraction doesn't mean lower performance.
[20:21:50] <KillerWasp> Want a triple code with bytecode garnish and vector sauce? done, here you are. <----A mockery of the worst jobs in the world.
[20:21:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:22:00] <duuude> ProfSimm: but it would still spend time and memory pretending to be .NET, wouldn't it?
[20:22:04] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[20:22:04] <KillerWasp> bad paying, bad life, bad all.
[20:22:05] <ProfSimm> duuude: no
[20:22:19] *** Joins: Yonle (~Yonle@user/yonle)
[20:22:39] <smlckz> KillerWasp: are you okay?
[20:22:47] <KillerWasp> smlckz: no, really no.
[20:22:48] <duuude> ProfSimm: everything has edge-cases, LuaJIT could sometimes be faster than C but that doesn't mean it doesn't incur overhead as a language
[20:23:07] <duuude> in usual use cases
[20:23:17] <ProfSimm> duuude: likewise it doesn't mean that it incurs meaningful overhead if there's runtime
[20:23:26] <KillerWasp> smlckz: I want to grind up all the humans in the world, and replace the neon dust with their remains.
[20:23:43] <duuude> ProfSimm: It may incur meaningful overhead elsewhere
[20:23:56] <ProfSimm> duuude: you assume
[20:24:21] *** Joins: Pickchea (~private@user/pickchea)
[20:24:28] <smlckz> KillerWasp: hmm, what made you this sad or angry?
[20:24:30] <KillerWasp> i really really really really really REALLY HATE THIS SHITTY WORLD!!!
[20:25:19] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[20:25:30] <duuude>  killer white anglo-saxon protestants on IRC
[20:25:54] <KillerWasp> smlckz: Being unable to live doing things that I like and can do. I only get sabotage and hateful haters.
[20:26:24] <hassoon> what did they dio
[20:26:26] <hassoon> * do
[20:26:53] <duuude> KillerWasp: what do you like to do
[20:27:03] <duuude> why can't you do that
[20:27:09] *** Joins: algodatastruct (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[20:27:09] *** Quits: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[20:27:17] *** Joins: independent56 (~independe@2.26.38.133)
[20:27:23] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[20:27:32] <ProfSimm> duuude: there's an inverse effect with runtimes in some cases, where having a shared runtime means on the bottom line you're using LESS resources than a set of individually compiled applications.
[20:27:40] *** Joins: Yonle (~Yonle@user/yonle)
[20:27:50] <epony> technically it can't be faster than C if it implements more features than C since it will result in larger binaries when they are used, it can be faster as code generation in C with optimisation compiled to a executable if it's smaller or uses less cycles and memory, compared to hand written non-optimised same program in the target language C
[20:29:06] <epony> the fact that you add some JIT or virtual machine or p-code in it is immediately slower with the VM overhead, even if it's the thinnest lightest possible
[20:29:21] <duuude> ProfSimm: dynamically-compiled ones as well?
[20:29:28] <epony> or "embedding" it in a target language, is already more
[20:29:30] <koollman> epony: more features does necessarily mean slower code or larger binaries
[20:29:56] <epony> when you use these, they end up in the machine code
[20:30:09] <ProfSimm> duuude: .NET has cache so "dynamically compiled"  is meaningless, except on very first run. In fact it allows the code to better target the machine it's running on.
[20:30:11] <koollman> they don't have to. Many languages have compile-time features
[20:30:40] <epony> that comment was about Lua, which has a chance of competing ;-)
[20:30:47] <duuude> Afaik, it gives you smaller binaries because fancy instructions, and JIT may apply some optimizations that are not portable and mostly not used in AOT compiled binaries
[20:31:08] <koollman> well, in lua you do have JIT optimisation, which can vary the code size a bit :)
[20:31:08] <jack_rabbit> koollman++ Yes
[20:31:10] <epony> but is more often the case with C++ without using the superset of C
[20:31:16] <KillerWasp> hassoon: duuude: Everything is too manipulated, they do not offer profitable jobs, pure exploitation as a freelancer, pure discrimination (including mainly by language and country), unable to find decent people who do not treat you like garbage because of envy or status ko, unable to buy tools for my projects , etc.
[20:31:45] <epony> yep, bytecode and p-code is overhead, despite what it claims
[20:32:27] *** Joins: user51 (~user51@77.124.35.94)
[20:32:28] <epony> it allows more optimisation but is slower than native machine code
[20:32:35] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[20:32:36] <KillerWasp> Capitalism is the main means of control and discrimination, I hate it deeply and I can't get out of its continuous attack.
[20:32:53] <duuude> but those advantages are mostly masked by the overhead in usual applications like desktop apps and server software etc.
[20:32:58] <smlckz> KillerWasp: where do you live?
[20:33:04] <KillerWasp> smlckz: argentina
[20:33:25] <ProfSimm> epony: LLVM is an optimizing compiler which transforms your code through something like a dozen stages of opcodes before the final binary is produced. By your logic, more opcodes and transform is pure overhead. What happened there
[20:33:41] <hassoon> KillerWasp: wait, who are you talking about
[20:33:57] <duuude> hassoon: people with money
[20:33:58] <epony> ProfSimm, no, that's your logic
[20:34:09] <ProfSimm> epony: what's your logic then.
[20:34:30] <epony> that a language with more features produces larger binaries when these are used
[20:34:32] *** Quits: Numocha (~anonkitty@user/anonkitty) (Quit: WeeChat 3.4.1)
[20:34:56] <hassoon> duuude: what about they ? they are either self-made successful people, or either corrupted or not self-made
[20:35:00] <ProfSimm> epony: "more features" doesn't mean much does it. Is there a way to count or measure features
[20:35:04] <epony> as in comparing languages targeting C with C native speed
[20:35:22] <epony> of course there is ;-)
[20:35:37] <ProfSimm> I'm afraid your notion of performance is very 80s
[20:36:09] <ProfSimm> More transform stages don't mean lower performance
[20:36:11] <epony> don't be afraid, other people will tell you the same if you ask them, and you can find this information on your own too
[20:36:20] <epony> I am just telling you captain obvious facts
[20:36:27] <ProfSimm> epony: you keep thinking everyone thinks like you, but you're wrong
[20:36:41] <epony> which you seem to disagree with, due to your belief in overhead being faster ;-)
[20:36:53] <epony> we've beaten the JVM previously.. you seem to have forgotten
[20:37:02] <jack_rabbit> There are plenty of features you can add to a language that don't result in larger binaries or slower performance of the binary.
[20:37:10] <ProfSimm> "overhead being faster" is non-sequitur
[20:37:11] <jack_rabbit> But only result in compile-time overhead.
[20:37:12] <epony> ProfSimm, it's common facts.. trivial by the way
[20:37:47] <ProfSimm> epony: there's a saying "beware of anyone who tells you something is obvious, it means they most likely have no idea what they're talking about"
[20:38:33] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[20:38:47] <pyzozord> any idea why this doesn't work printf "GET /html?q=test\n" | nc duckduckgo.com 80
[20:39:10] <pyzozord> the duck doesn't like my request for some reason
[20:39:14] <jack_rabbit> pyzozord, that doesn't look like a valid http request...
[20:39:24] <epony> you can easily beat code generation tools that use intermediate representation if you don't use that technique, but you use the overhead tools for languages which you have not self-hosted yet and rely on those compiler toolkits
[20:39:24] *** Joins: Yonle (~Yonle@user/yonle)
[20:39:31] <pyzozord> yeah question is why because printf "GET /?q=test\n" | nc duckduckgo.com 80 works fine
[20:39:58] *** Quits: savolla (~quassel@95.10.200.51) (Read error: Connection reset by peer)
[20:40:04] <jack_rabbit> no idea. That's not a valid http request either.
[20:40:15] <KillerWasp> hassoon: I have problems with the system, with capitalism, and with the people who run it.
[20:40:15] <epony> ProfSimm, only in this case it's you who will get the idea too, if you check for yourself (though you already know it, and choose to argue instead)
[20:40:18] <pyzozord> as far as I know that is a valid request
[20:40:30] *** Joins: savolla (~quassel@95.10.200.51)
[20:40:32] <GeDaMo> Aren't you supposed to have the HTTP version on that line?
[20:40:38] <ProfSimm> epony: what did you just say
[20:40:40] <jack_rabbit> pyzozord, you're missing the HTTP-version and the cr lf.
[20:40:42] <GeDaMo> Also \r\n line ending?
[20:40:47] <ProfSimm> epony: there were some words
[20:41:03] <Bou> It's valid HTTP/0.9
[20:41:13] <epony> that we're wasting your time with our 80ies beliefs..
[20:41:36] <pyzozord> printf "HTTP/1.1\r\nGET /html?q=test\r\n" | nc duckduckgo.com 80 doesn't work either
[20:41:37] <epony> since you live in the fantasy world of overhead being faster ;-)
[20:41:39] <ProfSimm> epony: who is "we"
[20:41:44] <hassoon> KillerWasp: like..personal problems ?
[20:41:55] <GeDaMo> pyzozord: try html.duckduckgo.com
[20:41:56] <jack_rabbit> pyzozord, you actually need two crlf's One to end the request line and one to end the headers.
[20:42:31] <pyzozord> still not working printf "HTTP/1.1\r\nGET /html?q=test\r\n\r\n" | nc html.duckduckgo.com 80
[20:42:38] <jack_rabbit> pyzozord, also that's still not a valid http request.
[20:42:50] <pyzozord> jack_rabbit: what is it missing?
[20:42:59] <KillerWasp> hassoon: no really, also is a global problems... But yes, It also affects me, and very worse.
[20:43:00] <Bou> echo -ne "GET /html?q=test HTTP/1.0\r\n\r\n" | nc html.duckduckgo.com 80
[20:43:19] <jack_rabbit> pyzozord, your request format is just wrong. Have a look here: https://www.tutorialspoint.com/http/http_requests.htm
[20:43:19] <bayaz> Title: HTTP - Requests 
[20:43:23] <hassoon> KillerWasp: where are you located
[20:43:25] <ProfSimm> epony: all compilers use intermediate representations
[20:43:41] <ProfSimm> epony: so what you said above reads like word salad
[20:43:43] <epony> I like how you use the word "all" today, all the time ;-)
[20:43:47] <smlckz> KillerWasp: try to live your live, this ''system'' is not worth fixing, unless you are surrounded with people who believe what you're thinking now
[20:43:57] <ProfSimm> epony: it's a fact
[20:44:30] <epony> ProfSimm, don't you like benchmarks showing faster than C speed.. show me one ;-)
[20:44:32] <pyzozord> oh ok HTTP is not line above it's on the same line as the method
[20:44:32] <ProfSimm> epony: have you ever written a compiler in your life, because you don't seem to know the basics of it
[20:44:48] <ProfSimm> epony: C compilers also use intermediate representations
[20:45:00] <pyzozord> i got it down to printf "GET /html?q=test HTTP/1.0\n\n" | nc duckduckgo.com 80
[20:45:15] <KillerWasp> smlckz: I'm not interested in fixing, I just want to have a good life, but everything is fucking shit that won't let you.
[20:45:20] <pyzozord> it doesn't like HTTP/1.1 for some reason
[20:45:27] <epony> ProfSimm, oh wow, now "everything" is "your compiler that uses it"
[20:45:29] <ProfSimm> epony: LLVM is among other things a C/C++ compiler
[20:45:33] *** Quits: newwebdev13 (~newwebdev@78.135.92.217) (Quit: Leaving)
[20:45:59] <ProfSimm> epony: why do you do this. You double-down on ignorance every time I try to tell you something. It's kinda repulsive.
[20:46:13] <GeDaMo> Yeah, HTTP/1.0 works
[20:46:14] <ProfSimm> epony: maybe learn how a compiler works before talking about 'overhead'
[20:46:29] <KillerWasp> How can it be that I won't even be able to expose a simple cover of the game that I want to create or try to create???
[20:46:42] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[20:46:43] <jack_rabbit> pyzozord, looks like you also need a Host header or the server can't route the request.
[20:46:46] <smlckz> KillerWasp: take a break and look for the ways to have a ''good life''
[20:46:47] <ProfSimm> epony: https://www.geeksforgeeks.org/intermediate-code-generation-in-compiler-design/
[20:46:47] <bayaz> Type: text/plain; charset=utf-8 Size: 452 B 
[20:47:06] <epony> ProfSimm, I said, show faster than C ;-)
[20:47:18] <epony> that was the claim I refuted
[20:47:42] <epony> you get to advertise how "everything is as you claim".. some other time
[20:47:46] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:47:55] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Disconnected. Ah.....)
[20:48:02] <ProfSimm> epony: what does it mean "show faster than C". Faster what.
[20:48:03] <GeDaMo> pyzozord: this works: printf "GET /html?q=test HTTP/1.1\r\nHost: html.duckduckgo.com\r\n\r\n" | nc html.duckduckgo.com 80
[20:48:10] <smlckz> KillerWasp: what is stopping you to do that?
[20:48:11] <ProfSimm> epony: anyway I'm sick of your nonsense tbh
[20:48:52] <pyzozord> oh it wants a host?
[20:49:04] <Bou> HTTP/1.1 does
[20:49:58] <pyzozord> yeah
[20:50:28] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[20:50:40] <epony> ProfSimm, why so.. claiming general assumptions and someone tells you it's not exactly like that.. does not mean you will lose your tools if you know where are their weaknesses
[20:51:00] *** Quits: daurn (~daurnimat@vultr.daurnimator.com) (Quit: WeeChat 3.4)
[20:51:37] <epony> in fact, it's probably a good idea to know these details and not feel so singled when someone else gives you similar details some other time
[20:51:43] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Client Quit)
[20:51:50] <KillerWasp> smlckz: I don't have any means to digitize images, and I don't have a graphics tablet either. Donations are obviously a lie, so I tried other means like freelance that ignore you or are theft from the first in their publications, or offer any service related to hosting to get money and have a good internet that allows me to offer best services through the internet. I don't have internet and I don't have the tools for development. I've 
[20:51:50] <KillerWasp> already tried ranting or posting but you get treated like crap all the time, denied and unable to move on.
[20:52:00] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:52:03] <GeDaMo> "In the HTTP/1.1 protocol, all header fields except Host: hostname are optional. " https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
[20:52:03] <bayaz> Title: Hypertext Transfer Protocol - Wikipedia 
[20:52:54] <pyzozord> good to know that
[20:53:17] <pyzozord> I'm tired of lynx and I tried other cli browsers and they are all very confusing to use and kind of crapy
[20:53:44] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[20:53:52] <smlckz> KillerWasp: but you do have internet, don't you?
[20:53:52] <pyzozord> browsh is interesting but that's essentially a graphical browser with very low resolution
[20:54:13] <jack_rabbit> any terminal browser is going to be pretty crappy.
[20:54:18] <KillerWasp> smlckz: no, is "borrowed".
[20:54:27] <jack_rabbit> modern web is not suitable for rendering in a character terminal.
[20:54:28] <Bou> interesting, apparently HTTP/0.9 (just `GET /bla`) is no longer supported
[20:54:33] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[20:54:35] <smlckz> hmm
[20:54:52] <epony> hint: http://www.google.com/search?q=benchmark+faster+than+C
[20:54:53] <bayaz> Title: benchmark faster than C - Google Search 
[20:55:27] *** Joins: _filename (~kilitary@188.242.105.134)
[20:55:43] *** Joins: daurnimator (~daurnimat@vultr.daurnimator.com)
[20:55:44] <jack_rabbit> Everyone's seen benchmarks where some language beats C for some benchmark. It's not really relevant.
[20:55:45] <pyzozord> I wanted to see if I can just use nc as my browser
[20:55:51] <pyzozord> but that is probably a bit too manual
[20:56:08] <smlckz> KillerWasp: by digitizing, do you mean to scan a image drawn on paper or digitally drawing it?
[20:56:25] <KillerWasp> smlckz: http://blackrook.xyz/ - http://bluebeacon.blackrook.xyz/ - These are my sites from a VPS that is also borrowed from a friend on another channel. I only put there the most common services like Apache, but I don't even put my personal programs there.
[20:56:26] <bayaz> Title: BLACK ROOK! 
[20:56:26] <bayaz> Title: BLUE-BEACON! 
[20:56:33] <Bou> pyzozord: sure, if you want to read the HTML (and, these days, 10 MB of javascript) manually
[20:56:48] <KillerWasp> smlckz: yes, from a paper
[20:56:59] <GeDaMo> Is there an HTML to plain text utility? :P
[20:57:03] <jack_rabbit> pyzozord, and also handle redirects, etc.
[20:57:09] <KillerWasp> also is useful the tablet graphic where i can see and draw at the same time.
[20:57:25] <Bou> GeDaMo: sed 's/<[^>]*>//g' ?
[20:57:27] <jack_rabbit> GeDaMo, There's a few "html2text" tools out there.
[20:57:31] <pyzozord> GeDaMo: I'm using lynx -dump "$url" | less at the moment
[20:57:42] *** Joins: Yonle (~Yonle@182.1.35.194)
[20:57:44] *** Quits: Yonle (~Yonle@182.1.35.194) (Remote host closed the connection)
[20:58:11] <epony> a well understood analysis about a stack machine p-code (particularly jvm bytecode) implementation language  https://en.wikipedia.org/wiki/Java_performance#Comparison_to_other_languages
[20:58:11] <bayaz> Title: Java performance - Wikipedia 
[20:58:11] *** Joins: Yonle (~Yonle@2602:fccf:1:1069::)
[20:58:29] <pyzozord> jack_rabbit: redirects are not a big deal, it's usually just one max two
[20:58:36] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[20:59:05] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[20:59:07] <jack_rabbit> Sure, it just sounds like a nightmare experience of the web.
[20:59:15] <jack_rabbit> to me anyway
[20:59:20] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[20:59:34] <epony> and the memory use is significantly more too  https://en.wikipedia.org/wiki/Java_performance#Memory_use
[20:59:34] <bayaz> Title: Java performance - Wikipedia 
[20:59:37] <lesshaste> Given a set of sets of elements, let's call the number of sets n and the number of elements in the union of the sets m. Given a set of sets, the problem is to find the smallest subset of the set of sets so that n >=m. Does this problem have a name?
[20:59:43] <Bou> pyzozord: what if the http version redirects you to https://?
[20:59:58] <pyzozord> yes tls is a bit of a problem
[21:00:13] <GeDaMo> Maybe use curl instead of nc
[21:00:15] <pyzozord> but it's possible apparently https://jvns.ca/blog/2022/03/23/a-toy-version-of-tls/
[21:00:16] <bayaz> Title: Implementing a toy version of TLS 1.3 
[21:00:30] <pyzozord> yeah curl will work well
[21:00:53] <jack_rabbit> pyzozord, If you're looking for a web-like experience in the terminal, I would check out gopher and gemini.
[21:01:16] <jack_rabbit> pyzozord: https://gemini.circumlunar.space/
[21:01:38] *** Quits: savolla (~quassel@95.10.200.51) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:01:49] <pyzozord> jack_rabbit: but that has to be supported by the server
[21:02:12] <jack_rabbit> pyzozord, yes. But there's stuff out there. Depends on what you're looking for.
[21:02:20] <pyzozord> it's not for a project pr se, it's really just for me browsing internet
[21:02:41] <jack_rabbit> pyzozord, web in the terminal is going to be a poor experience.
[21:02:52] <pyzozord> that's ok, wikipedia mostly works great
[21:03:16] <smlckz> KillerWasp: bootstrapping from this is going to be hard.. you can try out some other carriers to save enough money before coming back to this..
[21:03:21] <pyzozord> I was thinking also of some tool that like curl | html2pdf
[21:03:22] <jack_rabbit> pyzozord, Yeah, you can definitely target particular sites and get something that is at least usable.
[21:05:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[21:05:58] *** Joins: nicbk (~nicbk@user/nicbk)
[21:06:04] <GeDaMo> Thing is, you can download Wikipedia
[21:06:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:06:30] *** Quits: Yonle (~Yonle@2602:fccf:1:1069::) (Remote host closed the connection)
[21:06:30] <pyzozord> I think there is even text format of wikipedia
[21:06:39] *** Joins: Yonle (~Yonle@user/yonle)
[21:06:53] <pyzozord> (I might be wrong about that one)
[21:07:00] <Bou> yah you can download the database
[21:07:06] <GeDaMo> The downloads don't include images
[21:07:15] <Bou> (and try to compress it, win some money: prize.hutter1.net)
[21:08:02] <pyzozord> but you can't read hacker news on local copy of wikipedia
[21:09:39] <jack_rabbit> pyzozord, For gemini, there are a bunch of mirrors that convert things like hacker news, wikipedia, reddit, etc. to the gemini protocol: https://portal.mozz.us/gemini/gempaper.strangled.net/mirrorlist/
[21:09:41] <bayaz> Title: Gemini Portal 
[21:09:53] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[21:09:54] <pyzozord> that's pretty cool
[21:10:07] <smlckz> [ <pyzozord> but you can't read hacker news on local copy of wikipedia ] what does this mean?
[21:10:08] <jack_rabbit> pyzozord, may be a more manageable way of viewing the sites in the terminal. Though I haven't personally tested all of them.
[21:10:20] *** Joins: duuude (~user@user/duuude)
[21:11:50] *** Quits: teut (~teut@103.144.92.141) (Quit: Client closed)
[21:11:52] *** Quits: _filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[21:12:01] <Trashlord> vc                  
[21:12:03] <KillerWasp> smlckz: It is also a global problem. If they do it to me, they do it to anyone, no wonder there is never progress, it's always rotten, everyone is rotten, it's very disgusting.
[21:12:12] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Client closed)
[21:12:13] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[21:12:15] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[21:12:37] *** Joins: Yonle (~Yonle@user/yonle)
[21:12:39] <mehwork> is there a better system than taking notes, to remember stuff? I notice my notes just end up out of date all the time, or sometimes wrong information, depending on the source
[21:12:59] <jack_rabbit> pyzozord, Even if you don't find a working converter for a site you want, you'll likely find other like-minded people working on these text-based protocols who want a more trimmed-down web.
[21:13:03] <mehwork> and even if they're good notes they're still incomplete because i can't write everything down
[21:13:12] <jack_rabbit> pyzozord, You may be able to put up your own service or get help
[21:13:45] <pyzozord> jack_rabbit: that sounds interesting but it's too involved
[21:14:11] <GeDaMo> You want to extract useful information from websites and display it simply
[21:15:06] <pyzozord> yes I think one way to go is to use a "real" browser like chrome, just in a headless mode, then ask it for the final html and then use some tool that can "render" a website to text
[21:15:40] <pyzozord> meaning it would smartly try to draw ascii tables and place things in relation to each other how a normal gui browser would
[21:16:33] *** Joins: Akuli (~Akuli@87-94-108-65.bb.dnainternet.fi)
[21:16:37] <pyzozord> although maybe I should just ignore website that require javascript all together
[21:17:21] <GeDaMo> Maybe you could implement a limited JS for sites which use scripts to load the text for pages
[21:17:22] <Bou> or use a screen reader, and rid of your monitor entirely
[21:19:56] *** Joins: ollie (~Ollie_Ree@4.198.147.147.dyn.plus.net)
[21:20:29] <pyzozord> wow actually curl's source is pretty massive https://github.com/curl/curl
[21:20:30] <bayaz> Title: GitHub - curl/curl: A command line tool and library for transferring data with URL syntax, supporting DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP,?
[21:20:38] <pyzozord> for what I expected
[21:20:49] <jack_rabbit> curl is huge
[21:20:53] <ProfSimm> {} <-- those aren't curly, there are no curles in them. They're wavy
[21:21:02] <edgar-rft> mehwork: you can avoid such problems by *first* writing down the entire internet and *then* sorting out what's wrong
[21:21:05] <jack_rabbit> http is actually quite complicated.
[21:21:10] *** Quits: LuckyFire (~LuckyFire@77.29.237.110) (Ping timeout: 272 seconds)
[21:21:13] <GeDaMo> https://daniel.haxx.se/blog/2021/05/20/i-could-rewrite-curl/
[21:21:14] <bayaz> Title: ?I could rewrite curl? | daniel.haxx.se 
[21:21:19] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:22:10] <pyzozord> that's a cool article
[21:22:13] <pyzozord> and hopeful
[21:22:56] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[21:23:17] <pyzozord> I should stop using curl...
[21:23:18] <jack_rabbit> pyzozord, I think you may be misreading. The point of that article is that writing a curl replacement is *NOT* as easy as someone might think.
[21:23:36] <pyzozord> I thought it was lightweight
[21:23:52] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:7861:551a:a8a6:1dca:688d)
[21:24:01] <GeDaMo> It's large and hairy because the Internet is large and hairy :P
[21:24:03] <ProfSimm> GeDaMo: cringe concentrate, handle with care.
[21:24:27] <Bou> hah, the arrogance of "less than 100 lines". 1000 maybe, not 100 :^)
[21:24:44] <pyzozord> well I agree with these comments
[21:24:46] <mehwork> edgar-rft: i was kinda hoping for a real answer, not a funny answer :p
[21:24:49] <jack_rabbit> You can likely write a working http client for a small subset of HTTP pretty quickly. 
[21:24:50] <GeDaMo> That article is by the writer of curl, showing some of the comments he's seen about how easy it would be to rewrite curl made by people who seem to have no idea how big a job it would be
[21:24:51] <ProfSimm> I can write a browser in one line:  <html></html>
[21:25:12] <jack_rabbit> Handling all of the nastiness of a full-featured HTTP client is a much much bigger task.
[21:25:15] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.59) (Remote host closed the connection)
[21:25:25] <pyzozord> I don't use 99% of the features curl has
[21:25:30] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.179) (Remote host closed the connection)
[21:25:30] *** Quits: asocialblade (~quassel@static.16.62.161.5.clients.your-server.de) (Changing host)
[21:25:30] *** Joins: asocialblade (~quassel@user/asocialblade)
[21:25:38] <pyzozord> I never managed to read more than few lines of it's huge man page
[21:25:40] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.179)
[21:25:43] <GeDaMo> Is wget any smaller?
[21:25:50] <ProfSimm> GeDaMo: but cringe aside I think that's a major win for the concept of abstractions. Such a messy protocol, but so easy to use in the abstract.
[21:25:52] <pyzozord> I thought it was bigger
[21:25:55] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.179)
[21:26:36] <Bou> I wrote an httpd in 400 bytes a while ago
[21:29:03] <pyzozord> I should stop using computers
[21:29:18] <jack_rabbit> GeDaMo, a quick scan shows about 50k lines of C in wget, but it has several dependencies. Not sure how curl is counted.
[21:29:24] *** Quits: Trot (~Trot@107.147.149.155) (Ping timeout: 272 seconds)
[21:29:25] <ProfSimm> pyzozord: oh, I'll miss you
[21:29:37] <pyzozord> ProfSimm: aww
[21:29:39] <pyzozord> :D
[21:29:45] <ProfSimm> :)
[21:29:48] <hassoon> (:
[21:29:54] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:30:18] <GeDaMo> I was thinking the other day I should just write for DOSBox and not bother with any of this modern stuff :P
[21:30:31] *** Joins: vitali64_ (~vitali64@user/vitali64)
[21:30:33] <pyzozord> it's just that it's endless universe of complexity
[21:30:40] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 272 seconds)
[21:30:43] <GeDaMo> Yes. Yes, it is :|
[21:30:50] *** Joins: opeerateur_ (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[21:30:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[21:31:18] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 272 seconds)
[21:31:28] *** vitali64_ is now known as vitali64
[21:31:48] <ProfSimm> pyzozord: technically everything is. 
[21:31:57] <ProfSimm> pyzozord: computers just make it a bit more apparerent
[21:32:19] *** Joins: Trot (~Trot@107.147.149.155)
[21:32:25] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[21:32:25] <beaky> rewrite my tea database for dosbox
[21:32:28] <ProfSimm> pyzozord: the world is full of information. We tune out 99.9% of it and hang on the other 0.1% we understand
[21:32:30] *** Quits: Trot (~Trot@107.147.149.155) (Client Quit)
[21:32:34] <beaky> but first i will have to port rust to dos
[21:32:45] <ProfSimm> pyzozord: it's a survival tactic. 
[21:32:56] <pulse> yes, imagine all the information in a single dandelion flower
[21:33:03] *** Joins: Trot (~Trot@107.147.149.155)
[21:33:22] <ProfSimm> Trying to know more than we can is a bad strategy. There's such a thing as knowing too much or being too smart
[21:33:31] <jack_rabbit> That's why we have abstractions.
[21:33:35] <ProfSimm> Intelligence backfiring
[21:33:38] <ProfSimm> jack_rabbit: sure
[21:33:47] <ProfSimm> jack_rabbit: all our science theories are also just abstractions
[21:33:49] <ProfSimm> And math
[21:33:52] <jack_rabbit> right.
[21:34:00] <jack_rabbit> a terminal is an abstraction.
[21:34:08] <jack_rabbit> all of our tools are abstractions.
[21:34:29] <ProfSimm> Talking of which, WTF is that shape an abstraction for:  {}
[21:34:51] <ProfSimm> It looks like a heart shape someone split on the bottom and strung top to bottom
[21:34:56] *** Quits: opeerateur_ (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Ping timeout: 245 seconds)
[21:35:09] <pyzozord> abstractions are like leverages
[21:35:10] <oldlaptop> GeDaMo: openbsd ftp(1) sure is smaller: https://man.openbsd.org/ftp.1
[21:35:11] <bayaz> Title: ftp(1) - OpenBSD manual pages 
[21:35:30] <oldlaptop> to the point where it really doesn't have the same job as curl
[21:35:36] <pyzozord> but we are now so far gone there is no way to understand what is actually happening
[21:35:48] <oldlaptop> (wget though, is a bit different...)
[21:36:00] <jack_rabbit> pyzozord, that was always pretty much true.
[21:36:18] <pyzozord> I though wget was worse because it was bigger. I think I will use wget more now that it's three times smaller
[21:36:28] <jack_rabbit> pyzozord, Even on the simplest computers, you're dealing with complicated abstractions that cover up very complicated physics.
[21:36:46] *** Quits: ollie (~Ollie_Ree@4.198.147.147.dyn.plus.net) (Quit: WeeChat 2.8)
[21:37:36] <Bou> and to cover op layer upon layer of decades old crap
[21:37:55] <ProfSimm> jack_rabbit: we can't figure out the wavefunction
[21:38:00] <ProfSimm> jack_rabbit: of one particle
[21:38:07] <ProfSimm> jack_rabbit: sucks to be human
[21:38:11] <pyzozord> this kind of reminds of like scifi cities that are built literally on top of old cities
[21:38:33] <GeDaMo> Some real cities are like that
[21:38:45] <oldlaptop> How many Venices is Venice built on top of now?
[21:38:48] <jack_rabbit> ProfSimm, yes, and even the wave function itself is an abstraction of reality. It's how we conceptualize nature. Particles, waves are our concepts to explain what we see.
[21:38:51] <ProfSimm> pyzozord: yeah. Or like our oil is liquid dinosaurs :P All our energy industry
[21:39:23] <ProfSimm> jack_rabbit: need to go deeper
[21:39:25] <GeDaMo> Wasn't somewhere like Chicago lifted up?
[21:40:15] <oldlaptop> No major US city is /nearly/ old enough to be built on a mound made of old cities. :P
[21:40:25] <pyzozord> jack_rabbit: that's a good point
[21:40:33] <oldlaptop> (Chicago has largely burned down and been rebuilt, though.)
[21:40:50] <GeDaMo> I feel like there was some US city that lifted up because it was sinking
[21:40:58] <jack_rabbit> pyzozord, Ultimately we have to accept that we interact with reality through concepts that simplify the sheer volume of information that we're presented with. This extends to computers, but to everything else as well.
[21:41:20] <pyzozord> so what to do, if it's fractal complexity and we always operate on abstractions, and there is no real seabed to this
[21:41:47] <oldlaptop> New Orleans has required some funny business over the years.
[21:41:50] <jack_rabbit> pyzozord, You have to decide whether your abstractions are "good enough". Do you trust them? 
[21:41:58] <GeDaMo> https://en.wikipedia.org/wiki/Sinking_cities
[21:41:58] <bayaz> Title: Sinking cities - Wikipedia 
[21:42:18] <oldlaptop> Chicago is even young by major-American-city standards, though.
[21:42:28] <oldlaptop> (Although it'd be old by California standards.)
[21:42:40] <pyzozord> jack_rabbit: with that philosophy the answer would be to turn forward and look for the biggest most powerful abstraction you find (one that abstracts the most other ideas)
[21:43:15] <pyzozord> jack_rabbit: but then what happens when one of the lower layers breaks
[21:43:32] <jack_rabbit> pyzozord, not necessarily. I think that's why people get frustrated with browsers. The bigger and more powerful your abstraction is, the harder it is to understand.
[21:43:34] *** Joins: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net)
[21:43:36] <GeDaMo> I'm really tempted to link the PEG transformer paper :P
[21:44:19] <Bou> you can go for "God did it", that doesn't need much thinking
[21:44:24] <jack_rabbit> pyzozord, That's why I am (and my guess is it may be why you too are) attracted to smaller, simpler abstractions that I can more easily reason about. Like composable terminal tools and text.
[21:44:41] <Toneloc> I'm excited to see what Wasm gets used for
[21:44:49] <pyzozord> jack_rabbit: yes, that's probably it
[21:45:04] <GeDaMo> Toneloc: adverts and tracking, of course :|
[21:45:27] <Toneloc> GeDaMo - like all frontend lol
[21:45:29] <pyzozord> oh no, that is probably so true
[21:45:32] <GeDaMo> Oh, and subversive cryptocoin mining
[21:45:33] <jack_rabbit> pyzozord, Having a bunch of simple tools I can pipe together on the command line is great. It gives me a small set of simple abstractions that I can use to build my own abstractions.
[21:45:35] <pyzozord> only faster and bigger
[21:45:45] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:46:14] <pyzozord> jack_rabbit: yes there is something to be said for general tools vs specific tools
[21:46:29] <Toneloc> GeDaMo - could definetly see that becoming an issue
[21:46:35] <ProfSimm> pyzozord: I'm a big believer of facade interfaces
[21:46:36] <GeDaMo> command line pipes tend to be for batch operations, I wonder if they could be made more interactive
[21:46:42] <pyzozord> those general ones need to solve many problems of many people, for a specific person the carry a massive baggage of dead complexity
[21:47:18] <ProfSimm> pyzozord: in other words a well-designed general tool need not be compact to use, but you can make the perfect facade for it and use it instead
[21:47:35] *** Quits: asocialblade (~quassel@user/asocialblade) ()
[21:47:46] <Toneloc> pyzozord- one tool that has so much potential I think is cli version of Notepad++
[21:48:08] <ProfSimm> GeDaMo: how do you imagine interaction with them
[21:48:13] <jack_rabbit> GeDaMo, if you look at plan9, they basically do everything by piping together programs, including a GUI, editors, evelything.
[21:48:16] <Bou> Toneloc: Wasm could be a nice universal target for everything, get rid of Javascript entirely
[21:48:17] *** Joins: GOATRIDER (~DOWNCATTL@74.215.16.190)
[21:48:21] *** Joins: xeno (~xeno@user/xeno)
[21:48:23] <jack_rabbit> everything*
[21:48:31] *** Joins: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de)
[21:48:31] *** Quits: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de) (Changing host)
[21:48:31] *** Joins: asocialblade (~qsl@user/asocialblade)
[21:48:32] <pyzozord> that only reduces usage complexity, and assumes the tool is perfect, never breaks, and will never need to be understood deeply by the user
[21:48:42] <user51> jack_rabbit: then you have the issue of too many commands and too much c code :|
[21:49:09] <GeDaMo> ProfSimm: I mean being able to create them, alter them while they're still running
[21:49:35] *** pink_sarco is now known as shiza
[21:49:39] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[21:49:40] <user51> jack_rabbit: i'm assuming you've read the utah2000 paper
[21:49:42] <Toneloc> Bou - I'd imagine alot of resistance to that in industry as JS is so prevalent and it wouldn't offer enough advantage for many "run of the mill" things
[21:49:52] <ProfSimm> GeDaMo: alter them how
[21:50:02] <Bou> Toneloc: you can always still use Javascript if you really must, just compile to wasm!
[21:50:15] <Toneloc> Bou - haha thats totally true!
[21:50:19] <GeDaMo> user51: http://doc.cat-v.org/bell_labs/utah2000/utah2000.pdf ?
[21:50:20] <bayaz> Type: application/pdf Size: 27.9 kB 
[21:50:25] <jack_rabbit> user51, true. However you can build tools out of smaller tools to hide that. The thing I like about that is this: when I have a problem with a huge piece of software and go to open it up, it's a mess of things I don't understand. If your programs are instead composed of common, understandable blocks, it's easier to dig into.
[21:50:42] <GeDaMo> ProfSimm: change where the data is going to, add commands
[21:51:11] <ProfSimm> GeDaMo: sounds interesting, but I suppose would need details on how it works
[21:51:15] <ProfSimm> GeDaMo: as an UI
[21:51:15] <davros> does ubuntu usually server /var/www/html out of the box (i'm trying to remember if i did that myself or not)
[21:51:23] <davros> serve^
[21:51:29] <GeDaMo> ProfSimm: I have no idea, it was just an idle thought :P
[21:51:35] <ProfSimm> GeDaMo: sounds a bit like those Node editors in 3D software and compositing packages
[21:51:35] <pyzozord> jack_rabbit: here is one problem I have with abstractions. Lets assume there is some ultimate abstraction. It abstracts literally everything else. By knowing this abstraction you really know everything. But really you don't know anything at all.
[21:51:49] <Toneloc> Grep and regEx are two tools I would really like to master, but would the complexity is too much for me
[21:51:53] <GeDaMo> ProfSimm: yeah, I suppose that's the sort of thing I'm thinking of
[21:52:08] <Toneloc> I can string things together, but never can say I understand them
[21:52:09] <user51> GeDaMo: yes, that one
[21:52:18] <ProfSimm> GeDaMo: the only issue is side-effects
[21:52:39] <ProfSimm> GeDaMo: as you mess with it, might get hairy if it deletes all the wrong files for ex.
[21:52:49] <ProfSimm> GeDaMo: it'd mean OS-level distinction of safe vs unsafe calls
[21:52:56] <GeDaMo> ProfSimm: instead of sending raw bytes, they could be message pipes
[21:53:05] <ProfSimm> GeDaMo: definitely. Like PowerShell
[21:53:20] <GeDaMo> user51: oh, I think I read this recently :P
[21:53:24] <user51> jack_rabbit: sure, they talked about it in the unix programming environment
[21:53:37] <jack_rabbit> pyzozord, Sure. That's what we call the "universe", or "nature", or "reality". It accounts for everything because that's how we define it. Just saying that doesn't actually tell us much about it though.
[21:53:38] <Toneloc> pyzozord - do you ever feel abstraction is what makes programming totally different to any other engineering discipline?
[21:54:00] <user51> thing is, even if you do define basic building blocks, you still end up stringing them to get operations done - sort of like assembly instructions
[21:54:06] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 272 seconds)
[21:54:13] <Toneloc> I'm into hardware and always trying to pull away at the layers of abstraction
[21:54:21] <jack_rabbit> user51, Yep! That's what makes them nice.
[21:54:32] <pyzozord> Toneloc: I don't know, I don't know how other engineering disciplines look like
[21:54:41] <jack_rabbit> user51, When you find yourself stringing things together often, you turn those into their own tools made of the smaller tools.
[21:55:08] <ProfSimm> pyzozord: it's the same in all. You take parts, put them together, and you have a new thing that now is a part of something bigger.
[21:55:12] <pyzozord> Toneloc: I know that one problem with programming is that we deal with idealized components that have no wear etc so it's easy to overdose on complexity
[21:56:14] <user51> jack_rabbit: sure, but then the actual program graph becomes larger
[21:56:26] <pyzozord> you guys injected a very bad bug to my head :P
[21:56:37] *** Quits: Matt|home (~matt@adsl-74-233-58-211.mia.bellsouth.net) (Ping timeout: 240 seconds)
[21:56:37] <Toneloc> pyzozord - for programming it seems all about compute cost, reusability, test coverage
[21:56:46] *** shiza is now known as pink_sarco
[21:56:54] <pyzozord> now I'm thinking "well then I won't use computers! I'll just read books and newspapers" but then I though "do I really know how newspaper paper is made"
[21:57:13] <jack_rabbit> user51, True. I think the concept is more about reusable components. They don't need to be actual programs. Having code libraries with clearly defined interfaces is just as good.
[21:57:35] <GeDaMo> https://www.lowtechmagazine.com/
[21:57:36] <bayaz> Title: LOW-TECH MAGAZINE 
[21:58:13] <Toneloc> I started in electronics and we went down to electrons , went then to discrete devices, then logic gates and ic, then programmable logic
[21:58:18] <pyzozord> GeDaMo: that's a cool website
[21:58:18] <Toneloc> then software
[21:58:23] <kee> davros: Debian does; I assume Ubuntu does too.
[21:58:29] *** Joins: teut (~teut@103.144.92.200)
[21:58:37] <Toneloc> I find knowing what is under the hood rewarding
[21:58:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[21:59:01] <Toneloc> but not usually necessary, it's just another way to geek out
[21:59:35] <GeDaMo> pyzozord: there's a solar powered version of it :P "This is a solar-powered website, which means it sometimes goes offline" https://solar.lowtechmagazine.com/
[21:59:37] <bayaz> Title: LOW?TECH MAGAZINE 
[21:59:45] <Toneloc> pyzozord - I believe that page is solar powered
[21:59:57] <Toneloc> sorry, I type too slow lol
[21:59:57] <pyzozord> GeDaMo: oh that's so cool! :D
[22:00:01] <pyzozord> also responds super fast
[22:00:08] <pyzozord> I guess it's sunny there
[22:00:16] *** Joins: exvicesindaco_ (~exvicio@host-82-54-188-22.retail.telecomitalia.it)
[22:00:19] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:00:49] <pyzozord> I won't refresh I don't want to waste their battery
[22:00:50] <kee> The clock speed isn't based on the amount of sunlight…
[22:00:58] <pyzozord> see this is what it should all look like
[22:01:06] <user51> jack_rabbit: here's an example: i commonly use grep, sed, awk, and sometimes sort in a pipeline
[22:01:08] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[22:01:12] <pyzozord> I won't refresh, I don't need to waste their energy
[22:01:24] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7) (Ping timeout: 240 seconds)
[22:01:46] <jack_rabbit> user51, Yep.
[22:02:10] <user51> but if you break them down to components, i think there's a bit of grep in sed, and awk can do grep, sed, and sort to some degree
[22:02:20] <algodatastruct> in socket programming, I have a class that deals with transmission of data (i.e. recieving/sending to and from a socket) and another class that deals with unmarshalling the recieved data into an object. I need to add a class that does computation using the recieved objects as its input. In OOP, shouldn't however all objects include the operations that can be performed on them? So, if some object is the input for a 
[22:02:20] <algodatastruct> computation, shouldn't that object provide an operation that does the computation on it?
[22:02:49] <user51> so you end up with lots of little duplicate functionality here and there
[22:03:38] *** pink_sarco is now known as shiza
[22:03:48] <user51> something like yacc is also a good exmaple.
[22:03:48] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[22:03:53] *** exvicesindaco_ is now known as exvicesindaco
[22:03:59] *** shiza is now known as pink_sarco
[22:04:25] <pyzozord> algodatastruct: think about one person writing instructios on paper to another person. Should the letter with instruction be able to carry out the instructions?
[22:04:27] <GeDaMo> "PEG-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_PEG.pdf
[22:04:27] <bayaz> Type: application/pdf Size: 351.0 kB 
[22:04:42] *** Quits: Rathskalon (uid65285@id-65285.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:44] *** Quits: suss (uid545763@user/suss) (Quit: Connection closed for inactivity)
[22:04:47] <jack_rabbit> user51, Yes, you're right. The UNIX authors actually wrote a paper on exactly that: https://vdocuments.mx/cat-v-considered-harmful.html?page=1
[22:04:48] <bayaz> Title: cat -v considered harmful - [PDF Document] 
[22:04:58] *** Joins: wauterboi (~wauterboi@185.65.135.253)
[22:05:01] <pyzozord> algodatastruct: essentially OOP is just a way to build abstractions that make sense to you (and hopefully other people)
[22:05:42] <pyzozord> algodatastruct: but if you really wanna get into that start with SOLID and Design Patterns
[22:05:46] <algodatastruct> pyzozord in OOP, objects encapsulate both the data (state) and the operations that can be executed on that data.
[22:05:51] <user51> jack_rabbit: fwiw, i have lots of awk experience, and it felt like it needed another version to be more than a domain specific language
[22:05:59] *** Joins: vitali64_ (~vitali64@user/vitali64)
[22:06:18] *** Quits: vitali64_ (~vitali64@user/vitali64) (Client Quit)
[22:06:34] *** Joins: vitali64_ (~vitali64@user/vitali64)
[22:06:48] <pyzozord> algodatastruct: yes but a letter shouldn't be able to carry out instructions, it should only allow to be read and maybe folded
[22:06:53] <algodatastruct> pyzozord so your data model is then not a bunch of objects that only have getters/setters, but it's meant to be objects with operations. My computation is for example to find the min(), max()
[22:07:04] <user51> anything beyond an array is a pain, and there's no string indexing (e.g str[1]), $0 sort of works like an array but really isn't, etc
[22:07:35] <pyzozord> algodatastruct: you are limiting your view of what an object can be
[22:07:38] <algodatastruct> pyzozord what if the class had a static method for finding the min() Would that be a good design?
[22:07:39] <jack_rabbit> user51, There's definitely improvements you could make to the awk language. I actually often like DSLs, though, that *don't* do everything.
[22:07:39] <EdFletcher> OOP doesn't always map perfectly to the situation at hand. that's ok, don't try to force it though. 
[22:07:43] <pyzozord> sorry or rather, what can be an object
[22:07:52] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:08:01] <user51> without gawk, you don't even have switch() or function pointers! but i think the original goal was to keep the language small, so i don't think they made terrible decisions
[22:08:07] <user51> henry spencer wrote a paper about it
[22:08:27] <pyzozord> algodatastruct: there is no objective "good design" 
[22:08:28] <jack_rabbit> That's what perl is for
[22:08:36] <jack_rabbit> I like awk because it's small and simple
[22:08:37] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[22:08:51] <pyzozord> algodatastruct: need to decide on your definition of good first
[22:09:08] <algodatastruct> pyzozord when a new object de-facto arrives from a network, it will have a new state (i.e. value=1999), but the operations on it should be the same (computeMin) 
[22:09:18] *** Quits: inky (~inky@5.77.183.200) (Ping timeout: 272 seconds)
[22:10:01] <pyzozord> algodatastruct: I'm not following you fully but sure sounds reasonable
[22:11:26] <jack_rabbit> user51, ahh, just saw your link to the utah paper. :)
[22:11:53] <user51> jack_rabbit: i mentioned it, but GeDaMo linked to it, so he deserved all the credit
[22:11:57] <algodatastruct> pyzozord the idea is to try to stuff all computations that this object is an input to into the object itself, perhaps using static methods, so that a newly arriving object from a network is expected to only carry dynamic state (non-static) which can be done using the marshaller/unmarshaller.
[22:12:07] <ProfSimm> algodatastruct: your initial question was should objects include all operations in themselves. In OOP you should include all ESSENTIAL operations in an object that ensure its INTEGRITY. This is different. Actually it says, you should include only what pertains to the integrity of the object, not everything you use in a particular usecase.  /cc pyzozord
[22:12:23] <user51> http://0x0.st/oqXn.pdf
[22:12:28] <user51> here's spencer's paper
[22:12:57] <ProfSimm> algodatastruct: it's best in general to have a separate stream and then operations on it to take it as an argument. Another option may be decorating it with operations by passing it to the decorator constructor. /cc pyzozord
[22:13:04] <jack_rabbit> user51, haha. That looks interesting. I've read the utah one before but haven't seen this.
[22:13:29] <ProfSimm> algodatastruct: putting an additional operation on the class itself should only be done after carefully considering you always use these operations, or often, when you use this class.
[22:13:37] <user51> for a while now i've wanted to write an awk preprocessor, but it's a bit of a moot point with gawk existing
[22:13:45] <pyzozord> algodatastruct: you can have like an ObjectManager object that can carry out those computations on the Object or whatever. Look at Design Patterns book, it will answer your questions
[22:14:05] <pyzozord> algodatastruct: it's also what everyone expects you to know at work
[22:14:09] <user51> i think you can make function pointers and variadic functions with normal awk - but good luck with multidimensional arrays..
[22:14:11] *** Joins: flaqoniun (~F@32.211.211.39)
[22:15:23] <pyzozord> algodatastruct: in the end none of this matters as long as the code meets your goals. It would be good that some of the goals were: it works correctly, it's easy to understand, it's easy to test and modify
[22:15:49] <user51> function pointers could just be a big if/else and a duplicate function body, and variadic functions could be an array initialized before the function call. but then you have 1.5 languages to deal with.
[22:16:18] <pyzozord> algodatastruct: it's still an act of design after all
[22:16:30] <algodatastruct> pyzozord thanks for mentioning a few alternative design options. This is not for work. This is to compare multiple approaches out of curiosity. I will measure their performance to choose the ifnal one.
[22:17:00] <algodatastruct> ProfSimm I meant to thank you, actually. Thanks!
[22:17:09] <algodatastruct> thanks both 
[22:17:23] <pyzozord> sure, yes, actually measuring and choosing based on that is just about the best thing one can do :)
[22:18:23] <pyzozord> in my opinion I should add, I'm not an expert
[22:20:08] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:20:42] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[22:21:40] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[22:21:52] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[22:22:07] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:22:48] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[22:22:51] <ProfSimm> algodatastruct: I wanna give you a real world example from my libs. I have a Log interface which has a single method: log(message, type, code, details). Then I can implement ApplicationLog which has 4 specific types of messages, like error, warning, success, debug. I make a decorator which implement Log, but adds also 4 methods error(), warning() etc which internally call log() with the correct type filled in. Then I can do  appLog= new Application
[22:22:57] <ProfSimm> Man it cut me off.
[22:23:14] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[22:23:30] <pyzozord> jack_rabbit: I think you are probably right about that fractal abstraction idea. But also maybe we have a natural "ground level of abstraction" in many fields. In mechanical engineering it would be something like newtonian physics, in electrical engineering I don't know something similar. Engineers will gravitate around that "ground level of abstraction", which literally keeps their projects 
[22:23:36] <pyzozord> grounded.
[22:23:38] <ProfSimm> algodatastruct: appLog= new ApplicationLog(someLog). Now someLog can be an instance of FileLog, StreamLog, SplitLog, FilteredLog etc. and I have just one class ApplicationLog for all those logs
[22:24:06] <ProfSimm> algodatastruct: it's a much more robust way of working and combining objects than trying to put everything on one class/interface
[22:24:10] <pyzozord> jack_rabbit: I think in programming our ground level is the hardware. But for some reason we don't gravitate to our gound level as much as other fields do.
[22:24:10] *** Quits: fe23 (~fe23@2409:8a34:466:6010:b04d:b836:f046:428f) (Quit: fe23)
[22:24:19] *** Joins: newwebdev13 (~newwebdev@78.135.92.217)
[22:24:51] <kee> pyzozord: It's because of the web, and because of OSs and sandboxing.
[22:24:56] <kee> We used to gravitate to the ground level
[22:25:00] <kee> ActiveX, etc..
[22:25:02] <pyzozord> it might be because we enjoyed a period of uninterrupted exponential growth of hardware speed
[22:26:31] <flaqoniun> encrypted media extension called and wants it's binary decoders it installed intoyour browser back
[22:26:40] <ProfSimm> pyzozord: we need the reverse now, a period of exponential shrinkage in hardware, to optimize away that bloat ;-)
[22:26:51] <GeDaMo> user51: is 'awf' referring to some earlier version of awk or is it an OCR error?
[22:27:17] <pyzozord> like in programming with've built cities so tall we lost gravity at all, we just carry on in spacesuits now.
[22:27:33] <user51> GeDaMo: http://doc.cat-v.org/henry_spencer/awf/
[22:27:46] <GeDaMo> Ah :)
[22:28:10] <pyzozord> ProfSimm: I did hear moore's law is dead, hopefully maybe that will do us some good in terms of complexity
[22:28:37] <GeDaMo> ProfSimm: I want the semiconductor equivalent of a 3D printer
[22:28:38] *** Joins: tradar (~tradar@user/tradar)
[22:28:42] <pyzozord> I don't really understand why most people aren't bothered by this
[22:28:50] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Quit: Leaving)
[22:29:39] <GeDaMo> Bothered by what?
[22:30:12] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[22:30:41] <Toneloc> GeDaMo - ChipIgnite?
[22:31:30] <ProfSimm> pyzozord: unfortunately it's not dead :)
[22:31:50] <ProfSimm> pyzozord: people keep misquoting that law and calling it dead for like a decade or two now :P
[22:31:53] <algodatastruct> ProfSimm yes, I see what you mean. ApplicationLog works with any class that implements the interface.
[22:32:04] <GeDaMo> Toneloc: I was hoping for something a bit cheaper than that :P
[22:32:57] <ProfSimm> algodatastruct: yes. It's like having two lego pieces, for top part and bottom part and you can combine 4 top parts and 4 bottom parts into 16 combinations without writing 16 classes. Avoids combinatorial explosion, and keeps each interface very lean and easy to implement many times
[22:33:53] <Toneloc> GeDaMo -go half on a project with you :P
[22:34:17] *** Quits: vitali64_ (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[22:35:03] *** Quits: lamein (~lamein@user/lamein) (Quit: WeeChat 2.8)
[22:35:15] <pyzozord> risc-v is great, can't wait for that
[22:35:25] <GeDaMo> https://www.youtube.com/watch?v=7hdBo5kxfGo
[22:35:26] <bayaz> Title: It Ain't Over 'Til It's Over (Remastered 2012) 
[22:36:09] <Toneloc> GeDaMo - how about? >> https://www.zerotoasiccourse.com/
[22:36:09] <bayaz> Title: Zero to ASIC Course 
[22:36:48] <Toneloc> $650 is much more affordable, what do you think?
[22:37:02] <GeDaMo> Isn't that just for the course?
[22:37:26] <Toneloc> $50 extra to get your chip
[22:37:41] <Toneloc> so really $700 + some p&p
[22:37:44] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Quit: WeeChat 3.4)
[22:37:54] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[22:38:02] <user51> pyzozord: why is it great?
[22:38:06] <beaky> nice so i was wrong about my tea database fitting in cache it is not 8 bytes * 32 per column it is 8 bytes to the power of 32 
[22:39:44] <GeDaMo> You're going to need a bigger boat :P
[22:39:46] <flaqoniun> a minor miscalculation, only one operator was slightly off!
[22:39:51] <pyzozord> user51: it's like opensource but for hardware, specifically cpus
[22:40:12] <beaky> so 79228162514264337593543950336 bytes 
[22:40:28] <Bou> More bytes than there are teas, how is that possible
[22:41:10] <Bou> Are you storing gene sequences of all teas?
[22:41:10] <Toneloc> GeDaMo- will you build an asic now then, for only $700 ?
[22:41:14] <user51> pyzozord: i cant compile a cpu a home :P
[22:41:28] *** Joins: norayr (376bc34bfc@37.252.78.253)
[22:41:40] <flaqoniun> user51 you can if its implem,ented in an FPGA
[22:41:40] <GeDaMo> Toneloc: probably not
[22:41:43] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[22:42:01] <GeDaMo> I could do something on an FPGA for much less than that
[22:42:09] <Toneloc> GeDaMo - would be a cool thing to do, FPGA might be something instead
[22:42:16] <GeDaMo> user51: well, you can, kind of :P
[22:42:28] <Toneloc> GeDaMo- or you could try a PSOC
[22:42:43] <Toneloc> if you want some digital and some analog, a mixed system
[22:43:08] <Toneloc> Or if you are really adventurous, a FPAA
[22:43:40] *** Joins: inky (~inky@5.77.145.167)
[22:45:06] <ProfSimm> pyzozord: moore's law just said transistors double every 1.5 years (approx)
[22:45:15] <ProfSimm> pyzozord: check out the new M1 Ultra chip by Apple.
[22:45:28] <ProfSimm> pyzozord: if anything, they're surpassing Moore's Law the bastards
[22:45:55] <ProfSimm> pyzozord: we also have rapid growth in native neural net computation cores
[22:46:19] <ProfSimm> pyzozord: moore's law is well and alive. Not to mention we keep finding smaller and smaller processes for transistors
[22:46:31] <ProfSimm> pyzozord: but we don't need smaller processes.
[22:46:36] <ProfSimm> That's just extra gravy
[22:47:53] <user51> GeDaMo: how?
[22:48:13] <user51> flaqoniun: how well does it perform?
[22:49:05] <GeDaMo> user51: on an FPGA
[22:49:28] <Toneloc> You could also simulate the processor in software
[22:50:09] <Toneloc> If you didn't want to buy a FPGA, you could just test the simulation in the design software
[22:50:32] <Toneloc> but you may as well buy one, would make it much more fun
[22:51:50] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[22:52:04] *** Joins: flaqoniun (~F@32.211.211.39)
[22:52:23] <flaqoniun> user51 it depends on how many cpu's the fpga can physically implement
[22:52:24] <ProfSimm> Toneloc: we use software to make hardware for decades now. Makes me realize. It makes software a self-hosted compiler :P
[22:52:35] <flaqoniun> dram / bus speeds, etc
[22:52:43] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:52:57] <ProfSimm> flaqoniun: well, one 
[22:52:58] <flaqoniun> cache sizes of course
[22:53:04] <flaqoniun> not one
[22:53:13] *** Joins: DevAntoi_ (~DevAntoin@2a01:e34:ec18:50c0:6479:a4f:3fd8:4be7)
[22:53:24] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:53:34] <ProfSimm> flaqoniun: in CPU design no matter how many cores you have, it's integrated and it's one CPU :
[22:53:35] <ProfSimm> :P
[22:53:45] <GeDaMo> You can put multiple CPUs or other devices on a single FPGA
[22:53:54] <koollman> unless it is more than one cpu :)
[22:53:58] <Toneloc> ProfSimm- sure thing, first computers were used in the design of electronics, IC's, microelectronics etc. software such as SPICE
[22:54:39] <ProfSimm> Toneloc: the virtuous loop. One we also call life. We're also self-hosted compilers, by reproducing.
[22:54:52] <ProfSimm> Toneloc: all we need is a processor that can make little processors now
[22:55:07] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b1b1:e3c2:ffcc:c651) (Ping timeout: 260 seconds)
[22:55:18] <ProfSimm> Toneloc: factories actually kinda look like a giant CPU from high above
[22:55:30] <Toneloc> ProfSimm - very true
[22:55:32] <ProfSimm> Toneloc: sorry about getting philosophy
[22:55:34] <ProfSimm> ical*
[22:55:51] <Toneloc> ProfSimm - you're just working on a higher level of abstraction :P
[22:55:57] <GeDaMo> Maybe biological computers will be able to reproduce
[22:56:43] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[22:57:03] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[22:58:13] <ProfSimm> Toneloc: yeah I'm super abstract. None of what I say can be instantiated.
[22:59:01] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:59:02] <ProfSimm> GeDaMo: maybe but technically biological systems are not uniquely able to reproduce. We can just hijack DNA & related processes so we don't have to reimplement them otherwise
[22:59:18] <ProfSimm> GeDaMo: but it'd be more fun to reinvent it for silicon
[22:59:33] <ProfSimm> GeDaMo: maybe not possible though
[22:59:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:59:51] <GeDaMo> https://en.wikipedia.org/wiki/Microelectromechanical_systems
[22:59:52] <bayaz> Title: Microelectromechanical systems - Wikipedia 
[23:00:01] <ProfSimm> GeDaMo: technically, no way to keep CPUs as they are if we need to intersperse whem with reproduction abilities
[23:00:36] <ProfSimm> GeDaMo: this means probably our reproduction system will look more like factories being run by robots, making robots, designed by robots.
[23:00:45] <ProfSimm> GeDaMo: we're halfway there already
[23:01:20] *** Joins: tforever (~Terabyte@85.103.110.249)
[23:01:23] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Remote host closed the connection)
[23:01:26] <GeDaMo> Proteins are basically robots, they assemble and disassemble other molecules
[23:01:32] <ProfSimm> GeDaMo: sure
[23:01:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:01:47] <GeDaMo> They're just not individually programmable yet :P
[23:01:48] <ProfSimm> GeDaMo: but I'm just saying they work at a very different level.
[23:02:06] <tforever> pushdown automata_
[23:02:12] <ProfSimm> GeDaMo: there's a benefit to being able to pack tightly so many transistors without noise like reproduction and so on
[23:02:32] <ProfSimm> GeDaMo: although we still can't make a processor that matches a humam brain, or even a cat brain, in that volume
[23:02:39] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[23:02:40] <ProfSimm> GeDaMo: so cells maybe have an edge.
[23:02:45] <ProfSimm> Not maybe, they do
[23:03:01] <GeDaMo> https://en.wikipedia.org/wiki/Utility_fog
[23:03:01] <bayaz> Title: Utility fog - Wikipedia 
[23:03:17] <tforever> ProfSimm: there was a such research going on but I don't know whether it has succeded or not
[23:03:26] <ProfSimm> GeDaMo: nice, e-COVID, no thanks.
[23:03:34] <ProfSimm> GeDaMo: ;-)
[23:04:23] <ProfSimm> We keep talking about minituarization of process, but we have no similar minituarization of factories.
[23:04:31] <ProfSimm> If we start working on that, things may balance
[23:04:54] <ProfSimm> As in we make smaller and smaller factories, until say 50 years from now, you can 3D print yourself a CPU
[23:05:32] <ProfSimm> This will make the feedback loop between design and realization, software and hardware, very fast.
[23:05:38] <ProfSimm> And we'll hit the singularity straight on
[23:05:54] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[23:06:20] *** Quits: exvicesindaco (~exvicio@host-82-54-188-22.retail.telecomitalia.it) (Remote host closed the connection)
[23:06:30] <user51> you'd still need raw materials no?
[23:06:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:06:33] <tforever> people who are richer than us wouldn't like it, so...
[23:07:05] <tforever> the whole industry has to make such a reform in order to change something
[23:07:14] <tforever> prove me if I'm wrong
[23:07:48] <user51> maybe it'll be like the lisp curse, cpu edition
[23:07:53] <user51> http://winestockwebdesign.com/Essays/Lisp_Curse.html
[23:09:01] <GeDaMo> http://www.righto.com/2011/07/cells-are-very-fast-and-crowded-places.html
[23:09:01] <bayaz> Title: Cells are very fast and crowded places 
[23:09:22] <ProfSimm> user51: just feed your 3D printer CPUs
[23:09:41] <ProfSimm> user51: you feed it CPUs it degrades them and makes new CPUs
[23:10:23] <ProfSimm> user51: fragmentation is a problem yes
[23:10:46] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:10:48] <ProfSimm> user51: but eventually winners emerge. In our case the winners weren't LISP, but it could've been a lisp
[23:11:39] *** Joins: brabrax (~brabrax@user/brabrax)
[23:11:52] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[23:12:12] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:12:28] <ProfSimm> What do we call "an array of commands" to evaluate left to right (start to end)
[23:12:39] <ProfSimm> in GPU they call it command buffers. Any sexier name?
[23:12:44] *** Joins: jazzy (~jaziz@user/jaziz)
[23:13:16] <user51> something like array = { cmd1, cmd2, cmdN }?
[23:13:56] <GeDaMo> I think Q'Nial calls that an atlas
[23:13:57] *** Quits: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net) (Quit: Client closed)
[23:13:59] <ProfSimm> user51: ye
[23:14:07] <ProfSimm> Q'Nial?
[23:14:12] <GeDaMo> An array language
[23:14:14] <user51> i'm guessing something like a 'command list' or 'list of commands'.
[23:14:26] <ProfSimm> Oh new language! (for me)
[23:14:28] <user51> maybe 'command sequence'
[23:14:30] * ProfSimm jumps with joy
[23:14:33] <GeDaMo> https://en.wikipedia.org/wiki/Nial "Nested Interactive Array Language"
[23:14:34] <bayaz> Title: Nial - Wikipedia 
[23:14:44] <GeDaMo> https://github.com/danlm/QNial7
[23:14:45] <bayaz> Title: GitHub - danlm/QNial7: The NIAL language environment 
[23:15:01] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[23:15:39] <ProfSimm> Man. This is literally like the thing I'm working on
[23:17:03] *** Joins: vitali64 (~vitali64@user/vitali64)
[23:18:12] *** Quits: f843d0 (~pi@ip4d153a60.dynamic.kabel-deutschland.de) (Quit: leaving)
[23:18:27] <tforever> hmm, on technical analysis programs we use that array language thing
[23:18:35] <tforever> like, pinescript
[23:18:45] *** Quits: tforever (~Terabyte@85.103.110.249) (Quit: i gonna sleep or bang my head around code editor.)
[23:18:55] *** Joins: f843d0 (~pi@ip4d153a60.dynamic.kabel-deutschland.de)
[23:18:58] *** Joins: tforever (~Terabyte@85.103.110.249)
[23:19:25] <GeDaMo> Ah, I misremembered, an atlas applies each command in the list to the argument, it's not sequential
[23:19:50] <ProfSimm> GeDaMo: it is sequential from what I read
[23:20:36] <epony> nesting nesting.. is this thing "ON"
[23:20:37] *** Joins: tforever_ (~Terabyte@85.103.110.249)
[23:20:48] *** Quits: tforever (~Terabyte@85.103.110.249) (Read error: Connection reset by peer)
[23:22:51] <flaqoniun> i see a lot of "documentation" on what a gpu command buffer might be, but nothing about the "commands"
[23:22:55] *** Joins: f843d0_ (~pi@ip4d153a60.dynamic.kabel-deutschland.de)
[23:22:55] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:23:23] *** Quits: f843d0 (~pi@ip4d153a60.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[23:23:33] *** Joins: justOkay (~justache@user/justache)
[23:23:40] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[23:23:46] *** f843d0_ is now known as f843d0
[23:24:03] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[23:24:25] <ProfSimm> flaqoniun: well they're gnarly C/C++ APIs that form array of structs.
[23:24:36] <flaqoniun> are they?
[23:24:43] <flaqoniun> source on that info?
[23:25:23] <GeDaMo> If you look at something like Vulkan, you'll see the sort of commands you can send
[23:25:35] <tforever_> do you recommend homebrew on psp to develop myself on computer graphics
[23:25:35] <flaqoniun> does vulkan run on the GPU?
[23:25:46] <flaqoniun> opengl will compile it's shaders through MESA
[23:25:58] <tforever_> i thought that would be easier to do stuff since it has no shaders
[23:26:17] <GeDaMo> Vulkan is an API for interacting with a GPU
[23:26:44] <flaqoniun> so a GPU command buffer is a vlulkan command buffer?
[23:27:08] <tforever_> or the question should have been like so: should i fear about computer graphics and shaders?
[23:27:25] <tforever_> i don't have that much maths background since i'm a high schooler
[23:27:28] <GeDaMo> flaqoniun: they're similar in principle as I understand it
[23:27:36] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[23:27:46] <flaqoniun> you should fear prorpreitary DMA controllers that can access your system ram
[23:27:56] <flaqoniun> if you are installing webapps on them
[23:28:06] <GeDaMo> tforever_: a shader is just a program (or set of programs) which runs on the GPU
[23:28:13] <flaqoniun> streaming webcmds to your blackbox
[23:28:37] <tforever_> no, i wanted to talk about developer's side
[23:28:46] <tforever_> talk from devs side
[23:28:48] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[23:29:19] <flaqoniun> GeDaMo i'm wondering if they are identical,  the same thing under a different name or does GPU have to implement specific vulkan commands to be compatible
[23:29:25] <GeDaMo> You send vertex arrays to the GPU, an instance of the vertex shader runs for each entry in the vertex array
[23:29:33] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Quit: WeeChat 3.4.1)
[23:29:40] <flaqoniun> i don't like how ambiguous this "command buffer" word is thrown around
[23:29:57] <GeDaMo> Then the triangles are rasterised producing pixels, then an instance of the pixel shader runs for each pixel producing texture output
[23:30:32] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[23:30:48] <pyzozord> what ascii symbol the most reminds you the word "execute"
[23:30:53] <GeDaMo> "command buffer" in general just means a sequence of commands
[23:31:02] *** Quits: tforever_ (~Terabyte@85.103.110.249) (Quit: i gonna sleep or bang my head around code editor.)
[23:31:20] <flaqoniun> what differentiates an instruction from a command, commands can fail?
[23:31:51] <GeDaMo> pyzozord: X? :P
[23:31:54] <kee> $
[23:31:56] <kee> ]
[23:31:58] <kee> _
[23:32:13] <kee> \:> _
[23:32:22] <kee> :\> _ I mean.
[23:32:31] <ProfSimm> flaqoniun: god damn it I spent 5 minutes looking for an example, scroll to "basic drawing commands": https://vulkan-tutorial.com/Drawing_a_triangle/Drawing/Command_buffers
[23:32:33] <bayaz> Title: Command buffers - Vulkan Tutorial 
[23:32:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[23:32:48] <GeDaMo> 🪓
[23:33:13] <ProfSimm> flaqoniun: basically it's like working with fwrite, you pass the "handle" to the buffer and you have bunch of functions/methods to write to it like a stream
[23:33:20] *** Joins: aradesh (~aradesh@user/aradesh)
[23:33:34] *** Quits: rsx (~dummy@ppp-188-174-159-56.dynamic.mnet-online.de) (Quit: rsx)
[23:33:43] <flaqoniun> thats a vulkan command buffer, but what about directx commands?
[23:33:45] <kee> GeDaMo: You really associate   with execute?
[23:33:47] <ProfSimm> flaqoniun: it builds a sequence of structs
[23:33:53] <pyzozord> think I'll go with $
[23:34:11] <flaqoniun> what is actually interpretting the command as the API specifies
[23:34:17] <flaqoniun> the GPU or middlewear?
[23:34:17] <pyzozord> took me a long time, but I ended up with a black background terminal emulator with $ as prompt
[23:34:21] <ProfSimm> flaqoniun: technically command buffers are the same in all APIs as that's a graphics card thing. The APIs may vary a little
[23:34:32] <ProfSimm> flaqoniun: I mean the user APIs may vary
[23:35:12] <pyzozord> but the gif background terminal emulator is still fun and still super fast
[23:36:02] <pyzozord> it would be great for like twitch streams
[23:36:30] *** Joins: Lyn (~Lyn@user/law)
[23:36:58] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[23:37:25] *** Quits: Lyn (~Lyn@user/law) (Client Quit)
[23:37:41] <pyzozord> I haven't used it for a while and I'm now impressed with how fast and low resource it is
[23:38:35] *** Joins: savolla (~quassel@95.10.200.51)
[23:42:31] <pyzozord> but eh, just black background works better I think
[23:44:11] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Remote host closed the connection)
[23:44:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[23:47:14] *** Joins: Guest39 (~Guest39@2a01:e0a:101:b3c0:3d24:ece2:7590:2a21)
[23:47:42] <epony> kee, looks like you're trying to set your PS1 (prompt for the clueless)
[23:48:45] <kee> /prompt $DRIVELETTER:^\>
[23:48:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:49:31] <epony> R for reverse
[23:50:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:50:23] <kee> reverse?
[23:50:58] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:51:28] <flaqoniun> ok ok, the "command buffer" looks to be like a "system call" for a GPU, and the shader is the actual instructions running on the hardware   sorry for the confusion
[23:52:29] *** Joins: zaher (~zaher@37.48.144.202)
[23:52:31] *** Quits: light (~light@user/light) (Quit: leaving)
[23:52:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:52:42] <GeDaMo> You can also think of it as sending messages to the GPU
[23:53:04] *** Quits: Guest39 (~Guest39@2a01:e0a:101:b3c0:3d24:ece2:7590:2a21) (Quit: Client closed)
[23:53:28] <GeDaMo> The reason they're built into a buffer rather than being sent individually is that each send requires a kernel call which can be expensive
[23:53:38] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[23:54:10] <flaqoniun> eh, put an io_uring on it!
[23:54:32] <flaqoniun> (/s)
[23:54:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:54:39] <GeDaMo> I don't know if GPU drivers can support that
[23:55:41] <pyzozord> https://www.youtube.com/watch?v=hnrpXxbVhME
[23:55:42] <bayaz> Title: The Insane Engineering of the Concorde 
[23:57:43] *** Joins: password2 (~password8@user/password2)
[23:57:43] *** Joins: Pickchea (~private@user/pickchea)
