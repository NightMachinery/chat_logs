[00:00:40] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[00:00:42] <The-Compiler> stealth_: what makes you assume that formatting log data into a JSON line is taking more time than formatting log data into a human-readable output?
[00:01:20] <stealth_> The-Compiler, json has to serialize the data
[00:02:22] <zware> stealth_: `"some string %s" % (some_value,)` may well have to serialize it too
[00:02:29] <The-Compiler> stealth_: ok, and? I doubt generating a string to output (with things like log level, timestamp, etc.) will be quicker in any significant way.
[00:02:48] <newdimension> Just want to chime in and say loving the back and forth :) Great to see different perspectives
[00:03:25] *** Joins: brabrax (~brabrax@user/brabrax)
[00:03:32] <stealth_> i am not sure about this jsonlines, i initial saying json bad for logging cause it writes the whole file.
[00:03:43] <phy1729> That's not true
[00:03:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:04:10] <zware> stealth_: The json module itself doesn't do anything with files unless you give it one, and then its up to you to open it the right way
[00:04:27] *** Joins: wyclif (~wyclif@user/wyclif)
[00:04:57] <The-Compiler> stealth_: nobody is suggesting to parse the entire log history and serialize it again on every logging line
[00:05:14] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[00:05:20] <stealth_> zware, open it? i am taking about writing to it, can you "append" to json file?
[00:06:12] *** Joins: brabrax (~brabrax@user/brabrax)
[00:06:13] *** Joins: rama (~rama@2601:640:10e:c782:ec7d:dad8:25ec:d5ac)
[00:06:19] *** Joins: califax (~califax@user/califx)
[00:06:29] <phy1729> In this case you'd probably write one JSON dict per line or send the dict off to some logging agent
[00:07:33] <stealth_> ya that isn't optimal
[00:08:19] <stealth_> you see nginx/apache, ... log to text file! there is a good reason for it.
[00:08:38] <sco1> When did JSON become not a text file?
[00:08:44] <phy1729> If your sole metric is runtime speed, python probably isn't optimal either
[00:08:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06)
[00:08:53] *** Joins: JustJ (~TheLetter@207.38.28.68)
[00:09:09] <sco1> It's 2021, server metrics stacks can handle parsing JSON
[00:09:14] <zware> stealth_: Ah, I get you now.  You're right that it's not practical to log to a proper `.json` file; it does have to be something like an object per line
[00:09:16] <grym> sco1: json's never been a text file
[00:09:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:09:24] <phy1729> There's maintainablility and ease of use and other human factors that are important too.
[00:09:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:10:04] <stealth_> well i think i made my point.
[00:10:44] *** Joins: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net)
[00:10:49] <JustJ> Anyone here familiar with Freezing Django, with WSGI support? If more appropriate I can try a Django room, but figured I'd check here first.  To the point: I'm trying to freeze Django (done), which has wsgi.py -- normally our app was doing FastCGI (runfcgi command) using an old Django ver, but we are upgrading. How do I wire uWSGI to wsgi.py? Am I doing a django runserver command?
[00:11:15] <The-Compiler> stealth_: and yet they have support for logging as JSON: http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
[00:12:57] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[00:13:06] <stealth_> The-Compiler, I am sure they support looking to mysql database as wel, i am just saying its not optimal. And ppl do such things cause they don't know better.
[00:13:43] <stealth_> logging*
[00:14:07] <sco1> It's sure common for something that's "not optimal" and not "best practice"
[00:14:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:14:47] <elias117> anyone know how I could simplify an equation in python like 2x-y+3x=-2y+3x+9y
[00:15:03] <elias117> I'm looking for some ideas on how to do it
[00:15:06] <energizer> elias117: sympy
[00:15:06] <meejah> stealth_: if you're interpolating to a text-string, i'd have to see some stats before concluding "interpolating to JSON is way slower"
[00:15:09] <elias117> they are all strings
[00:15:19] <elias117> without using sympy
[00:15:29] *** Joins: wyclif (~wyclif@user/wyclif)
[00:15:32] <energizer> elias117: ...why?
[00:15:34] <elias117> or numpy
[00:15:39] <elias117> because its a challenge
[00:15:55] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:15:55] <energizer> elias117: what is the point of doing a challenge and then asking someone else how to do it
[00:16:02] *** Quits: WantToHelp (~dale@user/wanttohelp) (Ping timeout: 252 seconds)
[00:16:07] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[00:16:08] <elias117> im just looking for a way to get started
[00:16:18] <stealth_> elias117, you would have to rewrite it ike `x = 2; y = 1`... then do `x-y`...
[00:16:29] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Remote host closed the connection)
[00:16:38] <sco1> Seeing how sympy does it seems like a good way to get started
[00:16:39] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:17:03] <phy1729> Or thinking about what steps you would take when doing it by hand
[00:17:10] <elias117> yeah
[00:17:24] <elias117> like if I wanted to simplify what would I do
[00:19:46] <stealth_> meejah, Its more to do with how file works, like its faster to append to a file vs, writing/editing the whole file over. Also what happens if the power goes off, when does json actually flush the data to disk? will it corrupt the data at this point? there are loots of factors
[00:20:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:20:23] *** Joins: d3sync (~d3sync@62.1.158.148)
[00:20:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:22:19] *** Joins: P1ro (~quassel@user/p1ro)
[00:22:20] <meejah> stealth_: oh, yeah, i thought we were talking about "one JSON object per line" which seems common to anything that does "json logging"
[00:22:45] *** Joins: System123 (~System123@151.52.127.10)
[00:22:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:23:03] *** Quits: dumptrucktaco (~dumptruck@pool-108-28-60-86.washdc.fios.verizon.net) (Quit: dumptrucktaco)
[00:23:08] *** Quits: System123 (~System123@151.52.127.10) (Read error: Connection reset by peer)
[00:24:57] <elias117> dude I think im overthinking it
[00:25:00] *** Quits: vimart (~vimart@148.252.128.65) (Quit: WeeChat 2.8)
[00:25:01] <elias117> lol I know what to do
[00:25:02] <stealth_> meejah, you could create a specialized logging to do that i suppose, then again if you did that why bother to use json!
[00:25:27] <ezzieyguywuf> I see some code that is calling a function as `someFunc.func(param)`
[00:25:30] <meejah> "specialized"? (what system that logs JSON _doesn't_ do 1 json object per line?)
[00:25:34] <ezzieyguywuf> is this .func thing just some super old way of doing i?
[00:25:43] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06) (Quit: Leaving)
[00:25:43] <ezzieyguywuf> *It
[00:25:49] <meejah> stealth_: the reason to use 1-json-per-line is you get structured logging instead of morass-of-text
[00:25:52] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) ()
[00:25:52] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[00:25:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:26:25] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Remote host closed the connection)
[00:26:31] *** Joins: wyclif (~wyclif@user/wyclif)
[00:26:36] <sco1> ezzieyguywuf: someFunc is likely not a function
[00:27:04] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[00:27:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:27:16] <stealth_> meejah, that depends how important logs are to you/business
[00:27:19] *** Quits: P1ro (~quassel@user/p1ro) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:27:30] <zware> ezzieyguywuf: Or somebody set `someFunc.func = some_other_func` somewhere after `def someFunc(...):`
[00:27:51] *** Joins: brabrax (~brabrax@user/brabrax)
[00:27:57] *** Joins: califax (~califax@user/califx)
[00:28:02] <ezzieyguywuf> sco1: I see it defined as `def someFunc():`
[00:28:07] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:28:09] <ezzieyguywuf> hrm
[00:28:19] <sco1> Can you share a simplified example then?
[00:28:21] <ezzieyguywuf> ahhh yes
[00:28:23] *** Joins: srilyk (~wayne@user/waynew)
[00:28:24] <ezzieyguywuf> they did it for caching stuff
[00:28:26] <ezzieyguywuf> sodumb
[00:28:38] <stealth_> ezzieyguywuf, `.func` would be a method of a class or maybe its imported from a module, and no its not old, its very much a feature.
[00:28:41] <meejah> stealth_: i feel like we're off in the weeds. 1-line-of-json or 1-line-of-text is likely about the same, resource-use-wise. The advtange of json seems clear here ("specified format")
[00:30:07] <stealth_> meejah, thats not normally how json works, you are now customizing
[00:30:27] <ezzieyguywuf> this is where they set it https://github.com/gentoo/portage/blob/master/lib/portage/eapi.py#L326
[00:30:34] <ezzieyguywuf> and then further down is where that function is called
[00:30:35] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[00:30:42] <ezzieyguywuf> functools has @cache now though, it's probably a cleaner solution
[00:30:45] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[00:30:54] <The-Compiler> stealth_: it's exactly how everything which ever logged to JSON does this kind of logging
[00:31:12] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[00:31:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:32:01] *** Joins: wyclif (~wyclif@user/wyclif)
[00:32:34] <The-Compiler> stealth_: i.e. one log record being one JSON object (i.e. Python dict) - nobody says the output in its entirety needs to be a valid JSON file, but that doesn't mean it's not JSON logging
[00:33:24] <stealth_> The-Compiler, ok, then you do that. I was just saying what the pitfalls are. this is turning into an debate
[00:33:56] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[00:34:17] *** Quits: flokuehn (~flokuehn@mue-88-130-54-008.dsl.tropolys.de) (Ping timeout: 264 seconds)
[00:34:50] <meejah> there's no "pitfall". nobody does "json logging" by re-writing the entire file on every message.
[00:35:03] <sco1> ezzieyguywuf: it's just setting an attribute that happens to be callable. e.g. https://bpa.st/CH6Q
[00:35:11] <sco1> Perfectly new and old school :)
[00:35:21] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[00:35:25] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[00:35:28] <stealth_> there are companies out there that log to database with locks/flush all the jazz.. cause logs are very important to them. you weigh in the optional. If json file is want you want, then you use that.
[00:36:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:36:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:37:26] *** Quits: JustJ (~TheLetter@207.38.28.68) (Ping timeout: 252 seconds)
[00:37:31] *** Joins: wyclif (~wyclif@user/wyclif)
[00:38:16] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:38:20] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:38:22] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:38:23] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[00:38:36] <phy1729> I would suggest when starting out, to start with a structured format like json and then revisit that later if needed.
[00:38:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:39:18] *** Joins: califax (~califax@user/califx)
[00:39:42] *** Joins: brabrax (~brabrax@user/brabrax)
[00:39:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:39:58] <elias117> how can I replace all dashes followed by letter with -1
[00:40:11] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06)
[00:40:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:40:20] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: leaving)
[00:40:57] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[00:40:57] <stealth_> elias117, you mean `my_stirng.replace('-', '-1')` ?
[00:41:27] <elias117>  2x-y+3x=-2y+3x+9y
[00:41:33] <elias117> no that would replace all dashes
[00:41:42] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[00:41:48] <elias117> I just want to replace the dashes that are followed by a letter
[00:42:02] <grym> elias117: regex
[00:42:03] <The-Compiler> elias117: something like  re.sub(r'-[a-z]', '-1', '2x-y+3x=-2y+3x+9y')
[00:42:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:42:21] <SnoopJ> elias117, `re.sub(r"-[a-zA-Z]", "-1", your_string)` or somesuch
[00:42:31] <elias117> yeah thats what I tried
[00:42:48] <elias117> but what that will dow is replace the - and the letter with -1
[00:42:56] *** Joins: Fiji (~Fiji@user/fiji)
[00:43:01] <elias117> I just want to replace the -
[00:43:04] *** Joins: wyclif (~wyclif@user/wyclif)
[00:43:14] <The-Compiler> elias117: you're looking for a thing called lookahead then
[00:43:47] *** Quits: rama (~rama@2601:640:10e:c782:ec7d:dad8:25ec:d5ac) (Remote host closed the connection)
[00:43:48] <The-Compiler> elias117: re.sub(r'-(?=[a-z])', '-1', '2x-y+3x=-2y+3x+9y') -> '2x-1y+3x=-2y+3x+9y'
[00:43:58] *** Joins: rama (~rama@2601:640:10e:c782:ec7d:dad8:25ec:d5ac)
[00:44:17] <elias117> Basically  2x-y+3x=-2y+3x+9y to 2x-1*y
[00:44:22] <elias117> dude thanks
[00:44:30] <SnoopJ> you don't need lookahead for that, `re.sub(r'-([a-zA-z])', "-1\1", your_string)` will do it using a capture group
[00:44:33] <The-Compiler> elias117: or alternatively, capture the number and re-add it to the replacement: re.sub(r'-([a-z])', r'-1\1', '2x-y+3x=-2y+3x+9y')
[00:44:43] <SnoopJ> err, yea, r"-1\1"
[00:45:08] <The-Compiler> err, capture the *letter* of course
[00:45:16] <The-Compiler> aaand I'm off to bed :)
[00:45:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:45:33] <stealth_> elias117, why are you trying to do this?
[00:45:37] *** Quits: grooverman_ (~grooverma@179.99.120.247) (Read error: Connection reset by peer)
[00:45:41] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[00:47:12] <elias117> im trying to solve a code challenge for a job interview thing and I got most of it out of the way except the regex part
[00:47:16] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[00:47:21] <elias117> im not good with regex
[00:48:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:48:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:48:24] <stealth_> elias117, they probably meant for you to rewrite it into python variable=value, do they not?
[00:48:33] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:00] <The-Compiler> huh
[00:49:21] *** Joins: waynew (~wayne@user/waynew)
[00:49:41] <elias117> i can show you the question one second
[00:50:40] <elias117> https://gist.github.com/elias117/35e87cdfe02c749a3bab67129b924018
[00:50:55] <elias117> stealth_
[00:51:10] *** Quits: baltazar (~baltazar@84-236-71-13.pool.digikabel.hu) (Ping timeout: 265 seconds)
[00:51:29] <elias117> I already have something that does reduced row echelon form and can solve the system of equations its now the string parts im trying to do
[00:51:41] *** Quits: Elzington (~Elzington@89.38.227.231) (Quit: Leaving)
[00:51:45] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:52:21] <SnoopJ> elias117, this is my favorite site for brushing up on regex: https://regexcrossword.com/
[00:52:23] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[00:52:50] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[00:53:02] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[00:53:14] *** Joins: grooverman (~grooverma@179.99.120.247)
[00:53:17] <elias117> whoa thats cool
[00:53:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:53:30] <elias117> thanks SnoopJ
[00:54:03] *** Joins: wyclif (~wyclif@user/wyclif)
[00:54:05] <phy1729> SnoopJ: have you seen  https://almostobsolete.net/regex-crossword/regular-expression-crossword.jpg ?
[00:54:32] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[00:54:39] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[00:54:50] *** Quits: nergar (~Nergar@177.225.157.49) (Quit: Leaving)
[00:55:47] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 246 seconds)
[00:55:54] *** Joins: baltazar (~baltazar@91-83-10-178.pool.digikabel.hu)
[00:56:20] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[00:56:47] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:57:36] *** Joins: baltazaar (~baltazar@91-83-10-178.pool.digikabel.hu)
[00:58:16] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 252 seconds)
[00:58:26] *** Quits: oriba (~oriba@x4db7e220.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:58:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:59:17] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:59:19] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[00:59:30] *** Joins: srilyk (~wayne@user/waynew)
[00:59:31] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738)
[00:59:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:00:17] <stealth_> elias117, ok, looks like you are going about it right
[01:01:17] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 264 seconds)
[01:02:24] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[01:02:26] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738) (Ping timeout: 246 seconds)
[01:02:31] *** Joins: vladoski (~vladoski@2001:b07:add:d406:d979:7377:fe4f:b9f8)
[01:02:39] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:02:40] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[01:02:45] *** Joins: semeion (~semeion@user/semeion)
[01:04:20] *** Quits: rama (~rama@2601:640:10e:c782:ec7d:dad8:25ec:d5ac) (Remote host closed the connection)
[01:05:20] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[01:05:40] *** Joins: Betal (~Betal@user/betal)
[01:06:13] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:08:08] *** Joins: waynew (~wayne@user/waynew)
[01:08:14] <SnoopJ> phy1729, nope, that's a new one on me
[01:10:01] *** Joins: waynew_ (~wayne@user/waynew)
[01:10:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:10:42] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[01:10:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:11:09] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:11:23] *** Joins: wyclif (~wyclif@user/wyclif)
[01:11:58] *** Quits: vladoski (~vladoski@2001:b07:add:d406:d979:7377:fe4f:b9f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:13:26] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 260 seconds)
[01:13:47] *** Joins: doc (~doc@user/doc)
[01:16:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:16:44] <elias117> what does it mean if you lack soft skills and how can you improve them
[01:16:54] *** Joins: wyclif (~wyclif@user/wyclif)
[01:17:06] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[01:21:49] *** Joins: vimart (~vimart@148.252.128.65)
[01:21:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:22:18] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Read error: Connection reset by peer)
[01:22:19] *** Quits: netrunner (~netrunner@user/netrunner) (Quit: and just like that...)
[01:22:25] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:51] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[01:23:40] *** Joins: yaalon_ (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[01:23:42] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Read error: Connection reset by peer)
[01:23:49] <grym> elias117: teamwork; by working on a team
[01:23:55] <jamwil> elias117: Generally soft skills are referring to subjective skills like effective communication, organization, team-work, etc.
[01:23:58] <bpalmer> soft skills usually are related to communication and social goals -- can you deliver code reviews to people without undue escalation; can you effectively work in a team; schedule your work; set boundaries; etc.
[01:24:07] *** Quits: yaalon_ (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[01:24:24] <SnoopJ> "soft" is usually a catchall for non-technical skills (communication in particular)
[01:24:58] *** Joins: vladoski (~vladoski@2001:b07:add:d406:d979:7377:fe4f:b9f8)
[01:25:01] <grym> and (imo) one improves perhaps not by ceasing to make mistakes, but by not making the same mistake over and over.  much like any other skillset.
[01:25:36] <bpalmer> There are also useful general advice books in the vein of 'How to make friends and influence people' alongside more specific subjects
[01:25:44] <jamwil> Agreed, it's really an experience thing--I've made plenty of soft-skill mistakes; just try not to make the same one twice.
[01:26:16] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[01:26:37] <bpalmer> well, I think there's some bits of it related to observation and empathy, or setting up a good feedback loop (you have to realize you made a mistake to avoid it)
[01:26:57] *** Joins: Praise (~Fat@user/praise)
[01:26:57] <bpalmer> the "worst" people at soft skills will never know they offended someone or trampled over a boundary.
[01:27:11] <SnoopJ> technical writing is another "soft" (I use scare quotes because I think this adjective is terrible)
[01:27:14] <SnoopJ> skill
[01:27:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:27:33] <grym> in the days when rocks were soft, it was a job unto itself!
[01:27:39] <zln> can I use 'global var' inside an enclosing scope to export it to the outer? Or is there a better way if I want to control the scope only to the innermost outer if that makes sens :D
[01:27:46] <jamwil> Good point. It all boils down to empathy.
[01:27:55] *** Joins: wyclif (~wyclif@user/wyclif)
[01:27:58] <grym> (i know some now retired technical writers, who embedded within teams at DEC in the days of yore)
[01:28:34] <SnoopJ> zln, there's nothing in the way of "exporting" as you describe, but if the name already exists in the outer scope and you are modifying what value it refers to, you can use the `nonlocal` keyword for this.
[01:28:35] <zln> maybe altering vars of the caller?
[01:28:35] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:28:37] <bpalmer> zln: it won't get exported to the latter, but you can use 'global' or 'nonlocal' to refer to one that exists outside the local scope
[01:29:13] <SnoopJ> `global` does let you do it if it doesn't already exist, but it's pretty gross
[01:29:18] <bpalmer> Sure, given 'def foo(a): def bar(): nonlocal a ; a = 3  ...' , bar can change the value that the rest of foo() sees
[01:29:36] <bpalmer> (once bar() is called)
[01:29:40] <zln> yes it's gross :D. So there is no way of limiting the scope to the callers?
[01:30:33] <SnoopJ> `nonlocal` lets you say "this names does *not* originate in this scope"
[01:30:34] <zln> hmm, but to be able to use nonlocal var, the var needs to be predeclared? Or does nonlocal allocates one if there isn't one already?
[01:30:43] <SnoopJ> and in general names resolve to the nearest enclosing scope
[01:30:49] <bpalmer> zln: nonlocal just says "any reference to this variable should *not* be interpreted as defining it in this scope"
[01:30:58] <zln> ah
[01:31:05] <zln> nice
[01:31:12] <SnoopJ> and the definition of a function including it will fail if the name is not found in the enclosing scope(s)
[01:31:12] <bpalmer> zln: normally speaking, "a = 3" will define a as being a variable in the current scope.
[01:31:46] <SnoopJ> zln, maybe you can tell us a bit more about the problem you're solving that has you reaching for something like this. Maybe there's a better way to do it.
[01:32:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:33:21] <zln> I would like to define a funciton with two params where the first is the stdin and the latter is a variable that gets created and used outside the function if some requirements or operations on the input inside the function is successful ins
[01:33:25] *** Joins: wyclif (~wyclif@user/wyclif)
[01:33:54] *** Joins: noesc (~jb@81-229-23-156-no527.tbcn.telia.com)
[01:33:54] <zln> I would like to not have to declare a variable before the call
[01:34:15] *** Joins: junktext (~junktext@109.201.152.178)
[01:34:17] <zln> and return true or false from the function to be able to use it in logical statements
[01:37:09] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[01:37:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:37:56] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:38:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:38:28] <noesc> I'm trying to understand "subprocess" and using "du" utility to experiment (I know about os.path.getsize()). "du --files0-from=/path/to/null-separated-file" work, but "subprocess.run(['du', '--files0-from=/path/to/null-separated-file') sort-of doesn't: 1) It works for small files, 1-10 entries. 2) It breaks for large files. Returns 960k files then exits with exit code 1. Same file workes fine from
[01:38:30] <noesc> CLI.
[01:38:57] *** Joins: wyclif (~wyclif@user/wyclif)
[01:39:25] <foo> Uh, this is odd. I don't have pip within my docker container. If I don't have pip, then how do I install pip.
[01:39:51] <nedbat> zln: i don't see how a parameter to a function can be a variable to be created in the caller.  Sounds like you want ` x = fn() `, not `fn(x)`
[01:40:09] <nedbat> foo: what version of Python is it?
[01:40:45] <foo> nedbat: 3.6.9. I used to have pip, though, something is not working properly. My docker container might need to be rebuild.
[01:40:52] <elias117> yeah I get nervous talking to people
[01:41:00] <zln> nedbat: is it possible to alter variables with inspect.stack() somehow?
[01:41:40] <nedbat> zln: many things are possible that are bad ideas :)  Why do you want to do it like this?  Why not ` x = fn() ` ?
[01:41:42] <zln> I want to return true false as value but also export some inner variable to the caller
[01:41:59] <nedbat> zln: how about:  ` bool_ret, x = fn() ` ?
[01:42:16] *** Joins: noarb (~noarb@user/noarb)
[01:42:16] *** Joins: djapo (~archangel@user/djapo)
[01:42:21] <zln> nedbat: :D Just curious if I need to be honest
[01:42:36] <zln> I learn the hard way :p
[01:43:25] <zln> for everything I learn, several questions arises: 'wonder if one can do this, that'
[01:43:28] <SnoopJ> noesc, that's pretty curious, do you happen to have a reproduction we could run ourselves?
[01:43:34] <nedbat> zln: with inspect.stack you could affect variables in the caller, but it will probably break in some cases, and even if it doesn't, no one will understand what is happening.
[01:43:49] <noesc> SnoopJ: hmm, I'll try and create a pastebin or something
[01:43:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:44:28] *** Joins: wyclif (~wyclif@user/wyclif)
[01:44:54] *** Joins: minip (~minip@user/minip)
[01:45:05] <zln> nedbat: yes but it's like var = something. There is people who doesn't understand what's going on behind the curtains. They just understand what behaviour they can expect and that's enough of understanding for them
[01:45:07] <zln> :p
[01:45:28] <nedbat> zln: i don't understand: are you saying that some people are confused by "var = something"?
[01:45:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:46:11] <zln> no, I mean they don't have insights to what python is doeing with that expression internally
[01:46:33] <zln> I mean, maybe understanding the behaviour is enough in some cases
[01:46:35] <nedbat> zln: sure, and there are transistors down there, and electrons in the transistors.  We don't need to understand all the levels.
[01:46:37] <SnoopJ> there's not all that much to have insight about, the name gets associated with the value
[01:46:56] <zln> nedbat: yes, that's what I mean too :)
[01:47:15] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[01:49:05] <zln> SnoopJ yes, That's correct. No one needs to understand how that happens internally to be able to use it
[01:49:29] *** Joins: y1n (~y1n@77.119.174.187.wireless.dyn.drei.com)
[01:49:37] <altendky> does anyone have pre-commit sensibly configured to install the package-under-test including an extra?  `'.[dev]'` isn't working for me.  i have to specify a more complete path.  i think that the `.` there is referring to the hook's package repo clone or such, not the project under test's root.  the specific case is chia-blockchain with a pre-commit using mypy (via the pre-commit 'mirror') but i want the `dev` extra from
[01:49:37] <altendky> chia-blockchain so it gets pytest etc for hints.
[01:49:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:49:58] *** Joins: wyclif (~wyclif@user/wyclif)
[01:50:00] *** Quits: int3l (~int3l@78-83-124-208.spectrumnet.bg) (Quit: WeeChat 3.3)
[01:50:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:50:40] <zln> I just wanted to explain how I was reasoning
[01:51:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[01:53:30] <zln> btw, what is a frame object?
[01:53:52] <zln> reading about functions in inspect module
[01:54:14] *** Quits: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Ping timeout: 246 seconds)
[01:54:16] *** Quits: p-i-_ (~Ohmu@223.206.70.53) (Remote host closed the connection)
[01:54:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:55:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:56:06] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:57:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:58:49] <altendky> a cursory glance makes it look like you can't practically specify anything except the hook package via `.` and pypi packages.  https://github.com/pre-commit/pre-commit/blob/66c51a3d568ee36f16cd0127059501daefbc0560/pre_commit/languages/python.py#L190-L205  anything else would require a path that it seems like you wouldn't know.
[01:59:27] *** Joins: fikran (~fikran@user/fikran)
[02:00:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:01:01] *** Joins: wyclif (~wyclif@user/wyclif)
[02:01:27] <bpalmer> zln: far better than messing around with inspect is, if you really dont' want to just return data with a return variable (or yielding it, etc): pass in a mutable object that can be changed.
[02:01:46] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-041e-af33-a244-5537.res6.spectrum.com)
[02:01:47] <noesc> SnoopJ: It's not the same computer as this one so trying to make a similar scenario, but doing so I found out that 'du' in CLI and through python "appears" to behave differently. When you are not allowed to read on file or more, then 'du' returns exit code 1. Which I think is what's tripping me up and not that my code is wrong, just my understanding of it. I will investigate a little bit (since on
[02:01:49] <noesc> the other computer I'm running the script as 'root' and should be able to do what ever I want).
[02:02:27] <bpalmer> zln: class Person: name: string   ;   p = Person(); foo(p)     and then foo does p.name = "whatever", instead of trying to find a 'name' varialbe in the caller's scope.
[02:03:22] <elias117> I ahve a question what re.sub would I use to take this string 2alpha-beta+3alpha=-2beta+3alpha+9beta-7 and turn it into 2alpha-beta+3alpha=-2beta+3alpha+9beta+-7 basically I want to take all - followed by just a number and return +- followed by that same number
[02:03:24] <zln> yes I know that. Just wanted to create the argument on the fly if the function body is successful
[02:04:12] <bpalmer> zln: so set a new attribute on a mutable object that's passed in. It's ugly, but it's still so much more comprehensible than this spooky action at a distance you're trying for.
[02:04:22] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:04:29] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[02:04:57] <zln> well, someone needs to get his hands dirty for the convenience of others :p
[02:05:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:05:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[02:06:02] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:06:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:06:32] *** Joins: wyclif (~wyclif@user/wyclif)
[02:09:34] <SnoopJ> noesc, du (or any program really) doesn't have a lot of ways to tell that it's being invoked by Python, but it sounds like you're onto something with permissions
[02:09:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[02:10:17] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 264 seconds)
[02:10:48] *** Joins: humberto1 (~humbertow@2806:107e:f:1419:250e:c7b8:fcfc:fc85)
[02:11:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:11:24] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:12:02] *** Joins: wyclif (~wyclif@user/wyclif)
[02:12:05] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[02:12:07] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:12:26] *** Joins: gitly (~gitly@185.69.144.134)
[02:13:01] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:13:41] *** Quits: humbertowoody (~humbertow@187.202.172.132) (Ping timeout: 252 seconds)
[02:14:31] *** Quits: Akuli (~Akuli@213.216.210.21) (Quit: Leaving)
[02:14:34] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:17:22] <noesc> SnoopJ: I think I have found the culprit, and that it isn't my code (the subprocess part at least) that is the problem. I found one line in this massive file that wasn't formatted properly: /path/to/file/\\ <- the \\ should not be there. So I'm trying to hunt that down to understand what causes it.
[02:17:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:18:18] *** Quits: humberto1 (~humbertow@2806:107e:f:1419:250e:c7b8:fcfc:fc85) (Ping timeout: 260 seconds)
[02:18:28] *** Joins: wyclif (~wyclif@user/wyclif)
[02:19:34] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[02:19:51] *** Joins: gry (~quassel@botters/gry)
[02:20:28] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-041e-af33-a244-5537.res6.spectrum.com) (Remote host closed the connection)
[02:20:46] *** Joins: waynew (~wayne@user/waynew)
[02:20:55] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:20:57] <gry> hi, how do i implement this in python with scipy or something? https://i.ibb.co/g4HxTVC/f.png i have n(nu) and k(nu) in a variable for some range of nu from nu1 to nu2. i dont have any idea of frequency range for variable 'a'. i presume nu_a is created by fft, not by me
[02:21:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:21:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:21:14] *** Joins: ska (~ska@user/ska)
[02:21:59] <ska> On ubuntu 20 i have a package installed in -e mode but yet, I can't import it.. using Python3.9.6
[02:22:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:23:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:23:29] *** Quits: waynew_ (~wayne@user/waynew) (Ping timeout: 265 seconds)
[02:23:58] *** Joins: wyclif (~wyclif@user/wyclif)
[02:24:44] *** Quits: vladoski (~vladoski@2001:b07:add:d406:d979:7377:fe4f:b9f8) (Quit: Textual IRC Client: www.textualapp.com)
[02:25:00] *** Joins: srilyk (~wayne@user/waynew)
[02:25:18] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:f459:d6f:b214:d669)
[02:27:10] <ska> Im doing 'pip install --upgrade -e .[develop]'
[02:28:06] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 260 seconds)
[02:28:27] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:29:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[02:29:28] *** Joins: wyclif (~wyclif@user/wyclif)
[02:31:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:31:56] <noesc> SnoopJ: It seems like the input data has been malformed 2/3 through creating it, and only for one file. No idea how that has happened, but I'll regenerate the data and see if my problem goes away. Otherwise I'll ask again. Thanks!
[02:32:40] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[02:34:06] <SnoopJ> noesc, sounds good
[02:34:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:35:00] *** Joins: wyclif (~wyclif@user/wyclif)
[02:37:04] *** Joins: control (~v1@user/control)
[02:39:17] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[02:39:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:40:16] <ska> I think my problem is related to asdf's installation. Using fresh miniconda env works fine.
[02:40:30] *** Joins: wyclif (~wyclif@user/wyclif)
[02:42:59] <gry> asked the fft query in #scipy, will let you know if they reply
[02:43:02] *** Joins: lethu (~lethu@user/lethu)
[02:44:16] <Samian> Is there a non-neglible performance hit to calling functions passed to the caller as arguments versus calling the function via it's function name in the caller?
[02:44:51] <energizer> Samian: no, but you can always benchmark it if you're concerned
[02:45:07] <Samian> true, I plan on it
[02:45:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:45:47] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:272b:298b:5f9f:8d70) (Quit: Konversation terminated!)
[02:45:51] <Samian> energizer  what do you recommend for bench? is import time fine and looping over what I want time a million times ?
[02:46:00] *** Joins: wyclif (~wyclif@user/wyclif)
[02:46:12] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[02:46:23] <Samian> start = time.time(). loop a million times over some code.  stop = time.time().  (stop - start) / million
[02:46:34] <energizer> Samian: timeit library
[02:46:41] <SnoopJ> Samian, most benchmarking reduces down to timing anyway. timeit handles some of this looping/etc. and is worth using if you aren't doing surgery that requires you to start/stop in weird places
[02:47:05] <Samian> sweet thank you for telling me about it.
[02:47:19] <SnoopJ> the difference here is going to be the potential time it takes to resolve the name, which is going to be negligible (by my understanding of the word, anyhow)
[02:47:55] <SnoopJ> there have been some accelerations to name resolution recently but they're mostly trivia.
[02:48:07] <nedbat> Samian: btw, you said "passed to the caller" and "in the caller", but I think you meant "passed to the called function" and "in the called function"?
[02:48:57] <energizer> i never understood why people who stand on buses are called 'standees'
[02:49:32] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[02:50:33] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:50:51] <energizer> but 'callee' is the better word here
[02:51:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:51:24] <Samian> nedbat  my question is basically about the function pointer equivalent in python.   def foo( some_function ): some_function()     the variable some_function acts like a function pointer
[02:51:46] <nedbat> Samian: yes.
[02:51:57] <nedbat> it's a reference to a function
[02:52:05] *** Joins: Wulf (~Wulf@user/wulf)
[02:52:23] *** Joins: wyclif (~wyclif@user/wyclif)
[02:52:27] <braxas> This is somewhat a continuation of the discussion yesterday (where Snoop made https://github.com/python/typeshed/issues/6061). I still want to figure out the best way to make a function operate on either string or bytes IO, specifically this function: https://github.com/RDFLib/rdflib/blob/master/rdflib/query.py#L345
[02:53:01] <braxas> I implemented this: https://gitlab.com/aucampia/issues/-/blob/master/pytyping-io/test_io.py#L69-81
[02:53:21] *** Quits: ianliu (~Ian_Liu_R@2804:431:cfcf:c747:2ef1:b511:8789:c7c4) (Quit: WeeChat 3.2.1)
[02:53:40] <braxas> but yeah, the typing is a mess :/ - errors here: https://gitlab.com/aucampia/issues/-/blob/master/pytyping-io/README.md
[02:57:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:57:55] *** Joins: wyclif (~wyclif@user/wyclif)
[03:01:53] <aphysically> can you submit to an executor something with an argument that's the result of another future somehow or do I need to wrap the combined task in a new function
[03:02:49] <braxas> actually I cleaned it up a bit now, but not sure that is the best way to do things
[03:02:53] *** Joins: eniac__ (~eniac@gateway/tor-sasl/eniac)
[03:03:44] <aphysically> oh, a done callback maybe
[03:05:33] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc4f-329b-a994-a9e5.res6.spectrum.com) (Read error: Connection reset by peer)
[03:07:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:07:08] <nedbat> Samian: keep in mind, this isn't a function pointer, any more than `x = 1` makes x a "pointer to integer".  In Python, we just say, "x is an integer"
[03:10:33] *** Quits: emerent (~quassel@p200300cd5748557cba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[03:10:34] *** Joins: emerent (~quassel@p200300cd5748551fba27ebfffed28a59.dip0.t-ipconnect.de)
[03:10:38] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:10:48] <aphysically> I guess if the arguments to executor.submit() are evaluated async then I'm fine but I assume that's not the case
[03:17:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:17:47] *** Joins: wyclif (~wyclif@user/wyclif)
[03:18:15] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:20:16] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:20:36] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[03:21:45] *** Joins: nrg (~NRG@user/nrg)
[03:22:03] *** Joins: pycurious (~Adium@user/pycurious)
[03:22:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:23:16] *** Joins: wyclif (~wyclif@user/wyclif)
[03:24:32] *** Quits: khrbt_ (~znc@user/khrbt) (Ping timeout: 246 seconds)
[03:24:58] *** Joins: khrbt (~znc@user/khrbt)
[03:24:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:25:47] *** Joins: elkclone (~elkclone@user/elkclone)
[03:26:39] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[03:26:50] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[03:27:50] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[03:28:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[03:28:44] *** Quits: control (~v1@user/control) (Ping timeout: 265 seconds)
[03:28:47] *** Joins: wyclif (~wyclif@user/wyclif)
[03:29:24] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[03:29:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:30:25] <elias117> I'm having trouble with something
[03:30:56] <elias117> its a regex thing
[03:31:52] *** Quits: noesc (~jb@81-229-23-156-no527.tbcn.telia.com) (Quit: WeeChat 3.2)
[03:32:01] <elias117> I know how to do a look behind
[03:32:08] <elias117> but how do I do a look ahead
[03:32:10] *** Joins: dstein64- (~dstein64@dannyadam.com)
[03:32:14] <elias117> like in the opposite direction
[03:32:15] *** Joins: noesc (~jb@81-229-23-156-no527.tbcn.telia.com)
[03:32:35] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 246 seconds)
[03:33:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:33:54] <InPhase> elias117: re.sub('foo(?=bar)', 'delicious', 'food foobar dish')
[03:34:18] *** Joins: wyclif (~wyclif@user/wyclif)
[03:34:50] *** Joins: belphegor666 (~satan@user/belphegor666)
[03:35:18] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 260 seconds)
[03:35:18] *** dstein64- is now known as dstein64
[03:36:04] *** Joins: lucifero (~satan@user/belphegor666)
[03:36:15] *** Quits: noesc (~jb@81-229-23-156-no527.tbcn.telia.com) (Client Quit)
[03:36:29] *** Joins: noesc (~jb@81-229-23-156-no527.tbcn.telia.com)
[03:36:40] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[03:37:08] <elias117> https://stackoverflow.com/questions/2973436/regex-lookahead-lookbehind-and-atomic-groups
[03:37:13] <elias117> this answered my questions
[03:37:16] <elias117> words are har
[03:37:19] <elias117> words are hard
[03:37:34] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[03:38:06] *** Quits: noesc (~jb@81-229-23-156-no527.tbcn.telia.com) (Client Quit)
[03:38:20] *** Joins: noesc (~jb@81-229-23-156-no527.tbcn.telia.com)
[03:38:26] *** Quits: noesc (~jb@81-229-23-156-no527.tbcn.telia.com) (Client Quit)
[03:38:50] *** Joins: nanook (~nanook@137.184.134.238)
[03:38:59] <elkclone> sometimes
[03:39:07] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:39:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:39:31] *** Joins: noesc (~weechat@81-229-23-156-no527.tbcn.telia.com)
[03:39:48] *** Joins: wyclif (~wyclif@user/wyclif)
[03:39:49] *** Joins: waynew (~wayne@user/waynew)
[03:39:51] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 265 seconds)
[03:40:00] *** Joins: exciteabletom (~tom@58-7-220-242.dyn.iinet.net.au)
[03:41:23] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06) (Quit: Leaving)
[03:41:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[03:42:31] *** Quits: zargon (~robert@140.128.251.133) (Remote host closed the connection)
[03:43:20] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[03:43:33] *** Joins: srilyk (~wayne@user/waynew)
[03:44:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:45:19] *** Joins: wyclif (~wyclif@user/wyclif)
[03:46:17] *** Quits: eniac__ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[03:46:28] *** Joins: eniac__ (~eniac@gateway/tor-sasl/eniac)
[03:46:54] *** ghost43_ is now known as ghost43
[03:47:07] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[03:49:16] *** Quits: lyr (~lyr@user/lyr) (Quit: Ping timeout (120 seconds))
[03:49:28] *** Joins: lyr (~lyr@user/lyr)
[03:50:58] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 252 seconds)
[03:51:24] *** Quits: vimart (~vimart@148.252.128.65) (Quit: WeeChat 2.8)
[03:52:25] *** Quits: ikus060 (~ikus060@96.127.228.230) (Ping timeout: 265 seconds)
[03:59:24] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[04:00:13] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[04:00:21] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[04:02:26] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:9c18:9d1:b1a7:de61:fe2b) (Quit: Textual IRC Client: www.textualapp.com)
[04:02:32] *** Joins: ikus060 (~ikus060@96.127.228.230)
[04:05:28] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[04:06:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:07:32] *** Quits: ikus060 (~ikus060@96.127.228.230) (Ping timeout: 252 seconds)
[04:08:15] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:08:47] *** Joins: fikran (~fikran@user/fikran)
[04:08:56] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:e5f0:1d1f:5f5:3dca)
[04:09:08] *** Joins: ikus060 (~ikus060@96.127.228.230)
[04:10:21] <elias117> if I dont get this job I;'m going to commit sempuku
[04:12:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:12:42] *** Quits: srilyk (~wayne@user/waynew) (Quit: WeeChat 2.9)
[04:15:30] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-89d8-d02e-77d4-d554.res6.spectrum.com)
[04:17:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:17:37] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:17:46] *** Joins: zebrag (~chris@user/zebrag)
[04:17:59] *** Quits: ikus060 (~ikus060@96.127.228.230) (Ping timeout: 252 seconds)
[04:18:30] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:18:40] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:21:30] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[04:23:11] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:23:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:25:34] <stealth_> elias117, whats sempuku?
[04:25:51] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[04:27:23] *** Joins: zebrag (~chris@user/zebrag)
[04:27:38] <sco1> Ritual suicide by disembowelment
[04:29:23] <grym> that's seppuku
[04:29:33] <grym> also, don't do that
[04:29:58] <Roey> please do not do that
[04:30:04] *** Joins: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b)
[04:30:07] <Roey> I just lost a cousin to that
[04:30:16] <stealth_> o, lol. every time ppl wanted to do that cause they were frustrated with coding, we all be dead a long time ago...
[04:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:40] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[04:32:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:34:16] <Swayze> hmm i see you can use integers or floats even as key names in dictionaries
[04:34:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:34:30] *** Joins: vlm (~vlm@user/vlm)
[04:34:59] <Swayze> fascinating :p
[04:35:17] <grym> Swayze: anything hashable is fine, yep
[04:35:45] *** Quits: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b) (Changing host)
[04:35:45] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[04:35:53] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06)
[04:36:02] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[04:37:45] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[04:38:02] *** Joins: Fiji_ (~Fiji@user/fiji)
[04:38:20] <Lando-SpacePimp> Swayze, let'
[04:38:27] <Lando-SpacePimp> Swayze, let's make pottery together!
[04:39:29] <stealth_> does anyone know how to properly wrap `cdef some_struct **` in cython? i can't find any documentation on it
[04:41:19] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:41:31] <elias117> ok nvm I will not do that
[04:41:31] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[04:41:41] <elias117> too much python today
[04:41:45] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:41:46] *** Joins: mickey (~user@user/mickey)
[04:41:48] <elias117> im losing it a little haha
[04:42:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:43:11] <grym> elias117: when brains are full, go make body tire
[04:43:11] *** Joins: wyclif (~wyclif@user/wyclif)
[04:43:11] <grym> d
[04:44:21] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[04:45:06] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[04:45:24] <elias117> thanks for that grym
[04:45:31] <elias117> but i must continue on
[04:45:37] <elias117> im just about finished
[04:46:25] *** Joins: Fiji- (~Fiji@user/fiji)
[04:47:08] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:47:33] *** Joins: sgn (~sgn@user/sgn)
[04:48:05] *** Joins: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net)
[04:48:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:48:42] *** Joins: wyclif (~wyclif@user/wyclif)
[04:49:22] *** Joins: p-i- (~Ohmu@223.206.70.53)
[04:49:53] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[04:50:08] *** Quits: p-i- (~Ohmu@223.206.70.53) (Read error: Connection reset by peer)
[04:50:34] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[04:51:54] *** Joins: cgar (~cgar@072-185-251-159.res.spectrum.com)
[04:52:05] *** Joins: zebrag (~chris@user/zebrag)
[04:52:28] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[04:53:06] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[04:53:13] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2.1)
[04:53:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[04:54:09] *** Joins: wyclif (~wyclif@user/wyclif)
[04:54:57] *** Quits: iogue (~iogue@gateway/tor-sasl/iogue) (Quit: iogue)
[04:55:05] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[04:55:15] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[04:57:28] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:58:43] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[04:59:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[04:59:40] *** Joins: wyclif (~wyclif@user/wyclif)
[04:59:55] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:00:05] *** Quits: kmh (~kmh@p200300df5f1b8800c1ac2219e124c8f7.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[05:00:10] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[05:02:37] *** Joins: pkx (~pkx@user/pkx)
[05:03:07] *** Joins: califax- (~califax@user/califx)
[05:03:41] *** Joins: mgedmin (~mg@user/mgedmin)
[05:05:36] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:05:36] *** califax- is now known as califax
[05:05:55] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:05:58] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:06:16] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:06:17] *** brabrax_ is now known as brabrax
[05:09:37] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[05:09:45] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.1)
[05:13:18] *** Quits: y1n (~y1n@77.119.174.187.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[05:13:23] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[05:13:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[05:13:37] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[05:13:39] *** Joins: d1rewolf (~d1rewolf@72.11.56.90)
[05:14:54] <d1rewolf> hello all. I'm curious...in other languages I've built up a library file of useful development methods (like debug statements in my format, etc). I would store this in my home directory and load it to make life easier when at the repl or in an ide
[05:15:58] <d1rewolf> I notice that no directories in home are in sys.path by default. what's your approach for storing/loading your own nice-to-have files like this in python? things that wouldn't be officially a part of your project?
[05:16:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:19:02] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[05:19:03] <grym> i don't have a grym_utils.py, actually
[05:19:46] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[05:19:52] <d1rewolf> grym: nothing you like to keep around eh? :)
[05:20:02] <bpalmer> d1rewolf: anything like that for 'regular' python, I would just set up a proper module or modules for it.
[05:20:22] <grym> d1rewolf: not really, no
[05:20:25] <bpalmer> d1rewolf: but for notebooks, I often just start the file from a template that has these definitions in the first cell
[05:20:41] <energizer> d1rewolf: i have an ipython config
[05:20:47] <grym> there are "always run/import me" magic files for ipython and whatnot though
[05:20:55] <d1rewolf> bpalmer: I'm coming back to python from a LONG time away. re-learning basically. where would you install these modules? in site-packages?
[05:20:56] <SnoopJ> d1rewolf, very little to keep around can't be packaged up neatly. When I kept a recipes/ folder for this sort of thing, I set PYTHONPATH in my .bashrc but this was pretty nasty.
[05:21:22] <energizer> in ~/.config/...
[05:21:27] <SnoopJ> If I still wanted to do this (and I don't), I would try to make use of the `sitecustomize` feature: https://docs.python.org/3/library/site.html
[05:21:35] <d1rewolf> SnoopJ: that's what I was considering too...but I'd like to learn the "proper" way
[05:21:52] <grym> hmmm... a zipapp of hacks ...
[05:22:06] <SnoopJ> d1rewolf, the whole dot for `site` is a good read, but the sitecustomize part and the bit preceding it about .pth files is the most 'proper' thing to point to here.
[05:22:43] <SnoopJ> ...short of making a 'holding' package for these things and installing it with `pip install --editable` which is pretty nice if it fits your use
[05:23:09] <d1rewolf> SnoopJ: cool...thanks for the guidance. I'll give it a read
[05:23:41] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:23:47] <d1rewolf> SnoopJ: what does "install a project in editable mode" mean? in regards to --editable
[05:23:47] *** Joins: danielcamiel (~danielcam@pa49-199-1-115.pa.vic.optusnet.com.au)
[05:26:02] *** Joins: semeion (~semeion@user/semeion)
[05:29:20] <d1rewolf> Install a project in editable mode (i.e. setuptools “develop mode”) from a local project path or a VCS url.
[05:29:33] <SnoopJ> d1rewolf, it's a special mode of installation that uses some trickery to install the package to site-packages without making a copy. You can install the source, but edits you make still affect the installed copy
[05:29:35] <d1rewolf> SnoopJ: I see the docs state ^ but that doesn't mean anything to me
[05:30:27] <d1rewolf> ooooh.....nice. that sounds awesome. So I could develop it in ~/mydir, install it from there, make edits there, and they would magically get loaded on next load from ~/mydir?
[05:30:34] <d1rewolf> that sounds perfect
[05:31:21] <grym> d1rewolf: the only trick is that you'll have to scour your project code for naughty imports before you share it
[05:31:32] <grym> (if you intend for ~/mydir to remain local )
[05:31:46] <d1rewolf> grym: ok....I can do that. thanks all. I appreciate the advice
[05:33:26] *** Joins: djapo (~archangel@user/djapo)
[05:33:56] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2.1)
[05:34:19] *** Quits: baltazar (~baltazar@91-83-10-178.pool.digikabel.hu) (Ping timeout: 252 seconds)
[05:34:24] *** Quits: baltazaar (~baltazar@91-83-10-178.pool.digikabel.hu) (Ping timeout: 265 seconds)
[05:36:12] *** Joins: baltazar (~baltazar@84-236-99-193.pool.digikabel.hu)
[05:36:19] *** Joins: baltazaar (~baltazar@84-236-99-193.pool.digikabel.hu)
[05:38:02] <noarb> on the tqdm page it shows a gif with some docs opening in a pane while typing a function: https://tqdm.github.io/, it has vi keybindings. Is this an ipython session with plugins or something?
[05:38:34] <SnoopJ> if you intend to share it at all, it should be a proper package that you install the normal way, but editable mode is good to know about for something tricky like that
[05:39:00] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[05:40:25] *** Quits: frostschutz (~frostschu@2a01:c23:7903:2700:6a25:4e5:b107:ed4b) (Ping timeout: 252 seconds)
[05:41:37] *** Quits: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net) (Quit: Ping timeout (120 seconds))
[05:41:57] *** Joins: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net)
[05:42:30] <energizer> noarb: that looks like ptipython
[05:42:34] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[05:43:32] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:44:13] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[05:45:45] <noarb> is this the project? https://github.com/prompt-toolkit/ptpython
[05:46:32] <noarb> are there a lot of python REPLs like this nowadays? I've worked with ipython before
[05:46:55] <grym> ipython, bpython, ptpython are the three i can think of
[05:47:08] <grym> and i think that's in order of userbase
[05:47:24] <grym> (i can't prove that, just my impression)
[05:48:40] <energizer> noarb: yeah thats the one i meant
[05:48:49] *** Quits: cgar (~cgar@072-185-251-159.res.spectrum.com) (Quit: Lost terminal)
[05:51:02] *** Joins: Mija (~Mija@user/mija)
[05:53:26] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-bda1-bc58-a701-afae.res6.spectrum.com)
[05:54:11] *** Joins: frostschutz (~frostschu@2a01:c23:7973:a600:fd87:7174:9e00:5cc6)
[05:54:48] <d1rewolf> the packaging tutorial uses this setup.cfg: https://pastebin.com/HzzPTxgP. Could someone explain to me why "= src" is on a separate line on line 19? I thought it was a bug/mis-paste, but changing it breaks my "python3 -m build"
[05:55:18] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-89d8-d02e-77d4-d554.res6.spectrum.com) (Ping timeout: 260 seconds)
[05:55:40] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[05:58:12] <energizer> it's like {"": "src"}
[05:59:21] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[05:59:37] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[06:01:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[06:02:13] <d1rewolf> energizer: interesting....but....why?
[06:02:45] *** Quits: eniac__ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[06:02:47] <d1rewolf> and for context, i have .py files in src/ but they don't get included in the built files...so troubleshooting that
[06:05:00] <energizer> d1rewolf: it means "the top-level package is in the src directory" and "we didn't think legible syntax is an important part of configuration files"
[06:07:44] *** Joins: eniac__ (~eniac@gateway/tor-sasl/eniac)
[06:12:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:13:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:13:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:14:31] *** Joins: gggp (~textual@221.219.72.131)
[06:14:59] <d1rewolf> energizer: lol....you speak truth. ;) thanks
[06:15:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[06:16:07] *** Quits: gggp (~textual@221.219.72.131) (Client Quit)
[06:16:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:16:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:16:20] <d1rewolf> energizer: is there a name for this config syntax?
[06:16:57] <energizer> d1rewolf: INI, i suppose. check the configparser module
[06:18:07] *** Joins: fikran (~fikran@user/fikran)
[06:20:03] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[06:20:20] * d1rewolf nods. thx energizer
[06:27:12] * SnoopJ really hopes the stdlib gets a TOML parser
[06:27:32] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[06:29:38] *** Joins: lastshell (~lastshell@user/lastshell)
[06:33:17] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 252 seconds)
[06:34:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:36:02] *** Joins: pycurious (~Adium@user/pycurious)
[06:38:14] *** Quits: danielcamiel (~danielcam@pa49-199-1-115.pa.vic.optusnet.com.au) (Ping timeout: 252 seconds)
[06:39:13] *** Quits: junktext (~junktext@109.201.152.178) (Ping timeout: 252 seconds)
[06:39:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[06:41:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:43:01] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[06:47:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[06:49:25] *** Quits: d1rewolf (~d1rewolf@72.11.56.90) (Remote host closed the connection)
[06:49:43] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[06:52:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:54:27] *** Joins: Celeo (~Celeo@user/celeo)
[06:57:04] *** Joins: lethu (~lethu@user/lethu)
[07:02:47] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:02:52] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[07:03:49] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 265 seconds)
[07:05:50] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[07:06:03] *** Joins: lethu (~lethu@user/lethu)
[07:06:23] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[07:07:54] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Quit: Ping timeout (120 seconds))
[07:08:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:08:46] *** Joins: ano (~ano@user/ano)
[07:10:25] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 268 seconds)
[07:10:41] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Ping timeout: 252 seconds)
[07:11:49] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:13:13] *** Joins: DerpGusta (~quassel@user/derpgusta)
[07:13:22] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:14:51] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[07:15:06] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:17:16] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[07:17:44] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[07:20:43] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:25:26] <pycurious> Anyone knows how to compile python3.8 with openssl and bzip2 with source, without sudo on debian/ubuntu?
[07:27:05] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:27:09] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:27:30] *** Joins: mickey (~user@user/mickey)
[07:28:13] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:75f3:33ee:8249:cdb8)
[07:30:00] *** Quits: pkx (~pkx@user/pkx) (Quit: leaving)
[07:31:37] <k_sze> A bit off-topic, but is there a channel for reStructuredText or sphinx?
[07:32:34] *** Joins: kib_ (~kib@user/kib)
[07:32:43] <SnoopJ> pycurious, if those libraries are installed on the system already, `./configure && make`, otherwise you can pass `--with-openssl=/path/to/openssl` to configure. You'll have to manipulate LD_LIBRARY_PATH or the CFLAGS/LIBS env vars for bzip2 probably if it's not on the system
[07:33:01] <k_sze> (Just found #sphinx-doc, but it seems not very populous)
[07:33:34] <pycurious> SnoopJ: I'm not root on the system, that is my issue. ssl I can make work.
[07:33:38] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[07:34:11] <energizer> k_sze: the only place i've seen questions answered is the sphinx google groups mailing list
[07:34:36] *** Joins: semeion (~semeion@user/semeion)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:25] <SnoopJ> pycurious, you don't need to be, but if the libs aren't already on the system, you will need to configure them as I just described.
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:35] <SnoopJ> (after installing them in your home directory/wherever you can)
[07:37:18] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[07:39:12] <pycurious> SnoopJ: I'm trying to do that - so far I've not been successful. Here is what I have so far. export CFLAGS="-I/home/uname/bzip2" && export LDFLAGS="-I/home/uname/bzip2/lib"
[07:39:36] <pycurious> SnoopJ: When I run configure, the output does not have "bz2" when i search on the output
[07:39:48] <pycurious> checking whether compiling and linking against OpenSSL works... yes
[07:39:56] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Remote host closed the connection)
[07:40:00] <pycurious> libssl and ssl.h it finds.
[07:40:18] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[07:41:17] <pycurious> The necessary bits to build these optional modules were not found: _bz2- so am guessing it did not find it. When I run make.
[07:41:50] *** Quits: Fiji- (~Fiji@user/fiji) (Quit: Leaving)
[07:43:15] <SnoopJ> pycurious, I think you -L (or --library-path) for LDFLAGS, not -I
[07:43:24] <SnoopJ> think you want*
[07:43:27] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 265 seconds)
[07:43:34] *** Quits: jazzy (~jaziz@2600:380:844f:a894:cd4d:a937:b8dc:7fa2) (Ping timeout: 260 seconds)
[07:44:11] *** Quits: subopt (~subopt@2603-8081-2302-459a-5034-2547-3a03-db1d.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:46:00] <pycurious> thanks, trying again
[07:47:47] <pycurious> SnoopJ: The necessary bits to build these optional modules were not found: _bz2 - not sure what i am doing wrong now.
[07:48:38] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[07:48:41] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[07:51:11] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[07:51:38] <dba> SnoopJ, bjs, Sealth_ and all who were interested the meaning of - Deep Python coding (not Python automation scripting) - in a job posting. here is the response: We are not seeking those that mostly use Python to do script automation. We are looking for engineering that use Python to write complete application programs that have all basic components (i.e. input, compute, output). Deep is referring to high skill or intensive applied
[07:51:38] <dba> professional experience coding with Python.
[07:52:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:53:43] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[07:54:04] *** Joins: mickey (~user@user/mickey)
[07:54:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[07:54:23] *** Joins: wyclif (~wyclif@user/wyclif)
[07:55:18] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[07:56:51] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[07:57:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[07:57:28] *** Joins: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:381f:ddcb:e8a4:3dda)
[07:58:00] <SnoopJ> dba, I wonder what dressing that word salad comes with
[07:59:38] *** Quits: ska (~ska@user/ska) (Ping timeout: 252 seconds)
[08:00:50] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:75f3:33ee:8249:cdb8) (Ping timeout: 260 seconds)
[08:01:02] *** Quits: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:381f:ddcb:e8a4:3dda) (Client Quit)
[08:01:57] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[08:02:21] *** Joins: dvx (~dvx@185.63.97.64)
[08:04:02] <pycurious> export CFLAGS="-I/home/uname/bzip2/include" && export LDFLAGS="-L/home/uname/bzip2/lib" where /home/uname/bzip2 is the PREFIX of make install from bzip. Python 3.8 wont detect it.
[08:04:11] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[08:04:43] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[08:07:20] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[08:07:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:08:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[08:08:28] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[08:08:42] *** Joins: wyclif (~wyclif@user/wyclif)
[08:09:05] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:10:06] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[08:11:16] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:11:44] <elias117> ok I think I'm done
[08:11:53] <elias117> I hope I get this job
[08:12:22] *** Joins: ska (~ska@user/ska)
[08:13:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:13:40] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[08:14:07] <stealth_> dba its rare but nice to see they actually replied back
[08:14:13] *** Joins: wyclif (~wyclif@user/wyclif)
[08:14:52] <stealth_> elias117, don't put all your eggs in 1 basket
[08:15:51] <dba> SnoopJ, likewise here :)
[08:16:08] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[08:16:25] <dba> stealth_, I guess they are badly in short of manpower
[08:16:53] *** Quits: LiftLeft (~LiftLeft@172.83.47.118) (Ping timeout: 264 seconds)
[08:17:26] <stealth_> dba, apply and see what comes of it
[08:17:39] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:17:50] <dba> lol stealth_ I am no engineer
[08:18:53] <stealth_> dba, weren't you wanting to apply for that job?
[08:19:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[08:19:41] *** Joins: wyclif (~wyclif@user/wyclif)
[08:20:28] <dba> stealth_, yes but as you saw after few discussion back and forth they are looking for an engineer
[08:22:20] <stealth_> dba engineer is a fancy word, don't you know how to code in python? input/ouput = file/socket
[08:24:05] <dba> my understanding an engineer is a person who spend 4 years in university studying math, computer science and all technical and theoretical stuff
[08:25:22] <KirkMcDonald> dba: "Software engineer" is just a job title, that implies no specific qualifications.
[08:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:25:38] <stealth_> unless they specifically ask for those qualifications, most of the best developers never went to collage, they have hands on experience.
[08:26:47] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) ()
[08:27:02] <energizer> dba: people have different views on what "software engineer" means
[08:27:28] *** Joins: fikran (~fikran@user/fikran)
[08:29:01] <dba> KirkMcDonald:, energizer, stealth_ so how do I become a "Software Engineering" without a software engineering degree?
[08:29:43] *** Joins: stranac (~stranac@195.29.239.126)
[08:30:01] *** Quits: emerent (~quassel@p200300cd5748551fba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:30:07] <stealth_> dba, 1. you must actually be good at it and 2. you should have something to show your potential employers
[08:30:09] <energizer> dba: you can decide if you want to call yourself that
[08:30:59] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[08:31:10] *** Joins: flokuehn (~flokuehn@i577BC640.versanet.de)
[08:31:20] <stealth_> dba, location matters for the most part and having connection (knowing ppl) matters as well
[08:31:36] <dba> stealth_, becoming good at what/?, do you mean coding?
[08:31:50] *** Joins: emerent (~quassel@p200300cd5748551fba27ebfffed28a59.dip0.t-ipconnect.de)
[08:32:03] <stealth_> dba, ya, why would someone hire you if you can't code? they will fire you the next day.
[08:32:10] <stealth_> business don't want to waste $
[08:35:16] *** Joins: humberto1 (~humbertow@fixed-189-203-117-57.totalplay.net)
[08:38:00] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Read error: Connection reset by peer)
[08:38:05] *** Joins: ExpiredKebab_ (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[08:38:13] *** Quits: ExpiredKebab_ (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Client Quit)
[08:39:05] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 264 seconds)
[08:39:25] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:40:58] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Remote host closed the connection)
[08:42:32] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:f459:d6f:b214:d669) (Read error: Connection reset by peer)
[08:42:57] <stealth_> dba if nothing else if you are young you can start there as an intern!
[08:43:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:46:32] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:46:33] <dba> Thank you stealth_ for your feedbacks and comments, I think I still have a lot to learn
[08:47:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[08:52:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9109:bf6f:fcac:be27)
[08:55:41] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[08:56:39] *** Quits: baltazar (~baltazar@84-236-99-193.pool.digikabel.hu) (Quit: leaving)
[08:56:39] *** Quits: baltazaar (~baltazar@84-236-99-193.pool.digikabel.hu) (Quit: leaving)
[08:56:50] <KirkMcDonald> There isn't really such a thing as a "software engineering degree."
[08:56:56] *** Joins: baltazar (~baltazar@84-236-99-193.pool.digikabel.hu)
[08:59:37] <PamiPetteri> https://clairlair.xyz/~pamipetteri/programming/weird_algorithm.py
[09:01:09] <PamiPetteri> KirkMcDonald: I studied the BBA in Business IT degree, and graduated, but I was an awful programmer. I have now learned to program better. I am almost 41 years of age. I studied and graduated from the BBA program 20 years ago. Started in 2000, graduated in 2006.
[09:02:17] *** Joins: iflema_ (~ian@user/iflema)
[09:02:53] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 252 seconds)
[09:03:21] <stealth_> PamiPetteri, whats your question with that link?
[09:04:32] *** Joins: humbertowoody (~humbertow@187.202.213.176)
[09:05:34] *** Quits: humberto1 (~humbertow@fixed-189-203-117-57.totalplay.net) (Ping timeout: 252 seconds)
[09:06:42] *** Joins: fdan (~fdan@103.215.168.1)
[09:07:08] <fdan> hi any other ways to do this through append or insert
[09:07:09] <fdan> https://dpaste.org/ihrA
[09:07:43] <fdan> https://dpaste.org/qEOD
[09:08:11] <stealth_> PamiPetteri, also you should use a "linter" while coding, you can find a plugin for the text editor you are using, it will point out silly mistakes and good formatting patterns
[09:09:18] *** Joins: upsala (~zcb@185.213.155.160)
[09:14:20] <stealth_> fdan, something like `print(sorted(zip(s, indices)))`
[09:15:58] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2001) (Quit: Bye)
[09:18:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:19:03] <Repiphany> [s[i] for i in indices]
[09:20:57] <fdan> Repiphany it prints ['a', 'c', 'b', 'd', 'e', 'g', 'f', 'h']
[09:21:23] <Repiphany> I don't get what you're trying to do
[09:21:28] <stealth_> fdan, do `s` and `indices` suppose to have different `len` ?
[09:21:29] <Repiphany> You have two values of s
[09:22:01] <fdan> stealth_ no
[09:22:14] <stealth_> fdan, well they do
[09:22:52] <Repiphany> What I wrote does the same thing as your for loop
[09:23:35] <fdan> Repiphany https://dpaste.org/8y64
[09:24:02] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[09:24:08] *** Quits: eniac__ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[09:24:23] <stealth_> fdan, you want to sort it by 0, 1, 2, ?
[09:24:30] <fdan> yes
[09:25:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:26:09] <stealth_> fdan, then print(sorted(dict(zip(indices, s)).items()))`
[09:26:51] <fdan> is it possible without zip
[09:27:15] <stealth_> of course
[09:27:32] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:28:31] <Repiphany> sorted(s, key = lambda x : indices[s.index(x)])
[09:28:48] <Repiphany> Ok, oops, I was doing something different
[09:28:51] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[09:29:03] <stealth_> Repiphany, i liked your previous example better..
[09:29:29] <stealth_> you just have to `[(i, s[i])..` then use sort on the list
[09:29:56] <fdan> ['l', 't', 'c', 'o', 'd', 'e', 'e', 'e']
[09:30:09] <fdan> it prints me this  for the string leetcode
[09:30:33] <stealth_> fdan, why can't you use zip again?
[09:30:51] <fdan> nothing specific, i thought  to do without using builtins
[09:31:09] <Repiphany> You still haven't explained what the problem you're trying to solve is (I'm too dumb to get it from your weird example)
[09:31:48] <stealth_> fdan, sorted is buildin as well, none the less you should code this yourself, at least you know how its done now right
[09:32:02] *** Quits: humbertowoody (~humbertow@187.202.213.176) (Ping timeout: 252 seconds)
[09:33:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[09:33:03] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[09:33:50] *** Joins: brabrax (~brabrax@user/brabrax)
[09:33:55] *** Joins: califax (~califax@user/califx)
[09:35:20] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[09:35:20] *** Quits: califax (~califax@user/califx) (Client Quit)
[09:36:09] *** Joins: brabrax (~brabrax@user/brabrax)
[09:36:09] <fdan> sure
[09:36:18] *** Joins: califax (~califax@user/califx)
[09:38:20] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.1 Beta Build (2021/09/22 UTC) 64 Bit)
[09:38:37] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:39:57] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[09:39:58] *** Quits: califax (~califax@user/califx) (Client Quit)
[09:41:28] *** Joins: rememberYou (~someone@user/rememberyou)
[09:41:32] *** Joins: brabrax (~brabrax@user/brabrax)
[09:41:36] *** Joins: califax (~califax@user/califx)
[09:41:46] *** Quits: brabrax (~brabrax@user/brabrax) (Remote host closed the connection)
[09:41:46] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[09:42:19] *** Joins: brabrax (~brabrax@user/brabrax)
[09:42:24] *** Joins: califax (~califax@user/califx)
[09:45:38] *** Joins: besnn (~besnn@user/besnn)
[09:46:29] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:09] *** Joins: seednode (~seednode@user/seednode)
[09:48:20] *** Joins: kosh (~kosh@user/kosh)
[09:50:44] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[09:57:07] <ksynwa> Is it possible to define multiple packages in one setup.py file?
[09:57:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:57:21] <ksynwa> I am trying to find some documentation on how to do it but can't.
[09:57:31] <ksynwa> Or maybe a reference setup.py file.
[10:00:03] <stealth_> ksynwa, are these your library or you thinking of including others library?
[10:00:58] <ksynwa> For my library. I have a server and a CLI to interact with it. I want to put server and CLI in the same git repo.
[10:01:16] <ksynwa> I am looking at certbot repo and they have different setup.py files for different packages. Maybe I can do that.
[10:02:56] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[10:03:36] <stealth_> ksynwa, hmm... normally you have 1 package and whatever library you require use `install_requires = ['one', 'two']` to intall those as well
[10:03:37] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 265 seconds)
[10:03:50] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:04:07] <BrenBarn> you want server and CLI in the same repo, but as two separate packages that would be installed separately?
[10:04:29] <stealth_> ksynwa, why not just have multiple sub-directories within the single package
[10:04:48] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[10:04:48] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:02] <ksynwa> If I do that, can I install (for example) the CLI separately if I want to?
[10:05:15] <BrenBarn> yeah, if you don't want them to be installed separately, just make them subpackages/modules of an enclosing package, and if you do want them installed separately, use two different setup.py
[10:05:19] <ksynwa> BrenBarn: yes... lol
[10:05:35] <ksynwa> Thanks a lot
[10:05:35] *** Joins: brabrax (~brabrax@user/brabrax)
[10:05:38] *** Joins: califax (~califax@user/califx)
[10:05:40] <BrenBarn> why do you want one setup.py if you want them to be installed separately?
[10:06:01] <BrenBarn> I guess there are these install options that you could use, but I don't get why you'd want to create that complexity
[10:06:03] <ksynwa> Only if that could be done
[10:06:09] <ksynwa> Not really compulsory
[10:06:26] <stealth_> packaging can normally be a pain, so go with 1 that actually works :p
[10:07:29] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:09:00] <ksynwa> Makes sense. Thanks for the help.
[10:09:02] *** Joins: gusto (~Augustus@109.255.100.54)
[10:09:08] <ksynwa> I have created two setup.py files and it's working fine.
[10:09:40] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2001)
[10:11:02] <stealth_> ksynwa, you are manually installing this?
[10:11:36] *** Quits: Guddu (~Guddu@190.84.88.92) (Quit: Leaving)
[10:11:56] <ksynwa> stealth_: Yeah
[10:12:34] <stealth_> ksynwa, so they are 2 separate packages then
[10:14:05] *** Joins: stranac (~stranac@195.29.239.126)
[10:14:10] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[10:15:40] *** Joins: pycode (~pycode@2001:b07:5d28:551:3d1b:9448:afed:9721)
[10:17:06] *** Parts: Viiru (viiru@debian/viiru) (ERC (IRC client for Emacs 27.1))
[10:17:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06) (Quit: Leaving)
[10:22:45] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[10:24:10] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[10:25:34] *** Joins: DerpGusta (~quassel@user/derpgusta)
[10:27:37] *** Joins: palasso (~palasso@user/palasso)
[10:28:50] *** Joins: chele (~chele@user/chele)
[10:30:25] *** iflema_ is now known as iflema
[10:32:58] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[10:33:25] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:34:07] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2001) (Ping timeout: 252 seconds)
[10:34:30] *** Joins: rendar (~rendar@user/rendar)
[10:35:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:35:35] *** Joins: oldguy (~oldguy@user/oldguy)
[10:36:48] *** Joins: fikran (~fikran@user/fikran)
[10:37:08] *** Joins: djapo (~archangel@user/djapo)
[10:37:34] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[10:39:56] *** Joins: P1ro (~quassel@user/p1ro)
[10:40:27] *** Quits: oldguy (~oldguy@user/oldguy) (Quit: WeeChat 2.8)
[10:40:57] *** Joins: node1 (~node1@user/node1)
[10:46:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[10:46:33] *** Joins: wyclif (~wyclif@user/wyclif)
[10:49:49] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:51:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:52:02] *** Joins: wyclif (~wyclif@user/wyclif)
[10:52:30] *** Joins: goldfish (~goldfish@user/goldfish)
[10:56:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[10:57:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[10:57:31] *** Joins: wyclif (~wyclif@user/wyclif)
[10:59:10] *** dcaro_away is now known as dcaro
[11:02:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:03:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:03:34] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[11:04:46] *** Joins: Mija (~Mija@user/mija)
[11:04:59] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[11:05:00] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:05:10] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:05:32] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:06:24] *** Joins: Mija (~Mija@user/mija)
[11:06:48] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:08:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:08:12] *** Joins: Mija (~Mija@user/mija)
[11:08:14] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[11:08:33] *** Joins: wyclif (~wyclif@user/wyclif)
[11:08:37] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[11:08:37] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:09:17] <purplex> are these both same: https://bpa.st/K3RA i get same output, i still need to know if both are rounding or something else
[11:09:38] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:10:07] *** Joins: Mija (~Mija@user/mija)
[11:10:25] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:11:03] <stealth_> purplex, you mean `round(, 2)` and `.2f` ya
[11:11:50] *** Joins: Mija (~Mija@user/mija)
[11:12:14] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:13:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:13:45] *** Joins: Mija (~Mija@user/mija)
[11:14:02] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:14:03] *** Joins: wyclif (~wyclif@user/wyclif)
[11:14:36] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:14:37] <purplex> caused a confusion when i saw use of "%.2f" % round(3.146, 2)
[11:14:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:14:40] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:15:27] *** Joins: Mija (~Mija@user/mija)
[11:15:35] <stealth_> ya that would be confusing, so they are rounding it twice!
[11:15:51] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:16:48] *** Joins: oldguy (~oldguy@user/oldguy)
[11:17:16] *** Joins: Mija (~Mija@user/mija)
[11:17:29] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[11:17:39] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:18:28] *** Joins: frost (~frost@59.71.244.36)
[11:18:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:19:15] *** Joins: Mija (~Mija@user/mija)
[11:19:28] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:19:33] *** Joins: wyclif (~wyclif@user/wyclif)
[11:20:53] *** Joins: Mija (~Mija@user/mija)
[11:21:17] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:21:26] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[11:22:01] *** Joins: plastico (~plastico@neomutt/plastico)
[11:22:42] *** Joins: Mija (~Mija@user/mija)
[11:23:05] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:24:30] *** Joins: Mija (~Mija@user/mija)
[11:24:54] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:26:19] *** Joins: Mija (~Mija@user/mija)
[11:26:42] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:26:50] *** Joins: shad (~shad@user/shad)
[11:26:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:27:52] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:28:11] *** Joins: Mija (~Mija@user/mija)
[11:28:26] *** Joins: wyclif (~wyclif@user/wyclif)
[11:28:30] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:29:13] *** Joins: minetester (~mineteste@206.62.190.3)
[11:29:19] *** Joins: brelod (~me@90.244.150.142)
[11:29:50] *** Joins: Mija (~Mija@user/mija)
[11:29:52] <debnet> Mornin'.
[11:30:19] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:31:43] *** Joins: Mija (~Mija@user/mija)
[11:31:51] *** Joins: jpic_ (~jpic@82.142.3.250)
[11:32:08] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:33:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:33:40] *** Joins: Mija (~Mija@user/mija)
[11:33:56] *** Joins: wyclif (~wyclif@user/wyclif)
[11:34:34] *** Quits: grooverman (~grooverma@179.99.120.247) (Ping timeout: 252 seconds)
[11:34:35] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:35:19] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:12] *** Joins: Mija (~Mija@user/mija)
[11:36:23] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:36:59] *** Joins: manti7 (~manti7@176.10.104.94)
[11:37:51] *** Joins: Mija (~Mija@user/mija)
[11:38:12] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:38:12] *** Quits: minetester (~mineteste@206.62.190.3) (Quit: Leaving)
[11:38:36] *** Joins: amllado (~amllado@45.156.42.81)
[11:38:42] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:38:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:39:11] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:39:27] *** Joins: wyclif (~wyclif@user/wyclif)
[11:39:42] *** Joins: Mija (~Mija@user/mija)
[11:40:00] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:41:21] *** Quits: km (~km@user/km) (Quit: Leaving)
[11:41:30] *** Joins: Mija (~Mija@user/mija)
[11:41:37] *** Joins: km (~km@user/km)
[11:41:48] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:41:52] *** Joins: ConstantDesc (~textual@195.224.201.178)
[11:43:19] *** Joins: Mija (~Mija@user/mija)
[11:43:31] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[11:43:34] *** Joins: y1n (~y1n@178.165.161.29.wireless.dyn.drei.com)
[11:43:37] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:44:09] *** Quits: km (~km@user/km) (Client Quit)
[11:44:26] *** Joins: control (~v1@user/control)
[11:44:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:44:56] *** Joins: wyclif (~wyclif@user/wyclif)
[11:45:05] *** Joins: Mija (~Mija@user/mija)
[11:45:55] *** Quits: Mija (~Mija@user/mija) (Client Quit)
[11:46:14] *** Quits: node1 (~node1@user/node1) (Ping timeout: 260 seconds)
[11:48:03] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[11:48:41] *** Quits: jpic (~jpic@82.142.3.250) (Remote host closed the connection)
[11:48:41] *** Quits: jpic_ (~jpic@82.142.3.250) (Remote host closed the connection)
[11:50:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:50:28] *** Joins: wyclif (~wyclif@user/wyclif)
[11:50:38] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[11:50:43] <zln> morning
[11:51:22] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 260 seconds)
[11:51:24] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[11:52:22] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[11:52:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:52:46] *** Joins: jpic (~jpic@82.142.3.250)
[11:53:19] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[11:54:15] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[11:55:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:55:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[11:55:58] *** Joins: wyclif (~wyclif@user/wyclif)
[11:57:06] <DnzAtWrk> is there some kind of numpy-like wrapper in python which uses a file database?
[11:57:10] <DnzAtWrk> running out of memory :P
[11:57:22] *** mozgalom is now known as bomb-on
[11:59:05] *** Quits: bomb-on (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[12:00:20] <stealth_> DnzAtWrk, ?
[12:00:27] *** Quits: oldguy (~oldguy@user/oldguy) (Quit: WeeChat 2.8)
[12:00:32] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:00:37] <zln> There should be a 'Slap' besides 'Donate' on all projects so one could slap people who documents poorly
[12:00:48] *** Quits: c10l (~c10l@user/c10l) (Read error: Connection reset by peer)
[12:00:50] <\\> lol
[12:00:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:01:29] *** Joins: wyclif (~wyclif@user/wyclif)
[12:02:17] *** Quits: NealRame (~a@202-65-87-207.ip4.superloop.com) (Remote host closed the connection)
[12:02:28] <DnzAtWrk> what I said
[12:02:39] <DnzAtWrk> if there is a wrapper for numpy able to store large arrays in files
[12:03:08] <\\> on-disk instead of in-memory?
[12:04:13] <zln> numpy.savetxt?
[12:04:33] <zln> numpy.loadtxt
[12:04:43] <zln> numpy.loadtxt(filename)
[12:04:52] <zln> saves and loads array
[12:05:59] *** Joins: c10l (~c10l@user/c10l)
[12:06:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:07:00] *** Joins: wyclif (~wyclif@user/wyclif)
[12:07:16] <zln> or you could use numpy.save to save in binary .npy format
[12:07:50] <zln> numpy.savez_compressed to save several arrays into a compressed .npz archive
[12:07:58] <zln> DnzAtWrk: something like that?
[12:08:25] <\\> I once was in a project that used numpy.save as a configuration/state storage method
[12:08:55] <zln> where is the punch line?
[12:08:58] <zln> :p
[12:09:12] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[12:09:12] <DnzAtWrk> no
[12:09:28] <DnzAtWrk> I want it to do it automatically
[12:09:28] <\\> That project had absolutely no calculations done using numpy, just that save/load feature
[12:09:40] <DnzAtWrk> like tables in r
[12:09:48] <DnzAtWrk> ah whatever, I'll redesign the problem :P
[12:09:48] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2001)
[12:09:53] <DnzAtWrk> program*
[12:10:04] <DnzAtWrk> 16 GB of RAM isn't enough
[12:10:08] <\\> On-disk processing?
[12:10:31] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[12:10:40] <DnzAtWrk> 32 GB*
[12:10:48] <DnzAtWrk> strange, I thought I had 64
[12:10:52] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 252 seconds)
[12:11:50] <jinsun> maybe have a look at dask https://docs.dask.org/en/latest/array.html, I haven't used but they claim you can have arrays larger than memory if you use that
[12:12:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:12:32] *** Joins: wyclif (~wyclif@user/wyclif)
[12:12:48] <DnzAtWrk> thank you, I will check it out
[12:13:43] <zln> DnzAtWrk: could numpy.lib.format.open_memmap be something of use? opens file as memory-mapped array it seems. Donno if it does what you seek
[12:14:08] <DnzAtWrk> interesting
[12:14:19] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[12:14:21] <zln> https://numpy.org/doc/stable/reference/generated/numpy.memmap.html#numpy.memmap
[12:14:29] *** mozgalom is now known as bomb-on
[12:14:34] <zln> https://numpy.org/doc/stable/reference/generated/numpy.lib.format.open_memmap.html#numpy.lib.format.open_memmap
[12:14:48] *** Joins: wodim (~zzz@2605:6400:30:f3cc:fa83:71b3:af31:d023)
[12:15:09] <wodim> if i call a generator function that never yields (say because the yield is in an if and execution never gets there) what do i get, an empty list?
[12:17:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:18:01] *** Joins: wyclif (~wyclif@user/wyclif)
[12:18:06] <stealth_> don't get get blocked till the `if` task is done?
[12:18:10] <jinsun> you get a generator still which will just raise stopiteration on the first next, if you call list() on that you get empty list
[12:18:27] <wodim> jinsun, yes that is what i meant, i was casting it to a list. thanks
[12:18:40] <wodim> well more like not casting it
[12:19:19] <wodim> i was doing something like "if (x := my_generator())" and wondering why execution was getting into that if when the generator never yielded.
[12:19:34] <wodim> had to wrap the call in list()
[12:19:45] *** Joins: ConstantDesc (~textual@195.224.201.178)
[12:19:53] <stealth_> or next()
[12:20:11] <stealth_> depends on the usecase
[12:22:10] *** Joins: node1 (~node1@user/node1)
[12:22:15] <jinsun> yes generators are always truthy, if you want to check generator has no elements you will have to iterate over it atleast once, using next will be better to make sure you iterate only once
[12:22:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:23:26] <jinsun> list() will iterate till it gets stopiteration, which might be never, then you just go in infinite loop till you run out of memory
[12:23:33] *** Joins: wyclif (~wyclif@user/wyclif)
[12:23:41] <wodim> in this case that is not possible
[12:25:12] *** Joins: sniperwolf (~sniperwol@54.37.130.41)
[12:25:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:26:27] <jinsun> okay but then seems weird to have the if condition if you know it will be false
[12:26:56] <wodim> not always
[12:27:06] <wodim> im saying i know the generator will never get into an infinite loop
[12:27:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:27:39] *** Quits: flokuehn (~flokuehn@i577BC640.versanet.de) (Ping timeout: 265 seconds)
[12:28:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:29:03] *** Joins: wyclif (~wyclif@user/wyclif)
[12:29:06] <stealth_> you can `return None` to exit out of the generator if some condition fails so `x := next(gen())` will be `None`
[12:29:14] *** Joins: flokuehn (~flokuehn@i5E86B3DF.versanet.de)
[12:30:02] <Repiphany> Returning None wouldn't make next be None
[12:30:26] <zln> https://github.com/asciimoo/drawille anyone who have used this? I want to convert images to unicode braille chars but don't really understand how to create shapes with this :D
[12:30:26] <stealth_> am i overthing it?
[12:30:36] <Repiphany> The return value is attached to the StopIteration (as I learned here yesterday)
[12:31:43] <Repiphany> https://bpa.st/YDNQ
[12:32:26] <zln> return StopIteration?
[12:32:31] <zln> in else
[12:32:55] <zln> raise StopIteration in else I mean
[12:32:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[12:33:25] <Repiphany> The point of returning in a generator is to stop iteration
[12:33:55] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:33:56] *** Joins: jim (~jim@about/linux/staff/jim)
[12:33:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:34:34] *** Joins: wyclif (~wyclif@user/wyclif)
[12:35:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:36:08] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 246 seconds)
[12:36:48] <jinsun> to get None when there are no elements with next, you have to do `next(gen(), None)`
[12:38:32] <stealth_> o, i was thinking of `yield None` then you `if (x := next(gen)) is not None: https://bpa.st/7PIQ
[12:39:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:40:06] *** Joins: wyclif (~wyclif@user/wyclif)
[12:40:15] <stealth_> another trick is to call 1 function check if statement and return 2 funtion, 1 for if true and another for if false
[12:40:57] <stealth_> this way you can run two different type of generator depending on the use-case
[12:41:23] <bjs> zln: you can't `raise StopIteration` inside generators anymore, the proper way is to `return`
[12:42:02] <zln> bjs: thanks for heads-up :) I always learn something useful from you :D
[12:42:37] <bjs> wodim: the way generator functions work is that if they contain a "yield" expression inside them, Python turns the function into a generator function.  If executing the generator never reaches a yield, then the whole function will execute until it returns on the first next and then raise StopIteration (just like any other empty iterator)
[12:43:19] <bjs> e.g. `def f(): if False: yield` then `f()` is an empty iterator which you can loop over will get no values (like an empty list)
[12:43:39] <lericson> you can't raise StopIteration?
[12:44:31] <zln> it seems fair to not raise StopIteration cuz StopIteration is raised automatically when no yields left
[12:44:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[12:44:45] <zln> so no point when it's done on-the-fly
[12:44:54] <bjs> lericson: not inside a generator, you'll get a RuntimeError if you do
[12:45:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:45:35] *** Joins: wyclif (~wyclif@user/wyclif)
[12:45:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[12:45:51] *** Joins: oldguy (~oldguy@user/oldguy)
[12:46:07] *** Joins: fikran (~fikran@user/fikran)
[12:46:27] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[12:46:49] *** Joins: spithash (~spithash@user/spithash)
[12:48:00] <bjs> lericson: see https://www.python.org/dev/peps/pep-0479/
[12:48:04] *** Quits: lucifero (~satan@user/belphegor666) (Read error: Connection reset by peer)
[12:48:25] <lericson> oh
[12:48:27] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:48:41] <lericson> '14
[12:48:42] <lericson> righto..
[12:48:55] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:49:31] *** Joins: Atque (~Atque@user/atque)
[12:50:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:51:06] *** Joins: wyclif (~wyclif@user/wyclif)
[12:51:12] *** Joins: belphegor666 (~satan@user/belphegor666)
[12:51:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:53:05] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[12:53:34] <bjs> lericson: oh.. 2014... i thought it was like last year or something :P
[12:53:45] <bjs> oh dear
[12:55:04] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[12:56:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[12:56:38] *** Joins: wyclif (~wyclif@user/wyclif)
[12:58:00] *** Joins: Barones (~Barones@177.133.27.78)
[12:58:54] *** Quits: mort (~mort@188.166.114.29) (Quit: The Lounge - https://thelounge.chat)
[12:59:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:59:44] *** Quits: sniperwolf (~sniperwol@54.37.130.41) (Ping timeout: 256 seconds)
[13:00:07] *** Joins: brym (~brym@137.220.103.34)
[13:00:29] *** Quits: Pandadub (~Barones@186.213.251.226) (Ping timeout: 252 seconds)
[13:01:06] <brym> morning all. how can i set a custom http 'server' header instead of the deafult? i think i've just gotten turned around a bit in the docs and numerous online examples.
[13:01:09] *** Joins: sniperwolf (~sniperwol@54.37.130.41)
[13:01:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:02:07] *** Joins: wyclif (~wyclif@user/wyclif)
[13:03:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:04:52] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[13:05:58] *** Joins: rsx (~dummy@ppp-188-174-134-162.dynamic.mnet-online.de)
[13:06:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:07:00] *** Joins: thiras (~thiras@user/thiras)
[13:07:37] *** Joins: wyclif (~wyclif@user/wyclif)
[13:07:59] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:f1e5:9d26:3b71:29c5) (Ping timeout: 246 seconds)
[13:08:16] *** Joins: Naan (~Naan@user/naan)
[13:08:44] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[13:10:56] *** Quits: y1n (~y1n@178.165.161.29.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[13:12:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:13:08] *** Joins: wyclif (~wyclif@user/wyclif)
[13:14:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:14:17] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:15:29] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:16:11] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:18:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:18:39] *** Joins: wyclif (~wyclif@user/wyclif)
[13:18:58] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:20:32] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[13:21:01] *** Joins: srhm (~srhm@user/srhm)
[13:21:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:22:27] <llanhmod> brym: morning!
[13:22:35] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-bda1-bc58-a701-afae.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[13:23:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:23:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:24:06] *** Joins: y1n (~y1n@91.141.45.199.wireless.dyn.drei.com)
[13:24:11] *** Joins: wyclif (~wyclif@user/wyclif)
[13:28:09] *** Quits: oldguy (~oldguy@user/oldguy) (Quit: WeeChat 2.8)
[13:29:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:29:06] *** Joins: stevea (~stevea@scallison.plus.com)
[13:29:15] <rendar> why with BaseException i can catch KeyboardInterrupt (Ctrl+C) and with normal Exception class i can't? I usually want to catch Ctrl+C to gracefully exit my CUI program, right?
[13:29:40] *** Joins: wyclif (~wyclif@user/wyclif)
[13:29:43] <Repiphany> Catch KeyboardInterrupt explicitly
[13:29:49] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[13:29:54] <lericson> because KeyboardInterrupt is a direct descendant of BaseException, not Exception
[13:30:07] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:fd21:abca:92fe:9c8c) (Ping timeout: 252 seconds)
[13:30:18] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:4cc3:2606:1608:5ce0)
[13:30:25] <lericson> and this in turn because when programmers write except Exception as e: they generally don't want to prevent the user from interrupting the program
[13:32:48] <rendar> lericson, yes i saw that, but i wish to get why
[13:33:23] <rendar> ok, makes sense
[13:34:16] <lericson> https://python.github.io/peps/pep-0352/#exception-hierarchy-changes
[13:34:22] <lericson> i think this explains the situation well
[13:34:33] <lericson> this was when BaseException was introduced
[13:34:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:34:51] *** Quits: stevea (~stevea@scallison.plus.com) (Changing host)
[13:34:51] *** Joins: stevea (~stevea@user/stevea)
[13:35:05] <Masklin_Gurder> Element existence checks using sets is fast right?
[13:35:10] *** Joins: wyclif (~wyclif@user/wyclif)
[13:35:15] <lericson> Masklin_Gurder: yes
[13:35:23] <lericson> hash table fast
[13:35:53] <rendar> should i use annotations even with __ methods? e.g. `def __init__(self) -> None:` ?
[13:36:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:36:15] *** Quits: stevea (~stevea@user/stevea) (Quit: bye.)
[13:36:16] *** Joins: ravan (~ravan@user/ravan)
[13:36:40] *** Joins: stevea (~stevea@user/stevea)
[13:37:09] <lericson> why would you, rendar?
[13:37:20] <rendar> lericson, dunno, i found it in some code online
[13:38:02] <bjs> rendar: yes you should, if using mypy
[13:38:03] *** Joins: oldguy (~oldguy@user/oldguy)
[13:38:12] <brym> llanhmod: yep?
[13:38:24] <jinsun_> mypy strict mode has a limitation and it requires the None even for init if you don't take any other parameters than self
[13:39:29] <rendar> bjs, i use cpython
[13:39:42] <lericson> jinsun_: you mean to say it wants to see /some/ annotations, for either retval or args?
[13:39:50] <bjs> rendar: Python doesn't even look at the annotations,  usually people run a typechecker like mypy or pytype
[13:40:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:40:11] <bjs> rendar: these typecheckers actually do something with the annotations, so if you want to use them you need to add annotations (even to __init__ and other __ methods)
[13:40:24] <rendar> bjs, yes i know, but is that a good practice adding annotations even into __ methods?
[13:40:32] <lericson> i would say no
[13:40:39] <brym> anyone know how to change the default http "server" header?
[13:40:39] <bjs> rendar: like I said the overwhelming use-case of annotations is to use mypy or pytype and there you *need* to
[13:40:42] *** Joins: wyclif (~wyclif@user/wyclif)
[13:40:46] <rendar> ok
[13:40:59] <lericson> bjs: doesn't pytype infer the types?
[13:41:00] <bjs> because if you don't annotate your __ methods mypy won't check them,  and that is main use of these annotations
[13:41:02] <lericson> i thought that was the whole point
[13:41:05] <jinsun_> lericson: it wants to see annotations for both retval and args, but for init the retval will always be none so it can be skipped
[13:41:15] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving...)
[13:41:18] <bjs> lericson: yes so does mypy
[13:41:46] <rendar> is that possible that doing e = task.exception() re-raise the exception?
[13:42:03] *** Joins: ravan (~ravan@user/ravan)
[13:42:10] <jinsun_> lericson: but strict mode requires that None annotation for init too
[13:42:11] <lericson> bjs: then i don't understand the use of annotating __init__'s return value -- everybody knows what it should and will be
[13:42:29] <bjs> rendar: no, future.exception() -returns- the exception, it doesn't re-raise it
[13:42:36] <bjs> rendar: it might raise its *own* exception (e.g. if the task was cancelled)
[13:42:46] <elias117> can I get some opinion on how this looks? before i submit it this morning https://gist.github.com/elias117/35e87cdfe02c749a3bab67129b924018
[13:43:00] <bjs> lericson: it's especially important for mypy,  maybe less so for pytype?  it depends whether pytype has __init__ special cased
[13:43:05] <rendar> damn, how is that possible that running a coroutine which does a x=1/0, i get the exception raised into  main() ? :(
[13:43:08] <bjs> I forget if it does, it probably does
[13:43:16] <bjs> rendar: ... if you show me the code I can tell you :)
[13:43:20] <rendar> :) ok
[13:43:36] <rendar> https://bpa.st/O7GQ
[13:43:59] <lericson> bjs: i'm still not on the python typing train fully, i use them as documentation more than anything -- telling the programmer that I expect such-and-such for this argument
[13:44:14] <jinsun_> lericson: if there are no annotations at all mypy thinks it is dynamic, which strict mode doesn't like https://mypy.readthedocs.io/en/stable/dynamic_typing.html
[13:44:21] <lericson> bjs: for that reason it seems a bit of a waste to start cluttering up your code with obvious stuff like that, but maybe i'm not seeing the big picture
[13:44:36] <bjs> lericson: right but there are tools like mypy and pytype.  These use the annotations to (a) *decide* whether to check the function at all and to (b) make sure it does the right thing
[13:44:39] <elias117> dude im so worried about this job interview thing
[13:44:46] <lericson> elias117: valium
[13:45:08] <elias117> can you get valium over the counter?
[13:45:10] <lericson> bjs: i'm aware, but i would then say that the tools should support the programmer, not the other way around
[13:45:15] <lericson> elias117: highly doubt it
[13:45:25] <bjs> lericson: the tools are supporting the programmer
[13:45:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:45:44] <bjs> lericson: mypy is a gradual typing tool, it lets you 'gradually' add types to your program and mypy will only typecheck the parts of the code that are typechecked.
[13:45:50] <rendar> bjs, ?
[13:45:52] <bjs> If you have an __init__ with no annotations at all, mypy won't even check it
[13:45:57] <elias117> lericson: can you do a PR review for me before I submit this
[13:45:57] <lericson> i see
[13:46:12] *** Joins: wyclif (~wyclif@user/wyclif)
[13:46:15] <bjs> rendar: this is a lot of code, it's not quite the small example I was hoping for -- give me a minute to actually read it ;)
[13:46:16] <lericson> elias117: not really, have my own things to do -- which include debating the approach of progressive typing in python in #python
[13:46:31] <elias117> fair enough thanks for yesterday tho
[13:46:32] <lericson> bjs: aha so it wouldn't check it at all, i see
[13:46:41] <gitesh> Does functions have scope because they stay in object space?
[13:46:52] <bjs> gitesh: the scope is to do with variables, not objects
[13:46:56] <lericson> elias117: do some meditation
[13:47:02] <lericson> elias117: next best thing to drugs
[13:47:11] <elias117> like headspace?
[13:47:21] <bjs> lericson: pytype infers everything,  but it might not have all the magic methods special cased (I forget) so if you write `def __init__(self): return 42` it might simply infer __init__ returns int
[13:47:29] <lericson> elias117: i find using an app to medidate kind of ironic tbh
[13:47:31] <gitesh> bjs: function may have variable in function object
[13:47:54] <elias117> lericson: yeah it is ironic haha
[13:47:54] <brym> 3rd time's maybe the charm: can anyone point me to how I can set a custom http "server" header to replace the default?
[13:47:55] <bjs> gitesh: what do you mean "in"?
[13:48:28] <lericson> elias117: just sit in still, or lie down still, close your eyes, notice your breathing for a minute, notice your thoughts, return to the breathing -- for 10-15 minutes, observe yourself and your thoughts, let them slip away
[13:48:38] <lericson> but this is now heavily off-topic :p
[13:49:30] <bjs> lericson: rendar: https://bpa.st/OFMQ  for annotations
[13:49:40] <jinsun_> brym: you're taking about http.server from stdlib?
[13:49:52] <brym> yes
[13:49:57] <rendar> bjs, ok
[13:50:24] <rendar> bjs, my point was from __ method you usually return some very well known types
[13:50:35] <lericson> rendar: do you though
[13:50:41] <lericson> __init__ yes, but __getitem__ etc?
[13:50:47] <lericson> i guess there are quite a few
[13:50:48] <rendar> yes, that's true
[13:50:49] <bjs> rendar: I think it's the wait() that's re-raising your exception
[13:50:54] <bjs> rendar: surely the traceback tells you where it's coming from?
[13:50:56] <rendar> bjs, why?!
[13:51:04] *** Joins: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net)
[13:51:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:51:23] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:36] <rendar> https://bpa.st/2DEQ
[13:51:42] *** Joins: wyclif (~wyclif@user/wyclif)
[13:51:45] <bjs> rendar: i'm unsure why it would, I can't see anything else that would raise it
[13:51:52] <rendar> it seems its from future.result()
[13:51:59] *** Joins: ConstantDesc (~textual@195.224.201.178)
[13:51:59] <bjs> oh you call task.result()
[13:52:09] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:52:22] <bjs> rendar: yes .result() will re-raise the exception
[13:52:28] <rendar> right! that's it!
[13:52:31] <rendar> i didn't see it
[13:52:32] <bjs> rendar: see https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.result  "(or if the coroutine raised an exception, that exception is re-raised.)"
[13:52:38] <bjs> rendar: it was right there in the traceback ;P
[13:53:22] <rendar> bjs, should i assume result=None when a Task has an exception?
[13:53:37] <bjs> rendar: there is no result if the task has an exception
[13:53:40] <bjs> that's why result() doesn't return
[13:53:50] <rendar> uhm, yes
[13:54:53] <rendar> now, why in the hell asyncio.wait() doesn't raise asyncio.TimeoutError when its timeout parameter expires?! otherwise, you wouldn't know if a timeout is expired or not :(
[13:54:53] <bjs> rendar: (it doesn't want to confuse `return None` with raising an exception...)
[13:55:01] <rendar> bjs, right
[13:55:51] <bjs> rendar: https://docs.python.org/3/library/asyncio-task.html it says, that it simply has them returned as part of the "not finished yet" set
[13:56:03] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[13:56:06] <bjs> oops https://docs.python.org/3/library/asyncio-task.html#asyncio.wait
[13:56:29] <rendar> so i must assume that when len(done)==0, it timed out?
[13:56:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:56:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:57:09] <bjs> rendar: if you're using FIRST_COMPLETED, and done is empty, then yeah it reached the timeout
[13:57:14] *** Joins: wyclif (~wyclif@user/wyclif)
[13:57:25] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Remote host closed the connection)
[13:57:30] <bjs> if using ALL_COMPLETED then you can get a mix, and the ones that are not in `done` timedout (but are still running iirc!)
[13:58:00] *** Joins: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th)
[14:00:59] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[14:02:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:02:44] *** Joins: wyclif (~wyclif@user/wyclif)
[14:03:16] *** Joins: s33ker (~Guest23@cpe-31-15-146-122.cable.telemach.net)
[14:03:46] *** Quits: sniperwolf (~sniperwol@54.37.130.41) (Ping timeout: 256 seconds)
[14:04:41] <s33ker> if any((i == sct_img).all() for i in x_img_n):       sct_img is an array and x_img_n  is array of arrays how do i obtain index where sct_img==x_img_n for all ellements (just like the code i presented)
[14:05:02] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:05:33] <s33ker> i tried the whare function but i guess i dont use it correctly or is not appropriate in this case
[14:05:37] <s33ker> where*
[14:06:50] <s33ker> so if i have x = [[1,3,1],[3,3,2],[3, 2, 1]]  y = [3,3,2]  i want to know index of x where x==y
[14:07:08] <elias117> ok that was hard
[14:07:08] *** Joins: node1 (~node1@user/node1)
[14:07:12] <s33ker> in this case i must get 1
[14:07:23] <elias117> its hard just sitting alone with your thoughts lericson
[14:07:35] *** Quits: control (~v1@user/control) (Ping timeout: 252 seconds)
[14:07:58] <s33ker> can anyone help with this ?
[14:08:27] <elias117> I got laid off on Tuesday and I was pretty bummed out from it I couldnt sleep Tuesday night last night was better tho
[14:08:47] <elias117> i dont think I have the softskills necessary
[14:08:55] <elias117> people seem to have a low opinion of me
[14:09:19] <brym> well, appreciate all the help everyone...
[14:09:43] <brym> guess i'll just loo elsewhere
[14:09:46] <Repiphany> s33ker: np.nonzero((x == y).all(axis = 1))
[14:09:48] <brym> *look
[14:09:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:10:03] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:10:05] *** Parts: brym (~brym@137.220.103.34) ()
[14:10:11] <elias117> dude im a loser
[14:10:28] <elias117> ive been out of school for 3 years and I cant get anything stable
[14:10:40] <wodim> practice makes perfect
[14:11:21] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[14:11:24] <elias117> dude im scared about my future
[14:11:33] <rendar> can i prevent console to print "^C" when i press Ctrl+C?
[14:11:42] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:12:29] <s33ker> wow let me see if this works...looks elegant
[14:13:21] <s33ker> Rapiphany nope wont work AttributeError: 'bool' object has no attribute 'all'
[14:13:32] <Repiphany> Are you using numpy
[14:13:42] <s33ker> ye
[14:13:49] <Repiphany> np.asarray(x) and np.asarray(y)
[14:14:03] <s33ker> oooo damn
[14:14:05] <s33ker> idiot me sorry
[14:14:06] *** Joins: computeiro (~Wender@189.37.69.108)
[14:14:16] <s33ker> i am testing it on example and forgot to covert it to array
[14:14:27] <Repiphany> Or np.equal(x, y) will convert for you, I guess
[14:15:55] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 265 seconds)
[14:15:57] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:17:27] <rendar> bjs, do you think that - if i have a group of tasks and a timeout occurs - should i cancel the remaining tasks or send asyncio.TimeoutError to them?
[14:18:38] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[14:19:38] *** Quits: s33ker (~Guest23@cpe-31-15-146-122.cable.telemach.net) (Ping timeout: 256 seconds)
[14:21:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:22:17] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 264 seconds)
[14:22:35] *** Joins: vladoski (~vladoski@mail-uk-out.statpro.com)
[14:22:48] *** Quits: vladoski (~vladoski@mail-uk-out.statpro.com) (Quit: Leaving)
[14:23:05] *** Joins: vladoski (~vladoski@mail-uk-out.statpro.com)
[14:23:29] *** Joins: upsala (~zcb@185.213.155.160)
[14:23:58] <bjs> rendar: asyncio has wait_for that times a task out if it doesn't finish in time,  it sends a cancel
[14:24:03] *** Joins: ravan (~ravan@user/ravan)
[14:24:32] <rendar> i see
[14:25:20] <bjs> rendar: this is pretty much why cancellation exists
[14:25:31] *** Joins: DerpGusta (~quassel@user/derpgusta)
[14:25:54] <rendar> but if everything cancels who raises  asyncio.TimeoutError at the end of the day?
[14:25:54] *** Joins: xiongxin (~quassel@119.123.100.167)
[14:29:35] *** Quits: kib_ (~kib@user/kib) (Quit: WeeChat 3.2.1)
[14:30:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:19] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[14:34:28] *** Quits: pycode (~pycode@2001:b07:5d28:551:3d1b:9448:afed:9721) (Ping timeout: 252 seconds)
[14:34:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[14:37:18] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:37:21] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:37:33] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.2.1)
[14:38:00] *** Joins: shangxiao (~davids@124.187.230.212)
[14:39:24] *** Joins: Adoi (~Adoi@user/adoi)
[14:40:33] <bjs> rendar: look at wait_for for an example
[14:40:39] <rendar> ok
[14:41:10] <bjs> when it reaches a timeout, wait_for cancels the not-completed tasks and then raises TimeoutError
[14:41:10] *** Joins: wyclif (~wyclif@user/wyclif)
[14:41:14] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:41:25] *** Joins: kib (~kib@user/kib)
[14:42:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[14:44:19] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:44:26] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 265 seconds)
[14:46:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[14:46:29] *** Joins: wyclif (~wyclif@user/wyclif)
[14:46:53] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[14:47:09] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[14:48:05] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:51:00] *** Quits: kib (~kib@user/kib) (Read error: Connection reset by peer)
[14:51:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:51:12] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[14:51:42] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:51:59] *** Joins: wyclif (~wyclif@user/wyclif)
[14:52:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:52:20] *** Joins: ravan (~ravan@user/ravan)
[14:52:56] *** Quits: frostschutz (~frostschu@2a01:c23:7973:a600:fd87:7174:9e00:5cc6) (Remote host closed the connection)
[14:53:22] <rendar> calling task.cancel() on already completed/cancelled task takes no effect right?
[14:53:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[14:53:47] *** Joins: kib (~kib@user/kib)
[14:54:33] *** Leonarbro_ is now known as Leonarbro
[14:55:26] *** Joins: fikran (~fikran@user/fikran)
[14:55:56] *** Joins: slav0nic (slav0nic@python.su)
[14:56:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:56:51] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:57:30] *** Joins: wyclif (~wyclif@user/wyclif)
[14:58:45] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:59:32] *** Joins: akinode (~akinode@2a02:908:1394:cce0:74e5:9af0:8c06:4879)
[15:00:33] *** Joins: km (~km@user/km)
[15:00:43] *** Quits: y1n (~y1n@91.141.45.199.wireless.dyn.drei.com) (Remote host closed the connection)
[15:01:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:02:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:02:59] *** Joins: wyclif (~wyclif@user/wyclif)
[15:05:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:07:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:07:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[15:08:31] *** Joins: wyclif (~wyclif@user/wyclif)
[15:09:22] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:11:07] <akinode> hello, anyone here who knows how to solve this ssh problem for the raspberrypi zero 1.3? https://raspberrypi.stackexchange.com/questions/132336/raspberrypi-local-on-putty-not-working-for-raspberry-pi-zero-1-3
[15:13:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:13:49] *** Joins: rany (~rany@user/rany)
[15:14:01] *** Joins: wyclif (~wyclif@user/wyclif)
[15:16:56] *** dcaro is now known as dcaro_lunch
[15:17:16] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:18:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:19:31] *** Joins: wyclif (~wyclif@user/wyclif)
[15:21:12] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:7cb7:e630:89c:9583)
[15:22:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:24:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:25:03] *** Joins: wyclif (~wyclif@user/wyclif)
[15:25:28] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:26:05] *** Joins: ravan (~ravan@user/ravan)
[15:26:27] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[15:26:27] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:27:01] *** Joins: ravan (~ravan@user/ravan)
[15:27:14] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[15:27:20] *** Joins: gggp (~textual@221.219.72.131)
[15:27:27] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[15:27:47] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[15:27:57] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:28:01] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[15:29:04] <frojnd> Hi there. I've setup gunicorn and nginx to be launched at boot as systemd unit. All great. But now I Would like to do automatic deployment. I've wrote tests and in gitlab I've setup runners and what not but now I would like to automate the deployment WITHOUT docker. So if tests are green, go to the deploy job. Any  guides for that? I presume gitlab will do some sort of ssh call to the server where bash script
[15:29:06] <frojnd> will execute some stuff to update the code (git pull) and update libs for flask and then reload the unit? Or gunicorn?
[15:29:07] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[15:29:46] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[15:29:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:30:34] *** Joins: wyclif (~wyclif@user/wyclif)
[15:30:40] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[15:31:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[15:31:13] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:31:48] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 265 seconds)
[15:32:46] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:34:22] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[15:35:05] *** Joins: xiongxin (~quassel@113.116.35.121)
[15:35:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:05] *** Joins: wyclif (~wyclif@user/wyclif)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:38] *** Quits: vladoski (~vladoski@mail-uk-out.statpro.com) (Ping timeout: 265 seconds)
[15:36:51] *** Quits: dre (~dre@2001:8003:c932:c301:a33d:f011:dc0c:a672) (Remote host closed the connection)
[15:38:38] *** Joins: besnn (~besnn@user/besnn)
[15:38:50] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:39:19] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:39:43] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[15:40:06] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[15:40:21] * jamwil needs coffee
[15:40:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:41:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:41:26] *** Joins: Pandadub (~Barones@177.132.237.5)
[15:41:35] *** Joins: wyclif (~wyclif@user/wyclif)
[15:41:52] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:42:55] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[15:44:16] *** Quits: Barones (~Barones@177.133.27.78) (Ping timeout: 252 seconds)
[15:44:35] *** Joins: humbertowoody (~humbertow@2806:107e:f:e74:f152:8727:c46a:5272)
[15:45:21] *** Quits: stevea (~stevea@user/stevea) (Read error: Connection reset by peer)
[15:45:47] *** Joins: wender (~Wender@189.37.69.108)
[15:46:20] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[15:46:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:46:34] *** Joins: shad (~shad@user/shad)
[15:46:35] *** Quits: amllado (~amllado@45.156.42.81) (Ping timeout: 252 seconds)
[15:46:37] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:47:06] *** Joins: wyclif (~wyclif@user/wyclif)
[15:47:24] <marduk> frojnd: you maybe want something like Ansible or Puppet?
[15:47:39] *** Joins: dulanic (~dulanic@47.187.144.163)
[15:48:07] *** Quits: computeiro (~Wender@189.37.69.108) (Ping timeout: 252 seconds)
[15:50:20] *** Joins: Macuser (~Macuser@216.30.159.201)
[15:52:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[15:52:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[15:52:35] *** Joins: wyclif (~wyclif@user/wyclif)
[15:53:09] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[15:54:02] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[15:54:51] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[15:56:15] *** Joins: computeiro (~Wender@189.37.69.108)
[15:57:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:57:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:57:46] *** Quits: wender (~Wender@189.37.69.108) (Ping timeout: 260 seconds)
[15:58:06] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:58:07] *** Joins: wyclif (~wyclif@user/wyclif)
[16:00:40] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:01:07] *** Joins: dez (uid92154@user/dez)
[16:02:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:03:37] *** Joins: wyclif (~wyclif@user/wyclif)
[16:06:38] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[16:07:04] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:07:58] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[16:08:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:08:35] *** Joins: int3l (~int3l@78-83-124-208.spectrumnet.bg)
[16:08:41] *** Joins: uuair (~quassel@user/uuair)
[16:09:08] *** Joins: wyclif (~wyclif@user/wyclif)
[16:10:54] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:11:53] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:12:21] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:12:40] <varaindemian> whre should I put the `encode()` function?
[16:12:52] <varaindemian> https://www.irccloud.com/pastebin/EEj8Uaj2/
[16:13:18] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:13:27] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:13:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:14:13] *** Joins: Plyht (uid433484@id-433484.hampstead.irccloud.com)
[16:14:38] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 252 seconds)
[16:14:39] *** Joins: wyclif (~wyclif@user/wyclif)
[16:16:23] <varaindemian> any idea?
[16:17:18] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:19:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:20:10] *** Joins: wyclif (~wyclif@user/wyclif)
[16:21:34] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:21:39] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[16:23:00] *** Quits: rsx (~dummy@ppp-188-174-134-162.dynamic.mnet-online.de) (Quit: rsx)
[16:23:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:23:49] *** Joins: rsx (~dummy@ppp-188-174-134-162.dynamic.mnet-online.de)
[16:24:09] <lericson> varaindemian: zlib.decompress(·) returns a bytes object
[16:24:17] <lericson> varaindemian: your search and/or replace objects are likely str
[16:25:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:25:34] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:25:43] *** Joins: wyclif (~wyclif@user/wyclif)
[16:26:26] *** Joins: ConstantDesc (~textual@195.224.201.178)
[16:29:31] <varaindemian> lericson: tried to apply the encode()  everywhere
[16:29:36] *** Joins: node1 (~node1@user/node1)
[16:29:40] <varaindemian> lericson: also tried 'b'.join(search)
[16:29:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:30:00] <lericson> ah the multi-armed bandit approach to programming
[16:30:35] <grym> shotgun debugging usually just gets buckshot in your toes
[16:30:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[16:31:12] *** Joins: wyclif (~wyclif@user/wyclif)
[16:31:28] <varaindemian> https://www.irccloud.com/pastebin/3vTjuNjs/
[16:31:42] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[16:31:54] <varaindemian> entire thing
[16:32:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[16:32:29] <lericson> .decode('latin-1')
[16:32:29] <lericson> rip
[16:32:37] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[16:32:38] <varaindemian> :(
[16:32:39] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:32:45] *** Joins: control (~v1@user/control)
[16:33:40] <lericson> pdfs are ascii init
[16:33:56] <lericson> i guess not between streams
[16:34:13] <lericson> s/between/inside/
[16:34:52] <varaindemian> https://www.irccloud.com/pastebin/EWiAZboD/
[16:35:16] <Wooble> latin-1 will happily decode ascii correctly, but why open in binary mode and then decode, if you need bytes?
[16:35:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:35:42] <varaindemian> Wooble: uh
[16:35:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:35:58] <Wooble> varaindemian: change the regex pattern to also be bytes.
[16:36:03] <lericson> yeah i guess latin-1 is actually an okay hack here
[16:36:04] <varaindemian> I introduced latin-1 so that I will not have this last error
[16:36:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:36:43] *** Joins: wyclif (~wyclif@user/wyclif)
[16:37:46] <varaindemian> Wooble: like this? `rb'.*\/Length ([0-9]+)\/.*'`
[16:37:47] <varaindemian> ?
[16:38:22] <Wooble> sure.
[16:38:39] <varaindemian> Wooble: TypeError: cannot use a bytes pattern on a string-like object
[16:39:28] *** Joins: jokoon (~eio@2a01:e0a:542:e160:4db:25aa:20c3:f4a7)
[16:39:35] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[16:39:55] <jokoon> what is the difference with this subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE) and subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, capture_output=True) ?
[16:40:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[16:40:49] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[16:40:53] <Wooble> jokoon: the latter should be an error, I think.
[16:41:17] <jokoon> sure, but beyond the typo?
[16:42:08] <Wooble> jokoon: you can't supply capture_output along with stdout/stderr; they're mutually exclusive.
[16:42:18] <jokoon> oh ok
[16:42:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:42:56] <Wooble> capture_output does the same thing as setting both to PIPE, though.
[16:43:49] <lericson> see also: subprocess.check_output
[16:44:03] <varaindemian> any others ideas?
[16:44:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:44:41] <jokoon> My problem is that this seems to answer my question: https://stackoverflow.com/questions/18344932/python-subprocess-call-stdout-to-file-stderr-to-file-display-stderr-on-scree but it seems quite complex. I want to log both stderr and stdout, also while reading its output to the shell, and Im using powershell
[16:44:51] <Wooble> varaindemian: if you get that error, you're still decoding the bytes to str
[16:45:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:45:30] *** Quits: xiongxin (~quassel@113.116.35.121) (Read error: Connection reset by peer)
[16:45:55] <varaindemian> Wooble: that means that `contents[STREAM_OFFSET:]).group(1)` has to be bytes as well
[16:46:46] *** Joins: xiongxin (~quassel@119.123.102.171)
[16:46:50] *** Joins: wyclif (~wyclif@user/wyclif)
[16:46:50] <Wooble> varaindemian: well if contents isn't decoded, then a slice of contents will be bytes.
[16:47:15] <varaindemian> `    contents = f.read().decode('latin-1')`
[16:47:37] <jokoon> isnt utf8 prefereable?
[16:47:52] *** Joins: stwerp (~sjt015@sub137-102.bucknell.edu)
[16:47:56] <Wooble> jokoon: doesn't really matter, since they have ascii to begin with and want to pass around bytes. :)
[16:48:00] <varaindemian> jokoon: `UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe2 in position 10: invalid continuation byte`
[16:48:13] <Wooble> err, maybe it's not ascii?
[16:48:29] <Wooble> (if it's a binary file, latin-1 pretty much just worked coincidentally.)
[16:48:44] <varaindemian> it's a pdf file
[16:49:36] <lericson> it is ascii interspersed with binary data streams
[16:49:48] <bjs> varaindemian: decode()ing the contents of a pdf file is unlikely to work, as a pdf file is not a pure text file
[16:49:59] *** Joins: stevea (~stevea@user/stevea)
[16:51:16] <Wooble> you *can* .decode('latin-1') and re .encode('latin-1') as much as you want, losslessly, but it's not "correct", and treating the file as text is odd.
[16:51:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:51:29] <varaindemian> https://github.com/thinkst/canarytokens/blob/master/templates/template.pdf PDF file and their code https://github.com/thinkst/canarytokens/blob/master/pdfgen.py
[16:52:21] *** Joins: wyclif (~wyclif@user/wyclif)
[16:52:47] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[16:53:17] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[16:54:05] <varaindemian> Wooble: I am trying to adapt this method they used ehre
[16:54:33] <varaindemian> bjs: would you suggest a different approach from that I have above from canarytokens?
[16:55:23] <Wooble> varaindemian: looks like it was written for python2.
[16:55:31] <varaindemian> Wooble: yes
[16:55:50] <varaindemian> my adaptation is here:
[16:56:00] <lericson> did you try 2to3?
[16:56:12] <varaindemian> https://www.irccloud.com/pastebin/mteeAlSv/
[16:56:48] <Wooble> varaindemian: probably just making sure all of their str objects are bytes in py3 works; they're not doing any implicit unicode conversions
[16:56:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:57:10] <varaindemian> lericson: nope
[16:57:52] *** Joins: wyclif (~wyclif@user/wyclif)
[17:01:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:02:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:03:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:03:23] *** Joins: wyclif (~wyclif@user/wyclif)
[17:04:41] *** Joins: pro_z (~pro_z@37.214.44.116)
[17:04:46] *** Joins: fikran (~fikran@user/fikran)
[17:04:50] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:05:10] *** Quits: humbertowoody (~humbertow@2806:107e:f:e74:f152:8727:c46a:5272) (Ping timeout: 252 seconds)
[17:05:21] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[17:05:33] <varaindemian> lericson: tried it and it's the same code
[17:05:47] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 252 seconds)
[17:05:51] *** Joins: humbertowoody (~humbertow@2806:107e:f:e74:f152:8727:c46a:5272)
[17:05:51] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:05:58] <varaindemian> Wooble: still not sure what to change and where
[17:06:19] *** dcaro_lunch is now known as dcaro
[17:06:29] <Wooble> varaindemian: take out the .decode('latin-1') and then make the regex pattern a bytes object.
[17:06:57] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:07:42] <varaindemian> Wooble: also this `    stream_start = STREAM_OFFSET+contents[STREAM_OFFSET:].index(b'stream\r\n')+8`
[17:07:43] *** Joins: georgios (~georgios@user/georgios)
[17:08:00] <varaindemian> index(b'stream\r\n')+8
[17:08:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:08:27] <varaindemian> Wooble: now I am back to
[17:08:30] <varaindemian> https://www.irccloud.com/pastebin/hYlMGZrp/
[17:08:54] *** Joins: wyclif (~wyclif@user/wyclif)
[17:09:04] <Wooble> I'd split that into 3 lines so you can see which part is actually failing.
[17:09:09] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:5916:3eb8:6561:96a1) (Remote host closed the connection)
[17:09:17] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[17:09:34] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:80f4:fffe:63e1:6112)
[17:09:54] <varaindemian> Wooble: great idea!
[17:10:11] <Wooble> (also kind of annoying the error message doesn't give any hints...)
[17:11:15] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[17:11:50] *** Quits: gggp (~textual@221.219.72.131) (Ping timeout: 252 seconds)
[17:12:09] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:13:13] <varaindemian> https://www.irccloud.com/pastebin/d3BQzqH2/
[17:13:23] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[17:13:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:14:26] *** Joins: wyclif (~wyclif@user/wyclif)
[17:14:35] <varaindemian> https://www.irccloud.com/pastebin/EvjCjdyX/
[17:14:40] <varaindemian> the entire error
[17:14:51] *** Joins: gggp (~textual@60.10.194.42)
[17:15:39] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[17:15:47] *** Joins: wender (~Wender@189.37.69.108)
[17:16:36] <varaindemian> Wooble: `    candidate_stream = candidate_stream.replace(search.encode(), replace.encode())`
[17:16:41] <varaindemian> AttributeError: 'NoneType' object has no attribute 'encode'
[17:17:52] *** Joins: legola (~legola@46.235.100.27)
[17:18:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[17:18:25] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:18:26] *** Quits: computeiro (~Wender@189.37.69.108) (Ping timeout: 252 seconds)
[17:18:33] <cloudbender> search or replace is not a valid object (per the error)
[17:19:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:19:56] *** Joins: wyclif (~wyclif@user/wyclif)
[17:19:56] *** Quits: control (~v1@user/control) (Read error: Connection reset by peer)
[17:20:31] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:20:43] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[17:20:52] *** Joins: DeadTOm (~deadtom@2001:4b98:dc0:41:216:3eff:fe58:44d0)
[17:21:09] *** Joins: rany (~rany@user/rany)
[17:21:28] *** Joins: computeiro (~Wender@189.37.69.108)
[17:22:14] *** Joins: raph_ael (~raphael@user/raph-ael/x-7806685)
[17:22:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:22:46] *** Quits: wender (~Wender@189.37.69.108) (Ping timeout: 252 seconds)
[17:22:57] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[17:23:17] <raph_ael> hi, I want to learn python, was using a mooc (codeacademy), quite good, but I was wondering if there was any app that could help learning python with interactive projects, thanks
[17:24:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:25:27] *** Joins: wyclif (~wyclif@user/wyclif)
[17:25:28] <grym> raph_ael: i find that i am most motivated when i'm solving problems that matter to me
[17:25:37] <grym> raph_ael: so, what drives you slightly nuts about your computer :)
[17:26:07] <raph_ael> grym: computing is my work, so I'd say everything :)
[17:26:17] <The-Compiler> grym: you mean, there's thing about computers that *don't* drive people nuts?
[17:26:25] <The-Compiler> s/thing/a &/
[17:26:30] <The-Compiler> hah, raph_ael was quicker :D
[17:26:50] <The-Compiler> argh, I can't English apparently.
[17:27:33] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:27:42] <raph_ael> :)
[17:27:46] <cloudbender> um,   can't english >> don't english.
[17:28:13] <raph_ael> indeed the computing state does not suit me much
[17:28:13] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 252 seconds)
[17:28:19] *** Joins: darksun (~darksun@user/darksun)
[17:29:13] <The-Compiler> cloudbender: both of them would be incorrect, but that was on purpose ;)
[17:29:17] <raph_ael> grym: the thing is that interactive courses are better to understand where you failed, instead of banging your head with research sites and ending with horrible code
[17:29:23] <cloudbender> I know lol.
[17:29:28] <cloudbender> I was trying to be funny
[17:29:30] <raph_ael> my shell scripts looks like that :)
[17:30:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:30:30] <cloudbender> The english language is so powerful and flexible that it has a tendency to be absolutely hideous in the wrong hands.
[17:30:34] *** Joins: node1 (~node1@user/node1)
[17:30:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:31:01] <raph_ael> cloudbender: english seems easy so it may lead to many mistakes :)
[17:31:05] <grym> cloudbender: it's the defining feature of natural language
[17:31:07] <raph_ael> I'm not native speaker too
[17:31:10] <grym> we'd be hosed if it were otherwise
[17:31:24] <cloudbender> ... speaker also
[17:31:41] <cloudbender> too is one of the words that is most abused/misused
[17:32:26] <grym> cloudbender: 'polymorphically overloaded' :)
[17:32:27] <raph_ael> grym: some try to make languages without ambiguity like Lobjan, or very simple languages like Toki Pona
[17:32:27] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:33:17] *** Joins: junktext (~junktext@109.201.152.173)
[17:33:27] <grym> raph_ael: "Whereof one cannot speak, thereof one must be silent."   is a harsh mistress
[17:33:35] <cloudbender> The most misused is 'Got'.  ( ok stop cloudbender your going to go off it you think about it too much).
[17:33:42] *** Joins: Pickchea (~private@user/pickchea)
[17:34:23] <raph_ael> grym: it's a sentence for masters, not for slaves (just an image)
[17:35:12] *** Quits: junktext (~junktext@109.201.152.173) (Client Quit)
[17:35:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8db2-22ea-a950-11d1.res6.spectrum.com)
[17:35:29] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[17:35:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:36:28] *** Joins: wyclif (~wyclif@user/wyclif)
[17:36:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:37:08] <grym> raph_ael: i was quoting a philosopher who was doing his best to establish Unambiguous Language.  spoiler alert, it's provably impossible
[17:37:28] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[17:38:16] <grym> and in his youth his fairly dismal summary was "well, don't talk about those things then!", which is perhaps good advice in programming and otherwise not so much :)
[17:39:00] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[17:39:30] <cloudbender> ... 'speak about those things then ...' ( ok cloudbender you're doing it again, go have a coffee before you get a slap from the channel)
[17:39:53] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 265 seconds)
[17:39:53] *** Quits: xiongxin (~quassel@119.123.102.171) (Ping timeout: 265 seconds)
[17:39:56] *** Joins: xiongxin_ (~quassel@113.116.35.121)
[17:40:38] <cloudbender> talking is when you flap your pepsi-sucking french-fry hole.  speaking is when you are conveying information.
[17:40:44] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[17:40:45] <cloudbender> see I'm so bad.
[17:40:45] *** Quits: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[17:40:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:41:20] *** Joins: gggp (~textual@60.10.194.42)
[17:41:58] *** Joins: wyclif (~wyclif@user/wyclif)
[17:42:41] *** Joins: d1rewolf (~d1rewolf@72.11.56.90)
[17:42:44] <raph_ael> grym: I know, it was not against you, just spotting my opinion
[17:43:39] *** Joins: junktext (~junktext@109.201.152.164)
[17:43:46] <d1rewolf> is there a way to refer to the module object from within a module's files? Let's say I define module A. In its code, I want to make certain calls which refer to a module by object reference. is it possible to self-reference?
[17:45:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:46:02] <d1rewolf> sorry...google to the rescue: "current_module = sys.modules[__name__]"
[17:46:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:47:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:47:30] <varaindemian> cloudbender: I see that but I am trying to make them be compliant in my code
[17:48:01] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[17:49:52] <varaindemian> Wooble: looking at my code it basically tries to replace what is in `search='abcdefghijklmnopqrstuvwxyz.zyxwvutsrqponmlkjihgfedcba.aceegikmoqsuwy.bdfhjlnprtvxz'` with `None`?
[17:50:16] *** Joins: gggp (~textual@221.219.72.131)
[17:50:42] *** Joins: cul8r (~cul8r@76.113.95.199)
[17:51:12] <CrtxReavr> I love set operations.
[17:51:34] <CrtxReavr> Save me so much code.
[17:51:46] *** Joins: akk (~akk@75.161.146.115)
[17:52:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:53:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:32] *** Joins: paul424 (~tom@apn-95-40-44-20.dynamic.gprs.plus.pl)
[17:53:40] *** Quits: exciteabletom (~tom@58-7-220-242.dyn.iinet.net.au) (Ping timeout: 260 seconds)
[17:53:44] <paul424> can you force reversed order of list with slicing operator : e.g.  : a[-1:-5] ?
[17:53:49] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[17:54:18] <bjs> paul424: yes, a[-1:-5:-1]
[17:54:29] <paul424> ahh sure :D
[17:54:29] <cloudbender> sweet
[17:54:32] <bjs> paul424: the syntax is a[start:stop:step]  a step of -1 is reverse
[17:54:36] <CrtxReavr> there's a list.reverse() method.
[17:56:08] <cloudbender> list.reverse eliminates the need for indexing, much nicer, but the slicing syntax is nice.
[17:57:02] <grym> .reverse() does mutate, though, and slicing doesn't
[17:57:15] <cloudbender> good point
[17:57:17] <raph_ael> any idea for my question ? :)
[17:57:25] <paul424> oki many thanks for answers ...
[17:57:46] <grym> raph_ael: "scratch your own itches" is my advice, really
[17:57:50] *** Joins: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba)
[17:58:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:58:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:58:35] *** Quits: node1 (~node1@user/node1) (Ping timeout: 252 seconds)
[17:59:00] <grym> raph_ael: something like https://automatetheboringstuff.com/2e/  can show you around some tools to do one form of automation
[17:59:04] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[17:59:12] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (Quit: ZNC - https://znc.in)
[17:59:19] *** Joins: spithash (~spithash@user/spithash)
[17:59:41] *** Quits: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba) (Client Quit)
[18:00:19] <raph_ael> grym: thanks I'll try
[18:00:51] <grym> raph_ael: and pick an editor/IDE/tool that has a visual debugger, it helps a lot to understand what your code is doing if you can go through it line by line
[18:01:05] <raph_ael> grym: which would you recommand ?
[18:01:07] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:01:32] *** Joins: mickey (~user@user/mickey)
[18:01:39] <grym> raph_ael: you seem to be interested in interactivity; maybe try https://thonny.org ?
[18:01:46] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[18:02:06] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[18:02:26] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 252 seconds)
[18:02:31] <grym> raph_ael: the normal host of editor/IDE tools includes, in no real order, pycharm, vscode, vim, emacs, spyder, some others
[18:02:57] <raph_ael> grym: thanks again :)
[18:03:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:03:46] <raph_ael> thony seems nice to begin with
[18:04:01] *** Joins: wyclif (~wyclif@user/wyclif)
[18:04:35] <grym> lot of work went into making it self-explainable, i think
[18:04:49] *** Joins: pycurious (~Adium@user/pycurious)
[18:04:52] *** Quits: gggp (~textual@221.219.72.131) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:07:12] *** Joins: Azin (~Azin@user/azin)
[18:08:02] <CrtxReavr> Hey, you can't sneak emacs in there!  It's a PS4 emulator!
[18:08:09] <grym> PS1, thank you
[18:08:37] *** Joins: zebrag (~chris@user/zebrag)
[18:08:40] <grym> but hey, it's got lsp support now :D
[18:08:54] <CrtxReavr> lsp?
[18:09:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:09:37] *** Joins: wyclif (~wyclif@user/wyclif)
[18:10:01] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[18:11:38] *** Joins: mepholic (~mepholic@flux.hxx.in)
[18:11:41] *** Joins: mchlumsky1 (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[18:11:50] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:12:10] *** Quits: llh (~llh@user/llh) (Ping timeout: 260 seconds)
[18:12:15] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:12:23] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[18:12:39] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738) (Read error: Connection reset by peer)
[18:12:42] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[18:12:55] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:79ae:6d91:1946:70f1) (Read error: Connection reset by peer)
[18:13:19] *** Quits: dangrenier83 (~pi@user/dangrenier83) (Ping timeout: 252 seconds)
[18:13:19] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Ping timeout: 252 seconds)
[18:13:19] *** mchlumsky1 is now known as mchlumsky
[18:13:21] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:79ae:6d91:1946:70f1)
[18:13:23] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:59fb:6d2e:e320:e738)
[18:13:34] *** Quits: meph (~mepholic@flux.hxx.in) (Ping timeout: 260 seconds)
[18:14:28] *** Quits: Kratos (~Kratos@user/abrax) (Ping timeout: 252 seconds)
[18:14:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:14:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:15:02] *** Joins: wyclif (~wyclif@user/wyclif)
[18:15:18] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[18:15:24] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[18:15:26] *** Joins: Kratos (~Kratos@user/abrax)
[18:15:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:16:23] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:16:23] <raph_ael> I'm using emacs too :)
[18:16:31] <raph_ael> and well some other editors also
[18:17:47] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:17:56] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[18:18:13] *** Joins: mickey (~user@user/mickey)
[18:18:24] *** Joins: digilink (~digilink@user/digilink)
[18:20:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:20:34] *** Joins: wyclif (~wyclif@user/wyclif)
[18:21:18] <CrtxReavr> Wait, emacs is an editor?
[18:21:27] *** Quits: lack (~lack@user/lack) (Ping timeout: 265 seconds)
[18:21:54] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[18:23:22] *** Joins: lack (~lack@user/lack)
[18:24:44] *** Joins: Payam (~Payam@138.106.57.132)
[18:24:52] *** Joins: Alexer (~alexer@alexer.net)
[18:25:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:25:33] *** Joins: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba)
[18:26:03] *** Joins: wyclif (~wyclif@user/wyclif)
[18:26:16] <grym> CrtxReavr: https://en.wikipedia.org/wiki/Language_Server_Protocol
[18:26:38] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[18:27:31] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[18:27:50] *** Quits: paul424 (~tom@apn-95-40-44-20.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:27:56] <Croves> Hi folks! How do I annotate a function that will return a list of a specific object? https://bpa.st/VDBQ
[18:28:13] <grym> Croves: typing.List
[18:28:15] <grym> not list
[18:28:18] <grym> (for now)
[18:28:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[18:28:36] <raph_ael> CrtxReavr: some even boot linux with it https://www.informatimago.com/linux/emacs-on-user-mode-linux.html
[18:28:47] <raph_ael> but it's quite offtopic
[18:28:53] <grym> raph_ael: exwm, too :)
[18:28:54] <Croves> grym thanks a lot
[18:31:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:31:02] <cul8r> being able to just use the std type is coming soon I think, idr if its in 3.10 or not
[18:31:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:31:34] *** Joins: wyclif (~wyclif@user/wyclif)
[18:32:37] *** Quits: humbertowoody (~humbertow@2806:107e:f:e74:f152:8727:c46a:5272) (Ping timeout: 252 seconds)
[18:33:07] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[18:33:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:33:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:43] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 252 seconds)
[18:33:43] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 252 seconds)
[18:33:47] *** Quits: ross (sid305269@user/ross) (Ping timeout: 250 seconds)
[18:33:47] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[18:33:50] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[18:33:54] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:33:54] *** Quits: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:33:54] *** Quits: cmagina (sid286142@user/cmagina) (Ping timeout: 268 seconds)
[18:33:54] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 268 seconds)
[18:34:00] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 260 seconds)
[18:34:17] *** Quits: briian (uid321220@id-321220.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[18:34:17] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[18:34:17] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[18:34:18] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[18:34:18] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[18:34:18] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[18:34:18] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[18:34:27] *** Joins: humbertowoody (~humbertow@2806:107e:f:e74:28d4:c1cf:7bfe:e600)
[18:34:31] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:34:32] *** Quits: ziky (sid27087@user/ziky) (Ping timeout: 250 seconds)
[18:34:33] *** Quits: seds (sid492514@user/seds) (Ping timeout: 250 seconds)
[18:34:33] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[18:34:33] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[18:34:35] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Ping timeout: 260 seconds)
[18:34:35] *** Joins: mexen (uid495612@user/mexen)
[18:34:36] <Wooble> it's in 3.9.
[18:34:38] *** Joins: cmagina (sid286142@user/cmagina)
[18:34:39] *** Quits: nocko (sid501219@user/nocko) (Ping timeout: 250 seconds)
[18:34:39] <CrtxReavr> raph_ael, if you could edit code with it, it would at least be topic-adjacent.
[18:34:41] *** Joins: WhyNotHugo (sid269118@id-269118.hampstead.irccloud.com)
[18:34:44] *** Joins: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com)
[18:34:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:34:53] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Ping timeout: 252 seconds)
[18:34:53] *** Quits: xiongxin_ (~quassel@113.116.35.121) (Ping timeout: 252 seconds)
[18:35:00] *** Joins: r0bby (r0bby@user/r0bby)
[18:35:03] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[18:35:04] *** Joins: briian (uid321220@id-321220.uxbridge.irccloud.com)
[18:35:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:35:12] *** Joins: ross (sid305269@user/ross)
[18:35:18] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[18:35:19] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[18:35:20] *** Joins: EWDurbin (sid38710@id-38710.tinside.irccloud.com)
[18:35:20] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[18:35:21] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[18:35:22] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[18:35:22] *** Joins: Memory (sid459764@user/memory)
[18:35:24] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[18:35:24] *** Joins: nocko (sid501219@user/nocko)
[18:35:27] *** Joins: ziky (sid27087@user/ziky)
[18:35:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:35:36] *** Joins: xiongxin (~quassel@119.123.102.171)
[18:35:39] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[18:35:39] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:35:43] *** Joins: niemal (~niemal@user/niemal)
[18:35:52] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[18:35:54] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[18:35:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:35:59] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[18:35:59] *** Joins: seds (sid492514@user/seds)
[18:36:28] *** Joins: debnet (sid330295@python/afpy/debnet)
[18:36:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:36:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:36:43] <Wooble> (or 3.7, if it's only in annotations and you use a future import... PEP 585)
[18:36:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:37:04] *** Joins: wyclif (~wyclif@user/wyclif)
[18:37:11] *** Joins: sandb0y (pirate@user/sandb0y)
[18:37:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:37:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:37:36] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[18:37:50] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[18:38:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:38:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:38:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[18:38:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:39:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:39:14] *** Quits: humbertowoody (~humbertow@2806:107e:f:e74:28d4:c1cf:7bfe:e600) (Ping timeout: 260 seconds)
[18:39:18] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:39:32] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:39:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:39:56] <cul8r> Man I was little off haha. thanks for info
[18:39:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:40:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:40:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:40:25] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[18:40:51] *** Quits: xiongxin (~quassel@119.123.102.171) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:41:00] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[18:41:23] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[18:42:00] <hodapp> structural pattern matching \o/
[18:42:04] * hodapp eagerly awaits
[18:42:15] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:42:22] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:42:27] <hodapp> one thing I definitely miss from Haskell and from Rust
[18:43:02] <grym> hodapp: and racket, kinda.  that's what i thought of first anyway
[18:43:52] *** Joins: netrunner (~netrunner@user/netrunner)
[18:43:59] <hodapp> racket has structural pattern matching?
[18:44:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:45:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:45:22] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[18:45:42] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[18:46:10] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[18:46:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:47:14] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:47:37] <grym> https://docs.racket-lang.org/reference/match.html  you know more than many how crappy my lisp is though :)
[18:47:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[18:49:00] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:50:02] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[18:50:52] <rjwiii> I'm stuck using python 2.7 ... are f strings available in __future__?
[18:51:11] <grym> rjwiii: no
[18:51:13] *** Joins: orbitoo (~KrisPBaco@104-12-38-21.lightspeed.nsvltn.sbcglobal.net)
[18:51:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:51:26] <rjwiii> %$#@!!!
[18:51:42] <Wooble> they didn't even exist in py3 when 2.7 came out...
[18:51:44] <grym> .format() isn't _too_ bad
[18:51:48] <sco1> https://github.com/asottile/future-fstrings maybe
[18:51:53] *** Joins: fructose (~fructose@user/fructose)
[18:51:54] *** Joins: wyclif (~wyclif@user/wyclif)
[18:52:26] <sco1> If you don't want to translate to .format() yourself
[18:52:39] *** Joins: humbertowoody (~humbertow@2806:107e:f:e74:c8e9:b7f:6f10:f125)
[18:53:18] <rendar> <Task pending name='Task-2' coro=<job() running at /home/rendar/new_tg.py:203> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7f3ededdb4c0>()]>> ||| why do i get that TaskWakeupMethWrapper and that wait_for() there?
[18:53:53] *** Quits: Plyht (uid433484@id-433484.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:53:53] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[18:55:22] <rjwiii> bah ...
[18:55:22] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:55:30] <lericson> no lambs in here rjwiii
[18:55:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[18:56:09] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 2.8)
[18:56:13] <orbitoo> https://pastebin.com/F8xyjGcs I'm getting this error, but only as a nonprivileged user.  If i do it as root, it goes through.  It has 755 permissions
[18:56:42] <orbitoo> i went through with a strace -f and didn't see anything, but those can be eye numbing to go through
[18:56:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:57:13] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 265 seconds)
[18:57:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:57:29] *** orbitoo is now known as orbi
[18:57:38] *** Quits: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba) (Quit: Client closed)
[18:58:31] <Wooble> infobob: you up?
[18:58:45] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[19:00:12] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[19:00:13] *** Joins: Naan` (~Naan@user/naan)
[19:00:38] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:00:39] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:02:10] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:02:14] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[19:02:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:02:57] *** Joins: wyclif (~wyclif@user/wyclif)
[19:03:15] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[19:03:25] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[19:05:17] *** Joins: p-i-_ (~Ohmu@223.206.70.53)
[19:06:09] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[19:06:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:07:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:08:19] *** Quits: p-i- (~Ohmu@mx-ll-223.206.70-53.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[19:08:26] *** Joins: wyclif (~wyclif@user/wyclif)
[19:08:38] *** dcaro is now known as dcaro_away
[19:09:16] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:10:31] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[19:10:57] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[19:11:18] *** Joins: h4ppy (~happy@user/h4ppy)
[19:12:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:12:18] *** Joins: ConstantDesc (~textual@195.224.201.178)
[19:13:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:13:57] *** Joins: wyclif (~wyclif@user/wyclif)
[19:14:06] *** Joins: fikran (~fikran@user/fikran)
[19:14:14] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[19:14:18] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Ping timeout: 256 seconds)
[19:14:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[19:14:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:14:45] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:15:02] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:16:01] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[19:16:37] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[19:17:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Quit: Leaving)
[19:17:24] *** Quits: Sadale (~Sadale@user/sadale) (Remote host closed the connection)
[19:17:57] *** Joins: Sadale (~Sadale@user/sadale)
[19:18:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:19:28] *** Joins: wyclif (~wyclif@user/wyclif)
[19:19:56] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:21:36] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[19:21:42] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:7cb7:e630:89c:9583) (Ping timeout: 260 seconds)
[19:21:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:23:37] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[19:24:01] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:24:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:24:29] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2.1)
[19:24:58] *** Joins: wyclif (~wyclif@user/wyclif)
[19:27:11] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[19:29:15] *** Joins: humberto1 (~humbertow@2806:107e:f:e74:f152:8727:c46a:5272)
[19:29:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:30:30] *** Joins: wyclif (~wyclif@user/wyclif)
[19:31:01] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 252 seconds)
[19:31:25] *** Joins: jazzy (~jaziz@2600:380:844f:a894:5c0a:790e:99c1:b5d8)
[19:31:58] *** Quits: humbertowoody (~humbertow@2806:107e:f:e74:c8e9:b7f:6f10:f125) (Ping timeout: 260 seconds)
[19:33:02] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[19:33:32] *** Quits: jokoon (~eio@2a01:e0a:542:e160:4db:25aa:20c3:f4a7) (Read error: Connection reset by peer)
[19:34:35] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:35:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:35:59] *** Joins: wyclif (~wyclif@user/wyclif)
[19:36:30] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:36:48] *** Joins: pycode (~pycode@2001:b07:5d28:551:c395:48d5:fd70:7615)
[19:37:40] *** Quits: Azin (~Azin@user/azin) (Quit: Leaving...)
[19:37:50] *** Joins: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de)
[19:38:32] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[19:39:38] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[19:39:53] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[19:40:07] *** Joins: zaquest (~notzaques@5.128.210.178)
[19:40:51] <rendar> anyone?
[19:40:53] *** Joins: node1 (~node1@user/node1)
[19:40:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:41:19] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[19:41:31] *** Joins: wyclif (~wyclif@user/wyclif)
[19:41:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[19:42:01] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:42:26] *** Quits: litharge (litharge@libera/bot/litharge) (Quit: restarting)
[19:42:32] <bjs> rendar: I mean,  we can't see the code.  I'm not sure how you expect anyone to answer why you see this -very specific output message-
[19:42:43] *** Joins: litharge (litharge@libera/bot/litharge)
[19:42:48] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:43:01] <bjs> rendar: but from reading the message and having no other context, i'd guess you called wait_for and it made a thing called a TaskWakeupMethWrapper
[19:43:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:43:22] *** ChanServ sets mode: +o litharge
[19:43:42] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[19:44:04] *** Joins: kosh (~kosh@user/kosh)
[19:44:05] *** Quits: schumaml (~schumaml@dslb-178-002-179-143.178.002.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[19:45:34] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:45:50] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[19:46:16] <rendar> uhm, i see
[19:46:22] <rendar> i've called wait() btw
[19:46:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:46:58] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[19:47:01] *** Joins: wyclif (~wyclif@user/wyclif)
[19:47:14] <bjs> rendar: by now you should know that if you want help with a specific message and asyncio you need to show actual code
[19:47:21] <bjs> otherwise there's no hope anyone can help
[19:47:24] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:49:20] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: brb)
[19:50:19] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:50:30] <rendar> yep
[19:50:34] *** Joins: LiftLeft (~LiftLeft@172.83.47.124)
[19:51:02] *** Quits: rannnn8888 (~rannnn888@bzq-79-181-153-142.red.bezeqint.net) (Quit: Client closed)
[19:51:22] <rendar> i have this little snippet https://bpa.st/3BBQ -- i want to get better the asyncio flow: if i press Ctrl+C here while the job() corouting is waiting, who cancels them?
[19:51:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:51:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:52:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[19:52:31] *** Joins: wyclif (~wyclif@user/wyclif)
[19:55:37] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[19:56:32] <rendar> i mean: since the exception blocks asyncio.run(), will it cancel all pending tasks, before returning?
[19:56:36] *** Joins: metaace_ (~metaace@user/metaace)
[19:57:14] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:57:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[19:57:29] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2001) (Quit: Bye)
[19:57:36] *** Joins: Dantalion (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[19:57:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:57:46] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[19:58:03] *** Joins: wyclif (~wyclif@user/wyclif)
[19:58:03] *** Quits: metaace (~metaace@user/metaace) (Ping timeout: 276 seconds)
[19:58:35] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:59:15] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[19:59:37] *** Joins: xon (~xon@host-70-net-65-160-119.mobilinkinfinity.net.pk)
[20:00:39] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[20:02:02] <nedbat> does this CPython change mean there's no more recursion limit?  https://github.com/python/cpython/pull/28488
[20:02:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[20:02:31] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[20:02:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:02:57] *** Quits: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de) (Ping timeout: 265 seconds)
[20:03:18] *** Quits: bomb-on (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:03:33] *** Joins: wyclif (~wyclif@user/wyclif)
[20:03:43] <xon> hello good people. I have utils.py file where I had everything method like send_email, check_email, redis... I broke it into multiple files like one function per file. send_email.py, check_email.py. now the boss says why you're doing that. I said it's functional programming principle. he said give me some resource to learn about it. can anyone please give me why it is good practices or not. thank you
[20:03:53] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[20:04:07] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:04:31] <InPhase> xon: One function per file is not standard practice.
[20:05:03] <InPhase> xon: Typically groups of related functions are put into each file, with files having responsibility over some area.
[20:05:10] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[20:05:20] *** Joins: nbao (~nbao@187.20.181.193)
[20:06:02] <InPhase> xon: This makes importing more straightforward, but also facilitates code reuse of components that related functions will share, but that might not be of relevance externally.
[20:06:11] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Ping timeout: 268 seconds)
[20:06:47] <ssbr> xon: the only reason I can think of to do one function per file is in a language like C++ where it would mean extremely parallel builds
[20:06:50] *** Joins: roped (~lonely_@user/roped)
[20:06:55] <ssbr> in Python it's just a waste of everyone's time
[20:07:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:03] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[20:08:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:08:26] <InPhase> xon: Now one class per file might be used if the classes are large, but it would still be most ideal if the class has a cleanly divisible responsibility.  Like if I had one large class and a small class that is closely associated with it, I'd toss that small class into the same file, to retain grouping.
[20:08:41] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:09:05] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[20:09:05] *** Joins: wyclif (~wyclif@user/wyclif)
[20:09:31] <roped> what should I read if I want to write a class method that is able to detect if it's being called from a method with the same name of a subclass (not necessarily a direct subclass)
[20:09:56] *** Joins: ubert (~Thunderbi@91.141.79.118.wireless.dyn.drei.com)
[20:10:36] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[20:11:41] <hodapp> ssbr: or you're stuck in MATLAB which requires it (or at least did at one point)
[20:12:26] <hodapp> roped: as in, called from a method for which the method's name is the same as the name of the subclass?
[20:12:50] <hodapp> or the method's name is the same as a method name of some subclass
[20:13:42] <InPhase> xon: I searched to see if there are others following this practice, and found this thread:  https://www.reddit.com/r/learnpython/comments/5odyok/one_function_per_file/  In summary, one person asks about doing this as a practice, and follows in the comments that he thinks his ADHD results in it being easier to focus when he breaks everything up a lot like this.  Which I understand, sometimes you have to do
[20:13:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:13:47] <InPhase> what helps you to focus.  But the thread is filled with responses encouraging him not to do this, so this is probably a bad idea on team projects.
[20:14:01] *** Joins: y1n (~y1n@178.115.70.148.wireless.dyn.drei.com)
[20:14:18] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[20:14:27] *** Quits: willow (~willow@bay.systems) (Remote host closed the connection)
[20:14:33] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[20:14:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:15:26] <bjs> nedbat: I don't think so,  I think it's just that currently a Python function call uses some C stack allocated variables because of the way the eval function gets recursively called.  This prq looks like it's trying to be more like stackless
[20:15:33] <bjs> nedbat: and not recursively call eval to do Python function calls
[20:16:10] <nedbat> bjs: right, but isn't it the C stack that is the real limit? If you set recursion limit too high, and hard-crash Python, isn't it because the C stack has overflowed?
[20:16:51] *** Joins: palasso (~palasso@user/palasso)
[20:17:04] <nedbat> xon: if someone says "one function per file is a functional concept", I think it's because one class per Java is a Java rule (so they can be imported), and they've mis-applied it to functional programming.
[20:17:33] *** Joins: sudorm (~sudorm@2a01cb00838f61008cefccd95538f9d6.ipv6.abo.wanadoo.fr)
[20:17:49] <roped> hodapp, https://dpaste.org/Juum I want the code in A.method() to make a difference between being called like at line 27 and all other ways below that
[20:18:25] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[20:19:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:19:32] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:19:44] <bjs> nedbat: yeah, but this prq doesn't seem to disable the recursion limit check
[20:20:05] *** Joins: wyclif (~wyclif@user/wyclif)
[20:20:06] <nedbat> bjs: no one mentioned anything about it, but it does seem to get at that.
[20:20:08] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:20:45] <hodapp> roped: this really looks like something in which, if you need it, something is rather wrong with the design
[20:21:13] <roped> hodapp, do you suspect an X-Y problem here?
[20:21:16] <hodapp> because that completely breaks referential transparency
[20:21:35] <bjs> nedbat: it seems the main thing is that it allocates things to the heap rather than stack and then uses `goto` to loop around in the same function rather than allocating new stack space.  The place it `goto`s to seems to do a _Py_EnterRecursiveCall which is what will check the recursion limit
[20:22:17] <bpalmer> roped: why not just make subclasses of A not call super() if their behavior should be different?
[20:22:29] <bpalmer> roped: that is super().method()
[20:22:30] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:22:49] <roped> bpalmer, what if their behavior is a superset? calling super() allows avoiding code redundancy
[20:22:53] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Remote host closed the connection)
[20:23:13] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:23:13] <bjs> nedbat: there's an associated bpo https://bugs.python.org/issue45256 you could possibly ask if this can lead to removal of the recursion limit
[20:23:16] <roped> I mean, there's different, and there's totally different
[20:23:22] <bjs> nedbat: although i'm sure there'll be some caveat why it can't :P
[20:23:53] <roped> methods of subclasses that do what methods of the superclass do + something else is normal practice, no?
[20:24:37] <hodapp> it's usually a sign that you're using full inheritance just for the sake of code reuse
[20:24:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:25:28] <bjs> roped: yeah,  you're supposed to be able to use the subclass wherever someone had used the superclass
[20:25:30] <bjs> and it work
[20:25:37] *** Joins: wyclif (~wyclif@user/wyclif)
[20:25:50] *** Quits: P1ro (~quassel@user/p1ro) (Read error: Connection reset by peer)
[20:26:09] *** Joins: P1ro (~quassel@user/p1ro)
[20:26:38] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[20:26:42] *** Joins: fdan (~fdan@192.146.154.3)
[20:28:18] *** Joins: cth (~Cthulchu@193.194.107.250)
[20:28:26] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:30:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:31:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:31:12] *** Joins: apteryx (~maxim@dsl-10-149-91.b2b2c.ca)
[20:31:15] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[20:31:28] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[20:32:00] *** Joins: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de)
[20:32:07] <apteryx> Hello! Any reason why 'import pdb; pdb.set_trace' breaks in a pytest test which interacts with a node app while 'import ipdb;ipdb.set_trace()' doesn't?
[20:32:20] *** Joins: P1ro_ (~quassel@user/p1ro)
[20:32:39] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2ae4:faa5:3a3d:e2fc) (Quit: Leaving)
[20:32:49] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:33:07] <apteryx> one difference is that I had to disable output capture with the pytest -s flag, otherwise ipdb was complaining
[20:33:52] *** Joins: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba)
[20:34:00] <apteryx> but it still works with pdb
[20:34:03] *** Joins: P1ro__ (~quassel@user/p1ro)
[20:34:28] *** Quits: P1ro_ (~quassel@user/p1ro) (Read error: Connection reset by peer)
[20:34:30] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 260 seconds)
[20:34:34] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:34:35] <dude-x> apteryx with pytest you have to specify you're using a differnt debugger with a flag
[20:34:48] <dude-x> a command line option
[20:36:04] <apteryx> I tried many ways, but they all result with the same hang; in the pytest test: import ipdb; ipdb.set_trace()  At the command line: pytest ... --pdbcls=IPython.core.debugger:Pdb
[20:36:09] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[20:36:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:36:22] <apteryx> also tried breakpoint() in the code along with export PYTHONBREAKPOINT=ipdb.set_trace
[20:36:40] *** Joins: wyclif (~wyclif@user/wyclif)
[20:36:58] <rendar> i have this little snippet https://bpa.st/3BBQ -- i want to get better the asyncio flow: if i press Ctrl+C here while the job() coroutine is waiting, who cancels them? the asyncio.run() itself, before returning cancels all pending tasks? it isn't specified in the run() docs
[20:37:49] <bjs> rendar: CtrlC is a signal, you can add signal handlers to the loop to handle the signals
[20:37:59] <bjs> e.g. to cancel the tasks
[20:38:06] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:38:13] <bjs> note that to cancel a task does not require `await`, so you can do it basically anywhere
[20:38:56] <bjs> if you just let CtrlC reach a KeyboardInterrupt then that might be raised anywhere, including just in random parts of asyncio itself and so you have no hope of catching it inside the tasks themselves.
[20:39:06] <Croves> Any idea why I'm getting this TypeError("'InsertOneResult' object is not iterable")? FastAPI and MongoDB with Motor and AsyncIO https://bpa.st/AYZQ
[20:39:44] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:40:24] <rendar> bjs, ok, but .. my question is more about who cancels that task i create? since i come from C/C++ where all allocated stuff must be released somewhere else, and i call create_task() to create that task which will run that coroutine, i wonder to understand WHO cancels it...no matter if its CTRL+C or whatever
[20:40:30] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:40:37] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[20:41:14] <bjs> rendar: what do you mean "who",  you can't do it from inside any of the tasks for the reason I just said
[20:41:25] *** Quits: noesc (~weechat@81-229-23-156-no527.tbcn.telia.com) (Quit: WeeChat 3.2)
[20:41:30] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[20:41:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:42:06] <bjs> rendar: this isn't like C/C++,  it's not like the task/function/whatever which "creates" the task has to be the one that cancels it
[20:42:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:26] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[20:42:43] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[20:42:45] *** Joins: zeden (~zeden@user/zeden)
[20:42:51] <bjs> rendar: you can just have a global variable (or probably a class with an instance attribute) that is the top-level job/run function that you can .cancel() on the signal
[20:42:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:44:03] <rendar> i know that i can have that, but my question is that now i *don't* have that, so i wish to get which internal mechanism do that for me
[20:44:07] *** Joins: cth (~Cthulchu@193.194.107.250)
[20:44:41] <bjs> rendar: what kind of mechanism are you looking for?
[20:44:48] <rendar> if i got it, when async.run() is interrupted by some exception (whatever is it), it cancels all pending tasks
[20:45:02] <rendar> also because it must close the event loop!
[20:45:19] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:7cb7:e630:89c:9583)
[20:45:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:45:29] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[20:46:23] <rendar> bjs, if you just can confirm me that asyncio.run() does what i said, i just can sleep tonight :)
[20:46:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:47:06] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[20:47:25] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[20:47:26] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[20:47:40] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:48:31] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[20:48:40] <bjs> rendar: yes,  asyncio will just try shutdown all tasks
[20:48:48] <bjs> by cancelling them
[20:48:52] <bjs> (this should've been easy to test)
[20:49:11] <rendar> bjs, uhm, how'd you test it?
[20:49:28] <bjs> rendar: well, run() some tasks and see if when you hit CtrlC they get cancelled
[20:49:54] <rendar> they get cancelled indeed, i've alredy posted that
[20:49:59] <Croves> Any idea why I'm getting this TypeError("'InsertOneResult' object is not iterable")? FastAPI and MongoDB with Motor and AsyncIO https://bpa.st/AYZQ
[20:50:02] <rendar> in that code snippet of before
[20:50:04] <bjs> rendar: then what is your question? I'm confused :)
[20:50:12] <rendar> bjs, just a confirmation of that
[20:51:22] <ChrisWarrick> Croves: the return value of insert_one is not something that fastapi and co. can serialize, and it isn't something you should be returning from web-facing views anyways
[20:51:41] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[20:51:46] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[20:52:06] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[20:52:12] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[20:52:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:53:11] *** Joins: wyclif (~wyclif@user/wyclif)
[20:54:10] <d1rewolf> for those of you using pycharm...is there a course out there that does a good job of cementing in memory all the features?
[20:54:38] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Quit: WeeChat 3.2.1)
[20:55:01] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[20:55:04] <ChrisWarrick> there are far too many features to have all of them memorized
[20:56:06] <bjs> rendar: but in large programs this often isn't quite what you want
[20:56:19] <bjs> rendar: you often want to see a CtrlC, and then do some cleaning up top->bottom
[20:56:37] <bjs> rendar: asyncio will just hit everything with a hammer, and when you do try cleanup the event loop is closed so you can't even really do anything
[20:57:05] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:57:10] *** Quits: m4r35n357 (~m4r35n357@host-92-20-120-36.as13285.net) (Quit: Leaving)
[20:57:34] <rendar> bjs, yes indeed.. i was thinking: in a large program where i'm writing my own TaskGroup, where there is TaskGroup.run() which is the method that wait tasks and call task.exception() and task.result() and so on...... should i cancel all tasks when the TaskGroup itself is cancelled, e.g. it receives the asyncio.CancelledError exception?
[20:57:39] <rendar> i guess the answer is yes
[20:58:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[20:58:42] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:58] <bjs> rendar: anyio taskgroups use trio's model of cancellation, see https://anyio.readthedocs.io/en/stable/cancellation.html
[20:59:10] <rendar> i'll look into that
[20:59:19] <rendar> but i cannot use anyio neither trio for my purposes
[20:59:40] <rendar> since they task groups will cancel every tasks if a task gets an exception, and i don't want that
[21:00:05] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 252 seconds)
[21:00:23] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.2.1)
[21:00:58] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[21:01:02] *** Joins: besnn (~besnn@user/besnn)
[21:01:34] *** Quits: Biodragon (~Biodragon@cpe-107-184-133-164.socal.res.rr.com) (Ping timeout: 260 seconds)
[21:01:34] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:02:42] *** humberto1 is now known as humbertowoody
[21:03:07] *** Joins: etienneme (~etienne@user/etienneme)
[21:03:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:04:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:04:12] *** Joins: wyclif (~wyclif@user/wyclif)
[21:05:30] *** Joins: NeoCore (~neocore@37.120.204.132)
[21:05:51] <apteryx> is it possible to launch a pytest test straight from inside ipython?
[21:06:09] *** A_Dragon is now known as Exceedingly_Gay
[21:07:08] *** Quits: Croves (~Croves@2804:14c:578b:9102:f953:c0b7:5ab0:5cba) (Quit: Client closed)
[21:07:38] *** Quits: P1ro__ (~quassel@user/p1ro) (Ping timeout: 260 seconds)
[21:08:00] <ChrisWarrick> apteryx: why do you want to do that?
[21:08:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:09:43] *** Joins: wyclif (~wyclif@user/wyclif)
[21:09:49] <apteryx> trying to figure out a way to debug my pytest test with ipython
[21:10:08] <apteryx> I guess it's easier to load the test module and interactively try stuff at the ipython REPL
[21:10:36] <apteryx> initially I thought of using pytest with --pdb and setting a breakpoint in the code, but that didn't work with my application and ipdb
[21:10:42] *** Joins: subopt (~subopt@2603-8081-2302-459a-c44d-4137-d2af-3bba.res6.spectrum.com)
[21:12:38] *** Joins: Akuli (~Akuli@213.216.208.69)
[21:12:59] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:13:14] *** Quits: jazzy (~jaziz@2600:380:844f:a894:5c0a:790e:99c1:b5d8) (Ping timeout: 260 seconds)
[21:13:34] *** Joins: pycurious (~Adium@user/pycurious)
[21:14:10] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:14:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:15:13] *** Joins: wyclif (~wyclif@user/wyclif)
[21:16:14] *** Exceedingly_Gay is now known as A_Dragon
[21:18:14] *** Joins: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch)
[21:19:11] <apteryx> the problem is that pytest has its own way of loading things and writing fixtures, that is a bit of a pain to manually arrange in a REPL
[21:19:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:19:56] <apteryx> s/and writing/such as/
[21:20:29] <ChrisWarrick> what makes ipdb not work?
[21:20:45] *** Joins: wyclif (~wyclif@user/wyclif)
[21:21:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[21:21:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[21:22:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:22:52] <apteryx> I'm not sure, but it won't break and give me a prompt
[21:23:26] *** Joins: fikran (~fikran@user/fikran)
[21:23:35] <apteryx> which is strange, because plain 'pdb' works fine.  Instead the app keeps running.  It's somewhat similar to https://stackoverflow.com/questions/34914704/bdbquit-raised-when-debugging-python-with-pdb#comment77382736_34914704
[21:23:43] *** Joins: digilink (~digilink@user/digilink)
[21:24:05] <apteryx> but my set_trace shouldn't be in the background (such as in a web app), it's directly in the pytest test.
[21:24:11] <apteryx> so i'd expect it to work
[21:24:55] <Staunch> is there any functional difference (besides access) when setting a default for a class on the class itself vs. by setting the default in the __init__ function? For example, between classes A and B here: https://bpa.st/YL4A
[21:25:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:25:26] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[21:25:48] *** Joins: wender (~Wender@189.37.69.108)
[21:25:50] <bjs> Staunch: what do you mean "besides access" ?
[21:26:00] <grym> Staunch: yes, one of those is an instance attribute and one's a class attribute
[21:26:03] <Staunch> like i can do `A.foo` to get "bar" but i can't do `B.foo`
[21:26:15] *** Joins: wyclif (~wyclif@user/wyclif)
[21:26:31] <bjs> Staunch: well foo exists on different objects. There is only one A.foo that is shared between all instances of A
[21:26:41] <bjs> Staunch: it's what other languages might call "static"?
[21:26:45] <Staunch> grym: yeah, here's the actual case i'm curious about: https://bpa.st/2QGA
[21:26:59] <bjs> Staunch: self.foo = "baz" doesn't change A.foo
[21:27:56] <Staunch> bjs: but if i did `A.foo = "baz"`, would some "a"'s value be changed, too?
[21:28:11] <Staunch> (where `a = A()` sometime previously)
[21:28:13] <apteryx> hmm:  Fixture "BaseClientFixture" called directly. Fixtures are not meant to be called directly
[21:28:18] <bjs> Staunch: "a" doesn't have a foo,  a.foo is just returning A's foo
[21:28:21] <apteryx> not sure how I can manually exercise things at the repl then
[21:28:30] *** Quits: computeiro (~Wender@189.37.69.108) (Ping timeout: 265 seconds)
[21:28:37] <Staunch> bjs: interesting... thank you, and grym, for helping me think about this :)
[21:28:43] <bjs> Staunch: if you go `self.foo = "baz"` this *creates* a 'foo' for a
[21:28:50] <bjs> Staunch: this example is hard to see because the string is immutable
[21:28:54] <grym> fwiw i don't use class attributes at all, really
[21:28:54] *** Joins: syrius (syrius@titan.stormtek.net)
[21:29:03] <bjs> Staunch: something like https://bpa.st/QDNQ makes this much more clear
[21:29:17] <Staunch> grym: is that just personal preference or is there some antipattern i could fall into?
[21:29:37] <Staunch> oh that does help, thank you bjs
[21:29:53] <bjs> Staunch: yes,  if you have a class you often want attributes for each instance.
[21:29:58] <grym> Staunch: i don't find that i need them in a language that permits namespace-level functions and variables
[21:30:03] *** Quits: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net) (Quit: -)
[21:30:20] <bjs> Staunch: if you have class attributes they are shared, which kind of defeats the point of the class.  In Python you can just have global variables outside of a class.
[21:30:31] <Staunch> grym: the reason i was leaning towards class attributes was because i wanted to make it clear that these were defaults for subclasses, it felt like putting them up at the top would help that
[21:30:50] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:30:51] <grym> Staunch: i don't subclass very much either
[21:30:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:31:04] <Staunch> grym: yeah i try to avoid it too, but i have a situation where that's just honestly the best solution
[21:31:17] *** Joins: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net)
[21:31:18] *** Joins: computeiro (~Wender@189.37.69.108)
[21:31:23] <grym> Staunch: and even if i did, i'd be tempted to have module.SHOUTYCONSTANT and have my clases use that as the default value for an instance attribute in __init__
[21:31:35] <Staunch> haha shouty
[21:31:46] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:02] <Staunch> thank you both for your help, bjs and grym :)
[21:32:26] <grym> i've used "shoutycase" unironically a few times :D
[21:32:40] <bpalmer> I hate shoutycase.
[21:32:51] *** Quits: wender (~Wender@189.37.69.108) (Ping timeout: 265 seconds)
[21:32:51] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:32:51] <grym> it is not my favorite convention
[21:32:54] <grym> but, when in rome i guess
[21:33:14] <bpalmer> I'd much rather call something a module-level variable that doesn't change very often than call it a constant and have to SHOUT it
[21:33:28] <grym> especially when it's not at all enforcable as a constant
[21:33:45] <bpalmer> pi = 3.14  # most of the time, but you never know
[21:33:50] <Staunch> but then you have PYTHONDONTWRITEBYTECODE and i love shouting that at Python
[21:33:54] <grym> bpalmer: when i can, i'll @attr.s(frozen=True) and call normally-named member attributes off an instance of it
[21:35:03] *** Quits: sudorm (~sudorm@2a01cb00838f61008cefccd95538f9d6.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[21:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:36:38] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[21:37:16] *** Joins: wyclif (~wyclif@user/wyclif)
[21:37:26] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[21:37:27] <Wooble> fun fact, you can train your brain to read constants without thinking they're being shouted at you.
[21:37:36] <grym> Wooble: HUH? WHAT?
[21:39:04] <ssbr> is "changing your team style guide to use kFooBar" really brain-training though
[21:40:07] <grym> the sed brain training game
[21:40:47] *** Joins: wender (~Wender@189.37.69.108)
[21:40:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:42:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:42:23] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (WeeChat 3.2)
[21:42:47] *** Joins: wyclif (~wyclif@user/wyclif)
[21:43:29] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 265 seconds)
[21:43:32] *** Quits: computeiro (~Wender@189.37.69.108) (Ping timeout: 252 seconds)
[21:43:32] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:43:55] *** Joins: Auron (~Auron956@user/auron)
[21:44:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[21:44:59] *** Joins: digilink (~digilink@user/digilink)
[21:46:05] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[21:46:07] *** Joins: computeiro (~Wender@189.37.69.108)
[21:46:11] *** Quits: pycode (~pycode@2001:b07:5d28:551:c395:48d5:fd70:7615) (Ping timeout: 250 seconds)
[21:47:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:47:52] *** Quits: wender (~Wender@189.37.69.108) (Ping timeout: 252 seconds)
[21:48:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:49:42] *** Joins: dakotakae (~dakotakae@2601:680:cb80:a6d0:55ac:c798:9769:7935)
[21:50:17] *** Quits: dakotakae (~dakotakae@2601:680:cb80:a6d0:55ac:c798:9769:7935) (Client Quit)
[21:52:20] *** Joins: Naan (~naan@user/naan)
[21:53:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:53:49] *** Joins: wyclif (~wyclif@user/wyclif)
[21:55:06] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:55:38] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[21:56:20] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[21:56:46] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[21:57:17] *** Joins: digilink (~digilink@user/digilink)
[21:57:50] *** Joins: Samian (~Sami@user/samian)
[21:57:59] *** Quits: sandb0y (pirate@user/sandb0y) (Ping timeout: 265 seconds)
[21:58:29] *** Joins: sandb0y (pirate@user/sandb0y)
[21:58:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:58:58] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Client Quit)
[21:58:59] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[21:59:19] *** Joins: wyclif (~wyclif@user/wyclif)
[22:00:49] *** Joins: semeion (~semeion@user/semeion)
[22:00:51] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[22:00:58] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[22:01:23] *** Joins: semeion (~semeion@user/semeion)
[22:02:16] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:02:26] *** Joins: wovixo (~wovixo@128.104.205.49)
[22:02:42] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[22:03:23] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[22:03:41] *** Quits: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:04:02] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:04:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:04:55] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:05:33] *** Joins: rn2208 (~rn2208@5.165.3.137)
[22:05:47] *** Joins: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch)
[22:05:54] <d1rewolf> is there a decent UI for investing python data structures that lives outside of an IDE? Something like the view a graphical debugger would give you, where you can expand/collapse lists and such to inspect?
[22:06:14] <d1rewolf> preferably something which could be launched from or work in concert with pdb?
[22:07:20] <energizer> d1rewolf: investing?
[22:07:25] <InPhase> investigating?
[22:07:54] <d1rewolf> yeah, sorry, investigating/inspecting interactively
[22:08:17] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[22:08:18] <energizer> d1rewolf: what is the "lives outside of an IDE" restriction about?
[22:08:42] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[22:08:43] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-249.hsi5.kabel-badenwuerttemberg.de)
[22:08:44] <d1rewolf> let's say I have a deeply nested data structure, and am at a breakpoint in pdb. would be wonderful to call a GUI app that could make inspecting that data structure easier
[22:08:50] <summonner> d1rewolf, use pythontutor.com
[22:09:08] <d1rewolf> energizer: because often I don't want the pomp and circumstance of an IDE when I just want to inspect data structures
[22:09:09] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[22:09:20] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[22:09:27] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:09:44] <Wooble> summonner: and... magically attach it to pdb?
[22:09:44] <InPhase> d1rewolf: The utility is going to depend on the data types.  If you're talking about lists, dictionaries, strings, and numbers, you can json dump it.
[22:09:45] <energizer> d1rewolf: pudb has that
[22:10:01] <energizer> but it's a tui not a gui
[22:10:03] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[22:10:25] <d1rewolf> nice...tui is fine. I'll look at that. thank you :)
[22:11:08] <InPhase> d1rewolf: In general logging functions are your route to easily inspecting large volumes of data.
[22:11:19] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:11:41] <d1rewolf> InPhase: I don't find logging particularly useful when exploring live data structures that other libraries create
[22:11:42] <apteryx> ChrisWarrick dude-x I've found happiness with pdbpp
[22:12:16] <InPhase> d1rewolf: I do.  But you have to get used to how to use it I guess.
[22:12:21] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Quit: leaving)
[22:12:33] * d1rewolf nods. 
[22:12:43] <InPhase> d1rewolf: And you have to format your logs in a useful manner.
[22:14:05] <InPhase> d1rewolf: A key asset of logging over breakpoints is you can track massive amounts of program flow, generating KB, MB, or GB of logs, and then scroll up and down doing comparisons between various points in a longer run, giving you a full view of behavior.
[22:14:34] <d1rewolf> InPhase: yep...I can see that as a real benefit.
[22:14:42] <InPhase> d1rewolf: You can even write secondary code to analyze logged data and check for flaws or patterns.
[22:16:00] *** Joins: ornxka (~ornxka@user/ornxka)
[22:16:35] <d1rewolf> InPhase: yeah, this is more for exploring and understanding return values from library calls. I can see your logging approach is valuable as well, but I like a visual view of data structures at times
[22:16:44] <summonner> d1rewolf, the instructions are on the webpage, just follow them. it will give you what you're asking for.
[22:16:53] <InPhase> d1rewolf: With the traceback module you can also record stack traces in logs, giving you everything a debugger would give you, but for a full run.
[22:16:56] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[22:17:29] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Client Quit)
[22:17:50] *** Quits: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:17:53] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[22:18:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[22:18:22] <d1rewolf> summonner: thanks for the link. that seems to be for simple programs you can paste into the page, not for complex programs where a lot of custom packages/modules are in plan
[22:18:25] <Wooble> do you log the entire contents of the namespace available to each stack frame constantly while running?
[22:18:25] <ornxka> ive got a main thread which does ui and other stuff and then ive got another thread which listens on a socket and does some stuff. the main thread has to be able to start/stop the listener thread. how can i make my listener thread listen on a socket and also listen for other events from the main thread? like telling it to exit and close its socket and etc
[22:18:38] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[22:19:16] <ornxka> i was thinking for waking up the listener thread to tell it to close its socket i could use a thread sync primitive like threading.Lock but that doesnt give me a fd i can do poll() on
[22:19:29] <summonner> d1rewolf, if you want more advanced, then perhaps Pycharm's debugger can help? If you've tried that and it doesn't work, then I've no other suggestions sorry
[22:20:02] *** Joins: Hackerpcs (~user@user/hackerpcs)
[22:20:05] <InPhase> Wooble: You adjust your logging to what you want to examine.  It tends to take fewer runs than I find myself making in a debugger, and with less time.
[22:20:31] <Wooble> I guess... if you know what you're looking for without debugging.
[22:20:35] <d1rewolf> summonner: yeah, I own pycharm professional and use it. it's just on occasion I want to have something outside of the IDE. pudb looks very promising so far
[22:20:49] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[22:22:09] <d1rewolf> ChrisWarrick: sorry, just saw your response re: Pycharm. Agreed on the "too many features to memorize". what about the most effective way to come up to speed on the various features it has? I find the Idea-provided docs dry and tedious
[22:22:20] <InPhase> Wooble: You have an idea of where to break in a debugger, right?  You output what's active there.  If something doesn't make sense, you backtrack and start logging what led to that value.  In a debugger you would stop debugging and try to go back and insert other breakpoints and restart.  It's basically the same process, but you catch all the passes at once instead of just the first one it hits when you
[22:22:26] <InPhase> insert the breakpoint, so you're not there hitting continue over and over again waiting for your problem case.
[22:24:40] <Staunch> is there documentation on how to make a wrapper able to be called like @wrapper and @wrapper(arg)? I don't know how to describe it to a search enging
[22:24:42] <Staunch> er, engine
[22:24:50] <ChrisWarrick> d1rewolf: try looking through the menus and settings sometimes, perhaps you’ll find things you find helpful
[22:25:01] <bjs> Staunch: there's no fancy trick, it's just a function with an optional argument
[22:25:28] <Staunch> bjs: huh, really? It still gets the wrapper function out even if it's not called?
[22:25:42] *** Joins: akinode63 (~akinode@2a02:908:1394:cce0:74e5:9af0:8c06:4879)
[22:25:44] <Staunch> bjs: or does that @ do all that work?
[22:26:04] <bjs> Staunch: No you misunderstood. `@wrapper def f ..` will call wrapper(f),  `@wrapper(arg) def f` will call wrapper(arg)(f)
[22:26:16] <Staunch> ooooh, i see. I did misunderstand. :)
[22:26:36] <Staunch> so i need wrapper to determine if what it was passed was a callable or not?
[22:26:38] <bjs> Staunch: @ isn't magic, it's just a fancy syntax for a function call.  But this means there's no magic to tell apart different arguments
[22:26:50] <bjs> Staunch: the usual way is to not have optional *positional* arguments like this
[22:27:28] <Staunch> oh i get it. So i could just provide a default, say "", and check to see if my kwarg to wrapper is the default or not?
[22:27:28] <bjs> Staunch: because if you can't tell the difference between wrapper(f) and wrapper(arg) you won't be able to make it work
[22:27:40] <Staunch> thanks again bjs :)
[22:27:47] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 250 seconds)
[22:29:33] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:44] *** Quits: junktext (~junktext@109.201.152.164) (Ping timeout: 252 seconds)
[22:30:14] <bjs> Staunch: here's a way that you can do it, if you're okay with making the options be keyword-only https://bpa.st/ONKQ
[22:31:03] *** Quits: rn2208 (~rn2208@5.165.3.137) (Quit: Leaving)
[22:31:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:32:38] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[22:33:16] *** Joins: Samian (~Sami@user/samian)
[22:33:51] <Staunch> bjs: so this is a mimic of the function that i'm trying to enable being called like @wrapper: https://bpa.st/TAGA
[22:34:01] <Samian> anyone know what TF means in "1TF/s" ? In the context of profiling python code?
[22:34:28] <ChrisWarrick> Samian: where did you see this phrase?
[22:34:36] <grym> teraflop would be my first guess
[22:34:45] <Samian> oh yess that must be it
[22:34:49] <Staunch> bjs: currently it's called all over my library with things like `@wrapper("This is a description of what the class's function is gonna do")`, but i'm about to add a way for the classes to describe themselves. If @wrapper is called, then wrapper would use that describe function.
[22:34:52] *** Quits: xon (~xon@host-70-net-65-160-119.mobilinkinfinity.net.pk) (Remote host closed the connection)
[22:35:07] <bjs> Staunch: why not use a docstring?
[22:35:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:35:18] <Staunch> bjs: i do also use docstrings, but this is for reporting to a log.
[22:35:21] <ChrisWarrick> I’d always seen it spellled something like "tflops", not "tf"
[22:35:21] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[22:35:29] <Samian> "let’s ensure we aren’t stupidly slow - as I’m getting <1TF/s or something" someone messaged me. I felt too humiliated to ask what TF means
[22:36:00] <InPhase> Samian: Teraflops or TransFers.
[22:36:13] <Staunch> bjs: actually here, i can give you the actual code. "beat" is the function that i want to be able to call like @beat: https://github.com/perrygoy/screenpy/blob/trunk/screenpy/pacing.py#L63
[22:36:20] <Samian> it's about profiling pytorch code. it must mean teraflop
[22:36:24] <InPhase> As 1 teraflop is not super slow, probably transfers.  :)
[22:36:31] <Staunch> bjs: here is an example of its current usage: https://github.com/perrygoy/screenpy/blob/trunk/screenpy/actions/click.py#L38
[22:36:39] <grym> pytorch: good for one tensorflow per second
[22:36:49] <grym> :D
[22:37:06] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:37:12] <Samian> How do you measure how many teraflops a second a neural net runs at?
[22:37:15] <InPhase> grym: :)
[22:37:25] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[22:37:33] <Samian> I feel like crap today. I feel like my manager is pissed at me and I feel dumb :/
[22:37:58] <Staunch> bjs: (sorry if that's code overload, i was trying to condense it to its basest form but felt the abstraction was getting in the way)
[22:38:18] <nesoi> Is there a way to make csv.reader reject files that have inconsistent column formatting? I mean, an extra tab appears somewhere at line 20392 or something?
[22:38:23] <InPhase> Samian: Keep in good spirits.  Most of the time when we feel dumb we're no dumber than the other days, and it's just a tricky problem.
[22:38:42] *** Joins: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch)
[22:38:47] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[22:39:01] <grym> Samian: https://imgur.com/gallery/dzbQCj4  always and forever
[22:39:12] <grym> the trick is trusting that you'll transition to the other state
[22:39:14] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[22:39:30] <InPhase> grym: The concern is how rapidly one can transition between those states.
[22:39:58] <grym> InPhase: the mass-spring-dashpot system becomes more controlled as a function of study and experience, you see
[22:40:13] <grym> and eventually when something whomps you with an impulse you don't ring like a bell
[22:41:23] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[22:41:29] *** Quits: y1n (~y1n@178.115.70.148.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[22:41:50] *** Quits: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[22:42:05] *** Quits: rsx (~dummy@ppp-188-174-134-162.dynamic.mnet-online.de) (Quit: rsx)
[22:43:06] <CrtxReavr> How expensive an operations is dict.keys()?
[22:43:07] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:43:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[22:43:25] <grym> pretty cheap.  it's a view, now
[22:43:34] <grym> so it's not building a new collection
[22:44:03] <CrtxReavr> Let me rephrase. . .
[22:44:14] *** Joins: ikus060 (~ikus060@96.127.228.230)
[22:44:50] <CrtxReavr> is it better to run it twice, or to run once, save as a tuple, to read twice?
[22:44:59] <ikus060> Hello, I'm in search of a library to create tkinter interface from XML similar to Jinja2 but for tkinter.
[22:45:30] <Wooble> CrtxReavr: what are you doing with the result?
[22:46:46] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[22:47:17] *** Quits: etienneme (~etienne@user/etienneme) (Ping timeout: 265 seconds)
[22:47:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:36] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 250 seconds)
[22:47:37] <Wooble> (for most operations a dict_keys view object is *probably* better than a tuple.)
[22:47:42] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[22:47:48] <CrtxReavr> Actually. .. think I worked out my own answer, 'cause what I really need as a set from the keys.
[22:48:21] *** Joins: etienneme (~etienne@user/etienneme)
[22:48:21] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:48:35] <grym> CrtxReavr: .keys() is setlike already
[22:49:06] <grym> so you get those operations for free
[22:49:45] *** Joins: alguien (~alguien@user/alguien)
[22:50:01] *** Quits: pro_z (~pro_z@37.214.44.116) (Ping timeout: 252 seconds)
[22:50:06] *** Joins: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de)
[22:50:13] *** Quits: esro (~esro@130.235.200.213.static.wline.lns.sme.cust.swisscom.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:51:17] *** Quits: akinode63 (~akinode@2a02:908:1394:cce0:74e5:9af0:8c06:4879) (Quit: Client closed)
[22:52:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:52:19] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:52:44] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[22:52:56] *** Joins: wyclif (~wyclif@user/wyclif)
[22:53:05] <alguien> I need to call a subprocess with env variables, ie subprocess.call(['smth'], env={...}). How do I prevent my passing in the env argument overwriting the PATH variable?
[22:54:12] <energizer> alguien: pass the variables you want to pass
[22:54:18] *** Joins: y1n (~y1n@91.141.60.235.wireless.dyn.drei.com)
[22:55:05] <bpalmer> you can also just copy the os.environ() result and then set the fields you want to change.
[22:55:12] <alguien> energizer, What do you mean? When I include the env argument, I get "FileNotFoundError: [Errno 2] No such file or directory: 'smth'"
[22:56:08] <grym> myenv=os.environ(); myenv["FOO"] = "bar"; subprocess.run(... env=myenv) is probably the cleanest thing to do in general
[22:56:38] <alguien> bpalmer, thanks for the suggestion
[22:56:49] <Wooble> environ's not a function...
[22:57:03] <bpalmer> sorry, I failed to check.
[22:57:09] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:57:12] <energizer> oddly it's not a dict either
[22:57:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:58:05] <dman777> I am using virtualenv.... can I install python 3.7.9 in it and have it use it? Or do I need to unstall python 3.7.9 outside of virtualenv?
[22:58:08] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[22:58:10] <bpalmer> myenv = dict(os.environ)  to make a copy does work, though.
[22:58:17] <energizer> maybe not so oddly. it's a MutableMapping
[22:58:26] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:33] *** Joins: ErkiS (~opera@85.253.103.121.cable.starman.ee)
[22:58:39] <Wooble> energizer: yeah, it's not that odd since modifying it does fancy putenv stuff
[22:59:06] <grym> dman777: to make a virtual environment of a specific version of the interpreter, you need to have that version installed
[22:59:07] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[22:59:20] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:00:17] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[23:00:22] <Wooble> if you're going to modify os.environ itself without copying, as a bonus you don't need to pass it to the subprocess anymore because you just did.
[23:00:32] *** Quits: y1n (~y1n@91.141.60.235.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[23:01:01] <grym> the ultimate mutable state
[23:01:08] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:01:10] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Read error: Connection reset by peer)
[23:02:02] *** Joins: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de)
[23:02:02] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Remote host closed the connection)
[23:02:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:03:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:03:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:04:00] *** Quits: h4ppy (~happy@user/h4ppy) (Quit: WeeChat 2.8)
[23:04:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:05:21] *** Joins: xon (~xon@host-70-net-65-160-119.mobilinkinfinity.net.pk)
[23:05:49] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06)
[23:05:57] *** Joins: c4017w (~c4017@209.52.68.8)
[23:07:33] <ErkiS> given an object instance method, is there a way to identify which class method it is?
[23:07:34] <ErkiS> e.g. "x = [].append" > how to find out whether x is list.append?
[23:07:48] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[23:08:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:09:07] <energizer> ErkiS: it isn't, it's specific to the particular list
[23:09:11] <energizer> instance
[23:09:25] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:09:29] *** Joins: wyclif (~wyclif@user/wyclif)
[23:10:33] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:10:41] *** Quits: xon (~xon@host-70-net-65-160-119.mobilinkinfinity.net.pk) (Ping timeout: 250 seconds)
[23:10:48] <ErkiS> energizer: yes, x.append isn't the same *object* as list.append. but is there a way to identify that x.append the bound form of list.append?
[23:11:15] <Wooble> ErkiS: in the case of builtins, the __objclass__ attribute will be set.
[23:11:43] <energizer> ErkiS: there's at least .__qualname__, probably something better in `inspect`
[23:11:52] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:12:30] <zln> Is there a simple way to iterate over a range of unicode characters (range: 2800 - 28FF) and concat each to a str variable?
[23:13:04] <energizer> zln: chr(i) for i in range(...)
[23:13:14] <ErkiS> Wooble: >>> [].append.__objclass__ --> AttributeError: 'builtin_function_or_method' object has no attribute '__objclass__'
[23:13:29] *** Joins: y1n (~y1n@178.115.79.56.wireless.dyn.drei.com)
[23:13:43] <Wooble> ErkiS: err, it's only on unbound methods.
[23:13:53] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[23:14:16] <grym> ''.join(chr(i) for i in range(0x2800, 0x28FF))
[23:14:17] <grym> neat
[23:14:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:14:19] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[23:14:24] <grym> TIL range takes hex, though of course it shoudl
[23:14:28] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[23:14:34] <KirkMcDonald> grym: I mean, those are just integers.
[23:14:39] <grym> KirkMcDonald: just so
[23:14:39] <zln> ah, so hex range is possible :p
[23:14:53] <grym> KirkMcDonald: it had just not yet occurred to me to try it
[23:15:00] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:01] *** Joins: erica (~erica@user/erica)
[23:15:05] <grym> map/terrain sneaks up again
[23:15:09] <zln> something new learned today. Thanks both
[23:15:16] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[23:15:20] <CrtxReavr> Set operators are nice syntactically, but set methods seem more useful.
[23:15:21] <KirkMcDonald> However, you may want range(0x2800, 0x2900) here.
[23:15:27] <grym> zln:  ... morse range?
[23:15:32] <ErkiS> energizer: ta, __qualname__ does give "list.append"
[23:15:39] <grym> CrtxReavr: i can never remember what the operators signify either
[23:15:51] <CrtxReavr> grym, I often have to look them up.
[23:15:56] *** Parts: apteryx (~maxim@dsl-10-149-91.b2b2c.ca) ()
[23:16:24] <zln> grym: I'll try to use it as pixels in terminal. If I can manage, I'll use the "pixels" instead of ascii to draw pictures in terminal
[23:16:27] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[23:16:40] <CrtxReavr> Though, since I've been working on them today, | is union, & is intersection, and - is difference.
[23:16:41] *** Quits: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.2)
[23:16:47] <zln> those are smaller than chars, so it would give better "resolution"
[23:16:49] <zln> :D
[23:16:53] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:16:53] *** Joins: schumaml (~schumaml@p200300e2ef24b00053c1821a43d17d29.dip0.t-ipconnect.de)
[23:16:57] *** Joins: Betal (~Betal@user/betal)
[23:17:11] *** Joins: khrbt (~znc@user/khrbt)
[23:18:37] *** Quits: emerent (~quassel@p200300cd5748551fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:18:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:19:00] *** Joins: emerent (~quassel@p200300cd5748553cba27ebfffed28a59.dip0.t-ipconnect.de)
[23:19:04] *** Quits: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[23:19:05] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:19:08] *** Joins: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[23:19:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:19:47] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[23:20:30] *** Joins: wyclif (~wyclif@user/wyclif)
[23:20:35] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[23:21:55] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[23:22:23] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 250 seconds)
[23:22:29] *** Joins: Samian (~Sami@user/samian)
[23:23:02] <Samian> haha grym  thanks for that imgur link. It made me feel better
[23:23:04] <Samian> gtg
[23:23:11] <grym> Samian: it's on my office wall
[23:23:19] <grym> so i don't forget either
[23:23:31] <grym> (next to a julian of norwich quote, also oddly appropriate in a plague year)
[23:23:42] *** Quits: yaalon (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com) (Read error: Connection reset by peer)
[23:23:51] *** Joins: yaalon_ (~yaalon@rrcs-72-131-195-82.sw.biz.rr.com)
[23:24:21] *** Joins: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0)
[23:24:31] *** Quits: Samian (~Sami@user/samian) (Client Quit)
[23:24:35] *** Joins: digilink (~digilink@user/digilink)
[23:25:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:26:00] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:17] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[23:26:29] *** Joins: emf (~emf@2620:10d:c090:400::5:38ea)
[23:26:55] <d1rewolf> I have some complex pdfs I need to extract text from. Currently experimenting with pdfminer.six, but it's struggling to maintain the order of some elements. What would you consider the best python (or other) library/utility for reliably extracting text from pdf?
[23:28:01] *** Quits: akinode (~akinode@2a02:908:1394:cce0:74e5:9af0:8c06:4879) (Quit: Client closed)
[23:28:11] <briian> d1rewolf: do you know how the pdfs were generated?
[23:28:29] <d1rewolf> briian: I don't. they are issued by a division of the US Gov
[23:29:04] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:29:10] <d1rewolf> they let you download the pdfs, but not sure how they were created. text is selectable within a pdf viewer, so they're not simply embedded images
[23:29:16] <briian> I used to have a java executable that converted pdfs into like csv format I think.. it was a pain in the ass because of the nature of pdfs
[23:29:24] <CrtxReavr> They should contain some kind of metadata to indicate what software created them.
[23:29:49] <dman777> "the conflict is caused by: botocore 1.18.9 depends on urllib3<1.26 and >=1.20; python_version != "3.4".... does this mean python version needs to be 3.4?
[23:29:56] <d1rewolf> and pdfminer gets much of the text, but doesn't maintain the order properly
[23:29:58] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 260 seconds)
[23:30:01] <briian> I can see if I can find that, I shelled out from php at the time to call the executable and return data lol, dunno if I would know a better way to do it now
[23:30:14] <d1rewolf> CrtxReavr: via file <filename>? If so, "/tmp/sample.pdf: PDF document, version 1.6 (password protected)"
[23:30:14] *** Joins: badsektor (~badsektor@user/badsektor)
[23:30:17] <CrtxReavr> dman777, you're callig urllib3 directly?
[23:30:25] <d1rewolf> which is odd, since it's not password protected ;)
[23:30:37] <d1rewolf> briian: I appreciate whatever you can find :)
[23:30:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:30:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:30:56] <dman777> CrtxReavr: no.... it's pip install -r requirements
[23:31:10] <CrtxReavr> o_O.
[23:31:30] *** Joins: wyclif (~wyclif@user/wyclif)
[23:32:46] *** Joins: fikran (~fikran@user/fikran)
[23:32:47] <briian> d1rewolf: give this a shot https://github.com/tabulapdf/tabula-java
[23:33:16] <d1rewolf> briian: nice...thanks!
[23:33:21] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[23:33:25] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[23:33:42] *** Quits: zeromule (~eric@2601:602:8d80:4e50:989c:b980:7a01:58f0) (Ping timeout: 260 seconds)
[23:34:10] <briian> anyone know any open source projects on github that use Click? I have a click-based CLI app at work and we're trying to make it more maintainable so I'm looking for a way to structure the project
[23:34:22] *** Quits: cul8r (~cul8r@76.113.95.199) (Quit: Leaving)
[23:35:03] <mefistofeles> briian: https://github.com/pallets/click/network/dependents?package_id=UGFja2FnZS01MDc2MTMyMQ%3D%3D I guess this might help
[23:35:18] <mefistofeles> briian: you might want to filter the ones with the most stars or something like that
[23:35:53] <briian> cool, thanks. dont use github enough I guess
[23:36:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:37:02] *** Joins: wyclif (~wyclif@user/wyclif)
[23:37:43] <briian> d1rewolf: python version: https://tabula-py.readthedocs.io/en/latest/
[23:37:54] <briian> I guess it requires the data to be in tables.. but I feel like pdf is all tables for some reason
[23:37:56] <briian> I might be wrong
[23:38:03] <d1rewolf> briian: tabula itself is very interesting. thanks for the heads up on it
[23:38:06] <briian> np
[23:38:09] <d1rewolf> I think this pdf is mostly tables :)
[23:38:32] <energizer> briian: my conclusion is to avoid the click functions and use the classes instead. no decorators
[23:39:12] <mefistofeles> energizer: why is that?
[23:39:45] <CrtxReavr> energizer, that seems misguided, given the intention of click.
[23:39:59] <CrtxReavr> ie., auto-completing CLI interfaces.
[23:40:05] *** Quits: emf (~emf@2620:10d:c090:400::5:38ea) (Quit: emf)
[23:40:07] <ssbr> Compare/contrast: s[s.find('.') + 1:] vs s.split('.', 1)[-1]
[23:40:14] *** Quits: gitly (~gitly@185.69.144.134) (Ping timeout: 260 seconds)
[23:40:18] <ssbr> I really almost wrote the first one.
[23:40:19] <energizer> CrtxReavr: using classes doesn't affect the autocomplete
[23:40:31] *** Joins: Pickchea (~private@user/pickchea)
[23:40:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[23:40:46] <ssbr> Also I meant rfind and rsplit but whatever
[23:41:14] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[23:41:16] *** Joins: emf (~emf@2620:10d:c090:400::5:38ea)
[23:41:23] <energizer> mefistofeles: so you have a clean python api, with a thin cli wrapper, not a cli with no python api
[23:41:32] *** Joins: badsektor (~badsektor@user/badsektor)
[23:41:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[23:41:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:42:00] <grym> energizer: have you played with typer yet?
[23:42:01] <mefistofeles> energizer: ah ok, yes, I can see that
[23:42:14] *** Joins: gitly (~gitly@85.255.236.215)
[23:42:17] <grym> energizer: which took ~your observation but went hard into annotations instead with it
[23:42:20] * mefistofeles still uses argparse :P
[23:42:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:42:50] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:43:44] *** Joins: eem (~eem@user/eem)
[23:43:46] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:43:48] <energizer> grym: i've heard of it but haven't dived in
[23:43:55] *** Quits: trace987 (~trace@dynamic-002-247-250-105.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[23:43:58] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:44:32] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:45:47] <grym> energizer: i've been enjoying it so far: https://tildegit.org/grym/oxo/src/branch/master/oxo/__main__.py
[23:46:54] <energizer> mhmm
[23:47:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:48:03] *** Joins: wyclif (~wyclif@user/wyclif)
[23:48:42] *** Joins: nomic2 (~nomic@185.192.69.192)
[23:49:00] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:49:07] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:90f0:2fd8:1259:c06) (Ping timeout: 240 seconds)
[23:49:59] <briian> energizer: im not sure what you mean
[23:50:12] <briian> I dont have a ton of click experience, project was started by someone else
[23:51:42] *** Joins: quakeusr (~quakeusr@user/quakeusr)
[23:52:18] <dman777> getting this from pip install -r requirements.txt https://dpaste.org/5av3 Can I just install a exact version of urllib3 to fix this? And why does it mean python_version != "3.4"?
[23:52:19] <energizer> briian: the most important thing is have a cli.py that contains all your click code and **no** program logic
[23:52:22] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:52:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:52:49] <briian> energizer: gotcha. we were moving in that direction but haven't quite figured it out yet
[23:53:10] <briian> so you register commands in there and it calls them in their individual locations then?
[23:53:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:53:15] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[23:53:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:53:39] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[23:53:43] <briian> I wish click wasnt such a generic word.. would prob be easier to find resources online
[23:53:46] <energizer> briian: yes. don't put click decorators on the functions that are in main.py
[23:54:30] <briian> interesting ill have to look into that
[23:56:34] *** Quits: sale (~sale@ypocit.initech.link) (Ping timeout: 252 seconds)
[23:56:34] *** Quits: schumaml (~schumaml@p200300e2ef24b00053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:58:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:58:35] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[23:59:05] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:41] *** Joins: sale (~sale@ypocit.initech.link)
