[00:09:29] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 250 seconds)
[00:11:56] <mischief> is it not ok to call realloc on a undefined slice?
[00:16:23] *** Joins: tomku (~tomku@user/tomku)
[00:19:18] *** Joins: renart (~renart@vps-cd09895e.vps.ovh.net)
[00:19:23] <andrewrk> the slice itself must be defined, i.e. the ptr and len must be defined, but it may point to undefined memory
[00:20:27] <mischief> i ended up writing `data: []u8 = &.{}`
[00:20:37] <mischief> figuring out how to allocate memory was quite an adventure :)
[00:29:06] *** Quits: moog (~moog@107.126.53.185) (Remote host closed the connection)
[00:31:25] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[00:44:53] *** Joins: moog (~moog@107.126.53.185)
[00:47:23] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[01:00:18] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[01:11:30] *** Joins: renart_ (~renart@vps-cd09895e.vps.ovh.net)
[01:11:38] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:df76:acbe:d10e:9929) (Ping timeout: 268 seconds)
[01:11:53] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[01:11:55] *** Quits: renart (~renart@vps-cd09895e.vps.ovh.net) (Quit: leaving)
[01:11:55] *** Quits: renart_ (~renart@vps-cd09895e.vps.ovh.net) (Client Quit)
[01:12:12] *** Joins: bindu (~bindu@user/bindu)
[01:16:40] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:17:02] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:18:21] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:2041:fb8e:e9e8:4651)
[01:22:09] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fdee:2366:21cc:ffdf) (Ping timeout: 252 seconds)
[01:22:31] *** cr1901_ is now known as cr1901
[01:36:34] <mischief> how do i safely make '[*c]const u8' from '[]const u8' to pass to a C function?
[01:37:23] *** Joins: jjido (~Denis@90.213.58.125)
[01:37:46] <ifreund> mischief: does the C function expect a 0 terminated pointer?
[01:38:28] <mischief> yes
[01:38:43] <ifreund> if so you could use std.mem.Allocator.dupeZ() or otherwise refactor to get a [:0]const u8
[01:41:21] <mischief> hm.. maybe confused about how to use it.
[01:41:40] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[01:42:20] <mischief> oh!
[01:42:25] <mischief> crazy, it works now :)
[01:47:26] <ifreund> mischief: a []const u8 isn't guarenteed to have a 0 in memory one past the end of the slice, so if you were to pass that pointer directly to the C API it would read past the end of the slice until it happens to find a 0, resulting in garbage data or a SEGFAULT
[01:47:46] <mischief> it did indeed result in a runtime error
[01:47:51] <mischief> curl did not like the URL
[01:48:08] <ifreund> garbage data in that case then I assume ;D
[01:51:07] <mischief> ifreund: extremely jank but i can now print the temperature where i live http://ix.io/3HKX
[01:52:39] <ifreund> mischief: nice! If you feel like getting rid of the dupeZ() you could use bufPrintZ() instead and have your function take a [:0]const u8
[01:53:58] <mischief> not sure how to feel about it yet but here's my lua program i normally use for this http://ix.io/2P67
[01:56:59] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[01:57:02] <ifreund> that https library for lua looks to be a lot less verbose than curl for sure :D
[02:02:47] <mischief> well, it's a high level interface instead of massaging cURL api directly..
[02:14:19] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:14:59] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[02:15:28] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:16:34] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 260 seconds)
[02:17:48] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[02:20:26] <andrewrk> I feel that @TagType was better than @typeInfo(Symbol.Type).Union.tag_type.?
[02:24:41] <ifreund> std.meta.Tag() isn't bad though
[02:25:12] <andrewrk> true however I don't think one should have to reach into std.meta for everyday language tasks such as coercing a union to its enum tag
[02:25:55] <ifreund> I don't really have a strong opinion either way, std.meta.Tag() keeps the compiler implementation a bit smaller which I like
[02:26:29] <ifreund> I'm just about finised replacing c_void with anyopaque by the way
[02:26:44] <ifreund> got tired of seeing c_void in my pure zig code
[02:28:20] *** Joins: marx (~marx@94.31.98.63)
[02:28:52] <g-w1> trying to get in changes before 0.9? :P
[02:31:53] <ifreund> maybe... :P
[02:32:29] *** Quits: marx (~marx@94.31.98.63) (Client Quit)
[02:32:52] *** Joins: marx117 (~marx117@94.31.98.63)
[02:34:42] *** Quits: marx117 (~marx117@94.31.98.63) (Client Quit)
[02:35:24] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:abae:3f35:21c7:3fc)
[02:35:46] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:abae:3f35:21c7:3fc) (Client Quit)
[02:38:38] *** Joins: marx (~marx@94.31.98.63)
[02:39:03] *** Parts: marx (~marx@94.31.98.63) ()
[02:43:25] <ikskuh> is there any magic to capture NaN values?
[02:43:47] *** Joins: marxn (~marx@94.31.98.63)
[02:44:16] <marxn> (7th time the charm) hey, so I pretty much just started with zig today and I quite like what I'm seeing so far. One question though where I'm really unsure if I'm holding it wrong or not: I read some stuff from a file and now have a slice, that I want to interpret as a packed struct. But @bitCast only seems to accept arrays ("expected type
[02:44:16] <marxn> [1234]u8"). Is there some way to have bitCast directly work on a slice instead of creating a temporary copy of the slice into a local array and then passing that into bitCast?
[02:44:49] <ikskuh> there's magic that happens when you slice a slice with comptime known length:
[02:45:04] <ikskuh> var arr: *[4]u8 = slice[offset..][0..4];
[02:45:19] <ikskuh> so
[02:45:32] <ikskuh> @bitCast(MyStruct, slice[offset..][0..@sizeOf(MyStruct)].*)
[02:45:36] <ikskuh> will do the job
[02:48:10] <marxn> hmm it still complains: unable to @bitCast from pointer type *[74]u8
[02:48:19] <marxn> the slice is a []u8
[02:48:53] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:29] <marxn> oh, missed the .*
[02:49:44] <marxn> thanks!
[03:04:29] <marxn> hmm so <slice>.* basically gets you <slice>.ptr, but typed as a fixed array [slice.len]T?
[03:12:56] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[03:15:09] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[03:15:12] <ifreund> marxn: no, slice.* is a compile error if slice is a slice type []T
[03:15:31] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[03:15:44] <ifreund> the slicing syntax foo[0..4] will result in a pointer to array instead of a slice if the slicing bounds are comptime known
[03:16:09] <ifreund> so if foo has type []u32 then foo[0..4] will have type *[4]u32
[03:16:26] <ifreund> and you can dereference *[4]u32 to get [4]u32
[03:16:32] <ifreund> that all make sense?
[03:18:51] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[03:19:37] <marxn> okay, so arrays in zig are value types?
[03:21:00] <ikskuh> yeah
[03:21:59] *** Joins: nyah (~nyah@94.6.71.219)
[03:33:33] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:36:11] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:37:05] *** Quits: noeontheend_ (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[03:37:05] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[03:39:30] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[03:48:05] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:22:00] *** Quits: marxn (~marx@94.31.98.63) (Quit: Client closed)
[04:24:38] *** Joins: livoreno (~livoreno@user/notzmv)
[04:32:53] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[05:00:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:05:43] *** Quits: hspak (~hspak@user/hspak) (Quit: The Lounge - https://thelounge.chat)
[05:07:14] *** Joins: hspak (~hspak@user/hspak)
[05:16:18] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:17:46] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[05:18:27] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[05:23:24] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:31:57] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:39:33] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:39:37] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[05:40:51] <mischief> how do i deal with an error union type optional, such as what readUntilDelimiterOrEof returns?
[05:41:43] <mischief> i see that i can use 'try' to return the error, but is there a way to unwrap the optional without using another level of indentation such as if(foo) |thefoo| {} ..?
[05:42:32] <g-w1> (foo orelse return)
[05:46:24] <perro> https://ziglearn.org/chapter-2/#filesystem
[05:46:28] <perro> swa tht there
[05:46:47] <perro> the (try x) orelse null;
[05:51:38] *** Quits: moog (~moog@107.126.53.185) (Remote host closed the connection)
[05:59:03] *** Joins: moog (~moog@107.126.53.185)
[06:03:10] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Quit: Leaving)
[06:03:38] *** Joins: noeontheend_ (~noeonthee@207.237.194.194)
[06:03:38] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:05:00] *** Joins: ur5us (~ur5us@203.86.198.200)
[06:06:51] *** Quits: terinjokes (~terinjoke@178.128.12.126) (Quit: ZNC 1.8.2 - https://znc.in)
[06:07:17] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[06:07:47] *** Quits: noeontheend_ (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[06:07:47] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[06:14:23] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 252 seconds)
[06:18:41] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[06:19:22] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[06:24:53] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[06:30:35] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[06:30:55] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[06:36:46] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 256 seconds)
[06:38:17] *** Joins: outfox (~outfox@213.144.147.16)
[06:38:17] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[06:38:17] *** Joins: outfox (~outfox@user/outfox)
[07:18:23] *** Joins: xd1le (~xd1le@user/xd1le)
[07:19:36] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[07:20:07] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:32] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[07:55:28] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:02:55] *** Quits: moog (~moog@107.126.53.185) (Remote host closed the connection)
[08:12:46] *** Quits: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001) (Quit: ZNC 1.8.2 - https://znc.in)
[08:13:23] *** Joins: terinjokes (~terinjoke@2604:a880:2:d0::227b:f001)
[08:20:22] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[08:20:55] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[08:26:13] <mischief> implemented very crappy version of openbsd's signify using the built in ed25519 code. very neat!
[08:26:31] <mischief> is there a standard argument parser?
[08:48:37] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:18:15] *** Joins: Kingsquee (~Kingsquee@2001:569:53a4:7500:3ba8:98b7:92c9:7e05)
[09:21:10] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[09:21:37] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[09:28:56] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[09:55:51] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 252 seconds)
[10:00:32] <squeek502> mischief, not in the std lib, one option is https://github.com/Hejsil/zig-clap/
[10:02:59] *** Joins: rgrinberg (~textual@187.223.209.106)
[10:03:01] *** Joins: isolier3 (~isolier@174.31.3.60)
[10:03:08] *** Quits: isolier (~isolier@174.31.3.60) (Read error: Connection reset by peer)
[10:37:20] *** Joins: phaleth (~phaleth@user/phaleth)
[10:43:46] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[11:22:30] *** Joins: frett27 (~frett27@2a01:e0a:58a:6c00:2edb:55a1:5118:ac72)
[11:23:52] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:24:24] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[11:34:32] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[11:35:52] *** Joins: Techcable (~Techcable@168.235.93.147)
[12:06:01] *** Quits: isolier3 (~isolier@174.31.3.60) (Read error: Connection reset by peer)
[12:06:51] *** Joins: isolier3 (~isolier@174.31.3.60)
[12:24:39] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[12:25:01] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[12:28:43] *** Joins: jjido (~Denis@90.213.58.125)
[12:38:42] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:59:23] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:09:21] *** Quits: Kingsquee (~Kingsquee@2001:569:53a4:7500:3ba8:98b7:92c9:7e05) ()
[13:15:45] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[13:21:37] *** Joins: jjido (~Denis@90.213.58.125)
[13:25:16] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[13:25:55] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[13:28:42] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[13:32:08] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[13:36:03] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[13:37:35] *** Joins: haliucinas (~haliucina@5.20.153.21)
[13:38:59] <slowjo> is it possible to somehow initialize std.ArrayListUnmanaged with an array as backing storage to be able to use it without the allocator?
[13:39:27] <slowjo> (as long as it doesn't grow over the bounds of the array)
[13:39:35] *** Joins: earnestly (~earnest@user/earnestly)
[13:40:19] <slowjo> seems like i'd just have to set the .capacity to the length of the array, and the .items to a slice backed by the array
[13:40:45] <slowjo> but i can't seem to figure out how to coerce the array into the .items slice
[13:41:39] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:43:06] <ifreund> slowjo: you probably want std.BoundedArray
[13:44:18] <ifreund> you could use std.ArrayListUnmanaged but you'd need to store the array in a separate variable, arrays are values in Zig not pointers like in C
[13:44:35] <slowjo> ifreund: TIL
[13:44:45] <slowjo> thanks!
[13:44:50] <ifreund> if you store it in a separate mutable variable then you can take a pointer to the array which will coerce to a slice
[13:44:54] <ifreund> no problem!
[13:45:28] <slowjo> > store array in separate variable: something to remember
[13:46:24] <slowjo> the stdlib really has a lot more to offer than i always expect 
[13:54:55] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[13:56:58] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:03:52] *** Quits: viric (~viric@static-74-45-229-77.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[14:15:53] *** Joins: breavyn (~breavyn@user/breavyn)
[14:16:20] *** Quits: breavyn_ (~breavyn@user/breavyn) (Ping timeout: 256 seconds)
[14:24:44] *** Joins: xackus_ (~xackus@218x.knc.pl)
[14:26:09] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[14:26:24] *** Joins: terminalpusher (~terminalp@2a01:586:1f85:1:5063:4755:1e14:fcec)
[14:26:37] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[14:27:19] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:fd0d:ba95:6631:bcc3)
[14:31:51] *** Joins: rslabbert (91146de1f6@2604:bf00:561:2000::240)
[14:42:35] *** Joins: livoreno (~livoreno@user/notzmv)
[14:47:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[14:53:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[14:56:06] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:fd0d:ba95:6631:bcc3) (Ping timeout: 268 seconds)
[14:56:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:04:21] <Franciman> zigging my way to the top
[15:15:04] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[15:21:17] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[15:26:52] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[15:27:19] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
[15:34:40] *** Joins: livoreno (~livoreno@user/notzmv)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:11] *** Quits: xackus_ (~xackus@218x.knc.pl) (Ping timeout: 250 seconds)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:07:21] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:16:55] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:2041:fb8e:e9e8:4651) (Remote host closed the connection)
[16:17:12] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:c5a3:569e:5967:acda)
[16:17:24] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:2041:fb8e:e9e8:4651)
[16:44:01] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:c5a3:569e:5967:acda) (Ping timeout: 268 seconds)
[16:44:49] *** Joins: lumo_e (~enrico@93.56.64.2)
[16:48:58] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[16:54:22] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 260 seconds)
[17:04:38] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[17:14:14] *** Joins: tomku (~tomku@user/tomku)
[17:14:38] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[17:16:33] *** Joins: jjido (~Denis@90.213.58.125)
[17:43:58] *** Joins: arkurious (~arkurious@user/arkurious)
[17:56:46] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:02:52] *** Joins: pkap (~pkap@185.213.155.160)
[18:12:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:21:27] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[18:23:30] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[18:26:24] *** Quits: lumo_e (~enrico@93.56.64.2) (Ping timeout: 268 seconds)
[18:30:07] *** Quits: pkap (~pkap@185.213.155.160) (Ping timeout: 256 seconds)
[18:36:43] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[18:37:35] *** Joins: fwg (~fwg@user/fwg)
[18:45:38] *** Joins: nyah (~nyah@94.6.71.219)
[18:47:50] *** Joins: moog (~moog@107.126.53.217)
[19:27:51] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:2edb:55a1:5118:ac72) (Ping timeout: 252 seconds)
[19:37:53] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[19:38:59] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:40:14] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:42:07] *** Joins: frett27 (~frett27@2a01:e0a:58a:6c00:b01f:a7d2:ca4a:6d5f)
[19:43:56] *** Joins: okx (~okx@84.66.62.115)
[19:53:56] *** Joins: lumo_e (~enrico@151.29.48.90)
[20:01:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:02:48] *** Joins: jjido (~Denis@90.213.58.125)
[20:09:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[20:13:41] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 268 seconds)
[20:23:19] *** Joins: lumo_e (~enrico@151.29.48.90)
[20:29:58] *** Quits: lumo_e (~enrico@151.29.48.90) (Ping timeout: 260 seconds)
[20:42:34] *** Quits: frett27 (~frett27@2a01:e0a:58a:6c00:b01f:a7d2:ca4a:6d5f) (Ping timeout: 260 seconds)
[21:10:53] *** Quits: haze (~haze@2603-7000-a300-1741-4cd9-af3a-b8a1-08f7.res6.spectrum.com) (Ping timeout: 252 seconds)
[21:15:42] *** Joins: frett27 (~frett27@2a01:e0a:58a:6c00:67fa:3923:5dd6:4325)
[21:25:56] *** Quits: earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[21:27:00] *** Joins: earnestly (~earnest@user/earnestly)
[21:35:06] *** Quits: Arw (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[21:42:07] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[21:42:32] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:44:41] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:47:43] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[21:48:15] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:59:09] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[21:59:38] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[21:59:38] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[21:59:38] *** Joins: tane (~tane@user/tane)
[22:01:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:05:03] *** Quits: Snetry (~snetry@ipservice-092-209-148-073.092.209.pools.vodafone-ip.de) (Quit: left Libera)
[22:06:08] *** Joins: Snetry (~snetry@ipservice-092-209-148-073.092.209.pools.vodafone-ip.de)
[22:15:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:17:33] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[22:18:49] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:21:42] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Read error: Connection reset by peer)
[22:22:01] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:23:22] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:25:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:26:07] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 250 seconds)
[22:29:32] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[22:30:22] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:40:05] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:49:18] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:56:30] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[23:00:44] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[23:01:13] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[23:08:11] *** Joins: rgrinberg (~textual@187.223.209.106)
[23:50:12] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:58:01] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[23:58:09] *** Quits: tgschultz (UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[23:58:41] *** Joins: tgschultz (UserNick@047-034-058-084.res.spectrum.com)
