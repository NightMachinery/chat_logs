[00:01:35] *** Joins: matty_matt (~matt@135.129.244.71)
[00:01:51] *** Joins: Techcable (~Techcable@168.235.93.147)
[00:06:09] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[00:06:35] *** Quits: uncleyear (~ian@pppoe.178-66-158-245.dynamic.avangarddsl.ru) (Read error: Connection reset by peer)
[00:07:18] *** Joins: uncleyear (~ian@pppoe.178-66-159-182.dynamic.avangarddsl.ru)
[00:29:11] *** Joins: matty_matt (~matt@135.129.244.71)
[00:29:59] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:34:31] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[00:35:05] *** Quits: lunik1 (~lunik1@37.205.14.203) (Quit: :x)
[00:38:28] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:41:21] *** Joins: lunik1 (~lunik1@37.205.14.203)
[00:42:07] *** Quits: lunik1 (~lunik1@37.205.14.203) (Client Quit)
[00:44:57] *** Joins: matty_matt (~matt@135.129.244.71)
[00:49:03] *** Joins: lunik1 (~lunik1@37.205.14.203)
[00:50:13] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[00:50:37] <teddyc> i'm possibly abusing syntax, but why does not this line work inside a threading macro? (map #(Integer/parseInt %)). My lsp says "Expected seqable collection, received: function"
[00:51:43] <ridcully> is the threading macro ->> ?
[00:51:48] <teddyc> no, sorry
[00:51:51] <teddyc> -> this one
[00:52:08] <ridcully> if you macro expand this, you will see the problem
[00:52:15] <ridcully> map takes the seq as second argument
[00:52:27] <ridcully> so you are basically wring (map xs f)
[00:53:31] <ridcully> if you are not using transducers, using ->> is very common to chain transforms.  -> is more useful to chain drilling down a value
[00:54:04] <teddyc> ah, thats maybe what I want to use
[00:54:07] <ridcully> (->> data (map f) (filter f) (count)) vs (-> response :body :results :number)
[00:54:16] <teddyc> i'm thinking like unix-pipes in my head
[00:55:12] <teddyc> sweet, thank u
[00:56:00] <ridcully> yw
[01:11:54] *** Quits: v3ga (~v3ga@2600:1702:ad0:3b90::40) (Ping timeout: 265 seconds)
[01:12:13] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Ping timeout: 240 seconds)
[01:12:56] *** Joins: matty_matt (~matt@135.129.244.71)
[01:13:01] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[01:17:33] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[01:19:38] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 265 seconds)
[01:39:57] *** Joins: Trieste (~T@user/pilgrim)
[01:41:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:41:44] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:41:46] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[01:42:16] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[01:54:07] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[01:56:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:57:15] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:59:01] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:59:26] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:10:00] *** Joins: matty_matt (~matt@135.129.244.71)
[02:12:31] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 256 seconds)
[02:14:15] *** Quits: op2 (~op2@user/op2) (Ping timeout: 265 seconds)
[02:14:44] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[02:26:20] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Ping timeout: 265 seconds)
[02:26:20] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[02:34:41] *** Joins: matty_matt (~matt@135.129.244.71)
[02:38:01] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[02:39:01] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[02:39:15] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[02:43:41] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 256 seconds)
[02:47:38] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Quit: WeeChat 3.3)
[02:47:54] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[02:48:54] *** Quits: to-hu (~Thunderbi@p200300e9af32e70001208d9dc9ea3daf.dip0.t-ipconnect.de) (Quit: to-hu)
[02:56:47] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Quit: WeeChat 3.3)
[02:57:34] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[03:08:10] *** Joins: karthink[m] (~karthinkm@2001:470:69fc:105::d777)
[03:19:50] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[03:21:45] *** Joins: matty_matt (~matt@135.129.244.71)
[03:27:57] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[03:40:55] *** Joins: matty_matt (~matt@135.129.244.71)
[03:41:49] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[03:50:54] *** Quits: yewscion (~yewscion@52.94.133.131) (Quit: Connection closed)
[03:52:47] *** Joins: uncleyea1 (~ian@pppoe.178-66-158-210.dynamic.avangarddsl.ru)
[03:53:16] *** Quits: harryvederci (aca786de33@2604:bf00:561:2000::233) (Changing host)
[03:53:16] *** Joins: harryvederci (aca786de33@user/harryvederci)
[03:56:14] *** Quits: uncleyear (~ian@pppoe.178-66-159-182.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[03:56:33] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[03:58:06] *** Joins: matty_matt (~matt@135.129.244.71)
[04:02:16] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[04:03:25] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[04:03:42] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[04:08:03] *** Joins: matty_matt (~matt@135.129.244.71)
[04:37:31] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:47] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[04:42:09] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Ping timeout: 265 seconds)
[04:43:56] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[04:46:01] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[04:58:07] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[05:01:19] *** Joins: matty_matt (~matt@135.129.244.71)
[05:02:55] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 252 seconds)
[05:08:25] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[05:15:21] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:19:12] *** Joins: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com)
[05:19:35] *** Quits: mikemar10 (~mikemar10@216-177-191-54.block0.gvtc.com) (Read error: Connection reset by peer)
[05:38:09] *** Quits: nighcoder (~ciumbi@206.176.143.59) (Remote host closed the connection)
[05:38:22] *** Joins: matty_matt (~matt@135.129.244.71)
[06:07:20] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Quit: WeeChat 3.3)
[06:07:36] *** Joins: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com)
[06:09:39] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Client Quit)
[06:19:32] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:19:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:22:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[06:28:37] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[06:30:11] *** Quits: rjk_ (sid809@id-809.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[06:32:24] *** Joins: libertyprime (~libertypr@203.211.78.24)
[06:33:30] *** Joins: matty_matt (~matt@135.129.244.71)
[06:44:49] *** Joins: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net)
[06:53:08] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[06:58:56] *** Quits: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[07:04:50] *** Joins: mbuf (~Shakthi@223.178.121.64)
[07:44:18] *** Quits: libertyprime (~libertypr@203.211.78.24) (Quit: leaving)
[07:44:55] *** Joins: matty_matt (~matt@135.129.244.71)
[07:49:41] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[07:57:05] *** Joins: matty_matt (~matt@135.129.244.71)
[08:03:12] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[08:27:47] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:35:11] *** Joins: libertyprime (~libertypr@203.211.78.24)
[08:39:35] *** Quits: libertyprime (~libertypr@203.211.78.24) (Client Quit)
[08:59:45] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[09:04:13] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 240 seconds)
[09:21:08] *** Joins: libertyprime (~libertypr@203.211.78.24)
[09:24:32] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:31:06] *** Joins: yewscion (~yewscion@c-24-131-220-23.hsd1.pa.comcast.net)
[09:32:53] *** res0nat0r8 is now known as res0nat0r
[09:43:01] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[09:46:11] *** Joins: shiranaihito (~textual@219.85.168.139)
[09:58:37] *** Quits: libertyprime (~libertypr@203.211.78.24) (Quit: leaving)
[10:11:25] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[10:20:58] *** Joins: libertyprime (~libertypr@151.210.172.180)
[10:21:03] *** Quits: libertyprime (~libertypr@151.210.172.180) (Client Quit)
[10:32:20] *** Quits: shiranaihito (~textual@219.85.168.139) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:38:03] *** Quits: yewscion (~yewscion@c-24-131-220-23.hsd1.pa.comcast.net) (Quit: Connection closed)
[10:43:26] *** Joins: shiranaihito (~textual@2001-b011-4000-3b84-c87e-8dc1-00d9-eb8f.dynamic-ip6.hinet.net)
[11:00:34] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[11:05:01] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 240 seconds)
[11:28:38] *** Joins: struchu (~struchu@62.87.192.114)
[11:34:19] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[11:40:07] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Remote host closed the connection)
[12:01:15] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[12:05:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:06:20] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 265 seconds)
[12:19:51] *** Joins: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net)
[12:35:24] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[12:39:04] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[12:40:32] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:02:15] *** Joins: matty_matt (~matt@135.129.244.71)
[13:06:37] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[13:08:22] *** Joins: to-hu (~Thunderbi@p57b5aa80.dip0.t-ipconnect.de)
[13:17:01] <rovanion> Anybody happen to know how one augments ajax/transit-response-format to accept custom formats like the time formats in luminus-transit.time. Just passing it like (ajax/transit-response-format {:handlers time/time-deserialization-handlers}) does not seem to work :/
[13:36:37] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[13:40:39] *** Joins: struchu (~struchu@62.87.192.114)
[13:45:25] *** Joins: awb99 (~quassel@80-110-207-163.static.upcbusiness.at)
[14:02:03] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[14:07:10] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 265 seconds)
[14:18:42] *** Joins: matty_matt (~matt@135.129.244.71)
[14:30:43] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[14:31:59] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 252 seconds)
[14:35:17] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 252 seconds)
[14:36:51] *** Joins: op2 (~op2@user/op2)
[14:37:57] *** Quits: op2 (~op2@user/op2) (Client Quit)
[14:38:18] *** Joins: op2 (~op2@user/op2)
[14:45:00] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:45:33] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[14:46:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[14:48:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:50:53] *** Joins: tatsumaru (~tatsumaru@78.83.244.47)
[14:51:30] <tatsumaru> hey guys, noob question - when clojure.jar translate clojure into java bytecode does it convert clojure source into java source first or does it go straight to java bytecode
[14:52:37] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[14:53:49] <ridcully> tatsumaru: straight to bytecode
[14:55:58] <tatsumaru> ridcully: i see thanks
[14:57:37] <ridcully> tatsumaru: i'd say roughly in clojure.asm is where the magic is happening
[14:58:50] <tatsumaru> is clojure.jar passing clojure source to clojre.asm?
[15:04:37] <tatsumaru> on second thought that doesn't make any sense
[15:15:53] <ridcully> clojuere.jar sounds alot more like it would deal with reading or writing jars.  if for the later some result of asm would result in the .class file to be written into a jar?  but this is just guessing - I have never delved into that.
[15:16:20] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[15:16:34] *** Joins: seabass (~seabass@user/seabass)
[15:18:43] <seabass> hello! I'd like to know how to call use Java (Maven) packages from within Clojure. I've been searching for a really long time for this, but all the articles I could find only demonstrated built-in Java methods! I'm using Leiningen.
[15:50:45] <ridcully> seabass: you add the artifact to your project.clj; then you can :import the java classes.  if you use an editor with repl connect, you might want to restart that repl after adding the artifact
[15:51:02] <ridcully> this is the gist of it - if you have problems at some step you would have to share more details
[15:51:41] <rovanion> For future reference time/time-deserialization-handlers was a map with a key :handlers so the correct usage is (ajax/transit-response-format time/time-deserialization-handlers). Not that there is any public log of this channel.
[16:00:49] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:01:56] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:03:52] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Client Quit)
[16:05:34] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:16:15] <seabass> ridcully: thank you! My project.clj is (defproject test "1.0.0-SNAPSHOT" :dependencies [[org.clojure/clojure "1.10.0"] [com.vladsch.flexmark/flexmark-all "0.62.2"]])
[16:23:15] <seabass> still not quite getting it :/ (ns test (:import (org.commonmark.parser Parser))) returns Execution error (ClassNotFoundException)
[16:24:05] <seabass> oh, wrong import... hmm..
[16:25:24] <seabass> yay, (ns test (:import (com.vladsch.flexmark.parser Parser))) works!
[16:29:56] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[16:30:05] <seabass> thank you very much ridcully :)
[16:31:30] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[16:33:54] <ridcully> seems like the rubber duck helped more ;)
[16:34:59] *** Joins: matty_matt (~matt@135.129.244.71)
[16:36:17] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 252 seconds)
[16:40:23] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[16:43:15] <seabass> ridcully: haha, maybe :) Mixing up the two major markdown libraries probably didn't help my cause, either!
[16:44:15] <seabass> glad to say it all works now. I can generate HTML from Commonmark now; it's funny how the Clojure/Java interop syntax is just as easy if not easier to read than native Java. s-expressions ftw lol!
[16:53:39] *** Joins: matty_matt (~matt@135.129.244.71)
[16:59:49] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[17:01:21] *** Joins: matty_matt (~matt@135.129.244.71)
[17:05:59] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 252 seconds)
[17:17:05] *** Joins: schmudde (~schmudde@216.169.6.249)
[17:24:03] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[17:32:40] *** Joins: struchu (~struchu@62.87.192.114)
[17:34:03] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[17:34:03] *** Quits: nackjicholson (e492d83292@2604:bf00:561:2000::1d8) (Remote host closed the connection)
[17:34:03] *** Quits: harryvederci (aca786de33@user/harryvederci) (Remote host closed the connection)
[17:36:14] *** Quits: mrmanner (29a724a13e@user/mrmanner) (Remote host closed the connection)
[17:36:14] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[17:36:43] *** Joins: harryvederci (aca786de33@user/harryvederci)
[17:36:45] *** Joins: mrmanner (29a724a13e@user/mrmanner)
[17:36:49] *** Joins: nackjicholson (e492d83292@2604:bf00:561:2000::1d8)
[17:36:49] *** Joins: sm2n (ae95cb1267@user/sm2n)
[17:36:50] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[17:40:42] <mwnaylor> Hah, blew up the heap running Advent of Code, day 6 part 2. Back to the design board…
[18:07:23] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 265 seconds)
[18:11:38] <wink> hehe
[18:12:11] <wink> we've all been there :P [Segmentation fault]
[18:12:23] <wink> (in Go ofc in my case)
[18:17:48] <mwnaylor> My problem was literally following the example and using the same data structure and algorithm in part 1. Guess that was part of the 𝘨𝘰𝘵𝘤𝘩𝘢 factor between the two parts.
[18:18:16] <wink> yep
[18:18:35] *** Joins: matty_matt (~matt@135.129.244.71)
[18:24:15] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 268 seconds)
[18:26:11] *** Joins: eva432 (~eva432@2607:ff28:b013::3eef)
[18:32:26] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[18:36:59] *** Parts: eva432 (~eva432@2607:ff28:b013::3eef) ()
[18:37:21] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 265 seconds)
[18:41:02] *** Joins: matty_matt (~matt@135.129.244.71)
[18:45:25] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[19:17:26] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[19:20:35] *** Joins: matty_matt (~matt@135.129.244.71)
[19:21:01] *** Quits: shiranaihito (~textual@2001-b011-4000-3b84-c87e-8dc1-00d9-eb8f.dynamic-ip6.hinet.net) (Ping timeout: 240 seconds)
[19:22:07] *** Quits: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net) (Quit: so long and thanks for all the fish)
[19:25:00] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 256 seconds)
[19:26:47] *** Joins: faxmodem (~faxmodem@82-65-124-102.subs.proxad.net)
[19:27:27] *** Quits: mbuf (~Shakthi@223.178.121.64) (Quit: Leaving)
[19:31:00] *** Quits: struchu (~struchu@62.87.192.114) (Quit: WeeChat 3.3)
[19:50:37] *** Joins: son0p (~ff@181.136.122.143)
[20:07:31] *** Joins: Techcable (~Techcable@168.235.93.147)
[20:20:58] *** Quits: tatsumaru (~tatsumaru@78.83.244.47) (Quit: Leaving.)
[20:28:33] *** Joins: seschwar (~seschwar@user/seschwar)
[20:35:06] <rovanion> Anyone who uses aero know how to pick up which leiningen profile is used? May be the wrong approach though. All I want is for :dev to be true when I run the program with leiningen really.
[20:36:25] <technomancy> it's not a good idea to detect the profile within your code
[20:36:35] <technomancy> instead, use the profile to set config, and check config
[20:41:34] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 265 seconds)
[20:43:03] *** Joins: Trieste (~T@user/pilgrim)
[20:44:03] <rovanion> Yeah, that sounds more reasonable. It's too late to set environment variables once Leiningen has started right?
[20:44:23] <technomancy> nah, leiningen runs in its own process from the project
[20:44:50] <technomancy> I've used https://github.com/weavejester/environ in the past for this; worked well for me
[20:50:37] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 240 seconds)
[21:00:14] <jeaye> Yeah, environ works well.
[21:07:58] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[21:09:07] *** Quits: selfsymmetric-mu (~matt@c-73-10-148-139.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[21:12:13] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 240 seconds)
[21:15:54] <Para> rovanion: I'd recommend `{:environment #or [#env APP_ENV "dev"]}` instead, defaults to dev nicely and you can tell per env through env variable which env it is in. Envenvenv.
[21:16:45] <Para> Or `{:environment #keyword #or [#env APP_ENV :env]}` if you want it as keyword.
[21:22:19] <rovanion> Hmm, I guess what I really want is for the default to be different depending on whether its a production build or not. But that's edging up on trying to be cleaver I guess.
[21:22:42] <technomancy> if you load your config from a file that's easy
[21:22:53] <technomancy> place one file in resources/ and a different file in dev-resources/
[21:23:11] <technomancy> https://github.com/sonian/carica is another good choice
[21:23:34] <rovanion> Yes, of course. I might even already have different resource paths set up.
[21:27:24] *** Joins: matty_matt (~matt@135.129.244.71)
[21:32:37] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 240 seconds)
[21:48:17] *** Joins: matty_matt (~matt@135.129.244.71)
[21:52:08] <mwnaylor> Is it possible to conditional breakpoints in emacs cider?
[21:53:30] *** Joins: Trieste (~T@user/pilgrim)
[21:53:30] <mwnaylor> s/to conditional/to set conditional/
[21:54:04] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 265 seconds)
[21:57:51] *** Quits: victor_ (sid208353@tinside.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: port9 (sid124217@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[21:57:51] *** Quits: gaustin (sid356092@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[21:59:24] *** Joins: port9 (sid124217@id-124217.uxbridge.irccloud.com)
[21:59:42] *** Joins: gaustin (sid356092@id-356092.helmsley.irccloud.com)
[21:59:46] *** Joins: victor_ (sid208353@id-208353.tinside.irccloud.com)
[22:06:38] *** Joins: tatsumaru (~tatsumaru@78.83.244.47)
[22:07:35] *** Joins: matty_matt (~matt@135.129.244.71)
[22:07:43] <tatsumaru> hey guys, why does this print "By Zeus's hammer!" when that string doesn't have a println function? https://paste.rs/EAB
[22:13:02] *** Quits: matty_matt (~matt@135.129.244.71) (Ping timeout: 268 seconds)
[22:13:06] <chujev> tatsumaru: it's just your REPL printing the result of the evaluated expression
[22:13:18] <Para> The P in REPL means Print
[22:14:14] <tatsumaru> so evaluating a string will print it regardless of print function or not
[22:15:04] <hiredman> no
[22:15:16] <hiredman> the repl prints the result of evaluation
[22:15:22] <hiredman> read eval print
[22:15:26] <hiredman> loop
[22:15:44] <hiredman> a string is a constant, evaluating a string returns that string
[22:15:52] <chujev> try running (do "a" "b" nil), none of the strings will be printed
[22:16:28] <tatsumaru> chujev: why not isn't the result of "a" "a"?
[22:16:54] <chujev> you could say it is, but the result of the entire "do" is nil
[22:17:23] <chujev> if you just put "a" in the REPL you will get "a"
[22:17:58] <tatsumaru> ah I see
[22:18:16] <tatsumaru> does that mean that the string that's outside the scope of do in my example is still considered a function?
[22:18:50] <chujev> strings are not functions, but they can be evaluated
[22:19:07] <chujev> like other literals they evaluate to themselves
[22:19:31] <tatsumaru> i see, thanks
[22:19:45] <chujev> you're welcome
[22:21:33] <tatsumaru> one more question, why is the string outside do printed with the quotes as well?
[22:22:41] <tatsumaru> maybe println strips quotes?
[22:23:20] <tatsumaru> sorry for the noob questions
[22:24:44] <chujev> that's just how the REPL prints strings, that way the it can read it back as well
[22:25:00] <chujev> *that way the REPL can read it back as well
[22:26:26] <tatsumaru> chujev: but the println string is printed without quotes
[22:28:07] <chujev> println print the string itself, which doesn't contain quotes.  the REPL (or the "pr" function) prints a representation of the string - in clojure they are represented with quotes.
[22:28:55] <tatsumaru> i see, thanks.
[22:29:08] <chujev> no problem
[22:35:56] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:39:02] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:39:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[22:41:01] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:42:59] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[22:43:29] <mwnaylor> Advent of Code fans: recent puzzles lead me to think the hashmap is the go to data structure for many solutions. Who agrees?
[22:43:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:54:30] *** Quits: awb99 (~quassel@80-110-207-163.static.upcbusiness.at) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[23:08:44] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[23:13:49] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Ping timeout: 265 seconds)
[23:22:26] *** Quits: schmudde (~schmudde@216.169.6.249) (Ping timeout: 256 seconds)
[23:25:56] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Read error: Connection reset by peer)
[23:40:11] *** Joins: laman1 (~laman@rego.ai)
[23:43:44] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[23:44:31] *** Quits: laman (~laman@rego.ai) (Ping timeout: 260 seconds)
[23:52:08] *** Joins: zmt00 (~zmt00@user/zmt00)
