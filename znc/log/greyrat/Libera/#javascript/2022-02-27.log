[00:02:30] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8108:1493:c1db:6c2d)
[00:04:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:06:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[00:08:04] *** Quits: ThePhilgrim (~ThePhilgr@151.41.9.171) (Quit: ThePhilgrim)
[00:08:10] *** Joins: jazzy (~jaziz@user/jaziz)
[00:08:52] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:10:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:10:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:10:36] *** Joins: wroathe (~wroathe@user/wroathe)
[00:14:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:19:34] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[00:24:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:24:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:24:31] *** Joins: wroathe (~wroathe@user/wroathe)
[00:25:16] *** Joins: kakashiAL (~kakashi@41.250.74.23)
[00:27:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:27:28] *** Joins: banana__ (~banana_@cpe-65-29-184-109.wi.res.rr.com)
[00:29:43] *** Quits: kakashiAL (~kakashi@41.250.74.23) (Ping timeout: 256 seconds)
[00:30:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[00:41:28] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:41:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:41:28] *** Joins: wroathe (~wroathe@user/wroathe)
[00:41:57] *** Joins: silverdust (~silverdus@user/silverdust)
[00:43:18] *** Joins: pavonia (~user@user/siracusa)
[00:45:50] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:46:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:46:59] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[00:53:00] *** Quits: Andrm (~Andrm@190.244.62.157) (Quit: Client closed)
[00:53:49] *** Quits: banana__ (~banana_@cpe-65-29-184-109.wi.res.rr.com) (Ping timeout: 256 seconds)
[00:54:12] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 240 seconds)
[00:55:50] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[00:56:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[00:57:07] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-f83d-086c-320b-2168.res6.spectrum.com)
[00:59:59] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[01:00:37] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 256 seconds)
[01:01:00] <gde33> what would <p> do that makes its outder div render faster? I have a few thousand such divs, I just removed the <p> as it wasn't required and it took more than twice as long. lol?
[01:03:45] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-f83d-086c-320b-2168.res6.spectrum.com) (Read error: Connection reset by peer)
[01:04:03] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-f83d-086c-320b-2168.res6.spectrum.com)
[01:04:43] <gde33> it does seem to make sense that images and buttons sharing a container would take some more exotic checks
[01:07:00] <deniska> check how it behaves in firefox
[01:07:13] <gde33> this is firefox
[01:07:45] <deniska> gde33: check how it behaves in chrome :D
[01:07:55] <gde33> right! good idea :P
[01:07:58] <onosendi> A few thousand divs? That seems excessive.
[01:08:10] <gde33> I gave up doing that as chrome is usually doing fine
[01:08:18] <gde33> onosendi: it is
[01:09:12] <gde33> 30ms to parse into a html string 1.3 sec to insert into the dom. Without the <p>'s 3 seconds lol
[01:09:35] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[01:09:42] <gde33> going to try the dom template cloning vulgarity now
[01:10:23] <deniska> are you creating elements on the fly / assigning to innerHTML?
[01:10:25] <gde33> onosendi: its funny how good browsers have become
[01:10:42] <gde33> I'm just inserting everything with innerHTML all in one go
[01:11:05] *** Quits: david__ (~david@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7) (Quit: david__)
[01:11:23] <deniska> it may trigger some who knows what edge case
[01:11:36] <deniska> or maybe some optimization didn't work
[01:11:54] <deniska> or maybe a bug ¯\_(ツ)_/¯
[01:12:06] <gde33> if I remove it from the dom but keep a reference to the node and insert that again it renders in 40 ms
[01:12:14] <onosendi> gde33: is there a stylesheet? Try unlinking it if there is and do the same benchmark.
[01:12:29] <gde33> onosendi: thats a fun idea!
[01:12:36] <rendar> why i get 2 keydown events for each key i press?!
[01:12:45] <gde33> just set the style to none in ff
[01:13:10] <gde33> 1.2 sec
[01:13:53] <ljharb> gde33: yes why do you have that many divs
[01:15:51] <onosendi> rendar: Are you sure you don't have more than one event listener listening for `keydown`? My guess would be you're not removing the event listener before adding another.
[01:16:04] <rendar> i'm sure!
[01:17:29] <rendar> https://bpa.st/EZFQ
[01:17:32] <rendar> this is the entire code
[01:17:41] <rendar> if i press 1 key i get 2 keydown events! :(
[01:17:47] <rendar> where is the error?
[01:18:07] <gde33> ljharb: for science!
[01:18:56] <rendar> any help?
[01:19:33] <gde33> rendar: there is a lot going on here!
[01:19:51] <rendar> gde33, but i have only 2 addEventListener
[01:19:51] *** Quits: kill (~killown@user/killown) (Read error: Connection reset by peer)
[01:20:05] <rendar> and only 1 onkeydown
[01:20:07] <gde33> rendar: try replicate the issue in jsfiddle
[01:20:13] <rendar> gde33, it doesn't!
[01:20:17] <rendar> in jsfiddle it works
[01:20:19] <gde33> oh
[01:21:32] *** Joins: kill (~killown@user/killown)
[01:21:53] <rendar> can i prevent this?
[01:24:14] <gde33> rendar: put console log messages all over that describe what is happening
[01:24:32] <rendar> wait
[01:24:39] <gde33> rendar: then you can see where it starts to duplicate
[01:24:51] *** Quits: Habby (~hax@69.165.175.67) (Quit: Leaving)
[01:25:15] <gde33> it might also be fun to have elaborate console log messages with your console app
[01:25:21] *** Joins: hax (~hax@69.165.175.67)
[01:25:21] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[01:25:21] *** Joins: hax (~hax@user/hax)
[01:25:32] <rendar> everything is broken in js
[01:25:37] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[01:25:42] <rendar> suddenly it stopped to duplicate messages
[01:25:45] <gde33> welcome to the internet!
[01:25:48] <rendar> but when i hit refresh, it started again
[01:25:58] <ljharb> JS works fine
[01:26:01] <gde33> ok switch of the computer and not touch it, it works now
[01:26:03] <ljharb> your code, tho, may not
[01:26:12] <rendar> ljharb, then help me
[01:26:15] <onosendi> lol
[01:26:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:4d3e:ae3:d6a0:1183) (Read error: Connection reset by peer)
[01:26:21] <gde33> halp plx
[01:26:31] <rendar> https://bpa.st/EZFQ
[01:26:58] <rendar> ljharb, this is the code, how do you explain that in jsfiddle it works, and copy and pasting the exact same code on chrome, it doesn't?
[01:26:58] <gde33> rendar: the help is that you have to learn to figure out bugs I'm afraid
[01:27:06] <rendar> HOW?
[01:27:11] <rendar> i can't see any error there
[01:27:18] <gde33> the parts you've pasted in jsfiddle are okay
[01:27:23] <gde33> the bug is some place else
[01:27:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:27:35] <rendar> but its THE SAME CODE!
[01:27:44] <onosendi> rendar: start debugging it. Narrow down the code until the bug goes away. Then you'll have more information for us. As it is now, I don't think any of us want to go through all of that.
[01:28:05] <gde33> rendar: you don't need all the cases() for testing
[01:28:13] <gde33> comment those out for starters
[01:28:18] <ljharb> rendar: the same code can always break in a different environment
[01:28:25] <ljharb> rendar: it's irrelevant that it's the same code
[01:28:30] <ljharb> rendar: make a codesandbox
[01:28:36] <rendar> ljharb, not an my home
[01:28:38] <ljharb> rendar: if it works in there, then it's *your site*, and not the code in the sandbox
[01:28:40] <rendar> at*
[01:29:00] <ljharb> "environment" includes browser, as well as other code that's running in the page, which also includes all extensions
[01:29:26] <rendar> i mean, i can get every browser has its quirks, and changing browser may break something, but having this bug in a few hundreds of lines, with jsfiddle that works perfectly, seems really crazy to me
[01:29:33] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[01:29:35] <gde33> ljharb: lol reminds me to switch them off when benchmarking
[01:29:56] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8108:1493:c1db:6c2d) (Ping timeout: 245 seconds)
[01:30:19] <ljharb> rendar: where's the fiddle
[01:30:21] <gde33> 0.2 faster without adblock -.-
[01:30:28] <ljharb> rendar: also btw, your brace style is terrible and will lead to bugs
[01:30:30] <ljharb> !otbs @ rendar
[01:30:30] <jellobot> rendar, The One True Brace style: https://en.wikipedia.org/wiki/Indent_style#Variant:_1TBS_.28OTBS.29
[01:30:40] <rendar> ljharb, https://jsfiddle.net/23mq1tnz/2/
[01:30:58] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[01:31:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:31:13] <ljharb> rendar: ok, and what's "working" vs "broken"
[01:31:17] <rendar> i use that brace style in C since 20 years
[01:31:26] <rendar> how can a brace style lead to bugs?! for Christ sake
[01:31:31] <ljharb> rendar: right, but a) c sucks, and b) JS isn't c, and what you did in C is irrelevant
[01:31:32] <ljharb> !asi @ rendar
[01:31:33] <jellobot> rendar, ASI stands for 'automatic semicolon insertion', a mechanism by which semicolons may be omitted from the source code in certain cases, and still be recognized by the parser. Note that semicolons are NOT OPTIONAL and use of this feature will patch around your omission. For details: http://inimino.org/~inimino/blog/javascript_semicolons
[01:31:39] <rendar> c sucks?!?!?! LOL.
[01:31:42] <ljharb> rendar: also, brace style caused the gotofail openssl bug in C
[01:31:52] <systemfault> C is garbage.
[01:31:56] <stenno> c is really bad
[01:31:58] <ljharb> rendar: so yes, c sucks, and *braces alone, in C* cost the world billions of dollars
[01:32:07] <ljharb> rendar: so "i did it in c" is always more of a reason to avoid that, than to do it
[01:32:09] <ljharb> for anything
[01:32:16] <rendar> ok i see
[01:32:17] <ljharb> rendar: use OTBS and move on
[01:32:22] <rendar> i will use otbs
[01:32:28] <ljharb> rendar: so on your fiddle, i see this really ugly pink square after what i type
[01:32:33] <ljharb> as if i was on a 40 year old computer
[01:32:34] <rendar> now, lets see if we can get that bug
[01:32:36] <ljharb> is that "working"?
[01:32:51] <ljharb> (it's also not matching the width of a character, which looks weird; make it be 1em wide)
[01:33:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:33:11] <KevinX> Isnt C also 40 years old?
[01:33:13] <rendar> ljharb, that's because that's not a monospace font yet
[01:33:15] <ljharb> KevinX: older
[01:33:28] <ljharb> rendar: still looks weird, and any browser can choose their own monospace font and font sie
[01:33:39] <ljharb> rendar: so you can *never* use absolute measurements like pixels and guarantee it matches text
[01:33:42] <rendar> not if i specify my specific monospace font
[01:33:49] <ljharb> rendar: yes, because the user can override it
[01:33:58] <rendar> ok, how to specify it then?
[01:33:58] <ljharb> and, there's always a fallback font if that one fails to download
[01:34:03] <gde33> someone told me < 10% of the people writing lower level languages benefit from it
[01:34:05] <ljharb> and, the system can override the font SIZE any time it wants
[01:34:11] <ljharb> rendar: make it be `1em` wide
[01:34:18] <systemfault> gde33: Depends on your field... really.
[01:34:18] <ljharb> rendar: that unit is the width of the letter "m"
[01:34:27] <rendar> ljharb, yes but how? i'm very new to front-end programming
[01:34:31] <ljharb> rendar: using css
[01:34:32] <ljharb> rendar: so what about this fiddle doesn't work on your own site?
[01:34:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b42a:6b18:1561:fc71)
[01:34:50] <rendar> `font-width: 1em;` in the div css?
[01:35:07] <rendar> ljharb, i get 2 keydown events
[01:35:17] <rendar> ljharb, so when i press 1 button, e.g. "a" i get "aa"
[01:35:30] <systemfault> The only use-case for C these days are programming extremely resource-limited chips
[01:35:36] <ljharb> rendar: no, not font width
[01:35:41] <ljharb> rendar: set the pink square to be that width
[01:35:45] <systemfault> Otherwise... At least C++, or Rust.
[01:35:50] <ljharb> rendar: `width: 1em` maybe, if there's no border or padding or margin
[01:35:57] <gde33> systemfault: or if you are that good it doesn't matter anymore :P
[01:36:02] <stenno> rem > em
[01:36:07] <ljharb> rendar: but put that aside for now. what about the fiddle doesn't work in your site?
[01:36:10] <ljharb> stenno: not if you want it to match text
[01:36:18] <rendar> ljharb, ok, i can set `width: 1em` in the <span> where that square char is, then
[01:36:20] <ljharb> stenno: ohhh right
[01:36:29] <ljharb> rendar: sure. use `1rem` tho actually, as stenno said
[01:36:37] <rendar> oh
[01:36:41] <rendar> i see, thanks
[01:37:25] <rendar> what doesn't work? as i said, in jsfiddle when i press "a" i get 1 onkeydown event triggered, on the browser i get 2 of them, getting "aa" printed on screen
[01:39:00] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 240 seconds)
[01:39:36] <ljharb> rendar: you're probably getting event bubbling
[01:39:46] <rendar> how can i prevent that?
[01:39:57] <ljharb> or, `	this.divMain.addEventListener("keydown", (e) => { this.onkeydown(e); });` is running twice
[01:40:08] <ljharb> rendar: you shouldn't be using `this` unless it's in a `class`, also
[01:40:16] <ljharb> function-based classes are very obsolete
[01:40:31] <rendar> how should i write a class, then?
[01:40:37] <gde33> never use this :P
[01:40:40] <ljharb> with `class` syntax
[01:40:45] <ljharb> rendar: but really, this should all be react
[01:40:55] <rendar> i can't use react
[01:41:16] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[01:41:50] <rendar> ljharb, that's not running twice
[01:42:02] <rendar> ljharb, with a console.log just right before it, i see it running only 1 time
[01:42:06] <ljharb> what, why can't you use react?
[01:42:18] <ljharb> rendar: ok, so then console log the event object, and see what they both look like
[01:42:21] <gde33> rendar: the real question is : what is running twice?
[01:42:39] <gde33> so you put console.log all over and see where it starts the second round
[01:43:01] <rendar> i have refreshed the browser, and now i get only 1 event per key
[01:43:05] <rendar> just..randomly..
[01:43:12] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[01:43:34] <gde33> what did you do the last time?
[01:43:44] <ljharb> maybe you pasted the code twice
[01:43:57] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[01:44:18] <rendar> gde33, absolutely nothing
[01:44:23] <rendar> ljharb, what?
[01:44:57] <rendar> i have a python code minifier that overwrites the file
[01:45:27] <ljharb> rendar: um, why would you use a python tool to minify JS
[01:45:31] <ljharb> use a node-based tool
[01:45:37] <ljharb> rendar: and you never answered why you can't use react
[01:45:48] <rendar> because i love python, and i use it for 99% of the things i have to do
[01:46:01] <rendar> ljharb, because i don't have time to learn it
[01:46:18] <ljharb> lol
[01:46:26] <ljharb> rendar: it will take you way less time than what you're doing now
[01:46:35] <ljharb> rendar: and your love for python is irrelevant; use JS for JS things
[01:46:42] <rendar> nope.
[01:46:52] <rendar> ljharb, can you link some good books entry level for react?
[01:47:41] <ljharb> by the time a book on programming is printed, it's already months obsolete, so no
[01:47:47] <ljharb> there's tons of websites and tutorials online tho
[01:48:45] <rendar> now it started to duplicate events again :(
[01:49:05] <rendar> ljharb, then tell me a react resource you'd use to learn it today
[01:49:13] <foo> I'm doing some research on a mobile-friendly calendar, something like this: https://demo.mobiscroll.com/javascript/eventcalendar/mobile-month-view -> would love to feed it events via JSON or such and they just appear. Still doing some research, thought I'd share in case anyone is a fan of something ?
[01:49:41] <rendar> it seems that suddenly when the site is loaded after a while, it stops the event bubbling
[01:49:45] <rendar> how is this possible?!!
[01:49:58] <rendar> this is f. broke :\
[01:50:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:50:30] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:50:44] <ljharb> rendar: i don't have one in mind. i'm sure there's tons on google.
[01:51:11] <rendar> when i reload the website it has event bubbling, after a while it disappear suddenly
[01:55:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[01:56:15] <ljharb> i think you misunderstood me about what "event bubbling" is
[01:57:03] <rendar> it seems that `e.stopPropagating();` fixes the thing
[01:57:28] <hax> I used the react docs/tutorials and https://egghead.io/courses/the-beginner-s-guide-to-react and https://frontendmasters.com/courses/pure-react-state/
[01:57:46] <rendar> hax, thanks
[01:58:04] <ljharb> rendar: that suggests it is event bubbling
[01:58:11] <rendar> ljharb, ok
[01:58:13] <ljharb> rendar: which means you also don't have to do that, you could check e.target
[01:58:30] <rendar> ljharb, uhm, how exactly? sorry but i'm very new at this
[01:59:52] <ljharb> `console.log(e.target)` first. then go from there
[02:00:00] <rendar> ljharb, if i print e.target it prints all the <body>
[02:00:02] <rendar> of the page
[02:00:05] <ljharb> rendar: but you said you don't have time; JS can't be casually dipped into, you have to take the time to learn it properly
[02:00:27] <ljharb> rendar: ok so if the target on one event is the body, and the other is the thing you want, how might you skip the one you don't want
[02:01:08] <rendar> but if i click the div, e.target suddenly becomes that <div> and not the <body> anymore!
[02:02:10] <ljharb> did you add your listener to the body?
[02:02:14] <ljharb> add it directly to the div,
[02:02:22] <rendar> it is added to the div!
[02:02:42] <rendar> this.divMain.addEventListener("keydown", (e) => { this.onkeydown(e); });
[02:02:46] <ljharb> ah ok
[02:03:40] <rendar> enough for today, i need to sleep
[02:03:52] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:04:01] <rendar> ljharb, thanks for your very precious help, it's not easy to find someone so expert and straight to the point, thanks
[02:04:48] <ljharb> good luck
[02:04:55] <rendar> thanks
[02:04:59] <rendar> see ya!
[02:05:01] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:13:35] <gde33> ljharb: ah you won again :P
[02:13:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:14:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:14:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:14:03] *** Joins: wroathe (~wroathe@user/wroathe)
[02:15:08] *** Quits: Arisco (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[02:20:12] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[02:21:05] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:21:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:28:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:28:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:28:17] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:32:40] <gde33> n> a = {} ; a["4 key starting with number"] = "kiwi"; a
[02:32:41] <jellobot> (okay) { '4 key starting with number': 'kiwi' }
[02:33:06] <gde33> wasn't that not allowed previously?
[02:33:24] *** Quits: pizdets_ (~pizdets@183.182.115.3) (Ping timeout: 240 seconds)
[02:33:28] <gde33> n> a = {} ; a.4foo = "kiwi"; a
[02:33:29] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[02:33:59] *** Joins: pizdets (~pizdets@183.182.114.101)
[02:34:10] <gde33> should just be allowed imho
[02:34:23] <ljharb> gde33: it's never been disallowed
[02:34:35] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[02:34:35] <ljharb> gde33: and unbracketed properties will never allow anything beyond IdentifierNames
[02:34:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:34:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:34:53] *** Joins: wroathe (~wroathe@user/wroathe)
[02:36:02] <gde33> ic
[02:37:03] <gde33> while it does look ugly, it currently doesn't have any other meaning?
[02:37:17] *** Joins: medium_cool (~medium_co@136.36.128.48)
[02:37:26] <stenno> floats
[02:37:34] <gde33> oh right!
[02:38:03] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[02:39:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:42:19] *** Quits: Intelo (~Intelo@88.244.88.201) (Ping timeout: 256 seconds)
[02:42:31] <gde33> sheetjs: https://sheetjs.com/demo/table.html  it says click on the cell but you have to click on the span.
[02:42:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:42:54] <gde33> sheetjs: if I remove the text I'm unable to reinsert the cursor
[02:43:24] *** Quits: tarek58 (~tarek58@user/tarek58) (Ping timeout: 240 seconds)
[02:43:27] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[02:43:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:44:20] <gde33> isn't there some ready made table editor you could paste into the page?
[02:45:15] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825)
[02:46:51] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:47:36] <sheetjs> gde33: are you using firefox or safari? it seems to work correctly in chromium
[02:47:46] <gde33> firefox
[02:47:48] <sheetjs> it might be a content-editable issue
[02:47:59] <gde33> the span is editable not the cell
[02:48:48] <gde33> I think the site would look a lot more epic if you had a bunch of test data sets and demo queries
[02:49:27] <sheetjs> overhauling the README right now, will address the site next
[02:49:37] <gde33> good luck!
[02:50:13] <sheetjs> yeah these demos could use a revisit, but its in a weird spot
[02:50:46] <blueagain> probably if you change the spans to divs, that would work
[02:50:46] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 272 seconds)
[02:50:54] <blueagain> though don't know if divs are ok in tds as per the spec
[02:51:04] <gde33> or just make the cell editable and get rid of the spans
[02:51:07] <sheetjs> basically, none of the datagrid components are "good".  it's in that uncanny valley where many look like Excel but don't feel right
[02:51:09] <blueagain> or that
[02:51:30] <sheetjs> so the fallback is using html tables with contenteditable until there's time to actually build a datagrid
[02:52:12] <sheetjs> the demo originally set contenteditable to the entire TD but there were some issues with firefox that led to this
[02:52:50] <blueagain> what's a datagrid?
[02:52:52] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/bits/79_html.js#L88
[02:53:07] <gde33> perhaps let the dev/user paste a raw html table?
[02:53:25] <sheetjs> a UI component that presents data in a grid of rows / columns like how Excel or Google Docs or Numbers displays data
[02:53:49] <blueagain> oh
[02:53:51] <sheetjs> https://myliang.github.io/x-spreadsheet/ for example
[02:53:55] <blueagain> but that's just a table
[02:53:55] *** Joins: emartinez (~emartinez@189.215.18.234.cable.dyn.cableonline.com.mx)
[02:53:56] <blueagain> oh
[02:53:57] <gde33> canvas? :P
[02:54:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:54:46] <gde33> sheetjs: but then there is an infinite voyage of missing features
[02:55:05] <sheetjs> yeah experimented with canvas a long time ago.  that work eventually became the PDF renderer (since under the hood, PDFs work much the same way)
[02:55:07] <gde33> sheetjs: exell people want this ofc but the closer you get the more they feel like things are missing
[02:55:13] <blueagain> sheetjs: I know it's what your product is based on, but I always kinda looked at spreadsheet as a poor man's db
[02:55:17] <gde33> like with google docs
[02:55:38] <sheetjs> spreadsheet is a canvas
[02:55:47] <gde33> blueagain: for us yes, out there in the business world it is the most popular programming language in the universe
[02:55:57] <sheetjs> database has its use cases, but you are trading off flexibility for structure
[02:56:22] <blueagain> gde33: of course. I'm just saying that there's only so much you can do with spreadsheets, in essence they're mini dbs that don't require much knowledge of programming
[02:56:31] <gde33> there are tons of people who can make excell do anything they want but never wrote a line of code (they think)
[02:56:43] <sheetjs> its reversed imho, there's only so much you can do with databases
[02:56:55] <sheetjs> in essence databases are structured spreadsheets that require too much programming
[02:57:56] <gde33> I really love static stuff but only where it belongs. spreadsheets should have been db's
[02:59:29] <blueagain> I mean, this is kind of the thing, right
[02:59:53] <blueagain> sheetjs makes spreadsheets much more useful *because* of their shortcomings
[03:00:40] <gde33> inevitably some dev gets a spreadsheet with the instructions to put it on the website
[03:00:50] <gde33> I imagine sheetjs to produce tears of joy there :P
[03:01:13] *** Quits: ben_ (~ben@135.125.147.53) (Changing host)
[03:01:13] *** Joins: ben_ (~ben@user/nb-ben)
[03:01:16] *** ben_ is now known as nb-ben
[03:02:01] *** Parts: nb-ben (~ben@user/nb-ben) ()
[03:03:29] <sheetjs> that's the goal right?
[03:04:50] <blueagain> what's up with people opening up issues in your repo in chinese
[03:04:59] <blueagain> like, what is the expectation
[03:06:32] *** Quits: Junxter (~Junxter@121.237.60.195) (Ping timeout: 240 seconds)
[03:06:39] <sheetjs> there
[03:06:57] <sheetjs> there are two reasons
[03:07:13] <sheetjs> first is that it works in chinese, and some test files have chinese characters
[03:08:00] <sheetjs> second is that github has no language requirement or expectation
[03:08:30] <sheetjs> the VueJS ecosystem is the reverse: a huge number of projects are chinese-first english-second
[03:08:52] <blueagain> github isn't localised though, no?
[03:09:09] <blueagain> like you'd expect people to put in a non-trivial amount of effort to get heard
[03:11:05] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-023.46.114.pool.telefonica.de)
[03:13:55] <KevinX> non-trivial like learn English?
[03:14:40] <sheetjs> or use google translate, theoretically, but keeping the original chinese is better than using translate
[03:14:42] <blueagain> no, non-trivial like run it through a translation tool if you can't be bothered using the project's language
[03:14:42] <KevinX> it's much better to write in your native language and let the other party use their translator of choice than to get posts in garbled English
[03:15:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[03:15:26] <blueagain> but yeah, using the project's language is always preferrable. using translation tools can make the issue murky and reduce understanding of the actual problem
[03:15:28] <KevinX> The bets posts provide both though
[03:15:31] <KevinX> best*
[03:16:36] <KevinX> I get annoyed a bit when people post in German though, since it's highly likely they actually speak English quite well
[03:16:56] <blueagain> preferrable*
[03:17:02] <blueagain> er, preferable*
[03:17:26] <sheetjs> the other advantage of keeping the native language is that other native readers could better respond to the question
[03:17:37] <sheetjs> aka other chinese people responding to a chinese question
[03:17:49] <blueagain> KevinX: I would close issues in German even though I speak it. It's a matter of principle, all people involved in the project, users/devs should have access to the issue, imho
[03:18:14] <blueagain> if you start with "inner" communication, you're excluding other people
[03:19:14] <KevinX> Yeah I agree on that
[03:19:34] <sheetjs> does that mentality contribute to a regional javascript perspective? a US JS community, a chinese JS community, a german JS community, etc
[03:19:43] <blueagain> of course it's different if decide from the get go your project is in x language, or that you want to support several languages
[03:19:52] <blueagain> you decide*
[03:20:23] <blueagain> sheetjs: I don't know. but programming languages use english terms to begin with, so they're kind of exclusive to english
[03:21:32] <sheetjs> => is an arrow in any language
[03:21:47] <blueagain> "splice" isn't though
[03:21:52] <gde33> sheetjs: english is required
[03:22:01] <hassoon_> required where
[03:22:08] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[03:22:16] <gde33> to learn programming
[03:22:19] <sheetjs> required in the sense that the core keywords are in english
[03:22:28] <sheetjs> chinese xml is interesting
[03:22:44] <gde33> no to ask and search questions about all the undocumented weirdness
[03:22:47] <blueagain> and the core concepts, like stack/heap etc. etc. everything is in english, like it or not
[03:22:58] <sheetjs> so the UOS1/UOS2 spreadsheet formats are largely based on the ODS/FODS formats
[03:23:10] <sheetjs> ... except the actual xml tags are in chinese
[03:23:12] <Maxdamantus> n> const 中国 = 42; 中国 + 中国;
[03:23:12] <jellobot> (okay) 84
[03:23:23] <Maxdamantus> Doesn't seem exclusive to me.
[03:23:32] <gde33> chinese variable names looks better than english imho
[03:23:37] *** Joins: audio (~audio@user/audio)
[03:23:37] <Maxdamantus> "const" isn't even an English word anyway.
[03:23:59] <blueagain> Maxdamantus: to me it does. even if js supports utf8, your console might not. I don't know if any console that doesn't support ascii
[03:24:06] <gde33> we had our chance with APL haha
[03:24:07] <blueagain> of*
[03:24:17] <sheetjs> old arabic windows/dos
[03:24:26] <sheetjs> they break with ASCII on the % symbol
[03:24:41] <sheetjs> n> "\u066a"
[03:24:41] <jellobot> (okay) '٪'
[03:24:44] <Maxdamantus> blueagain: you can say the same thing about the web in general.
[03:25:00] <blueagain> Maxdamantus: sure. that is why I found the introduction of non-ascii domains a huge mistake
[03:25:00] <Maxdamantus> blueagain: ASCII pretty much always works on the web. Does that mean the web is exclusively English?
[03:25:13] <sheetjs> the official unicode name is "ARABIC PERCENT SIGN" and it is used for char code 37
[03:25:30] <Alexendoo> English being a requirement is easily disproven by the existence of developers who don't speak english
[03:25:52] <blueagain> Maxdamantus: no. it's just you have to distinguish between structure and payload. payload can be in any language, structure should be in english
[03:25:56] <blueagain> and code is structure for me
[03:26:20] <blueagain> same for domain names
[03:26:52] <blueagain> html tags are also in english, by the way. <p> has nothing to do with the german word for paragraph
[03:27:16] <blueagain> but whatever's inside the <p>? sure
[03:27:23] <sheetjs> n> with(Math) { var π = PI; cos(π); }
[03:27:24] <jellobot> (okay) -1
[03:27:40] <Maxdamantus> blueagain: I don't agree with that. You could have a system which trivially replaces keywords with words in another language. Those keywords would be part of the structure of code.
[03:27:48] <Maxdamantus> blueagain: but the identifiers are not part of that replacement.
[03:27:53] <gde33> Alexendoo: they are usually able to write some variation of konglish or euroenglish
[03:28:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:28:44] <gde33> english is supper easy compared to programming languages
[03:28:58] <Maxdamantus> Imagine having something like `# "/en";` at the top of your source file that tells it to load the English keywords.
[03:29:14] <Maxdamantus> or `# "/中国";` to tell it to load the Chinese ones.
[03:29:23] <blueagain> Maxdamantus: in the german-speaking world, it's considered bad style to use german in identifiers. comments are considered ok in non-international projects, but you get problems once you have non german-speaking team members
[03:29:26] <Alexendoo> gde33: Uh? no it is not
[03:29:46] <gde33> just watch some tv series and some movies
[03:29:53] <mikrosis> hi
[03:29:55] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:30:19] <mikrosis> I got an array of typescript objects, ID and amount. I pass an ID and a new amount - what can I use in JS to create a new array where the amount of that item of ID is changed?
[03:30:25] <sheetjs> writing technical material is a different skillset from conversational language
[03:30:44] <mikrosis> reducer? filter?
[03:30:46] <sheetjs> mikrosis: do you want to modify the original object or no?
[03:30:46] <mikrosis> :/
[03:30:54] <Maxdamantus> blueagain: sure, but that's just a matter of who's going to be working on the project. You can say the same thing about scientific research etc. At the moment a lot of scientific/mathematical papers are written in English, simply because that is more accessible to people likely to work on it.
[03:30:55] <mikrosis> sheetjs: no mutation (react thing)
[03:31:14] <sheetjs> do you want to create a copy of every object or just the mutated one?
[03:31:19] <gde33> sheetjs: plenty of english speakers who cant string together a sentence :) the bar is low. Technical writing is not for everyone.
[03:31:21] <Maxdamantus> blueagain: but it's not exclusively English. There are other conventions too.
[03:31:28] <mikrosis> sheetjs: the whole array, everyting
[03:31:32] <mikrosis> it is very flat and simple
[03:31:36] <sheetjs> then just duplicate and mutate
[03:31:37] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:31:38] <blueagain> Maxdamantus: yeah, I'm mkaing the case that code is more portable, and thus more accessible, and if it's english
[03:31:47] <blueagain> in english*
[03:31:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:32:05] <blueagain> I doubt you'd find any successful foss projects not in english
[03:32:10] <Maxdamantus> blueagain: and as someone said, a lot of German people are able to speak English anyway, so them using English is not a major detriment, unlike eg, scientists in Japan or Russia, where speaking English is less common.
[03:32:16] <mikrosis> sheetjs: is there a react/JS function that can duplicate+mutate this for me? for a particular ID?
[03:32:37] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:32:45] <sheetjs> if its really a simple object and not a series of observables, you can JSON roundtrip
[03:32:55] <gde33> blueagain: yacy is een mooi voorbeeld?
[03:33:05] <blueagain> Maxdamantus: I consider learning english a required skill if you work in tech. you don't have to master the language, but at least basic english is required
[03:33:12] <sheetjs> n> var x = {a:1, b:2}; var y = JSON.parse(JSON.stringify(x)); y.b = 3; [x, y] @ mikrosis
[03:33:13] <jellobot> mikrosis, [ { a: 1, b: 2 }, { a: 1, b: 3 } ]
[03:33:29] <Maxdamantus> blueagain: again, I'm pretty sure that depends where you are.
[03:33:38] <Maxdamantus> blueagain: I suspect it wouldn't be an expectation in Japan.
[03:33:38] <blueagain> gde33: I don't understand dutch that well :)
[03:34:13] <Maxdamantus> (though I'm not familiar with the tech sector in Japan—I just know that the proportion of English speakers in Japan is far lower than the proportion of English speakers in Germany or probably any European country)
[03:34:22] <sheetjs> the VueJS community has a large Chinese ecosystem that isn't as popular to a US-centered audience
[03:34:36] <blueagain> Maxdamantus: and I'd argue that's a problem. that makes their business less accessible internationally
[03:35:01] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:35:12] <Maxdamantus> blueagain: so the solution to that is for everyone in the world to speak English.
[03:35:20] <Maxdamantus> blueagain: which is basically the case in Europe.
[03:35:20] <blueagain> Maxdamantus: it also means it's harder for them to acquire skilled workforce from abroad
[03:35:27] <gde33> more than one language is useful
[03:35:40] <gde33> like learning php shows you what a joke js is
[03:36:00] <blueagain> Maxdamantus: I didn't say that. But I do think a certain level of english should be a requirement, yes (and is effectively)
[03:36:11] <sheetjs> from the perspective of a project maintainer, it's better to open up to non-english speakers than to force english
[03:36:29] <gde33> in dutch and in south african english arguments should be motivated. In US english it sounds like a bar fight.
[03:38:00] <Maxdamantus> blueagain: again, this is independent of anything to do with a tech sector.
[03:38:12] <Maxdamantus> blueagain: you're simply advocating for a universal lingua franca.
[03:38:24] <Maxdamantus> blueagain: which you say should be English.
[03:38:41] <blueagain> Maxdamantus: no, I'm telling you english already is, at least in the tech field. I have no preference for or against it, just saying that's how it is
[03:39:16] <Maxdamantus> The lingua franca in the western world and India at the moment is basically English. It's not a lingua franca in most other places.
[03:39:31] <Maxdamantus> blueagain: I doubt that's true outside of the places I just listed.
[03:39:46] <blueagain> well, that's kind of where tech originated
[03:39:56] <Maxdamantus> You don't think there's a tech sector in China?
[03:39:59] *** Quits: _sa0sin_ (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:06] <blueagain> didn't say that
[03:40:14] <Maxdamantus> Do you think they use English?
[03:40:38] <blueagain> I'm saying high tech originated in the west, mostly in north america. you can like it or not, but that's how it is and it's why english is so central to it
[03:40:41] <Maxdamantus> Have you ever tried using software made in China?
[03:40:49] <Maxdamantus> or seen screenshots of such software.
[03:41:03] <blueagain> Maxdamantus: no, chinese software isn't accessible to me, I don't know chinese
[03:41:12] <Maxdamantus> eg, tools for flashing firmware of devices, since a lot of hardware is made in China.
[03:41:30] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:41:37] <Maxdamantus> Okay, so existence of such tools should be evidence that there is a significant tech sector in China, and they don't use English.
[03:41:53] <Maxdamantus> If they used English, maybe their tools would have English UIs.
[03:42:09] <Maxdamantus> I suspect their code is also not written in English.
[03:42:15] <blueagain> sure, as long as they keep to themselves, which is what I said earlier. if they stay within their cultural cycle, it's probably ok. but as soon as you get international it's a problem
[03:42:25] <blueagain> circle*
[03:43:04] <Maxdamantus> Okay, but again, that's not specific to tech.
[03:43:42] <Maxdamantus> Maybe tech involves skills that are more easily translatable between countries.
[03:44:35] <Maxdamantus> Enabling travel of people with those skills. If there are people in other sectors, there will be the same dynamic, where it's convenient for people to know a common language.
[03:46:53] <foo> https://fullcalendar.io is decent, that *might* work but it still sucks on mobile.
[03:47:02] <blueagain> Maxdamantus: I don't think we have any essential disagreement here
[03:47:31] <blueagain> if chinese were the lingual franca in tech and I needed to learn it to access many projects, I'd do it
[03:48:29] <blueagain> lingua*
[03:48:35] <sheetjs> so the original context was an issue written in Chinese
[03:48:53] <sheetjs> yes, it is true that it would have been preferable for that issue to be in English
[03:49:19] <sheetjs> but if the alternative to a Chinese issue is no issue at all (the user not familiar enough with English to raise the issue), are we better off?
[03:50:24] <blueagain> not sure. it's binding your time (translating the issue, trying to figure out the intent), puts you in a weird situation (should I answer in english, would the person understand, should I backtranslate?), and excludes other participants
[03:50:54] *** Joins: stenno (~stenno@user/stenno)
[03:51:26] <sheetjs> the last part is not obvious
[03:51:50] <blueagain> well, it would exclude any non-chinese speaking person
[03:52:41] <sheetjs> the English nature of the project didn't prevent this user from raising an issue in Chinese
[03:52:49] <blueagain> which could be a lot of people depending on your demographics
[03:53:20] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:53:27] <sheetjs> the project attracts a large CJK (chinese / japanese / korean) audience because CSV is terrible for interchange
[03:54:06] <blueagain> I see
[03:54:22] <sheetjs> CSV for ASCII is fine, but support outside of ASCII is not good (something we discovered very early on)
[03:54:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[03:55:06] <sheetjs> from the perspective of the project, the issues are the point
[03:55:30] <blueagain> but also being able to address them effectively, no?
[03:55:55] <sheetjs> if you compare "issues in english" vs "issues not in english", certainly the former is preferable
[03:56:24] <sheetjs> but if you compare "issues not in english" to "fewer reports due to language barrier", arguably the former is preferable
[03:57:01] <sheetjs> for a similar reason, those "stale" bots are antithetical
[03:57:28] <blueagain> the ones that close issues after a while?
[03:57:48] <sheetjs> yeah after X days of no response, even if the user is waiting for a maintainer response
[03:58:21] <blueagain> that's a bit of a PR thing I'd say, you might not have the resources to address everything timely
[03:58:33] <sheetjs> the reason those stale bots exist is because people and systems gave importance to "how long is an issue open?"
[03:58:36] <blueagain> and there I don't know what's better, auto-close or just let it sit unanswered
[03:58:58] <blueagain> I agree with you that *how long* shouldn't play a role in the assessment of an issue
[03:59:09] <sheetjs> it shows up everywhere
[03:59:12] <blueagain> but that's a theoretical rather than a practical discussion
[03:59:18] <blueagain> you might not have the manpower to address everything
[03:59:24] <sheetjs> the official NPM "quality" metric uses it
[03:59:49] <blueagain> if you don't have the manpower
[03:59:50] <sheetjs> *"maintenance"
[04:00:05] <ASUS> should I use node or the new deno thing
[04:00:07] <blueagain> leaving stuff open indefinitely is *effectively* the same as employing a bot that stales
[04:00:18] <blueagain> it becomes pure semantics
[04:00:26] <sheetjs> it also gathers feedback in one place
[04:01:12] <sheetjs> ASUS: for greenfield project? you will find more resources and support for node
[04:02:01] <ASUS> what is greenfield
[04:02:26] <sheetjs> starting from scratch, with no requirements to use node or deno
[04:02:41] <ASUS> ok
[04:02:56] <sheetjs> if you have to use deno, it's not a bad choice, but the ecosystem is still maturing
[04:03:01] <ASUS> ok
[04:03:05] <ASUS> thanks
[04:03:11] <ASUS> I'm a noob at front end and back end
[04:03:26] <ASUS> my HTML/CSS/JS skills are noob
[04:04:03] <ASUS> I'm applying for frontend/backend/full stack jobs even though I suck
[04:04:11] <ASUS> I hope I can pick it up on the job
[04:04:25] <ASUS> but I can code, I'm a computer scientist/digital media technologist
[04:06:10] <KevinX> do those go hand in hand?
[04:06:24] <KevinX> or are separate fields
[04:06:28] <madprops> some forever node processes are exiting and im not sure why
[04:06:32] <sheetjs> computer science != coding
[04:07:18] <sheetjs> madprops: using `forever`?
[04:07:59] <sheetjs> you can find the logs with `forever logs`
[04:08:08] <madprops> says no log file
[04:08:33] <sheetjs> start with `-l some_log_file`
[04:08:47] <madprops> hmm
[04:08:58] <sheetjs> then you can just `tail -f` that thing
[04:15:01] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[04:19:19] *** Joins: silverdust (~silverdus@user/silverdust)
[04:27:27] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:29:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:32:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:38:30] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[04:38:30] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[04:38:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b42a:6b18:1561:fc71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:03] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:40:25] <gde33> I'm a pro someplace between front and back end
[04:40:37] <gde33> of which I know neither
[04:41:33] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[04:44:16] *** Quits: vbgunz_ (~vbgunz@35.141.71.47) (Read error: Connection reset by peer)
[04:44:43] <gde33> ASUS: https://imgflip.com/i/66qhoa
[04:45:22] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[04:46:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:46:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:46:22] *** Joins: wroathe (~wroathe@user/wroathe)
[04:47:16] <madprops> im using pm2 ecosystem file
[04:47:25] <madprops> it seems name has to be the name of a directory?
[04:47:31] <madprops> or can i name it anything?
[04:49:23] *** Joins: ryp (cjp@user/ryp)
[04:50:07] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[04:51:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825) (Ping timeout: 240 seconds)
[04:56:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:56:32] <madprops> seems it's the node_args that's wrong
[04:58:29] *** Joins: Naan (~naan@user/naan)
[05:00:47] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[05:01:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[05:03:58] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[05:04:56] <wyclif> ASUS: Seems to me that it wouldn't be hard to get up to speed on HTML/CSS/JS
[05:05:06] <wyclif> Just get some good books and work on it your spare time
[05:05:17] <wyclif> And do some tutorials
[05:05:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:08:50] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[05:15:36] <wyclif> What do we think of the "You Don't Know JS" books?
[05:16:04] <wyclif> I have the first edition series but recently I noticed the author made a lot of changes to the second edition
[05:16:22] *** Joins: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net)
[05:16:54] <KevinX> I think Kyle Simpson is a good teacher. Really into functional programming
[05:17:57] <KevinX> You can read the second edition here https://github.com/getify/You-Dont-Know-JS
[05:22:26] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-023.46.114.pool.telefonica.de) (Quit: Connection closed)
[05:24:59] <wyclif> I thought he did a really great job and the best thing is that it's up-to-date
[05:26:22] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:26:50] <wyclif> KevinX: He has only the first two books up there. I wonder if he'll put the other ones up later. I guess he's working through them and revising them all.
[05:27:22] <wyclif> I also like Eloquent JavaScript
[05:27:32] *** Quits: zer0 (~zer0@user/zer0) (Ping timeout: 240 seconds)
[05:27:56] *** Joins: zer0 (~zer0@user/zer0)
[05:29:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:31:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:33:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:35:23] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Ping timeout: 250 seconds)
[05:38:36] *** Quits: haniaF (~haniaF@83.24.216.182.ipv4.supernova.orange.pl) (Ping timeout: 272 seconds)
[05:38:38] <ljharb> wyclif: they’re 90% amazing and 10% intensely wrong
[05:38:45] *** Joins: haniaF_ (~haniaF@83.24.224.152.ipv4.supernova.orange.pl)
[05:38:51] <ljharb> wyclif: for example, getify likes ==, but == is terrible
[05:39:13] <ljharb> wyclif: so, as long as you keep vigilant for the few super wrong and weird opinions like that, his stuff is top notch
[05:39:47] <ljharb> oh also, literally any time an author hawks a framework they built, that framework is absolute shit
[05:39:55] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[05:39:58] <ljharb> even/especially when the author is wonderful
[05:40:23] *** Quits: ryp (cjp@user/ryp) ()
[05:43:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407)
[05:43:19] <KevinX> yeah he does have some FP framework now
[05:43:29] <KevinX> Not really for me
[05:43:39] <KevinX> Here's where he talks about == in the 3rd edition https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/get-started/ch2.md#coercive-comparisons
[05:43:45] <KevinX> 2nd*
[05:43:51] <ljharb> also he likes var
[05:44:35] <ljharb> (var is either your only option, or, should never be preferred over const and maybe let)
[05:44:37] <velix> Sorry for asking in herem but the nerds are in here. How do you call this easy to remember strings to reset your password? "apple-cherry-bang-kebap-moon"?
[05:45:05] <ljharb> velix: you don’t, you use 1password
[05:45:16] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[05:45:29] <ljharb> you really only have to remember two passwords; your phone store account, and your password vault account
[05:45:31] *** Joins: ASUS (~ASUS@user/ASUS)
[05:45:44] <velix> No, not to REMEMBER. The string to reset your password.
[05:45:51] <velix> Many wallets use this.
[05:45:56] <velix> I think openPGP also does.
[05:46:34] <velix> found it! https://en.bitcoin.it/wiki/Seed_phrase
[05:46:50] <velix> witch collapse practice feed shame open despair road again ice least
[05:46:57] <velix> Thanks!
[05:47:16] <velix> https://iancoleman.io/bip39/
[05:47:18] <velix> gnarrrrr
[05:47:39] <velix> Mnemonic code
[05:50:59] <ljharb> oh you mean the name of the category of thing
[05:51:08] <ljharb> horse correct battery staple
[05:54:50] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[05:56:00] <velix> exaclty. "domina cocain heroin car"
[05:56:07] <velix> (in that order) ;)
[05:56:46] <systemfault> I just uses hunter2
[05:56:52] <systemfault> *use
[06:01:54] <velix> *******
[06:06:54] <wyclif> ljharb: What is the name of his framework?
[06:07:55] <ljharb> wyclif: i don’t have any names off the top of my head. But multiple authors seem to be inclined to make frameworks, and they’re never any good.
[06:09:17] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:09:57] *** Joins: justAstache (~justache@user/justache)
[06:10:12] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:6028:a9f5:a949:31b5)
[06:10:26] <wyclif> I still think the best bet is to learn vanilla JS and go from there
[06:10:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:c96d:948a:38af:d765) (Ping timeout: 240 seconds)
[06:15:54] <KevinX> He has some monad framework for functional programming
[06:16:20] <KevinX> Not sure it's a framework though
[06:16:29] <KevinX> (he may have others I dont know about)
[06:16:30] <KevinX> https://github.com/getify/monio
[06:18:06] *** Joins: ryp (~ryp@user/ryp)
[06:20:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:21:22] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:22:01] *** Joins: Rockwood (~Rocky@user/rocky)
[06:26:03] *** Joins: ejjfunky0 (~ejjfunky2@125.164.16.18)
[06:26:06] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[06:30:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:30:36] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[06:33:37] <Rockwood> o/
[06:33:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:34:49] <wyclif> Ah OK
[06:34:52] <wyclif> I forgot the name of it
[06:34:59] *** Joins: silverdust (~silverdus@user/silverdust)
[06:35:42] <systemfault> Monads in general aren't that great in untyped languages... (IMHO)
[06:36:17] <Rockwood> \o/
[06:36:20] <wyclif> Yeah he loves monads
[06:36:32] <Rockwood>  \o
[06:36:33] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[06:37:11] <Rockwood>  /o\
[06:37:17] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[06:37:50] <wyclif> Most languages already handle state and I/O easily, so not much need for monads
[06:38:14] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[06:38:25] <systemfault> O_O
[06:39:03] <systemfault> People use monads for IO and State _because_ it constrains it.
[06:40:11] <systemfault> Makes functions signatures having IO "obvious" that they change the "world"
[06:44:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:48:10] *** Parts: velix (~velix@user/velix) (Leaving)
[06:48:47] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[06:59:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:59:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Client Quit)
[07:00:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:05:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:08:05] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:10:36] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[07:12:27] *** Joins: audio (~audio@user/audio)
[07:15:33] *** Joins: silverdust (~silverdus@user/silverdust)
[07:17:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Quit: leaving)
[07:20:00] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:20:00] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:20:00] *** Joins: wroathe (~wroathe@user/wroathe)
[07:20:12] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[07:23:55] *** Joins: matsaman (~matsaman@user/matsaman)
[07:28:57] *** Quits: ryp (~ryp@user/ryp) (Quit: leaving)
[07:29:39] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:30:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:31:46] *** Quits: dimi1947 (~dimi1947@46-107-189.adsl.cyta.gr) (Quit: Leaving)
[07:33:59] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[07:34:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[07:41:50] *** Joins: silverdust (~silverdus@user/silverdust)
[07:43:17] *** Quits: emartinez (~emartinez@189.215.18.234.cable.dyn.cableonline.com.mx) (Quit: WeeChat 3.3)
[07:47:11] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:53:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:55:55] *** Quits: chovy (chovy@tilde.club) (Quit: Lost terminal)
[07:57:39] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[07:58:32] *** Quits: suss (~user@user/suss) (Remote host closed the connection)
[07:58:47] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:59:05] *** Joins: suss (~user@user/suss)
[08:04:18] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:05:39] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Ping timeout: 256 seconds)
[08:12:29] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[08:24:11] *** Joins: lotharn (~kvirc@2600:8800:280:d400:60fd:bd0d:9a25:c3f3)
[08:31:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:34:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:46:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407) (Quit: Leaving)
[08:55:05] *** Quits: bobdobbs` (~user@116.251.146.222) (Remote host closed the connection)
[09:02:55] *** Joins: silverdust (~silverdus@user/silverdust)
[09:05:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:05:45] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:08:31] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[09:08:34] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[09:08:47] *** Joins: audio (~audio@user/audio)
[09:09:53] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 250 seconds)
[09:10:45] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[09:11:53] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:13:14] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[09:14:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:15:12] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[09:22:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:28:03] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Ping timeout: 256 seconds)
[09:31:28] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[09:31:34] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:35:09] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:37:06] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[09:38:11] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:39:30] *** Joins: han-solo (~han-solo@user/han-solo)
[09:40:34] <cthulchu_> you know how we append children to dom nodes and then we can't document.querySelector them?
[09:40:37] <cthulchu_> what is that about?
[09:41:31] <cthulchu_> as if the dom rendered your stuff and all is fine, and yet the document object hasn't been updated...
[09:41:57] *** Quits: brentaarnold (~brentaarn@24.112.56.42) (Ping timeout: 240 seconds)
[09:42:38] <theskillwithin> cthulchu_ huh?
[09:44:00] <theskillwithin> cthulchu_ maybe its just a race condition
[09:45:21] <cthulchu_> no, I'm trying it in the console... uh, anyway, can you just glance at my function? I'm trying to copy a row with all its children in a table and it works, but then I try to adjust the copied row children before inserting it into the table and... maybe I'm not allowed to do it.
[09:45:38] <gkatsev> if it's happening in the same tick, it may not be available
[09:45:54] <gkatsev> but if you have a reference already, why do you need to qS it?
[09:46:21] <theskillwithin> maybe if using insertAdjacentHTML
[09:46:26] <cthulchu_> console. manual crap
[09:46:48] *** Quits: ejjfunky0 (~ejjfunky2@125.164.16.18) (Quit: Leaving)
[09:46:50] <theskillwithin> cthulchu_ ya showing the code is a good idea always
[09:47:00] <cthulchu_> ye
[09:47:14] <cthulchu_> where would be a good place to paste it? sorry, I don't remember the paste site
[09:47:23] <cthulchu_> github snippets?
[09:47:24] <theskillwithin> gist is the best
[09:47:25] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[09:47:29] <theskillwithin> !paste
[09:47:29] <jellobot> theskillwithin, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[09:47:30] <gkatsev> ideally, a live place, like jsbin, jsfiddle, codesandbox, codepen
[09:47:42] <theskillwithin> ya
[09:48:03] <cthulchu_> there: https://gist.github.com/cthae/f84a50bcd765f74596ae3017c513d44e
[09:49:02] <cthulchu_> it gives me the error for line 6 claiming that querySelector is a property of undefined in that line...
[09:49:32] <cthulchu_> oops
[09:49:43] <cthulchu_> I'm sorry, I see the issue
[09:49:56] <cthulchu_> damn, and I have a duck in front of me. just didn't talk to it.
[09:50:03] <gkatsev> lol
[09:50:03] <theskillwithin> the .label?
[09:50:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[09:50:18] <gkatsev> is line 10 supposed to go above line 5?
[09:50:54] <gkatsev> also, you potentially can do `td.querySelector` without referencing the document?
[09:51:25] <theskillwithin> ohhh
[09:51:31] <cthulchu_> yes, that document there was a mistake
[09:51:47] <gkatsev> also `document.querySelectorAll("table#mainSources tr")` is likely a tiny bit faster
[09:51:55] <cthulchu_> line 10 is for final insertion of the node
[09:52:03] <cthulchu_> the function isn't finished
[09:52:13] <theskillwithin> btw in gist if you name your gist with .js extension it will do js code highlighting
[09:52:39] <cthulchu_> theskillwithin, I can't do .label?
[09:52:56] <cthulchu_> oooh, damn, I can't, can I
[09:52:58] <cthulchu_> ofc I can't
[09:53:15] <cthulchu_> sorry, I'm not very good at modifying html, I usually read it, not write into it
[09:53:19] <theskillwithin> cthulchu_ the .document was the main issue tho probably tho
[09:53:26] <cthulchu_> yes it was, thank you
[09:53:34] <cthulchu_> label is an issue too
[09:54:14] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[09:55:19] <theskillwithin> also .id += "count";  doesn't make sense to me why doing that on line 7
[09:55:48] <theskillwithin> adding "count" to the end of the id?
[09:56:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:56:34] <cthulchu_> yes, to make sure ids are unique. this is ridiculous... So if I open the console and paste document.querySelector("tr#tr-0"), I get null. But if I inspect that tr and SEE it in DOM, and literally hit up and enter, I get the element. HOW!?
[09:56:54] <theskillwithin> thats adding count as a string tho, not the value of count variable?
[09:57:14] <cthulchu_> oops
[09:57:15] <cthulchu_> my bad
[09:59:19] <cthulchu_> I don't understand how inspecting an element can make it available for the query selector. I remember encountering something like this back when I was studying in college, but I completely forgot why that's like that.
[10:00:13] <theskillwithin> its available to query selector either way?
[10:00:36] <theskillwithin> or are you referring to the like $0 syntax thats special to console when an element is selected in the element inspector
[10:01:53] <cthulchu_> if I reload the page and run document.querySelector("tr#tr-0"), I get null. If I inspect the field in that tr (it's on the page!), go back to the console and hit up and enter, now I get the tr
[10:02:23] <systemfault> Well.. maybe you're querying before you change those ids?
[10:02:41] <cthulchu_> this one is hardcoded in the source
[10:03:15] <cthulchu_> well, to be fair, it's also a Reactor Sandbox that I'm using, so it can throw a few wrenches in devtools debugging
[10:03:44] <cthulchu_> because, miraculously, my code sees that selector and runs just fine. It's only my local console that's being weird
[10:03:57] <gkatsev> could it be that there's an iframe in the way?
[10:04:07] <gkatsev> and that until you inspect it, you're not in the right context
[10:04:21] <cthulchu_> yes, there is indeed an iframe!
[10:04:29] <cthulchu_> WOW
[10:04:46] <cthulchu_> I didn't realize inspecting iframes brings you to their context
[10:04:48] <gkatsev> dev tools have a way to change frame context
[10:04:54] <cthulchu_> gkatsev, you rock
[10:05:21] <cthulchu_> Damn this channel is awesome. Every time I end up learning new stuff :)
[10:05:44] <gkatsev> https://stackoverflow.com/a/8581276
[10:06:41] <theskillwithin> gkatsev nice
[10:07:13] <gkatsev> didn't think of this until you mentioned reactor sandbox. Sandboxes often use iframes because it's a natural sandbox
[10:07:21] <cthulchu_> yes, very cool, thanks
[10:08:32] <deltab> do the ids matter?
[10:08:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[10:09:12] <gkatsev> what do you mean?
[10:09:16] <theskillwithin> cthulchu_ do a new paste with your updated code so we can look again after ur changes
[10:09:19] <deltab> for inputs I'd think the name is more important
[10:09:39] <gkatsev> depends on your usage
[10:09:44] <cthulchu_> I will
[10:09:50] <deltab> yeah, hence question
[10:09:50] <gkatsev> but often things are associated based on ids
[10:09:56] <gkatsev> like a label's `for` attribute
[10:10:08] <gkatsev> name is used more for groupings, I think?
[10:11:12] <deltab> cthulchu_: do you use the row or input ids?
[10:12:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:13:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:15:14] *** Joins: wyclif (~wyclif@user/wyclif)
[10:15:34] <cthulchu_> deltab, for what?
[10:19:20] <cthulchu_>  there, updated: https://gist.github.com/cthae/f84a50bcd765f74596ae3017c513d44e
[10:19:25] <cthulchu_> theskillwithin, ^
[10:20:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:20:59] *** Joins: wyclif (~wyclif@user/wyclif)
[10:23:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:24:49] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[10:25:29] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:26:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:26:24] <cthulchu_> https://prnt.sc/CgO25RkRlILr
[10:26:27] *** Joins: wyclif (~wyclif@user/wyclif)
[10:28:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:28:28] *** Quits: karabaja4 (~karabaja4@dh207-93-84.xnet.hr) (Remote host closed the connection)
[10:28:57] *** Joins: noarb (~noarb@user/noarb)
[10:30:35] *** Joins: scream (~g@66.205.193.232)
[10:30:46] *** Quits: scream (~g@66.205.193.232) (Changing host)
[10:30:46] *** Joins: scream (~g@user/scream)
[10:30:46] *** ChanServ sets mode: +b *!*@user/scream
[10:30:46] *** scream was kicked by ChanServ (User is banned from this channel)
[10:30:46] *** ChanServ sets mode: +o litharge
[10:30:57] <theskillwithin> cthulchu_ don't forget the .js extension on the gist so it does code highlighting like https://gist.github.com/theskillwithin/4a116e3d48f9717d10271521cb015b89
[10:30:58] *** litharge sets mode: -o litharge
[10:32:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:32:33] *** Joins: noarb- (~noarb@user/noarb)
[10:32:43] <cthulchu_> ah, good
[10:34:05] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[10:34:13] <theskillwithin> best practice is to always use === instead of ==
[10:35:40] <cthulchu_> right, the types
[10:36:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[10:36:35] <theskillwithin> instead of .replace(":", " " + count + ":");   you could do with backticks  .replace(":", ` ${count}:`);
[10:36:38] <theskillwithin> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
[10:37:53] <theskillwithin> same thing in the end tho so just nit picking on that one
[10:38:27] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[10:39:19] <cthulchu_> yeah, thanks
[10:41:49] <cthulchu_> ok, perfect, the ui is done for now. That's the most annoying part. Gonna tackle the logic behind tomorrow, hehe. Thanks again, good night.
[10:42:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[10:44:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:46:35] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:49:49] *** Joins: fef (~thedawn@user/thedawn)
[10:50:18] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:39] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[10:53:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[10:55:00] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Ping timeout: 240 seconds)
[10:55:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[10:55:50] *** Joins: rendar (~rendar@user/rendar)
[10:56:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:59:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:02:02] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[11:04:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:04:31] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[11:06:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:07:56] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 272 seconds)
[11:12:35] *** Joins: stenno (~stenno@user/stenno)
[11:15:36] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[11:17:06] *** Joins: Guest56366 (~rx@dynamic-046-114-169-171.46.114.pool.telefonica.de)
[11:19:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[11:21:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:23:39] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:25:29] *** Joins: noarb (~noarb@user/noarb)
[11:27:22] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0)
[11:29:05] *** Joins: noarb- (~noarb@user/noarb)
[11:30:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[11:30:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[11:31:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:31:30] *** Joins: wyclif (~wyclif@user/wyclif)
[11:32:33] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:34:27] *** Joins: eugercek (~user@user/eugercek)
[11:35:22] *** Joins: ASUS (~ASUS@user/ASUS)
[11:35:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:36:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:37:01] *** Joins: wyclif (~wyclif@user/wyclif)
[11:38:52] *** Joins: niop (~jc@2406:3400:215:2560:1a3b:3ae4:34b4:59f3)
[11:39:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:39:39] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:40:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:41:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:42:32] *** Joins: wyclif (~wyclif@user/wyclif)
[11:44:40] *** Joins: noarb (~noarb@user/noarb)
[11:45:45] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[11:45:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[11:47:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[11:47:48] *** Joins: wyclif (~wyclif@user/wyclif)
[11:47:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:48:49] *** Joins: karabaja4 (~karabaja4@dh207-95-76.xnet.hr)
[11:49:20] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e17b:2f1e:5797:73d0) (Ping timeout: 252 seconds)
[11:49:32] *** Quits: niop (~jc@2406:3400:215:2560:1a3b:3ae4:34b4:59f3) (Quit: Konversation terminated!)
[11:52:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:53:17] *** Joins: Junxter (~Junxter@121.237.60.195)
[11:54:04] *** Joins: behelit (~behelit@217.61.224.107)
[11:54:19] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[12:00:30] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b911:2c82:7dec:2cb9)
[12:01:57] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a) (Remote host closed the connection)
[12:02:09] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:6c9d:e6be:e755:548a)
[12:09:35] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:10:05] <behelit> hi! any formatter out there that supports breaking up destructuring assignment like this? https://dpaste.org/FZf7
[12:10:46] <behelit> i tried `deno fmt` (super fast! alas, does not support mixing single and double quotes which I prefer for JSX) and `prettier` (super slow, but supports mixing quotes)
[12:15:03] <stenno> i don't think there is such a thing
[12:15:14] <stenno> you should break only depending on line width
[12:15:18] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:15:22] <stenno> character count*
[12:16:39] <behelit> too bad. I don't care much about other formatting rules ... but it is *super annoying* to delete/add stuff when you have to first navigate to the correct line and then the correct column ... instead of just going to the line
[12:17:19] <behelit> happens to me a lot when designing new react components. I always find myself adding and removing props like crazy in the beginning ... and having each prop on a separate line is so much easier to read and so much easier to work with.
[12:18:45] <stenno> behelit: check this discussion https://github.com/eslint/eslint/issues/9259#issuecomment-378789480
[12:20:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:20:54] <arash> Hello, how can I select an element in JS using Xpath?
[12:21:12] <theskillwithin> eslint & prettier FTW. but gotta get them to play nice with each other
[12:21:42] <stenno> arash: https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate
[12:24:41] <behelit> stenno: yeah, that is what I want.
[12:27:02] <stenno> behelit: so it seems that it cannot be done by eslint yet, at least if we look at the issue resolution
[12:27:12] <behelit> nope :(
[12:27:44] <behelit> that is too bad .. I understand that you have to compromise when using a formatter .. but this kills ergonomics for me
[12:27:59] <stenno> a lot of people seem to want this feature though
[12:28:23] <stenno> maybe ljharb can tell us more about that issue (https://github.com/eslint/eslint/issues/9259#issuecomment-378789480) as he seemed to be involved in the discussion
[12:28:28] <stenno> (once he is awake)
[12:29:11] <theskillwithin> isn't it just based on the max char width line
[12:29:26] <stenno> it is, but thats not what we want
[12:29:45] <stenno> see the link to the issue comment
[12:30:21] <theskillwithin> ya, but seems odd to me,  id just want it to be based on same as all other code wrapping
[12:31:38] <behelit> theskillwithin: all code isn't the same.
[12:31:54] <stenno> that is what i said in the beginning, but apparently there is need for something like that too
[12:33:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:34:39] *** Joins: Akiva (~Akiva@user/Akiva)
[12:35:04] <theskillwithin> behelit the wrapping is based on what you set in prettierrc so  its not all the same
[12:35:50] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[12:35:57] <behelit> theskillwithin: of course, but prettier is a sledge hammer ... i need a pin hammer :)
[12:36:11] <behelit> eslint has the rule, but it doesn't fix it "correctly"
[12:37:14] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:37:29] <theskillwithin> idk the example given, its like,  I would never want to wrap that
[12:37:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:38:31] <theskillwithin> if its longer, it does wrap.  it wraps when i feel is good.
[12:40:46] *** Joins: average (uid473595@user/average)
[12:42:55] <behelit> theskillwithin: the length doesn't really matter in this case. it is the number of destructured/imported items that affects the cognitive load and makes it annoying to edit.
[12:43:27] <theskillwithin> when it gets that long, it wraps anyways
[12:43:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:44:30] <theskillwithin> im not against adding another param.  but for me im not dissatisfied without proposed param
[12:47:47] <behelit> I like how `black` solves it in python ... but that wouldn't work with the spread operator in js .. I'd at-least want something like `use_small_heuristics` in `rustfmt`.
[12:51:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:54:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:55:27] <behelit> theskillwithin: but the "bug" in question isn't whether you like this behavior or not. There's an eslint rule called `object-curly-newline` that takes the option `minProperties`. If this is set it requires line breaks if the number of properties is more than the given number. But the `--fix` for that just puts all of the arguments on a new line which kinda doesn't solve the problem just gets rid of
[12:55:34] <behelit> the warning.
[12:55:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:b805:34de:7020:2510) (Quit: Leaving)
[12:58:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:00:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:03:32] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[13:05:35] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d52f:610b:c364:63c2)
[13:05:48] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:13:20] *** Quits: psy1 (~psy@104-62-224-96.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 272 seconds)
[13:13:46] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[13:17:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:18:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[13:19:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:22:45] *** Joins: nomic (~nomic@185.192.69.129)
[13:24:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[13:25:18] *** Joins: stenno (~stenno@user/stenno)
[13:30:06] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Read error: Connection reset by peer)
[13:31:36] *** Quits: doji (~doji@user/doji) (Read error: Connection reset by peer)
[13:32:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:33:12] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[13:33:12] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[13:33:12] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[13:33:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:35:05] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:35:35] *** Joins: kcrk (~kcrk@user/kcrk)
[13:35:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:37:07] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[13:37:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:39:27] *** Joins: fef (~thedawn@user/thedawn)
[13:40:14] *** Joins: doji (~doji@user/doji)
[13:42:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:45:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:46:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:53:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[13:57:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[14:00:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:01:45] *** Joins: wyclif (~wyclif@user/wyclif)
[14:04:42] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[14:05:33] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[14:06:35] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:08:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:09:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:16:08] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:17:00] <arash> How can I append an element to document.evaluate result?
[14:21:19] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:21:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[14:23:17] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Ping timeout: 240 seconds)
[14:24:12] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:30:59] <stenno> arash: if your result is a Node, you can use singleNodeValue of XPathResult https://developer.mozilla.org/en-US/docs/Web/API/XPathResult/singleNodeValue
[14:31:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[14:32:45] *** Joins: D4mned (~D1mned@212.101.253.99)
[14:34:05] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:34:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:36:00] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 252 seconds)
[14:36:36] *** Joins: jochum (~quassel@user/jochum)
[14:37:34] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[14:37:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:39:37] <arash> stenno, thank you.in that example it add a document.evaluate result to a node, but I want append an element to document.evaluate result.
[14:40:05] <arash> stenno, should I use here.singleNodeValue.appendChild()?! here contain document.evaluate result
[14:41:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:41:58] <stenno> yes
[14:42:02] <stenno> arash: https://jsfiddle.net/g0wdsqhm/
[14:42:08] <stenno> note the 4th parameter passed to .evaluate
[14:42:48] <stenno> maybe you can play around with the 4th parameter if there is anything more fitting
[14:43:41] <arash> stenno, thank you. it works fine. :)
[14:43:46] <stenno> nice! np
[14:44:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:45:03] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[14:45:47] <stenno> i wonder if you can Array.from a XPathResult, it seems to be some scary array-like object with an iterator
[14:46:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:46:36] <stenno> doesn't seem like it
[14:46:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:48:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:50:37] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:53:10] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:55:39] <theskillwithin> im trying to think if iv ever used xpath before
[14:56:11] <stenno> i am pretty sure i didn't
[14:56:16] <stenno> it can be useful sometimes
[14:56:23] <stenno> but the JS interface seems super clunky
[14:58:12] <blueagain> All I ever heard of xpath was in a java context
[14:58:18] <stenno> huh
[14:58:32] <stenno> oh i guess related to XML in general
[14:58:37] <blueagain> yup
[14:58:39] <blueagain> well, also soap
[14:58:43] <blueagain> which is xml
[14:58:45] <stenno> yep
[14:59:05] <stenno> fucking soap man
[14:59:24] <blueagain> yeah, still having to deal with in 2022, imagine
[14:59:29] <stenno> ikr
[14:59:30] <blueagain> with it in*
[14:59:48] <theskillwithin> idk soap but id be upset if i had to use
[15:00:02] *** Quits: henry40408 (~henry4040@175.181.176.30) (Ping timeout: 260 seconds)
[15:00:22] <stenno> relict of the past
[15:01:44] <blueagain> funny thing is that where I work, we need to translate soap to js(on) anyway for our frontend
[15:01:54] <blueagain> might as well ask yourself why not work with json to be with
[15:01:59] <blueagain> begin*
[15:02:04] <stenno> hysterical raisins
[15:03:27] *** Joins: Naan (~naan@user/naan)
[15:03:34] <arash> stenno, how can I append as html? https://jsfiddle.net/b62ftLy7/
[15:03:42] <wyclif> Heh, I literally haven't heard "SOAP" in probably 10 years
[15:03:55] <wyclif> Amazed it still exists
[15:04:00] <theskillwithin> arash https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML
[15:04:19] <stenno> speaking about clunky interfaces, lets talk about DOM :P
[15:04:45] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[15:05:32] <blueagain> yeah, let's introduce NodeList which is like an array but then not
[15:05:45] <stenno> thank eris for Array.from
[15:06:09] <wyclif> I remember generating lines like `soap:encodingStyle="URI"` back in the day
[15:06:27] <stenno> at least static nodelists are a thing
[15:06:45] <stenno> and it has a proper iterator interface
[15:06:57] <stenno> unlike XPathResult (or maybe i just did it wrong)
[15:07:11] <arash> theskillwithin, not working https://jsfiddle.net/eLc31ond/
[15:08:42] <stenno> first param is wrong, arash
[15:09:04] <stenno> gotta pass a position string as shown in the link theskillwithin posted
[15:09:28] <stenno> https://jsfiddle.net/mnj0qh6a/
[15:09:29] *** Quits: nomic (~nomic@185.192.69.129) (Quit: Leaving)
[15:09:43] *** Quits: ASUS (~ASUS@user/ASUS) (Quit: Leaving)
[15:09:51] <theskillwithin> yep, ty stenno
[15:09:54] *** Joins: voltage_ (voltage@user/voltage)
[15:10:20] <arash> stenno, theskillwithin thank you.
[15:11:50] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[15:12:35] <stenno> man html5 and its semantic emphasis tags
[15:12:45] <stenno> its a bit of a mess in order to stay backwards compatible
[15:13:38] <blueagain> like <article>?
[15:13:44] <stenno> article is fine
[15:13:47] <blueagain> oh
[15:13:57] <stenno> i am talking about <em> vs <strong> vs <b> vs <i> vs ...
[15:14:11] <blueagain> oh, I don't think anyone uses those anymore?
[15:14:23] <stenno> well they are valid and semantic in html5
[15:14:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:14:37] <theskillwithin> well em vs i  alone is a question
[15:14:39] <stenno> Not exactly. The <strong> element is for content that is of greater importance, while the <b> element is used to draw attention to text without indicating that it's more important.
[15:14:47] <stenno> ^ from MDN
[15:15:01] <blueagain> I always equated them in my brain and I use css for that anyway
[15:15:22] <blueagain> since those tags have no meaning without a different style
[15:15:26] <stenno> well we are talking about semantics
[15:15:30] <blueagain> (unless I don't know, you use a screenreader)
[15:15:42] <stenno> they _do_ have a specific semantic meaning, thats what i am talking about :D
[15:16:04] <blueagain> yeah but in all practical cases, the semantic meaning will be accompanied by a visual cue
[15:16:22] <blueagain> unless you're html is for computers to process
[15:16:25] <blueagain> your*
[15:16:29] <stenno> the visual cue is only a recommendation and basically seperated from the semantic value
[15:16:40] <stenno> keep in mind that even <br> does not imply a line break
[15:16:43] <stenno> in html5
[15:16:49] <blueagain> yeah, I never really got the whole semantic web thing anyway
[15:16:59] <blueagain> it's good to give things names, but I can do it with css classes too
[15:17:06] <blueagain> meaningful names*
[15:17:25] <theskillwithin> stenno well you can do br display none and it will not behave as such,  is that what you mean?
[15:17:28] <stenno> its really not about presentation
[15:17:41] <stenno> theskillwithin: lemme find the exact quote from the spec
[15:18:05] <stenno> theskillwithin: see the green 'Note' block here https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-br-element
[15:18:07] <stenno> i will just paste it
[15:18:11] <stenno> While line breaks are usually represented in visual media by physically moving subsequent text to a new line, a style sheet or user agent would be equally justified in causing line breaks to be rendered in a different manner, for instance as green dots, or as extra spacing.
[15:18:29] <blueagain> great, a line break that doesn't break line
[15:18:32] <blueagain> great semantics there
[15:18:40] <blueagain> I'll just start calling my tables "chairs"
[15:18:44] <stenno> blueagain: indeed, as it is a 'semantic' line break, not a visual one
[15:18:54] <stenno> html5 is _not_ about presentation
[15:18:57] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-f83d-086c-320b-2168.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:19:05] <stenno> this is a very important distinction wrt to html4
[15:19:10] <stenno> -to
[15:19:44] <stenno> html5 specs _recommend_ that the UA handles <br> with a visual linebreak
[15:19:57] <stenno> but its a SHOULD thing
[15:19:59] <theskillwithin> you know whats a pain in the ass,  if you want to say have 3 lines(rows) of text, and then after that cut it off with ellipsis
[15:20:37] <blueagain> stenno: but what *is* html5 about then?
[15:20:44] <stenno> blueagain: about semantics
[15:20:47] <theskillwithin> you know what grinds my gears
[15:20:49] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:20:53] <stenno> blueagain: for example, the screen reader thing you mentioned
[15:22:13] <blueagain> semantics need interpretation though
[15:22:40] <stenno> the interpretation/visualization is done by the UA stylesheet, i.e. CSS
[15:22:50] *** Joins: henry40408 (~henry4040@175.181.176.30)
[15:23:02] <theskillwithin> and after that by the styles you provide
[15:23:04] <stenno> or a screen reader
[15:23:07] <stenno> yes
[15:23:14] <blueagain> saying that a line break can be, in the end of day, anything, devoids it completely of meaning
[15:23:51] <theskillwithin> back in the day there was that silly site, css zen garden i think it was? and you could style it totally differently just using pure css
[15:23:54] <stenno> blueagain: that we still have elements like <br> is probably a repercussion of html being _very_ concerned about backwards comp
[15:24:17] <stenno> if they came up with HTML5 without any prior html versions, i doubt it would be in there
[15:24:59] <blueagain> stenno: yup. I just find the spec language somewhat inconclusive. it boils to "do whatever you want with a br, we don't care"
[15:25:05] <blueagain> boils down*
[15:25:28] <stenno> blueagain: visually, yes, even though the specs strongly recommend following the UA recommendations which are specified in the specs
[15:26:12] <stenno> its very important for html5 itself to not consider itself with presentation, and that a <br> is 'just' a semantical linebreak
[15:26:13] <theskillwithin> ehh the UA is different across browsers tho
[15:26:21] <stenno> indeed
[15:27:04] <stenno> so thats why its important that a html element still has its _inherent_ semantic meaning regardless of presentation
[15:27:25] <blueagain> it's just a bit divorced from reality, that all. like when we talk about a plane, we know it must be able to fly to quality as a plane
[15:27:29] <stenno> so a screen reader doesn't need to consider or grasp the context in which the br is used, or even how it is presented
[15:27:41] <blueagain> defining something as purely semantic with no attached meaning is weird to me
[15:27:51] <stenno> that is the meaning
[15:28:02] <stenno> the semantics of the element is the meaning, and nothing else
[15:28:17] <stenno> the presentation does not change the meaning of the element
[15:29:49] <blueagain> no, but presentation should skew *some* way
[15:29:58] <blueagain> that's in line with the name of the element
[15:30:33] <stenno> the fact that the element is named 'linebreak' and that the <b> element is named for 'bold' is just for historical reasons
[15:30:51] <stenno> they did not want to deprecate 80% of existing html4 elements and break the web
[15:31:12] <stenno> so they retcon'd some of those elements and thats why we have the mess i mentioned in the beginning of this discussion
[15:31:19] <blueagain> yup
[15:32:06] <stenno> html4 did not have the pure semantic 'attitude' of html5, so there we had elements like <b> which are described as 'the bold element, will render its contents in bold'
[15:32:43] <stenno> html4 also talks about inline vs. block which is a concept that is not relevant for html5
[15:33:12] <theskillwithin> bold aka font-weight 700
[15:33:29] <stenno> in html5 you have content categories, and i can indeed construct markup that is invalid in html4, but valid in html5
[15:33:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:34:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:34:40] <stenno> <div><a><div></div></a></div> is my favorite example: this is invalid in html4 (<a> is considered 'inline', therefore must not contain 'block' elements like div), but valid in html5 (<a> has content model transparent, therefore inherits its content model from its parent)
[15:35:34] <blueagain> so <a> is just a semantic link?
[15:35:45] <stenno> a is a hyperlink
[15:35:57] <stenno> it kept its meaning from html4
[15:36:04] <blueagain> oh ok, so it's not purely semantic
[15:36:18] <stenno> well, its definetely not about presentation
[15:37:12] <blueagain> by the way, do browsers prestyle *any* of the semantic elements introduced in html5?
[15:37:13] <stenno> a hyperlink/anchor will always be a hyperlink/anchor, regardless of context or presentation
[15:37:16] *** Joins: voltage (voltage@user/voltage)
[15:37:31] <stenno> with prestyle you mean UA stylesheet?
[15:37:33] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[15:37:35] *** voltage is now known as voltage_
[15:37:42] <blueagain> yeah
[15:37:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:38:37] <stenno> blueagain: https://html.spec.whatwg.org/multipage/rendering.html#rendering
[15:39:25] <stenno> for example, here we see recommended:
[15:39:28] <stenno> b, strong { font-weight: bolder; }
[15:40:07] <theskillwithin> blueagain quiz time:  is <p> tag an inline, inline-block, or block element?
[15:40:12] <stenno> you can derive a semantic meaning from all html5 elements apart from div and span which are intentionally 'without semantic meaning'
[15:41:17] <blueagain> theskillwithin: I'd say block
[15:41:25] <theskillwithin> i'd say correct
[15:41:52] <blueagain> stenno: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b
[15:41:57] <blueagain> is this the retconning you were talking about?
[15:42:04] <blueagain> "The Bring Attention To"
[15:42:05] <stenno> blueagain: yes
[15:42:07] <blueagain> lol
[15:42:12] <stenno> check also <i>
[15:42:17] <stenno> and <em> vs. <strong>
[15:42:18] <blueagain> this is ludicrous
[15:42:27] <stenno> its silly, but its neccessary
[15:42:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[15:42:43] <stenno> the alternative would be to deprecate <b>
[15:42:51] <stenno> which would break the web
[15:43:22] <blueagain> I'm pretty sure most web developers have no idea about this and simply associate <b> and <strong> with bold
[15:43:28] <stenno> indeed, they don't
[15:43:40] <stenno> most web developers have no idea about HTML, but they think they do
[15:43:48] <stenno> very dangerous combination
[15:43:54] <stenno> s/most/many/
[15:44:27] <blueagain> and then you get bashed if you want go purist and just use divs or spans
[15:44:33] <blueagain> + css
[15:44:44] <stenno> rightly so
[15:45:10] *** Joins: Sayona (~Sayona@user/sayona)
[15:45:22] <stenno> (the bashing is justified)
[15:46:06] <blueagain> just out of interested, I checked facebook
[15:46:13] <blueagain> they mostly use divs, some h2 and form
[15:46:17] <blueagain> interest*
[15:46:32] <theskillwithin> most? idk I have a hard time picturing that.  id be more comfortable in saying most don't know their aria attributes stenno
[15:46:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:47:13] <stenno> theskillwithin: ask an average frontend dev what html content categories are, or if my markup snippet is valid, and they will answer no to both
[15:47:19] <blueagain> they don't use <footer> but a <div> with id=pageFooter
[15:47:39] <blueagain> so you could think, why should the average developer care about semantics if even fb doesn't care?
[15:48:59] <stenno> keep in mind that divs can be used as non-semantic container elements
[15:49:09] *** Joins: silverdust (~silverdus@user/silverdust)
[15:49:30] <stenno> i don't know why they would use IDs in the first place, and also not a <footer> element
[15:49:46] <blueagain> twitter actually uses <main>
[15:49:58] <stenno> i just know that 'facebook doesnt do it' is not really a good point of argument
[15:50:02] <blueagain> the rest is div with css
[15:50:10] <blueagain> it's not really my argument
[15:50:22] <blueagain> my argument is that the web is a visual medium and most developers care about that, not about semantics
[15:50:39] <stenno> twitter uses a nav
[15:50:49] <stenno> and aria roles
[15:50:51] <Sayona> Hi, I need a little help with Quill Editor ( https://paste.laravel.io/f25a1d92-eba4-4761-8631-ec5e6534c41a ) , I need to create two textarea for two language... but is not working for both of them, is working only for first one...
[15:50:57] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 240 seconds)
[15:51:09] <stenno> blueagain: google will be very friendly to you if you use semantic web
[15:51:32] <stenno> even though SEO _should_ not be an argument for proper markup
[15:51:37] <stenno> accessibility should, though
[15:51:47] *** Parts: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) ()
[15:52:33] <blueagain> oh, if I wanted accessibility, I'd have to translate my website to over 200 languages
[15:52:42] <blueagain> accessibility is an ideal
[15:52:49] <average> I am the average developer
[15:52:57] <stenno> blueagain: https://developers.facebook.com/docs/sharing/webmasters/#markup
[15:53:30] <stenno> hmm that doesn't actually say what i thought it would, disregard
[15:53:37] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[15:54:39] <blueagain> translating my website to chinese would increase its accessibility at lot more than using semantic elements (again, not against them, just saying there's a difference between ideal and practice)
[15:56:55] <stenno> to my knowledge, localization is _not_ what we understand as accessibility
[15:57:48] <theskillwithin> a11y l10n
[15:57:50] <blueagain> from mdn: "Accessibility is the practice of making your websites usable by as many people as possible. We traditionally think of this as being about people with disabilities ..."
[15:58:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:58:58] <blueagain> unless you can argue that everyone can easily learn english, then restricting your website to english (or to any language), is practically making it unusable to people who don't know the language
[15:59:22] <stenno> blueagain: yes, note that that article doesn't mention translation into other languages as being an aspect of accessibility
[15:59:34] <blueagain> that's just a bias of the article, though
[15:59:35] <stenno> it gets really interesting when we talk about aria-labels
[15:59:51] <stenno> it was the definition you picked
[15:59:56] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[16:00:11] <stenno> https://www.w3.org/standards/webdesign/accessibility
[16:00:20] <blueagain> I picked it to show they are biased. They say "usable by as many people as possible", and then say that their definition is restricted to disabled people
[16:00:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:00:31] <theskillwithin> example. accessibility is making sure if someone with poor eye site zooms in on your site, it still works.   no language involved
[16:01:04] <theskillwithin> sight
[16:01:49] <theskillwithin> i18n is different languages
[16:03:09] <stenno> consider this intersection: a website should be accessible so that an impaired user can simply switch a language
[16:04:35] <stenno> the different language itself is outside of accessibility concerns, but the ability to switch them conveniently is
[16:05:12] <blueagain> that's just an arbitrary definition of accessibility though. As said, *effectively* people who don't know english can't access an english website
[16:05:36] <Alexendoo> Words having different meanings in different contexts shouldn't be surprising
[16:05:40] <stenno> correct, its a certain definition of the word 'accessibility' which might not cover things we understand as 'access-
[16:05:42] <stenno> that
[16:05:55] <blueagain> you can put it under i18n, it doesn't change the fact some people are barred from using the website
[16:06:49] <theskillwithin> barred? maybe in north korea, or china
[16:07:01] <blueagain> not physically
[16:08:28] <theskillwithin> idk when using chrome and i go to a site not in my language, it translates it for me
[16:08:45] <stenno> badly
[16:09:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[16:09:31] <theskillwithin> every international airport is required to speak english,  so i kinda won the language lottery i guess
[16:09:54] <blueagain> sure, native speakers of english got a better hand
[16:10:09] <blueagain> but life isn't always fair, like with everything else
[16:10:10] <theskillwithin> also the programming languages are in english
[16:10:19] <blueagain> yeah, we've had the discussion yesterday :)
[16:10:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:11:18] <blueagain> but say you're born in iceland, then unless you know english, your world is limited to about 300k people and whatever they produce in your language.
[16:11:45] <blueagain> I wouldn't call it a form of disability, but certainly a huge limitation
[16:12:19] <stenno> blueagain: i am not arguing that translating to different languages is bad, nor am i saying that translating your page to other languages wont help more people grasping its content, because it is
[16:12:38] <stenno> its just not a concern to what we call accessibility in the context of semantic web
[16:13:32] <blueagain> sure, not questioning the definition itself in that context
[16:13:44] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:14:42] <theskillwithin> maybe they are disabled if they can't learn english?
[16:14:49] <theskillwithin> jk jk
[16:15:05] <stenno> are you arguing that translating your page to chinese will potentially allow more people to read your content than a semantic, accessible page which is still just in a single obscure language?
[16:15:40] <blueagain> stenno: yes, I'm saying it's more effective in reaching more people
[16:15:50] <stenno> right
[16:15:56] <blueagain> if the concern is to reach more people to begin with
[16:19:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:19:09] *** Joins: trafficjam (~qubes@2001:8004:1580:2f22:1ee8:bde3:9633:733d)
[16:19:23] *** Quits: D4mned (~D1mned@212.101.253.99) (Ping timeout: 252 seconds)
[16:19:41] <trafficjam> should i be using 1080p images for rendering on iphones/android?
[16:20:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:20:27] <theskillwithin> wat
[16:21:12] <trafficjam> the iphone 12 has a resolution of 2532x1170, so does that mean if i want full width images to look good on e.g. the iphone 12, i would need images with >= 1080p?
[16:21:35] <trafficjam> or is that sort of detail not necessary?
[16:22:13] <stenno> ppi/dpi numbers are more important than dimensions
[16:22:38] <theskillwithin> tldr, that detail is not necessary for images on a phone
[16:23:09] <trafficjam> oh ok, so as long as the dpi of the device is less than the image native width (for full screen images), i should be ok?
[16:23:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:24:05] <theskillwithin> id go further then that, you can lossy a lot before anyone would notice
[16:24:38] <theskillwithin> esp on mobile, where people might have slower speeds
[16:25:31] <theskillwithin> i don't even know what a 1080p image is
[16:25:31] <stenno> trafficjam: https://medium.com/@flik185/understanding-device-resolution-for-web-design-and-development-3bb4a5183478
[16:25:41] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:6028:a9f5:a949:31b5) (Read error: Connection reset by peer)
[16:26:11] <trafficjam> i mean i can personally definitely the difference between a 600x350 image and a 1080p image when both are full width across my iphone screen, but it's not a huge difference
[16:26:19] <blueagain> oy, new severance out
[16:26:41] <trafficjam> stenno: thanks
[16:27:07] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf)
[16:28:06] <theskillwithin> the only use for hi res images is either for wedding photos or porn
[16:28:53] <theskillwithin> both areas I will never work in
[16:28:57] <trafficjam> lol
[16:29:19] <theskillwithin> or i mean wont work in again
[16:29:51] <blueagain> oO
[16:29:55] <blueagain> that was way too much info
[16:30:12] <trafficjam> this is a judgement free space
[16:30:32] <blueagain> oh, I never judge anyone
[16:30:36] <blueagain> but my brain does
[16:30:43] <trafficjam> there's no reason to be ashamed about working with wedding photos
[16:30:47] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 256 seconds)
[16:31:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:31:15] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[16:33:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:33:57] <trafficjam> theskillwithin, stenno: so in general for assets, should i use the highest resolution source images as possible (and then provide lower resolution variants when need)?
[16:34:01] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[16:34:07] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[16:34:07] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[16:34:30] <stenno> yes, check out the <source> tag for <image>'s
[16:34:31] *** robyndrake is now known as robyn
[16:34:54] <stenno> sorry, <picture>
[16:34:59] <stenno> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture
[16:35:01] <theskillwithin> a long long time ago, I was working on a swimsuit magento site.  the mother owned the site and her daughters were the models.  so every now and then back then.  id get emails with the subject with "pictures for [my name]" and attached were well you know
[16:35:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:35:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf) (Ping timeout: 240 seconds)
[16:36:15] <blueagain> theskillwithin: whatever gets the bills paid :)
[16:36:17] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 240 seconds)
[16:37:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf)
[16:38:10] <blueagain> stenno: that's something I was thinking about a few days ago, that it would be awesome if <picture> could be progressive loading
[16:38:20] <blueagain> could do*
[16:38:28] <theskillwithin> blueagain i mean it takes *hard* work to another level
[16:38:40] <blueagain> lol
[16:38:52] <stenno> blueagain: what do you mean with progressive loading?
[16:38:59] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:39:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:39:15] <blueagain> stenno: load a lower-resolution image first, and replace with the higher resolution later (once downloaded)
[16:39:20] <stenno> oh its a PWA concept
[16:39:31] <stenno> oh i see
[16:39:36] <blueagain> I'd love for the browser to do it on itself
[16:39:38] <stenno> that sounds like a lot of unneccessary traffic
[16:39:52] <blueagain> seems to be a thing though
[16:40:02] <stenno> isn't the idea of sources in the list that you only download the asset you actually need?
[16:40:17] <blueagain> I thought it was addressing different resolutions
[16:40:47] <blueagain> ... which I guess is the same?
[16:41:20] <blueagain> oh, there's also something about fallback formats in case of missing support
[16:41:34] <stenno> i understand now
[16:42:21] <stenno> as a placeholder which has the same dimensions
[16:42:46] <blueagain> yup, just different resolution
[16:42:53] <stenno> like poster for video
[16:43:00] <blueagain> yeah
[16:44:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:46:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3d20:2cad:65be:4049)
[16:46:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:47:24] <stenno> there is rel="preload" which can maybe be used for that
[16:48:03] <stenno> dunno how that would work for images though
[16:48:14] <stenno> or if it would make sense in the first place
[16:49:06] <stenno> https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload#including_media
[16:51:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[16:54:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:56:35] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 256 seconds)
[17:00:21] *** Joins: silverdust (~silverdus@user/silverdust)
[17:01:52] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[17:02:05] *** Joins: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby)
[17:02:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[17:04:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:05:35] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 252 seconds)
[17:06:36] <NinjaKirby> Greetings, is there any good tools for measuring script performance? To find hard hit area's of processing time.
[17:09:11] <NinjaKirby> Actually, VS Studio displayed time passed between breakpoints, maybe I should try using it in VS Code.
[17:10:24] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[17:10:53] <stenno> chrome has a profiler in devtools
[17:10:53] *** Joins: fef (~thedawn@user/thedawn)
[17:11:15] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[17:12:19] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[17:15:50] <NinjaKirby> Whoa, oh yeah, Brave is a variant of Chrome right? I think I see the same Performance profile thing, nice.
[17:15:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:17:06] <stenno> chrome and brave are both based on chromium, yeah
[17:17:54] <blueagain> almost everything is chromium today iirc, except firefox
[17:18:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:18:01] <blueagain> oh, and safari probably?
[17:18:27] <theskillwithin> safari is the new pain int he ass these days
[17:20:44] <theskillwithin> even edge uses chrome
[17:21:05] <theskillwithin> i mean blink
[17:21:11] <theskillwithin> webkit*
[17:21:59] <blueagain> and opera, I learned yesterday
[17:22:17] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[17:30:22] <NinjaKirby> It looks like my 20ms interval isn't always being honoured despite plentiful time for code execution.
[17:30:47] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.18.138)
[17:30:47] *** ChanServ sets mode: +b *!*@78.84.18.138
[17:30:47] *** Ronalds_Mazitis_ was kicked by ChanServ (Banned: disruptive)
[17:30:47] *** ChanServ sets mode: +o litharge
[17:30:59] *** litharge sets mode: -o litharge
[17:31:06] * stenno pats litharge
[17:31:18] <stenno> good doggo
[17:32:37] <NinjaKirby> I must be reading it wrong. Much to learn.
[17:35:06] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:35:07] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:35:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:37:28] *** Joins: D4mned (~D1mned@212.101.253.99)
[17:38:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:40:56] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-ac2d-d2ae-a0ee-b177.res6.spectrum.com)
[17:43:22] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[17:46:33] *** Joins: fef (~thedawn@user/thedawn)
[17:49:33] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[17:49:57] *** Joins: nomic (~nomic@185.192.69.129)
[17:51:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:54:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:55:49] *** Quits: trafficjam (~qubes@2001:8004:1580:2f22:1ee8:bde3:9633:733d) (Quit: trafficjam)
[18:00:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:04:44] *** Joins: src (~src@user/src)
[18:06:34] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 272 seconds)
[18:16:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[18:20:09] <NinjaKirby> Unbelievable, so I've been working on a game for nearly 5 months now, but only now do I read an article about JS Game Design. It directs the reader to use requestAnimationFrame(), so I just spent 30 seconds switching from setInterval() to rAF(), and my game is now super smooth.
[18:20:38] <NinjaKirby> I should read things, basically.
[18:20:41] <stenno> nice! thats indeed very important regarding timings
[18:20:45] <stenno> eeh, you always learn :P
[18:21:34] <NinjaKirby> Aye, certainly true :)
[18:21:48] <stenno> but if you had mentioned setInterval in this channel in the last few months, we could have already told you!
[18:21:53] <stenno> !setInterval
[18:21:55] <stenno> fail
[18:22:07] <stenno> wasn't there a trigger like that
[18:22:12] <stenno> !interval
[18:22:12] <theskillwithin> the learning never stops
[18:22:14] <NinjaKirby> Didn't consider there was another option, so I didn't ask XD
[18:22:32] <stenno> !raf
[18:22:33] <jellobot> stenno, For animations, requestAnimationFrame is far superior to setTimeout. http://paulirish.com/2011/requestanimationframe-for-smart-animating/ To cover older browsers, use this polyfill: https://gist.github.com/1579671
[18:23:03] * NinjaKirby clinky's the linky
[18:23:17] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:25:03] <stenno> doesn't mention why setinterval is bad though
[18:28:04] <theskillwithin> !setinterval
[18:28:05] <jellobot> theskillwithin, Avoid setInterval; use setTimeout instead. https://web.archive.org/web/20160602165800/https://zetafleet.com/blog/2010/04/why-i-consider-setinterval-to-be-harmful.html (requestAnimationFrame may be another alternative, see !raf)
[18:28:09] *** Joins: Rockwood (~Rocky@user/rocky)
[18:28:33] <stenno> case sensitive triggers eh
[18:28:41] <theskillwithin> ya
[18:28:54] <Rockwood> stenno, theskillwithin o/
[18:28:57] <stenno> hi
[18:29:07] <theskillwithin> o/
[18:29:16] <Rockwood> \o/
[18:29:43] *** Joins: fef (~thedawn@user/thedawn)
[18:36:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:37:30] <theskillwithin> altho anyone can set a factoid so idk if it should be treated as fact
[18:37:31] *** Quits: D4mned (~D1mned@212.101.253.99) (Read error: Connection reset by peer)
[18:38:11] *** Joins: D4mned (~D1mned@212.101.234.211)
[18:38:41] <theskillwithin> its a pointer to facts user uses the factoid as
[18:39:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[18:40:03] *** Quits: paule32 (~paul@user/paule32) (Quit: Leaving)
[18:41:08] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:9e12:e479:e8f5:a3ab:d5e)
[18:43:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:4931:2cf9:1cab:5daf) (Ping timeout: 240 seconds)
[18:45:12] <theskillwithin> they are pretty good tho
[18:45:32] <gde33> when building dom elments by cloning do I populate them by tagName by id or with queryselector?
[18:46:33] *** Joins: pmercado (~pmercado@186.107.44.64)
[18:47:24] <gde33> eh it probably doesn't matter I suppose
[18:48:03] <blueagain> theskillwithin: what's a factoid?
[18:50:20] <theskillwithin> well you can't do it now,  but used to be able to set any trigger ecma/jellobot.  so for example someone set that setinerval "factoid" that jellobot responds to
[18:50:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:50:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Client Quit)
[18:52:06] <silly> !this @isAfactoid
[18:52:07] <jellobot> isAfactoid, A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[18:53:10] <blueagain> so like a snippet of information about something?
[18:53:36] <silly> it's a an information you can request from the bot
[18:54:07] <silly> dunno if this is a real word with a specific meaning
[18:54:34] <silly> old bot had !learn and !forget commands
[18:54:45] <theskillwithin> oh ya thats a very important detail, were talking about the bot
[18:56:08] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:56:47] <theskillwithin> the original creator of the bot passed away, you can see in topic
[18:57:41] <blueagain> oh, now it clicked
[18:57:46] <silly> old bot is the bot before that
[18:58:13] <silly> i mean ecmabot
[19:00:04] <silly> afaik jellobot ne had learn and forget functionality
[19:01:40] *** Joins: stenno (~stenno@user/stenno)
[19:03:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[19:12:34] *** Joins: kakashiAL (~kakashi@105.159.127.77)
[19:22:49] *** Joins: wyclif (~wyclif@user/wyclif)
[19:23:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:24:03] <gde33> I rewrote my json > html thing many times now and the original was the fastest
[19:24:23] <gde33> make a giant string and shove it into the page
[19:25:02] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Ping timeout: 240 seconds)
[19:25:37] *** Quits: kakashiAL (~kakashi@105.159.127.77) (Ping timeout: 240 seconds)
[19:26:03] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[19:27:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:29:00] *** Joins: wyclif (~wyclif@user/wyclif)
[19:29:50] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[19:33:16] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[19:33:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:34:31] *** Joins: wyclif (~wyclif@user/wyclif)
[19:35:28] *** Joins: wroathe (~wroathe@user/wroathe)
[19:36:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:38:55] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[19:39:10] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[19:39:16] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[19:40:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:43:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:46:16] *** Joins: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br)
[19:54:53] <gde33> would it create a lot of overhead if console would return the logged value?
[19:55:31] *** Joins: summersault (~summersau@179.221.251.36)
[19:56:24] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[19:56:53] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732)
[19:58:45] *** Joins: summersault (~summersau@179.221.251.36)
[20:00:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[20:00:34] *** Joins: pulse (~pulse@user/pulse)
[20:01:26] <silly> i'd consider  console itself as overhead
[20:02:53] *** Joins: crashrep (~crashrep@user/crashrep)
[20:06:09] *** Joins: silverdust (~silverdus@user/silverdust)
[20:06:32] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 252 seconds)
[20:13:49] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[20:14:29] *** Joins: ferdna (~ferdna@user/ferdna)
[20:17:30] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:21:41] *** Quits: karabaja4 (~karabaja4@dh207-95-76.xnet.hr) (Remote host closed the connection)
[20:21:47] *** Joins: mohab (~mohab@45.243.51.195)
[20:23:10] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[20:32:01] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3d20:2cad:65be:4049) (Ping timeout: 245 seconds)
[20:32:46] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[20:33:51] <qswz> https://github.com/remix-run/react-router/issues/7285#issuecomment-1053557892
[20:35:42] <moldorcoder7> hi dunno if ts question are allowed here but i really dont understand this typescript syntax : https://bpa.st/KZGQ
[20:36:08] <moldorcoder7> what is the (control: AbstractControl): {[key: string]: any} |  pipe doing here
[20:37:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:39:47] <qswz> | is type merger
[20:39:48] <moldorcoder7> ho ok there is a ts chan , sorry
[20:39:49] <qswz> merge*
[20:39:50] *** Quits: D4mned (~D1mned@212.101.234.211) (Ping timeout: 272 seconds)
[20:40:04] <moldorcoder7> qswz, yes but on the return type ?
[20:40:06] <qswz> const foo = Foo | Bar;
[20:40:07] <Alexendoo> It's some weird formatting
[20:40:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:40:25] <Alexendoo> null shouldn't really be on the next line like that
[20:40:30] <qswz> moldorcoder7: second type is a function
[20:40:39] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:c8a0:f99f:92aa:2459)
[20:41:07] <moldorcoder7> and first type is  {[key: string]: any}  ?
[20:41:12] <qswz> {[k]: string} | null
[20:41:20] <qswz> oops second type is just null
[20:41:24] <qswz> yea shitty formatting
[20:41:29] <moldorcoder7> haaa
[20:41:35] <moldorcoder7> im dumb :)
[20:41:56] <moldorcoder7> i taught null  was like capture for a lambda
[20:42:00] <qswz> (args): ReturnType => { ... }
[20:42:18] <moldorcoder7> yes got it
[20:42:27] <moldorcoder7> it it the formatiing that got me
[20:42:30] <moldorcoder7> thanks for help
[20:42:33] <qswz> even first line confusing
[20:42:37] <qswz> yw
[20:42:56] <qswz> author has a Return key syndrome
[20:43:02] <qswz> hits Enter randomly
[20:43:42] *** Joins: D4mned (~D1mned@212.101.234.211)
[20:43:43] <moldorcoder7> i think it is copy paste issuefrom pdf book example
[20:46:48] *** Quits: pmercado (~pmercado@186.107.44.64) (Ping timeout: 272 seconds)
[20:47:47] *** Quits: henry40408 (~henry4040@175.181.176.30) (Ping timeout: 256 seconds)
[20:47:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[20:52:57] *** Joins: zebrag (~chris@user/zebrag)
[20:53:30] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:55:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:57:30] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-ac2d-d2ae-a0ee-b177.res6.spectrum.com) (Ping timeout: 260 seconds)
[20:58:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[20:59:14] <gde33> facinating, I had 1300 inline onclick="foo()" handelers and it took about 1200 ms to parse the dom. After removing those it is about 1000. Adding them with a for...of loop takes only 6 ms
[20:59:36] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:59:53] <blueagain> gde33: why so many handlers?
[21:00:00] <qswz> still no using react eh
[21:00:01] <gde33> for science!
[21:00:06] <ljharb> yeah that’s ridiculous. Add one handler and use delegation
[21:00:21] <ljharb> gde33: saying “for science” doesn’t justify doing a dumb thing, ftr
[21:00:31] <ljharb> it’s just a funnier response - once.
[21:00:46] <gde33> I had considered that (I usually do) but I doubt it would improve the 6 ms adding indevidual handelers
[21:00:53] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Client Quit)
[21:01:08] <ljharb> I’m confident it would, but also it’d be more performant later, during rerenders and during actual event propagation
[21:01:13] <qswz> chandelers
[21:01:14] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:01:17] <ljharb> always do what’s cleaner, that will end up being fastest
[21:01:32] <ljharb> qswz: chanandler bongs
[21:02:18] <gde33> I'm just curious :)
[21:02:22] <blueagain> ubereats is kind of awesome, the restaurant never gets my contact details
[21:02:37] <gde33> its rather mind boggling how fast some things are
[21:05:23] <gde33> ljharb: the spagetti string builder was faster than doing it in clean single purpose functions :P
[21:05:46] <gde33> Don't worry, I went with the clean version
[21:05:47] <ljharb> gde33: you’re only measuring one thing tho
[21:06:28] <ljharb> speed covers authoring time, maintenance time, initial setup time, long-running app time, responsiveness to the event, etc
[21:07:04] <ljharb> blueagain: yeah, the restaurant, not the delivery driver, is definitely the weak privacy link there :-p
[21:07:22] <gde33> I only neglect maintanance and authoring time
[21:07:37] <theskillwithin> When a metric becomes a target, it ceases to be a good measure
[21:07:38] <ljharb> gde33: which also matter a lot
[21:08:18] *** Joins: programmar (~whatever@118.69.128.37)
[21:08:38] <blueagain> ljharb: I entered my surname, but uber shortened it to initials, so drivers never actually ring properly
[21:08:49] <blueagain> I need to message them
[21:08:51] <programmar> question please, why isn't this working ? https://jsfiddle.net/f7o6prgm/1/, i was trying to add a function to each <a> and when it's clicked, it will access the "value" attribute of the corresponding <a> but it always get me "undefined"
[21:08:52] <ljharb> lol
[21:09:08] <ljharb> blueagain: you can just put that in the special instructions saved with your address
[21:09:17] <gde33> blueagain: depends how often you order, if you order often its worth them knowing your name
[21:09:28] <ljharb> !last @ programmar
[21:09:28] <jellobot> programmar, If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/
[21:09:29] <blueagain> oh, maybe I'll do that, that'll save me chatting with the driver each time
[21:09:45] <blueagain> not sure though the driver will look at it, but worth a try
[21:09:47] <ljharb> programmar: a) don’t use loops, b) don’t add one to each link, add one to a container that works for all the links at once
[21:10:57] <blueagain> oh, I already put my surname additionally in the special instructions
[21:11:21] <blueagain> I just don't think they look, they get it right at a rate of 1/10
[21:11:47] <qswz> I want to live in a tropoical place
[21:11:50] <qswz> damn it
[21:12:12] <qswz> tropical* and in the nature
[21:12:20] <qswz> that where I belong, no in the city
[21:12:56] <qswz> I'll migrate south guys
[21:13:04] <qswz> will keep you up to date
[21:13:24] *** Joins: Luminos (~Luminos@88.244.88.201)
[21:13:40] <qswz> lots African people do the opposite way, they won't understand
[21:13:44] <ljharb> lol
[21:13:51] *** Joins: teut (~teut@122.161.83.81)
[21:13:57] <blueagain> qswz: you need to qualify your sentence with a hemisphere, south isn't always warmer
[21:14:11] <ljharb> nope, you heard him, he’s heading to the Antarctic
[21:14:11] <qswz> yea Europe
[21:14:26] <ljharb> the farthest you can get from any city
[21:14:33] <ljharb> smack in the middle of nature
[21:14:52] *** Parts: Luminos (~Luminos@88.244.88.201) ()
[21:14:53] <teut> https://dpaste.org/NNcx
[21:14:54] <blueagain> in the timezone of nothing
[21:15:00] <qswz> or I go to Ukraine, and fight for freedom
[21:15:06] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[21:15:08] <ljharb> blueagain: there’s every time zone there, not none
[21:15:14] <teut> here I am using axios but i want to use apollo so that querying can be easy
[21:15:28] <ljharb> qswz: they surely need the help
[21:15:34] <teut> once I get the data I will replace the cards in this file
[21:15:36] <blueagain> ljharb: I did mean the exact south pole
[21:15:51] <blueagain> but I don't think timezones make sense generally there
[21:15:54] <qswz> teut: the code shows you're confused about pormises
[21:15:54] <teut> but apollo requires using the  hook
[21:15:57] <qswz> promises*
[21:16:17] <teut> in what way?
[21:16:31] <teut> whats wrong about it?
[21:16:33] <programmar> ljharb: ok so i assume for loop doesn't execute each line independently then ?
[21:16:39] <programmar> this is a bit strange of a behavior
[21:16:42] *** Quits: mohab (~mohab@45.243.51.195) (Quit: WeeChat 3.4)
[21:16:49] <teut> it works too
[21:17:03] <qswz> confused about promises or react hooks or both
[21:17:09] <teut> ??
[21:17:18] <qswz> where's the component?
[21:17:38] <qswz> don't export state, export a component
[21:18:02] <teut> no thats how I design my code
[21:18:16] <qswz> Right, if you know what you're doing
[21:18:22] <teut> https://dpaste.org/ntG6#L6
[21:18:28] <teut> see this
[21:18:37] <teut> this is the thing thats exported there
[21:19:01] <teut> that state acts as an interface for the code
[21:19:18] <teut> not a very clear one definitely
[21:19:40] <qswz> teut: that's bad
[21:19:47] <teut> why so?
[21:19:50] <qswz> or the naming is bad
[21:19:50] <theskillwithin> programmar https://jsfiddle.net/theskillwithin/n7hmqwap/
[21:19:59] <qswz> but a state has to live in a component
[21:20:02] <teut> I can agree with the second
[21:20:03] <qswz> you don't import state
[21:20:11] <teut> why so?
[21:20:16] <qswz> indexState.cards.
[21:20:21] <qswz> call it data maybe
[21:20:23] <teut> redux also did it
[21:20:42] *** Joins: onosendi (~onosendi@user/onosendi)
[21:20:42] <qswz> I hope or you it is statis data
[21:20:47] <qswz> static*
[21:20:47] <programmar> theskillwithin: yea ok thk but i am still trying to understand this weird behavior
[21:20:52] <qswz> for*
[21:21:00] <teut> oh now I see the problem
[21:21:46] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 260 seconds)
[21:22:03] *** Quits: Aaron_ (~Aaron@c-73-73-137-44.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[21:22:19] <onosendi> theskillwithin: You've used emotion, correct? Do you prefer @emotion/styled, or the css prop?
[21:22:27] <teut> are things that we import immutable?
[21:22:58] <theskillwithin> styled i think
[21:24:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:24:36] <theskillwithin> programmar i think the weird behavior was you doing it wrong?
[21:25:17] <qswz> they are bindings
[21:25:22] <programmar> theskillwithin: could be, but i was referring to this "closure" thing that i was pointed to
[21:25:31] <qswz> you can do export let foo = 1; and increment it
[21:25:44] <qswz> but that's bad idea
[21:27:07] <blueagain> interestingly, it's not just that custom elements suck, it's that every single framework for them sucks as well
[21:27:43] <qswz> if you look ar google pages, they are full of custom elements
[21:27:50] <qswz> google search/youtube
[21:33:06] <ljharb> programmar: no. It’s that the i variable’s value is closed over n times, and all of them point to the same number -the last value of i
[21:33:11] <ljharb> programmar: avoid loops
[21:33:40] <ljharb> teut: imported bindings are immutable, but a module can alter what it exports (just not the name). That’s a bad idea tho
[21:34:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211)
[21:35:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:37:24] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:9e12:e479:e8f5:a3ab:d5e) (Ping timeout: 240 seconds)
[21:37:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:41:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[21:42:03] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[21:43:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d52f:610b:c364:63c2) (Quit: Leaving)
[21:44:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:44:33] <qswz> mm something good for mouthwash is sea water, I'll collect some
[21:45:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:45:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:46:18] <qswz> not directly JS related
[21:46:28] <qswz> but having good teeth help
[21:46:46] *** Joins: matsaman (~matsaman@user/matsaman)
[21:46:59] <silly> my cousing flushes sea water through his nose, try that
[21:47:17] *** Joins: kmh (~kmh@2a00:6020:5004:6800:cc51:dafa:a805:1ab8)
[21:47:59] <qswz> I have a neti pot
[21:48:21] <silly> potty net?
[21:49:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732) (Remote host closed the connection)
[21:49:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59)
[21:49:36] <qswz> I think I'll go back to carribeans
[21:50:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:50:32] *** Joins: wyclif (~wyclif@user/wyclif)
[21:51:07] <qswz> that way we cover Earth pretty well with my bosses in Barcelone and HK
[21:51:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[21:51:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:51:39] <silly> back? you're from there?!
[21:51:50] <qswz> I've grown there
[21:51:56] <silly> wow
[21:51:57] <qswz> until 12
[21:52:00] <silly> french guinea?
[21:52:06] <qswz> Martinique
[21:52:19] <silly> that's next to dominica?
[21:52:53] <silly> awesome
[21:52:55] <qswz> yep, between Dominica and St Luci
[21:52:58] <qswz> Lucia*
[21:53:12] <silly> i'd go with you if didn't have a cat
[21:53:49] <qswz> haha, (s)he's safe there, no direct predators
[21:54:22] <theskillwithin> sea water, wtf... just add salt to normal water
[21:54:28] <silly> gotta make some $olls first
[21:54:49] <silly> theskillwithin, sea water is magic
[21:55:09] <silly> there's 3 things capable of doing miracles
[21:55:18] <silly> sea water, olives and god
[21:55:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:55:30] <qswz> I'll get there in boat, like this: https://youtu.be/n3e13L3vQh4?t=261
[21:55:32] <skillbot> YouTube Title: Transat Hobie Cat Laurent Bourgnon 1986
[21:55:35] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59) (Ping timeout: 250 seconds)
[21:55:37] <gde33> the hoff!
[21:55:46] <theskillwithin> might be onto something there with olive oil, but the rest is nonsense
[21:56:03] *** Joins: wyclif (~wyclif@user/wyclif)
[21:56:23] <gde33> cocnut oil is the secret
[21:56:25] <silly> qswz, the submarine with a fin?
[21:56:43] <theskillwithin> how about just brushing your teeth is the secret
[21:56:50] <silly> lol
[21:57:40] <qswz> https://cdn001.tintin.com/public/tintin/img/news/5679/rackham_sousmarin_V3.jpg
[21:59:34] <qswz> I prefer this submarine https://upload.wikimedia.org/wikipedia/en/thumb/a/a8/Spirou9repaire.jpg/220px-Spirou9repaire.jpg
[22:00:20] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[22:00:52] *** Joins: g00fy78 (~g00fy@user/g00fy)
[22:00:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:01:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:02:14] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[22:03:06] <theskillwithin> btw my dad is a dentist, and next time i see him im gunna have to now say, someone on the internet said they use sea water for mouth wash
[22:03:27] <silly> snitch
[22:04:01] *** Joins: stenno (~stenno@user/stenno)
[22:04:49] <theskillwithin> well who knows, if its legit as you say, i might be surprised if he says, oh ya thats legit.   but i srsly doubt that will happen
[22:05:10] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[22:05:13] <silly> lol
[22:05:48] <qswz> so what, either Russia gets broken in smaller countries like old USSR or they use their 6400 nukes? or both
[22:05:49] <teut> ljharb idea is that the state should be there, there won't be any editing here
[22:05:56] <silly> my neighbor regularly picks leave off my olive trees and makes tea of it
[22:06:09] <silly> i bet she'll life 200yrs
[22:06:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:06:30] <qswz> silly: tell him it's like picking hairs on your head, so don't do it too often
[22:06:40] <silly> it's a she
[22:06:40] <teut> keeping the big state away from the code is required, this state is read only
[22:06:43] <silly> o/c
[22:06:51] <theskillwithin> https://www.youtube.com/watch?v=teSXcJlpMl8
[22:06:51] <skillbot> YouTube Title: Ukraine is weak
[22:06:52] <qswz> right
[22:07:02] <qswz> but ukraine is badass
[22:07:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:07:24] <qswz> not the kind to surrender
[22:07:56] <qswz> for example Kiev mayor is Klitcho's brother
[22:08:17] <silly> he's klitchko himself
[22:08:21] <qswz> Klitchko*
[22:08:22] <teut> https://dpaste.org/4iwM the following shows the empty div, but does not redirect me to login page
[22:08:28] <silly> they're both klitschkos
[22:08:29] <teut> in nextjs
[22:08:34] <qswz> right both brothers are great boxers
[22:08:40] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: The Lounge - https://thelounge.chat)
[22:09:10] <teut> Layout is the thing that you wrap  the _app.tsx  Component
[22:09:19] *** Joins: g00fy78 (~g00fy@user/g00fy)
[22:09:38] <theskillwithin> no this is odd,  you gotta have some sort of loading state with a return of loading html
[22:09:43] <qswz> first time I see context pluralized
[22:09:48] <qswz> looks ugly
[22:10:17] <qswz> maybe because it's uncoutnable
[22:10:31] <qswz> teut: I'll give you 2 waters if you're good
[22:10:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[22:10:38] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[22:10:54] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[22:10:59] <teut> is that a proverb?
[22:11:20] <teut> I am non-english/american
[22:11:52] <qswz> well contexts is not incorrect
[22:11:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:12:21] <theskillwithin> teut return loggedIn?AuthProvider>          wat?
[22:12:36] *** Joins: wyclif (~wyclif@user/wyclif)
[22:13:04] <teut> oh sorry  <Auth
[22:13:23] <teut> I added something to the paste manually
[22:13:40] <silly> use more eslint
[22:13:44] <qswz> why is there no country helping Ukraine military?
[22:14:06] <teut> becoz everyone depends on Russia
[22:14:14] <teut> do you live in Ukraine?
[22:14:15] <silly> qswz, against russia and their nukes? lol
[22:14:38] <qswz> I understand Russia, all those nukes, gotta use thel at some point
[22:15:17] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:15:38] <qswz> that'll make a new planet era, like when meterorites has hit us
[22:16:23] <theskillwithin> https://youtu.be/LJNtfyq3TDE
[22:16:23] <skillbot> YouTube Title: The REAL Reason Putin is Invading Ukraine
[22:16:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:17:54] <qswz> because he was bored
[22:18:09] <qswz> he kindly waited for covid end
[22:18:30] <qswz> now there's no more sanitary risks, war's safe
[22:19:53] <cthulchu_> my wonderful folks, do you know how you can do pattern attributes for html5 input validation? Do you know how we can do the flags there?
[22:21:43] <theskillwithin> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input#attr-pattern
[22:22:20] <theskillwithin> https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern
[22:22:24] <cthulchu_> lol
[22:22:41] <qswz> no flags
[22:22:49] <qswz> !mdn pattern
[22:22:51] <jellobot> qswz, pattern attribute specifies a regular expression the form control's value should match. If a non-null value doesn't conform to the constraints set by the pattern value, the ValidityState object's read-only patternMismatch property will be true. https://mdn.io/pattern
[22:22:51] <cthulchu_> thank you
[22:23:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[22:23:50] *** Joins: wyclif (~wyclif@user/wyclif)
[22:23:51] <gde33> what ellegant api </sarcasm>
[22:23:56] <cthulchu_> you know what? we should be able to break out of a forEach elegantly
[22:24:12] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400)
[22:24:21] <qswz> Foritch
[22:24:25] <cthulchu_> lol
[22:24:25] <qswz> Forof
[22:24:27] <cthulchu_> no
[22:24:27] <silly> kill -9;
[22:24:30] <cthulchu_> for sucks
[22:24:34] <cthulchu_> I'll do while
[22:24:39] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:24:43] <cthulchu_> no, I won't. damn.
[22:24:58] <gde33> cthulchu_: eventually you are back using for(;;) loops
[22:25:08] <cthulchu_> never
[22:25:15] <cthulchu_> I mean, ok, just this time
[22:25:33] <cthulchu_> is "for of" functional?
[22:25:34] <qswz> I'm scared of (;;) it looks like a dangerous creature
[22:25:39] <gde33> kungfu:for(;;){continue kungfu}
[22:25:49] <cthulchu_> lol
[22:25:55] <gde33> you can have a label called foreach:
[22:26:00] <gde33> :-)
[22:26:44] <qswz> Martinique has some badass competition https://youtu.be/cLqC977r-Bo?t=5078
[22:26:44] <skillbot> YouTube Title: Tour des Yoles 2019 - 8ème étape - Vauclin - Robert.
[22:27:21] <gde33> its best when you nest the for loops 5 levels deep and get to use things like foo[a].baz[b][c][d].name
[22:28:02] <silly> oh yea and use labels:
[22:28:25] <gde33> break hammertime
[22:28:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:29:23] *** Joins: wyclif (~wyclif@user/wyclif)
[22:29:25] <gde33> or just do{} it
[22:29:28] <theskillwithin> https://youtu.be/otCpCn0l4Wo?t=16
[22:29:28] <skillbot> YouTube Title: MC Hammer - U Can't Touch This (Official Music Video)
[22:30:18] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Remote host closed the connection)
[22:30:39] <blueagain> looks like theskillwithin is dj'ing tonight
[22:30:59] <theskillwithin> idk why their pants are so baggy, but they can dance
[22:31:21] <qswz> recently found out https://music.youtube.com
[22:31:28] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:31:30] <qswz> but that's not very different
[22:31:38] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:31:44] <qswz> I'd like sound onlly
[22:31:48] <qswz> like soundcloud
[22:32:37] <blueagain> qswz: is that like the google version of spotify?
[22:32:55] <silly> soundcloud is the best
[22:33:16] <teut>   why ain't I getting the count  ?https://ibb.co/Hh85Cmx
[22:33:39] <theskillwithin> you are
[22:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:33:52] <teut> in the graphql section
[22:33:54] <theskillwithin> response.count
[22:34:29] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:34:32] <theskillwithin> it says count is 48
[22:34:51] *** Joins: wyclif (~wyclif@user/wyclif)
[22:34:57] *** Joins: jazzy (~jaziz@user/jaziz)
[22:35:27] <teut> I want to get some pesky data in some specific format out of this api
[22:35:54] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[22:35:59] <teut> I installed graph ql but  I am using it first time
[22:36:04] <teut> so require some help
[22:36:39] <qswz> you're throwing all possible technologies on it
[22:36:48] <matsaman> wht's the GET URI?
[22:37:22] *** Joins: xall (~xall@2600:8800:8c02:3600:6186:ae6a:5b3b:489e)
[22:37:40] <teut> why do you care?
[22:37:49] <teut> its in the img
[22:38:06] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:38:20] <matsaman> because it's a support channel...
[22:38:30] <matsaman> but I'm too lazy to type it out when he can just paste it
[22:38:34] <teut> oh so the backend should be in graphql also
[22:38:40] <theskillwithin> idk if postman can do it, but if you use graphql playground you can get documentation on the graphql api your using
[22:38:53] <teut> apollo does it ig
[22:39:19] *** Joins: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de)
[22:39:20] <teut> irrespective of whether you have graphql backend or not
[22:39:43] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[22:39:58] *** Parts: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de) ()
[22:40:44] *** Joins: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de)
[22:40:51] <mikrosis> hi
[22:41:06] <mikrosis> so I want to have some kind of notification in a PWA on iOS (iPad/iPhone).
[22:41:16] <mikrosis> I know that isn't supported yet (web push notifications)
[22:41:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:41:28] <mikrosis> but - can I at least emulate this? a notification sound ?
[22:41:29] <qswz> emails
[22:41:33] <mikrosis> the app is running all the time
[22:41:35] <mikrosis> it is open
[22:41:37] <mikrosis> permanently
[22:41:44] <qswz> I hate notifications
[22:41:45] <mikrosis> so maybe playing back a ping sound or something?
[22:41:45] *** Parts: Sayona (~Sayona@user/sayona) (Leaving)
[22:41:49] <mikrosis> yes, but those are needed and wanted
[22:41:55] <mikrosis> in this case it is necessary
[22:42:05] <silly> does it really have to be realtime?
[22:42:10] <qswz> it's never necesary
[22:42:15] <mikrosis> in this case it is , believe me :)
[22:42:17] <qswz> nothing is allowed to interrupt a nap
[22:42:20] <mikrosis> silly: yes, semi-realtime
[22:42:23] <mikrosis> maybe 1 s delay
[22:42:25] <mikrosis> something like that
[22:42:27] <mikrosis> ok, 5 s
[22:42:40] <silly> i guess ws is your only option
[22:42:49] <silly> but i'm probably wrong about that
[22:42:51] <mikrosis> well,  that's fine
[22:43:10] <mikrosis> and how can I emulate this notification effect? Play back an ios notification sound via javascript in the open app?
[22:43:29] <mikrosis> the alternative would be wrapping the ionic react app into a Cordova app frame thing and use native notifications
[22:43:33] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:43:39] <mikrosis> but this also means setting up app store and all that and I just wanna develop first
[22:43:43] <theskillwithin> can't you just do push notification with service worker?
[22:44:10] <sheetjs> speaking of service worker, can you register a service worker from a blob url?
[22:44:52] <mikrosis> hmm, interesting
[22:44:53] <theskillwithin> sheetjs wat
[22:45:03] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:04] <mikrosis> theskillwithin: not with ios safari, which is the forced and only browser on ios/iphone/ipad
[22:45:05] <mikrosis> :(
[22:45:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:45:19] <mikrosis> but there was an announcement that web notification support may could come in the near future
[22:45:22] <sheetjs> !mdn serviceWorker register
[22:45:22] <cthulchu_> folks, how do we use JS to check html5 validation? For now, I'm going to check if it matches :invalid, but that seems lame
[22:45:25] <jellobot> sheetjs, register() method of the ServiceWorkerContainer interface creates or updates a ServiceWorkerRegistration for the given scriptURL. https://mdn.io/serviceWorker-register
[22:45:52] *** Joins: wyclif (~wyclif@user/wyclif)
[22:46:12] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[22:46:13] <sheetjs> this takes a scriptURL argument but doesn't seem to work with a blob URL (aka one you generate in the script itself)
[22:47:35] *** Joins: stenno (~stenno@user/stenno)
[22:47:50] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:47:59] <Alexendoo> Yeah that's the expected behaviour, must be http
[22:48:09] <sheetjs> *https
[22:48:36] <qswz> if you've 2 kids, name them Blob and Json
[22:49:04] <theskillwithin> when i think blob I think like asset... not like url  you visit for a site
[22:49:14] <sheetjs> n> typeof Blob @ theskillwithin
[22:49:15] <jellobot> theskillwithin, 'undefined'
[22:49:28] <Alexendoo> yes, http as in http:// or https://
[22:49:28] <qswz> n> Blob
[22:49:29] <jellobot> (fail) ReferenceError: Blob is not defined
[22:49:38] <sheetjs> not a node global
[22:49:40] <theskillwithin> https://youtu.be/FOtDNXfMyD0
[22:49:41] <skillbot> YouTube Title: Bob Loblaw Law Blog
[22:49:45] <sheetjs> n> require("buffer").Blob
[22:49:45] <jellobot> (okay) [class Blob]
[22:50:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:50:51] *** Joins: Betal (~Betal@user/betal)
[22:51:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:51:52] <silly> is this new?
[22:52:16] <sheetjs> yeah v14.18 / v15.7
[22:52:43] <sheetjs> but Blob in the browser is much older
[22:52:58] <sheetjs> like "IE10" older
[22:53:03] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[22:53:33] <qswz> https://how.wtf/ cool site
[22:53:40] <silly> it's not ecma right?
[22:53:43] *** Joins: silverdust (~silverdus@user/silverdust)
[22:53:51] <silly> it's browser apis?
[22:54:04] <sheetjs> Blob is part of the File API
[22:54:15] <sheetjs> like FileReader, readAsBinaryString, etc
[22:55:00] <silly> oh, gh comments :D
[22:55:03] <silly> nice!
[22:55:55] <theskillwithin> btw if sending to serverless aws took me forever to figure out do apiGateway: binaryMediaTypes: - "multipart/form-data"
[22:56:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[22:56:55] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:28] *** Joins: rx_ (~rx@dynamic-046-114-165-003.46.114.pool.telefonica.de)
[22:58:31] *** Quits: p-i- (~Ohmu@2403:6200:8978:9e12:1484:c44b:e205:8211) (Remote host closed the connection)
[22:59:05] *** Joins: p-i- (~Ohmu@2403:6200:8978:9e12:ddd7:6df9:8dc6:cf6c)
[22:59:26] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[22:59:26] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[22:59:26] *** Joins: wroathe (~wroathe@user/wroathe)
[23:00:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:00:37] *** Quits: Guest56366 (~rx@dynamic-046-114-169-171.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[23:01:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:01:57] *** Joins: Andrm (~Andrm@190.244.62.157)
[23:02:25] *** Joins: wyclif (~wyclif@user/wyclif)
[23:05:10] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[23:06:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:07:26] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Ping timeout: 245 seconds)
[23:07:55] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:43] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[23:12:28] *** Joins: brentaarnold (~brentaarn@24.112.92.157)
[23:12:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:12:51] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[23:13:26] *** Joins: wyclif (~wyclif@user/wyclif)
[23:13:38] *** Quits: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de) (Quit: Connection closed)
[23:14:33] *** Quits: brentaarnold (~brentaarn@24.112.92.157) (Read error: Connection reset by peer)
[23:14:45] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 268 seconds)
[23:15:20] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:17:35] *** Joins: brentaarnold (~brentaarn@24.112.56.42)
[23:17:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[23:18:36] *** Joins: stenno (~stenno@user/stenno)
[23:18:56] *** Joins: wyclif (~wyclif@user/wyclif)
[23:19:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[23:20:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:21:43] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:c8a0:f99f:92aa:2459) (Quit: I have gone to sleep. ZZZzzz…)
[23:21:57] *** Joins: mikrosis (~mikrosis@dynamic-046-114-169-173.46.114.pool.telefonica.de)
[23:22:01] *** Joins: summersault (~summersau@179.221.251.36)
[23:22:11] <mikrosis> hi!
[23:22:24] <matsaman> hi
[23:22:41] <KevinX> hi
[23:22:47] <theskillwithin> hi
[23:23:22] <mikrosis> what does make more sense with a react provider/hook thing? Have a cartTotal() method - or calculate the cart total using the other methods for adding/removing/changing cart items?
[23:23:39] <mikrosis> <3  hi
[23:23:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:24:40] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:14] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[23:26:14] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[23:26:14] *** Joins: wroathe (~wroathe@user/wroathe)
[23:26:35] <theskillwithin> cartTotal method?
[23:27:00] <onosendi> mikrosis: calculate the cart when adding/removing/changing, vs calculating everytime its displayed?
[23:27:05] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 268 seconds)
[23:28:24] <mikrosis> onosendi: yep
[23:28:25] <mikrosis> yes
[23:28:32] <mikrosis> I found tutorials/examples for both
[23:29:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:30:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:30:43] <theskillwithin> idk if i get the question, the cart total is the cart total
[23:31:36] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (Ping timeout: 250 seconds)
[23:32:42] <mikrosis> theskillwithin: the cart total can be either calculated on demand by method or as a variable that is updated when addToCart/changeCartItem/removeFromCart/clearCart is used.
[23:32:57] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[23:33:17] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[23:34:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:35:27] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Quit: ZNC - https://znc.in)
[23:35:50] *** Joins: wyclif (~wyclif@user/wyclif)
[23:36:08] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[23:36:38] <theskillwithin> both?  i mean cart total you add up the prices of the items in the cart and you get the total
[23:37:04] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[23:37:17] <blueagain> mikrosis: a "reactive" way would be to derive the cart total from the other factors
[23:37:55] <theskillwithin> ya on frontend i sorta think in react
[23:38:35] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:39:57] *** Quits: xall (~xall@2600:8800:8c02:3600:6186:ae6a:5b3b:489e) (Quit: Client closed)
[23:40:13] <mikrosis> blueagain: so the method
[23:40:16] <mikrosis> not a variable
[23:41:10] <theskillwithin> oh i see what you mea now
[23:41:21] <theskillwithin> ya just calculate it
[23:41:27] <theskillwithin> method
[23:41:37] <theskillwithin> mikrosis are you talking frontend or backend?
[23:42:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:43:09] <mikrosis> theskillwithin: frontend
[23:43:16] <theskillwithin> ya just calculate it
[23:44:02] <blueagain> mikrosis: yeah
[23:44:06] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[23:45:02] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400) (Ping timeout: 240 seconds)
[23:46:23] <theskillwithin> ya lets leave it at that without getting into the weeds of payment processors and taxes and shipping shit
[23:48:20] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929)
[23:49:14] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:ed41:20bd:dc67:929) (Client Quit)
[23:52:19] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[23:52:52] <gde33> the real question is what happens if prices change
[23:53:31] <theskillwithin> mikrosis are you using react?  or something similar like vue?
[23:53:48] <mikrosis> theskillwithin: react, yes
[23:54:36] *** Parts: theskillwithin (~theskillw@user/theskillwithin) (Textual IRC Client: www.textualapp.com)
[23:54:49] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[23:54:56] <theskillwithin> ya ull be fine
[23:55:11] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[23:55:22] <gde33> just use shoppify
[23:55:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:55:46] <blueagain> isn't that php
[23:56:16] <gde33> imho its mostly an admanager
[23:56:36] <theskillwithin> gde33 you could just use shopify, or pay me 100k (to just start) for a custom ecommerce solution
[23:56:44] <blueagain> theskillwithin: have you watched Interstellar?
[23:56:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:56:56] <theskillwithin> blueagain ya, awhile ago tho
[23:57:03] <blueagain> really awesome film
[23:57:05] <gde33> theskillwithin: I write them for laughs
[23:57:28] <mikrosis> lol
[23:57:48] <mikrosis> how is this called in react? when there is a react component and below that is a variable?
[23:57:49] <mikrosis> like
[23:57:58] <mikrosis> <Context>{ variable => ( ...
[23:58:01] <mikrosis> how is this called?
[23:58:12] <blueagain> function?
[23:58:18] <gde33> theskillwithin: discontinued :P https://zwaantjes-partycatering.nl/
[23:58:27] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[23:58:34] <gde33> theskillwithin: that has to be the best favicon you've ever seen?
[23:58:38] *** Quits: Arisco (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[23:58:43] *** Joins: queue- (~nerd@user/queue/x-7267619)
[23:59:10] <mikrosis> ah function component
[23:59:11] <mikrosis> yes
[23:59:12] <theskillwithin> https://www.mojomarketplace.com/   got bought out by huge corp =[
[23:59:23] <blueagain> gde33: oh no man. every time I see dutch I remember the one time I visited my bro in .nl and there were "meisjes" commercials running on tv
