[00:01:47] <melezhik> I also thought maybe I could add category "languages", add add Rakudo to, and then for every Rakudo release - a new release comment could be added , so that users can give feedback on new release ... anyway just a thought ...
[00:31:46] *** Joins: Doc_Holliwould (~Doc_Holli@dslb-092-076-011-213.092.076.pools.vodafone-ip.de)
[00:32:34] *** Quits: ufobat (~martin@dynamic-095-114-047-097.95.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[00:41:12] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:48:42] <discord-raku-bot> <Petr#9247> right idea
[00:49:53] <discord-raku-bot> <Petr#9247> where Raku search libs in Windows?
[00:56:08] <[Coke]> C libs or raku libs?
[00:56:54] <[Coke]> afk
[00:57:41] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[00:57:41] *** Joins: greaser|q (greaser@user/greasemonkey)
[00:57:43] *** greaser|q is now known as GreaseMonkey
[00:58:07] <discord-raku-bot> <Petr#9247> Sorry, Raku libs
[00:59:12] <discord-raku-bot> <Petr#9247> and C ))
[00:59:35] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Connection closed)
[01:39:29] *** Joins: pony (~ed@101.100.135.123)
[01:39:59] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[01:52:19] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[01:58:43] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 265 seconds)
[02:00:47] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:06:16] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[02:07:09] *** Quits: berber44 (~berber44@78.107.92.5) (Quit: Client closed)
[02:22:38] *** pierrot_ is now known as pierrot
[02:22:54] *** pierrot is now known as info
[02:23:17] *** info is now known as pierrot
[02:23:44] <tbrowder> .tell melezhik a selection by language would be useful (don't forget Perl)
[02:23:45] <tellable6> tbrowder, I'll pass your message to melezhik
[03:04:13] *** Quits: pony (~ed@101.100.135.123) (Quit: WeeChat 3.0.1)
[03:05:18] *** Joins: pony (~ed@101.100.135.123)
[03:06:04] *** Quits: lichtkind (~lichtkind@p200300d0a704f0f691df24c26a6ff306.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:32:49] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:34:10] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:40:04] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[03:44:22] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[04:26:24] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[04:26:46] *** Joins: frost (~frost@59.71.244.189)
[04:40:17] <discord-raku-bot> <Petr#9247> i have troubles with Gumbo parser in Windows.
[04:40:58] <discord-raku-bot> <Petr#9247> Slowed ))
[04:42:07] <discord-raku-bot> <Petr#9247> problem solved
[04:58:36] *** Quits: pony (~ed@101.100.135.123) (Quit: WeeChat 3.0.1)
[04:59:29] *** Joins: pony (~ed@101.100.135.123)
[05:31:30] *** Joins: no-n (~ed@101.100.135.123)
[05:34:39] *** Quits: pony (~ed@101.100.135.123) (Quit: WeeChat 3.0.1)
[05:40:54] *** Quits: no-n (~ed@101.100.135.123) (Quit: WeeChat 3.0.1)
[05:52:10] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 265 seconds)
[06:07:01] *** Joins: berber44 (~berber44@78.107.92.87)
[06:09:13] *** Quits: berber44 (~berber44@78.107.92.87) (Client Quit)
[07:09:13] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:09:13] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:09:13] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:09:13] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:09:13] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:13] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:09:14] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:09:14] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[07:09:34] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[07:09:35] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[07:09:40] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[07:09:44] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[07:10:14] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[07:10:42] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[07:10:56] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[07:12:00] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[07:12:12] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:12:14] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[07:14:30] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[07:15:34] *** Joins: jess (~jess@libera/staff/jess)
[07:16:35] *** Joins: pony (~ed@101.100.135.123)
[08:09:46] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[08:09:50] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:12:20] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[08:12:24] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:12:28] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:46:18] *** Joins: berber44 (~berber44@78.107.92.158)
[09:04:07] *** Quits: berber44 (~berber44@78.107.92.158) (Quit: Client closed)
[09:05:30] *** Joins: anser (~anser@mm-175-5-120-178.brest.dynamic.pppoe.byfly.by)
[09:09:45] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:10:49] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (Remote host closed the connection)
[09:11:17] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:11:25] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:32:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:33:06] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:41:21] *** Quits: andinus (andinus@tilde.institute) (Remote host closed the connection)
[09:42:30] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[09:53:02] *** Quits: Doc_Holliwould (~Doc_Holli@dslb-092-076-011-213.092.076.pools.vodafone-ip.de) (Quit: Connection closed)
[10:06:47] *** Joins: ufobat (~martin@dynamic-077-002-114-241.77.2.pool.telefonica.de)
[10:42:23] *** Joins: MasterDuke (~MasterDuk@94.0.188.131)
[11:11:52] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[11:46:40] *** Quits: ufobat (~martin@dynamic-077-002-114-241.77.2.pool.telefonica.de) (Quit: Leaving)
[11:52:05] <discord-raku-bot> <Nemokosch#9980> hi, what does "moar-blead" mean at the backend options?
[11:55:54] <MasterDuke> HEAD of the three repos (rakudo, nqp, moarvm), instead of the version specified in the (MOAR|NQP)_REVISION files
[11:56:23] <MasterDuke> a pun on "the bleeding edge"
[11:58:58] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[11:59:16] <discord-raku-bot> <Nemokosch#9980> okay, thanks üëÄ
[11:59:23] *** Joins: tejr (~tejr@user/tejr)
[12:12:17] <_________> m: !!! !!
[12:12:17] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Prefix ! requires an argument, but no valid term found.‚ê§Did you mean ! to be an opening bracket for a declarator block?‚ê§at <tmp>:1‚ê§------> 3!!! !!7‚èè5<EOL>‚ê§    expecting any of:‚ê§        p‚Ä¶¬ª
[12:12:55] <_________> m: !!!
[12:12:55] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Stub code executed‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[12:59:24] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:59:24] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:04:13] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Read error: Connection reset by peer)
[13:04:28] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[13:41:50] <mfiano> Can someone point me to any style convention guide?
[13:44:57] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[13:46:24] <discord-raku-bot> <Nemokosch#9980> Is that even a thing in the Perl world? üòÇ
[13:47:44] <mfiano> I am unsure. I am new to Perl in general, but most languages have a recommendation of either tabs or spaces, how many to use for indentation, maximum number of columns, etc
[13:50:56] <discord-raku-bot> <Nemokosch#9980> https://raku.guide/ just found something
[13:51:34] <discord-raku-bot> <Nemokosch#9980> > 
[13:51:34] <discord-raku-bot> <Nemokosch#9980> > Naming conventions:
[13:51:34] <discord-raku-bot> <Nemokosch#9980> > 
[13:51:34] <discord-raku-bot> <Nemokosch#9980> >     Camel case: variableNo1
[13:51:34] <discord-raku-bot> <Nemokosch#9980> > 
[13:51:34] <discord-raku-bot> <Nemokosch#9980> >     Kebab case: variable-no1
[13:51:34] <discord-raku-bot> <Nemokosch#9980> > 
[13:51:35] <discord-raku-bot> <Nemokosch#9980> >     Snake case: variable_no1
[13:51:35] <discord-raku-bot> <Nemokosch#9980> > 
[13:51:36] <discord-raku-bot> <Nemokosch#9980> > You are free to name your identifiers as you like, but it is good practice to adopt one naming convention consistently.
[13:51:36] <discord-raku-bot> <Nemokosch#9980> lol thank you very much
[13:51:37] <discord-raku-bot> <Nemokosch#9980> üòÑ
[13:52:16] <MasterDuke> you could look at the rakudo source. it doesn't have any hard and fast rules, but you'll see mostly similar formatting/etc with some individual differences
[13:52:41] *** Joins: andinus (andinus@tilde.institute)
[13:52:48] <discord-raku-bot> <Nemokosch#9980> I have the impression that kebab case is popular for example
[13:53:22] <mfiano> I was mostly wondering about indentation space count and max line length. But fair enough if there is none
[13:54:23] * lizmat personally keeps at 4 and 80
[13:54:38] <mfiano> (currently configuring my editor so those are the only conventions needed right now)
[13:54:52] <lizmat> with 2 spaces for non-scoped things
[13:55:28] <mfiano> I see. Ok, thanks. I just believe code is read more than it is written, and some language communities feel strongly about these things.
[13:55:32] * MasterDuke uses 4 and ~120
[13:55:51] <discord-raku-bot> <Nemokosch#9980> My vague idea of the overall Perl community is that people aren't into these formalisms
[13:56:15] <lizmat> fwiw, I think internal consistency is most important
[13:56:40] <mfiano> Indeed.
[14:01:19] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:03:26] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[14:06:44] <Kaiepi> ditto MasterDuke 
[14:08:55] <Xliff_> does Raku have something similar to XML::Class, but for JSON?
[14:14:53] <lizmat> https://raku.land/?q=JSON  ??
[14:17:54] <mfiano> Nice. The stats link on that page suggests a nice yearly growth rate over the last couple years.
[14:31:18] <Xliff_> Huh. JSON::Class is there. Why didn't my initial search find it?
[14:35:10] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[14:40:28] *** Quits: pony (~ed@101.100.135.123) (Quit: WeeChat 3.0.1)
[14:57:54] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:28:08] *** Quits: vasko (~vasko@137.220.91.123) (Quit: Ping timeout (120 seconds))
[15:28:25] *** Joins: vasko (~vasko@137.220.91.123)
[15:32:53] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:33:49] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:19:07] *** Quits: xinming_ (~xinming@115.219.35.230) (Ping timeout: 252 seconds)
[17:02:07] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[17:11:34] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[17:23:55] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:28:16] *** Quits: anser (~anser@mm-175-5-120-178.brest.dynamic.pppoe.byfly.by) (Quit: Konversation terminated!)
[17:30:13] *** Quits: eseyman_ (~manu@lfbn-idf1-1-1108-68.w82-125.abo.wanadoo.fr) (Read error: Connection reset by peer)
[17:58:59] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:15:17] *** Joins: RaycatWhoDat (~RaycatWho@2601:241:8f80:5250::2485)
[18:16:07] <RaycatWhoDat> Man, I gotta say... Adding Array types to signatures or making types that use Array do not feel intuitive
[18:17:00] <RaycatWhoDat> I tried doing something to the tune of `subset IntArray of Array[Int] where * > 0; sub print(IntArray @numbers) { .say for @numbers; }`
[18:17:22] <RaycatWhoDat> What's the correct way to do something like this in Raku?
[18:17:43] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[18:17:43] <melezhik> .
[18:17:45] <tellable6> 2021-10-13T22:53:45Z #raku <tbrowder> melezhik a selection by language would be useful (don't forget Perl)
[18:18:25] <melezhik> tbrowder I will take a look at what I can do, thanks for suggestion 
[18:18:50] <melezhik> there is also https://github.com/melezhik/mybfio in case someone wants to drop an idea or a bug is found
[18:19:51] <melezhik> I have added small unicode icons for https://mybf.io rating page, so users can see the last action happened to projects ... 
[18:19:59] <Xliff_> RaycatWhoDat: What happens when you do that, do you have that piece of code on the web somewhere? (ala tio or repl.it)
[18:20:30] <RaycatWhoDat> Lemme get that 
[18:21:32] <MasterDuke> RaycatWhoDat: do you want that sub to take an array *of* IntArrays? or just one IntArray?
[18:22:01] <RaycatWhoDat> One Array of Ints where each element is greater than 0
[18:22:20] <RaycatWhoDat> glot.io/snippets/g3a7q50p6t
[18:22:24] <RaycatWhoDat> err
[18:22:31] <RaycatWhoDat> https://glot.io/snippets/g3a7q50p6t
[18:25:09] <Altreus> it complains even if you just say "subset IntArray of Array"
[18:26:04] <Altreus> RaycatWhoDat: if you do (IntArray $numbers) it works
[18:26:22] <RaycatWhoDat> ?
[18:26:32] <RaycatWhoDat> Why would it need to be a scalar there?
[18:26:34] <Altreus> no it doesn't
[18:26:40] <Altreus> cos it accepts 0 :D
[18:27:51] <discord-raku-bot> <Nemokosch#9980> wait what
[18:28:27] <RaycatWhoDat> I got it
[18:28:40] <discord-raku-bot> <Nemokosch#9980> got what?
[18:28:52] <RaycatWhoDat> https://glot.io/snippets/g3a7q50p6t
[18:29:17] <Altreus> that's the same
[18:29:22] <RaycatWhoDat> I don't like it but a combination of a coercion and changing the sigil worked
[18:29:25] <discord-raku-bot> <Nemokosch#9980> it's the same though
[18:29:26] <Altreus> I think you have to press save
[18:29:30] <discord-raku-bot> <Nemokosch#9980> it still doesn't work
[18:30:11] <RaycatWhoDat> https://glot.io/snippets/g3aa7ye8pk7
[18:30:18] <RaycatWhoDat> err
[18:30:26] <RaycatWhoDat> https://glot.io/snippets/g3a7ye8pk7
[18:31:17] <discord-raku-bot> <Nemokosch#9980> do realize that your for is iterating over one element
[18:31:28] <Altreus> RaycatWhoDat: but it still accepts 0
[18:31:32] <discord-raku-bot> <Nemokosch#9980> which is the whole array as one encapsulated element
[18:31:37] <RaycatWhoDat> drat
[18:31:47] <Altreus> that was the same problem I had :D
[18:32:25] <RaycatWhoDat> I feel like I'm missing some nuance of Arrays here
[18:34:13] <Altreus> agreed
[18:34:19] <Altreus> wait
[18:34:34] <Altreus> why not define NonNegativeInt and then just demand an array of that
[18:35:32] <discord-raku-bot> <Nemokosch#9980> that didn't work either
[18:35:40] <discord-raku-bot> <Nemokosch#9980> I can confirm üòÖ
[18:35:55] <Altreus> :D
[18:35:59] <Altreus> also I meant PositiveInt apparently
[18:36:15] <Altreus> cos > 0 not ‚â• 0
[18:37:01] <Altreus> basically I have no idea how to define the types of an array's elements
[18:37:40] <Altreus> ¬´Type @array¬ª seems intuitive but that doesn't seem to do it
[18:38:13] <discord-raku-bot> <Nemokosch#9980> it doesn't? I'm just reading about it
[18:39:44] <Altreus> need a grownup
[18:40:45] <discord-raku-bot> <Nemokosch#9980> and what is this "Positional" shit? where does it come from?
[18:41:03] <Xliff_> Actually, what you want is to use the subset in the type.
[18:41:07] <Xliff_> So...
[18:41:24] <Altreus> isn't Positional just a role that arrays do?
[18:41:45] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = (-1, -2, 0, 1, 2);
[18:41:45] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in assignment to @a; expected PosInt but got Int (-1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:41:53] <discord-raku-bot> <Nemokosch#9980> isn't `Positional[Array(PosInt)]` a big fat pleonasm then?
[18:41:56] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = ^10;;
[18:41:56] <camelia> rakudo-moar 8d1f24f9c: ( no output )
[18:42:03] <MasterDuke> m: sub foo(@n where {so all($_.map( -> $m {$m ~~ Int and $m > 0}))}) { dd @n }; foo([1, 2, -3])
[18:42:03] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Constraint type check failed in binding to parameter '@n'; expected anonymous constraint to be met but got Array ([1, 2, -3])‚ê§  in sub foo at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:42:13] <Altreus> OK so Type @array is how you do it
[18:42:14] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = ^10; @a.gist.say;
[18:42:14] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´[0 1 2 3 4 5 6 7 8 9]‚ê§¬ª
[18:42:33] <Xliff_> Alreus: Yep.
[18:42:37] <MasterDuke> m: sub foo(@n where {so all($_.map( -> $m {$m ~~ Int and $m > 0}))}) { dd @n }; foo([1, 2, 3])
[18:42:38] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Array element = [1, 2, 3]‚ê§¬ª
[18:42:39] <discord-raku-bot> <Nemokosch#9980> > OK so Type @array is how you do it
[18:42:39] <discord-raku-bot> <Nemokosch#9980> except it really didn't work
[18:42:43] <discord-raku-bot> <Nemokosch#9980> not for signatures
[18:43:02] <Altreus> yeah
[18:43:10] <Xliff_> It's just syntacical sugar for Array[PosInt];
[18:43:21] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = ^10; @a.^of.^name.say
[18:43:22] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´No such method 'of' for invocant of type‚ê§'Perl6::Metamodel::ClassHOW+{<anon>}+{<anon>}+{<anon>}'‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:43:27] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = ^10; @a.of.^name.say
[18:43:27] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´PosInt‚ê§¬ª
[18:43:41] <Xliff_> m: my subset PosInt of Int where * >= 0; my PosInt @a = ^10; @a.of.^name.say; @a.^name.say
[18:43:41] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´PosInt‚ê§Array[PosInt]‚ê§¬ª
[18:43:43] <discord-raku-bot> <Nemokosch#9980> now show a function
[18:43:54] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(PosInt @array) { .say for @array }; f([1,2,3,4,5]);
[18:43:54] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '@array'; expected PosInt but got Array ([1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:43:58] <Altreus> Xliff_: why this no worky
[18:44:00] <Xliff_> You'd use the latter form for the signature.
[18:44:08] <Altreus> so like...
[18:44:15] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] @array) { .say for @array }; f([1,2,3,4,5]);
[18:44:15] <discord-raku-bot> <Nemokosch#9980> exactly this error
[18:44:16] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '@array'; expected Positional[Array[PosInt]] but got Array ([1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:44:23] <Altreus> Xliff_: this?
[18:44:54] <discord-raku-bot> <Nemokosch#9980> Positional[Array] again, thank you very much...
[18:44:55] <Xliff_> OK. I may be incorrect. One sec.
[18:45:02] <discord-raku-bot> <Nemokosch#9980> noone asked for this Positional
[18:45:07] <Xliff_> m: my subset PosInt of Int where * >= 0; sub f(PosInt @array) { .say for @array }; f([1,2,3,4,5]);
[18:45:07] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '@array'; expected PosInt but got Array ([1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:45:26] <Altreus> hang on I'm going to swap...
[18:45:39] <Xliff_> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] $array) { .say for @array }; f([1,2,3,4,5]);
[18:45:40] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@array' is not declared.  Did you mean any of these:‚ê§'$array', 'array', 'Array'?‚ê§at <tmp>:1‚ê§------> 3 sub f(Array[PosInt] $array) { .say for 7‚èè5@array }; f([1,2,3,4,5]);‚ê§¬ª
[18:45:49] <discord-raku-bot> <altreus‚Ñ¢#9000> Much easier to read IRC here than Discord there
[18:45:54] <Xliff_> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] $array) { .say for $array[] }; f([1,2,3,4,5]);
[18:45:54] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '$array'; expected Array[PosInt] but got Array ([1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:46:17] <MasterDuke> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] $array) { .say for @$array }; f(Array[PosInt].new([1,2,3,4,5]));
[18:46:17] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[18:46:23] <MasterDuke> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] $array) { .say for @$array }; f(Array[PosInt].new([1,2,3,4,-5]));
[18:46:23] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in assignment to ; expected PosInt but got Int (-5)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:46:27] <Xliff_> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt] $array) { .say for $array[] }; my PosInt @b = (1,2,3,4,5); f(@b);
[18:46:27] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[18:46:29] <discord-raku-bot> <altreus‚Ñ¢#9000> @Nemokosch#9980 the Positional part comes from the `@`, i.e. you've asked for an array-of-Array[PosInt]
[18:46:47] <discord-raku-bot> <Nemokosch#9980> but that wasn't the intention, right?
[18:46:49] <Xliff_> When you type an array, you can't pass it an untyped array.
[18:46:51] <discord-raku-bot> <altreus‚Ñ¢#9000> raku's typing is a mess, I have to say
[18:47:12] <discord-raku-bot> <Nemokosch#9980> man, this is like inverse TypeScript
[18:47:18] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt]() $array) { .say for @array }; f([1,2,3,4,5]);
[18:47:18] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '@array' is not declared.  Did you mean any of these:‚ê§'$array', 'array', 'Array'?‚ê§at <tmp>:1‚ê§------> 3ub f(Array[PosInt]() $array) { .say for 7‚èè5@array }; f([1,2,3,4,5]);‚ê§¬ª
[18:47:19] <Xliff_> Array typing works, it's not intuitive, but it works.
[18:47:23] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt]() $array) { .say for @$array }; f([1,2,3,4,5]);
[18:47:24] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[18:47:30] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt]() $array) { .say for @$array }; f([0,1,2,3,4,5]);
[18:47:31] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[18:47:34] <Altreus> lmao
[18:47:54] <discord-raku-bot> <Nemokosch#9980> ngl you would expect more from a runtime dispatch
[18:48:03] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(PosInt() @array) { .say for @array }; f([0,1,2,3,4,5]);
[18:48:03] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '@array'; expected Positional[PosInt(Any)] but got Array ([0, 1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:48:05] <Xliff_> Well hey! Look at t hat.
[18:48:23] <Altreus> m: my subset PosInt of Int where * >= 0; sub f(Array[PosInt()]() $array) { .say for @$array }; f([0,1,2,3,4,5]);
[18:48:23] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[18:48:43] <discord-raku-bot> <altreus‚Ñ¢#9000> I'd rather this stuff were intuitive than correct
[18:48:59] <discord-raku-bot> <Nemokosch#9980> what are the parantheses?
[18:49:01] <discord-raku-bot> <altreus‚Ñ¢#9000> Don't like feeling that Java is doing anything better
[18:49:06] <discord-raku-bot> <altreus‚Ñ¢#9000> Parens = coercion
[18:49:27] <discord-raku-bot> <Nemokosch#9980> I mean in C yes but how does this follow in this context...
[18:49:30] <discord-raku-bot> <altreus‚Ñ¢#9000> f(Str() $a) stringifies rather than complaining
[18:49:43] <discord-raku-bot> <altreus‚Ñ¢#9000> well I thought I'd make it coerce the provided array to an array of PosInt
[18:49:52] <discord-raku-bot> <altreus‚Ñ¢#9000> oh
[18:49:55] <discord-raku-bot> <altreus‚Ñ¢#9000> I just realised this one has >=
[18:50:04] <Altreus> m: my subset PosInt of Int where * > 0; sub f(Array[PosInt]() $array) { .say for @$array }; f([0,1,2,3,4,5]);
[18:50:05] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in assignment to ; expected PosInt but got Int (0)‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:50:12] <discord-raku-bot> <altreus‚Ñ¢#9000> eyy it works
[18:50:16] <discord-raku-bot> <Nemokosch#9980> That's okay, dumb carried weight üòÑ
[18:50:30] <discord-raku-bot> <altreus‚Ñ¢#9000> I thought it failed to apply the PosInt, but in fact it was defined slightly differently
[18:50:35] <discord-raku-bot> <Nemokosch#9980> Okay, that's actually reasonable behavior, gotta admit
[18:50:44] <discord-raku-bot> <Nemokosch#9980> Just the syntax is a little weird
[18:51:20] <discord-raku-bot> <Nemokosch#9980> As if someone wanted to supersede C++ at the use of all kind of crazy parentheses
[18:52:26] *** Quits: vrurg (~vrurg@45.74.95.181) (Quit: Leaving...)
[18:53:16] <discord-raku-bot> <Nemokosch#9980> does this only work with the $ sigil?
[18:53:41] <Altreus> m: my subset PosInt of Int where * > 0; sub f(PosInt() @array) { .say for @array }; f([0,1,2,3,4,5]);
[18:53:42] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in binding to parameter '@array'; expected Positional[PosInt(Any)] but got Array ([0, 1, 2, 3, 4, 5])‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:53:47] <Altreus> yes
[18:53:57] <discord-raku-bot> <Nemokosch#9980> "Positional"
[18:54:05] <Altreus> cos you need to coerce the array itself
[18:54:07] <discord-raku-bot> <Nemokosch#9980> like duh, noone wants that
[18:54:20] <Altreus> well you could pass any class that does Positional :)
[18:54:35] <discord-raku-bot> <Nemokosch#9980> this kinda defeats the purpose of sigils
[18:55:51] <discord-raku-bot> <altreus‚Ñ¢#9000> do you reckon
[18:56:21] <discord-raku-bot> <altreus‚Ñ¢#9000> I feel like it would not harm the intuitiveness of raku if it unpacked arrays like that
[18:56:38] <Altreus> m: my subset PosInt of Int where * > 0; sub f(PosInt() *@array) { .say for @array }; f(0,1,2,3,4,5);
[18:56:38] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Slurpy positional parameters with type constraints are not supported‚ê§at <tmp>:1‚ê§------> 3 Int where * > 0; sub f(PosInt() *@array7‚èè5) { .say for @array }; f(0,1,2,3,4,5);‚ê§    expecting any o‚Ä¶¬ª
[18:56:43] <Altreus> what
[18:56:55] <discord-raku-bot> <altreus‚Ñ¢#9000> <:f7u12:740532507728150539>
[18:57:05] <discord-raku-bot> <altreus‚Ñ¢#9000> heh I wondered what IRC would make of that
[18:58:13] <discord-raku-bot> <Nemokosch#9980> Not sure who said it, maybe it was Bruce Gray but I wouldn't bet my life on it...
[18:58:44] <discord-raku-bot> <Nemokosch#9980> that an important feat of Raku is that gives you what's useful to you and not what's useful to the computer
[18:59:26] <discord-raku-bot> <altreus‚Ñ¢#9000> Can't say I find that's upheld too much
[18:59:54] <discord-raku-bot> <Nemokosch#9980> now this sigil hacking feels painfully the opposite
[19:00:57] <discord-raku-bot> <Nemokosch#9980> I don't feel strongly about the concept of sigils but sometimes it really feels like they are someone's obsession that couldn't really be rationalized
[19:01:26] <RaycatWhoDat> I personally didn't know they were anything other than convention
[19:01:45] <RaycatWhoDat> But, clearly, that's not right
[19:01:50] <discord-raku-bot> <Nemokosch#9980> oof xd
[19:02:01] <discord-raku-bot> <Nemokosch#9980> now you learned it the hard way!
[19:02:32] <discord-raku-bot> <Nemokosch#9980> in Perl5 they were even context-dependent
[19:03:23] <discord-raku-bot> <altreus‚Ñ¢#9000> I far prefer their purpose in Perl5
[19:03:40] <discord-raku-bot> <altreus‚Ñ¢#9000> sigilless raku is, thankfully, quite possible
[19:03:59] <Altreus> m: my subset PosInt of Int where * > 0; sub f(Array[PosInt]() \array) { .say for array }; f([0,1,2,3,4,5]);
[19:03:59] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´Type check failed in assignment to ; expected PosInt but got Int (0)‚ê§  in sub f at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[19:04:13] <discord-raku-bot> <Nemokosch#9980> I hope you don't mean that backslash stuff... oh no
[19:04:17] <discord-raku-bot> <Nemokosch#9980> too late xd
[19:04:29] <discord-raku-bot> <altreus‚Ñ¢#9000> right - let's just lose the backslash and make this the default :D
[19:04:35] <discord-raku-bot> <altreus‚Ñ¢#9000> it seems to work in every situation
[19:04:41] <Altreus> m: my subset PosInt of Int where * > 0; sub f(Array[PosInt]() \array) { .say for array }; f([1,2,3,4,5]);
[19:04:41] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§¬ª
[19:04:49] <discord-raku-bot> <altreus‚Ñ¢#9000> it even iterates the array ^
[19:04:55] <discord-raku-bot> <altreus‚Ñ¢#9000> if that were a scalar it wouldn't
[19:05:05] <Altreus> m: my subset PosInt of Int where * > 0; sub f(Array[PosInt]() $array) { .say for $array }; f([1,2,3,4,5]);
[19:05:05] <camelia> rakudo-moar 8d1f24f9c: OUTPUT: ¬´[1 2 3 4 5]‚ê§¬ª
[19:05:09] <discord-raku-bot> <Nemokosch#9980> the behavior is so fundamentally different though
[19:05:18] <discord-raku-bot> <Nemokosch#9980> like pure functional
[19:05:27] <discord-raku-bot> <altreus‚Ñ¢#9000> but like ... why not
[19:05:39] <discord-raku-bot> <altreus‚Ñ¢#9000> As you say, what do the sigils *do* other than confound things?
[19:05:50] <discord-raku-bot> <altreus‚Ñ¢#9000> if you don't use them it seems to always behave as expected
[19:06:36] <discord-raku-bot> <Nemokosch#9980> as long as you give up your choice to mutate, well, pseudo-variables that you have
[19:07:13] <mfiano> lizmat: Gave a talk on why you will love sigiling not too long ago
[19:07:49] <discord-raku-bot> <Nemokosch#9980> not gonna lie, I can't recall much of it
[19:08:01] <lizmat> https://conf.raku.org/talk/145
[19:08:02] <discord-raku-bot> <Nemokosch#9980> but I remember it happened
[19:08:20] <discord-raku-bot> <altreus‚Ñ¢#9000> I watched it and it helped me understand them, but now I'm wondering if I need to understand them
[19:08:28] <discord-raku-bot> <Nemokosch#9980> lol
[19:09:07] <discord-raku-bot> <Nemokosch#9980> you know, I just don't understand why they can't properly work with typing
[19:09:09] <melezhik> tbrowder I added customize icon, where you can choose language ( only one language, multiple selected is not supported right now )
[19:09:27] <discord-raku-bot> <Nemokosch#9980> the collection types in particular
[19:09:33] <melezhik> and then only rating for a chosen language will be in your browser
[19:10:06] <melezhik> the language setting sticks to a browser ( as a cookie )  and remains forever until you change it 
[19:10:49] <discord-raku-bot> <Nemokosch#9980> it feels like such a luxury to have dedicated sigils for essential collection types if they fail on something as mundane as a typed flat array
[19:11:09] <melezhik> Uploaded file: https://uploads.kiwiirc.com/files/c223f1d66ce6608570b7cc47eeb194b6/03714C6D-5394-4AA3-9839-83D67FAB6FF5.jpeg
[19:11:30] <discord-raku-bot> <Nemokosch#9980> that's by far not "hacking the language" imo
[19:12:03] <tbrowder> melezhik: the language selection feature works great. thanks!
[19:12:26] <melezhik> tbrowder ++, hopefully will be helpful for the community )))
[19:13:33] <melezhik> you can also checkout a new "release" feature )) to announce releases of one's modules 
[19:13:36] <discord-raku-bot> <altreus‚Ñ¢#9000> might go and learn rust ...
[19:14:37] <RaycatWhoDat> Rust is a language that doesn't get along with me
[19:14:46] <tbrowder> now we need a link to yr site on Raku.org (community?
[19:14:51] <tbrowder> )
[19:15:03] <melezhik> also on project badge page now there is "claim ownership" link so that a project author or maintainer could claim their ownership - reserved for the future
[19:15:24] <discord-raku-bot> <Nemokosch#9980> yeah ngl I just don't feel I care about Rust
[19:15:29] <melezhik> tbrowder , ++ )) I don't mind of course, will be honored !
[19:15:51] <discord-raku-bot> <Nemokosch#9980> it looks nice and all, just not here and now for sure
[19:16:38] <tbrowder> is your Cro implementation available publicly (at least partially)?
[19:19:29] <discord-raku-bot> <altreus‚Ñ¢#9000> Well I tried Haskell and it melted my brain so if I want consistent but strongly constrained typing I might as well try the modern answer to C
[19:19:56] <tbrowder> ref Rust: i took a look at it early on (even bought a book) but wasn't wild about the building and packaging system. guess i used Make for too long.
[19:21:49] <discord-raku-bot> <Nemokosch#9980> tbh I find type systems overrated. They can help at being lazy but that's about it
[19:22:36] <RaycatWhoDat> I'm a big fan of gradual typing
[19:22:48] <RaycatWhoDat> Just let me poke holes when I need to
[19:22:51] <tbrowder> also still $working and bosses didn't want the go that route ("clinging to the trailing edge of technology" was the company motto we in the trenches said, teasingly)
[19:23:50] <tbrowder> RaycatWhoDat: same here, and our fav lang is great for Dat
[19:25:52] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[19:26:21] <discord-raku-bot> <Nemokosch#9980> in this regard I'm very pleased with Typescript. Almost feels like it made Node a solid ecosystem
[19:31:18] *** Quits: colemanx (~coleman@2605:a601:5529:1e00:5d1d:b1cb:efdb:bf0b) (Quit: Leaving)
[19:38:50] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: Bridge terminating on SIGTERM)
[19:38:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: Bridge terminating on SIGTERM)
[19:38:53] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: Bridge terminating on SIGTERM)
[19:42:47] *** Joins: juanfra (~juanfra@user/juanfra)
[19:45:06] <RaycatWhoDat> tbrowder: I see what you've done and I despise you for it
[19:45:07] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[19:45:08] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[19:45:08] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[19:45:08] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[19:45:22] <lizmat> RaycatWhoDat: ??
[19:45:49] <RaycatWhoDat> He made a pun
[19:46:37] <lizmat> ah...  well...   that'd be ok on a #raku channel, though?   with a language that has a term called "punning"  :-)
[20:15:47] *** Joins: xinming_ (~xinming@115.219.35.176)
[20:18:32] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[20:18:47] <melezhik> https://twitter.com/melezhik2/status/1448687606326341638 - interesting question on Rakubrew ...
[20:34:49] <tbrowder> RaycatWhoDat: no offense intended, but you‚Äôve obviously not seen some of the punny stuff here ;-D
[20:36:41] <tbrowder> i should have said [[p|f] unny]
[20:37:51] <discord-raku-bot> <Nemokosch#9980> s\/.*\/\/
[20:43:37] <[Coke]> found a way to make my "call lots of git commands" faster, by skipping one call per branch, whee.
[20:50:25] *** Joins: vrurg (~vrurg@45.74.95.181)
[21:26:04] <melezhik> tbrowder "is your Cro implementation available publicly (at least partially)?" - no, now the web app code is in private GH repo. For some reasons I din't want to make it public ... Still not sure .... Do you want to contribute?
[21:28:30] <tbrowder> not necessarily. i‚Äôm interested in using Cro in a reverse proxy on Apache and am always on the lookout for publicly available implementations.
[21:30:53] <melezhik> ah, ok I see , then you might be interested in this as well - https://github.com/croservices/cro-core/issues/31#issuecomment-940489635
[21:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:32:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:37:37] <tbrowder> thanks!
[22:17:49] *** Joins: holyghost (~holyghost@2a02:a03f:64c8:9200:98df:e7c5:1f5d:fd02)
[22:34:21] *** Joins: pony (~ed@101.100.135.123)
[23:05:16] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Read error: Connection reset by peer)
[23:06:22] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[23:06:29] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[23:12:17] <melezhik> sure
[23:14:36] <Xliff_> lizmat: They were just having pun.
[23:15:13] <Xliff_> Oh! I'm johny come lately... (whose name doesn't even start with 'J')
[23:15:18] <Xliff_> I'll shut up, now.
[23:15:33] <lizmat> tssskkkk   :-)
[23:15:44] <Xliff_> ]:>
[23:16:01] <gfldex> I would like to add that this channel is puntastic!
[23:17:01] <Xliff_> gfldex: It would be even better if the 'g' and 'd' in your nick were silent.
[23:17:14] <Xliff_> Then we'd be all about the muscles!
[23:17:20] * Xliff_ flees
[23:18:47] <El_Che> fleas
[23:20:33] <Xliff_> El_Che: Hey there! I'll have you know that all of my shots are up to date!
[23:21:02] <Xliff_> Just don't ask what they were shots of and we'll all be happy! :D
[23:21:23] <Xliff_> .oO( aaahhh... te-keeel-ya! )
[23:21:29] <El_Che> nothing to see here
[23:21:35] <El_Che> of everything twice
[23:21:37] <El_Che> or
[23:21:52] <Xliff_> El_Che: Are you trying to tell me to move on?
[23:22:19] <El_Che> or stick around
[23:22:43] <El_Che> just don't wake up the sleeping shells
[23:23:56] <lizmat> ooooooo
[23:24:53] <El_Che> there you go
[23:30:31] <melezhik> I am not sure if I follow all the jokes and slang ))) I hope it's fun ...
[23:36:02] *** Quits: holyghost (~holyghost@2a02:a03f:64c8:9200:98df:e7c5:1f5d:fd02) (Ping timeout: 268 seconds)
[23:37:56] <El_Che> giving you the impression it's coherent and funny is part of the fun
[23:42:21] *** Quits: pony (~ed@101.100.135.123) (Changing host)
[23:42:21] *** Joins: pony (~ed@smol/hors)
[23:50:14] <tbrowder> melezhik: for fun you should check out my Raku program that looks like a Christmas tree
