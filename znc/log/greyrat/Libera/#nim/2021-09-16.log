[00:00:56] <FromDiscord> <tandy> hmm
[00:01:03] <FromDiscord> <tandy> il dig around later i gues
[00:39:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm clearly messing up on array overloading in nim-  but not sure where
[00:39:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://paste.debian.net/1211898/
[00:41:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 260 seconds)
[00:42:28] <FromDiscord> <Gumber aka Zachary Carter> In reply to @@bracketmaster-5a708063d73408ce4 "I'm clearly messing up": https://play.nim-lang.org/#ix=3z04 compiles at least
[00:43:18] <FromDiscord> <Gumber aka Zachary Carter> you need the backticks around `[]`
[00:43:34] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3z05
[00:43:37] <FromDiscord> <haxscramper> And you missed `depth:` everywhere
[00:43:38] <FromDiscord> <Gumber aka Zachary Carter> and I don't think the `type(Regfile.data)` for the return type was workling
[00:44:01] <FromDiscord> <haxscramper> `type(Regfile.data)` does not work, an not supported, yes
[00:44:15] <FromDiscord> <Gumber aka Zachary Carter> back to covid nap 🙂
[01:16:44] <FromDiscord> <SivadNai> In work today, Nim got me my first Security Alert email. Looks like I picked the wrong day to investigate the windows COM library
[01:41:19] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:02:57] <FromDiscord> <auxym> what's up with `--checkAbi`, not available in 1.4.8?
[02:05:00] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 268 seconds)
[02:07:15] *** Quits: max22- (~maxime@2a01cb08833598007ebd7c63f02c86ef.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:18:07] <arkanoid> how to wait with asyncjs?
[02:33:53] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[02:34:38] <Pyautogui> Quick question, is it possible to import enums with {.importc.}? If so, could someone give an example? I am trying to wrap a pdf writer lib.
[02:35:03] <FromDiscord> <Elegantbeef> What are the C enum values?
[02:36:33] <Pyautogui> None where explicitly assigned in the header file. I have very little experience with C.
[02:36:44] <Pyautogui> Sorry
[02:37:33] <FromDiscord> <Elegantbeef> What's the library/enum you're trying to wrap?
[02:37:34] <Pyautogui> https://pastebin.com/zaui0CM4
[02:37:48] <Pyautogui> https://github.com/AndreRenaud/PDFGen/
[02:37:50] <nrds> <12R2D299> 4GitHub: 7"Simple C PDF Writer/Generation library"
[02:38:01] <FromDiscord> <Elegantbeef> Well that just means they're 0 incremented eh?
[02:38:17] <FromDiscord> <Elegantbeef> So just map it to a nim enum?
[02:39:54] <Pyautogui> How would I do that? I have little experience with wrapping C. Sorry 
[02:41:41] <Pyautogui> Just use cint enum values?
[02:42:39] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3z0z afaik
[02:42:45] <FromDiscord> <auxym> Just define an enum in nim, and pass it to the C function. I'm doing exactly this ATM and it doesn't seem to cause any issue. Nim converts the enum to an int constant in generated C code, and gcc doesn't seem to mind implicit casting of int to enum or vice versa
[02:43:07] <Pyautogui> Got it. Thanks for the help
[02:44:36] <arkanoid> can the "do notation" be used for args that are not the last one? For example I have "setTimeout(callback: proc(), delay: cint)" and I'd like to use the do notation when calling it
[02:45:17] <arkanoid> I mean, without writing a proc that swaps the args
[02:46:15] <FromDiscord> <Elegantbeef> You can use do for all args but there isnt presently a named do block afaik
[02:47:11] <arkanoid> for all args?
[02:47:34] <arkanoid> setTimeout() do:\necho "foo"\ndo: 3000 ?
[02:49:36] <FromDiscord> <fae> @PMunch thank you for writing the series on how to embed the nimscript interpreter in a nim application, it was a good read and very helpful
[02:57:21] <federico3> what is #main ?
[02:57:33] <federico3> Yardanico: were you looking for me?
[02:58:01] <FromDiscord> <Yardanico> I asked a question about licenses :)
[02:58:18] <FromDiscord> <Yardanico> Reposting from before:
[02:58:31] <federico3> found it
[02:58:55] <FromDiscord> <Yardanico> @federico3 you around? Can you please resolve some of my doubts about licenses? So far I thought that LGPL-3 is not suitable for languages where all modules are compiled into a single binary since one of the points of LGPL is the ability to swap the library after compilation so there won't be any difference between GPL and LGPL, but you use LGPL in some of your Nim projects - so with e.g. https://github.com/FedericoCeratto/nim-httpauth 
[02:59:53] <federico3> you have to allow end users to replace the library if they one: one way is to provide sources so they can recompile it, another, less common, is to provide ways to relink the executable by sharing object files
[03:00:57] <federico3> (and if you provide the sources they don't have to be under a FLOSS licence necessarily, as long as the user can recompile the application)
[03:13:16] <FromDiscord> <Yardanico> exactly, so I don't understand how LGPL is different than GPL in that regard for Nim source libraries since they get statically compiled in
[03:13:34] <FromDiscord> <Yardanico> you'd have to provide the full source anyway
[03:14:03] <federico3> GPL would require the source to be provided under GPL
[03:16:47] <federico3> (I mean the sources of the codebase that is importing the LGPL library)
[03:21:12] <FromDiscord> <leorize> you can also just... gate it behind a server
[03:21:28] <FromDiscord> <leorize> if the user doesn't get their hands on the library, you don't have to provide anything
[03:21:34] <FromDiscord> <leorize> binary\
[03:22:29] <FromDiscord> <leorize> alternatively, it's not too hard to provide only objects to link to
[03:22:52] <FromDiscord> <leorize> Nim can generate a script and compiles and link, comment the link out and you got the objects
[03:48:28] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 252 seconds)
[04:24:25] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[04:25:59] <FromDiscord> <auxym> anyone have an idea why is nim passing `-march=x86-64` to gcc even if I use `--cpu:arm`?
[04:33:38] <FromDiscord> <leorize> @auxym\: you on arch linux?
[04:33:50] <FromDiscord> <auxym> ...yes
[04:34:07] <FromDiscord> <auxym> well, manjaro, but yes
[04:34:20] <FromDiscord> <leorize> blame their maintainer for modifying compile flags when they don't understand it
[04:34:42] <FromDiscord> <leorize> you just have to edit /etc/nim/nim.cfg to change the cflags
[04:34:58] <FromDiscord> <auxym> maintainers of the nim package?
[04:35:33] <FromDiscord> <auxym> alright. Or I'll use choosenim I guess. thanks a lot for the info
[04:35:42] <FromDiscord> <leorize> yea, if you look at the pkgbuild, it overrides the default with whatever was the cflags at makepkg time
[04:36:15] <FromDiscord> <auxym> wow. any idea if anyone filed a bug? Otherwise I might look into it
[04:36:26] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[04:36:53] <FromDiscord> <leorize> I think I saw one before, but not sure
[04:37:24] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[04:47:26] <FromDiscord> <leorize> https://bugs.archlinux.org/task/67092
[04:51:57] <FromDiscord> <auxym> good find, my search didnt turn it up
[04:53:45] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[05:31:37] <nrds> <06Prestige99> would `=destroy` be called on a ref object if it were assigned to `nil`?
[05:31:44] <nrds> <06Prestige99> or is it only scoping
[05:34:16] <FromDiscord> <Elegantbeef> I believe it's any destruction, make a test and use orc/arc to see 😀
[05:49:46] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:59:06] *** Joins: neurocyte6 (~neurocyte@185.117.68.241)
[05:59:06] *** Quits: neurocyte6 (~neurocyte@185.117.68.241) (Changing host)
[05:59:06] *** Joins: neurocyte6 (~neurocyte@user/neurocyte)
[06:00:29] <FromDiscord> <gogolxdong (liuxiaodong)> Does nim-eth include evm?
[06:01:11] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:01:11] *** neurocyte6 is now known as neurocyte
[06:03:35] <nrds> <06Prestige99> Hm if it does @Elegantbeef it'd be very useful for c libs
[06:03:46] <nrds> <06Prestige99> looking at sdl_mixer atm
[06:03:54] <nrds> <06Prestige99> Have to free loaded audio files
[06:06:23] <FromDiscord> <impbox [ftsf]> ergh sdl_mixer is terrible
[06:06:27] <FromDiscord> <impbox [ftsf]> wish they'd kill that library
[06:06:36] <FromDiscord> <impbox [ftsf]> better off just using sdl audio and mixing yourself
[06:06:38] <nrds> <06Prestige99> Should I be using something else?
[06:06:42] <nrds> <06Prestige99> :o
[06:07:16] <nrds> <06Prestige99> I've been learning and setting up sdl mixer for the last ~hour lol
[06:08:26] <FromDiscord> <impbox [ftsf]> maybe it's fine if your requirements are really basic
[06:08:45] <FromDiscord> <Gumber aka Zachary Carter> you could check out SoLoud
[06:08:56] <FromDiscord> <Elegantbeef> soloud, openal, ...
[06:09:00] <nrds> <06Prestige99> Just playing sfx and music for games, nothing fancy (yet?)
[06:09:01] <FromDiscord> <Gumber aka Zachary Carter> https://github.com/jarikomppa/soloud
[06:09:05] <nrds> <12R2D299> 4GitHub: 7"Free, easy, portable audio engine for games"
[06:09:29] <FromDiscord> <Gumber aka Zachary Carter> I had problems with SoLoud several years ago when I was working on Frag
[06:09:36] <FromDiscord> <Gumber aka Zachary Carter> but tmk the author has done a ton of work on it since then
[06:09:40] <FromDiscord> <Elegantbeef> Seems prestige yea it's only scope based afaik
[06:09:40] <FromDiscord> <Varriount> _notes that no-one mentions Allegro_
[06:09:55] <FromDiscord> <Gumber aka Zachary Carter> so I'm sure the situation has improved quite a bit - it was already a good library when I picked it up
[06:09:57] <FromDiscord> <Gumber aka Zachary Carter> Allegro is good
[06:10:09] <nrds> <06Prestige99> Ah that's unfortunate Beef, could've been very useful lol
[06:10:28] <nrds> <06Prestige99> SoLoud looks pretty neat
[06:10:35] <FromDiscord> <impbox [ftsf]> Allegro, i haven't heard of that for years
[06:10:43] <FromDiscord> <impbox [ftsf]> I liked it back in the day
[06:11:11] <FromDiscord> <Varriount> My college game development course used it.
[06:11:58] <FromDiscord> <Gumber aka Zachary Carter> I wrote like five lines of code for my game today before my covid made me want to go lay down and take a nap lol
[06:12:09] <FromDiscord> <Varriount> 😦
[06:12:16] <FromDiscord> <Gumber aka Zachary Carter> I'm almost over it I think but my god it's annoying how long it's lasting - been almost a week now since I started feeling crappy
[06:12:45] <FromDiscord> <Gumber aka Zachary Carter> tried to take a hot shower this evening and had to sit down on the bench in the shower because I was having trouble breathing and getting dizzy lol
[06:13:18] <nrds> <06Prestige99> 'If you're planning to make a multi-million budgeted console game, this library is (probably) not for you' well I guess SoLoud is out :P
[06:13:24] <FromDiscord> <impbox [ftsf]> maybe i'll split out nico's audio mixer to a separate module
[06:13:29] <nrds> <06Prestige99> jk lol but I'll probably stick with sdl for now
[06:13:39] <nrds> <06Prestige99> What are you using for audio in nico?
[06:13:42] <FromDiscord> <Gumber aka Zachary Carter> yeah I mean SoLoud might very well be over / under kill
[06:13:46] <FromDiscord> <impbox [ftsf]> sdl2
[06:13:50] <FromDiscord> <impbox [ftsf]> but not sdl_mixer
[06:13:53] <nrds> <06Prestige99> ah
[06:14:05] <FromDiscord> <Gumber aka Zachary Carter> there's also - https://github.com/yglukhov/sound
[06:14:08] <nrds> <12R2D299> 4GitHub: 7"Cross-platform sound mixer library"
[06:14:12] <FromDiscord> <Gumber aka Zachary Carter> and uh I guess - https://github.com/treeform/slappy
[06:14:15] <nrds> <12R2D299> 4GitHub: 7"3d sound api for nim."
[06:14:17] <FromDiscord> <Gumber aka Zachary Carter> I've only used `sound` before
[06:14:50] <nrds> <06Prestige99> I'm making a little wrapper for sdl mixer to make the api simple for my engine, we'll see how it goes
[06:14:56] <nrds> <06Prestige99> could always change it I suppose
[06:15:14] <FromDiscord> <auxym> `arm-none-eabi/bin/ld: cannot find -ldl` ring a bell for anyone? Nim is adding `-ldl` to linker args, I'm trying to cross compile for ARM using arm-none-eabi-gcc (maybe @PMunch ?)
[06:17:06] <FromDiscord> <Gumber aka Zachary Carter> the only time I ever cross compiled anything for ARM for Nim was for this project -https://github.com/fragworks/frag-android/blob/master/Dockerfile
[06:17:27] <FromDiscord> <Gumber aka Zachary Carter> and uh, I don't believe I was using `arm-none-eabi-gcc`
[06:17:59] <FromDiscord> <auxym> yeah arm-none-eabi-gcc is for bare metal MCUs, no linux
[06:18:49] <FromDiscord> <Gumber aka Zachary Carter> gotcha
[06:19:00] <FromDiscord> <auxym> pretty sure I don't want `-ldl` (something to do with dynamic linking, correct?), but not sure why nim is adding it
[06:19:04] <FromDiscord> <Gumber aka Zachary Carter> yeah
[06:19:16] <FromDiscord> <Anuke> In reply to @Gumber "I had problems with": I've been using Soloud for a while now and it still has some pretty major bugs
[06:19:18] <FromDiscord> <Elegantbeef> Prestige something like this may work for if you dont have multiple references to an object https://play.nim-lang.org/#ix=3z1a
[06:20:09] <FromDiscord> <Varriount> Prestige: If you're willing to give a flat-rate portion of revenue for any commercial game, you could use https://fmod.com
[06:20:34] <FromDiscord> <Elegantbeef> Obviously for best experience of the GC hooks use orc/arc
[06:21:02] <nrds> <06Prestige99> Probably not @Varriount but thanks for the link
[06:22:32] <FromDiscord> <Gumber aka Zachary Carter> In reply to @auxym "pretty sure I don't": maybe cause of - https://github.com/nim-lang/Nim/blob/devel/config/nim.cfg#L109-L127?
[06:22:34] <FromDiscord> <Gumber aka Zachary Carter> (edit) "https://github.com/nim-lang/Nim/blob/devel/config/nim.cfg#L109-L127?" => "https://github.com/nim-lang/Nim/blob/devel/config/nim.cfg#L109-L127 ?"
[06:23:08] <FromDiscord> <Gumber aka Zachary Carter> can probably override those in your own `nim.cfg`
[06:23:11] <FromDiscord> <Gumber aka Zachary Carter> sorry
[06:23:14] <FromDiscord> <Gumber aka Zachary Carter> `config.nims` is what I meant
[06:23:19] <FromDiscord> <auxym> yes, probably, I'm thinking I have to override `gcc.options.linker` in my nim.cfg
[06:23:23] <FromDiscord> <Gumber aka Zachary Carter> yeah exactly
[06:23:26] <FromDiscord> <impbox [ftsf]> Prestige, what are you making?
[06:23:48] <nrds> <06Prestige99> Just a simple 2d game engine, for fun
[06:23:48] <FromDiscord> <auxym> I'm wondering though why `@if unix` is hit? bug?
[06:23:57] <nrds> <06Prestige99> Trying to get it ready to participate in game jams
[06:24:01] <FromDiscord> <impbox [ftsf]> cool, those are fun =)
[06:24:19] <nrds> <06Prestige99> Yeah - I've only done one (with Godot) but I had a lot of fun
[06:26:08] <FromDiscord> <Gumber aka Zachary Carter> In reply to @auxym "I'm wondering though why": I'm trying to figure out where `unix` is defined
[06:26:10] <FromDiscord> <impbox [ftsf]> more nim game jammers =)
[06:26:18] <FromDiscord> <impbox [ftsf]> LD49 coming up soon
[06:26:34] <nrds> <06Prestige99> oh how soon? I haven't thought about it
[06:26:40] <nrds> <06Prestige99> I just started on this engine lol
[06:26:48] <FromDiscord> <impbox [ftsf]> oct 2-5
[06:27:05] <FromDiscord> <Anuke> wonder if I'll have my framework functional again by the time ld49 comes up
[06:27:09] <nrds> <06Prestige99> hm yeah I don't think this'll be ready unless I really grind away at it
[06:27:40] <FromDiscord> <impbox [ftsf]> just use whichever bits work at the time
[06:27:57] <FromDiscord> <Gumber aka Zachary Carter> sent a code paste, see https://play.nim-lang.org/#ix=3z1d
[06:28:10] <FromDiscord> <Gumber aka Zachary Carter> I guess those are the operating systems that are considered unix
[06:28:47] <FromDiscord> <auxym> In reply to @Gumber "I'm trying to figure": FYI overriding `gcc.options.linker` with `-static` does get rid of the error. Getting a whole crapton of linker errors now (https://pastebin.com/90feh27T), but that'll be for another time, getting tired.
[06:28:48] <FromDiscord> <impbox [ftsf]> usually i use jams as an excuse to add new features to my framework
[06:29:05] <nrds> <06Prestige99> That's my plan as well :)
[06:29:05] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3z1e
[06:31:44] <FromDiscord> <Gumber aka Zachary Carter> huh...
[06:31:51] <FromDiscord> <Gumber aka Zachary Carter> yeah this is out of my realm of expertise I think
[06:32:02] <FromDiscord> <Gumber aka Zachary Carter> I haven't tried to do much with SBCs / MBCs and bare metal
[06:32:07] <FromDiscord> <impbox [ftsf]> `--os:none` ?
[06:33:37] <FromDiscord> <auxym> `Error: unknown OS: 'none'. Available options are: DOS, Windows, OS2, Linux, MorphOS, SkyOS, Solaris, Irix, NetBSD, FreeBSD, OpenBSD, DragonFly, AIX, PalmOS, QNX, Amiga, Atari, Netware, MacOS, MacOSX, iOS, Haiku, Android, VxWorks, Genode, JS, NimVM, Standalone, NintendoSwitch, FreeRTOS, Any` 🙂
[06:34:21] <FromDiscord> <impbox [ftsf]> sorry
[06:34:32] <FromDiscord> <impbox [ftsf]> @auxym are you importing a package that'd trying to link something?
[06:34:47] <FromDiscord> <impbox [ftsf]> other than -ldl is it passing any other -l arguments?
[06:34:57] <FromDiscord> <impbox [ftsf]> actually no that won't tell you nm
[06:34:58] <FromDiscord> <auxym> nah, really just trying to get a "hello world" trivial thing going
[06:35:40] <FromDiscord> <auxym> The root seems to be that Nim, or the default nim.cfg, seems to consider os:any as unix
[06:35:57] <FromDiscord> <impbox [ftsf]> when you build it should tell you which config files are used
[06:36:05] <FromDiscord> <impbox [ftsf]> check those config files for linker options being passed
[06:36:30] <FromDiscord> <impbox [ftsf]> i've encountered distros putting weird stuff in /etc/nim/ config files
[06:41:39] <FromDiscord> <auxym> Yeah, I did have an issue with the /etc/nim/nim.cfg file on arch, I cp'd the file from nim git in there
[06:43:12] <FromDiscord> <impbox [ftsf]> nothing about -ldl in there?
[06:44:07] <FromDiscord> <auxym> only this  https://github.com/nim-lang/Nim/blob/devel/config/nim.cfg#L109-L127 which is under `@if unix`, so it seems that nim considers any as unix
[07:11:44] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[07:20:09] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3z1j
[07:54:29] <FromDiscord> <cabboose> Ok if I make a distinct int and shove it inside of an Atomic
[07:54:35] <FromDiscord> <cabboose> can I still use fetchAdd etc
[07:54:49] <FromDiscord> <cabboose> or will I have to define/borrow the procedures for arithmetic
[08:02:46] <FromDiscord> <cabboose> If I cast a uint32 to uint16 will it truncate the top 16 bits for me? or is it safer to apply a mask first
[08:03:44] <FromDiscord> <impbox [ftsf]> it'll just be looking at the first 16 bits
[08:03:50] <FromDiscord> <cabboose> huzzah
[08:04:13] <FromDiscord> <Elegantbeef> Cast is a bit reintepretation so it matches from the first bit to the end of the new type
[08:04:37] <FromDiscord> <Elegantbeef> So casting a large value from a small type is very very dangerous 😀
[08:04:55] <FromDiscord> <impbox [ftsf]> surprise data!
[08:04:57] <FromDiscord> <cabboose> Yeah that's the idea though
[08:05:09] <FromDiscord> <impbox [ftsf]> casting from a larger type to smaller type should be safe
[08:05:13] <FromDiscord> <cabboose> it's either that or apply a mask to get the first 16 bits anyway
[08:05:14] <FromDiscord> <impbox [ftsf]> at least for uints
[08:05:26] <FromDiscord> <cabboose> yeah no sign stored
[08:05:29] <FromDiscord> <cabboose> surely right
[08:05:44] <FromDiscord> <Elegantbeef> Well it's always safe large -\> small just a question of if the data modified is sensible
[08:05:55] <FromDiscord> <impbox [ftsf]> yep, depends how you then use that data whether it's safe
[08:06:14] <FromDiscord> <impbox [ftsf]> but uints will be less surprising
[08:06:27] <FromDiscord> <cabboose> It's pretty well controlled; it won't exceed the high(uint16)
[08:06:43] <FromDiscord> <cabboose> it's just an atomic counter, but it's storing two counts within one 32 bit uint
[08:06:52] <FromDiscord> <Elegantbeef> Well it cannot exceed
[08:07:30] <FromDiscord> <Elegantbeef> `cast[uint16](321321u32)` is only the first 16 bits `uint16(321321u32)` is a type conversion and runs a procedure to convert
[08:07:37] <FromDiscord> <cabboose> ah
[08:07:39] <FromDiscord> <Elegantbeef> the former will not error the latter will
[08:07:48] <FromDiscord> <cabboose> Yep yep the former is what I need
[08:07:53] <FromDiscord> <cabboose> coolio
[08:07:54] <FromDiscord> <cabboose> cheers
[08:08:03] <FromDiscord> <Elegantbeef> cast is a type system thing of saying "This is now X"
[08:09:07] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3z1q
[08:09:10] <FromDiscord> <impbox [ftsf]> if you wanna split it into 2 uint16s
[08:10:35] <FromDiscord> <cabboose> and if I want to add to the high 16 in the Atomic uint32 i'd add 1 shl 16? or 1 shl 15
[08:10:51] <FromDiscord> <impbox [ftsf]> you don't need to bother if you use the array method above
[08:11:02] <FromDiscord> <cabboose> the Atomic though
[08:11:09] <FromDiscord> <cabboose> won't be able to do fetch adds that way
[08:12:11] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3z1s
[08:12:25] <FromDiscord> <impbox [ftsf]> (edit) "https://play.nim-lang.org/#ix=3z1s" => "https://play.nim-lang.org/#ix=3z1t"
[08:12:58] <FromDiscord> <cabboose> that's not wrapped in atomic operations though right?
[08:12:59] <FromDiscord> <impbox [ftsf]> now the split is a uint16 "view" of the uint32
[08:13:06] <FromDiscord> <impbox [ftsf]> inc is atomic?
[08:13:24] <FromDiscord> <cabboose> but I mean data would be Atomic[uint32]
[08:13:35] <FromDiscord> <cabboose> can I do the cast etc?
[08:13:35] <FromDiscord> <cabboose> cool
[08:13:40] <FromDiscord> <cabboose> I had no idea
[08:13:40] <FromDiscord> <impbox [ftsf]> ok, i'm not familiar with Atomic type
[08:13:41] <FromDiscord> <cabboose> lol
[08:13:50] <FromDiscord> <Elegantbeef> Yea you should be able to do the cast
[08:13:51] <FromDiscord> <cabboose> rip
[08:14:04] <FromDiscord> <cabboose> Aw sick
[08:14:07] <FromDiscord> <Elegantbeef> since the first/only field is `T`
[08:15:02] <FromDiscord> <cabboose> I see; I guess I'm used to locks and thinking that that memory is somehow protected, but it's not really then. It's just the Atomic[T] provides access to guaranteed atomic procedures right?
[08:15:03] <FromDiscord> <cabboose> otherwise it's all the same shit
[08:15:20] <FromDiscord> <Elegantbeef> I do not know i'm only giving answers on the type/cast safety
[08:15:34] <FromDiscord> <impbox [ftsf]> if you cast then you'll be circumventing the type safety checks
[08:15:48] <FromDiscord> <impbox [ftsf]> so if Atomic is doing special stuff it'll be bypassing them
[08:17:06] <FromDiscord> <impbox [ftsf]> trying to look up nim atomics https://en.wikipedia.org/wiki/Nuclear_Instrumentation_Module
[08:17:09] <FromDiscord> <cabboose> Hmmm. Guess there's no way to know without throwing a threads at it
[08:17:09] <FromDiscord> <cabboose> mratsim would actually be a good source
[08:17:25] <FromDiscord> <impbox [ftsf]> or just try it and see
[08:17:26] <FromDiscord> <cabboose> hahahaha
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:40:53] <FromDiscord> <codic> ah yes, the nuclear instrumentation module
[08:41:10] <FromDiscord> <codic> absolutely perfect nim atomics
[08:49:28] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:27:20] <FromDiscord> <gogolxdong (liuxiaodong)> Is startdust opensourced?
[09:27:46] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 268 seconds)
[09:42:49] <arfy> today's random question. how does one convert a single character string to a char? I think variable[0] would be one way. 
[09:43:07] <FromDiscord> <impbox [ftsf]> that should be fine
[09:43:21] <FromDiscord> <impbox [ftsf]> if you're sure it has one character in it
[09:43:31] <FromDiscord> <impbox [ftsf]> and it's ascii
[09:44:38] <arfy> a char in nim is the same as a char in c. uint8_t
[09:45:07] <FromDiscord> <Elegantbeef> a char in nim is a type safe uint8 practically yes
[09:48:56] <FromDiscord> <impbox [ftsf]> is there something like tmpfile(3) in nim?
[09:49:17] <FromDiscord> <impbox [ftsf]> or mkstemp
[09:49:54] <FromDiscord> <Elegantbeef> Could use a memory mapped file?
[09:50:39] <FromDiscord> <Elegantbeef> Quite possibly those two functions are wrapped in one of the hidden unix/posix libraries
[09:51:16] <FromDiscord> <impbox [ftsf]> hmm seems like there's std/tempfiles
[09:51:19] <FromDiscord> <impbox [ftsf]> in devel maybe
[09:51:20] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/posix.html#mkstemp%2Ccstring
[09:51:36] *** Joins: sagax (~sagax_nb@user/sagax)
[09:51:41] <FromDiscord> <Elegantbeef> Indeed
[09:51:50] <FromDiscord> <Elegantbeef> https://nim-lang.github.io/Nim/tempfiles.html devel docs to the rescue!
[09:52:10] <FromDiscord> <impbox [ftsf]> i guess i'll use the posix stuff for now
[09:52:50] <FromDiscord> <Elegantbeef> There are even nicer APIs in `posix_utils`
[09:53:21] <FromDiscord> <impbox [ftsf]> oh good, the posix ones are ugly with cstring
[09:56:56] <FromDiscord> <impbox [ftsf]> dang, of course, doesn't work on windows shakes fist
[09:57:06] <FromDiscord> <Elegantbeef> Ah that was a given due to `posix`
[09:57:44] <FromDiscord> <Rika> who needs windows
[09:57:45] <FromDiscord> <Rika> smh
[09:57:47] <FromDiscord> <Elegantbeef> Memory mapped file might be the easiest
[09:57:59] <FromDiscord> <Elegantbeef> They're pretty good to look outside
[09:58:30] <FromDiscord> <impbox [ftsf]> figured windows would have implemented posix by now =p
[09:59:23] <FromDiscord> <Elegantbeef> There is a tempfile package in nimble
[10:02:34] <FromDiscord> <impbox [ftsf]> \o/ that works
[10:12:50] <FromDiscord> <impbox [ftsf]> hmm `execProcess("foo.exe", args = [tmpFilename], options={poEchoCommand, poUsePath})` -> `foo.exe C:\Users\user\AppData\Local\Temp\tmpmDcEG4UO.foo`
[10:13:02] <FromDiscord> <impbox [ftsf]> unforuntately it doesn't quote the filename
[10:13:08] <FromDiscord> <impbox [ftsf]> but if i add quotes myself it quotes the quotes
[10:17:42] <FromDiscord> <Rika> i believe for that file name, quotes are not needed
[10:18:00] <FromDiscord> <impbox [ftsf]> they are for the \ s
[10:18:23] <FromDiscord> <Elegantbeef> Did you try single or double quotes?
[10:18:28] <FromDiscord> <impbox [ftsf]> double
[10:18:57] <FromDiscord> <impbox [ftsf]> will try single
[10:19:01] <FromDiscord> <Rika> when you run it, does the filename appear fucked in the application? i dont recall windows needing quotes
[10:19:12] <FromDiscord> <Elegantbeef> You know if nim just calls `$(arg)` it'd show double quotes
[10:19:41] <FromDiscord> <Elegantbeef> Saying that as in "ya know i just thought"
[10:20:07] <FromDiscord> <impbox [ftsf]> foo.exe returns `C:UsersuserAppDataLocalTemptmpCHqXkp8C.foo: No such file or directory`
[10:20:13] <FromDiscord> <impbox [ftsf]> when it's not quoted
[10:20:48] <FromDiscord> <cabboose> prefix the string with r
[10:20:54] <FromDiscord> <cabboose> r for raw dogging
[10:21:02] <FromDiscord> <impbox [ftsf]> single quotes seems to work
[10:21:08] <FromDiscord> <impbox [ftsf]> doesn't get double escaped
[10:21:10] <FromDiscord> <Elegantbeef> The args are passed to `quoteShell` so i imagine it shouldnt be needed
[10:21:59] <FromDiscord> <Elegantbeef> `let needQuote = {' ', '\t'} in s or s.len == 0`
[10:22:19] <FromDiscord> <Elegantbeef> That explains why it's' not quoting
[10:26:55] <FromDiscord> <Elegantbeef> Eh it's been fixed! https://github.com/nim-lang/Nim/issues/18670
[10:27:31] <FromDiscord> <impbox [ftsf]> whoa
[10:32:41] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297::) (Quit: ZNC 1.8.2 - https://znc.in)
[10:41:12] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[10:41:49] <FromDiscord> <cabboose> image.png https://media.discordapp.net/attachments/371759389889003532/887943839082504212/image.png
[10:41:52] <FromDiscord> <cabboose> am I missing something
[10:41:54] <FromDiscord> <cabboose> because in C6
[10:42:01] <FromDiscord> <cabboose> aren't they just obliterating the value
[10:42:09] <FromDiscord> <cabboose> since they've shifted a uint16 by 16 bits to the left...
[10:42:27] <FromDiscord> <cabboose> I think they cooked their pseudocode
[10:42:48] <FromDiscord> <cabboose> oh wait
[10:42:49] <FromDiscord> <cabboose> I get it
[10:42:50] <FromDiscord> <cabboose> nvrm
[10:42:53] <FromDiscord> <cabboose> fuck
[10:43:02] <FromDiscord> <cabboose> v is a uint32
[10:43:16] <FromDiscord> <cabboose> so i should cast finalcount to uint32 first
[10:43:20] <FromDiscord> <cabboose> rip
[10:43:40] <FromDiscord> <Elegantbeef> well convert
[10:43:41] <FromDiscord> <cabboose> I AM CONVERTING
[10:43:42] <FromDiscord> <cabboose> ;\_;
[10:44:00] <FromDiscord> <Elegantbeef> Sorry but in Nim cast != conversion so i get a bit nervous hearing casting 😛
[10:44:13] <FromDiscord> <Rika> cab did u even sleep
[10:44:19] <FromDiscord> <cabboose> Oh; no I am casting
[10:44:20] <FromDiscord> <cabboose> I am cast lord
[10:44:26] <FromDiscord> <cabboose> I did rika; it was beautiful
[10:44:37] <FromDiscord> <cabboose> I am just losing my mental state
[10:44:39] <FromDiscord> <cabboose> \<3
[10:44:39] <FromDiscord> <Rika> its not obvious with how ur behaving
[10:44:55] <FromDiscord> <cabboose> this is me rika; just love me for who I am
[10:44:57] <FromDiscord> <Elegantbeef> this is just cabboose in my experience
[11:00:49] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[11:09:07] <FromDiscord> <impbox [ftsf]> trying to use dimscord to post messages on a timer rather than in response to users, has anyone done this?
[11:10:46] <FromDiscord> <Elegantbeef> Do you still need the messageCreate event handler?
[11:11:16] <FromDiscord> <impbox [ftsf]> probably not
[11:11:43] <FromDiscord> <Elegantbeef> Well eitherway you can probably have an async started from in `onReady` that loops and sends the message
[11:11:54] <FromDiscord> <Elegantbeef> async loop\
[11:12:10] <FromDiscord> <impbox [ftsf]> hmmm /me has to lern to async
[11:13:12] <FromDiscord> <Elegantbeef> Well i dont know async much either, but if you just ping rika they're all about async 😛
[11:13:28] <FromDiscord> <cabboose> use cps
[11:13:34] <FromDiscord> <Elegantbeef> I knew you were going to say that
[11:13:48] <FromDiscord> <impbox [ftsf]> copy paste style, yeah i do that
[11:13:53] <FromDiscord> <cabboose> xxx
[11:13:59] <FromDiscord> <cabboose> hahahaha rip
[11:14:01] <FromDiscord> <impbox [ftsf]> (edit) "copy paste style," => "Copy Paste from Stackoverflow ,"
[11:14:06] <FromDiscord> <Elegantbeef> continuation passing style \:D
[11:14:25] <FromDiscord> <impbox [ftsf]> yeah i know, i don't get that shit yet
[11:14:36] <FromDiscord> <impbox [ftsf]> just gimme while true and sleep =p
[11:14:42] <FromDiscord> <Elegantbeef> I dont much myself either
[11:14:43] <FromDiscord> <Rika> It’s almost as effortless as normal async so
[11:14:58] <FromDiscord> <cabboose> https://github.com/shayanhabibi/cpslearning/blob/main/cpsdrive.nim
[11:14:59] <FromDiscord> <Elegantbeef> Yea but impbox and I dont do async
[11:15:12] <FromDiscord> <Rika> Is that yours can
[11:15:15] <FromDiscord> <Rika> Cab
[11:15:22] <FromDiscord> <cabboose> yis
[11:15:39] <FromDiscord> <Rika> Just think of “await” as “switch to another thread”
[11:15:49] <FromDiscord> <Rika> If you don’t have await, nothing will switch
[11:16:02] <FromDiscord> <cabboose> except you have to poll it eventually
[11:16:16] <FromDiscord> <cabboose> I mean that is unavoidable
[11:16:23] <FromDiscord> <Rika> It will come back to your thread after what you awaited completes
[11:16:37] <FromDiscord> <Rika> The delay can be short or long depending on what else is running
[11:16:38] <FromDiscord> <cabboose> oh is this your dimscord thing?
[11:17:09] <FromDiscord> <impbox [ftsf]> trying to make dimscord post a daily message
[11:17:11] <FromDiscord> <Elegantbeef> Is rika really explaining async? 😀
[11:17:39] <FromDiscord> <Rika> It depends on your level of async knowledge
[11:17:46] <FromDiscord> <Rika> It’s hard to tell
[11:17:46] <FromDiscord> <cabboose> wait is dimscord yours Rika?
[11:17:50] <FromDiscord> <Rika> No
[11:17:58] <FromDiscord> <cabboose> Because async isn't run on another thread
[11:18:02] <FromDiscord> <cabboose> and you have to eventually call poll
[11:18:04] <FromDiscord> <Rika> I say thread but
[11:18:05] <FromDiscord> <cabboose> or do a run forever
[11:18:06] <FromDiscord> <cabboose> or something
[11:18:09] <FromDiscord> <Rika> I don’t mean literal thread
[11:18:10] <FromDiscord> <cabboose> or waitFor
[11:18:24] <FromDiscord> <Rika> I know
[11:18:27] <FromDiscord> <Rika> I’m not stupid
[11:18:31] <FromDiscord> <cabboose> I know
[11:18:34] <FromDiscord> <cabboose> but this is my segway
[11:18:37] <FromDiscord> <cabboose> into advertisement
[11:18:40] <FromDiscord> <cabboose> here at CPS
[11:18:47] <FromDiscord> <Rika> Go away
[11:18:55] <FromDiscord> <cabboose> 🍝
[11:18:56] <FromDiscord> <Rika> Advertisement bad
[11:19:14] <FromDiscord> <Elegantbeef> Wait rika said go, they want us to use Go
[11:19:26] <FromDiscord> <Elegantbeef> See you i'm going to use one of the most terribly designed languages imo
[11:19:43] <FromDiscord> <cabboose> Isn't that a oriental board game
[11:19:48] <FromDiscord> <Rika> Good, you deserve it
[11:19:48] <FromDiscord> <cabboose> surely its not a language
[11:19:59] <FromDiscord> <Rika> I can’t tell if cab is joking or not
[11:22:39] <FromDiscord> <cabboose> Good
[11:23:01] <FromDiscord> <cabboose> But seriously; it's also a board game right?
[11:23:10] <FromDiscord> <Rika> Yes I know the board game
[11:25:42] <FromDiscord> <impbox [ftsf]> nim?
[11:25:50] <FromDiscord> <gogolxdong (liuxiaodong)> How to pass parameter for web3 contract constructor?
[11:29:18] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:32:57] *** Joins: tdc (~tdc@217.61.224.137)
[11:52:42] *** Joins: Vladar (~Vladar@46.162.2.53)
[11:53:56] *** Joins: max22- (~maxime@2a01cb088335980073df05503d80cbee.ipv6.abo.wanadoo.fr)
[11:55:33] *** Joins: pro (~pro@user/pro)
[11:57:40] *** Quits: pro (~pro@user/pro) (Client Quit)
[12:12:11] *** Quits: darwillim86d (uid517090@id-517090.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:20:38] <FromDiscord> <impbox [ftsf]> so with async, i can do `discard await doThing()` can i do `await doThing() andThen doAnotherThing()` ?
[12:22:33] <FromDiscord> <dom96> You just call the second procedure with await after the first
[12:24:40] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3z29
[12:24:59] <FromDiscord> <impbox [ftsf]> _goes and reads your book_
[12:25:30] <FromDiscord> <dom96> Yeah
[12:25:35] <FromDiscord> <impbox [ftsf]> awesome, thanks!
[12:27:06] <FromDiscord> <dom96> In reply to @impbox "trying to use dimscord": I’m on mobile but I’ve got a StardustAnnouncer repo on GitHub which does this
[12:27:21] <FromDiscord> <impbox [ftsf]> i've figured it out thanks! =)
[12:27:35] <FromDiscord> <impbox [ftsf]> running a while true: in onReady did the trick
[12:28:17] <FromDiscord> <dom96> Cool
[12:35:57] *** Quits: federico3 (~quassel@debian/federico) (Ping timeout: 245 seconds)
[12:41:21] <PMunch> Hmm, there is no newfangled way of calling a macro given a NimNode right?
[12:51:09] *** Quits: max22- (~maxime@2a01cb088335980073df05503d80cbee.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[12:51:49] <FromDiscord> <Elegantbeef> What do you mean?
[12:52:22] <FromDiscord> <cabboose> [planetis](https://matrix.to/#/@planetis:matrix.org)\: I was told you can maybe help me with something
[12:53:02] <FromDiscord> <cabboose> I need a passover read of the algorithms and comments in this if you have a spare moment
[12:53:16] <FromDiscord> <cabboose> https://github.com/shayanhabibi/loony
[12:53:19] <nrds> <12R2D299> 4GitHub: 7"Experimenting to make a high throughput MPMC lock-free queue based on a paper by Giersch, Nolte et al."
[12:54:30] <FromDiscord> <gogolxdong (liuxiaodong)> https://stardust.dev/play/
[12:59:20] <NimEventer> New thread by Hoijui: How to download at compile-time?, see https://forum.nim-lang.org/t/8430
[13:04:19] <FromDiscord> <planetis> @cabboose whats up?
[13:04:48] <FromDiscord> <planetis> note iam quite a noob myslef
[13:05:15] <FromDiscord> <cabboose> Disruptek said you might be interested in it
[13:06:40] <FromDiscord> <planetis> sure
[13:07:30] <FromDiscord> <planetis> what are the banned boys up to?
[13:08:03] <FromDiscord> <cabboose> Something about haemorrhoids
[13:09:27] <FromDiscord> <planetis> ahahahha
[13:10:41] <FromDiscord> <cabboose> Shit already noticed L97 on queue.nim hasn’t been updated with the procedure for allocating the node
[13:10:47] <FromDiscord> <cabboose> maybe that’s what’s corking me
[13:11:11] <FromDiscord> <planetis> 2022?
[13:11:16] <FromDiscord> <cabboose> and L109 lol
[13:11:16] <FromDiscord> <cabboose> yep
[13:11:40] <FromDiscord> <cabboose> It’s been published online but the journal is yet to be published in paperback
[13:11:41] <FromDiscord> <cabboose> thats the date of paperback publication
[13:13:16] <FromDiscord> <planetis> ok thx
[13:19:41] <FromDiscord> <planetis> was it by any chance already ported to other languages as well? (with sources opensourced that is)
[13:19:52] <FromDiscord> <cabboose> c++
[13:19:56] <FromDiscord> <cabboose> linked in the readme
[13:20:04] <FromDiscord> <cabboose> but as for ports to other languages I don'
[13:20:06] <FromDiscord> <cabboose> t believe so
[13:20:12] <PMunch> @ElegantBeef, I meant getting a piece of my NimNode tree that I know will return a value that I want if called. I want to call it
[13:20:26] <FromDiscord> <cabboose> it's only a couple months old
[13:20:33] <PMunch> Normally I would write one macro parsing the input and then rewriting it to be a new macro call
[13:22:43] <FromDiscord> <Elegantbeef> Seems like that's the only way if i understand rightly
[13:23:04] <FromDiscord> <Elegantbeef> Given you want to evaulate a tree
[13:23:46] <PMunch> It has been the only way of doing it, I was just wondering if someone had made a new cool way of doing it
[13:24:54] <FromDiscord> <Elegantbeef> id have to ask if you bindsym the outer macro so you dont need to export it 😀
[13:25:24] <PMunch> Huh?
[13:27:32] <FromDiscord> <Elegantbeef> Something like this https://play.nim-lang.org/#ix=3z2j
[13:29:25] <FromDiscord> <Elegantbeef> it allows you do this chained macro emitting without exporting all the macros used if that's a something you care about
[13:30:59] <PMunch> Isn't that done automatically
[13:31:05] <FromDiscord> <cabboose> After reaching operation on L237 on queue.nim it SIGSEVS
[13:31:37] <FromDiscord> <Elegantbeef> It's done automatically if you use quote do or similar i guess
[13:32:27] <PMunch> Ah right
[13:34:52] <FromDiscord> <cabboose> ok L70 and L71 are actually supposed to change the value of prev from the caller
[13:35:00] <FromDiscord> <cabboose> so I guess I should use a template?
[13:35:12] <FromDiscord> <cabboose> or pass the prev as a variable to be changed?
[13:35:18] <FromDiscord> <cabboose> on node.nim
[13:35:47] <FromDiscord> <cabboose> that doesnt make sense to me lol
[13:41:58] *** Joins: max22- (~maxime@2a01cb08833598004808c986d8fd0bff.ipv6.abo.wanadoo.fr)
[13:52:15] *** Quits: max22- (~maxime@2a01cb08833598004808c986d8fd0bff.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[13:53:03] *** Joins: max22- (~maxime@2a01cb0883359800c203f4e20803de91.ipv6.abo.wanadoo.fr)
[14:09:05] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[14:13:52] *** Quits: max22- (~maxime@2a01cb0883359800c203f4e20803de91.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:14:37] *** Joins: max22- (~maxime@2a01cb0883359800326db5d5b924c729.ipv6.abo.wanadoo.fr)
[14:21:24] <FromDiscord> <cabboose> The enqueue operation consistently skips an index of like 133 and when the dequeue operation arrives at the index it dies
[14:21:40] <FromDiscord> <cabboose> This game sucks
[14:22:42] *** Quits: max22- (~maxime@2a01cb0883359800326db5d5b924c729.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:24:28] *** Joins: max22- (~maxime@2a01cb0883359800b93d6fac2a60b640.ipv6.abo.wanadoo.fr)
[14:24:47] *** Quits: max22- (~maxime@2a01cb0883359800b93d6fac2a60b640.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:42:33] *** Joins: max22- (~maxime@2a01cb08833598005b81de1e843a31cc.ipv6.abo.wanadoo.fr)
[14:44:31] <FromDiscord> <enthus1ast> which function to use to get a aproximation of a float? 95.90000000000001 -\> 95.9
[14:44:49] <FromDiscord> <Rika> In string form?
[14:44:56] <FromDiscord> <enthus1ast> yeah
[14:45:04] <FromDiscord> <Rika> I don’t remember but there is a flag to enable dragon box
[14:45:13] <FromDiscord> <enthus1ast> in 1.4.8?
[14:45:22] <FromDiscord> <Rika> Not sure
[14:45:24] <FromDiscord> <Rika> Probably devel only
[14:45:49] <FromDiscord> <enthus1ast> mh ok then I'll quickly roll my own
[14:45:56] <FromDiscord> <enthus1ast> thanks @Rika
[14:58:01] <FromDiscord> <hmmm> holla :3
[14:58:41] <FromDiscord> <hmmm> I just made a toy app on wnim and it worked like a charm
[14:58:52] <FromDiscord> <hmmm> where is the wnim guy I want to congratulate
[15:07:41] <arfy> ugh. that moment when you're happily working on your app, but have run into a roadblock.
[15:08:57] <FromDiscord> <hmmm> there is no roadblock nimchat can't help you with
[15:09:01] <FromDiscord> <enthus1ast> what is your roadblock
[15:09:24] <arfy> :)
[15:14:49] <arfy> what's the place to paste code here?
[15:15:38] <FromDiscord> <enthus1ast> https://play.nim-lang.org/
[15:15:43] <FromDiscord> <enthus1ast> "Share to ix"
[15:16:48] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Ping timeout: 268 seconds)
[15:19:52] <arfy> ok. so, I have a  list... sorry, sequence of strings like this. @["option 1", "option 2"]. the program prints out those optoins like this. 1. option 1. 2. option 2. youthen select from those options. obviously these options can be dynamically generated. so, how to map from that list of options to the corresponding responses from the keyboard.
[15:21:54] <arfy> I thought of doing. of "1" .. $options.len in a case statement but not sure that works.
[15:28:51] <FromDiscord> <enthus1ast> https://play.nim-lang.org/#ix=3z2L
[15:30:14] <FromDiscord> <enthus1ast> must make it nice, can still crash when int is not parsable
[15:30:52] <arfy> why... didn't I think of that? *slaps head* parseInt directly on the result of stdin.readLine()
[15:32:40] <arfy> actually, Can I apply this to the illwill library, for non-blocking keyboard input?
[15:34:30] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:34:57] <FromDiscord> <enthus1ast> sure why not
[15:35:28] <FromDiscord> <enthus1ast> have a look at my widgets for illwill, maybe you find something usefull\: https://github.com/enthus1ast/illwillWidgets
[15:35:31] <nrds> <12R2D299> 4GitHub: 7"mouse enabled widgets for illwill"
[15:35:40] <arfy> neat.
[15:36:51] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[15:39:09] <FromDiscord> <enthus1ast> and some examples of bigger apps i build with illwill\:↵https://github.com/enthus1ast/muk↵https://github.com/enthus1ast/trainingThing
[15:40:18] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[15:42:34] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Remote host closed the connection)
[15:44:22] *** Joins: neurocyte (~neurocyte@185.117.68.241)
[15:44:22] *** Quits: neurocyte (~neurocyte@185.117.68.241) (Changing host)
[15:44:22] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[15:49:36] <FromDiscord> <@hjarausch_gitlab-5fa43a7bd73408> building Nim devel on Termux \: how to set linker options? Linking the new koch fails since Termux/Android needs an additional `-landroid-glob` flag.↵How can I specify this since nim is invoked with `--skipUserCfg`.↵Many thanks for hint, Helmut
[15:51:43] <NimEventer> New thread by R3c: Call Nim code from C (linking errors), see https://forum.nim-lang.org/t/8431
[15:52:26] <arfy> wo. I just performed some black magic. parseInt($chr(ord(Key.One)))
[15:56:49] <FromDiscord> <Rika> “ord” already returns an integer doesn’t it?
[15:57:29] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[15:58:15] *** Joins: rockcavera (~rc@192.12.112.204)
[15:58:15] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[15:58:15] *** Joins: rockcavera (~rc@user/rockcavera)
[15:59:51] <arfy> it does, but I want to return 1, the label of the key, not 49, the ascii value of the key
[15:59:52] <arfy> etc
[16:01:14] <arfy> oo. this is nicer. parseInt($Key.One.ord.chr)
[16:01:37] <FromDiscord> <Rika> Muh performance
[16:02:17] <PMunch> .ord.chr?
[16:02:18] <FromDiscord> <haxscramper> can't you just add offset and convert it to int again/
[16:02:41] <arfy> that would work too
[16:02:57] <FromDiscord> <Rika> In reply to @haxscramper "can't you just add": Or just subtract the offset from the integer
[16:03:53] <arfy> meow. tired
[16:04:03] <arfy> been coding on and off most of the day
[16:04:05] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[16:08:53] <arfy> thans for the offset suggestion. that looks far nicer. (Key.One.ord)-49
[16:09:14] <arfy> returns index 0 for the list of options.
[16:14:45] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[16:19:29] <FromDiscord> <Goel> sent a code paste, see https://play.nim-lang.org/#ix=3z2S
[16:19:47] <arfy> right. flopping over. gn
[16:19:58] <FromDiscord> <Goel> (edit) "https://play.nim-lang.org/#ix=3z2S" => "https://play.nim-lang.org/#ix=3z2T"
[16:20:17] <FromDiscord> <Goel> (edit) "https://play.nim-lang.org/#ix=3z2T" => "https://play.nim-lang.org/#ix=3z2U"
[16:29:21] *** Joins: federico3 (~quassel@debian/federico)
[16:30:17] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3z2Y
[16:30:55] <FromDiscord> <Goel> It doesn't work on my case, i don't know why, if i do it it tells me "need to be used or discarded" But nevermind, not a big deadl
[16:30:59] <FromDiscord> <Goel> (edit) "deadl" => "deal"
[16:31:08] <FromDiscord> <Rika> No
[16:31:17] <FromDiscord> <Rika> You have to reassign
[16:32:06] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[16:32:40] <FromDiscord> <Goel> yeah but thats gonna be long too, so in the end i just go for the full long-inline once and thats it. I was just wondering if it was possible to do something like:↵`round(curZoom -= zoomFactor, 1)
[16:32:44] <FromDiscord> <Goel> (edit) "1)" => "1)`"
[16:33:52] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[16:34:01] <FromDiscord> <Rika> No
[16:34:13] <FromDiscord> <Rika> That would still need a reassign
[16:34:23] <FromDiscord> <Rika> Round doesn’t take in a variable value
[16:34:34] <FromDiscord> <Rika> Rather it can but it won’t mutate
[16:35:15] *** Quits: max22- (~maxime@2a01cb08833598005b81de1e843a31cc.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:45] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[16:55:41] *** Joins: arkurious (~arkurious@user/arkurious)
[17:00:01] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[17:04:07] *** Joins: neurocyte (~neurocyte@185.117.68.241)
[17:04:07] *** Quits: neurocyte (~neurocyte@185.117.68.241) (Changing host)
[17:04:07] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[17:05:56] <arkanoid> I'm finding ffi in JavaScript surprisingly easy. At the same time I feel the lack of existing js wrappers
[17:07:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[17:12:14] <FromDiscord> <tandy> do you have a git link i could look at? i think that would help me with some stuff↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[17:12:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:22:02] <FromDiscord> <cabboose> this is silly, I can't use any of the manual memory allocation procs with the alignment pragma
[17:27:31] *** Joins: pro (~pro@user/pro)
[17:35:06] <FromDiscord> <cabboose> mofos there are aligned allocation procs in the source that isn't exported
[17:35:11] <FromDiscord> <cabboose> why
[17:35:13] <FromDiscord> <cabboose> whyyyyy
[17:42:47] <FromDiscord> <planetis> Well even if it was
[17:43:31] <FromDiscord> <planetis> It still holds a global lock
[17:44:17] <FromDiscord> <planetis> You can pbl do the alignment yourself though
[17:47:29] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[17:50:07] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[17:56:44] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[18:07:43] <FromDiscord> <cabboose> What holds a global lock?
[18:08:05] <FromDiscord> <cabboose> I exported those procs and the queue actually works because it has aligned reserved memory
[18:08:13] <FromDiscord> <cabboose> which begs the question why they aren't available in the first place
[18:08:37] <FromDiscord> <cabboose> or using align pragma isn't smarter, like when it's used on a pointer variable
[18:17:16] <FromDiscord> <dom96> arkanoid: time for a js2nim 😄
[18:17:34] <arkanoid> Is it a thing?
[18:17:57] <FromDiscord> <planetis> the allocator, whereas the reference implementation uses mimalloc
[18:18:07] <arkanoid> ts2nim would be easier, probably
[18:19:00] <FromDiscord> <cabboose> ahyi
[18:19:23] *** Joins: max22- (~maxime@2a01cb0883359800cbea6a523dcdbf78.ipv6.abo.wanadoo.fr)
[18:19:31] <FromDiscord> <dom96> don't think it's a thing
[18:19:35] <FromDiscord> <dom96> but sounds like a fun project
[18:19:56] <arkanoid> Not sure where to start. Probably tree sitter
[18:22:28] <FromDiscord> <planetis> they arent public api cause of reasons. https://github.com/nim-lang/Nim/pull/18609
[18:24:08] <FromDiscord> <cabboose> I'll have to implement it locally for the library then
[18:24:36] <FromDiscord> <cabboose> The storage system doesnt work without aligned pointers
[18:24:53] <FromDiscord> <cabboose> cant manually allocate memory with alignment
[18:25:08] <FromDiscord> <cabboose> and the slots eventually get reallocated in every other circumstance
[18:25:53] <FromDiscord> <cabboose> Is there a risk or is it just a matter of ensuring people don't make it too crazy
[18:34:05] <NimEventer> New thread by HJarausch: Building Nim Devel on Termux (Android), see https://forum.nim-lang.org/t/8432
[18:35:06] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[19:03:14] <FromDiscord> <planetis> btw i would move to a bounded implementation https://github.com/rigtorp/MPMCQueue
[19:03:17] <nrds> <12R2D299> 4GitHub: 7"A bounded multi-producer multi-consumer concurrent queue written in C++11"
[19:04:26] <FromDiscord> <planetis> reclaiming the memory in this setting is very hard to do
[19:05:07] <FromDiscord> <planetis> bounded seems like a better choice, since i dont want to allocate all the time, just once
[19:06:19] <FromDiscord> <planetis> that algorithm is not lock-free for the consumer part
[19:06:49] <FromDiscord> <planetis> better yet use a spsc queue for each thread
[19:18:16] <FromDiscord> <cabboose> The algorithm provides a pretty safe reclamation though no?
[19:18:49] <FromDiscord> <cabboose> I mean; i'd rather really grind this out, a lock-free multiple consumer is exactly what I'm aiming for
[19:19:01] <FromDiscord> <cabboose> I want continuations shooting out of every hole at speed
[19:39:42] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:47:47] *** Joins: Guest5552 (~Guest55@190.143.250.112)
[19:51:22] *** Quits: Guest5552 (~Guest55@190.143.250.112) (Client Quit)
[20:32:15] *** Quits: asd (~noname@user/asd) (Ping timeout: 265 seconds)
[20:33:56] *** Joins: asd (~noname@user/asd)
[20:40:36] <FromDiscord> <planetis> maybe... last time I spent a week porting a new mpsc queue and then I tested it with tsan and it was complaining. Other people run into the same errors as well.
[20:40:44] <FromDiscord> <planetis> ime its a gamble
[20:43:57] <FromDiscord> <cabboose> eugh
[20:51:05] <FromDiscord> <reilly> Can someone provide me an example of how to use an image in Karax?
[20:55:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:57:53] <Zevv> I have a queue of events that are implemented as enums; different event types have an enum variant, some have data. Now i'd like to register callbacks that get called when events of a certain kind are popped off the queue, but I can't seem to find how to refer to a certain "kind" of the enum without making a complete instance of that enum. I can statically match, but I need some kind of run time discriminant. 
[20:58:00] <Zevv> Is there a way to do this, or did I pick the wrong representation?
[20:58:36] <Zevv> oh dang
[20:58:40] <Zevv> this is totally the wrong channel
[20:58:46] <Zevv> because I am doing rust today
[21:11:09] <FromDiscord> <Gumber aka Zachary Carter> gross
[21:12:49] <FromDiscord> <reilly> Nevermind, I figured it out.
[21:15:41] <FromDiscord> <Gumber aka Zachary Carter> In reply to @Zevv "this is totally the": wrong server homie 😛
[21:16:20] <Zevv> nah proper server, wrong channel. stuff is bridged all over the place these days, i'm just on IRC
[21:16:26] <Zevv> how is the zach these days
[21:16:38] <FromDiscord> <Gumber aka Zachary Carter> oh yeah true
[21:16:59] <FromDiscord> <Gumber aka Zachary Carter> I'm good thanks! Just getting over my second bout of COVID, how have you been?
[21:19:18] <Zevv> all over the place. I recently quit at activevideo, I was sooo done with the bureaucracy and layers of management
[21:19:30] <Zevv> but now I ended up doing rust. from the fire into the flames, as they say
[21:21:56] <FromDiscord> <Rika> hows rust
[21:21:58] <FromDiscord> <Gumber aka Zachary Carter> oh wow
[21:22:17] <FromDiscord> <Gumber aka Zachary Carter> sorry to hear about that, but I'm glad you found something else that interests you 😄
[21:23:09] <FromDiscord> <Gumber aka Zachary Carter> I'm out of the games industry now, went back in for a bit and now I'm doing Elixir (and Nim if the opportunity arises - it was already approved)
[21:23:40] <FromDiscord> <Gumber aka Zachary Carter> been there since July - doesn't seem like it though... time flies...
[21:24:26] <FromDiscord> <Gumber aka Zachary Carter> and yeah... how is Rust?
[21:24:37] <FromDiscord> <Gumber aka Zachary Carter> I mean I already know, but your opinion would be cool to hear too 😛
[21:32:54] <Zevv> I prefer elixir :)
[21:33:15] <FromDiscord> <Gumber aka Zachary Carter> haha me too 😄
[21:33:25] <Zevv> I was honestly wondering how long it takes the average developer to stop shouting at their computer in rage when getting started with rust
[21:33:34] <FromDiscord> <Gumber aka Zachary Carter> months I think
[21:33:41] <Zevv> I get what they are trying to do and all, I really do. But it just is /so/ painful
[21:33:43] <FromDiscord> <Gumber aka Zachary Carter> borrow checker is a bitch
[21:33:48] <FromDiscord> <Gumber aka Zachary Carter> yaup
[21:34:20] <FromDiscord> <Gumber aka Zachary Carter> I don't get the game studios that are like full on embracing Rust like Embark
[21:34:22] <Zevv> I'm trying to do these basic simple things for embedded. I have one single instance of a thing. In normal language that would just live somewhere statically and be a singleton
[21:34:27] <Zevv> but no no in rust we don't do singletons.
[21:34:49] <FromDiscord> <Gumber aka Zachary Carter> I mean they have some really talented and smart people there - but... it just seems like they're using Rust because it is popular and hyped, not necessarily because of its technical merits
[21:35:10] <FromDiscord> <Gumber aka Zachary Carter> heh, yeah all those lovely "zero-cost abstractions"
[21:35:25] <Zevv> I see the merits for some systems; when you're juggling with tons of dynamic data and don't want GCing, it can prbly do a nice job and all
[21:35:32] <Zevv> It's a better C. sure.
[21:35:39] <FromDiscord> <Rika> zero cost in performance massive cost in dev time 😛
[21:35:41] <FromDiscord> <Gumber aka Zachary Carter> yeah but so is Zig
[21:35:48] <Zevv> Right.
[21:35:52] <FromDiscord> <Gumber aka Zachary Carter> and I don't know if it's a bettter C
[21:35:55] <FromDiscord> <Gumber aka Zachary Carter> (edit) "bettter" => "better"
[21:35:56] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3z4F
[21:35:57] <Zevv> And so is Nim, even.
[21:36:02] <FromDiscord> <Gumber aka Zachary Carter> safer sure, but better I dunno that's arguable
[21:36:13] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3z4G
[21:36:19] <Zevv> well, the thing is, on this deep embedded stuff I hardly do any memory management at all
[21:36:28] <FromDiscord> <Gumber aka Zachary Carter> yeah
[21:36:35] <Zevv> stuff just lives somewhere and you ref it. done. 99% of my bugs are not related to stuff rust would prevent
[21:36:42] <Zevv> but hey, $customer wants rust because it's a good show
[21:36:53] <FromDiscord> <Gumber aka Zachary Carter> the whole single allocator thing I never got
[21:36:54] <Zevv> they pay me to do the work, they pay me to learn rust. who am i to complain
[21:37:00] <FromDiscord> <Gumber aka Zachary Carter> yeah - I think it's a good deal
[21:37:10] <FromDiscord> <Gumber aka Zachary Carter> never hurts to broaden your knowledge and get paid for it at the same time, that's for damn sure
[21:37:24] <Zevv> I advised against it, so I can always reach out with a fat "told ya so" one day
[21:37:37] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3z4H
[21:37:44] <FromDiscord> <Gumber aka Zachary Carter> 😄
[21:37:49] <FromDiscord> <Gumber aka Zachary Carter> smart move
[21:38:41] <Zevv> The rust embedded book tells me to do it like this
[21:38:42] <Zevv> MY_GPIO.borrow(cs).borrow().as_ref().unwrap().odr.modify(|_, w| w.odr1().set_bit());
[21:38:45] <Zevv> I am /not/ making this up
[21:38:57] <FromDiscord> <Rika> you have to use normal `proc(): ...` syntax for multiline i believe?
[21:38:58] <Zevv> this is the alternative for the C 'MY_GPIO.set_bit()'
[21:39:02] <FromDiscord> <leorize> fwsgonzo#9652\: `proc (iter: iterator(): Token): string = return ""`↵(@fwsgonzo)
[21:39:07] <FromDiscord> <Rika> yup
[21:39:28] <FromDiscord> <fwsgonzo> many thanks 👍
[21:39:34] <FromDiscord> <Rika> In reply to @Zevv "MY_GPIO.borrow(cs).borrow().as_ref().unwrap().odr.m": how fun
[21:39:38] <FromDiscord> <Rika> that is one hell of a line
[21:39:43] <FromDiscord> <Gumber aka Zachary Carter> yeah kill me
[21:40:00] <FromDiscord> <leorize> alternatively `sugar.()` exists, too
[21:40:01] <FromDiscord> <Rika> do you think rust programmers are human
[21:40:12] <Zevv> I'm not sure, I never met one in real life
[21:40:16] <Zevv> I'm on my own in this project
[21:40:22] <FromDiscord> <fwsgonzo> they are more human than me as a C++ programmer
[21:40:36] <FromDiscord> <Gumber aka Zachary Carter> I mean C++ is sane if you don't use C++17 or 20
[21:40:37] <Zevv> It makes me wonder if this is some kind of self inflicted masochism to show of ones smarts
[21:40:46] <Zevv> or if people honestly think this is a good idea all the way down
[21:41:05] <Zevv> but the same goes for elixir of course. That pure functional state juggling is silly as hell as well
[21:41:11] <FromDiscord> <Gumber aka Zachary Carter> yeah
[21:41:21] <FromDiscord> <Gumber aka Zachary Carter> well take anything to an extreme and you end up with this kind of stuff
[21:41:26] <Zevv> right
[21:41:46] <FromDiscord> <Gumber aka Zachary Carter> I mean games are not operating system kernels or missile defense systems
[21:41:50] <Zevv> and for elixir I see why this is - it's collateral damage, the price you pay for the share-nothing threading model
[21:41:56] <FromDiscord> <Gumber aka Zachary Carter> or software powering critical infrastructure
[21:42:19] <Zevv> nasa went to the moon on C
[21:42:27] <FromDiscord> <Gumber aka Zachary Carter> so I don't get the whole everything must be safe philosophy in that context, but in other contexts I do
[21:42:28] <FromDiscord> <Gumber aka Zachary Carter> and forth
[21:42:32] <Zevv> right
[21:43:18] <FromDiscord> <Gumber aka Zachary Carter> people just buy into stuff with too much hype and not even speculation
[21:43:28] <FromDiscord> <Gumber aka Zachary Carter> especially young people - I was like that when I was young and not jaded
[21:43:30] <Zevv> well, rust is prbly here too stay, right
[21:43:35] <FromDiscord> <Gumber aka Zachary Carter> I probably would have been a huge rust fanboi like ten years ago
[21:43:38] <Zevv> but I miss the golang pragmatism
[21:43:56] <FromDiscord> <Gumber aka Zachary Carter> yeah for sure, I mean it is popular for a reason, but I think it's a bit over hyped / praised
[21:44:04] <FromDiscord> <Gumber aka Zachary Carter> yeah golang was just a bit too pragmatic haha
[21:44:09] <FromDiscord> <Gumber aka Zachary Carter> or is I guess
[21:44:22] <Zevv> I should visit Zig, it's the last one on my list
[21:44:34] <FromDiscord> <Gumber aka Zachary Carter> zig is awesome
[21:44:36] <FromDiscord> <Gumber aka Zachary Carter> especially zigcc
[21:44:38] <Zevv> I'm still sticking with nim for some reason
[21:44:55] <Zevv> although it smells in the back alleys and blows up in my face every time I try to do something interesting
[21:44:56] <FromDiscord> <Gumber aka Zachary Carter> yeah same - I've touched all three and Nim is still my goto, although I do really like Zig
[21:45:00] <FromDiscord> <Gumber aka Zachary Carter> and I think a Zig backend for Nim would be amazing
[21:45:16] <FromDiscord> <Gumber aka Zachary Carter> once Zig matures ab it
[21:45:20] <FromDiscord> <Gumber aka Zachary Carter> (edit) "ab it" => "a bit more"
[21:46:15] <Zevv> anyway, I did some nice outings over the last year. I rewrote npeg in elixir in 1 day, which was pretty cool. I did some hefty lifting in golang for $customer, and now getting my hands dirty with rust
[21:46:25] <Zevv> that's pretty impressive for someone my age, right
[21:47:08] <FromDiscord> <Rika> i want a mix of zig and nim ngl
[21:47:15] <FromDiscord> <Rika> would be funky
[21:47:19] <FromDiscord> <Rika> funky monkey
[21:47:38] <FromDiscord> <Rika> In reply to @Zevv "anyway, I did some": that sounds impressive yes
[21:48:17] <FromDiscord> <Gumber aka Zachary Carter> yeah I think so
[21:57:38] <FromDiscord> <Gumber aka Zachary Carter> Doing games as a hobby again is really refreshing, just being able to work on my own pace on things that interest me instead of working on stuff I'm directed to work on is nice again
[21:57:55] <Zevv> yeah, never forget that
[21:58:00] <FromDiscord> <Gumber aka Zachary Carter> I always bought into that whole, do what you love and it's not work thing but it's so not true... I think it only applies if you're your own boss and get to make your own decisions on what you want to work on
[21:58:02] <Zevv> coding for work != coding for yourself
[21:58:06] <FromDiscord> <Gumber aka Zachary Carter> yeah
[21:58:24] <Zevv> and I'm so fucking spoiled as a mercenary. I just pick the jobs I like and go away when I'm bored
[21:58:49] <FromDiscord> <Gumber aka Zachary Carter> really enjoying game dev again and my project is really coming along - got all of the network plumbing code going, working on the renderer now, already prototyped a ton of stuff in previous iterations of the project
[21:59:10] <FromDiscord> <Gumber aka Zachary Carter> in the next six months or so I should actually have something playable
[21:59:15] <FromDiscord> <Gumber aka Zachary Carter> yeah that's pretty sweet
[21:59:39] <Zevv> well, show early and show often, right
[21:59:43] <Zevv> even if it's not playable yet
[22:00:03] <FromDiscord> <Gumber aka Zachary Carter> although even my day job stuff isn't bad - I mean it's not the most interesting work in the world but the company mission is cool and programming in Elixir is nice
[22:00:05] <Zevv> the problem I always see with solo game development is that coding and artwork are two so totally different things
[22:00:19] <FromDiscord> <Gumber aka Zachary Carter> yeah - I mean once I have stuff to show, the network stuff isn't really cool to see
[22:00:35] <FromDiscord> <Gumber aka Zachary Carter> yeah I mean I'm going 3d since I suck at art and 3d is much easier to get by with  than 2d if that's the case I think
[22:00:45] <FromDiscord> <Gumber aka Zachary Carter> (edit) "if" => "when"
[22:01:21] <FromDiscord> <Gumber aka Zachary Carter> but my first prototype will just use primitives I think
[22:01:46] <FromDiscord> <Gumber aka Zachary Carter> and probably some models from blendswap with mixamo animations 🙂 It's just a prototype to get interest from potential artists anyway
[22:02:07] <FromDiscord> <Gumber aka Zachary Carter> already have some folks I've worked with in the past that have expressed interest in working with me on it once I'm ready for their help
[22:05:59] <Zevv> that's nice
[22:07:01] <FromDiscord> <Gumber aka Zachary Carter> Yeah! Anyway, I'll shut up and let people talk about Nim now 😛
[22:32:07] <FromDiscord> <reilly> How can I loop over all states of an enum?
[22:35:29] <Zevv> for i in T.low..T.high:
[22:36:26] <Zevv> given your enum has no gaps
[22:37:35] <FromDiscord> <Rika> enums need more love..
[22:38:39] <Zevv> don't we all
[22:39:16] <FromDiscord> <reilly> In reply to @Zevv "for i in T.low..T.high:": Looks like that works, sweet.
[22:40:23] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3z50
[22:40:45] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3z51
[22:47:10] <FromDiscord> <reilly> Alright, here's a question that's a little out-of-the-box:↵Given that I'm looping over an enum, can I call a procedure called `do<EnumName>()`?
[22:47:34] <FromDiscord> <reilly> So, if the enum is `SomeEnum` at the moment, call a proc called `doSomeEnum()`.
[22:47:48] <FromDiscord> <Rika> use generics?
[22:47:57] <FromDiscord> <Rika> do[T: enum]()...
[22:48:02] <FromDiscord> <Rika> do[SomeEnum]()
[22:48:18] <FromDiscord> <Rika> do[GenericParameterContainingType]()
[22:48:26] <FromDiscord> <Rika> enum, not type
[22:48:42] <FromDiscord> <Rika> or do you mean enum value?
[22:48:50] <FromDiscord> <Rika> in which case no
[22:48:51] <FromDiscord> <reilly> No, I think that works...
[22:51:33] <FromDiscord> <reilly> Actually, no, because I don't need the enum type, I need the specific enum.
[22:51:52] <FromDiscord> <reilly> Is that what you mean by enum value?
[22:52:37] <FromDiscord> <reilly> I initially thought you meant value as in `Option1 = "asdf"`
[22:54:52] <FromDiscord> <Rika> enum values are runtime unless forced in static context
[22:55:18] <FromDiscord> <Rika> procedure call "generation" is compiletime only
[22:55:27] <FromDiscord> <Rika> please elaborate more on what you want
[22:55:31] <FromDiscord> <Arathanis> sent a code paste, see https://play.nim-lang.org/#ix=3z56
[22:55:54] <FromDiscord> <Rika> oh you want a macro that generates handler?
[22:56:05] <FromDiscord> <Rika> i dont have one but i feel like someone here has made one at least
[22:57:27] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 268 seconds)
[22:57:54] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3z58
[22:58:41] <FromDiscord> <Rika> macro
[22:58:45] <FromDiscord> <Rika> no other way around it
[22:59:02] <FromDiscord> <reilly> I already knew that much... I just don't know how to write macros.
[22:59:17] <FromDiscord> <reilly> It goes completely over my head.
[22:59:21] <FromDiscord> <Rika> do you want the handler one? or the one you sent? they are different logically
[22:59:38] <FromDiscord> <Rika> actually i just realised it is 3 am
[22:59:50] <FromDiscord> <Rika> hope beef is awake and can answer you lmfao
[22:59:59] <FromDiscord> <Rika> i shall pass away temporarily
[23:00:04] <FromDiscord> <reilly> Yeah, don't worry about it. It's not a big deal, more of a party trick than anything else.
[23:00:20] <FromDiscord> <Rika> maybe you can make this your guide to learning macros
[23:02:52] <NimEventer> New thread by Ingo: Db_sqlite prepared statement, see https://forum.nim-lang.org/t/8433
[23:06:19] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3z5b
[23:06:59] <FromDiscord> <Rika> nope thats not where you start
[23:07:05] <FromDiscord> <Rika> the loop has to bee in the macro
[23:07:14] <FromDiscord> <Rika> otherwise the loop is runtime and you get what you just got
[23:53:33] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
