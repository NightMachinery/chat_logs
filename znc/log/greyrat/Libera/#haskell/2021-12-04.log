[00:00:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:00:36] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:00:38] *** Joins: pavonia (~user@user/siracusa)
[00:02:07] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[00:04:43] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:06:02] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[00:07:06] <EvanR> afaict type theory is logic, and logic is good sometimes
[00:07:36] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[00:09:37] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[00:10:18] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[00:13:37] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Read error: Connection reset by peer)
[00:13:39] <zincy_> EvanR: yeah
[00:13:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[00:14:29] <zincy_> Algebra is next on my list 
[00:14:45] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Ping timeout: 252 seconds)
[00:16:33] *** Joins: deadmarshal (~deadmarsh@95.38.116.117)
[00:24:17] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[00:25:07] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[00:25:07] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a) (Remote host closed the connection)
[00:25:20] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a)
[00:26:41] <shiraeeshi[m]> hello fellas
[00:26:46] <boxscape> hey there
[00:28:12] <shiraeeshi[m]> apparently I last read this chat in 30th of september, and today I opened my client and it showed me old messages
[00:29:06] <shiraeeshi[m]> a funny performance by adjoint_cats, I had a good laugh
[00:29:36] <shiraeeshi[m]> Functors! Huh! (Good God!) What are they good for? (Not much!)
[00:29:39] <shiraeeshi[m]> DANCES
[00:29:43] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[00:29:48] <shiraeeshi[m]> Functors is something I despise! For it means destruction of innocent types. And thousands of lines in Monad's cries. Our sons write functional pearls and give their lives!
[00:29:49] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[00:29:56] <shiraeeshi[m]> Functors! Huh! (Good God!) What are they good for? (Not much!)
[00:30:13] <shiraeeshi[m]> and then he got kicked out
[00:30:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[00:32:05] <boxscape> nice rhymes
[00:32:43] *** Joins: deadmarshal_ (~deadmarsh@68.235.38.176)
[00:32:45] <shiraeeshi[m]> as to the actual question:
[00:32:47] <janus> looks like it is to the melody of the vietnam song  "War ( what is  it good for?)" by Edwin Starr
[00:33:06] <shiraeeshi[m]> hey, didn't know that
[00:33:38] *** Quits: deadmarshal (~deadmarsh@95.38.116.117) (Ping timeout: 252 seconds)
[00:33:40] <shiraeeshi[m]> there was a post and a discussion on reddit
[00:33:50] <shiraeeshi[m]> A survey for Haskell users in the industry: how do you handle effects?
[00:33:53] <oats> so this is weird, the docs suggest there's a function in Numeric called readBin, but ghc says "Module 'Numeric' does not export 'readBin'"
[00:34:00] <shiraeeshi[m]> https://www.reddit.com/r/haskell/comments/r4wxi6/a_survey_for_haskell_users_in_the_industry_how_do/
[00:34:12] <int-e> oats: it's new in base-4.16
[00:34:17] <oats> ohhh
[00:34:20] <shiraeeshi[m]> did you people discuss it in this chat?
[00:34:25] <boxscape> AoC eh
[00:34:26] <oats> any way I can get stack to fetch that for me?
[00:34:27] <int-e> oats: (which comes with ghc-9.2)
[00:34:31] <oats> ah
[00:34:35] <oats> rip stackage
[00:34:35] <boxscape> I stumbled over readBin today, too
[00:34:38] <oats> lol
[00:34:41] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:34:44] <oats> ugh I don't wanna implement this
[00:34:52] <int-e> (as I learned earlier today)
[00:34:53] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[00:34:58] <boxscape> oats look for readInt
[00:35:00] <boxscape> in base
[00:35:23] <int-e> :t readInt (`elem` "01") digitToInt
[00:35:24] <lambdabot> error:
[00:35:24] <lambdabot>     • Couldn't match type ‘Int’ with ‘Bool’
[00:35:24] <lambdabot>       Expected type: Char -> Bool
[00:35:30] <int-e> :t readInt 2 (`elem` "01") digitToInt
[00:35:31] <lambdabot> Num a => ReadS a
[00:36:16] <boxscape> > readInt 2 (`elem` "01") digitToInt
[00:36:18] <lambdabot>  <[Char] -> [(Integer,[Char])]>
[00:36:32] <oats> oh good
[00:36:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:36:55] <boxscape> oats: if you happen to be using lens, there's also `binary`
[00:37:03] <oats> hmm, I do have microlens
[00:37:09] <janus> > readInt 2 (`elem` "01") digitToInt ""
[00:37:10] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[00:37:10] <lambdabot>  []
[00:37:28] <boxscape> microlens doesn't have it :(
[00:37:49] <oats> probably for the better, I chose microlens for a reason :P
[00:38:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:38:21] <boxscape> I suppose it must earn the "micro" in its name somehow
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:39:04] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[00:39:08] <janus> shiraeeshi[m]: what is there left to discuss, the thread is already containing many points
[00:39:37] <oats> > readInt 2 (`elem` "01") digitToInt "110"
[00:39:38] <lambdabot>  [(6,"")]
[00:40:00] *** Parts: Itaru (~DaSH@ro2.flokinet.is) (See Ya Later!)
[00:40:32] <shiraeeshi[m]> janus: there was a comment that I wanted to ask your opinions about
[00:40:59] <shiraeeshi[m]> so people were discussing various effect systems, and then one guy posts this answer:
[00:41:20] <shiraeeshi[m]> > enobayram · 3d
[00:41:20] <shiraeeshi[m]> > We use mtl when we need that sort of thing, but we don't tend to approach problems thinking about how to use effects to solve them. I.e. we try to keep most of the logic in ADTs and abstractions with deliberate purposes before we inject it all into the monadic goop and that goop is often just IO
[00:41:21] <lambdabot>  <hint>:1:35: error: parse error on input ‘of’
[00:41:21] <lambdabot>  error: Variable not in scope: enobayramerror:
[00:41:21] <lambdabot>      Variable not in scope: (·) :: t0 -> t1 -> t
[00:41:28] <janus> > readInt 2 (`elem` "01") digitToInt "" (concat $ replicate 65 [1])
[00:41:29] <lambdabot>  error:
[00:41:29] <lambdabot>      • Couldn't match expected type ‘[a1] -> t’
[00:41:30] <lambdabot>                    with actual type ‘[(a0, String)]’
[00:41:38] <janus> > readInt 2 (`elem` "01") digitToInt (concat $ replicate 65 [1])
[00:41:39] <lambdabot>  error:
[00:41:39] <lambdabot>      • Could not deduce (Num Char) arising from the literal ‘1’
[00:41:39] <lambdabot>        from the context: Num a
[00:41:41] <janus> ah
[00:42:02] <janus> so tempting to try something in here without doing it in ghci first :O
[00:42:07] <janus> lazy friday
[00:42:51] <boxscape> janus: in case you don't know you can also private message lambdabot and yahb if you want to experiment in private without opening up ghci
[00:43:07] <janus> yeah...
[00:43:11] <oats> #haskell's only purpose is to provide ghci-as-a-service
[00:43:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:44:04] <shiraeeshi[m]> so what do you guys think about his comment? especially the "we don't tend to approach problems thinking about how to use effects to solve them" part.
[00:44:24] <janus> shiraeeshi[m]: it's a valid strategy no? thinking about the abstraction before the problem is solved could be premature
[00:44:53] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[00:45:21] <shiraeeshi[m]> can we say that the architecture comes first, and the effect system comes second, or the opposite, or they come together and influence each other?
[00:45:26] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[00:45:52] *** Joins: briandaed (~briandaed@185.234.208.208.r.toneticgroup.pl)
[00:45:56] <shiraeeshi[m]> can you create an architecture that is independent of the effect system used?
[00:48:50] <janus> > readInt 2 (`elem` "01") digitToInt (concat $ replicate 64 "1") :: [(Int,String)]
[00:48:51] <lambdabot>  [(-1,"")]
[00:48:56] <janus> where does the -1 come from?
[00:49:17] <int-e> > 2^64 :: Int
[00:49:18] <lambdabot>  0
[00:49:21] <int-e> integer overflow
[00:49:35] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 252 seconds)
[00:49:49] <janus> but if signed, it should be a massive negative number then
[00:50:00] <int-e> No, you have 2^64 - 1
[00:50:08] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[00:50:32] <tomsmeding> > sum . zipWith (*) (iterate (*2) 1) . map (fromEnum . (== '1')) $ replicate 64 '1'
[00:50:33] <lambdabot>  -1
[00:50:36] <int-e> > 2^63 :: Int -- that's your massive negative number
[00:50:37] <lambdabot>  -9223372036854775808
[00:51:53] <shiraeeshi[m]> can someone explain this part: "we try to keep most of the logic in ADTs and abstractions with deliberate purposes before we inject it all into the monadic goop and that goop is often just IO"
[00:51:56] <shiraeeshi[m]> what does it mean?
[00:52:06] <janus> aaah right because of how all bits set would be the number just below zero
[00:52:12] <shiraeeshi[m]> you create ADTs and functions in IO?
[00:52:20] <boxscape> shiraeeshi: I imagine the best person to answer that would be the person who wrote the comment
[00:52:47] <tomsmeding> janus: yes, in 2s complement, 'complement x' is the same as '-x - 1'
[00:53:09] <shiraeeshi[m]> I'm more interested in what other people have to say about this, not necessarily that person
[00:53:57] <tomsmeding> shiraeeshi[m]: sounds like a weird way to state the very general design principle in Haskell that most people, by and large, adhere to: functional (pure) core, imperative shell
[00:54:07] <tomsmeding> s/imperative/imperative (IO)/
[00:54:28] <int-e> "goop" is not standard slang
[00:54:32] <tomsmeding> there are lots of ways to diverge from that pattern, with effect systems, or mtl-like monad abstractions
[00:54:42] <tomsmeding> int-e: hence "weird way to state" :p
[00:54:50] <janus> it's funny how it actually works 'correctly' even though the readInt docs say it works only for unsigned
[00:54:55] <janus> i guess i shouldn't rely on this..
[00:55:14] <int-e> janus: well, readInt won't parts "-1"
[00:55:17] <int-e> ouch, parse.
[00:55:30] <int-e> that doesn't even sound the same
[00:55:36] <boxscape> that sentence was hard to parts until you corrected yourself
[00:56:06] <int-e> where do you file warranty claims for brains?
[00:56:07] <janus> why do the docs even say integral if the constraint is Num?
[00:56:21] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 256 seconds)
[00:56:32] <int-e> janus: it won't parse "11.01" either
[00:57:03] <int-e> the docs describe the input... what readInt parses... not the output.
[00:57:07] <tomsmeding> and to parse simple unsigned integer-like values, you don't need anything else than (+) and (*), which Num is sufficient for
[00:57:29] <boxscape> also the docs say `integral`, not `Integral`, which is an important difference
[00:57:33] <shiraeeshi[m]> tomsmeding: if that was what he meant (functional core, imperative shell), then I think his answer is overly simplictic, like "hey, just code functions"
[00:57:49] <janus> boxscape: it says capital Integral: https://hackage.haskell.org/package/base-4.16.0.0/docs/Numeric.html#v:readInt
[00:58:01] <tomsmeding> shiraeeshi[m]: kind of given away by the use of the word 'goop' :p
[00:58:13] <boxscape> janus: whoops I need to check my glasses
[00:58:25] <shiraeeshi[m]> I thought that there is some deep meaning in there that I'm missing
[00:58:34] <shiraeeshi[m]> or something like that
[00:58:38] <boxscape> imo that's a (minor) documentation bug
[00:58:47] <tomsmeding> boxscape: it would've made much more sense with your reading :p
[00:59:24] <boxscape> (tbf I only read it in Hoogle where it's not a monospaced link)
[01:03:10] *** Joins: Lycurgus (~juan@98.4.112.204)
[01:04:44] *** Quits: briandaed (~briandaed@185.234.208.208.r.toneticgroup.pl) (Quit: Lost terminal)
[01:04:46] <janus> boxscape: https://gitlab.haskell.org/ghc/ghc/-/issues/20776
[01:05:01] <tomsmeding> 🎉
[01:05:02] <boxscape> nice
[01:05:03] <janus> my first ghc bug, let's see if it was a mistake :P
[01:06:03] <tomsmeding> my suggested fix would be boxscape's misreading, i.e. s/'Integral'/integral/
[01:06:25] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[01:07:00] <int-e> "Reads an integral value without sign in an arbitrary base."
[01:07:11] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e92d1e9828b51aa3006.dip0.t-ipconnect.de)
[01:07:29] <tomsmeding> better
[01:08:09] <int-e> ... See also `readSigned` and `readFloat`.
[01:08:13] <boxscape> I don't know if there are English language rules for this, but the show function is called showIntAtBase - so `at an arbitrary base`?
[01:08:34] <int-e> (we don't have an arbitrary base function for floats though)
[01:08:39] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 252 seconds)
[01:09:05] <janus> int-e: why not? readInt works for floats, no?
[01:09:20] <janus> aah well ok, floats that don't have a decimal separator
[01:09:39] <int-e> janus: I'm still talking about inputs.
[01:09:54] <tomsmeding> boxscape: related, some common notation for existential packing/unpacking in PL theory: 'pack tau with ∃t. sigma' and 'open e1 as t with x in e2': quiz, what component of those expressions means what
[01:09:56] <janus> right, i see
[01:10:01] <tomsmeding> the prepositions are completely random
[01:10:17] <tomsmeding> correction, 'pack tau with e as ∃t. sigma'
[01:10:33] <int-e> There's no function or combination of functions in Numeric that allows you to parse "-1.23e10" as a base 5 number.
[01:10:34] <boxscape> heh, okay
[01:10:49] <int-e> /maybe/ that's sane, especially with the 'e' part.
[01:10:57] <tomsmeding> like, if you stare long enough there is some logic to be found, true
[01:11:12] <int-e> which btw would be confusing for hexadecimal notation (which is probably why that uses p instead)
[01:11:34] <boxscape> not just confusing but impossible to parse uniquely
[01:11:57] <boxscape> e.g. 1.2eee4
[01:11:59] <int-e> boxscape: yes, the confusion arises from ambiguity
[01:12:49] <int-e> (I guess it can be confusing in other ways too)
[01:13:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:14:06] <boxscape> I think having a readFloat function that works on non-scientific notation would be fine though
[01:14:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:16:06] *** Quits: gdd (~gdd@129.199.146.230) (Read error: Connection reset by peer)
[01:17:03] *** Quits: michalz (~michalz@185.246.204.43) (Remote host closed the connection)
[01:18:30] <janus> @package scientific can do it with its Read instance
[01:18:30] <lambdabot> https://hackage.haskell.org/package/scientific can do it with its Read instance
[01:19:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:19:51] <boxscape> right, but only for base 10
[01:20:41] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[01:21:12] <maerwald> is there a usable parser in base?
[01:21:56] <awpr> > let c = chr (ord 'e' - ord '9' + ord 'f') in "0x12fe" ++ c ++ "1e"
[01:21:57] <lambdabot>  error:
[01:21:57] <lambdabot>      • Couldn't match expected type ‘[Char]’ with actual type ‘Char’
[01:21:57] <lambdabot>      • In the first argument of ‘(++)’, namely ‘c’
[01:22:07] <awpr> > let c = chr (ord 'e' - ord '9' + ord 'f') in "0x12fe" ++ [c] ++ "1e"
[01:22:08] <lambdabot>  "0x12fe\146\&1e"
[01:23:10] <awpr> well that generalization doesn't give very nice syntax
[01:23:39] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[01:24:23] <janus> maerwald: is it rhetorical or a genuine question ? :P
[01:25:04] <maerwald> lol
[01:25:15] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[01:25:23] *** Quits: deadmarshal_ (~deadmarsh@68.235.38.176) (Read error: Connection reset by peer)
[01:25:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:25:51] <maerwald> my code is too small to roll my own
[01:25:56] <maerwald> but it's annoying without one
[01:29:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:31:32] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:31:36] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:31:47] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[01:32:04] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[01:32:05] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:32:24] *** Joins: alzgh (alzgh@user/alzgh)
[01:32:36] <monochrom> I think of Text.ParserCombinators.ReadP/ReadPrec as usable parser in base.
[01:32:58] <maerwald> I SAID USABLE
[01:33:13] * maerwald leaves in anger
[01:33:27] <monochrom> I have used it and I have found it usable for my purpose.
[01:34:29] *** Joins: vysn (~vysn@user/vysn)
[01:36:09] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[01:36:28] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:37:23] *** Joins: gdd (~gdd@129.199.146.230)
[01:37:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[01:40:02] <boxscape> maerwald: I know it's not base but parsec is shipped with ghc, if that matters to you
[01:41:47] *** Quits: fizbin_ (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[01:41:58] <boxscape> (which means you should be able to import Text.Parsec if you run ghci outside of cabal/stack)
[01:42:24] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[01:43:05] <maerwald> I think I can only depend on base, not sure
[01:43:06] *** Joins: bbear72 (~bbear@2a01:e34:ec2b:d430:e0dd:e718:df68:1877)
[01:43:07] *** Parts: bbear72 (~bbear@2a01:e34:ec2b:d430:e0dd:e718:df68:1877) ()
[01:43:48] *** Joins: bbear72 (~bbear@2a01:e34:ec2b:d430:e0dd:e718:df68:1877)
[01:44:29] <bbear72> Hello!
[01:44:35] <boxscape> hey
[01:44:54] <bbear72> Who is doing advent of code out there :)
[01:45:31] <monochrom> I think many. I am not following it, but the /topic has the leaderboard.
[01:45:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:45:45] <bbear72> I wanted to share one of my solution and see if any of you would have suggestions for improvements.
[01:45:50] <bbear72> Right now finishing day3
[01:45:59] <boxscape> you might also be interested in #adventofcode-spoilers:libera.chat . Not haskell specific, but still lots of talk about haskell solutions.
[01:46:08] <monochrom> But note that many are afk at this time of the day, or this day of the week, something.
[01:47:02] <boxscape> bbear72: the channel I linked might be a good place for that
[01:47:41] <bbear72> Right, I will try this, thankyou
[01:48:49] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a) (Remote host closed the connection)
[01:48:54] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[01:50:15] <EvanR> earlier I thought I improved the laziness of my day 3 part 2
[01:50:25] <EvanR> I increased the size of my file and wow... wrong
[01:50:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[01:50:38] <EvanR> space goes down the hole
[01:52:18] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[01:52:36] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:54:00] <hpc> einstein predicted that :P
[01:54:11] <monochrom> hahaha
[01:55:14] <EvanR> a 20M file took 450M of memory according to heap profile
[01:55:15] <monochrom> Strictly speaking I think Einstein didn't foresee it, but Schwarzchild worked it out.
[01:55:29] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[01:55:46] <EvanR> I loaded all the data into an IntSet and it took 100k
[01:56:09] <EvanR> good job libraries crew!
[01:56:52] *** Joins: namkeleser (~namkelese@101.175.102.188)
[01:58:50] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[01:59:08] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[01:59:12] *** Joins: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de)
[01:59:48] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:00:06] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:01:56] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:02:03] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[02:02:14] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:02:38] *** Joins: connrs (~connrs@user/connrs)
[02:04:23] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[02:04:38] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[02:04:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[02:06:23] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:06:28] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[02:06:41] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:07:43] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[02:07:50] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[02:08:41] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:dcf1:6c47:4df:1ed1)
[02:09:09] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[02:12:10] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[02:12:31] <sm> dsal: how's your haskell setup going ? May I ask if you have macos Monterrey, and which ghc version(s) you have working ?
[02:13:20] <dsal> I'm doing rosetta at the moment on my new machine.
[02:13:38] <dsal> My old one was just plain nix with stack(+nix) and LTS and everything worked fine.
[02:13:51] <dsal> Now the only thing that works is x86_64 nix.
[02:14:23] <dsal> ghcup with 9.2 has some problems with clang and the older one I was using from nix crashes with some kind of obscure OS X error.
[02:15:04] <maerwald> problems with clang?
[02:15:13] <dsal> I think it doesn't work with clang 13.
[02:15:22] <dsal> It's a part of the toolchain I don't know much about.
[02:15:25] <maerwald> you mean ghc
[02:15:39] <maerwald> you can install llvm12 via brew
[02:15:56] <dsal> Oh, yeah, I mean the ghc I got from ghcup.
[02:17:58] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:18:21] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:19:10] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:21:54] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:22:03] <dsal> I'd kind of like to get llvm 12 without brew.  They don't have it in their download pages.
[02:22:12] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:24:09] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:24:28] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:25:32] <sm> dsal, thanks
[02:25:36] <xerox> I use Homebrew clang version 13.0.0
[02:25:39] <sm> do you have monterrey ?
[02:25:45] <xerox> big sur
[02:26:15] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:26:44] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[02:26:53] <dsal> I just got a new MacBook with all the newest things.
[02:28:49] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:29:08] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[02:30:23] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Quit: gone to sleep. ZZZzzz…)
[02:30:35] *** Joins: OscarZ (~oscarz@95.175.104.170)
[02:31:17] <dmj`> Anyone have an example of a defunctionalization pass on lamda calculus
[02:31:20] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[02:33:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[02:33:32] *** Quits: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[02:35:33] <yin> > read "0xfff" :: Int
[02:35:34] <lambdabot>  4095
[02:35:38] <yin> > read "0bfff" :: Int
[02:35:39] <lambdabot>  *Exception: Prelude.read: no parse
[02:35:44] <yin> :(
[02:36:03] <monochrom> Uh what is 0bfff supposed to mean?
[02:36:35] <yin> {-# LANGUAGE BinaryLiterals #-}
[02:36:46] <yin> oops
[02:36:49] <monochrom> What is fff doing there in base 2?
[02:36:49] <yin> my mistake
[02:36:57] <yin> > read "0b11010" :: Int
[02:36:58] <lambdabot>  *Exception: Prelude.read: no parse
[02:37:19] <monochrom> That one is a fair complaint, yes.
[02:37:39] <yin> what's the common solution, it there is one?
[02:37:50] <yin> *if
[02:37:51] <dsal> Need a more flexible read.  f kind of looks like a 1, so it should be treated as such.  6 is zeroish.
[02:37:54] <monochrom> But the Read Int instance was written decades ago and hasn't been updated to account for BinaryLiterals.
[02:38:03] <yin> dsal: lol
[02:38:05] *** Joins: dignissimus (~dignissim@88-104-68-62.dynamic.dsl.as9105.com)
[02:38:22] <dsal> How did you end up with "0b11010" ?
[02:38:46] <dsal> There are parsers that take base into account.  You could use one of them.  But I'm not as sure about the 0b part.
[02:38:50] <monochrom> Look into Numeric for readInt and tell it to do base 2.
[02:39:03] <dignissimus> Wondering if there's a better way to write `map (\x -> (fst x) * (snd x))`? [(2,3), (4, 5)] to [6, 20] for example
[02:40:10] <monochrom> (\x -> fst x * snd x) = uncurry (*)
[02:40:31] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[02:41:18] <dignissimus> monochrom: Thanks!
[02:41:49] <dignissimus> Need to get the hang of priority too, I use too many brackets
[02:42:07] <yin> @pl \x -> fst x * snd x
[02:42:07] <lambdabot> uncurry (*)
[02:42:13] <yin> nice!
[02:42:14] <xsperry> I'd prefer uncurry as well, but without it, this would be an improvement over your original code:
[02:42:18] <xsperry> > map (\(x, y) -> x * y) [(2,3), (4, 5)]
[02:42:19] <lambdabot>  [6,20]
[02:42:36] <dignissimus> Oh course, pattern matching 
[02:42:38] <dignissimus> Thank you!
[02:42:53] <dignissimus> What's the pl command?
[02:43:13] <yin> "pointless" or pointfree
[02:43:45] <yin> @pl f x = succ x
[02:43:45] <lambdabot> f = succ
[02:44:05] <dignissimus> @version
[02:44:06] <lambdabot> lambdabot 5.3.0.1
[02:44:06] <lambdabot> git clone https://github.com/lambdabot/lambdabot
[02:45:28] <boxscape> "There are parsers that take base into account" can always use the ghc package as a parser :P
[02:45:40] <boxscape> wait
[02:45:49] <boxscape> I thought that was about the base pacakge
[02:45:55] <boxscape> still works though I suppose
[02:49:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[02:53:38] <yin> λ import Numeric ( readBin )
[02:53:38] <yin> <interactive>:1:18: error:
[02:53:38] <yin>     Module ‘Numeric’ does not export ‘readBin’
[02:53:51] <yin> ^ it doesn't?
[02:54:29] <geekosaur> readInjt, wasn't it?
[02:54:33] <geekosaur> readInt
[02:54:37] <geekosaur> it takes a base parameter
[02:54:41] <geekosaur> :t readInt
[02:54:42] <lambdabot> Num a => a -> (Char -> Bool) -> (Char -> Int) -> ReadS a
[02:55:14] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:55:21] <int-e> > readInt (-2) (`elem` "01") digitToInt "11"
[02:55:22] <lambdabot>  [(-1,"")]
[03:00:12] <boxscape> yin: readBin is new
[03:00:46] <yin> boxscape: how new?
[03:00:50] *** Quits: max22- (~maxime@2a01cb0883359800e7fc8fc683bf0760.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:01:33] <yin> will cabal update get me readBin?
[03:01:39] <geekosaur> huh, soo it is. where's the _since_?
[03:01:56] <boxscape> yin: ghc 9.2.1 I think
[03:01:58] <geekosaur> no, since it's part of base and base can only be updated with ghc
[03:02:06] <yin> :(
[03:03:18] <yin> oh well...
[03:03:33] <yin> is there a way to tell haskell "only use pure functions"
[03:04:00] <geekosaur> use signatues that don't involve IO?
[03:04:13] <geekosaur> or ST or STM
[03:04:20] <yin> oh sorry, not pure
[03:04:27] <yin> i mean total
[03:04:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[03:04:56] *** Quits: xff0x (~xff0x@2001:1a81:5394:4100:724:71c4:c7ef:b5ba) (Ping timeout: 245 seconds)
[03:05:55] *** Joins: xff0x (~xff0x@2001:1a81:5394:4100:8386:5ae4:51fd:795)
[03:06:15] <geekosaur> no, because type signatures don't include totality
[03:07:12] <boxscape> Best you can do for functions you don't write yourself I think is using an alternative prelude that doesn't export the partial functions from base
[03:07:13] <yin> and haskell doesn't have a totality checker, des it?
[03:07:21] <geekosaur> nor are there other ways to annotate a function as partial
[03:07:46] <geekosaur> doesn't and probably can't. (Haven't you asked this before?)
[03:07:52] <iqubic> Haskell can certainly warn you when you have an incomplete pattern match.
[03:08:05] <geekosaur> the answers haven't changed
[03:08:06] <dsal> But that's only one way to have a partial function.
[03:08:10] <yin> have i?
[03:09:03] <dsal> You can divide by zero, or take the head of an empty list, or just throw an `error` or something in somewhere.  But most of these things aren't that hard to avoid.
[03:09:16] <boxscape_> I think liquid haskell has a totality checker? Haven't used it though
[03:09:20] <yin> geekosaur: sorry if i did
[03:09:23] <geekosaur> apparently oit was someone else
[03:09:31] * geekosaur just checked local logs
[03:09:42] <EvanR> > 0b11011
[03:09:43] <lambdabot>  error: Variable not in scope: b11011
[03:09:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:09:59] <geekosaur> % 0b11011
[03:09:59] <yahb> geekosaur: ; <interactive>:173:2: error: Variable not in scope: b11011
[03:10:08] <geekosaur> guess it's in 9.2
[03:10:08] <int-e> % :set -XBinaryLiterals
[03:10:09] <yahb> int-e: 
[03:10:10] <dsal> That error is confusing.
[03:10:15] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[03:10:15] <int-e> % 0b11011
[03:10:15] <yahb> int-e: 27
[03:10:21] <int-e> it's an extension
[03:10:26] * boxscape_ is wondering if a segfault counts as bottom
[03:10:29] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:10:31] <geekosaur> yes
[03:10:33] <boxscape_> ok
[03:10:37] <yin> why wouldnt it :D
[03:10:47] <boxscape_> because it's not supposed to happen to begin with
[03:10:55] <boxscape_> so it might not have a semantics assigned to it
[03:11:05] <EvanR> my syntax highlighter is colored "number" when I type 0b110111. I want my money back xD
[03:11:15] <yin> non-termination counts as bottm, desn't it?
[03:11:22] <geekosaur> there are certainly ways to make ghc-generated code segfault
[03:11:30] <dsal> I had an eiffel library that had a special case for a segfault because it was actually expected due to a library bug.
[03:11:37] <geekosaur> unsafeCoerce can easily do it
[03:11:51] <boxscape_> yes, but not in the theoretical world of type-safe haskell
[03:12:10] <yin> > let a = a in a
[03:12:12] <lambdabot>  *Exception: <<loop>>
[03:12:31] <boxscape_> oh
[03:12:36] <boxscape_> lambdabot can do that in interpreted code?
[03:12:38] <geekosaur> and there's a way to send signals in the unix library that could be used to send sigSEGV
[03:12:40] <boxscape_> % let a = a in a
[03:12:45] <yahb> boxscape_: [Timed out]
[03:13:21] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:bd44:40bf:fb3b:742a) (Quit: Textual IRC Client: www.textualapp.com)
[03:14:20] <EvanR> combination of haskell semantics and IO semantics (or lack thereof)
[03:14:33] <EvanR> re segfaults due to signals or ffi
[03:14:52] <EvanR> hmm... or unsafeCoerce
[03:15:02] <EvanR> which can't even blame IO
[03:15:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:16:10] <EvanR> also unsafe use of unsafe vector ops
[03:16:14] <int-e> EvanR: well, you say "Haskell semantics"... but what are they?
[03:16:49] <EvanR> stuff like [[f x]] = [[f]] [[x]]
[03:16:51] <EvanR> xD
[03:18:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:18:35] <int-e> (The Haskell report doesn't have any. GHC translates everything to Core, System F with extensions, and I don't think I've seen any version of this with *unsafe*Coerce.)
[03:19:11] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 252 seconds)
[03:20:32] <EvanR> I can't imagine any sane semantics for unsafeCoerce
[03:21:18] <EvanR> it's the magic eraser of type safety
[03:23:21] <int-e> well you can track actual types and have reduction rules ala  unsafeCoerce . unsafeCoerce = unsafeCoerce and unsafeCoerce :: (a -> a) = id
[03:23:45] <boxscape_> int-e if you turn on -ddump-simpl in ghci, every expression you enter will be translated into something containing Unsafe.Coerce.unsafeEqualityProof, which is more or less unsafeCoerce
[03:23:59] <int-e> which ends up being partial, which is a good match for how you use it sanely.
[03:25:01] <int-e> boxscape_: sure but you won't find formal semantics for that
[03:25:19] <int-e> (I think)
[03:25:25] <boxscape_> yeah I imagine you're right
[03:25:27] <EvanR> semantics for when you use it sanely, that's good
[03:26:47] *** Quits: dignissimus (~dignissim@88-104-68-62.dynamic.dsl.as9105.com) (Quit: Bye!)
[03:28:21] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 252 seconds)
[03:31:01] *** Joins: zebrag (~chris@user/zebrag)
[03:32:20] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[03:37:20] *** Quits: xff0x (~xff0x@2001:1a81:5394:4100:8386:5ae4:51fd:795) (Ping timeout: 252 seconds)
[03:37:20] *** Quits: tito (tito@tilde.team) (Ping timeout: 252 seconds)
[03:37:33] *** Quits: seanparsons (~seanparso@cpc158525-gill21-2-0-cust151.20-1.cable.virginm.net) (Quit: WeeChat 3.1)
[03:37:50] *** Joins: zebrag (~chris@user/zebrag)
[03:38:51] *** Joins: tito (tito@tilde.team)
[03:42:21] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[03:42:50] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[03:44:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:46:55] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[03:48:41] *** Quits: OscarZ (~oscarz@95.175.104.170) (Quit: Leaving)
[03:49:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[03:50:16] *** Joins: xff0x (~xff0x@2001:1a81:53c9:fe00:390a:f606:2045:4876)
[03:52:46] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab)
[03:55:29] *** Quits: tito (tito@tilde.team) (Ping timeout: 252 seconds)
[03:56:10] *** Joins: tito (tito@tilde.team)
[03:58:28] <yin> what is this error: https://paste.jrvieira.com/1638577678818 ?
[03:59:32] <mrianbloom> Random question: does anyone know how to create a top level FFI declaration using ghc-source-gen, I just spent an hour looking through the docs and I can't figure it out.
[04:00:30] <boxscape_> yin you've enabled OverloadedLists and it doesn't know what kind of list it's supposed to be using
[04:00:39] <boxscape_> one solution is to add a type signature
[04:00:50] <dsal> Oh, OverloadedLists occasionally makes something better.
[04:00:58] <dsal> It often makes things worse.
[04:01:19] <yin> add a type signature to what?
[04:01:23] <yin> :t '0'
[04:01:24] <lambdabot> Char
[04:01:38] <dsal> What's the [] part?
[04:01:46] <dsal> That's what it's complaining about.
[04:01:58] <boxscape_> to the list, so (∈ (['0','1'] :: [Char])) or similar
[04:02:02] <yin> ah! i forgot i was using OverloadedLists
[04:02:08] * yin facepalms
[04:02:24] <dsal> % :t ['x']
[04:02:25] <yahb> dsal: (IsList l, Item l ~ Char) => l
[04:02:25] <boxscape_> yin if you're using a plain old list you can also write "01" instead of ['0', '1']
[04:03:46] <dsal> % [1, 2, 2, 3, 4, 5, 6,7,7] :: S.Set
[04:03:46] <yahb> dsal: ; <interactive>:6:30: error:; * Expecting one more argument to `S.Set'; Expected a type, but `S.Set' has kind `* -> *'; * In an expression type signature: S.Set; In the expression: [1, 2, 2, 3, ....] :: S.Set; In an equation for `it': it = [1, 2, 2, ....] :: S.Set
[04:03:51] <dsal> % [1, 2, 2, 3, 4, 5, 6,7,7] :: S.Set Int
[04:03:51] <yahb> dsal: fromList [1,2,3,4,5,6,7]
[04:04:04] <dsal> Rarely worth it for me.
[04:05:11] <boxscape_> I imagine it's especially annoying that you can't do something like `traverse_ print [1,2,3]` anymore
[04:08:28] <yin> boxscape_: i'm als using OverloadedStrings :D
[04:08:46] <boxscape_> yin that on the other hand is quite useful imo
[04:08:54] <yin> yes
[04:09:03] <geekosaur> but OverloadedStrings won't cause a problem there I think
[04:09:13] <geekosaur> because only one type will make sense
[04:09:28] <boxscape_> hmm i'm not sure
[04:09:36] <dsal> If you didn't have overloaded strings, the "01" thing would be unambiguous.
[04:10:00] <boxscape_> geekosaur I think it just knows that it must be a Foldable Stringy type
[04:10:34] <boxscape_> there could be more than one type fulfilling that
[04:11:18] <geekosaur> mm, but won't Foldable default to [], thus forcing String?
[04:11:25] <geekosaur> hm, only in ghci I guess
[04:11:28] <boxscape_> yeah
[04:11:45] <boxscape_> and the instance is defined as `a ~ Char => IsString [a]`, so it can't infer from Char either
[04:12:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:17:16] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:17:48] *** Quits: bbear72 (~bbear@2a01:e34:ec2b:d430:e0dd:e718:df68:1877) (Quit: Client closed)
[04:21:33] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[04:21:54] <yin> sorry i had to get away for a bit. i actually previously had "01" and it was ambiguous, it told me something alnog the lines of "there are 3 possible candidates: String and two other types that are out of scope"
[04:22:35] <yin> i know Text but what's the other?
[04:23:32] <geekosaur> there's still a bad ByteString instance iirc
[04:24:11] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::9788)
[04:24:18] <yin> a *bad* ByteString?
[04:24:19] <geekosaur> (bad because it only works for a tiny subset of Chars, it loses data otherwise)
[04:24:43] <yin> ah
[04:25:00] <yin> i'm guessing "01"
[04:25:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:25:08] <geekosaur> that one would be fine
[04:25:30] <geekosaur> any Char > \255 it would truncate
[04:25:53] <yin> h right, ByteStrings are 8bit
[04:25:55] *** Quits: tito (tito@tilde.team) (Ping timeout: 268 seconds)
[04:26:25] *** Joins: tito (tito@tilde.team)
[04:26:55] <yin> i feel it shouldn't be this much of a pain to work with binary in haskell
[04:27:42] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:27:50] <yin> where's BitString?
[04:28:13] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[04:28:19] *** Quits: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0) (Quit: ZNC - http://znc.in)
[04:28:35] <hpc> it should really be Word8String
[04:28:37] *** Joins: pfurla_ (~pfurla@2804:14d:5c81:4104:d5f9:5bb:9da8:43da)
[04:29:12] <hpc> (also yeah, is that Char truncate behavior ever useful?)
[04:29:34] <geekosaur> there's some BitVector types out there
[04:29:51] <geekosaur> I continue to be surprised vector doesn't provide a packed Bool Vector type
[04:30:21] <yin> why packed, say I?
[04:30:27] <yin> >:)
[04:30:32] <geekosaur> becuase that'd beyour bitstring
[04:30:54] <geekosaur> recall that an unpacked Bool is 64 bits
[04:31:09] <geekosaur> of which 1 is used
[04:31:14] <yin> well yeah, in _practice_
[04:31:24] <yin> noone cares about practice
[04:32:03] <geekosaur> and I think even in 9.2's new sized stuff it's still 8 bits
[04:32:20] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:5084:9b62:332c:deab) (Ping timeout: 252 seconds)
[04:32:47] <yin> what changed in 9.2?
[04:32:49] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[04:32:52] <yin> i'm out of the loop
[04:34:30] <kennyd> @pl (\x -> printf "%2d. %s\n" x (fizzbuzz x))
[04:34:30] <lambdabot> ap (printf "%2d. %s\n") fizzbuzz
[04:34:33] <kennyd> how does that shit work?
[04:34:52] <geekosaur> instead of always using a machine word (64 bits) it now uses an appropriate size for the type
[04:35:28] <yin> oh nice! finally
[04:35:36] <geekosaur> so Char uses 32 bits since it's a Unicode codepoint, Bool uses 8 bits as the smallest memory value available, Int32 is actually 32 bits, etc.
[04:35:41] <yin> i still want 1bit bits :p
[04:36:22] <geekosaur> someone bring back KL10s :þ
[04:36:58] <geekosaur> although that still wouldn't work because I think the smallest it got was 3 bits
[04:37:38] <yin> kennyd:
[04:37:41] <yin> :t ap
[04:37:42] <lambdabot> Monad m => m (a -> b) -> m a -> m b
[04:37:45] <geekosaur> and that onlyt for registers; memory was 36 bits
[04:38:33] * geekosaur wonders if that translation would actualy work given that printf is rather "special"
[04:38:54] <geekosaur> and @pl has no clue about PrintfType
[04:39:46] <geekosaur> also @pl is out of date
[04:39:52] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[04:39:52] <geekosaur> :t (<*>)
[04:39:53] <lambdabot> Applicative f => f (a -> b) -> f a -> f b
[04:40:56] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:47:03] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:24] *** Joins: res0nat0r8 (~Fletch@dia.whatbox.ca)
[04:48:19] <monochrom> Yeah, @pl was written way before Applicative existed.
[04:48:51] <monochrom> Plus other minor issues such as it doesn't check types.
[04:49:09] <monochrom> @pl \x -> x x
[04:49:09] <lambdabot> join id
[04:49:11] <monochrom> :)
[04:50:10] <monochrom> "wont fix" :)
[04:50:11] <boxscape_> :t join id
[04:50:12] <lambdabot> error:
[04:50:12] <lambdabot>     • Occurs check: cannot construct the infinite type: m ~ (->) (m a)
[04:50:12] <lambdabot>       Expected type: m (m a)
[04:50:57] <int-e> @pl (\x -> x x) (\x -> x x)
[04:51:00] <lambdabot> ap id id (ap id id)
[04:51:00] <lambdabot> optimization suspended, use @pl-resume to continue.
[04:55:00] *** Joins: burnside_ (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[04:55:00] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Read error: Connection reset by peer)
[04:56:31] <yin> @pl-resume
[04:56:33] <yin> ;D
[04:56:38] <lambdabot> ap id id (ap id id)
[04:56:38] <lambdabot> optimization suspended, use @pl-resume to continue.
[04:57:20] <monochrom> It is true to the nature of (\x -> x x) (\x -> x x).
[05:03:50] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[05:06:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[05:07:14] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e92d1e9828b51aa3006.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:19:51] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[05:20:05] <d34df00d> Hi folks!
[05:20:40] <d34df00d> I've read a post recently with a mention of a (de)serialization library that's more efficient than both cereal and binary, but I can't remember its name. Does anything come to your (hive)mind?
[05:21:01] <d34df00d> Here, "its name" is "the library name", not "the post name".
[05:28:06] <d34df00d> Ah, right, that's fpco's store.
[05:28:07] <d34df00d> Thanks!
[05:31:16] *** Quits: burnside_ (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[05:32:49] *** Joins: notzmv (~zmv@user/notzmv)
[05:39:13] *** Quits: pfurla_ (~pfurla@2804:14d:5c81:4104:d5f9:5bb:9da8:43da) (Quit: gone to sleep. ZZZzzz…)
[05:39:52] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:d5f9:5bb:9da8:43da)
[05:43:08] *** Joins: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0)
[05:45:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:47:41] *** Quits: mmhat (~mmh@55d45bca.access.ecotel.net) (Ping timeout: 256 seconds)
[05:49:10] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[05:56:29] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:59:47] *** Joins: mmhat (~mmh@55d45ca5.access.ecotel.net)
[06:02:07] *** Quits: xff0x (~xff0x@2001:1a81:53c9:fe00:390a:f606:2045:4876) (Ping timeout: 268 seconds)
[06:03:28] *** Joins: xff0x (~xff0x@2001:1a81:53e7:c700:b7b4:37a0:2750:d862)
[06:03:29] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:07:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Remote host closed the connection)
[06:11:25] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[06:11:59] *** Joins: machinedgod (~machinedg@24.105.81.50)
[06:12:51] <iqubic> I'm looking to do some ascii art animations for some of my Haskell AoC solutions. What libraries should I look into to do that?
[06:14:58] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:16:23] <jackdk> emit \e[2J a lot?
[06:17:45] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::9788) (Ping timeout: 252 seconds)
[06:19:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:24:37] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[06:26:39] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[06:27:03] *** Joins: hololeap (~hololeap@user/hololeap)
[06:29:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[06:29:45] <dsal> That's basically what I did.
[06:29:53] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[06:30:00] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[06:30:15] *** Joins: machinedgod (~machinedg@24.105.81.50)
[06:31:03] <dsal> It looks like I've used this before:  https://hackage.haskell.org/package/ansi-terminal
[06:34:26] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[06:40:57] *** Joins: stevenxl (~stevenlei@174.128.182.51)
[06:42:03] *** Quits: mmhat (~mmh@55d45ca5.access.ecotel.net) (Quit: WeeChat 3.3)
[06:44:33] <yin> iqubic: JuicyPixels is pretty good for the most basic stuff
[06:44:43] <iqubic> That's also good.
[06:45:27] <yin> curses at least
[06:45:48] <yin> there's a decent vector animation library but i cant remember its name
[06:46:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:46:23] <yin> why is GeneralizedNewtypeDeriving not allowed in Safe Haskell?
[06:46:47] <boxscape> jle`: we talked the other day about having a function that can convert any data instance to a String - I have this now, and it works pretty well https://paste.tomsmeding.com/wO8wDWza
[06:47:10] <boxscape> of course you'd have to special case other primitive types if they're used
[06:47:28] <boxscape> s/data/Data
[06:49:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[06:51:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[06:52:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:52:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:52:12] *** Joins: wroathe (~wroathe@user/wroathe)
[06:52:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[06:56:59] *** Quits: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:06:57] *** Quits: td_ (~td@94.134.91.231) (Ping timeout: 256 seconds)
[07:08:29] *** Joins: td_ (~td@muedsl-82-207-238-245.citykom.de)
[07:10:00] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[07:10:01] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[07:13:29] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:15:22] <hololeap> is there a way to hook up pretty-show to Debug.Trace
[07:15:34] <hololeap> with color support
[07:15:40] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[07:16:03] <dmj`> hololeap: now that's a good idae
[07:16:05] <dmj`> idea
[07:16:39] <dmj`> traceSolarized
[07:18:52] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[07:19:35] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[07:19:38] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[07:21:03] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[07:21:58] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[07:22:36] <dmj`> hololeap: if you copy Debug.Trace into its own lib, and sprinkle in System.Console.Rainbow I bet it would work
[07:23:20] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:23:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:23:20] *** finn_elija is now known as FinnElija
[07:23:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:23:57] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[07:23:58] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[07:24:52] <hololeap> oh it actually works already!
[07:25:02] <hololeap> trace (T.unpack $ pShow r) r
[07:25:08] <hololeap> I actually meant pretty-simple
[07:25:32] <hololeap> and if anyone wants to try that be aware it's Data.Text.Lazy
[07:26:23] <sm> hololeap: the utilities in https://hackage.haskell.org/package/hledger-lib-1.24/docs/Hledger-Utils-Debug.html do that
[07:27:25] <hololeap> the devs might be willing to add it to pretty-simple
[07:28:00] <sm> I don't think debugging helpers really belong in pretty-simple, also I'm not married to that lib (it has a few issues)
[07:28:38] <sm> I think they'd be great added to Debug.Trace! but not sure how hard that would be
[07:30:49] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[07:35:07] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[07:41:22] <jle`> boxscape: ah nice :O i think you can do it for anything that resolves down to an ADT, and special casing on string works well too
[07:41:34] <boxscape_> yeah, that makes sense
[07:44:45] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[07:49:31] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[08:01:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:ed9e:6da6:fee6:2db6)
[08:01:54] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[08:04:05] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:654a:7e1b:4ab5:b4bb) (Ping timeout: 252 seconds)
[08:09:24] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[08:11:14] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[08:15:58] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[08:16:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:21:11] *** Quits: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:25:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[08:31:13] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[08:32:13] *** Joins: yauhsien (~yauhsien@101.12.103.143)
[08:35:22] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[08:40:14] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[08:44:59] *** Quits: yauhsien (~yauhsien@101.12.103.143) (Ping timeout: 256 seconds)
[08:50:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:53:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[09:03:24] *** Quits: xff0x (~xff0x@2001:1a81:53e7:c700:b7b4:37a0:2750:d862) (Remote host closed the connection)
[09:03:41] *** Joins: xff0x (~xff0x@2001:1a81:53e7:c700:ed50:8b1e:4614:201b)
[09:03:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[09:03:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:07:16] *** Joins: mbuf (~Shakthi@171.61.205.226)
[09:17:03] *** Quits: stevenxl (~stevenlei@174.128.182.51) (Ping timeout: 252 seconds)
[09:20:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:20:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:20:05] *** Joins: wroathe (~wroathe@user/wroathe)
[09:25:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:27:33] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:29:03] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[09:30:53] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[09:30:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[09:31:36] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[09:36:03] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:36:35] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[09:37:39] *** Joins: sheltheconquerer (~ret@109-110-184-193-dynamic.shabdiznet.com)
[09:37:42] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[09:54:41] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[09:55:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[09:57:03] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[10:00:50] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[10:00:55] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[10:04:08] *** Joins: evan (~evan@2600:1700:ba69:10:81bb:b5c:744b:f329)
[10:04:14] *** evan is now known as Guest4250
[10:05:39] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[10:06:40] *** Joins: notzmv (~zmv@user/notzmv)
[10:08:51] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[10:09:06] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:10:13] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[10:12:27] <sheltheconquerer> :q
[10:12:29] <sheltheconquerer> clear 
[10:12:31] <sheltheconquerer> quit
[10:12:32] *** Quits: sheltheconquerer (~ret@109-110-184-193-dynamic.shabdiznet.com) (Quit: WeeChat 3.3)
[10:14:01] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:19:58] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Quit: Leaving)
[10:23:03] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:dcf1:6c47:4df:1ed1) (Remote host closed the connection)
[10:25:39] *** Joins: max22- (~maxime@2a01cb0883359800761b1c69d9198b7f.ipv6.abo.wanadoo.fr)
[10:39:55] *** Joins: stevenxl (~stevenlei@174.128.182.51)
[10:43:22] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[10:44:19] *** Quits: stevenxl (~stevenlei@174.128.182.51) (Ping timeout: 252 seconds)
[10:45:12] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Read error: Connection reset by peer)
[10:45:35] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[10:47:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:48:01] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[10:48:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:48:16] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:d5f9:5bb:9da8:43da) (Quit: gone to sleep. ZZZzzz…)
[10:52:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[10:54:35] *** Quits: Guest4250 (~evan@2600:1700:ba69:10:81bb:b5c:744b:f329) (Ping timeout: 252 seconds)
[10:55:42] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:57:09] *** Joins: img (~img@user/img)
[11:00:59] *** Joins: cyphase (~cyphase@user/cyphase)
[11:03:15] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:06:56] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[11:10:36] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[11:16:55] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[11:20:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[11:21:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[11:21:00] *** Joins: wroathe (~wroathe@user/wroathe)
[11:21:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:22:31] *** Quits: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:23:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[11:24:51] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[11:25:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[11:28:41] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Ping timeout: 252 seconds)
[11:32:00] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[11:36:41] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:44:09] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Quit: Konversation terminated!)
[11:45:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:46:43] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[11:48:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[11:54:03] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[11:57:33] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:01:25] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[12:06:05] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[12:07:35] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[12:12:10] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr)
[12:14:09] *** Quits: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[12:14:55] *** Joins: fabfianda (~fabfianda@mob-5-90-243-224.net.vodafone.it)
[12:16:01] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[12:19:47] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:20:32] *** Joins: Sgeo (~Sgeo@user/sgeo)
[12:26:14] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[12:28:13] *** Joins: stevenxl (~stevenlei@174.128.182.51)
[12:31:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:31:55] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[12:32:51] *** Quits: stevenxl (~stevenlei@174.128.182.51) (Ping timeout: 252 seconds)
[12:32:51] *** Quits: ishutin (~ishutin@87-97-82-128.pool.digikabel.hu) (Ping timeout: 245 seconds)
[12:34:34] *** Joins: ishutin (~ishutin@178-164-208-88.pool.digikabel.hu)
[12:34:41] *** Joins: xkuru (~xkuru@user/xkuru)
[12:37:19] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[12:43:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[12:44:36] *** Quits: fabfianda (~fabfianda@mob-5-90-243-224.net.vodafone.it) (Read error: Connection reset by peer)
[12:44:44] *** Joins: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it)
[12:46:28] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[12:47:36] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:36] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:38] *** Joins: iqubic` (~user@c-67-171-37-233.hsd1.wa.comcast.net)
[12:47:39] *** allbery_b is now known as geekosaur
[12:47:59] *** Quits: iqubic` (~user@c-67-171-37-233.hsd1.wa.comcast.net) (Client Quit)
[12:49:21] *** Quits: iqubic (~user@2601:602:9502:c70:f6f0:c69f:f066:4465) (Ping timeout: 252 seconds)
[12:50:24] *** Joins: iqubic (~user@c-67-171-37-233.hsd1.wa.comcast.net)
[12:51:37] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[12:52:20] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[12:55:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:58:15] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[13:08:54] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[13:09:53] *** Joins: acidjnk_new (~acidjnk@p200300d0c7271e92fcd25810b1025e43.dip0.t-ipconnect.de)
[13:12:35] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[13:16:19] *** Joins: img (~img@user/img)
[13:22:40] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[13:23:59] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:24:32] *** Joins: fef (~thedawn@user/thedawn)
[13:25:37] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[13:26:01] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[13:34:02] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:34:03] *** Quits: mbuf (~Shakthi@171.61.205.226) (Quit: Leaving)
[13:36:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:37:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:37:45] *** Lord_of_Life_ is now known as Lord_of_Life
[13:40:31] *** Joins: fef (~thedawn@user/thedawn)
[13:51:14] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[13:53:53] *** Joins: cosimone\ (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:00:17] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:02:27] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:03:42] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:03:57] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:05:55] *** Quits: fabfianda (~fabfianda@net-109-115-246-237.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[14:06:09] *** Joins: fabfianda (~fabfianda@mob-5-90-243-224.net.vodafone.it)
[14:08:11] *** Quits: kmein (~weechat@user/kmein) (Quit: ciao kakao)
[14:08:28] *** Joins: kmein (~weechat@user/kmein)
[14:12:28] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:16:29] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[14:16:31] *** Joins: stevenxl (~stevenlei@174.128.182.51)
[14:18:15] *** Joins: halides (halides@imases.biss.ee)
[14:18:22] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[14:19:11] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[14:19:39] <halides> hi all, doing the mooc at https://haskell.mooc.fi/ and figured i'd join here to ask some noob questions :-)
[14:19:57] <halides> i guess this is the biggest channel for that?
[14:20:09] <halides> opqdonut: hi ;-)
[14:20:16] *** Joins: FragByte (~christian@user/fragbyte)
[14:21:01] *** Quits: stevenxl (~stevenlei@174.128.182.51) (Ping timeout: 252 seconds)
[14:22:45] <Rembane> halides: Do it! :)
[14:26:33] *** Quits: xff0x (~xff0x@2001:1a81:53e7:c700:ed50:8b1e:4614:201b) (Ping timeout: 268 seconds)
[14:26:55] *** Joins: xff0x (~xff0x@2001:1a81:53e7:c700:7792:97a8:546b:8af7)
[14:27:24] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[14:28:36] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:28:55] <halides> thanks Rembane :-)
[14:33:06] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[14:40:11] *** Joins: simendsjo (~user@84.211.91.241)
[14:50:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:52:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:55:22] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:55:32] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[14:55:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[14:56:46] *** Quits: xff0x (~xff0x@2001:1a81:53e7:c700:7792:97a8:546b:8af7) (Ping timeout: 268 seconds)
[14:57:07] *** Joins: xff0x (~xff0x@2001:1a81:53e7:c700:9294:809b:2f89:3306)
[14:58:25] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 256 seconds)
[15:06:24] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[15:10:53] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[15:12:23] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[15:13:46] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:16:42] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[15:18:01] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[15:18:10] <nerdypepper> is there a "replace range" method on String or Text anywhere? or would such a method be unsound?
[15:19:31] *** Joins: mmhat (~mmh@55d45ca5.access.ecotel.net)
[15:19:40] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:20:46] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[15:21:59] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:22:33] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[15:24:58] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:25:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:27:01] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[15:27:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:28:31] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[15:29:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[15:31:42] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:33] *** Joins: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se)
[15:32:41] *** Joins: fef (~thedawn@user/thedawn)
[15:33:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:33:44] <geekosaur> actual "replace" would violate purity, but producing a modified String/Text would be fine
[15:34:08] <geekosaur> for String it'd just perform poorly because String is [Char] and lists kinda suck
[15:35:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[15:36:20] <geekosaur> https://hackage.haskell.org/package/text-1.2.5.0/docs/Data-Text.html#v:replace
[15:37:28] *** Quits: vgtw (~vgtw@c-6a60205c.07-348-756d651.bbcust.telenor.se) (Ping timeout: 268 seconds)
[15:38:36] *** Joins: cosimone` (~user@93-47-228-147.ip115.fastwebnet.it)
[15:39:39] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[15:40:02] *** Quits: cosimone\ (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 252 seconds)
[15:41:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:41:50] *** Joins: nrl^ (~nrl@68.101.58.90)
[15:42:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[15:43:53] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 252 seconds)
[15:44:32] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[15:47:57] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[15:56:13] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[16:03:37] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[16:04:48] *** Joins: stevenxl (~stevenlei@174.128.182.51)
[16:08:05] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[16:09:11] *** Quits: stevenxl (~stevenlei@174.128.182.51) (Ping timeout: 252 seconds)
[16:11:00] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:12:18] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[16:17:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:19:34] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[16:24:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:24:23] *** Joins: fef (~thedawn@user/thedawn)
[16:24:39] *** Joins: pta2002 (~pta2002@161.230.90.170)
[16:25:13] *** Joins: __monty__ (~toonn@user/toonn)
[16:25:50] <pta2002> Hi, quick question. I have a function a -> Either b a, and I want to make [a] -> Either b [a] from that function, that will return the left side if any of the applications of the first function error out
[16:26:08] <pta2002> I am sure there's some obvious way to do this, but I can't remember how ><
[16:27:50] <pta2002> I mean, I can easily do this the long way, just wanted to know if there is some simple function that I can just apply to it
[16:30:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[16:30:44] <pta2002> Basically I want (a -> Either b a) -> [a] -> Either b [a], but hoogle finds nothing :(
[16:31:13] <Taneb> :t traverse
[16:31:14] <lambdabot> (Traversable t, Applicative f) => (a -> f b) -> t a -> f (t b)
[16:31:24] <pta2002> hm let me try that
[16:31:25] <Taneb> :t traverse @[] @(Either _)
[16:31:26] <lambdabot> error:
[16:31:26] <lambdabot>     Pattern syntax in expression context: traverse@[]
[16:31:26] <lambdabot>     Did you mean to enable TypeApplications?
[16:31:34] <geekosaur> gotta use yahb
[16:31:45] <Taneb> I can't remember how to invoke yahb :(
[16:31:56] <geekosaur> % :t traverse @[] @(Either _)
[16:31:56] <yahb> geekosaur: (a -> Either w b) -> [a] -> Either w [b]
[16:32:02] <Taneb> Thanks
[16:32:57] *** Quits: AlexNoo (~AlexNoo@178.34.151.83) (Quit: Leaving)
[16:33:03] *** Quits: Alex_test (~al_test@178.34.151.83) (Quit: ;-)
[16:33:07] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:33:11] *** Quits: AlexZenon (~alzenon@178.34.151.83) (Quit: ;-)
[16:33:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:33:29] <pta2002> hm now it's not working even though by that description it should
[16:33:37] *** Quits: cosimone` (~user@93-47-228-147.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[16:33:55] <pta2002> hang on i'll figure this out
[16:34:04] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:34:29] <pta2002> I have now figured this out, I was missing an argument
[16:34:33] <pta2002> thanks!
[16:34:58] <Taneb> Happy to help!
[16:35:01] <pta2002> also, that :t traverse @[] @(Either _) thing, is that possible to run in GHCi? gives me an error when I try
[16:35:21] <Taneb> Run ":set -XTypeApplications" in GHCi
[16:35:41] <pta2002> ah got it
[16:35:56] <geekosaur> yahb is ghci, it just has a bunch of extensions enabled and is a fairly recent version of ghc
[16:36:17] <geekosaur> but TypeApplications goes back a bit so version shouldn't matter
[16:39:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[16:42:50] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[16:43:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:45:27] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[16:49:53] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[16:52:38] *** Joins: AlexZenon (~alzenon@178.34.151.83)
[16:52:42] *** Joins: AlexNoo (~AlexNoo@178.34.151.83)
[16:54:24] *** Joins: Alex_test (~al_test@178.34.151.83)
[17:04:58] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:05:45] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[17:11:01] *** Quits: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[17:12:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:22:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:26:23] *** Quits: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:29:11] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[17:33:31] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Ping timeout: 252 seconds)
[17:36:53] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[17:38:46] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[17:48:30] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[17:49:33] *** Joins: pfurla (~pfurla@2804:14d:5c81:4104:9dad:b7eb:58e3:98e6)
[17:51:21] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:53:26] *** Quits: mmhat (~mmh@55d45ca5.access.ecotel.net) (Quit: WeeChat 3.3)
[17:56:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:59:40] *** Joins: stevenxl (~stevenlei@174.128.182.67)
[18:02:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:04:41] *** Quits: acidjnk_new (~acidjnk@p200300d0c7271e92fcd25810b1025e43.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:06:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[18:07:41] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 256 seconds)
[18:10:56] *** Joins: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com)
[18:11:21] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[18:12:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[18:13:34] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:13:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[18:14:08] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[18:17:20] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[18:18:04] *** Quits: stevenxl (~stevenlei@174.128.182.67) (Quit: leaving)
[18:18:14] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[18:18:27] *** Joins: juhp (~juhp@128.106.188.82)
[18:18:37] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[18:23:34] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[18:23:49] *** Joins: juhp (~juhp@128.106.188.82)
[18:24:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[18:25:23] *** Joins: zebrag (~chris@user/zebrag)
[18:26:23] *** Quits: Megant (megant@user/megant) (Ping timeout: 256 seconds)
[18:28:06] *** Joins: Megant (megant@user/megant)
[18:28:14] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[18:30:30] *** Joins: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de)
[18:39:28] *** Joins: MoC (~moc@user/moc)
[18:41:52] *** Quits: elvishjerricco (sid237756@id-237756.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[18:43:57] *** Joins: elvishjerricco (sid237756@id-237756.helmsley.irccloud.com)
[18:44:57] *** Quits: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com) (Remote host closed the connection)
[18:47:55] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[18:48:44] *** Joins: renzhi (~xp@2607:fa49:6500:b100::5cef)
[18:50:31] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a)
[18:54:06] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:01:12] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[19:01:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:02:35] *** Joins: hololeap (~hololeap@user/hololeap)
[19:06:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[19:08:55] *** Joins: xkuru (~xkuru@user/xkuru)
[19:13:59] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[19:14:23] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[19:19:01] *** Joins: machinedgod (~machinedg@24.105.81.50)
[19:19:05] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[19:22:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:22:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:22:53] *** Joins: wroathe (~wroathe@user/wroathe)
[19:23:40] <__monty__> I'm having a bit of trouble with ghcid. `cabal v2-repl GiantSquid` fails to load because of errors but `ghcid -c cabal v2-repl GiantSquid` reports "All good."
[19:25:15] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[19:28:06] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[19:29:51] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Client Quit)
[19:30:06] *** Quits: Drew[m] (~drewefenw@2001:470:69fc:105::c8c4) (Quit: You have been kicked for being idle)
[19:30:11] *** Quits: anotherbruce[m] (~anotherbr@2001:470:69fc:105::1:2548) (Quit: You have been kicked for being idle)
[19:33:38] <albet70> I tried to install scotty on my vps, but my vps only has 1GB RAM, to installl scotty with cabal failed because of compiling is out-of-memory, how to solve that?
[19:34:11] <sclv> you can give it a ton of virtual memory but it'll crawl
[19:34:27] <sclv> best to build the binary on a system with the same os and config but with more ram, then copy it over
[19:35:17] <albet70> that's a vps, how I can give it more virtual memory?
[19:35:48] <albet70> I don't think I can change the swap partition
[19:36:31] <albet70> does cabal or other tools provide binary package?
[19:36:32] <int-e> Compile with -j1, lower optimization level... but you probably don't want the latter and at 1GB the former is not certain to be enough.
[19:36:36] <albet70> or stack?
[19:36:44] <int-e> Compiling elsewhere is the sane approach really.
[19:37:48] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 260 seconds)
[19:38:15] <int-e> This is one reason why people use containers. But you can do things like installing to a custom prefix (/usr/local or /opt) and copying that around?
[19:38:17] <albet70> but I'm afraid the the package which compiled on other machines is too big to transfer
[19:38:42] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[19:39:06] <albet70> I see there's a haskell docker container, but no scotty in it
[19:39:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:39:38] <shachaf> I wonder, is producing statically-linked binaries practical with GHC yet?
[19:40:01] <shachaf> I remember GMP was one reason that couldn't be done, but I heard people were working on alternatives.
[19:40:22] <int-e> ?
[19:40:41] <int-e> You /can/ link GMP statically. You just can't distribute the resulting binary.
[19:41:09] <shachaf> Right, fair enough. I guess I should say "one reason that wasn't done".
[19:42:52] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:42:56] <shachaf> But I wonder whether producing a completely statically-linked Linux binary is practical, with no libc or anything.
[19:44:36] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[19:44:54] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:46:34] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[19:46:51] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:47:14] *** Quits: hook54321 (sid149355@user/hook54321) (Ping timeout: 268 seconds)
[19:48:38] *** Joins: johnjay (~pi@192.142.100.50)
[19:48:46] <johnjay> is there any way to run and compile haskell on a tablet?
[19:48:52] <johnjay> or should I use replit or some similar site?
[19:49:34] *** Joins: hook54321 (sid149355@user/hook54321)
[19:49:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[19:50:07] *** Joins: cosimone (~user@93-47-228-147.ip115.fastwebnet.it)
[19:50:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[19:51:37] <albet70> "johnjay :is there any way to run and compile haskell on a tablet?", a x86 tablet is possible
[19:51:51] <johnjay> sure. but i think we both know i'm using an android. XD
[19:52:02] <albet70> if it's x86-android, u can use chroot
[19:52:03] <johnjay> i guess ipads still exist. you can draw on them apparently
[19:52:53] <albet70> "johnjay :sure. but i think we both know i'm using an android. XD", oh I forgot, there's a ghc package for arm64
[19:53:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:53:35] <johnjay> i see. i think i tried compiling something on my imac and i had problems cause of that
[19:53:54] <johnjay> i don't fully understand how the built in rosetta emulation works either
[19:53:56] <albet70> u need install a debian rootfs on android, then install that ghc arm64 package
[19:54:00] <johnjay> it sort of runs x86 stuff... idk
[19:54:16] <johnjay> is that like rooting the device? idk the lingo
[19:54:28] <albet70> "johnjay :is that like rooting the device? idk the lingo", no need to root
[19:54:48] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[19:54:55] <albet70> use linuxdepoly some kind of android app to create a chroot environment
[19:54:59] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:55:06] <albet70> or termux
[19:55:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:55:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:55:56] *** Joins: wroathe (~wroathe@user/wroathe)
[19:56:51] <johnjay> i know about termux. i thought about trying run haskell from there
[19:57:01] <johnjay> apparently the termux in the app store is old and not supported due to google changes
[19:58:13] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[19:58:15] *** hiruji is now known as aeka
[19:59:37] <albet70> then download termux from f-droid, remember u need termux-proot to get a linux environment, then download ghc-8.10.5-aarch64-deb10-linux.tar.xz from downloads.haskell.org, and compile it on that termux-proot
[20:00:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:01:12] <johnjay> ahh ok. thanks i will
[20:01:41] <albet70> my android phone has 6GB RAM, my computer has 4GB, and my vps has 1GB, how ironic
[20:02:35] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[20:02:45] *** Quits: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[20:03:50] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[20:05:14] *** Joins: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de)
[20:05:14] *** Quits: neurocyte0132889 (~neurocyte@IP-213188116193.dynamic.medianet-world.de) (Changing host)
[20:05:14] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:05:53] *** Quits: pfurla (~pfurla@2804:14d:5c81:4104:9dad:b7eb:58e3:98e6) (Quit: gone to sleep. ZZZzzz…)
[20:07:05] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:07:18] *** Joins: axeman (~AdminUser@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9)
[20:07:18] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:07:30] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f9b9:ddeb:6361:fc1a) (Remote host closed the connection)
[20:07:37] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:09:17] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:09:57] *** Joins: zincy_ (~zincy@host86-181-60-139.range86-181.btcentralplus.com)
[20:11:50] <tomsmeding> albet70: I have termux, not termux-proot. I've tried to use an aarch64 distribution of ghc before but it didn't work because some libraries were missing. Have you had more luck?
[20:12:07] <tomsmeding> "install a debian rootfs" ah there you go
[20:12:27] <tomsmeding> thanks all clear :)
[20:14:37] *** Joins: Guest4250 (~evan@2600:1700:ba69:10:81bb:b5c:744b:f329)
[20:15:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:20:02] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[20:22:54] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[20:25:25] *** Quits: axeman (~AdminUser@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:25:53] *** Joins: axeman (~quassel@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9)
[20:26:44] *** Quits: Guest4250 (~evan@2600:1700:ba69:10:81bb:b5c:744b:f329) (Quit: WeeChat 3.3)
[20:27:12] *** Quits: axeman (~quassel@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9) (Client Quit)
[20:27:32] *** Joins: axeman (~quassel@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9)
[20:27:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:34:02] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Remote host closed the connection)
[20:36:25] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[20:42:11] <albet70> tomsmeding: u need libnuma-dev, build-essential and libc-dev
[20:42:24] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[20:42:27] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:42:54] <albet70> and also termux-proot is a linux environment to run ghc, and it's part of termux
[20:44:03] <albet70> and I do have a ghc-deb10-arm64.deb if u need, I can share it
[20:46:38] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[20:46:57] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[20:48:16] *** Quits: tv (~tv@user/tv) (Ping timeout: 268 seconds)
[20:52:58] *** Joins: CiaoSen (~Jura@p200300c9570204002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:54:57] *** Joins: briandaed (~jaroslawj@185.234.208.208.r.toneticgroup.pl)
[20:58:26] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[20:58:51] *** Joins: _xor (~xor@72.49.199.147)
[21:00:09] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.3)
[21:01:02] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[21:02:42] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:03:00] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:03:26] *** Quits: xff0x (~xff0x@2001:1a81:53e7:c700:9294:809b:2f89:3306) (Ping timeout: 252 seconds)
[21:04:12] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:04:19] *** Joins: xff0x (~xff0x@2001:1a81:53e7:c700:798e:f8b0:91f3:38f8)
[21:04:30] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:05:05] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 252 seconds)
[21:06:11] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr) (Ping timeout: 256 seconds)
[21:08:26] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:09:21] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:09:29] *** Quits: axeman (~quassel@2a02:8109:a3c0:b10:6a3a:b25d:23ad:1cf9) (Ping timeout: 252 seconds)
[21:11:18] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[21:16:44] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:16:45] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr)
[21:17:53] *** Joins: axeman (~quassel@2a02:8109:a3c0:b10:fbae:9981:ef06:fecb)
[21:19:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[21:20:56] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[21:21:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:23:27] *** Quits: pta2002 (~pta2002@161.230.90.170) (Quit: leaving)
[21:24:21] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[21:28:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[21:28:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:30:45] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 252 seconds)
[21:32:44] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:33:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[21:33:41] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:37:29] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:37:48] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:38:29] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[21:41:52] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[21:42:10] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[21:42:19] *** Quits: nickdaly (45ce440a48@2604:bf00:561:2000::e2) (Remote host closed the connection)
[21:42:28] *** Joins: nickdaly (45ce440a48@2604:bf00:561:2000::e2)
[21:44:43] *** Joins: tv (~tv@user/tv)
[21:48:30] *** Quits: NinjaTrappeur (~ninja@user/ninjatrappeur) (Quit: WeeChat 3.3)
[21:49:26] *** Joins: NinjaTrappeur (~ninja@user/ninjatrappeur)
[21:49:49] *** Joins: econo (uid147250@user/econo)
[21:53:48] *** Joins: Guest42 (~Guest42@cpc159864-nmal26-2-0-cust352.19-2.cable.virginm.net)
[21:53:59] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[21:54:27] *** Quits: Guest42 (~Guest42@cpc159864-nmal26-2-0-cust352.19-2.cable.virginm.net) (Client Quit)
[21:56:16] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[22:01:12] <hololeap> anyone know of a mnemonic for remembering what some and many do?
[22:03:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Remote host closed the connection)
[22:03:42] <hololeap> I guess s/o/me -- one or more; 
[22:04:06] *** Joins: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net)
[22:05:41] *** Joins: jstolarek (~jstolarek@137.220.120.162)
[22:06:37] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[22:06:40] <c_wraith> I still find it weird that those are even part of Alternative, given that they don't do anything useful for a lot of instances
[22:07:35] <c_wraith> > many [1,2,3]
[22:07:37] <lambdabot>  *Exception: <<loop>>
[22:08:03] *** Joins: deadmarshal (~deadmarsh@95.38.116.22)
[22:08:32] <geekosaur> some implies at least one to me
[22:09:15] <hololeap> I guess you're right, but I don't usually think of "many" as including the possibility of zero
[22:09:15] <geekosaur> many's a bit weird though namewise since to me it implies a lot
[22:10:04] <hololeap> I have many achievements
[22:10:31] <tomsmeding> "I have many friends"
[22:11:08] <c_wraith> "A friend of the devil is a friend of mine".  wait, wrong direction
[22:11:21] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[22:11:22] <lyxia> yeah I remember many as the one that's not some
[22:11:25] *** Quits: yauhsien (~yauhsien@61-231-22-20.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:11:49] * tomsmeding remembers many as the combinator that's regex' *, and some is "the other one"
[22:12:15] <c_wraith> I just... remember them.  My capacity for trivia is vast.
[22:12:23] <geekosaur> that's more orloess the rest of how I remember them, some is + so many must be *
[22:12:37] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Remote host closed the connection)
[22:12:46] <geekosaur> it's still weird though
[22:13:19] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[22:15:48] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[22:16:07] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[22:17:01] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[22:20:25] <hololeap> is there a way to prove that you have a Show instance for (f a) if you have a Show1 instance for f?
[22:21:18] <tomsmeding> and Show a, presumably
[22:21:31] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-131-169.cust.tzulo.com)
[22:21:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:21:41] <tomsmeding> you _don't_ necessarily have a Show instance for (f a) though; however, that information is sufficient to _make_ one
[22:21:47] *** Joins: cheater (~Username@user/cheater)
[22:21:58] <geekosaur> ^
[22:22:24] <geekosaur> Show1 f is only enough to say that, *if* you have an a with Show, you can make Show (f a)
[22:22:43] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[22:22:55] <tomsmeding> and if so, showsPrec = liftShowsPrec showsPrec showList
[22:23:02] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[22:23:03] <dsal> hololeap: how many of these do you have?
[22:23:04] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:23:41] <hololeap> how many of what do I have?
[22:23:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:24:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: Connection reset by peer)
[22:24:31] <dsal> How many intuitive mnemonics have you collected?
[22:25:07] <hololeap> I have no idea
[22:25:36] <hololeap> should I be counting them as I go? :3
[22:26:37] <hpc> if only there was a way to remember lots of things at once, to make it easier to keep track of
[22:27:00] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[22:27:14] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[22:28:01] <dsal> hololeap: if the answer is zero, that's ok, because when I ask you how many of something you have, you can have none, but if you have some, then you must have at least one.
[22:28:23] <hololeap> "many" ;)
[22:29:22] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:29:29] *** Quits: fabfianda (~fabfianda@mob-5-90-243-224.net.vodafone.it) (Ping timeout: 256 seconds)
[22:29:43] <dsal> Good, then hopefully you see that I've answered your question several times. :)
[22:29:52] *** Joins: fabfianda (~fabfianda@net-2-32-227-53.cust.dsl.teletu.it)
[22:30:03] *** Quits: jstolarek (~jstolarek@137.220.120.162) (Ping timeout: 256 seconds)
[22:31:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:31:48] *** Joins: Erutuon (~Erutuon@user/erutuon)
[22:31:56] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[22:31:59] *** Quits: axeman (~quassel@2a02:8109:a3c0:b10:fbae:9981:ef06:fecb) (Ping timeout: 252 seconds)
[22:32:46] <hololeap> oh, I get it
[22:33:30] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-131-169.cust.tzulo.com) (Quit: Leaving)
[22:36:17] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:36:25] *** Joins: cheater (~Username@user/cheater)
[22:36:51] *** Quits: fabfianda (~fabfianda@net-2-32-227-53.cust.dsl.teletu.it) (Ping timeout: 256 seconds)
[22:37:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:38:00] *** Joins: fabfianda (~fabfianda@mob-5-90-252-134.net.vodafone.it)
[22:38:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:38:45] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:38:45] *** Joins: wroathe (~wroathe@user/wroathe)
[22:41:55] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Remote host closed the connection)
[22:41:58] <energizer> `let {x = 2 + x} in x` what do the curly braces mean?
[22:42:19] <geekosaur> they can replace layout
[22:42:58] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[22:43:04] <energizer> oh
[22:43:22] <geekosaur> so there, they're not doing much
[22:43:22] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[22:44:40] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Remote host closed the connection)
[22:44:58] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[22:48:16] *** Joins: vicfred (~vicfred@user/vicfred)
[22:48:55] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[22:49:19] *** Quits: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[22:49:49] *** Joins: burnsidesLlama (~burnsides@dhcp168-020.wadham.ox.ac.uk)
[22:50:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[22:52:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[22:52:47] *** Quits: deadmarshal (~deadmarsh@95.38.116.22) (Ping timeout: 256 seconds)
[22:54:00] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[22:54:29] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[22:57:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:57:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:59:25] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b)
[22:59:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:01:05] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:01:23] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:02:00] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[23:03:18] <juri_> hmm. is anyone else using stan to lint check their code for totality? I'm wondering what to do with functions like sum, minimum, and maximum.
[23:04:05] <maerwald> I don't think stan can check your code for totality
[23:04:28] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[23:04:49] *** Parts: nitrix (~nitrix@user/nitrix) (Leaving)
[23:05:26] <Lycurgus> i looked at it a while back, didn seem to be worth the effort
[23:05:35] <eyJhb> Reading this piece of Haskell sourcecode https://termbin.com/2rtf and I am unsure what `s'` and `s''`means? I have tried searching for it, but can't really find an anwser.
[23:05:37] <eyJhb> answer*
[23:05:46] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Ping timeout: 256 seconds)
[23:06:05] *** Quits: cosimone (~user@93-47-228-147.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[23:08:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:08:57] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[23:09:47] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:10:43] <juri_> Stan has done my code a lot of good. mostly making me add calls to error when conditions are out of the norm.
[23:11:57] <juri_> I just got done with eliminating head, tail, init, last, etc from Data.List, but eliminating sum, minimum, and maximum is a bit more problematic. they require noninfinite lists.
[23:12:04] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[23:12:09] *** Joins: axeman (~quassel@2a02:8109:a3c0:b10:90ba:bdb8:fd93:c610)
[23:12:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:12:25] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:12:28] <dsal> > sum []
[23:12:30] <lambdabot>  0
[23:12:43] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:13:26] <dsal> I tried stan in the past and it mostly just made noise.
[23:13:54] <dsal> I don't generally use a lot of partial functions, though.
[23:13:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:14:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:14:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:14:12] *** Joins: wroathe (~wroathe@user/wroathe)
[23:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:14:38] <dsal> I'm pretty convinced anyone who says not to use `sum` should probably offer a lot of qualifiers, though.
[23:15:02] <Profpatsch> How about when I have a “lens” that will use an IO action to view/set the lens? Is that possible?
[23:15:24] <energizer> https://en.wikibooks.org/wiki/Haskell/Fix_and_recursion says `fix` "finds the least-defined fixed point of a function" and "In any type, ⊥ is the least-defined value". So why isn't the least-defined fixed point of a function /always/ ⊥?
[23:15:26] <geekosaur> eyJhb, they're just new identifiers. haskell allows you to add ticks (primes in math parlance) to variable names to make new ones, usually meaning they're related in sonme way to the unticked one
[23:15:47] <geekosaur> > fix (const 2)
[23:15:48] <lambdabot>  2
[23:15:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:16:02] <energizer> geekosaur: bottom is less defined than 2, right?
[23:16:10] <Lycurgus> or the one less ticked
[23:16:18] <geekosaur> right, but const 2 <anything> is always 2
[23:16:21] <Lycurgus> *ones
[23:16:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:16:54] <geekosaur> so 2 is the least defined fixed point of (const 2)
[23:17:13] <geekosaur> > const 2 undefined
[23:17:14] <lambdabot>  2
[23:17:29] <energizer> geekosaur: because it's impossible to get undefined out of `const 2 _`
[23:17:44] <energizer> ok
[23:17:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:17:59] <monochrom> ⊥ is less defined than 0:0:0...  That doesn't mean ⊥ satisfies the equation x = 0:x.  0:0:0:... does.
[23:18:17] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:18:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:18:24] <eyJhb> Thanks geekosaur  :)
[23:18:29] <geekosaur> > let s' = 5 in s' -- s' is just another name
[23:18:31] <lambdabot>  5
[23:18:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[23:18:59] *** Joins: pfurla (~pfurla@201.17.118.230)
[23:19:12] <Lycurgus> as far as stan, statements vs more stuff;peoples want like quickcheck but for real not just tests rather than like a deep lint
[23:19:51] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:20:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:21:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[23:21:44] *** Joins: cheater1__ (~Username@user/cheater)
[23:21:47] *** cheater1__ is now known as cheater
[23:21:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:22:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:23:05] *** Joins: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com)
[23:24:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:24:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:25:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:25:57] <juri_> Lycurgus: I have property tests, unit tests and integration tests. i think testing is a separate subject.
[23:26:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:26:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:27:07] <geekosaur> > let foo'bar = 6 in foo'bar
[23:27:08] <lambdabot>  6
[23:27:18] <Lycurgus> will (programmer coded) tests go away when programs can be automatically proven correct?
[23:27:50] <juri_> no, because correct programs don't necessarilly do what the programmer intended.
[23:28:04] <geekosaur> you can prove a program fits its specification. you can't prove the spec is correct
[23:28:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:28:41] <monochrom> "prove correct" is only relative to a specification. Now you have to test your specification.
[23:28:47] <Lycurgus> so i was actually looking forward to a system that synthesized hs from English
[23:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:29:06] <geekosaur> english is *way* too multivalued
[23:29:18] <geekosaur> to work as either a programming language or a specification language
[23:30:17] <geekosaur> not to mention things like, the common use of "sort" is not the programming one
[23:30:19] <Lycurgus> well controlled english ofc
[23:30:23] *** Joins: hololeap_ (~hololeap@user/hololeap)
[23:30:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:30:51] <Lycurgus> for which there's already a well worked hs system
[23:31:03] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[23:31:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:32:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:33:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:34:57] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[23:35:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:35:14] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 252 seconds)
[23:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:36:45] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:13] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:37:23] <maerwald> I'm in love with windows paths
[23:37:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:37:53] <juri_> maerwald: CON
[23:38:00] <maerwald> `\\?\GLOBALROOT\GLOBAL??\UNC\localhost\c$\foo\bar` -> `C:\foo\bar`
[23:38:22] <geekosaur> gesundheit
[23:38:36] <maerwald> well, most of our libraries choke on it :p
[23:38:46] <maerwald> but it's valid
[23:38:54] <geekosaur> I don't blame them :þ
[23:39:08] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:39:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[23:39:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:39:40] <maerwald> makes you appreciate how well posix is actually designed
[23:39:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:39:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:40:05] <maerwald> windows specification was created by an intern
[23:40:19] <juri_> ... who was drunk.
[23:41:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:41:30] <energizer> wiki gives exercise to write nonrecursive version of `filter` using `fix`. i'm stuck. can someone show the answer for another function like map or takeWhile
[23:41:31] <yushyin> but only to reach ballmer peak
[23:41:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:42:17] <maerwald> I reach that every day.
[23:42:27] <geekosaur> and then blow past it?
[23:42:45] <maerwald> without being actually drunk
[23:43:24] <maerwald> I mean... if you read through windows documentation more than half an hour, you'll get there
[23:43:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:44:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:44:06] <maerwald> it's a stream of WTF moments that doesn't end
[23:44:26] <tomsmeding> energizer: 'fix' has type '(a -> a) -> a'. What if you set 'a ~ s -> t'?
[23:44:37] <geekosaur> I was amazed at how much of basic win32 looked like "let's just flip the meaning of this flag so we're not a clone of os/2 1.x"
[23:45:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:46:02] <geekosaur> regardless of how rational flipping that flag was
[23:46:05] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:46:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:47:34] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:f5ec:bb0e:161e:528b) (Remote host closed the connection)
[23:47:45] <EvanR> BeOS supremity
[23:47:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:48:12] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[23:48:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:49:52] *** hololeap_ is now known as hololeap
[23:49:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:50:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:55:37] <leah2> is there a haskell library ala Shake.Command that supports creating pipes?
[23:57:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:57:41] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr) (Quit: Leaving)
[23:59:21] *** Quits: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com) (Remote host closed the connection)
[23:59:37] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:59:40] *** Joins: hskpractice (~hskpracti@94-255-217-215.cust.bredband2.com)
[23:59:52] <geekosaur> Turtle or shelly?
[23:59:59] *** Quits: hgolden (~hgolden2@cpe-172-114-81-123.socal.res.rr.com) (Remote host closed the connection)
