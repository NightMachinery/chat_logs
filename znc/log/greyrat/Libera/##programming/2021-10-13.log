[00:00:42] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[00:00:55] <Guest8547> Jackal-o-lantern: it seems they want you to match the points and then put the images together
[00:01:08] *** Joins: Telvana (~capo@user/telvana)
[00:01:45] <Jackal-o-lantern> Guest8547: ; yeah, that's it at a really high level. The challenge is breaking down the steps. :3
[00:01:56] <sonny> macaw: I imagine you'd prefer modern translations to kjv, large benefit is it's free and historical value / style
[00:02:34] <sonny> otherwise, just old lol
[00:04:18] <Guest8547> Jackal-o-lantern: did you already match the coincident points?
[00:05:05] <Jackal-o-lantern> Guest8547: I calculated the matrix H (which they call 'T' here for some reason) which maps the points as I described before. 
[00:05:22] <Guest8547> sonny: all indicates that kjv is the more or the most pure one :)
[00:05:27] <sonny> lol
[00:05:35] <sonny> nah
[00:06:04] <macaw> sonny, Guest8547: In the past, for my (admittedly) limited reading, I've used biblehub.com . It provides multiple translations with references and commentary.
[00:06:09] <sonny> but if you like the shakespearean style why not
[00:06:30] <Guest8547> really: research textus receptus versus critical texts and how kjv was made. thecloudchurch.org can help.
[00:06:49] <sonny> I've been using the jersulam edition recently
[00:06:58] <Jackal-o-lantern> Are you all trying to make the code bible or what?
[00:07:04] <sonny> lol rip spelling
[00:07:29] <macaw> Haha, Jackal-o-lantern, that would be good to do, great idea!
[00:07:49] <Guest8547> macaw: [to serve] :)
[00:07:52] * macaw starts writing the first page of The Coding Bible. (;-D)
[00:07:53] *** Joins: pavonia (~user@user/siracusa)
[00:08:06] *** Joins: Nspace (~Nspace@user/nspace)
[00:08:22] <sonny> in the beginning, there was only lisp
[00:08:26] <sonny> lol
[00:08:36] * Jackal-o-lantern is so confused
[00:08:57] <sonny> I was just replying to version specific stuff, I have no other context
[00:08:59] <macaw> xD
[00:09:18] <sonny> Jackal-o-lantern: haven't you heard of lisp?
[00:09:45] <macaw> sonny - Obligatory https://xkcd.com/224/
[00:09:45] <bayaz> Title: Lisp 
[00:10:17] <sonny> lmao
[00:10:22] <Guest8547> Jackal-o-lantern: "with the estimated homography matrix" I guess it means you have to match coincident points first, right?
[00:10:55] <Guest8547> or find the coordinates of the match
[00:14:02] *** Quits: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it) (Quit: Leaving)
[00:15:28] <Guest8547> Jackal-o-lantern: I have to go out now, it seems complex...
[00:15:41] <Jackal-o-lantern> I'll struggle more. 
[00:15:46] <Guest8547> also there is a wrapping
[00:15:50] <Jackal-o-lantern> Enjoy your day.
[00:15:56] <Guest8547> warping*
[00:16:00] <macaw> Jackal-o-lantern: You may find more luck in #gamedev.
[00:16:15] <macaw> The people there are very good.
[00:16:24] <Jackal-o-lantern> Do people use homography in gamedev?
[00:16:50] <pyzozord> what happens in C when I do unsigned int a = 5; int b = -3; a = a - b?
[00:17:23] <Guest8547> Jackal-o-lantern: you can try doing matrixes calculations on paper first
[00:17:23] <pyzozord> oh sorry unsigned int a=3; int b=-5; a = a + b
[00:17:48] <Guest8547> the assure the formule is right first
[00:17:51] <Guest8547> then
[00:18:01] <macaw> Jackal-o-lantern: Cannot say for certain, but you'd be surprised what goes on in the world of gamedev. Every bit of knowledge comes useful for some games.
[00:18:20] <sonny> pyzozord: there might be conversion rules? I don't remember
[00:18:38] <sonny> I spent 6 + months on this but I forgot it all :/
[00:18:53] *** Quits: Guest8547 (~Guest@181.95.239.233) (Remote host closed the connection)
[00:19:12] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:20:35] *** Quits: magla (~gelignite@55d450ed.access.ecotel.net) (Quit: Stay safe!)
[00:20:59] *** Quits: Gamara (~Gamara@66-203-186-178.ded.execulink.com) (Quit: Client closed)
[00:24:56] <vdamewood> pyzozord: b's value is converted to unsigned int; The addition is performed; then the result is assigned to a.
[00:25:56] <vdamewood> pyzozord: Since overflow is well defined for unsigned types, on a 2's compliment system, this ends up 'just working'. On a 1's compliment or a sign-and-magnitude system, it will give an erroneous result.
[00:26:55] <pyzozord> thought so, thanks!
[00:27:40] <pyzozord> im thinking about designing a simple language and I'm considering it on a state machine
[00:27:54] <sonny> what do you mean?
[00:28:48] <pyzozord> when I'd be writing a bytecode to x86 assembly compiler, it would be very dumb and it would just use the stack pointer without using any registers
[00:29:04] <sonny> ah cool
[00:29:05] <pyzozord> i wonder would that be much slower than normal register based stuff?
[00:29:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:41] <sonny> according to the dis vm paper, and jvm it seems a hybrid approach is the best
[00:29:49] <sonny> stack is better memory wise iirc
[00:30:29] <sonny> dis only used registers, jvm is the hybrid
[00:31:39] <sonny> but to answer your question, doesn't matter lol
[00:31:59] *** Joins: CMDR_Kaiser (~CMDR_Kais@190.237.88.66)
[00:32:59] <sonny> so you are making a vm right?
[00:33:35] <sonny> wirth has a nice one in part 2 of compiler construction, I haven't read it yet
[00:34:37] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[00:35:23] <pyzozord> hmm yeah it might not matter indeed
[00:35:34] <pyzozord> c allocates local variables on stack and has no problems
[00:35:56] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[00:36:08] <sonny> problem with c is that no one knows what the vm is supposed to be
[00:36:23] <pyzozord> so like it uses mostly stack but it uses registers for abi?
[00:36:33] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:36:54] *** Joins: Nspace (~Nspace@user/nspace)
[00:37:29] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c620:40e7:4c0a:904d) (Quit: Leaving)
[00:37:39] <pyzozord> meh yeah I think it doesn't matter and I can safely design my bytecode to be stack-only
[00:37:57] <sonny> stack design is nice
[00:38:00] <sonny> simple
[00:38:47] *** Joins: zaher (~zaher@37.48.154.89)
[00:39:40] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[00:42:11] *** Joins: ravan__ (~ravan@user/ravan)
[00:42:41] *** Quits: dld (~davidlowr@73.61.8.17) (Ping timeout: 264 seconds)
[00:43:04] <pyzozord> I'm looking at intel's CALL specification and I only see it takes addresses. But I can see in godbolt "call printf"
[00:43:24] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6030:a6d6:3b41:c54)
[00:44:13] *** Joins: dld (~davidlowr@73.61.8.115)
[00:44:41] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 245 seconds)
[00:44:45] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:44:53] <wuldor> macaw: My question was in pertainance to your path to god, I'm into perenialism so I acknowledge that all systems have fragments of divine truth that can be assimilated and assembled to obtain Wisdom. For example, I applied the 33 anglo saxon runes onto the 33 paths of the Golden Dawn tradition starting in two places, the first rune starting on the first sphere and the first on the first path, this 
[00:44:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:44:59] <wuldor> spit out a lot of truth most notably though, on sphere 33 there ended up with three alignments: Gar Os and Daeg which spells GOD. This is an example of divine alignment demonstrating itself in combined knowledge.
[00:45:00] <piou> pyzozord: printf in "call printf" is actually the address of the beginning of the printf function
[00:45:04] <sonny>  The operand can be an immediate value, a general-purpose register, or a memory location.
[00:45:08] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[00:45:16] <sonny> yeah
[00:45:34] <wuldor> I need to not forget that people in this chat probably think I'm off of my head.
[00:45:52] * sonny takes notes for his novel
[00:45:56] <pyzozord> so in x86 assembly "printf" can be an address?
[00:45:56] <wuldor> So if you want to private message me for a discussion, feel free.
[00:46:18] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:46:19] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[00:46:23] <sonny> is it a label?
[00:47:00] <pyzozord> no idea https://gcc.godbolt.org/z/vzezxv14r
[00:47:01] <bayaz> Title: Compiler Explorer - C (x86-64 gcc 11.2) 
[00:47:14] <sonny> pyzozord: ##asm is really great btw
[00:47:43] <piou> yeah, it's a label here
[00:47:48] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Read error: Connection reset by peer)
[00:48:05] <sonny> ok, maybe I understand somewhat :)
[00:48:05] <pyzozord> i'll need to visit ##asm sometime
[00:48:08] <piou> pyzozord: it's like main: you put the label in and now should be able to write "call main"
[00:48:25] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[00:48:30] <piou> and that will be replaced by whatever the address of the begining of main will be
[00:48:37] <sonny> in C, printf will just be pulled in via a header
[00:48:43] <piou> it's just easier that way
[00:49:03] <pyzozord> piou: are labels first-class citizen objects in x86 assembly? or is this just going to be preprocessed by linker?
[00:49:15] <piou> preprocessed
[00:49:17] <piou> imagine having to manually compute what the addresses will be then use these addresses numerically, that would be madness
[00:49:24] <sonny> so depending on your compiler, you will see the source address as well in the disassemble 
[00:49:36] <pyzozord> ah so it's not real assembly really
[00:49:39] <sonny> well, only real programmers ;)
[00:49:43] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:49:43] <Decker> 'printf' is always an address
[00:49:57] *** Quits: kmh (~kmh@2a00:6020:5004:6800:6030:a6d6:3b41:c54) (Remote host closed the connection)
[00:49:58] <piou> pyzozord: it is real assembly, just as macros are real C
[00:50:08] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6030:a6d6:3b41:c54)
[00:50:14] <pyzozord> well yeah, that's not what I meant though
[00:50:18] <pyzozord> wait
[00:50:25] <pyzozord> macros are definied in C standard
[00:50:30] <sonny> ya
[00:50:32] <piou> yep
[00:50:36] *** Joins: Nspace (~Nspace@user/nspace)
[00:50:41] <pyzozord> are those kind of labels defined in x86 assembly?
[00:50:46] <MrMobius_> you can load and store the address as a value. does that count as first class?
[00:50:50] <sonny> yeah
[00:51:01] <sonny> they are defined by the assembler
[00:51:09] <pyzozord> it counts as first class if it's in official spec :P
[00:51:12] <wuldor> is it better to have a time object that resets for each actor in an object oriented animation system or to have one time object that does not reset and to then store memory of frame locations in each object.
[00:51:16] <wuldor> ?
[00:51:24] <sonny> asm specs not really like that?
[00:51:27] <piou> pyzozord: you seem to be about to confuse assembly (the language still made for humans that you write to generate machine code) and machine code (which might be disassembled for readability, but is really not meant to be read by humans)
[00:51:33] <wuldor> This is in a system that has mulitple sprites than can be animated on different tempos and rhythms.
[00:51:34] <sonny> it's really up to the implementation 
[00:52:02] <sonny> I thought there would be a reference language for intel assembly but doesn't seem to work that way
[00:52:16] <Decker> wuldor I find a single clock with local biases works best
[00:52:18] <pyzozord> piou: I think the distinction is clear, but maybe I'll make that mistake in a moment
[00:52:42] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[00:53:08] <wuldor> Becker: I'll trust that.
[00:53:08] <piou> pyzozord: so to be clear, since the assembly is for humans (and before linking you probably don't even know what the address of printf will be) it's normal to have labels. However the machine code generated won't have them, it'll have addresses.
[00:53:14] <sonny> piou: they just used to be called symbols in assembly right?
[00:53:23] <sonny> like way back
[00:53:25] <MrMobius_> sonny, this is the problem with all assemblies. each assembler does its own thing
[00:53:27] <pyzozord> let me rephrase 'are those kind of labels like "printf" in "call printf" part of the official intel x86_64 assembly syntax'?
[00:53:37] <sonny> MrMobius_ yeah :/
[00:53:48] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:54:11] <pyzozord> piou: yep yep that part is clear
[00:54:15] <sonny> pyzozord: not really
[00:54:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[00:54:25] <sonny> this is what it looks like https://www.felixcloutier.com/x86/call
[00:54:26] <bayaz> Title: CALL — Call Procedure 
[00:54:33] <sonny> the rest is up to the assembler itself
[00:54:39] <MrMobius_> pyzozord, your question doesnt make sense
[00:54:43] <piou> pyzozord: the syntax depends on the assembler, and although I think all assemblers use labels in this very way I'm not sure that's actually standardized
[00:54:57] <pyzozord> yes I'm looking at the same definition but in intel's pdfs, but there is exactly the same table
[00:54:57] <Decker> call is more defined by the API could save an address to jump to on return and just jump
[00:55:02] <piou> pyzozord: intel doesn't provide a full syntax, it provides an instruction set
[00:55:05] <sonny> the assembler syntax is the machine
[00:55:08] <sonny> ^
[00:55:25] <MrMobius_> pyzozord, you couod ask what a particular assembler happens to do
[00:55:25] <piou> pyzozord: intel doesn't tell you how to write assembly
[00:55:56] *** Quits: Burgundy (~yomon@5-12-93-128.residential.rdsnet.ro) (Ping timeout: 245 seconds)
[00:56:12] <sonny> basically there is machine syntax, and assembly (source) syntax
[00:56:28] <sonny> the former is what the docs are
[00:56:31] <piou> pyzozord: intel tells you that if you use such instruction whose machine code is XXXX (and that people call MEH for convenience) then the CPU will react in such way
[00:56:31] <pyzozord> but looks like intel doesn't specify the source syntax fully then?
[00:56:35] *** Lord_of_Life_ is now known as Lord_of_Life
[00:56:42] <sonny> not really no
[00:56:55] <piou> pyzozord: it can't, it's not in charge of the assembly, it's in charge of the machine code
[00:57:03] <Decker> https://imgbb.com/ this uses 'goto x' as a return statement :)  can set X=? and goto 19
[00:57:04] <piou> The assembler is in charge of the assembly
[00:57:04] <bayaz> Title: Upload Image — Free Image Hosting 
[00:57:28] <sonny> the closest thing to pyzozord question would be masm/intel style
[00:57:44] <piou> It just happens that writting machine code is terribly meh so you generally only see some assembly
[00:57:45] <sonny> I'm guessing that's what they use in their docs as well
[00:58:06] <sonny> ya, sometimes they use C psuedo code too
[00:58:18] <Decker> oops that was a bad link https://ibb.co/zhnfKcw
[00:58:19] <bayaz> Title: starbase-Tb-M8f-QSHz-O 
[00:58:29] <piou> Yeah, they do entertain a certain style of assembly, but unless you're using an intel assembler they just don't control the assembly at all
[00:59:07] <piou> pyzozord: does that make sense?
[00:59:42] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[01:00:09] <sonny> e.g. call [printf] could be valid
[01:00:12] <pyzozord> ok, so why is arm assembler syntax so much different and so much more specified? https://developer.arm.com/documentation/dui0068/b/Assembler-Reference
[01:00:12] <bayaz> Title: Documentation – Arm Developer 
[01:00:40] <sonny> consistent notation makes docs reading easier :)
[01:00:43] <pyzozord> looks like in this case fab is controling the syntax of assembly
[01:00:49] <piou> pyzozord: because that's a documentation for a specific assembler, not an instruction set
[01:00:58] <pyzozord> oh ok i see
[01:01:05] <pyzozord> ok then i get it
[01:01:06] <Decker> usually for `call printf` you'd have to define a external value printf which the linker would fill in
[01:01:22] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 265 seconds)
[01:01:37] <sonny> `extern printf : proc`
[01:01:52] <Decker> dd printf ? :)
[01:02:05] <sonny> idk
[01:02:11] <sonny> I can barely do this stuff
[01:02:18] <Decker> '?' is a symbol meaning it doesn't know the value to fill yet
[01:02:25] <sonny> oh
[01:02:35] <sonny> data declaration I guess
[01:02:35] <Decker> :) realized that looked like a question
[01:02:53] <Decker> data double
[01:02:58] <Decker> db, dw, dd, dq, ...
[01:02:59] <sonny> oh yeah
[01:03:27] <sonny> I will say, I wish pl guys worked on assemblers, but it's really unimportant
[01:03:30] <pyzozord> ok got it
[01:03:32] <Decker> I love asm; but it's so niche
[01:03:39] <pyzozord> i see definition of "label" in gas
[01:03:56] <Decker> nasm ftw btw
[01:04:04] <sonny> I want to do work with system/360 
[01:04:09] <sonny> such a nice machine
[01:05:00] <sonny> yeah reading the assembler docs will save tons of frustration
[01:05:10] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) ()
[01:05:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[01:05:15] <Decker> unfortuantly 'assembly isn't A language'
[01:05:22] <sonny> no :(
[01:05:43] <sonny> you could probably make an address oriented language that is close enough though
[01:05:50] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[01:05:52] <sonny> but, there's literally no point lol
[01:05:56] <Decker> C is a good macro assembly :)
[01:06:00] <Decker> assembler
[01:06:01] <pyzozord> looks like that idea of a label is quite popular in assemblers. I checked out few different assemblers and architectures, they all seem to be doing "call printf" or "bl printf"
[01:06:05] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Read error: Connection reset by peer)
[01:06:12] *** Quits: jamea77 (~jamea@189.237.77.168) (Ping timeout: 265 seconds)
[01:06:12] <Decker> ya
[01:06:25] <sonny> (call printf) ;)
[01:06:29] <Decker> labels are typically internal things though - you have to allocaet some space to get a value for external values
[01:06:43] <piou> pyzozord: it's because you litterally can't work without them in most cases
[01:07:02] <Decker> very few things never branch
[01:07:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:07:46] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:07:49] <sonny> not just that, doing addresses manually is a pain, it's why assemblers got invented 
[01:08:15] <sonny> I need to get a better understanding of self modifying code tho
[01:08:27] <piou> pyzozord: just try not using labels and you'll quickly see why they're a requirement
[01:08:47] <piou> what do you even replace "printf" with in this case?
[01:09:01] <Decker> if you specify the absolute addresses and know the sizes of the insturctions you can just put in the number ala BASIC
[01:09:05] <Decker> (or YOLOL)
[01:09:09] <sonny> lol
[01:09:19] <pyzozord> so what assembler syntax does objdump -d use
[01:09:28] <Decker> none
[01:09:39] <Decker> it decodes the object format wrap on the code
[01:09:42] <sonny> is it gnu?
[01:09:45] <Decker> it is
[01:09:52] <Decker> so GAS I suppose
[01:09:57] <sonny> at&t style
[01:10:03] <piou> it's decompiled, I don't think it's supposed to be recompiled so it doesn't have to be valid assembler, therefore I don't know that it is valid assembler
[01:10:16] <Decker> ^
[01:10:31] <sonny> I'm guessing he's looking at disassembled source?
[01:10:47] <piou> That said, the format is very close to what you'd use in the GNU assembler
[01:10:54] <pyzozord> objdump lets me calls "styles" "syntaxes"
[01:11:11] <pyzozord> I mean it calls "intel" and "att" "syntax"
[01:11:23] <pyzozord> but thats a "style"
[01:11:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[01:11:28] <pyzozord> the syntax is "gas" really
[01:11:32] <piou> pyzozord: yes, and the fact that it lets you chose two different syntaxes show that it's not one assembler
[01:11:36] <sonny> ya, those are the two popular ones
[01:11:48] <Decker> probably has arm too?
[01:11:57] <Decker> in a different compilation(?)
[01:12:11] <piou> It just happens that assembly syntax falls mostly into two categories as far as main syntax is concerned: att and intel
[01:12:19] <piou> for x86
[01:12:20] <pyzozord> but I don't see anywhere in objdump man page stating explicitly what "syntax" it uses
[01:12:30] <Hash> P.S.A: If you want to /msg me, please feel free to /msg without asking in the channel. I would prefer if you NEVER publicly asked me for a private conversation. I do not apprecaite a violation of my privacy. I don't wish to disclose to the public and generate metadata about my private conversations with other people. Should you publicly ask to speak with me, I will actively refuse becuase
[01:12:32] <Hash> then everyone knows you wanted to have a private conversation with me. This is serious security issue and I'd like everyone to consider it.
[01:12:42] <sonny> there's some others but they seem to be either ancient or out of bell labs
[01:12:52] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:12:58] *** Quits: nx_ (~nitronix@88.198.206.243) (Ping timeout: 265 seconds)
[01:13:00] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[01:13:24] <sonny> what's the security issue?
[01:13:27] *** Quits: micrex22 (~quassel@user/micrex22) (Quit: No Ping reply in 180 seconds.)
[01:13:37] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Remote host closed the connection)
[01:13:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:13:47] *** Quits: soapsudsxx (~soapsudsx@141.193.188.134) (Remote host closed the connection)
[01:14:05] <sonny> it'd be privacy issue right?
[01:14:20] <Hash> Privacy is a matter of personal security.
[01:14:28] <piou> pyzozord: note that these syntax are like... C syntax and python syntax. You'll find many languages using a C-like syntax, many languages using a python-like syntax, and that's just languages reusing existing conventions to reduce the number of new things programmers have to get through. Syntax doesn't define *all* the syntax of an assembler.
[01:14:53] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 246 seconds)
[01:15:12] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[01:15:41] <sonny> technically you can just deny it? someone asking is not evidence
[01:15:46] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[01:15:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:17:15] <sonny> this is repudiation
[01:17:21] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[01:17:48] <Hash> If you voilate my privacy, I will make sure you are forever on /ignore
[01:17:58] <pyzozord> so objdump disassembly is not real assembly? It can't be assembled again?
[01:18:02] *** Quits: JavaBean (~javabean@user/javabean) (Read error: Connection reset by peer)
[01:18:02] <Hash> Fair warning to other bothers and sisters of ##programming 
[01:18:18] <sonny> I just want to understand from a security perspective
[01:18:24] <Hash> Just feel free to msg me. I can't comment for other people. They can do as they please.
[01:18:32] <sonny> ...
[01:18:32] <Hash> For my life, please don't ask me. Thank you.
[01:18:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:19:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:19:16] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[01:19:18] *** Joins: soapsudsxx (~soapsudsx@141.193.188.134)
[01:19:26] <sonny> pyzozord try it
[01:19:33] <LjL> for my mental sanity i will have to unread the above
[01:19:37] <LjL> sadly i can't
[01:19:54] *** Joins: micrex22 (~quassel@user/micrex22)
[01:20:08] <flakonium_tubes> looks like i logged in at the right time today
[01:20:16] *** Quits: micrex22 (~quassel@user/micrex22) (Client Quit)
[01:20:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Remote host closed the connection)
[01:20:46] *** Joins: diophantoz (~diophanto@user/diophantoz)
[01:21:09] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:21:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[01:21:43] <sonny> pyzozord: also experiment with puts not printf, it might be less of a headache idk
[01:22:11] <pyzozord> not sure what you guys saw, but if something bothers you I encourage you guys to take it to ##programming-ops, they'll for sure pay attention and listen to your concerns
[01:22:34] <pyzozord> (got like 12 nicks on ignore :P)
[01:22:39] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[01:23:19] <flakonium_tubes> oh i've seen things, terrible things, just not in this channel yet
[01:24:30] <pyzozord> sonny: I'm just trying to understand what is happening here
[01:24:43] <pyzozord> it seems like there is no official assembly syntax
[01:24:51] <piou> pyzozord: there isn't
[01:24:52] <sonny> no
[01:24:59] <piou> pyzozord: assembly isn't one language
[01:24:59] <pyzozord> yet it seems like programs assume there is some
[01:25:30] <sonny> the assembler does have it's own spec
[01:25:48] *** Quits: dre (~dre@2001:8003:c932:c301:b1a7:f172:e0ac:f5a0) (Remote host closed the connection)
[01:25:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Ping timeout: 245 seconds)
[01:25:58] <piou> pyzozord: well, they're all very similar so if the tool doesn't specify what syntax they use you can probably use it just fine anyway
[01:26:08] *** Joins: dre (~dre@2001:8003:c932:c301:e309:8ed:b76f:cbc5)
[01:26:09] <flakonium_tubes> the biggest concern i would have is how does the calling convention handle va_rgs
[01:26:47] *** Quits: trebko (~trebko@137.220.86.97) (Ping timeout: 246 seconds)
[01:27:05] *** Quits: jk (~jk@ns1003916.ip-51-81-154.us) (Ping timeout: 264 seconds)
[01:27:12] <sonny> you use them a lot?
[01:27:20] <flakonium_tubes> printf?
[01:27:25] <sonny> right
[01:27:59] <flakonium_tubes> like hunfdreds of thousands of times a day
[01:28:20] *** Quits: wuldor (~supermumm@84.66.236.214) (Quit: leaving)
[01:28:40] *** Joins: wuldor (~supermumm@84.66.236.214)
[01:29:11] <sonny> pyzozord what language are you using to make the vm?
[01:29:17] <wuldor> Is hardcoding bad practice? Say I just used hardcoded every enemy and item in C++ would this be considered bad? 
[01:29:24] <sonny> yes
[01:29:29] *** Quits: Akuli (~Akuli@82-203-164-221.bb.dnainternet.fi) (Quit: Leaving)
[01:29:30] <flakonium_tubes> not at all
[01:29:48] *** Joins: Nspace (~Nspace@user/nspace)
[01:29:52] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[01:29:53] <macaw> wuldor: Some hardcoding would not be. A lot would be. The poison is in the dosage.
[01:30:08] <pyzozord> id say hardcoding is avoided so much that people overengineer things by a lot
[01:30:10] <flakonium_tubes> recompiling can be annoying though
[01:30:23] <sonny> why do you even need to?
[01:30:27] <macaw> pyzo, agreed.
[01:30:32] <pyzozord> I like golang's slogan "little copy is better than little dependency"
[01:30:32] <flakonium_tubes> to change a value for game balancing
[01:30:39] <sonny> especially in such a high level language
[01:30:53] <sonny> that slogan is for a different reason
[01:31:01] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[01:31:10] <sonny> it was in response to third party dependency management
[01:31:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[01:31:37] *** Joins: JavaBean (~javabean@user/javabean)
[01:31:41] <wuldor> My issue is simply the headache of having to engineer every little thing, and I question heavily, why?
[01:31:55] <sonny> if you are just hacking, why not
[01:32:05] <sonny> but hey, all I do is talk about code lol
[01:32:16] <wuldor> I want to commercially ship this project eventually.
[01:32:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:32:30] <sonny> design, theory, engineering is for the birds
[01:32:32] <wuldor> So I'm trying to sort out good practice now.
[01:32:41] <sonny> I literally haven't coded anything yet lol
[01:32:46] <flakonium_tubes> not everything is black and white
[01:32:50] <flakonium_tubes> good vs evil
[01:32:56] <Hash> Well, things that are black and white are black and white
[01:33:01] <Hash> :D
[01:33:25] <pyzozord> id say almost nothing ever is
[01:33:27] <flakonium_tubes> not even,  you have on and off, but also there is an indeterminable state sometimes
[01:33:34] <sonny> flakonium_tubes, at this point I just wished I hacked everything instead
[01:33:51] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[01:33:55] <sonny> e.g. I am going to read part 2, but I will have not started on a compiler yet 
[01:34:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:34:30] <piou> pyzozord: factoring is a tool to reduce the risk of copying code (especially risks associated with later modifications) at the cost of some dependency. Copying is a tool to reduce dependency at the cost of costly modifications. I wouldn't trust a language or programming leaning too far in either side, each tool depends on its context.
[01:34:31] <DuckSeason> http://moar.edgecats.net/cats/dont_film_me.gif
[01:34:32] <bayaz> Type: image/gif Size: 27.5 MB 
[01:35:00] <piou> s/programming/programmer
[01:35:10] <wuldor> My biggest question is say I want to form an NPC, why not just give him his own c++ file? Is it really bad to hardcode and if so why? The only reason I can think to source this stuff out to a file is to make it easier for those who do not know c++ to add content.
[01:35:40] <wuldor> it would make it a lot less finicky to hack things onto him, that are specified to him.
[01:36:13] <flakonium_tubes> it's not bad, its annoying to fine tune
[01:36:20] <pyzozord> piou: fully agree, i just feel currently the fad is to overcompensate, so im trying to overcompensate for the overcompensation so we can be back in the middle
[01:36:33] <flakonium_tubes> mostly designers complain because they don't know how to operate a compiler
[01:37:30] <wuldor> I wouldn't even hire a designer unless they agreed to do a course on c++.
[01:37:34] *** Quits: tkob (tkob@shell.xshellz.com) (Ping timeout: 252 seconds)
[01:37:56] <wuldor> It's a little bit pathetic to be a "designer" of software when you can't even do basic programming operations.
[01:38:23] <juliaEnv> let's say you would join one of the biggest brands in the consulting industry.... Is it normal the projects you get allocated are run poorly, without at least the fundamental software engineering processes, and without following public standards?
[01:38:24] <DuckSeason> http://moar.edgecats.net/cats/Z1e3KCY.gif
[01:38:25] <bayaz> Type: image/gif Size: 1.1 MB 
[01:39:28] <piou> juliaEnv: without any sarcasm, that sounds just like one of the biggest brands in consulting history yes
[01:39:47] *** Joins: tkob (tkob@2607:5300:60:21b::1)
[01:39:57] <juliaEnv> piou it's one of the biggest brands in consulting present
[01:40:04] <piou> juliaEnv: still yes
[01:40:20] *** Quits: noircode (~Izem@137.220.53.172) (Ping timeout: 250 seconds)
[01:40:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 265 seconds)
[01:40:41] <sonny> why does the designer have to know c++?
[01:40:48] <sonny> just curious
[01:41:20] <arahael> Yeah, I'm also curious about that, too! :)
[01:41:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:42:10] <arahael> I've worked with *excellent* designers who didn't know any C++, infact, they were just considering "branching out" into a little bit of javascript. (Which is appropriate, given the web).
[01:42:10] *** Joins: nx_ (~nitronix@5.29.23.150)
[01:42:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:42:26] <piou> juliaEnv: typically the bigger you go the harder it is for anyone to have a sense of the whole project, lots of middlemen are added at lots of steps, meaning it's pretty much impossible for the left hand to talk to the right one, without even counting people playing politics in the middle, all of which leads to lots of ineficiencies, lack of general direction, and often poorly run projects. The
[01:42:32] <piou> thing is, they also have manpower and inertia so most projects will go through at some point, and it can even be quality, just don't expect any kind of agility in that process.
[01:42:40] <sonny> arahael: it just seems so unrelated
[01:42:57] <arahael> sonny: Indeed.
[01:43:07] <sonny> or I should say, separate concern
[01:43:19] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:43:24] <arahael> Extremely separate specialisation, even.
[01:43:48] *** Joins: mestre (~mestre@191.177.175.57)
[01:43:51] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:44:12] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-ad5a-d7d8-86d4-5dd6.res6.spectrum.com)
[01:44:43] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:44:51] <piou> juliaEnv: on the other hand, the smaller you go the more people know about the craft as a whole and the lack of middleman helps identifying possible efficiency defficiencies and producing custom solutions to address those specific issues or the problems of a specific customer. But smaller teams lack visibility, man-power, they're more fragile (if someone quits that impacts much more)...
[01:45:05] <juliaEnv> piou hmm, somehow everything I've observed so far was done without ever referring to any recognized structure, model, or process. In other words, things on projects seem to be done without any engineering, and without any science, simply done in ad-hoc manner, each time differently.
[01:45:05] <piou> juliaEnv: so, yes, what you describe is both common and expected
[01:45:58] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-bd3d-32f8-73a8-cd11.res6.spectrum.com) (Ping timeout: 265 seconds)
[01:46:05] <piou> juliaEnv: I wouldn't say it's everywhere the same, but I can say with confidence that it doesn't surprise me in the slightest and probably wouldn't surprise many consultants.
[01:46:21] <sonny> o.O
[01:46:22] <juliaEnv> and consulting I've observed is being done pseudoscientifically (everything is an opinion), not scientifically (no sw engineering or computer science materials are ever quoted or referred to, just opinions)
[01:46:53] *** Quits: mestre (~mestre@191.177.175.57) (Client Quit)
[01:46:56] *** Joins: whatsupdoc (~whatsupdo@148.64.18.230)
[01:47:03] <whatsupdoc> Best place to get Outlook help?
[01:47:09] <piou> Yeah, opinions are generally given much importance under the guise of expertise
[01:47:15] <sonny> m$
[01:47:18] <flakonium_tubes> the microsoft irc server
[01:47:56] <whatsupdoc> Where is it hosted?
[01:48:08] <flakonium_tubes> irc.microsoft.com
[01:48:12] <flakonium_tubes> maybe
[01:48:16] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[01:48:20] <sonny> on that note, I dislike that there are so few os books about windows nt, but that's the nature of a propriertary system
[01:48:48] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[01:49:04] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[01:49:06] <juliaEnv> piou it kind of feels like everything is wrong and failing, except that people get paid big money for (invalid) opinions
[01:49:26] *** Joins: Guest735 (~Guest7@148.64.18.230)
[01:49:29] <piou> juliaEnv: you know, many projects are justified just by how much they cost
[01:49:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:50:34] *** Joins: mestre (~mestre@191.177.175.57)
[01:50:46] <juliaEnv> piou a bit shocking, to say the least. Obviously, some huge projects are approached without at least following the fundamentals that everybody learns when studying cs/sw eng, and there is nothing you can do to fix it.
[01:51:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:51:11] <piou> juliaEnv: it's especially true since budgets work by layers in big companies: the tech might realize that the project is rubbish, but his manager decides of the budget, and for anything above $10k that his manager, and for $100k that's the big boss's right hand, and the big bosses right hand couldn't be more removed from the tech realities.
[01:51:13] *** Quits: Guest735 (~Guest7@148.64.18.230) (Client Quit)
[01:51:40] <piou> juliaEnv: sorry, you can try changing it but inertia is pretty much the hallmark of big firms so I'd just recommend trying a smaller company next time and you may have better luck. In the meantime enjoy the many advantages you get in big companies (as I hope you can)
[01:51:42] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:583f:addf:6026:5042) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:46] <juliaEnv> piou in fact, you have to do it wrong or else you'd be arguging about the approach which is a reason to immediately fire you, I believe
[01:52:02] *** Joins: tryless (~tryless@213.128.163.221)
[01:52:51] <piou> juliaEnv: I mean, it's your job to discuss the issues if issues present themselves, but it's also your boss's job to make the final decision and if that implies doing things his way and not yours, then that's your job now.
[01:53:02] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.3)
[01:53:28] <whatsupdoc> irc.microsoft.com doesn't work
[01:53:34] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 252 seconds)
[01:53:38] <flakonium_tubes> it was worth a try at least
[01:54:49] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:55:22] <piou> juliaEnv: and I don't want to hit on bosses too hard there, I've seen how things go without proper management and direction and it's not pretty, having someone in charge taking responsability is useful. But just like any other job it can be done poorly.
[01:55:51] <piou> Anyway, gotta sleep, bye people of the internet
[01:56:39] <sonny> cya
[01:56:42] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Quit: Leaving)
[01:57:09] <juliaEnv> piou basically, I have not met anyone yet there who would do anything using a recognized engineering approach. All is done ad-hoc, meaning uniquely, and unsystematically, and without being able to measure it, and it's neither engineering nor science, it's just like a bunch of people making very weird approximations without the right inputs, without the right processes, and without the right outputs. And there are always 
[01:57:09] <juliaEnv> multiple big consulting companies involved, and that makes it messier than if one company did everything.
[01:57:23] <juliaEnv> OK, gn, thanks for sharing your experience
[01:57:34] <sonny> there isn't any engineering to begin with
[01:57:35] <juliaEnv> my hypothesis is that the lack of quality has to do with the region
[01:57:50] <juliaEnv> there is all engineering in some regions and some business verticals
[01:58:21] <juliaEnv> I've personally done it well in the UK before (western europe region) in some companies
[01:58:24] <sonny> engineering is pretty specific
[01:58:32] <sonny> protected title here
[01:58:52] <juliaEnv> an example of engineering is Sommerville
[01:59:39] <sonny> but as an adjective, I guess that's another story
[01:59:46] <juliaEnv> the protected title that requires licensing is in some parts of the world, and it involves doing an equivalent of the IEEE CSDP to pass the license
[01:59:55] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[02:00:09] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[02:00:18] *** Quits: humanface (~humanface@20014C4E1C412600D1E027D047FD27D2.dsl.pool.telekom.hu) (Quit: Client closed)
[02:00:33] <sonny> software world just isn't serious yet
[02:01:00] <sonny> but it's also like 60 years old?
[02:01:12] <sonny> so understandable
[02:01:25] <flakonium_tubes> 80ish
[02:01:40] <sonny> oh ok
[02:01:52] <arahael> juliaEnv: Yeah.  I used to have a membership card to be part of my countries "engineers", but literally nobody ever asked for that... In more than 12 years.  So I stopped paying the membership many years ago.
[02:02:03] <sonny> lol
[02:02:05] *** Joins: cuppajoeman (uid521943@hampstead.irccloud.com)
[02:02:38] <juliaEnv> the engineering approaches are basically specific, well-defined processes that are systematic, disciplined, and quantifiable. One example is the unified process. It covers an entire life cycle. Another example is for example the 4+1 view approach for architecture design, or the model-driven engineering approach to transform a domain model into platform-dependent code, or a service engineering approach to engineer a 
[02:02:38] <juliaEnv> distributed service-oriented architecture
[02:02:52] <arahael> More rigour would be good, though, but the bigger issue is how software projects are managed, and they aren't managed by engineers.
[02:02:58] <arahael> (Often)
[02:03:18] <wuldor>  sonny: arahael: Why should they not know C++? Structural logic is vital for good design and a knowledge of C++ would be extremely healthy. Why would a person with no programming ability be more qualified than me to do design on my project when I have knowledge in managing structural complexity from programming and symbolic sigilcraft from occult study, of which is highly mechanised and systematic 
[02:03:24] <wuldor> and requires extreme systematic clarity that programming improves. I do not buy this concept of someone being a "designer" and someone a "programmer", if somebody is to be a designer they should strive for excellent form. I would give them 6 months of C++ paired with study of symbolism, tarot, theosophic colour and archetypes. They don't even need to be great at C++, it is simply the enhanced 
[02:03:30] <wuldor> linguistic structuralization of ideaspace and archetypes that come with a procedural thought system which is what C++ is very good at. I don't care for a designer that has no advanced understanding of encapsulation. That would be absurd. The same reason that all musicians of any type should know counterpoint even if they do not wish to persue classical music. It is a formalization of higher cognitive 
[02:03:36] <wuldor> function and I find designers lazy. I am an occultist and artist and a programmer second, I see design and I do not often see something inspired and I know that sounds arrogant but whatever.
[02:03:52] <arahael> wuldor: You're confusing design of your application code, with that of your application's user experience and presentation.
[02:04:32] <wuldor> arawhael: No I am not.
[02:04:48] <CaCode> occult study? care to go into detail?
[02:04:52] <arahael> wuldor: In that case, we may simply disagree, then.  In my view, they're very different.
[02:04:54] <juliaEnv> there are reference designs for everything, wuldor. We can't beat those unless we done design science research and invent something that doesn't exist in the world, yet. Most design is basically a copy (often a bad copy) of a reference model.
[02:05:18] <CaCode> wuldor occult study as in rosemary's baby ocultism?
[02:05:44] <sonny> a pianist is not going to design a piano
[02:05:53] <arahael> ^^ Excellent example.
[02:06:00] <wuldor> I would hold each designer to a high standard, the majority of design weakened, there are very deep systems that require a systematic mind to employ. If a designer cannot program divination software and then divine from it he is a weak artist and it would be worthless to hire him.
[02:06:03] <sonny> or make it, it's just a separate concern
[02:06:10] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:06:10] <wuldor> That is an incompatible analogy.
[02:06:45] <sonny> the piano maker can design the look and feel of the piano himself, or he can hire someone else
[02:07:08] *** Joins: Nspace (~Nspace@user/nspace)
[02:07:14] <sonny> then he can make the actual piano, which the performer will play on
[02:07:15] <juliaEnv> objectively, even artistic visual designs have all existing styles cataloged and whatever you try to come up with has already been done before. And if you wanted to invent a new design that the world hasn't seen yet, you'd have to do a design science research and discover what you want to do exists, and then improve the state of the art in some way. (so you'd extend what already exists in 2021)
[02:07:16] <DuckSeason> http://moar.edgecats.net/cats/5OXfA.gif
[02:07:16] <bayaz> Type: image/gif Size: 1.9 MB 
[02:07:24] <wuldor> CaCode: Mostly Golden Dawn systematic associations, these are lists of correspondence that must be memorized of which formalize streams of creative thought and vision, there is a colour system tied into it.
[02:07:31] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:08:07] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[02:08:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[02:09:15] <sonny> I agree with juliaEnv
[02:09:17] <wuldor> As the grand architect of the arte, it would be futile to have anyone employed as a "designer" who would not undergo vigorous training, they could be subjected simply to "artists" pulling out the symbolic formalization of the current I present them but for them to try to design with such a mundane source as "design" and not occultism would be a weakening.
[02:09:22] <juliaEnv> do you think a big company, for example Microsoft or Pivotal, has high quality software engineering processes in place?
[02:09:49] <sonny> do we even have any?
[02:10:01] <sonny> that's kinda what I wanted to ask earlier
[02:10:26] <sonny> also, it seems that you would really like this book http://www.knosof.co.uk/ESEUR/
[02:10:27] <bayaz> Title: Evidence-based Software Engineering: based on the publicly available data 
[02:10:32] *** Quits: jtgd (~jay@user/jtgd) (Read error: Connection reset by peer)
[02:11:13] *** Quits: tryless (~tryless@213.128.163.221) (Ping timeout: 250 seconds)
[02:11:25] <sonny> I'm just playing devils advocate, I don't actually no anything
[02:11:26] <wuldor> A real architect of a system models what they wish to understand, if they cannot model in precise language as code is then they cannot be trusted to undertake such modelling in their minds in a complex way. It is quite simple really. They may be knowledgable in some area but skipping procedural language because you are a "designer" is weak.
[02:11:31] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-fd8f-048a-9cf2-e21e.res6.spectrum.com) (Quit: Leaving.)
[02:11:31] <sonny> s/no/know/
[02:11:36] <sonny> I did cs, not swe
[02:11:40] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[02:11:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:12:07] <sonny> nope again
[02:12:20] <sonny> architects don't make buildings
[02:12:32] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:33] <wuldor> juliaEnv: A big company like microsoft is hardly an epicenter of artistic force.
[02:12:45] <dTal> it used to be
[02:12:47] <wuldor> It is corporate and systemized and grey.
[02:12:54] <dTal> wordart was the shit
[02:13:37] <wuldor> The point is simple, why hire someone weaker than myself? I want a designer to surpass me and without an equilibrium of understanding that are weak in their scope of inspiration.
[02:13:52] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 252 seconds)
[02:14:02] *** Joins: jtgd (~jay@user/jtgd)
[02:14:06] <sonny> you can sure
[02:14:15] <flakonium_tubes> you have to compensate them adequately for their skills
[02:14:29] <juliaEnv> sonny evidence-based is not science-based. It typically means less than scientific approach. Do they follow the hypothethico deductive scientific method in the book? Or do they merely compile opiniated prescriptions from case studies and other similar data that worked in the past? (science explains the why, as in why something works, prescriptions don't explain why it worked, they merely prescribe and give "evidence" that 
[02:14:29] <juliaEnv> isn't scientific/experimental, but is anecdotal)
[02:14:56] <sonny> yeah this guy is pretty hardcore
[02:15:01] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:15:22] <sonny> this is the only research like this in the field, it's why he did it
[02:16:35] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[02:16:52] <juliaEnv> sonny thanks, I'll take a look. Here is my personal favorite: https://www.amazon.com/Software-Engineering-10th-Ian-Sommerville/dp/0133943038 Sommerville does an excellent job explaining many software engineering concepts and approaches. When you have a project to do, you can apply approaches (meaning exact, well defined step by step processes) from the book to get your project done using engineering.
[02:17:06] <sonny> you can hire a renaissance man, but it will require renaissance prices ;)
[02:17:19] <wuldor> no it wont.
[02:17:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:17:24] <wuldor> There's a simple solution.
[02:17:29] <wuldor> Have lots of children.
[02:17:33] <wuldor> Homeschool them
[02:17:36] <wuldor> exploit them
[02:17:39] <wuldor> ...
[02:17:42] <wuldor> profit
[02:17:49] <sonny> nah, homeschool won't work
[02:18:02] *** Quits: whatsupdoc (~whatsupdo@148.64.18.230) (Quit: Client closed)
[02:18:08] <sonny> private education obviously 
[02:18:32] <Decker> you don't find it unethical to ... what do they call it
[02:18:55] <sonny> lmao
[02:19:11] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 265 seconds)
[02:19:11] <Decker> uhmm I forget the word... 
[02:19:19] <flakonium_tubes> farming?
[02:19:21] <juliaEnv> not that I want to participate in anything subjective. Objectively, investment management is required to multiply money. Instead of leaving money sitting on a bank account, money needs to be invested into something with a low risk and high return (high ROI), so that automatically, every month you'll have more money.
[02:19:33] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[02:19:41] <Decker> kinda like farm
[02:19:48] <wuldor> private eduction is not necessary. Children need to be encouraged to explore and create things.
[02:19:53] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-3882-8296-aad6-55bf.res6.spectrum.com)
[02:19:55] <flakonium_tubes> its exactly like farming (pre-tractor era)
[02:20:20] <wuldor> All you need is a home library with books on architecture and the likes and encoragement to persue artistry.
[02:20:35] <wuldor> Limiting outlets of distraction is also overpowered.
[02:21:15] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[02:21:19] <wuldor> No TV, no games, no internet: just books, paper, a UNIX box, paints, pens, pencils and then they have to find fun.
[02:21:34] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 252 seconds)
[02:21:49] *** Joins: mestre (~mestre@191.177.175.57)
[02:22:32] <wuldor> feed them on bowls of peas and don't expose them to reality then you have a farm of solid workers on the absolute minimum cost.
[02:22:35] <Decker> grooming
[02:22:38] <flakonium_tubes> then you collect your government check to NOT grow any soybeans beacuse it might affect regional prices too much
[02:22:51] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[02:23:39] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[02:23:48] <wuldor> Decker: Nah, that's called setting them up properly with a tribal identity unlike what the education system does.
[02:24:30] <wuldor> Children should be raised as shareholders in a family corporation and bank.
[02:24:31] <Decker> haha 
[02:24:41] <wuldor> That's how the powerful families got where they did.
[02:24:51] <Decker> but that's still appling a label to them they didn't apply themselves
[02:24:52] *** Quits: LjL (~ljl@user/ljl) (Ping timeout: 252 seconds)
[02:25:05] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[02:25:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:03] <wuldor> individualist parenting methods, ouch.
[02:27:35] <wuldor> that's called being a bad parent : )
[02:27:44] <Decker> haha
[02:27:49] <Decker> touche
[02:28:09] <juliaEnv> sonny I've skimmed the first few pages of the book you've posted and I disagree with pretty much everything it claims. He should first study software engineering (i.e. Sommerville https://www.amazon.com/Software-Engineering-10th-Ian-Sommerville/dp/0133943038 ) and practice its key concepts, perhaps even get IEEE CSDP certified and master the SWEBOK https://cs.fit.edu/~kgallagher/Schtick/Serious/SWEBOKv3.pdf 
[02:28:10] <bayaz> Type: application/pdf Size: 6.9 MB 
[02:29:10] <flakonium_tubes> lol IEEE
[02:29:11] <juliaEnv> sonny the book author doesn't seem to refer to the software engineering defined by the IEEE and taught by Sommerville, but he refers to development (without neccessarily applying any engineering approach)
[02:29:33] <flakonium_tubes> those guys that make the useless website which displays only a white page. real top notch engineers /s
[02:29:44] <wuldor> Decker: >Giving children a renaissance education and encouraging them to persue whatever interests them as a mutual cooperation of a family unit is bad parenting
[02:29:48] <wuldor> Hahahahahahahahahahaha
[02:29:59] <juliaEnv> it took me several years of PhD study to truly find out what software engineering is all about (as described by Sommerville and IEEE)
[02:30:06] *** Joins: tryless (~tryless@213.128.163.221)
[02:30:06] <wuldor> The state of men these days.
[02:30:28] <CaCode> juliaEnv: what is software engineering all about?
[02:30:48] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[02:30:50] <CaCode> If you had to sum it up i mean
[02:31:39] <Decker> no grooming them to fit a mold of your family unit is
[02:31:51] <juliaEnv> CaCode it's all about problem-solving using processes that are described in the software engineering book by Sommerville. So, your problem-solving will be exactly step-by-step process-driven.
[02:32:13] <wuldor> raising your children to be model people is the entire purpose of parenting and has been throughout all of history.
[02:32:23] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:cced:c365:caec:cb99)
[02:32:44] <wuldor> But sending them to be molded by the state is somehow great parenting.
[02:32:53] <juliaEnv> CaCode those processes started being well-defined and exactly applied in 1968
[02:32:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:32:58] <Decker> that's not the premise of this... it was 'train them to be competant software engineers because I can't find any'
[02:33:25] <CaCode> juliaEnv: I see, so you apply a set of proven and well defined aproaches to whatever problem you have at hand
[02:33:33] <wuldor> No, it was to raise them to be designers so that they can persue their artistic and creative vision in the aid of a collective family unit. Haha
[02:33:41] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 265 seconds)
[02:33:56] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:34:00] *** Joins: pizdets_ (~pizdets@183.182.110.80)
[02:34:03] *** Quits: emf (~emf@2620:10d:c090:400::5:a45e) (Quit: emf)
[02:34:13] <wuldor> That is a gift.
[02:34:17] *** Quits: kariosfox (~kariosfox@176.221.125.161) (Remote host closed the connection)
[02:34:18] *** Quits: pizdets (~pizdets@183.182.115.176) (Ping timeout: 265 seconds)
[02:34:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Client Quit)
[02:34:32] <juliaEnv> CaCode yes. And the "no silver bullet" rule means that one process doesn't fit all projects. So, if you have a project to develop microservices, for example, you want to use the Service Engineering approach described by Sommerville
[02:35:25] *** Joins: LjL (~ljl@user/ljl)
[02:35:47] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-101F-static.midco.net) (Quit: Leaving)
[02:35:52] <juliaEnv> CaCode if you have a component-based project (meaning it's not gonna expose services via the network), you may want to use the component-based engineering approach (it defines step by step how to transform requirements into interfaces, and interfaces into components made of one or more classes)
[02:35:57] *** Joins: quazimodo (~quazimodo@n1-41-179-164.bla2.nsw.optusnet.com.au)
[02:35:58] *** Joins: quazimod1 (~quazimodo@n1-41-179-164.bla2.nsw.optusnet.com.au)
[02:36:54] *** Joins: emf (~emf@2620:10d:c090:400::5:a45e)
[02:37:10] <juliaEnv> CaCode if you have a real-time, embedded project you may want to use the relevant engineering step-by-step approach for it from Sommerville (it's a different one from the other projects. It has an extensive validation and verification)
[02:39:33] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:39:50] <juliaEnv> there is also a Web Engineering approach. It takes you step-by-step through the process of turning requirements into a website. It's, like the other engineering processes, systematic, disciplined, quantifiable. So you approach everything step by step, in the prescribed order, without skipping any steps, and you can measure the number of input items and the number of output items, for example. It's highly efficient, so 
[02:39:50] <juliaEnv> things are well done without jumping back and forth, and without rework, and without not knowing how far we are. (sorry if I flooded this chat too much. I love sw engineering.)
[02:39:58] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 265 seconds)
[02:41:17] <CaCode> interesting, i had no idea just how systematic swe aproached this
[02:42:20] *** Joins: swistak (~swistak@185.21.216.141)
[02:42:21] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[02:42:24] *** Quits: wuldor (~supermumm@84.66.236.214) (Quit: Lost terminal)
[02:42:58] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[02:43:52] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:44:02] <juliaEnv> an approach is synonymously called a process which is synonymous with a business process / workflow / procedure / steps / step-by-step guideline (it all means the same). If you get this one book: https://www.amazon.com/Software-Engineering-10th-Ian-Sommerville/dp/0133943038 you'll be able to open a relevant chapter/section to read about the relevant approach/process that you can apply. It includes also advanced software 
[02:44:02] <juliaEnv> engineering approaches incl. distributed systems such as Service Engineering and various other. 
[02:44:17] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:45:09] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[02:46:02] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:583f:addf:6026:5042)
[02:47:59] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[02:48:09] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[02:48:22] *** Joins: mestre (~mestre@191.177.175.57)
[02:50:07] *** Quits: tryless (~tryless@213.128.163.221) (Ping timeout: 265 seconds)
[02:50:35] *** Joins: pulse (~pulse@user/pulse)
[02:50:51] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[02:51:17] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:52:16] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:55:44] *** Joins: tuorrebout (~langstme@user/langstme)
[02:58:17] *** Quits: langstme (~langstme@user/langstme) (Ping timeout: 264 seconds)
[02:59:41] *** Joins: tryless (~tryless@213.128.163.221)
[02:59:49] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:00:03] *** Quits: tryless (~tryless@213.128.163.221) (Read error: Connection reset by peer)
[03:01:21] *** Joins: CodePoint_ (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:03:02] <juliaEnv> if you truly want to experiment with sw engineering, the first process you'll master is requirements engineering. Here is an open source tool that includes requirement traceability. This tool will make it so much easier: https://sourceforge.net/projects/osrmt/ An alternative would be JIRA (there is a free licence if you're up to 10 users), but you'd have to install addons (also free) and enable Confluence (also free) and 
[03:03:02] <juliaEnv> you'll need some modeling tool as well (draw.io or enterprise architect or visual paradigm), and some CI/CD, ideally Git too, and something to write user documentation in, and more or less than you're ready to master the engineering processes.  Most advanced is then using also Service Management / ITIL and ServiceNow, and ISO9001, and ISO27001, and CMMI. The last bit you'll need is to find a reference model of the exact 
[03:03:02] <juliaEnv> category of a system that you're trying to build, so that you will no longer have to reinvent the wheel. You will 100% reuse an existing terminology and existing names of components, and often you will also be able to reuse the whole domain model (all entities), for example https://github.com/Microsoft/CDM
[03:03:03] <bayaz> Title: Open Source Requirements Management Tool 
[03:03:03] <bayaz> Title: GitHub - microsoft/CDM: The Common Data Model (CDM) is a standard and extensible collection of schemas (entities, attributes, relationships) that represents business concepts and activities with well-defined semantics, to facilitate data interope…
[03:04:15] <flakonium_tubes> i think i'll stick with pen/paper
[03:04:16] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:cced:c365:caec:cb99) (Ping timeout: 245 seconds)
[03:05:02] <juliaEnv> there are often also business processes defined, so that each business activity in a process process can be implemented as an interface + one or more classes (an encapsulated component).
[03:05:19] *** Quits: CMDR_Kaiser (~CMDR_Kais@190.237.88.66) (Remote host closed the connection)
[03:05:21] <juliaEnv> apologies for the typos or misspelling, I'm going to bad :)
[03:05:32] *** Quits: jtgd (~jay@user/jtgd) (Remote host closed the connection)
[03:06:21] *** Quits: CodePoint_ (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint_)
[03:06:58] <juliaEnv> s/bad/bed/
[03:07:21] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-213.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[03:08:06] *** Joins: jtgd (~jay@user/jtgd)
[03:08:45] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:10:13] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[03:10:28] *** Joins: mestre (~mestre@191.177.175.57)
[03:11:52] *** Quits: zaher (~zaher@37.48.154.89) (Ping timeout: 265 seconds)
[03:12:17] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:19:00] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:19:55] *** Joins: whatsupdoc (~whatsupdo@148.64.18.230)
[03:20:22] *** Joins: INeedAHandle (~INeedAHan@211.192.133.205)
[03:24:31] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[03:25:12] *** Quits: raczka1 (~raczka@dedicated-aid6.rev.nazwa.pl) (Ping timeout: 250 seconds)
[03:25:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:25:19] *** Quits: Kharon (uid511277@user/cypris) (Quit: Connection closed for inactivity)
[03:25:48] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[03:27:10] *** Joins: raczka1 (~raczka@dedicated-aid6.rev.nazwa.pl)
[03:27:16] *** Joins: horseface (~horseface@user/horseface)
[03:29:18] *** Joins: Nspace (~Nspace@user/nspace)
[03:29:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-142e-facc-6ddb-8c11.res6.spectrum.com)
[03:31:12] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[03:31:46] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-ad5a-d7d8-86d4-5dd6.res6.spectrum.com) (Ping timeout: 260 seconds)
[03:33:03] *** Joins: quartz (~quartz@user/quartz)
[03:33:21] *** Joins: analbleeding (6bbd1e16@67.205.143.82)
[03:38:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:40:24] *** Joins: jazzy2 (~jaziz@user/jaziz)
[03:41:53] *** Quits: jazzy2 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[03:42:27] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[03:43:06] *** Joins: jazzy (~jaziz@user/jaziz)
[03:43:42] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[03:44:06] *** analbleeding is now known as 020AAH5RV
[03:45:01] *** jazzy is now known as jazz-o-lantern
[03:46:17] *** 020AAH5RV is now known as turd
[03:47:25] *** turd is now known as penilestent
[03:47:26] *** Quits: dan01 (~dan01@84.117.188.145) (Read error: Connection reset by peer)
[03:50:44] *** Joins: tiny (~tiny@171.121.42.216)
[03:51:50] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 260 seconds)
[03:54:07] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:55:37] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 252 seconds)
[03:56:11] *** Quits: penilestent (6bbd1e16@67.205.143.82) (K-Lined)
[03:57:32] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Remote host closed the connection)
[03:57:55] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[03:59:18] *** Quits: emf (~emf@2620:10d:c090:400::5:a45e) (Quit: emf)
[04:03:00] *** Joins: jamea (~jamea@177.239.93.210)
[04:03:05] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:583f:addf:6026:5042) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:03:30] *** Quits: LuKaRo (~LuKaRo@p4fc3226e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:04:06] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:dd48:1c77:fa63:9a2d)
[04:04:54] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:04:58] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[04:06:49] *** Joins: LuKaRo (~LuKaRo@p57b15e22.dip0.t-ipconnect.de)
[04:09:31] *** Joins: micrex22 (~quassel@user/micrex22)
[04:09:31] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 265 seconds)
[04:09:49] *** Joins: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655)
[04:09:53] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 246 seconds)
[04:10:10] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 260 seconds)
[04:11:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[04:12:27] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:12:48] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[04:13:01] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[04:14:13] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-04cc-b6ed-267b-4319.res6.spectrum.com)
[04:14:27] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[04:14:42] *** Quits: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655) (Ping timeout: 260 seconds)
[04:15:34] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:17:40] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-142e-facc-6ddb-8c11.res6.spectrum.com) (Ping timeout: 252 seconds)
[04:20:05] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945) (Ping timeout: 260 seconds)
[04:23:08] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[04:23:37] *** Quits: federico (~federico@176.206.87.127) (Quit: WeeChat 3.0)
[04:25:00] <sonny> ah, missed them
[04:25:24] <[itchyjunk]> I have platued i feel like.
[04:25:45] <flakonium_tubes> yeah me too, you haven't done any hello worlds in over a week
[04:25:47] <[itchyjunk]> It feeled like i was learning this and that initially, now i don't feel like i have learned anything
[04:25:51] <sonny> I wonder how they can dismiss it so quickly since it gave data and an analysis, that would take some time I think
[04:25:59] <sonny> I too have reached that stage
[04:26:03] <[itchyjunk]> i am supposed to be doing one, maybe i'll do it tomorrow
[04:26:04] <sonny> I feel stuck
[04:26:09] <[itchyjunk]> i wanted to do a neural network hello world
[04:26:22] <[itchyjunk]> i need to find someone willing to spoon feed me for it :<
[04:26:49] <sonny> what's the relationship between NN and ocr?
[04:26:58] <sonny> or does ocr use computer vision?
[04:27:07] <flakonium_tubes> AI salesman can relate NN to anything
[04:27:13] <[itchyjunk]> hmm ocr uses computer vision
[04:27:18] <[itchyjunk]> which is machine learning i guess?
[04:27:23] <sonny> no idea
[04:27:37] <[itchyjunk]> I wanted to make a basic NN to approximate a XOR function
[04:27:53] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[04:28:16] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[04:28:23] <sonny> interesting
[04:28:31] <sonny> what does it take as input?
[04:28:38] <PlanckWalk> Some computer vision systems use machine learning
[04:28:45] <sonny> ah, ty
[04:28:47] <PlanckWalk> Probably most of the best ones do
[04:28:48] <flakonium_tubes> it takes an audio file /s
[04:29:39] <[itchyjunk]> it take (1,0),(0,1),(0,0) and (1,1) as input
[04:30:05] <[itchyjunk]> returns 1 for first two and 0 for the last two
[04:30:13] <[itchyjunk]> i think i can figure out the feedforward part
[04:30:22] <sonny> NN is the one that is the blackbox right?
[04:30:24] <[itchyjunk]> i would just need spoon feeding for the backprop part
[04:30:44] <[itchyjunk]> people call AI models blackbox. 
[04:30:50] <sonny> ok
[04:30:52] <[itchyjunk]> I am not sure if it's all NN's that's blackbox
[04:31:12] <[itchyjunk]> i would imagine they do probably mean NN's mostly
[04:31:30] <[itchyjunk]> i assume random forests and such are more err w/e the word is
[04:32:41] <PlanckWalk> Most NNs are pretty much blackbox.  I mean, yes you can "look in the box", but it's pretty murky in there.
[04:33:07] <PlanckWalk> That said, a XOR-learning NN is probably simple enough that you can figure out what it's doing.
[04:33:22] <flakonium_tubes> isn't the backpropagation just applying some math formula?
[04:33:27] *** Joins: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655)
[04:33:35] <PlanckWalk> Unless you do it with 100+ parameters or something :)
[04:33:36] <flakonium_tubes> should be straigh forward enough
[04:34:03] <sonny> so there is some polynomial that can do this?
[04:34:15] <sonny> I just guess polynomial, it could be anything
[04:34:16] *** Quits: CaCode (~user@user/cacode) (Ping timeout: 245 seconds)
[04:34:44] <sonny> my hunch is that it will be a polynomial
[04:35:14] *** Quits: xff0x (~xff0x@2001:1a81:538c:f300:a5c4:ad00:4a33:e2f4) (Ping timeout: 260 seconds)
[04:35:36] <flakonium_tubes> set up a simple test case that you can work out on paper and start there
[04:36:37] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:98c3:6174:8ff5:a406)
[04:36:48] *** Joins: xff0x (~xff0x@2001:1a81:53cb:ff00:da98:35c:1f74:ca19)
[04:37:23] <PlanckWalk> NNs usually don't implement polynomials
[04:37:32] <flakonium_tubes> personally not my taste though, NN is too brute force and dare i say dumb
[04:38:22] <PlanckWalk> It is, but more effective than every "smarter" idea so far.
[04:38:44] <flakonium_tubes> it is well rounded at least
[04:38:57] <pulse> you mean it's better than 10000 ifs?
[04:40:08] *** Joins: idkfa (~idkfa@user/idkfa)
[04:40:12] <sonny> just seems like you have two inputs j, k and you need a result that is 1 or 0. 0 <= j <= k <= 1
[04:40:42] <sonny> can start guessing with a system of equations
[04:40:52] <sonny> or solving I guess
[04:42:16] <sonny> maybe we can use NNs to figure out if programs are invertible 
[04:44:01] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[04:46:33] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Quit: Client closed)
[04:46:39] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[04:48:32] *** Parts: idkfa (~idkfa@user/idkfa) (Leaving)
[04:53:12] *** bkool is now known as BOOkl
[04:54:24] <[itchyjunk]> flakonium_tubes> isn't the backpropagation just applying some math formula?
[04:54:40] <[itchyjunk]> Since i am new at programming (and math in some sad way), i get stuck with it
[04:54:50] <[itchyjunk]> but yes, it's some formula and all i would need to do is apply it
[04:55:13] <flakonium_tubes> the big E symbol confused me for a while
[04:55:28] <flakonium_tubes> basically translates to "for loop"
[04:56:21] <[itchyjunk]> well, i just finished my exercises.. array stuff and junit test
[04:56:33] <[itchyjunk]> i suppose i can poke at my NN now or tomorrow
[04:57:03] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:57:38] <flakonium_tubes> the key really is being motivated enough to complete the exercise
[04:58:13] <flakonium_tubes> if it's just a math thing to decide what bits to flip,  yeah thats tough to get motivated
[04:59:10] *** Joins: MickOfRivia (~Thunderbi@94.252.38.56)
[04:59:21] *** Joins: gggpkm (~gggpkm@60.10.194.44)
[04:59:29] <[itchyjunk]> hmm i am somewhat motivated, i just have issue focusing sometimes
[05:04:43] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:05:22] * [itchyjunk] stares at code and can't figure out what was supposed to be going on
[05:05:26] * [itchyjunk] refactors
[05:05:31] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:06:04] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:06:04] *** brabrax_ is now known as brabrax
[05:06:29] *** Joins: vaginaldischarge (b9dc66fb@67.205.143.82)
[05:07:02] <amigojapan> [itchyjunk]: don't forget commenting your code is also so you don't forget yourself what it does
[05:07:08] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:07:21] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[05:08:15] <vaginaldischarge> amigojapan: how are you?
[05:08:49] <amigojapan> Hi vaginaldischarge what's up with that yucky nick
[05:09:09] <vaginaldischarge> what do you mean?
[05:09:15] <[itchyjunk]> i have some comment but i still am struggling a bit
[05:09:50] <amigojapan> [itchyjunk]: you probably need to comment every line then
[05:10:12] *** Joins: cn-j (~cn-j@user/cn-j)
[05:10:37] <[itchyjunk]> PlanckWalk, each "input" gets computed through and back prop'ed before the next input right?
[05:11:00] <[itchyjunk]> my input layer has 2 neuron so for (1,0), 1 gets passed to first and 0 to the second
[05:11:04] <[itchyjunk]> then dot product
[05:11:09] *** Joins: gggpkm_ (~gggpkm@60.10.23.168)
[05:11:11] <[itchyjunk]> then hidden layer stuff etc?
[05:12:13] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 265 seconds)
[05:12:22] *** Quits: whatsupdoc (~whatsupdo@148.64.18.230) (Quit: Client closed)
[05:12:24] <flakonium_tubes> dot product so slow though
[05:12:43] <[itchyjunk]> is it?
[05:12:48] <[itchyjunk]> just multiplication and addition
[05:13:37] <amigojapan> [itchyjunk]: now you are doing neutral networks? That is like rocket science compared to sprite based games
[05:13:43] <flakonium_tubes> on my cpu, haven't looked at instruction counts on newer stuff
[05:13:49] <flakonium_tubes> clock sycles
[05:14:19] *** Quits: gggpkm (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[05:14:58] <flakonium_tubes> don't forget the -msse on that one
[05:18:30] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[05:20:11] <[itchyjunk]> amigojapan, this one is not for class
[05:20:20] <[itchyjunk]> this one is for myself, i walways wanted to do a NN hello world
[05:20:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[05:20:46] *** Joins: giacomo-c (~giacomo@107.13.177.67)
[05:20:58] *** Quits: giacomo (giacomo@gateway/vpn/protonvpn/giacomo) (Ping timeout: 260 seconds)
[05:21:13] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[05:21:29] <amigojapan> [itchyjunk]: better understand sprite based games before you attempt neural networks
[05:21:39] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[05:21:52] <[itchyjunk]> amigojapan, that game is a class project. i'll get to it 
[05:21:57] <amigojapan> [itchyjunk]: sprite based games is child play
[05:22:03] <[itchyjunk]> just want to do a simple hello world in NN
[05:22:19] *** Quits: MickOfRivia (~Thunderbi@94.252.38.56) (Quit: MickOfRivia)
[05:22:31] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) ()
[05:22:41] <vdamewood> I played with sprite-based games when I was a child.
[05:22:45] <amigojapan> [itchyjunk]: what do you mean by hello work in neutral networks?
[05:23:38] <amigojapan> Nice vdamewood 
[05:23:43] <[itchyjunk]> amigojapan, simplest possible neural network
[05:24:00] <amigojapan> vdamewood: I mean in comparison to a neutral network
[05:24:11] <amigojapan> Ah ok [itchyjunk] 
[05:24:22] <vdamewood> amigojapan: I was just being silly. I had an NES and an SNES as a child.
[05:24:47] <vdamewood> (Though, now that I think about it, I did start working on games with sprite-based graphics as a kid.)
[05:25:16] *** Quits: horseface (~horseface@user/horseface) (Ping timeout: 252 seconds)
[05:25:31] <amigojapan> vdamewood: when I was 8 years old I played with the logo programming language
[05:25:42] <Sqaure> Neural networks scare me. The idea of optimizing neural networks instead of caressing your domain model would bore me to death. 
[05:26:16] <vdamewood> amigojapan: If LOGO were a pokemon, you would move s squirtle (zenigame) around the screen.
[05:26:35] * [itchyjunk] bangs head against wall
[05:26:43] * vdamewood bangs [itchyjunk] head against the wall too.
[05:27:12] <amigojapan> Lol vdamewood 
[05:29:06] *** moose`` is now known as moose
[05:29:29] <Sqaure> Anyone working on Neural networks? How is it?
[05:29:43] <vdamewood> Man, it sucks that whenever I ask a question no one answers.
[05:30:11] <vdamewood> (Well, not really 'whenever', there are often times when I get an answer.)
[05:30:12] <amigojapan> Sqaure: I recommend open vino for beginner level neutral networks
[05:30:39] <[itchyjunk]> Do i need activation functions for hidden layers too?
[05:30:42] <vdamewood> But it seems like every once in a while, I'll run into a real doozie of a problem, and no one can answer the question.
[05:30:43] <Sqaure> i did a uni course in Neural networks 22 years ago
[05:31:45] <amigojapan> Sqaure: oh I bet things have advanced a lot since then
[05:31:51] *** Quits: jamea (~jamea@177.239.93.210) (Ping timeout: 250 seconds)
[05:32:22] <Sqaure> i wouldnt be surprised. Back then it was mostly pattern categorization. 
[05:33:27] <Sqaure> What are people doing these days? Big composite networks? 
[05:33:37] *** Quits: xff0x (~xff0x@2001:1a81:53cb:ff00:da98:35c:1f74:ca19) (Ping timeout: 265 seconds)
[05:34:15] <[itchyjunk]> there are a lot of types now
[05:34:25] <[itchyjunk]> different things for different domain specific things
[05:34:26] *** Quits: vaginaldischarge (b9dc66fb@67.205.143.82) (K-Lined)
[05:34:32] <Sqaure> I just lack the idea of what problems are tackled. 
[05:34:34] *** Joins: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945)
[05:34:36] <[itchyjunk]> for NLP, transformers are popular
[05:34:43] <[itchyjunk]> for self driving, RL
[05:35:00] <[itchyjunk]> (with CNN's ofcourse)
[05:35:01] *** Joins: xff0x (~xff0x@2001:1a81:53d3:ff00:e392:be3b:ed73:128b)
[05:35:02] <amigojapan> Sqaure: I was asked to make a simple demo for open vino. Which takes a picture with the camera, recognizes the person's age and gender and displays a proper ad for that group
[05:35:16] <[itchyjunk]> there are genetic algos for certain class of optimization problems
[05:37:58] <[itchyjunk]> f.. hidden layers need activation function too
[05:38:22] <Sqaure> But generally it is decision gates so to speak right
[05:39:06] <amigojapan> Sqaure: but open vino is a framework that does the neutral network stuff for you, so I have not actually coded my own neural network
[05:39:27] <Sqaure> amigojapan, ok, ill check it out
[05:40:19] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:40:32] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[05:43:32] <amigojapan> Sqaure: https://docs.openvinotoolkit.org/latest/index.html
[05:43:33] <bayaz> Title: OpenVINO™ Toolkit Overview - OpenVINO™ Toolkit 
[05:44:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:44:53] <amigojapan> But warning. It is an Intel product designed to only work on Intel products
[05:45:04] <Sqaure> Sadly i have little interest in it. I will be replaced by an AGI soon.
[05:45:51] <amigojapan> We still have no idea how to make an agi. That is science fiction
[05:46:19] <vdamewood> Application Groaning Interface?
[05:46:40] <amigojapan> Gai
[05:46:56] <flakonium_tubes> automatic goal integrator
[05:47:00] <amigojapan> General ai
[05:47:19] <Sqaure> i have one in my head
[05:47:43] <amigojapan> We don't understand how the ones in our heads work
[05:47:53] <Sqaure> flaky at times but still
[05:48:50] <Sqaure> is there some "field news" site where you can follow success stories? 
[05:49:17] <amigojapan> But if it is made it may be made using open vino
[05:49:53] <[itchyjunk]> we don't need to understand how it works.
[05:50:12] <[itchyjunk]> people used fire before they understood how it really worked
[05:50:29] <[itchyjunk]> Some AGI exists.
[05:50:33] <vdamewood> amigojapan: I assure, the intelgence in my head isn't artificial.
[05:50:34] <[itchyjunk]> Transfer learning is a thing
[05:50:43] <vdamewood> Neither is the stupidity.
[05:50:43] <flakonium_tubes> yeah birds use fire too!
[05:50:44] <[itchyjunk]> How is activation function supposed to be used?
[05:50:48] <Sqaure> exactly like a labratory made black hole
[05:51:05] <Sqaure> observe it and adopt
[05:51:08] <amigojapan> [itchyjunk]: but we figured out how to make sure, we have not figured out how to make an gai
[05:51:29] <vdamewood> Release the phlogiston!
[05:51:42] <amigojapan> Correct vdamewood 
[05:53:03] <Sqaure> its important to have it connected to the internet so it can replicate
[05:53:46] <[itchyjunk]> amigojapan, we have agi
[05:53:54] <[itchyjunk]> agi just mean general intellegence
[05:54:00] <[itchyjunk]> i.e learning transfers
[05:54:17] <[itchyjunk]> deepmind managed to transfer learning from one atari game to all atari games
[05:54:26] <[itchyjunk]> then from atari games to chess to go
[05:54:27] <flakonium_tubes> can you teach it to use gcc?
[05:54:39] <[itchyjunk]> that is precisely artificial general intelligence
[05:54:51] <[itchyjunk]> flakonium_tubes, maybe in 1 to 100 years from now
[05:54:54] <amigojapan> [itchyjunk]: it's not an agi unless it can learn anything 
[05:55:00] <flakonium_tubes> meh
[05:55:08] <[itchyjunk]> amigojapan, that's not the definition of agi
[05:55:17] <[itchyjunk]> agi means learning transfer
[05:55:31] <[itchyjunk]> it can learn one thing and use it to learn another thing
[05:55:43] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:57:38] <amigojapan> I hate it when people get science fiction mixed up with reality
[05:57:57] <Sqaure> Are there any notable accomplishments in AI? 
[05:58:10] <flakonium_tubes> outside of gaming?
[05:58:26] <[itchyjunk]> https://www.youtube.com/watch?v=YofMOh6_WKo
[05:58:27] <bayaz> Title: Demis Hassabis: Transfer learning is key to AGI 
[05:58:47] <[itchyjunk]> "learning anything" isn't a definition used by ANYONE in ML
[05:58:48] <amigojapan> Sqaure: winning the go championship
[05:58:52] <[itchyjunk]> not sure where you got it from
[05:59:06] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[05:59:11] <Sqaure> I got an idea how AlphaGo works. That impressive but in a way not so 
[05:59:15] <[itchyjunk]> Sqaure, image recogniztion
[05:59:35] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[06:00:21] <amigojapan> [itchyjunk]: it is what specialised AI is not
[06:00:35] <[itchyjunk]> learning transfer isn't "specialized AI".
[06:00:49] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Client Quit)
[06:01:01] <[itchyjunk]> AGI by definition is a system that can apply past experiences to future learning.
[06:01:09] <[itchyjunk]> transfer learning is precisely this.
[06:01:32] <amigojapan> Alright maybe you are right [itchyjunk] 
[06:01:34] <[itchyjunk]> It uses the weights from a domain specific training to learn a new domain at a faster pace
[06:01:37] <Sqaure> Also alphaGo was more of a brute force thing with added optimizations? 
[06:01:44] <[itchyjunk]> no
[06:01:51] <[itchyjunk]> Deepblue was brute force
[06:01:57] <[itchyjunk]> you can't brute for Go game.
[06:02:05] <[itchyjunk]> too many possibilities.
[06:02:18] <Sqaure> as I said, with added optimizations. It didnt go down every path
[06:02:27] <[itchyjunk]> it doesn't brute force.
[06:02:39] *** Joins: Atque (~Atque@user/atque)
[06:03:09] *** Quits: saribro (~swinnenb@user/swinnenb) (Remote host closed the connection)
[06:03:13] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Remote host closed the connection)
[06:04:24] <Sqaure> "As of 2016, AlphaGo's algorithm uses a combination of machine learning and tree search techniques".
[06:04:44] <[itchyjunk]> that doesn't mean it's brute force
[06:05:01] <[itchyjunk]> "brute force" means being exposed to all possible states even if it's shallow
[06:05:04] <Sqaure> Brute force is all out tree search
[06:05:20] <[itchyjunk]> this one isn't doing an all out tree search
[06:05:35] <[itchyjunk]> just because there is a tree doesn't mean it's brute forcing
[06:05:39] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[06:05:42] <[itchyjunk]> tree is narrow
[06:05:42] <Sqaure> I guess thats what i tried to say. 
[06:06:04] <[itchyjunk]> it only considers some set of possible moves and works from there
[06:06:15] <[itchyjunk]> the all possible move tree search is what DeepBlue did
[06:06:22] <[itchyjunk]> IBM chess algo
[06:06:46] <Sqaure> Right
[06:07:19] <[itchyjunk]> "It makes a lot of opening moves that have never or seldom been made by humans. It likes to use shoulder hits, especially if the opponent is over concentrated."
[06:07:27] <[itchyjunk]> you don't have this in chess
[06:07:35] <[itchyjunk]> hard to invent "never seen" moves in chess
[06:07:51] <[itchyjunk]> Anyways, how do i use the activation functions?
[06:08:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:09:20] <amigojapan> Sqaure: deep dreaming I guess it's another advancement in AI
[06:09:43] <Sqaure> Gotta google that, sounds intersting
[06:10:12] <amigojapan> Sqaure: look at the images or videos it generates
[06:11:13] <Sqaure> https://deepdreamgenerator.com/#gallery ? 
[06:11:14] <bayaz> Title: Deep Dream Generator 
[06:11:33] <[itchyjunk]> GAN's and transformers are the noteworthy breakthroughs
[06:11:41] <amigojapan> Sqaure: try this one https://images.app.goo.gl/KDSSuwefvthw4QgJ9
[06:11:42] <bayaz> Title: Google Image Result for https://oncirculation.files.wordpress.com/2015/07/everything_3370412k.jpg 
[06:11:53] <[itchyjunk]> there are berekthroughts in hyperparameter tuning models itself
[06:13:04] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[06:13:46] <[itchyjunk]> Okay, my next big hurdle is figuring out how to use this activation function
[06:13:51] <[itchyjunk]> i'll work on it tomorrow
[06:14:05] <[itchyjunk]> maybe get lucky and find someone to spoon feed me this hello world example
[06:16:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[06:16:59] *** Joins: Guest5548 (~Guest55@66-203-186-178.ded.execulink.com)
[06:17:08] *** Quits: Guest5548 (~Guest55@66-203-186-178.ded.execulink.com) (Client Quit)
[06:17:15] *** Quits: kts (~kts@103.73.237.146) (Ping timeout: 268 seconds)
[06:17:58] *** Joins: Gamara (~Gamara@66-203-186-178.ded.execulink.com)
[06:18:14] <Gamara> hey anyone know how to enable ngrok with react router
[06:18:22] <Gamara> or make them work together
[06:20:36] <Hash> What do you mean with react router?
[06:20:53] *** Quits: INeedAHandle (~INeedAHan@211.192.133.205) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:20:53] <Hash> It's just setting up your normal server and pointing ngrok to it.
[06:21:37] <Gamara> well when you make a call to a route it tries to do a get request on that route
[06:21:48] <Gamara> of course there is no file to return
[06:21:52] <Gamara> so you get a 404 error
[06:21:59] <Gamara> because the routes are all done in javascript 
[06:22:09] <Hash> You need to setup a proper server then I think
[06:22:16] <Gamara> I did
[06:22:27] <Hash> nginx or some such?
[06:22:35] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 268 seconds)
[06:22:37] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:22:44] <Hash> That's happened to me on some static sites once. I'm trying to remember how I resolved it.
[06:23:01] <Gamara> https://pastebin.com/FFfRpTfG
[06:23:02] <bayaz> Title: user nginx;worker_processes auto;error_log /var/log/nginx/error.log warn; - Pastebin.com 
[06:23:02] <Hash> I just tested ngrok a few days ago for a video and it work ok
[06:23:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Remote host closed the connection)
[06:23:11] <Gamara> this is my ngrox config
[06:23:27] <Gamara> I have an index.php that contains my session creation
[06:23:39] <Gamara> and it loads home.php which is the actual html for the page
[06:23:40] <Hash> This is for /ws/?
[06:23:55] <Gamara> not really important to the problem
[06:23:58] <Hash> Oh ok for /
[06:23:59] <Gamara> its just a websocket server
[06:24:00] <Hash> go on
[06:24:09] <Gamara> the / would be my webcontent
[06:24:15] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[06:24:17] <Hash> So you're trying to put everything to home.php
[06:24:23] <Hash> ok
[06:24:24] <Gamara> so index.php, home.php (html) and my javascript react and css
[06:24:32] <Gamara> index.php is just a session creation script
[06:24:36] <Hash> How's the router setup?  what do the routes look like
[06:24:47] <Hash> Look at your nginx log and see where the requests are going internally
[06:24:49] <Gamara> the routes are just like /lobby
[06:25:07] <Gamara> and /uuid (like an actual uuid to represent a game)
[06:25:09] <Hash> Well, I know for my php framework I needed to setup proper front controller setup for nginx
[06:25:16] *** Quits: ri (~satori@user/satorin) (Ping timeout: 252 seconds)
[06:25:47] <Gamara> I just need the ngrox server to return index.php and the javascript on refresh
[06:25:52] <Hash> The thing is
[06:26:06] <Hash> You're sending everything to home.php but home.php has no idea I think becuase it doesn't take any params
[06:26:09] <Hash> That's confusing me.
[06:26:17] <Hash> Hang on
[06:26:38] <Gamara> i should probably change it to index.php
[06:26:41] <Gamara> since that is my entry place
[06:26:49] <Hash> try_files $uri $uri/ /home.php$is_args$args; <- in my case for example
[06:26:55] <Gamara> right now it actually downloads my index.php on url access lol
[06:27:07] <Hash> or index. Whatever is the front controller that handles everything, the single entry point.
[06:27:43] <Gamara> oh I see
[06:27:58] <Hash> rewrite ^(.*)$ /home.php break; <- you are rewriting every url to /home.php but not passing any args
[06:28:06] <Gamara>  rewrite ^(.*)$ /index.php$is_args$args break;
[06:28:08] <Gamara> so like this
[06:28:19] <Hash> home.php as I understnad it needs args to parse, so it can know what to route 
[06:28:40] <Gamara> oh excellent
[06:28:46] <Gamara> let me test it
[06:28:50] <Gamara> thanks so much for the help btw
[06:28:57] <Hash> https://www.tutorialspoint.com/design_pattern/front_controller_pattern.htm
[06:28:57] <bayaz> Title: Design Pattern - Front Controller Pattern 
[06:29:40] *** Quits: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655) (Ping timeout: 252 seconds)
[06:30:02] <flakonium_tubes> tutorialspoint!!!
[06:30:03] <Gamara> lol its still download the index.php
[06:30:07] <flakonium_tubes> you got that link from google?
[06:30:15] <Gamara> when I go to the route
[06:30:25] <Hash> If you are downloading the php file that means your mime type in php server isn't setup
[06:30:39] <Gamara> that makes total sense
[06:30:49] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:31:10] <Hash> rewrite ^(.*)$ /home.php break; that sends everything to home.php rewrites it
[06:31:13] <Gamara> now i need to lear how to set it
[06:31:21] <Hash> so fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; this never happens
[06:31:29] <Hash> php file never gets parsed by fast cgi
[06:31:30] <flakonium_tubes> what exactly is this contraption "routing"
[06:31:43] <flakonium_tubes> javascripts?
[06:31:48] <Gamara> its just react router
[06:31:52] <Gamara> so bascially someone starts a game
[06:32:01] <Gamara> I want to store the game id in the url
[06:32:11] <Gamara> so if they refresh the page they can reconnect to the game
[06:32:49] <Gamara> how do you configure mime types
[06:32:55] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[06:33:02] <Gamara> im a complete noob to this stuff
[06:33:15] <Hash> https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps
[06:33:15] <Gamara> first time I have ever done a "real" fullstack build
[06:33:16] <bayaz> Title: Pitfalls and Common Mistakes | NGINX 
[06:33:49] *** Quits: ElPresidente (~ElPreside@2605:a601:55be:bb00:b4ee:8306:9589:1945) (Ping timeout: 250 seconds)
[06:33:58] <Gamara> this stuff seems hard to wrap your head around
[06:34:04] <Hash> It just takes time
[06:34:05] <flakonium_tubes> ok i was scared for a second about OS routes being set from php vars
[06:34:11] <Hash> I didn't learn it all in one day.
[06:34:11] <Gamara> did you just read the documentation all the way through
[06:34:17] <Gamara> I have to learn this in a day
[06:34:18] <Gamara> lol
[06:34:22] <Gamara> hackathon is due in a day
[06:34:30] <vdamewood> Gamara: The technically correct, but probably not useful answer is set the Content-Type header to text/html. As for the helpful answer, I'm not familiar with nginx.
[06:34:51] <Gamara> anyway you could spoon feed me 
[06:34:57] <Gamara> I would appreciate it greatly
[06:35:07] <Gamara> if not I completely understand thanks so much for your help :)
[06:35:08] <Hash> If content type was text/html or something, when going ot the php file, he's just see the source.
[06:35:35] <Hash> If content type is application/php something, and you don't setup nginx to pass the file to fpm  to parse the php, you will get to download the php file
[06:35:50] <vdamewood> Hash: I said header, that affects the browser behavior.
[06:36:22] <Hash> Not necessarily as nginx can be configued to send the header as well, but in his case I don't see it.
[06:36:38] <vdamewood> Yes, necessarily.
[06:36:49] *** Joins: jamea (~jamea@177.239.84.39)
[06:37:04] <vdamewood> nginx's configuration can set the header, but the header itself is still what I said.
[06:37:25] <Hash> Where?
[06:37:40] <vdamewood> In the headers.
[06:37:41] <Hash> In nginx I thought you meant, becuase that was the context and you hadn't specified.
[06:37:58] <vdamewood> I did specify. I said "Content-Type header"
[06:38:25] <Gamara> man I am so lost how do you set the content header
[06:38:25] *** Joins: DarkKnight0007 (~mxl@117.10.145.54)
[06:38:30] <Hash> add_header Content-Type text/html <- in nginx? 
[06:38:32] <Hash> Or where?
[06:38:55] <Gamara> is that added to the root
[06:38:58] <Gamara> or to /
[06:39:06] <Hash> Whereever you want to send the header
[06:39:28] <Hash> Oh changed now
[06:39:33] <Hash> it's types {}
[06:39:38] <vdamewood> Gamara: Alas, like I said, I'm not familir with nginx. I use a different http server, and for that one PHP would automatically deliver a text/html Content-Type header, and I would set a 'Handler' for PHP instead of a Content-Type.
[06:39:45] <Hash> types { application/php php; } something
[06:40:00] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Remote host closed the connection)
[06:40:03] <Gamara> its ok vdamewood I appreciate the assistance
[06:40:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[06:40:27] <[itchyjunk]> I am watching an old house episode and they say brain doesn't have a lymph system
[06:40:33] <vdamewood> Gamara: Also, setting the header only fixes the problem with the browser downloading it instead of displaying it.
[06:40:34] <[itchyjunk]> But it does, it was discovered some 10 years ago
[06:40:35] <[itchyjunk]> !
[06:40:52] <Gamara> interesting
[06:41:11] <[itchyjunk]> i checked, it was made 14 years ago
[06:41:15] <vdamewood> Gamara: Are you familiar with HTTP headers?
[06:41:19] <[itchyjunk]> a few years before it was discovered!
[06:41:21] <vdamewood> ... like at all.
[06:41:22] <Gamara> yeah I am vdamewood
[06:41:40] <Gamara> they contain authentication info, info about the mimetype
[06:41:45] <Hash> What you want to do is send the php file to fpm to get parsed and return an actual text/html response.
[06:41:47] <Gamara> and I think just general packet info
[06:42:01] <Gamara> I have no idea how to do that lo
[06:42:11] <Gamara> yeah that is what I was reading in the thing you sent me
[06:42:27] <vdamewood> So, yeah, when the browser encounters a Content-Type it can't display (usually anything that isn't HTML, XML, plain text, or an image) it downloads the content received instead of displays it.
[06:43:11] <vdamewood> Sometimes browser will 'display' video and audio files too, sometimes they only display them when embedded in HTML content.
[06:43:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:43:44] <vdamewood> Gamara: So, when you get your page downloaded, does the downloaded file contain PHP source, or the final rendered HTML?
[06:43:57] <Gamara> its php source
[06:44:06] <Gamara> not html
[06:44:24] <Gamara> well its just a file with no extension
[06:44:38] <Gamara> so my session creation source code
[06:44:53] <Hash> What's the source?
[06:45:04] <Hash> Is it always the same file no matter where you go?
[06:45:08] *** MrMobius_ is now known as MrMobius
[06:45:11] <Hash> home.php ?
[06:45:19] <Gamara> no index.php
[06:45:43] *** Joins: src (~src@user/src)
[06:45:58] <Gamara> the last line of that file is 
[06:46:00] <Gamara> require_once "home.php";
[06:46:16] <Gamara> thanks so much Hash you are awesome for helping me
[06:46:21] *** Quits: src (~src@user/src) (Remote host closed the connection)
[06:46:37] <Hash> Peculiar. Youre rewriting to home.php so you should see home.php, but you get index.php which kind of tells me your nginx isn't setup properly
[06:46:38] *** Joins: src (~src@user/src)
[06:46:42] <Hash> it's not parsing any php files.
[06:47:05] <Hash> Can you make a file called php.php and put <?php phpinfo(); and save and load in browser?
[06:47:08] <Hash> What happens?
[06:47:11] <Gamara> yeah I would 1000% think my ngrinx isnt set up properly
[06:47:18] <Gamara> since its my first ever config
[06:47:25] <Hash> There is also #nginx 
[06:47:39] <Gamara> oh awesome
[06:47:43] <Gamara> I will def check it out
[06:47:49] <Gamara> ok I will try the php.php file
[06:48:09] <Hash> Also check /var/log/nginx/error.log and access.log 
[06:48:16] <vdamewood> I <? phpinfo()
[06:48:48] <Hash> Wait what?
[06:48:55] <Gamara> ok spinning stuff up
[06:49:01] <Gamara> will post a pastebin
[06:49:19] <Hash> I want to see if your nginx is parsing any php files at all.
[06:49:42] <Gamara> well I mean the website loads
[06:49:48] <Gamara> wouldnt it have to be doing that
[06:49:53] <Gamara> and the session works
[06:50:15] <Gamara> it takes a couple minutes to spin up this project lol
[06:50:20] <Hash> Yes it would. 
[06:50:22] <Gamara> because I am a noob
[06:50:30] <Gamara> and did things weird
[06:50:33] <Hash> Noneed, just put a php file in your document root
[06:50:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:51:00] <Gamara> im running everything in docker-compose
[06:51:28] <Hash> Is the rest of the site in react or in php?
[06:53:39] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[06:53:44] <Gamara> the site is entirely react
[06:53:53] <Gamara> the php is just there to establish a session
[06:54:03] <Gamara> i was thinking of doing a recaptcha
[06:54:05] <Gamara> but there is no time
[06:54:30] <Gamara> https://docdro.id/ylzHAlC
[06:54:33] <bayaz> Title: PHP 8.0.11 - phpinfo().pdf 
[06:54:47] <Gamara> just did a print of the page
[06:54:57] <Gamara> i can send screen shots tho if that isnt good
[06:55:02] <Hash> Ok so php runs
[06:55:16] <Gamara> everything works
[06:55:21] <Gamara> just the routing is broken
[06:55:28] <Hash> Where do you go when you get the index.php file downloaded
[06:55:29] <Gamara> i download php files
[06:55:34] <Gamara> when I go to the route
[06:55:43] <Gamara> just my main page
[06:55:52] <Gamara> it just loads home.php which is just an html document
[06:55:57] <Gamara> with a react root element
[06:55:59] <Hash> and how is your react app tied in with php?
[06:56:06] <Gamara> and some script to show loading
[06:56:09] <Hash> react afaik is js only
[06:56:26] <Gamara> php loads a session cookie -> then loads html
[06:56:35] <Gamara> react loads and user plays game with session cookie
[06:56:48] <Gamara> they click start game it takes them to /lobby
[06:56:53] <Gamara> another person joins
[06:57:01] <Gamara> it takes them to /uuid-of-game
[06:57:01] <Hash> the /lobby is a route defined how?
[06:57:07] *** Quits: gggpkm_ (~gggpkm@60.10.23.168) (Ping timeout: 252 seconds)
[06:57:26] <Hash> Ok
[06:57:42] <Hash> So what's happening is that react routes are not the same as routes handled by an httpd
[06:58:04] <Hash> So when you go to your designated /route, it goes to the nginx/httpd and there is no page there.
[06:58:48] <Hash> What we need to do is forward the route from nginx to react
[06:59:11] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[06:59:13] <Gamara> yeah
[06:59:16] <Hash> meaning, we need to send nginx requests to a specific place, and append any url args there
[06:59:21] <Gamara> but right now it doesnt give me a /get 404
[06:59:26] <Hash> Then that specific place, parses the url args, and puts them into react.
[06:59:31] <Gamara> it just downloads the index.php named after the route
[06:59:43] <vdamewood> Oh, this is funny. That link gave me an ad saying I need to update Flash.
[06:59:49] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[07:00:02] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[07:00:18] <Gamara> what I want is nginx to ignore any route request and just reload the javascript/html etc
[07:00:45] <Hash> Hmm.
[07:00:47] <Gamara> that way react router can load the correct page and my application will read the url parameters and htings will work
[07:00:48] <DuckSeason> http://moar.edgecats.net/cats/Kitten-climbs-traffic-cop.gif
[07:00:48] <bayaz> Type: image/gif Size: 2.1 MB 
[07:00:54] <Hash> your react controlerl is called what?
[07:00:56] <Hash> index.html?
[07:01:35] <Hash> Try to send requests in nginx from home.php to react directly, or if in php, do header() and send to react directly and append the route link or something
[07:02:15] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[07:02:25] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[07:02:39] <Gamara> how?
[07:03:08] <Hash> Yeah, react uses index.html which contains a root element.
[07:03:16] <Hash> How areyou serving this root element? Via php or via .html?
[07:03:53] <Hash> ReactDOM.render( <App />, document.getElementById('root'));
[07:04:44] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[07:05:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:05:44] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[07:06:46] *** Quits: cn-j (~cn-j@user/cn-j) (Ping timeout: 265 seconds)
[07:08:17] <Hash> https://gkedge.gitbooks.io/react-router-in-the-real/content/nginx.html
[07:08:18] <bayaz> Title: Nginx | React Router in the Real 
[07:08:52] <Gamara> https://pastebin.com/a9NJafE6
[07:08:54] <bayaz> Title: -- index.php //what is loaded first (entry point)<?phpuse Symfony\Componen - Pastebin.com 
[07:09:01] <Gamara> here is all my code roughly based around this problem
[07:09:11] <Gamara> you are my hero Hash
[07:09:16] <Gamara> thanks so much
[07:09:19] <Gamara> this looks super useful
[07:10:46] <Hash> Yeah so this seems very simple now imo
[07:11:11] <Hash> You are sending everything to home.php which loads the react app but routes don't work.
[07:11:16] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[07:11:29] <Gamara> yeah
[07:11:31] <Hash> So, what I would do is, send to home.php?/route_here
[07:11:45] <Hash> So, what I would do is, send to home.php?r=route_here
[07:11:49] <Hash> or route_name
[07:12:21] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[07:12:23] <Hash> Then inside home.php (not sure how react works), you would read the r=route name, and load that route in react.
[07:13:05] <Gamara> I read that all you needed to do was tell nginx just to reserve the client side files
[07:13:18] <Gamara> react router will read the params of hte page and do what it needs to
[07:13:28] <Hash> Never usd react or mixed it with php.
[07:13:40] <Gamara> I should I have just used blazor webassembly
[07:13:51] <Gamara> with its built in routing
[07:13:56] <Hash> Perhaps when you're doing it just with react+nginx. When react + php + nginx it could be different
[07:14:15] <Gamara> yeah I think things are a tad more complex then serving html
[07:14:32] <Gamara> its probably what is making this problem hard
[07:14:40] <Hash> It became complicatd becuase you are mixing php sessions with react.
[07:14:53] <Hash> I know what to do, but I'd have to try a few things myself and I don't have that setup.
[07:15:06] <Gamara> that is fair
[07:15:09] <Hash> I know the issue, and I know what needs to be done. I just don't know how hin react
[07:15:31] <Gamara> I mean you dont have to worry about react
[07:15:39] <Gamara> as long as I reserve the content
[07:15:42] <Gamara> react router handles it
[07:15:47] <Hash> in nginx, you just load index.php and react handles the routes
[07:15:55] <Hash> i mean index.html
[07:16:23] <Gamara> I basically need to set it so that when a user accesses routes it just resends the html/js/css
[07:16:28] <Hash> But when using php, you go to /lobby and it tries to go to /lobby/index.{html,php} etc.
[07:17:04] <Hash> try_files $uri $uri/ /index.html; try this perhap
[07:17:22] <Hash> if the rotue doesn't have a file extension, it will go to index.html
[07:17:30] <Hash> maybe that will make the react route work.
[07:17:31] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 252 seconds)
[07:17:38] <Hash> I don't know if that will preserve yoru php session.
[07:17:50] <Gamara> ok trying
[07:18:15] <Hash> so if you go to /lobby, it will send you to index.html and hopefully that will read the /lobby route
[07:19:03] <Gamara> in theory yes
[07:19:08] <Hash> I have pain in my chest, left breast. I too have heart issues. Too much stress in life. Oh boy. I got checked out, doc listened to my heart, she said A-OK.
[07:19:26] <Gamara> haha yeah I get that too man
[07:19:28] <Hash> But still every now and again, random pain.
[07:19:37] <Gamara> heart misses a beat every now and then
[07:19:43] <Gamara> yeah getting 404 ;_;
[07:19:55] <Hash> ok
[07:20:01] <Hash> try to see if react works first.
[07:20:02] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[07:20:14] <Gamara> I mean the app works fine
[07:20:15] <Hash> switch to index.html instead of php and serve react only, no php
[07:20:16] <Gamara> until I refresh
[07:20:24] <Hash> Does that work, with refresh and all that?
[07:20:40] <Gamara> can you load html with php
[07:20:46] <Hash> https://developer.okta.com/blog/2021/06/16/session-mgmt-react
[07:20:47] <bayaz> Title: A Developer's Guide to Session Management in React 
[07:20:58] <Hash> Also, you should probably switch your session management to react, and not mix php.
[07:21:01] <Gamara> I cant switch
[07:21:04] *** Quits: BOOkl (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:21:06] <Hash> np
[07:21:13] <Gamara> im using a websocket library
[07:21:28] <Gamara> that requires a specific session library
[07:21:45] <Gamara> also I need tou se php as part of the problem
[07:21:49] <Hash> ok
[07:23:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[07:24:21] <Hash> See, if you're sending to index.html only I wonder how react reads the routes information.
[07:24:51] <Gamara> react router is a 3rd party library
[07:25:02] <Gamara> but I think it just uses a lot of native javascript
[07:25:48] <Hash> Ahh
[07:25:56] <Hash> react is client side routing and nginx is server side of course.
[07:38:40] *** Joins: frost (~frost@59.71.244.189)
[07:39:07] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[07:39:08] *** Joins: CaCode (~user@user/cacode)
[07:43:40] *** Joins: gggpkm__ (~gggpkm@60.10.23.168)
[07:46:40] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[07:54:02] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 260 seconds)
[07:58:08] *** Joins: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net)
[07:58:25] <vdamewood> Well, Looks like i'm really going to want an Apple Silicon MacBook Pro if they have the port, memory, and storage configurations the rumor sites say they are.
[07:59:04] <vdamewood> I'm especially going to want that MagSafe power cable.
[07:59:27] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[07:59:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Remote host closed the connection)
[08:00:10] <Hash> Sounds good
[08:00:22] <Hash> I don't mind Apple 
[08:00:34] <Hash> I have to learn/use it for cybersecurity stuff. I can't really ignore any OS
[08:00:47] <vdamewood> Hash: You can safely ignore Haiku.
[08:01:13] <Hash> I dunno what that is other than Japanese poetry
[08:01:25] <vdamewood> An open-source clone of BeOS.
[08:01:28] <Hash> Oh
[08:01:38] <vdamewood> haiku-os.org
[08:01:51] <Hash> Oh yeah, I checked it out a while ago.
[08:01:54] <Hash> I remember now.
[08:01:59] <Hash> I smoke a lot of weed.
[08:02:16] <cursey> did they announce a new mac mini
[08:02:21] <Hash> https://www.youtube.com/watch?v=eOeOfBl3mbI
[08:02:23] <bayaz> Title: Using Haiku OS as a Daily Driver?! (Modern BeOS) 
[08:02:32] <Hash> Feb 3, 2021
[08:03:00] <vdamewood> cursey: Not since the first M1 models were announced.
[08:03:21] <Hash> https://www.osnews.com/story/24945/a-programmers-introduction-to-the-haiku-os/
[08:03:22] <bayaz> Title: A Programmer’s Introduction to the Haiku OS – OSnews 
[08:03:50] <cursey> oh, shame
[08:03:58] <vdamewood> The only Apple Silicon models they've actually announced are the M1 MacBook Air, MacBook Pro, Mac-Mini, and iMac 24".
[08:04:16] <vdamewood> s/MacBook Pro/MacBook Pro 13"/
[08:04:48] <vdamewood> We still have yet to see the high-powered and Mac Pro models or announcements.
[08:05:02] <vdamewood> Even teh 14" and 16" MacBook Pros are just rumors at this point.
[08:05:26] *** Joins: vaginaldischarge (b9dc66f8@67.205.143.82)
[08:06:31] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[08:07:20] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[08:09:44] *** Joins: fernand (~fernand@179.156.35.4)
[08:09:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:12:19] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:12:28] *** fernand is now known as Fernanda
[08:13:38] <Hash> They cost too much for the value and I dislike Apple as a business company
[08:14:20] <Hash> I think they are evil and I'm not as crazy as the GNU people but I can see it and I've had many family members if who weren't on Apple products I could have helped and helped save money
[08:14:32] <Hash> But I have a macbook for study
[08:14:37] <vaginaldischarge> Hash: how are you?
[08:14:44] <Hash> It's a hand me down. I wouldn't spend money on Apple.
[08:14:48] <Hash> My age does not matter.
[08:14:55] *** Quits: LiftLeft (~LiftLeft@191.96.185.109) (Ping timeout: 265 seconds)
[08:14:58] <Hash> But if it did. I'm 19 years old. Student.
[08:15:08] <Hash> Little asian guy from Japan
[08:15:10] <Hash> :)
[08:15:15] <vaginaldischarge> cool
[08:15:21] <vaginaldischarge> how are you?
[08:15:54] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[08:16:01] <Hash> vdamewood: ^ so can we do something about this?
[08:16:24] <Hash> vdamewood: nickname is obnoxious.
[08:16:52] <vaginaldischarge> so you are still mad?
[08:17:28] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91b6:1448:b1dc:d7cc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:18:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:a487:1497:3511:a6b2) (Read error: Connection reset by peer)
[08:18:12] <vdamewood> Hash: Discussing it with other ops now.
[08:18:58] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[08:20:02] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91b6:1448:b1dc:d7cc)
[08:21:13] <Hash> *nod*
[08:21:55] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[08:22:02] *** bayaz sets mode: +b *!*@67.205.143.82
[08:22:02] *** vaginaldischarge was kicked by bayaz (vaginaldischarge)
[08:22:29] <cursey> yikes
[08:22:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[08:23:47] <InPhase> He has already been server k-lined twice between today and yesterday.  And names are speech.
[08:23:57] <InPhase> Thus, under the same speech rules.
[08:24:33] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:24:56] <Hash> I'm going to change a nick
[08:25:02] *** Hash is now known as LordOfThePings
[08:27:19] *** Quits: Fernanda (~fernand@179.156.35.4) (Ping timeout: 252 seconds)
[08:28:40] *** LordOfThePings is now known as EnchanterTim
[08:28:41] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:33:14] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Ping timeout: 260 seconds)
[08:33:15] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:34:17] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[08:34:34] <extor> Is there a well known ecosystem/IDE that the android open source project uses to compile code? It looks like a combination of bash scripts with some python and also  of course C in the source tree but I'm wondering, to learn this ecosystem what tutorial or book to follow: https://liongueststudios.com/download-and-build-aosp-android11-custom-rom/
[08:34:38] <bayaz> Title: How To Download And Build AOSP Android 11 Custom ROM From Scratch | LionGuest Studios 
[08:35:01] *** Joins: brabrax (~brabrax@user/brabrax)
[08:35:02] <Decker> android studio
[08:35:10] <extor> Very funny
[08:35:21] <Decker> that's what it uses
[08:35:24] <extor> Android Studio is just for coding apk apps that run on Android OS
[08:35:31] <Decker> it has all the features of signing packages etc
[08:35:45] <extor> Android Studio can do nothing for the kernel and system level daemons
[08:35:51] <Decker> right... that's 'what's used to comiple code'
[08:36:05] <extor> Android Open Source Proect
[08:36:17] *** Quits: nshire (~Neal@user/nshire) (Quit: Leaving)
[08:36:27] <extor> Did you miss that part? It's not Java or Kotlin. It's C.
[08:36:33] *** Joins: nshire (~Neal@user/nshire)
[08:36:39] <extor> It's what the OS is coded in
[08:36:50] <Decker> then it's just gcc for comiling the kernel
[08:36:54] <extor> And there's no tutorial books for it, no fancy IDE
[08:37:02] <Decker> there isn't
[08:37:09] <Decker> have vim will travel
[08:37:17] <extor> So how does one just jump into gcc
[08:37:26] <vdamewood> gcc source.c
[08:37:35] <Decker> you install the appropriate toolchain
[08:37:54] <vdamewood> apt install gcc make ld bunutils
[08:38:02] <extor> Yeah I did that and I even compiled my own "custom rom" as they call it and after a couple of tries it even ran on my phone
[08:38:03] <vdamewood> oh wait, ld is in binutils.
[08:38:07] <Decker> well no - because you need arm target
[08:38:31] <vdamewood> Oh, I got spoiled by LLVM. You don't need a custom build to use a different backend.
[08:38:45] <extor> However, the part that I am missing is the hand holding and tons and tons of books that we have for Android Studio. It's just not present for Android the OS.
[08:39:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:39:32] <extor> I mean, I want to learn Android studio and I am doing so by following a handful of tutorials and ebooks
[08:39:34] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[08:40:15] <extor> But when I try to do that for the C coding of custom roms there's nothing but short vague "hello world" tier blog posts 
[08:40:33] <Decker> I'd beleive it
[08:40:49] <Decker> I usually end up using prebulit images
[08:40:59] <extor> Yet, people are compiling their "custom roms" and some are doing it on a large scale like the lineageOS and GrapheneOS crew. Where do they learn from
[08:41:24] <vdamewood> Books
[08:41:27] <Decker> android is just linux - so everything about linux kernel and setting up linux from scratch
[08:41:37] <extor> Well I dont want to trust someone elses binaries, I want to roll my own using the google source code but there's no noob friendly books out there
[08:41:53] <vdamewood> It's not a noob friendly task.
[08:42:04] <extor> There's no books that show you how to compile an android ROM
[08:42:06] <extor> At all
[08:42:22] <Decker> that's becaue it's not a noob task - and not just anyone CAN write a book
[08:42:25] <extor> One guy promised to write one but his table of contents looks really skimpy
[08:43:41] <extor> He's promised three volumes but only released one so far: http://newandroidbook.com/TOC.html
[08:43:42] <bayaz> Title: Android Internals::TOC 
[08:43:55] <extor> Also, tons and tons of people write books
[08:44:21] <extor> But I guess you're saying that the number of ROM coders is a minuscule fraction of the total numper of apk app coders
[08:44:25] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 252 seconds)
[08:44:49] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[08:45:21] <extor> This makes me wonder how for example a fresh graduate out of uni can just suddenly jump into linux driver programming or embedded linux as they call it
[08:45:40] <Decker> by learning linux - not android 
[08:45:57] <Decker> since,again, android is just linux with java prepackaged and a custom display system
[08:45:59] <Corwinoid> they can't, and they're given smaller easier tasks to learn their way around before giving larger stuff
[08:46:06] <extor> Christ, maybe I should forget about Android OS and just play around with Android Studio and code noob tier apps
[08:46:17] <amigojapan> There are tutorials for Linux kernel module development
[08:47:05] <vdamewood> Dammit, nya-chan wants my attention.
[08:47:08] <amigojapan> Not everything needs to be book length
[08:47:19] <extor> What's also a bit disturbing is that recenly I found out that a massive part of AOSP is not public code at all and is in fact encrypted proprietary blobs that drive the display and the GSM radio
[08:47:27] <vdamewood> Maybe I should call her nya-hime.
[08:47:36] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[08:48:08] <vdamewood> extor: Yeah, kind of unavoidable there, due to company crap.
[08:48:24] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: It's that time again.)
[08:48:40] <amigojapan> The raspberry pi also had binary blobs
[08:48:55] <vdamewood> Yeah, :(
[08:49:07] <extor> My latest plan is to just examine the source code of various other custom ROMS out there like lineage and pixelexperience and then see if I can figure out how the added their mojo to it
[08:49:27] <extor> Wait what! The rpi android open source image has proprietary blobs?
[08:49:41] <extor> Put there by the PI foundation...
[08:49:43] <extor> damn
[08:49:59] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:53:06] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[08:55:14] <vdamewood> If you want a blob-free ARM system, get a Beaglebard system.
[08:55:32] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:56:28] *** Quits: gggpkm__ (~gggpkm@60.10.23.168) (Ping timeout: 252 seconds)
[08:57:34] *** Joins: stoneware (~stoneware@user/stoneware)
[08:57:35] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:59:09] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[08:59:11] <extor> Come to think of it I am not sure what I would do with the source code of a driver or hardware module. Never really thought about the need to alter it.
[08:59:55] <extor> 99.9% of linux users never touch the source code that they have access to. They just use it as they would Windows or Mac.
[09:00:12] <Decker> true
[09:00:43] <Decker> and other things like FUSE don't require knowing the kernel either - also virtual ether devices using TAP or TUN devices
[09:00:59] *** Joins: biberu (~biberu@user/biberu)
[09:02:34] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 252 seconds)
[09:02:54] <amigojapan> extor: you could check that the software creator is not doing something malicious
[09:05:27] *** Joins: qbt (~qbt@user/edun)
[09:05:39] <jtgd> I trust open source because I know that other people, more skilled than I and more freaky about security, have looked at the code.
[09:05:51] *** Parts: qbt (~qbt@user/edun) ()
[09:06:37] <cursey> if it's open source it's easier to port
[09:06:39] *** Joins: gggpkm_ (~gggpkm@123.113.177.190)
[09:06:56] <cursey> don't have to waste a ton of time reverse engineering the bin
[09:07:07] <amigojapan> extor: seems you have not watched the talks by Richard stallman
[09:09:41] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 245 seconds)
[09:10:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:10:31] *** Quits: tiny (~tiny@171.121.42.216) (Ping timeout: 245 seconds)
[09:11:00] *** Joins: Doraemon (~NeoCron@p200300c4cf1964009b5b3ef502cc8e57.dip0.t-ipconnect.de)
[09:11:17] <extor> Correct, I have not
[09:12:27] <extor> However, I am aware of the regular security advisories that are released for open source apps like firefox for example. They're released when that particular build is in full production. So, whoever was auditing the code in alpha and beta missed those explots
[09:12:41] <extor> Hene. my faith in open source isn't 100% either.
[09:12:49] <moose> jtgd: Often times this isn't the case though or it stays internal to a company.
[09:13:02] <moose> For example, my company internally audits all open source stuff but we don't contribute findings externally for liability reasons
[09:13:17] *** Quits: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:13:19] <Decker> they're not exactly intentional exploits - just holes that can be exploited
[09:13:49] <Decker> failure to catch handling an error condition isn't the same as failure to catch 'oh just open a socket to this port for full access'
[09:14:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:14:05] <extor> And to play devil's advocate when an open source app is being widely used malicious actors have a chance at the code too.
[09:14:09] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Remote host closed the connection)
[09:14:33] <moose> extor: I find that if a project is popular and regularly viewed, it's beneficial for it to be open source from a security perspective.
[09:14:42] <moose> If it's a mom and pop shop's web app that their kid made, less so
[09:14:49] <extor> True
[09:15:10] <moose> I think that with a larger code base, there's a point where it's more risky too.
[09:15:17] <moose> If Windows were open source for example, this would be bad.
[09:15:28] <moose> At a point it would level off, but initially very bad.
[09:15:44] <extor> Yeah like having four knights guard a five square mile castle in the 10th century
[09:15:50] <moose> Yeah.
[09:16:12] <moose> "Hey you over there! Stop sieging gosh darn it and get off my moat!"
[09:16:18] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 265 seconds)
[09:16:23] * moose waves his sword in anger
[09:17:14] *** Quits: ChemicalRascal_ (~ChemicalR@14-202-44-48.tpgi.com.au) (Read error: Connection reset by peer)
[09:21:09] *** Quits: ravan__ (~ravan@user/ravan) (Quit: Leaving)
[09:21:45] *** Joins: ravan__ (~ravan@user/ravan)
[09:21:50] *** Quits: ravan__ (~ravan@user/ravan) (Read error: Connection reset by peer)
[09:22:13] <amigojapan> When the software is proprietary you don't even have a way to check it
[09:22:29] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:22:37] <amigojapan> Maybe by reverse engineering
[09:24:00] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[09:24:12] *** Quits: Gamara (~Gamara@66-203-186-178.ded.execulink.com) (Ping timeout: 256 seconds)
[09:25:00] *** Joins: mishugana (~mishugana@user/mishugana)
[09:25:33] <extor> Yeah ghidra and IDA
[09:25:37] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[09:26:08] <extor> If you upload binaries to virustotal.com they've got some pretty fancy sounding methods that their various vendor AVs use on binaries. 
[09:26:21] *** Joins: tiny (~tiny@171.121.42.216)
[09:27:09] <extor> But then again, those results are probably from apps that don't site and wait and do a timed release or use other methods of evading AV checks
[09:27:45] <extor> So, IDA pro would work there. But then again you have PE encryption and what not. It's a jungle out there.
[09:28:23] *** Quits: src (~src@user/src) (Ping timeout: 265 seconds)
[09:32:18] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:32:20] *** Quits: soapsudsxx (~soapsudsx@141.193.188.134) (Remote host closed the connection)
[09:33:28] *** Joins: qbt (~qbt@user/edun)
[09:33:56] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[09:34:06] <Decker> ya but still, if code can be run, then it can be read.. binary is only inconvenient
[09:34:38] <Decker> IDA for a encrypted exe would show all the data of the program, and still show the minor block of code for decrypting the rest
[09:35:09] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 265 seconds)
[09:37:26] <extor> ¯\_(ツ)_/¯
[09:39:05] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[09:42:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[09:42:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489) (Client Quit)
[09:44:17] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:45:45] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[09:48:25] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[09:49:00] *** Quits: tiny (~tiny@171.121.42.216) (Quit: Connection closed)
[09:50:16] *** Joins: diophantoz (~diophanto@user/diophantoz)
[09:52:33] *** Joins: g40 (~g@171.121.42.245)
[09:54:56] *** Quits: g40 (~g@171.121.42.245) (Client Quit)
[09:55:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:55:27] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[09:56:14] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[09:57:36] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 245 seconds)
[10:00:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:02:41] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:04:13] *** Joins: exvicesindaco_ (~exvicio@host-87-5-90-251.retail.telecomitalia.it)
[10:04:25] *** Quits: exvicesindaco_ (~exvicio@host-87-5-90-251.retail.telecomitalia.it) (Client Quit)
[10:06:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:08:20] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 260 seconds)
[10:10:54] *** Joins: absc (~absc@dynamic-adsl-94-34-168-240.clienti.tiscali.it)
[10:10:57] *** Quits: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net) (Remote host closed the connection)
[10:11:11] *** Joins: gggpkm__ (~gggpkm@60.10.194.44)
[10:12:04] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[10:13:01] *** Joins: user51 (~user51@176.228.145.255)
[10:13:53] <user51> is there an inverse or opposite to recursion?
[10:14:14] *** Joins: gggpkm (~gggpkm@60.10.194.44)
[10:14:26] *** Quits: gggpkm_ (~gggpkm@123.113.177.190) (Ping timeout: 265 seconds)
[10:14:34] <jtgd> what do you imagine that would look like?
[10:15:03] <jtgd> return,return,return,return,return,return,...
[10:16:26] *** Joins: mrig (~mrig@user/mrig)
[10:16:43] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 265 seconds)
[10:16:43] *** Quits: gggpkm__ (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[10:17:19] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[10:18:09] *** Joins: gggpkm_ (~gggpkm@60.10.194.44)
[10:21:33] *** Quits: gggpkm (~gggpkm@60.10.194.44) (Ping timeout: 265 seconds)
[10:21:56] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[10:23:13] <user51> oh, i found it. it was 'recursive ascent'
[10:23:33] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:23:43] *** Joins: on^ (~on@wsip-70-165-23-55.mc.at.cox.net)
[10:24:23] <user51> i choose the wrong bit, sorry
[10:26:38] *** Joins: gggpkm__ (~gggpkm@123.113.177.190)
[10:27:16] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 252 seconds)
[10:29:16] *** Joins: palasso (~palasso@user/palasso)
[10:29:41] *** Quits: gggpkm_ (~gggpkm@60.10.194.44) (Ping timeout: 245 seconds)
[10:39:55] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[10:40:53] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[10:41:08] *** Joins: aradesh (~aradesh@user/aradesh)
[10:41:43] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[10:42:30] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[10:44:35] *** Joins: trebko (~trebko@137.220.86.97)
[10:44:45] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:45:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Remote host closed the connection)
[10:45:09] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:45:30] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:46:15] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:47:08] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 268 seconds)
[10:49:11] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:49:33] *** Quits: gggpkm__ (~gggpkm@123.113.177.190) (Read error: Connection reset by peer)
[10:53:38] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[11:53:51] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[11:54:04] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[11:54:12] *** Server sets mode: +CFnt 
[11:54:13] <vdamewood> arahael: Nix isn't for the audience for my book.
[11:54:26] <arahael> That's cool. :)
[11:54:27] <flakonium_tubes> where do you draw the line, how about bash?
[11:54:38] *** Joins: pnill (~pnill@ip170.ip-54-39-37.net)
[11:54:41] *** Joins: realae (~realae@171.121.42.245)
[11:54:41] <porphyry> arahael: gyp is a slur?
[11:55:03] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:55:06] <arahael> flakonium_tubes: bash is just the scripting language. I'd rather suggest, say, BSD Ports.
[11:55:27] <arahael> porphyry: Don't ask me!
[11:55:33] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[11:55:33] <vdamewood> BSD ports is just a bunch of Makefiles ot build packages.
[11:55:44] <porphyry> arahael: why?
[11:55:46] <arahael> Oh? I thought BSD ports was sh scripts.  But that's cool.
[11:55:53] <PlanckWalk> I don't know whether gyp is a slur, but a mixture of gypsum with water can be a slurry.
[11:56:10] *** Joins: segnior (segnior@user/segnior)
[11:56:17] <vdamewood> 'gyp' is a shortening of Gypsy which is an offensive name for the Romani people.
[11:56:30] <porphyry> vdamewood: but i like the word Gypsy.
[11:56:49] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:56:55] *** Joins: _inky (~inky_@46.241.132.21)
[11:56:55] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:57:00] *** Quits: ravan (~ravan@user/ravan) (*.net *.split)
[11:57:00] *** Quits: otapiot[m] (~otapiotma@2001:470:69fc:105::fe07) (*.net *.split)
[11:57:00] *** Quits: neocow (~neocow@185.38.14.210) (*.net *.split)
[11:57:00] *** Quits: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd) (*.net *.split)
[11:57:00] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (*.net *.split)
[11:57:00] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[11:57:00] *** Quits: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d) (*.net *.split)
[11:57:00] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (*.net *.split)
[11:57:00] *** Quits: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0) (*.net *.split)
[11:57:00] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[11:57:00] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[11:57:00] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[11:57:00] *** Quits: ksham (Kays@user/kays) (*.net *.split)
[11:57:00] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[11:57:01] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[11:57:03] <snake> yeah sometimes people say "they gypped me" which is suggesting romanis are all thieves
[11:57:21] <snake> which isnt very nice
[11:57:28] *** Joins: boycott (~boycott@166.ip-149-56-46.net)
[11:57:28] *** Quits: boycott (~boycott@166.ip-149-56-46.net) (Changing host)
[11:57:28] *** Joins: boycott (~boycott@user/boycott)
[11:57:35] <arahael> Not nice at all, no.  I'd rather we moved on.
[11:57:36] <porphyry> so if we stop saying gypsy, will the Romani stop being thieves?
[11:57:39] <PlanckWalk> Ohh, you're not talking about  https://gyp.gsrc.io/docs/UserDocumentation.md
[11:57:40] <bayaz> Title: GYP - User Documentation 
[11:57:46] <vdamewood> !q porphyry 
[11:57:47] *** Joins: Twipply (~Twipply@user/twipply)
[11:57:47] *** bayaz sets mode: +q *!*@223.235.196.22
[11:58:01] *** Joins: plastico (~plastico@neomutt/plastico)
[11:58:11] *** Joins: ellie (~ellie@user/ellie)
[11:58:16] <arahael> PlanckWalk: That's the one I mentioned, yeah.
[11:58:27] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[11:58:31] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[11:58:34] <cursey> is that build system used anywhere other than chromium
[11:58:38] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:58:51] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[11:58:58] *** Parts: porphyry (~porphyry@223.235.196.22) ()
[11:59:03] *** Quits: inhahe__ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[11:59:06] <arahael> Actually, vdamewood, that page PlanckWalk found is pretty good: https://gyp.gsrc.io/docs/GypVsCMake.md
[11:59:07] <bayaz> Title: GYP - vs. CMake 
[11:59:10] *** Joins: NChief (~nchief@irc.nortv.net)
[11:59:30] <arahael> That was definitely the one I had to use a long while back when I was building chromium.
[11:59:45] *** bayaz sets mode: -q *!*@223.235.196.22
[11:59:56] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:00:08] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[12:00:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[12:00:51] <cursey> the build systems tied to large projects (qmake, gyp, boost.jam) don't seem to get much use outside of the projects they were purpose built for
[12:01:34] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:01:47] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[12:01:57] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[12:02:47] <DuckSeason> vdamewood: Error: "q" is not a valid command.
[12:03:10] *** Joins: KDDLB (kevin@user/kddlb)
[12:03:19] <arahael> !warn DuckSeason Don't be a bot.
[12:03:19] * bayaz warns DuckSeason: Don't be a bot.
[12:03:41] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[12:03:41] *** Joins: df_data_ (sid466269@id-466269.ilkley.irccloud.com)
[12:03:41] *** Joins: routeveg (~lee@51.195.136.197)
[12:03:41] *** Joins: bw__ (sid2730@2a03:5180:f:3::aaa)
[12:03:41] *** Joins: greyblue9 (sid500829@2a03:5180:f:3::7:a45d)
[12:03:41] *** Joins: Neverloads (NeverLoad@51.195.146.42)
[12:03:41] *** Joins: ross_ (sid305269@2a03:5180:f:1::4:a875)
[12:03:41] *** Joins: otapiot[m] (~otapiotma@2001:470:69fc:105::fe07)
[12:03:41] *** Joins: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd)
[12:03:41] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[12:03:41] *** Joins: vito (sid1962@user/vito)
[12:03:41] *** Joins: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d)
[12:03:41] *** Joins: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0)
[12:03:41] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[12:03:41] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[12:03:41] *** Joins: barlas (~aqeel@user/barlas)
[12:03:41] *** Joins: sebbu (~sebbu@user/sebbu)
[12:03:41] *** Joins: ksham (Kays@user/kays)
[12:03:41] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[12:03:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[12:03:58] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (Max SendQ exceeded)
[12:04:16] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[12:04:34] *** Joins: jaysicks (~jaysicks@178-164-184-140.pool.digikabel.hu)
[12:04:55] <DnzAtWrk> which is the best search engine for programmers?
[12:05:15] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[12:05:25] <vdamewood> Duck Duck Bing
[12:05:27] <arahael> DnzAtWrk: 15 years ago? Google, without a doubt.  Today? None, they all suck, except Hoogle, but that's Haskell-only.
[12:05:35] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[12:05:39] <cursey> duckduckgo kind of touts itself as being good for programmers (has highlighted search results for programming topics), i still just use google though
[12:05:48] <DnzAtWrk> I tried duckduckdgo
[12:05:51] <arahael> ddg is a meta-search engine.
[12:05:51] <DnzAtWrk> the results aren't that good
[12:05:56] <DnzAtWrk> but at least there is verbatim in duckduckgo
[12:06:01] <DnzAtWrk> google doesn't have verbatim anymore
[12:06:02] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[12:06:06] <flakonium_tubes> google is just a frontend for tutorialspoint now
[12:06:22] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:06:28] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[12:07:01] <arahael> It's painfully difficult to search for something in google that isn't a trendy topic now. :(
[12:07:07] *** Quits: Alpha3031 (~alpha3031@wikipedia/alpha3031) (Ping timeout: 240 seconds)
[12:07:20] <DnzAtWrk> or anything related to linux/windows 
[12:07:23] * arahael was searching for "swift uikit keyboard hiding", and kept getting SwiftUI results.
[12:07:40] <DnzAtWrk> I try to troubleshoot wf-1000xm4
[12:07:48] <DnzAtWrk> google outright refuses to not use wf-1000xm3
[12:08:06] <arahael> DnzAtWrk: For that, quote it.  But it's tedious and annoying quoting each individual keyword now.
[12:08:10] <DnzAtWrk> Doesnt' work
[12:08:20] <DuckSeason> arahael: Error: "warn" is not a valid command.
[12:08:29] <vdamewood> Hehehe
[12:08:49] <potatoxel[m]> ur not a bot
[12:08:59] *** Joins: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it)
[12:09:14] <arahael> !q DuckSeason Don't be a bot.
[12:09:15] *** bayaz sets mode: +q $a:h4x0r
[12:09:34] *** Quits: nxs__ (~nitronix@88.198.206.243) (Ping timeout: 252 seconds)
[12:10:00] *** Joins: Alpha3031 (~alpha3031@wikipedia/alpha3031)
[12:10:07] *** Joins: Klinda (~superleag@user/klinda)
[12:10:58] <amigojapan> Ok I got back from getting a hair cut
[12:11:00] *** Joins: Byteflux (~byte@byteflux.net)
[12:11:39] <vdamewood> amigojapan: Which one?
[12:11:50] <amigojapan> Lol when I just got to libera thought the network name was liberta
[12:12:09] <amigojapan> Lol vdamewood 
[12:12:13] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 265 seconds)
[12:12:34] <arahael> amigojapan: I think the question is: Did you get a left, right, or bowl cut? ;)
[12:13:10] <PlanckWalk> I once got a Dedekind cut.  Now my hair is uncountable and complete.
[12:13:26] <amigojapan> arahael: 1200yeb haircut, so probably bowl
[12:14:17] <arahael> amigojapan: Just under $15 AUD.  Not bad.
[12:14:22] <arahael> I haven't had a haircut since covid started.
[12:14:27] <PlanckWalk> (Warning: Dedekind cut is not guaranteed to do anything if your hair is not already dense)
[12:14:53] <vdamewood> I had to cut my own hair when I developed two massive knots in the back of my head.
[12:14:54] <arahael> PlanckWalk: I gather that's a german cut.
[12:15:12] <amigojapan> arahael: I already have two shots
[12:15:26] <arahael> amigojapan: Me too!  Just about 3 weeks ago (the first I could get)
[12:15:49] <amigojapan> vdamewood: were you practicing to become a pirate? :)
[12:16:08] *** Joins: pyzozord (pyzozord@user/pyzozord)
[12:16:12] <amigojapan> Nice arahael 
[12:16:21] <vdamewood> amigojapan: practicing?
[12:16:41] <amigojapan> arahael: which bread did you get? I got Pfizer
[12:16:50] <arahael> amigojapan: Same.
[12:16:52] <amigojapan> Lol vdamewood 
[12:17:02] *** Joins: Henry151 (~bishop@user/henry151)
[12:17:16] <amigojapan> Nice arahael 
[12:17:28] <PlanckWalk> Pff.
[12:17:44] <vdamewood> Nya-Nya-hime demands attention.
[12:17:56] <vdamewood> constantly.
[12:18:09] <arahael> amigojapan: It was the first I could get, and it's also a good one, so yeah.
[12:18:17] <amigojapan> vdamewood: your cat?
[12:18:33] *** Quits: ravan_ (~ravan@user/ravan) (Quit: Leaving)
[12:18:33] <vdamewood> yeah
[12:18:44] <amigojapan> I see
[12:18:46] *** Joins: ravan_ (~ravan@user/ravan)
[12:18:56] <arahael> vdamewood: Are you sure that's your cat?  Usually it's the other way around.
[12:18:59] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[12:19:06] <arahael> vdamewood: Perhaps you're their human?
[12:19:54] *** Quits: realae (~realae@171.121.42.245) (Quit: Connection closed)
[12:20:29] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[12:20:31] *** Joins: tkob (tkob@2607:5300:60:21b::1)
[12:20:34] *** Joins: dfoolz (~dfoolz@static.114.137.9.176.clients.your-server.de)
[12:20:35] *** Joins: schna (sid484866@id-484866.helmsley.irccloud.com)
[12:20:37] *** Joins: zwr (~zwr@2804:d45:b966:fb00:daf:bd40:117d:c6e9)
[12:20:38] *** Joins: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f)
[12:20:38] *** Joins: mweckbecker (~matthias@weckbecker.name)
[12:20:39] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-3882-8296-aad6-55bf.res6.spectrum.com)
[12:20:41] *** Joins: fichid (~fichid@2a00:d880:3:2::2cf0:1238)
[12:20:42] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[12:20:42] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:2c47:49c3:bcfa:a298)
[12:20:45] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[12:20:50] *** Joins: johan (~johan@user/johan)
[12:20:58] *** Joins: cncr04s (~cncr04s@afxr.net)
[12:21:02] *** Joins: derelict (derelict@user/derelict)
[12:21:02] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[12:21:04] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 252 seconds)
[12:21:09] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[12:21:17] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[12:21:28] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[12:21:57] <amigojapan> arahael: I am not sure who is who with you and aradesh 
[12:22:12] <amigojapan> Similar names
[12:22:27] <vdamewood> arahael: Oh,,yes, I'm her human.
[12:22:30] <arahael> amigojapan: No idea who aradesh is.
[12:22:53] <amigojapan> Alright arahael just another user in here
[12:22:59] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:23:13] <arahael> amigojapan: I'll keep a wary eye on them, then. ;)
[12:23:47] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[12:24:09] <amigojapan> Alright arahael 
[12:28:19] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[12:28:31] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[12:28:31] *** Joins: menace (~someone@user/menace)
[12:30:09] *** Quits: thetourist108 (~thetouris@2001:470:69fc:105::3112) (Quit: You have been kicked for being idle)
[12:30:25] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:30:25] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:30:25] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:31:03] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:31:15] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[12:31:16] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:31:29] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[12:34:26] *** Joins: otisolsen70_ (~otisolsen@sas08072.nat.sas.com)
[12:34:46] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[12:35:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[12:35:14] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:35:26] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[12:36:30] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:36:38] *** Quits: shailangsa_ (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) ()
[12:36:39] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-04cc-b6ed-267b-4319.res6.spectrum.com) (Quit: jarthur_)
[12:37:29] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:37:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[12:37:39] *** Quits: otisolsen70_ (~otisolsen@sas08072.nat.sas.com) (Remote host closed the connection)
[12:38:01] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91b6:1448:b1dc:d7cc) (Ping timeout: 245 seconds)
[12:38:36] *** Quits: quetzl (~quetzl@user/quetzl) (Remote host closed the connection)
[12:41:43] *** Joins: theglass (~glass@246.ip-137-74-113.eu)
[12:41:43] *** Quits: theglass (~glass@246.ip-137-74-113.eu) (Changing host)
[12:41:43] *** Joins: theglass (~glass@user/theglass)
[12:42:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:42:58] *** Joins: mrig (~mrig@user/mrig)
[12:45:17] *** Joins: AMG (ghebo@2605:6400:c847:1449::9441)
[12:45:20] <vdamewood> Food!
[12:48:30] <snake> DnzAtWrk, im a big fan of google
[12:48:34] *** Quits: jtgd (~jay@user/jtgd) (Ping timeout: 252 seconds)
[12:49:02] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:49:16] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Quit: WeeChat 3.2)
[12:49:59] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[12:51:23] <vdamewood> Oh, yay. All of my homebrew packages are getting replaced with packages that use Python 3.10 instead of 3.9. I can get rid of 3.9 soon.
[12:52:09] <snake> vdamewood, i sold my macbook pro on ebay btw
[12:52:23] <vdamewood> snake: Oh. Did you get a new one?
[12:52:34] <snake> nah, probably gonna get an arm laptop for linux
[12:52:45] <snake> perhaps a pinebook but i dont like the extra large return key
[12:52:56] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[12:53:28] <vdamewood> snake: Get one with a US layout.
[12:54:38] <Obscenity> snake: all they are good for, heh
[12:54:48] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[12:55:11] <Obscenity> hear apple got forced to change to USB-C in EU
[12:55:17] *** Joins: saribro (~swinnenb@user/swinnenb)
[12:55:21] <snake> vdamewood, oh the US layout has a single row enter key?
[12:55:35] <vdamewood> snake: https://note2self.tistory.com/entry/Difference-between-US-QWERTY-and-International-QWERTY-Apple-keyboards
[12:55:38] <bayaz> Title: Difference between US QWERTY and International QWERTY Apple keyboards? 
[12:55:40] <snake> Obscenity, the MBP i had was usb-c only
[12:55:43] *** Joins: beep (~beep@171.121.42.216)
[12:55:50] <snake> it was actually the neater feature of that laptop
[12:56:04] <snake> 4 usb-c ports. and a headphone jack
[12:56:06] <snake> none else
[12:56:07] <vdamewood> Obscenity: That hasn't happened yet, and it's only going to apply to iPhones and iPads when it does apply.
[12:56:40] <snake> vdamewood, ty i will double check
[12:56:41] <Obscenity> it would solve half of the dongle problems
[12:57:06] <vdamewood> I just replaced all of my USB cabled with USB-C cables.
[12:57:36] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 245 seconds)
[12:58:28] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 252 seconds)
[12:58:39] <snake> i think you're right but i wish they would take better pictures on their site lol... it has the US layout showing single row enter key, but the photo of the laptop itself shows the large enter key of the international variety
[12:58:50] <snake> vdamewood, nice
[12:58:59] <snake> yeah i like usb-c it gives me good vibes
[12:59:17] <snake> its not flimsy like microusb and miniusb but its also not bulky like usb-a
[12:59:47] <snake> plus you can do power, data, monitor, etc all over usb-c so it's more universal and generic
[12:59:51] <Obscenity> the only bad thing about USB-C are the cheap ones, they just rip all the cables out, so its like, USB 2.0 speed
[13:00:28] <Obscenity> like what Nintendo used on their new dock
[13:00:55] <snake> the dock only needs power though, right?
[13:00:59] *** Joins: Atque (~Atque@user/atque)
[13:01:00] <snake> oh and video too i suppose
[13:01:01] <vdamewood> Well, the USB cable on the doc is meant only for power.
[13:01:01] <snake> nvm
[13:01:02] <Obscenity> Power, HDMI, Ethernet. Over USB-C 2.0
[13:01:14] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Quit: Goodbye, Have a good day/night! :D)
[13:01:28] <vdamewood> there's a separate HDMI port on the switch docl.
[13:01:31] <vdamewood> dock
[13:01:44] <beaky> macros debunked why we should avoid all macros https://ianthehenry.com/posts/janet-game/the-problem-with-macros/
[13:01:45] <bayaz> Title: Making a Game in Janet, Part 3: The problem with macros 
[13:01:52] <snake> yeah but video has to go thru the usb-c to get to the hdmi right?
[13:01:57] <Obscenity> yeah
[13:02:01] <vdamewood> No.
[13:02:23] <snake> how does the video go from the console to the dock to the tv then
[13:02:27] <Obscenity> vdamewood, think about it, how does the HDMI come out of the switch
[13:02:32] <snake> is it wireless?
[13:03:51] <Obscenity> the switch itself has a full bandwidth USB-C port, that plugs into the dock, the dock only has a USB 2.0 controller
[13:03:52] <snake> i thought for a minute earlier that it was power only, but then i remembered the hdmi is on the dock and not on the console
[13:04:20] <vdamewood> Obscenity: Oh, Gotcha.
[13:04:36] <snake> sometimes the framerate drops when im in korok forest
[13:04:43] <vdamewood> Yeah, the switch's 'doc port' is just a USB-C connector.
[13:04:50] *** Quits: bw__ (sid2730@2a03:5180:f:3::aaa) ()
[13:04:50] <Obscenity> snake: yeah everybody gets that
[13:04:51] <snake> i wonder if that is the gpu or the usb causing it
[13:04:52] <snake> o
[13:05:00] <vdamewood> snake: GPU
[13:05:04] <snake> oic
[13:05:05] <Obscenity> can overclock it a bit and it helps
[13:05:27] *** Joins: bw__ (sid2730@id-2730.ilkley.irccloud.com)
[13:05:31] <beaky> overclock your mac
[13:05:40] *** Joins: rexar89 (~alexi5@208.83.82.234)
[13:05:45] <snake> beaky, did i tell you that i sold my MBP on ebay
[13:05:48] * vdamewood overmacs his clock.
[13:05:53] <Obscenity> i use Tesla Overlay, with the sys-clk module, so i can pop an overlay in game and overclock on the fly
[13:05:57] <snake> lol vdamewood 
[13:05:58] <beaky> nice did you get a new mac
[13:06:09] <snake> beaky, no i will get a pc and install linux next time
[13:06:22] <snake> s/pc/laptop/
[13:06:47] <vdamewood> snake: I forget, which country are you in?
[13:07:08] *** bw__ is now known as bw
[13:07:20] *** Quits: bw (sid2730@id-2730.ilkley.irccloud.com) (Changing host)
[13:07:20] *** Joins: bw (sid2730@user/betawaffle)
[13:07:23] <snake> usa
[13:07:33] <vdamewood> Oh, North east, right?
[13:07:38] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:07:42] <snake> yeah
[13:07:49] <snake> you are from oregon right?
[13:07:53] <vdamewood> Yep.
[13:08:12] <vdamewood> How did you get a non-US Apple keyboard, then?
[13:08:52] <vdamewood> Or are you annoyed with the US-sized return key?
[13:08:55] *** Quits: DarkKnight0007 (~mxl@117.10.145.54) (Ping timeout: 252 seconds)
[13:09:08] <snake> no no i said the laptop i was considering to buy next (pinebook pro) seemed to have a large return key
[13:09:18] <vdamewood> Ohhh... okay.
[13:09:20] <snake> but actually it might be normal sized, its just confusing on their website
[13:09:25] <vdamewood> I misunderstood.
[13:09:29] <snake> no worries
[13:09:40] <Obscenity> got an ASUS right now, horizontal enter key
[13:10:12] <snake> idk why but i've bought a lot of laptops over the years
[13:10:27] <snake> its kind of a waste
[13:10:38] <vdamewood> snake: Looks like the pinebook has half-again the width of a normal key on the right-most keys compared to the MacBook Pro.
[13:11:08] <Obscenity> can at least use them as a farm or something
[13:11:09] <vdamewood> I wait for my macs to completely die before I replace them.
[13:11:12] <Obscenity> maybe servvers
[13:11:32] <snake> nah i gave my dad one and my cousin one
[13:11:45] <snake> the one i gave my dad was especially nice, but i always had windows on it
[13:11:50] <snake> not sure if it ran linux very well
[13:12:00] <snake> and i broke a few
[13:12:03] <snake> before that
[13:12:13] <Obscenity> couldnt use one myself, the fact is essentially BSD but half-baked, kills it for me
[13:12:39] <arahael> snake: ansi vs iso keyboard layout.
[13:12:42] <snake> Obscenity, you don't like linux?
[13:12:45] <Obscenity> used a mac mini, couldnt even tell what a "macho" file was, couldnt run its own executables
[13:12:47] *** Joins: DarkKnight0007 (~mxl@117.10.145.54)
[13:13:14] <Obscenity> snake: I do, i dont like Applified BSD tho
[13:13:22] <snake> oh we're discussing apple again
[13:13:26] <snake> we're all lost a little lol
[13:13:29] <Obscenity> hah
[13:13:51] <vdamewood> Obscenity: Are you sure there wasn't something else going on, such as the executable being for the wrong architecture or something?
[13:14:02] *** Joins: kenanmarasli_ (~kenanmara@user/kenanmarasli)
[13:14:09] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[13:14:22] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Ping timeout: 250 seconds)
[13:14:24] <snake> Obscenity, my greivances are a bit shallow, i dont like the control option command layout
[13:14:26] <Obscenity> I assumed the mac mini was x86 so thats what the binary was in
[13:14:34] <snake> i mean shortcuts are backwards
[13:14:37] <Obscenity> hah yeah
[13:14:42] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:14:47] <snake> and there were some bugs in apple apps so i just use google calendar etc
[13:14:53] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[13:14:56] <Obscenity> i heard theres a 6 key "shortcut" to take a screenshot
[13:15:09] <vdamewood> It's 3 keys.
[13:15:10] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[13:15:10] *** Quits: pavonia_ (~user@user/siracusa) (Quit: Bye!)
[13:15:17] <snake> i think it was command option 4
[13:15:25] <snake> but i just used my touchbar instead
[13:15:26] <snake> lol
[13:15:28] *** Joins: ixil (~ixil@82.197.178.137)
[13:15:30] <Obscenity> golden oldie: https://www.youtube.com/watch?v=3CrQjfgvqJQ
[13:15:31] <bayaz> Title: Why mac sucks 
[13:15:34] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:15:37] <snake> Obscenity, hehe
[13:15:41] <vdamewood> Command-Shift 3 for full screen. Command-shift-4 for a partial.
[13:15:54] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[13:16:03] <vdamewood> Command-Shift-4 then space will select a window and screenshot just the Window.
[13:16:04] *** Quits: bdeshi (~bdeshi@45.86.163.209) (Ping timeout: 252 seconds)
[13:16:14] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[13:16:14] *** Joins: Mathisen_ (mathisen@about/windows/staff/mathisen)
[13:16:46] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 245 seconds)
[13:17:10] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 252 seconds)
[13:17:13] <beaky> when will apple release the apple m1x the fastest cpu
[13:17:15] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[13:17:21] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:17:26] <vdamewood> beaky: Next month at the earliest.
[13:17:33] <arahael> beaky: *after* they've announced it.
[13:17:44] <arahael> They don't announce it until the 16, or 18th, right?
[13:18:02] <snake> i hope they find a way to make great bugless software that's intuitive to use
[13:18:07] <vdamewood> 18th is what I heard the next date is.
[13:18:12] <vdamewood> s/date/event/
[13:18:18] <snake> windows seems to have made a lot of progress on that front, but apple has retrogressed just a little
[13:18:30] <snake> since 10.6
[13:18:34] *** Joins: jtgd (~jay@user/jtgd)
[13:18:48] <snake> perhaps the m1x chips will help with that somehow
[13:19:08] <snake> or maybe they are sales people first, programmers second
[13:19:09] <snake> idk
[13:19:12] <beaky> next month damn that's when alder lake is releasing the fastest cpu
[13:19:25] <Obscenity> yknow, with all this AI and ML stuff going around, i have yet to see an AI that can write programs
[13:19:29] <beaky> imagine how fast i can compile code in it
[13:20:13] <Obscenity> i have seen AI assistancefor people writing, but thats about it
[13:20:17] <vdamewood> beaky: Use both and your tea database with be the screaming fastest.
[13:21:27] <Obscenity> beaky: wonder if the next one is eliot lake, then it would be.... eliot alders' son
[13:21:29] <amigojapan> Obscenity: how would you tell the ai what kind of program you want?
[13:21:31] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 268 seconds)
[13:21:31] *** Joins: geonic0 (~geonic@144.202.104.101)
[13:21:31] *** Quits: geonic0 (~geonic@144.202.104.101) (Changing host)
[13:21:31] *** Joins: geonic0 (~geonic@user/geonic)
[13:21:35] <Obscenity> if you get that reference
[13:21:49] *** kenanmarasli_ is now known as kenanmarasli
[13:22:09] <Obscenity> amigojapan: probably the same way you tell AIDungeon what kind of dungeon you want
[13:22:20] <beaky> a tea dungeon
[13:22:30] <snake> ai doesnt give me good vibes
[13:22:39] <beaky> but i like ai
[13:22:46] <snake> idk, people seem to think its like magic
[13:22:54] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:22:58] <amigojapan> Aidungeon has some crazy ncps
[13:23:05] <Obscenity> the movie named "AI" was just ok
[13:23:07] *** Quits: geonic (~geonic@user/geonic) (Ping timeout: 240 seconds)
[13:23:07] *** geonic0 is now known as geonic
[13:23:32] <snake> ai itself is very hard work
[13:24:03] <Obscenity> yeah, need a lot of resources and/or time to generate models
[13:24:11] <amigojapan> Obscenity: once in aidungeon.i stole the ornaments from a church and sold them. Then an anti guy came out and pummelled me until I was dead
[13:24:36] <snake> why does anyone think that an AI could write programs for us tho
[13:24:39] <snake> it keeps coming up
[13:25:33] <snake> its just a middleman at that point
[13:25:35] <amigojapan> snake: cause it is a difficult task for an ai
[13:25:36] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[13:25:47] <snake> developer -> ai -> software
[13:25:49] <Obscenity> well, if you had one write games, at least theres a lot of traning candidates that are all basically clones of eachother
[13:25:57] <snake> cut out the middleman
[13:25:59] <Obscenity> dayz, rust, ark, etc
[13:26:19] <snake> Obscenity, that's still a pie in the sky idea
[13:26:53] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[13:26:53] <snake> don't forget that to build an AI you need developers and careful design
[13:27:01] <snake> but the applications are usually more specific
[13:27:07] <snake> programming is extremely broad
[13:27:42] <Obscenity> thats true, theres a lot of ways to write Hello World
[13:27:54] *** Quits: yang_ (~yang@gnulinux.si) (Changing host)
[13:27:54] *** Joins: yang_ (~yang@fsf/member/yang)
[13:27:57] <snake> that's not what i meant
[13:28:32] <Obscenity> you dont mean the same things could be written different ways?
[13:28:36] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[13:29:03] <snake> nope
[13:29:16] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 245 seconds)
[13:29:16] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[13:29:16] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: xodazuwe[m] (~xodazuwem@2001:470:69fc:105::f80c) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: a_train[m] (~austintra@2001:470:69fc:105::da5e) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: reddishblue[m] (~reddishbl@2001:470:69fc:105::21eb) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: relmnight[m] (~relmnight@2001:470:69fc:105::f982) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: Z[m]1 (~zincognit@2001:470:69fc:105::e306) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: cornedor[m] (~cornedorm@2001:470:69fc:105::ffd7) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Quit: Bridge terminating on SIGTERM)
[13:29:21] *** Quits: nightowl1[m] (~neon2919m@2001:470:69fc:105::e482) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: otapiot[m] (~otapiotma@2001:470:69fc:105::fe07) (Quit: Bridge terminating on SIGTERM)
[13:29:22] *** Quits: YoungChiefBTW (~youngchie@2001:470:69fc:105::214c) (Quit: Bridge terminating on SIGTERM)
[13:29:23] *** Quits: Alpha3031 (~alpha3031@wikipedia/alpha3031) (Quit: Bridge terminating on SIGTERM)
[13:29:28] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Client Quit)
[13:29:34] <Obscenity> um
[13:29:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:30:06] *** Quits: espero_ (~espero@ucitelonline.pedf.cuni.cz) (Quit: Leaving)
[13:30:11] <Obscenity> looks like some service went down
[13:30:12] <flakonium_tubes> spammmm
[13:30:22] <Obscenity> same subnet
[13:30:27] <snake> computer vision for identifying pedestrians, road markings, signs, and other aspects related to safe driving
[13:30:40] *** Joins: Tabmow (~tabmow@user/tabmow)
[13:30:42] <snake> compare that application with just: "programming"
[13:30:43] <flakonium_tubes> spamtrix messenger daemon
[13:30:49] <snake> programming is too broad
[13:31:10] *** Joins: espero (~espero@ucitelonline.pedf.cuni.cz)
[13:31:18] *** Joins: Tempesta (~Tempesta@user/tempesta)
[13:31:28] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[13:31:29] <snake> Obscenity, that was matrix that quit btw you can tell because of the [m]
[13:31:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[13:31:59] *** Quits: Chanakan5591 (~Chanakan5@user/chanakan5591) (Quit: Goodbye, Have a good day/night! :D)
[13:32:15] <amigojapan> They took the blue pill
[13:32:20] *** Parts: espero (~espero@ucitelonline.pedf.cuni.cz) ()
[13:32:22] <snake> lol
[13:33:02] <aradesh> people are always tagging me instead of arahael :D
[13:33:03] *** Joins: illusion80 (~illusion@185.135.96.133)
[13:33:15] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[13:33:27] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[13:33:41] *** yang_ is now known as yang
[13:34:16] *** Quits: xff0x (~xff0x@2001:1a81:53d3:ff00:e392:be3b:ed73:128b) (Ping timeout: 252 seconds)
[13:34:18] <vdamewood> aradesh: IRC nicks are like C function names. Only the first three letters matter.
[13:34:19] <amigojapan> aradesh: there is also a guy just called Ara .I guess cause there are many people
[13:34:33] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[13:34:33] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[13:34:33] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[13:34:33] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[13:34:45] *** Joins: reddishblue[m] (~reddishbl@2001:470:69fc:105::21eb)
[13:34:57] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[13:35:09] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[13:35:09] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[13:35:09] *** Joins: psydroid (~psydroid@user/psydroid)
[13:35:10] *** Joins: YoungChiefBTW (~youngchie@2001:470:69fc:105::214c)
[13:35:10] <Decker> str...()
[13:35:10] *** Joins: a_train[m] (~austintra@2001:470:69fc:105::da5e)
[13:35:11] *** Joins: xff0x (~xff0x@2001:1a81:53d3:ff00:3e1e:c821:8716:28f6)
[13:35:18] *** Quits: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it) (Remote host closed the connection)
[13:35:22] *** Joins: nightowl1[m] (~neon2919m@2001:470:69fc:105::e482)
[13:35:22] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[13:35:22] *** Joins: Alpha3031 (~alpha3031@wikipedia/alpha3031)
[13:35:25] <snake> vdamewood, i dont get it
[13:35:29] <amigojapan> Oh the matrix people are taking the red pill
[13:35:34] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[13:35:38] *** Joins: whaleshunter[m] (~whaleshun@2001:470:69fc:105::daf2)
[13:35:38] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[13:35:39] *** Joins: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it)
[13:35:50] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[13:35:58] <amigojapan> snake: I think he is taking about autocomoplete
[13:35:59] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[13:36:03] *** Joins: relmnight[m] (~relmnight@2001:470:69fc:105::f982)
[13:36:04] *** Joins: guest[m] (~guestkdeo@2001:470:69fc:105::ffb0)
[13:36:18] *** Joins: Z[m]1 (~zincognit@2001:470:69fc:105::e306)
[13:36:20] *** Joins: jinsun_ (~jinsun@user/jinsun)
[13:36:22] <snake> hmm
[13:36:22] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[13:36:46] *** Joins: cornedor[m] (~cornedorm@2001:470:69fc:105::ffd7)
[13:36:46] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[13:36:46] *** Joins: xodazuwe[m] (~xodazuwem@2001:470:69fc:105::f80c)
[13:36:46] *** Joins: otapiot[m] (~otapiotma@2001:470:69fc:105::fe07)
[13:36:48] <vdamewood> snake: In the C standard, it's only required that the first n characters in an function name are significant.
[13:37:03] *** Joins: ZombieMaster[m] (~zombiemas@2001:470:69fc:105::1:e4d)
[13:37:12] <vdamewood> I forget what n is. I think it was as low as 6 in C90.
[13:37:15] *** Joins: Cupcake[m] (~cupcakezo@2001:470:69fc:105::1:17bd)
[13:38:03] <amigojapan> vdamewood: so the rest of the fiction name is just descriptive?
[13:38:06] <GeDaMo> "63 significant initial characters in an internal identifier or a macro name (since C99)" https://en.cppreference.com/w/c/language/identifier
[13:38:07] <bayaz> Title: Identifier - cppreference.com 
[13:39:32] <amigojapan> 63 is quite a bit
[13:39:44] <GeDaMo> "6 significant initial characters in an external identifier (until C99)"
[13:39:57] *** Joins: Chanakan5591 (~Chanakan5@user/chanakan5591)
[13:40:05] *** Joins: nxs__ (~nitronix@5.29.23.150)
[13:40:06] <Decker> borland 3.1 something implemented 32 ... ran into that once
[13:40:15] <Decker> 32 is a lot 63 is overkill :)
[13:40:59] <vdamewood> GeDaMo: So, I was right!
[13:41:07] <GeDaMo> Good guess! :P
[13:41:11] <amigojapan> 6 is easy too few
[13:41:22] <amigojapan> Way too few
[13:41:38] <vdamewood> If you'll notice, all of the functions defined in C90 had, at max, 6 characters.
[13:41:41] <user51> just xor the standard away
[13:42:14] <user51> make a bitstring of rules you listen to and rules you don't
[13:42:42] <vdamewood> amigojapan: 6 was to accommodate systems that were around back then but aren't now.
[13:42:50] <amigojapan> vdamewood: sprintf . If from after that?
[13:43:28] <amigojapan> I see vdamewood I guess it was faster to compile too
[13:43:35] *** Quits: xff0x (~xff0x@2001:1a81:53d3:ff00:3e1e:c821:8716:28f6) (Ping timeout: 260 seconds)
[13:43:46] <pyzozord> when I do a longjmp what happens to the callstack?
[13:44:03] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[13:44:15] <vdamewood> amigojapan: Hmm... you're right, fprintf and sprintf were in C90.
[13:44:33] *** Quits: bluebird (~bluebird@user/bluebird) (Ping timeout: 250 seconds)
[13:44:35] <amigojapan> Right
[13:44:42] <vdamewood> amigojapan: No, it had to do with older linkers only supporting 6 characters.
[13:44:57] <amigojapan> I see
[13:45:03] <vdamewood> Like, the original AT&T Unix linker only supported 6 character symbols.
[13:45:20] <amigojapan> Gotcha
[13:45:44] <vdamewood> pyzozord: It basically gets unwound as if you had returned from every function since setjmp, except without a return value per se.
[13:46:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:46:30] *** Joins: bluebird (~bluebird@user/bluebird)
[13:46:30] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[13:46:43] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 250 seconds)
[13:46:44] <pyzozord> ah right there is setjmp
[13:46:59] *** Joins: Krufu (~AnCELASTR@216.243.47.158)
[13:47:11] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) (Ping timeout: 245 seconds)
[13:47:16] <pyzozord> wait so does it mean that I can only long jump to places I already executed before?
[13:47:24] <amigojapan> vdamewood: anyway my theory of what you said still holds, you could be trying to autocomoplete a certain function with a similar name to another and end up with the wrong once cause of the first 3 letters
[13:47:44] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:47:53] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:48:20] <GeDaMo> Some older Forth implementations would only store the first 3 letters of a defined name
[13:48:26] *** Quits: EnchanterTim (~weechat@thestonedapes.com) (Ping timeout: 245 seconds)
[13:48:35] <amigojapan> Call the wrong function
[13:48:54] <GeDaMo> But they would also store the length
[13:49:05] *** Joins: nx_ (~nitronix@88.198.206.243)
[13:49:12] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[13:49:37] <vdamewood> pyzozord: You can only longjmp back to a setjmp you previously called.
[13:49:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[13:49:58] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:50:12] <pyzozord> ok I see, I haven't thought of that that way
[13:50:23] <vdamewood> pyzozord: So, you call setjmp(), it returns 0. You do some stuff, call longjmp(1), and the code goes back to setjmp only this time it returns 1.
[13:50:27] *** Joins: xff0x (~xff0x@2001:1a81:53d3:ff00:3e1e:c821:8716:28f6)
[13:50:27] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[13:50:31] <pyzozord> so in some sense setjmp remembers the state of the registers
[13:50:55] <pyzozord> so when I jump there it just kind of replaces the registers with how they were at the moment of setjmp, right?
[13:50:58] <Decker> no - everything is realoaded from the stack as needed
[13:51:12] <vdamewood> Well, in C there are no registers.
[13:51:29] <pyzozord> I mean under C what is it actually doing in assembly
[13:51:35] <pyzozord> (for x86_64)
[13:51:43] <Decker> or heap (there's no stack or heap in C either :) )
[13:51:50] <vdamewood> To be honest, I don't know.
[13:51:52] *** Quits: nxs__ (~nitronix@5.29.23.150) (Ping timeout: 252 seconds)
[13:51:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:52:00] <Decker> the variables in that scope are still on the stack/heap
[13:52:08] <vdamewood> steap
[13:52:08] <Decker> so the registers are refreshed as needed
[13:52:27] <GeDaMo> It would essentially be doing the same as a context switch
[13:52:30] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[13:52:48] <vdamewood> You're a context switch.
[13:52:49] <Decker> no - a context switch is more transparent
[13:52:58] <pyzozord> as far as I understand context switch means just cold storing all register states
[13:53:01] <Decker> (more complete state?)
[13:53:03] <user51>  performing a nonlocal goto
[13:53:05] <pyzozord> and then retriving them
[13:53:11] <user51>        setjmp, sigsetjmp, longjmp, siglongjmp  - performing a nonlocal goto
[13:53:15] <user51> maybe that also helps pyzozord 
[13:53:20] <Decker> right - taht's not the same as setjmp/longjmp
[13:53:55] <vdamewood> Personally, I wish they had never added setjmp and longjmp to the language.
[13:54:11] <Decker> same
[13:54:17] <user51> i used it a few times, what are the negatives to it?
[13:54:20] <vdamewood> errno works just as well.
[13:54:26] <Decker> exception handling though... might as well complain about signal :)
[13:54:49] <Decker> and graceful returns? :)  I've only run into libpng that actually used it
[13:55:00] <vdamewood> user51: Any function that calls longjmp can no longer be called like a normal function, and must be called in a setjmp context or the program crashes.
[13:55:35] <vdamewood> There's also no way, in the language itself, to indicate that a function calls longjmp.
[13:55:52] <Decker> opt_noreturn? :)
[13:56:00] *** Quits: andypandy_ (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Quit: Bye)
[13:56:02] <vdamewood> Like how in Java you specify int myFunction(int, int) throws StupidException;
[13:56:16] *** Quits: audiocat (~audio@2603-8081-1800-1546-c83b-26d7-50b9-7442.res6.spectrum.com) (Ping timeout: 252 seconds)
[13:56:24] *** Joins: mestre (~mestre@191.177.175.57)
[13:56:31] <vdamewood> Decker: The thing is, functions that use longjmp still return, too.
[13:56:35] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[13:56:43] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (Remote host closed the connection)
[13:56:43] <Decker> that's why it's an optional 
[13:56:54] <vdamewood> Ah, okay.
[13:56:58] *** Joins: Grinchios (~Grinchios@213.205.241.251)
[13:57:06] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[13:57:25] <pyzozord> user51: that actually confuses things more
[13:58:16] <vdamewood> Then it's settled, if I ever make my own C-replacement language, no setjmp and no longjmp.
[13:58:25] *** Quits: qbt (~qbt@user/edun) (Ping timeout: 252 seconds)
[13:58:39] <pyzozord> I'm trying to design my language now abit, just without any knowledge about anything
[13:58:43] *** Joins: cth (~Cthulchu@193.194.107.250)
[13:58:48] <pyzozord> and the first thing I want to add are jumps :D
[13:58:59] <vdamewood> pyzozord: Give it polish keyword names.
[13:59:06] <pyzozord> :D
[13:59:30] <pyzozord> actually my idea is that there is no keywords, language syntax is minimal and uses only symbols
[13:59:37] <amigojapan> vdamewood: it seems setjmp and longjmp were implemented to work like exceptions
[13:59:55] <vdamewood> amigojapan: Yep.
[14:00:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:01:03] *** Joins: EnchanterTim (~weechat@thestonedapes.com)
[14:01:27] <arahael> Interesting, some big players are abandoning cross platform apps - Microsoft and Google are rewriting some of their stuff in native iOS.
[14:01:40] *** Quits: nx_ (~nitronix@88.198.206.243) (Ping timeout: 260 seconds)
[14:01:50] <arahael> pyzozord: So, like APL? :)
[14:01:57] <mobidrop> if you have near unlimited development budget better to write a better native app 2 times
[14:02:00] <vdamewood> drukować("Witaj świecie!")
[14:02:07] *** Joins: Klinda (~superleag@user/klinda)
[14:02:15] <vdamewood> ^ Google translate with a little critical reasoning.
[14:02:46] <pyzozord> hahah "printing("Welcome world!")
[14:02:57] <vdamewood> Gha, fsck.
[14:03:23] <vdamewood> wydrukować?
[14:03:29] <pyzozord> drukuj("Cześć świecie!")
[14:03:43] <pyzozord> but that sounds very awkward
[14:03:56] <amigojapan> arahael: Apple makes it almost impossible to do well on their platform
[14:04:00] <pyzozord> drukuj is a command mode
[14:04:13] <vdamewood> imperative
[14:04:16] <pyzozord> yes
[14:04:26] <vdamewood> So is 'print'.
[14:04:30] <pyzozord> yes
[14:04:48] <vdamewood> print "hello, world" is awkward in English too if you're not used to it.
[14:04:55] <pyzozord> the prefix wy is kind of meaningless. It's like the difference between "print" and "print out"
[14:05:11] <vdamewood> okay, so drop it.
[14:05:22] <pyzozord> arahael: a bit but not exactly
[14:05:25] <vdamewood> I wasn't sure if it changed the mode, or what.
[14:05:39] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[14:05:59] <vdamewood> amigojapan: arahael said APL, not Apple. APL is a programming language.
[14:06:08] <vdamewood> A Programming Language.
[14:06:36] <vdamewood> APL is famous for using mathy symbols in its syntax to the point that it needed a special keyboard to type.
[14:06:41] <arahael> amigojapan: Arguably.
[14:07:02] <arahael> And yes, I did mean the mathy language.
[14:07:26] <DPA> It's said to be a write only language.
[14:08:07] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Reconnecting)
[14:08:09] * vdamewood installs some write-only memory.
[14:08:13] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:08:21] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[14:08:22] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:08:41] <amigojapan> vdamewood: arahael oh I thought you meant apple and Android cross platform apps. I have heard of APL
[14:08:47] <user51> i'm also thinking about making a language, you hit some pretty interesting tradeoffs tho
[14:08:56] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[14:09:12] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:09:18] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Client Quit)
[14:09:32] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[14:09:33] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[14:09:39] <arahael> amigojapan: Actually, I'm getting a bit tired, I also mentioned that.
[14:09:46] *** Joins: mestre (~mestre@191.177.175.57)
[14:09:50] <arahael> amigojapan: Let me find an interesting twitter feed:
[14:10:04] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:10:05] <amigojapan> Ah ok arahael 
[14:10:06] <arahael> https://twitter.com/stevesi/status/1448143393175965697
[14:10:24] * edgar-rft fills vdamewood's write-only memory with random shit
[14:10:30] <vdamewood> So... I use dark mode on my machine, and I just switched tabs to a blinding web page that's black on white. I was going to complain, but then I noticed I'm one of the maintainers of the site, and the one who wrote its current CSS.
[14:10:54] <Decker> :) that's a 'doh!'
[14:10:54] <arahael> vdamewood: We've all been there.
[14:11:41] <edgar-rft> dark mode should only allowed to use black for fore and background colors
[14:11:44] <amigojapan> arahael: that says Mac OS, not iOS
[14:11:45] *** Quits: jtgd (~jay@user/jtgd) (Read error: Connection reset by peer)
[14:12:01] <user51> i wonder if there's some language theory which says that a language wants to do everything, but then nobody would use such a language
[14:12:24] *** Joins: jtgd (~jtgd@user/jtgd)
[14:12:32] <arahael> amigojapan: There is increasingly less difference, and anyway, look into the comments - Google's Material Design is mentioned there, and they're rewriting on native *iOS*.
[14:12:36] <arahael> amigojapan: (UIKit is iOS)
[14:12:52] *** Joins: qbt (~qbt@user/edun)
[14:13:02] <amigojapan> Ah ok arahael 
[14:13:11] <edgar-rft> user51: I think that's because 99% of everything cannot be done with computers
[14:13:17] <GeDaMo> https://www.mcmillen.dev/language_checklist.html
[14:13:18] <bayaz> Title: Programming Language Checklist | Colin McMillen 
[14:13:34] *** Joins: nx_ (~nitronix@5.29.23.150)
[14:13:40] <vdamewood> user51: Not really, but there's Stroustrup's quote about how there are two kinds of languages: those that people complain about and those that no one uses.
[14:13:55] *** Joins: Guest5645 (~Guest56@118.96.226.95)
[14:14:28] * arahael takes that form off GeDaMo, glares at him in the eye, and whilst maintaining solid eye contact...  Tears the form in half!
[14:14:38] <user51> edgar-rft: i was thinking more about the fact that (1) people need to learn the lang (2) people need to read/write in the lang
[14:15:28] <user51> so if you have a lnaguage with so many things - it's hard to learn, and if so many things are accomodated, you'll need to do some weird set selection to get anything done
[14:16:03] <arahael> GeDaMo: Seriously though, those are excellent!
[14:16:11] <user51> vdamewood: i'm familiar with that quote, and i'm reminded of another one, something about compiler optimizations paying for themselves
[14:16:34] <GeDaMo> https://en.wikipedia.org/wiki/PL/I "The language is designed to be all things to all programmers" 
[14:16:35] <bayaz> Title: PL/I - Wikipedia 
[14:17:21] *** Joins: nxs__ (~nitronix@5.29.23.150)
[14:18:03] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[14:18:08] <GeDaMo> "Compiler Optimizations Should Pay for Themselves" https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.9965&rep=rep1&type=pdf
[14:18:09] <bayaz> Type: application/pdf Size: 110.2 kB 
[14:18:11] *** Joins: inky_ (~inky@46.162.255.176)
[14:18:17] *** Joins: mestre (~mestre@191.177.175.57)
[14:18:42] <pyzozord> here are my loose ideas for my language. I spent so far no more than 2h thinking about it https://termbin.com/rwds
[14:18:43] <bayaz> Type: text/plain; charset=utf-8 
[14:19:28] *** Quits: inky (~inky@46.241.132.21) (Ping timeout: 252 seconds)
[14:19:58] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 265 seconds)
[14:20:16] <user51> pyzozord: designing a lang is fun, but it might be better to simply take a few programming exercises and see how your language does
[14:20:20] *** Joins: giacomo (giacomo@gateway/vpn/protonvpn/giacomo)
[14:20:27] *** Quits: giacomo-c (~giacomo@107.13.177.67) (Ping timeout: 265 seconds)
[14:21:17] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-3882-8296-aad6-55bf.res6.spectrum.com) (Quit: Leaving.)
[14:21:40] *** Quits: _inky (~inky_@46.241.132.21) (Ping timeout: 252 seconds)
[14:22:48] <user51> GeDaMo: i like the language checklist
[14:22:52] *** Joins: black_syntax (~manas@122.161.48.153)
[14:23:49] <user51> pyzozord: http://www.craftinginterpreters.com/contents.html might help
[14:23:50] <bayaz> Title: Table of Contents · Crafting Interpreters 
[14:23:50] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:6030:a6d6:3b41:c54) (Quit: Leaving)
[14:24:22] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6030:a6d6:3b41:c54)
[14:24:37] <pyzozord> thanks
[14:25:33] <pyzozord> it's not a serious language, it's just something so I can try and write a backtracking recursive descend parser
[14:25:46] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[14:26:02] *** Joins: mestre (~mestre@191.177.175.57)
[14:27:11] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 245 seconds)
[14:28:21] *** Joins: nx_ (~nitronix@88.198.206.243)
[14:28:31] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[14:30:11] <pyzozord> that language checklist is funny
[14:30:17] <pyzozord> but also such a downer :P
[14:30:42] <pyzozord> I believe Jon Blow would check at least some of these boxes but his language seems to be doing fine
[14:30:46] <user51> maybe, but on the other side - you can treat it as more stuff to learn and see
[14:31:08] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:31:20] *** Quits: mestre (~mestre@191.177.175.57) (Quit: leaving)
[14:31:25] *** Quits: nxs__ (~nitronix@5.29.23.150) (Ping timeout: 265 seconds)
[14:31:55] *** Joins: nxs__ (~nitronix@88.198.206.243)
[14:32:07] *** Parts: black_syntax (~manas@122.161.48.153) (WeeChat 3.3)
[14:32:26] *** Quits: nx_ (~nitronix@88.198.206.243) (Read error: Connection reset by peer)
[14:32:51] *** Quits: Kraig (uid454603@id-454603.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[14:33:19] *** Joins: mestre (~mestre@191.177.175.57)
[14:34:23] *** Quits: mestre (~mestre@191.177.175.57) (Client Quit)
[14:34:57] *** Joins: mestre (~mestre@191.177.175.57)
[14:34:58] <pyzozord> what the difference between statement and expression?
[14:35:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:35:30] <vdamewood> pyzozord: An expression yields a value, a statement is a 'command' or a thing to do.
[14:35:51] <vdamewood> 2 + 2 <-- expressionl; print "hello world" <-- statement.
[14:36:17] <user51> terminal, nonterminal, tnt, true, not true, words cannot express how much i hate yacc right now!
[14:36:34] <vdamewood> pyzozord: In some languages, (such as C) all statements are also expressions.
[14:37:04] *** Joins: _inky (~inky_@46.162.255.176)
[14:37:58] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:38:52] <varaindemian> how can I allign this basic sign in button with what I have above? Currrently it's on the left side and it's small. I want it to have the same size as the 2 input fields above
[14:38:55] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[14:38:57] <vdamewood> Actually, I take that back, some C statements aren't expressions in C. such as if statements.
[14:38:59] <user51> vdamewood: really? mentally it doesn't make sense to me that "var = stat" would work
[14:39:04] <varaindemian> https://www.irccloud.com/pastebin/rAxfZ3qv/
[14:39:05] <bayaz> Title: Snippet | IRCCloud 
[14:39:24] <varaindemian> `<a class="c6788"`
[14:39:56] <vdamewood> user51: expand stat to an actual statement.
[14:40:23] <arahael> vdamewood: I often wish that 'if' was an expression, in languages that don't do that.
[14:40:28] <user51> var = if(true);
[14:40:32] <amigojapan> vdamewood: do you know hot and sour soup?
[14:40:33] <arahael> vdamewood: (Such as in C. I wish it was an expression in C)
[14:41:08] <user51> arahael: that's new to me - in what situations is that useful?
[14:41:12] <varaindemian> anyone?
[14:41:16] <vdamewood> user51: Expand it to a statement I didn't just say "Oops I'm wrong about."
[14:41:33] <vdamewood> s/ about."/" about./
[14:41:34] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[14:41:43] <arahael> user51: It basically becomes your ternary operator, but with much better syntax.
[14:41:47] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[14:41:50] <vdamewood> varaindemian: Have some patience.
[14:41:57] <vdamewood> amigojapan: Yes.
[14:42:27] *** Joins: nx_ (~nitronix@5.29.23.150)
[14:42:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:42:41] *** EnchanterTim is now known as Hash
[14:42:46] <vdamewood> arahael: Like python: x = y if y > 2 else 2
[14:42:57] <amigojapan> vdamewood: in Japan they have made an instant cup version of that. And it tastes like the real thing
[14:43:01] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[14:43:13] <arahael> vdamewood: Pretty much, yeah. Or like haskell: x = if y > 2 then y else 2
[14:43:25] <arahael> varaindemian: THat looks just like a bit of HTML to me.
[14:43:26] *** Quits: nxs__ (~nitronix@88.198.206.243) (Remote host closed the connection)
[14:43:34] <vdamewood> amigojapan:  Yay!
[14:43:46] <amigojapan> :)
[14:43:47] <user51> arahael: so it's like a 2-option switch statement?
[14:44:06] <vdamewood> varaindemian: It would probably help if you didn't use inline css.
[14:44:11] <arahael> user51: Sure, yes, but less verbose. :)
[14:44:32] <varaindemian> vdamewood: not sure how :(
[14:44:50] <cursey> or like a ternary operator but more verbose
[14:44:59] *** Joins: nxs__ (~nitronix@88.198.206.243)
[14:45:05] <vdamewood> <head><style type="text/css"> /* put style here */ </style></head>
[14:46:01] <vdamewood> maybe you don't need the type="text/css" attribute there.
[14:46:08] <user51> arahael: http://sprunge.us/dHeFTn
[14:46:18] <user51> verbose enough? :P
[14:47:05] <arahael> user51: Well, thats' not haskell! That's... A void function.
[14:47:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[14:47:53] <user51> yeah, x should have been a pointer. but here's your less 2-option switch in c :P
[14:47:58] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 252 seconds)
[14:48:00] <user51> don't use it for a factorial!
[14:48:16] <arahael> user51: It's ghastly! :)
[14:49:11] *** Joins: black_syntax (~manas@122.161.48.153)
[14:49:35] <user51> http://sprunge.us/Hu28Ot
[14:50:26] <arahael> user51: Again...  Ghastly! :)
[14:50:41] <user51> i think a min/max version would be more sanitary
[14:50:48] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[14:51:13] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Ping timeout: 252 seconds)
[14:51:20] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[14:51:31] <user51> also that was just something i wrote a while ago taking lazy eval into account
[14:51:44] *** bdeshi- is now known as bdeshi
[14:51:55] <arahael> user51: Haskell gives you lazy eval for free.
[14:52:11] <user51> a[0] should have been quoted, and it would do 'return eval a[n >= 0]'
[14:52:25] <GeDaMo> fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
[14:52:47] * arahael purrs.
[14:52:49] *** Quits: black_syntax (~manas@122.161.48.153) (Changing host)
[14:52:49] *** Joins: black_syntax (~manas@user/black-syntax/x-1135959)
[14:53:02] <edgar-rft> ....also a sanitary version would fit much better into your bathroom
[14:53:25] *** Quits: black_syntax (~manas@user/black-syntax/x-1135959) (Quit: WeeChat 3.3)
[14:55:17] *** Joins: cn-j (~cn-j@user/cn-j)
[14:55:54] <user51> arahael: i once wrote a similar version, but for an alu, wrongly enough not in a switch..
[14:56:18] <user51> so all possibilities were evaluated :D wonder if there's some compiler magic for that
[14:57:41] <user51> at the time i believe i considered switch (in c) a bit dirty, because you had fallthrough and stuff, and it kept the code shorter
[14:58:00] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[15:00:27] <arahael> user51: What I dislike about switch in C is that it doesn't really help ensure you've covered all the possibilities.
[15:01:16] <leduyquang753> You can rarely actually cover all the possibilities.
[15:01:28] <user51> arahael: how many possibilities do you have?
[15:01:35] <vdamewood> You can if you can cover rangers instead of discrete values
[15:01:52] *** Quits: beep (~beep@171.121.42.216) (Ping timeout: 265 seconds)
[15:02:10] <vdamewood> ranges*
[15:02:15] *** Joins: izak (~user@196.189.63.130)
[15:02:23] *** Quits: Guest5645 (~Guest56@118.96.226.95) (Quit: Client closed)
[15:02:58] <leduyquang753> Which is the job of if chains.
[15:03:13] <arahael> vdamewood: Do you have an example?
[15:03:43] <arahael> user51: Well, consider in C, an enum is effectively stored as an int, so you have 2^(sizeof(int)*CHAR_BIT) possibilities.
[15:04:09] <vdamewood> arahael: Visual Basic allows for things like case < 5; case >= 5 and < 10 and so on.
[15:04:43] <leduyquang753> GNU has an extension with `case 5..10`.
[15:05:32] <vdamewood> Though, Visual Basic's select case statement gets converted to an if/else if chain if you do stuff like that.
[15:05:43] <arahael> vdamewood: Ah, yes, but that's not C>
[15:06:08] <user51> arahael: i mean practically, how many possibilities do you have?
[15:06:19] <TJ->  case 1 ... 5 converts to case 1: case 2: case 3: case 4: case 5: 
[15:06:20] <vdamewood> arahael: Oh, That wasn't a response to you directly.
[15:06:37] <vdamewood> arahael: I was replying to leduyquang753's comment after yours.
[15:06:45] <varaindemian> how can I make this button have a link behind it?
[15:06:54] <varaindemian> https://www.irccloud.com/pastebin/S40RfTKM/
[15:06:55] <bayaz> Title: Snippet | IRCCloud 
[15:07:18] <arahael> user51: More to the point, I want the compiler to be able to prove that all possibilities were covered.
[15:07:29] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: No route to host)
[15:08:26] *** Joins: diophantoz (~diophanto@user/diophantoz)
[15:08:46] <user51> ok, tell me if i'm not understanding correctly: you assume the input to the switch is in the range of 2^N, and you want each possibility covered?
[15:08:56] <vdamewood> varaindemian: You're not making it very easy to help you, and with your style inlined that and not properly formatted, you're less likely to get help.
[15:09:48] <vdamewood> err inlined like that
[15:10:24] <arahael> user51: THe reason I assume that, is because C lacks the ability to further contrain an enum.
[15:10:35] <arahael> *constrain, rather.
[15:10:39] <TJ-> The point about switch statements is they're a higher level abstraction around indirect jump tables at the assembly/opcode level and those low-level operations do not handle ranges on most microprocessors
[15:10:43] * vdamewood hands arahael an enum class
[15:10:58] <arahael> vdamewood: enum classes are indeed slightly better, yeah.
[15:11:15] <varaindemian> vdamewood: not sure how to beautify it
[15:11:19] <user51> well, two options come to mind: filter ranges with if statements, or mask off the uneeded bits
[15:12:02] <vdamewood> varaindemian: Like I said above, put your style in a <style> element in your <head> section.
[15:12:17] <arahael> user51: In haskell, I'd do this with: case foo of OptionA -> aStuff; OptionB -> bStuff;
[15:12:20] *** Joins: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[15:12:30] <arahael> user51: For a given type foo that has precisely two constructors, OptionA, and OptionB.
[15:13:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:14:11] <varaindemian> vdamewood: yeah but how.. can you show me?
[15:14:24] <pyzozord> I know how I will name my language. "$TACK" and it's going to have .$ file extension :P
[15:14:42] <pyzozord> because $ will be the symbol refering to values on stack
[15:14:47] <vdamewood> varaindemian: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style
[15:14:48] <bayaz> Title: <style>: The Style Information element - HTML: HyperText Markup Language | MDN 
[15:14:50] <user51> pyzozord: cashtack?
[15:15:17] <user51> arahael: what does a constructor do? the haskell wiki page looks like psychoanalysis
[15:15:18] *** Quits: menace (~someone@user/menace) (Quit: menace)
[15:15:54] <arahael> user51: A "constructor" is basically an enum value.
[15:16:13] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 268 seconds)
[15:17:16] <arahael> user51: And they're denoted as such - types have an uppercase letter at the start: Foo = OptionA | OptionB (This is effectively: enum Foo { OptionA; OptionB })
[15:17:39] <user51> thanks, that's much more practical
[15:18:21] <izak> hi guys, in a recursive function is it possible to access a local variable from the previous instance of the recursion ? language == c. thanks.
[15:19:22] <dTal> the entire point of implementing a loop as recursion is tight control over what state gets passed from iteration to iteration
[15:19:35] <arahael> user51: The significant difference here, is that you *can't* have a value for something that is of type Foo, that isn't OptionA or OptionB.  If it's of type Foo, it has to be either one, or the other, and ntohign else.
[15:19:38] <arahael> *nothing else.
[15:20:05] <vdamewood> izak: only if you pass it as a parameter.
[15:20:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:20:31] <izak> thanks vdamewood :)
[15:21:50] *** Joins: Leone (~Leo@216.154.21.17)
[15:22:29] <izak> thanks dTal :)
[15:22:45] <user51> arahael: i think bitmasks are the closest approximation i have here
[15:22:46] <dTal> izak: sorry, I wasn't very helpful was I :)
[15:23:13] * vdamewood bites user51's mask
[15:23:47] <user51> i can't recommend chewing on silicon
[15:24:12] <arahael> user51: Thing is...  *all* types in Haskell are done in this way.
[15:24:33] <izak> dTal: no information is helpless... specially from this channel :)
[15:25:11] <izak> dTal: a little bit cryptic, but a helpful.
[15:25:15] <dTal> I am curious what problem you are solving?
[15:25:38] <arahael> user51: And this isn't a limtiation when you consider extending the enum type as follows: enum Foo { FooFloat(float), FooInt(int) }; where your type can now either be a FooFloat (containing a float), or a FooInt (containing an int).
[15:25:38] <izak> leetcode lastBadVersion 
[15:25:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[15:25:50] <arahael> user51: And you can compose them indefinitely.
[15:25:59] *** Quits: AMG (ghebo@2605:6400:c847:1449::9441) (Changing host)
[15:25:59] *** Joins: AMG (ghebo@user/amg)
[15:25:59] *** Joins: beep (~beep@171.121.42.216)
[15:26:20] <izak> firstBadVersion *
[15:26:43] <user51> arahael: that's pretty much out of my area of experience
[15:27:17] <user51> as in, i've never had a situation where i thought about having something like that
[15:27:45] <arahael> user51: It turns out that having the compiler check all this for you results in being able to refactor quite fearlessly.
[15:28:04] *** Quits: nulleip (~luiz@189.34.167.234) (Ping timeout: 252 seconds)
[15:28:10] <user51> maybe set membership is the closest thing i did
[15:28:31] <dTal> izak: Hm, interesting. It's not immediately obvious to me how recursion helps in this problem.
[15:28:46] <Decker> arahael :) enum coverage... I guess.. sometimes I find it annoying; but I compile my C as C++ so maybe that's where it comes from?
[15:28:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[15:29:08] *** Quits: hassoon_ (hassoon@grape.ircnow.org) (Changing host)
[15:29:08] *** Joins: hassoon_ (hassoon@user/hassoon)
[15:29:09] *** hassoon_ is now known as hassoon
[15:29:14] <arahael> Decker: Well, if you're doing that, you might as well use C++'s "enum classes" instead.
[15:29:21] <arahael> They're _slightly_ better.
[15:30:01] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:30:05] *** Joins: nulleip (~luiz@189.34.167.234)
[15:30:06] <arahael> Actually, I might even say they're _significantly_ better.
[15:30:06] <user51> i think i discussed something similar on a different channeel before: e.g make enum define a set, then do set membership on that. if we're there we could also allow enums inside enums - is that equivalent to the haskell constructor business?
[15:30:10] <user51> arahael: ^
[15:30:29] <dTal> izak: ah, now I do.
[15:31:05] <arahael> user51: No, C can't do it.
[15:31:37] <user51> yeah, it's not the right language, but languagecrafting is a fun and impractical thing to do :)
[15:31:44] <izak> dTal: https://pastebin.com/K4Gy1pF6 this is my code
[15:31:46] <bayaz> Title: intfirstBadVersion(int version){ bool bad = isBadVersion(version); - Pastebin.com 
[15:31:50] *** Quits: user51 (~user51@176.228.145.255) (Quit: leaving)
[15:32:03] <arahael> :)
[15:32:09] *** Joins: user51 (~user51@176.228.145.255)
[15:32:14] <GeDaMo> I wrote something like algebraic data types in Forth, I used memory addresses as the tags for the constructors
[15:32:15] <arahael> user51: Welcome back. :)
[15:32:41] <Decker> arahael I miss the abilty to do Flags type enums which are or'd and and'd all over... MSC++ (one of them) makes me extend the enum class with bitwise operators
[15:32:49] <Decker> (would miss)
[15:33:18] <arahael> Decker: You could use a Set type.
[15:33:37] <pyzozord> would text written in utf-32 be much bigger than utf-8?
[15:33:47] <pyzozord> oh sorry I mean utf-64
[15:33:48] <Decker> arahael then it would cease to be C
[15:34:01] <Decker> it IS C... 
[15:34:42] *** Joins: xiongxin (~quassel@113.116.224.79)
[15:35:05] *** Joins: src (~src@user/src)
[15:35:13] <vdamewood> pyzozord: There isnot UTF-64.
[15:35:17] <vdamewood> is no
[15:35:50] *** Joins: rexar89 (~alexi5@208.83.82.234)
[15:36:08] <pyzozord> I just checked, indeed.
[15:36:35] <vdamewood> pyzozord: For what it's worth, though, in UTF-32 all characters are 4 bytes long. In UTF-8 each character is 1 to 4 bytes long. Most Latin, Greek, Cyrilic, Hebrew, and Arabic characters are in the 1- or 2-byte ranges in UTF-8.
[15:36:37] <pyzozord> I asked because I want my language to be completly devoid of any typing information, so I wanted to use native word size for strings
[15:36:50] <Decker> unicode only spans like 22 bits
[15:36:56] <vdamewood> Decker: 21
[15:36:58] <Decker> 20? so 21 is max?
[15:37:01] <Decker> k
[15:37:02] *** Joins: pulse (~pulse@user/pulse)
[15:37:11] <Decker> wellhandles utf8 can do 42 bit :)
[15:37:13] <vdamewood> 0x10FFFF is the max.
[15:37:14] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[15:37:17] <Decker> (ed)
[15:37:33] <Decker> so even at that there's room left over
[15:37:42] *** Joins: gormenghast (~gormengha@37.164.40.192)
[15:37:47] *** Joins: brickfat (~brickfat@user/brickfat)
[15:37:53] <vdamewood> Well, UTF-8 has been limited to 4 bytes by an RFC.
[15:38:08] <Decker> ya.. but that's actually after utf-8 was 'invented'
[15:38:14] <pyzozord> are there any computers that have words smaller than 8?
[15:38:22] <Decker> yes
[15:38:33] <Decker> but they're more like smart chips than computers :)
[15:38:53] <pyzozord> grr that's annyoing
[15:38:53] <vdamewood> pyzozord: smaller than 8 what?
[15:39:04] <vdamewood> bits bytes?
[15:39:04] <Decker> bits
[15:39:05] <pyzozord> 8 bits of course
[15:39:14] <pyzozord> words length is measured in bits, no?
[15:39:25] <vdamewood> Nope. Bytes on most systems that have bytes.
[15:39:26] <Decker> no words is in bytes
[15:39:29] <Decker> usually
[15:39:48] <vdamewood> For example, on x86 a WORD is two bytes.
[15:40:05] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:9dd2:4c7f:fc79:fe16) (Remote host closed the connection)
[15:40:06] <Decker> pre PC mainframes had 2 4 8 byte words
[15:40:24] <Decker> though I guess theereum measures its words in 256 bits
[15:40:27] <vdamewood> a dword is 4 bytes. A qword is 8 bytes (amd64 only).
[15:40:37] *** Quits: gormenghast (~gormengha@37.164.40.192) (Client Quit)
[15:40:47] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:9dd2:4c7f:fc79:fe16)
[15:40:51] *** Joins: gormenghast (~gormengha@37.164.40.192)
[15:41:09] <vdamewood> I guess I should also specify that dwords are i386 and later only.
[15:41:41] <pyzozord> ok so stack with item size of native word may be not good
[15:41:51] <Decker> nah we had dw on 286, had do to do half-value opertions in registers
[15:41:52] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[15:41:57] <Decker> but then ax:dx form a dword result
[15:42:20] <Decker> dx:ax I guess
[15:42:24] *** Joins: BenLand100 (~bland@user/benland100)
[15:42:25] <vdamewood> pyzozord: Some architectures require stack frames be of a minimum size.
[15:42:36] <Decker> especially stack
[15:42:44] *** Quits: DarkKnight0007 (~mxl@117.10.145.54) (Ping timeout: 268 seconds)
[15:42:50] <pyzozord> vdamewood: what do you mean?
[15:42:50] <vdamewood> amd64 requires 16 bytes minimum.
[15:43:04] <pyzozord> ah ok
[15:43:04] <vdamewood> Oh, waitn, not, it requires 16-byte alignment.
[15:43:16] <vdamewood> s/n, not/ no/
[15:43:47] <pyzozord> whats native word length for amd64
[15:43:59] <pyzozord> amd64 is x86_64 right?
[15:44:01] <vdamewood> It had 3, 2-, 4-, and 8.
[15:44:12] <vdamewood> Yes, it is.
[15:44:44] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[15:45:58] <pyzozord> ok I guess I'm pretty much forced to do stack with native word size and then just pack utf-8 strings in it
[15:46:08] *** Joins: anovick (~anovick@IGLD-83-130-138-203.inter.net.il)
[15:46:18] <pyzozord> so I can't have one stack element == one utf-8 character
[15:46:54] <pyzozord> that's annyoing though that leads to type system because now I need to remember what size is the pointer etc
[15:47:09] <pyzozord> I'd like to take a look at c before it had types
[15:47:23] <vdamewood> Oh, here's a fun thing, On amd64, pointers are 48-bit signed values.
[15:47:28] <vdamewood> ... sorta.
[15:47:31] *** Joins: DarkKnight0007 (~mxl@117.10.145.54)
[15:48:11] <GeDaMo> pyzozord: there's BCPL which is likely to be similar
[15:48:14] <dTal> izak: you may need to define a helper function with a different signature, so you can pass all the information you need to make the recursion work
[15:48:43] <GeDaMo> ... or maybe not https://en.wikipedia.org/wiki/BCPL#Examples
[15:48:44] <bayaz> Title: BCPL - Wikipedia 
[15:49:00] <pyzozord> "The language is unusual in having only one data type: a word" - perfect, thanks!
[15:49:01] <dTal> izak: you also probably don't want to be incrementing version by 1, since that's a pretty inefficient search
[15:49:01] <vdamewood> They're signed because there's a big gap of invalid addresses right in the middle, so only the lower 48-bits are used, and the upper 8 (amking 64-total bits) are sign padded to match the MSB of the lower 48.
[15:49:12] <GeDaMo> https://en.wikipedia.org/wiki/B_(programming_language)#Examples
[15:49:12] <bayaz> Title: B (programming language) - Wikipedia 
[15:49:16] *** Quits: dante4431 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Ping timeout: 245 seconds)
[15:49:35] <GeDaMo> pyzozord: that's the same as Forth, it's all 'cells' which are machine words
[15:49:59] <vdamewood> Alas, BCPL was designed for 16-bit machines with only one word size.
[15:50:29] *** Joins: pulse (~pulse@user/pulse)
[15:50:40] *** Quits: DarkKnight0007 (~mxl@117.10.145.54) (Client Quit)
[15:50:45] <pyzozord> GeDaMo: can forth handle utf8 strings? how does it store them on stack?
[15:50:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[15:51:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:51:19] <pulse> it has problems with ... the fourth string
[15:51:29] <pulse> i'll walk myself out
[15:51:42] *** Joins: dante4431 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[15:51:49] <GeDaMo> Strings don't get stored on the stack, only addresses
[15:52:03] <pyzozord> ah ok
[15:52:10] <GeDaMo> Or individual characters as machine words
[15:52:10] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[15:52:20] <pyzozord> well I want in my programming language to be only stack, no other memory type
[15:52:28] *** Joins: humky (~humky@user/humky)
[15:53:02] <^-^hi> pyzozord: increasingly brainfuck
[15:53:16] <^-^hi> no types, only signs ...
[15:53:25] *** Quits: _inky (~inky_@46.162.255.176) (Ping timeout: 252 seconds)
[15:54:14] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[15:55:06] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[15:56:47] <user51> heh, that's nice, a c formatter works almost okaysih on awk :D
[15:56:52] <pyzozord> need to take a look at brainfuck again
[15:58:04] <vdamewood> no types, only Zuul
[15:59:31] <pyzozord> hehe
[15:59:33] <^-^hi> XUL dead :(
[16:00:42] <^-^hi> It doesn't look lovely, but old Firefox worked better so I think it was better when it was alive
[16:01:30] *** joev1 is now known as joev
[16:02:14] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[16:05:06] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 245 seconds)
[16:05:12] <pyzozord> do all computer memory addressing scheme are byte-based?
[16:05:22] *** Joins: Telvana (~capo@user/telvana)
[16:05:34] <pyzozord> meaning can any computer address memory with bit precision?
[16:06:09] <macaw> You really should look into assembly pyzozord.
[16:06:45] <user51> maybe the early nand2teris chapters could help
[16:06:47] <pyzozord> I know assembly kind of
[16:06:48] <macaw> I'd be betting on "No", because it's doable, but processors don't really want to talk in individual bits today.
[16:07:21] <pyzozord> yeah i suspect so too, there always some weird arch
[16:07:38] <deniska> pyzozord: I don't think there's any modern practical architectures capable of addressing individual bits
[16:07:50] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[16:07:54] <deniska> pyzozord: if anything, many can't even do unaligned byte reads
[16:08:01] <pyzozord> i wonder how does c handle those kind of archs
[16:08:05] <deniska> (not divisible by 2 or by 4)
[16:08:15] <pyzozord> well actually c uses the abstract machine so I guess that's either OK or UB :P
[16:08:34] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[16:08:43] <vdamewood> pyzozord: I've heard of systems where memory addresses specified a first bit.
[16:08:47] <deniska> pyzozord: historically `char` was supposed to be the smallest addressable unit
[16:09:01] <deniska> practically it's always 8 bit nowadays :)
[16:09:22] *** Joins: humky (~humky@user/humky)
[16:09:22] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[16:09:22] <vdamewood> pyzozord: So, address n would be one span of, say, 16 bits, and address n+1 would be the last 7 of the first, and one after that.
[16:09:35] <vdamewood> err last 15 and one more.
[16:09:36] *** Joins: humky (~humky@user/humky)
[16:10:42] <user51> i miss bit packing :(
[16:11:10] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:11:19] * vdamewood packs the naughty bits
[16:12:02] <pyzozord> hmm, maybe I could let the base size by customizable
[16:12:56] <pyzozord> in amd64 the word size is probably 4, how do we know it's addresing resolution is 1 (byte)
[16:13:31] <pyzozord> oh sorry I guess I meant to say "probably 8" since that makes it 64 bit wide
[16:14:27] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[16:15:19] <vdamewood> words are 2-bytes on amd64.
[16:15:31] <vdamewood> dwords are 4 bytes. qwords are 8.
[16:15:48] *** Quits: tkob (tkob@2607:5300:60:21b::1) (Remote host closed the connection)
[16:16:04] *** Joins: humky (~humky@user/humky)
[16:16:13] <pyzozord> oh so "word" is not the same as "register size"
[16:16:29] <pyzozord> then what good is "word"? is it useful for anything
[16:16:59] <vdamewood> word is the size of a value the CPU can operate on. amd64 is designed to be backwards compatible with a 16-bit machine.
[16:17:15] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[16:17:19] <vdamewood> ... and a 32-bit machine that's designed to be backwards compatible with the 16-bit machine.
[16:18:06] <pyzozord> so amd64 can't operate on single byte, it must have at least two?
[16:18:19] <vdamewood> No. It can operate on a single byte, too.
[16:18:46] *** Quits: gormenghast (~gormengha@37.164.40.192) (Read error: Connection reset by peer)
[16:19:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:19:55] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb)
[16:20:36] <pyzozord> then I'm not sure what information does "word" have for me
[16:21:32] <pyzozord> if cpu can operate on 1,2,4,8 bytes and register size is 8 bytes. Then what information I get from knowing that it's "word" is 2 bytes?
[16:21:45] *** Joins: humky_ (~humky@user/humky)
[16:24:07] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[16:24:48] *** Joins: humky (~humky@user/humky)
[16:25:39] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb) (Read error: Connection reset by peer)
[16:25:45] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:dd48:1c77:fa63:9a2d) (Quit: Textual IRC Client: www.textualapp.com)
[16:25:49] *** Joins: gormenghast (~gormengha@37.164.40.192)
[16:26:12] *** Quits: gormenghast (~gormengha@37.164.40.192) (Read error: Connection reset by peer)
[16:26:56] *** Quits: humky_ (~humky@user/humky) (Ping timeout: 265 seconds)
[16:27:30] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb)
[16:28:19] <vdamewood> pyzozord: Don't forget that the x87 also has 80-bit registers.
[16:28:38] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb) (Remote host closed the connection)
[16:28:40] *** Joins: rtypo (~alex@user/rtypo)
[16:28:42] <vdamewood> (10 bytes)
[16:28:47] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb)
[16:28:52] <pyzozord> i think that "word" business is maybe just some historical artifact
[16:29:23] <pyzozord> it was meant as "register size" or "instruction size" or "address size" or something like that, but it lost it's meaning completly maybe?
[16:29:43] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[16:30:12] <vdamewood> Well, there were once computers that had 'words' but not 'bytes'.
[16:30:29] <vdamewood> The Gemini Guidance Computer has 19-bit words, and no 'bytes'.
[16:30:33] <pyzozord> yeah then it probably made sense
[16:32:07] <vdamewood> Also, yes, words used to mean register or address size. (But almost never instruction size.)
[16:32:24] <vdamewood> But it's *very* common for register and address size to not quite match up.
[16:32:33] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[16:33:02] <vdamewood> The 8086 for example has 20-bit addresses represented by two overlapping 16-bit registers. Words were 2-bytes.
[16:34:36] <pyzozord> is there a name for smallest addressable memory?
[16:34:50] <pyzozord> om given arch
[16:35:53] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[16:36:15] <gas51627> hi all
[16:36:23] <gas51627> can I ask here about bnf ?
[16:36:31] <gas51627> or is there a better place?
[16:36:57] <gas51627> I am trying to understand yaml's bnf and I see something that does not make  sense to me
[16:37:11] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 245 seconds)
[16:37:18] <gas51627> I tried yaml channel but it seems to be not very active
[16:38:02] *** Joins: _inky (~inky_@46.162.255.176)
[16:38:07] *** Joins: Teckla (~Teckla@user/teckla)
[16:38:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 245 seconds)
[16:39:36] <gas51627> anyway, here is a definition of the block scalar header: https://yaml.org/spec/1.2.2/#811-block-scalar-headers
[16:39:37] <bayaz> Title: YAML Ain’t Markup Language (YAML™) revision 1.2.2 
[16:39:47] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Read error: Connection reset by peer)
[16:40:07] <gas51627> and below are examples and even the first example does not make sense
[16:40:19] <gas51627> since the only thing it contains is a comment
[16:40:42] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[16:41:05] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[16:42:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (lead.libera.chat (Nickname regained by services)))
[16:42:07] *** vinleod is now known as vdamewood
[16:42:31] <vdamewood> pyzozord: Did my answer get through?
[16:43:35] <pyzozord> vdamewood: i think so, thanks. Last I saw was about 8086
[16:44:00] *** Joins: brickfat (~brickfat@user/brickfat)
[16:44:01] <pyzozord> vdamewood: 15:03 < vdamewood> The 8086 for example
[16:44:06] <vdamewood> pyzozord: re: is there a name for smallest addressable memory? --- BYTE
[16:44:25] <pyzozord> no that didn't get through
[16:44:42] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d0cb:3918:ffe3:7838)
[16:45:36] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:4d28:8fd0:2fa1:d8ac)
[16:46:00] <pyzozord> yeah i guess "byte" is good enough
[16:46:21] <pyzozord> there are those bit addressing archs but whatever
[16:49:12] <pyzozord> eh, screw it. My stack will be just byte size
[16:49:19] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:49:50] <pyzozord> also means that ints will be very small
[16:50:25] <vdamewood> pyzozord: Are you really going to try to target every system that has ever existed?
[16:50:53] <pyzozord> yeah true, that's also hypothetical language
[16:51:05] <vdamewood> pyzozord: You could just target amd64, aarch64, and riscv64gc
[16:51:25] <pyzozord> I want to target at least 16, 32 and 64 bit systems
[16:51:45] <pyzozord> 8 bit systems would be nice too though
[16:52:25] <vdamewood> Good luck finding a 16-bit system these days, or a 32-bit system two years from now.
[16:52:47] *** Quits: paulo (paulo@user/paulo/x-9032687) (Ping timeout: 240 seconds)
[16:52:48] <pyzozord> that's more in case I wanted to write a nes game in my language etc
[16:53:20] <bjs> gas51627: why does it not make sense? doesn't it just mean the header is empty
[16:53:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:54:21] <pyzozord> well ints don't need to be 1 byte really
[16:54:34] <pyzozord> i can make that a compiler option
[16:54:36] *** Joins: ravan (~ravan@user/ravan)
[16:55:06] <pyzozord> "your stack is always based on a byte. How big is your byte? How many bytes your int have?"
[16:55:56] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 245 seconds)
[16:56:07] <pyzozord> need to check again what bcpl does
[16:56:29] *** Joins: federico (~federico@176.206.87.127)
[16:56:52] *** Joins: kodah (~kodah@user/kodah)
[16:57:40] <user51> my bytes are dqwords
[16:58:11] *** Quits: src (~src@user/src) (Quit: Leaving)
[16:58:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:58:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:58:47] *** Joins: jsmooth (~quassel@068-186-087-058.res.spectrum.com)
[16:58:47] *** Quits: jsmooth (~quassel@068-186-087-058.res.spectrum.com) (Changing host)
[16:58:47] *** Joins: jsmooth (~quassel@user/jsmooth)
[16:59:10] <vdamewood> I want to make an architecture with fwords and swords.
[16:59:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:59:43] <pyzozord> haha swords would be perfect
[16:59:48] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[16:59:58] * vdamewood wonders if pyzozord gets what an 'fword' is.
[17:00:05] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[17:00:23] *** Joins: paulo (paulo@user/paulo/x-9032687)
[17:00:31] *** Joins: pulse_ (~pulse@user/pulse)
[17:00:32] *** Quits: derpy (~quassel@dslb-002-202-113-152.002.202.pools.vodafone-ip.de) (Remote host closed the connection)
[17:00:42] <pyzozord> f-word? Yes I do
[17:00:47] <vdamewood> Yay!
[17:00:55] <pyzozord> I am east-european, but not THAT easy european :P
[17:00:56] <vdamewood> The f-word if fu...nction.
[17:01:01] <pyzozord> s/easy/east/
[17:01:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:01:04] *** Quits: inky_ (~inky@46.162.255.176) (Ping timeout: 252 seconds)
[17:01:13] <vdamewood> s-s/easy/east/--
[17:01:22] *** Joins: inky_ (~inky@141.136.76.213)
[17:01:35] <pyzozord> I'm thinking, to avoid type system I might encode types in operators
[17:01:43] <vdamewood> int+
[17:01:51] <vdamewood> 2 int+ 3 = 5
[17:01:54] <pyzozord> either 5 +4 5
[17:02:01] <pyzozord> or 5 ++++ 4
[17:02:19] <pyzozord> I'm getting suprising and unintentionally close to brainfuck indeed :D
[17:02:33] <vdamewood> You mean brainsword
[17:02:40] <pyzozord> one exception that single "+" would mean "default size"
[17:03:04] <vdamewood> Then how would you do one byte?
[17:03:13] <pyzozord> damn it, i just realized it too
[17:03:43] <vdamewood> Use unicode symbols.
[17:03:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[17:04:02] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[17:04:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:04:25] <pyzozord> nah must be ansi
[17:04:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:05:26] <pyzozord> byte add could be \+ maybe?
[17:05:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:06:31] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 252 seconds)
[17:06:34] *** Quits: jamea (~jamea@177.239.84.39) (Ping timeout: 265 seconds)
[17:08:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:09:29] *** Parts: nulleip (~luiz@189.34.167.234) ()
[17:10:35] *** Joins: humky (~humky@user/humky)
[17:10:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:10:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:11:06] <pyzozord> well how about this, no default :P
[17:11:18] <pyzozord> mind blown
[17:11:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:11:59] <pyzozord> will make people use smaller values because 4 + 4 looks better than 4 ++++ 4
[17:12:21] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[17:12:26] * [itchyjunk] sacrifices a virgin integral to summon mawk 
[17:12:47] *** Joins: nulleip (~luiz@189.34.167.234)
[17:13:30] <mawk> yes [itchyjunk] ?
[17:13:42] <[itchyjunk]> works every time
[17:13:49] <[itchyjunk]> how do i use an activation function?
[17:14:00] <[itchyjunk]> i do the dot product and get some value 
[17:14:11] <[itchyjunk]> now i can pass it to my sigmoid function
[17:14:15] <mawk> well then you feed that value to the activation function
[17:14:18] <[itchyjunk]> but what am i supposed to do?
[17:14:30] <mawk> activation_function(result of the dot product)
[17:14:38] <[itchyjunk]> activation function would return some (0,1) right?
[17:14:47] <[itchyjunk]> then i pass that forward?
[17:15:02] <mawk> yeah
[17:15:15] <[itchyjunk]> or do i have an if statement that says, if activation_function > .9 pass forword else shut up?
[17:15:19] <mawk> if you don't have an activation function your whole network can be reduced to just 1 layer
[17:15:25] <mawk> it wouldn't be a neural network, just a big useless matrix
[17:15:27] <mawk> no
[17:15:38] <mawk> you pass the result of the activation function
[17:15:40] <[itchyjunk]> i don't understand that part, someone else tried telling me that too
[17:15:43] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[17:15:44] *** Quits: nxs__ (~nitronix@88.198.206.243) (Remote host closed the connection)
[17:15:50] <mawk> but then if your activation function is a step function, it is equivalent to what you said
[17:15:57] *** Joins: nxs__ (~nitronix@88.198.206.243)
[17:15:57] <[itchyjunk]> if i don't have activation function in my hiddel layers it collapses bac to a linear something
[17:16:04] *** Joins: brickfat (~brickfat@user/brickfat)
[17:16:11] <[itchyjunk]> ahh i am using sigmoid
[17:16:15] <mawk> if the activation function is f(x) = {0 if x < 0.5; else x} then it's like shutting off the neuron if its output is lower than 0.5
[17:17:00] <mawk> well if you don't have an activation function, or if the activation function is the identity, your network just multiplies matrices together right
[17:17:06] <mawk> and the result of matrix multiplication is still a matrix
[17:17:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:17:14] <mawk> so the whole network is equivalent to a single layer, with an identity activatiobn
[17:17:18] *** Joins: yeirr (~yeirr@user/yeirr)
[17:17:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:17:43] <[itchyjunk]> when i have an activation, it's still matrix no?
[17:18:01] <[itchyjunk]> i'm still doing dot products and such
[17:18:40] *** Joins: inky (~inky@46.162.255.176)
[17:20:06] *** Quits: inky_ (~inky@141.136.76.213) (Ping timeout: 245 seconds)
[17:20:10] <mawk> yes, but you have calls to the activation function in the middle
[17:20:30] <mawk> like matrix(activation(matrix(activation(...))))
[17:20:39] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[17:20:43] <mawk> if activation is the identity, this reduces to matrix*matrix*matrix which is a new matrix
[17:20:58] <[itchyjunk]> hmmmm
[17:21:05] <mawk> so activation cannot be the identity
[17:21:15] <mawk> otherwise you're just building one ugly matrix multiplication program
[17:22:36] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 245 seconds)
[17:22:43] <[itchyjunk]> so i want activation for my output layers too?
[17:23:01] <[itchyjunk]> i didn't have it for my input layers, i have it for my hidden layer
[17:23:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:23:15] <mawk> it's not necessary for the output
[17:23:24] <[itchyjunk]> or the input?
[17:23:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:23:38] <[itchyjunk]> ah so i am almost at the point where i need to figure out how to back prop
[17:23:38] <mawk> you have it between the inner layers
[17:23:49] <[itchyjunk]> right, i only have 1 hidden layers
[17:23:57] <[itchyjunk]> so i only use it in those 2 neurons
[17:24:17] <vdamewood> Yay, I just learned something.
[17:24:22] *** Quits: izak (~user@196.189.63.130) (Remote host closed the connection)
[17:26:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:26:23] *** Quits: anovick (~anovick@IGLD-83-130-138-203.inter.net.il) (Ping timeout: 265 seconds)
[17:26:37] <pyzozord> vdamewood: what did you learn?
[17:27:05] *** Quits: Grinchios (~Grinchios@213.205.241.251) (Remote host closed the connection)
[17:27:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:27:23] *** Joins: Grinchios (~Grinchios@213.205.241.251)
[17:27:34] *** Joins: uzee (~uzee@86.36.37.198)
[17:28:17] <vdamewood> CMake has a few automatically setup variables, some names start with CMAKE_PROJECT, some with PROJECT, and some with <name of project>. These are set when you call project(). I just learned that they have different uses. CMAKE_PROJECT always refers to the top-level project. <Project Name> refers to the named project (of course), and PROJECT refers to the current project.
[17:28:51] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[17:29:02] <[itchyjunk]> mawk, https://bpa.st/R5AA
[17:29:03] <bayaz> Title: View paste R5AA 
[17:29:19] <[itchyjunk]> now i just need to get the back prop spoon fed to me
[17:29:23] <vdamewood> So if you have Project(MyProject ...) and in a subdirectory you have Project(MyOtherProject ...) Then, in the subdirectory, CMAKE_PROJECT_NAME is "MyProject" and PROJECT_NAME is "MyOtherProject"
[17:30:19] <pyzozord> cool, good to know it supports subprojects by default
[17:31:16] *** Quits: quazimod1 (~quazimodo@n1-41-179-164.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[17:31:49] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[17:31:49] *** Quits: quazimodo (~quazimodo@n1-41-179-164.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[17:32:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:32:36] <mawk> activation is between the hidden layers [itchyjunk] I think
[17:32:48] <mawk> or at least between input and 1st hidden layer
[17:33:08] <[itchyjunk]> activation happens at the layer though
[17:33:13] <[itchyjunk]> in between is just weights
[17:33:26] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Remote host closed the connection)
[17:33:41] <mawk> what
[17:33:55] <mawk> you apply it to the output the neuron
[17:34:14] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[17:34:21] <mawk> so, to the output of each neuron before each hidden layer
[17:34:24] <[itchyjunk]> the value of the first hidden neuron is the result of the activation function
[17:34:35] <[itchyjunk]> applies to the dot product of all neurons connected to it
[17:35:08] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[17:35:09] <[itchyjunk]> yes output of other neurons , but what i get back from the activation is the value of the hidden neuron
[17:35:26] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[17:36:15] <[itchyjunk]> http://www.sketchtoy.com/70197513
[17:36:16] <bayaz> Title: An animated sketch 
[17:38:21] <[itchyjunk]> mawk, do i have to implement backprog by doing tons of multiplicatin and such?
[17:39:37] *** saribro is now known as swinnenb
[17:40:06] *** Quits: deniska (~denis@user/deniska) (Ping timeout: 245 seconds)
[17:41:21] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:41:48] *** Joins: deniska (~denis@user/deniska)
[17:41:51] *** xavie is now known as xcombelle
[17:42:16] *** Quits: _inky (~inky_@46.162.255.176) (Ping timeout: 252 seconds)
[17:42:22] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:42:41] *** Joins: yeirr (~yeirr@user/yeirr)
[17:42:49] *** Quits: inky (~inky@46.162.255.176) (Ping timeout: 265 seconds)
[17:46:31] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:46:43] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[17:48:05] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb) (Read error: Connection reset by peer)
[17:48:14] *** Joins: gormenghast (~gormengha@37.164.40.104)
[17:48:26] *** Joins: nx_ (~nitronix@5.29.23.150)
[17:48:34] *** Joins: dllcache (~about@106.211.131.174)
[17:48:34] *** Quits: gormenghast (~gormengha@37.164.40.104) (Read error: Connection reset by peer)
[17:48:45] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb)
[17:48:59] <dllcache> Hi anyone here?
[17:49:05] <Decker> rarely
[17:49:26] *** Joins: humky (~humky@user/humky)
[17:49:35] <dllcache> How to compile .net frameworks c++ libraries and classes from notepad++?
[17:49:46] <dllcache> IDE?
[17:49:59] *** Joins: inky (~inky@31.7.162.99)
[17:50:11] <[itchyjunk]> I am not here
[17:50:12] <Decker> I've never tried to find their source...but first get a copy of that and follow the included instructiosn I'd imagine
[17:50:27] <Decker> most things do have a thing 'compile' or 'readme' or even 'install' 
[17:50:45] <[itchyjunk]> Are libraries compiled?
[17:51:04] *** Quits: nxs__ (~nitronix@88.198.206.243) (Ping timeout: 252 seconds)
[17:51:05] <[itchyjunk]> i thought something.c or something.h were the library files, just things with code in it?
[17:51:32] <dllcache> I don't want to download the whole visual studio as I have a poor internet.
[17:51:46] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[17:51:50] <Decker> there are command line tools... 
[17:51:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[17:52:13] <Decker> https://www.npmjs.com/package/windows-build-tools 
[17:52:14] <bayaz> Title: windows-build-tools 
[17:52:24] <[itchyjunk]> How big is it?
[17:52:29] <[itchyjunk]> And how slow could the internet be?
[17:52:38] <[itchyjunk]> Few 100 mb?
[17:52:39] <Decker> (that of course requires installing node which is like 50meg(?))
[17:52:42] <[itchyjunk]> You could torrent it
[17:52:45] <Decker> 2G/
[17:52:54] <Decker> ?
[17:52:56] *** Joins: yeirr (~yeirr@user/yeirr)
[17:52:58] <[itchyjunk]> visual studios is 2Gb?
[17:53:05] *** Quits: on^ (~on@wsip-70-165-23-55.mc.at.cox.net) (Remote host closed the connection)
[17:54:23] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[17:54:28] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[17:54:36] *** Joins: humky (~humky@user/humky)
[17:55:13] *** Joins: xsperry (~xs@user/xsperry)
[17:56:00] <Decker> https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019
[17:56:02] *** Joins: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[17:56:10] <Decker> but then that goes to a downloader ... 
[17:56:57] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[17:56:58] <Decker> the IDE part adds 2-3G
[17:57:23] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[17:57:54] *** Joins: humky (~humky@user/humky)
[17:58:10] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: Ping timeout (120 seconds))
[17:58:12] <mawk> probably [itchyjunk] 
[17:58:31] *** Joins: Geronimo (~Geronimo@user/geronimo)
[17:58:57] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[17:59:28] <[itchyjunk]> i found some example where it's just computed in a simple manner. i'll try that when i calm down a bit
[17:59:29] *** Joins: pulse_ (~pulse@user/pulse)
[17:59:48] *** Joins: LiftLeft (~LiftLeft@102.165.16.134)
[18:00:34] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:01:21] *** Joins: audiocat (~audio@2603-8081-1800-1546-9f5a-e373-8203-155a.res6.spectrum.com)
[18:02:35] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:e895:76de:9eb2:bdcb) (Ping timeout: 260 seconds)
[18:02:44] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[18:02:46] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Client Quit)
[18:04:28] *** Joins: derpy (~quassel@dslb-002-202-113-152.002.202.pools.vodafone-ip.de)
[18:05:32] *** Joins: gormenghast (~gormengha@37.164.2.240)
[18:05:58] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:06:43] *** Parts: dllcache (~about@106.211.131.174) (AndroIRC)
[18:07:07] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[18:08:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[18:08:57] *** Quits: Grinchios (~Grinchios@213.205.241.251) (Remote host closed the connection)
[18:09:16] *** Joins: Grinchios (~Grinchios@213.205.241.251)
[18:10:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[18:12:01] *** Quits: inky (~inky@31.7.162.99) (Ping timeout: 252 seconds)
[18:13:40] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 252 seconds)
[18:16:20] *** Quits: Grinchios (~Grinchios@213.205.241.251) (Remote host closed the connection)
[18:16:33] *** Joins: Grinchios (~Grinchios@213.205.241.251)
[18:17:06] *** Joins: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net)
[18:17:08] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 265 seconds)
[18:17:23] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[18:17:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:17:52] *** Joins: node1 (~node1@user/node1)
[18:17:52] *** Quits: node1 (~node1@user/node1) (Client Quit)
[18:17:59] *** Joins: node1_ (~node1@43.230.42.181)
[18:18:08] *** Quits: node1_ (~node1@43.230.42.181) (Remote host closed the connection)
[18:18:23] *** Joins: node1 (~node1@user/node1)
[18:22:37] *** Joins: _inky (~inky_@31.7.162.99)
[18:24:15] *** Parts: CaCode (~user@user/cacode) (ERC (IRC client for Emacs 26.1))
[18:25:07] *** Joins: todda7 (~torstein@75.red-83-36-23.dynamicip.rima-tde.net)
[18:25:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:26:42] *** Joins: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de)
[18:27:36] *** Quits: gormenghast (~gormengha@37.164.2.240) (Quit: Quit)
[18:28:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:29:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:30:41] *** Joins: Grinchioos (~Grinchios@213.205.241.251)
[18:30:41] *** Quits: Grinchios (~Grinchios@213.205.241.251) (Read error: Connection reset by peer)
[18:30:56] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[18:31:39] *** Quits: Grinchioos (~Grinchios@213.205.241.251) (Remote host closed the connection)
[18:32:06] *** Quits: todda7 (~torstein@75.red-83-36-23.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[18:32:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[18:32:42] <vdamewood> Well, it's a step in the right direction, but not a big enough one. macOS 12 is going to pop-up a Window saying the app needs to be updated if it uses Python 2.7.
[18:32:43] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[18:32:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[18:33:01] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Ping timeout: 245 seconds)
[18:33:02] <vdamewood> It would be better if they just dropped it entirely.
[18:33:19] *** Joins: yeirr (~yeirr@user/yeirr)
[18:33:30] *** Joins: mei6 (~mei@user/mei)
[18:34:05] *** Joins: img (~img@user/img)
[18:34:37] *** Joins: src (~src@user/src)
[18:34:46] *** Joins: arcatech (~arcatech@user/arcatech)
[18:36:25] *** Quits: password (~password@user/password2) (Ping timeout: 268 seconds)
[18:36:59] *** Joins: rexar89 (~alexi5@208.83.82.234)
[18:37:39] <node1> Does anyone knows what does `conceptual pool of value` meant in terms of relational model?
[18:38:24] <[itchyjunk]> Is there more context?
[18:38:38] <[itchyjunk]> I am having hard to understanding things I am reading today.
[18:38:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[18:38:57] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:39:01] <node1> Well i have found this term is highly used to denone domain in SQL relational model.
[18:39:22] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 265 seconds)
[18:39:23] <node1> s/denone/denote
[18:39:51] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 265 seconds)
[18:40:14] <vdamewood> Values that can be in the slot.
[18:40:47] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[18:40:56] <node1> you mean tuples?
[18:41:06] <vdamewood> Nope. scalars
[18:41:20] <node1> tuples x attributes
[18:41:25] <node1> ?
[18:41:39] <node1> In short rows and columns of a table?
[18:41:51] <vdamewood> Uh, no. Individual values.
[18:42:01] <node1> means data type?
[18:42:13] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 252 seconds)
[18:42:15] <node1> data type of individual  cell ?
[18:42:21] <GeDaMo> I found this "Type: basically a conceptual pool of values from which actual attributes in actual relations take their actual values" https://quizlet.com/id/224786459/relational-model-flash-cards/
[18:42:50] <node1> tuples x attributes = becomes a relations ship
[18:43:04] *** Joins: xiongxin (~quassel@113.116.224.79)
[18:43:05] <oldlaptop> "conceptual pool of values" sounds like a really roundabout and confusing way of saying "set" to me
[18:43:08] <vdamewood> So, for example, if you have a column that represents a batting average, your conceptual pool of values is 0 to 1000.
[18:43:51] <vdamewood> (batting averages are represented as floor(hits/times_at_bat * 1000)
[18:44:20] <oldlaptop> they don't ever keep the fractional component after the multiplication?
[18:44:31] * oldlaptop does not baseball-stats
[18:44:39] <vdamewood> oldlaptop: Nope. It's just a 3-digit number.
[18:44:57] <vdamewood> So, someone who hits about 30.7% of the time is 'batting 307'.
[18:45:00] <node1> Can you give more simple example?
[18:45:15] <[itchyjunk]> oh this concept exists in probability now?
[18:45:23] *** Joins: dllcache (~about@223.176.32.177)
[18:45:39] <vdamewood> [itchyjunk]: No.
[18:45:43] <oldlaptop> vdamewood: but so is someone who hits 30.75% of the time, or 30.72%?
[18:45:56] <[itchyjunk]> when you flip a coin, it can take either head or tails
[18:45:56] <vdamewood> oldlaptop: Yep.
[18:46:03] <[itchyjunk]> there is a set with {head,tails}
[18:46:15] <[itchyjunk]> same with when you pick a number from 0 to 100
[18:46:19] <[itchyjunk]> {0,..,100}
[18:46:43] <oldlaptop> [itchyjunk]: In the sense that you can think of probability distributions as involving sets, I suppose there's a connection.
[18:46:49] <dllcache> Hi, is an Application Programming Interface (API) is the same as a function, subroutine, subprogram, macro ?
[18:46:49] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[18:47:13] <vdamewood> dllcache: No. an API usually has multiple functions, etc.
[18:48:09] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:48:18] <vdamewood> node1: I'm having difficulty coming up with something simpler.
[18:49:37] *** Joins: Nspace (~Nspace@user/nspace)
[18:49:38] <oldlaptop> node1: You're familiar with types such as "INTEGER" or "NUMERIC" or "VARCHAR(20)"?
[18:49:42] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:49:56] <oldlaptop> (Or, outside sql-land, "int" or "double".)
[18:50:01] *** Quits: rexar89 (~alexi5@208.83.82.234) ()
[18:50:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:50:31] *** Quits: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 245 seconds)
[18:51:01] <[itchyjunk]> oldlaptop, i meant as the space of possible values that can be taken
[18:51:38] <node1> oldlaptop, I'm aware about that
[18:51:43] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[18:52:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[18:53:01] <vdamewood> I guess another way to put it is that it's the set of valid values with regard to the situation being modeled and without regard to implementation specifics.
[18:53:25] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[18:53:59] <oldlaptop> node1: You can think of VARCHAR(20) as a set of possible values. For example, if we assume we're using the ASCII character set, VARCHAR(20) is the set of all ASCII strings with 20 or fewer characters - a finite set of 128^20 values.
[18:54:10] <node1> It's type of domain.
[18:55:01] <oldlaptop> All the other types are probably finite too, though they wouldn't have to be. I could imagine an INTEGER type that stores arbitrary-precision integers, for example - that would be an uncountably infinite set of values.
[18:55:24] <oldlaptop> You could also have an arbitrary-precision real type with an upper and lower bound, for a countably-infinite set.
[18:55:35] <vdamewood> integers would be countably infinite.
[18:55:57] <node1> yes thank you.
[18:56:01] <vdamewood> (reals are the first stage that are uncountably infinite)
[18:56:02] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:56:26] *** Quits: Corwinoid (~Corwinoid@98.40.245.35) (Ping timeout: 265 seconds)
[18:56:34] <oldlaptop> vdamewood: hm, I'm remembering it wrong then
[18:57:36] <oldlaptop> https://en.wikipedia.org/wiki/Countable_set gives a *much* clearer definition than the one that was rattling around in my head for whatever reason.
[18:57:37] <bayaz> Title: Countable set - Wikipedia 
[18:57:53] <vdamewood> oldlaptop: Integers are countably infinite because you can, well, count them, 2 comes after 1. 3 comes after 2, and so on. real's are uncountable because you can't count them. What's the next real after 0.1? It's not 0.2, because 0.15 is between them. It's not 0.15, because 0.125 is berween them, and so on.
[18:58:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:58:52] * oldlaptop tries to remember what the fancy term was for the difference between "All the integers" and "All the reals between 0 and 1" was
[18:58:59] <oldlaptop> (which are both countable)
[18:59:19] <vdamewood> All the reals between 0 and 1 are not countable.
[18:59:42] *** Quits: xiongxin (~quassel@113.116.224.79) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:59:49] <oldlaptop> ...hm.
[19:00:23] <vdamewood> There is a technique to count all of the *ratios*, but not all of the reals.
[19:01:42] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:45] <audiocat> so i want to form a nonprofit organization called "Johnson Foundation." is johnsonf.org a good domain name?
[19:01:51] *** Joins: Jaran (~mail@user/jaran)
[19:02:21] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[19:02:26] <vdamewood> Notreally. Looks like someone's personal site.
[19:02:31] <[itchyjunk]> domain names don't matter too much unless it's completly random
[19:02:53] <oldlaptop> ...hm, I suppose the cardinality of [0, 1] isn't really different than the cardinality of <all reals> in the first place
[19:03:14] <[itchyjunk]> oldlaptop, i think so
[19:03:34] <[itchyjunk]> hmm
[19:03:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[19:03:43] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:05:31] *** Joins: nx_ (~nitronix@5.29.23.150)
[19:05:43] * oldlaptop marvels at the power of floating-point math to corrupt the mind
[19:06:15] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[19:06:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:06:40] <[itchyjunk]> would be nice to learn about the different sizes on infinities
[19:06:47] * vdamewood smacks oldlaptop over the head with a mantissa.
[19:07:12] <vdamewood> [itchyjunk]: For what it's worth, I think we can only really understand three of them.
[19:07:43] <[itchyjunk]> Which ones?
[19:07:49] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 245 seconds)
[19:07:51] <vdamewood> Countables, uncountables, and I think the third one was the number of curves in some dimensional space (2d or 3d)
[19:08:58] <oldlaptop> dammit, there must be *some* difference between [0,1] and <everything>
[19:09:36] <[itchyjunk]> i am talking about that ceph stuff
[19:09:46] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 252 seconds)
[19:10:53] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[19:11:08] <audiocat> vdamewood, ah. any other ideas? the obvious names are taken, even johnsonfdn.org
[19:11:17] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[19:11:26] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Remote host closed the connection)
[19:11:27] <pyzozord> Heh, Guido van Rossum, the creator of python says "and I tried to read the paper, but it was hopeless, I can't read theoretical papers"
[19:11:32] <[itchyjunk]> johnsonf.org seems fine to me.
[19:11:38] <[itchyjunk]> as long as the landing page is appropriate
[19:11:39] <pyzozord> makes me feel better about myself
[19:12:11] <TJ-> audiocat: "johnson.foundation" 
[19:12:25] <TJ-> audiocat: (currently not registered)
[19:12:36] <GeDaMo> pyzozord: new Casey Muratori video https://www.youtube.com/watch?v=Ge3aKEmZcqY
[19:12:36] <GeDaMo> I haven't watched it yet
[19:12:36] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[19:12:37] <bayaz> Title: Simple Code, High Performance 
[19:13:09] <vdamewood> audiocat: what kind of non-profit?
[19:14:07] <pyzozord> GeDaMo: thanks I actually watch this one live on twitch when it was aired. Interesting story but it's targetted for less experienced people, it was very informative for me but I think might be not that high value for you
[19:14:24] <pyzozord> s/aired/streamed/ I guess
[19:14:25] <PamiPetteri> most of the numbers in existence are uncountable.
[19:14:47] <GeDaMo> Ah
[19:15:22] <vdamewood> What comes after pi?
[19:15:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:15:39] <pyzozord> regret
[19:16:03] <pyzozord> (if you eat a whole one)
[19:16:06] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 265 seconds)
[19:16:25] *** Joins: yeirr (~yeirr@user/yeirr)
[19:16:29] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:16:33] <pyzozord> I'll show myself out
[19:16:36] <GeDaMo> Tau? :P
[19:16:45] <TJ-> custard
[19:16:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:16:57] <[itchyjunk]> https://en.wikipedia.org/wiki/Cardinality#Cardinal_numbers
[19:16:57] <bayaz> Title: Cardinality - Wikipedia 
[19:17:07] *** clarjon_1 is now known as clarjon1
[19:17:08] <[itchyjunk]> there is some open question relating to this
[19:17:17] *** Joins: password2 (~password@user/password2)
[19:17:19] <[itchyjunk]> is there a cardinality between N_0  and N_1 or osmesuch
[19:17:35] <vdamewood> GeDaMo: Actually, rho.
[19:17:36] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[19:17:45] <[itchyjunk]> oh continuum hypothesis
[19:18:01] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:98c3:6174:8ff5:a406) (Ping timeout: 252 seconds)
[19:18:28] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[19:18:46] <[itchyjunk]> PamiPetteri, what do you mean "numbers in existence are uncountable"
[19:19:03] <[itchyjunk]> you generally count sets not the numbers themsleves
[19:19:13] <GeDaMo> I was thinking this one https://en.wikipedia.org/wiki/Tau_(mathematical_constant)
[19:19:13] <bayaz> Title: Turn (angle) - Wikipedia 
[19:21:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[19:21:58] *** Quits: mestre (~mestre@191.177.175.57) (Quit: Lost terminal)
[19:22:46] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[19:23:21] *** Quits: src (~src@user/src) (Quit: Leaving)
[19:23:39] *** Joins: src (~src@user/src)
[19:23:39] <[itchyjunk]> I hear some people want to replace pi with tau
[19:23:46] <[itchyjunk]> oh was that the refrence you were trying to make?
[19:23:55] <GeDaMo> It's 2pi and yes :P
[19:24:00] <[itchyjunk]> what comes after pi? tau.. heh
[19:24:22] <[itchyjunk]> humor requires too many brain cells to work at once!
[19:25:24] <user51> i havent done trig in like 2 years now
[19:25:28] <user51> thanks for the reminder!
[19:25:55] <[itchyjunk]> same
[19:26:00] <[itchyjunk]> only more like 8 years
[19:26:07] <[itchyjunk]> although, depends on what you mean trig
[19:26:18] <[itchyjunk]> i've used sin cos a little
[19:26:29] <[itchyjunk]> need to use it for complex analysis
[19:26:49] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[19:31:01] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Client Quit)
[19:33:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[19:34:31] *** Quits: dllcache (~about@223.176.32.177) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:35:27] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:35:45] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-4d0d-6637-d030-48cf.res6.spectrum.com)
[19:36:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:38:05] <pyzozord> just watched this talk where Guido explain PEGs https://www.youtube.com/watch?v=7MuQQQWVzU4
[19:38:06] <bayaz> Title: Writing a PEG Parser For Fun and Profit 
[19:38:27] <pyzozord> I couldn't follow most of it, but in the second half he shows a nice demo program that steps through the parsing process
[19:38:41] *** Joins: Corwinoid (~Corwinoid@98.40.245.35)
[19:38:49] *** Quits: trebko (~trebko@137.220.86.97) (Ping timeout: 265 seconds)
[19:38:53] <pyzozord> I'm not sure but if that is what PEGs do then that exactly what I imagined
[19:39:17] <pyzozord> meaning my idea of how to parse after learning about "recursive descend" was exactly like that demo from Guido
[19:39:24] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[19:39:45] *** Joins: yeirr (~yeirr@user/yeirr)
[19:40:40] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:40:56] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:41:04] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[19:41:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:41:16] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[19:41:33] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[19:41:36] *** Joins: fuzzykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[19:41:37] *** Joins: defiant (~defiant@user/defiant)
[19:42:05] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[19:44:06] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Ping timeout: 250 seconds)
[19:44:34] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[19:44:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 268 seconds)
[19:44:56] <leonardus> can gdb work with programs compiled with any version of gcc, or only recent versions?
[19:45:14] <leonardus> i am using an sdk about 2 decades old
[19:47:22] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-4d0d-6637-d030-48cf.res6.spectrum.com) (Quit: Leaving.)
[19:47:46] *** Joins: yeirr (~yeirr@user/yeirr)
[19:47:47] *** Quits: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it) (Quit: Leaving)
[19:47:51] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-4d0d-6637-d030-48cf.res6.spectrum.com)
[19:48:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:48:23] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:48:28] <^-^hi> leonardus: for what purpose?
[19:48:34] <audiocat> vdamewood, hey, you still here?
[19:48:57] <audiocat> johnsonresearch.org is available, but johnsonresearch.com is taken and is in use by a company called...Johnson Research
[19:49:43] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[19:52:03] *** Quits: _inky (~inky_@31.7.162.99) (Quit: Leaving.)
[19:52:55] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-4d0d-6637-d030-48cf.res6.spectrum.com) (Quit: Leaving.)
[19:55:08] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[19:55:15] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[19:55:21] *** Joins: snake (~snake@user/snake)
[19:55:45] *** Quits: beep (~beep@171.121.42.216) (Quit: Connection closed)
[19:55:50] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a00d-9ff0-6fc7-74c5.res6.spectrum.com)
[19:56:23] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a00d-9ff0-6fc7-74c5.res6.spectrum.com) (Client Quit)
[19:57:37] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 252 seconds)
[19:58:03] *** Quits: uzee (~uzee@86.36.37.198) (Read error: Connection reset by peer)
[19:58:54] *** Joins: Alex123 (~Adium@2607:fb90:21d6:707c:a42d:b32a:4fbd:5e51)
[20:01:35] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:02:03] *** Joins: inky (~inky@37.252.80.187)
[20:06:06] *** Joins: yeirr (~yeirr@user/yeirr)
[20:09:08] *** Quits: Alex123 (~Adium@2607:fb90:21d6:707c:a42d:b32a:4fbd:5e51) (Ping timeout: 268 seconds)
[20:13:07] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:c01a:9ec0:b55f:9f89)
[20:13:33] <vdamewood> audiocat: Nope. I was away for a while.
[20:15:13] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Remote host closed the connection)
[20:15:24] *** Quits: src (~src@user/src) (Quit: Leaving)
[20:16:13] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Read error: Connection reset by peer)
[20:17:05] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[20:17:19] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-3514-b2fd-1eda-4db3.res6.spectrum.com)
[20:17:44] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[20:18:12] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[20:18:19] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Remote host closed the connection)
[20:18:49] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[20:18:50] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:c01a:9ec0:b55f:9f89) (Quit: Leaving)
[20:18:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[20:19:11] *** Joins: yeirr (~yeirr@user/yeirr)
[20:22:36] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Client Quit)
[20:23:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:25:28] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Quit: Leaving)
[20:26:33] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[20:26:56] <vdamewood> Well, crap. I need help naming something.
[20:27:12] <GeDaMo> Fred
[20:27:21] <vdamewood> Brilliant!
[20:27:50] <vdamewood> Libraries, executables, and debug files will be built in the Fred directory.
[20:29:54] <pyzozord> well since executables are elfs and debug files are dwarfs than maybe you can call the directory "forest"? :P
[20:30:14] <vdamewood> pyzozord: Not on every system.
[20:30:27] <GeDaMo> LEaD
[20:30:49] <vdamewood> On macOS executables are Mach-S. On Windows they're PEs.
[20:31:01] <vdamewood> Mach-Os
[20:31:15] <vdamewood> GeDaMo: I'm seriously making Lead my plan-b.
[20:31:15] <GeDaMo> Sounds like a breakfast cereal :P
[20:31:22] <pyzozord> vdamewood: the systems that don't use elves and dwarves are just wrong, sooner or later they will understand their mistake
[20:31:48] <vdamewood> pyzozord: Not really. Mach-O has a feature that ELF does that is needed on macOS.
[20:32:07] <vdamewood> Mach-O can store multiple builds of a singel program or library in a single file.
[20:32:50] <vdamewood> So, you can have an Intel64 build and an aarch64 build in the same executable.
[20:32:57] *** craftxbox is now known as snep
[20:32:57] *** Quits: LiftLeft (~LiftLeft@102.165.16.134) (Ping timeout: 265 seconds)
[20:33:53] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:34:16] *** Quits: YHVH (~yhvh@2601:982:8300:8090:e074:8219:f5b7:5dc3) (Ping timeout: 245 seconds)
[20:35:15] <vdamewood> Okay... so what's a word to describe the things that you are ultimately building for a project?
[20:35:34] <vdamewood> as opposed to the intermediate and support stuff like object files and generated source files?
[20:35:40] *** Joins: quartz (~quartz@user/quartz)
[20:36:00] <pyzozord> I call them usually "build" or "dist" or "release" etc
[20:36:07] <MrMobius> it makes me cringe to say it but maybe deliverable
[20:36:35] <vdamewood> 'products' maybe.
[20:37:07] *** Joins: tryless (~tryless@user/tryless)
[20:37:11] <pyzozord> I once genuinely used word 'synergy' at work, it was a mistake
[20:37:33] <vdamewood> I prefer the word syzygy.
[20:38:21] <vdamewood> Products it is then.
[20:38:42] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[20:39:10] <pyzozord> artifacts maybe? https://www.thesaurus.com/browse/products
[20:39:11] <bayaz> Title: Synonyms of products | Thesaurus.com 
[20:40:00] <vdamewood> pyzozord: According to wikipedia, 'artifact' more commonly refers to the object files and generated source files (and logs and such).
[20:40:13] <vdamewood> https://en.wikipedia.org/wiki/Artifact_(software_development)
[20:40:13] <bayaz> Title: Artifact (software development) - Wikipedia 
[20:40:32] *** Joins: extern (~archer@141.226.76.57)
[20:41:31] <pyzozord> Yeah. I guess my prefered name is "build" but now that I think about it, someone who isn't technical wouldn't know what it means at all
[20:41:46] <oldlaptop> GeDaMo: the prehistoric version of http://sc2.sf.net allegedly contained a source directory named "fred"
[20:41:48] <bayaz> Title: The Ur-Quan Masters - News 
[20:41:50] <oldlaptop> guess who wrote the code therein?
[20:41:56] *** Joins: brtwrb (~bw@31.42.0.142)
[20:42:11] *** Parts: brtwrb (~bw@31.42.0.142) ()
[20:42:34] *** Joins: brtwrb (~bw@31.42.0.142)
[20:42:53] <GeDaMo> It wasn't me :|
[20:43:16] <[itchyjunk]> Not me either
[20:44:07] <oldlaptop> (alas, no evidence survives in the SCM history, which begins after a fair bit of cleanup work was done)
[20:46:16] *** Joins: YHVH (~yhvh@2601:982:8300:8090:9509:f25e:3615:5b7b)
[20:46:18] *** Joins: LiftLeft (~LiftLeft@102.165.16.73)
[20:46:59] *** Quits: brtwrb (~bw@31.42.0.142) (Quit: Leaving.)
[20:47:10] <oldlaptop> it wasn't Dave or Bill or Ted either
[20:49:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:49:43] *** Quits: extern (~archer@141.226.76.57) (Quit: WeeChat 3.2.1)
[20:50:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:50:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:51:40] <vdamewood> Yay, it works!
[20:51:40] <GeDaMo> "I teleported home one night With Ron and Sid and Meg. Ron stole Meggie's heart away And I got Sidney's leg."
[20:52:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:c08c)
[20:52:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:52:20] <vdamewood> Some people say my family is cowardly, but my uncle has the heart of a lion... and a lifetime ban from the local zoo.
[20:54:10] <vdamewood> Time to test on Leenoox.
[20:55:09] <Jong> vdamewood  Do you have a question related to programming?
[20:55:23] <vdamewood> Jong: Nope.
[20:55:50] <vdamewood> Jong: If you want one, I bet there are lots of people willing to share theirs.
[20:56:31] <pikapika> We only use 'cat' to edit files around here
[20:56:46] <vdamewood> I pet mine.
[20:56:59] <pikapika> vdamewood, rawr
[20:57:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:57:11] <vdamewood> meow.
[20:58:43] *** Quits: nshire (~Neal@user/nshire) (Quit: Leaving)
[21:00:05] *** Joins: nshire (~Neal@user/nshire)
[21:00:12] <pyzozord> here is one: what are the top 50 most used amd64 instructions. I bet that's more than enough to make a programming language that competes with C
[21:01:39] <pikapika> pyzozord, not really
[21:01:42] <manicennui> Compete with C by only working on one platform?
[21:01:48] <pikapika> C is quite advanced and featureful
[21:01:55] <pikapika> Its far from just a "thin assembler"
[21:01:56] <manicennui> If you want to write assembly, do so.
[21:02:00] <pyzozord> i mean on performance
[21:02:41] <manicennui> Most people don't know enough to optimize assembly better than the popular C compilers.
[21:03:00] <pyzozord> my bet is that no optimization are actually required
[21:03:12] <manicennui> That's just ignorance.
[21:03:26] <pyzozord> if language is sufficiently transparent and lets the programmer be in control
[21:04:42] <manicennui> Being in control doesn't matter if you don't know what you are doing.
[21:04:45] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8446-89.dhcp.inet.fi)
[21:04:59] <pyzozord> vast majority of the performance comes from simd, cpu cache and pipelining
[21:05:08] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8446-89.dhcp.inet.fi) (Remote host closed the connection)
[21:05:15] *** Quits: snake (~snake@user/snake) (Ping timeout: 268 seconds)
[21:05:26] <manicennui> Again, if you want to write assembly, then do so.
[21:05:35] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8446-89.dhcp.inet.fi)
[21:06:33] <vdamewood> pyzozord: lea is probably on that list.
[21:06:42] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8446-89.dhcp.inet.fi) (Remote host closed the connection)
[21:07:20] <vdamewood> pyzozord: Yeah, if I can find it, I have a video for you to watch.
[21:07:56] <pyzozord> vdamewood: cool :)
[21:08:16] <pyzozord> I'm not sure what lea does still. It kinda sounds like it just computes address and stores it in a register
[21:08:23] <GeDaMo> That is correct
[21:08:37] <GeDaMo> But it can be used to do multiple operand arithmetic
[21:08:40] <pyzozord> but the name "load" kind of confuses me. What does it load, and where does it load it?
[21:08:53] <GeDaMo> It loads the address
[21:09:08] <GeDaMo> The address itself, not the contents of memory at that address
[21:09:16] <GeDaMo> lea doesn't access memory
[21:09:18] <pyzozord> does it mean "load" as in "store in register"?
[21:09:23] <GeDaMo> Yes
[21:09:36] <pyzozord> ah then that was always the confusing part
[21:09:41] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:09:43] *** micrex23 is now known as micrex22
[21:10:05] <pyzozord> because I always read that it just computes and stores in register but for me "load" always sounded like it is accessing and reading ram
[21:10:12] <manicennui> Consider what a register is.
[21:10:46] *** Quits: Jong (~Jong@2620:10d:c090:400::5:c08c) (Ping timeout: 252 seconds)
[21:10:55] <manicennui> Disks, RAM, registers, caches, etc. are just different places to store things.
[21:11:20] <manicennui> Obviously with drastically different performance characteristics. 
[21:12:15] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:12:20] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[21:12:44] <manicennui> Load/store are often used interchangeably. 
[21:12:54] *** JanC_ is now known as JanC
[21:13:32] <pyzozord> one more question about lea: can I do the same operation it does with adds and other integer operations? If so then the only point I see in lea is that it has "hardcoded" specific operations that are often used on addresses for performance
[21:13:36] *** Joins: emf (~emf@2620:10d:c090:400::5:c416)
[21:14:04] <GeDaMo> You can but that will require multiple instructions
[21:14:56] <GeDaMo> [displacement + baseReg + indexReg * scale] where scale = 1,2, 3 or 8
[21:15:12] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[21:15:17] <MrMobius> arithmetic instructions also affect flags which may not be desirable but lea does not
[21:15:22] <[itchyjunk]> What's an easy way to get absolute value of some double in java?
[21:16:06] <GeDaMo> I'd suspect there's an abs function
[21:16:38] <GeDaMo> Math.abs
[21:16:56] <[itchyjunk]> nice
[21:17:25] *** Quits: password2 (~password@user/password2) (Ping timeout: 265 seconds)
[21:17:34] <[itchyjunk]> i am outputting too much shit
[21:17:40] <[itchyjunk]> and i can't tell if my shit is converging or not
[21:18:11] *** Joins: jazzy (~jaziz@user/jaziz)
[21:18:34] <pyzozord> I wrote a very crufty script few months ago that was counting most popular opcodes from a binary. Actually it was more of a bash invocation with few pipes
[21:19:02] <[itchyjunk]> how long should a xor approximator take to converge?
[21:19:04] <MrMobius> pyzozord, thats neat. how did you tell the difference between instructions and data?
[21:19:14] <pyzozord> Need to write something a bit more solid and run it on all binaries on my computer. I think my computer is a nice sample of all common software used out there in the wild
[21:19:16] <[itchyjunk]> i have a `while (Math.abs(error)<.1) { }`
[21:19:42] *** Joins: emf_ (~emf@2620:10d:c090:400::5:c416)
[21:19:46] <pyzozord> I used objdump but one of the crufty things was that it didn't it kind of just counted words
[21:20:21] <pyzozord> but I'm sure objdump has more flags and I can tell it to just disassemble instructions
[21:20:32] <[itchyjunk]> pretty sure my shit is wrong.
[21:20:57] <GeDaMo> -d would disassemble executable sections
[21:21:46] *** Quits: emf (~emf@2620:10d:c090:400::5:c416) (Ping timeout: 245 seconds)
[21:21:53] <[itchyjunk]> oh i forgot to map the output to some actual value..
[21:21:57] *** Joins: pulse_ (~pulse@user/pulse)
[21:21:58] <[itchyjunk]> i think i was supposed to do that
[21:22:07] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[21:22:08] * [itchyjunk] .ripHair()
[21:22:11] *** Joins: jamea (~jamea@177.239.84.44)
[21:24:26] <MrMobius> pyzozord, have you seen this? old at this point but talks about compilers historically only using a subset of instructions: https://inst.eecs.berkeley.edu/~n252/paper/RISC-patterson.pdf 
[21:24:26] <bayaz> Type: application/pdf Size: 671.0 kB 
[21:25:31] <pyzozord> I think I heard the name but never actaully read it, thanks
[21:26:52] <GeDaMo> That was the research that lead to RISC
[21:28:02] *** Quits: blahblah441 (~blahblah4@static-198-54-128-102.cust.tzulo.com) (Quit: byeeeee)
[21:28:11] <GeDaMo> Compilers were much simpler at the time though
[21:28:15] *** Joins: blahblah441 (~blahblah4@static-198-54-128-102.cust.tzulo.com)
[21:30:34] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[21:30:42] <MrMobius> Ya not current but goes to show you can implement an non-ideal compiler with a smaller subset of instructions
[21:30:51] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[21:31:24] <GeDaMo> Chuck Moore's Forth chips have 32 instructions total
[21:31:53] <vdamewood> pyzozord: found it: https://youtu.be/bSkpMdDe4g4
[21:31:55] <bayaz> Title: CppCon 2017: Matt Godbolt “What Has My Compiler Done for Me Lately? Unbolting the Compiler's Lid” 
[21:31:58] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[21:32:15] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[21:32:48] <MrMobius> this is an interesting one where a guy built a forth for x86/64 with only a handful of instructions https://www.youtube.com/watch?v=iZ-5rBQS_p4
[21:32:49] <bayaz> Title: PYCON UK 2017: What I learned building Forth in 64 bit Intel assembly 
[21:33:39] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[21:33:56] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[21:35:10] <pyzozord> vdamewood: thanks! I think I watched that talk but I don't remember even what is the takeaway lesson
[21:35:15] <pyzozord> I'll watch it again now
[21:36:06] <vdamewood> Yay! I've solved a problem in my code.
[21:36:18] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:36:31] <pyzozord> did you use the "fred" directory? :P
[21:36:40] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[21:36:50] *** Joins: hexfive (~eric@50.35.83.177)
[21:37:12] <vdamewood> Previously, I couldn't run my test programs on Windows because Windows doesn't support RPATHs and my library was build in a different directory than my programs. Now, I have them all build into the 'fred' directory and the programs can find the DLL they need.
[21:37:18] <user51> man shit, i hear more about forth implementations rather than forth itself
[21:37:35] <user51> maybe it's selection bias, but who knows
[21:38:02] <vdamewood> Actually, I named the directory 'products'.
[21:38:22] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[21:39:15] <pyzozord> I think that's good though, when people pick up your language idea and make their own implementations it means that the language is a good and simple idea
[21:41:04] *** Joins: mikeliuk (~mikeliuk@213.205.198.201)
[21:44:29] *** AbleBacon_ is now known as AbleBacon
[21:44:38] *** Joins: Guest8432 (~Guest@host253.190-225-239.telecom.net.ar)
[21:45:38] *** Joins: dodo__ (~dodo@user/dodo)
[21:46:21] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 245 seconds)
[21:47:03] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[21:50:18] *** Joins: magla (~gelignite@55d4478c.access.ecotel.net)
[21:51:25] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[21:51:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[21:52:27] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[21:52:44] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[21:54:27] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-3514-b2fd-1eda-4db3.res6.spectrum.com) (Quit: Leaving.)
[21:54:59] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[21:57:25] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:57:44] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[22:00:10] *** Joins: Jong (~Jong@2620:10d:c090:400::5:c08c)
[22:00:20] *** Joins: MickOfRivia (~Thunderbi@94.252.38.56)
[22:00:43] *** Joins: Nspace (~Nspace@user/nspace)
[22:01:28] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:02:37] *** Quits: mikeliuk (~mikeliuk@213.205.198.201) (Quit: Connection closed)
[22:02:50] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[22:02:58] *** Quits: inky (~inky@37.252.80.187) (Ping timeout: 252 seconds)
[22:03:00] <vdamewood> Yay, leenooks works!
[22:03:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[22:04:00] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[22:04:13] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[22:05:08] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Read error: Connection reset by peer)
[22:05:25] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[22:06:07] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[22:06:38] *** Quits: Jong (~Jong@2620:10d:c090:400::5:c08c) (Read error: Connection reset by peer)
[22:06:40] *** Joins: extern (~archer@141.226.76.57)
[22:13:14] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:13:16] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[22:13:32] <user51> https://en.wikipedia.org/wiki/RTX2010
[22:13:33] <bayaz> Title: RTX2010 - Wikipedia 
[22:13:34] <user51> brilliant!
[22:13:46] <flakonium_tubes> ?
[22:14:37] <user51> it sounds like an nvidia gpu but it's a forth machine :D
[22:15:11] <oldlaptop> by Chuck himself!
[22:15:56] <GeDaMo> http://users.ece.cmu.edu/~koopman/stack_computers/sec4_5.html
[22:15:57] <bayaz> Title: Stack Computers: 4.5 ARCHITECTURE OF THE HARRIS RTX 2000 
[22:17:28] <extern> hi Gw
[22:17:30] <extern> GeDaMo: 
[22:17:30] <flakonium_tubes> why stop a t two stack?
[22:17:48] <GeDaMo> Hi extern :)
[22:18:00] <GeDaMo> Some Forth implementations have more than two stacks
[22:18:11] <flakonium_tubes> oh ok
[22:18:27] *** Quits: extern (~archer@141.226.76.57) (Quit: WeeChat 3.3)
[22:18:37] <GeDaMo> But they usually have at least two: data stack and return stack
[22:19:02] <MrMobius> user51, ya re hearing about forth - there are lots and lots of implementations since implementing a forth is kind of fun and not very many programs written in forth since actually using the language tends to be way more painful than implementing it
[22:19:53] <MrMobius> not to say you couldnt be the outlier who enjoys writing forth code more than implementing a forth :)
[22:20:19] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[22:20:39] <user51> forth has some appeal in the sense that i kind of feel it might work well with divide and conquer
[22:21:39] *** Joins: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:23:35] <user51> you could define very small definitions - but then you need to put in more cyber dollars into interconnects..
[22:24:07] <user51> MrMobius: here's an alternative viewpoint: https://prog21.dadgum.com/223.html
[22:24:07] <bayaz> Title: The New Minimalism 
[22:25:16] *** Quits: MickOfRivia (~Thunderbi@94.252.38.56) (Quit: MickOfRivia)
[22:25:40] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[22:25:41] <user51> GeDaMo: do you have any examples of something equivalent to c's switch in forth?
[22:26:15] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:26:34] *** Joins: mickey8 (~user@user/mickey)
[22:26:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[22:27:09] <GeDaMo> I've seen case implementations, I think
[22:28:32] <GeDaMo> http://dxforth.mirrors.minimaltype.com/miser.html
[22:28:32] <bayaz> Title: Miser's CASE - A general purpose Forth CASE statement 
[22:29:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:30:24] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[22:31:08] *** Joins: humky (~humky@user/humky)
[22:31:22] *** Joins: Nspace (~Nspace@user/nspace)
[22:31:36] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[22:33:26] <user51> yeah, i just can't get the "math" RPN out of my mind
[22:35:08] <user51> loops blow my brain out. i guess i could use whitespace..
[22:35:16] <MrMobius> ya CASE seems to be most common
[22:35:42] <GeDaMo> The thing about Forth is you can always define your own looping constructs :P
[22:36:03] <user51> yeah i mean it's very nice if you can map the problem into stacks
[22:36:22] <MrMobius> user51, hmm, interesting. what do you think is alternative about that link? I read something else from that guy and i dont think he's a forth fan
[22:37:04] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 252 seconds)
[22:37:34] <user51> MrMobius: gimme a sec, i'l read it again to make sure i'm remembering right
[22:37:51] *** Joins: Auron (~Auron956@user/auron)
[22:39:35] *** Quits: astroid (astroid@user/astroid) (Remote host closed the connection)
[22:39:35] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[22:39:35] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[22:40:59] *** Quits: mei6 (~mei@user/mei) (Read error: Connection reset by peer)
[22:41:28] *** Quits: Corwinoid (~Corwinoid@98.40.245.35) (Ping timeout: 252 seconds)
[22:42:10] <mrig> Wow, I'm blown away by SIMD, now that i've a notion of what it is and does; Very cool :)
[22:42:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:43:26] <user51> MrMobius: well, this is harder than i expected :D i want to say the point is to find the best possible mapping of the answer to code
[22:45:06] *** Quits: Haxxa (~Haxxa@122-199-44-5.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:10] *** Joins: inky (~inky@141.136.76.213)
[22:45:19] *** Quits: jamea (~jamea@177.239.84.44) (Ping timeout: 252 seconds)
[22:45:25] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[22:45:43] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[22:45:43] <mrig> Is anyone familiar with this site http://www.equation.com/servlet/equation.cmd?fa=programminglog
[22:45:46] <bayaz> Title: Log of Status of Compiler Distribution 
[22:46:16] <mrig> I see that they offer binaries of GDB and Make for windows, wondering if this is a good idea?
[22:46:17] <user51> as far as the guy being a forth fan, he has quite a few posts mentioning forth, here's an example https://prog21.dadgum.com/33.html
[22:46:18] <bayaz> Title: Understanding What It's Like to Program in Forth 
[22:46:53] <flakonium_tubes> simd is cool but it's been around for ages already, what will surpass it? https://en.wikipedia.org/wiki/Superscalar_processor
[22:46:54] <bayaz> Title: Superscalar processor - Wikipedia 
[22:47:35] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:44] <GeDaMo> Superscalar's been around for ages too
[22:48:03] *** Quits: Guest8432 (~Guest@host253.190-225-239.telecom.net.ar) (Remote host closed the connection)
[22:48:09] <mrig> flakonium_tubes: I got to thinking about the lecture in which, or from which, I've learned about it; The programmer laments that it is not really used.
[22:48:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:48:40] <pyzozord> aren't superscalar cpus essentially gpus?
[22:48:42] *** Joins: mickey8 (~user@user/mickey)
[22:49:06] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[22:49:06] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Changing host)
[22:49:06] *** Joins: astroid (astroid@user/astroid)
[22:49:22] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[22:49:36] <mrig> Oh nice, so that is another way of upping the through put.
[22:49:43] <GeDaMo> No, superscalar is when you have multiple execution units so multiple instructions can execute simultaneously
[22:50:10] <mrig> That is pretty cool, rather than wanting the same instruction for SIMD.
[22:50:13] <mrig> ?
[22:50:24] <mrig> Yes must be.
[22:50:57] <GeDaMo> E.g. add eax, ebx; add ecx, edx; these instructions have no interdependencies so they could execute simultaneously
[22:50:57] <mrig> Really looking forwards to learning to use these :)
[22:51:14] <mrig> right, oh that is a considerable advantage.
[22:51:55] <GeDaMo> For example, this has 8 EUs (Execution Units) https://en.wikichip.org/w/images/7/7e/skylake_block_diagram.svg
[22:51:56] <bayaz> Type: image/svg+xml 
[22:52:17] <GeDaMo> Each EU has a particular set of instructions it could execute
[22:52:48] <mrig> I am going to have to get the intel book for the CPU at some point.
[22:53:00] <user51> 22:05 < GeDaMo> The thing about Forth is you can always define your own looping constructs :P
[22:53:16] <user51> GeDaMo: question about that: how many different loops do you really need?
[22:53:38] <GeDaMo> How long is a piece of string? :P
[22:53:45] <mrig> \0 :D
[22:53:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:54:18] <user51> sorry, i don't get it.
[22:54:42] *** Joins: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de)
[22:55:08] * mrig hands user51 one end of a string, with a promise to end it some day.
[22:55:27] <GeDaMo> How many different ways can you think about a problem?
[22:56:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:37] *** Joins: pavonia (~user@user/siracusa)
[22:56:39] <pyzozord> looking at a problem from different perspectives is essential
[22:57:18] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[22:57:19] <tane> yeah, there's a lot of techniques to that end, pretty interesting topic
[22:57:31] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[22:57:36] *** Joins: Corwinoid (~Corwinoid@98.40.245.35)
[22:58:00] <mrig> GeDaMo: I'm surprised by how appealing it is, being able to build up your own structures; I have to admit to being a little gobsmacked by how simple it is to add boundary checks to arrays in C with a simple inline function call and a home made Assert that can be removed with a compiler flag when ever desired.
[22:58:18] <user51> i still don't get it.
[22:58:24] *** Joins: paulo (paulo@user/paulo/x-9032687)
[22:58:42] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:58:46] <mrig> After reading of the benefits of contractual constraints in code, how easily it can be added to C with its tool set.
[22:58:48] <pyzozord> mrig: can you share a quick example?
[22:58:49] <GeDaMo> What don't you get?
[22:59:14] <mrig> pyzozord: sure I will paste something now.
[22:59:30] <user51> i don't get the reasoning behind the question
[23:00:09] <pyzozord> mrig: I think you are getting to the last of what I seen of that course, I vaguely remember what you talk about but forgot about it. I think I stopped follwing the course around that point
[23:00:10] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:00:32] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:00:45] <GeDaMo> user51: https://en.wiktionary.org/wiki/how_long_is_a_piece_of_string ?
[23:00:45] <bayaz> Title: how long is a piece of string - Wiktionary 
[23:01:46] <pyzozord> oh I wasn't familiar with that expression
[23:02:15] *** Quits: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[23:02:16] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[23:02:32] <user51> GeDaMo: clearly a piece of string has to be N :P
[23:02:53] <mrig> Here we go, it has been mentioned that this Assert code will get fleshed out a bit more in the future but it is already functional with only that : https://termbin.com/lkat
[23:02:54] <bayaz> Type: text/plain; charset=utf-8 
[23:02:55] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[23:03:28] <user51> but no, the question was serious. i'm having trouble seeing how many different loops you need before you hit dimnishing returns
[23:03:33] <mrig> I wonder if there is a way to set the header when sending to termbin so that there is a title for bayaz
[23:04:59] <mrig> pyzozord: I have decided that I am going to install windows fully for the duration of the course, it also seems like a good thing to have so that it becomes a little more familiar as an environment, for writing for both posix and windows.
[23:05:02] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:05:17] <pyzozord> mrig: oh so in debug it is inserting extra check that when false will do that line that writes to address 0 which will crash?
[23:05:20] <Krufu> What are the optimal language/environment/framework/libraries to write highly performant micro-services today? (Reuse existing things as much as possible without sacrificing performance)
[23:05:26] <flakonium_tubes> just don't run it on some mythical system that lets you dereference 0 address
[23:06:24] <mrig> pyzozord: yes it segfaults there, and you can pick up the line from either your IDE or a trace, but then the assertion is very clear.
[23:06:27] <pyzozord> mrig: on windows you can also play more games so there is also a fun side to that choice :)
[23:07:05] <mrig> well for one I'll be able to play in the environment that I'll be developing that's already enough of an enticement :)
[23:07:42] <pyzozord> mrig: c has <assert.h> in the standard, did they give in the course reasoning why go with homegrown version?
[23:07:45] <mrig> Watching something on custom game editor code, must be superb to be able to write that kind of thing.
[23:08:13] *** LiaoTao_ is now known as LiaoTao
[23:08:16] *** Joins: stoneware (~stoneware@user/stoneware)
[23:08:25] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[23:08:52] <mrig> pyzozord: yes I'm familiar with it, but this code is so short why include a lib? It is also easier to negate too, without ifdefs allover the code, which is atrocious to read.
[23:09:07] *** Quits: UmarJ (~username@user/umarj) (Remote host closed the connection)
[23:09:22] <mrig> loving Caseys minimalist approach.
[23:09:22] *** Joins: UmarJ (~username@user/umarj)
[23:09:55] <mrig> That was why I mentioned the simplicity of building up tools, when pondering forth too.
[23:10:17] <pyzozord> ah so he is going with custom version because it's it adds less complexity overall to the system
[23:10:24] <mrig> yes.
[23:10:27] *** dodo__ is now known as dodo
[23:10:51] <mrig> but also to demonstrate how simple a lot of it is.
[23:11:29] *** Joins: Guest8432 (~Guest@181.91.159.99)
[23:11:59] <mrig> did you watch the latest video? 10000 lines of code run in a horrifically nested piece of code reduced to O(n) time and two functions :D
[23:12:41] <pyzozord> I watched the original stream. It's the one with plant planting algorithm right?
[23:13:11] <flakonium_tubes> if i wanted to be a real hair splitter i'd say the code is too hacky, but i'm not aware of any os's that will let you map to such a low address
[23:13:13] <mrig> He is also talking about functional style and procedures, this is the first time that I've heard procedures mentioned in an educational video since I started programming.
[23:13:26] <flakonium_tubes> maybe linux if you mmap /dev/mem
[23:13:44] <mrig> oh he says its a hack for now, just to get things rolling.
[23:13:49] *** Joins: jab416171 (~jab416171@c-67-161-208-101.hsd1.ut.comcast.net)
[23:13:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[23:13:58] <pyzozord> mrig: procedures?
[23:14:02] *** Joins: whatsupdoc (~whatsupdo@148.64.18.24)
[23:14:04] <mrig> but it works on most as is, so is fine to get going.
[23:14:24] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:14:35] <mrig> pyzozord: yes those are functions that alter state and have side effects, calling them a procedure makes it explicitly so.
[23:15:03] <mrig> when you run the bake procedure on your dough, it is transformed into bread.
[23:15:55] <pyzozord> I should maybe rewatch that video
[23:16:48] *** Joins: Pickchea (~private@user/pickchea)
[23:17:41] <mrig> that was in number 17
[23:17:58] *** Joins: ShiftyLogic (~shiftylog@66.115.147.138)
[23:18:19] <pyzozord> anyway, yeah I love his grounded, pragmatic and practical attitude. Honestly when I first saw that my first thought was "This is the golden standard of software engineering. This is real engineering"
[23:18:36] <mrig> it is just a brief mention, but the situation is explaining the extrapolation of the keyboard functionality from the callback function when placing it in the main loop.
[23:19:08] <mrig> I am just happy to be able to watch and listen to someone code, really is priceless.
[23:19:44] <pyzozord> yeah it is quite amazing
[23:19:44] <mrig> Much of the audio visual material is not that good, but when you do find the good stuff it is awesome. 
[23:19:47] <pyzozord> and it's free
[23:20:08] <mrig> and he know what he is talking about from actual experience, not theory. 
[23:20:20] <mrig> proof being in the eating as it were.
[23:20:32] <pyzozord> from both, Casey has quite strong mathematical background if I'm not mistaken
[23:20:37] <mrig> parrot style is really hard to digest.
[23:20:44] <mrig> no at all.
[23:20:53] <mrig> but he does seem to intuit it.
[23:21:05] *** Quits: xff0x (~xff0x@2001:1a81:53d3:ff00:3e1e:c821:8716:28f6) (Ping timeout: 260 seconds)
[23:21:09] *** Quits: whatsupdoc (~whatsupdo@148.64.18.24) (Quit: Client closed)
[23:21:13] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[23:21:32] <mrig> just been coding the basic math that is required for years from what I can ascertain.
[23:21:41] <user51> pyzozord: casey should pay you for all the advertising you do :P
[23:21:51] *** Joins: xff0x (~xff0x@2001:1a81:53d3:ff00:1ad7:b60d:185b:4b6b)
[23:22:19] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[23:22:23] <mrig> I think that he would be happy that there are a few less slower code monsters gobbling up the worlds resources to be honest.
[23:22:51] <mrig> Seems to be a genuine concern of his.
[23:22:53] <pyzozord> user51: it's not perfect and not for everybody. They are quite opinionated and have quite harsh opinions about a lot of things
[23:23:03] *** Quits: illusion80 (~illusion@185.135.96.133) (Quit: Connection closed)
[23:23:16] *** Quits: tryless (~tryless@user/tryless) (Ping timeout: 252 seconds)
[23:23:38] *** Joins: whatsupdoc (~whatsupdo@148.64.18.24)
[23:23:45] <mrig> GeDaMo: can the EU's on the skylake be called in parallel then?
[23:23:45] <user51> pyzozord: i'd be interested in reading a list of their opinions
[23:23:53] <GeDaMo> mrig: yes
[23:24:00] <mrig> that is pretty awesome.
[23:24:09] <GeDaMo> Up to 8 separate instructions can execute simultaneously
[23:24:18] <mrig> oh via the SIMD?
[23:24:33] <GeDaMo> No, this isn't related to SIMD
[23:24:50] *** Joins: brickfat (~brickfat@user/brickfat)
[23:25:33] <mrig> oh right, that is in some separate piece of hardware?
[23:25:47] *** Joins: Akuli (~Akuli@82-203-161-31.bb.dnainternet.fi)
[23:26:04] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[23:26:18] <mrig> I will have to read about it eventually, will be busy for quite some time still though :|
[23:26:18] <GeDaMo> SIMD instructions can be executed by these EUs too
[23:26:28] *** Quits: ShiftyLogic (~shiftylog@66.115.147.138) (Ping timeout: 265 seconds)
[23:26:38] <mrig> oh right, each one a different SIMD line?
[23:26:41] <GeDaMo> You can see the classes of instruction that each EU can execute listed there
[23:27:02] <pyzozord> but yeah I think two years ago I decided "I need to find some 'mentor' in programming I can learn from" and decided to check out what's up with one of the indie game developers I saw in the movie Indie Game: The Movie. It was a random thought and I heaven't really heard anything about him, just from that movie. It turned out he was streaming daily writing his new game and his own programming 
[23:27:04] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[23:27:08] <pyzozord> language and having rants on how bad things are right now. It intrigued me so I kept watching. Jon and Casey really opened my mind and honestly provided and example to follow in many ways.
[23:27:09] <GeDaMo> "INT ALU" means scalar integer instructions
[23:27:14] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[23:27:57] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:28:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:28:19] <GeDaMo> "INT Vect ALU" are integer SIMD instructions
[23:29:13] <pyzozord> user51: as far as I know there isn't a tldr, you gotta work for it, put in the time
[23:29:35] <user51> that's also an opinion? :D
[23:29:39] <mrig> Oh I see, vector for the array of values that it would take?
[23:30:08] <GeDaMo> Yes
[23:31:05] <pyzozord> user51: yeah very much in line with their philosophy. They have very intentional and purposeful attitude. In some sense maybe not unlike olimpic athletes. There is something similiar.
[23:32:13] *** Joins: _inky (~inky_@141.136.76.213)
[23:33:00] <pyzozord> again, very inspiring for me, but I don't necessairly agree with all thier personal views
[23:33:38] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[23:34:10] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[23:34:33] <pyzozord> ok enough with the gushing already
[23:34:36] <mrig> Thanks GeDaMo, that is starting to fill in some of the blanks :)
[23:37:53] *** Quits: magla (~gelignite@55d4478c.access.ecotel.net) (Quit: Stay safe!)
[23:38:07] *** Joins: wnbeser (~wnbeser@91-154-216-7.elisa-laajakaista.fi)
[23:38:07] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[23:38:31] <sonny> EU?
[23:38:44] *** Joins: Miffo (~Twipply@user/twipply)
[23:38:46] <GeDaMo> Execution Unit
[23:39:29] *** Quits: Twipply (~Twipply@user/twipply) (Read error: Connection reset by peer)
[23:40:29] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:41:21] <sonny> oh
[23:41:52] <GeDaMo> sonny: https://en.wikichip.org/w/images/7/7e/skylake_block_diagram.svg
[23:41:53] <bayaz> Type: image/svg+xml 
[23:42:26] <sonny> amazing
[23:43:12] <pyzozord> any idea how I can in bash split $PATH and load each element into array?
[23:45:06] <GeDaMo> Maybe using something like sed or tr?
[23:45:28] <yitz> IFS=/ read -a parts <<< "$path"   ?
[23:45:40] *** Quits: flakonium_tubes (~flaknet99@32.211.211.39) (Remote host closed the connection)
[23:45:53] *** Joins: flakonium_tubes (~flaknet99@32.211.211.39)
[23:46:03] <pyzozord> I'm always confused about how bash interpretes strings and words
[23:46:19] <manicennui> I'm confused about why we still use bash.
[23:46:20] <yitz> With a lot of magic
[23:46:25] <flakonium_tubes> i was thinking tr too, totally forgot about IFS
[23:46:39] <yitz> Also there's a #bash channel
[23:47:26] <pyzozord> yeah I know
[23:47:47] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:48:13] *** Quits: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net) (Ping timeout: 265 seconds)
[23:49:29] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 250 seconds)
[23:49:45] *** Joins: dan01 (~dan01@84.117.188.145)
[23:50:32] <InPhase> pyzozord: SAVEIFS="$IFS"; IFS=':'; DIRS=($PATH); IFS="$SAVEIFS"; echo "${DIRS[2]}"
[23:51:26] <InPhase> pyzozord: But generally don't go too intensely into bash cleverness.  If you sense it getting complicated, upgrade to python before it gets unreasonable.
[23:51:36] <yitz> Oh. : and not /
[23:51:42] *** Joins: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net)
[23:52:00] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[23:52:02] <yitz> IFS=: read -ra parts <<< "$PATH" ; echo "${parts[2]}"
[23:52:02] *** Joins: kuku (~kuku@user/kuku)
[23:52:23] <yitz> In general, it's best to avoid using all-cap variable names in bash for local vars
[23:53:17] <InPhase> pyzozord: For perspective, I've been writing bash for 27 years, and I almost never create an array in it...  This is usually a sign that it should be in another language.
[23:54:06] <LiaoTao> I don't use them because I have to double check the syntax every time, because I only use them once every few years because...etc.
[23:54:20] <user51> when i started i used a lot of bash
[23:54:39] <user51> i once "refactored" a bunch of common stuff and ended up with $a$b$c
[23:55:28] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Ping timeout: 265 seconds)
[23:56:05] <InPhase> pyzozord: A few bash functions here and there can keep a bash script from exploding.  Piping data around in line-based format can work smoothly in bash, operating within its line-based piping glue language strengths.  But if you need to iterate and modify values?  Something else is probably better.
[23:56:18] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) ()
[23:56:18] <yitz> I used bash daily for the last 15 years or so and arrays are super useful for many things! I've also been writing Python most days for the last 10 years and definitely agree there's a time and place for each language.
[23:56:33] <user51> i'm just reminded of x=$((x+2))
[23:56:37] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[23:56:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:57:04] <yitz> (( x += 2 ))  ?
[23:57:43] <user51> i had the excuse of being a beginner :P
[23:58:18] <yitz> Those two do behave differently when set -e
[23:59:31] <pyzozord> InPhase: thanks!
