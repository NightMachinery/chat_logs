[00:03:56] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Ping timeout: 255 seconds)
[00:28:11] *** Joins: Skyz (~Skyz@user/skyz)
[00:34:20] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[00:36:55] *** Quits: aselman4 (~aselman4@136.2.16.127) (Quit: Client closed)
[00:38:01] *** Joins: aselman4 (~aselman4@136.2.16.127)
[00:40:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:43:27] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[00:48:26] *** Joins: Skyz (~Skyz@user/skyz)
[00:55:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:55:02] *** ChanServ sets mode: +v EvilDMP
[01:07:47] *** Quits: aselman4 (~aselman4@136.2.16.127) (Quit: Client closed)
[01:13:50] *** Joins: inom (~inom@176.59.118.44)
[01:16:01] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:16:54] *** Quits: inom (~inom@176.59.118.44) (Quit: WeeChat 3.1)
[01:20:52] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[01:21:04] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[01:21:35] *** Joins: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl)
[01:28:18] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[01:29:18] <wallbroken> sono solo parole inutili
[01:34:06] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:35:42] *** Quits: dongcarl (~dongcarl@96.224.58.144) (Ping timeout: 272 seconds)
[01:36:53] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[01:38:26] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[01:39:27] <wallbroken> hello GinFuyou
[01:39:32] <wallbroken> may i ask you for helP?
[01:40:19] *** Quits: rje (~rje@174.31.83.238) (Quit: My computer has gone to sleep. ZZZzzz…)
[01:48:54] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[01:52:50] *** Quits: audiocat (~audio@2603-8081-1800-6a65-032f-072b-bf09-a39b.res6.spectrum.com) (Ping timeout: 255 seconds)
[02:05:48] *** Joins: Skyz (~Skyz@user/skyz)
[02:06:47] *** Quits: argento (~argent0@168-227-97-34.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[02:09:17] *** Joins: rje (~rje@174.31.83.238)
[02:10:51] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:13:28] *** Joins: rje (~rje@174.31.83.238)
[02:15:02] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:17:31] *** Joins: rje (~rje@174.31.83.238)
[02:18:15] <PaulWay[w]> FunkyBob: well, I've just searched the internet and no-one's building the h2o server RPMs for CentOS 8 AFAICS.
[02:18:25] <PaulWay[w]> Am trying to build them myself but that's... amusing.
[02:19:09] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:20:04] <FunkyBob> PaulWay[w]: people use centos8 in the real world? :P
[02:20:24] <PaulWay[w]> You aren't?
[02:20:26] <PaulWay[w]> :-)
[02:21:37] <FunkyBob> would you prefer I wrote an nginx variant? :P
[02:21:43] *** Joins: rje (~rje@174.31.83.238)
[02:22:04] <PaulWay[w]> You used to have one.
[02:22:21] <PaulWay[w]> I like the look of h2o.  I just have to compile it specially.
[02:23:17] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:23:27] <FunkyBob> I have two guides up currently... one is more detailed and uses nginx/uwsgi... the other is more of a "I've done this before, remind me" level, using h2o/gunicorn
[02:23:42] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:23:53] <FunkyBob> it wouldn't take much to borg them t ogether
[02:24:02] <PaulWay[w]> OK, will find the former.
[02:24:13] <PaulWay[w]> Don't worry about trying to merge them.
[02:24:14] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:24:16] <FunkyBob> some years ago I had a plan of writing a definitive guide, taking you through all the options and reasoning
[02:24:31] <FunkyBob> the other is right next t o the one you read, in the menu bar :)
[02:24:34] <PaulWay[w]> That's a major effort.
[02:24:39] <FunkyBob> there's the Quick guid, and the Beginners guide
[02:24:41] <PaulWay[w]> And it's so easily out of date.
[02:24:57] <FunkyBob> true
[02:25:09] <FunkyBob> so I origianlly wrote my "multi site hosting" guide
[02:25:13] <FunkyBob> then pared it down for single site
[02:25:19] <FunkyBob> then people kept wanting gunicorn
[02:25:56] *** Joins: rje (~rje@174.31.83.238)
[02:27:17] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Client Quit)
[02:27:18] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[02:27:23] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:29:19] *** Joins: Skyz (~Skyz@user/skyz)
[02:29:40] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:29:52] *** Joins: rje (~rje@174.31.83.238)
[02:31:28] *** Quits: Skyz (~Skyz@user/skyz) (Client Quit)
[02:31:29] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:33:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:33:59] *** Joins: rje (~rje@174.31.83.238)
[02:34:36] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:35:49] *** Joins: ovnicraft (~ovnicraft@45.70.237.20)
[02:37:28] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[02:37:40] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:40:08] *** Joins: rje (~rje@174.31.83.238)
[02:41:46] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:43:53] *** Joins: argento (~argent0@168-227-97-34.ptr.westnet.com.ar)
[02:44:25] *** Joins: rje (~rje@174.31.83.238)
[02:45:52] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:47:21] *** Quits: argento (~argent0@168-227-97-34.ptr.westnet.com.ar) (Client Quit)
[02:48:25] *** Joins: rje (~rje@174.31.83.238)
[02:49:58] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:51:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:52:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:52:05] *** ChanServ sets mode: +v EvilDMP
[02:52:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:52:26] *** Joins: rje (~rje@174.31.83.238)
[02:52:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:52:53] *** ChanServ sets mode: +v EvilDMP
[02:53:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:53:31] *** Quits: ovnicraft (~ovnicraft@45.70.237.20) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:53:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:53:47] *** ChanServ sets mode: +v EvilDMP
[02:53:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:54:06] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:54:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:54:17] *** ChanServ sets mode: +v EvilDMP
[02:54:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:54:51] *** Joins: clawh (~clawh@185.244.214.60)
[02:55:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:55:15] *** ChanServ sets mode: +v EvilDMP
[02:55:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:55:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:55:58] *** ChanServ sets mode: +v EvilDMP
[02:56:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:56:38] *** Joins: rje (~rje@174.31.83.238)
[02:56:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:56:39] *** ChanServ sets mode: +v EvilDMP
[02:56:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:57:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:57:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:57:37] *** ChanServ sets mode: +v EvilDMP
[02:57:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:58:12] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[02:58:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:58:24] *** ChanServ sets mode: +v EvilDMP
[02:58:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:59:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:59:11] *** ChanServ sets mode: +v EvilDMP
[02:59:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[02:59:52] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 246 seconds)
[02:59:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:59:59] *** ChanServ sets mode: +v EvilDMP
[03:00:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:00:39] *** Joins: rje (~rje@174.31.83.238)
[03:00:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:00:46] *** ChanServ sets mode: +v EvilDMP
[03:00:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:01:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:01:24] *** ChanServ sets mode: +v EvilDMP
[03:01:32] *** Joins: Trieste (T@user/pilgrim)
[03:01:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:02:17] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:02:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:02:20] *** ChanServ sets mode: +v EvilDMP
[03:02:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:03:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:03:09] *** ChanServ sets mode: +v EvilDMP
[03:03:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:03:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:03:55] *** ChanServ sets mode: +v EvilDMP
[03:04:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:04:21] *** Joins: dongcarl (~dongcarl@96.224.58.144)
[03:04:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:44] *** ChanServ sets mode: +v EvilDMP
[03:04:50] *** Joins: rje (~rje@174.31.83.238)
[03:04:55] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:05:05] *** Joins: twinsignal (~twinsigna@104.129.24.243)
[03:05:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:05:29] *** ChanServ sets mode: +v EvilDMP
[03:05:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:06:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:06:18] *** ChanServ sets mode: +v EvilDMP
[03:06:23] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:06:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:07:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:07:05] *** ChanServ sets mode: +v EvilDMP
[03:07:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:07:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:07:53] *** ChanServ sets mode: +v EvilDMP
[03:08:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:08:17] *** Quits: twinsignal (~twinsigna@104.129.24.243) (Client Quit)
[03:08:23] <PaulWay[w]> EvilDMP: you're bouncing - can you fix that? :-)
[03:08:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:08:31] *** ChanServ sets mode: +v EvilDMP
[03:08:33] <PaulWay[w]> EvilDMP: you're bouncing - can you fix that? :-)
[03:08:51] *** Joins: rje (~rje@174.31.83.238)
[03:08:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:09:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:09:17] *** ChanServ sets mode: +v EvilDMP
[03:09:34] <PaulWay[w]> EvilDMP: you're bouncing - can you fix that? :-)
[03:09:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:10:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:10:04] *** ChanServ sets mode: +v EvilDMP
[03:10:06] <PaulWay[w]> EvilDMP: you're bouncing - can you fix that? :-)
[03:10:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:10:30] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:10:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:10:52] *** ChanServ sets mode: +v EvilDMP
[03:11:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:12:57] *** Joins: rje (~rje@174.31.83.238)
[03:14:35] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:17:03] *** Joins: rje (~rje@174.31.83.238)
[03:18:42] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:21:10] *** Joins: rje (~rje@174.31.83.238)
[03:21:42] <PaulWay[w]> rje: you're bouncing - can you fix that? :-)
[03:22:48] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:27:19] *** Joins: rje (~rje@174.31.83.238)
[03:28:57] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:31:30] *** Joins: rje (~rje@174.31.83.238)
[03:33:03] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:35:31] *** Joins: rje (~rje@174.31.83.238)
[03:35:49] <b-rex> PaulWay[w]: https://soundcloud.com/beefcarver/out-here-in-amish/s-nCFh0TnzwSW
[03:37:13] *** Quits: rje (~rje@174.31.83.238) (Remote host closed the connection)
[03:37:49] *** Joins: rje (~rje@174.31.83.238)
[03:38:20] <wallbroken> it's fine to see that my code works but i have no idea how
[03:39:15] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:41:19] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:41:46] *** Joins: rje (~rje@174.31.83.238)
[03:43:21] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:45:54] *** Joins: rje (~rje@174.31.83.238)
[03:47:29] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:48:41] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[03:49:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:49:56] *** Joins: rje (~rje@174.31.83.238)
[03:51:34] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[03:55:44] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[03:56:05] *** Joins: rje (~rje@174.31.83.238)
[03:57:44] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:00:11] *** Joins: rje (~rje@174.31.83.238)
[04:01:50] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:04:16] *** Joins: rje (~rje@174.31.83.238)
[04:05:57] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:07:20] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:08:25] *** Joins: rje (~rje@174.31.83.238)
[04:10:03] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:12:32] *** Joins: rje (~rje@174.31.83.238)
[04:13:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:14:10] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:16:46] *** Joins: rje (~rje@174.31.83.238)
[04:16:50] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[04:18:16] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:18:19] *** Joins: justache (~justache@user/justache)
[04:20:49] *** Joins: rje (~rje@174.31.83.238)
[04:21:39] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:22:23] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:23:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:25:05] *** Joins: rje (~rje@174.31.83.238)
[04:25:12] <PaulWay[w]> rje: you're bouncing - can you fix that? :-)
[04:26:28] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:27:13] *** Joins: Skyz (~Skyz@user/skyz)
[04:29:02] *** Joins: rje (~rje@174.31.83.238)
[04:30:36] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:33:05] *** Joins: rje (~rje@174.31.83.238)
[04:34:42] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:37:11] *** Joins: rje (~rje@174.31.83.238)
[04:38:49] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:41:18] *** Joins: rje (~rje@174.31.83.238)
[04:42:56] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:45:27] *** Joins: rje (~rje@174.31.83.238)
[04:47:03] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:49:33] *** Joins: rje (~rje@174.31.83.238)
[04:51:11] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:53:41] *** Joins: rje (~rje@174.31.83.238)
[04:55:18] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[04:56:04] <FunkyBob> i'd kick them if I could, but i don't have perms on this network, it seems
[04:57:47] *** Joins: rje (~rje@174.31.83.238)
[04:59:26] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:01:52] *** Joins: rje (~rje@174.31.83.238)
[05:03:30] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:06:00] *** Joins: rje (~rje@174.31.83.238)
[05:07:37] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:10:06] *** Joins: rje (~rje@174.31.83.238)
[05:11:47] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:14:20] *** Joins: rje (~rje@174.31.83.238)
[05:15:53] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:18:26] *** Joins: rje (~rje@174.31.83.238)
[05:20:00] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:22:28] *** Joins: rje (~rje@174.31.83.238)
[05:24:06] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:26:34] *** Joins: rje (~rje@174.31.83.238)
[05:28:12] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:29:22] <bilb_ono> is there a way to add a file full of enviroment variables like DJANGO_SECRET_KEY, DJANGO_DEBUG, etc. when using manage.py runserver ?
[05:30:45] *** Joins: rje (~rje@174.31.83.238)
[05:32:18] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:34:32] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[05:34:58] *** Joins: rje (~rje@174.31.83.238)
[05:36:26] *** Quits: rje (~rje@174.31.83.238) (Client Quit)
[05:46:10] <FunkyBob> bilb_ono: there's various 3rd party tools for seeting env vars from a file... if that's what you mean
[05:46:22] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 258 seconds)
[05:47:01] <b-rex> bilb_ono: https://github.com/theskumar/python-dotenv
[05:48:21] <b-rex> there is also https://github.com/joke2k/django-environ
[05:48:28] <bilb_ono> I did try that one and it works great but I dont understand what to do between dev and prod. do you have two versions of the settings file? one for dev that tries to load that file? and one for prod where the loading of that file is removed?
[05:48:36] <FunkyBob> not to mention ye olde daemontools
[05:48:47] <bilb_ono> I was hoping you could just do the runserver with a flag for enviroment variable files or something
[05:48:52] <FunkyBob> bilb_ono: neither should be loading that file
[05:49:16] <FunkyBob> your settinsg should pull values from env vars [and probably fall back to defaults]... and your dev/prod env should set the env vars
[05:49:26] <FunkyBob> the code should not need to know how those values are set
[05:49:56] <FunkyBob> as for tools to help with settings-from-env-vars... I wrote two libs: django-classy-settings and confucius
[05:51:01] <FunkyBob> i keep telling myself I'm going to write a django companion package for confucius, to help parse django-specific settings formats
[05:51:30] <bilb_ono> but if it falls back to defaults… what do you set those to? I cant use the “correct” defaults because thats the same as hardcoding the values right? They still end up in github
[05:51:58] <FunkyBob> my preferred choice for fallback defaults would be "safe, non-destructive" ... typically "what I would use in dev that won't cause problems on prod]
[05:52:20] <FunkyBob> so if somehow you deploy to prod without setting the env, it sets to something harmless, or [even better] that fails loudly, quickly
[05:53:11] <bilb_ono> so like in dev I want to use a particular api key. I dont want it hardcoded. so I guess that means I wouldnt use it as default right?
[05:53:34] <bilb_ono> but that means there has to be some loading in dev that sets it from a config file. so some code has to load it in settings?
[05:53:56] <FunkyBob> settings would pull it from an env var
[05:54:36] <bilb_ono> but then what does it do in prod? like in prod it shoudl come from enviroment variables set elsehow right?
[05:54:37] <FunkyBob> API_KEY = os.getenv('API_KEY', 'my-dummy-api-key-for-dev')
[05:54:47] <FunkyBob> in prod your deployment sets the env var
[05:54:52] <FunkyBob> yes
[05:54:59] <FunkyBob> this is the whole 12factor thing for env vars
[05:55:12] <bilb_ono> and what is above that? load_envorment_vars(‘some-varfile.env’) ?
[05:55:14] <FunkyBob> the correct value is a product of the environment, not your code... so provide it from the environment
[05:55:19] <FunkyBob> no
[05:55:22] <FunkyBob> STOP LOADING THE ENV IN YOUR CODE
[05:55:30] <bilb_ono> ok ok
[05:55:40] <bilb_ono> so no loading will be in my code
[05:55:54] <FunkyBob> that is what I've said in various ways in this discussion, yes
[05:56:12] <bilb_ono> so how do I make it run successfully (with the correct api key) in dev?
[05:56:27] <FunkyBob> by having the dev values be the fallback defaults, like I showed above
[05:56:56] <bilb_ono> so API_KEY = os.getenv('API_KEY', 'my-dummy-api-key-for-dev’). That will try and use my-dummy-api-key-for-dev as the actual api key right?
[05:57:17] <FunkyBob> that will try to get the value from the API_KEY env var... and if it's not set, use the dummy value
[05:57:20] <bilb_ono> but then it wont work in dev because its not the real api key
[05:57:24] <FunkyBob> os.getenv works like dict.get
[05:57:29] <FunkyBob> ...
[05:57:32] <FunkyBob> then
[05:57:40] <FunkyBob> put a usable key there?
[05:58:10] <bilb_ono> but if I do, and I push to github my api key will be in github
[05:58:18] <FunkyBob> it is an error to deploy without setting these vars... so ideally you want your app to fail loud and fast if deployment doesn't set it
[05:58:29] <FunkyBob> almost as good is to have it work harmlessly
[05:58:43] <bilb_ono> I guess for the purposes of this discussion I am only interested in dev
[05:58:55] <FunkyBob> then don't do that... put the key in a local env file and use one of the bajillion existing "set env from .env " tools
[05:59:42] <bilb_ono> but isnt’ set env from env akin to “loading it in the code” as we discussed before as being bad?
[05:59:55] <FunkyBob> no, because the code doesn't know how it's set, nor care
[06:00:09] <FunkyBob> your app has no part ever in setting the env vars
[06:00:16] <FunkyBob> only in consuming them
[06:01:46] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 240 seconds)
[06:04:08] <FunkyBob> the other tools I talk about would set the env vars in your shell... they are not code you include in your project
[06:05:10] <bilb_ono> FunkyBob: right. like I have a file right now. that says DJANGO_DEBUG=True; export DJANGO_DEBUG,… ect for everything including secrets
[06:05:19] <bilb_ono> then I source that file
[06:05:41] <bilb_ono> and it works
[06:06:01] <bilb_ono> I thought there might be a django specific way like a flag where you could load from an enviroment file
[06:06:17] <bilb_ono> to avoid the source step…
[06:06:26] <FunkyBob> no
[06:06:40] <FunkyBob> so you've amended your settings.py to pull those values from env?
[06:07:27] <bilb_ono> yeah so my settings.py looks like this for instance DEBUG = os.getenv('DJANGO_DEBUG',False)
[06:07:44] <bilb_ono> which works once I have sourced my enviroment file which sets those vars and exports them
[06:08:20] <bilb_ono> and the default variables I provided are useless for dev and prod. just placeholders. That way I can push the settings.py to github without worry
[06:08:44] <FunkyBob> sure
[06:08:53] <FunkyBob> again, especially because of types, you might want to look at confucius :)
[06:09:26] <FunkyBob> https://pypi.org/project/confucius/
[06:11:16] <bilb_ono> I will thanks
[06:12:23] <bilb_ono> I still dont understand though. Like in django-environ they say environ.Env.read_env()… I dont understand what that provides you over os.getenv(‘varname’)
[06:12:53] <FunkyBob> no idea
[06:12:57] <bilb_ono> I guess its about loading a proper type from your enviroment
[06:13:00] <bilb_ono> ?
[06:13:03] <FunkyBob> perhaps it also auto-parses a .env file or something?
[06:13:10] <FunkyBob> or, yeah, types
[06:13:13] <FunkyBob> i've not used it
[06:13:15] <bilb_ono> and people who use it will still have to run source <some_env_file>
[06:13:34] <bilb_ono> or export them manually
[06:13:39] <bilb_ono> I guess that makes sense
[06:19:04] <FunkyBob> looking at their docs... it seems, yes, type casting is the benefit they offer
[06:19:09] *** Quits: bambanxx (~bambanx@181-163-45-7.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:19:28] <FunkyBob> and, yeah, some people would prefer their code read the .env file.. but as we discussed, this is hazardous at best
[06:20:15] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[06:27:54] <bilb_ono> ok thanks
[06:36:14] *** Joins: audiocat (~audio@2603-8081-1800-6a65-bbfb-7743-e7ab-c12a.res6.spectrum.com)
[06:43:20] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[06:59:59] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:09:18] *** Joins: khanred (~khanred@user/khanred)
[07:32:09] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[07:33:11] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:39:56] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[07:43:02] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Client Quit)
[07:43:42] *** Joins: nbao (~nbao@2804:14c:5bb8:9720::1000)
[07:44:04] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[07:51:30] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:52:33] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:53:56] <hemebond> https://pypi.org/project/python-environ/
[07:54:18] <FunkyBob> yes, that was discussed
[07:54:34] <hemebond> Yes. But not linked to. And it explains what it does.
[07:54:40] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[08:00:15] *** Quits: Elzington (~Elzington@static-198-54-128-46.cust.tzulo.com) (Quit: Leaving)
[08:02:00] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[08:06:23] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[08:14:58] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:15:28] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:21:17] *** Quits: nbao (~nbao@2804:14c:5bb8:9720::1000) (Quit: WeeChat 3.2)
[08:23:21] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:14] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[08:33:46] *** Quits: audiocat (~audio@2603-8081-1800-6a65-bbfb-7743-e7ab-c12a.res6.spectrum.com) (Ping timeout: 246 seconds)
[08:42:27] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:49:12] *** Joins: audiocat (~audio@2603-8081-1800-6a65-63a8-70ba-985b-6ade.res6.spectrum.com)
[08:52:40] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:55:40] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:12:04] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:12:53] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:15:42] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:16:26] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:17:16] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[09:22:39] *** Quits: znpy (~znpy@user/znpy) (Read error: Connection reset by peer)
[09:34:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[09:36:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:06:07] *** Joins: dre (~dre@2001:8003:c932:c301:d510:501c:e72:68e6)
[10:06:11] <dre> yo
[10:07:25] <dre> is there somewhere I can go to talk about bash completion scripting? =)
[10:18:45] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[10:37:08] <hemebond> #bash ?
[10:37:23] <dre> nice
[10:37:38] *** kostkon_ is now known as kostkon
[11:04:07] *** Joins: znpy (~znpy@user/znpy)
[11:14:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:14:33] *** ChanServ sets mode: +v EvilDMP
[11:16:01] <EvilDMP> I'm sorry, I have no idea whatsoever what was happening there. I shut down my MacBook for the night - and that's all I know.
[11:16:39] <EvilDMP> Oh wait, I see that Textual has an open "Install update
[11:16:48] <EvilDMP> Oh wait, I see that Textual has an open "Install update" dialog box.
[11:18:04] <dre> it's ok, we'll forgive you but just this once.
[11:19:19] *** Joins: doev (~doev@p549d78c6.dip0.t-ipconnect.de)
[11:25:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[11:25:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:25:21] *** ChanServ sets mode: +v EvilDMP
[11:26:21] <FunkyBob> EvilDMP: you and rje were doing the same thing...
[11:27:03] <EvilDMP> I'm going to put the MacBook to sleep again for ten minutes, please tell me if it happens again.
[11:27:09] <EvilDMP> FunkyBob ^
[11:27:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:27:37] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:27:37] *** ChanServ sets mode: +v EvilDMP
[11:27:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:28:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:28:34] *** ChanServ sets mode: +v EvilDMP
[11:28:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:28:50] <hemebond> 😠
[11:29:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:29:22] *** ChanServ sets mode: +v EvilDMP
[11:29:32] <FunkyBob> EvilDMP: still happening
[11:29:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:29:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:29:59] *** ChanServ sets mode: +v EvilDMP
[11:30:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:30:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:30:45] *** ChanServ sets mode: +v EvilDMP
[11:31:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:31:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:31:38] *** ChanServ sets mode: +v EvilDMP
[11:31:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:33:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:33:20] *** ChanServ sets mode: +v EvilDMP
[11:33:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:33:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:33:57] *** ChanServ sets mode: +v EvilDMP
[11:34:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:34:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:34:43] *** ChanServ sets mode: +v EvilDMP
[11:34:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:35:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:35:28] *** ChanServ sets mode: +v EvilDMP
[11:35:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:36:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:36:20] *** ChanServ sets mode: +v EvilDMP
[11:36:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:36:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:36:59] *** ChanServ sets mode: +v EvilDMP
[11:37:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:37:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:37:46] *** ChanServ sets mode: +v EvilDMP
[11:38:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:38:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:38:48] *** ChanServ sets mode: +v EvilDMP
[11:38:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:39:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:39:35] *** ChanServ sets mode: +v EvilDMP
[11:39:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:40:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:40:09] *** ChanServ sets mode: +v EvilDMP
[11:40:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:40:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:40:59] *** ChanServ sets mode: +v EvilDMP
[11:41:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:41:26] *** Joins: Mindiell (~Mindiell@python/afpy/mindiell)
[11:41:34] <Mindiell> hi there, got a pytest problem...
[11:41:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:41:46] *** ChanServ sets mode: +v EvilDMP
[11:41:59] <Mindiell> When a user log in, I use a dispatch to log the access in my db.
[11:42:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:42:11] <Mindiell> everything is perfectly fine in my app.
[11:42:31] <Mindiell> When I do some tests, the HttpRequest has no "user" attribute
[11:42:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:42:38] *** ChanServ sets mode: +v EvilDMP
[11:42:39] <Mindiell> so I can't log access
[11:42:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:43:01] <Mindiell> From what I see, the login is done via the rest framework APIClient.login method
[11:43:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:43:22] *** ChanServ sets mode: +v EvilDMP
[11:43:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:43:43] <Mindiell> which calls the django.test.client.login method
[11:44:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:44:07] *** ChanServ sets mode: +v EvilDMP
[11:44:21] <Mindiell> then _login, which "Create a fake request to store login details."
[11:44:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:45:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:45:05] *** ChanServ sets mode: +v EvilDMP
[11:45:14] <Mindiell> which calls the login from django.contrib.auth which set the "user" to request only if this one has this attribute already
[11:45:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:45:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:45:42] *** ChanServ sets mode: +v EvilDMP
[11:46:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:46:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:46:25] *** ChanServ sets mode: +v EvilDMP
[11:46:47] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[11:47:01] *** Joins: crawler (~crawler@user/crawler)
[11:47:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:47:41] *** ChanServ sets mode: +v EvilDMP
[11:50:14] <EvilDMP> Sorry folks
[11:50:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:04:43] *** Quits: doev (~doev@p549d78c6.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[12:04:46] *** Joins: Rikem (~mike@user/rikem)
[12:05:45] *** Joins: doev (~doev@p4ff44791.dip0.t-ipconnect.de)
[12:14:42] <Mindiell> Ok, with more digging, it seems that with pytest, it doesn't pass in the middelware.process_request and so does not add "user" to request object
[12:28:05] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[12:28:14] *** Quits: audiocat (~audio@2603-8081-1800-6a65-63a8-70ba-985b-6ade.res6.spectrum.com) (Ping timeout: 255 seconds)
[12:30:02] *** Quits: dre (~dre@2001:8003:c932:c301:d510:501c:e72:68e6) (Quit: WeeChat 2.8)
[12:32:03] <Mindiell> if anyone has any idea, thx
[12:36:13] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[12:38:02] *** Joins: pycode (~pycode@2001:b07:5d28:551:94a7:8b08:6e08:452a)
[12:57:56] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:10:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:10:35] *** ChanServ sets mode: +v EvilDMP
[13:25:45] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[14:01:37] <FunkyBob> Mindiell: why is pytest doing its own request processing, instead of using the proper one?
[14:03:18] <Mindiell> FunkyBob: what do you mean by "its own request processing" ? (I'm not a Django specialist)
[14:03:35] <FunkyBob> Mindiell: what is it doing that's bypassing middleware?
[14:04:01] <Mindiell> FunkyBob: I "really" don't know :)
[14:04:07] <Mindiell> I'll show you the source code
[14:04:48] <FunkyBob> ok
[14:09:16] <Mindiell> FunkyBob: here => https://wyz.fr/1W-56
[14:09:41] <Mindiell> It's a project I'm going into. Tests were written by someone else
[14:10:56] <Mindiell> I'll put the error too
[14:11:13] <Mindiell> (but the error comes from the fact that "user" is not part of "HttpRequest"
[14:11:19] <FunkyBob> none of this looks like django code
[14:11:42] <FunkyBob> except reverse
[14:12:00] <Mindiell> :D
[14:12:14] <Mindiell> https://wyz.fr/4C-KB <= The error on pytest
[14:12:51] <FunkyBob> what is this Control that the factory produces?
[14:12:52] <Mindiell> (some logging is done on user access via signals)
[14:12:55] <FunkyBob> a model?
[14:13:02] <Mindiell> Yup
[14:13:21] <Mindiell> want the factory source ?
[14:13:24] <FunkyBob> no
[14:14:21] <FunkyBob> not that familiar with DRF... any idea if their APIClient sub-classes django's test client?
[14:14:42] <jor> yeah, APIClient is subclass of the normal django test client
[14:14:47] <Mindiell> yes
[14:15:02] <Mindiell> error message show that django.test.client is used
[14:15:23] <jor> I'd look into if and how django is even configured here, with the middlewares :/
[14:15:26] <FunkyBob> so  yo u could use client.force_login(user)
[14:15:29] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:15:31] <FunkyBob> https://docs.djangoproject.com/en/3.2/topics/testing/tools/#django.test.Client.force_login
[14:15:34] <FunkyBob> morning, GinFuyou
[14:16:56] <Mindiell> FunkyBob: I did, yet same error :)
[14:17:19] <FunkyBob> instead of     login(client, user=user)
[14:17:20] <FunkyBob> ?
[14:17:20] <GinFuyou> morning FunkyBob (though it seems UGT only for us)
[14:17:46] <Mindiell> ah no, instead of client.login.....
[14:17:52] <Mindiell> I'll try
[14:18:35] <FunkyBob> oh, I see that now
[14:18:57] <Mindiell> nup, same error :o)
[14:19:24] <Mindiell> Not sure that those tests are "well written" :o/
[14:20:02] <FunkyBob> does your site use any non-standard auth machinery?
[14:20:58] <Mindiell> yes,
[14:21:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[14:21:25] <Mindiell> something called magic-auth. But it's used only on the front website. Admin is still using normal auth
[14:21:27] <wallbroken> settings.EMAIL_HOST_USER,
[14:21:33] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:21:33] <wallbroken> is possible to add it in a template?
[14:21:38] <Mindiell> plus app is working perfectly, not tests
[14:22:04] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:22:27] <wallbroken> <a href="mailto: {{ settings.EMAIL_HOST_USER }}?subject=Help request for user: {{ user.username }}">Help</a>
[14:22:31] <wallbroken> it does make sense?
[14:23:01] <FunkyBob> Mindiell: and what is this magic-auth thing?
[14:23:48] <Mindiell> FunkyBob: a Django app used to log through token : you give your email, it sends you a url (with a token), you click on the url and you're logged-in
[14:24:02] *** Joins: greenhood (~sharan@122.167.60.128)
[14:24:12] <FunkyBob> Mindiell: i see
[14:24:27] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:24:29] <Mindiell> it's called https://github.com/betagouv/django-magicauth  <= source code is here
[14:24:36] <FunkyBob> can see an easy path to that using the built in password reset machinery... but anyway
[14:24:43] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:24:57] <FunkyBob> so long as it still uses regular django auth
[14:25:12] *** Parts: greenhood (~sharan@122.167.60.128) ()
[14:25:35] <FunkyBob> yep, uses django.contrib.auth.login
[14:27:32] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[14:27:34] <Mindiell> I asked devs to see if they were launching tests regularly. Source code has not been modified since 14 monthes....
[14:31:12] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:36:22] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:37:12] *** Parts: jamesmartinez (~keinbock@37.44.247.165) ()
[14:38:50] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:39:09] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[14:42:32] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[14:42:49] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[14:46:43] *** Quits: crawler (~crawler@user/crawler) (Remote host closed the connection)
[14:49:32] *** Quits: pycode (~pycode@2001:b07:5d28:551:94a7:8b08:6e08:452a) (Ping timeout: 255 seconds)
[14:57:12] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[14:57:12] <wallbroken> https://dpaste.org/F9fT
[14:57:18] <wallbroken> do you see something wrong in this?
[14:59:05] <wallbroken> ImportError: cannot import name 'render_to_response' from 'django.shortcuts' (C:\Users\viti\AppData\Local\Programs\Python\Python37-32\lib\site-packages\django\shortcuts.py)
[14:59:14] *** Joins: HoaxKey (~HoaxKey@85.255.237.160)
[15:02:20] <wallbroken> anybody around?
[15:02:24] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[15:02:31] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:03:11] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[15:03:19] *** Joins: pgcd (~pgcd@93-41-16-15.ip79.fastwebnet.it)
[15:03:49] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:04:39] <pgcd> hi all! quick question: how do I restore a classmethod after monkeypatching it in a context manager? in other words, what's wrong with this code: https://dpaste.org/MeMT
[15:05:17] <pgcd> (explanation: I need to temporarily use a different database with factory-boy factories, and I can't find any other way of dealing with all the subfactories involved)
[15:06:41] <pgcd> the code works, btw - so the object I create in the context is created (along with all subfactories) in the proper database; the problem is that when the method is restored, it's no longer working
[15:08:04] *** Joins: crawler (~crawler@user/crawler)
[15:08:12] <oblikoamorale> wallbroken: usually it helps to check docs or source. I don't see render_to_response there, however there is render(). https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/
[15:09:47] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Ping timeout: 252 seconds)
[15:10:04] *** Quits: doev (~doev@p4ff44791.dip0.t-ipconnect.de) (Quit: Client closed)
[15:16:04] <jor> pgcd: some static/classmethod decorator around the original maybe?
[15:16:53] <jor> I'd say, don't reinvent the wheel, use something like pytest's monkeypatch, which usually handles all these edge cases ;p
[15:17:05] <moldy> wallbroken, oblikoamorale: render_to_response() used to exist, i guess it has been removed or renamed at some point
[15:17:53] <moldy> you want to use render() nowadays
[15:22:12] <wallbroken> moldy: can you help me in modifying that?
[15:22:58] <moldy> wallbroken: ``return render(request, template, context)``
[15:23:06] <moldy> https://docs.djangoproject.com/en/3.2/topics/http/shortcuts/#render
[15:25:15] <wallbroken> https://dpaste.org/wrsq
[15:25:17] <wallbroken> that's reight?
[15:25:53] <moldy> wallbroken: no
[15:25:57] <moldy> wallbroken: read again what i wrote :)
[15:26:22] <moldy> wallbroken: also, practice reading the documentation. it's a very important skill.
[15:26:48] <moldy> ``return render(request, template, context)`` and update your import statement
[15:29:55] <pgcd> jor i'll try redecorating when readding; we don't use pytest so I'm unsure whether it makes sense to install it just for this
[15:30:35] <jor> pgcd: hmm, don't need to fully redecorate I think, just avoid the descriptor when you get it I think
[15:31:21] <jor> pgcd: yeah, pytest does a workaround: oldval = target.__dict__.get(name, notset)
[15:32:11] <pgcd> interesting, I might try that - for completeness, these are the last lines of the traceback https://dpaste.org/xyQm
[15:33:10] <pgcd> which make me think the problem is somehow due to the method linking back to the original class rather than the ones created by factoryboy (with contribute_to_class)
[15:33:56] <pgcd> what bothers me is that apparently other people have used the contextmanager approach without problems
[15:33:57] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[15:34:41] <wallbroken> moldy: https://dpaste.org/ydJM
[15:34:45] <wallbroken> but still not working
[15:36:24] <jor> pgcd: yeah, exactly. it's wrapped when you access it. Probably works because 1) not many use it with classmethod 2) not many care about resetting the original
[15:36:54] <pgcd> got it
[15:38:40] <pgcd> jor using __dict__ changed the error, so that's a definite improvement =)
[15:39:31] <pgcd> and yes, it looks like it worked, you're my hero and I'll be forever* in your debt
[15:39:37] <pgcd> * for a given value of forever
[15:39:50] *** Quits: blathijs (~matthijs@tika.stderr.nl) (Quit: tot later)
[15:39:56] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 255 seconds)
[15:40:00] <jor> great, i'll come collect when you least expect it ;)
[15:40:12] <moldy> wallbroken: what is the error message?
[15:40:50] <wallbroken> moldy: no errors
[15:41:02] *** Joins: rje (~rje@174.31.231.201)
[15:41:05] <wallbroken> i simply don't get the field when the template is rendered
[15:41:05] <moldy> wallbroken: so in which way does it "not work" then?
[15:41:15] <moldy> show us the template
[15:41:52] <wallbroken> https://dpaste.org/EBwp
[15:42:02] <pgcd> jor =)
[15:42:05] <wallbroken> https://dpaste.org/EBwp#L195
[15:42:06] <wallbroken> here
[15:42:41] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[15:45:11] *** Joins: rje (~rje@174.31.231.201)
[15:45:40] *** Quits: jgee (~jgee@186.80.49.20) (Quit: The Lounge - https://thelounge.chat)
[15:46:16] *** Joins: jgee (~jgee@186.80.49.20)
[15:46:41] *** Quits: clemente (~Daniel@balticom-142-72-136.balticom.lv) (Ping timeout: 255 seconds)
[15:47:46] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[15:48:53] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[15:51:21] *** Joins: rje (~rje@174.31.231.201)
[15:53:00] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[15:55:46] *** Joins: rje (~rje@174.31.231.201)
[15:57:07] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[15:59:36] *** Joins: rje (~rje@174.31.231.201)
[16:01:14] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:02:35] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[16:02:41] <moldy> wallbroken: which field?
[16:02:55] <wallbroken> admin_mail
[16:03:05] <wallbroken> the template is login.html
[16:03:13] <moldy> wallbroken: admin_mail vs. admin_email
[16:03:20] <moldy> ah sorry, no
[16:03:34] <moldy> wallbroken: is the setting empty maybe?
[16:03:43] *** Joins: rje (~rje@174.31.231.201)
[16:03:56] <wallbroken> no' it's not empty
[16:05:22] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:05:47] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[16:07:58] *** Joins: rje (~rje@174.31.231.201)
[16:09:14] *** Quits: pgcd (~pgcd@93-41-16-15.ip79.fastwebnet.it) (Quit: Client closed)
[16:09:29] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:10:44] <wallbroken> moldy:
[16:10:45] <wallbroken>  path('accounts/', include('django.contrib.auth.urls')),
[16:11:13] <wallbroken> this means that to manage the login page, a system view is used
[16:11:13] *** Quits: HoaxKey (~HoaxKey@85.255.237.160) (Read error: Connection reset by peer)
[16:11:58] *** Joins: rje (~rje@174.31.231.201)
[16:13:37] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:16:07] *** Joins: rje (~rje@174.31.231.201)
[16:17:45] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:20:19] *** Joins: rje (~rje@174.31.231.201)
[16:20:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:81d0:621c:8a3b:bd6d)
[16:21:53] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:23:19] *** Joins: clemente (~Daniel@balticom-142-72-136.balticom.lv)
[16:24:22] *** Joins: rje (~rje@174.31.231.201)
[16:26:01] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:28:29] *** Joins: rje (~rje@174.31.231.201)
[16:29:07] *** Joins: serghei (~egrep@user/serghei)
[16:30:08] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:32:40] *** Joins: rje (~rje@174.31.231.201)
[16:33:29] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 255 seconds)
[16:34:16] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:36:34] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[16:36:50] *** Joins: rje (~rje@174.31.231.201)
[16:37:54] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[16:38:25] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:40:57] *** Joins: rje (~rje@174.31.231.201)
[16:42:32] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:46:36] *** Joins: blathijs (~matthijs@tika.stderr.nl)
[16:47:09] *** Joins: rje (~rje@174.31.231.201)
[16:48:43] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:51:17] *** Joins: rje (~rje@174.31.231.201)
[16:52:51] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[16:57:25] *** Joins: rje (~rje@174.31.231.201)
[16:59:02] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:01:36] *** Joins: rje (~rje@174.31.231.201)
[17:03:10] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:05:39] *** Joins: rje (~rje@174.31.231.201)
[17:05:39] *** Joins: ruffni (~user@212-51-128-111.fiber7.init7.net)
[17:07:11] *** Joins: serghei (~egrep@user/serghei)
[17:07:17] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:07:36] <ruffni> how can i check if a form in a formset is a "freshly generated, new" form or one containing data?
[17:09:51] *** Joins: rje (~rje@174.31.231.201)
[17:11:25] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:13:55] *** Joins: rje (~rje@174.31.231.201)
[17:15:33] *** Quits: rje (~rje@174.31.231.201) (Remote host closed the connection)
[17:16:10] *** Joins: rje (~rje@174.31.231.201)
[17:17:37] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:20:07] *** Joins: rje (~rje@174.31.231.201)
[17:21:46] *** Quits: rje (~rje@174.31.231.201) (Remote host closed the connection)
[17:22:22] *** Joins: rje (~rje@174.31.231.201)
[17:23:48] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:26:21] *** Joins: rje (~rje@174.31.231.201)
[17:27:55] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:30:28] *** Joins: rje (~rje@174.31.231.201)
[17:31:22] <hemebond> ruffni: Not sure what you mean.
[17:32:02] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:32:41] <ruffni> when instantiationg a formset, i can create additional (i.e. "new, fresh") forms with the extra=3 parameter. is there a way to check (in the template) whether a form is already populated with data or of the "fresh, new" kind (i'm so sorry for my terrible phrasing; not sure how to call those more correctly)
[17:32:44] *** Joins: Trieste (~T@user/pilgrim)
[17:33:21] <hemebond> Oh, you mean check if a form was pre-populated or added after page load.
[17:34:09] <ruffni> almost :) added after page load or added as one of the "extra=3" forms
[17:34:14] <hemebond> I think forms will have a pk associated with them if they were instantiated.
[17:34:31] *** Joins: rje (~rje@174.31.231.201)
[17:34:47] <ruffni> hemebond: pretty sure this only works with modelforms
[17:36:10] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:37:03] <Mindiell> FunkyBob: Well, as I suspected tests were no more used and they obviously roted. I'll have to redo the "login" part in order to have somethign working.
[17:37:07] <Mindiell> Thx for your time !
[17:37:11] <hemebond> Well, if you're not using modelforms then I guess you'll have to compare your formset init data with what the user submits.
[17:38:43] *** Joins: rje (~rje@174.31.231.201)
[17:39:19] <ruffni> hemebond: i'm talking about the *rendering of the template* part; in the view everything is alright: it checks whether a form contains data and whether it has changed and everything. but i need to render some <input> field *only on* rows that contain data. like: "delete this entry" (which wouldn't make sense for an empty form)
[17:40:02] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 252 seconds)
[17:40:17] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:40:25] <GinFuyou> ruffni, if you are not using modelforms, only data that can be in the unbound form is initial I think?
[17:40:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:40:29] <hemebond> "populated with data or of the "fresh, new" kind" this doesn't mean anything to me.
[17:40:59] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 255 seconds)
[17:41:02] <hemebond> So only you can decide whether or not to render a form. Jinja can do anything you want. It's all in your control.
[17:41:24] <hemebond> However you will likely have to forgo the convenience methods that would otherwise render it all for you.
[17:42:46] *** Joins: rje (~rje@174.31.231.201)
[17:43:22] *** Joins: clawh (~clawh@185.244.214.60)
[17:43:50] *** Joins: Trieste (T@user/pilgrim)
[17:44:25] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:44:38] <ruffni> :) sorry for my clumsy explanation attempts. please allow me to try again: i defined a Form and its forms.formset_factory. my view populates the formset with a couple of rows of initial data and extra=3 form-"rows". now i need to add a "delete" button thingy (in HTML) to the pre-populated forms (the ones with initial data). is there any way during the rendering of the template to check whether the current {% for form in formset %} loop
[17:44:38] <ruffni> renders a form with initial data?
[17:45:43] <hemebond> If you're the one pre-populating them, then you know how many need the delete button, no?
[17:45:49] <GinFuyou> {% if form.initial %} perhaps?
[17:46:54] *** Joins: rje (~rje@174.31.231.201)
[17:48:33] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:49:15] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[17:51:02] *** Joins: rje (~rje@174.31.231.201)
[17:52:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:52:16] *** ChanServ sets mode: +v EvilDMP
[17:52:41] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[17:53:08] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Remote host closed the connection)
[17:53:33] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[17:56:58] <ruffni> GinFuyou: that's it! thanks!
[17:57:05] *** Quits: javawolfpack (~javawolfp@c-73-116-78-73.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[17:57:06] *** Quits: ChOcO-Bn (~choco@user/choco-bn) (Ping timeout: 240 seconds)
[17:57:08] *** Joins: ChOcO-Bn (~choco@user/choco-bn)
[17:59:50] *** Quits: Damianz (~damian@user/damianz) (Ping timeout: 252 seconds)
[18:00:39] *** Joins: Damianz (~damian@user/damianz)
[18:03:39] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:04:05] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[18:04:07] *** Quits: shodan45 (~quassel@107.161.22.155) (Quit: No Ping reply in 180 seconds.)
[18:05:26] *** Joins: shodan45 (~quassel@107.161.22.155)
[18:05:39] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[18:06:14] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[18:15:21] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[18:19:29] *** Joins: pucko (~pucko@static.244.198.216.95.clients.your-server.de)
[18:20:23] <pycode> hello
[18:20:28] <pycode> jor, are you there?
[18:23:38] <wallbroken> GinFuyou: have you an idea on how to solve the problem?
[18:29:24] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:37:27] *** Joins: dez (uid92154@user/dez)
[18:40:19] *** Joins: serghei (~egrep@user/serghei)
[18:44:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:54:47] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 265 seconds)
[19:08:39] <ruffni> is it possible to alter a Field widget's class attribute after validation? meaning: i find some errors while cleaning a form so i want to set the invalid field's class to "is-invalid"
[19:24:26] <moldy> ruffni: i might misremember, but doesn't django already set such a class for you?
[19:26:15] <ruffni> moldy: it doesn't seem to :(
[19:27:04] <moldy> ruffni: https://stackoverflow.com/a/2242528 something like this
[19:28:59] <ruffni> yes, pretty much! but unfortunately i was not (yet) rendering the form manually; i just have {{ form.field }} (which was enough since i added a class to the widget for bootstrap to display it nicely).
[19:31:14] <ruffni> so my question boils down to this: i'm able to add a class to a widget in the Form definition; but does this (as unexpected as it seems) not work during or after field validation?
[19:32:21] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:33:52] <wallbroken> https://dpaste.org/uH0c#L20
[19:34:04] <wallbroken> does anybody know why is not entering here?
[19:34:14] <wallbroken> why the form is not valid?
[19:55:47] *** Joins: Crassus (~Crassus@user/crassus)
[19:56:57] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[19:58:15] *** Joins: clawh_ (~clawh@185.244.214.60)
[19:59:32] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[19:59:54] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[20:01:17] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[20:06:40] *** Joins: Skyz (~Skyz@user/skyz)
[20:11:30] <ruffni> moldy: well, you were kinda right! thanks for the pointer. i found this: https://stackoverflow.com/questions/2196797/django-input-element-error-css-class#8256041 but for whatever reason this doens't work either
[20:11:36] <ruffni> i guess i'm ready for the weekend ;)
[20:14:59] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[20:24:42] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[20:34:10] *** Parts: ruffni (~user@212-51-128-111.fiber7.init7.net) (ERC (IRC client for Emacs 27.1))
[20:35:11] *** Joins: READ6 (~weechat@2601:184:407f:81bb::d48)
[20:37:04] *** READ6 is now known as READ10
[20:38:45] *** Joins: rje (~rje@174.31.231.201)
[20:40:24] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[20:42:52] *** Joins: rje (~rje@174.31.231.201)
[20:44:01] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:46:35] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[20:46:59] *** Quits: READ10 (~weechat@2601:184:407f:81bb::d48) (Changing host)
[20:46:59] *** Joins: READ10 (~weechat@user/read10)
[20:47:03] *** Quits: READ10 (~weechat@user/read10) (Quit: WeeChat 3.0.1)
[20:47:12] *** Joins: READ10 (~weechat@user/read10)
[20:47:37] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:09] *** Joins: rje (~rje@174.31.231.201)
[20:50:43] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[20:50:53] *** Quits: pycode (~pycode@2001:b07:5d28:551:81d0:621c:8a3b:bd6d) (Ping timeout: 255 seconds)
[20:52:41] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:53:08] *** Joins: Trieste (~T@user/pilgrim)
[20:53:12] *** Joins: rje (~rje@174.31.231.201)
[20:54:51] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[20:56:36] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[20:56:44] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:57:09] *** Joins: Trieste_ (T@user/pilgrim)
[20:57:19] *** Joins: rje (~rje@174.31.231.201)
[20:57:38] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 255 seconds)
[20:58:50] *** Joins: slav0nic (slav0nic@python.su)
[20:58:58] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[21:01:27] *** Joins: rje (~rje@174.31.231.201)
[21:01:41] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[21:02:55] *** Quits: READ10 (~weechat@user/read10) (Quit: WeeChat 3.0.1)
[21:03:05] *** Quits: rje (~rje@174.31.231.201) (Remote host closed the connection)
[21:03:42] *** Joins: rje (~rje@174.31.231.201)
[21:05:10] *** Quits: rje (~rje@174.31.231.201) (Client Quit)
[21:05:50] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:07:38] *** Joins: rje (~rje@174.31.231.201)
[21:07:56] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 252 seconds)
[21:08:30] *** Joins: n00bn00b (~N00b@79.184.110.70.ipv4.supernova.orange.pl)
[21:08:45] *** Quits: kiska (~kiska@user/kiska) (Quit: Ping timeout (120 seconds))
[21:09:16] *** Joins: kiska (~kiska@user/kiska)
[21:17:30] *** Joins: serghei (~egrep@user/serghei)
[21:17:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:13] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[21:22:12] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 265 seconds)
[21:31:24] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:31:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:31:33] *** ChanServ sets mode: +v EvilDMP
[21:33:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[21:36:05] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[21:37:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[21:37:33] *** vinleod is now known as vdamewood
[21:42:04] *** Joins: READ10 (~weechat@user/read10)
[21:55:52] *** Joins: Guddu (~Guddu@106.214.41.45)
[22:01:50] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 252 seconds)
[22:16:31] *** Joins: clawh (~clawh@185.244.214.60)
[22:17:47] *** Joins: serghei (~egrep@user/serghei)
[22:24:10] *** Joins: clawh_ (~clawh@185.244.214.60)
[22:26:46] *** Quits: clawh (~clawh@185.244.214.60) (Ping timeout: 272 seconds)
[22:27:39] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:30:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:36:58] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 240 seconds)
[22:41:19] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:03:15] *** Joins: serghei (~egrep@user/serghei)
[23:06:57] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[23:28:29] *** Joins: audiocat (~audio@2603-8081-1800-6a65-409f-2bb3-722e-2529.res6.spectrum.com)
[23:34:16] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[23:34:56] <ironbeard> Anyone familiar with using django-sendfile with nginx to protect certain uploaded files in MEDIA_ROOT?
[23:36:34] <ironbeard> I followed the setup on the github but I'm getting 404s. I'm thinking it's related to the fact that I only want to protect/use sendfile for one subdirectory of my MEDIA_ROOT (the example provided doesn't use MEDIA_ROOT, but since my files will be user uploaded it seems like of necessary)
[23:48:08] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 258 seconds)
[23:52:14] *** Quits: audiocat (~audio@2603-8081-1800-6a65-409f-2bb3-722e-2529.res6.spectrum.com) (Ping timeout: 255 seconds)
[23:54:27] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[23:55:52] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
