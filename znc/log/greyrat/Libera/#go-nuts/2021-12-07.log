[00:06:29] *** Joins: goldfish (~goldfish@user/goldfish)
[00:09:07] *** Joins: hendry (~hendry@210.23.22.2)
[00:13:45] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0)
[00:17:55] *** Quits: bkircher (~bkircher@2001:a61:250f:2b01:b65d:31b:86ff:e40e) (Ping timeout: 265 seconds)
[00:18:53] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0) (Ping timeout: 265 seconds)
[00:19:39] *** Joins: tyson2 (~user@bras-base-toroon0240w-grc-51-65-92-155-88.dsl.bell.ca)
[00:21:17] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0)
[00:25:49] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0) (Ping timeout: 240 seconds)
[00:26:09] <Rudde> valueEncoder(v)(e, v, opts)
[00:26:18] <Rudde> This while calling a methods
[00:26:29] <Rudde> what does the second set of prentecies mean?
[00:27:27] <ikke> return values
[00:27:37] <fizzie> If that's a call, likely `valueEncoder` returns a function.
[00:27:40] <ikke> yea
[00:28:14] <fizzie> So it's the equivalent of `f := valueEncoder(v); f(e, v, opts)` except as a single expression.
[00:28:44] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[00:28:52] *** Joins: Kaivo (~Kaivo@user/kaivo)
[00:28:56] *** Joins: arinov (~arinov@213.194.126.155)
[00:32:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:33:50] *** Quits: Shimmy (~Shimmy@user/shimmy) (Quit: The Lounge - https://thelounge.chat)
[00:34:23] *** Joins: Shimmy (~Shimmy@user/shimmy)
[00:34:45] *** Joins: fikran (~fikran@user/fikran)
[00:35:36] <fizzie> For the record, I imagine it was about this particular call: https://cs.opensource.google/go/go/+/master:src/encoding/json/encode.go;l=360;drc=283d8a3d53ac1c7e1d7e297497480bf0071b6300
[00:35:42] <fizzie> (And indeed `valueEncoder(v)` returns an `encoderFunc`, which is a function type.)
[00:39:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:43:23] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:44:13] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[00:45:27] *** Joins: imandes0 (~imandes0@109.75.35.208)
[00:47:51] *** Quits: mva (znc@gentoo/developer/mva) (Quit: ZNC - https://znc.in)
[00:48:10] *** Joins: mva (~mva@gentoo/developer/mva)
[01:01:25] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[01:02:39] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:03:41] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[01:05:42] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Quit: Leaving)
[01:06:03] <Rudde> Can I call *func(string) string?
[01:06:45] *** Joins: arinov (~arinov@213.194.126.155)
[01:07:24] <fizzie> You have to dereference it first.
[01:07:37] <fizzie> `(*p)("foo")` and so on. https://go.dev/play/p/NipGWyNO67f
[01:08:12] <fizzie> It's also a pretty weird type, compared to just have a `func(string) string`.
[01:11:19] <Rudde> Isn't it any benefit having it as a pointer if it's passed way down a dependency three?
[01:12:23] *** Joins: x88x88x- (~cheeg@156.146.57.109)
[01:12:24] <fizzie> Not that I know of. I mean, I don't know what the runtime representation of a function type is, but I'd be a little surprised if it's much more than a pointer or maybe two.
[01:12:31] *** Quits: x88x88x- (~cheeg@156.146.57.109) (Remote host closed the connection)
[01:12:52] <Rudde> alright thanks
[01:12:59] <Rudde> not having it as a pointer is way cleaner anyway
[01:14:45] <fizzie> https://go.dev/play/p/9JDPv238sR8 suggests a function type is the same size as a pointer.
[01:17:26] *** Quits: tyson2 (~user@bras-base-toroon0240w-grc-51-65-92-155-88.dsl.bell.ca) (Remote host closed the connection)
[01:18:20] *** Quits: Guest720 (~kapu@user/egm) (Ping timeout: 265 seconds)
[01:30:26] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[01:36:42] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 265 seconds)
[01:39:53] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ed3f:2af5:12bc:dd1e) (Ping timeout: 252 seconds)
[01:40:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c5d2:58a5:f5c6:cdea)
[01:46:43] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b)
[01:48:26] *** Joins: sagax (~sagax_nb@user/sagax)
[01:49:56] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[01:50:11] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[01:50:21] *** Joins: Atque (~Atque@user/atque)
[01:53:00] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:53:14] *** Quits: alwyn (~alwyn@user/alwyn) (Quit: WeeChat 3.3)
[01:55:50] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b) (Quit: smeeagle)
[01:59:01] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[01:59:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[02:04:04] *** Joins: rcernin (~rcernin@124.190.136.148)
[02:04:21] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0)
[02:04:22] <Tv_> Rudde: go `func` type already is a pointer, hidden from you
[02:08:37] <b0nn> https://github.com/golang/go/blob/master/src/cmd/compile/internal/ir/type.go#L144
[02:08:51] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0) (Ping timeout: 252 seconds)
[02:10:50] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:12:49] *** Joins: jjido (~Denis@90.213.58.125)
[02:18:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:19:49] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:24:56] *** Quits: jjonah (~jjonah@p200300d5d7149500dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:37:16] <Tv_> that's the IR though, that's compiler internals
[02:42:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:44:08] *** Joins: fikran (~fikran@user/fikran)
[02:56:13] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:00:48] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[03:13:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:14:41] *** Joins: sillybooties (~sillyboot@207.251.78.34)
[03:17:59] *** Joins: codebam (~codebam@user/codebam)
[03:21:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[03:24:32] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:25:19] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0)
[03:27:07] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:28:12] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:30:17] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:6438:3a5d:579d:5dc0) (Ping timeout: 265 seconds)
[03:30:18] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:34:04] *** Quits: Ugrastil (~Ugrastil@89.40.112.204) (Quit: Ping timeout (120 seconds))
[03:34:19] *** Joins: Ugrastil (~Ugrastil@89.40.112.204)
[03:35:21] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 256 seconds)
[03:36:05] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[03:37:19] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[03:46:29] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[03:50:06] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 265 seconds)
[03:55:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:56:55] *** Joins: Cork (~Cork@user/cork)
[03:59:44] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:00:12] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:04:00] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.3)
[04:04:22] *** Joins: Rayke (rayke@user/rayke)
[04:09:17] *** Quits: sillybooties (~sillyboot@207.251.78.34) (Ping timeout: 256 seconds)
[04:14:16] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[04:16:09] *** Joins: coder_kalyan (2c72974719@user/coderkalyan)
[04:28:58] *** Joins: mickey85 (~user@user/mickey)
[04:29:06] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[04:29:07] *** mickey85 is now known as mickey8
[04:32:01] *** Quits: rcernin (~rcernin@124.190.136.148) (Ping timeout: 256 seconds)
[04:38:55] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[04:40:30] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:42] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Read error: Connection reset by peer)
[04:47:02] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:53:01] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[04:53:31] *** Joins: fikran (~fikran@user/fikran)
[04:56:41] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[05:00:42] *** Joins: Tv_ (uid62079@user/tv/x-3144562)
[05:01:07] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:ed40:36cf:4b26:89b6)
[05:05:59] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:ed40:36cf:4b26:89b6) (Ping timeout: 265 seconds)
[05:07:02] *** Joins: rcernin (~rcernin@124.190.136.148)
[05:13:01] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:13:39] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[05:15:23] *** Quits: rcernin (~rcernin@124.190.136.148) (Quit: WeeChat 3.3)
[05:15:37] *** Joins: rcernin (~rcernin@124.190.136.148)
[05:16:02] *** Quits: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:25:02] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[05:28:07] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:32:34] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:36:47] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[05:38:48] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[05:46:27] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[05:50:37] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:53:06] *** Joins: kapu (~kapu@user/egm)
[05:53:30] *** kapu is now known as Guest2930
[05:59:07] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 252 seconds)
[06:00:35] *** Quits: Guest2930 (~kapu@user/egm) (Ping timeout: 252 seconds)
[06:07:44] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[06:10:37] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[06:11:49] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[06:13:05] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[06:14:51] *** Joins: darkapex (~darkapex@user/darkapex)
[06:16:13] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 256 seconds)
[06:20:03] *** Quits: todd_ (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[06:23:07] *** Joins: rockyh (~rockyh@user/rockyh)
[06:24:11] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[06:41:07] *** Quits: sgarciapdx (~serge@irc.shork.io) (Quit: The Lounge - https://thelounge.chat)
[06:43:08] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[06:44:13] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:44:42] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:b58a:4d74:7c36:2f56)
[06:44:43] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[06:44:55] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[06:47:16] *** Joins: sgarciapdx (~serge@irc.shork.io)
[06:48:26] *** Quits: norbinaa (~be3uykpy@2a00:a040:19a:b060:b89c:6a13:43:321c) (Ping timeout: 252 seconds)
[06:50:18] *** Quits: lilgopher (~textual@2601:241:8000:38f0:3882:e31d:70c9:88b3) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:54:17] *** Quits: rcernin (~rcernin@124.190.136.148) (Ping timeout: 268 seconds)
[06:56:13] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[06:56:13] *** Quits: sgarciapdx (~serge@irc.shork.io) (Quit: The Lounge - https://thelounge.chat)
[07:00:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:02:28] *** Joins: sgarciapdx (~serge@irc.shork.io)
[07:02:54] *** Joins: fikran (~fikran@user/fikran)
[07:14:13] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[07:22:55] *** Joins: huoy99 (~huoy99@gateway/vpn/pia/huoy99)
[07:24:47] *** Joins: rcernin (~rcernin@124.190.136.148)
[07:24:58] <huoy99> i'm trying to use ast.Visitor to run through some go source code and i'm having an issue where my visitor is being called 4 times for each funcdecl. does anyone know why this is happening? https://go.dev/play/p/yibjkNGhtjy
[07:28:40] *** Joins: codebam (~codebam@user/codebam)
[07:33:54] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[07:34:22] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 265 seconds)
[07:35:48] *** Joins: zkanda (~zkanda@box.makean.art)
[07:40:34] <huoy99> it can be tested like this: https://go.dev/play/p/XihkHjxYeoG
[07:40:47] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[07:41:36] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 245 seconds)
[07:42:32] *** Joins: explodes (~explodes@user/explodes)
[07:49:10] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 268 seconds)
[07:50:18] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:f518:89f6:3824:bca7) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:50:25] <b0nn> Not sure if it's any help at all, but you can see where the call is coming from https://go.dev/play/p/AwS64gX3udu
[08:04:30] *** Joins: leah2 (~leah@vuxu.org)
[08:05:42] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[08:13:33] *** Joins: Neo (~neo@user/neo)
[08:14:29] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[08:17:47] <huoy99> kind of confusing but it calls it for each of the funcdecl's members https://go.dev/play/p/eWwXY5YIlEM
[08:20:58] *** Joins: andlabs (~andlabs@2604:ca00:17a:47cf:d98:977f:23fd:757a)
[08:21:35] *** Quits: huoy99 (~huoy99@gateway/vpn/pia/huoy99) (Quit: Client closed)
[08:24:23] *** Joins: andlabs_ (~andlabs@2604:ca00:17a:47cf:3d8e:2660:4204:24b3)
[08:27:59] *** Quits: andlabs (~andlabs@2604:ca00:17a:47cf:d98:977f:23fd:757a) (Ping timeout: 252 seconds)
[08:29:51] *** Quits: dhruvasagar (~dhruvasag@49.207.222.205) (Quit: WeeChat 3.3)
[08:36:48] *** Joins: andlabs (~andlabs@2604:ca00:17a:47cf:e42e:1b46:9e90:a9c3)
[08:39:25] *** Joins: andlabs__ (~andlabs@2604:ca00:17a:47cf:19ea:3c9a:a5c9:d7e6)
[08:39:43] *** Quits: andlabs_ (~andlabs@2604:ca00:17a:47cf:3d8e:2660:4204:24b3) (Ping timeout: 252 seconds)
[08:42:39] *** Quits: andlabs (~andlabs@2604:ca00:17a:47cf:e42e:1b46:9e90:a9c3) (Ping timeout: 252 seconds)
[08:44:29] *** Quits: andlabs__ (~andlabs@2604:ca00:17a:47cf:19ea:3c9a:a5c9:d7e6) (Ping timeout: 252 seconds)
[08:46:40] *** Joins: andlabs (~andlabs@2604:ca00:17a:47cf:60b1:bd2c:2295:c1da)
[08:46:41] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[09:06:11] *** Quits: andlabs (~andlabs@2604:ca00:17a:47cf:60b1:bd2c:2295:c1da) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:10:05] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:10:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:10:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:10:41] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[09:12:17] *** Joins: fikran (~fikran@user/fikran)
[09:13:58] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:29:57] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[09:41:49] *** Quits: rcernin (~rcernin@124.190.136.148) (Ping timeout: 240 seconds)
[09:44:13] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:57:04] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:58:09] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[10:00:26] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[10:00:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:01:45] <acagastya> Hi, for this code snippet (not a working code, but should give an idea), how do I mention to a function return a struct which was defined within a struct?  https://play.golang.com/p/bdpPhINidR2
[10:03:25] *** Quits: imandes0 (~imandes0@109.75.35.208) (Ping timeout: 240 seconds)
[10:05:17] <bookworm> acagastya: pull the struct into the same namespaces, don't make it anonymous
[10:06:34] <bookworm> as in, pull out struct Item to the toplevel of the file, then within your nested struct simply use it
[10:07:08] <bookworm> it also makes your struct easier to read as well, bonus points
[10:08:00] <acagastya> Okay, all right.
[10:10:52] <acagastya> Just out of curiosity, when I declare a similar struct as the anonymous struct, and mention that, it would give type mismatch -- why is that so?
[10:11:00] *** Joins: rcernin (~rcernin@124.190.136.148)
[10:21:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:36:03] <bookworm> because it's not the same type
[10:38:15] *** Joins: whaley (~whaley@2603-6080-a301-33d1-788f-5998-6281-ad54.res6.spectrum.com)
[10:38:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:39:31] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:40:21] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[10:40:43] *** Joins: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de)
[10:40:48] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[10:48:36] <b0nn> Named type vs anonymous types
[10:49:04] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:51:46] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[10:53:06] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:54:24] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:58:21] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:02:26] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:06:45] *** Quits: purpleidea (~james@user/purpleidea) (Ping timeout: 252 seconds)
[11:09:44] *** Joins: jjido (~Denis@90.213.58.125)
[11:09:59] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[11:10:42] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[11:11:49] *** Joins: mrig (~mrig@user/mrig)
[11:13:20] *** Joins: ewintr (sid512156@id-512156.hampstead.irccloud.com)
[11:13:39] *** Joins: gggp (~gggp@60.10.194.43)
[11:14:47] *** Joins: neurocyte0132889 (~neurocyte@94.46.70.70)
[11:14:47] *** Quits: neurocyte0132889 (~neurocyte@94.46.70.70) (Changing host)
[11:14:47] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:17:48] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[11:18:07] *** Joins: bkircher (~bkircher@2001:a61:250f:2b01:4b96:7ca4:45ee:36d4)
[11:18:35] *** Joins: Kyros (~kyros@user/kyros)
[11:18:54] *** Joins: andlabs (~andlabs@70.107.171.168)
[11:19:37] *** Joins: gggp_ (~gggp@120.245.47.104)
[11:19:49] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[11:20:01] *** Quits: Neo (~neo@user/neo) (Ping timeout: 256 seconds)
[11:20:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:21:39] *** Joins: fikran (~fikran@user/fikran)
[11:27:34] *** Joins: gggp (~gggp@120.245.40.167)
[11:30:14] *** Quits: gggp_ (~gggp@120.245.47.104) (Ping timeout: 265 seconds)
[11:31:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:34:05] *** Quits: gggp (~gggp@120.245.40.167) (Remote host closed the connection)
[11:35:11] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:35:48] *** Joins: normen_ (~normen@p200300d717306100511efac15367192e.dip0.t-ipconnect.de)
[11:36:49] *** Quits: normen (~normen@p200300d7173061005419bd80fedd22bb.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:36:52] *** normen_ is now known as normen
[11:40:20] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:41:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:43:14] *** Joins: andreisamoila (~andreisam@188.27.128.11)
[11:44:03] *** Joins: frost (~frost@user/frost)
[11:44:19] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[11:48:42] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Remote host closed the connection)
[11:50:28] *** Joins: gggp (~gggp@120.245.43.237)
[11:50:39] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[11:51:26] *** Quits: gggp (~gggp@120.245.43.237) (Client Quit)
[11:58:47] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:03:28] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:05:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:06:02] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:07:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[12:08:55] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Remote host closed the connection)
[12:11:10] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:15:23] *** Joins: jla (~jordi@64.225.79.195)
[12:15:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:28:09] *** Quits: noord (~noord@user/noord) (Remote host closed the connection)
[12:29:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:30:06] *** Joins: noord (~noord@user/noord)
[12:30:06] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[12:32:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:35:17] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[12:35:36] *** Joins: Kyros (~kyros@user/kyros)
[12:35:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:36:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:36:45] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:36:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:39:04] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[12:39:28] *** Quits: andreisamoila (~andreisam@188.27.128.11) (Quit: Leaving...)
[12:39:46] *** Joins: andreisamoila (~andreisam@188.27.128.11)
[12:43:55] *** Quits: rcernin (~rcernin@124.190.136.148) (Ping timeout: 252 seconds)
[12:44:20] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:44:36] *** Joins: mickey8 (~user@user/mickey)
[12:46:04] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:46:59] *** Joins: bpalmer` (~user@user/bpalmer)
[12:49:03] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 252 seconds)
[12:49:41] *** Joins: purpleidea (~james@user/purpleidea)
[12:52:48] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:55:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[13:00:13] *** Quits: andreisamoila (~andreisam@188.27.128.11) (Remote host closed the connection)
[13:00:19] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[13:01:18] *** Joins: andreisamoila (~andreisam@188.27.128.11)
[13:02:56] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[13:04:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:06:25] *** Quits: andreisamoila (~andreisam@188.27.128.11) (Ping timeout: 265 seconds)
[13:09:19] *** Quits: purpleidea (~james@user/purpleidea) (Ping timeout: 265 seconds)
[13:11:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:13:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:14:26] *** Joins: sleetdrop (~sleetdrop@61.135.152.136)
[13:18:03] *** Joins: andreisamoila (~andreisam@188.27.128.11)
[13:21:06] *** Joins: purpleidea (~james@user/purpleidea)
[13:21:09] *** Joins: OMGKitteh (~OMGKitteh@2a03:6000:6e62:627::102)
[13:22:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:24:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[13:25:36] *** synthmeat1 is now known as synthmeat
[13:27:25] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[13:27:25] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Client Quit)
[13:29:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:31:01] *** Joins: fikran (~fikran@user/fikran)
[13:43:43] <curiousgay> "func loadData(data inteface{}, filename string) error { ... }" why compiler keeps telling me that "{" after "interface" is unexpected?
[13:44:22] <fnk> it says inteface
[13:44:24] <fnk> without r
[13:44:31] <fnk> it's a typo, i guess
[13:44:36] *** Joins: et_ (~et@user/et)
[13:44:48] <curiousgay> thanks
[13:45:35] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[13:45:35] *** et_ is now known as et
[13:49:39] *** Joins: mickey80 (~user@user/mickey)
[13:52:27] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[13:52:28] *** mickey80 is now known as mickey8
[13:53:06] *** Joins: kapu (~kapu@user/egm)
[13:53:30] *** kapu is now known as Guest2711
[13:53:40] *** Quits: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it) (Quit: marqquit)
[13:56:12] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[13:58:26] *** Joins: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[13:58:56] *** Quits: walkr_ (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Client Quit)
[13:59:04] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Client Quit)
[13:59:19] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[14:01:12] *** Quits: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br) (Client Quit)
[14:01:26] *** Joins: walkr (~walkr@177-7-165-171.user3p.brasiltelecom.net.br)
[14:13:45] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:24:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:27:46] *** Joins: jla (~jordi@64.225.79.195)
[14:28:13] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[14:28:38] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[14:34:33] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[14:43:25] *** Quits: whaley (~whaley@2603-6080-a301-33d1-788f-5998-6281-ad54.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:44:42] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:48:41] *** Quits: LtHummus (~lthummus@97-126-100-88.tukw.qwest.net) (Ping timeout: 245 seconds)
[14:49:27] <walkr> Hey guys! In other languages I'm used to organize files according to MVC, now I was checking if there was some kind of project layout standard and I found this, which tells you to organize files in /cmd, /internal and /pkg folders. Is that how people usually organize Go files? Ref -> https://www.wolfe.id.au/2020/03/10/how-do-i-structure-my-go-project/
[14:51:49] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:52:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:56:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:00:48] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[15:01:23] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[15:01:37] *** Joins: damxsa_ (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[15:01:42] *** Quits: damxsa_ (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Remote host closed the connection)
[15:05:18] <sztanpet> not pkg
[15:05:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:16:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:19:20] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[15:33:15] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:33:49] *** Quits: Guest2711 (~kapu@user/egm) (Ping timeout: 240 seconds)
[15:34:30] <walkr> sztanpet, is there any reason to use /internal over /model or /controller? Or is the idea that I do something like /internal/model ?
[15:34:38] *** Joins: darkapex_ (~darkapex@user/darkapex)
[15:34:50] <ewintr> walkr Yes, I usually do that if I have the change. Most of the time I have not.
[15:35:17] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 265 seconds)
[15:35:32] <ewintr> internal poses some restrictions on what other code can import packages in that folder.
[15:36:03] <ewintr> https://go.dev/doc/go1.4#internalpackages
[15:37:01] <walkr> ewintr, oh, I wasn't aware.. Thanks for pointing that out
[15:37:03] <walkr> reading
[15:37:31] <ewintr> I wrote a short bit about it myself: https://ewintr.nl/notes/2021/my-default-golang-directory-structure/  (site is a bit defunct at the moment, but this post still shows up.)
[15:38:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:40:23] *** Joins: fikran (~fikran@user/fikran)
[15:40:44] <ewintr> Bit is almost identical to the page you linked. must be a very good idea then :)
[15:42:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:47:57] *** Quits: sleetdrop (~sleetdrop@61.135.152.136) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:49:04] *** Quits: bkircher (~bkircher@2001:a61:250f:2b01:4b96:7ca4:45ee:36d4) (Quit: Leaving)
[15:51:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:52:13] *** Quits: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw) (Ping timeout: 240 seconds)
[15:52:18] <walkr> your post is very straightforward!
[15:55:14] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[15:57:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:06:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:11:37] <sztanpet> if a package is not internal, it can be imported, so no reason for the pkg dir is my point
[16:13:39] *** Quits: normen (~normen@p200300d717306100511efac15367192e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:15:26] <sztanpet> not sure how it got so cargo-culted
[16:16:04] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[16:19:31] <chilversc> I could understand the pkg folder (though I'd probably name it lib), if its for code thats acting more like an external library, such as utility functions, but in the wolfe example most of the pkg folder seems to be the main application
[16:20:19] <sztanpet> why the need for a separate folder for "external libraries" tho
[16:21:00] <chilversc> might be a bit neater than a generic "utils" package, and is something that could be hived off into its own repository at a later date if it grows sufficently
[16:21:09] <ewintr> Because it tells others that the package is safe to use in another project.
[16:21:10] *** Joins: normen (~normen@p200300d717306100511efac15367192e.dip0.t-ipconnect.de)
[16:21:36] <chilversc> right, but every package should be safe to use, otherwise it would be under internal
[16:21:57] <sztanpet> yea, i dont get it, but thats okay
[16:22:03] <ewintr> Actually am in a deep mess at the moment where this convention was not followed and now I have to fix some circular dependencies.
[16:22:30] <sztanpet> this convention solves circular dependencies? how?
[16:23:31] <ewintr> It doesn't, I agree. Either your convention or mine would have solved it technically.
[16:24:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:22] <chilversc> I guess you could have a rule that packages under pkg cannot refer to other packages in that repository? Then the top level glues everything together, but you could do the same thing by just applying the same rule without the pkg folder
[16:24:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:24:53] <chilversc> but nothing about this imposes a technical restriction to prevent it
[16:24:56] <ewintr> But there should be _a_ convention. Or otherwise people put packages in a folder outside of internal and others start importing them. Better to give a clear signal, i think, because apparently it is hard enough as it is.
[16:25:38] <chilversc> I guess the question is when was internal introduced?
[16:25:47] <sztanpet> 1.4
[16:26:02] *** Quits: normen (~normen@p200300d717306100511efac15367192e.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[16:26:11] <walkr> I got a bit confused reading posts about this. Maybe I have to study more about go.mod. Some posts shows (even with examples) you don need a go.mod inside internal packages. Others say you should have go.mod in internal packages. I'm trying it out and when I import my package, go says it cannot find the internal package's go.mod file. Should I have go.mod for each internal/subfolder package?
[16:26:21] <chilversc> so maybe wolfe's design of pkg predates 1.4?
[16:26:39] <ewintr> There are still a lot of people who don't know about internal.
[16:26:49] <ewintr> Even though it is pretty old by now.
[16:27:25] <chilversc> yup, you should certainly pick a way of signaling internal vs public, ideally that would be to use internal packages now, but pkg for older projects would also work
[16:28:20] *** Joins: normen (~normen@p200300d717306100c49e4f88f8360fcc.dip0.t-ipconnect.de)
[16:28:36] <chilversc> walkr: you should only need a go.mod at the root level of the module
[16:29:16] <sztanpet> walkr when to create a go.mod: right now, you create one per repository, there are plans to make working with multiple modules in the same repository easier but spare yourself the pain right now
[16:29:22] <chilversc> walkr: I have run into similar issues, though I forgot what I was doing wrong at the time. I suspect it was related to golang not treating it as a go11 module
[16:30:07] <chilversc> walkr: you could try; export GO11MODULE=on; in case its not auto-detecting correctly?
[16:30:45] <chilversc> or in case an old environment config is setting that to off
[16:31:48] <walkr> chilversc, oh, I'll try that  out. Right now, what I did was to add a "require" and "replace" to my internal packages in the go.mod, just like they say in this answer https://stackoverflow.com/questions/33351387/how-to-use-internal-packages
[16:32:47] <chilversc> walkr: you don't need to include the internal packages in the go.mod, as they're part of the current module
[16:32:54] <dostoyevsky2> mfw JSON can't even properly store int64: >:-(
[16:34:04] <walkr> chilversc, in that case, how should I import them in my main.go? `import "./internal/bar"` doesn't work
[16:34:40] <sztanpet> walkr you import them by their full import path as usual, there are no relative imports with modules
[16:35:36] <chilversc> ah sorry, I mis-read that and only got the bit on "require"
[16:36:11] <sztanpet> walkr maybe you havent read https://go.dev/doc/code
[16:36:23] *** Joins: mobbi (~quassel@dfsm20ygzcq1v01jxqb4t-3.rev.dnainternet.fi)
[16:38:16] <walkr> thanks for pointing that out. I did read it. Maybe I missed something, let me doublecheck
[16:39:15] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[16:40:14] <chilversc> walkr: the key point is everything should be prefixed with the module name declared in the go.mod file. So if you're module was example.com/test; you would have import "example.com/test/internal/utils"
[16:40:51] *** Joins: jla (~jordi@64.225.79.195)
[16:41:21] <sztanpet> also https://github.com/golang/go/wiki/CodeReviewComments utils is package name best avoided
[16:47:05] *** Joins: jjonah (~jjonah@p200300d5d7149500dea632fffeb3342f.dip0.t-ipconnect.de)
[16:51:39] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[16:52:29] *** Joins: henry40408 (~henry4040@112.104.114.158)
[16:55:49] *** Quits: transacid (~transacid@transacid.de) (Ping timeout: 252 seconds)
[16:57:44] *** Joins: jla (~jordi@64.225.79.195)
[16:57:55] *** Quits: Icedream (~icedream@144.76.223.175) (Quit: A lol made me boom.)
[16:59:33] *** Quits: jasonwucj (uid13975@id-13975.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:57] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 252 seconds)
[17:02:17] *** Quits: henry40408 (~henry4040@112.104.114.158) (Ping timeout: 265 seconds)
[17:03:17] *** Joins: transacid (~transacid@46.182.20.35)
[17:04:38] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[17:06:12] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[17:08:03] *** Parts: OMGKitteh (~OMGKitteh@2a03:6000:6e62:627::102) ()
[17:11:45] *** Joins: kapu (~kapu@user/egm)
[17:12:09] *** kapu is now known as Guest313
[17:12:59] *** Joins: henry40408 (~henry4040@112-104-114-158.adsl.dynamic.seed.net.tw)
[17:14:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[17:15:21] *** Joins: Icedream (~icedream@144.76.223.175)
[17:25:45] *** Joins: xah37 (~xah37@user/xah37)
[17:27:34] *** Quits: xah37 (~xah37@user/xah37) (Client Quit)
[17:28:18] *** Joins: jla (~jordi@64.225.79.195)
[17:36:51] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:37:33] *** Joins: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de)
[17:37:45] *** Quits: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de) (Changing host)
[17:37:45] *** Joins: menace (~someone@user/menace)
[17:38:11] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[17:47:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:48:41] *** Quits: Guest313 (~kapu@user/egm) (Ping timeout: 265 seconds)
[17:49:31] *** Joins: kapu (~kapu@user/egm)
[17:49:46] *** Joins: fikran (~fikran@user/fikran)
[17:49:55] *** kapu is now known as Guest1969
[17:57:00] *** Quits: andreisamoila (~andreisam@188.27.128.11) (Quit: Leaving...)
[17:58:09] *** Joins: rvalue (~rvalue@user/rvalue)
[18:01:01] <curiousgay> eh, if I use `{{template "head.html}}` and head.html contains `<title>{{.Title}}</title>` then the output is `<title></title>`
[18:01:27] <curiousgay> it ignores "Title string" defined in struct
[18:05:23] *** Joins: imandes0 (~imandes0@37.252.70.127)
[18:18:17] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[18:18:41] *** markkuit is now known as Guest8736
[18:22:23] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[18:22:44] *** Joins: arinov (~arinov@212.156.215.30)
[18:25:00] *** Quits: jjonah (~jjonah@p200300d5d7149500dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:28:05] *** Quits: Guest8736 (~markkuit@93-43-234-84.ip94.fastwebnet.it) (Quit: marqquit)
[18:29:34] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:34:43] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[18:35:15] <LambdaComplex> TIL that interfaces can be satisfied using the methods of embedded structs
[18:35:20] * LambdaComplex never thought to check before
[18:37:49] *** Joins: saksophony (5fd0e087b8@2604:bf00:561:2000::1ff)
[18:45:17] *** Joins: pepee (~pepee@user/pepee)
[18:51:05] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 256 seconds)
[18:55:52] <curiousgay> I decided it's even better to execute several templates from Go code, now I don't have to duplicate in each new template
[18:58:30] <seebs> lambdacomplex: be aware
[18:58:47] <seebs> if the embedded struct satisfies the interface, then *only the embedded struct* is satisfying the interface
[18:59:04] <seebs> if you do a type switch on the thing passed, you will get that embedded struct, not the surrounding object
[18:59:40] <LambdaComplex> now that i did not expect
[19:03:29] <seebs> wait i'm wrong
[19:03:30] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:03:47] <seebs> *inside the methods on the embedded struct*, you get the embedded struct
[19:04:12] <LambdaComplex> okay i think you lost me :P
[19:04:13] <seebs> so basically you can't promote-back-up, but I was wrong about the interface contents.
[19:04:27] <seebs> https://go.dev/play/p/Sv94ovm5HeU
[19:05:18] *** Joins: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net)
[19:06:11] <seebs> so, the thing to note is, once you make it into the X() method on AnXer, you're really dealing *only* with the embedded AnXer.
[19:06:11] <seebs> https://go.dev/play/p/ahzr_VQm_83
[19:06:23] <seebs> So, w is a Wrapper. If you call w.Y(), you get the Wrapper implementation of Y.
[19:07:01] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Ping timeout: 240 seconds)
[19:07:18] <seebs> If you call w.X(), which is a method on an embedded thing, and then you call Y() on the inner thing, you get the AnXer implementation of Y. You no longer have the wrapper, you have the AnXer.
[19:07:39] <seebs> So if WhichXer() calls x.Y(), it'll see Wrapper.Y.
[19:07:57] <seebs> But once you make it into the embedded type's methods, the object you're working on is now the embedded object and not its wrapper.
[19:08:28] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:09:19] *** Joins: neiluj (~neiluj@2a01:e0a:1f2:d960:7831:a51b:9e71:59f5)
[19:10:16] <neiluj> Hello! Why does this hash map initialization does not typecheck? https://bpa.st/XL2Q
[19:10:48] <neiluj> the error being cannot use ... as map[string]struct{sessionKey [32]byte; x *big.Int; y *big.Int} value in struct literal
[19:12:40] <tar_xvf> I don't understand what the syntax is in this decleration
[19:12:47] <tar_xvf> Can you show the context for this line?
[19:13:10] <jla> oh yeah... Fediverse in Golang ?
[19:13:39] <siXy> neiluj: You've cut out too much context, but I suspect you're trying to use make() as a value, when it isn't. SessionKeys := make(map ....) would work fine
[19:13:40] * jla reading https://docs.gotosocial.org/
[19:14:58] <neiluj> thanks siXy , the type is https://bpa.st/FVQA
[19:16:26] <siXy> neiluj: Read my answer more carefully. foo: make() is invalid. You probably want foo := make()
[19:17:26] <neiluj> ah I see, SessionKey is itself par of a struct
[19:18:09] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[19:18:10] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[19:18:10] *** Joins: tane (~tane@user/tane)
[19:18:44] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[19:18:47] *** Joins: lilgopher (~textual@2601:241:8000:38f0:e3:94bb:c780:d144)
[19:18:59] <tar_xvf> neiluj: I got it to compile with the following code: https://bpa.st/BXHQ
[19:19:08] *** markkuit is now known as Guest2107
[19:20:33] <neiluj> thanks, in fact it's part of a struct: https://bpa.st/7ELA
[19:21:04] <neiluj> seems like you can't nest an anonymous struct in a struct?
[19:22:45] <tar_xvf> can you please send us a mini file that works and gets compiled
[19:23:09] <neiluj> all right, doing it!
[19:23:20] <tar_xvf> instead of a snippet of a large file, that has tons of syntax errors due to not being a whole file (including a `package` line, and importing necessary files
[19:23:42] <neiluj> yes, that's not ideal I reckon
[19:24:30] *** Joins: codebam (~codebam@user/codebam)
[19:26:31] <neiluj> weird, it works in the playground: https://go.dev/play/p/V8E8UgMkeje
[19:26:47] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 256 seconds)
[19:27:39] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[19:28:43] <LambdaComplex> What's the current performance impact of defer statements? I found a proposal saying that in Go 1.13, they take about 35ns (reduced from about 50ns in Go 1.12). Additionally, the Go 1.14 release notes say that performance of most uses of defer has been increased to the point where they "incur almost zero overhead compared to calling the deferred function directly." Does anyone have some actual numbers on
[19:28:45] <LambdaComplex> what the overhead is, though?
[19:30:26] <siXy> LambdaComplex: Computers aren't that simple. It's not a flat number that's the same in every situation.
[19:30:55] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[19:31:29] <siXy> If you have a usecase where the impact of defer is meaningful for your application, you can benchmark it for your usecase.
[19:31:30] <LambdaComplex> siXy: true, but they had to get those 35ns and 50ns numbers from _somewhere_
[19:33:56] <siXy> Sure, by testing a bunch of different cases, and building up some data. I'm deeply sceptical that the overhead of defer is going to materially impact the performance of your application.
[19:36:15] <neiluj> okay fixed my problem by using a struct bound to a type
[19:37:16] *** Joins: Jad (~Nashmi@user/jad)
[19:37:32] *** Joins: andlabs (~andlabs@2604:ca00:179:9075:533:6492:bac0:5e49)
[19:37:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:38:13] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[19:48:24] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[19:48:28] *** bpalmer` is now known as bpalmer
[19:49:05] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[19:57:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:57:33] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[19:57:39] *** Joins: andlabs_ (~andlabs@2604:ca00:179:9075:ad23:4038:d4cc:fa76)
[19:59:10] *** Joins: fikran (~fikran@user/fikran)
[20:01:01] *** Quits: andlabs (~andlabs@2604:ca00:179:9075:533:6492:bac0:5e49) (Ping timeout: 240 seconds)
[20:06:59] *** Joins: andlabs (~andlabs@2604:ca00:179:9075:719e:2989:508f:8f29)
[20:10:09] *** Quits: andlabs_ (~andlabs@2604:ca00:179:9075:ad23:4038:d4cc:fa76) (Ping timeout: 252 seconds)
[20:13:34] *** Joins: andlabs_ (~andlabs@2604:ca00:179:9075:215c:921e:59af:476e)
[20:15:34] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:15:50] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[20:17:01] *** Quits: andlabs (~andlabs@2604:ca00:179:9075:719e:2989:508f:8f29) (Ping timeout: 240 seconds)
[20:18:52] *** Joins: andlabs (~andlabs@209.107.182.152)
[20:21:30] *** Quits: andlabs (~andlabs@209.107.182.152) (Read error: Connection reset by peer)
[20:21:35] *** Joins: andlabs__ (~andlabs@2604:ca00:179:9075:30fc:4696:b9b0:124)
[20:21:49] *** Quits: andlabs_ (~andlabs@2604:ca00:179:9075:215c:921e:59af:476e) (Ping timeout: 240 seconds)
[20:22:03] *** Joins: sillybooties (~sillyboot@207.251.78.34)
[20:25:05] *** Joins: andlabs (~andlabs@2604:ca00:179:9075:d56d:95d0:bfef:1e4f)
[20:25:49] *** Quits: andlabs__ (~andlabs@2604:ca00:179:9075:30fc:4696:b9b0:124) (Ping timeout: 240 seconds)
[20:26:22] *** Joins: andlabs_ (~andlabs@2604:ca00:179:9075:45f0:29f6:3b3:e82d)
[20:26:48] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Ping timeout: 256 seconds)
[20:28:26] *** Joins: andlabs__ (~andlabs@2604:ca00:179:9075:51a0:b07d:49d0:24da)
[20:29:31] *** Quits: andlabs (~andlabs@2604:ca00:179:9075:d56d:95d0:bfef:1e4f) (Ping timeout: 268 seconds)
[20:32:03] *** Quits: andlabs_ (~andlabs@2604:ca00:179:9075:45f0:29f6:3b3:e82d) (Ping timeout: 265 seconds)
[20:37:22] *** Quits: andlabs__ (~andlabs@2604:ca00:179:9075:51a0:b07d:49d0:24da) (Ping timeout: 265 seconds)
[20:40:14] *** Joins: andlabs (~andlabs@2604:ca00:179:c013:71be:dda9:8bbb:25b9)
[20:43:26] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:46:01] *** Quits: andlabs (~andlabs@2604:ca00:179:c013:71be:dda9:8bbb:25b9) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:46:20] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[20:46:45] *** Joins: aLeSD__ (~aLeSD@139.47.114.114)
[20:47:02] *** Quits: imandes0 (~imandes0@37.252.70.127) (Ping timeout: 265 seconds)
[20:48:23] *** Quits: aLeSD_ (~aLeSD@139.47.114.114) (Ping timeout: 256 seconds)
[20:48:52] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:50:00] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[21:10:03] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[21:10:55] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[21:14:02] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[21:15:56] *** Joins: khyr0n (~khyr0n@2806:2f0:9141:835f:f234:49cd:2a30:272f)
[21:16:08] *** Quits: khyr0n (~khyr0n@2806:2f0:9141:835f:f234:49cd:2a30:272f) (Remote host closed the connection)
[21:16:46] *** Joins: khyr0n (~khyr0n@2806:2f0:9141:835f:f234:49cd:2a30:272f)
[21:22:06] *** Joins: sobukus (~sobukus@sourcemage/mage/sobukus)
[21:23:23] <sobukus> Hi. I'm puzzled over building the go project https://github.com/sylabs/singularity/releases/download/v3.9.1/singularity-ce-3.9.1.tar.gz â€¦ it contains vendored dependencies in the release tarball, but also a go.mod file that triggers downloading of stuff from github during build. Is this the correct practice or did there go something wrong?
[21:23:30] *** Joins: jpw_ (~jpw@user/jpw)
[21:23:49] <sobukus> I assumed I can build from the release tarball offline, without further downloads.
[21:23:53] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:27:23] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:28:03] <seebs> i'd expect a release tarball to include their code and only vendored dependencies which are vendored because they differ from upstream versions or something?
[21:28:26] <fizzie> Given how *many* things there are under vendor/, I would kind of expect they're intended to be the complete set needed for a build.
[21:29:59] <sobukus> seebs: Ah, so it would be a common practice to vendor only sources diverging from upstream?
[21:30:19] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[21:30:22] <sobukus> Yes, singularity contains _lots_ of other stuff, including docker, somewhat ironically;-)
[21:30:49] *** Joins: krux02 (~krux02@p200300e817365e0034cc1bc883b75341.dip0.t-ipconnect.de)
[21:32:02] <seebs> huh, no idea then. ask the sylabs people, i guess.
[21:32:38] <sobukus> So, if it's at least a bit weird what they're doing, I am a bit relieved;-)
[21:33:53] <sobukus> I am only appproaching go as admin/packager. I might just open a github issue for them â€¦
[21:34:44] <sobukus> It would be trivial to prepare a tarball with all the deps from go.mod included, right? I faintly remember preparing exactly that for telegraf and influxdb some time ago. I used those secondary tarballs as actual source tarballs for my local builds.
[21:36:56] <sobukus> But this would waste a lot of space, of course. This is something I have trouble adjusting to with the likes of the go ecosystem: Huge amounts of dependencies and the assumption that you can always download any desired version from the network.
[21:37:20] <fizzie> AFAICT it's supposed to be using `go mod vendor` to create the vendor directory for the release tarball. Which should make it contain everything needed for the build.
[21:37:25] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:dd2:645c:723f:6a82)
[21:37:33] <fizzie> Judging from https://github.com/sylabs/singularity/blob/master/mlocal/frags/Makefile.stub#L39
[21:38:18] *** Quits: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net) (Read error: Connection reset by peer)
[21:38:43] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[21:40:59] <sobukus> Hm. So maybe I'm doing something wrong so that it downloads stuff again? I got 39M in vendor dir, 371M in downloaded pkgs. It also did not happen in older releases. So it may be just a regression in their build that breaks the vendoring.
[21:44:40] *** Quits: menace (~someone@user/menace) (Read error: Connection reset by peer)
[21:51:39] *** Joins: acosta (~acosta@163.172.62.165)
[21:52:41] *** Joins: jjido (~Denis@90.213.58.125)
[21:54:37] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[21:59:26] *** Joins: moldorcoder7 (~moldorcod@77.47.48.24)
[22:02:28] *** Quits: vhost- (~vhost@65.102.48.134) (Quit: WeeChat 2.8)
[22:02:40] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[22:03:02] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[22:06:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[22:08:33] *** Joins: fikran (~fikran@user/fikran)
[22:10:47] *** Quits: acosta (~acosta@163.172.62.165) (Quit: The Lounge - https://thelounge.chat)
[22:11:34] *** Joins: acosta (~acosta@163.172.62.165)
[22:12:54] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[22:14:56] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[22:15:27] *** Joins: neverfindme (~hayden@158.123.160.43)
[22:15:38] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[22:18:47] *** Joins: goldfish (~goldfish@user/goldfish)
[22:19:59] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 250 seconds)
[22:20:39] <sobukus> fizzie: thanks for looking, I opened an issue now, assuming the build is at fault for not using the vendored copies
[22:22:11] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[22:22:39] *** Joins: goldfish (~goldfish@user/goldfish)
[22:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:25:15] *** Joins: jhchabran_ (~jhchabran@user/jhchabran)
[22:25:56] *** Quits: jhchabran (~jhchabran@user/jhchabran) (Read error: Connection reset by peer)
[22:28:50] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[22:29:30] *** Quits: moldorcoder7 (~moldorcod@77.47.48.24) (Ping timeout: 265 seconds)
[22:29:52] *** Quits: acosta (~acosta@163.172.62.165) (Remote host closed the connection)
[22:30:27] *** Joins: acosta (~acosta@163.172.62.165)
[22:31:48] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:32:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[22:32:29] *** Joins: mickey8 (~user@user/mickey)
[22:32:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:34:58] *** Joins: vhost- (~vhost@65.102.48.134)
[22:35:47] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 265 seconds)
[22:37:33] *** Joins: hendry (~hendry@210.23.22.8)
[22:39:41] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:dd2:645c:723f:6a82) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:40:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:48:47] *** Joins: totkot (~totkot@178.219.45.125)
[22:49:08] *** Quits: totkot (~totkot@178.219.45.125) (Client Quit)
[22:53:20] *** Joins: jla (~jordi@64.225.79.195)
[22:55:31] *** Quits: lilgopher (~textual@2601:241:8000:38f0:e3:94bb:c780:d144) (Ping timeout: 252 seconds)
[22:59:01] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[23:00:34] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[23:02:29] *** Joins: codebam (~codebam@user/codebam)
[23:07:26] *** Joins: andlabs (~andlabs@104.132.34.106)
[23:14:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:20:05] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[23:24:57] *** Quits: andlabs (~andlabs@104.132.34.106) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:27:27] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a0a:5586:6d9d:9d8a:e38c)
[23:29:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:50:31] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
