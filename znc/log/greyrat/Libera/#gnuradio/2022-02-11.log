[00:00:16] <funkylab[m]> because in standard GRC, to look at properties, the logic depends on a full Python interpreter with access to actual GNU Radio
[00:00:21] <tammojan[m]1> funkylab[m]: Yes, that. In the browser, web-based.
[00:00:40] <funkylab[m]> so, you can open GRC in a browser these days, thanks to WASM and Marc Newlin
[00:00:51] <funkylab[m]> since, like, two days ago
[00:00:57] <tammojan[m]1> Ah, that's what I was looking for :)
[00:01:05] <funkylab[m]> he's not published the code yet, though
[00:01:09] <tammojan[m]1> Where / what / who is WASM and Marc Newlin?
[00:01:16] <funkylab[m]> and bad news: it's going to be at most as fast as native GRC
[00:01:27] <funkylab[m]> so, don't know whether it actually solves your issue
[00:02:22] <funkylab[m]> WASM: gonna let you research that on your own. Basically, a VM in your browser; modern webapps aren't fully written in JavaScript anymore.
[00:02:22] <funkylab[m]> Marc Newlin: Guy who ports GNU Radio to WASM :)
[00:03:41] <tammojan[m]1> Ah, web assembly, thanks. I think this is not really what I was looking for, a bit of overkill.
[00:03:42] <tammojan[m]1> Did the GSOC last year lead to anything?
[00:04:46] <funkylab[m]> yerp, we now have a GRC safe mode, which does not evaluate the Python in all the fields, all the blocks and all the imports of a flow graph, but requires that the computed values be stored within the GRC file itself, so that it can at least correctly show them
[00:05:30] <funkylab[m]> the hope is getting that good enough so that exchanging GRC files is a bit less dangerous than downloading random software from random websites and executing it
[00:07:19] <tammojan[m]1> Ah ok, I didn't see that worry, but indeed the computed values are a security issue. And since any python code can go into the blocks, you'd need to rewrite a python interpreter in javascript (that's where web assembly comes in). Hm, I'll give it some more thoughts, thanks for the info!
[00:09:23] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234) (Quit: uros)
[00:14:34] <funkylab[m]> you're welcom!
[00:14:36] <funkylab[m]>  * you're welcome!
[00:15:05] <funkylab[m]> ah, and look out in the next couple of days for https://mobile.twitter.com/marcnewlin
[00:21:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:26:01] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234)
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:41:00] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234) (Quit: uros)
[01:05:36] *** Joins: mhilts[m] (~mhiltsgnu@2001:470:69fc:105::1:b4fd)
[01:31:50] *** Quits: pcero (~pcero@187.135.227.74) (Quit: Konversation terminated!)
[01:38:11] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:39:01] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234)
[01:39:06] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234) (Client Quit)
[02:16:02] *** Quits: epony (~epony@user/epony) (Ping timeout: 240 seconds)
[02:31:04] *** Quits: jemius (~imperator@200116b82d43190009627f64cbfd8911.dip.versatel-1u1.de) (Quit: Leaving)
[02:53:01] *** Joins: epony (epony@user/epony)
[03:14:39] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[03:16:04] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[03:19:15] *** Quits: cuoops (~cuoops@user/cuoops) (Quit: kthxbye)
[03:20:32] *** Joins: cuoops (~cuoops@user/cuoops)
[03:30:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:47:44] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:53:53] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:07:00] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:6571:700:7cfa:1668)
[04:08:05] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:6571:700:7cfa:1668) (Client Quit)
[04:11:27] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:6571:700:7cfa:1668)
[04:12:36] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:6571:700:7cfa:1668) (Client Quit)
[04:25:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:31:09] *** Quits: Acinonyx (~acinonyx@user/acinonyx) (Ping timeout: 250 seconds)
[04:55:23] *** Quits: ssbm (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 256 seconds)
[05:42:26] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:28be:631c:1135:e084) (Read error: Connection reset by peer)
[05:49:34] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:84dd:bdfe:ef24:a852)
[06:22:30] *** Joins: pcero (~pcero@187.135.227.74)
[06:33:51] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[07:01:19] *** Joins: Vonter (~Vonter@user/vonter)
[07:45:26] *** Joins: Guest37 (~Guest37@117.221.70.189)
[07:48:37] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 240 seconds)
[07:49:29] *** Joins: cuoops (~cuoops@user/cuoops)
[07:53:53] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 256 seconds)
[07:55:01] *** Joins: cuoops (~cuoops@user/cuoops)
[08:04:24] <Guest37> Hi, How is mako used for yml files ?
[08:27:37] *** Quits: pcero (~pcero@187.135.227.74) (Quit: Konversation terminated!)
[08:32:37] *** Quits: cuoops (~cuoops@user/cuoops) (Ping timeout: 240 seconds)
[08:33:22] *** Joins: cuoops (~cuoops@user/cuoops)
[08:56:40] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:12:53] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:13:02] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[09:14:13] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[09:15:35] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[09:49:57] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[10:33:00] *** Quits: XSDNMN_ (~XSDNMN@2601:449:8400:4170:9c01:6151:fa36:aa8e) (Quit: Leaving)
[10:52:37] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:57:50] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[11:07:11] *** Joins: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de)
[11:28:44] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[11:34:06] *** Quits: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 250 seconds)
[11:34:06] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 250 seconds)
[11:34:16] <JDemel[m]> Mako reads yaml files and is used to generate Python code that is then executable.
[11:34:21] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:34:22] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:40:47] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1fce:c6ee:e3d8:6aee)
[12:30:10] *** Quits: jeffcuenco[m] (~jcuencogn@2001:470:69fc:105::eaa1) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: ChrisKuethe[m] (~ckuethegn@2001:470:69fc:105::e770) (Quit: You have been kicked for being idle)
[12:53:18] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[13:15:29] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:29:43] <MubashiraZaman[m> What are interleaved characters? What is the difference between uchar and ichar?
[13:53:30] <JDemel[m]> `uchar` is expected to be an unsigned 8bit value. Often, this values are interpreted as characters, just like `char`. In most cases, in GR, we'd consider `char`/`uchar` as `int8_t`/`uint8_t` https://en.cppreference.com/w/cpp/types/integer because this is their default format.
[13:53:31] <JDemel[m]> An `ichar` should be read as `std::complex<int8_t>`.
[14:11:03] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[14:11:32] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[14:32:51] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:12:17] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[15:12:17] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[16:03:32] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:22:17] *** Quits: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de) (Quit: Leaving)
[16:22:54] *** Quits: Guest37 (~Guest37@117.221.70.189) (Quit: Client closed)
[17:08:27] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:84dd:bdfe:ef24:a852) (Read error: Connection reset by peer)
[17:10:21] *** Joins: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de)
[17:46:54] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[17:48:01] *** Quits: yesno (~yesno@109.98.151.62) (Quit: Leaving)
[17:54:25] *** Joins: Thorn (~Thorn@user/thorn)
[18:07:18] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[18:43:43] *** Joins: epony (epony@user/epony)
[18:49:38] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[19:06:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[19:14:17] <tcarls[m]> Huh. It's... interesting... that none of the classes in `qtgui/range.py` extend `gr.sync_block` (or, for that matter, `gr.basic_block`). Adding this message port turns out to be more interesting than I expected.
[19:30:12] *** Quits: isuru[m] (~isurujgnu@2001:470:69fc:105::e155) (Quit: You have been kicked for being idle)
[19:34:22] <muaddib[m]> I think that’s because both sync and basic are streaming frameworks.
[19:42:17] *** Joins: epony (epony@user/epony)
[19:46:39] <tcarls[m]> <muaddib[m]> "I think that’s because both sync..." <- Mmm. But if we look at other variable blocks that _do_ provide message ports, they inherit from `gr.sync_block` with `in_sig=None, out_sig=None` -- and thereby get the message functionality (`self.message_port_register_out()`, `self.message_port_pub()`, etc).
[19:46:39] <tcarls[m]> Hmm. Taking a closer look at the preexisting ones, I think there's a pattern worth replicating here.
[19:47:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[19:52:36] *** Joins: epony (epony@user/epony)
[20:09:58] <muaddib[m]> oh ok, i haven't looked closely. just a guess
[20:24:18] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[20:28:07] <tcarls[m]> Huh. Looking at the code generated by GRC, it _looks_ like the same name is being assigned to a block and a variable the block sets / represents. More specifically, I see:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3b6b5a1a81924a856ddc3acc3a36c67067c24876)
[20:30:15] <tcarls[m]> ...welp... followed the preexisting pattern and it works, even if I don't grok why.
[20:30:51] *** Quits: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de) (Quit: Leaving)
[20:42:38] *** Quits: cuoops (~cuoops@user/cuoops) (Quit: kthxbye)
[20:42:50] *** Joins: cuoops (~cuoops@user/cuoops)
[21:03:26] <tcarls[m]> files the above as https://github.com/gnuradio/gnuradio/pull/5566
[21:20:01] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[21:33:18] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[21:39:40] *** Joins: deepak[m]1 (~deepakgnu@2001:470:69fc:105::1:b605)
[21:56:14] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[22:09:02] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[22:28:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:30:49] *** Joins: epony (epony@user/epony)
[22:46:29] *** Joins: pcero (~pcero@187.135.224.248)
[22:54:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[23:00:04] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1fce:c6ee:e3d8:6aee) (Quit: uros)
[23:32:20] *** Quits: pcero (~pcero@187.135.224.248) (Quit: Konversation terminated!)
[23:37:47] *** Joins: indigaz (~Indigaz@user/indigaz)
[23:37:51] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:39:03] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 250 seconds)
[23:40:42] *** Joins: Thorn (~Thorn@user/thorn)
[23:51:06] *** Joins: epony (epony@user/epony)
