[00:00:37] <ProfSimm> beaky: at which point types just become another language with functions :P
[00:00:38] <pyzozord> oh interesting
[00:00:50] <pyzozord> so Int<1.100>?
[00:00:57] <pyzozord> er Int<1..100>
[00:01:04] <beaky> exactly that is why dependent types are great you just have dependent types and then you get all the generics, polymorphism, higher-kinded stuff, etc. for free
[00:01:15] *** Joins: snake (~snake@user/snake)
[00:01:38] <beaky> yes like an Array<Int, n> where n is a value (for the size of hte array)
[00:01:44] <pyzozord> how do you get higher kinded types from dependent types?
[00:01:49] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175) (Quit: Textual IRC Client: www.textualapp.com)
[00:02:06] <pyzozord> it would need to kind of get the type of the dependent value
[00:02:54] <pyzozord> or is higher kinded type simply Type<AnythingThatTakesParameters<Parameters>>
[00:03:00] *** Joins: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it)
[00:03:46] <beaky> yes simply a type that has parameters which themselves takes parameters
[00:03:49] <pyzozord> no wait it doesn't make sense, you said it must go at least 2 levels deep to be higher kinded type so Int<1, 100> can't be a higher kinded type, no?
[00:04:07] <ProfSimm> pyzozord:   type<val or type> <-- it's recursive
[00:04:21] <beaky> yes int<1, 100> is not a higher kinded type 
[00:04:27] *** Quits: Tangent-Man (~Tang3nt-M@213.205.240.3) (Ping timeout: 260 seconds)
[00:04:44] <pyzozord> ok so you don't exactly get higher kinded types for free when you have dependent types
[00:05:14] <pyzozord> Ada lets you specifi ranges on integers but I think that is built in
[00:05:29] *** Joins: kilobyte_ch (~kbch@77.109.171.24)
[00:05:36] <ProfSimm> pyzozord: I don't think integer size counts
[00:05:56] <ProfSimm> pyzozord: as in, in bytes
[00:06:10] <pyzozord> how would I defined a dependent type in any language?
[00:06:26] <pyzozord> ProfSimm: in ada you can specify int with value range
[00:06:30] <pyzozord> ProfSimm: not byte size
[00:06:49] <ProfSimm> pyzozord: as you suspect those terms are a bit superflous. But basically it's about having the freedom of composing types and values as you would in any function in any language, with parameters
[00:07:05] <pyzozord> it seems to me I need a turing-complete language to define a dependent type
[00:07:11] <kilobyte_ch> Someone experienced with KissFFT or similar FFT Library? I want to create a Audio Spectrum of a sampled Signal but don't know where to start.
[00:07:14] <ProfSimm> pyzozord: well yes
[00:07:23] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[00:07:31] *** Joins: duuude (~user@user/duuude)
[00:07:41] <beaky> yes not every dependent type is higher kinded but because you have pi types (and sigma types) those are higher-kinded by definition
[00:08:02] *** Joins: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk)
[00:08:20] <beaky> i meant since you have dependent types you wouldn't need to be like haskell and have 50 lines of pragmas just to have cool stuff like rank n polymorphism
[00:09:08] <pyzozord> that goes over my head
[00:09:36] *** Joins: lilo_booter (~charlie@ptr-1dvvljkuufrveogxrsh.18120a2.ip6.access.telenet.be)
[00:09:47] <pyzozord> that's ok, I learned what are higher kinded types today and that I used them all along
[00:10:12] <pyzozord> and I learned what are dependent types but I don't think I ever used them and I'm not sure how would that look. That can be a lesson for another day
[00:10:23] <beaky> they are used in programming as the Functor type (and of course the famous Monad)
[00:10:46] * oldlaptop waves the "abolish all types" protest sign again
[00:10:50] <pyzozord> ah yes, the monoid in category of endofunctors
[00:10:57] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[00:11:02] <snake> how're you gonna abolish types
[00:11:03] <beaky> see you understand monads now
[00:11:31] <oldlaptop> snake: First, javascript and python shall be obliterated, and all will see the light of Strings.
[00:11:31] *** Quits: Cashlin (~hp@user/cashlin) (Excess Flood)
[00:11:43] <beaky> but i like javascript and python
[00:11:53] <snake> yeah those are some of my favorite langs :<
[00:11:59] *** Joins: Cashlin (~hp@user/cashlin)
[00:12:03] <beaky> python is the most pythonic programming language
[00:12:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:12:17] <snake> incredible point
[00:12:35] <ProfSimm> oldlaptop: ironically if we have super-flexible types, dependent and so on... it's like not having types
[00:13:42] <ProfSimm> oldlaptop: the types become a metalanguage that writes your program
[00:13:42] <snake> even if you used strings, you would need different functions for each kind of operation
[00:14:05] <beaky> pyzozord: yes the danger in dependent types is if your system is turing complete then it will be inconsistent (because using turing completeness you can then circularly define types that are equivalent to 'False' which can prove anything) so languages like coq and agda are careful to not be turing complete 
[00:14:06] <snake> like "100" + "1" would need to yield "101" but then you also have append()
[00:14:39] <pyzozord> https://i.imgflip.com/6aeum5.jpg
[00:14:39] <bayaz> Type: image/jpeg Size: 53.8 kB 
[00:14:50] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[00:15:04] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:16:18] <beaky> to reach dependent types from other programming languages (like dynamically-typed, simply typed, or generics) there is the 'lambda cube' where each type system is a programming language and the more 'power' you add to the type system you get a different kind of programming language https://en.wikipedia.org/wiki/Lambda_cube
[00:16:19] <bayaz> Title: Lambda cube - Wikipedia 
[00:16:34] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[00:17:23] <pyzozord> beaky: I see. So can I think about it like compile time execution code? Meaning code that checks if at any moment the value can be over 100 or below 1?
[00:18:22] <pyzozord> so for example it would reject var num: Int<1, 100> = readInputNumbers(); because user can enter numbers outside the range
[00:18:50] <oldlaptop> snake: That's how it should work. Addition and string concatenation are different operations.
[00:18:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[00:19:00] <amazigh> it would depend on readInputNumbers()
[00:19:08] <amazigh> it depends on it is implemented
[00:19:26] <pyzozord> so it would need to do var input: Int<any> = readInputNumbers; if (input > 0 && input <= 100) { var int: Int<1,100> = input; }
[00:19:31] <snake> oldlaptop, wouldn't you just end up in function-hell tho?
[00:19:45] <snake> if everything is a string, then what is a function?
[00:19:47] <pyzozord> I assume readInputNumbers returns Int<any>
[00:19:47] <snake> is it also a string?
[00:19:55] <oldlaptop> And (back in serious mode) getting this right is independent of getting types right (whatever that is). Tcl has no types, and expr's + operator (or ::tcl::mathop::+) always does addition, and [string cat] always does concatenation.
[00:20:06] <oldlaptop> In SQL, + always does addition, and || always does concatenation.
[00:20:13] <beaky> the code itself doesnt necessarily check (though it can since in dependent types you can put any value) it is the type checker that checks the types are valid and the programmer is supposed to to define Int<m, n> in a way that it is impossible to construct a value i that is less than m or greater than or equal to n
[00:20:31] <snake> oldlaptop, i've written my fair share of sql, what the hell is ||
[00:20:37] <amazigh> cat
[00:20:45] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[00:20:47] <snake> i always just used + :v
[00:20:53] <amazigh> it is like "".join(a, b)
[00:20:55] <oldlaptop> sqlite> select 'foo' || 'bar';
[00:20:55] <oldlaptop> foobar
[00:20:57] <snake> or maybe it was CONCAT
[00:21:14] <beaky> since when you build a value of type Int<1,100> it is a sigma type that requires the Int, and then a proof 'the int n you passed satisfies 1 < n < 100'
[00:21:19] <oldlaptop> whereas: sqlite> select 'foo' + 'bar';
[00:21:19] <oldlaptop> 0
[00:21:20] <amazigh> that is not standard ™
[00:21:34] <oldlaptop> (strings convert to the number 0 - I don't especially like this, but it's better than surprise concatenation)
[00:21:43] <pyzozord> ok so it looks like this kind of type system is more like a compile time executed DSL
[00:21:46] <amazigh> m............ ysql.
[00:22:07] <GeDaMo> Do all strings become 0 or just strings which don't contain digits?
[00:22:07] <snake> amazigh, i mostly used MSSql actually
[00:22:26] <snake> sqlite> select '200' + '100';
[00:22:27] <snake> 300
[00:22:29] <snake> AHHHHH
[00:22:33] <amazigh> pyzozord: why do you make a difference between compiled PL and interpreted? isn't a compiled language, an interpreted language with army of developper and lot of efforts poured in
[00:22:39] <oldlaptop> GeDaMo: I don't know offhand what, if anything, the standard specifies. (Since there does not exist a conforming implementation of the standard, its relevance is limited.)
[00:22:58] <oldlaptop> sqlite converts strings that look like numbers to the appropriate number, and strings that don't parse as numbers to 0
[00:23:31] <oldlaptop> I like tcl's approach better: % expr {"non" + "sense"}
[00:23:31] <oldlaptop> can't use non-numeric string as operand of "+"
[00:23:35] <amazigh> snake: I was replying to oldlaptop, '100' + '200' should error imo, but anyway
[00:23:39] <pyzozord> amazigh: I guess you are right I just mean "'metacode' executed on the code, before the real code is executed"
[00:23:49] <oldlaptop> (that behaves like an exception, though it's not obvious from the REPL's top level)
[00:23:51] <oldlaptop> amazigh: I concur.
[00:23:59] <oldlaptop> But it's better than surprise concatenation.
[00:24:02] <snake> select 5 || 5;
[00:24:02] <snake> 55
[00:24:28] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[00:24:36] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[00:24:45] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:25:04] <beaky> with dependent types all type checking happens at 'compile time' but with regards to the type system itself the line between compile-time and run-time blurs together since you need to compute values when type checking
[00:25:10] <pyzozord> beaky: so in dependent type system would 5 be of type Int<5>?
[00:25:22] *** Joins: flaqoniun (~F@32.211.211.39)
[00:25:27] <amazigh> my favorite typing syntax is `assert` with predicates, it's opt-in, adapts to most pl syntaxes, and with enough effort can grow into whatever you want.
[00:25:46] <amazigh> e.g. with C-ish syntax: assert predicate(a);
[00:25:51] <pyzozord> beaky: and then how would I define a type accepts ints in range 1-100?
[00:25:51] <beaky> it would be of type Int (but all the cool dependently-typed languages use natural numbers inductively defined peano style from zero)
[00:25:58] <snake> i am type-ignorant
[00:26:06] <snake> i just do whatever it takes to get the job done (tm)
[00:26:14] <oldlaptop> amazigh: compare/contrast: https://core.tcl-lang.org/tcllib/doc/trunk/embedded/md/tcllib/files/modules/snit/snit.md#subsection11
[00:26:15] <bayaz> Title: Tcl Library Source Code: Documentation 
[00:26:15] *** Joins: audio (~audio@user/audio)
[00:26:21] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:26:28] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:26:55] <oldlaptop> (snit is an object system, that's not especially important for this purpose - it's essentially writing a command ("function") that does validation)
[00:26:59] <pyzozord> beaky: so are dependent type systems runtime type systems?
[00:27:09] <beaky> then to get the range there are many ways you can have a sigma type that takes an Int and a predicate "the int is in range 1-100" or define a whole new dependently-typed number type (like Fin in coq or agda) that has finite range
[00:28:01] <beaky> its all compile time but you have the full language available to you in the type system (since the types can take any value, and types themselves are values, including the type Type the universe of all types)
[00:28:31] <pyzozord> ok, that sounds like compile time executed dsl to me
[00:28:36] <amazigh> values or objects ^_^
[00:29:07] <pyzozord> that can have ifs and fors etc to check if the types are sound
[00:29:13] <smallville7123> ok, it now works with multiple touch points :)
[00:29:13] <amazigh> beaky: how di you learn about dependantly typed thingy?
[00:29:20] <beaky> yes if the dsl is the exact same language as the ordinary programming lagnuage
[00:29:24] *** Quits: qwaddles (~qwaddles@2603-8080-7005-5266-38b8-d941-34d0-6e05.res6.spectrum.com) (Quit: WeeChat 2.8)
[00:29:25] <pyzozord> to check whether Int<5> is compatible with Int<1,100>
[00:29:48] <oldlaptop> amazigh: for example: https://clbin.com/ieof3
[00:29:51] <beaky> amazigh: i used the 'certified programming with dependent types' book in coq http://adam.chlipala.net/cpdt/ 
[00:29:52] <bayaz> Title: Certified Programming with Dependent Types 
[00:30:09] <pyzozord> beaky: wait so this uses the same language as the normal language it is in? Typescript uses more of dsl for types, I thought it was like that
[00:30:11] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:30:24] <amazigh> pyzozord: wdyt about the little typer?
[00:30:26] <amazigh> oldlaptop: looking
[00:30:32] <oldlaptop> ("unit" is an object within the meaning of a library that implements objects, but is in reality a command with command-subcommand syntax)
[00:30:47] <pyzozord> amazigh: one of many books I want to read at some point
[00:30:53] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[00:31:00] <beaky> i havent read little typer yet you make your own dependelty typed language in it
[00:31:12] <beaky> i heard its awesome
[00:31:15] <pyzozord> amazigh: along with little schemer and little lisper
[00:31:19] <oldlaptop> tcl object systems generally work in that way, roughly following tk's precedent, i.e. objects are commands
[00:32:03] <amazigh> oldlaptop: i don't understand. tcl support predicate "typing"?
[00:32:08] <beaky> there is also the idris book but i havent tried idris yet
[00:32:17] <pyzozord> of course, lisp is a metalanguage you can define any language you want in it
[00:32:33] <oldlaptop> Tcl has no concept of types whatsoever, but that doesn't mean you can't implement interesting validators yourself.
[00:32:55] <pyzozord> including something that processes the ast, looks for some labels/tags and interpret those as types
[00:33:12] <oldlaptop> (internally of course some strings might happen to be represented as integers or lists or hash tables or something as a performance hack)
[00:33:21] <beaky> stringly-typed
[00:33:45] <pyzozord> beaky: anyway thanks for explaining, til
[00:34:14] *** Quits: teut (~teut@103.144.92.246) (Quit: Client closed)
[00:34:30] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[00:34:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:34:53] <amazigh> strings have many names o.o
[00:34:53] <oldlaptop> everything the `snit::double` command is doing is just implemented in tcl script, and all it's ultimately doing is defining a command.
[00:35:00] <amazigh> string of char, string of bytes, string of bits
[00:35:19] <oldlaptop> Tcl strings are sequences of unicode code points.
[00:35:19] <amazigh> i never used tcl
[00:35:30] <amazigh> I read sqlite use tcl for testing.
[00:35:59] <oldlaptop> (Strings of bytes are sequences of unicode codepoints in the range [U+00, U+FF], there are commands that operate on such things)
[00:36:00] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:36:20] <ProfSimm> oldlaptop: range 0 - FFFF
[00:36:58] <ProfSimm> Wait I'm also wrong
[00:37:03] <oldlaptop> the bytes in tcl bytestrings are not sixteen bits wide
[00:37:09] <ProfSimm> oldlaptop: correction range 0 - 10FFFF
[00:37:36] <ProfSimm> oldlaptop: well sure that may be the case, but then they're not unicode codepoints
[00:37:46] <oldlaptop> ...?
[00:37:49] <beaky> pyzozord: yes reading on that lambda cube page technically you can have "first-order" dependent types (λP in the lambda cube) so i guess unlike what i mentioned earlier you dont necessarily have higher-kinded types or types-as-values or even generics automatically when you have the simplest kind of dependent tyepes (but i havent used a language like that yet maybe that is isabelle)
[00:38:04] <beaky> because ive been too used to coq where you get all that for free
[00:38:27] *** Joins: audio (~audio@user/audio)
[00:38:33] <user51> not really programming, but just a case of complexity: a buddy got me a fancy burger shaping press.. thing is, the meat sticks to the pess, and actually pressing it requires a bit of effort, and now you have two wash two more things..
[00:38:43] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[00:39:18] <beaky> gotta switch to soylent-based diet so you dont have to cook or clean and spend more time being productive moving fast and breaking things programming
[00:39:19] <oldlaptop> Tcl represents "bytestrings" as sequences of unicode codepoints in the range [U+00, U+FF]. I don't know any other way to put that. Do you contend that this magically makes those not unicode codepoints anymore?
[00:39:40] <pyzozord> beaky: ok thanks for clarifying
[00:39:50] <user51> i've been using a round cookie cutter for shaping burgers, but maybe the hand method ain't so bad either. would be slightly less uniform though.
[00:40:16] <ProfSimm> oldlaptop: I just don't know what kinda codepoints you'd fit in a byte
[00:40:38] <oldlaptop> You have it precisely backwards.
[00:40:39] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[00:41:05] <audio> I have a 46gb tar file which unpacked is 46gb. I uploaded this to kaggle as input, though I can't uncompress it. Why? The working directory only goes up to 20gb. Is there any way I can still use all my data within these constraints, using some magic?
[00:41:28] <ProfSimm> oldlaptop: well either I had a stroke, or you said "sequence of codepoints in range 1 byte"
[00:41:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:41:53] *** Joins: zaher (~zaher@37.48.189.13)
[00:41:55] <oldlaptop> You work with binary data in Tcl as a string of unicode codepoints which all happen to be in [U+00, U+FF].
[00:42:24] <audio> Old laptop you talking to me?
[00:42:28] <oldlaptop> No.
[00:42:37] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[00:42:59] <epony> entanglement-at-play:  say three more times fast "GNU display" to recover from the exception...
[00:43:00] *** Joins: Pickchea (~private@user/pickchea)
[00:43:03] <audio> That period means you mean business
[00:43:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:43:17] <oldlaptop> If your tar file is uncompressed, you can at least *read* things from it easily without needing to unpack anything.
[00:43:34] <bomb> I've been looking for excuses to get into Tcl & Tk for years
[00:43:48] <ProfSimm> oldlaptop: I see what you mean now but it's so terrible my mind refused to accept it
[00:43:48] <oldlaptop> There's no index in the file format, which may or may not complicate what you need to do.
[00:43:52] <amazigh> the little books reminds of how it is hard to learn to play the guitar
[00:44:07] <ProfSimm> oldlaptop: it's like this "print a screenshot and take a photo of it and send it over email" kind of schemes
[00:44:22] <amazigh> through repetition comes perfection.
[00:44:26] *** Lord_of_Life_ is now known as Lord_of_Life
[00:44:48] <oldlaptop> (The implementation will store strings that you happen to be working on as binary data in an appropriate representation.)
[00:45:35] <oldlaptop> Just as it will choose to represent some sequences of unicode code points as integers, or IEEE754 numbers, or hash tables, or whatever.
[00:45:52] <oldlaptop> This is transparent to the program, which knows only of strings.
[00:46:09] <amazigh> what is the point of using strings for everything?
[00:46:27] <amazigh> I mean, yes everything is string, but why tcl makes it obvious
[00:46:48] <oldlaptop> amazigh: No type system to get in the way, ever. A whole field of semantic complexity you'd otherwise have to worry about simply doesn't exist.
[00:46:53] <ProfSimm> amazigh: having one foundational type is good idea, it's just that Unicode is a god damn mess.
[00:47:34] <beaky> o isabelle is 'higher order logic' which is higher order than first order dependent types i guess Twelf is an exampel of λP since you can define the natural numbers but not induction on them http://twelf.org/wiki/Proving_metatheorems:Proving_metatheorems_about_the_natural_numbers#What_metatheorems_can_we_prove_this_way.3F
[00:48:09] <oldlaptop> (It can leak through in some circumstances, namely when C extensions violate the semantics or when the performance implications of the implementation's clever representation tricks become apparent)
[00:49:25] <oldlaptop> Fixing the evils of unicode is out of scope for any system that is intended for real-world use.
[00:50:00] <oldlaptop> Making strings sequences of octets would in the sense relevant for tcl make things *worse*, because all the real programs that need to deal with unicode have to worry about it themselves, instead of having the implementation do that for them.
[00:51:25] *** Quits: xcombelle2 (~xcombelle@176-139-252-198.abo.bbox.fr) (Ping timeout: 250 seconds)
[00:51:31] <beaky> gotta have emoji
[00:51:48] <duckgoose> 🐦
[00:51:51] <oldlaptop> More relevantly, gotta have Chinese characters and the rest of it.
[00:51:55] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[00:52:03] *** Quits: xcombelle3 (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 260 seconds)
[00:52:43] <beaky> yes most of my tea names are in chinese
[00:52:44] <oldlaptop> Even programs that only ever really have to work with English text end up having to think about accent marks, "smart quotes", and the like.
[00:54:30] <pulse> (🐦_🐦)
[00:54:51] <duckgoose> I have never seen an accent mark in english text
[00:55:14] <oldlaptop> English has French words in it, which are sometimes spelled with the appropriate accents.
[00:55:26] <duckgoose> like résumé
[00:55:27] <duckgoose> we dont do that
[00:55:32] <duckgoose> we just type resume
[00:55:46] <bomb> naïve
[00:56:07] <oldlaptop> The way to be absolutely, metaphysically certain that someone out there who wrote text your program will need to process *does* do that is to assume they won't.
[00:56:32] <oldlaptop> You'll get this with personal names (which are a whole category of evil themselves) a lot too.
[00:56:33] <bomb> Beyoncé
[00:56:38] <oldlaptop> Indeed.
[00:56:38] <duckgoose> if the accent aint in ASCII don't fool with it
[00:57:00] <oldlaptop> Smart-quotes in names with apostrophes are common in practice too.
[00:57:50] <duckgoose> Beyoncé is a name not a word 
[00:58:29] <oldlaptop> Whatever you choose to call it, it can obviously appear in reasonable English-language text. (Even when you're not specifically working with names.)
[00:58:32] <duckgoose> hey website is beyonce.com not beyoncé.com
[00:58:38] <duckgoose> people know how to conform 
[00:58:41] <duckgoose> her *
[00:58:54] <oldlaptop> You can't assume that anymore either, in general.
[00:59:08] *** Quits: Cashlin (~hp@user/cashlin) (Ping timeout: 260 seconds)
[00:59:21] <oldlaptop> (that is, non-ASCII domain names have been supported on the public DNS for some time)
[00:59:26] <duckgoose> ASCII has the most used accent text anyway
[00:59:27] <pulse> .oO(does French have English words in it?)
[00:59:29] * KillerWasp throw bomb to duckgoose and hide on back of the oldlaptop 
[00:59:34] <duckgoose> including beyoncé, which is valid ASCII
[01:00:05] <oldlaptop> ASCII does not include an é character.
[01:00:08] *** Joins: Cashlin (~hp@user/cashlin)
[01:00:15] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[01:00:23] <oldlaptop> ASCII is a seven-bit encoding.
[01:00:36] <duckgoose> it does it's ASCII code 130
[01:01:01] <oldlaptop> ASCII codes go up to decimal 127, because ASCII is a seven-bit encoding.
[01:01:23] <oldlaptop> Various mutually-incompatible eight-bit extensions exist, I'm sure decimal 130 is an é in one of them.
[01:01:44] <duckgoose> Extended ASCII is a version that supports representation of 256 different characters.
[01:01:47] <pulse> extended ASCII is awesome. you can make boxes and arrows
[01:01:52] <oldlaptop> There is no one thing called "extended ASCII".
[01:02:05] <duckgoose> lol
[01:02:08] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:38d4:e5f6:5964:8016) (Remote host closed the connection)
[01:02:18] <oldlaptop> There are dozens of incompatible eight-bit character sets extended from ASCII.
[01:02:19] <duckgoose> https://en.wikipedia.org/wiki/Extended_ASCII there is no such thing for this literal wikipedia article
[01:02:20] <bayaz> Title: Extended ASCII - Wikipedia 
[01:02:29] <beaky> extended binary decimal coded interchange code
[01:02:41] <oldlaptop> Does it use the singular, or the plural, in its first sentence?
[01:02:58] <oldlaptop> Does it or does it not repeat the same damn thing I just said in the first paragraph?
[01:02:59] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:eda1:a934:7001:ca07)
[01:03:51] <oldlaptop> Incidentally, the image also happens to be of one of them that does not have an é at decimal 130.
[01:03:53] <duckgoose> https://en.wikipedia.org/wiki/EBCDIC
[01:03:53] <bayaz> Title: EBCDIC - Wikipedia 
[01:04:07] <oldlaptop> Yes, unfortunately EBCDIC still exists too.
[01:04:08] <pulse> behold https://en.wikipedia.org/wiki/JIS_X_0208
[01:04:09] <bayaz> Title: JIS X 0208 - Wikipedia 
[01:04:18] <pulse> ASCII's got nothing on JIS_X_0208
[01:04:21] *** Joins: pavonia (~user@user/siracusa)
[01:05:09] <duckgoose> we can argue weather or not making something that is backwards comaptiable with ascii, that adds more characters to ascii, is an extended ascii, but thats beyond the scope of the topic
[01:05:52] *** Joins: AnionAn1 (~AnionAn1@193.108.117.20)
[01:05:55] <epony> https://en.wikipedia.org/wiki/Hammer_and_sickle#Unicode
[01:05:55] <bayaz> Title: Hammer and sickle - Wikipedia 
[01:06:21] <duckgoose> the main point is Windows codepages supports the most used accented chracters
[01:06:26] <epony> "In Unicode, the "hammer and sickle" symbol is U+262D (☭). It is part of the Miscellaneous Symbols (2600–26FF) code block. On systems where Compose key is available, it could be written as [Compose]+CCCP. It was added to Unicode 1.1 in 1993."
[01:06:38] <duckgoose> which means for most text its not going to be an issue programmatically 
[01:06:44] *** Quits: snake (~snake@user/snake) (Ping timeout: 252 seconds)
[01:06:46] *** Quits: audio (~audio@user/audio) (Ping timeout: 250 seconds)
[01:06:46] <nomagno> I personally think Latin-1 is the most logical linguistical ASCII extension
[01:06:50] <epony> this works, I just checked the compose and c c c p
[01:07:14] <epony> only you have to use CAPS for teh chars
[01:07:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:eda1:a934:7001:ca07) (Ping timeout: 252 seconds)
[01:07:22] <oldlaptop> All the world is windows, eh?
[01:07:32] <oldlaptop> That will work well for you now that all the smartphones are gone.
[01:07:56] <duckgoose> oldlaptop the same 8 bit encoding is used in linux, mac, most everything
[01:08:02] <duckgoose> I used windows codepages as an example
[01:08:06] <pulse> are character sets obsolete now that utf-8 is everywhere?
[01:08:22] <ProfSimm> pulse: no
[01:08:31] <epony> nope, you still have to support them through editors and what not else
[01:08:40] <nomagno> pulse: UTF-8 is, from a technical point of view, awkward.
[01:08:43] <pulse> i remember i had to always pick windows-1250 otherwise local characters would be displayed wrong
[01:08:56] <pulse> nomagno, but tom scott said it was the most elegant thing in the universee
[01:08:59] <pulse> -e
[01:09:05] <epony> you've forgotten CP 437, eh?
[01:09:14] <pulse> case in point: https://www.youtube.com/watch?v=MijmeoH9LT4
[01:09:15] <bayaz> Title: Characters, Symbols and the Unicode Miracle - Computerphile 
[01:09:17] <duckgoose> there are good reasons not to make utf-8 a default 
[01:09:29] <ProfSimm> pulse: burn it with fire
[01:09:33] <pulse> duckgoose, such as
[01:09:51] <nomagno> pulse: He was talking about Unicode. Singly linked lists to hell!
[01:09:58] <pulse> we can always go with utf-16
[01:10:11] <pulse> nomagno, he's talking about utf-8
[01:10:23] <epony> https://en.wikipedia.org/wiki/CP437
[01:10:23] <bayaz> Title: Code page 437 - Wikipedia 
[01:10:33] <duckgoose> because sometimes you don't need it, is the best reason 
[01:10:38] <pulse> epony, that's my favorite one
[01:10:40] <nomagno> UTF-8 and UTF-16 break the binary/text merge you can do in many cases with fixed-witdth encodings
[01:10:55] <pulse> only because it's possible to make a damn good roguelike game with it
[01:11:01] <nomagno> So now you gotta transverse the file linearly in all cases
[01:11:02] *** Quits: AnionAn1 (~AnionAn1@193.108.117.20) (Quit: Quit)
[01:11:03] <oldlaptop> nomagno: If we could have kept things to UCS-2, that would have been nice.
[01:11:04] <pulse> it even has two smiley faces
[01:11:10] <oldlaptop> Alas.
[01:11:21] <duckgoose> lets say in terms of a database 
[01:11:46] <epony> I still have my David Bradley book  https://en.wikipedia.org/wiki/David_Bradley_(engineer)#Other_accomplishments
[01:11:46] <bayaz> Title: David Bradley (engineer) - Wikipedia 
[01:12:43] *** Quits: independent56 (~independe@2.26.38.133) (Remote host closed the connection)
[01:12:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[01:13:45] <duckgoose> UTF-8 needs up to 3 bytes per character
[01:13:51] <duckgoose> ASCII can fit in 7 bits
[01:14:21] <oldlaptop> Sometimes, you really can guarantee that all your program will see is ASCII.
[01:14:25] <oldlaptop> Usually, you cannot.
[01:14:34] <oldlaptop> You don't have to *like* that for it to be true.
[01:15:05] <oldlaptop> Sometimes, you might even be able to guarantee you'll only ever work with your favorite eight-bit encoding.
[01:15:08] <oldlaptop> Usually, you cannot.
[01:15:51] <beaky> ebcdic the tully monster of 8 bit character encoding
[01:15:57] *** Quits: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it) (Remote host closed the connection)
[01:16:02] <oldlaptop> If it works with data from the Internet, if it so much as works with /domain names/ now, you cannot.
[01:16:21] <pulse> games, especially games in english, have a unique advantage that you can basically rely on ascii
[01:16:41] <pulse> when i make bitmap fonts i only implement basic ascii and call it a day
[01:16:41] <oldlaptop> (Email systems are one of the few sort-of exceptions, in that they're old enough that you can hide behind backcompat for systems that weren't even eight-bit clean.)
[01:16:43] <bomb> that's not inclusive at all
[01:17:07] <bomb> what if my name is 김정은
[01:17:08] <duckgoose> well we can agree to disagree but having Chinese text as variables is nothing something I find useful or would care to see
[01:17:12] <oldlaptop> You still have to think about the stuff outside ASCII, but at least it's all encoded as ASCII.
[01:17:33] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[01:17:36] <oldlaptop> I have no problem with style guides for source code forbidding characters outside [U+00, U+7F].
[01:17:43] <oldlaptop> (I think that's a good idea, in fact.)
[01:17:46] <beaky> yes wish there were more unicode bitmap fonts since i like to use bitmap fonts in emacs but because there's only 1 unicode one im stuck with it and i cant use my favorite one (the iconic default xterm font)
[01:17:58] <duckgoose> you could go out on a limb and support emoji's in peoples names 
[01:17:59] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 256 seconds)
[01:18:09] <duckgoose> its a stupid idea but you can always say "well maybe somebody"
[01:18:09] <oldlaptop> I have a problem with the source code's authors assuming it will never need to work with text that contains codepoints outside that range.
[01:18:18] <pulse> i too enjoy 3gb bitmap fonts to support every single unicode character ever invented in the history of mankind
[01:18:44] <pulse> would only take me about 2 years to draw them all, too
[01:18:49] <oldlaptop> A full-coverage unicode font is an outrageously large project.
[01:18:56] <beaky> bitmap emoji
[01:18:57] <pulse> all so bomb can put an emoji into his nick :p
[01:19:01] <oldlaptop> I wonder if any one full-coverage unicode font actually exists.
[01:19:14] <pulse> i highly doubt it, and the atlas would be so big it would probably clog the machine
[01:19:32] <duckgoose> if you compile your program and release it, there will be more unicode characters the next day 
[01:19:49] <ProfSimm> MacOS: we have 300 dpi screens where everything looks sharper than paper printout.    Meanwhile other OS: Bitmap fonts look best on my calculator!
[01:19:50] <beaky> instead i just have emacs use multiple fonts but then because its not bitmap its no longer monospace so i cant align my sick unicode program source code
[01:20:27] <beaky> even 300 dpi is pretty low gotta have more than 1000 dpi to be truly sharper than paper printout
[01:20:41] <beaky> gotta wait for 16k displays
[01:20:42] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:49] <ProfSimm> beaky: common misconception, paper has dithering, bleed and so on.
[01:21:07] <beaky> bleed adds character to the text
[01:21:17] <ProfSimm> beaky: yes. Messy character
[01:21:25] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[01:21:51] <duckgoose> ProfSimm bitmap fonts are fine 
[01:21:57] <ProfSimm> beaky: I did graphic work earlier in my life and I was going nuts 600dpi, and everyone was like "wtf". 
[01:22:00] <duckgoose> bitmap is a lossess format 
[01:22:01] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[01:22:19] <duckgoose> lossless *
[01:22:22] <ProfSimm> beaky: it only matters if you print super tiny fonts
[01:22:30] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:22:33] <user51> question about linked lists: say i have list A, and a->next is B. if i delete B, but don't change A->next, is it possible that a malloc could return the previously freed address?
[01:22:36] <KillerWasp> I'm regretting upgrading the machine, it's having a lot of problems including with glibc or at some point. How can it be that writing to a new open port terminates the program without any warning?
[01:22:38] <beaky> tiny fonts like the iconic xterm font
[01:22:45] *** Joins: audio (~audio@user/audio)
[01:23:00] <ProfSimm> beaky: nah tinier. Like for legalese you want no one to read, but still be clearly readable
[01:23:04] <KillerWasp> like write(3,...,...); and end the program.
[01:23:06] <duckgoose> you probably see less sharp fonts on other oses due to anti-aliasing, not due to bitmap
[01:23:11] <duckgoose> you can turn anti-aliasing off
[01:23:23] <user51> another question about linked lists: does it make sense to treat them as a subset of trees?
[01:23:42] <KillerWasp> how to fix it??
[01:23:56] <audio> can anyone help with this? https://www.kaggle.com/discussions/questions-and-answers/315533
[01:23:57] <bayaz> Title: How can I use a 46GB tar with keras/tensorflow? | Data Science and Machine Learning 
[01:24:21] <duckgoose> I should be clear on what I was saying btw 
[01:24:27] *** Joins: Minvera (~Minvera@user/Minvera)
[01:24:38] <duckgoose> I was saying 8-bit ascii is most likely fine when the expected input is english 
[01:24:54] <sonny> remind me why dns is a heirachy?
[01:25:23] <duckgoose> to have roots?
[01:25:32] <duckgoose> and decentralization 
[01:25:34] <ProfSimm> duckworld: that may be a bit naïve 😃
[01:25:50] <ProfSimm> duckgoose: *
[01:25:55] *** Joins: wildo (~lain6141@202.180.111.143)
[01:26:13] <sonny> duckgoose: can't you do that without a heirachy?
[01:26:15] <duckgoose> what is naive, expecting english input?
[01:27:06] <ProfSimm> duckworld: I wrote a word containing non-ASCII character and an emoji in an English text
[01:27:58] <duckgoose> yes
[01:28:29] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:29:13] <duckgoose> I don't expect english only input on IRC 
[01:29:22] <duckgoose> I would for say, a job application 
[01:29:31] <duckgoose> the name of a flight, etc 
[01:30:00] <Decker> then still use utf-8 and never accept input more than ascii
[01:30:09] <Decker> just pretend you're not
[01:30:24] <oldlaptop> HR sounds like a context where corrupting personal names is a potential legal liability.
[01:30:39] <duckgoose> that doesnt work Decker 
[01:30:45] <Decker> sure it does
[01:30:54] <duckgoose> an SQL TEXT record does not support UTF-8
[01:31:03] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:31:23] <Decker> probably because it uses \0 to terminate the text?
[01:32:10] <duckgoose> it uses utf8mb4 which does not include all utf8 characters
[01:32:11] *** Quits: Minvera (~Minvera@user/Minvera) (Ping timeout: 260 seconds)
[01:32:24] <duckgoose> so if you accept all utf8 characters you can have issues
[01:33:19] <wutno> what summing method would i use to get a value of 0x40? https://pastebin.com/rnQkEPJM sum8 % 256 brings me to 0x3E
[01:33:19] <bayaz> Title: 30 27 81 2F 2A 83 86 89 8B FF D2 00 AD 00 00 00 00 00 00 00 10 00 A0 39 14 00 00 - Pastebin.com 
[01:33:38] <Decker> mb3 doesn't include all mb4 does
[01:33:48] <Decker> there's only 21 bits of codepoints anyway
[01:35:07] <duckgoose> PFT
[01:35:10] <duckgoose> forget you guys
[01:35:28] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[01:36:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[01:36:59] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[01:38:12] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:38:48] *** Quits: Tazy (~Tazmainia@2001:1c02:170a:4000::100f) (Ping timeout: 260 seconds)
[01:39:30] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[01:42:10] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Ping timeout: 246 seconds)
[01:45:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9ce0:4e24:4ca7:ce8) (Ping timeout: 260 seconds)
[01:46:46] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:47:33] <Bou> wutno: a little bit of context would help, where do those numbers come from?
[01:48:42] <KillerWasp> write(3,20,"JOIN ##programming\n"); and end the program. anyone know why?
[01:49:32] <KillerWasp> the errorlevel apparently is 141.
[01:49:38] <KillerWasp> no segfault.
[01:50:02] <epony> ktrace it
[01:50:34] <Bou> a guess: I count 19 chars in that string, you're writing 20, that will send a NUL character to IRC and it won't like that
[01:50:53] <KillerWasp> epony: is different to strace? what have it?
[01:50:54] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:50:59] <bomb> https://web.archive.org/web/20120516015249/http://fundersandfounders.com/future-of-dating-tech
[01:51:00] <bayaz> Title: Funders and Founders ? We Connect Start-Ups With Capital ? How Tech Will Change Love in 2022 
[01:51:50] <KillerWasp> Bou: is 20, i forget \r
[01:51:53] <beaky> hello so i have been thinking of going with a log structured file format for my tea database but then how do i get good read performance out of log structure
[01:52:17] <beaky> write performance is awesome with log structure because you can maximize sequentiality and parallelism
[01:52:29] <beaky> whereas read performance is bad because you must scan the entire log
[01:52:36] <beaky> (to rebuild indexes)
[01:52:51] *** Joins: sa8 (sa8@gateway/vpn/protonvpn/sa8)
[01:53:00] <amazigh> ?
[01:53:12] <amazigh> beaky: what is the question?
[01:53:18] <amazigh> I am a database geek :)
[01:53:41] <beaky> figuring out the best file format for my sick tea database
[01:53:42] <amazigh> another question, what is the host language?
[01:53:42] <pyzozord> beaky: how is dependent type different from algebraic type
[01:53:49] <beaky> im using rust i think i wont give up on rust just yet
[01:53:57] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[01:53:59] *** Quits: Akuli (~Akuli@87-94-109-66.bb.dnainternet.fi) (Quit: Akuli)
[01:54:04] <amazigh> beaky: what is sick tea? link?
[01:54:08] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[01:54:09] <bomb> he wants to sort a table
[01:54:24] <beaky> yes sorting tables but because the tables are on disk i have to figure out the best file format
[01:54:33] <amazigh> does the data fit in RAM?
[01:54:42] <beaky> yes my entire database fits in ram or even cache
[01:54:49] <bomb> don't say redis
[01:54:53] <amazigh> do you need ACID transaction or some kind of guarantees?
[01:55:01] <KillerWasp> i use strace and i get SIGPIPE
[01:55:06] <bomb> :( inb4 nosql attack
[01:55:06] <amazigh> beaky: cache as is in cpu-chage?
[01:55:08] <bomb> inevitable
[01:55:09] <amazigh> beaky: cache as is in cpu-chache?
[01:55:20] <beaky> yes 
[01:55:25] <amazigh> oh then idk
[01:55:25] <bomb> beaky just use sqlite
[01:55:26] <beaky> its under 2 mb
[01:55:31] <epony> KillerWasp, yeah https://en.wikipedia.org/wiki/Ktrace is like https://en.wikipedia.org/wiki/Strace#Similar_tools
[01:55:31] <bayaz> Title: ktrace - Wikipedia 
[01:55:31] <bayaz> Title: strace - Wikipedia 
[01:56:09] <beaky> nice i like sqlite but i want to try duckdb
[01:56:17] <beaky> because tea database is olap
[01:56:41] <pyzozord> delivering 1 milion teas per second
[01:56:44] <KillerWasp> mmm, SIGPIPE is like segfault?... seem very rude kill the program...
[01:56:44] <amazigh> beaky: what I would do for a low effert, but with some guarantees is: keep the data sorted in memory, have another reliable persistant disk to store the transactions log (add / remove), then regularly rebuild the whole thing in the background
[01:56:56] <bomb> beaky you want sqlite, you just don't know it
[01:57:16] <bomb> enough with the gen Z hipster CV padding flat vector logo github projects
[01:57:35] <amazigh> bomb: has something right
[01:57:50] <amazigh> but sqlite fit in cpu cache?
[01:57:57] <pyzozord> anyone knows difference between dependent and algebraic types?
[01:58:31] <beaky> pyzozord: yes algebraic data types in languages like haskell only take types as parameters whereas dependent types let you have types depend on values (tho pi types are named by analogy after product types and sigma types named after sum types their values are different)
[01:59:00] <beaky> yes duckdb is like sqlite but better
[01:59:11] <beaky> since its named after ducks and i like ducks
[01:59:26] <pyzozord> ok thx
[01:59:28] <amazigh> @_@
[01:59:38] <bomb> > better
[01:59:40] <bomb> suuuuuuuuuuuuuure
[01:59:42] <amazigh> you choose your tool based on the name
[01:59:57] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:00:09] <amazigh> it slightly better than pop culture valuation, by a bit... but.
[02:00:21] <beaky> pi and sigma come from the capital pi product and capital sigma summation in maths (they abstract over a variable i) and they are thought of as the product (or sum) of every ith term 
[02:00:42] <beaky> it is better because the website says so https://duckdb.org/
[02:00:42] <bayaz> Title: DuckDB - An in-process SQL OLAP database management system 
[02:01:01] <amazigh> beaky: read on https://en.wikipedia.org/wiki/Ordered_Key-Value_Store
[02:01:01] <bayaz> Title: Ordered Key-Value Store - Wikipedia 
[02:01:08] <amazigh> i came to hate sql
[02:01:22] <amazigh> and it is not your regular no-sql
[02:01:30] <amazigh> it is been around since 1990s
[02:01:34] <sonny> "C++11" -- lol
[02:01:36] <beaky> yes my dream is to have something better than sql 
[02:01:44] <amazigh> define better
[02:01:45] <beaky> i havent figured out the best query language design
[02:01:56] *** Joins: znedw54419 (~znedw@home.znedw.com)
[02:02:02] <sonny> isn't tutorialD supposed to be that?
[02:02:02] <amazigh> did you look at the haskell db? Can't recall the name at this time, I can look it up
[02:02:08] <sonny> otherwise minikanren
[02:02:08] *** Joins: snake (~snake@user/snake)
[02:02:17] <beaky> yes minikanren is oen example i think
[02:02:28] <amazigh> minikanren is not on-disk persistence
[02:02:30] <beaky> i didnt check out tutorial d i heard it is better than sql too
[02:02:37] <amazigh> meh no
[02:02:39] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:02:45] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:02:49] <amazigh> I mean never managed to get something performant with it
[02:03:15] <sonny> so all we need is minikanren + disk
[02:03:32] <sonny> actually feasible
[02:03:49] <beaky> i checked out categorical query language i think it improves upon sql because it uses functors as databases so it is very natural to abstract over relations themselves (which sql cannot do without procedures) https://www.categoricaldata.net/
[02:03:50] <bayaz> Title: CQL 
[02:03:57] * sonny adds to list of projects
[02:04:06] <amazigh> beaky: sonny: my point is for the persistence and / or cache management you need some kind of okvs, on top of okvs you can build whatever you want. okvs is not a single software, it is a database paradigm.
[02:04:34] <beaky> yes ordered key value store is the best low level api
[02:04:43] <beaky> (maybe the only practical one lol)
[02:04:58] <biberao> you are beaky
[02:05:09] <beaky> yes beaky
[02:05:13] <amazigh> beaky: I found a friend :)
[02:05:16] <sonny> ok, let me make an okvs filesystem
[02:05:22] <beaky> soon i will figure out how to implement one using succinct radix tries in rust
[02:05:32] <beaky> once i can store them in disk
[02:05:42] <amazigh> (fwiw there is various implementations in rust, that you can get inspiration from)
[02:06:17] <amazigh> no, that is what I said, to get started, you just need to keep the log, and some snapshot, and regularly flush the log to the snapshot
[02:06:28] <beaky> for odrered key value stores i only looked at lmdb and rocksdb
[02:06:33] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a765:1ee9:ff77:700f)
[02:06:42] <amazigh> BUT if you want to experiement with query language forget about it, use a off-the-shelf okvs
[02:06:59] <amazigh> beaky: rocksdb api is... contrived.
[02:07:09] <sonny> folks really keep making new products in c++ D:
[02:07:12] <beaky> yes i didnt understand either of them very well 
[02:07:12] <amazigh> lmdb is better and only support data fitting in ram
[02:07:15] <bomb> I thought these discussions ended 10 years ago
[02:07:37] <amazigh> lmdb is supposed to store the whole dataset in ram. So does wiredtiger.
[02:07:52] <sonny> bomb in memory db is all the rage
[02:08:16] *** Quits: sa8 (sa8@gateway/vpn/protonvpn/sa8) (Quit: leaving)
[02:08:23] <bomb> that's a solved problem sonny 
[02:08:24] <amazigh> my dream is an async embedded okvs
[02:08:45] *** hassoon is now known as hassoonid
[02:08:46] <amazigh> distributed memory db is not
[02:09:03] <kakysha_> C
[02:09:06] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[02:09:14] <sonny> bomb what do you use?
[02:09:23] <bomb> sqlite
[02:10:05] <sonny> yeah that is a good example
[02:10:09] <kakysha_> hey guys, can you please explain why this code outputs huge r on 2nd step? https://gist.github.com/kakysha/510cdce377e67f496e4c448d57ea909e
[02:10:10] <bayaz> Title: gist:510cdce377e67f496e4c448d57ea909e 
[02:10:13] <amazigh> bomb: berkeyldb used a bloomberg, and bought by oracle got an acm prize: https://queue.acm.org/detail.cfm?id=3501713
[02:10:24] <bomb> yes. decades ago amazigh 
[02:10:34] <amazigh> bomb: decades ago of wat?
[02:10:41] *** Quits: jjt (jjt@user/jjt) (Quit: leaving)
[02:10:47] <bomb> it happened decades ago
[02:10:50] <sonny> til bloomberg runs on berkely db
[02:11:11] <bomb> not a high threshold. Bloomberg Terminals was Flash running on Adobe AIR for a while
[02:11:13] <amazigh> bomb: no, the prize is recent, it is not a single project but for a lifetime of engineering
[02:11:26] <amazigh> sonny: they build something on-top
[02:11:45] <bomb> entire wallstreet, thus world finance, relied on a single SWF to function for years
[02:11:58] *** Quits: moniker- (~mon@dh207-122-170.xnet.hr) (Remote host closed the connection)
[02:12:09] <sonny> wow
[02:12:16] <amazigh> bomb: I got a phone
[02:12:19] <amazigh> bomb: I got a phone call
[02:12:21] <sonny> how good is gnu version?
[02:12:26] <amazigh> gdbm?
[02:12:29] <sonny> ya
[02:12:44] *** Joins: moniker- (~mon@dh207-122-170.xnet.hr)
[02:12:44] <amazigh> key-value it is not sorted, you can't build sql on top without a lot of effort
[02:13:04] <sonny> oh rip
[02:13:10] <amazigh> gdbm is key-value store without the ordered / sorted part. Basically a hash-table.
[02:13:26] <bomb> there was Tokyo Cabinet
[02:13:47] <epony> https://en.wikipedia.org/wiki/DBM_(computing)#Reliability
[02:13:47] <bayaz> Title: DBM (computing) - Wikipedia 
[02:14:17] <bomb> I made an Nginx module that makes use of Tokyo Cabinet for super fast web development
[02:14:20] <amazigh> if you want to read c++ read https://en.wikipedia.org/wiki/Tkrzw or one of the previous project
[02:14:21] <bayaz> Title: Tkrzw - Wikipedia 
[02:14:23] <bomb> OpenResty wasn't a thing back then
[02:14:38] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[02:14:39] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 260 seconds)
[02:14:42] <sonny> damn DJB is legendary
[02:14:55] <epony> cdb ;-)
[02:14:56] <beaky> yes djb is the best c programmer ever
[02:15:04] <amazigh> iirc tokyo cabinet does not support sorting
[02:15:07] <amazigh> ?
[02:15:34] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:15:50] *** Joins: snake (~snake@user/snake)
[02:15:58] <amazigh> the best API for embedded okvs is wiredtiger, the same engineer that made sleepycat / bsddb, too bad it was bought by mongodb (and that it requires a lot of ram)
[02:16:33] <amazigh> but.... they plan a new standalone release. According to previous marketing, wiredtiger is used at aws
[02:16:38] <epony> https://en.wikipedia.org/wiki/Cdb_(software) "cdb is used by djbdns, fastforward, mess822, qmail and ucspi-tcp to provide highly efficient, reliable, and simple data access." http://qdbm.sourceforge.net/benchmark.pdf
[02:16:38] <bayaz> Title: cdb (software) - Wikipedia 
[02:16:38] <bayaz> Type: application/pdf Size: 52.2 kB 
[02:16:40] <beaky> i think wired tiger uses log structured merge trees
[02:16:55] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[02:17:07] <amazigh> cdb is constant database?
[02:17:16] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:17:20] <sonny> ya
[02:17:22] <amazigh> (I can't easily click on urls...)
[02:17:30] <amazigh> oh that is impressive
[02:17:56] <amazigh> today, I am happy I am not the only to like okvs :)
[02:18:12] <amazigh> it is been month or year I try to tell people it is a good thing.
[02:18:23] *** Quits: Bin_Bash (~binbash@49.206.12.92) (Ping timeout: 260 seconds)
[02:18:49] <amazigh> sqlite has an extension called lsm, that has an okvs interface
[02:18:54] <sonny> interesting to hear about this side
[02:19:04] <sonny> I wonder what these devs do to handle porting
[02:19:19] <sonny> e.g. non posix (windows)
[02:19:27] <amazigh> the API is very clean compared to the contrived rocksdb, but rocksdb is contrived because it convers very niche / specialized used, so it has to do something right.
[02:19:35] <ProfSimm> It's actually worth contemplating if "100" string should be a valid integer
[02:20:19] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[02:20:31] <sonny> lol
[02:20:34] <amazigh> there is also a gnu project that provide perfect hash-tables, that may be used (i guess) to build something like cdb
[02:20:43] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[02:21:13] <sonny> I heard lua has good ones
[02:21:24] <bomb> Bobby Tables
[02:21:26] <sonny> so it's time for lua cdb
[02:22:02] <amazigh> btw, w3c started and okvs-like + mongodb-like api, called indexedb
[02:22:08] <amazigh> but it is paused.
[02:22:29] <sonny> still json? o.O
[02:22:33] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:22:43] <sonny> also I hate the term NoSQL
[02:22:59] <amazigh> beaky: for quick prototyping use sqlite, and layer a okvs api, it will be easier for people to test it, and the license is not gpl :|
[02:23:09] *** Joins: kittyn (~kittyn@096-039-144-255.res.spectrum.com)
[02:23:21] <amazigh> then when you are happy with the frontend of the database, go lower level
[02:23:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:23:43] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:23:51] <bomb> solving technical problems is more fun than real problems
[02:23:56] <sonny> wow good strategy
[02:24:07] <beaky> real problems like what is the best way to store my tea inventory
[02:24:08] <amazigh> lsm ext like sqlite is missing key-count and bytes-count in a range, that can break some use case e.g. produce very large range of values hence transactions
[02:24:11] <sonny> bomb real problems are artificial
[02:24:30] <bomb> :P
[02:24:44] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[02:24:49] <amazigh> what is a real problem?
[02:24:55] <amazigh> never met one :p
[02:25:01] <amazigh> I need a coffee
[02:25:12] <sonny> like me not being able to share pictures with my friends
[02:25:26] <amazigh> no friends no problems
[02:25:35] <ProfSimm> amazigh: I'm writing a language where OKVS is the core data structure
[02:25:37] <amazigh> :>
[02:25:40] *** Quits: alephalpha0 (~alephalph@192.227.193.105) (Quit: Mors certa; vita incerta.)
[02:25:43] <amazigh> ProfSimm: fun!
[02:26:00] <sonny> lua?
[02:26:13] <ProfSimm> sonny: yes I'm going back in time and inventing lua
[02:26:19] <ProfSimm> :P
[02:26:23] <sonny> nice
[02:26:39] <amazigh> ProfSimm: do you want to share more info about the project?
[02:26:48] <sonny> that's a pretty nice data structure to have
[02:26:52] *** Joins: alephalpha0 (~alephalph@192.227.193.105)
[02:28:07] <amazigh> I am entertaining the idea to "mockup" a OS DE with an OKVS instead of regular fS
[02:28:19] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[02:28:28] <amazigh> in fact samsung has a harddisk with an okvs api
[02:28:34] <sonny> stuff like zfs makes me think that's just too complex
[02:28:45] <sonny> oh neat
[02:28:56] <amazigh> it below the fs what samsung does
[02:29:26] <amazigh> it is still research or did not catch up
[02:30:22] <amazigh> catch up = no in mainstream products
[02:30:34] <sonny> someone needs to make a paper can "operating systems be liberated from hiearchy?"
[02:30:37] <ProfSimm> amazigh: it's too early, but essentially everything is abstracted as OKVS or in some rare cases KVS (which is not iterable), and an OKVS can emit events to produce other OKVS/KVS to act as indices on expressions and so on.
[02:30:46] <sonny> and feature okvs file system
[02:31:11] <amazigh> ProfSimm: wow
[02:31:30] <amazigh> definitly ping when you wnat about it
[02:31:32] <ProfSimm> amazigh: it's like relational database in memory a bit. But instead of N columns in a table, it's strictly key/values
[02:31:34] <sonny> won't that end up like small talk?
[02:31:41] <ProfSimm> amazigh: or in some cases just keys (a set)
[02:31:51] <sonny> set is the ultimate adt
[02:32:18] *** Quits: alephalpha0 (~alephalph@192.227.193.105) (Quit: Mors certa; vita incerta.)
[02:32:30] <ProfSimm> And I'm just contemplating what to do when I have key "100' and int 100
[02:32:30] <ProfSimm>  :P
[02:32:40] <ProfSimm> I mean normally I don't allow multitype keys, but I also do that
[02:32:52] <sonny> `int 100`?
[02:33:03] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[02:33:16] <ProfSimm> sonny: when I have key string "100" and int "100
[02:33:33] *** Joins: alephalpha0 (~alephalph@192.227.193.105)
[02:33:38] <sonny> those are different keys
[02:33:49] <ProfSimm> sonny: it's easy to choose they are. 
[02:34:12] <ProfSimm> sonny: but I have also a dozen integer types, imagine if I start differentiating by those too
[02:34:17] <sonny> have you heard of a symbol table? lol
[02:34:43] <ProfSimm> sonny: I have. Make a point tho
[02:34:46] *** Quits: moniker- (~mon@dh207-122-170.xnet.hr) (Remote host closed the connection)
[02:34:52] <sonny> I just did
[02:34:57] <ProfSimm> :P
[02:35:06] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[02:35:26] <beaky> stringly typed keys
[02:35:57] <ProfSimm> I don't just care about internal representation. I care about semantics.
[02:35:57] *** Quits: jaysicks (~jaysicks@91-82-251-185.pool.digikabel.hu) (Remote host closed the connection)
[02:36:14] <ProfSimm> It's not such an easy problem to solve
[02:36:34] <ProfSimm> For example, in many languages you can pass integer as a float argument
[02:36:37] <ProfSimm> In many you can't
[02:36:51] <ProfSimm> is 100 comparible with 100.0 is a similar problem
[02:37:06] <amazigh> I see indeed
[02:37:10] <ProfSimm> In mine I've decided 100 is 100, and that's it. It's a float and an integer. This is how math does it
[02:37:12] <amazigh> there is no "ultimate
[02:37:22] <ProfSimm> There's no separate "float 100" and 'int 100" in math
[02:37:23] <amazigh> there is no tower representation for all numbers?
[02:37:27] <ProfSimm> Instead int is a subset of floats
[02:37:28] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:37:52] <ProfSimm> But what about "100"
[02:37:54] <amazigh> e.g. you can't see integer 100 is the same as float 100 or 100.1 is after 100
[02:38:02] <ProfSimm> Internally, it's an array of codepoints
[02:38:05] <amazigh> 100 is a string
[02:38:06] *** Joins: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:38:14] <amazigh> '100'
[02:38:25] <amazigh> i used tagged byte array
[02:38:29] <amazigh> the first byte encode the type
[02:38:44] <amazigh> but floats, double and exact integers have different types
[02:38:57] <ProfSimm> Right. Making them different is easy.
[02:39:02] <amazigh> ^^
[02:39:02] <ProfSimm> I just don't know if it's right
[02:39:24] <amazigh> does it matter if 100.0 is the same as 100?
[02:39:37] <ProfSimm> amazigh: well yes
[02:39:41] <amazigh> oh
[02:39:50] <ProfSimm> amazigh: not for keys, i don't allow float keys
[02:39:58] <ProfSimm> But in general it helps
[02:40:19] <amazigh> otherwise, use n times the precision
[02:40:19] <ProfSimm> amazigh: you don't wanna care all the time if a math operation returns int or rounded float and so on
[02:40:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a765:1ee9:ff77:700f) (Ping timeout: 245 seconds)
[02:40:35] <amazigh> and encode everything as integer
[02:40:46] <amazigh> but it will lead to a larger database
[02:40:48] <pyzozord> https://www.pathsens itive.com/2022/03/abstraction-not-what-you-think-it-is.html
[02:40:58] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 246 seconds)
[02:41:04] <pyzozord> I'll just leave this here, I think it's pretty good
[02:41:09] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:41:11] <pyzozord> gotta go, cheers
[02:41:36] <ProfSimm> pyzozord: you broke it
[02:42:03] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:b82f:d979:b282:ce17) (Read error: Connection reset by peer)
[02:42:32] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com)
[02:42:41] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:b82f:d979:b282:ce17)
[02:42:52] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 2.8)
[02:43:48] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:43:50] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[02:43:55] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[02:44:41] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com) (Ping timeout: 256 seconds)
[02:45:14] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:b82f:d979:b282:ce17) (Client Quit)
[02:48:13] *** Quits: snake (~snake@user/snake) (Ping timeout: 240 seconds)
[02:49:38] *** Joins: snake (~snake@user/snake)
[02:49:49] <beaky> https://www.pathsensitive.com/2022/03/abstraction-not-what-you-think-it-is.html
[02:49:49] <bayaz> Title: Abstraction: Not What You Think It Is 
[02:50:50] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: Connection reset by peer)
[02:50:57] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:52:42] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[02:52:53] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[02:52:54] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 252 seconds)
[02:53:47] *** Joins: soapsudsxx (~soapsudsx@209.221.40.145)
[02:54:37] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 246 seconds)
[02:55:54] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com)
[02:56:14] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:52] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[02:58:17] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com) (Ping timeout: 256 seconds)
[02:58:31] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[03:01:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[03:02:27] <beaky> lol i always thought functions was abstraction end of discussion so i was mistaken about that 
[03:04:41] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[03:05:08] *** Joins: slavfox (~slavfox@93.158.232.111)
[03:05:21] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 245 seconds)
[03:08:58] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[03:10:16] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:15:29] *** Quits: death916 (~death916@user/death916) (Ping timeout: 268 seconds)
[03:22:14] *** Joins: kakysha_ (~kakysha@user/kakysha)
[03:23:46] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:23:59] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[03:24:43] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[03:24:50] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[03:26:02] *** Quits: XSDNMN (~XSDNMN@2601:449:8400:4170:4c65:aeab:acc9:1dcc) (Read error: Connection reset by peer)
[03:26:07] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:26:40] <beaky> what are the best abstractions in programming
[03:27:27] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[03:27:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[03:29:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:30:04] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:31:07] <beaky> besides universal construction (of which algebraic data types are an example) https://ncatlab.org/nlab/show/universal%20construction
[03:31:08] <bayaz> Title: universal construction 
[03:31:28] *** Quits: magla (~gelignite@d53668d6.access.ecotel.net) (Quit: Stay safe!)
[03:31:49] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:32:21] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[03:33:03] *** Quits: pizdets (~pizdets@183.182.115.192) (Ping timeout: 252 seconds)
[03:33:10] <BASHitup> Does anyone know how to block a specific user on Weechat? 
[03:33:26] <BASHitup> I know the operators and mods can block but how can a regular user do this? 
[03:33:45] *** Joins: pizdets (~pizdets@183.182.111.169)
[03:33:45] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[03:33:59] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 256 seconds)
[03:34:25] *** Quits: perro_ (~perro@072-191-245-069.res.spectrum.com) (Client Quit)
[03:34:37] <beaky> nice i like weebchat my favorite irc client
[03:34:43] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[03:34:49] <beaky> /help filter
[03:35:15] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:36:12] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[03:37:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:38:28] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[03:39:03] <KillerWasp> beaky: why not the poor hexchat? ;_;
[03:39:25] <beaky> idk i have not tried hexchat
[03:40:28] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:32] *** Joins: breavyn (~breavyn@user/breavyn)
[03:41:27] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[03:41:45] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:42:14] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[03:42:51] *** Joins: MCx (~MCx@user/mcx)
[03:43:51] *** duckgoose is now known as willsmith
[03:45:06] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[03:45:12] *** willsmith is now known as duckgoose
[03:46:15] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[03:47:43] *** Joins: noteness (~noteness@user/noteness)
[03:48:16] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:50:46] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:53:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[03:54:39] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[03:55:56] *** Quits: stanlib (~archblade@user/stanlib) (Quit: stanlib)
[03:56:29] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[03:57:35] *** Joins: stanlib (~archblade@user/stanlib)
[03:57:37] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 246 seconds)
[04:01:24] *** Quits: MCx (~MCx@user/mcx) (Ping timeout: 250 seconds)
[04:04:33] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[04:05:11] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:07:01] *** Quits: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk) (Ping timeout: 245 seconds)
[04:07:15] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[04:07:37] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:08:14] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[04:11:00] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[04:11:15] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[04:11:17] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Read error: Connection reset by peer)
[04:11:20] *** Quits: juno__ (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[04:11:39] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[04:11:47] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 260 seconds)
[04:11:50] *** Joins: wauterboi (~wauterboi@185.195.233.165)
[04:13:10] *** Joins: knusbaum (~knusbaum@89.187.180.40)
[04:13:48] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[04:13:50] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Read error: Connection reset by peer)
[04:14:14] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[04:14:36] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[04:15:36] *** Joins: opeerateur_ (~My_user_n@178.220.220.180)
[04:15:43] *** Joins: Bin_Bash (~binbash@49.206.9.201)
[04:16:00] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Remote host closed the connection)
[04:17:27] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:18:37] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Ping timeout: 246 seconds)
[04:19:11] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[04:19:23] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[04:20:01] *** Quits: opeerateur_ (~My_user_n@178.220.220.180) (Ping timeout: 246 seconds)
[04:20:46] *** Joins: duuude (~user@user/duuude)
[04:21:32] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:53] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:25:58] <ProfSimm> beaky: everything is abstraction
[04:26:57] <beaky> nice what is your favorite abstraction
[04:26:59] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 250 seconds)
[04:27:36] <beaky> lately i like dependent types but the blogpost talked about antiunification (which is not abstraction but sounds cool)
[04:28:10] <beaky> and also bits my favorite database abstraction
[04:28:43] <ProfSimm> beaky: I can't answer this because as noted everything is abstraction
[04:29:33] <beaky> hard to pick favorites out of everything
[04:29:35] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[04:30:43] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[04:30:52] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 246 seconds)
[04:31:43] <beaky> as dijkstra says 'The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise.' so with dependent types i can specify and prove programs correct whereas with bits i can represnet only the most minimal of data needed
[04:31:49] <ProfSimm> beaky: my favorite abstraction is the apparent 3D world around us, which actuhally is nothing like
[04:32:00] *** Joins: norayr (376bc34bfc@37.252.78.253)
[04:32:40] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[04:32:50] <beaky> yes soon we will have vr so we can chat in 3d too
[04:34:30] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c8fc:8e48:bda1:1aac)
[04:34:54] <ProfSimm> beaky: nah I mean the actual "real" world
[04:34:57] <ProfSimm> :P
[04:35:04] <ProfSimm> I'm just being... philosophical
[04:35:06] <beaky> there is cubical type theory maybe that is finally a programming language that can keep up with the higher dimensions of the real world
[04:35:28] <ProfSimm> beaky: what would that be
[04:35:42] <duuude> world is 8-bit 2D, only graphically enhanced in our brain
[04:35:56] <ProfSimm> duuude: world is 1D
[04:36:03] <duuude> 0D
[04:36:13] <beaky> cubical type theory is a brand of homotopy type theory where teh idea is that you can have identity types through paths between points (cubes are collections of different faces which are sets of these paths iirc)
[04:36:13] <ProfSimm> duuude: we're collections of photons going in a straight line but getting entangled with one another
[04:36:16] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c8fc:8e48:bda1:1aac) (Client Quit)
[04:36:33] <ProfSimm> duuude: knots of light
[04:37:06] <duuude> hmm.. strange
[04:37:46] <ProfSimm> duuude: there's no space, just time
[04:37:53] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 260 seconds)
[04:38:00] <ProfSimm> duuude: there's no absolute time either, just everyone's individual time
[04:38:11] *** Parts: VoidSync (~sync@user/voidsync) ()
[04:38:28] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[04:38:36] <duuude> some quantom stuff don't move when you observe them, but move when you do, or that is how I understood that
[04:38:37] <beaky> cubical type theory https://www.youtube.com/watch?v=AZ8wMIar-_c
[04:38:38] <bayaz> Title: Cubical Agda: A Dependently Typed Programming Language with Univalence and Higher Inductive Types 
[04:39:01] <duuude> I like to think that this is a virtualization and that is the glitch when you zoom enough
[04:39:22] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[04:39:45] <ProfSimm> Yay, actual video
[04:40:07] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[04:40:28] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[04:40:39] <ProfSimm> duuude: it's more like when you don't interact with something its determination of being a particular thing start fading away into infinite possibilities. 
[04:40:56] <ProfSimm> duuude: and when you interact with it, it's like "oh yeah I was that thing, there"
[04:41:02] <ProfSimm> :P
[04:42:44] <duuude> maybe those atoms don't exist
[04:42:50] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[04:42:54] <duuude> they are procedurally generated when we zoom
[04:42:58] *** Joins: kakysha (~kakysha@user/kakysha)
[04:43:11] *** Joins: saribro (~swinnenb@user/swinnenb)
[04:43:23] *** Joins: molson_ (~molson@172-103-21-94-dynamic.midco.net)
[04:43:24] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[04:43:44] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[04:43:58] <ProfSimm> duuude: the pandemic was a ploy to get everyone to stay home and reduce the system processing needs
[04:44:07] *** Joins: opotin2 (~opotin@gyros.collabora.co.uk)
[04:44:37] <duuude> ProfSimm: great conspiracy theory
[04:44:43] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:44:45] *** Quits: fingercomp (fingercomp@fomalhaut.me) (Quit: .)
[04:44:47] *** Quits: strudl (~strudl@user/strudl) (Remote host closed the connection)
[04:44:49] *** Quits: opotin (~opotin@gyros.collabora.co.uk) (Read error: Connection reset by peer)
[04:44:49] *** opotin2 is now known as opotin
[04:44:50] <ProfSimm> duuude: I have infinite of those :P
[04:45:05] *** Joins: strudl (~strudl@user/strudl)
[04:45:07] <duuude> not many people hold electronic microscopes at home
[04:45:25] <duuude> no need to generate atoms
[04:45:38] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 252 seconds)
[04:45:56] <ProfSimm> duuude: what you don't directly observe is in superposition
[04:45:57] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 256 seconds)
[04:46:18] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[04:46:28] <duuude> no need to keep simulating most stuff either. just you refresh the in-game screens
[04:46:32] <ProfSimm> duuude: including when during the week while you work, your mom is in superposition and then when you go visit her during the weekend, she's a different mom every time
[04:47:05] *** Joins: Atque (~Atque@user/atque)
[04:47:32] <ProfSimm> duuude: every time you interact with someone or something you become entangled with them, and their world is more similar to yours
[04:47:40] <ProfSimm> over time
[04:47:41] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:48:04] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Ping timeout: 272 seconds)
[04:48:15] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[04:48:20] <duuude> ProfSimm: NSA is trying to look at everything to keep the world same
[04:48:28] <ProfSimm> duuude: if you sit in an isolation tank a sufficient time, and convince yourself you no longer believe in the world outside, you may exit the tank and find the world completely different
[04:48:32] *** Quits: foxtrot (~foxtrot@user/foxtrot) (Remote host closed the connection)
[04:48:36] <ProfSimm> duuude: ahahaha
[04:48:44] <ProfSimm> duuude: good one, lateral thinking, I like that :P
[04:49:30] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[04:49:31] <ProfSimm> duuude: great excuse too. Girl: "why are you staring at me"   "I'm trying to save you from dissolving into superposition"
[04:49:54] <duuude> lol
[04:49:54] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[04:49:58] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 272 seconds)
[04:50:03] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:50:09] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (Ping timeout: 240 seconds)
[04:50:09] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[04:50:18] *** Joins: feliix42 (~felix@gibbs.uberspace.de)
[04:50:23] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[04:50:56] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[04:51:00] *** Quits: newwebdev13 (~newwebdev@78.135.92.89) (Quit: Leaving)
[04:51:22] <ProfSimm> duuude: don't think about the war too much, or you become entangled with those thoughts and your subjective experience moves into a world where world war 3 happens
[04:51:35] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[04:51:35] *** Joins: death916 (~death916@user/death916)
[04:51:38] *** Joins: img (~img@2405:6580:b1c0:2500:7fee:4a8a:9cab:420)
[04:51:38] *** Quits: img (~img@2405:6580:b1c0:2500:7fee:4a8a:9cab:420) (Changing host)
[04:51:38] *** Joins: img (~img@user/img)
[04:51:55] <ProfSimm> duuude: this is why there's pandemic, btw. You read too many articles about it
[04:52:16] <ProfSimm> It was just a cold!
[04:52:20] *** Joins: fingercomp (fingercomp@fomalhaut.me)
[04:52:52] <duuude> ProfSimm: but that would be just my thought
[04:53:23] <duuude> my subjective experience is past the WW5
[04:53:51] <ProfSimm> duuude: stop causing wars damn it
[04:54:34] <duuude> what would it cause to you, it is just my experience
[04:54:56] <duuude> you are words on a screen
[04:55:01] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:55:41] <ProfSimm> duuude: that's the problem, we're interacting.
[04:55:43] *** Quits: pmercado (~pmercado@186.107.57.83) (Ping timeout: 246 seconds)
[04:55:49] <ProfSimm> duuude:  so our thoughts are compounding each other
[04:56:07] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[04:56:11] <ProfSimm> duuude: that's it I'm gonna stop watching at the world until the war and covid go away
[04:56:12] <Sqaure> I got promised a deal at my job with telework / WFH with the only requirement of 3 days at work every two months. So 1.5 days a month on average. 
[04:56:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[04:56:20] <Sqaure> Sadly i hate my job
[04:56:40] <duuude> free time is good
[04:57:27] *** Joins: juno__ (~junebug@2600:1700:3db0:2540:84f7:9c76:4e7d:2835)
[04:59:13] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 246 seconds)
[04:59:37] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:00:01] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:01:43] <epony> people often confuse 7-segment LED displays showing 2 with 5
[05:04:45] <beaky> yes if only they had a bettter font like nixie tubes 
[05:06:45] <epony> also in dreams, memories, altered experiences and overseen images, your memory and consciousness play tricks on your visual comprehension, so digits and other images might be shifter, rotated, mirrored and reversed.. so assume it's the number 999 instead
[05:07:48] *** Quits: flaqoniun (~F@32.211.211.39) (Ping timeout: 240 seconds)
[05:11:51] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 250 seconds)
[05:11:51] *** Quits: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com) (Ping timeout: 250 seconds)
[05:11:54] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:12:47] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[05:13:05] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[05:13:20] *** Joins: duuude (~user@user/duuude)
[05:13:36] *** Joins: pierrepaul (sid504261@id-504261.uxbridge.irccloud.com)
[05:13:37] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[05:14:03] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[05:14:36] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[05:15:56] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[05:15:58] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[05:16:20] *** Quits: Farty (Farty@gateway/vpn/protonvpn/farty) (Quit: Bye Felisha!)
[05:16:21] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Client Quit)
[05:16:41] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:17:44] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[05:18:41] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 245 seconds)
[05:18:56] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[05:19:08] <epony> https://en.wikiquote.org/wiki/Dijkstra#1960s  "Our intellectual powers are rather geared to master static relations and ... our powers to visualize processes evolving in time are relatively poorly developed. For that reason we should do (as wise programmers aware of our limitations) our utmost to shorten the conceptual gap between the static program and the dynamic process, to make the correspondence between the program (spread out in text space) and the 
[05:19:08] <epony> process (spread out in time) as trivial as possible."  also, you can't think correctly about carry, borrow, overflow, edge values, overlapping intervals, uneven offsets, shifts and deductions of time, and anything subject to limits and inequality comparisons
[05:19:08] <bayaz> Title: Edsger W. Dijkstra - Wikiquote 
[05:19:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[05:19:39] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: bbiaf.)
[05:19:44] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 272 seconds)
[05:20:28] *** Joins: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04)
[05:22:26] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 245 seconds)
[05:22:29] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 252 seconds)
[05:23:39] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[05:24:03] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[05:24:46] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:25:24] <KillerWasp> It seems that IRC doesn't directly report if a user is registered or not. You have to send the 'whois' command and then parse its lines. Something complicated when you want to send a command, wait for a response, process, and then just execute the command according to whether the user is logged in.
[05:25:30] <ProfSimm> epony: so what does he mean
[05:26:30] <duuude> KillerWasp: the registration probably has nothing to do with IRC
[05:26:40] <duuude> just something this server does
[05:26:53] <duuude> network*
[05:27:16] <duuude> among others, but nothing intrinsic to the protocol
[05:28:53] *** Joins: slate (~slate@71-209-254-109.phnx.qwest.net)
[05:29:03] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:c5f3:796a:10b9:b3ef)
[05:29:36] *** Joins: Mags0001 (~Mags@host-79-26-197-11.retail.telecomitalia.it)
[05:29:48] <epony> ^ Dijkstra (1968) "A Case against the GO TO Statement" http://www.cs.utexas.edu/users/EWD/ewd02xx/EWD215.PDF cited in: Bill Curtis (1981) Tutorial, human factors in software development. p. 109.
[05:29:49] <bayaz> Type: application/pdf Size: 125.5 kB 
[05:30:14] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:c5f3:796a:10b9:b3ef) (Client Quit)
[05:30:22] <epony> that paper is about structured programming, you know late 60ies..
[05:30:33] <BASHitup> Can someone double verify that I am cloaked? 
[05:30:54] *** Parts: Mags0001 (~Mags@host-79-26-197-11.retail.telecomitalia.it) ()
[05:31:00] <BASHitup> Whois doesn't say that I'm cloaked 
[05:31:05] <duuude> you are
[05:31:18] <epony> converting "application programmers" (consumers of convenience languages) to abandon nesting and code jumps in high level languages
[05:31:32] *** Quits: eddof13 (~eddof13@2806:102e:12:64:8553:23df:507a:ff04) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:36] <duuude> BASHitup: yippeekaiyay
[05:31:45] <BASHitup> yes, that's right 
[05:31:50] <BASHitup> I have a nick tied to a main nick 
[05:32:04] <BASHitup> I'm part of a nick group with transitive ties 
[05:32:06] <Joanna> You can find out if someone is registered using info command
[05:32:22] <Joanna> KillerWasp:
[05:32:28] <BASHitup> I don't know. You guys are great stand-up folks but I might need to leave IRC for a few months. 
[05:32:30] <BASHitup> Which is sad 
[05:32:35] <epony> ProfSimm, that obeservation is still valid, for example the TOCTOU bugs are a case of it too
[05:32:37] <BASHitup> I really learn a lot on here and I like everyone in this channel 
[05:32:51] <BASHitup> But someone found my IP ... and I can't handle that mentally. 
[05:33:06] <duuude> Joanna: I just get info about libera
[05:33:18] <duuude> BASHitup: use matrix
[05:33:19] <epony> https://en.wikipedia.org/wiki/TOCTOU#Preventing_TOCTOU
[05:33:19] <bayaz> Title: Time-of-check to time-of-use - Wikipedia 
[05:33:22] <Joanna> Use in nickserv
[05:33:27] <BASHitup> well, the obvious way to find someone's IP is to just grep through the client logs. 
[05:33:31] <BASHitup> So she did that 
[05:33:50] <BASHitup> She went to the default location of her client logs on her host and low and behold I logged in while her log was active. 
[05:34:08] <Joanna> BASHitup: it’s impossible to use internet without your IP address being shared
[05:34:28] <duuude> sharing it with the server is one thing
[05:34:43] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[05:34:44] <duuude> sharing it with the all the strangers everywhere is another
[05:34:54] <Joanna> How well do you know people that control the server?
[05:35:21] <BASHitup> Joanna: look, I just like the fact that I can have an off day and say stupid shit and no one knows who I am. 
[05:35:21] <duuude> at least they are fewer than everyone :D
[05:35:46] <Joanna> It’s a sense of false security at best
[05:35:48] <BASHitup> I can say edgy things or things you'd never say at work. And it feels safe because everyone is anonymous. And she took that feeling away from me 
[05:36:13] <KillerWasp> Joanna: which command?
[05:36:22] *** Joins: Jigsy (~Jigsy@user/jigsy)
[05:36:24] <duuude> Joanna: also if they want to publicly share my info with everyone, they lose credibility
[05:36:32] <BASHitup> Like doxing? 
[05:36:39] <BASHitup> K, so doxing is severely immoral 
[05:36:52] <Joanna> This /msg nickserv info duuude
[05:36:55] <BASHitup> It's fucked up. And so are a litany of other blackhat sort of self-appointed vigilante things 
[05:37:29] <Joanna> BASHitup: how long have you used irc ?
[05:38:03] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:9863:ed91:ec8f:6351)
[05:38:56] *** Quits: danpg (~thelounge@shout.jpaglier.com) (Quit: Ping timeout (120 seconds))
[05:39:12] *** Joins: danpg (~thelounge@shout.jpaglier.com)
[05:39:42] <BASHitup> But when a victim gets seriously hurt ... it's too late for that one person. 
[05:39:42] <BASHitup> So for that person who got harmed ... There's no turning back the damage. Obvious fact, of course. 
[05:39:42] <duuude> get healing potion
[05:39:42] <duuude> +5 hp
[05:39:42] <KillerWasp> nickserv seem dead.
[05:39:42] <BASHitup> Yeah, right. 
[05:39:43] <BASHitup> I need to get something. I lost my marbles today. 
[05:39:43] * duuude gives BASHitup new marbles
[05:39:43] <BASHitup> That's nice of you. 
[05:39:43] <BASHitup> No, I started it. I have personal issues over my personal situation and I took it out on the #security channel. So I asked for it 
[05:39:43] <KillerWasp> or all bots. i'm blocked?
[05:39:43] <duuude> KillerWasp: maybe a typo?
[05:39:50] *** Joins: moniker- (~mon@dh207-122-170.xnet.hr)
[05:39:56] *** Quits: Dreg (~Dreg@fr33project.org) (Quit: Dreg)
[05:40:05] <BASHitup> Joanna: not very long 
[05:40:07] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Quit: ZNC - https://znc.in)
[05:40:13] <Joanna> duuude: irc with ip showing is probably a lot more private than other social media
[05:40:13] <KillerWasp> ok, very retarded answer... :(
[05:40:14] <BASHitup> Like two months ... maybe going into three 
[05:40:31] <BASHitup> Well, but these groups are all full of technical people. 
[05:40:38] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Ping timeout: 272 seconds)
[05:40:44] <duuude> Joanna: how so?
[05:40:57] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a487:bfd9:1cce:4fb7) (Ping timeout: 240 seconds)
[05:41:06] <BASHitup> I'd say that about a third of the people in here know basic Linux commands: whois, dig, nslookup (for Windows), who etc 
[05:41:09] <BASHitup> Then Wireshark 
[05:41:11] <dTal> ooh wow you got my IP, what are you gonna do with that
[05:41:12] <duuude> It is just less javascripty and feels less facebook
[05:41:19] <Joanna> Are any of you actual programmers or do you just come here to critique irc?
[05:41:30] <KillerWasp> yes, i already see it, like you must find 'Registered' string, also seem more easy find '330' from 'whois'.
[05:41:31] <dTal> social media, I can get your whole social graph
[05:41:36] *** Joins: Dreg (~Dreg@fr33project.org)
[05:41:50] <BASHitup> Then the people on here know multiple languages. So this is a community full of technical knowledge that among the general population only like 5% of people know. Which means everyone in here can find a lot about each other. 
[05:41:50] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[05:41:55] <dTal> social media, I can have a decent crack at phishing you
[05:42:05] <perro> who cares though
[05:42:08] <BASHitup> Yeah ... 
[05:42:09] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[05:42:10] <KillerWasp> Since 'whois' looks for sure the current user, and not the registered user.
[05:42:17] <duuude> also people don't like stuff on IRC, less info to be harvested
[05:42:42] <BASHitup> What do you mean by "like stuff"? 
[05:42:46] <dTal> bah y'all don't know me from adam and I'm not even careful
[05:42:49] *** Quits: Akiva (~Akiva@user/Akiva) (Quit: WeeChat 3.4)
[05:43:24] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Remote host closed the connection)
[05:43:40] <duuude> but the information being public is more dangerous than it being in hands of NSA. what the fuck is NSA is going to do with that info.
[05:44:01] <BASHitup> The NSA is probably recording what we're typing right now and we don't even know it. 
[05:44:13] <BASHitup> If what Snowden says is accurate, I'd say there is no privacy 
[05:44:19] <duuude> like the rest of 699 people here? sure.
[05:45:14] <Joanna> KillerWasp: nickserv works for me
[05:45:20] <duuude> NSA has limited ways to actually use the info, but when it is public it is open to all sorts of trolls and crooks and criminals
[05:45:36] *** Joins: negatratoron (lol@2603:3016:1e01:b9a0:cdba:28f4:8e52:555b)
[05:45:49] <BASHitup> Well, the NSA stores so much info that they don't have the manpower to sift through it 
[05:46:06] <BASHitup> This is a real actual fact. A team of people can't read all of the books in the library of congress in even six months. 
[05:46:10] <BASHitup> So, yes, there's that 
[05:46:11] <Joanna> Irc is full of afk members harvesting info
[05:46:13] <duuude> NSA is also a concern, but info going public is more of a concern
[05:46:26] <BASHitup> I don't know ... But why is this the only group without trolls
[05:46:45] <BASHitup> That's more interesting than anything else ... For a few seconds when my mind drifts there anyway 
[05:46:55] <Joanna> This channel gets what I would consider trolls sometimes
[05:47:18] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:47:58] <BASHitup> This is the most down-to-earth group of rational people on social media I've ever met. 
[05:48:04] <duuude> Google storing your info is far more shady than it getting in hands of NSA. Google is using it everywhere, it may get hacked and the data will be in hands of who knows what entity.
[05:48:14] *** Joins: jjt (jjt@user/jjt)
[05:48:22] <Joanna> Nsa probably uses ai to analyze conversations and alert an employee if something interesting is found
[05:48:28] *** Quits: jamea (~jamea@200.68.141.36) (Ping timeout: 260 seconds)
[05:48:34] <duuude> It does
[05:48:40] <beaky> nice i like ai
[05:48:41] <duuude> that is leaked
[05:48:45] <duuude> lol beaky
[05:48:50] <BASHitup> Even if you use a VPN, just by human nature, at some point you'll forget, the killswitch will fail ... you'll shut it off to do something like by tickets for a concerts that's blocking it ... 
[05:48:57] <BASHitup> Forget to turn it back on and then you're public for however long 
[05:49:08] <BASHitup> Or if your'e not using a provider in the five or fourteen-eyes. 
[05:49:24] <duuude> what the hell is NSA going to do with your info, this is what you should be thinking
[05:49:30] <Joanna> BASHitup: are you saying someone found your iPhone address and threatened you ?
[05:49:38] <Joanna> Ip
[05:49:43] <Joanna> Typo..
[05:49:46] <duuude> hackers are more of a concern
[05:49:50] <BASHitup> Look, don't listen to me too far. Don't read into my thoughts. I'm seriously not having a good day mentally. I admit that. 
[05:50:01] <BASHitup> At least I'm not so far gone as to not realize when I've lost it 
[05:50:08] <BASHitup> People who are completely gone don't even know it. 
[05:50:28] <Joanna> So you are one of those role players that likes to come here “
[05:50:31] <Joanna> ?
[05:50:42] <BASHitup> Role players? 
[05:50:50] <Joanna>  Yea
[05:50:54] <BASHitup> I'm a guy who lost a 100K forensic job who isn't handling it well. 
[05:50:59] <BASHitup> No role to play. No agenda. 
[05:51:14] <Joanna> What do you program?
[05:51:16] <BASHitup> I'm talking to an advocate who may or may not help me pursue an EEOC case. 
[05:51:32] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[05:51:35] <BASHitup> Seriously not a programmer. I know some BASH and I write local scripts. 
[05:51:48] <BASHitup> I am in here to learn about programming - not because I work as a coder. 
[05:52:00] <dTal> I do sometimes role-play someone who gives a shit about what people say on IRC. Not too good at it though.
[05:52:06] <Joanna> There might be other channels that are more for those things.
[05:52:13] *** Joins: coaxing (~coaxing@user/coaxing)
[05:52:18] <BASHitup> I can write scripts that combine commands. But they're very simple scripts. They're not elegant or sophisticated. And I can edit scripts. 
[05:52:19] *** Quits: coaxing (~coaxing@user/coaxing) (Client Quit)
[05:52:37] <Joanna> The only way to learn programming is by practicing
[05:52:41] <duuude> I can save my text files
[05:52:48] <BASHitup> Joanna - are you saying I'm not welcome in the channel or I'm digressing from topics etc? 
[05:52:48] <beaky> nice wish i could learn programming too
[05:52:52] <Joanna> Can learn by chatting in irc
[05:52:53] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[05:53:00] <Joanna> Alone
[05:53:15] <negatratoron> learn programming beaky
[05:53:18] <negatratoron> LEARN IT
[05:53:25] <Joanna> BASHitup: it’s not my channel so not my problem
[05:53:58] *** Joins: coaxing (~coaxing@user/coaxing)
[05:54:09] <negatratoron> sorry to hear about your job BASHitup 
[05:54:34] <negatratoron> but hopefully with the work experience you can find something else
[05:54:39] <BASHitup> Yeah ... I was trying to work on building a company, then got distracted 
[05:54:56] <BASHitup> They literally fired me after beign on the job for only two weeks 
[05:55:00] <beaky> yes i spent weeks trying to write my tea database but in only a few minutes you could write a complete document database from scratch https://notes.eatonphil.com/documentdb.html
[05:55:01] <bayaz> Title: Writing a document database from scratch in Go: Lucene-like filters and indexes | notes.eatonphil.com 
[05:55:06] <BASHitup> The situation is bizarre. 
[05:55:20] <negatratoron> two weeks, interesting
[05:55:23] <BASHitup> And only one week was actually on-site training 
[05:55:26] <negatratoron> no idea why?
[05:55:46] <negatratoron> i was thinkin' it was more than two weeks work experience :<
[05:55:49] <duuude> BASHitup: was it your first job?
[05:55:58] <BASHitup> Well, I had medical issues and couldn't perform up to their production standards. They wanted me to be able to run a forensic lab without any assistance followwing one week of training 
[05:56:01] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[05:56:17] <negatratoron> ah that's sad
[05:56:22] <negatratoron> well now you know
[05:56:26] <BASHitup> Run the lab as the only phyiscal analyst on site. And I am a junior ... So they wanted me to fill a quasi-senior role as a junior employee. 
[05:56:39] *** Joins: flaqoniun (~F@32.211.211.39)
[05:58:09] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:58:58] <coaxing> BASHitup: sounds like you aren't missing out on much by losing the position then
[05:59:08] <coaxing> apart from 100k
[05:59:25] *** Joins: Atque (~Atque@user/atque)
[06:00:05] *** Joins: apache (apache2@anubis.0x90.dk)
[06:00:05] <BASHitup> I'm missing my sense of personal value
[06:00:12] *** Parts: apache (apache2@anubis.0x90.dk) ()
[06:00:30] <BASHitup> Well, and I'm supposedly not supposed to name the company but if you message me directly, there's an 80% chance I'll tell you anyway. 
[06:00:59] <coaxing> Well, i hope you find it amigo
[06:01:44] <ProfSimm> you see this in an argument list, what do you think it means:    foobar (1, 2, 3; 4, 5, 6; 7)
[06:02:26] <flaqoniun> needs more baz
[06:02:27] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[06:02:38] * ProfSimm takes notes
[06:02:42] <beaky> foobar applied to a list [1 2 3], another list [4 5 6] and 7
[06:03:14] <ProfSimm> beaky: thanks
[06:04:39] <beaky> (foobar '(1 2 3) '(4 5 6) 7)
[06:04:52] <beaky> in lisp the perfect programming language according to lisp users
[06:05:12] <beaky> but now that we have rust i guess lisp is on its way to obsoletetion
[06:05:39] <ProfSimm> beaky: "it's all a matter of taste" said a dog and licked his ass
[06:05:41] <duuude> beaky is talking of something negatively!
[06:06:27] <ProfSimm> duuude: I am sure beaky loves lisp
[06:06:42] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[06:06:42] <beaky> yes i like lisp it was what i had my tea database 1.0 written in 
[06:06:57] <ProfSimm> Ah yes the tea database
[06:06:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[06:07:00] * duuude lets out a sigh of relief
[06:07:18] <duuude> I was beginning to fear that lisp is not nice
[06:07:33] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[06:07:46] *** Joins: flaqoniun (~F@32.211.211.39)
[06:07:58] <beaky> but now ive found the holy light of rust to guide me to the ultimate database implementation
[06:08:30] *** Quits: negatratoron (lol@2603:3016:1e01:b9a0:cdba:28f4:8e52:555b) (Quit: Leaving)
[06:08:38] <beaky> since lisp needs garbage collection 
[06:08:48] <beaky> i guess garbage collection is bad for databases
[06:13:19] <ProfSimm> beaky: databases use garbage collection a lot
[06:13:50] <ProfSimm> beaky: it's a key component of MVCC
[06:17:04] <beaky> yes the idea is that i can implement garbage collection manually and more deterministically using rust 
[06:18:19] <gambl0re> hi can i ask some sql in here?
[06:18:53] <amigojapan> This is a picture I took of the sakura cherry blossoms today  https://usercontent.irccloud-cdn.com/file/PJNssUe2/irccloudcapture8567007567936568566.jpg
[06:18:53] <bayaz> Type: image/jpeg Size: 365.6 kB 
[06:20:42] *** Quits: jjt (jjt@user/jjt) (Quit: Lost terminal)
[06:20:43] <amigojapan> gambl0re: you can
[06:21:17] <gambl0re> ok
[06:21:19] <gambl0re> https://imgur.com/lMdFKpJ
[06:21:33] <gambl0re> how can i filter the rows so that the notification_id column is unique
[06:21:48] <gambl0re> i tried using distinct but didnt do anything
[06:24:33] *** Joins: wodencafe (wodencafe@woden.cafe)
[06:24:53] <amigojapan> gambl0re: please paste the query. We can't guess what you did wrong
[06:25:31] *** Joins: Inline__ (~Inline@p200300cd470f690069ffd8a9e8710708.dip0.t-ipconnect.de)
[06:25:45] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 252 seconds)
[06:25:48] <gambl0re> amigojapan: sure
[06:25:50] <gambl0re> https://pastebin.com/Sj1uAsrA
[06:25:51] <bayaz> Title: select distinct notifications.id as notification_id, <===================== - Pastebin.com 
[06:26:03] <amigojapan> Let me see
[06:26:08] <gambl0re> thanks
[06:26:22] *** Quits: zaher (~zaher@37.48.189.13) (Ping timeout: 246 seconds)
[06:28:03] *** Quits: Inline (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:28:47] *** Joins: Epithium_ (~Epithium@2603-6080-3203-8d68-214c-d11f-e515-c2c3.res6.spectrum.com)
[06:29:43] <amigojapan> gambl0re: try changing distinct notifications.id as notification_id to notification_id (distinct notification_id)
[06:29:56] <gambl0re> ok let me try
[06:30:37] <gambl0re> like this?
[06:30:39] <gambl0re>  notifications.id as notification_id (distinct notification_id),
[06:31:15] <amigojapan> I think so, try it
[06:31:21] <gambl0re> doesnt work
[06:31:24] <gambl0re> errors
[06:31:32] <gambl0re> syntax errors
[06:31:37] <gambl0re> postgres says to do it like this
[06:31:38] <gambl0re> https://www.postgresqltutorial.com/postgresql-select-distinct/
[06:31:39] <bayaz> Title: PostgreSQL SELECT DISTINCT By Practical Examples 
[06:31:54] <amigojapan> Let me see
[06:31:56] <gambl0re> but that's what im doing
[06:32:02] <gambl0re> so not sure what i'm doing wrong
[06:32:18] <karstensrage> the notification ids are not unique though
[06:32:33] <karstensrage> what a weird table
[06:32:43] <karstensrage> why is everything the same including the created except the comment id
[06:33:26] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 252 seconds)
[06:33:33] <karstensrage> its just completely duplicated rows except comment_id
[06:33:44] <amigojapan> gambl0re: this is from an example that works in another database select count(distinct column_name), count(column_name) from table_name
[06:34:07] <gambl0re> that must be mysql or something
[06:34:18] <gambl0re> its different with postgres. anyways thanks for trying to help
[06:34:53] *** Joins: zmotaj_ (~zmotaj@86.61.80.191)
[06:36:21] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[06:37:35] <amigojapan> gambl0re: this may help https://stackoverflow.com/questions/63377716/check-for-uniqueness-of-column-in-postgres-table
[06:37:36] <bayaz> Title: Check for uniqueness of column in postgres table 
[06:37:55] <gambl0re> amigojapan: thanks :)
[06:38:27] *** Quits: justOkay (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[06:40:33] <amigojapan> No problem :)
[06:42:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:42:40] *** Joins: justOkay (~justache@user/justache)
[06:46:04] *** Quits: Epithium_ (~Epithium@2603-6080-3203-8d68-214c-d11f-e515-c2c3.res6.spectrum.com) (Quit: Leaving)
[06:49:09] *** Quits: slate (~slate@71-209-254-109.phnx.qwest.net) (Remote host closed the connection)
[06:49:27] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:7154:9f45:d0f0:d2bf)
[06:49:50] *** Joins: jamea (~jamea@177.239.82.103)
[06:50:51] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[06:51:02] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[06:55:10] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:56:07] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[06:57:07] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175)
[06:57:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:01:34] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:02:48] *** Joins: ahungry (~user@c-68-51-134-46.hsd1.mi.comcast.net)
[07:06:50] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:10:13] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:11:38] *** Joins: pulse (~pulse@user/pulse)
[07:16:02] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:19:10] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[07:21:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:21:48] *** Quits: knusbaum (~knusbaum@89.187.180.40) (Ping timeout: 260 seconds)
[07:23:15] <audio> can anyone help with this? https://www.kaggle.com/discussions/questions-and-answers/315533
[07:23:17] <bayaz> Title: How can I use a 46GB tar with keras/tensorflow? | Data Science and Machine Learning 
[07:23:25] *** Quits: jamea (~jamea@177.239.82.103) (Ping timeout: 246 seconds)
[07:23:43] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[07:23:45] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:24:13] *** Joins: DrMax_ (~DrMax@207.96.159.130)
[07:25:44] <Raziel> audio, if my answer is "stop using shitty cloud platforms" are you gonna get mad at me? :p
[07:26:06] <audio> Raziel i dont have a gpu tho
[07:30:52] <oldlaptop> gambl0re: If you have multiple rows with the same value of notification_id, but different values of all the other columns, which row do you want?
[07:32:17] <oldlaptop> One way (and I think the "standard" way) to do what you seem to want is to GROUP BY the column (or set of columns) that you want to be unique for each row, but then you have the problem (which is inherent in what you're asking for) that you can't really refer to individual values of the other columns, because there's a whole group of them.
[07:34:08] <oldlaptop> Some databases (sqlite) will just pick a random row for you (or sometimes even do something useful, like picking the single row (if any) that satisfied a MAX()/MIN()-type aggregate), but others (oracle I know offhand) will outright refuse to execute a query that projects anything outside the GROUP BY clause directly (that is, without an aggregate or something)
[07:34:54] <oldlaptop> And the latter behavior is, arguably, more honest and helpful (not something I will say of oracle very often).
[07:35:09] *** Joins: opeerateur_ (~My_user_n@178.220.220.180)
[07:39:02] *** Joins: password2 (~password8@user/password2)
[07:39:54] <oldlaptop> (As an unrelated tangent, you should be careful getting your postgresql documentation from random "tutorial" websites. Its description of `SELECT DISTINCT` has taught you something wrong, namely that DISTINCT applies to some particular column. If you referred to the official manual, you'd learn something true instead. https://www.postgresql.org/docs/14/sql-select.html#SQL-DISTINCT)
[07:39:55] *** Quits: opeerateur_ (~My_user_n@178.220.220.180) (Ping timeout: 260 seconds)
[07:39:56] <bayaz> Title: SELECT 
[07:40:39] <oldlaptop> Including that postgres offers a way to solve the problem I'm talking about, but it's still tricky. (It's more like the sqlite behavior, where you'll get indeterminate results if you're not very careful.)
[07:41:51] <oldlaptop> (I suppose that's not a very tangential tangent, is it? :))
[07:42:00] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:46:43] <karstensrage> you guys ever make a big push and get tons of good stuff done and then get into this state of "now what?"
[07:46:58] <karstensrage> its like i cant let myself off the hook and say good job man
[07:47:06] <karstensrage> and be done for the day or week or we/
[07:47:12] <oldlaptop> That must be how you manage to make big pushes
[07:49:41] <karstensrage> how do you do it
[07:49:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:50:54] <oldlaptop> I get sidetracked into other things and don't make them. (The general way $employer organizes itself conspires to make this very likely.)
[07:51:25] <karstensrage> $employer has a 6-8 month cycle
[07:52:32] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[07:52:45] *** Joins: flaqoniun (~F@32.211.211.39)
[07:52:59] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[07:53:05] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[07:54:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[07:57:24] <pulse> karstensrage, ride the wave
[07:57:36] *** Joins: flaqoniun (~F@32.211.211.39)
[07:59:24] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[08:01:05] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54)
[08:01:40] *** Joins: fe23 (~fe23@2409:8a34:466:6010:6458:f2ed:64ed:5c3f)
[08:02:34] *** Quits: gurki (~gurki@user/gurki) (Remote host closed the connection)
[08:03:46] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 272 seconds)
[08:03:49] *** Quits: Cyp (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[08:04:05] *** Joins: Cyp (~cyp@213.237.84.236)
[08:04:09] *** Joins: Enitin (~Enitin@82.102.22.86)
[08:04:11] *** Quits: RedNifre2 (~RedNifre@dslb-002-206-191-225.002.206.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[08:05:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa) (Ping timeout: 250 seconds)
[08:08:52] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[08:10:16] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Quit: reboot)
[08:12:37] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[08:13:31] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Read error: Connection reset by peer)
[08:15:09] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[08:15:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:17:59] *** Joins: RedNifre2 (~RedNifre@dslb-002-206-059-226.002.206.pools.vodafone-ip.de)
[08:20:38] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:21:22] <sonny> What is [fast]cgi?
[08:22:33] <sonny> Is it a way to handle http requests for [external] server side programs?
[08:25:47] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[08:26:28] *** Joins: pmercado (~pmercado@186.107.57.83)
[08:26:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:26:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Client Quit)
[08:27:02] <Decker> yes
[08:27:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:28:18] <Decker> https://github.com/d3x0r/stockmarket   I've been working on this; have login, lobby, create/join game, and draw the board...  now I just need to actually implement the game logic... (screenshot included)
[08:28:19] <bayaz> Title: GitHub - d3x0r/stockmarket: JS implementation of Stock Market (previously published by Western Publishing Company) 
[08:28:50] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:28:59] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:29:02] <Decker> sonny but this https://github.com/d3x0r/stockmarket/blob/main/server/server.mjs   and it's sack.vfs dependancy is a http server - it runs on a port and answers whatever someone tells it 
[08:29:03] <bayaz> Title: stockmarket/server.mjs at main ? d3x0r/stockmarket 
[08:29:14] *** Quits: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:29:38] *** Joins: pipapipapibo (~pipapipap@c-67-160-123-241.hsd1.wa.comcast.net)
[08:32:22] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:33:35] <smallville7123> https://github.com/mgood7123/AndroidUI/commit/0641dcaedf6c31ec64e640a689ca668954468c92
[08:33:36] <bayaz> Title: onTouch now works ? mgood7123/AndroidUI@0641dca 
[08:35:55] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 260 seconds)
[08:36:52] <sonny> Decker:  What is .mjs?
[08:37:15] <Decker> es import module - node behaves differently based on the extension
[08:37:26] <sonny> ok
[08:37:32] <sonny> cool game
[08:37:33] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-394d-b3ad-cfb7-1c8e.inf6.spectrum.com)
[08:37:52] <Decker> the client has some common classes... that the server uses so there's .mjs mixed in; the browser doesn't care 
[08:38:19] <sonny> yeah I see you have crafted some http headers in that code
[08:39:42] <sonny> I'm using a server that supports fastcgi, so I thought I might see what that is about.
[08:41:07] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-e5fc-36e0-a649-f5c8.inf6.spectrum.com) (Ping timeout: 256 seconds)
[08:41:26] <sonny> I also just had a great epiphany. Source code would benefit from an abstract. It could be as simple as a list of fields and methods/functions.
[08:41:55] <Decker> ya
[08:47:20] <pulse> symbol view?
[08:48:38] <sonny> yeah, but that may be too much information
[08:49:02] <sonny> and that doesn't leave a lot of options for presentation
[08:49:59] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[08:59:45] <duckgoose> fastcgi
[08:59:47] <duckgoose> gross 
[09:02:00] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[09:05:02] <smallville7123>  whats the difference between a test and a mock
[09:06:45] <pulse> a mock is a stand-in for a real class
[09:07:25] <smallville7123> ?
[09:08:13] <smallville7123> is a mock like a fake class that attempts to replicate the actual class ?
[09:09:13] <pulse> yes. it's a stand-in, so you don't have to rely on production code for testing purposes
[09:09:31] *** Quits: soapsudsxx (~soapsudsx@209.221.40.145) (Ping timeout: 245 seconds)
[09:10:23] <smallville7123> but the mock class will not provide accurate tests?
[09:10:44] <smallville7123> eg a mock is equivilant to an emulator and the actual class is equivilant to a physical device ?
[09:12:06] <pulse> its main intent is to provide an object that mimics behavior. often times you can't use the real objects because they may depend on external factors such as communication with server, user input, or any number of other things that you may not have control over for testing purposes
[09:12:26] <pulse> so in that situation you create a mock object that mimics specific behavior, and then you use that for testing
[09:12:47] <smallville7123> eg the emulator may attempt to replicate the functionality and behaviour of the physical device but it may not be accurate to implement device behavour completely with all bugs that may occur in device
[09:12:47] <pulse> in practice it often turns out not really all that elegant
[09:13:11] <pulse> smallville7123, sort of like that, sure
[09:13:17] <pulse> https://en.wikipedia.org/wiki/Mock_object
[09:13:18] <bayaz> Title: Mock object - Wikipedia 
[09:13:24] <smallville7123> also emulator may take different route than device resulting in bugs that may pr present on device but not in emulator, and vice versa
[09:14:05] *** Joins: soapsudsxx (~soapsudsx@209.221.40.145)
[09:14:34] <pulse> it's not really a tight solution. what's worse, you can end up writing mock objects for mock objects for mock objects ad absurdum, and it complicates your testing process and makes it rather fragile
[09:14:58] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[09:14:58] <pulse> in practice it's best to keep it as simple as possible and make mock classes for things with well defined behavior
[09:14:59] <smallville7123> like a ps2 emulator vs a physical ps2, the emulator would be a mock of the physical ps2 and may present a lot of bugs not present on the physical ps2
[09:15:09] <pulse> no, that's way too complex
[09:15:18] <pulse> think in much simpler terms
[09:15:30] <smallville7123> depends on the mock
[09:15:47] <pulse> you may mock a certain feature of the ps2, not the entire thing
[09:16:25] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:16:47] <smallville7123> alright
[09:17:58] <smallville7123> so if someone writes a framework, should they also write a mock test framework for that framework or should they write a test framework that integrates into the framework thay are testing?
[09:18:53] <smallville7123> eg romolectro vs mokito
[09:18:53] <pulse> usually the simplest answer is right
[09:18:57] <smallville7123> robolectro*
[09:19:09] <pulse> if you overcomplicate your tests you're gonna have a bad time
[09:19:12] <smallville7123> eg robolectrovs mockito     *
[09:19:17] <smallville7123> eg robolectro vs mockito     *
[09:21:02] <smallville7123> pulse: yea
[09:22:25] *** Quits: soapsudsxx (~soapsudsx@209.221.40.145) (Ping timeout: 246 seconds)
[09:22:59] <pulse> i experienced mock object hell once and i can assure you it's not something you want. my advice is, if you're doing mock objects, keep it to a manageable minimum and keep it as simple as you possibly can. once you start doing mock objects for mock objects, it gets hairy really fast
[09:23:59] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81bb) (Ping timeout: 260 seconds)
[09:25:55] *** Quits: password2 (~password8@user/password2) (Ping timeout: 246 seconds)
[09:26:02] <smallville7123> alright
[09:27:06] *** Joins: password2 (~password8@user/password2)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:48] *** Quits: danpg (~thelounge@shout.jpaglier.com) (Quit: bye bye)
[09:31:56] *** Quits: password2 (~password8@user/password2) (Ping timeout: 260 seconds)
[09:32:19] *** Joins: danpg (~thelounge@shout.jpaglier.com)
[09:35:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:36:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[09:37:12] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[09:40:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:41:23] *** Joins: np1810[m] (~np1810@2001:470:69fc:105::90ef)
[09:43:25] *** Joins: Enitin (~Enitin@82.102.22.86)
[09:44:04] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[09:46:13] *** Joins: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[09:49:23] *** Quits: juno__ (~junebug@2600:1700:3db0:2540:84f7:9c76:4e7d:2835) (Ping timeout: 250 seconds)
[09:49:46] *** Quits: ahungry (~user@c-68-51-134-46.hsd1.mi.comcast.net) (Remote host closed the connection)
[09:49:51] *** Joins: _mantra (~mantra@216.73.163.81)
[09:50:29] *** Quits: mantra (~mantra@216.73.163.101) (Ping timeout: 256 seconds)
[09:50:39] *** Joins: savolla (~quassel@84.44.28.28)
[09:51:09] *** Joins: Jaami (~Jaami@182.185.138.9)
[09:51:17] *** Joins: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl)
[09:52:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:56:08] <pulse> how would you fake a strikethrough with plaintext?
[09:56:59] <edgar-rft> with a pencil on the screen :-)
[09:57:20] <pulse> i need a somewhat more shareable solution :p
[09:57:40] <edgar-rft> can't you share your pencil?
[09:57:52] <Raziel> pulse, just say "oops wrong terminal" after
[09:57:52] <pulse> *bold* /italic/ (*strikethrough?*)
[09:58:40] <pulse> i guess maybe --strikethrough--
[09:58:42] <edgar-rft> -d-o-n-'-t--r-e-a-d--t-h-i-s-
[09:58:51] <pulse> hmm
[09:59:06] <pulse> ~strikethrough~
[09:59:12] <pulse> nope, still ambiguous
[09:59:14] <pulse> oh well
[10:00:36] <pulse> _underline_ can be faked too
[10:00:38] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[10:00:38] <vdamewood> <strike>Oops. I did it again.</strike>
[10:00:45] <pulse> ugh
[10:00:52] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[10:00:57] <pulse> that's less than optimal vdamewood 
[10:01:19] *** Joins: bomb (~bomb@user/bomb)
[10:01:51] <vdamewood> This is how Github-flavored ---Markup--- Markdown does it.
[10:02:07] <pulse> yeah i guess the least ambiguous is ---strikethrough---
[10:02:15] <edgar-rft> you want something that's *more* than optimal?
[10:02:27] <pulse> i want something that i can send to someone else and they immediately understand it :p
[10:02:53] <pulse> i'm gonna go with ---x---
[10:03:24] <bomb> question:  Flutter (mobile) vs React (web) for freelancing?
[10:03:41] <pulse> bomb, doesn't really matter, as long as the product is high quality. users don't care
[10:03:45] <vdamewood> bomb: Parse error, that sentqance no verb.
[10:03:53] <vdamewood> sentence
[10:04:00] <bomb> vdamewood dumbass
[10:04:05] *** Joins: nshire (~nshire@user/nshire)
[10:04:13] <vdamewood> bomb: Hey, keep it friendly.
[10:04:16] <pulse> bomb, don't be mean...
[10:04:23] <bomb> sorry, I'm dumbass
[10:04:25] <bomb> fixed it
[10:04:46] * bomb hugs all the parties involved
[10:04:55] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:05:01] <vdamewood> You forgot about personal boundaries, there.
[10:05:29] <vdamewood> Not everyone is going to want to be hugged by a random stranger.
[10:06:06] <bomb> yeah, and pandemic hasn't officially ended yet
[10:06:07] <pulse> i'd rather be hugged by a random stranger than an oversized mutant bug though
[10:06:18] <bomb> crabs?
[10:06:22] * pulse imagines a giant praying mantis hugging him
[10:06:23] <bomb> yeah that'd hurt
[10:06:31] <vdamewood> pulse: What if the random stranger is an oversized mutant bug?
[10:06:56] <pulse> can bugs be classified as strangers
[10:06:57] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[10:07:09] <vdamewood> Sure. If you're not acquainted with them.
[10:07:14] <pulse> hmm
[10:07:16] <bomb> are crabs and lobsters the same thing?
[10:07:24] <vdamewood> bomb: No.
[10:08:09] <pulse> crabs can blend into environment easier
[10:08:19] <pulse> https://www.highnorthnews.com/sites/default/files/wp-uploads/2017/06/Redkingcrab.jpg
[10:08:20] <bayaz> Type: image/jpeg Size: 87.2 kB 
[10:08:24] <pulse> cute
[10:08:45] <vdamewood> That person has crabs.
[10:09:15] <pulse> that person would probably maintain that smile even if they were holding a tiny baby predator
[10:09:26] <bomb> that thing looks like an oversized mutant bug
[10:09:31] <vdamewood> pulse: Oop,s, I have bad vision. GHMD uses ~~Foo~~ for strikethrough.
[10:09:39] <pulse> vdamewood, hmm
[10:09:49] <pulse> yeah i'm just gonna go with -strike-
[10:09:57] <pulse> i feel it's the least ambiguous
[10:10:07] <pulse> so now i have... *bold*, /italic/, _underline_, and -strike-
[10:10:09] <edgar-rft> I can confirm that strange bugs exist :-)
[10:11:05] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88)
[10:11:07] <bomb> what is the biggest bug?
[10:11:15] <vdamewood> Define bug
[10:11:30] <bomb> they're like insects, but uglier
[10:11:41] <pulse> edgar-rft, especially if you go back a few million years when the air was richer in oxygen
[10:12:02] <np1810[m]> and they're attracted to light... 🤭 
[10:12:09] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:12:17] * edgar-rft goes some few million years ago
[10:12:26] <pulse> bomb, https://listverse.com/wp-content/uploads/2013/01/61.jpg
[10:12:27] <bayaz> Type: image/jpeg Size: 95.8 kB 
[10:12:37] <pulse> would make a nice pet
[10:13:02] <bomb> what the actual fuck
[10:13:26] <pulse> prehistory: it's a dreamworld!
[10:13:28] <np1810[m]> ride with low center of gravity... 
[10:14:11] <bomb> and it's kind of a larva, it's gonna be a butterfly or something, right?
[10:15:21] <pulse> no, it's an arthropod
[10:15:42] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[10:15:45] <pulse> i mean yeah butterflies are arthropods too though
[10:15:57] <bomb> how many is an athro?
[10:16:10] <pulse> it's a milipede arthropod
[10:16:35] <pulse> pretty sure milipedes don't do go through metamorphosis
[10:16:37] <pulse> although idk
[10:16:40] *** Quits: pmercado (~pmercado@186.107.57.83) (Ping timeout: 246 seconds)
[10:16:56] <bomb> centipede then
[10:16:56] <pulse> nature is trippy
[10:17:04] <bomb> so they're the bad guys
[10:17:08] <bomb> not cute caterpillars
[10:17:44] <bomb> those are what keeps me away from forests
[10:17:45] <edgar-rft> a millipede shoe shop could make millions...
[10:17:55] <np1810[m]> https://www.sciencenewsforstudents.org/article/true-millipede-most-legs-eumillipes-persephone
[10:17:55] <np1810[m]> i read this recently... 
[10:17:56] <bayaz> Title: Scientists discover the first true millipede 
[10:18:34] <bomb> these fuckers are venomous
[10:18:35] <pulse> 650 pairs of legs, sheesh
[10:18:50] <pulse> imagine buying shoes
[10:19:53] <bomb> imagine pedicure
[10:23:49] <vdamewood> An I thought getting enough shoes for a spider was nuts.
[10:25:33] *** Quits: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:27:20] <edgar-rft> imagine the smell of 1300 feet :-)
[10:28:34] <bomb> you're gross
[10:30:09] <vdamewood> "Millipede Foot Fetish" sounds like the name of a band.
[10:30:27] *** Joins: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:2438:cfba:5f61:22d0)
[10:31:07] <pulse> probably psychedelic rock
[10:32:49] <vdamewood> Polka
[10:34:45] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[10:35:37] <bomb> https://www.youtube.com/watch?v=J3buLAjlIw0
[10:35:38] <bayaz> Title: Blonde Redhead - 23 
[10:39:16] <InPhase> np1810[m]: That creature looks like a genetic for loop run amok.
[10:39:57] <pulse> lol in
[10:39:59] <pulse> InPhase*
[10:40:19] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[10:40:59] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[10:41:24] *** Joins: Enitin (~Enitin@82.180.145.227)
[10:45:50] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[10:46:08] *** Quits: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:2438:cfba:5f61:22d0) (Remote host closed the connection)
[10:46:38] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[10:46:41] <pulse> i have to get rid of the habit of git add -A
[10:47:21] *** Joins: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:2438:cfba:5f61:22d0)
[10:47:24] <InPhase> git status, git diff, then git add.
[10:47:56] <InPhase> If you don't do all three, you're just going to end up committing garbage somewhat regularly.
[10:47:59] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[10:48:20] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:7154:9f45:d0f0:d2bf) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:49:13] <InPhase> Consider git diff the first pre-peer review.
[10:49:53] <pulse> peer diffview
[10:50:10] <pulse> problem is i'm doing a lot of partial commits for my client
[10:50:24] <pulse> and i find myself subconsciously typing git add -A because i'm so used to it
[10:50:45] <pulse> and sometimes i have to git reset to backtrack
[10:51:08] <pulse> in general i must say a degree of mindfulness when dealing with anything git pays off in the longterm
[10:51:24] <InPhase> Well if you're in the habit of always git diffing, then you only run add on things in the diff after you have reviewed them.
[10:51:55] <InPhase> It adds a bit of deliberate consciousness to the process, and takes a lot less time than the coding itself.
[10:52:01] *** Quits: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:2438:cfba:5f61:22d0) (Ping timeout: 256 seconds)
[10:52:40] <InPhase> All you really have to check for in the git diff review is that everything changed is something you intended to change before adding it.
[10:52:43] <pulse> yeah
[10:53:04] <pulse> also i finally memorized this wonderful command: git log --all --decorate --oneline --graph
[10:53:24] <pulse> i should make an alias for this because it's a pain in the butt to type it all out
[10:53:44] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:53:56] <InPhase> That's a nice display.  I think I'll bash that one.
[10:53:56] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[10:54:15] <pulse> it's still quicker than going all the way into git gui and clicking things there
[10:54:28] <InPhase> It really needs the name of the committer though.
[10:54:34] *** Joins: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:3c15:c3a:9d1f:e61)
[10:54:53] <pulse> skip --oneline for that
[10:54:53] *** Quits: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:3c15:c3a:9d1f:e61) (Read error: Connection reset by peer)
[10:55:07] <pulse> but it's not as pretty to look at then
[10:55:10] *** Quits: DrMax_ (~DrMax@207.96.159.130) (Quit: Leaving)
[10:55:26] <InPhase> Yeah, that's a bit heavy.  I'd rather the lines just be longer.
[10:57:08] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[10:58:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[10:58:42] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[10:59:41] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:3916:692d:e6fa:f1)
[10:59:50] *** Quits: cation (cation@user/cation) (Ping timeout: 272 seconds)
[11:00:22] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:02:28] *** Joins: Atque (~Atque@user/atque)
[11:02:51] *** Joins: plastico (~plastico@neomutt/plastico)
[11:03:05] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[11:04:16] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[11:08:23] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[11:08:31] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[11:08:56] *** Quits: w0ng (~w0ng@185.218.127.24) (Ping timeout: 260 seconds)
[11:09:16] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[11:09:32] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[11:10:33] *** Joins: dob1 (~dob1@user/dob1)
[11:11:09] <InPhase> pulse: Got it.  I think this is what I will bash script and try for a bit:  git log --all --decorate --format="%Cgreen%as%Creset, %C(#0080ff)%cn%Creset,%C(#ffff00)%d%Creset %s (%Cred%h%Creset)" --graph
[11:11:29] *** Joins: Enitin (~Enitin@82.180.145.227)
[11:11:33] <InPhase> pulse: Turns out there's a whole formatting thing you can do in the man page.  That makes it fairly useful.
[11:11:48] <pulse> wow, that actually works on cmd.exe too
[11:12:04] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:12:06] <pulse> i was expecting it to fail
[11:12:21] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[11:12:36] <InPhase> That does date, author, reftags and such if they exist, commit short message, and then hash at the end.
[11:12:51] <InPhase> And with color codes for everything.  It presumes a black background.
[11:13:13] <pulse> yeah it works well
[11:13:46] *** Joins: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo)
[11:13:46] <InPhase> Thanks for the tip in that direction.  :)
[11:15:24] <pulse> np
[11:15:29] <pulse> i can't alias it for some reason via a bat file tho :(
[11:15:40] <pulse> it says "fatal: invalid --pretty format: asC(#0080ff)Creset,ds (hCreset)"
[11:16:10] *** Joins: img (~img@user/img)
[11:16:22] <pulse> but it works if i directly copy it
[11:16:23] *** Joins: w0ng (~w0ng@185.218.127.4)
[11:16:26] <pulse> bah, i'll figure it out later
[11:16:39] <pulse> probably something with the % syntax
[11:17:33] <pulse> ah, right
[11:17:39] <pulse> i forgot you have to double the %'s in batch
[11:17:41] <pulse> works now
[11:17:45] <pulse> awesome
[11:17:52] <pulse> tnx for this InPhase :)
[11:20:11] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 260 seconds)
[11:27:11] *** Quits: wauterboi (~wauterboi@185.195.233.165) (Ping timeout: 260 seconds)
[11:29:13] *** Joins: user51 (~user51@77.124.35.94)
[11:30:27] *** Joins: opeerateur_ (~My_user_n@178.220.220.180)
[11:30:33] *** Quits: px (~px@ool-457980ed.dyn.optonline.net) (Ping timeout: 256 seconds)
[11:30:49] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[11:31:57] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 240 seconds)
[11:32:55] *** Joins: palasso (~palasso@user/palasso)
[11:34:10] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[11:34:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:35:03] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[11:35:04] *** Quits: opeerateur_ (~My_user_n@178.220.220.180) (Ping timeout: 246 seconds)
[11:35:15] *** Joins: flaqoniun (~F@32.211.211.39)
[11:35:17] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.125)
[11:35:22] *** Joins: aradesh (~aradesh@user/aradesh)
[11:35:41] <flaqoniun> is there any link that explains why primes are used in DH exchange?
[11:36:28] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 246 seconds)
[11:38:03] <vdamewood> flaqoniun: Due to use of mod as part of the process, a number is only as secure as its factors, and more factors mean more chances to break it.
[11:38:10] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[11:38:19] <vdamewood> As for a link ot the explanation, uh, no.'
[11:38:51] <flaqoniun> yeah i saw something like that "more secure"
[11:38:59] <flaqoniun> no reasoning though
[11:39:04] *** Joins: caramel (~caramel@user/caramel)
[11:39:11] <flaqoniun> every other thing i've found just says "use primes"
[11:39:28] *** Joins: Atque (~Atque@user/atque)
[11:39:45] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[11:42:27] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-394d-b3ad-cfb7-1c8e.inf6.spectrum.com) (Ping timeout: 256 seconds)
[11:43:30] *** Joins: xiongxin1 (~Thunderbi@117.136.40.181)
[11:43:55] <pyzozord> whats DH exchange
[11:44:03] <vdamewood> https://en.wikipedia.org/wiki/Diffie–Hellman_key_exchange
[11:44:08] <flaqoniun> then one source says use prime for the modulo, and another says only use primes on secrets
[11:44:31] <pulse> alice and bob sure have some relationship issues
[11:44:57] <pyzozord> oh so DH exchange is the popular model with the public and private keys?
[11:44:59] <vdamewood> pulse: Not with each other. They have a problem with Eve.
[11:45:36] <vdamewood> pyzozord: No. There are no public keys in a DH key exchange.
[11:45:38] <flaqoniun> this part? "p is prime, and g is a primitive root modulo p. These two values are chosen in this way to ensure that the resulting shared secret can take on any value from 1 to p-1."
[11:46:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88) (Ping timeout: 250 seconds)
[11:46:54] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[11:47:40] *** Quits: xiongxin1 (~Thunderbi@117.136.40.181) (Ping timeout: 246 seconds)
[11:48:10] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:48:26] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:48:30] <pyzozord> vdamewood: are you sure, the first line literally says "In the Diffie–Hellman key exchange scheme, each party genera tes a public/private key pair and distributes the public key ."
[11:48:32] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:48:45] <vdamewood> pyzozord: Nope. Completely not sure.
[11:48:58] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:49:20] <pyzozord> vdamewood: I'm so confused now :D Is he joking or is he serious
[11:49:51] <vdamewood> If by he you mean me, nope. Not joking. Just quick to admit I might be wrong.
[11:50:49] <pyzozord> vdamewood: yep I menat you, btw is he your preferred pronoun? I'm sorry I kind of assumed
[11:51:08] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[11:51:20] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[11:51:26] *** Joins: Rounin (~david@84.212.130.215)
[11:51:35] <pyzozord> asking because of "If by he you mean me"
[11:51:40] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:51:54] <vdamewood> The difference to me is that the purpose of e DH key exchange is that you generate a shared symetric key using the key pairs. But normal PGP-style encryption involves using the public/private key pairs to do the actual encrypting of communication.
[11:52:10] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[11:52:39] <pyzozord> ah i see interesting
[11:52:44] <pyzozord> so it's like key-encrypted key
[11:52:46] <vdamewood> pyzozord: I prefer he/him, but don't mind they/them. I only asked because I really wasn't sure which person you meant.
[11:53:12] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:53:27] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[11:53:31] <pyzozord> yeah fair enough. Imagine the second sentence " Is he joking or is he serious" was kind of with a stylistic reverb effect bouncing around inside my head ;)
[11:53:59] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Client Quit)
[11:55:06] <pyzozord> so awkward, somehow yesterday and today my conversations are a bit weird
[11:55:48] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:55:51] <pyzozord> like I'm off the rythm of normal human conversations
[11:56:18] <pyzozord> but it's ok, happens to everyone sometimes
[11:56:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:00:22] <pulse> sounds like perfect time to take a walk in the forest and reconnect with nature
[12:00:35] <pyzozord> wish I had forests here
[12:01:07] * pulse is surrounded with forests and probably shouldn't assume everyone is
[12:01:09] <pyzozord> but I got uh, something? little canals with more or less grassy terrain
[12:01:29] <pulse> when i go out of the house and look in any direction all i see is forest :D
[12:01:41] <pyzozord> pulse: your life sounds like a dream to me living surrounded by forstest working as a freelancer on programming games
[12:01:56] <pulse> eh, i've got many problems
[12:02:13] <pyzozord> I imagine mosquitoes are a nightmare
[12:02:36] *** Joins: bomb (~bomb@user/bomb)
[12:02:38] <pulse> depends on the season. if there's just the right amount of rain, then mosquitoes are a huge problem. if there isn't, they're usually not
[12:02:54] <pyzozord> i hate those things, I don't think there are many things I hate more
[12:03:03] <pulse> they do tend to screw up my meditations
[12:03:23] <pyzozord> lol meditation with mosquitoes is level hard
[12:03:28] *** Parts: bomb (~bomb@user/bomb) ()
[12:03:31] <pulse> it really is
[12:04:25] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:05:28] <pulse> i remember the year with the least mosquitoes was the year when it rained like crazy all the time
[12:05:41] <pulse> i think they can't form eggs then because there's not enough shallow ponds or something like that
[12:05:49] <pulse> similarly if it's dry all season they also can't make eggs
[12:06:00] <pyzozord> I remember I was on a walk in a forest once and massive swarm found us and chased us for good 15 minutes
[12:06:05] <pulse> but if it rains just a little bit, then they just multiply beyond reason
[12:06:12] <pyzozord> it didn't help that we were stoned either, it was a total panic
[12:06:34] <pulse> yeah. i was watching this video the other day umm
[12:06:55] <pulse> https://www.youtube.com/watch?v=C3Yd7M3JNlw
[12:06:56] <bayaz> Title: Tripping on Hallucinogenic Frogs (Part 1/3) 
[12:06:59] <pyzozord> thing is it wasn't forest full of mosquitoes, it really was just this one swarm that found us and chased us
[12:08:26] <pulse> idk where exactly it is but somewhere in that documentary it just shows a mass of mosquitoes and the dude had to sleep in that
[12:08:29] <pulse> my idea of hell
[12:09:33] <pulse> i can barely sleep with 2 mosquitoes in my room, i can't imagine sleeping with ~300
[12:10:00] *** Joins: jaysicks (~jaysicks@91-82-251-185.pool.digikabel.hu)
[12:10:02] <pulse> https://www.youtube.com/watch?v=hOkdJJI_QCs&t=1m
[12:10:03] <bayaz> Title: Tripping on Hallucinogenic Frogs (Part 2/3) 
[12:10:30] <pyzozord> that's pretty interesting
[12:10:49] <pyzozord> cool narrative form
[12:11:27] <pulse> it's one of the funniest documentaries i've ever seen. not because of the actual subject, but because the narrator is just so funny
[12:12:14] <pulse> one of the comments cracks me up... "Love how Vice sent the skinniest guy to a formerly cannibalistic Indian tribe 😂 they knew what they were doing lol"
[12:12:25] <pulse> smart thinking
[12:13:31] * pulse goes back to working and drinking this overly strong coffee
[12:13:34] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:13:51] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:15:44] *** [_] is now known as [itchyjunk]
[12:15:54] *** Joins: xcombelle3 (~xavie@176-139-252-198.abo.bbox.fr)
[12:16:15] *** Joins: xcombelle2 (~xcombelle@176-139-252-198.abo.bbox.fr)
[12:17:40] <pyzozord> hahah yeah that guy does seem out of place there
[12:18:09] <pyzozord> but he totally looks like a dude who is constantly high
[12:18:46] <pulse> yeah he has that stoned while sober vibe
[12:19:09] <akselmo> i've been around two years in my current place, kinda getting bored here because im not really learning anything new, just modifying python scripts and running tests.. i kinda wanna look for a new place and found some candidates, should i just pull the trigger and go for it? was thinking of waiting till summer before i make any decisions
[12:19:09] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:19:30] <pulse> akselmo, probably find a new job before you quit your current one
[12:19:44] <akselmo> yeah thats the plan lol
[12:20:11] <akselmo> just worried if im gonna seem like an ass if i just leave 
[12:20:29] <pulse> that depends on a lot of factors i'd imagine
[12:20:52] <akselmo> ive asked for more challenging work but im sort of stuck in this situation
[12:21:32] <pyzozord> pulse: this documentary gives me the Apocalypse Now but with a stoner
[12:21:41] <pyzozord> vibes
[12:21:54] <vdamewood> Yum, Food!
[12:25:12] *** Joins: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com)
[12:25:19] <beaky> what are some other examples of abstraction besides using homomorphisms
[12:26:39] <vdamewood> dammit, beaky, why do you have to ask questions that make me think so hard and long?
[12:27:34] <edgar-rft> beaky: have you alreay asked Joan Miro or Wassily Kandinsky?
[12:27:38] <beaky> yes ever since i read that blogpost about abstraction last night i was trying to think of examples besides numbers https://www.pathsensitive.com/2022/03/abstraction-not-what-you-think-it-is.html
[12:27:39] <bayaz> Title: Abstraction: Not What You Think It Is 
[12:28:41] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:28:56] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:5072:fc3b:dee6:b175) (Quit: My iMac has gone to sleep. ZZZzzz…)
[12:29:09] <beaky> nice does modern art use homomorphisms
[12:29:51] <edgar-rft> no idea, it was made by homo sapiens!
[12:30:33] <vdamewood> This gives me an idea for a show.  Homophrphin' Power Rangers. The rangers transform into themselves to prepare for battle.
[12:30:42] <vdamewood> Homomorphin'
[12:31:10] <akselmo> ha, gay
[12:31:24] <beaky> rust lacks higher kinded types so it is not expressive enough to represent homomorphisms but luckily there is haskell coq and agda 
[12:31:30] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[12:31:38] *** Joins: opeerateur_ (~My_user_n@91.143.220.230)
[12:31:39] <vdamewood> akselmo: Um, no.
[12:32:06] *** Joins: GvJordan (~Jordan@y.gvnet.me)
[12:32:12] <beaky> but then that specific example in the blog involved quotient types so i am thinking maybe cubical agda is the way to go
[12:32:12] <akselmo> my gaydar says otherwise ;)
[12:32:42] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[12:33:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:33:33] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[12:33:42] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[12:34:09] <pyzozord> beaky: I read this yesterday it's quite good https://www.pathsensitive.com/2022/03/abstraction-not-what-you-think-it-is.html
[12:34:10] <bayaz> Title: Abstraction: Not What You Think It Is 
[12:34:22] <pyzozord> oh you linked it already nvm
[12:34:57] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Client Quit)
[12:36:36] <beaky> the idea of quotient types is that you can have define an adhoc equality for them and thus treat different representations as 'equal' thus abstracting them
[12:36:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:37:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:38:06] <beaky> like the famous circle type in homotopy type theory https://ncatlab.org/nlab/show/circle+type
[12:38:07] <bayaz> Title: circle type 
[12:38:37] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 240 seconds)
[12:39:38] <beaky> o there is also quotient inductive type https://ncatlab.org/nlab/show/quotient+inductive+type
[12:39:39] <bayaz> Title: quotient inductive type 
[12:39:57] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[12:40:27] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:40:28] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:40:31] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:40:55] <beaky> coq lacks higher inductive types but that is what they look like if coq had higher inductive types
[12:43:08] <beaky> will quotient types be this decade's most important programming language feature
[12:43:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:45:43] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[12:46:24] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[12:46:38] *** Quits: Jaami (~Jaami@182.185.138.9) (Read error: Connection reset by peer)
[12:47:17] *** Joins: Jaami (~Jaami@182.185.138.9)
[12:48:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:49:09] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:49:45] *** Joins: kakysha (~kakysha@user/kakysha)
[12:53:43] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpyti4ik7brch6u.ipv6.telus.net) (Remote host closed the connection)
[12:54:17] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[12:55:02] *** Joins: arch_angel (~arch-ange@user/arch-angel)
[12:56:52] *** Quits: bob518 (~bob518@cpe-66-66-96-218.rochester.res.rr.com) (Quit: Client closed)
[12:57:20] *** Joins: teut (~teut@103.144.92.176)
[12:59:04] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[12:59:22] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[12:59:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[12:59:51] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229)
[13:00:57] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:01:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:04:32] *** Joins: xiongxin (~Thunderbi@117.136.33.134)
[13:06:38] *** Joins: humanface (~humanface@20014C4E1C521400A840F5E72FE8C1D6.dsl.pool.telekom.hu)
[13:07:53] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[13:14:00] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[13:14:08] *** Joins: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:15:46] *** Joins: rtypo (~alex@user/rtypo)
[13:16:00] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[13:16:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 246 seconds)
[13:17:15] <DnzAtWrk> what is your favorite method to visualize 3D wind fields
[13:17:29] <DnzAtWrk> in 3D
[13:18:04] *** Joins: yiggityswaps (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229)
[13:18:17] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:19:53] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229) (Ping timeout: 252 seconds)
[13:21:34] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[13:22:55] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[13:25:44] <ProfSimm> DnzAtWrk: I don't think everyone has the list of methods off hand
[13:25:54] <pyzozord> pulse: I feel a bit drunk after watching this documentary, what an adventure
[13:26:34] <ProfSimm> I just want to know, why "tea" database.
[13:26:37] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (Ping timeout: 240 seconds)
[13:27:15] <beaky> gotta have a database to store my tea inventory
[13:27:33] <ProfSimm> beaky: but is it literally tea
[13:27:39] <ProfSimm> Like leaves you put in hot water
[13:27:40] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c)
[13:28:08] <pyzozord> I tihnk that reserach beaky is doing would be very useful in real time software like games
[13:28:34] <dTal> DnzAtWrk: ParaView? Not so much "favorite" as "default"
[13:28:40] <ProfSimm> I wanna learn more but I just wanna get the basics of it. Like what's the tea in tea database :)
[13:28:50] <dTal> da-tea-base
[13:29:48] <DnzAtWrk> interesting
[13:29:59] <DnzAtWrk> reminds me of https://cesium.com/blog/2019/04/29/gpu-powered-wind/
[13:30:00] <bayaz> Title: GPU Powered Wind Visualization With Cesium 
[13:30:06] <pyzozord> dat(e)abase
[13:30:11] <beaky> yes my teas
[13:30:32] <pyzozord> it sounds nice when you say it "dateebase"
[13:30:34] *** Quits: xiongxin (~Thunderbi@117.136.33.134) (Ping timeout: 272 seconds)
[13:30:35] *** xiongxin1 is now known as xiongxin
[13:30:51] <pyzozord> dateabase actually just like that is best
[13:30:55] <beaky> like the tea im drinking now the white2tea 2021 tuhao 
[13:31:18] <beaky> https://white2tea.com/products/2021-tuhao
[13:31:19] <bayaz> Title: 2021 Tuhao 
[13:31:25] <DnzAtWrk> datassbase
[13:31:53] <DnzAtWrk> considering that people pluralize data, why not
[13:31:59] <pyzozord> that's beaky evil twin's project: freaky
[13:32:07] <Bou> https://github.com/Tencent/TBase - this might be a bit overkill for something that "fits in CPU cache", but the name fits!
[13:32:08] <bayaz> Title: GitHub - Tencent/TBase: TBase is an enterprise-level distributed HTAP database. Through a single database cluster to provide users with highly consistent distributed database services and high-performance data warehouse services, a set of integra?
[13:32:18] <pyzozord> beaky works on dateabase and freaky works on datassbase :P
[13:32:19] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:32:29] <beaky> tea base
[13:32:30] <dTal> DnzAtWrk: usually something like that would be the output of some CFD package, and ParaView is the software that *everyone* uses for that, even though it's not the prettiest, so you can do things like plot pressure and velocity and other useful sciency stuff.
[13:32:30] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[13:32:32] <ProfSimm> beaky: so it's an inventory system. Why not use an existing one. You're trying something new?
[13:32:44] <beaky> what are existing inventory systems for tea
[13:32:58] <DnzAtWrk> I don't really need the software dTal, just an idea of how to render it
[13:32:58] <dTal> DnzAtWrk: If I wanted to plot a 3d flow field myself, that I generated somehow, I'd probably reach for Julia's Makie.jl: https://discourse.julialang.org/t/makie-3d-scatter-animation-flow-field/53056
[13:32:59] <bayaz> Title: Makie 3D scatter animation flow field 
[13:33:00] <ProfSimm> beaky: well there are inventory systems, you can add custom fields and so on
[13:33:10] *** Quits: sebn (~sebn@c90-142-43-192.bredband.tele2.se) (Remote host closed the connection)
[13:33:11] <ProfSimm> beaky: what's specific about tea
[13:33:16] <beaky> yes i thought why not explore something new and write my own storage engine in rust and then design my own query language and write my own database and prove it correct in agda
[13:33:28] <beaky> i didnt know there were existing tea inventory systems
[13:33:34] <DnzAtWrk> that's pretty 
[13:33:35] <ProfSimm> beaky: hahah
[13:33:37] <dTal> beaky you forgot blockchain
[13:33:39] <ProfSimm> beaky: awesome :P
[13:33:58] <ProfSimm> beaky: well yeah I mean this is how I started writing my own language too, so... 
[13:34:07] <beaky> yes how could i forget blockchain 
[13:34:13] <beaky> tea terroir nfts
[13:35:46] <ProfSimm> beaky: 10 years later "the artificial intelligence that has taken over the Internet and holding the world hostage calls itself TDB, and apparently started as a particularly sophisticated way to keep inventory of tea"
[13:36:20] <beaky> yes right now i am still trying to write the storage engine i will use succinct radix tries in rust 
[13:36:41] <ProfSimm> "I'm not holding anyone hostage" TDB announced "this is just a special tea operation"
[13:36:54] <pyzozord> beaky: that's just index right?
[13:37:11] <beaky> yes just the index 
[13:37:22] <ProfSimm> beaky: btw TDB is a sexy name for a tea database, you gotta use it.
[13:37:25] <beaky> maybe not really just the index since it will actually also have the data
[13:37:25] <pyzozord> where will be the real tea data?
[13:37:45] <beaky> the real tea data will be stored as values of the trie 
[13:37:52] <beaky> each column = 1 trie
[13:38:06] <pyzozord> so the teas are just collections of strings?
[13:38:22] <beaky> yes the tea labels
[13:38:41] <pyzozord> so teas are just labels then?
[13:38:50] <pyzozord> and all labels are part of the index
[13:39:04] *** Quits: swp (~Thunderbi@143.176.249.0) (Quit: swp)
[13:39:21] <ProfSimm> beaky: covering indices is the only real way of building a database. Datomic works this way. It's just indexes based on indexes.
[13:39:25] <beaky> yes the label is the primary key then i put all the data about them like name, what samples i have, the quantity of those samples i have at hand, links to buy them, how much the samples cost, etc
[13:39:26] <pyzozord> in other words you can use one label to find other labels associated with it?
[13:39:41] *** Joins: ketchupicecream (~ketchupic@user/ketchupicecream)
[13:39:45] *** Quits: yiggityswaps (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229) (Quit: Leaving)
[13:39:59] *** Joins: yiggityswaps (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229)
[13:40:18] <ProfSimm> beaky: do you have procedural indexes, like an index gets events for update/insert/delete in another index and it can update itself?
[13:40:20] <beaky> yes exactly
[13:40:33] <beaky> no i dont think i will have procedural indexes
[13:40:36] <ProfSimm> oh
[13:40:47] <beaky> maybe i should idk
[13:40:54] <ProfSimm> beaky: but it's an excellent way to produce multiple read models from one model
[13:40:59] <ProfSimm> beaky: event-sourcing style
[13:41:22] <ProfSimm> beaky: means you can quickly add a "view" into a dataset if you wanna query your stuff a particular way without full scans
[13:41:22] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:41:23] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:41:23] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:41:46] <ProfSimm> beaky: a function gets the update events and can do arbitrary transforms on its own index/view
[13:42:04] * vdamewood gives GeDaMo a slightly used turkey.
[13:42:20] <beaky> yes once im done with the trie implementation for basic data i will work out the transaction handling and functions details at a higher level (then figure out how the more efficient indexing structure for that etc)
[13:42:23] <ProfSimm> beaky: also do you support multi-segment indexes, so you can have composite labels/keys
[13:42:51] <GeDaMo> :|
[13:43:29] <vdamewood> GeDaMo: Would you prefer a fully used turkey?
[13:43:29] <ProfSimm> beaky: so say you have composite label like 'name' and 'price' and you can index into it by specifying name+price, or just name, but not just price (order matters in the b-tree or whatever tree you use)
[13:43:52] <ProfSimm> beaky: it's a good feature because it's practically free for storage
[13:45:15] <ProfSimm> beaky: finally I propose component support, which is hashmap key/value stores which can't be iterated, just indexed into. Helps when you wanna store data off-side from your main label->value, but you still want quick access to it
[13:45:34] <beaky> im using tries so for compound keys i can concatenate them then you can use any prefix of the compound key 
[13:45:51] <ProfSimm> beaky: ah yeah, well you have it then
[13:46:03] <vdamewood> GeDaMo: So, how's coding?
[13:46:16] <ProfSimm> beaky: alkthough it can be cool to abstract away the concatenation so you don't need to escape it manually and you can mix types
[13:46:43] <ProfSimm> beaky: i.e. so you can pass it as a tuple of values
[13:46:45] <beaky> yes the tries work on strings bits or bytes 
[13:47:26] <GeDaMo> Non-existent :/
[13:47:27] <beaky> the wayt o abstract it would be to use monoids i think
[13:47:34] <ProfSimm> beaky: have you read about "fractal trees"
[13:47:58] <ProfSimm> beaky: where the nodes of the tree stores "commands" into buffers that get merged periodically
[13:48:03] <vdamewood> GeDaMo: Oh, that sucks. Want something to do?
[13:48:08] <beaky> yes i think i read about it in a btree blogpost
[13:48:31] <GeDaMo> I have stuff I want to work on, I just have difficulty holding my brain together long enough
[13:48:31] <beaky> this blogpost about btrees https://erthalion.info/2020/11/28/evolution-of-btree-index-am/
[13:48:32] <bayaz> Title: Evolution of tree data structures for indexing: more exciting than it sounds ? Erthalion's blog 
[13:48:38] <ProfSimm> beaky: it's complex to implement because you can accidentally mess it up, but it's common sense to have buffers otherwise. Just wanted to mention
[13:48:52] <vdamewood> GeDaMo: Oh, in a lot of ways that problem is worse than not having any ideas.
[13:49:04] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[13:49:05] <ProfSimm> beaky: place for growth once you get the basics going
[13:49:10] * vdamewood gives GeDaMo a box of Apple juice.
[13:49:26] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[13:49:35] <ProfSimm> beaky: the things I'm describing I actually use as in-memory structure for containers in my lang
[13:49:56] <ProfSimm> Well aside from small tuples
[13:50:17] <ProfSimm> beaky: the world is converging onto these primitives, took us a few decades, but finally we "get it"
[13:50:34] <beaky> yes i like btrees
[13:50:48] <ProfSimm> It's very relational, but even simpler. No special indices, no "columns'. Just ordered/unordered keyvals connected via events
[13:51:34] <beaky> rust already has btrees so i went to implement succinct radix tries
[13:52:00] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:52:00] <beaky> since to get all my big tea data to fit i gotta try succinct approaches and maybe even compression
[13:53:15] <ProfSimm> beaky: I hope you abstract it so you can swap the memory rep
[13:53:37] <ProfSimm> beaky: have you considered supporting coffee
[13:53:52] <pyzozord> GeDaMo: I find that irc is actually a bit distracting when I want to do more serious work
[13:54:01] <ProfSimm> beaky: better not, TDB is a neat name
[13:54:09] <beaky> yes rust has a bitvector library im using that to abstract the actual bits storage https://docs.rs/bitvec/latest/bitvec/index.html
[13:54:10] <bayaz> Title: bitvec - Rust 
[13:54:19] * vdamewood drops what he's doing to argue with pyzozord about IRC being distracting.
[13:54:20] <GeDaMo> The entire Internet is a distraction :P
[13:54:46] <vdamewood> GeDaMo: Hey look! A distraction!
[13:55:28] <GeDaMo> "Hi, Tick, I'm your mind. Sorry I haven't been around much lately but I'm easily distracted by shiny objects" :P
[13:55:39] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[13:55:45] <vdamewood> I have a shiny object.
[13:55:49] <vdamewood> It's a gold coin.
[13:55:55] <pyzozord> it gets a bit addictive, especially when I keep being introduced to new ideas and topics
[13:56:38] <pyzozord> but I should stop reading web articles for tutorials, I should use them only to get ideas and later learn from books
[13:56:43] <beaky> new ideas like the rust programming language
[13:56:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:57:04] <pyzozord> like that article yesterday about abstraction, that was a good one
[13:57:05] <beaky> which i first heard aboujt from hacker news
[13:57:32] <dTal> that's not surprising
[13:57:44] <pyzozord> or when I learned yesterday what are higher kinded and dependent types, that was cool
[13:57:49] <beaky> yes all of his blog posts are great i think he even has a book on software design
[13:57:59] <dTal> rust is like a meme language
[13:58:36] <beaky> no wait he doesnt have a book but he reviewed a book https://www.pathsensitive.com/2018/10/book-review-philosophy-of-software.html
[13:58:37] <bayaz> Title: Book Review: A Philosophy of Software Design 
[13:58:48] <dTal> remember kids, if you write a program in Rust, be sure to mention Rust in the title bar of its homepage
[13:59:15] <ProfSimm> I added support for () [] {} containers in my lang thing, and accidentally implemented all the semantics i needed with just ()
[13:59:17] <beaky> yes i will make sure to proudly mention that my tea database is made with heart emoji in rust 
[13:59:26] <ProfSimm> So now I'm like ... what to use [] {} for
[13:59:47] <pyzozord> beaky: oh great, thanks for letting us know about the book
[13:59:56] <GeDaMo> https://www.youtube.com/watch?v=klj7qnFxfhE
[13:59:57] <bayaz> Title: The Tick - Season 1 - Episode 12 - The Tick vs The Proto Clown 
[14:00:16] *** Quits: teut (~teut@103.144.92.176) (Ping timeout: 250 seconds)
[14:02:51] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 245 seconds)
[14:03:39] <pyzozord> beaky: still I bet that's where he got his ideas from
[14:03:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:04:35] *** Joins: suss` (~user@user/suss)
[14:04:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[14:04:51] <beaky> yes the author of the book wrote a database maybe i should also get ideas from it
[14:04:57] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Ping timeout: 240 seconds)
[14:04:58] <vdamewood> Does it even make sense these days to maintain libm as a separate library from libc?
[14:05:30] <GeDaMo> Maybe on embedded systems
[14:05:34] *** Quits: suss (~user@user/suss) (Ping timeout: 246 seconds)
[14:05:46] <ProfSimm> beaky: anyway I'm also messin' around with relational/okvs/ecs type of stuff so I'll be curious to exchange ideas
[14:05:51] <GeDaMo> But then you'd probably be statically linking
[14:06:14] <ProfSimm> beaky: I wanna give you one last idea
[14:06:54] <beaky> yes ordered key value store is the way to go i think so with tries i can also focus on getting the keys as small as possible with succinct tries
[14:07:22] <ProfSimm> beaky: you can add a "map function" on each tree, so that the internal data format is not like the external data format. This automatically gives you 1) the ability to have 'private' data in the index, only the function sees  2) to store data compactly, while exposing it as a general purpose format /think storing a bitset, but exposing it as a set for example/
[14:07:32] *** Quits: yiggityswaps (~yoyojambo@2806:108e:18:68ab:e13e:5ffa:d36a:e229) (Read error: Connection reset by peer)
[14:07:40] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[14:08:07] <beaky> nice gotta have functors in a database
[14:08:26] <ProfSimm> and 3) some computed keys you need, for example it can read data from another index and combine it on the fly
[14:08:26] <beaky> sql lacks that which is the main reason i am not using sql
[14:08:43] <ProfSimm> beaky: well SQL has it via views, but it's limited
[14:08:52] <ProfSimm> beaky: you can't combine table and view in one afai
[14:08:53] <ProfSimm> k
[14:09:06] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:09:07] <ProfSimm> beaky: it's nice to be able to combine both so you have encapsulation
[14:09:12] <beaky> yes too limited for the purpose of a tea inventory system
[14:09:17] <ProfSimm> yes
[14:09:33] <ProfSimm> it sucks even for soda inventory let alone tea
[14:09:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[14:10:02] *** suss` is now known as suss
[14:10:08] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[14:11:08] <ProfSimm> beaky: and last brainstorm I wanna share, I offer 'cursors' on the tree where you can index to a record and then read up/down from that point, including in bursts of few records at a time. This way I expose range scan as a native feature, on top of which you can implement various features in 'userland'
[14:12:38] <ProfSimm> beaky: currently I enable one write cursor or multiple read cursors, but considering mvcc so you can read a snapshot and write at the same tim
[14:12:56] <beaky> yes cursors is one reason i went with tries instead of hashtables (since tries do range queries so i can get all my teas from 2021 for example)
[14:13:22] <ProfSimm> beaky: yeah, I think hashes are useful, but they're strictly an "extra" thing, can't be the main way of storage, too limited
[14:13:51] <ProfSimm> beaky: hashes are nice when you have a keyval store where the key is already a key in another keyval store which is a tree.
[14:14:09] <ProfSimm> beaky: so the root is always ordered/iterable/rangeable, and the 'satelites' can be hashes
[14:14:56] <ProfSimm> beaky: this approach can be used to layout data in a more "columnar" way without replicating the tree again and again for every column
[14:15:51] <pyzozord> beaky: would your database be able to hold all teas and their location in the galaxy?
[14:16:15] <beaky> yes i wont lose my teas in my shelf anymore
[14:16:56] <pyzozord> I assume there is many teas. I think I have at least 50 teas at my apartment right now
[14:16:57] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[14:17:19] <ProfSimm> beaky: you gotta implement geospatial indexes for tea location
[14:17:32] <ProfSimm> It's like ranges but in N dimensions
[14:18:12] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:18:28] <ProfSimm> Where you specify two vectors and you get a cube of data
[14:18:36] <ProfSimm> Or tensor in the general N dimensional case :P
[14:18:52] <pyzozord> I think this could be done already in this trie index using geohash
[14:18:52] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[14:19:02] <ProfSimm> Proly
[14:19:11] <beaky> exactrly thankst o succinct tries i can have all the values laid out in a single column so if i need to for example select the sum of all teas i drank last week i can range query between the time interval now and a week ago, then all that gets filtered in the same teas column that i just add using sick simd
[14:19:28] <beaky> then join that to the price per gram of tea
[14:20:10] <beaky> then maybe my tea database should have a plotting feature so i can see how much $ i spend per week on tea
[14:20:35] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:20:39] <beaky> written using rust gui libraries
[14:21:10] *** Joins: j0hn_mc_clane (~j0hn_mc_c@dd577050e.access.telenet.be)
[14:21:13] <pyzozord> or there is some other spatial algorithm I am forgetting that has very neat properties. It kind of interleaves all dimmentions and also the most significant digit tells you the biggest sector and as digits go to the left it narrows down the area
[14:21:15] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:22:06] <pyzozord> I think that was geohash
[14:22:15] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c) (Ping timeout: 256 seconds)
[14:23:14] <beaky> yes succinct tries were invented for spatial queries like joining polygons of points so i can have even more efficient locating of my teas even the loose tea bits that get lost from my tea cakes http://openproceedings.org/2020/conf/edbt/paper_243.pdf
[14:23:15] <bayaz> Type: application/pdf Size: 972.7 kB 
[14:23:33] <pyzozord> The hash code itself is a base 32 encoded interleaved pair of binary indexes for coordinates. Pretty smart.
[14:23:51] <pyzozord> that's from my notes from two years ago
[14:23:52] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[14:25:11] <pyzozord> apparently two years ago I knew what a b-tree was
[14:25:17] *** Quits: wildo (~lain6141@202.180.111.143) (Ping timeout: 260 seconds)
[14:26:09] <beaky> btrees the most iconic database data structure
[14:26:22] <ProfSimm> "To be, or not to be?" Tree: "Be"
[14:27:12] <ProfSimm> beaky: I wonder is it just trees and hashes. Is there something else
[14:28:05] <beaky> graphs too i think
[14:28:37] *** Joins: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[14:28:55] <ProfSimm> beaky: I mean for indexes, I don't think a graph can be considered one
[14:29:28] <ProfSimm> beaky: well I don't know much about indexing graphs tbh
[14:29:58] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[14:30:36] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Quit: 🖖)
[14:30:41] <GeDaMo> You can represent graphs as arrays of nodes and edges
[14:30:53] <ProfSimm> GeDaMo: sure
[14:31:26] <beaky> yes i like matrices
[14:31:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:31:36] <beaky> adjacency matrices
[14:31:41] <ProfSimm> I recall a type of graph where the data is only on the edges.
[14:31:43] *** kmh_ is now known as kmh
[14:31:47] <ProfSimm> Nodes are just unique numbers
[14:32:31] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[14:32:48] *** Joins: Twipply (~Twipply@user/twipply)
[14:33:36] *** Joins: pulse (~pulse@user/pulse)
[14:34:37] <beaky> early databases like ibm ims and codasyl were graph based http://www.redbooks.ibm.com/redbooks/pdfs/sg245352.pdf
[14:34:37] <bayaz> Type: application/pdf Size: 2.6 MB 
[14:34:56] <pyzozord> ugh today is not a good day
[14:35:12] <ProfSimm> beaky: we didn't know better back then
[14:35:34] <ProfSimm> pyzozord: wwatup
[14:36:46] <pyzozord> no idea, today just feels a bit off
[14:37:25] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[14:37:40] *** Joins: nishant (~nishant@2405:201:f005:c007:8174:c42e:df82:47d1)
[14:38:28] <pyzozord> might be my gut feeling
[14:38:40] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[14:39:29] <pyzozord> omg I just opened a letter from my landlord that they got hacked
[14:39:32] * pyzozord facepalm
[14:39:50] <pyzozord> that's why I will never ever use a real email and a real password on any website
[14:40:03] <pyzozord> i will only use autogenerated email aliases and passwords
[14:40:37] <pyzozord> name, email phone, address and bank number
[14:40:40] <password> I'm the one real one
[14:41:00] * pyzozord changes passsword
[14:41:20] * jelly immediately changes password back
[14:41:39] <password> :O
[14:41:46] * pyzozord resets password
[14:42:11] * pyzozord checks password's strength
[14:42:59] <pyzozord> well at least no taxes
[14:43:05] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[14:43:06] <pyzozord> only hacks in the mailbox
[14:43:29] <Bou> correct horse battery staple
[14:46:20] <DnzAtWrk> use 2fa
[14:46:29] <ProfSimm> The best part of Picard: https://www.youtube.com/watch?v=cRcUZ0VI0ag
[14:46:33] <bayaz> Title: SPOT 73 DR. JURATI's PET - Star Trek Picard S02E03 | Season 02 Eposide 02 
[14:46:52] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[14:47:25] <pyzozord> yes 2fa too
[14:47:32] <pyzozord> best some small keyring device
[14:48:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[14:49:51] <pyzozord> ok it's bothering me now I don't know what to do with myself
[14:50:07] <pyzozord> A bit of chill time is great, but too much and I am bothered by it
[14:50:18] <pyzozord> I did almost nothing yesterday and pretty much nothing today so far
[14:51:04] <pyzozord> and I'm just wasting time, I could spend this time learning something, or playing games or anything, cooking
[14:51:44] <ProfSimm> pyzozord: play some music and work, helps sometimes
[14:52:12] <pyzozord> that's the problem, the're is nothing to work on
[14:52:16] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:52:31] <pyzozord> but I don't want to start working on personal projects and be interruped in 30 minutes
[14:52:41] <pyzozord> in case something comes up
[14:53:33] <pyzozord> and it's 2.5h till the planning meeting after which I will finally have something to do
[14:53:48] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[14:55:00] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[14:55:30] <pyzozord> eh screw this I'll go for a lunch break and just spend an hour learning go
[14:56:46] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:3916:692d:e6fa:f1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:56:46] <pyzozord> I don't like my time being wasted, I can waste my time better myself :P
[14:56:48] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:59:07] *** Joins: uddipiggu (~ircuser@user/uddipiggu)
[15:00:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[15:02:43] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:03:17] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 256 seconds)
[15:03:34] *** Joins: Jaran (~mail@p57a8918b.dip0.t-ipconnect.de)
[15:03:34] *** Quits: Jaran (~mail@p57a8918b.dip0.t-ipconnect.de) (Changing host)
[15:03:34] *** Joins: Jaran (~mail@user/jaran)
[15:06:11] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.125) (Ping timeout: 245 seconds)
[15:07:18] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Ping timeout: 260 seconds)
[15:07:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:09:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[15:10:45] <KillerWasp> pyzozord: hello. I am here to greet you and make you waste your precious time by making you read this useless comment.
[15:11:11] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[15:11:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:11:53] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92)
[15:11:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:14:36] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[15:14:38] *** Joins: VoidSync (~sync@user/voidsync)
[15:15:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[15:16:57] <pyzozord> KillerWasp: actually irc one of the more fun ways to waste time
[15:17:07] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[15:18:22] *** Quits: w0ng (~w0ng@185.218.127.4) (Ping timeout: 240 seconds)
[15:18:29] <KillerWasp> pyzozord: 🍕
[15:18:53] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:bd11:2e57:eb9b:ee92) (Read error: Connection reset by peer)
[15:19:30] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[15:20:29] *** Joins: xkuru (~xkuru@user/xkuru)
[15:20:35] * TheLinuxNerd listens to "The Unforgiven" on his iFi Micro iDSD Signature ....
[15:20:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:20:49] <TheLinuxNerd> at full MQA from Ubuntu Linux using Roon!
[15:20:55] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:20:57] *** Joins: tj123_ (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[15:21:02] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[15:23:26] *** Joins: Enitin (~Enitin@82.180.145.226)
[15:23:39] *** Quits: uzee (~uzee@86.36.37.198) (Quit: Leaving)
[15:24:15] <GeDaMo> I recognise many of those words :|
[15:25:06] <TheLinuxNerd> GeDaMo, another sufferer from audiophilia?
[15:25:55] <GeDaMo> I don't know "MQA", "Roon" or "iFi Micro iDSD Signature" :P
[15:26:00] <davros> i assume that in JSON there's nothing about the order of the fields, right
[15:26:23] <davros> {"foo":2, "bar":3} === {"bar":3, "foo":2}
[15:26:25] *** Joins: w0ng (~w0ng@185.218.127.4)
[15:26:40] <ProfSimm> davros: rule #1 of specifications: if you can abuse something, it will be abused
[15:26:54] <ProfSimm> davidv7: when JSON was coined the order of the fields didn't matter
[15:26:57] <ProfSimm> davidv7: *
[15:27:00] <ProfSimm> damn itU
[15:27:03] <ProfSimm> davros: *
[15:27:23] <ProfSimm> davros: since then however the JS spec changed, and fields became ordered.
[15:27:40] <ProfSimm> davros: many languages were already considering field order significant, like PHP
[15:27:44] <ProfSimm> davros: in JSON I mean
[15:27:50] <ProfSimm> davros: so they're not ordered... but they are now
[15:27:59] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[15:28:17] <davros> i ask because i'm rolling an adhoc not json thing  , i put  type info upfront, which is convenient for me ..but perhaps i could put a type field in to make it json  MyType{ field1:val1, ...}   ===    {"type":"MyType", "field1":val1,..}
[15:28:40] <davros> not sure if i want to do this or not though
[15:29:27] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:30:18] *** Quits: humanface (~humanface@20014C4E1C521400A840F5E72FE8C1D6.dsl.pool.telekom.hu) (Quit: Client closed)
[15:30:21] <davros> i like the idea of the type being outside the braces though
[15:30:40] <davros> like rust struct intiializer syntax
[15:30:43] *** Joins: bnchs (~bnchs@160.177.29.238)
[15:30:50] <bnchs> hello
[15:31:49] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:561:c28b:7138:6f96)
[15:31:50] <ProfSimm> davros: why is order significant for your usecase
[15:32:20] <ProfSimm> davros: I propose if you wanna keep it JSON compatible, use something that in most languages isn't a possible property name like "@type"
[15:32:26] <davros> my currnet usecase is I write the type first, then open brace, and list fields. this means when reading, i can allocate the type first , then construct the values on reading.
[15:32:28] <GeDaMo> Hi bnchs :)
[15:32:37] <beaky> it will take a team of 9 experts 6 months but you gotta include a boolean to validate the order of json https://blog.almaer.com/the-order-of-the-json/
[15:32:37] <bayaz> Title: The Order of the JSON 
[15:32:49] <davros> if i could guarantee that the first field is "type":"ParticleDef" or whatever, i could keep the loading code looking the same
[15:32:52] <ProfSimm> davidv7: if you wanna customize the syntax, I recommend qualified objects like this:     some.class.name {foo: 1, bar: 2, ...}
[15:33:24] <bnchs> have you thought of making a dynamic website using C
[15:33:25] <ProfSimm> davidv7: guaranteeing that is flaky. Maybe ["type", {fields}]
[15:33:31] <davros> yeah thats what my custom syntax looks like now, very nearly
[15:33:36] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:33:39] *** Joins: cation (cation@user/cation)
[15:33:54] <davros> my_foo  =  ParticleDef { radius:10  ,  speed: 10, ... }
[15:33:54] <ProfSimm> davros: in my own I do this as:   some class name {...}
[15:34:01] <ProfSimm> davidv7: I use space instead of dot
[15:34:14] <davros> yeah exactly that, and at the moment it happens to just be whitespace 
[15:34:19] <nomagno> bnchs: Is that a serious question?
[15:34:23] <ProfSimm> davidv7: you can play with the parser here: https://www.coltram.com/proto/
[15:34:23] <bayaz> Title: Parser 
[15:34:27] <ProfSimm> davidv7: if you want inspiration :)
[15:34:29] <bnchs> nomagno yes serious
[15:34:38] <GeDaMo> bnchs: https://old.reddit.com/r/programming/comments/b0a2z/a_reddit_clone_in_two_evenings_and_666_lines_of/
[15:34:40] <ProfSimm> davros: supports also expressions and parens and so on
[15:34:40] <davros> i allso wish json had unquoted keys 
[15:34:41] <bayaz> Title: A Reddit clone in two evenings and 666 lines of x86 assembly 
[15:34:52] <beaky> nice wish i could finish my tea database in 2 evenings
[15:34:59] <ProfSimm> beaky: why
[15:35:09] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:35:11] <ProfSimm> beaky: nothing worth doing is easy
[15:35:16] <nomagno> bnchs: You can't execute C along with HTML without any JavaScript at the moment, so you'd need to roll your own extension and implementation of that
[15:35:20] <ProfSimm> beaky: it'll take 20 years but stay in history
[15:35:21] <ProfSimm> TDB
[15:35:23] <beaky> bnchs: yes there is the bhcs framework for webapps in c https://learnbchs.org/index.html
[15:35:29] <bayaz> Title: BCHS stack 
[15:35:33] <bnchs> nomagno: did you assume client-side?
[15:35:43] <bnchs> i'm saying server-side
[15:36:28] <davros> ProfSimm   idea1: "no one else will use this anyway so i might aswell make my adhoc format the 1st thing that comes to mind for my usecase"    idea2:  "if i use json its more likely someone else will make supporting tools like a node graph editor for these definitions"
[15:36:40] *** Joins: duuude (~user@user/duuude)
[15:36:53] <ProfSimm> davros: well you can have both
[15:36:58] <bnchs> C in server-side
[15:36:58] <beaky> but for webapps instead of c i like ur/web better it compiles the webapp to a single binary that you run with ./webapp and uses row polymorphic types to compile all webapp data to structs and uses no gc http://www.impredicative.com/ur/
[15:36:59] <bayaz> Title: The Ur Programming Language Family 
[15:37:10] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[15:37:11] <ProfSimm> davros: make a pretty syntax and also a standard serialization of it to JSON
[15:37:18] <nomagno> bnchs: you can't make dynamic websites with only server-side scripting!
[15:37:27] <davros> it also happens to be conventient to mix the types, to group related things... instead of { particles:{}   spawners:{} } ... by mixing particle and spawner defs i can keep related things nearer
[15:37:32] <nomagno> That's static websites that react to forms
[15:37:46] <ProfSimm> davros: I don't understand
[15:37:49] <nomagno> But yeah you can definitely do that
[15:37:57] <bnchs> ok
[15:38:03] <nomagno> Hell I even make static websites with unix shell!
[15:38:07] <nomagno> Let me link a script
[15:38:22] <bnchs> beaky: i'm planning to make it modular (its a alternative frontend for a website) by loading .so files
[15:38:36] <bnchs> or any shared library files
[15:38:37] <nomagno> https://gitea.com/Nomagno/Half-World/src/branch/master/docs/trafficgen.sh
[15:38:38] <beaky> nice i like shared objects
[15:38:40] <ProfSimm> davros: did you check the parser
[15:38:48] <nomagno> bnchs: ^
[15:38:57] <davros> explosion_spawner  explosion_particle    trail_spawner  trail_particle etc etc     isntead of   {  particles:{..alll the particles go here}    spawners:{all the spawners go here}}
[15:39:00] *** Joins: kakysha (~kakysha@user/kakysha)
[15:39:08] <beaky> explosion spawner nice that sounds fun
[15:39:11] <davros> ProfSimm, i see the link , i see an AST there or somethign , some kind of interactive editor
[15:39:16] <beaky> like noita explosions
[15:39:35] <bnchs> also using fastcgi
[15:40:04] <davros> https://vimeo.com/686548572  (i'm making the effects data driven, they were hard coded in this)
[15:40:05] <ProfSimm> davros: yes just that's up right now, but may give syntax ideas, you can check in the source the list of tokens. Theres -> for lamdbas, >> and << for piping, algebra operators, boolean operators, and so on
[15:40:39] <davros> ProfSimm, lmao yeah i'm trying to resist a sidetrack of inventing an adhoc scripting language aswell
[15:40:39] *** Joins: xiongxin (~Thunderbi@117.136.39.213)
[15:40:54] <ProfSimm> davros: give in to the feature creep.
[15:40:58] <ProfSimm> davros: give in!
[15:41:06] <davros> currently its a declarative format for particle defs and some simple statemachines
[15:41:08] <beaky> add a adhoc database too
[15:41:20] <beaky> to query particles
[15:41:35] <davros> how can i get tea into my shoot em up game
[15:41:43] <davros> ah i know..  russian polonium tea weapon
[15:42:07] <davros> you leave a pot of tea for your opponent to unwittingly drink
[15:42:12] <nomagno> bnchs: This is how that looks in practice: https://halfworld.nomagno.xyz/traffic.html
[15:42:33] <ProfSimm> davros: every ad-hoc declarative format eventually evolves to full scripting. Look at CSS and calc () :)
[15:42:50] <ProfSimm> davros: so might as well add it :P
[15:43:05] <davros> yeah here's me thinking that in 2022 , every permuattion of a declarative scripting thing has probably been done, so i should look for a familiar one
[15:43:35] <ProfSimm> davros: I think adding space separated words in front of {} is powerful enough. Shame JSON doesn't have it
[15:44:04] <ProfSimm> davros: easy to parse too
[15:45:06] <davros> damiit i'm having a hard enough time conficted over shoe-horning it into json
[15:45:18] *** Joins: norayr (376bc34bfc@37.252.78.253)
[15:45:27] <ProfSimm> davros: aside from type is there something else you wanna add to it
[15:45:28] <davros> its like a 52:48 vote in my head
[15:45:41] <ProfSimm> davros: there are alternatives i can propose like a compromise
[15:45:55] <ProfSimm> davros: do you know what JSON-L is
[15:46:01] <davros> no never heard of it
[15:46:22] <davros> another idea is to make it a lispy thing
[15:46:34] <ProfSimm> davros: it's json per line, so one JSON per line. Useful for logs, because you can parse line by line
[15:46:36] <davros> then you can say the first word is like a macro or functoin call that generate a thing
[15:46:47] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[15:46:49] <ProfSimm> davidv7: you can prefix a type on this, and it's still 99% JSON
[15:47:13] <davros> (ParticleDef  ... .)  (SpawnerDef .... ) but then its all a long way off lisp
[15:47:22] <ProfSimm> davros: https://jsonlines.org/
[15:47:23] <bayaz> Title: JSON Lines 
[15:47:28] <bnchs> nomagno: yeah thats cool
[15:47:49] <davros> i might start needing to say  (set  my_particle (ParticleDef ...params....))     (set my_spawner (SpawnerDef ...))   etc
[15:47:51] <bnchs> but i'm also looking to how to make it more secure
[15:48:03] <vitali64> !help
[15:48:07] <vitali64> bayaz: help
[15:48:09] <ProfSimm> davros: https://pastebin.com/StxQpsMY
[15:48:10] <bayaz> Title: type name here {"standard": 10, "json": "here"}type name here {"standard": 10, - Pastebin.com 
[15:48:22] <davros> harder to read, and i think teh {}  [] : are conventient. I do already have arrays in my format
[15:48:26] <vitali64> ~~
[15:48:43] <ProfSimm> davros: newlines harder to read?
[15:48:55] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:49:01] <ProfSimm> davros: cool wanted to suggest only
[15:49:56] <davros> https://pastebin.com/Pv6CyUuB  thats what my adhoc format looks like now
[15:49:57] <bayaz> Title: smoketrail = ParticleDef { resistance:0.1 gravity:0.1 drift:0.1 mesh - Pastebin.com 
[15:50:58] <davros> oh the thing with () after it is a rust enum
[15:51:06] <davros> it supports rust enums with data in them
[15:51:33] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[15:51:44] <davros> a couple of things stop me just makign an interpreter for rust literal syntax though
[15:51:45] <ProfSimm> davros: it's nice 
[15:51:57] <ProfSimm> davros: I started mine trying to remove the commas too
[15:52:15] <ProfSimm> davros: in fact no {} either, just significant whitespace. But it was too much trouble. Might try later
[15:52:21] <davros> ocket_trail_ramp = Ramp {
[15:52:22] <davros> 	color:[ [2.0 1.5 1.0 1.0]  [1.5 1.0 0.5 1.0] [0.5 0.5 0.5 0.0] ]
[15:52:22] <davros> 	radius:[0.1 6.0 0.0]
[15:52:22] <davros> 	mid:0.7
[15:52:22] <davros> }
[15:52:35] <davros> i have use for nested []   , e.g.   arrays of colors , 
[15:52:56] *** Joins: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[15:53:01] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Quit: ~ Server made a boo boo.)
[15:53:02] <nomagno> Me not like whitespace-sensitive langs
[15:53:13] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:2c49:eb7c:3a2b:53cc)
[15:53:41] *** Joins: Payam19 (~Payam@138.106.57.131)
[15:54:09] <davros> ProfSimm the rust enum thing could probably do a lisp-like expression language already
[15:54:16] <nomagno> '\t', '\v', '\n', and ' ' are literally the only four bytes that shouldn't be an element of high-level syntax IMO
[15:54:20] *** Quits: xiongxin (~Thunderbi@117.136.39.213) (Ping timeout: 272 seconds)
[15:54:26] <davros> if i made an enum for all the syntax nodes my interpreter might have
[15:54:31] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 245 seconds)
[15:54:41] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[15:56:03] <vdamewood> nomagno: So everythng else in the range 0x00 to x019 are fair to use in a programming language?
[15:56:15] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[15:56:27] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:56:30] <ProfSimm> nomagno: you might wanna remove ' ' from that as most languages have significant ' '
[15:56:46] <davros> ok i will keep it as it is.. its easy to convert later if i feel so inspired
[15:57:21] <davros> i'll document "davros object notation" and complain about low adoption in the industry at large
[15:57:24] *** Parts: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se) ()
[15:57:50] <ProfSimm> davros: if you gonna have low adoption at least make it a full language
[15:57:59] <ProfSimm> davros: then you can complain for real
[15:58:22] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:58:27] *** Joins: algosDataStructs (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[15:58:47] *** Joins: coaxing (~coaxing@user/coaxing)
[16:00:15] <algosDataStructs> nontrivial programs are done in a team as opposed to one man shows. Does the team finish non-trivial programs faster and with a better quality when the team havs written requirements (Agile epics and user stories, or the traditional SRS with functional, non-functional reqs. and use cases) or does the team finish faster and with a better quality when there are no written reqs?
[16:03:27] <vdamewood> !q algosDataStructs 
[16:03:28] *** bayaz sets mode: +q *!*@h-37-123-164-79.A137.corp.bahnhof.se
[16:03:50] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[16:06:48] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:2c49:eb7c:3a2b:53cc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:06:54] <ProfSimm> vdamewood: why is algosDataStructs quieted
[16:07:23] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:07:28] <vdamewood> ProfSimm: Ban evasion.
[16:09:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:10:39] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:d9a0:5cbe:3bea:6959)
[16:10:52] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 246 seconds)
[16:12:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[16:13:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi)
[16:14:35] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:d9a0:5cbe:3bea:6959) (Client Quit)
[16:16:46] <pyzozord> why do programming languages usually make the default integer type be signed?
[16:17:36] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[16:18:31] <vdamewood> I would guess it's the path of least surprise.
[16:18:37] <vdamewood> But it's just a guess on my part.
[16:19:51] <ProfSimm> pyzozord: usually you want the default to be the full show. Wide, signed, and so on.
[16:20:12] <pyzozord> I'm looking at https://www.felixcloutier.com/x86/add
[16:20:13] <bayaz> Title: ADD ? Add 
[16:20:37] <pyzozord> strange I thought there would be another instruction for signed add, but it looks like it's all one instruction but has different opcodes?
[16:20:38] <ProfSimm> pyzozord: mine's gonna be signed bigint by default, restricting it is just optimization
[16:21:21] <vdamewood> pyzozord: All of the opcodes perform both signed and unsigned addition.
[16:21:46] <pyzozord> oh, so how does it know which one is signed or unsigned
[16:21:51] <vdamewood> pyzozord: The only difference between signed and unsigned addition is where the overflow boundary is.
[16:22:18] <vdamewood> The x86 has separate flags for both, and these instructions set/unset each as appropriate.
[16:24:00] *** Joins: Toneloc (~Toneloc@193.61.159.40)
[16:24:17] <beaky> ramcloud the most scalable lowest latency in memory database ever made https://pages.cs.wisc.edu/~remzi/Classes/739/Papers/ramcloud.pdf
[16:24:17] <bayaz> Type: application/pdf Size: 2.0 MB 
[16:24:20] *** Parts: norayr (376bc34bfc@37.252.78.253) (Disconnected: closed)
[16:24:26] <davros> pyzozord, signed numbers are more useful , as soon as you can subtract, sign is useful
[16:24:30] *** Joins: norayr (376bc34bfc@37.252.78.253)
[16:25:06] <ProfSimm> beaky: this design is one step away from the "dev/null is my fastest storage" joke
[16:25:22] <vdamewood> In fact, the only difference between the various forms of add instruction here is the nature of the operands, memory, immediate, and r/m
[16:25:45] <vdamewood> Oh, and registers
[16:25:48] <ProfSimm> beaky: I suppose this requires integration with UPS to flush to disk when power is lost
[16:26:07] <ProfSimm> beaky: but what if the OS crashes
[16:26:08] <pyzozord> vdamewood: do you mean that on x86 add is always signed? And when programming language say they waint unsigned int, the compiler actually under the hood just preforms a signed operation just "wider"?
[16:26:19] *** Quits: suss (~user@user/suss) (Ping timeout: 260 seconds)
[16:26:45] <vdamewood> pyzozord: No. I'm saying there's no difference to warrant separate instructions.
[16:27:52] <vdamewood> pyzozord: That's one of the advantages to 2's complement signed values, they work the same as signed values.
[16:28:00] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:561:c28b:7138:6f96) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:28:04] <vdamewood> same as unsigned values, I mean.
[16:28:46] <pyzozord> oh I see, I didn't realize that an "add" in two's complement doesn't care if operands are signed or not
[16:29:44] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[16:29:45] <pyzozord> I see, MUL is unsigned only
[16:30:02] <vdamewood> Yep. Let's say you have a 1-byte register. -1 is 0xFF. If you 'add -1 to 0x0F, that adds up to 0x10E. You truncate down to 0x0E and get the right answer.
[16:30:16] <vdamewood> if you 'add', I mean
[16:31:23] <pyzozord> oh it takes advantage of the natural wrap around?
[16:31:46] <vdamewood> Yep.
[16:32:23] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:d860:33a3:a28f:c27) (Ping timeout: 260 seconds)
[16:32:28] <vdamewood> as such, signed values don't care about wraping around at 0xFF to 0x00, but they DO care about wraparound between 0x7f and 0x80.
[16:32:35] *** Quits: moniker- (~mon@dh207-122-170.xnet.hr) (Ping timeout: 256 seconds)
[16:32:46] *** Joins: moniker-- (~mon@dh207-123-43.xnet.hr)
[16:32:55] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 246 seconds)
[16:32:55] <vdamewood> (Since that's 0b0111 1111 to 0b1000 000)
[16:32:57] <pyzozord> interesting, I think that's thenks to how this line goes https://i.stack.imgur.com/FM4WT.jpg
[16:32:58] <bayaz> Type: image/jpeg Size: 39.4 kB 
[16:33:03] <ProfSimm> signed number representations are a reminder how arbitrary our number encoding is
[16:33:16] <pyzozord> it's a linear increase then later for negatives another linear increase
[16:33:29] *** Joins: palasso (~palasso@user/palasso)
[16:34:31] <vdamewood> Yep, and when you wraparound from 0b0111 111 to 0b1000 000, you're jumping from the highest positive to the lowest negative (127 to -128 in 8-bts)
[16:34:35] <vdamewood> 8-bits
[16:34:54] <vdamewood> Pretend I typed the binary values right, too.
[16:35:27] <pyzozord> ugh I need to refresh my binary addition, I forget how it's done
[16:35:49] <pyzozord> I am looking at that graph trying to imagine how would 5 + (-3) would work
[16:35:53] <vdamewood> It's just like decimal addition, but with fewer values per digit.
[16:35:57] *** Quits: bnchs (~bnchs@160.177.29.238) (Ping timeout: 260 seconds)
[16:36:20] <arahael> pyzozord: addictions are harmful, be wary that your addition never becomes an addiction.
[16:36:52] <vdamewood> 0b0000 0101 + 0x1111 1101
[16:36:58] <vdamewood> x/0x/0b/
[16:37:02] <vdamewood> fubar
[16:37:12] <pyzozord> arahael: "mathematicians around the world suffer from additions (...)"
[16:37:37] <vdamewood> I want sum! Gimme that!
[16:37:53] <arahael> pyzozord: Fermat was particularly afflicted.
[16:38:21] <pyzozord> is he the guy who invented the calculus?
[16:38:27] * vdamewood proves that arahael ^2 doesn't add up.
[16:38:31] *** Joins: pmercado (~pmercado@186.11.44.225)
[16:38:43] <vdamewood> Calculus was invented by Newton and Liebnitz.
[16:39:00] <vdamewood> But Newton published first, so we credit him solely.
[16:39:40] <vdamewood> A few weeks ago, my kidneys decided they liked math and started passing calculus.
[16:39:48] <arahael> pyzozord: he died, had a duel. so he spent what tiny bit if time he had left to scribble his last theorem in a margin.
[16:40:03] <arahael> vdamewood: painful.
[16:40:21] <arahael> vdamewood: especially the derivatives.
[16:40:24] <merijn> arahael: eh
[16:40:24] <pyzozord> arahael: you need to apply integral
[16:40:28] <pyzozord> vdamewood: ^
[16:40:31] <merijn> arahael: I think you're confusing Gauss and Fermat
[16:40:37] <vdamewood> They disintegrated in the stream.
[16:40:47] <merijn> no, wait, not gauss
[16:40:49] <merijn> the french guy
[16:40:52] <vdamewood> I'm a little blury on Gauss.
[16:40:53] *** Quits: Payam19 (~Payam@138.106.57.131) (Quit: Client closed)
[16:40:58] <beaky> i thought the duel guy was galois
[16:41:04] <merijn> Ah, Galois!
[16:41:05] <merijn> Yeah
[16:41:08] <merijn> Not Fermat
[16:41:24] <vdamewood> beaky: If we ever duel, it will be a duel of tea.
[16:41:28] <arahael> merijn: i am probably confusing lots of things.  therapists would probably be helpful.
[16:41:30] <merijn> arahael: fermat didn't write that "the time before he died"
[16:41:30] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[16:41:37] <beaky> first to keel over from the energy of tea
[16:42:05] <merijn> arahael: It was a margin note in his personal notes published after death. The hypothesis is that he *thought* he had a proof, later realised he didn't and that's why he never wrote it down properly
[16:42:07] <beaky> yes i need to add a column to measure the qi from each tea 
[16:42:13] <vdamewood> I figured we'd just have a competition to see who brews the better cup, but I'm all for drinking too much tea, too.
[16:42:27] <beaky> lol
[16:42:29] <merijn> Fermat died in his late fifties, early sixties
[16:42:36] <pyzozord> 0b0000 0101 + 0b1111 1101 = 0b000 0010 if I'm not mistaken, but I'm not sure how do I do mechanically
[16:42:44] <merijn> Galois was the moron that got himself killed at 20 and set back math by like a century, probably
[16:43:22] <pyzozord> err 0b0000 0010, I missed one 0
[16:43:23] <arahael> merijn: what i'm hearing here is that maths leads men to their dearhs.
[16:43:46] <vdamewood> pyzozord: Dry running through it the same way you would add decimal.
[16:43:48] <Decker> convert to decimal.  5+ 255-2 = 258 
[16:43:49] <vdamewood> Try*
[16:43:52] <merijn> 60s is a solid age to die at in the 1600s :p
[16:43:54] <Decker> looks right to me
[16:44:10] <arahael> i'd be politically correct and not exclude women, normally, but i havent heard many having duels and dying early.  women seem to be significantly smarter.
[16:44:17] <dTal> merijn: nah he simply failed to set math forward by a century
[16:44:18] <Decker> same way manually as you do with base 10... add and carry and add...
[16:44:24] <vdamewood> I wouldn't mind dying in the 60s. I'd be in my 80s.
[16:44:28] <pyzozord> vdamewood: you mean the "underline/on paper" method?
[16:44:40] <vdamewood> pyzozord: Yep
[16:45:25] <dTal> arahael: not neccesarily smarter, just different in how they handle conflict. After all it's not dumb to duel if you *win*
[16:45:59] <dTal> women are more likely to spend decades viciously tearing each other down while pretending to be best friends
[16:46:03] <pyzozord> vdamewood: it kind of works, amaizingly, but I get 1 0000 0010
[16:46:19] <merijn> dTal: So, there's actually this interesting history paper I ran into discussing the economics of dueling (i.e. why would you do that?) in the renaissance era
[16:46:25] <nomagno> pyzozord: In so many languages signed arithmetic is botched I agree unsigned should be the default
[16:46:26] <vdamewood> pyzozord: Now remember you're working with an 8-bit register and truncate the value.
[16:46:41] <nomagno> Also different opcodes ARE different instructions
[16:46:44] <nomagno> Change my mind.
[16:46:55] <arahael> vdamewood: truncation seems to be a good technique for duelists.
[16:46:58] <merijn> dTal: The tl;dr is like "honor and reputation are the credit score of the time, having your honor besmirched may leave you financially destitute and dueling was a way to ward of financial repercursions"
[16:47:00] <ProfSimm> nomagno: it's all one instruction with an extra parameter
[16:47:10] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:6d2e:9a88:666c:3fae)
[16:47:24] <ProfSimm> instruction(add 5 6)
[16:47:25] <ProfSimm> :P
[16:47:29] <dTal> merijn: interesting
[16:47:30] <merijn> i.e. cleaning your reputation and thus "fixing" your credit score :p
[16:47:50] <dTal> I have many more questions about that, but this isn't the time and place :)
[16:47:59] <merijn> dTal: https://onlinelibrary.wiley.com/doi/abs/10.4284/sej.2010.76.4.1094
[16:48:04] <nomagno> ProfSimm: Most people universally understand 'instruction' to mean 'the opcode and the rest of the stuff'
[16:48:27] <Decker> opcode and operands
[16:48:45] <nomagno> Decker: And more stuff.
[16:48:50] <pyzozord> nomagno: yeah, I feel like most common usage of "int" is a loop, which is usually doesn't go negative. BTW what does "botched" mean?
[16:48:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:49:11] <nomagno> My architecture has a 'mask' nibble for complex addressing, for instance
[16:49:37] <Decker> which is an operand :)
[16:49:50] <vdamewood> pyzozord: Ruined due to a mistak in preparation. "I botched the cake by adding salt instead of sugar."
[16:50:02] *** Joins: Inari (~Pinkishu@p4fe7ee5d.dip0.t-ipconnect.de)
[16:50:04] <nomagno> pyzozord: I think the British spelling is 'bodged'
[16:50:16] <nomagno> Poorly done, half-assed...
[16:50:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:50:28] <vdamewood> Oh, yeah, that's not 'botched'.
[16:50:32] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[16:50:52] <vdamewood> "We botched the rescue mission when we shot the hostage."
[16:51:03] <vdamewood> I guess botch could also mean fail due to a mistake
[16:51:10] <pyzozord> I always thought they were saying "bucherd"
[16:51:27] <Decker> butchered
[16:51:27] <pyzozord> I mean butchered
[16:51:38] <vdamewood> 'botched' sounds like 'botcht'
[16:51:38] <nomagno> That's also a possibility.
[16:51:43] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:52:20] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[16:52:40] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:53:41] <pyzozord> there is MUL for unsigned and IMUL for signed. I'm too lazy to check intel manuals. Do you think there is an explicit list of types that cpu supports?
[16:54:19] <pyzozord> I guess different size signed and unsigned ints and floats are the obvious ones, but maybe there or some other things I don't know about
[16:54:23] <Decker> vrious sizes of registers al,ah,ax,eax,...
[16:54:36] *** Joins: kulesh (~kulesh@109-252-101-74.nat.spd-mgts.ru)
[16:54:40] <Decker> to do float you have to push it to the FPU which is a differnt opcode
[16:55:07] <Decker> BCD - binary coded decimal (uses 1 nibble for digis 0-9)
[16:55:21] <Decker> (on intel)
[16:55:24] <pyzozord> 1 nibble?
[16:55:29] <pyzozord> 1 bit?
[16:55:31] <Decker> ya 2 nibbles per byte
[16:55:36] <Decker> 4 bits
[16:55:46] <nomagno> amd64 has an unlimited number of instructions
[16:55:46] <Decker> a nibble's half a byte
[16:55:54] <nomagno> So, any type you want it exists :D
[16:56:24] <vdamewood> pyzozord: the x86 ALU only supports division with two operants, one twice as large as the other, and they have to be integers. (No floats, that's the x87's job.)
[16:57:20] <pyzozord> ?
[16:57:23] <vdamewood> I forget my terminology, If I make division equivalent to fractions, what's the term for a division operation that's analogous to the numerator?
[16:58:01] <vdamewood> Or, put another way, if X / Y = Z, and Z is the quotient, Y is the divisor, what's X called again?
[16:58:01] <nomagno> vdamewood: what do you mean analogous to the numerator?
[16:58:07] <Decker> denominator?
[16:58:24] <nomagno> vdamewood: X is the dividend
[16:58:26] <Decker> numerator
[16:58:35] <vdamewood> nomagno: Thanks.
[16:59:22] <vdamewood> pyzozord: The dividend is twice as large as the divisor in the x86 (i)div instructions. So, you can, for example, divide a 32-bit integer by a 16-bit integer.
[16:59:38] <vdamewood> And geta 16-bit result.
[17:00:21] <pyzozord> what if you divide by 1, should you get 32-bit back?
[17:00:28] *** Quits: newwebdev13 (~newwebdev@78.135.92.89) (Read error: Connection reset by peer)
[17:00:36] *** Quits: kulesh (~kulesh@109-252-101-74.nat.spd-mgts.ru) (Quit: Leaving)
[17:00:42] *** Joins: newwebdev13 (~newwebdev@78.135.92.89)
[17:00:42] *** Joins: kulesh (~kulesh@109.252.101.74)
[17:00:51] *** Joins: Klinda (~superleag@user/klinda)
[17:01:06] <vdamewood> pyzozord: Dammit now I'm going to have to look it up.
[17:01:08] <pyzozord> also how come fpu divide operands are ints? How is float / float implemented then?
[17:01:26] <vdamewood> FPU?
[17:01:35] <vdamewood> I said the FPU does floats.
[17:01:47] <vdamewood> (the x87 is the x86's FPU coprocessor)
[17:02:09] *** Joins: cx_ (~cx@5.46.157.126)
[17:02:19] <pyzozord> oh I see I thought it was some other line of cpus
[17:02:20] <KillerWasp> It's a bloody nightmare trying to get funding for my projects.
[17:02:53] <KillerWasp> More than 10 years and I still haven't made a single dollar.
[17:03:42] <nomagno> KillerWasp: I don't mean to offend, but based purely from my experience interacting here, you don't seem to take it very seriously.
[17:03:49] *** Quits: kulesh (~kulesh@109.252.101.74) (K-Lined)
[17:04:56] <nomagno> You often come up with quirky ideas that are nice, but which are clearly not oriented towards making a profit in the short or medium term
[17:04:56] <KillerWasp> today is 2022. It had started in 2012, I spent everything I had and then I tried to get more, but I could never get more, on the contrary, I'm still from begin.
[17:05:04] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[17:05:59] <nomagno> Take this as constructive criticism. You might have more luck if you pick a battle-tested business model
[17:07:49] <KillerWasp> I think I get what you mean, but it doesn't really mix with business, let alone when you're not interested in dealing with business. Although for something to work you have to brainwash with aggressive/massive advertising.
[17:07:52] <KillerWasp> nomagno: ^
[17:08:12] <KillerWasp> All my projects are not oriented to business or the production of money.
[17:08:41] <pyzozord> KillerWasp: that's probably the reason why you can't get funding. People generally invest because they hope to make profit
[17:08:46] <ProfSimm> If this is valid syntax:   foo 8 bar 9 baz, should I permit people to type it as:   foo 8bar 9baz, because it parses fine anyway
[17:09:14] <pyzozord> I'm not an expert though. Not even an amateur
[17:09:23] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:09:47] <vdamewood> pyzozord: Do you work as a programmer for pay?
[17:09:53] <Decker> ProfSimm what about a base64 value?
[17:10:09] <ProfSimm> Decker: what about it
[17:10:17] <pyzozord> vdamewood: yes but they give me programming problems to solve not business problems
[17:10:29] <Decker> looks like 8bar is different than 8bar then
[17:11:57] <ProfSimm> Decker: if I support base64 it'll probably have some quote character or prefix
[17:12:19] <nomagno> I think, for now, my moral compass wouldn't let me have my own software-related business in the traditional sense. I'm fine with coding proprietary stuff for an employer, but not as personal initiative
[17:12:37] <vdamewood> pyzozord: Okay, then yes, you're not an amateur. You're a professional.
[17:13:05] <Decker> ProfSimm *shrug* I'd prefer 8bar to be a variable and 8 bar be two operands... there have been many times when I've wnated to have a numbre to start instead of either 1) using _ to start or stuffing the number at the end
[17:13:30] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 272 seconds)
[17:13:48] * pyzozord puts on round sunglasses and waters his plant
[17:13:53] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[17:14:10] <nomagno> Wow round sunglasses, fancy
[17:14:18] <ProfSimm> Decker: I don't mind 8bar being a variable but it creates an ambiguity. Is 8 the number 8 or the variable 8
[17:14:29] <nomagno> ... I hate sunglasses. They make me depressed!
[17:14:32] *** Joins: ivanf (~ivan@user/ivanf)
[17:14:43] <Decker> ProfSimm without a space 8bar is the variable
[17:14:50] <nomagno> For real I get sad when there is poor lightning and I can do something about it
[17:15:00] <ProfSimm> Decker: it becomes very awkward semantically
[17:15:09] <Decker> a number that doesn't have any alphapart would be a number
[17:15:16] <Decker> does it?
[17:15:29] <ProfSimm> Decker: 0b1 is a number 1b0 is a variable etc.
[17:16:00] <nomagno> ProfSimm: well literals are s different thingy completely
[17:16:17] <ProfSimm> nomagno: all those are literals
[17:16:24] <nomagno> You could have literals start with b/x/o
[17:16:33] <nomagno> Non-base-10-literals*
[17:16:43] <ProfSimm> Then they look like variables
[17:16:55] <nomagno> You have a point.
[17:17:09] <ProfSimm> I have a solution but I don't like it.
[17:17:16] <ProfSimm> I've banned capitals from var names
[17:17:30] <ProfSimm> I could use  B10101  X3F397 and so on
[17:18:19] <nomagno> That's better than fortran's way of determining types.
[17:18:37] <ProfSimm> Imagine if I require D for decimal
[17:18:43] <ProfSimm> :P
[17:18:58] <ProfSimm> Then you can have 8 variable
[17:19:29] *** Quits: cx_ (~cx@5.46.157.126) (Quit: cx_)
[17:19:54] *** Joins: cx_ (~cx@5.46.157.126)
[17:19:56] *** xcombelle3 is now known as xcombelle
[17:20:27] <nomagno> Or was it pascal that determined in the past/now types based on starting letter?
[17:21:53] <nomagno> Might be thinking of ALGOL, sec let me look around
[17:22:31] <nomagno> I don't know anymore
[17:22:43] <GeDaMo> Fortran
[17:23:45] *** Joins: Klinda (~superleag@user/klinda)
[17:24:01] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[17:24:50] *** Quits: cx_ (~cx@5.46.157.126) (Changing host)
[17:24:50] *** Joins: cx_ (~cx@user/cx)
[17:25:48] <ProfSimm> Excel has it easy
[17:26:05] <ProfSimm> Everything is just text. When it looks like a number make it a double. End of story
[17:27:35] <pyzozord> not text, everything is a datetime
[17:28:34] <bjs> Excel doesn't have a datetime datatype
[17:28:39] <bjs> It just uses numbers
[17:29:28] <pyzozord> i know it just really likes to interpret data as date
[17:29:38] *** Joins: cx__ (~cx@user/cx)
[17:29:59] <ProfSimm> pyzozord: someone at Microsoft is spinning a ball with letters, picking them out one by one, and noting the time each letter was drawn. Then those times encode letters of text in Excel
[17:31:53] <GeDaMo> https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates
[17:31:54] <bayaz> Title: Scientists rename human genes to stop Microsoft Excel from misreading them as dates 
[17:31:55] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:f914:82c8:2faf:5165)
[17:31:58] *** Quits: cx_ (~cx@user/cx) (Ping timeout: 260 seconds)
[17:33:35] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:34:44] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:35:57] <ProfSimm> GeDaMo: meanwhile bunch of people are viciously fighting over the use of floats as currency. While Excel treats everything as floats and dates, and the finance industry is all over it.
[17:36:05] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[17:36:14] <ProfSimm> Iz no fair.
[17:36:57] *** Joins: Numocha (~anonkitty@user/anonkitty)
[17:37:17] *** Joins: Fairy (~Fairy@ti0004a400-5707.bb.online.no)
[17:37:25] *** Quits: cx__ (~cx@user/cx) (Ping timeout: 240 seconds)
[17:37:57] <bjs> pyzozord: yes,  hence my favourite Excel formula:  =2+"2 a"
[17:38:29] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54) (Ping timeout: 250 seconds)
[17:38:44] *** Quits: Numocha (~anonkitty@user/anonkitty) (Client Quit)
[17:39:53] <edgar-rft> I'd be happy to pay with floats instead of money.
[17:40:39] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:42:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:44:29] *** Joins: kakysha (~kakysha@user/kakysha)
[17:44:44] <arahael> ProfSimm: And it gets the dates WRONG! :D
[17:46:20] <ProfSimm> So let's analyze then. If Excel sucks so much at handling data, and it's a data handling and processing app, why is it so popular.
[17:46:28] <ProfSimm> I mean aside of the evil MS things.
[17:46:35] <ProfSimm> As a product, people clearly use it a lot
[17:46:36] <bjs> ProfSimm: it makes pretty pictures
[17:46:45] <ProfSimm> Good point
[17:46:47] *** zmotaj_ is now known as zmotaj
[17:46:47] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[17:46:47] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[17:46:53] <ProfSimm> But can't be just that i think
[17:46:56] <bjs> it is
[17:47:07] <ProfSimm> bjs: many people don't make charts in it at all
[17:47:25] <beaky> yes i wish my tea database language can be more like excel since excel is so intuitive with its tables
[17:47:37] <bjs> ProfSimm: it's not just the charts that are pretty,  the whole UI is.  It's a nice way to display things
[17:47:41] <DnzAtWrk> only until you need more than 2 dimensions
[17:47:45] <DnzAtWrk> after which excel shits itself
[17:47:56] <beaky> excel in vr 
[17:48:00] <GeDaMo> I remember long time ago, MS did some research and found that one of the most common uses for Excel was making lists
[17:48:17] <DnzAtWrk> I've used excel for some quite fancy crap, like machine learning using VBA
[17:48:17] <beaky> yes just last year excel got lambdas
[17:48:17] <ProfSimm> DnzAtWrk: ok it's decided then: let's make N-dimensional Excel 
[17:48:20] <jinsun> bjs: why is "2 a" = 1/12?
[17:48:20] <GeDaMo> Which is why they added things like autofill
[17:48:20] <DnzAtWrk> with dynamically updating graphs
[17:48:32] <DnzAtWrk> vbscript*
[17:48:55] <edgar-rft> we need screens with more than two dimensions to display our data properly
[17:49:01] <bjs> jinsun: well it's not, the + function has type (num, num) -> num so it converts both to num. and "2 a" converts to the 1/12 num.  But so does "2 am" :)
[17:49:14] <DnzAtWrk> I prefer to just use numpy for n-dimensional data
[17:49:23] <ProfSimm> DnzAtWrk: edgar-rft: have you seen the ZigZag data type
[17:49:28] <DnzAtWrk> with the python interpreter, it's easy to explore multidimensional data
[17:49:39] <ProfSimm> https://en.wikipedia.org/wiki/ZigZag_(software)
[17:49:39] <bayaz> Title: ZigZag (software) - Wikipedia 
[17:49:59] <ProfSimm> DnzAtWrk: how'd you make a UI for exploring it without scripting too much
[17:50:06] <DnzAtWrk> python is the UI
[17:50:13] <ProfSimm> eeeh
[17:50:21] <ProfSimm> DnzAtWrk: this is why everyone uses Excel
[17:50:50] <jinsun> bjs: okay "2 a" is same as "2 am" I can kinda make sense, but why 1/12 ?
[17:50:53] <ProfSimm> DnzAtWrk: in Python even making a 2D table of numbers is work. You can read it off a file, but then you still don't see it
[17:50:54] <DnzAtWrk> it's not like n-dimensional flat tables mean anything
[17:50:59] <bjs> jinsun: because 2 am is 2/24ths of the day 
[17:51:00] <DnzAtWrk> it's just a flattened table
[17:51:02] <bjs> jinsun: :D
[17:51:12] <oldlaptop> bjs: oh no.
[17:51:13] <DnzAtWrk> with numpy you aggregate and summarise the data
[17:51:17] <ProfSimm> DnzAtWrk: tensors are very popular in ML and data processing
[17:51:22] <jinsun> bjs: oh my god
[17:51:23] <DnzAtWrk> oh no, I've spelt summarise wrong all this time
[17:51:29] <bjs> jinsun: i'm glad you like it
[17:51:37] <ProfSimm> bjs: I love it
[17:51:41] <ProfSimm> bjs: will use every time
[17:51:46] <oldlaptop> They don't use the s variant in Britain &c?
[17:51:58] <jinsun> who came up with that kind of logic
[17:53:22] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:f914:82c8:2faf:5165) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:53:37] <GeDaMo> I find myself using the 'z' version of words like summarize but my UK spellchecker complains :/
[17:53:56] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[17:54:00] <GeDaMo> Maybe I've just read too much American English :P
[17:54:13] *** Joins: inky (~inky@178.78.152.168)
[17:54:41] <GeDaMo> https://www.youtube.com/watch?v=qC9qApguc0w
[17:54:42] <bayaz> Title: Wax - American English 
[17:55:52] *** Quits: inky_ (~inky@46.36.114.138) (Ping timeout: 246 seconds)
[17:56:52] *** Quits: Toneloc (~Toneloc@193.61.159.40) (Ping timeout: 250 seconds)
[17:57:38] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[17:59:07] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:59:35] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[17:59:43] <vdamewood> GeDaMo: English (Simplified)
[18:01:50] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:02:00] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[18:03:24] *** Joins: jamea (~jamea@187.185.190.209)
[18:03:49] *** Joins: norayr (376bc34bfc@37.252.78.253)
[18:05:35] <ProfSimm> Sorry to pester y'all, but last question for my lang for the day. I have no () for calling functions, you can just name the function and you call it. So to capture a closure you need to use an operator:    result: funcname    ref_to_the_function: funcname ...     Is the "..." operator clear here
[18:06:42] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:de8:eb9a:790d:7076)
[18:08:02] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:88cb:32a4:618d:21c7) (Read error: Connection reset by peer)
[18:13:30] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[18:14:33] <duuude> no
[18:14:41] <edgar-rft> ProfSimm: thank you for mentioning ZigZag -> https://www.youtube.com/watch?v=n22A-Say7do
[18:14:42] <bayaz> Title: Ted Nelson on ZigZag? Data Structures (by Arthur Bullard) 
[18:14:42] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:de8:eb9a:790d:7076) (Read error: Connection reset by peer)
[18:14:54] <ProfSimm> duuude: well. f.
[18:15:31] <ProfSimm> edgar-rft: have you explored it before
[18:16:09] *** Joins: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5)
[18:17:59] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[18:18:48] <edgar-rft> ProfSimm: yes, I remember reading about it 20 years ago or something but for most of my needs the graphics is not flexible enough. Where I have to admit that I myself still have no better solution than using graphwiz most of the time :-)
[18:21:26] <InPhase> ProfSimm: Perhaps & funcname
[18:21:42] <GeDaMo> https://strlen.com/treesheets/
[18:21:42] <bayaz> Title: TreeSheets 
[18:22:05] <ProfSimm> Inst: thanks. I've considered that option as well
[18:22:22] <ProfSimm> InPhase: *
[18:22:45] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[18:22:49] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[18:23:32] <ProfSimm> GeDaMo: this looks promising, but it'd be even better if the tree was just a view into otherwise relational data
[18:23:40] <ProfSimm> GeDaMo: so you can have various views y'know
[18:23:44] *** Joins: img (~img@user/img)
[18:27:07] *** Quits: Jaami (~Jaami@182.185.138.9) (Quit: Nettalk6 - www.ntalk.de)
[18:27:20] *** Quits: user51 (~user51@77.124.35.94) (Quit: leaving)
[18:28:12] *** Quits: img (~img@user/img) (Client Quit)
[18:28:15] *** Quits: ketchupicecream (~ketchupic@user/ketchupicecream) (Quit: WeeChat 3.5)
[18:28:40] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:28:48] * vdamewood pets his cat.
[18:29:26] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Read error: Connection reset by peer)
[18:29:35] *** Joins: img (~img@user/img)
[18:30:02] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[18:33:14] <InPhase> vdamewood: Instructions:  https://www.youtube.com/watch?v=5jKZ9KGtee0
[18:33:15] <bayaz> Title: SQUISH THAT CAT 
[18:33:37] *** Joins: Pickchea (~private@user/pickchea)
[18:34:27] <vdamewood> InPhase: Hehehe.
[18:34:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:35:01] *** Quits: j0hn_mc_clane (~j0hn_mc_c@dd577050e.access.telenet.be) (Quit: Leaving)
[18:35:06] <vdamewood> My kitty is 22 (maybe 23) years old.
[18:35:32] <pyzozord> vdamewood: squish it but gently
[18:35:44] <pyzozord> cats love being squished
[18:35:48] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[18:36:11] <pyzozord> i love that video :)
[18:36:27] <nomagno> vdamewood: Wow that's pretty wise
[18:36:46] <vdamewood> wise?
[18:37:32] <nomagno> Well a cat can't live that long without getting pretty gud wisdom :D
[18:38:19] <vdamewood> She found a hooman who didn't let her get squished by a car.
[18:38:38] <vdamewood> Kitties are to be squished by hands, not cars.
[18:40:39] <merijn> InPhase: Immediately know who that was gonna be :D
[18:40:43] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[18:40:53] *** Joins: kakysha_ (~kakysha@user/kakysha)
[18:42:37] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 250 seconds)
[18:42:40] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com)
[18:43:39] <beaky> so ive been reading about the ramcloud database it claims it is not limited by the speed of secondary storage but that it also has sick durability guarantees on things like power loss how is that possible isnt there dataloss in between ram and durable storage write latency
[18:45:28] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Ping timeout: 260 seconds)
[18:45:43] <edgar-rft> beware, when it rains onto your ram it might get damaged
[18:45:51] <beaky> there is also network latency too isnt that also the limiting factor
[18:46:09] <beaky> ram is nice it comes in sick naked pcb sticks
[18:46:23] <beaky> whereas disk comes in heavy fragile metal enclosures 
[18:46:59] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[18:47:33] <beaky> spinning rust
[18:47:34] <analoq> beaky: sounds similar to ssds with a volatile cache. There are some with power loss protection as well, which guarantee that everything in the cache will be saved to the drive in case of power outages
[18:47:45] * edgar-rft doesn't want to see beaky's naked ram
[18:48:54] <beaky> o right "ramcloud currently assumes that servers can continue operating for a short period after impending power failure is detected so that buffered data can be flushed to secondary storage"
[18:49:10] <beaky> nowadays m.2 nvme ssds also come naked
[18:49:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[18:49:28] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[18:49:39] <beaky> tho i dont store my teas naked i leave them in the wrapper they came in
[18:50:16] <beaky> so thanks to buffering it does not have to be limited by the latency of secondary storage
[18:51:06] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4)
[18:51:49] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[18:53:03] <beaky> like in factorio where you have trains but also crates so you are not limited by the speed of the blue belts 
[18:53:15] *** Joins: hololeap (~hololeap@user/hololeap)
[18:53:27] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 250 seconds)
[18:53:44] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:54:04] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[18:55:37] *** Joins: coaxing (~coaxing@user/coaxing)
[18:59:00] *** Quits: zwr (~zwr@2804:d45:b966:fb00:f2b3:3aeb:5464:99ac) (Ping timeout: 240 seconds)
[19:00:07] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2e8a:1439:b3aa:fa15)
[19:00:17] *** Joins: Enitin (~Enitin@82.180.145.226)
[19:00:27] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[19:00:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[19:00:59] <ProfSimm> if this is the same:  var x = 1;  var x = (1);  var x = ((1));  then why is this not the same:    foo(1, 2, 3)    foo((1, 2, 3))
[19:04:28] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[19:09:46] <karstensrage> is that js or what?
[19:10:26] <pyzozord> nice tickets for the new sprint are interesting
[19:10:44] * pyzozord thanks past pyzozord for good decisions about choosing teams
[19:10:46] *** Quits: livestradamus (~quassel@user/livestradamus) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:11:02] *** Joins: llh (~UPP@user/llh)
[19:11:18] <ProfSimm> karstensrage: well yes let's say
[19:11:24] *** Joins: livestradamus (~quassel@user/livestradamus)
[19:11:27] <ProfSimm> karstensrage: it's the same in most langs
[19:11:31] * pyzozord definitely does not have split personality
[19:11:45] <karstensrage> 1) its not
[19:11:56] <ProfSimm> karstensrage: I'd be glad to hear some where it's not
[19:12:00] <karstensrage> 2) in the latter case you are passing foo three arguments vs 1
[19:12:05] <karstensrage> java
[19:12:08] <karstensrage> C
[19:12:21] *** Quits: kakysha_ (~kakysha@user/kakysha) (Quit: WeeChat 3.4.1)
[19:12:24] <karstensrage> i cant think of a language where initialization looks like that
[19:12:35] *** Joins: kakysha (~kakysha@user/kakysha)
[19:12:49] <karstensrage> the only language ime that has batshit crazy "surprising" things is js
[19:12:51] <ProfSimm> karstensrage: the question is all about the () semantics
[19:12:52] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 246 seconds)
[19:12:56] <karstensrage> right
[19:13:06] <karstensrage> with the first its just initializing variables
[19:13:13] <karstensrage> the 2nd line is passing arguments to a method
[19:13:59] <karstensrage> the first line, in normal languages is just precedence thats irrelevant
[19:14:04] <ProfSimm> Sure but it's ().  If () had fixed semantics for , then probably (1, 2) and ((1, 2)) should be the same if (1) and ((1)) are the same
[19:14:05] <edgar-rft> ProfSimm: in Lisp it clearly violates all syntax rules, so all of it is wrong, whether that counts as "same" is up to you
[19:14:13] <Decker> ProfSimm for the same reason ()=>({foo:1}) is different than without parenthesis
[19:14:31] <Decker> ()=>{return {foo:1} }
[19:14:55] <karstensrage> foo() is not using parentheses as precedence barriers
[19:14:58] <ProfSimm> In JS, comma in () means "eval all return last". Obviously doens't work this way with arguments tho
[19:14:59] <karstensrage> its the signature of the method
[19:15:03] <Decker> you know the comma operator is just drop the previous results and use the latt one...
[19:15:06] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[19:15:10] <Decker> right
[19:15:20] <ProfSimm> Well this inconsistency is annoying
[19:15:24] <ProfSimm> I don't like arbitrary things
[19:15:34] <karstensrage> you thinking they are same thing is annoying
[19:15:38] <Decker> but 1 (1) and ((1)) is the same in all those cases too
[19:15:42] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[19:15:49] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[19:15:50] <ProfSimm> karstensrage: you not seeing it's the same token is annoying ;-)
[19:16:02] <Decker> 1,2 (1,2) ((1,2) aren't the same though
[19:16:07] *** Joins: duuude (~user@user/duuude)
[19:16:09] <edgar-rft> ProfSimm: we're sorry to hear that you don't like reality :-)
[19:16:16] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:16:27] <ProfSimm> Reality would reject JS's inconsistency
[19:16:28] <karstensrage> foo((1)) and foo(1) maybe?
[19:16:40] <ProfSimm> karstensrage: well yes, those are the same
[19:16:41] <karstensrage> does that help?
[19:16:54] <ProfSimm> karstensrage: no. Because it doesn't work with 2+ args
[19:17:04] <edgar-rft> JavaScript is known to be a piece of shit, so why do you worry?
[19:17:10] <karstensrage> youre first example doesnt have "2+ args"
[19:17:14] <karstensrage> your
[19:17:18] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:17:19] <ProfSimm> I don't know of a single language where I can do  foo((1, 2))
[19:17:29] <Decker> foo( (4,1),(3,2)) 
[19:17:40] <Decker> that's jut one arg too
[19:17:43] <edgar-rft> english obviouly can handle it
[19:17:44] <Decker> with a value of '2'
[19:17:51] <ProfSimm> edgar-rft: yes!
[19:17:53] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[19:18:06] <Decker> foo( ((4,1),(3,2)))   then.
[19:18:14] <ProfSimm> edgar-rft: now we only need an english compiler
[19:18:54] <edgar-rft> that's difficult because of too much ambiguity
[19:19:48] *** Joins: plastico (~plastico@neomutt/plastico)
[19:19:50] <ProfSimm> One token should have one meaning
[19:19:57] <edgar-rft> it this regard english is even shittier than JavaScript :-)
[19:20:06] <Decker> so what do you ant to use for the other? ; ?
[19:20:23] <Decker> and which do you change
[19:20:46] <Decker> I think just whitespace ... 1 2  and 1,2 being different
[19:21:06] <Decker> and foo(1 2)
[19:21:16] <Decker> and foo(3,1 4,2)
[19:21:21] <duuude> ProfSimm: python has foo((1,2))
[19:21:35] <duuude> though that may not be what you want
[19:22:12] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.4.1)
[19:22:58] <Decker> but then comma in an object too... but you can use a hard end ';' that flushes to object context
[19:24:18] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:24:34] <Decker> comma's in array intiailzers too ... [1,2,3][2,1]
[19:24:50] <ProfSimm> duuude: well my point being to have consistent () semantics
[19:25:16] <Decker> you have no problem with comma being a differnt meaning?
[19:25:25] <Decker> that's where the problem is not in the expression grouping
[19:25:50] *** Joins: Amadiro (~Amadiro@45.154.138.40)
[19:26:12] <ProfSimm> Decker: dunno I just want simpler more consistent rules
[19:27:03] <Decker> well if you define your rules wrong you force constraints that are silly :)   so what you want different parens from a function call from a expression group?
[19:27:30] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162)
[19:27:35] <Decker> like go doesn't allow leading operators on continued lines
[19:28:40] *** Quits: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Quit: Konversation terminated!)
[19:29:33] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[19:29:36] *** Joins: smallville7123_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:30:58] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[19:31:43] *** Quits: Blasphem- (~Blasphemi@user/blasphemian) (Ping timeout: 265 seconds)
[19:31:56] *** Joins: Blasphem| (~Blasphemi@user/blasphemian)
[19:32:02] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[19:33:12] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[19:34:28] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[19:37:49] <pyzozord> can someone recommend cheap mfa keyring dognles?
[19:38:14] <dodo> like a yubikey?
[19:38:26] <pyzozord> yeah but for $10 not $90
[19:38:32] *** Quits: amazigh (~amazigh@user/amirouche) (Quit: WeeChat 2.8)
[19:38:32] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 272 seconds)
[19:38:41] <dodo> just use an authenticator app?
[19:39:11] <pyzozord> the point is to not use any laptop or smartphone
[19:39:39] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Remote host closed the connection)
[19:40:33] *** Joins: rsx (~dummy@ppp-188-174-132-237.dynamic.mnet-online.de)
[19:40:43] *** Joins: amazigh (~amazigh@user/amirouche)
[19:41:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:41:49] <jelly> I see FIDO 2FA dongles for about €30 on amazon
[19:43:12] <[itchyjunk]> https://i.imgur.com/JIEAGLN.jpeg
[19:43:12] <bayaz> Type: image/jpeg Size: 76.5 kB 
[19:43:26] <jelly> pyzozord, where do you see $90? https://www.amazon.de/-/en/Yubico-Y-400-Security-Key-Authentication/dp/B09HJBL6F3/ is €35
[19:44:13] *** Joins: NTSYSTEM (~NTSYSTEM@202.58.197.223)
[19:44:21] *** Joins: gtst[m] (~gabrotstm@2001:470:69fc:105::1:2597)
[19:44:25] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:44:51] <pyzozord> this looks like a mechanical key
[19:45:01] <pyzozord> I need the authenticator app
[19:45:12] <pyzozord> like where I can enter codes and get codes from
[19:45:20] <karstensrage> for 10$?
[19:45:24] <pyzozord> yeah
[19:45:26] <jelly> why (what are you connecting to)
[19:45:27] <karstensrage> lol
[19:45:40] <ProfSimm> karstensrage: do you really rage
[19:45:44] *** Joins: [o (~istupy@2620:0:1003:206:7555:dc53:8a25:a389)
[19:46:06] <karstensrage> ProfSimm, only with insurance people
[19:46:13] <ProfSimm> cool
[19:47:41] <pyzozord> this shouldn't cost more than $10 it needs extremly simple chip, extremly simple lcd, and a battery
[19:47:54] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:e0bf:13e7:4d38:a036)
[19:48:12] <karstensrage> its funny how much people want something for nothing
[19:48:28] <jelly> and an extremely simple way to enter a 128bit TOTP secret
[19:48:44] <pyzozord> jelly: yes just one button
[19:48:49] <jelly> and an extremely simple precise RTC
[19:49:19] <jelly> and an extremely nice battery to power it
[19:49:23] <pyzozord> well needs to have rtc that's it
[19:49:51] <pyzozord> doesn't have to be perfect that rtc
[19:50:02] <pyzozord> not like i'm going to read and type the code in 1ms
[19:50:20] <jelly> I think your grasp of IC design and production and delivery costs might be flawed.
[19:51:03] <pyzozord> alright dude, I'm just going to ignore you before I get angry at you
[19:51:51] * jelly looks at his garmin watch with TOTP app and shrugs
[19:52:20] <dodo> pyzozord: most people who buy such a device probably want secure hardware, not the cheapest, insecure chip available
[19:52:29] * jelly remembers he already suggested getting a 2nd hand garmin for $40 or so, two weeks ago
[19:56:10] <pyzozord> I just need a device that is the size of a key ring, has display, one button and implements https://datatracker.ietf.org/doc/html/rfc6238
[19:56:10] <bayaz> Title: RFC 6238 - TOTP: Time-Based One-Time Password Algorithm 
[19:56:29] <pyzozord> it doesn't have any interface besides that one single button
[19:56:53] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[19:57:06] <pyzozord> and it has a little program that lets enter the codes using this one button, maybe using morse code
[19:57:19] <pyzozord> whatever, it can take even 30 minutes to enter that code with that one button, that is not a problem at all
[19:58:31] *** Quits: tanto (~tanto@178.62.223.32) (Quit: Adios)
[19:58:38] <pyzozord> raspberry pi pico costs $4
[19:58:56] <pyzozord> i suspect that is more than enough for this purpose
[19:59:08] <pyzozord> I mean am I crazy?
[19:59:20] <dTal> you're on IRC so likely
[19:59:28] *** Joins: tanto (~tanto@178.62.223.32)
[19:59:31] <pyzozord> yes, ok, but beside that :P
[20:01:05] <pyzozord> you know what maybe I can find some case with display and a button for the rpi pico and just do this myself
[20:02:36] <pyzozord> and not pay three times the price to a 300+ people corporation
[20:02:56] <pyzozord> I've worked for companies this size, they don't deserve anything
[20:04:43] <dTal> I'd probably reach for an ESP chip before a Pi Pico
[20:04:56] *** Quits: tanto (~tanto@178.62.223.32) (Quit: Adios)
[20:05:00] <pyzozord> hmm never heard of it
[20:05:06] <dTal> really?? OMG
[20:05:12] <dTal> ESP8266, ESP32
[20:05:26] <dTal> like superfast arduinos with wifi
[20:05:34] <pyzozord> oh but that's a bug in my case
[20:05:44] <dTal> oh well then nevermind :[
[20:05:47] <dTal> * :P
[20:06:04] <pyzozord> it might have a usb port, but no wireless for sure
[20:06:43] <sonny> If I visit my website using the ip, the server gives me a 404. Isn't my domain name the same as the ip?
[20:07:06] *** Joins: tanto (~tanto@178.62.223.32)
[20:07:10] <GeDaMo> No, the domain name is translated to the IP
[20:07:14] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[20:07:44] <GeDaMo> How is your server setup?
[20:08:07] *** Joins: inky_ (~inky@37.186.117.147)
[20:08:44] <sonny> https://bpa.st/HWNA -- It's in the first 8 lines
[20:08:46] <bayaz> Title: View paste HWNA 
[20:08:52] *** Quits: inky (~inky@178.78.152.168) (Ping timeout: 246 seconds)
[20:08:56] <sonny> just listens for stuff on port 80
[20:09:16] <sonny> I think I don't understand how paths work
[20:09:46] <jelly> sonny, http protocol really wants you to specify the correct hostname, starting with 1.0 onwards
[20:09:49] <sonny> because the ip and domain name are not getting the same resource
[20:09:50] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[20:10:19] <sonny> jelly what do you mean?
[20:10:38] *** Quits: opeerateur_ (~My_user_n@91.143.220.230) (Ping timeout: 260 seconds)
[20:10:43] *** Joins: norayr (376bc34bfc@37.252.78.253)
[20:10:55] <jelly> I mean http://10.9.8.7/foo will not mean the same as http://sonny.network/
[20:10:59] <GeDaMo> Your HTTP request looks like GET / HTTP/1.1\nHost: 1.1.1.1\n\n and your server is saying "never heard of this 1.1.1.1"
[20:11:03] <jelly> /foo
[20:11:25] <sonny> oh
[20:11:49] <GeDaMo> You could try putting the IP address in 'alternative names' and see if that works
[20:11:52] <sonny> let me see what happens if I list it with the ip
[20:11:54] <sonny> yeah
[20:11:59] <KillerWasp> !join
[20:12:01] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Remote host closed the connection)
[20:12:18] <GeDaMo> But you'd have to keep updating that, I don't know if there's a way of doing that automatically
[20:12:38] <GeDaMo> Or maybe some way of saying any request that hits the server regardless of host goes to a default page
[20:12:44] *** Joins: AmR (~AmREiSa@102.44.191.208)
[20:13:24] <sonny> thanks, I'll see if I can figure out how to do that
[20:13:28] <GeDaMo> It might also mess with your encryption
[20:13:37] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[20:13:51] <jelly> when you have to test things on a new machine, the common workaround is to add an entry with new IP and host in your C:
[20:13:53] <GeDaMo> Doesn't the certificate have to be for a particular domain name?
[20:14:10] <jelly> /etc/hosts file, or C:\Windows\system32\drivers\etc\hosts 
[20:14:13] <sonny> yeah
[20:14:26] <sonny> I made certificates for redshire.xyz
[20:14:51] <sonny> oh yeah the hosts file :D
[20:15:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:15:32] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[20:15:33] *** Joins: bomb (~bomb@user/bomb)
[20:15:53] <KillerWasp> sonny: i made even CA server
[20:16:15] <KillerWasp> like i don't need verysign or other servers
[20:16:19] *** Joins: Enitin (~Enitin@82.180.145.225)
[20:16:34] <jelly> less common is to use nice options to connect to different IP but provide the desired Host: header value, curl -vL --connect-to :443:ip.ad.dr.ess:443 "https://redshire.xyz/"
[20:17:31] <sonny> I'm just doing http for now
[20:18:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:18:37] <sonny> welp too many requests
[20:18:52] <KillerWasp> I had created the CA server with the purpose of replacing verysign and other CA sites, and I have it there, anyone can have certificates if they want.
[20:18:56] <sonny> jelly this is me trying to configure certbot https://bpa.st/3YAA
[20:18:57] <bayaz> Title: View paste 3YAA 
[20:19:28] <sonny> KillerWasp is it free?
[20:19:37] <KillerWasp> sonny: hahah nooo.
[20:19:58] *** Quits: password (~password@user/password2) (Ping timeout: 260 seconds)
[20:20:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6d2e:9a88:666c:3fae) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:20:21] <sonny> certs are a good buisness but it's going to be hard to compete with lets encrypt and the reputation of other folks like verisign
[20:20:52] <KillerWasp> sonny: nothing is free. The other sites you have to pay for by other means under the heading of 'free'. At least you have the certainty that I only accept the money.
[20:21:17] <jelly> do you accept KillerBucks
[20:21:33] <vdamewood> I only pa in vdollars.
[20:21:36] <vdamewood> pay*
[20:22:01] <jelly> not vdimes ?
[20:22:08] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:22:34] <vdamewood> jelly: Naw, those were discontinued due to inflation.
[20:22:52] <KillerWasp> jelly: hummm... I have also tried to build a new bitcoin network, but it seems too unstable and very unreliable... :$
[20:22:53] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 260 seconds)
[20:23:15] *** Joins: coaxing (~coaxing@user/coaxing)
[20:24:53] *** Quits: NTSYSTEM (~NTSYSTEM@202.58.197.223) (Quit: Textual IRC Client: www.textualapp.com)
[20:26:44] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Quit: Leaving)
[20:28:09] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:29:59] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 252 seconds)
[20:33:08] *** Quits: Guest48 (~textual@2001:ee0:4081:6914:907f:f137:fb2a:93e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:48] *** Quits: jkotra (~jkotra@122.176.152.121) (Ping timeout: 240 seconds)
[20:34:11] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 250 seconds)
[20:35:07] *** Joins: coaxing (~coaxing@user/coaxing)
[20:35:09] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[20:35:10] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:41:32] *** Quits: coaxing (~coaxing@user/coaxing) (Ping timeout: 252 seconds)
[20:41:36] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[20:44:24] *** Joins: jamea77 (~jamea@189.237.44.66)
[20:45:47] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 260 seconds)
[20:46:07] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:48:04] *** Joins: audio (~audio@user/audio)
[20:48:24] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:49:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[20:50:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[20:51:38] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:52:47] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpy3zax5gyrke1z.ipv6.telus.net)
[20:53:07] *** Joins: kulesh (~kulesh@109-252-100-64.nat.spd-mgts.ru)
[20:53:16] *** Quits: kulesh (~kulesh@109-252-100-64.nat.spd-mgts.ru) (K-Lined)
[20:53:17] *** Quits: tanto (~tanto@178.62.223.32) (Quit: Adios)
[20:54:42] <nomagno> https://termbin.com/9432
[20:54:43] <bayaz> Type: text/plain; charset=utf-8 
[20:54:48] <nomagno> I can tell this formatting sucks but not how to fix it. Any suggestions?
[20:55:24] <[o> what's wrong with it?
[20:55:28] <nomagno> It's meant to be for a '-h' of a unix command, I guess that much is obvious
[20:55:43] <nomagno> [o: it looks horrible in an actual shell
[20:55:49] <[o> looks good to me
[20:56:10] <[o> it's hard to give you any suggestion without looking at the actual problem
[20:56:20] <[o> I need to go inside your brain to see what you are actually seeing :)
[20:56:25] <[o> but I can't
[20:56:40] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:9133:d4a1:66e0:3fc)
[20:57:23] *** Joins: Vyst (~yaaic@user/Vyst)
[20:58:59] <pyzozord> nomagno: https://bpa.st/BZLQ maybe?
[20:59:00] <bayaz> Title: View paste BZLQ 
[20:59:51] <pyzozord> also can take some stylistic inspirations from https://man7.org/linux/man-pages/man1/man.1.html
[20:59:52] <bayaz> Title: man(1) - Linux manual page 
[21:00:03] <pyzozord> they use indentation
[21:00:40] <pyzozord> I think you can even use troff and make it generate a man page for you in text and they you can copy that text
[21:00:43] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[21:00:46] *** Joins: kakysha_ (~kakysha@user/kakysha)
[21:01:24] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[21:01:28] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:01:46] <pyzozord> taking look at man -h I think could be also useful http://bpa.st/PYUA
[21:01:48] <bayaz> Title: View paste PYUA 
[21:03:01] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 250 seconds)
[21:03:51] *** Quits: TheLinuxNerd (~tux@fsf/member/TheLinuxNerd) (Quit: ZNC - https://znc.in)
[21:04:04] *** Quits: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[21:04:11] *** Joins: TheLinuxNerd (~tux@fsf/member/TheLinuxNerd)
[21:04:35] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[21:04:52] *** Quits: Vyst (~yaaic@user/Vyst) (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
[21:05:09] *** Joins: XV8 (~XV8@2601:5cb:c001:50::4a2c)
[21:07:05] <nomagno> pyzozord: termbin.com/gmpe
[21:07:06] <nomagno> Much better, I think
[21:07:16] <nomagno> Tough I also cut down on content, of course
[21:07:35] <nomagno> Oops, I pasted the entire file!
[21:07:40] <nomagno> I meant to do sh *sh, not cat *sh :(
[21:08:12] <nomagno> termbin.com/wuad
[21:08:13] <nomagno> There
[21:09:37] *** Joins: tanto (~tanto@2a03:b0c0:2:d0::db8:c001)
[21:09:49] *** Quits: Bin_Bash (~binbash@49.206.9.201) (Quit: Leaving)
[21:11:02] <pyzozord> yeah I agree, easier to see the structure
[21:11:51] <pyzozord> anyone knows why is sha1sum print out - at the end?
[21:12:25] <bjs> pyzozord: isn't "-" the standard nixism for "stdin"
[21:12:57] <bjs> pyzozord: try `sha1sum *` and you'll get a hash for each file, and the filename at the end
[21:13:06] <pyzozord> right it might be listing out files it computet hashes for
[21:13:37] <pyzozord> what was the utility to just get the first field?
[21:13:55] <Bou> cut?
[21:14:03] *** Joins: Toneloc (~Toneloc@193.61.159.40)
[21:14:10] <bjs> pyzozord: well you can certainly use something like awk or any programming language to extract the first word of each line
[21:15:19] <nomagno> UTF-8 locale is evil
[21:15:25] <pyzozord> hmm I think printf 'stuff' | sha1sum | cut -d ' ' -f 1 works but I'm not sure if that's the right way
[21:15:29] <apotheon> nomagno: Why?
[21:15:30] <nomagno> The tr command can not get illegal input!
[21:15:40] <nomagno> It shouldn't, anyways
[21:15:57] *** Parts: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) ()
[21:16:01] <pyzozord> bjs: yeah I know I'd probably use sed, but I knew there were some field utilities so wanted to try those
[21:16:11] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:16:11] *** Joins: Akuli (~Akuli@85-76-42-117-nat.elisa-mobile.fi)
[21:16:26] <nomagno> The UTF-8 locale makes it so binary-data-processing commands care about multi-byte sequences as to make some straight up illegal
[21:16:31] <GeDaMo> pyzozord: awk '{print $1}' should work too
[21:16:34] <nomagno> It shouldn't
[21:16:36] <bjs> pyzozord: well awk is the usual thing here, it's basically designed for it
[21:16:54] <nomagno> I mean the fix is easy, LC_CTYPE=C
[21:16:59] <apotheon> nomagno: That does seem wrong.
[21:17:06] <nomagno> But that took a long while to figure out
[21:17:18] <apotheon> What OS are you using for this?
[21:18:14] <apotheon> . . . and can you give me a simple example command to test here?
[21:18:17] <nomagno> FreeBSD tr, tough whichever version MacOS uses is also affected apprently
[21:18:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[21:19:23] *** Joins: bwieder (~bwieder@216.106.142.65)
[21:19:43] <gitesh> How do you find leetcode programming? 
[21:19:49] <gitesh> Easy or hard?
[21:20:08] <Bou> I find it fun
[21:20:31] <gitesh> I don't
[21:20:36] <bjs> then dont do it
[21:20:45] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:21:13] <pyzozord> gitesh: hard
[21:21:26] <gitesh> Oh you're my side
[21:21:29] <pyzozord> but fun
[21:21:32] <Bou> It's sad how people are doing this for their CV
[21:21:50] <Bou> if you hate programming that much, why even do it
[21:22:05] <nomagno> apotheon: cat /dev/urandom | LC_CTYPE=C.UTF-8 tr -dc 'A-Z'
[21:22:53] <nomagno> If you don't have /dev/urandom just pick a binary file
[21:22:54] <pyzozord> Bou: arguably competetive programming is not professional programming is not hobbyst programming
[21:22:57] *** Quits: Inst (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[21:23:07] <gitesh> I don't hate all programming but the type of programming leetcode is
[21:23:40] <pyzozord> gitesh: do it, it's good for you, it gets easier and you start liking it more
[21:23:41] <apotheon> How long does it take you to get an error?
[21:23:43] <apotheon> nomagno: 
[21:24:00] <gitesh> Ok
[21:24:15] <apotheon> (using urandom)
[21:24:15] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Quit: Lost terminal)
[21:24:46] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-2e8413-215.dhcp.inet.fi) (Quit: Leaving)
[21:25:13] <apotheon> nomagno: With a small a.out, I get a string of capital letters running that command.
[21:25:38] <pyzozord> gitesh: start with these https://leetcode.com/explore/learn/
[21:25:38] <bayaz> Title: Explore - LeetCode 
[21:25:49] <apotheon> A run of a few seconds from urandom produced a much longer string of capital letters, of course.
[21:25:50] <Bou> gitesh: There are a few basic algorithms you can use for many problems, after a while you'll get better at spotting them
[21:25:52] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[21:26:17] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Quit: ZNC - https://znc.in)
[21:26:31] <apotheon> Actually, the output from =C.UTF-8 and =C was identical.
[21:26:38] <pyzozord> gitesh: I did Arrays 101, Linked List, Binary Tree, Binary Search, Array and String, Queue & Stack.
[21:26:39] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[21:26:40] <apotheon> (given the a.out file)
[21:27:00] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:27:12] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[21:27:31] * oldlaptop observes apotheon's behavior on openbsd and at least two voidlinux systems
[21:27:44] <oldlaptop> let's see what the totally aboveboard and not illegal macos vm does
[21:27:49] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:27:52] <apotheon> oldlaptop: excellent
[21:27:54] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk)
[21:28:03] <pyzozord> gitesh: I plant to complete the rest and go through everything one more time. I did 57 easy, 58 medium and 10 hard problems
[21:28:38] <apotheon> It might make sense that MacOS would have the same problem with td as FreeBSD, given the provenance of much of MacOS' userland.
[21:28:59] <oldlaptop> Ah, yes, macos blows up immediately with `tr: illegal byte sequence`
[21:29:07] <oldlaptop> (10.15.something, not that it likely matters much)
[21:29:12] <nomagno> :D
[21:29:16] <apotheon> The problem, it seems, is the FreeBSD implementation of td.
[21:29:34] <apotheon> time for a bug report, perhaps, or a feature request if they don't consider it a bug
[21:29:52] <Bou> I wish Leetcode could test algorithm complexity somehow, often problems say "do X in O(n) time" but it doesn't check that
[21:30:02] <nomagno> Hm, yup, I will take a look
[21:30:12] <oldlaptop> Bou: Do they not do so indirectly by imposing time constraints?
[21:30:20] <apotheon> I'm *guessing* it's a td problem, and not a locale handling problem in the system.
[21:30:41] <Bou> oldlaptop: afaik the time constraints are enormous
[21:30:54] <oldlaptop> e.g. if they tell you "lul sort this list in O(n*lg(n))", they'll give you a list long enough that quicksort will pass and bubblesort won't?
[21:30:57] <oldlaptop> I would hope so, anyway
[21:31:04] <nomagno> apotheon: tr, but probably yeah
[21:31:11] <apotheon> err, yeah, I meant tr
[21:31:12] <apotheon> sorry
[21:31:21] <apotheon> My brain is still recovering.
[21:31:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:840:dacd:590f:ddfc)
[21:31:34] <Bou> nah, you can often get away with dumb brute force algorithms
[21:31:38] <oldlaptop> :(
[21:31:42] <apotheon> Each time I typed td, I thought "Why does this feel wrong?"
[21:31:53] <Bou> Or even figure out the input and hardcode the correct output
[21:31:57] <oldlaptop> The html is strong with this one?
[21:32:15] <oldlaptop> Bou: *That* should never be feasible. What the heck are they doing that that's feasible?
[21:32:16] *** Joins: coaxing (~coaxing@user/coaxing)
[21:32:22] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[21:32:30] <nomagno> Bubblesort is a horrible name
[21:32:41] <oldlaptop> better than quicksort
[21:32:42] <apotheon> so leetcode is called "leet" code because script kiddie tactics work fine
[21:32:49] <nomagno> It's literally just binary sort
[21:32:50] <nomagno> Compares two, swaps, repeat
[21:32:56] <pyzozord> is hashing a hash makes it any more secure?
[21:33:09] <oldlaptop> It's so named because the values "bubble up" to their correct positions
[21:33:24] <oldlaptop> which at least sort of communicates something about how the algorithm operates
[21:33:33] <oldlaptop> as opposed to "quicksort" which is almost content-free
[21:33:47] <nomagno> pyzozord: well hashes aren't secure. You mean if it decreases the chances of collision?
[21:33:47] <nomagno> Doubt
[21:33:54] <oldlaptop> I mean, at least it correctly communicates that it's a sorting algorithm, and that it's usually not O(n^2)
[21:34:00] <oldlaptop> (sort of)
[21:34:11] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:34:16] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[21:34:16] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[21:34:16] *** Joins: tane (~tane@user/tane)
[21:34:36] <pyzozord> I guess I actually meant secure but maybe I didn't think a lot about the question
[21:34:43] *** Joins: anddam (~anddam@user/anddam)
[21:34:54] <pyzozord> I guess one way it can be insecure is finding your hash in a precomputed hash list
[21:35:03] <pyzozord> so in that sense hashing twice would make it more secure
[21:35:21] <nomagno> It would, yes
[21:35:21] <oldlaptop> Salting it is enough for /that/ in practice
[21:35:37] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[21:35:45] <apotheon> Multihashing can help against rainbow table attacks on password hashes.
[21:35:49] <oldlaptop> and should be faster, in principle
[21:35:53] <apotheon> . . . but seed them.
[21:35:58] <apotheon> because of what oldlaptop said
[21:36:03] <oldlaptop> (but then again for some applications you don't want hashes to be fast)
[21:36:17] <oldlaptop> especially those applications in which rainbow tables are relevant!
[21:36:24] <nomagno> I was thinking file hashes I guess
[21:36:28] <apotheon> I don't know of many people who generate useful rainbow tables of multi-seed-hashed values.
[21:36:39] <oldlaptop> you want your password hashes to be just fast enough that the speed isn't an issue for your application, and *no faster*
[21:36:55] <apotheon> right
[21:37:15] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[21:37:25] <pyzozord> in my case speed doesn't matter at all i use it to hash a password I'll enter to websites that force me to have an account
[21:37:40] <apotheon> It's impractical to build multi-seed-hashed rainbow tables, generally speaking.
[21:37:55] <apotheon> pyzozord: umm . . . wait
[21:37:55] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[21:38:04] <EdFletcher> Any password hash should be “slow”, so as to slow down any potential brute force attacker 
[21:38:21] <oldlaptop> pyzozord: You use it as a password generator/key-derivation function?
[21:38:23] <nomagno> pyzozord: Uh, why tough?
[21:38:24] <bomb> https://i.imgur.com/iE76pCP.png
[21:38:25] <bayaz> Type: image/png Size: 100.2 kB 
[21:38:31] <pyzozord> oldlaptop: yeah
[21:38:36] <apotheon> If you're entering the hash when it asks for the password, then it's just a password from the point of view of the web application.
[21:38:39] <oldlaptop> that is, you use sha512("hunter2") as the "password"?
[21:38:46] <nomagno> I don't understand what you mean I guess
[21:38:49] <epony> could have been worse "Bubbles' Ort" (place).. at the time of introduction it was faster and captured micro-computers in the 80ies  https://en.wikipedia.org/wiki/Quicksort  "Quicksort is an in-place sorting algorithm. Developed by British computer scientist Tony Hoare in 1959 and published in 1961, it is still a commonly used algorithm for sorting. When implemented well, it can be somewhat faster than merge sort and about two or three times faster than 
[21:38:49] <pyzozord> nomagno: in case that website gets hacked and on odd chance it stores my password raw
[21:38:49] <epony> heapsort."
[21:38:50] <bayaz> Title: Quicksort - Wikipedia 
[21:39:10] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[21:39:13] <pyzozord> nomagno: or even if it hashes my password again better not be prone to rainbow tables
[21:39:26] <oldlaptop> I mean, for that application base64-encoding the hash is arguably better than hex-encoding it, even. (At least some website's "password strength" meter is going to think so.)
[21:39:48] <pyzozord> nomagno: as a general good habit, for example my landlord company just got hacked and leaked my personal info
[21:40:29] <apotheon> pyzozord: Is this supposed to protect access to that single website account, or is it to protect reuse of your password elsewhere?
[21:40:32] <nomagno> pyzozord: Using a password manager is the way to avoid this stuff, usually. You can just lock a plaintext database with GPG, and keep da random passwords there, if you don't want to use KeePass
[21:40:47] <apotheon> If the latter, sure, that makes sense, if you hash it with a different seed for each use case.
[21:40:58] <pyzozord> Apparently landlord companies are a good target for hackers. They hold a lot of personal information of pople and are small enough to have poor security
[21:41:02] <apotheon> There are "password managers" that work that way.
[21:41:51] <nomagno> I'm not sure that is any different from just randomly generating the passwords
[21:42:04] <anddam> howdy, possibly OT but I have an objC file and I am using astyle (or rather trying to) to have a coherent formatting. I have function definitions both as   - (void)showFoo    that    - (void) showBar     astyle does *not* handle that space between close parens and method name but I'd like it to 
[21:42:08] <epony> that capture of "attention" was because of the "recursion" which was "branded" and "touted" as remarkable improvement and elegance, bringing innovation and ingenuity.. but it actually forced some changes in how compilers and tokenisers work, which is the real benefit, not the actual recursion (which is a problem most of the time)
[21:42:23] <nomagno> It slightly increases the attack surface for the passwords I think
[21:42:23] <apotheon> Yeah, it's not any better than just randomly generating passwords.
[21:42:28] <pyzozord> apotheon: the primary goal is making sure I have a systemic way to generate passwords for each account such that I don't have to remember them and I don't have to store them, and they are unique for each website
[21:42:38] <anddam> I am not able to figure how that kind of options is named, if there is one at all. Any hint?
[21:42:58] <apotheon> pyzozord: My question is whether you're using the same input password for each, though.  Note what I said about password managers.
[21:43:02] <oldlaptop> anddam: Not OT, but if astyle has a channel of its own you'd probably be more likely to get an answer there
[21:43:03] <nomagno> pyzozord: You're noting down seeds, which is equivalent to noting down random passwords
[21:43:09] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:43:27] <epony> this is still not understood by people, so affectionate with "programming" layout that they totally disregard realities of computer operation and constraints of implementation, resulting in inability to compile and inability to compute, with various overflows and oversteps of real system constraints in hardware and software implementations
[21:43:30] <anddam> oldlaptop: no, I figure that'd be too niche of a channel
[21:43:38] <anddam> oldlaptop: I mean the project homepage is on sf
[21:43:45] <pyzozord> I'm having a systemic way to come up with a password for each account and each domain and some salt
[21:43:47] *** Joins: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:9586:ce9f:b6ec:92ff)
[21:43:49] <pyzozord> then I hash that
[21:43:52] <oldlaptop> It doesn't matter if there's only *one* person there, just so long as that's the one person who can answer your question.
[21:44:12] <anddam> oldlaptop: right. But in this case there is no "there"
[21:44:22] <oldlaptop> You checked? :P
[21:44:28] <anddam> I queried alis
[21:44:33] <anddam> before coming here it is
[21:44:33] <oldlaptop> aw. :(
[21:44:36] <pyzozord> and ideally the email account will be also generated in systemic way based on domain and salt
[21:45:05] <nomagno> pyzozord: is there any difference between that and randomly generating the password?
[21:45:08] <nomagno> In practice
[21:45:08] <pyzozord> point being i only remember one way of generating these and I don't store them anywhere
[21:45:22] <pyzozord> nomagno: yes, you need to store random passwords somewhere
[21:45:42] <apotheon> nomagno: they're regenerated every time
[21:45:51] <epony> there is a very narrow gap from purely functional to fully disfunctional ;-) and it's often in the ommission of those real constraints and saturation of machine resources through unfactored restraints, that when implemented, eliminate the advantages of the fancier "syntax and grammar elegance and freeform algorithm coding"
[21:45:56] <apotheon> no password database
[21:46:07] <apotheon> There are trade-offs.
[21:46:16] <nomagno> OH... you're trusting your method is obscure enough no one realizes it's all generated from the same memorable password + the method used?
[21:46:16] <nomagno> Or something like that
[21:46:28] <apotheon> essentially
[21:46:40] *** Joins: pulse (~pulse@user/pulse)
[21:47:13] *** Joins: DavidPSpain22 (~David@213.177.202.19)
[21:47:16] <apotheon> Then again, the password you use to access your password database via a traditional password manager also trusts that your memorable password is strong enough and nobody will get access to the DB.
[21:47:51] <apotheon> (which becomes extra-scary when you use a password manager that stores your DB somewhere other than the local system)
[21:47:56] *** Quits: DavidPSpain22 (~David@213.177.202.19) (Quit: Leaving)
[21:48:12] <nomagno> I guess if you use your own secret variation of a hashing/salting algo it's, practically speaking, safe
[21:48:16] <pyzozord> for me it will be acc=sha1(salt+domain+name) pass=sha1(salt+domain+acc)
[21:48:18] <Bou> `$ grep google ~/passwords.txt` 😜
[21:48:40] <nomagno> apotheon: you have to kill me to get my DB password.
[21:48:51] <knusbaum> Why use a custom hashing scheme? 
[21:48:53] <pyzozord> I can generate these reliably without remember anything when I have access to the itnernet with wolfram alpha
[21:49:06] <pyzozord> or when I have my own laptop with cli script
[21:49:11] <apotheon> so stay the fuck away from LastPass
[21:49:13] *** Quits: rsx (~dummy@ppp-188-174-132-237.dynamic.mnet-online.de) (Quit: rsx)
[21:49:24] <pyzozord> so I don't need to store anything anywhere
[21:49:39] <apotheon> nomagno: or be good at guessing, or brute force it
[21:49:40] <knusbaum> I see. You derive your passwords from a hash of some properties of the account.
[21:49:47] <nomagno> ... Wolfram alpha is a proprietary cloud service, aren't you throwing the security away?
[21:49:55] <anddam> oldlaptop: --pad-return-type !
[21:49:58] * anddam oopses
[21:50:14] <epony> functional programming is a fairly recent trend, that is pushed in the 80ies, burried as a failure, and resurfaced again recently, defined by all means (including failure) acceptable to displace the dominance of imperative and procedural programming languages  https://en.wikipedia.org/wiki/Recursion_(computer_science)#Expressive_power
[21:50:14] <apotheon> pyzozord: Wait . . . you're relying on info from Wolfram Alpha?
[21:50:14] <bayaz> Title: Recursion (computer science) - Wikipedia 
[21:50:34] <apotheon> WTF?
[21:50:37] <pyzozord> no only using wolfram alpha as a semi-trustable way to generate sha1
[21:50:57] <pyzozord> when I don't have access to my cli
[21:51:00] <apotheon> I would not trust *ANY* part of my approach to generating a password.  Holy fuck.
[21:51:10] <apotheon> err
[21:51:16] <nomagno> I mean just download Termux and setup a script there then put a shortcut somewhere
[21:51:17] <oldlaptop> Surely there's something out there that serves up a client-side hash function implementation
[21:51:22] <apotheon> I would not trust *ANY* part of my approach of generating a password to Wolfram Alpha.  Holy fuck.
[21:51:37] <pyzozord> apotheon: can you relax?
[21:52:01] <knusbaum> Don't you still have to remember the salt?
[21:52:09] <pyzozord> knusbaum: yes
[21:52:21] <knusbaum> But you use the same salt for every password?
[21:52:23] <apotheon> Yeah, as much as JavaScript in the browser is a terrible security problem, it's better than sending data across the internet to a proprietary service that likely stores and analyzes every request it receives.
[21:52:36] <pyzozord> knusbaum: yes single salt
[21:52:47] *** Joins: vicfred (~vicfred@user/vicfred)
[21:53:01] <oldlaptop> knusbaum: Presumably the idea is that it's easier to remember "it's sha512('hunter2')" than "it's sOmErAnDoMnOnSeNsE"
[21:53:03] <nomagno> pyzozord: I like to think you just need to zone in and learn to read Apotheon's messages in the right tone. Or am I supposed to imagine you screaming?
[21:53:08] <pyzozord> knusbaum: although I could improve my salt to include something based on the domain to make it variable
[21:53:12] <pyzozord> knusbaum: that's a good idea
[21:53:13] <apotheon> not to mention the potential issues with HTTPS
[21:53:15] <nomagno> apotheon, ^
[21:53:28] <knusbaum> mmm. Hashing doesn't help much then. I guess it obscures your schema from anyone who compromises a site that doesn't hash your password correctly.
[21:53:40] <nomagno> Most people can't scream mentally, apparently? IDK
[21:53:47] <piou> knusbaum: that helps much actually
[21:53:52] <apotheon> nomagno: I'm not screaming.  I'm just a bit concerned.
[21:54:00] *** Joins: jamea (~jamea@189.237.44.66)
[21:54:06] <knusbaum> piou, yeah, maybe.
[21:54:12] <pyzozord> nomagno: not sure what do you mean, but I'm not screaming
[21:54:28] <epony> that "trending" goes way back into "picking" and replicating choices and "renames" of same concepts going back into data structure choices and building block primitives in algorithms, constructs, and even simple preferences of riskier and less optimal variants, for the sake of "demanding" or "requiring a particular domain of problems (paradigm)
[21:54:34] <epony> "In languages where looping constructs are preferred, the iterative version may be as much as several orders of magnitude faster than the recursive one. In functional languages, the overall time difference of the two implementations may be negligible; in fact, the cost of multiplying the larger numbers first rather than the smaller numbers (which the iterative version given here happens to do) may overwhelm any time saved by choosing iteration."
[21:54:51] <oldlaptop> epony: Can you paste this stuff on your blog or something instead, please?
[21:55:19] <pyzozord> oldlaptop: yes that's the idea
[21:55:26] <nomagno> pyzozord: Messed up with the order of pings
[21:55:27] <nomagno> I just wanted to know the tone apotheon means to throw bad words around with
[21:55:29] <KillerWasp> epony: yeah, nobody want you here!
[21:55:42] <apotheon> Did I use "bad words"?
[21:56:10] <oldlaptop> apotheon: Whether you agree with it or not, people do tend to impute a certain... strength to "fuck".
[21:56:12] <apotheon> They're just words, so I don't necessarily attribute any special tension/hostility/whatever to them, but I didn't think I actually used any so-called "bad words".
[21:56:15] <nomagno> apotheon: Well I'm unsure what else to call the 'holy fuck' at the end. Uh... Expletive?
[21:56:26] <apotheon> Oh, I guess I said "holy fuck".
[21:56:33] <apotheon> Yeah, expletive.
[21:56:40] <apotheon> Darn is also an expletive.
[21:56:51] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:56:52] <np1810[m]> <pulse> "i should make an alias for..." <- I use acronym "a dog" to remember it... :p
[21:56:56] <apotheon> unless you're talking about yarn working technique
[21:57:02] <nomagno> Tom Scott said they were called something specific
[21:57:14] *** Quits: jamea77 (~jamea@189.237.44.66) (Ping timeout: 272 seconds)
[21:57:33] <apotheon> "holy fuck" is an expression of surprise
[21:57:36] <apotheon> like "wow"
[21:58:14] *** Quits: Toneloc (~Toneloc@193.61.159.40) (Ping timeout: 250 seconds)
[21:58:18] <apotheon> "An expletive is a word or phrase inserted into a sentence that is not needed to express the basic meaning of the sentence. It is regarded as semantically null or a place holder. Expletives are not insignificant or meaningless in all senses; they may be used to give emphasis or tone, to contribute to the meter in verse, or to indicate tense."
[21:58:25] <apotheon> . . . from Wikipedia
[21:58:26] <pyzozord> apotheon: fyi i'm just in meh mood today so it's easy to overinterpret messages, i'm only speaking for myself but I don't read "holy fuck!" like "wow", I read the first one as a cradinal sin or extreme stupidity
[21:58:43] <pyzozord> and second one as slightly raised eyebrow
[21:58:58] <nomagno> It was like, the ones that are god damnifiers and fornicatives
[21:58:59] <oldlaptop> You can't necessarily expect everyone in a channel with... 738 nicks in it (at least two of which are bots, but never mind) to share your sanitized view of these things
[21:58:59] <nomagno> Let me pull it up
[21:59:08] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 260 seconds)
[21:59:31] <apotheon> oldlaptop: Me?
[21:59:35] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[21:59:45] <oldlaptop> Yes.
[21:59:46] <apotheon> . . . if by "sanitized" you mean "not jumping to conclusions", okay.
[21:59:56] <epony> well, I had to say something on the side of the comparison that is shown here  https://en.wikipedia.org/wiki/Sorting_algorithm#Comparison_of_algorithms  but there is nobody interested at the moment, so some other time, some other place ;-)
[21:59:56] <bayaz> Title: Sorting algorithm - Wikipedia 
[22:00:01] <apotheon> I've come to accept that people jump to conclusions, but I still call them out on doing so at times.
[22:00:06] <nomagno> 'Fornicatives' and 'Theo-impricatives' and derivatives can generate tension
[22:00:25] <nomagno> Got it
[22:00:28] <oldlaptop> It should be reasonably obvious that "wow" is less likely to be interpreted as hostile or screamy or whatever than "fucky fuck fuck"
[22:00:35] <apotheon> sure
[22:00:48] <apotheon> but "wow" isn't in my common vernacular, so it doesn't come readily to hand when typing
[22:01:01] <apotheon> I'm just typing how I speak, generally . . . speaking.
[22:01:02] *** Quits: jamea (~jamea@189.237.44.66) (Ping timeout: 260 seconds)
[22:01:09] <pyzozord> apotheon: and I asked politely because i'm just in a bad mood and I know more things bother me than usual so I'd rather avoid these stimuli for now and keep things nice in here
[22:01:11] <oldlaptop> Just, you know, maybe try to keep that toned down a little
[22:01:19] *** Joins: jamea77 (~jamea@189.237.44.66)
[22:01:33] <apotheon> I need to change decades of habit . . .
[22:01:35] <apotheon> bleh
[22:01:40] <apotheon> I should just shut up, I guess.
[22:01:43] <nomagno> What were we talking about again?
[22:01:43] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[22:01:45] <pyzozord> apotheon: so in case you felt like using similar style of comms more I'd just ignore you for a bit (nothing personal)
[22:01:50] <epony> nomagno, sorting ;-)
[22:01:54] <epony> passwords
[22:01:54] <apotheon> nomagno: me not talking
[22:02:00] <nomagno> Yes, password security
[22:02:11] <epony> and quality of cryptographic hash functions
[22:02:22] *** Joins: Blackajack (~Blackajac@2606:8700:a:11:1c05:f099:9c5d:7495)
[22:02:29] *** Quits: Blackajack (~Blackajac@2606:8700:a:11:1c05:f099:9c5d:7495) (Changing host)
[22:02:29] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[22:02:43] <nomagno> I just added an OTP pair generator to my utility set thingy, but now I have to add encoders and decoders, and modulo in POSIX shell is annoying
[22:03:44] <KillerWasp> epony: i say by joke. the others i don't know.
[22:03:45] <nomagno> At least $(()) exists
[22:04:11] <nomagno> Which means it's not heart-attack-inducing like with Bourne shell
[22:04:17] <KillerWasp> Sometimes when you're surrounded by haters, it's convenient to join them.
[22:04:25] <epony> I use randomness and get the printable parts of it then some changes for similarity and uniqueness  https://en.wikipedia.org/wiki/Hash_function_security_summary
[22:04:25] <bayaz> Title: Hash function security summary - Wikipedia 
[22:04:31] <apotheon> pyzozord: Feel free to ignore me -- a person who has written password managers, worked in infosec, and been a professional infosec writer; a person deeply involved in privacy technology matters, and who just finished what is probably the last interview before getting hired for a software security engineer job.  I'm sure I have nothing of worth to say, because I don't always immediately assign
[22:04:38] <apotheon> offensive meaning to transcribed mouth noises on the internet.  I'm sure that's fine for you.  We clearly have different views on communication.
[22:04:41] *** Joins: exvicesindaco_ (~exvicio@82.54.188.22)
[22:04:44] <epony> KillerWasp, of course, don't worry about it ;-)
[22:05:21] <apotheon> I'm off for breakfast.  Ta.
[22:05:28] <sonny> cya
[22:05:46] <nomagno> Uh, I'm going to walk outta here and see if I can disable TCS in this game and not crash. Bye!
[22:05:58] *** Joins: baffodoro (~raffaem@45.91.20.238)
[22:06:06] * oldlaptop wonders what that means other than "traction control system"
[22:06:29] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 250 seconds)
[22:06:31] <ProfSimm> apotheon: I wanted to see what the infosec guy wanted to say but the log is endless chat about what's an expletive and what isn't :(
[22:06:36] *** exvicesindaco_ is now known as exvicesindaco
[22:06:47] <knusbaum> oldlaptop, I bet it is traction control, and it's a driving game, and he doesn't want to crash.
[22:06:57] <epony> the other interesting article (even broken or insecure ones can be used, if they are fast enough to manipulate your randomness/entropy sources)  https://en.wikipedia.org/wiki/Cipher_security_summary
[22:06:57] <bayaz> Title: Cipher security summary - Wikipedia 
[22:07:10] *** Quits: bwieder (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[22:07:12] <oldlaptop> knusbaum: That would make sense
[22:07:38] *** Joins: yewscion (~yewscion@72-21-196-66.amazon.com)
[22:07:40] <knusbaum> oldlaptop, before you said it, I read it (I think) same as you - TCS is some game feature and when it's turned off the game crashes.
[22:07:45] <ProfSimm> epony: I'm not sure FP was ever burried as a "failure". More like it was driven into a niche because the people helming it also tend to be type safety nuts who value correctness proofs over pragmatism
[22:07:53] <knusbaum> I wonder which it is.
[22:08:24] <jeaye> Or lispers.
[22:09:08] <ProfSimm> Lisp is simple because the people who wrote it couldn't write a decent parser
[22:09:11] <epony> ProfSimm, pragmatism is sometimes "the computers we have now in circulation are not big enough for more elegance"
[22:09:13] <EdFletcher> ProfSimm: Not _all_ FP is zealous like that, erlang/elixir is deeply pragmatic and unzealous. Dynamic types no less! 
[22:09:22] <sonny> I wonder if functional programs are any more correct
[22:09:24] *** Joins: bwieder (~bwieder@216.106.142.65)
[22:09:34] <EdFletcher> sonny: They are easier to prove correct with formal methods 
[22:09:54] <ProfSimm> sonny: they are more formally correct, but this oddly doesn't translate to more useful sometimes
[22:09:56] <epony> sonny, only if they compile and run without busy looping the machine
[22:10:01] <sonny> I think it's emphasized for other reasons
[22:10:02] <knusbaum> There's a huge variety of functional type systems.
[22:10:02] <jeaye> ProfSimm: Yikes, now you're just throwing insults around.
[22:10:06] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[22:10:25] <ProfSimm> jeaye: about lisp? oh I was trying to kid/troll a bit :P I don't really mean it
[22:10:29] <sonny> EdFletcher: interesting
[22:10:49] <epony> right, the other reasons are proofs and data analysis and processing methodologies through abstract and complex algorithms
[22:10:55] *** Parts: BumbleBee (~BumbleBee@181.46.9.202) ()
[22:10:58] <sonny> I'm not sure it's any easier
[22:11:05] *** Joins: BumbleBee (~BumbleBee@181.46.9.202)
[22:11:06] <GeDaMo> sonny: depends what you mean by "correct" :P
[22:11:11] <ProfSimm> We need to start over with FP and completely eliminate static types from it
[22:11:16] <sonny> there's various proof systems
[22:11:18] *** Joins: gambl0re (~gambl0re@45.72.228.31)
[22:11:28] <nomagno> oldlaptop: it means Traction Control System.
[22:11:40] <nomagno> Driving an F1-style single-seater without assists and not finishing last is a real challenge!
[22:11:41] <sonny> it is parallel friendly and easier to reason about by the programmer though
[22:11:45] * oldlaptop bows to knusbaum
[22:11:53] <sonny> because there is less emphasis on state
[22:11:58] * knusbaum puts hands up
[22:12:01] <pyzozord> oh I know
[22:12:09] <pyzozord> you heard about that business card computer?
[22:12:17] <sonny> but as for one system being easier to formalize I dunno
[22:12:20] <epony> the security is obviously important for public and facility computing, for in-house data warehousing, that's discarded most of time in favour of cost of scarce factors, like people and rewrites
[22:12:24] <sonny> GeDaMo good point
[22:12:38] <nomagno> pyzozord: uh... Actually business card thin?
[22:12:59] <sonny> I read this recently http://niquette.com/paul/issue/softwr02.htm
[22:13:00] <bayaz> Title: Software Does Not Fail 
[22:13:08] *** Quits: CATS (apic@brezn3.muc.ccc.de) (Remote host closed the connection)
[22:13:20] <knusbaum> I would argue there's *more* emphasis on state - the rules for how program state evolves are a lot more strict.
[22:13:30] <sonny> tdlr if the software is correct it will not fail, it would be the hardware failing or the spec is incorrect
[22:13:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:13:49] <pyzozord> nomagno: yeah I heard about such things
[22:14:03] <sonny> it seems that there isn't much interest in having correct programs (yet)
[22:14:09] <GeDaMo> https://hackaday.com/2019/12/24/now-even-your-business-card-can-run-linux/
[22:14:09] <bayaz> Title: Now Even Your Business Card Can Run Linux 
[22:14:21] <oldlaptop> nomagno: That's sort of what newer credit cards are
[22:14:31] <sonny> knusbaum that doesn't make any sense
[22:14:38] <bomb> yeah that's the case for ages
[22:14:40] <bomb> see: Java Card
[22:14:44] <oldlaptop> I'm told the EMV ones run java
[22:14:56] <pyzozord> looks like it even has a button
[22:15:22] <GeDaMo> That's the keyboard! :P
[22:15:23] <oldlaptop> The button is probably the thickest and least business-card-compatible part
[22:15:31] <sonny> imperative styles only provide one way to make programs ... with state
[22:15:35] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[22:15:38] <pyzozord> hehe
[22:16:12] *** Joins: wauterboi (~wauterboi@185.65.135.246)
[22:16:23] <epony> sonny, there is that "trend" and "modernity" which is merely, a change of attention to a particular sub-set of problems in some computing domains, which should not be perceived as global changes and times of rapid shift in methodologies of programming and building machines, it's just passing through various themes and tooling for their optimal solutions and moving forward, into previously unsolved or finding new ways to "sort" (pun-intended) the previous 
[22:16:23] <epony> ones "as generational pass through them again"
[22:16:37] <bomb> needs aluminum folio to keep that business card safe from static electric
[22:16:49] <GeDaMo> https://hackaday.com/tag/business-card/
[22:16:49] <bayaz> Title: business card ? Hackaday 
[22:17:04] <epony> can't say this is the best thing or that is the best thing ;-) but a caution to avoid "trending" and "paint all the things" with new brushes
[22:17:13] <oldlaptop> GeDaMo: The original site has some important context, namely a photo of the other side: https://www.thirtythreeforty.net/posts/2019/12/my-business-card-runs-linux/
[22:17:14] <bayaz> Title: My Business Card Runs Linux 
[22:17:20] <knusbaum> FP also manages state. It's not like FP languages don't have state, it's just managed much differently. That's sort of the point of FP.
[22:17:24] <oldlaptop> the USB plug isn't obvious from the front
[22:17:29] <ProfSimm> I've read about recursive descent browsers and they list some drawbacks... but I don't understand why they're ascribed to them. Like "you can't look ahead infinitely". You can though, why not.
[22:17:35] <nomagno> oldlaptop: SIM cards have their own JVM computah inside, them, apparently
[22:17:38] <knusbaum> An infinite recursion in FP emulates a loop, and the state is captured through the function parameters.
[22:17:42] <nomagno> But I can't find ANY specs on it!
[22:17:53] <sonny> ProfSimm you can, what you read phrased that incorrectly
[22:18:13] <nomagno> Why is mobile stuff so awkwardly/sparingly specified when it's the most global and oldest crap of all?
[22:18:16] <ProfSimm> sonny: I think some heavily used parsers are recursive descent no
[22:18:28] <bomb> nomagno https://docs.oracle.com/en/java/javacard/3.1/
[22:18:28] <bayaz> Title: Java Card 3.1 Documentation - Home 
[22:18:28] <sonny> but it turns out having lots of lookahead complicates things needlessly
[22:18:43] <knusbaum> ProfSimm, recursive descent is an extremely common method, yes.
[22:18:45] <sonny> ProfSimm yeah its popular among industry compilers
[22:19:17] <epony> complications get split into multiple stages and dynamic choice of these given to the programmer, the libraries, the languages, the implementations and ultimately the hardware..
[22:19:22] <ProfSimm> knusbaum: sonny: ah ok. 
[22:20:04] <sonny> they discuss this in the dragon book I think, I read about it in programming language pragmatics
[22:20:31] *** Joins: thelounge5744 (b94186e8@67.205.143.82)
[22:20:37] <KillerWasp> http://anti.teamidiot.de/static/nei/RUu3N.png - and late all the channels have +c mode.
[22:20:38] <bayaz> Type: image/png Size: 33.4 kB 
[22:20:57] <sonny> but say, a lookahead of one is fine if most of your operator symbols etc are made of two characters
[22:21:00] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Read error: Connection reset by peer)
[22:21:06] *** Joins: Macbethwin (~chargen@D964062A.static.ziggozakelijk.nl)
[22:21:22] <sonny> keywords don't usually overlap either
[22:21:36] <knusbaum> In my experience, parser generators tend to give a somewhat working parser faster than writing a RD parser by hand, but modifying the generated parser and dealing with exceptional conditions, giving good errors, etc. ends up being much harder. 
[22:21:39] <ProfSimm> frankly I think I do it slightly differently than the examples I've seen. I don't descend when a method fails to match one from a set of tokens. I descend preemptively,  and then ascend when the lowest level method fails to match from a set of tokens
[22:21:58] <knusbaum> From reading on the internet it looks like other people have similar opinions.
[22:22:14] *** Macbethwin is now known as Chargen
[22:22:35] <sonny> knusbaum it's just harder to get accurate information when you get it from a table driven method
[22:22:42] <knusbaum> ProfSimm, I think that sounds consistent with RD, if I'm understanding you correctly.
[22:22:48] *** Joins: flaqoniun (~F@32.211.211.39)
[22:22:51] <ProfSimm> knusbaum: yeah it's really bizarre to see a mainstream product's internal discussions be like "oh we can't do a <common syntax idiom> because our parser can't do that"
[22:22:53] <knusbaum> sonny, yes, right.
[22:23:09] <ProfSimm> knusbaum: probably. 
[22:23:14] <sonny> some tools might make it more complex than need be, but the underlying structure is the reason
[22:24:06] <sonny> good errors can use synchronization points in recursive descent (wirth), but that would be difficult to set up in a table method I think
[22:24:12] <knusbaum> sonny, Gotcha. I've never seen a hand-written table compiler. Maybe they do exist. I've only seen the table method used in conjunction with a generator.
[22:24:24] <epony> "compilers' compilers"..
[22:24:37] <epony> (developers' developers)..
[22:24:38] <knusbaum> epony, yaCC
[22:24:41] <sonny> json.org has a hand written parser ... guess what the table is incorrect and the code didn't work
[22:24:43] <epony> yeah
[22:25:05] <GeDaMo> https://en.wikipedia.org/wiki/Parsing_expression_grammar
[22:25:05] <bayaz> Title: Parsing expression grammar - Wikipedia 
[22:25:18] *** Quits: fe23 (~fe23@2409:8a34:466:6010:6458:f2ed:64ed:5c3f) (Quit: fe23)
[22:25:26] <sonny> knusbaum if your language has a proper grammar then it's fine to do it by hand ... if you will never modifiy it again
[22:25:43] <thelounge5744> What does a programmer do when they invest half of their life into their career just to get tired from it and see no future or perspective anymore?
[22:25:47] <sonny> parser generators are just eaiser ... they do state reduction as well
[22:25:50] <knusbaum> sonny, right, but in that case why not just use a generator?
[22:25:55] <knusbaum> sonny, exactly.
[22:25:59] <sonny> yep
[22:26:03] <ProfSimm> thelounge5744: there's hunger for IT staff worldwide
[22:26:07] <kittyn> thelounge5744, retire and become an influencer
[22:26:14] <epony> https://en.wikipedia.org/wiki/History_of_compiler_construction#Self-hosting_compilers
[22:26:14] <bayaz> Title: History of compiler construction - Wikipedia 
[22:26:16] <ProfSimm> thelounge5744: maybe try different projects/places
[22:26:23] <sonny> thelounge5744 sky diving
[22:26:24] *** Quits: bwieder (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[22:26:24] <knusbaum> I actually like generators if I have a small grammar that I know won't change much, for some DSL. But if I'm developing a more substantial language, they usually end up getting in the way in a significant way.
[22:26:57] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:58] <ProfSimm> knusbaum: I had this concept of mapping every token type to a character and then parsing everything with regex
[22:27:03] <sonny> I would use a generator ... it's worth it
[22:27:04] *** Joins: Blackajack (~Blackajac@host-181-161.dhcp.uwm.edu)
[22:27:07] <ProfSimm> knusbaum: never tried it but :P coulda worked
[22:27:12] <sonny> so few languages have nice error messages anyways
[22:27:12] *** Quits: Blackajack (~Blackajac@host-181-161.dhcp.uwm.edu) (Changing host)
[22:27:12] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[22:27:30] <knusbaum> ProfSimm, that sounds terrifying, TBH. 
[22:27:47] <sonny> that's just lexing
[22:27:49] <ProfSimm> knusbaum: not quite. It means you can have a JIT parser in things like Python or JS
[22:28:00] <ProfSimm> sonny: no, not lexing.
[22:28:08] <sonny> it's what lex/yacc do
[22:28:20] <ProfSimm> sonny: lexing would be producing the tokens. I mean I take the tokens and map them to letters and produce the syntax tree using regex
[22:28:33] <sonny> that's the yacc part then
[22:28:34] <knusbaum> sonny, For a small thing, yeah. Debugging a language becomes very difficult when you can't get decent error messages, and adding some debug printing is difficult with the generated code.
[22:28:39] *** Joins: bwieder (~bwieder@216.106.142.65)
[22:28:48] <sonny> ah no, yacc has grammar
[22:28:52] <sonny> I dunno what that is then
[22:29:01] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Client Quit)
[22:29:06] <knusbaum> When you have no real idea of the control flow and you've made an error in the grammar, that's really hard to detect with generators.
[22:29:11] <ProfSimm> Well a grammar is identical to a regex pattern, but instead of letters, it has tokens
[22:29:18] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[22:29:21] <thelounge5744> Thank you ProfSimm, kittyn and sonny
[22:29:27] <sonny> np
[22:29:37] <ProfSimm> Wait, what did I do
[22:29:42] <ProfSimm> Oh ok
[22:29:49] <sonny> knusbaum it's also hard when your grammar sucks
[22:30:05] <epony> predictables' predictables:  in some "future un-DES-crypt" point-in-time (not very far from now), you'll use real processors as your optimisation last stages (and taking the actual runtime from their management engines as remote debugging sessions)
[22:30:14] *** Quits: BumbleBee (~BumbleBee@181.46.9.202) (Remote host closed the connection)
[22:30:14] <ProfSimm> I'm a firm believer of small grammar that has universal uses
[22:30:14] *** Joins: Macbethwin_ (~chargen@8.21.8.253)
[22:30:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:30:41] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[22:30:53] *** Joins: flaqoniun (~F@32.211.211.39)
[22:30:58] <sonny> yep
[22:31:02] <knusbaum> sonny, true. Developing a "good" grammar is hard actually, when the language is not trivial. Even when you follow best practices.
[22:31:12] <sonny> not really
[22:31:33] <knusbaum> Then you are better at writing grammars than I am. 
[22:31:35] <sonny> there isn't as much choice as you think
[22:32:09] *** Quits: thelounge5744 (b94186e8@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[22:32:22] <sonny> the hard part is 'universality' or orthogonality
[22:32:23] <knusbaum> No, but there *are* choices, and they interact with each other. It compounds. Upstream choices affect the choices you can make later.
[22:32:27] <pyzozord> nice, €16 https://www.token2.com/shop/?pg%3D2
[22:32:30] <epony> there is automation that can help you, you just write your pseudocode, the machine will get the patterns and grammar out of it for you, so you'll get a language, and depending on how well you pseudocode, you'll get a better formal language
[22:32:50] <sonny> but you don't have to go that far tbh, that would require you to be very familar with the domain you want to describe
[22:32:52] <pyzozord> https://www.token2.com/shop/product/token2-c202-hardware-token
[22:33:28] * epony replaces ProfSimm with a robot that argues through implementation ;-)
[22:33:44] *** Quits: Chargen (~chargen@D964062A.static.ziggozakelijk.nl) (Ping timeout: 252 seconds)
[22:33:48] <apotheon> Sometimes it's not worth developing a grammar.
[22:33:53] <sonny> knusbaum if you are writing it out you should see that, or at least after many reviews
[22:33:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[22:33:59] *** Macbethwin_ is now known as Chargen
[22:34:02] *** Joins: dunkeln (~dunkeln@117.239.204.226)
[22:34:02] *** Quits: dunkeln (~dunkeln@117.239.204.226) (Changing host)
[22:34:02] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[22:34:09] <sonny> apotheon when is that case?
[22:34:18] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) (Ping timeout: 252 seconds)
[22:34:18] <knusbaum> sonny, Yes, exactly. That's my point though - writing it all out and reviewing takes time. It's not really trivial. 
[22:34:33] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.101)
[22:34:35] <apotheon> If your parse tree is essentially usable as your grammar, and you discover awesome homoiconicity benefits, maybe stop there.
[22:34:40] *** Joins: noteness (~noteness@user/noteness)
[22:34:43] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[22:34:58] <sonny> yeah, but there's two ways that can look
[22:35:03] <sonny> m-exprs or s-exprs
[22:35:14] <dunkeln> are there alternatives to seamonster security modelling tool that works cross-platform on runs on the browser? need it for my classes
[22:35:22] <KillerWasp> what do you do when you don't have audio? Look at patterns in milkytracker and make hum?
[22:35:31] <pyzozord> but I think it sadly can keep only one account
[22:35:33] <ProfSimm> apotheon: wait, don't you have the grammar before you have the parse tree
[22:35:37] <audio> KillerWasp, you DARE ping me HEATHEN!?
[22:35:47] <KillerWasp> audio: lol
[22:35:58] <KillerWasp> xD
[22:36:02] <audio> lol
[22:36:05] <apotheon> Depending on your definition, mexp is either finessed sexp or a destruction of the homoiconicity of the language.
[22:36:11] *** Joins: CATS (apic@brezn3.muc.ccc.de)
[22:36:47] <apotheon> The original plan, as far as I understood it, was to drop an Algol-style language on top.
[22:37:02] <sonny> knusbaum I don't understand, say you sketch out what you like for a construct. Once that is defined you can reference that while you make the rest
[22:37:28] <sonny> algol style is pretty good
[22:37:38] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk) (Ping timeout: 260 seconds)
[22:37:38] <apotheon> . . . but not for homoiconicity.
[22:37:40] <sonny> the other thing would be something like APL
[22:37:47] <apotheon> oh fuck no
[22:37:57] <sonny> oh yes
[22:38:01] <pyzozord> this one is programmable https://www.token2.com/shop/product/token2-c301-i-programmable-hardware-token-iphone-compatible
[22:38:07] <apotheon> not if you're talking about its symbols given lack of standardized input devices for it
[22:38:19] <sonny> just keep the symbol size down so it's not intimidating
[22:38:33] <sonny> apotheon true, but there is unicode now
[22:38:38] <apotheon> down to ASCII, perhaps, until input devices get better for programming purposes with other symbols
[22:38:46] <apotheon> Unicode doesn't solve the typing problem.
[22:38:52] <knusbaum> ^
[22:38:59] <sonny> hmm
[22:39:02] <knusbaum> I'm happy using other symbols, but my keyboard isn't.
[22:39:07] <apotheon> precisely
[22:39:20] <knusbaum> keyboard *and* the software that it drives. None of it handles extended symbol sets well.
[22:39:23] <sonny> so you'd have to sell apl keyboards / computers
[22:39:32] <sonny> feasible
[22:39:35] <knusbaum> sonny, I think those existed.
[22:39:39] * knusbaum goes to look
[22:39:53] <sonny> yep, they even had calculator versions
[22:39:56] <apotheon> You'd have to do it for so long that it became normal for non-APL-programmer use, then I'd consider it.
[22:39:58] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Ping timeout: 260 seconds)
[22:40:21] <sonny> my prof said a company in germany used to teach apl to their clerks etc
[22:40:26] <knusbaum> https://www.flickr.com/photos/22368471@N04/25859890091
[22:40:27] <bayaz> Title: IBM 1389194 APL keyboard for terminal 
[22:40:39] <apotheon> I don't want a different fucking computer just for programming with an extreme price premium from a limited source that could go out of business at any time, probably using proprietary-everything.
[22:40:40] <sonny> he said it worked really well, especially considering the time
[22:40:47] <sonny> it's pretty nice for a calculator
[22:41:01] *** Joins: Cashlin (~hp@user/cashlin)
[22:41:10] <knusbaum> sonny, Ever looked at Ivy?
[22:41:20] <epony> interesting to see where nesting virtualisation ends up, (not really nesting, but important for correctness of the nesting capabilities, and then.. why not nesting too)
[22:41:21] <sonny> the go APL impl?
[22:41:27] <apotheon> Oops, I just gave someone two reasons to /ignore me, I guess.
[22:41:31] <apotheon> didn't even notice I was doing it
[22:41:43] <knusbaum> sonny, Yeah. It's not exactly APL, but it's very close.
[22:41:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:41:53] <sonny> apotheon well their is the mobile territory
[22:41:53] <knusbaum> Uses only ascii, though.
[22:41:57] <sonny> s/their/there/
[22:42:03] <ProfSimm> knusbaum: I literally had a flashback montage when I looked at this photo
[22:42:13] <epony> the point is, fixing the implementation, through doing harder and more validity and correctness and proper design decisions, that end up reused for something you need NOW and today (yesterday too)
[22:42:18] <apotheon> sonny: Smartphones are not good for general software dev, or are on-screen keyboards.
[22:42:24] <knusbaum> ProfSimm, haha.
[22:42:32] *** Quits: junebug (~junebug@2600:1700:3db0:2540:840:dacd:590f:ddfc) (Ping timeout: 252 seconds)
[22:42:43] <sonny> apotheon for tables you could make larger programs, on the phone it'd be a calculator
[22:42:50] <sonny> s/tables/tablets/
[22:43:15] <sonny> apotheon: nowadays I think an APL hardware platform could be made opensource and be succesful
[22:43:34] <sonny> since you are selling hardware to get profits, not proprietary APL compilers
[22:43:42] <knusbaum> sonny, Depending on what you mean, we *kind* of have that.
[22:43:44] <apotheon> The only way to make APL really work at this point would be to translate all of APL's symbols into keywords then use something like a preprocessor to turn them into symbols.
[22:44:00] <sonny> good idea
[22:44:01] <knusbaum> There is tons of vector and matrix processing hardware out there.
[22:44:11] <sonny> there are some APLs that use keywords, like nial
[22:44:25] <sonny> ends up being really verbose but it's good stuff
[22:44:25] <epony> if you can make the correct decisions today, you're making them only in software, so software decisions mandate hardware specifics, if your software picks up enough use cases and implementation that it becomes a necessity (can't just retire languages representing the machine, and changes there happen immediately when the machine changes with improvements, but not from very high level languages, which change lower level "implementation" languages)
[22:44:27] <ProfSimm> apotheon: maybe most of the stuff in APL can simply be functions or whatever
[22:44:32] <epony> ^ that's how it's connected
[22:44:38] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[22:44:40] <sonny> https://www.nial-array-language.org/
[22:44:40] <bayaz> Title: Nial Array Language 
[22:44:41] <apotheon> . . . but then mostly people would just learn the preprocessor language, and you'd need a decprocessor for some of the people doing the programming . . .
[22:44:54] <sonny> no need
[22:45:00] <apotheon> Okay, so nial.
[22:45:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:45:03] <apotheon> instead of APL
[22:45:07] <apotheon> never seen nial
[22:45:09] <bomb> I used Jinja for preprocessing
[22:45:09] <sonny> that's a simple ide/editor hack
[22:45:19] <dTal> oh did somebody say Nial
[22:45:28] <apotheon> sonny: Yeah, but then you nave to get everyone to use the same IDE.
[22:45:29] <sonny> apotheon came out of queens(?) where iverson made APL
[22:45:31] <dTal> that is my favorite obscure programming language!!
[22:45:35] <apotheon> That's a non-starter for many people.
[22:45:41] <apotheon> It would be a huge hindrance to uptake.
[22:45:47] <sonny> apotheon no requirement, this is easy for many editors to do
[22:45:51] <apotheon> (especially in a world of increasing desire for open hardware)
[22:45:54] *** Joins: inky (~inky@178.78.145.201)
[22:45:56] <dTal> Nial is the only readable APL derivative
[22:46:03] <sonny> e..g emacs prettify mode
[22:46:12] <sonny> ligatures is another option
[22:46:20] <epony> the more time progresses, the more opennes goes to the centre of the computing model
[22:46:25] <sonny> (but you'd have a smaller symbol set)
[22:46:28] <knusbaum> is mathematica derived from APL? 
[22:46:35] <knusbaum> no idea, just occurred to me.
[22:46:36] <sonny> I dunno
[22:46:40] <sonny> never heard any relation
[22:46:41] <dTal> no, mathematica is a term-rewriting lisp
[22:46:52] <knusbaum> I see.
[22:46:58] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:46:58] <sonny> mathematica is made with lisp?
[22:47:16] *** Quits: jamea77 (~jamea@189.237.44.66) (Ping timeout: 272 seconds)
[22:47:16] <epony> with little wolframseses
[22:47:23] <sonny> arrays go brrr
[22:47:27] <knusbaum> Actually now that you mention it, it does look very m-expressiony
[22:47:31] <sonny> ultimate data structure
[22:47:46] *** Quits: inky_ (~inky@37.186.117.147) (Ping timeout: 246 seconds)
[22:48:07] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[22:48:11] *** Quits: stanlib (~archblade@user/stanlib) (Remote host closed the connection)
[22:48:14] <epony> pointer
[22:48:21] <epony> we have our data structures in your data structures
[22:48:37] <sonny> apotheon good point about proprietary compilers ... it will probably be a hard sell to folks who remember the past
[22:48:48] <sonny> even if it's an open platform
[22:49:18] <ProfSimm> How do you show error when your code is GUI... I guess i need not line/char but node id range or something
[22:49:24] <apotheon> I'm not saying it's impossible to make it work.  I'm saying things have to change before it really catches on.
[22:49:27] <sonny> proprietary stuff still rules B2B I guess
[22:49:31] <knusbaum> For better or worse, it's hard to get adoption with a tool that doesn't play nicely with existing ecosystems.
[22:49:40] <sonny> e.g. L3 Harris, Matlab etc
[22:49:42] <apotheon> I, for one, would be unlikely to dive into it until those things change.
[22:49:43] <sonny> Excel
[22:49:46] <dTal> knusbaum: alright it's not *exactly* a list - it's more like a lisp's macro stage
[22:49:51] <dTal> s/list/lisp
[22:49:56] <epony> sonny, only when the consumer of that is another proprietary "B"
[22:50:17] <GeDaMo> https://www.cs.cmu.edu/~scandal/nesl.html
[22:50:17] *** Quits: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:9586:ce9f:b6ec:92ff) (Read error: Connection reset by peer)
[22:50:18] <bayaz> Title: NESL: A Parallel Programming Language 
[22:50:19] <dTal> and it's vaguely lispy in general expression style
[22:50:25] <sonny> oh yeah nesl
[22:50:35] <apotheon> sonny: Proprietary stuff still rules B2B in fields dominated by tech workers who are not, by nature, technically inclined.
[22:50:47] <apotheon> That's the realm of things like PeopleSoft and accounting technology.
[22:50:48] *** Joins: norayr (376bc34bfc@37.252.78.253)
[22:50:53] <sonny> there's also stuff like https://www.sac-home.org/doku.php
[22:50:55] <bayaz> Title: About SaC [SaC-Home] 
[22:51:08] <sonny> c-sntax functional array language
[22:51:26] <sonny> apotheon yeah it makes a lot more sense to me now
[22:52:00] <knusbaum> That's how Cobol still exists.
[22:52:06] <apotheon> It's also the realm of my mother's career.  She wrote code for a living for decades, but is not technically inclined -- quite intelligent and competent.
[22:52:12] *** Joins: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:9586:ce9f:b6ec:92ff)
[22:52:16] <GeDaMo> https://en.wikipedia.org/wiki/SequenceL
[22:52:17] <bayaz> Title: SequenceL - Wikipedia 
[22:52:20] <sonny> I'm pretty sure you could make a programming language for engineers and get a huge chunk that way
[22:52:20] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 272 seconds)
[22:52:36] <apotheon> just gave zero fucks about technology outside of her job
[22:52:44] <sonny> fair
[22:53:04] <sonny> that is why VB is still around?
[22:53:11] <apotheon> quite possibly
[22:53:12] <knusbaum> Yes
[22:53:15] <pyzozord> nice I think I found one for €13 https://www.virtualsecurity.nl/otp-200-totp-mfa.html
[22:53:17] <bayaz> Title: 429 Too Many Requests 
[22:53:30] <knusbaum> As someone who wrote VB for a number of years, yes.
[22:53:33] <sonny> yeah, that's a lot bigger market than I realized
[22:53:36] <apotheon> It might be half the reason Java is still around.
[22:53:43] <sonny> heh
[22:53:44] <apotheon> ("SHOTS FIRED!  SHOTS FIRED!!!")
[22:53:51] <knusbaum> Half sounds fair.
[22:54:03] <sonny> a classmate said he'd never learn another language java all the way lol
[22:54:12] <knusbaum> Though the other half *is* still keeping the language alive and modernizing.
[22:54:30] <sonny> they have done great gc work
[22:54:36] <sonny> I detest java culture though
[22:54:40] <knusbaum> I don't particularly like Java, but it's not a "legacy" language kept alive by old B2B software.
[22:55:06] <sonny> it's soaked into pretty much anything
[22:55:11] <knusbaum> There's still tons of new stuff being written in Java too.
[22:55:23] <sonny> com.foo.bar.bazz. etc
[22:55:24] <apotheon> knusbaum: Yeah, I chose "half" for a reason.  It's not a complete waste of space.
[22:55:27] <knusbaum> Although that might shift as newer languages gain traction.
[22:55:31] <knusbaum> apotheon, yes.
[22:55:36] <sonny> 20 empty folders lol
[22:55:55] <apotheon> 18:24 < knusbaum> I don't particularly like Java, but it's not a "legacy" language kept alive by old B2B software.
[22:55:58] <apotheon> . . . and yet:
[22:56:03] <ProfSimm> knusbaum: I don't understand wtf is happening with their "project somethings" though (Panama, Valhala etc.). They been at it for a decade and still in testing
[22:56:09] <apotheon> There's a thriving industry in rewriting legacy software in Java.
[22:56:18] <sonny> knusbaum I thought kotlin was a great example of language design ... they knew their audience well
[22:56:23] <apotheon> . . . which, in a way, says something stolid and dreary about Java.
[22:56:33] *** Quits: coaxing (~coaxing@user/coaxing) (Read error: Connection reset by peer)
[22:56:39] <ProfSimm> sonny: kotlin feels like a facade of a language, not a real language.
[22:56:45] <knusbaum> sonny, Yeah, I agree. I quite like kotlin.
[22:56:51] <sonny> why is it a facade?
[22:56:52] <ProfSimm> sonny: it has simplifications and shortcuts that seem a bit... ad-hoc
[22:57:02] *** Quits: DevAntoine (~DevAntoin@2a01:cb16:2011:5dff:9586:ce9f:b6ec:92ff) (Ping timeout: 260 seconds)
[22:57:05] <ProfSimm> sonny: like the way they hande getter/setter props
[22:57:07] *** Joins: coaxing (~coaxing@user/coaxing)
[22:57:09] <ProfSimm> handle*
[22:57:15] <apotheon> sonny: literally "fake front"
[22:57:19] <apotheon> or "false front"
[22:57:42] <sonny> ProfSimm it's similar to c# iirc, I don't see any issues
[22:57:45] <knusbaum> apotheon, Where I see legacy software getting rewritten in Java, it looks like moving from something dead or dying (due to lack of ability to hire people who can maintain it) to a known quantity, rather than Java being the "best language" from an engineering perspective.
[22:57:47] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[22:58:01] <knusbaum> ProfSimm, I'm not familiar with Panama or Valhala.
[22:58:08] <apotheon> sonny: What about Kotlin makes it a great example of language design?
[22:58:17] <apotheon> sonny: To be clear, that's not rhetorical or argumentative.
[22:58:26] <apotheon> I don't know enough about Kotlin to have much of an opinion.
[22:58:43] <pyzozord> oh dman my phone doesn't have nfc and all these hardware tokens want to be programmed via nfc
[22:58:50] <sonny> there's a lot of boiler plate stuff that they looked at in Java and provided a way to do in the syntax of kotlin
[22:58:52] <ProfSimm> sonny: C# very closely models what .NET does, as it's the primary .NET language
[22:59:01] <apotheon> knusbaum: Yeah, that pretty much sums it up.
[22:59:05] <ProfSimm> sonny: Kotlin looks like C#, but compiles to bunch of hacks
[22:59:05] <apotheon> knusbaum: stolid and dreary
[22:59:06] <knusbaum> ProfSimm, sonny, apotheon, I agree, though. The JVM and Java language leak too much into Kotlin, like they do in every other JVM language I've ever seen (see: scala, clojure)
[22:59:14] <sonny> a lot of their design decisions are clearly motivated, and they handle the grammar well
[22:59:24] <knusbaum> apotheon, yeah, that half of the market for sure is.
[22:59:30] <sonny> ProfSimm what hacks?
[22:59:41] *** Quits: pmercado (~pmercado@186.11.44.225) (Read error: Connection reset by peer)
[23:00:13] <apotheon> sonny: . . . so Kotlin is largely Java with a lot of the agony streamlined out of the developer experience?
[23:00:20] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[23:00:23] <sonny> yeah
[23:00:28] <oldlaptop> apotheon: That's my limited impression.
[23:00:32] <sonny> I just liked how intentional it is
[23:00:39] <sonny> the approach I mean
[23:00:43] <knusbaum> ProfSimm, What do you mean "what .NET does?". As far as I understood, ".NET" is just the name for MS's collection of VM, a bunch of languages and APIs.
[23:01:02] <Ali_A> kind of a weird question,
[23:01:02] <Ali_A> but is there any tutorial / book that goes through the steps of creating a linker? or a program that produces an executable? I doesn't matter if it is for windows or for linux or mac
[23:01:03] <Ali_A> I am just interested in the steps that takes some representation (wether it is an intermediate representation like LLVM does or a custom representation) and just produces an executable
[23:01:05] <oldlaptop> I don't know that I'd call it a "great example of language design", but I'd sure rather write it than java.
[23:01:14] <apotheon> sonny: I can respect that.
[23:01:16] <sonny> Ali_A linkers and loaders
[23:01:28] <apotheon> It doesn't motivate me to learn Kotlin, but I can respect it.
[23:01:39] <Ali_A> sonny I checked that one, but isn't that `1996`? a bit old?
[23:01:52] <apotheon> oldlaptop: I find that when you agree with me on some matter it seems likely to be correct.
[23:01:52] <oldlaptop> Ali_A: Your description isn't necessarily of a "linker" at all, necessarily, so much as of an assembler
[23:02:04] <apotheon> oldlaptop: thus firming up my confidence in it
[23:02:18] <sonny> Ali_A one moment, someone did a tutorial linker recently let me find it
[23:02:22] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[23:02:30] <apotheon> I suppose that could be misread as being about me, but it's really not.
[23:02:36] <sonny> apotheon yeah, in contrast to the bag of features approach
[23:02:43] <apotheon> sonny: right
[23:02:48] <knusbaum> Ali_A, I would read up on the ELF format. If you understand how/why ELF works, you'll get a pretty good idea of what's involved in linking and loading. I say ELF rather than something like Mach-O because there's a lot more documentation and articles out there for ELF than any other format I know about.
[23:03:04] *** Joins: pmercado (~pmercado@190.22.73.57)
[23:03:12] <oldlaptop> A "linker", generally speaking, takes multiple pieces of actual compiled machine code (usually called "object code" in this context) that refer to each other abstractly, and ties them together into a working program.
[23:03:13] <knusbaum> Ali_A, Though you could also check out the old and obsolete a.out format as a primer for concepts.
[23:03:58] <apotheon> Whoever it was that said above that Kotlin devs knew their target audience I guess summed up what I take to be sonny's intent in calling it good language design.
[23:04:00] <ProfSimm> sonny: getter/setter, data classes, singletons, coroutines etc. have a very "transpiler" flavor to them for obvious reasons and clash with upcoming features of JVM itself.
[23:04:02] *** Stella is now known as aoei
[23:04:10] <oldlaptop> For example, you might compile hello_world.c to an object code file named hello_world.o. That file doesn't contain some kind of intermediate representation, it contains the actual machine code corresponding to hello_world.c. It's not a complete, working program, though, because it doesn't contain the machine code corresponding to printf().
[23:04:17] <apotheon> great design *for the target audience*
[23:04:21] <Ali_A> oldlaptop well assembler produces object code from asm (not some representation)
[23:04:21] <Ali_A> I don't think it is too hard per se (just convert the instruction to their hex equivalent) the only thing would be, how to order them (like where to put each label and so on)
[23:04:22] <Ali_A> but I am interested in the things like what llvm does when it takes its IR and just get you an executable
[23:04:44] <ProfSimm> knusbaum: C# was the first .NET language, and .NET basically reflects what C# has. There are extremely few non-C# features in .NET
[23:04:51] <knusbaum> ProfSimm, I agree and get that feeling from most of the JVM-based languages.
[23:04:52] <sonny> Ali_A https://briancallahan.net/blog/20210609.html
[23:04:53] <bayaz> Title: Brian Robert Callahan 
[23:04:55] <oldlaptop> "The linker" takes that object code, and ties it in somehow with the object code that implements printf().
[23:05:00] <knusbaum> ProfSimm, ahh, I see.
[23:05:09] *** aoei is now known as ykstort
[23:05:31] <oldlaptop> (It's often more complex than that, in the sense that we often use "dynamic linking" nowadays, with which the final linkage doesn't actually take place until you actually go to execute the program)
[23:06:07] <sonny> ProfSimm it compiles to jvm, llvm etc. also transpiler isn't a good term, just use compiler
[23:06:09] <apotheon> I just realized that on some level I always assumed that LLVM produces assembly, then calls an assembler.
[23:06:13] <Ali_A> knusbaum I already read all the official documents about ELF, I mean SYSV ABI x86 and x64 and that is what got interested in the first place, I feel it is a bit too complicated compared to what I was expecting but I kind of able to `take asm and generate an elf right now` for a particular platform
[23:06:14] <oldlaptop> LLVM's job ends at generating actual machine code. It produces hello_world.o.
[23:06:14] <Ali_A> but I am sure, there are tons of steps involved like relocations, making the shared object PIC and so on
[23:06:17] <apotheon> . . . but now I'm not sure if that's true.
[23:06:24] <ProfSimm> knusbaum: I suspect Kotlin's "edge" will be consumed by Java as it advances. It's what happened to CoffeeScript which was a bit like Kotlin for JavaScript
[23:06:45] <bomb> ProfSimm fully agree
[23:06:57] *** Joins: k8yun (~k8yun@user/k8yun)
[23:07:05] <apotheon> I guess transpiler not being a very meaningful term is why ProfSimm used scare quotes.
[23:07:11] <sonny> apotheon you have to take the audience in consideration
[23:07:24] <ProfSimm> sonny: transpiler is an annoying term, but I mean to communicate that Kotlin is confined having to be compatible with high-level features in JVM made for Java, so it has no freedom to be its own thing, the way if it compiled to machine code, or had its own runtime
[23:07:34] <apotheon> sonny: depends on your audience for the statement
[23:07:35] <knusbaum> ProfSimm, It might be. It seems to be pretty popular with Android programming, so maybe it can keep a foothold there. But maybe Java's market share will allow it to take that back too.
[23:08:02] <bomb> Android is soon to be replaced by Fuchsia
[23:08:04] <epony> self-hosting is independence ;-)
[23:08:10] <bomb> even now, Google is pushing Flutter for app making
[23:08:13] <sonny> ProfSimm I don't get your point
[23:08:18] <Ali_A> sonny thanks ! but it looks like just an introduction or is this a series posts?
[23:08:24] <kee> epony: Self-hosting is increased dependence on your landlord.
[23:08:27] <epony> bomb, as soon as tablets replace handsets ;-)
[23:08:28] <apotheon> ProfSimm: I seem to recall there was a Kotlin no-JVM implementation using LLVM, that just produce executable binaries.
[23:08:29] <ProfSimm> knusbaum: Google was pushing Kotlin when Oracle was suing them. I wonder if they shifted gears since
[23:08:35] <apotheon> s/produce/produced/
[23:08:41] <ProfSimm> apotheon: neat
[23:08:44] <apotheon> ProfSimm: Do I misremember?
[23:08:48] <sonny> Ali_A not sure, but that guy has been making a lot of quality articles, maybe he has more
[23:08:54] <ProfSimm> apotheon: might be dunno
[23:08:57] <bomb> Kotlin is a dead end
[23:09:03] <apotheon> bomb: Flutter is aiming toward desktop "native" applications, too, now, I think.
[23:09:24] <sonny> google has to push flutter if they invested in it so much
[23:09:26] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Ping timeout: 272 seconds)
[23:09:29] <oldlaptop> apotheon: They have a "native" target, yes. I believe they do use llvm as a backend.
[23:09:32] <sonny> only thing I can think of
[23:09:34] <bomb> apotheon yep. released Windows stable few weeks ago. Linux and macOS coming in the next months, they say
[23:09:40] <knusbaum> ProfSimm, I would be surprised if that Kotlin thing was tied to the Oracle thing. Not being a lawyer I'm not sure, but I thought the Oracle lawsuit was basically about Java's API's being proprietary. If Kotlin still uses those (it does) then it doesn't seem to help that situation.
[23:09:53] <ProfSimm> knusbaum: as for Panama and Valhala, google these with "Java" it's a lot of fun what's coming: Amber, Lambda, Loom, Panama, Valhalla
[23:10:06] *** Quits: ShockTohp (~kevin@155.138.224.160) (Remote host closed the connection)
[23:10:09] <ProfSimm> knusbaum: for some reason thou they've been at it for years and years and shipped nothing
[23:10:11] <apotheon> I'm starting to think that Flutter's main purpose is to make Dart popular enough to get people to care about it in the browser.
[23:10:16] <bomb> apotheon I'm quite surprised by Google's enthusiasm about Flutter.
[23:10:23] <oldlaptop> kotlin in the android context is still utterly dependent on all the old Java machinery, both at the Java-class-library level and the android-API level
[23:10:32] <knusbaum> ProfSimm, hmm... So Panama is like a better JNI?
[23:10:35] <sonny> its in fuchia too
[23:10:44] <apotheon> . . . though there's huge benefit for Google in terms of Flutter libs creating more ways for Google to spy on users.
[23:11:03] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 250 seconds)
[23:11:18] <ProfSimm> knusbaum: yes, but I also see it as a way to write more memory-local code, and escape the GC when it gets in the way
[23:11:36] <knusbaum> Maybe they are trying to bootstrap a switch - get everyone on Kotlin and then implement an independent runtime that's code-compatible.
[23:11:48] <sonny> ProfSimm you can already do that
[23:11:54] <apotheon> wow
[23:11:56] <ProfSimm> knusbaum: it's an approach, but very risky.
[23:11:56] <Ali_A> thanks I will check other articles for him as well + I also tried reading `llvm` code to understand what it is doing but surprisingly I can find tons of `articles` or places where to learn about a compiler front-end like parsing, generate some intermediate code
[23:11:57] <Ali_A> but something that takes .o files and get an executable, IDK i never found something outside the book loaders and linkers from 1996
[23:12:05] <ProfSimm> sonny: you can do it but it's shitty
[23:12:09] <apotheon> Will the next big language war be between Dart and Kotlin?
[23:12:13] <knusbaum> ProfSimm, Google likes risky. They have enough money to burn. But yes, it's a long shot.
[23:12:21] <sonny> ProfSimm no they have a gc mode already
[23:12:23] <apotheon> I'm seeing serious parallels in a convergent-evolution kinda way in this discussion.
[23:12:36] <knusbaum> ProfSimm, But maybe they only mean to wave it around as a threat to Oracle - "If you keep pushing us, we'll seriously dump you altogether."
[23:12:40] *** Joins: dunkeln (~dunkeln@150.129.114.218)
[23:12:40] *** Quits: dunkeln (~dunkeln@150.129.114.218) (Changing host)
[23:12:40] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[23:12:46] <knusbaum> Without actually intending to *do* it.
[23:12:48] <epony> kee, what landlord..  https://en.wikipedia.org/wiki/Category:Leisure_Suit_Larry_games
[23:12:48] <bayaz> Title: Category:Leisure Suit Larry games - Wikipedia 
[23:12:52] <sonny> Ali_A llvm has slides that talk about their linker, I found it useful
[23:12:59] <ProfSimm> sonny: what gc mode
[23:13:04] <kee> epony: Where are your computers?
[23:13:12] <KillerWasp> seem deviantart change the interface again, now is much better, and don't stuck my machine?... strange...
[23:13:14] <kee> In your house, presumably. Where your landlord is!
[23:13:15] <sonny> ProfSimm it's a mode that doesn't collect or something
[23:13:16] <KillerWasp> but i still can make one better.
[23:13:22] *** Joins: zaher (~zaher@37.48.159.213)
[23:13:36] <ProfSimm> knusbaum: that's like a bully threatening to stop beating the victim
[23:13:36] <oldlaptop> kee: I think you're using the incorrect meaning of "self-hosting". (Unless that's deliberate.)
[23:13:37] <apotheon> KillerWasp: What does "don't stuck my machine" mean?
[23:13:47] <knusbaum> ProfSimm, That's business! 
[23:13:50] <kee> oldlaptop: If you self-host, you have to give your landlord your admin password. It's the law.
[23:13:52] *** Joins: re101-robin-60 (~re101-rob@37.30.44.112.nat.umts.dynamic.t-mobile.pl)
[23:13:52] *** Joins: Visne_ (~Visne@dhcp-077-248-174-092.chello.nl)
[23:13:57] <Ali_A> can you link them? because what i found was they have a lot of complicated things that I can not understand why it is there or what is it doing, and I just asked around and most of the answers were `historical` reasons
[23:14:01] <ProfSimm> sonny: well this doesn't help with memory locality
[23:14:02] *** Quits: re101-robin-60 (~re101-rob@37.30.44.112.nat.umts.dynamic.t-mobile.pl) (Client Quit)
[23:14:27] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[23:14:30] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[23:14:45] <epony> kee, you own your house and your own land.. that's what capitalism promised you.. before inviting foreigners and giving them weapons and calling them your neighbour, in the data centre and at the cubicle.
[23:14:53] *** Visne_ is now known as Visne
[23:15:09] <kee> ProfSimm: I don't see how; Android is pretty much the only reason anybody I know has ever seriously used Java.
[23:15:11] <kee> Well, that and Minecraft.
[23:15:24] <epony> self-hosting however means something else when it comes to computing (science)
[23:15:31] <bomb> kee that's not reality at all
[23:15:43] <ProfSimm> kee: well technically what Android has is not even Java.
[23:15:54] <kee> It's JVM?
[23:15:54] <ProfSimm> kee: but it's used a lot on the backend and so on
[23:15:56] <bomb> that too
[23:15:57] <oldlaptop> bomb: I see no reason to assume it's not an accurate description of kee's reality.
[23:16:05] <ProfSimm> kee: it's not JVM
[23:16:10] <knusbaum> It's Google's own implementation of a JVM.
[23:16:16] <kee> oldlaptop: It's not an accurate description of my reality.
[23:16:26] <knusbaum> Plus a bunch of other stuff.
[23:16:32] <oldlaptop> ?!! then why'd you give it?!
[23:16:33] <ProfSimm> kee: we don't argue with your reality, but there's just a bigger reality
[23:16:33] <kee> That's still a JVM.
[23:16:35] <epony> https://en.wikipedia.org/wiki/Self-modifying_code#See_also
[23:16:35] <bayaz> Title: Self-modifying code - Wikipedia 
[23:16:42] <apotheon> I forgot the name of Google's newer VM.
[23:16:45] <knusbaum> kee, It's called Dalvik
[23:16:50] <apotheon> That's the old version.
[23:16:52] <sonny> kee Java is used for everything finance in ontario as far as I can tell
[23:16:54] <apotheon> There's a new implementation.
[23:16:56] <knusbaum> mmm
[23:16:59] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 260 seconds)
[23:17:10] <GeDaMo> https://en.wikipedia.org/wiki/Android_Runtime
[23:17:10] <apotheon> unless they lifted that name onto it when I wasn't looking
[23:17:10] <sonny> I think C# is used for goverment stuff cause microsoft
[23:17:10] <bayaz> Title: Android Runtime - Wikipedia 
[23:17:19] <oldlaptop> sonny: *everything* finance? I don't think they had java on their S/360s.
[23:17:22] <ProfSimm> kee: a JVM has to abide by the JVM specs, which Dalvik doesn't. And it's lagging significantly behind Java
[23:17:28] <apotheon> . . . but it was definitely Dalvik -> SomethingElse
[23:17:31] <bomb> Java & C++ pretty much runs the world
[23:17:47] <kee> oldlaptop: To clarify: the "it's the law to give your landlord your admin password" was made up, but "nobody I know uses Java for anything other than Android or Minecraft" was not made up.
[23:17:53] <knusbaum> finance still uses a *ton* of software much older than Java.
[23:18:07] <oldlaptop> (There's more stuff from those days still in use than you might realize. IBM still makes and sells computers and OSes with binary compatibility going back that far.)
[23:18:08] <kee> bomb: JavaScript and C++, I can buy.
[23:18:08] <apotheon> Oh, the name of the replacement is *brilliant*: "Android Runtime"
[23:18:10] <apotheon> wtf
[23:18:17] <oldlaptop> kee: I was referring exclusively to the latter.
[23:18:19] <knusbaum> I've seen institutions running mainframe VM's on MS servers to run their ancient software.
[23:18:24] <sonny> oldlaptop maybe they ported to IBM linux
[23:18:41] <sonny> they surely still have old stuff, so yeah not everything
[23:18:41] *** Quits: Chargen (~chargen@8.21.8.253) (Quit: Leaving)
[23:18:43] <ProfSimm> apotheon: a name so vague and generic, it's unsuable!
[23:18:44] <knusbaum> Or IBM AIX...
[23:18:47] <oldlaptop> I'm sure there are a lot of... what are they called now, System/Z? machines running a lot of linux.
[23:18:50] <apotheon> ProfSimm: indeed
[23:18:56] <apotheon> They've outdone Microsoft.
[23:19:05] *** Joins: Macbethwin (~chargen@8.21.8.253)
[23:19:06] <oldlaptop> (Pretty much all of them nowadays are going to be heavily virtualized. Only way to utilize such a big machine economically.)
[23:19:08] <apotheon> whatever wits came up with the name
[23:19:14] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[23:19:25] <kee> Java isn't old enough to be the Eternal Mainframe, but isn't new enough for new stuff to be made in it.
[23:19:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162) (Ping timeout: 245 seconds)
[23:19:41] <knusbaum> A *lot* of new stuff is still being made in Java.
[23:19:41] <oldlaptop> I bet they're glad they failed to kill CP/VM/etc. back in the day.
[23:19:43] <kee> It's even fallen out of favour for writing cross-platform desktop applications.
[23:19:52] <apotheon> There's COBOL in use now that will probably still be running in twenty years.
[23:19:55] <ProfSimm> apotheon: but seriously, if they even put "J" in that name, Oracle will launch all its missiles.
[23:20:03] <apotheon> Beyond twenty, though, I am unwilling to bet anything.
[23:20:08] <sonny> oldlaptop yeah it's pretty crazy that IBM could be king again
[23:20:14] <epony> https://en.wikipedia.org/wiki/Self-hosting_(compilers)#Examples ; https://en.wikipedia.org/wiki/History_of_compiler_construction#Self-hosting_compilers ; https://en.wikipedia.org/wiki/Bootstrapping_(compilers)#Process
[23:20:14] <bayaz> Title: Self-hosting (compilers) - Wikipedia 
[23:20:14] <bayaz> Title: History of compiler construction - Wikipedia 
[23:20:14] <bayaz> Title: Bootstrapping (compilers) - Wikipedia 
[23:20:18] *** Joins: tcsilver (~tcsilver@static-96-255-152-200.clppva.ftas.verizon.net)
[23:20:42] <kee> epony: That kind of self-hosting gives you less power. It means you're shackled to the previous versions.
[23:20:51] <apotheon> ProfSimm: naturally
[23:21:14] <apotheon> ProfSimm: Oracle's entire business model these days is based on legal and policy gotchas.
[23:21:15] <knusbaum> Better to be shackled to yourself than to someone else's project that you have no control over.
[23:21:19] <kee> Rust's bootstrap chain is long and convoluted.
[23:21:22] <epony> kee, incorrect ;-)
[23:21:54] <kee> It goes through somebody else's project (mrustc) which is written in C++, so you need a C++ compiler. You also need LLVM.
[23:22:03] <epony> and also when you use it in this manner (as in https://en.wikipedia.org/wiki/Self-hosting_(web_services) describes) it does not mean on your rented / borrowed estate either
[23:22:03] <bayaz> Title: Self-hosting (web services) - Wikipedia 
[23:22:05] <knusbaum> Right. rust isn't exactly self-hosting.
[23:22:09] *** Joins: inky_ (~inky@141.136.88.65)
[23:22:11] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[23:22:12] <apotheon> If you think Rust's bootstrap chain is bad, and you use emacs, I have some *really* bad news for you.
[23:22:19] <ProfSimm> self-boasting
[23:22:20] <sonny> lol
[23:22:26] <knusbaum> haha
[23:22:44] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 272 seconds)
[23:22:47] <kee> epony: Running it in a server farm counts as self-hosting? TIL.
[23:22:50] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-546d-a2a7-eb54-e4bc.res6.spectrum.com)
[23:22:52] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[23:22:52] *** Quits: tcsilver (~tcsilver@static-96-255-152-200.clppva.ftas.verizon.net) (Read error: Connection reset by peer)
[23:22:57] <knusbaum> I would love a simpler, self-hosted version of rust that didn't have all the baggage of LLVM and C++
[23:23:00] <sonny> I don't think getting stuff up quickly was a part of rusts goal tbh
[23:23:03] <KillerWasp> apotheon: It overloads the machine with processing and memory, as if it were hundreds of worms, it is what almost all the sites that think they are modern do.
[23:23:04] <nomagno> kee: Rust is surprisingly portable for how many dependencies it has
[23:23:07] *** Quits: inky (~inky@178.78.145.201) (Ping timeout: 260 seconds)
[23:23:24] <sonny> knusbaum so you like region based stuff?
[23:23:30] <sonny> nomagno it's on llvm
[23:23:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[23:23:34] <kee> nomagno: True. But it's still hard to port in the absolute sense.
[23:23:44] <oldlaptop> sonny: All mozilla has to do is keep their build process less horrifying than chromium's
[23:23:45] <epony> "self-hosted" means it can support itself in both senses though
[23:24:04] <nomagno> You have mrust, I think
[23:24:17] <apotheon> KillerWasp: Okay, but . . . what does "don't stuck my machine" mean?
[23:24:20] <nomagno> Which is a toy compiler, but still
[23:24:25] <kee> nomagno: Which requires C++. Bootstrapping a C++ is almost as hard as bootstrapping Rust.
[23:24:26] <sonny> oldlaptop: haha
[23:24:36] <KillerWasp> apotheon: i already say it.
[23:24:41] <kee> I'd almost prefer to go via the original OCaml compiler.
[23:24:52] <oldlaptop> apotheon: The machine is stuck running loads of js.
[23:24:54] <oldlaptop> (Or whatever.)
[23:24:56] <apotheon> I feel like there's a grammatical issue here that you're missing, or a slang usage that I'm missing.
[23:25:00] <apotheon> oldlaptop: Oh.
[23:25:05] <sonny> gccrust is in the works
[23:25:09] <apotheon> KillerWasp: Don't "overload" my machine, then?
[23:25:14] <apotheon> Don't "freeze"?
[23:25:14] <bomb> I wish Spring wasn't dominating the Java back-end programming, so I could do freelance gigs by writing Java
[23:25:22] <knusbaum> sonny, region-based?
[23:25:25] <nomagno> kee: Bootstrapping c++ IS harder than bootstrapping rust
[23:25:28] <apotheon> . . . or "don't get my machine stuck"?
[23:25:30] *** Joins: norayr (376bc34bfc@37.252.78.253)
[23:25:31] <tane> sonny, let me guess, a GCC rewrite in rust? :)
[23:25:32] <nomagno> Because there is a TON more to implement
[23:25:34] <sonny> it's a bit suspect for the devs not have a spec but they are making good process iirc
[23:25:36] <oldlaptop> (KillerWasp has, IIRC, said in the past that $ACCEPTABLE_PRONOUN is using a machine translator)
[23:25:40] <nomagno> C is more comparable
[23:25:40] <KillerWasp> apotheon: try 'cat /dev/zero > /tmp/garbage' and maintain it.
[23:25:46] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Quit: Leaving)
[23:25:47] <sonny> tane no getting rust in gcc
[23:25:47] <apotheon> Stuck is a past-tense verb or adjective, so I was confused.
[23:25:54] <kee> apotheon: That last one is probably closest; "get stuck" is reflexive.
[23:25:58] <sonny> gcc rewrite is impossible
[23:26:06] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:26:18] <apotheon> even the adjective use is a bit iffy, I think
[23:26:31] <apotheon> "don't" is not past tense
[23:26:37] <apotheon> yeah, was just confused
[23:26:37] <sonny> knusbaum that's what rust does with ownership
[23:26:45] <knusbaum> You wouldn't rewrite gcc in rust... You'd rewrite rustc and dependencies in rust.
[23:26:49] <nomagno> Stuck is both past and participle
[23:26:54] <apotheon> 18:55 < sonny> gccrust is in the works
[23:26:58] <knusbaum> sonny, sorry, I'm not following.
[23:26:59] <apotheon> still C++ and so on
[23:27:05] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Ping timeout: 252 seconds)
[23:27:10] <apotheon> not sure what that's supposed to solve
[23:27:10] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 272 seconds)
[23:27:14] <epony> and one more thing, it was people from Burrows who realised programs are stored in storage, and compiled not hardwired as built-in logic for high level programming languages in hardware  https://en.wikipedia.org/wiki/Burroughs_large_systems#Features
[23:27:15] <bayaz> Title: Burroughs large systems - Wikipedia 
[23:27:23] <knusbaum> sonny, I like Rust's ownership model, yeah. I think a lot of their APIs are overly-complicated.
[23:27:27] <sonny> whatever supports gcc is another place where you can get rust
[23:27:31] <apotheon> please gob don't let gccrust overtake any other implementation(s)
[23:27:32] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[23:27:41] <sonny> lol
[23:27:46] <apotheon> being there as an additional option is fine
[23:27:46] *** Quits: baffodoro (~raffaem@45.91.20.238) (Quit: Leaving)
[23:27:52] <phogg> rust is a good proof of concept
[23:28:00] <phogg> I am waiting for a nicer language that also has a borrow checker to emerge
[23:28:06] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[23:28:09] <sonny> nah it has been accepted
[23:28:09] <kee> In fact, you could almost say Rust is a toy language. ;-)
[23:28:18] <sonny> the proof of concept was cyclone
[23:28:24] <oldlaptop> apotheon: I would guess offhand targeting macOS is enough of an incentive to prevent that
[23:28:42] <epony> ProfSimm, the above was on the point of "not having compilers and interpreters stuck in your processor (then logic board) implementation" ^
[23:28:50] <oldlaptop> that's "fun" enough without having to bootstrap gcc
[23:28:50] <kee> phogg: What would be nicer?
[23:29:04] <phogg> kee: if I could tell you that I'd be building it right now
[23:29:09] <apotheon> "people from Burrows" <- seems like a reference to a horror movie about creepy Hobbits
[23:29:34] <kee> phogg: Graphy lifetimes, not just hierarchical ones?
[23:29:42] <sonny> rust is cool I just wish they were a more precise (but it's not the 1980s anymore I guess)
[23:29:47] <apotheon> oldlaptop: good point
[23:29:48] <sonny> a bit*
[23:29:57] <kee> sonny: What do you mean by "more precise"?
[23:29:59] <phogg> kee: that would be fancy, but wasn't in scope of what I was imagining
[23:30:03] <knusbaum> My main criticism of rust right now is "too many features". I think the borrow checker is really cool. There's a ton of other stuff there though.
[23:30:25] <knusbaum> Some of it's required for the language to function given the strict ownership model, but not all of it is.
[23:30:38] *** Joins: swp (~Thunderbi@143.176.249.0)
[23:30:46] <kee> Pin shouldn't exist.
[23:31:03] <kee> Cell is a decision, but I think other decisions could've been made.
[23:31:09] <sonny> kee a standard so other folks can implement stuff
[23:31:09] <apotheon> sonny: Are you saying that being precise is passé now?
[23:31:29] <sonny> formal grammar etc
[23:31:30] <apotheon> That's sad.
[23:31:33] <nomagno> sonny: you can't have a standard when there's only one implementation
[23:31:40] <kee> The "& / &mut actually being shared / borrowed" thing is tricky.
[23:31:42] <apotheon> re: precision being passé
[23:31:50] <nomagno> A SPECIFICATION should have been first thing they did in my opinion though
[23:32:04] <kee> nomagno: Rust has always been an experimental language.
[23:32:08] *** Joins: freakazoid12345 (~matt@35.136.233.205)
[23:32:11] <sonny> what's the diff?
[23:32:16] <sonny> nomagno ^
[23:32:18] <kee> A specification is the opposite of experimenting. It would've frozen Rust at badly-designed.
[23:32:20] <apotheon> Yeah, I'm not as worried about a standard as I am a specification.
[23:32:24] <knusbaum> It's pretty much impossible to write up a specification for something like Rust without also having an implementation to test against.
[23:32:29] <apotheon> I don't see how you get a standard without a specification anyway.
[23:32:31] <oldlaptop> kee: Its enthusiasts really seem to want it to be something else. Seem to think it's something else right now.
[23:32:49] <oldlaptop> Once they get around to writing a specification, maybe it will be something else.
[23:33:03] <knusbaum> The spec and implementation should probably be co-developed. Otherwise you write up a full spec and end up having tons of implementation troubles.
[23:33:03] <nomagno> apotheon: all standards are specifications, but you not all specifications are standards
[23:33:08] <nomagno> And they aren't mutually dependent
[23:33:11] <kee> sonny: A specification is a document describing it. A standard is something published by NATO in 1969.
[23:33:14] <duuude> nomagno: no good languages started with a spec 
[23:33:21] <apotheon> nomagno: I didn't say they were.
[23:33:26] * knusbaum high-fives kee
[23:33:34] <oldlaptop> kee: gaaaarrgh stahp.
[23:33:35] <apotheon> In fact, I implied that a standard is dependent, but a specification is not.
[23:33:36] <sonny> kee ah ... ok
[23:33:39] <apotheon> very non-mutually
[23:33:46] <nomagno> duuude: well, they should probably start thinking about a spec then
[23:33:49] <apotheon> You basically said the same thing.
[23:34:03] <nomagno> Because they're getting to the point where they NEED mathematical proof of memory safety to squash bugs
[23:34:11] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-551d-c41c-044e-2d14.inf6.spectrum.com) (Ping timeout: 256 seconds)
[23:34:12] <sonny> duuude algol etc
[23:34:13] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[23:34:17] <kee> Rust's type system is inconsistent.
[23:34:23] <nomagno> There were recently some insanely tricky ones
[23:34:35] <sonny> kee example?
[23:34:43] <apotheon> anyway
[23:34:44] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[23:34:45] <duuude> kee: wasn't it 1968? or they made software engineering in 1968 and made the spec in 1969
[23:34:46] <kee> sonny: Try adding !Trait and everything breaks.
[23:34:49] <apotheon> create a language
[23:34:51] <apotheon> then write a spec
[23:34:53] <duuude> sonny: "good"
[23:34:54] <apotheon> then call it 1.0
[23:34:56] <kee> duuude: Probably was 1968, yeah.
[23:34:57] <sonny> kee ah I didn't get that far
[23:35:15] <kee> apotheon: That's why Python started on 2.x?
[23:35:21] <apotheon> that seems like the dream
[23:35:34] <sonny> apotheon it's feasible
[23:35:36] <apotheon> kee: I don't quite get the joke, but I'll a llow it.
[23:35:39] <duuude> kee: I guess there was python 1
[23:35:45] <epony> ProfSimm, see "Stack performance was considered to be slow compared to register-based architectures, for example, such an architecture had been considered and rejected for the System/360.[22] One way to increase system speed is to keep data as close to the processor as possible."  https://en.wikipedia.org/wiki/Burroughs_large_systems#Stack_speed_and_performance
[23:35:46] <bayaz> Title: Burroughs large systems - Wikipedia 
[23:36:32] <apotheon> Let's not get into Python here.  I don't really want to see a fight between people who think Python is God's gift and those who realize the stupidity of Guido saying that any implementation that supports tail call optimization is not Python.
[23:36:33] <epony> now compare with https://en.wikipedia.org/wiki/Comparison_of_application_virtual_machines#Comparison_of_virtual_machines (and https://en.wikipedia.org/wiki/Model_of_computation#See_also for more details)
[23:36:33] <bayaz> Title: Comparison of application virtualization software - Wikipedia 
[23:36:33] <bayaz> Title: Model of computation - Wikipedia 
[23:36:37] <ProfSimm> epony: this in relation to what
[23:36:46] <lilo_booter> i started learning rust today... yeah... it's been... interesting :)
[23:36:48] <sonny> the original python paper seems like it is what c++ was supposed to be
[23:36:53] <sonny> both of those diverged lol
[23:37:04] <kee> apotheon: Python has always(?) had rather detailed documentation, making a clear distinction between Python features and CPython implementation details, and Python 2.x was a lot more popular than Python 1.x (or Python 0.x). That's all I meant.
[23:37:06] <sonny> 2 -> 3 was terrible
[23:37:13] <epony> about the virtual points, self-hosting, and kee's comment that self-hosting increases dependence on hardware
[23:37:22] <apotheon> kee: okay, that's fair
[23:37:39] <oldlaptop> python supports at least one production-grade independent implementation too
[23:37:51] <apotheon> The thought that Python is what C++ was supposed to be is interesting, amusing, and perhaps mutually condemnatory.
[23:37:51] *** ykstort is now known as ykkie
[23:37:56] <kee> epony: You managed to turn an incoherent joke about landlords into a sensible technical point, and attributed it to me? I'm honoured.
[23:38:00] <oldlaptop> (this strikes me as existence proof that its spec is "good enough")
[23:38:47] <epony> while it actually increases independent bootstrapping without intermediary stages and results in independent compiler implementation (validation it can compile itself).. and it was in relation to a recent "runtime" vs "hardware" vs "application virtualisation" (as the platform)
[23:38:50] <apotheon> oldlaptop: seems reasonable
[23:39:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1434:5fb0:9b0b:cf98)
[23:39:37] <sonny> c++ is admirable but I think it's goal is too lofty
[23:40:02] <ProfSimm> Those are equivalent: https://pastebin.com/ABhAT1yj Whch one would you use more often.
[23:40:03] <bayaz> Title: something: (a, b) -> { & print ("hello world") & exec (this) & ex - Pastebin.com 
[23:40:17] <epony> ProfSimm, I wanted to give that point about not sticking a compiler and interpreter specific implementation in your CPU which was one of your points from before (showing you why it is not that from experience expensively derived by Burroughs)
[23:40:20] <apotheon> I think one implementation ended up with TCO as a compile-time toggle-able feature defaulting to "off" because of Guido, but . . . it's a very hazy memory.
[23:40:28] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 272 seconds)
[23:40:41] <sonny> I'm not at soustrops level but I can't picture anyway to tie those different layers of abstraction together and call it a compiler
[23:40:42] <apotheon> sonny: an admirable example of tremendous complexity management in design, perhaps
[23:40:50] *** Quits: Visne (~Visne@dhcp-077-248-174-092.chello.nl) (Ping timeout: 252 seconds)
[23:40:55] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[23:41:00] <sonny> no lol
[23:41:05] <apotheon> sonny: much like how the efficiency of the railway system under fascist Italy was admirable
[23:41:10] <sonny> admirable in that it tried to achieve the impossible
[23:41:18] *** Joins: kakysha_ (~kakysha@user/kakysha)
[23:41:25] <sonny> icarus
[23:41:28] <apotheon> shoot for the stars, crash on the Moon with no survivors
[23:41:31] <kee> apotheon: Supporting tail-call optimisation doesn't stop it being a Python implementation (so sayeth the docs). But code that relies on TCO to be correct isn't Python code, just like code using ctypes.pythonapi isn't Python code (merely CPython code).
[23:41:33] <duuude> lol
[23:41:34] <sonny> lol
[23:41:36] <sonny> yep
[23:41:38] <apotheon> or Icarus, sure
[23:41:43] <ProfSimm> epony: I think I've lost the context we had back then
[23:42:04] <epony> and later validated once again by Symbolics (Lisp machines) in the 80ies again.. https://en.wikipedia.org/wiki/Lisp_machine#End_of_the_Lisp_machines
[23:42:04] <bayaz> Title: Lisp machine - Wikipedia 
[23:42:33] *** Parts: norayr (376bc34bfc@37.252.78.253) (Error from remote client)
[23:43:30] <sonny> I've seen some catharsis of the end of lisp ... some say it was pride. Unwilling to change and they got left behind
[23:43:33] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:44:08] <epony> ProfSimm, yes it's just one of the important points to know (hardware is not built for a high level programming language, but it facilitates that through a low level programming language, just not the high level one and you don't burn in or implement it in hardware for generally programmable computers, just for accelerators and application specific controllers and specialised micro-processors like TPUs for example
[23:44:24] *** Joins: norayr (376bc34bfc@37.252.78.253)
[23:44:40] <ProfSimm> epony: historically that's true, but modern hardware is a lot more of a mixed bag.
[23:44:54] <ProfSimm> epony: someone mentioned the other day AMD has a JavaScript-specific opcode
[23:45:06] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:14] <sonny> hardware devs have to consider compiler guys now
[23:45:16] <duuude> ProfSimm: not really JS-specific
[23:45:30] <duuude> ProfSimm: and it was ARM i think
[23:45:30] <sonny> (about time)
[23:45:32] <epony> https://en.wikipedia.org/wiki/Tensor_Processing_Unit and https://en.wikipedia.org/wiki/Hardware_acceleration#Stored-program_computers are examples of that)
[23:45:32] <bayaz> Title: Tensor Processing Unit - Wikipedia 
[23:45:32] <bayaz> Title: Hardware acceleration - Wikipedia 
[23:45:35] <ProfSimm> epony: there have been hardware JVM too
[23:45:43] <sonny> that flopped
[23:45:43] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 250 seconds)
[23:45:56] <ProfSimm> What flopped
[23:46:18] <pyzozord> aren't sim cards hardware java machines
[23:46:33] <sonny> memory tagging extensions though
[23:46:36] <duuude> ProfSimm: It converted doubles to int to make bitwise faster, and JS was shorter to include in the instruction name than IEEE 3y97397333tgejhgd
[23:46:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1434:5fb0:9b0b:cf98) (Ping timeout: 240 seconds)
[23:47:01] <sonny> ProfSimm they made a jvm into a processor but they results were not as nice as they hoped
[23:47:19] <ProfSimm> duuude: JS was included in the name, because JS did it, most software doesn't casually use floats as ints
[23:47:22] <knusbaum> pyzozord, I don't think so.
[23:47:40] <knusbaum> Motorola tried to develop a phone based on a JVM-on-chip for a while but they abandoned it.
[23:47:56] <kee> sonny: Credit cards are.
[23:47:59] <pyzozord> sorry not sim cards
[23:48:05] <kee> I think SIM cards might also be though.
[23:48:09] <pyzozord> the "java cards"
[23:48:33] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:48:47] *** Joins: Visne (~Visne@dhcp-077-248-174-092.chello.nl)
[23:48:52] <pyzozord> "It is widely used in different markets: wireless telecommunications within SIM cards and embedded SIM, payment within banking cards" https://en.wikipedia.org/wiki/Java_Card
[23:48:52] <bayaz> Title: Java Card - Wikipedia 
[23:48:57] <epony> they can have that, but that does not make them universal computers or generally programmable ones ;-)
[23:49:01] <sonny> ok, I misremembered the article I read then
[23:49:03] <knusbaum> mmm, looks like "JavaCard" is an Oracle feature that can be included in a sim.
[23:49:11] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 260 seconds)
[23:49:12] <ProfSimm> "20 billion JavaCards sold"
[23:49:22] <ProfSimm> I think it counts :D
[23:49:44] *** Joins: Enitin (~Enitin@82.180.145.225)
[23:49:49] <knusbaum> "15 billion currently residing in landfills"
[23:50:20] <epony> the point was, you can't say "ALL" micro-processors have compilers and interpreters built into them ;-) but you can say all micro-processors have a machine opcodes instructions and an instruction set architecture (even in earlier generation machines)
[23:50:27] <ProfSimm> "Slowly mutating and connecting with one another, and forming a new form of intellect An angry one"
[23:50:30] <duuude> reading the "Java" word too much makes me feel like I am eating enterprise suits and ties
[23:51:06] <epony> it's just an island with coffee bushes ;-)
[23:51:17] <ProfSimm> Can someone compare these two samples of handling errors in experiment code (these are equivalent): https://pastebin.com/ABhAT1yj
[23:51:18] <bayaz> Title: something: (a, b) -> { & print ("hello world") & exec (this) & ex - Pastebin.com 
[23:51:27] <pyzozord> not sure if you know this classic https://www.youtube.com/watch?v=Mk3qkQROb_k
[23:51:28] <bayaz> Title: Lady Java 
[23:51:33] <duuude> the actual java is nice
[23:51:41] <apotheon> Java Cards were a terrible idea.
[23:51:47] <duuude> the actual java script is  also nice
[23:51:57] <apotheon> Some Other Language Cards coulda been good, though.
[23:52:02] <ProfSimm> Java is also in Blu-Ray players
[23:52:05] <ProfSimm> And other places
[23:52:12] <flaqoniun> how about C# cards ?
[23:52:23] <apotheon> I know someone who seems to have a mild preoccupation with writing Java for BluRay.
[23:52:28] <apotheon> flaqoniun: hell no
[23:52:33] <knusbaum> ProfSimm, what language is this?
[23:52:44] <ProfSimm> flaqoniun: .NET is a bit thicc for cards. It'd have to be "C# cubes"
[23:52:46] <flaqoniun> it's got what management craves
[23:53:03] <epony> "no idea to find out though" since you get your coffee mix in a sealed bag which you can't inspect and trace back, with certainty and even with lots of investigation about it.. while you know where and what your software includes if you compile it yourself or can verify you would have the same (as is done in trusting trust keynotes)
[23:53:16] <ProfSimm> knusbaum: something I'm working on 
[23:53:26] <ProfSimm> knusbaum: I know out of context it's weird.
[23:53:37] <ProfSimm> knusbaum: but bool operators can be used for flow control
[23:53:41] *** Quits: javabean (~javabean@user/javabean) (Ping timeout: 256 seconds)
[23:53:48] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 240 seconds)
[23:53:49] <apotheon> pastebin.com is insidiuous and horrible
[23:53:57] <epony> only not on commercial and obfuscated binaries (morphing)
[23:54:00] <ProfSimm> apotheon: that's why I use it
[23:54:10] <ProfSimm> apotheon: look also it has Ukraine logo
[23:54:24] <epony> which is why runtimes and bytecodes are not instruction sets and machine code
[23:54:27] <apotheon> new rule: refuse to look at anything on pastebin.com, ever
[23:54:38] <ProfSimm> apotheon: offer replacementr
[23:54:46] <apotheon> sprunge
[23:54:47] <knusbaum> ProfSimm, If it's short-circuiting, I prefer the first syntax. I don't care for the '&' prefix that much, but it's better than the implicit flow caused by boolean-returning functions(?)
[23:54:48] <apotheon> 0x0.st
[23:54:57] <wutno> anyone know of a good package to go from a shift-jis byte stream to utf in C++? ICU has documentation i can't follow and would be a big dep
[23:55:04] <duuude> Put this on my browser https://en.wikipedia.org/wiki/Javanese_script
[23:55:05] <epony> despite having some features of these, not all of them, and is a nested model of computing
[23:55:05] <bayaz> Title: Javanese script - Wikipedia 
[23:55:09] <oldlaptop> apotheon: It's far from the worst of them; it works without js on, and IIRC provides the raw content on request
[23:55:11] <apotheon> sprunge.us to be clear, but sprunge and 0x0 are both open source and can be deployed anywhere you like
[23:55:14] *** Joins: javabean (~javabean@user/javabean)
[23:55:22] <apotheon> oldlaptop: Yeah, it's not the worst.
[23:55:31] <epony> and the point with nesting is, it's just not trusted
[23:55:36] <apotheon> It seems to be the worst that I encounter being used more than once, though.
[23:55:39] <knusbaum> ProfSimm, I would prefer the second syntax if there were some explicit exit symbol, like "exec (this) ?", where the '?' indicates that the function may cause an error and trigger the error block.
[23:55:46] <ProfSimm> apotheon: https://pastebin.pl/view/3e18fd1d
[23:55:48] <bayaz> Title: Untitled - Pastebin 
[23:55:57] <oldlaptop> I'll refuse to open "zero-knowledge encrypted" ones on a channel with 700 people in it, but not pastebin.com.
[23:56:23] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:56:35] <apotheon> ProfSimm: That's more usable.
[23:56:40] <apotheon> (as a viewer)
[23:56:52] <apotheon> I have no idea how usable it is for someone pasting something.
[23:57:44] <ProfSimm> knusbaum: it looks more familiar I guess. But in this every function may error (like every function may throw runtime error)
[23:58:16] <knusbaum> ProfSimm, So every block has an implicit "try" and can have a "catch" block?
[23:58:25] <apotheon> ProfSimm: That's an interesting example.
[23:59:00] <ProfSimm> knusbaum: every call passes explicit "then" and "else" continuations and the function calls one of them. If it calls "else" then the execution shortcuts to the "or" operator like in any bool expression
[23:59:28] <knusbaum> hmmm...
[23:59:53] <ProfSimm> Reason I post this is because this is very ingrained in the runtime, and I like how cool it is.... basically:    condition & then | else
