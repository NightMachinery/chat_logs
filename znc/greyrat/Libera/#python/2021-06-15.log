[00:01:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:02:08] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[00:04:24] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[00:04:27] *** Joins: draeath (~draeath@user/draeath)
[00:04:30] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[00:05:23] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:05:34] *** Joins: troyman5150 (~troyman@2603-9001-5409-ec00-48bc-502c-830d-d488.inf6.spectrum.com)
[00:05:51] *** Parts: troyman5150 (~troyman@2603-9001-5409-ec00-48bc-502c-830d-d488.inf6.spectrum.com) ()
[00:06:18] *** Joins: troyman (~troyman@2603-9001-5409-ec00-48bc-502c-830d-d488.inf6.spectrum.com)
[00:07:19] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[00:08:04] *** Joins: ssbr (~ssbr@2620:15c:10f:203:351d:7c74:db24:664e)
[00:08:14] *** Quits: sozuba (~sozuba@user/sozuba) (Read error: Connection reset by peer)
[00:08:43] *** Joins: seachdamh (~kvirc@user/seachdamh)
[00:08:44] *** Joins: Guddu (~Guddu@117.222.85.233)
[00:09:35] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[00:09:59] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:10:55] *** Joins: noarb (~noarb@user/noarb)
[00:10:56] *** Joins: qlixed (~qlixed@152.170.44.143)
[00:11:29] <ali1234> turns out that directly calculating products is only about twice as fast as filtering. i'm quite surprised by that: https://bpa.st/AC3Q
[00:12:59] <ali1234> i wonder if there would be more difference in C
[00:13:02] <draeath> is there a listing of which control structures create a scope and those that don't? eg 'for' and 'if.' when debugging I'm finding variables in my local scope that I wasn't expecting, because they were assigned in such a control structure.
[00:13:26] <draeath> (they're not causing problems, but they *could* - for now they're just clutter)
[00:13:46] <sco1> It's a really short list
[00:13:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[00:17:01] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[00:17:03] <habnabit_> draeath, `def`, `class`, comprehensions
[00:17:07] <habnabit_> draeath, that's it
[00:17:28] *** Quits: seachdamh (~kvirc@user/seachdamh) (Read error: Connection reset by peer)
[00:17:40] <ssbr> also lambda and genexps, but yeah
[00:17:42] <draeath> Oof. Alrighty then! I'm really bad about putting stuff into functions when I'm still tumbling with an idea. Guess I just have to get better about doing so.
[00:17:48] <habnabit_> ssbr, generator comprehensions?
[00:17:57] <ssbr> habnabit_: are they called comprehensions now?
[00:18:00] <habnabit_> ssbr, yes
[00:18:02] <draeath> ... or just keep using del() like a moron to clean my scope as I go rofl
[00:18:09] <habnabit_> draeath, do you need to 'clean' it?
[00:18:12] <ssbr> habnabit_: wow, that's cool. good terminology cleanup
[00:18:20] <habnabit_> ssbr, agreed
[00:18:22] <sco1> I guess match is a "maybe"
[00:18:25] <sco1> :)
[00:18:50] <ssbr> draeath: del will get you odd looks, even if it helps catch bugs.
[00:18:51] <draeath> habnabit_: not really, no, it's more just keeping the scope slim when I'm stepping /w the debugger, which I often have to do as I'm still a novice
[00:19:13] <draeath> Many times what I think I'm writing isn't what actually happens and I end up figuring that out that way
[00:19:20] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[00:20:04] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[00:20:16] *** Joins: ormiret (sid314108@id-314108.tooting.irccloud.com)
[00:21:00] *** Quits: KevinX (~KevinX@94.140.8.68) (Ping timeout: 244 seconds)
[00:21:17] *** Joins: m3th0d1c4L (~m3th0d1c4@184-14-107-44.dsl1.chtn.wv.frontiernet.net)
[00:22:54] *** Joins: cdown_ (~cdown@89.32.122.5)
[00:23:19] *** Joins: KevinX (~KevinX@94.140.8.65)
[00:23:28] <KirkMcDonald> A discussion of scopes should also include the implicit deletion of exception names after an 'except' statement.
[00:23:37] <KirkMcDonald> It's not a scope, but it's adjacent to the topic.
[00:24:05] *** Joins: cheater (~Username@user/cheater)
[00:24:07] *** Quits: kr0nk (~quassel@user/kr0nk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:24:10] <ssbr> that's a recipe for sad though
[00:24:51] <ssbr> I honestly believe that, in retrospect, it was not a good idea to simplify the language by unifying declarations and assignment. This smells of -- it's a huge complexifier in the language just to avoid typing three characters.
[00:25:26] <KirkMcDonald> Certainly it is, as I have said many times, backwards compared to every other language.
[00:26:10] <ssbr> I saw this post from gvr recently and it really reminds me of it: https://mail.python.org/archives/list/python-ideas@python.org/message/DQGLY3ZLFMGVOC4JE7E2TLMWDROK2PAE/
[00:27:11] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[00:27:25] *** jootoi_ is now known as jootoi
[00:27:29] *** Joins: ska (~ska@cpe-173-174-111-177.austin.res.rr.com)
[00:28:09] <KirkMcDonald> I feel like there's the possibility of a better design of the idea in there.
[00:28:29] *** Joins: cheater1__ (~Username@user/cheater)
[00:28:31] <KirkMcDonald> And it might involve forbidding the shadowing of names.
[00:28:53] <ssbr> KirkMcDonald: There's nothing especially wrong with shadowing names, you can do that fine no matter what design you pick.
[00:29:06] <KirkMcDonald> And maybe also making module-level names as non-dynamic as local names.
[00:29:13] *** Joins: cpach (~cpach@h-158-174-172-12.A950.priv.bahnhof.se)
[00:29:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[00:29:33] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:29:35] <ssbr> What Python's design forbids is fine-grained scopes, which forces the except thing; and it forbids pure-assignment, so we get the `nonlocal` statement and `global` statement
[00:29:36] <cpach> hi folks. in python how can i match the following using a regex: 12 digits followed by a dot
[00:29:37] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[00:30:00] <KirkMcDonald> cpach: r"\d{12}\."
[00:30:29] <cpach> KirkMcDonald: hm. i thought i tried that.
[00:30:35] *** Joins: gizmo1 (~gizmo@45.91.125.2)
[00:30:36] *** Joins: Auron (~Auron956@user/auron)
[00:30:37] <cpach> KirkMcDonald: does it matter if i use ' or "?
[00:30:40] *** Joins: SebastianM (~seba@user/sebastianm)
[00:30:45] <cpach> when i quote the regex
[00:30:55] <KirkMcDonald> cpach: No.
[00:31:37] *** Quits: troyman (~troyman@2603-9001-5409-ec00-48bc-502c-830d-d488.inf6.spectrum.com) (Quit: Client closed)
[00:31:55] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[00:32:05] <KirkMcDonald> ssbr: If you forbid shadowing, then you can play games with rules like "the variable exists in the outermost scope in which it was assigned."
[00:32:07] *** Joins: vrt3 (~vrt3@d54c5733d.access.telenet.be)
[00:32:28] <KirkMcDonald> ssbr: Which has the potential for a whole host of other issues that I think are obvious.
[00:32:37] <KirkMcDonald> ssbr: But it would permit fine-grained scopes.
[00:32:45] *** Joins: noarb (~noarb@user/noarb)
[00:33:00] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[00:33:02] *** Joins: cheater (~Username@user/cheater)
[00:33:05] <habnabit_> KirkMcDonald, that's a fake scope imo
[00:33:12] *** Quits: cheater1__ (~Username@user/cheater) (Ping timeout: 244 seconds)
[00:33:31] <habnabit_> cpach, if you're having a problem with some code, it always helps to show us the code up front
[00:33:34] <cpach> KirkMcDonald: thank you! it works now. (the error was that i had garbled my test data.)
[00:33:40] *** Quits: biozz (~biozz@static.211.203.216.95.clients.your-server.de) (Remote host closed the connection)
[00:33:47] <cpach> habnabit_: my precious code! ;-)
[00:34:00] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[00:34:00] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[00:34:15] <cpach> it was a brainfart. sorry folks (^_^)
[00:34:19] *** Joins: niko (~niko@libera/staff/niko)
[00:34:25] <ssbr> KirkMcDonald: I needed a list of three to post on internal G+, and I remembered the classic "for x in y: something(lambda: y)"
[00:34:27] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:34:42] <ssbr> This really is the clunkiest part of Python's design that I can think of, for basically ~no reason
[00:34:52] <KirkMcDonald> ssbr: Did you mean `y` or `x` in that lambda?
[00:34:58] <ssbr> KirkMcDonald: I meant x, sorry
[00:35:08] <ssbr> for x in y: something(lambda: x)
[00:35:10] *** Joins: snc (~snc@130.44.185.38)
[00:35:13] <KirkMcDonald> Python is far from alone in having late-binding closures.
[00:35:42] <ssbr> KirkMcDonald: late or early makes no difference if each iteration is a new scope
[00:35:42] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[00:35:52] <KirkMcDonald> Nor is it alone in having the loop variable be scoped to outside of the loop.
[00:36:05] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-5011-04eb-6808-770a.res6.spectrum.com)
[00:36:11] <KirkMcDonald> Or, rather, to outside of the loop body.
[00:36:18] <ssbr> True enough.
[00:36:34] *** Quits: m3th0d1c4L (~m3th0d1c4@184-14-107-44.dsl1.chtn.wv.frontiernet.net) ()
[00:37:26] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[00:37:32] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[00:37:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:37:55] <KirkMcDonald> habnabit_: I think it'd be a real scope in some important senses: The name would not be visible outside of the scope, and would cease to exist when the scope ends.
[00:38:51] <habnabit_> KirkMcDonald, but it doesn't restore the value to what it was before; it's unconditionally deleted
[00:39:05] *** gizmo1 is now known as gizmo_
[00:39:45] <KirkMcDonald> habnabit_: Er, to be clear: Are you talking about my wild-ass scoping idea, or about what `except` does?
[00:39:52] <habnabit_> KirkMcDonald, except
[00:40:04] <KirkMcDonald> Oh, yes, that's right, it isn't a scope.
[00:40:07] <ssbr> KirkMcDonald: w.r.t. bound closures etc. -- at any rate, if Python had fine-grained scopes there would be an easy fix: "_x := x" something(lambda: _x)". Current approach is forced to be lambda x=x: x, which affects the interface the function provides, which is... gross.
[00:40:18] <ssbr> One could imagine C++-style lambdas with capture overrides, but yech
[00:40:39] *** Joins: seachdamh (~kvirc@user/seachdamh)
[00:40:45] <KirkMcDonald> ssbr: I mean you can always (lambda x: lambda: x)(x)
[00:40:50] <habnabit_> ssbr, gross and interacts poorly with *a, **kw (though less so now there's kw-only args)
[00:41:05] <ssbr> KirkMcDonald: now you're just writing ML.
[00:41:14] <ssbr> but yes, point
[00:41:16] <KirkMcDonald> ssbr: If you need a scope, make a scope.
[00:41:37] <KirkMcDonald> If you want to force evaluation, force an evaluation.
[00:41:43] <ssbr> KirkMcDonald: I yearn for a world with true scope equality
[00:42:01] <ssbr> where every block introduces a scope, and this is OK because of explicit declarations that don't make you need to scatter `nonlocal` in half of them
[00:42:27] <bancroft> anyone know how to get colorful output from fabric? https://bpa.st/XF6A
[00:42:43] <KirkMcDonald> ssbr: In other words, "What most languages do."
[00:42:57] <ssbr> KirkMcDonald: I legitimately can't think of a language that does what Python does.
[00:43:39] <KirkMcDonald> ssbr: Python is the only one to do it quite like it does. The only other alternative that's at all widespread basically amounts to "don't use scopes."
[00:43:55] <KirkMcDonald> ssbr: Oldschool BASIC, oldschool JavaScript...
[00:43:58] <ssbr> JS is the closest, but it's still different (it has two different scoping systems triggered by which keyword you use to declare a variable)
[00:45:08] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:23] *** Joins: cheater (~Username@user/cheater)
[00:48:10] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[00:48:55] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[00:49:16] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:49:35] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[00:51:10] *** Joins: biozz (~biozz@178.57.22.163)
[00:52:43] *** Joins: brickfat (~brickfat@user/brickfat)
[00:53:27] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-225.range86-148.btcentralplus.com) (Quit: Leaving.)
[00:54:08] *** Quits: snc (~snc@130.44.185.38) (Quit: snc)
[00:55:14] *** Quits: betuxy34 (~betuxy@158.181.77.59) (Quit: Connection closed)
[00:55:37] *** Quits: Tas-sos (~Tas-sos@ppp079167217163.access.hol.gr) (Ping timeout: 244 seconds)
[00:55:54] *** Joins: grulfen (~grulfen@h-178-174-148-119.A163.priv.bahnhof.se)
[01:00:57] *** Joins: Tritium (~carnage@pool-108-55-29-245.bflony.fios.verizon.net)
[01:01:54] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:02:00] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[01:03:57] *** Joins: Adoi (~Adoi@user/adoi)
[01:04:24] *** Parts: meatballs (~owentanti@2001:470:69fc:105::633) ()
[01:07:36] *** Quits: grulfen (~grulfen@h-178-174-148-119.A163.priv.bahnhof.se) (Quit: WeeChat 2.9)
[01:08:38] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:08:47] *** Joins: zeenk (~zeenk@188.26.30.39)
[01:09:44] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:11:01] <graingert> `var ` is probably most like python
[01:11:15] <graingert> ssbr: sloppy mode allowed implicit declarations
[01:11:34] <ssbr> graingert: ahhhhh, and then add that with `var` and it's really a lot like Python.
[01:11:34] <graingert> ssbr: they're global I think?
[01:11:37] <ssbr> oh.
[01:11:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[01:11:39] *** Joins: SebastianM (~seba@user/sebastianm)
[01:11:44] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[01:11:58] <graingert> ssbr: it's like doing `global x; x = 1`
[01:11:58] <ssbr> Well, good to know that it could have been worse.
[01:12:07] *** Joins: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se)
[01:12:19] <graingert> yeah but they fixed it
[01:12:23] *** Joins: cheater (~Username@user/cheater)
[01:12:32] <graingert> python could gain `const ` and `let ` declarations
[01:12:36] <graingert> would be pretty great imho
[01:13:46] *** Quits: Tritium (~carnage@pool-108-55-29-245.bflony.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:13:57] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[01:14:44] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Remote host closed the connection)
[01:14:46] <SnoopJ> graingert, would `const` describe the name?
[01:14:59] <graingert> the name of what?
[01:15:05] <SnoopJ> the name being qualified
[01:15:13] <bjs> `let x = 42: ...`   has very obvious semantics to me,  but I can't see what `const` would do
[01:15:14] <graingert> you mean `const x = y` would set y.name = "x" ?
[01:15:28] <bjs> would it just mean "cannot re-bind" or does it actually mean something deeper?
[01:15:49] <SnoopJ> graingert, I mean that `const x = ...` could mean two things: 1) the name `x` shall refer to the value given by ... and ONLY that value 2) the name `x` refers to the value given by ... and that value is constant
[01:16:01] <SnoopJ> (2) seems like the thing people would want more but I don't know how you'd even get close to it
[01:16:10] <graingert> bjs: var makes variables, const makes constants and let makes lettuces
[01:16:10] <habnabit_> bjs, it often means that `const x = 1; x = 2` is illegal but `const x = 1; const x = 2` is legal
[01:16:21] <graingert> what
[01:16:21] <habnabit_> i.e. reject reassignment yes
[01:16:25] <SnoopJ> and I think (1) is possible with Final?
[01:16:30] <bjs> habnabit_: that makes sense
[01:16:32] <SnoopJ> (granted, not a language feature)
[01:16:36] <graingert> const = 1; const x = 2; is illegal
[01:16:40] <graingert> unless you start a new scope
[01:16:46] <habnabit_> graingert, in js?
[01:16:51] <graingert> yes
[01:16:54] *** Joins: SebastianM (~seba@user/sebastianm)
[01:17:04] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[01:17:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[01:17:11] <graingert> I don't know any language that lets you reassign a const
[01:17:15] <bjs> const doesn't seem so useful in Python,  the usual `let` binding semantics is basically what Python names already are
[01:17:20] <habnabit_> graingert, rust
[01:17:21] <SnoopJ> yea, agreed
[01:17:26] <bjs> an explicit let would just give it an explicit (new?) scope,  which seems alright
[01:17:31] <graingert> habnabit_: what seriously?
[01:17:48] *** Joins: cheater (~Username@user/cheater)
[01:17:57] <bjs> if i interpret habnabit_ correctly,  you can only re-assign if you use `const`?
[01:18:07] <bjs> does that mean it makes a new scope from there or something?
[01:18:21] <habnabit_> graingert, https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=170994600026d96bcd28108b3e10d92e
[01:18:22] <graingert> `const x = 1; { const x = 2; }` is valid js
[01:18:28] <Tritium> Sounds like "const" would mean "Are you sure?"
[01:18:40] <graingert> habnabit_: yeah that's a new scope that's fine
[01:18:45] <Tritium> ah
[01:18:51] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[01:19:19] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[01:20:30] <Tritium> nedbat: thanks for the blog post, i wouldn't have found the channel without it
[01:21:21] <habnabit_> Tritium, freenode is hard at work to ensure that yes
[01:21:43] <Tritium> I found myself in ##python ...
[01:22:03] *** Joins: teut (~teut@182.69.85.39)
[01:22:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 272 seconds)
[01:23:21] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[01:23:44] *** Quits: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se) (Quit: Client closed)
[01:25:02] *** Quits: jabberwock (~lidless@user/jabberwock) (Quit: WeeChat 2.8)
[01:25:11] *** Quits: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01) (Remote host closed the connection)
[01:25:33] *** Joins: cedric (~cedric@2a01:cb11:867:c200:76c0:b033:7062:ddc)
[01:25:34] *** Joins: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se)
[01:25:50] *** Quits: vsantana (~vsantana@fttx-17713614824.usr.predialnet.com.br) (Ping timeout: 272 seconds)
[01:26:03] *** python_wrangler is now known as __init__
[01:26:12] *** Joins: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01)
[01:26:53] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[01:27:26] *** Quits: rama (~rama@2601:641:400:423:1100:ac8c:b673:ce01) (Remote host closed the connection)
[01:27:39] *** Quits: __init__ (~python_wr@h178-132-251-163.cust.a3fiber.se) (Client Quit)
[01:28:02] <graingert> habnabit_: I remember a similar situation happening in my primary school
[01:29:23] *** Joins: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se)
[01:30:13] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[01:30:18] *** Joins: dme86 (~dan@user/dan86)
[01:31:07] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[01:31:21] <humanBird> is there an "approximate common divisor" algorithm in numpy?  for example, the best common approximate divisor of 33 and 100 is 33
[01:31:42] <jl-> if I have a class, would it be stupid to create a function with unit tests in the class like unit_tests(): vs. putting them in a separate python file?
[01:31:46] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:31:53] <jl-> so far my script only has 1 file
[01:31:53] *** Joins: jabberwock (~lidless@user/jabberwock)
[01:32:03] <jl-> *my python program
[01:32:33] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Remote host closed the connection)
[01:33:56] *** _zware is now known as zware
[01:34:14] *** Joins: bilegeek (~bilegeek@2600:1008:b041:5047:48ad:ae3d:d2ea:7d42)
[01:34:42] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[01:35:20] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[01:35:39] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[01:36:48] *** Joins: |ATAD| (~ATAD@c-73-227-128-98.hsd1.ma.comcast.net)
[01:38:08] <bjs> jl-: if it's 1 file with 1 tiny class in it it probably doesn't matter,  but almost everyone immediately starts to put the tests in separate files
[01:39:47] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[01:39:54] *** Quits: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se) (Quit: Client closed)
[01:40:03] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 244 seconds)
[01:40:09] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[01:40:24] *** Quits: mborus (~mborus@2001:16b8:6f0a:5400:cc86:2f5c:3ce8:34a3) (Quit: Client closed)
[01:40:40] <jl-> bjs: yeah, currently I put them in the __init__ since it's just two simple tests
[01:41:58] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:43:16] <bjs> jl-: a very common structure to have is something like: "proj/README.txt, proj/.git/, proj/tests/test_foo.py,  proj/package/__init__.py,  proj/package/foo.py, etc"
[01:43:28] <bjs> some people like proj/src/package/__init__.py instead
[01:43:32] <bjs> but it gives you the idea
[01:43:45] *** Quits: fuzzygeorge (~fuzzygeor@office.computeam.com) (Read error: Connection reset by peer)
[01:44:29] *** Joins: jfb4 (~user@2a01:4b00:8935:d600:76d0:2bff:fe7f:543d)
[01:44:34] <jl-> bjs: hm yeah. what is the appropriate logic for running tests first, and not executing the program unless they pass? I imagine the main program needs to call the /tests/ and will do something like sys.exit() if they fail
[01:44:42] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[01:45:13] <bjs> jl-: it's very unusual to do that, usually running the tests is its own separate thing
[01:45:37] <bjs> and you wouldn't run the tests every time you ran your program for example,  you could if you wanted but the tools aren't setup to do that.
[01:45:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:45:49] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Remote host closed the connection)
[01:45:57] <bjs> jl-: but most test runners (e.g. pytest and unittest) have functions you can call to run the tests.
[01:46:02] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[01:46:34] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[01:47:28] *** Joins: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se)
[01:47:35] *** Quits: srhm (~ascii@user/srhm) (Read error: Connection reset by peer)
[01:47:38] *** Joins: jazzy (~jaziz@2600:380:4547:d128:91dd:6fdb:37d:8c6f)
[01:47:58] *** Joins: srhm (~ascii@user/srhm)
[01:48:06] *** Quits: palooka-jock (~mike@45.126.44.146) (Quit: WeeChat 1.9.1)
[01:48:08] <jl-> bjs: gotcha
[01:49:11] *** Quits: python_wrangler (~python_wr@h178-132-251-163.cust.a3fiber.se) (Remote host closed the connection)
[01:49:16] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[01:49:31] *** Quits: qlixed (~qlixed@152.170.44.143) (Ping timeout: 272 seconds)
[01:49:40] *** Quits: |ATAD| (~ATAD@c-73-227-128-98.hsd1.ma.comcast.net) (Ping timeout: 244 seconds)
[01:50:49] *** Joins: qlixed (~qlixed@152.170.44.143)
[01:50:55] *** Quits: ncb (~nocebo@user/nocebo) (Quit: ncb)
[01:53:05] *** Joins: dme86 (~dan@user/dan86)
[01:53:10] *** Joins: ncb (~nocebo@user/nocebo)
[01:54:23] *** Joins: audiocat (~audio@2603-8081-1800-0062-aa25-f87c-a162-a12f.res6.spectrum.com)
[01:55:01] *** Joins: a6a45081-2b83 (~aditya@27.58.175.254)
[01:55:46] *** Joins: biozz (~biozz@178.57.22.163)
[01:57:27] *** Joins: robot-chicken (~robot-chi@user/robot-chicken)
[01:57:35] *** Joins: mike (~mike@2001:8004:2758:93d:ac62:6c0:3d4a:6d93)
[02:00:12] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[02:00:50] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[02:01:00] *** Quits: superboot (agentgasma@user/superboot) (Remote host closed the connection)
[02:02:58] *** Joins: Karloku (~karloku@114.84.192.249)
[02:03:02] *** Joins: biozz (~biozz@178.57.22.163)
[02:03:50] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[02:04:06] *** Joins: superboot (~agentgasm@user/superboot)
[02:04:17] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[02:04:40] <nedbat> Tritium: i'm glad you made it.
[02:05:06] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[02:05:30] *** Quits: superboot (~agentgasm@user/superboot) (Client Quit)
[02:06:08] *** Quits: magla (~gelignite@55d4986c.access.ecotel.net) (Quit: Stay safe!)
[02:07:14] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[02:08:15] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:08:38] <SnoopJ> humanBird, I don't think there's anything like that, because the definition of "approximate divisor" isn't really obvious here. I don't think there's a way to get proper factorization either, actually, but I'd start by getting the factors of the smaller one and then trying those against the larger one, and picking any that divide the larger with "sufficiently" small remainder.
[02:09:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:10:02] *** Joins: darksun (~darksun@user/darksun)
[02:10:10] <Neoon> graingert, queue works fine, thanks for the tip
[02:10:36] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[02:11:53] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[02:11:54] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:13:34] *** Quits: Akuli (~Akuli@87-94-111-8.bb.dnainternet.fi) (Quit: Leaving)
[02:15:09] *** Joins: goldfish (~goldfish@user/goldfish)
[02:15:29] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[02:16:51] *** Quits: a6a45081-2b83 (~aditya@27.58.175.254) (Quit: Konversation terminated!)
[02:16:54] *** Quits: vrt3 (~vrt3@d54c5733d.access.telenet.be) (Quit: Leaving)
[02:19:27] *** Quits: mantiX (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:19:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[02:19:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:20:33] *** Joins: Necoro (~Necoro@user/necoro)
[02:22:25] *** Joins: biozz (~biozz@178.57.22.163)
[02:22:46] *** Praise- is now known as Praise
[02:23:14] *** Joins: blueberry (~izzy@user/izzy)
[02:23:41] *** Quits: draeath (~draeath@user/draeath) (Quit: WeeChat 3.1)
[02:23:52] *** Joins: Jochem (jochem@oosterveen.net)
[02:25:00] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 244 seconds)
[02:26:33] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[02:27:43] *** Joins: p-i-_ (~Ohmu@node-ofl.pool-101-109.dynamic.totinternet.net)
[02:28:37] *** Joins: darksun (~darksun@user/darksun)
[02:29:42] *** Quits: p-i- (~Ohmu@node-47d.pool-118-172.dynamic.totinternet.net) (Ping timeout: 264 seconds)
[02:29:48] *** Joins: biozz (~biozz@178.57.22.163)
[02:30:06] *** Quits: st4nd (~st4nd@user/st4nd) (Read error: Connection reset by peer)
[02:30:46] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:31:14] *** Quits: blueberry (~izzy@user/izzy) (Quit: Quit)
[02:32:53] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[02:33:16] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[02:33:24] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Client Quit)
[02:33:53] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:34:52] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[02:37:43] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[02:39:03] <teut> d.replace_keys({"a": "b",  "c": "d"} )    is anything like this available?
[02:39:42] <teut> rename keys
[02:40:01] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:41:12] <NeilRG> how do I add a dependency in poetry for the following pip command?
[02:41:27] <NeilRG> jaxlib==0.1.67+cuda111 -f https://storage.googleapis.com/jax-releases/jax_releases.html
[02:41:56] <NeilRG> I tried poetry add --source with the path, but it doesn't work
[02:42:14] <habnabit_> teut, not in the stdlib
[02:42:30] <teut> ok
[02:42:39] <SnoopJ> teut, my first thought: `newdict = {replacements.get(k, k): v for k,v in olddict.items()}`
[02:42:43] *** Joins: xsperry (~as@user/xsperry)
[02:42:45] <teut> there is that pop trick but anyways
[02:43:01] <teut> mydict[k_new] = mydict.pop(k_old)
[02:43:05] <habnabit_> d.get(k, v) is one of my favorite things to write
[02:43:10] <habnabit_> err
[02:43:12] <habnabit_> d.get(k, k) is one of my favorite things to write
[02:43:35] <SnoopJ> I can't recall ever writing it before
[02:43:37] *** Joins: tunixman (~tunixman@45.32.228.130)
[02:43:48] <habnabit_> it's pretty rare
[02:43:48] <teut> those are good too what you have told thanks
[02:44:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[02:44:42] *** Quits: torandu (~sean@94.7.66.19) (Quit: leaving)
[02:45:10] *** Joins: torandu (~sean@94.7.66.19)
[02:45:19] *** Quits: torandu (~sean@94.7.66.19) (Client Quit)
[02:45:56] *** Joins: darksun (~darksun@user/darksun)
[02:46:02] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[02:46:21] *** Joins: easior (~easior@61.155.142.73)
[02:47:25] *** Joins: rapha (~jrs@user/rapha)
[02:47:27] <rapha> hi all
[02:48:08] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[02:48:13] *** Joins: biozz (~biozz@178.57.22.163)
[02:48:20] <rapha> was there any change between python3.7 and 3.9 that would cause pandas.read_csv to fail with "list index out of range" with the latter but not the former?
[02:48:28] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-27.dsl.bell.ca)
[02:48:53] <SnoopJ> rapha, unlikely. If you want help with an error, you should share the complete error report at bpaste: https://bpaste.net/+python+pytb
[02:48:55] <habnabit_> rapha, probably not
[02:49:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:50:42] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[02:51:09] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[02:51:47] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:51:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[02:52:10] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[02:52:54] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[02:54:07] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Client Quit)
[02:55:33] *** Joins: biozz (~biozz@178.57.22.163)
[02:55:48] *** Joins: safeith[m] (~safeithma@user/safeith)
[02:55:48] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[02:55:51] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[02:57:34] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::20d0)
[02:58:38] *** Quits: cliluw (~cliluw@47.147.80.149) (Read error: Connection reset by peer)
[03:00:05] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[03:00:08] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 244 seconds)
[03:00:12] *** Joins: tijuco (~tijuco@user/tijuco)
[03:00:27] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[03:01:23] *** Joins: smqra (~rooba@208.110.85.44)
[03:02:16] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:04:36] <SnoopJ> Pydantic: is there a way to require field B, but only when a value is given for field A? I know I can do this with a root validator, but I don't like them very much so I'm hoping there's another way.
[03:04:46] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:05:43] <SnoopJ> or I could have the user pass `whatever_settings: Optional[SubObject_T]` where SubObject_T is a model that has both fields specified
[03:05:44] *** Joins: cjb (~cjb@user/cjb)
[03:06:36] *** Parts: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net) (Leaving)
[03:10:27] <NeilRG> Does anyone know why adding this section to my pyproject.toml not work? [tool.pytest.ini_options]
[03:10:27] <NeilRG> numprocesses = 'auto'
[03:10:46] <NeilRG> I'm using pytest-xdist
[03:12:13] *** Quits: safeith[m] (~safeithma@user/safeith) (Quit: Reconnecting)
[03:14:49] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[03:15:35] <rapha> SnoopJ: habnabit_: thx ... installing 3.7 helped.
[03:15:57] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 244 seconds)
[03:16:27] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[03:17:48] *** Joins: cliluw (~cliluw@47.147.80.149)
[03:20:05] *** Joins: stevenix (~stevenix@mab.sdf.org)
[03:20:17] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[03:22:02] *** Quits: ham (~ham4@user/ham) (Read error: Connection reset by peer)
[03:23:23] *** Joins: matsaman (~matsaman@user/matsaman)
[03:24:04] *** Joins: easior (~easior@61.155.142.67)
[03:24:38] *** Joins: ham (~ham4@user/ham)
[03:25:43] <graingert> Neoon: isn't it in addopts = "-n auto" ?
[03:25:49] <dob1> can someoone help me about a regexp? match the string that doesn't end in "." or "!" or "?"  but can end in "..."   I tried this one (?<!\.\.)[^\.!?]$  no good...
[03:26:02] *** Quits: robot-chicken (~robot-chi@user/robot-chicken) (Read error: Connection reset by peer)
[03:26:20] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[03:26:50] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:27:28] <Wulf> \.\.\.$|[^.!?]
[03:27:30] <Wulf> $
[03:27:50] <Neoon> graingert, what
[03:28:11] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[03:28:16] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:28:20] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[03:28:26] <graingert> Neoon: I think xdist is concifugred with addopts not ini options
[03:28:31] <dob1> Wulf, 2 $ ?
[03:28:36] <nomic> how do i create np array of array of array ie: x=np.array(np.array(np.array([0],dtype="object"),dtype="object"),dtype="object")
[03:28:43] <nomic> i was thinking type = object
[03:28:52] <nomic> all that creats = 1 array
[03:28:52] <Wulf> dob1: yep. Else you'd have to create a group.
[03:29:24] <Wulf> dob1: (?:\.\.\.|[^.!?])$
[03:29:40] <Wulf> dob1: what about the empty string?
[03:30:01] <dob1> Wulf, it's checked before the regexp in some other parts
[03:30:17] <dob1> they are for sure no empty
[03:30:29] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:30:47] <dob1> Wulf, sorry to bother you, but why my logic with negative look behind doesn't work?
[03:30:59] <dob1> just to understand my fault
[03:31:17] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[03:31:32] <cul8r> graingert: youre trying to reply to NeilRG not Neoon
[03:31:40] *** Joins: Nact (~l@host-85-27-122-251.dynamic.voo.be)
[03:31:41] <graingert> cul8r: woops
[03:31:42] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:31:48] <Neoon> my mind just blow
[03:31:49] <NeilRG> clu8r graingert thanks!
[03:31:58] <NeilRG> how do I do that then? tool.pytest.addopts?
[03:32:27] <ham5urg> Which python module can solve my problem to calculate N points of an arc, defined by 3 points p0,p1,p2. Inside 3d (x,y,z).
[03:32:29] *** Quits: cedric (~cedric@2a01:cb11:867:c200:76c0:b033:7062:ddc) (Quit: Konversation terminated!)
[03:32:31] <NeilRG> addopts = '-n'
[03:32:31] <NeilRG> ?
[03:32:38] *** Joins: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[03:32:41] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 244 seconds)
[03:32:49] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::20d0) (Remote host closed the connection)
[03:32:51] <ham5urg> circular arc*
[03:33:13] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::20d0)
[03:33:14] <NeilRG> that worked, thanks!
[03:33:59] <Wulf> dob1: how is that not working for you?
[03:34:00] <disi> I am trying to move a package into a namespace package, and I want a shim module for the old name that raises a warning. is there a way to keep submodule imports working in the shim (without explicitly importing them all)?
[03:34:29] *** Joins: bigRoo (~user@131.236.54.84)
[03:34:56] <dob1> Wulf, your regexp are ok (thanks)  but I was testing mine too on regexp101 and no, with the negative lookbehind it doesn't work for example on "foobar..."
[03:35:49] <Wulf> dob1: rightmost char is . which doesn't match [^.!?]$
[03:36:30] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[03:36:42] <cul8r> nomic: what shape are you trying to make?
[03:37:08] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 244 seconds)
[03:37:48] *** Joins: salpynx (~salpynx@121.73.84.248)
[03:37:51] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 244 seconds)
[03:38:12] <Wulf> dob1: your regex e.g. does not match "foo..r"
[03:38:46] <ablegreen> i need a library that parses the domain out of a http referer string. the `tldextract` library actually requires urllib and gets the latest list of suffixes. i don't want this. any suggestions?
[03:38:54] <dob1> Wulf, (?<!\.\.)[^\.!?]$    I was thinking this as: match [^\.!?]$   if before there is not ".."
[03:39:33] <habnabit_> ablegreen, what's the domain?
[03:40:10] <habnabit_> ablegreen, i.e. can you give example input and output?
[03:41:36] <ablegreen> habnabit_: e.g. `blahblah.our_company_name.com` would give `our_company_name.com`. but we also want `our_company_name.com` (note the lack of leading dot) to give `our_company_name.com` too
[03:42:03] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:42:07] <ablegreen> there may/may not be a leading uri scheme (https/http, etc.), although i'm not sure if the browser even sends http referer values without it
[03:43:00] *** Joins: thiras (~thiras@user/thiras)
[03:43:25] <ablegreen> and of course there might be trailing url params, like `?id=333&asdasd=2` and so on
[03:43:31] *** Joins: Snyp (~rksht@49.207.218.69)
[03:44:36] <habnabit_> ablegreen, tldextract looks perfect
[03:44:48] <habnabit_> ablegreen, it can't vendor the PSL?
[03:45:26] <Wulf> dob1: it's a "not .." followed by a "not .!?"
[03:45:57] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[03:46:02] <Wulf> dob1: I think I never used negative lookbehinds before
[03:46:14] <habnabit_> ablegreen, https://pypi.org/project/publicsuffixlist/
[03:46:25] *** Joins: wyclif (~wyclif@user/wyclif)
[03:46:49] <ablegreen> habnabit_: well the thing is we need to parse HTTP_REFERER on every request that comes in. tldextract makes a call once using urllib to get the latest list, then caches it. but i'm still not sure performance wise if this will fly past my boss
[03:46:53] <dob1> Wulf, me too :) I tried and it was wrong :)
[03:47:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[03:47:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:48:33] <ablegreen> habnabit_: oh maybe i can disable http requests in tldextract: https://github.com/john-kurkowski/tldextract/blob/master/tldextract/tldextract.py#L149-L152
[03:48:47] *** Quits: leitz (~LeamHall@072-182-158-173.res.spectrum.com) (Quit: nappy time)
[03:49:30] <ablegreen> or...i can just override `suffix_list_urls`
[03:49:50] <ablegreen> errr nvm
[03:49:56] <habnabit_> ablegreen, the one i linked has it vendored
[03:50:04] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Client Quit)
[03:50:05] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:51:22] *** Joins: tg (~tg@rockylinux/infra/tg)
[03:51:36] *** Quits: zweimer (~Denic@ip-95-222-89-117.hsi15.unitymediagroup.de) (Ping timeout: 244 seconds)
[03:52:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[03:52:44] *** Quits: Necoro (~Necoro@user/necoro) (Quit: WeeChat 3.1)
[03:52:57] <ablegreen> habnabit_: just tried `publicsuffixlist`, looks like it doesn't support getting the actual domain itself, minues the url params that follow it
[03:53:00] <ablegreen> minus*
[03:53:26] <habnabit_> ablegreen, urllib.parse.urlparse makes that trivial
[03:53:52] *** Quits: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152) (Quit: The Lounge - https://thelounge.chat)
[03:54:20] *** Joins: _0x5fc3 (~0x5fc3@user/0x5fc3/x-5271152)
[03:54:51] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:55:32] <ablegreen> habnabit_: i think this might work: https://github.com/john-kurkowski/tldextract/tree/1.3.1#note-about-caching--advanced-usage
[03:59:06] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:59:06] *** Wulf4 is now known as Wulf
[03:59:44] *** Joins: dme86 (~dan@user/dan86)
[04:04:26] *** Quits: fofoni (~fofoni@user/fofoni) (Remote host closed the connection)
[04:04:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[04:09:10] <smqra> dobl: .*?(?<![^.!?][.!?])$
[04:09:14] <smqra> if you had to use lookbehind
[04:09:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 244 seconds)
[04:11:43] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[04:11:49] *** Parts: madrak (~user@user/madrak0) (ERC (IRC client for Emacs 27.2))
[04:13:09] <drew> This doesn't seem to work: http://0x0.st/-LUL.py I get TypeError: Missing filename or fileobj argument
[04:13:39] <drew> but documentation says I should be able to specify a "file-like object" to save to: https://mutagen.readthedocs.io/en/latest/api/id3.html#mutagen.id3.ID3.save
[04:14:38] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[04:14:52] *** Joins: 040AAA2K7 (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[04:14:52] *** Joins: 076AACQ2L (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[04:15:16] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:15:32] *** Joins: mickey (~user@user/mickey)
[04:16:06] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[04:16:36] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 244 seconds)
[04:19:06] <bjs> drew: did you try just `tag.save(bio)` or `tag.save(fileobj=bio)` like it's asking for
[04:19:15] <bjs> if that works,  maybe the docs are just unclear
[04:19:37] <bjs> also that link is for a mutagen.id3.ID3 not a mutagen.easyid3.EasyID3, maybe they're implemented differently?
[04:20:32] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 244 seconds)
[04:20:36] *** Quits: 040AAA2K7 (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[04:20:38] *** Quits: 076AACQ2L (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[04:20:44] <bjs> (the docs don't mention a fileobj or filepath parameter at all?)
[04:20:53] <bjs> filename*
[04:20:56] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d)
[04:21:12] *** Joins: soulisson (~soulisson@user/soulisson)
[04:22:06] <soulisson> Hello. I'm looking for a library to create MAPI over HTTP packets. Does anyone knows one?
[04:22:15] *** Quits: francis (francis@user/francis) (Quit: leaving)
[04:24:54] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::20d0) (Remote host closed the connection)
[04:25:14] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::9385)
[04:25:38] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:25:52] *** Joins: JanC (~janc@user/janc)
[04:27:58] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[04:28:45] <smqra> also something to note dobl is that since you anchor to the end, doing a capture preceeded by a lookbehind will always fail since you have already captured what you are wanting to not find
[04:32:10] *** Joins: ffledgling (~textual@2620:10d:c090:500::4:4c0a)
[04:33:02] *** Quits: bilegeek (~bilegeek@2600:1008:b041:5047:48ad:ae3d:d2ea:7d42) (Quit: Leaving)
[04:33:08] *** Quits: qlixed (~qlixed@152.170.44.143) (Ping timeout: 244 seconds)
[04:33:42] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:33:51] <ffledgling> Hi folks, I have a question about frozen dataclasses and using the `object.__setattr__(self, 'prop', value)` hack to set a property on the class after it has been created. I am curious if this breaks comparison or hashing in any way?
[04:34:55] *** Joins: easior (~easior@61.155.142.73)
[04:35:28] *** Quits: zeenk (~zeenk@188.26.30.39) (Quit: Konversation terminated!)
[04:35:31] <nedbat> ffledgling: i haven't been in this situation before: why do you want to change a frozen object?
[04:35:33] *** Quits: tg (~tg@rockylinux/infra/tg) (Remote host closed the connection)
[04:35:51] <drew> bjs: I did .save(filething=bio), where did you get fileobj=bio?
[04:35:56] <drew> I'll try just .save(bio)
[04:36:05] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.1)
[04:37:55] *** Quits: Snyp (~rksht@49.207.218.69) (Quit: WeeChat 3.1)
[04:38:06] *** Quits: ntdll_ (~ntdll@user/ntdll) (Ping timeout: 244 seconds)
[04:38:27] <drew> .save(bio) and .save(fileobj=bio) both worked. the docs gave filething=None for the function, how did you know to use fileobj instead?
[04:39:52] <bjs> well
[04:39:56] <ffledgling> nedbat: The object goes through a couple of iterations of processing in different functions before it's entirely set interms of property values. Having to set all the values upfront makes the code complicated and hard to read flow-wise. I'm also not able to take advantage of the encapsulation that I already have on the other fields of the object to set subsequent properties. Technically the object is not frozen in code until a certain
[04:39:56] <ffledgling>  point, but I have it marked as such because I'm using the __eq__ and __hash__ properties provided for "free". So far I've been making do with defining everything upfront, but everytime a property is added it gets more and more cumbersome.
[04:40:18] <bjs> drew: because the error message you gave said
[04:40:20] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:40:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:40:28] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:41:15] <nedbat> ffledgling: won't the hash change when you change the attributes?
[04:41:40] <ffledgling> It will, but the hash isn't used until after all the properties are set.
[04:42:54] <ffledgling> For a lot (all?) of these fields, it's also okay if they're not considered part of the hash actually... but I've been trying to avoid writing my own __eq__ and __hash__ function for fear of introducing hard to track bugs.
[04:43:18] <drew> argh
[04:43:20] <drew> thanks bjs
[04:44:34] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[04:45:16] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Client Quit)
[04:45:35] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[04:45:45] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[04:46:34] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 244 seconds)
[04:47:18] *** Joins: jinsun_ (~quassel@user/jinsun)
[04:47:28] *** Joins: darksun (~darksun@user/darksun)
[04:47:39] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[04:49:40] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 244 seconds)
[04:50:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 244 seconds)
[04:51:02] *** Quits: mike (~mike@2001:8004:2758:93d:ac62:6c0:3d4a:6d93) (Ping timeout: 272 seconds)
[04:52:09] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[04:52:56] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[04:53:17] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[04:53:44] *** Joins: mike (~mike@45.126.44.146)
[04:54:05] <ffledgling> nedbat: this is a very simplified example of what I'm trying to do (untested in the interpreter, treat as pseudo code) - https://bpa.st/LC6A
[04:55:05] *** Joins: stoneware (~stoneware@user/stoneware)
[04:55:56] *** Quits: Guddu (~Guddu@117.222.85.233) (Quit: Leaving)
[04:56:16] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[04:57:55] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[04:59:24] *** Joins: LonEagle (~LonEagle@user/loneagle)
[04:59:43] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:01:29] <audiocat> can anyone help? https://stackoverflow.com/questions/67978568/activate-venv-and-run-python-script-from-shell-script
[05:01:34] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[05:03:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[05:05:09] *** Quits: jphaynes66 (~TerraFirm@97-118-109-179.hlrn.qwest.net) (Quit: Bye y'all.)
[05:05:27] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:05:50] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:05:50] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[05:06:45] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[05:06:49] <grym> audiocat: replace your script with `/home/gsb/venv/bin/python /home/gsb/socialbot.py
[05:06:51] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[05:07:06] <grym> audiocat: venv activation is never _required_, and basically impossible to script, so don't
[05:07:19] <audiocat> grym, that worked, thanks
[05:07:21] <audiocat> wait what
[05:07:33] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[05:07:40] <grym> audiocat: calling the full path to the venv/bin/python does everything activation does
[05:07:47] <audiocat> oh
[05:07:49] <audiocat> thanks
[05:07:56] <grym> but works in cronjobs and bash scripts and doesn't clutter up your environment and whatnot
[05:08:43] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[05:08:49] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[05:09:01] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Client Quit)
[05:09:02] *** Joins: easior (~easior@61.155.142.67)
[05:09:32] <WeblordP1pe> audiocat: hey sorry boss i havent got an answer but i do have a question. do you do any real time stuff with python? for audio
[05:12:01] <grym> ffledgling: it'll probably work fine.  it's gross, but i've had to do the object.__setattr__ dance in __attrs_post_init__ before
[05:14:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:14:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[05:15:42] *** Joins: jdmark (~jdmark@67.8.137.130)
[05:15:47] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[05:16:28] *** Joins: wyclif (~wyclif@user/wyclif)
[05:19:32] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[05:19:56] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[05:22:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[05:23:22] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[05:25:08] *** Joins: alexeikale (~alexeikal@2601:1c2:1b80:100:4ea5:a35a:95ba:fcb1)
[05:26:09] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[05:29:24] *** Quits: seachdamh (~kvirc@user/seachdamh) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[05:29:34] *** Joins: trampel (~trampel@2601:602:9c01:22b8:7d41:ab1b:c293:9fc4)
[05:29:48] *** Joins: wyclif (~wyclif@user/wyclif)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:40] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[05:31:52] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[05:33:12] <ffledgling> grym Got it, thanks
[05:33:40] <ffledgling> Another related question - if I define my own __hash__, does that automatically indicate an object is immutable?
[05:34:06] *** Quits: ssbr (~ssbr@2620:15c:10f:203:351d:7c74:db24:664e) (Ping timeout: 244 seconds)
[05:34:41] *** Joins: vlm (~vlm@user/vlm)
[05:34:57] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Client Quit)
[05:35:23] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[05:36:07] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[05:37:24] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[05:38:26] <grym> no
[05:38:41] *** Joins: djelectro (~60f54d22@ircip2.mibbit.com)
[05:38:45] <grym> or, at least, it doesn't do what @frozen does
[05:38:47] *** Quits: nepeat (~nepeat@79.110.170.62) (Ping timeout: 252 seconds)
[05:41:10] *** Quits: djelectro (~60f54d22@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[05:42:28] <ffledgling> grym: Thanks, I realized I could confirm it right after I asked and tested it in the console. Mutability is such a weird property.
[05:42:38] <NeilRG> where is @frozen defined?
[05:43:33] <grym> NeilRG: in attrs somewhere
[05:43:36] <grym> NeilRG: it's not stdlib
[05:44:00] <ffledgling> @dataclass(frozen=True) is stdlib. @frozen is a leftover from the freeze() module I think?
[05:44:14] <grym> uhh maybe
[05:44:17] *** Quits: id (hi@hellomouse/dev/cryb.jeda) (Ping timeout: 252 seconds)
[05:44:18] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:4d80:5fef:f2bf:4b8d) (Quit: Leaving)
[05:44:26] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[05:44:32] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[05:44:37] <NeilRG> grym, right, ok was wondering what you meant
[05:44:49] <grym> NeilRG: i mean @attr.s(frozen=True)
[05:45:30] <NeilRG> yeah I get it
[05:45:32] <NeilRG> thanks :)
[05:45:39] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[05:45:46] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Remote host closed the connection)
[05:45:53] <grym> just had a cheeky `rg --type py @frozen` on cpython
[05:46:45] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[05:51:12] *** Quits: ffledgling (~textual@2620:10d:c090:500::4:4c0a) (Ping timeout: 272 seconds)
[05:51:55] *** Quits: soulisson (~soulisson@user/soulisson) (Quit: Leaving)
[05:52:12] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:53:44] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 272 seconds)
[05:56:45] *** Joins: bigRoo (~user@131.236.54.84)
[05:57:45] *** Quits: Karloku (~karloku@114.84.192.249) ()
[05:59:53] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[05:59:53] *** Joins: dme86 (~dan@user/dan86)
[06:00:27] <audiocat> bobmight5743, why might my script work locally (i can run it without a 429 error) but not on my digital ocean server? https://prnt.sc/15g0wet
[06:01:36] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[06:02:42] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[06:02:56] <grym> audiocat: your DO IP has been a bit spammy and someone noticed, probably
[06:03:19] <grym> 429 means you've been rate limited
[06:04:15] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[06:04:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[06:04:42] *** Joins: tkazi (~tkazi@vps.tanzeelkazi.com)
[06:04:57] *** Joins: easior_ (~easior@61.155.142.73)
[06:05:46] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[06:07:40] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[06:08:01] *** Joins: francis (francis@user/francis)
[06:09:46] *** Joins: JavaBean (~JavaBean@user/javabean)
[06:10:12] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[06:13:24] *** Joins: cliluw (~cliluw@47.147.80.149)
[06:16:34] *** Joins: Midnite (~human@user/midnightlantern)
[06:17:09] *** Joins: wei2912 (~wei2912@112.199.250.21)
[06:17:29] <Midnite> What's the best way to play around with regexes while learning them? Either in the Python interpreter, or in bash?
[06:17:44] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Ping timeout: 268 seconds)
[06:17:48] <grym> Midnite: i like regex101.com
[06:17:56] <Midnite> currently reading: https://docs.python.org/3/howto/regex.html#regex-howto
[06:18:00] <grym> but ipython or your repl of choice does fine too
[06:18:12] <Midnite> cool, thanks! this looks good
[06:19:08] <nedbat> Midnite: if you use the Python interpreter, then you will be sure it works in Python
[06:19:15] *** Quits: cjb (~cjb@user/cjb) (Read error: Connection reset by peer)
[06:19:33] <FunkyBob> that's true, however regex101 gives a far better UX
[06:19:46] <FunkyBob> even describing "in plain English" what the regex is doing
[06:19:51] <grym> (to be fair: i build them in regex101 and then copy/paste into ipython
[06:19:52] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[06:19:52] <Midnite> nedbat: how would I do that? import re and then what?
[06:19:57] <FunkyBob> grym: ditto
[06:20:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[06:20:11] <nedbat> Midnite: then: re.search(r"...", a_string)
[06:20:14] <grym> ^
[06:20:31] *** Quits: Evolver (~Evolver@user/evolver) (Quit: Leaving)
[06:20:32] *** Quits: Midnite (~human@user/midnightlantern) (Client Quit)
[06:20:58] *** Joins: Midnite (~human@user/midnightlantern)
[06:21:25] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[06:21:31] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-5011-04eb-6808-770a.res6.spectrum.com) (Quit: Client closed)
[06:22:01] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:22:06] <Midnite> ok, great!
[06:23:55] *** Joins: Evolver (sid32215@user/evolver)
[06:26:20] *** Joins: cjb (~cjb@user/cjb)
[06:26:40] *** Joins: Fiji (~Fiji@user/fiji)
[06:28:35] *** Joins: JavaBean (~JavaBean@user/javabean)
[06:28:46] *** Joins: esaym153 (~esaym153@net153.net)
[06:29:43] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[06:30:18] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[06:32:09] *** Joins: easior__ (~easior@61.155.142.70)
[06:33:07] *** Quits: Nact (~l@host-85-27-122-251.dynamic.voo.be) (Quit: Konversation terminated!)
[06:33:51] *** Joins: biozz (~biozz@178.57.22.163)
[06:34:02] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[06:37:01] *** Quits: ATAD (~ATAD@c-73-227-128-98.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:37:01] *** Joins: iflema (~ian@user/iflema)
[06:37:58] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[06:38:03] *** Joins: ATAD (ATAD@c-73-227-128-98.hsd1.ma.comcast.net)
[06:38:10] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 244 seconds)
[06:39:57] *** Quits: esaym153 (~esaym153@net153.net) (Quit: leaving)
[06:40:27] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:40:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[06:40:46] <Midnite> this is probably coming later in the tutorial, but... let's say I want to not get any match at all if the user enters 12345678901234567, or any other string of digits longer than 16
[06:40:51] <Midnite> right now I have this:
[06:40:53] <Midnite> re.search(r"[\d]{13,16}", "12345678901234567")
[06:41:11] *** Joins: biozz (~biozz@178.57.22.163)
[06:41:14] <Midnite> which returns: <re.Match object; span=(0, 16), match='1234567890123456'>
[06:41:34] *** Joins: nepeat (~nepeat@79.110.170.62)
[06:42:54] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 264 seconds)
[06:43:08] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:45:55] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[06:47:06] *** Joins: saagaar (~saagaar@2400:1a00:bd11:651e:4c4b:b4d2:afca:7367)
[06:48:08] *** Joins: darksun (~darksun@user/darksun)
[06:48:51] *** Joins: rk04 (~rk04@user/rajk)
[06:49:48] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 268 seconds)
[06:52:03] *** Joins: cdown (~cdown@163.114.131.1)
[06:52:32] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[06:52:47] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:53:29] *** Quits: jepler_ (~jepler@afk.unpythonic.net) (Quit: leaving)
[06:53:38] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[06:53:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[06:54:17] *** Joins: ali1234 (~al@user/ali1234)
[06:54:25] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[06:55:01] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Read error: Connection reset by peer)
[06:55:10] *** Quits: cdown_ (~cdown@89.32.122.5) (Ping timeout: 272 seconds)
[06:55:22] *** Joins: esaym153 (~esaym153@net153.net)
[06:55:46] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:56:26] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection reset by peer)
[06:57:49] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[07:00:11] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:11] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (tantalum.libera.chat (Nickname regained by services)))
[07:00:11] *** finn_elija is now known as FinnElija
[07:01:12] *** Joins: corn266 (~corn266@2601:5c2:c401:4550::1)
[07:03:44] <Midnite> Got it figured out. Now, my questions is...
[07:03:55] *** Parts: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) ()
[07:04:23] <Midnite> How do I do a regex query where I replace some of the regular expression with variable(s) from my program?
[07:04:32] <habnabit_> Midnite, re.sub
[07:05:57] <grym> Midnite: min=13; max=16; fr'[\d]{{{min}}},{{{max}}}'
[07:06:08] <grym> that's .. not the prettiest :P
[07:06:44] <Midnite> "if it looks stupid, but it works, then it ain't stupid"
[07:06:49] <Wulf> Midnite: f"^.*{re.escape(var)}"
[07:06:50] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::9385) (Remote host closed the connection)
[07:06:51] <grym> within reason
[07:06:59] <Wulf> err... rf""
[07:06:59] <habnabit_> Midnite, oh, you want to replace into the _pattern_? the regex module can do that
[07:07:04] <Midnite> so right now I have re_search_result = re.search(r"^\d{13,16}$", card_string)
[07:07:05] <habnabit_> Midnite, it's much more powerful than re
[07:07:13] <Midnite> but I want 13 and 16 to be constants min and max
[07:07:15] <grym> TIL re.escape
[07:07:16] <Midnite> respectively
[07:07:21] <habnabit_> Midnite, also you seem to be looking for re.fullmatch
[07:07:30] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[07:07:41] <grym> so `re_search_result = re.search(r"^\d{re.escape(min),re.escape(max)}$", card_string)`  i guess
[07:07:50] <grym> don't name them that though
[07:07:50] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[07:08:12] <habnabit_> but use re.fullmatch instead of the ^/$
[07:08:16] *** Joins: rock2X (~rock@c-69-181-4-101.hsd1.ca.comcast.net)
[07:08:18] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[07:08:38] <Midnite> re_search_result = re.fullmatch(r"\d{13,16}", card_string)
[07:08:40] <Midnite> ??
[07:09:23] <Midnite> what if for some odd reason, I prefer doing it with re.search? is re.fullmatch somehow better or more efficient?
[07:09:24] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[07:09:32] *** Quits: Mrokii (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 268 seconds)
[07:09:53] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[07:10:15] <habnabit_> Midnite, re patterns are cluttered enough without redundant anchors
[07:10:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:11:03] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:11:22] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[07:11:29] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:12:02] <Midnite> it doesn't work like it did before with re.fullmatch
[07:12:23] <habnabit_> Midnite, how not?
[07:12:25] <Midnite> there was a bug before where it didn't consider 13 digits a match, but now it rejects 13, 14, 15...
[07:12:44] *** Joins: JavaBean (~JavaBean@user/javabean)
[07:13:16] <habnabit_> works4me: >>> re.fullmatch(r"\d{13,16}", '1'*15) => <re.Match object; span=(0, 15), match='111111111111111'>
[07:14:11] <Midnite> I think it needed you to call it out. It works now
[07:14:56] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[07:15:08] <Midnite> if anyone can see some possible improvements to this code, please let me know: https://bpa.st/JYPQ
[07:15:32] <Midnite> the main() is done for a reason. there will be other functions
[07:17:01] <Midnite> I'm not sure how to use re.escape(digits_min) on line 16 with the raw string. Is it possible?
[07:18:21] *** Joins: iflema (~ian@user/iflema)
[07:18:55] *** Parts: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) ()
[07:19:42] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[07:20:37] <gimzmoe> might be a tired out question, but is there an alternative for the pip now that xmlrpc is gone?
[07:21:15] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[07:21:27] *** Quits: francis (francis@user/francis) (Quit: leaving)
[07:22:57] *** Joins: Mrokii (mrokii@gateway/vpn/airvpn/mrokii)
[07:23:07] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[07:25:18] <Midnite> habnabit_: I tried the line you suggested, and it didn't work for me
[07:25:22] <Midnite> re_search_result = re.search(r"^\d{re.escape(min),re.escape(max)}$", card_string)
[07:26:35] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:27:15] <Midnite> of course, I re-named them to mmin and mmax
[07:28:47] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 272 seconds)
[07:29:09] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[07:30:09] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[07:30:21] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 244 seconds)
[07:30:24] *** Quits: trampel (~trampel@2601:602:9c01:22b8:7d41:ab1b:c293:9fc4) (Quit: Leaving)
[07:30:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[07:30:59] *** WeblordP1pe is now known as WeblordPepe
[07:32:29] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[07:32:56] *** Joins: francis (francis@user/francis)
[07:34:29] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 244 seconds)
[07:34:43] *** Joins: kenso (uid437580@id-437580.highgate.irccloud.com)
[07:34:54] *** Joins: viktorivan (~ivan@187.223.103.108)
[07:35:23] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[07:37:38] *** Quits: eax (~eax@146-115-91-35.s4631.c3-0.sbo-ubr1.sbo.ma.cable.rcncustomer.com) (Quit: Leaving)
[07:41:57] *** Joins: kiwiroy (sid374179@id-374179.tooting.irccloud.com)
[07:42:05] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[07:42:50] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[07:44:18] *** Joins: Milos (~Milos@user/milos)
[07:44:40] *** Quits: easior__ (~easior@61.155.142.70) (Quit: Leaving)
[07:44:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[07:45:48] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[07:47:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:47:31] *** Joins: easior (~easior@61.155.142.73)
[07:48:55] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[07:49:30] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[07:49:39] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[07:49:59] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[07:51:05] *** Joins: Teknique (~kirk@user/teknique)
[07:52:11] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Client Quit)
[07:53:26] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8815-2cb8-7761-b8f0.res6.spectrum.com) (Ping timeout: 272 seconds)
[07:54:57] *** Quits: rk04 (~rk04@user/rajk) (Quit: rk04)
[07:55:06] *** Joins: qzd (uid237765@id-237765.tooting.irccloud.com)
[07:55:15] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Remote host closed the connection)
[07:55:49] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-75b5-effb-8a85-a266.res6.spectrum.com)
[07:56:42] *** Quits: viktorivan (~ivan@187.223.103.108) (Ping timeout: 244 seconds)
[07:57:57] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[08:00:00] *** Joins: dme86 (~dan@user/dan86)
[08:01:09] *** Quits: d1b (~db@user/d1b) (Quit: the cake is a lie!)
[08:01:10] *** Quits: corn266 (~corn266@2601:5c2:c401:4550::1) (Quit: Client closed)
[08:01:24] *** Joins: d1b (~db@user/d1b)
[08:04:07] *** Joins: Vonter (~Vonter@user/vonter)
[08:04:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[08:06:44] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:07:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[08:09:31] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 272 seconds)
[08:09:54] *** Quits: {HD} (~{HD}@102.165.16.142) (Ping timeout: 272 seconds)
[08:10:12] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[08:14:08] *** Joins: {HD} (~{HD}@102.165.16.22)
[08:15:18] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 264 seconds)
[08:15:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:17:49] *** Joins: chance (~chance@50.47.109.175)
[08:18:47] *** Joins: mastardet (~mastardet@2804:14d:ba83:4a53:7c91:80fe:a313:7e5a)
[08:20:14] <drew> it looks like when I do something like foo_item = Item() and then do foo_item.items(), I get this dict: https://github.com/beetbox/beets/blob/2fa2d1b4eeb7a2917ce6df097f9413deeafb27f9/beets/library.py#L442
[08:20:27] <drew> is _fields a keyword member of a class or something? why do I get this dict when I do items()
[08:20:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[08:22:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:22:05] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (Quit: bye)
[08:22:22] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[08:23:08] *** Quits: mastardet (~mastardet@2804:14d:ba83:4a53:7c91:80fe:a313:7e5a) (Quit: Client closed)
[08:27:04] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Remote host closed the connection)
[08:27:26] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:27:38] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[08:28:25] *** Joins: Tas-sos (~Tas-sos@ppp079167217163.access.hol.gr)
[08:30:17] *** Quits: saagaar (~saagaar@2400:1a00:bd11:651e:4c4b:b4d2:afca:7367) (Quit: Client closed)
[08:30:33] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d953-b9e5-6f49-1ce5.res6.spectrum.com) (Read error: Connection reset by peer)
[08:31:28] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[08:32:56] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[08:33:22] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:33:48] <esaym153> doesn't pytest have some kind of "daemon" mode were it watches files and continually re-runs tests?
[08:34:22] <meejah> "watch py.test ./src/test" if your tests run in < 2 seconds ..
[08:34:37] <meejah> or inotifywait
[08:34:38] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[08:36:03] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:05] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:40:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[08:41:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:44:33] <esaym153> meejah: yea I've done that before, but I swear I was just reading some pytest docs the other day and notice some tutorial pointing out a "watch" mode. Can't find it now .. :(
[08:44:51] *** Joins: Midnite (~human@user/midnightlantern)
[08:47:17] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[08:47:34] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[08:49:24] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 244 seconds)
[08:49:33] *** Joins: mambang (~mambang@user/mambang)
[08:49:39] *** Joins: darksun (~darksun@user/darksun)
[08:51:04] *** Quits: Deep6 (~Deep6@fixed-189-203-231-160.totalplay.net) (Ping timeout: 272 seconds)
[08:52:31] *** Joins: Deep6 (~Deep6@fixed-187-191-36-13.totalplay.net)
[08:53:58] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[08:55:05] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[08:55:12] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:55:52] *** Quits: rmm2 (~rob@103.226.107.218) (Remote host closed the connection)
[08:56:24] *** Joins: iflema (~ian@user/iflema)
[08:58:09] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:59:01] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:9ed)
[08:59:15] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Changing host)
[08:59:15] *** Joins: dmang (~dmang@user/dmang)
[08:59:35] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:00:01] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:00:17] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[09:00:39] *** Quits: dmang (~dmang@user/dmang) (Quit: Leaving)
[09:02:07] *** Quits: Paul (~Paul@user/paul) (Read error: Connection reset by peer)
[09:02:41] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[09:04:34] *** Joins: SebastianM (~seba@user/sebastianm)
[09:04:39] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[09:04:41] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[09:05:59] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:08:19] *** Joins: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com)
[09:10:24] *** Quits: alexeikale (~alexeikal@2601:1c2:1b80:100:4ea5:a35a:95ba:fcb1) (Quit: WeeChat 3.1)
[09:10:32] <horribleprogram> nedbat: yo can i claim ur nickname on freenode, they reset the usernames lol
[09:11:48] <horribleprogram> jks aside it's being spammed now and I'm pretty sure I'm screwed, cuz obviously someone has access to the DB of usernames and passwords and e-mails
[09:14:23] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[09:14:33] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:15:07] *** Joins: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com)
[09:16:01] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[09:18:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:21:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:22:16] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 244 seconds)
[09:22:44] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[09:24:11] *** Joins: poorboy (~poorboy@104.131.46.87)
[09:26:44] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[09:28:17] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:29:46] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[09:30:14] *** Joins: sjj (~sjj@netiez.com)
[09:31:00] *** Quits: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[09:31:19] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[09:31:27] *** Joins: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com)
[09:31:34] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[09:31:36] *** Quits: rock2X (~rock@c-69-181-4-101.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:31:38] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[09:31:44] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[09:32:03] *** Quits: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com) (Client Quit)
[09:32:32] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[09:33:07] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[09:33:32] *** Joins: Lexi_ (~Lexi@074-135-140-171.res.spectrum.com)
[09:33:38] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:53] *** Quits: Lexi_ (~Lexi@074-135-140-171.res.spectrum.com) (Client Quit)
[09:35:28] *** Quits: sl4ck3r (sl4ck3r@amsterdam.pot-smokin.net) (Quit: leaving)
[09:37:28] *** Quits: easior (~easior@61.155.142.73) (Quit: Leaving)
[09:37:56] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[09:39:18] *** Quits: rapfaria (~doxem@179.99.180.104) (Ping timeout: 264 seconds)
[09:39:45] *** Joins: biozz (~biozz@178.57.22.163)
[09:40:07] *** Joins: runciter (~runciter@user/runciter)
[09:41:21] *** Quits: wei2912 (~wei2912@112.199.250.21) (Ping timeout: 272 seconds)
[09:41:44] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[09:41:48] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[09:43:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:43:20] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:43:41] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[09:44:08] *** Joins: HaMsTeRs (~mx@182.153.46.210)
[09:45:07] <meejah> esaym153: maybe a plugin?
[09:45:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[09:46:55] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:9ed) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:48:19] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:50:48] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[09:51:37] *** Joins: dmang (~dmang@user/dmang)
[09:52:18] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[09:54:01] *** Joins: pnoud (~pnoud@97-113-85-15.tukw.qwest.net)
[09:54:02] *** Joins: biozz (~biozz@178.57.22.163)
[09:56:40] *** Quits: n0cto (~n0cto@2605:a601:ac07:4100:ed39:190b:f6ab:81f1) (Read error: Connection reset by peer)
[09:57:17] *** Joins: n0cto (~n0cto@70.39.116.233)
[09:57:34] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:58:01] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[10:02:42] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 264 seconds)
[10:03:49] *** pnoud is now known as pnoud_
[10:04:23] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[10:04:39] *** pnoud_ is now known as pnoud
[10:05:09] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 244 seconds)
[10:05:11] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:06:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[10:06:47] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[10:06:56] *** Joins: K285 (~K285@2401:4900:30c0:e9c6:d1ef:e698:199e:ad6b)
[10:07:16] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[10:07:48] *** Quits: pnoud (~pnoud@97-113-85-15.tukw.qwest.net) (Changing host)
[10:07:48] *** Joins: pnoud (~pnoud@user/pnoud)
[10:09:59] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[10:10:29] *** Quits: anp (~anp@user/anp) (Ping timeout: 272 seconds)
[10:10:41] <cluelessperson> horribleprogram, did they seriously reset usernames?
[10:12:30] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[10:12:49] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[10:14:49] <meejah> cluelessperson: haha, yup .. just re-connected and mine is unregistered
[10:15:19] <ali1234> cluelessperson: they set up new ircds running different software and a blank database, and then changed the dns to point to that. the old network still exists but it has netsplit into at least three separate nets, some with services, others without
[10:15:42] *** Quits: HaMsTeRs (~mx@182.153.46.210) (Quit: Konversation terminated!)
[10:16:04] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[10:16:39] <meejah> probably into -offtopic territory, but so, "it's even worse than you probably think" ...?
[10:16:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:17:04] <ali1234> ##freenode if you want to talk about it or just watch
[10:17:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[10:17:26] *** Joins: gareppa (~gareppa@user/gareppa)
[10:18:59] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[10:19:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:19:51] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[10:20:04] *** Joins: runciter (~runciter@user/runciter)
[10:22:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[10:22:58] *** Joins: canopus (~user@116.68.98.40)
[10:23:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[10:23:57] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[10:24:19] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ended)
[10:24:33] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[10:25:00] *** Joins: redgloboli (~redglobol@user/redgloboli)
[10:27:42] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[10:29:37] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Quit: leaving)
[10:29:44] *** Joins: melar (~melar@55.84.233.220.static.exetel.com.au)
[10:29:55] *** Quits: emerent (~quassel@p200300cd5703bb6bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[10:29:56] *** Joins: emerent_ (~quassel@p200300cd5703bb49ba27ebfffed28a59.dip0.t-ipconnect.de)
[10:29:56] *** emerent_ is now known as emerent
[10:32:16] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:33:06] *** Joins: pankid (~quassel@pankid.club)
[10:33:26] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[10:34:37] *** Quits: qzd (uid237765@id-237765.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:35:10] *** Joins: xkuru (~xkuru@user/xkuru)
[10:35:48] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[10:36:03] *** Joins: xkuru (~xkuru@user/xkuru)
[10:36:38] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[10:37:00] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[10:37:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:37:34] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[10:40:27] *** Quits: Deep6 (~Deep6@fixed-187-191-36-13.totalplay.net) (Remote host closed the connection)
[10:40:31] *** Quits: K285 (~K285@2401:4900:30c0:e9c6:d1ef:e698:199e:ad6b) (Quit: Client closed)
[10:41:25] *** Joins: gareppa (~gareppa@user/gareppa)
[10:42:35] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[10:43:25] <horribleprogram> I'm having crazy debates in there
[10:43:41] *** Joins: wei2912 (~wei2912@112.199.250.21)
[10:43:53] *** Joins: masoudd_ (~masoudd@user/masoudd)
[10:44:15] <glik22> this may be way too open-ended a question, but in what cases should you pass an instance of a class vs. the class itself and have some other code instantiate it? for example: https://bpa.st/IVMQ
[10:44:51] *** Quits: tkazi (~tkazi@vps.tanzeelkazi.com) (Changing host)
[10:44:51] *** Joins: tkazi (~tkazi@user/tkazi)
[10:44:54] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[10:45:12] <KirkMcDonald> glik22: I would default to passing objects around. But it's really a matter of which state is needed where and when.
[10:46:00] <meejah> glik22: the first thing is often called "a factory" .. but yeah i'd pass instances if at all possible
[10:46:29] *** Quits: drew (~drew@user/drew) (Ping timeout: 244 seconds)
[10:46:39] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:07] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:47:17] *** Joins: seednode (~seednode@user/seednode)
[10:47:57] <Obo> close
[10:48:05] *** Parts: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se) (WeeChat 2.8)
[10:48:27] <glik22> i could see passing the class being useful if the code which instantiates it knows some values to instantiate it with.
[10:48:50] <glik22> i know i've been classes as opposed to instances being passed around in the wild. will need to pay attention when i come across it again
[10:49:00] *** Joins: Obo (~roberto@h-46-59-103-134.A498.priv.bahnhof.se)
[10:49:10] *** Joins: MsPy (~MsPy@2402:e280:3d22:227:3178:c63c:767a:4ac4)
[10:49:35] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 244 seconds)
[10:50:05] *** Joins: krrish_dhaneja (~krrish_dh@user/krrish-dhaneja/x-4890718)
[10:50:08] <meejah> it's not *necessarily* bad, but instances easier to think about / fake / etc
[10:50:30] <krrish_dhaneja> Is this the official python channel?
[10:50:39] *** Joins: darksun (~darksun@user/darksun)
[10:50:43] <meejah> krrish_dhaneja: yes
[10:51:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:51:42] *** Joins: gusto (~Augustus@109.255.100.54)
[10:52:02] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 272 seconds)
[10:52:12] *** Joins: xkuru (~xkuru@user/xkuru)
[10:52:47] <MsPy> Hi Anyone knows about python library for sonicpi,  specifically looking for use_bpm , is not setting the beats per minute
[10:53:30] *** Quits: melar (~melar@55.84.233.220.static.exetel.com.au) (Changing host)
[10:53:31] *** Joins: melar (~melar@user/melar)
[10:54:19] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[10:55:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0b0-228.dhcp.inet.fi)
[10:55:59] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[10:56:23] *** Quits: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com) (Quit: Leaving...)
[10:56:42] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 264 seconds)
[10:58:00] *** Quits: masoudd_ (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[10:58:36] *** Quits: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: dtux)
[11:01:06] *** Joins: biozz (~biozz@178.57.22.163)
[11:01:45] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[11:02:43] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[11:02:59] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[11:03:39] *** Joins: dme86 (~dan@user/dan86)
[11:03:41] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[11:03:57] *** Joins: chele (~chele@user/chele)
[11:04:01] *** Deesl is now known as bsdboy
[11:04:14] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[11:04:23] *** bsdboy is now known as Deesl
[11:05:10] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[11:05:17] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[11:06:36] *** Joins: wilk (~wilk@user/wilk)
[11:07:15] *** Joins: biozz (~biozz@178.57.22.163)
[11:09:08] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[11:09:33] *** Joins: manti7 (~manti7@176.10.104.94)
[11:13:42] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[11:15:18] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:27] *** Joins: drew (~drew@user/drew)
[11:17:10] *** Quits: canopus (~user@116.68.98.40) (Ping timeout: 244 seconds)
[11:17:55] *** Joins: jenhsun (uid342237@id-342237.stonehaven.irccloud.com)
[11:18:44] *** Joins: doko (~doko@2a02:8106:1a:7600:9e46:fb2:ebcb:17a6)
[11:19:07] *** Joins: crazysim (sid86009@id-86009.stonehaven.irccloud.com)
[11:19:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:19:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0b0-228.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:19:40] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[11:19:42] *** Quits: cjb (~cjb@user/cjb) ()
[11:20:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[11:21:08] *** Quits: docphees (~doc_phoos@ip-94-114-45-57.unity-media.net) (Quit: Leaving)
[11:21:31] *** Parts: dyslexicat (~dyslexica@176.234.11.153) ()
[11:23:28] *** Joins: sodimel (~co@31.32.214.113)
[11:23:51] *** Joins: rendar (~rendar@user/rendar)
[11:24:17] *** Quits: Fluxx (~Fluxx@user/fluxx) (Quit: Leaving)
[11:24:39] *** Joins: Fluxx (~Fluxx@user/fluxx)
[11:26:20] *** Joins: betuxy (~betuxy@158.181.77.59)
[11:26:28] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[11:27:19] *** Joins: kosh (~kosh@user/kosh)
[11:31:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:33:04] *** Joins: alguien (~alguien@user/alguien)
[11:33:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[11:34:05] *** Joins: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com)
[11:34:20] *** Joins: Unode (~Unode@194.94.44.220)
[11:34:50] *** Joins: pradhvan (~pradhvan@103.94.114.238)
[11:35:36] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[11:37:03] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:38:45] *** Joins: Auron (Auron956@user/auron)
[11:40:01] *** Joins: NeoCore (~neocore@138.199.47.158)
[11:40:27] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: Textual IRC Client: www.textualapp.com)
[11:40:44] *** Joins: teut (~teut@182.69.85.39)
[11:40:59] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[11:41:11] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[11:42:58] *** Joins: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f)
[11:43:18] *** Joins: Naan (~naan@user/naan)
[11:44:06] *** Joins: feriman (~feriman@188.163.113.127)
[11:44:44] *** Joins: dme86 (~dan@user/dan86)
[11:45:18] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 264 seconds)
[11:49:45] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[11:50:23] *** Quits: lightbulbjim_ (~lightbulb@203-123-115-173.ip4.superloop.com) (Quit: Leaving...)
[11:50:33] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[11:50:51] *** Joins: iflema (~ian@user/iflema)
[11:51:11] *** Joins: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com)
[11:51:20] *** Joins: cliluw (~cliluw@47.147.80.149)
[11:51:32] *** Joins: uquenar (~uquenar@2600:1700:ce8:410:c4b7:2818:9a3c:7d61)
[11:52:09] *** Quits: uquenar (~uquenar@2600:1700:ce8:410:c4b7:2818:9a3c:7d61) (Quit: Leaving)
[11:55:14] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[11:55:25] *** Quits: dld (~davidlowr@2601:197:600:1210:38c6:8918:615d:1c02) (Ping timeout: 272 seconds)
[11:55:46] *** Joins: Julian (~tos9@151.66.53.132)
[11:55:56] *** Joins: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net)
[11:56:15] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[11:57:09] *** Quits: Julian (~tos9@151.66.53.132) (Client Quit)
[11:58:30] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[11:59:30] *** Joins: JavaBean (~JavaBean@user/javabean)
[12:00:55] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[12:01:24] *** Joins: Brocker (~Libera@vmi552115.contaboserver.net)
[12:01:49] *** Quits: gusto (~Augustus@109.255.100.54) (Remote host closed the connection)
[12:02:41] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[12:03:29] *** Quits: Brocker (~Libera@vmi552115.contaboserver.net) (Remote host closed the connection)
[12:03:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:03:50] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[12:03:53] *** Joins: gusto (~Augustus@109.255.100.54)
[12:05:29] *** Joins: Brocker (~Libera@vmi552115.contaboserver.net)
[12:05:34] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:06:12] *** Joins: seednode (~seednode@user/seednode)
[12:07:04] *** Joins: maxnoe_ (~maxnoe@p5b09e502.dip0.t-ipconnect.de)
[12:08:00] *** Joins: iflema (~ian@user/iflema)
[12:08:19] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Quit: Bye)
[12:10:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:10:59] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[12:13:27] *** Joins: tspng (~tspng@80-218-192-246.dclient.hispeed.ch)
[12:13:46] *** Quits: maxnoe_ (~maxnoe@p5b09e502.dip0.t-ipconnect.de) (Quit: leaving)
[12:14:17] *** Joins: maxnoe_ (~maxnoe@p5b09e502.dip0.t-ipconnect.de)
[12:14:33] *** Joins: maxnoe (~maxnoe@p200300e787229f39056bea7c8b10e874.dip0.t-ipconnect.de)
[12:19:25] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[12:19:39] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[12:21:42] <n00b101> guys, i have a django app, there's an external python script running, it gets a signal when "enter key is presssed" .. this is taken as interrupt by that script.. can i pass this info "interrupt recieved" to django frontend?
[12:22:01] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[12:22:47] <deniska> n00b101: the easiest thing is to do an http request to the django application
[12:24:00] <maxnoe> You can e.g. do a request to a specific endpoint of your django app. e.g. requests.post('http://localhost:5000/interrupt')
[12:24:17] *** Quits: lightbulbjim (~lightbulb@203-123-115-173.ip4.superloop.com) (Changing host)
[12:24:17] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[12:25:06] <n00b101> when that happends, how can i make it aware in "/" page ?
[12:25:31] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:25:42] <maxnoe> You mean you want to display some information on your index page when that happens?
[12:25:56] <n00b101> yes
[12:26:01] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[12:26:07] <maxnoe> And that has to happen automatically, without a refresh?
[12:26:22] <maxnoe> or is a refresh fine?
[12:26:26] <n00b101> refresh is okay
[12:26:28] <n00b101> fine
[12:26:39] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:26:57] <maxnoe> Then you just need to store the information somewhere and display it in the index page handler
[12:27:24] <maxnoe> e.g. if it is a counter, have a variable at the top level, increase it in the interrupt handler and display it on the mainpage
[12:27:39] *** Quits: melar (~melar@user/melar) (Quit: Client closed)
[12:28:41] <n00b101> its not a counter,, just an info "interrupt recieved"
[12:29:54] *** Quits: maxnoe (~maxnoe@p200300e787229f39056bea7c8b10e874.dip0.t-ipconnect.de) (Quit: Client closed)
[12:30:13] <n00b101> or is it easy to setup a telegram or any bot which sends a message like "recieved"
[12:30:21] <n00b101> is that easier?
[12:30:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[12:31:29] <LordKalma> that sounds like a job for javascript man
[12:31:31] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[12:32:20] <LordKalma> server-side "prompts" require a bit of work
[12:32:49] <LordKalma> honestly making a script sending a telegram message is probably quicker to write than a django application
[12:34:07] <n00b101> yes
[12:34:15] <n00b101> which api is better for it?
[12:36:01] *** Joins: HaMsTeRs (~mx@182.153.46.210)
[12:36:25] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:36:35] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[12:38:32] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:54] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:39:57] *** Joins: indigochill (~indigo@dsl-hkibng32-54f84d-66.dhcp.inet.fi)
[12:40:25] *** Quits: betuxy (~betuxy@158.181.77.59) (Quit: Connection closed)
[12:41:14] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Quit: bye)
[12:41:58] *** Joins: varaindemian (~567c4ea2@ircip2.mibbit.com)
[12:42:01] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:42:15] <varaindemian> Trying to implement API keys for this app: https://github.com/di/screenshare (I dockrezied it) And now I want to implement authentication based on an API private key sent in the request headers. Can someone please guide me in this direction?
[12:43:56] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[12:45:09] *** Joins: farcas (~farcas@2a02:2f09:5014:7100:9f12:487b:9c49:161a)
[12:45:17] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-83.range86-150.btcentralplus.com)
[12:45:20] *** Joins: darksun (~darksun@user/darksun)
[12:45:30] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:d648:1b69:add9:923)
[12:45:35] *** Joins: f1se4 (~f1se4@213.195.98.55)
[12:45:46] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[12:46:14] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 268 seconds)
[12:46:58] *** Joins: unyu (~pyon@user/pyon)
[12:47:22] <varaindemian> do you need additional info for this?
[12:49:32] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[12:49:36] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: node-irc says goodbye)
[12:50:43] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[12:50:48] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:51:41] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:52:10] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[12:52:20] *** Joins: shad (~shad@user/shad)
[12:54:50] *** Joins: saagaar (~saagaar@2400:1a00:bd11:651e:a411:484f:b811:5f9a)
[12:56:39] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:56:51] *** Joins: mborus (~mborus@2001:16b8:6f2d:1d00:1ab:56a5:6b25:51f7)
[12:57:04] *** Quits: root1 (~root@159.65.86.163) (Quit: root1)
[12:57:42] *** Joins: brickfat (~brickfat@user/brickfat)
[12:57:49] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[13:00:12] <varaindemian> anyone?
[13:01:57] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:02:35] <mborus> what's your question again (just joined...)
[13:02:43] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[13:04:23] *** Quits: krrish_dhaneja (~krrish_dh@user/krrish-dhaneja/x-4890718) (Quit: Quit)
[13:05:32] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[13:06:54] *** Quits: Jonno_FTW (~come@api.carswap.me) (Ping timeout: 264 seconds)
[13:07:27] *** Joins: kosh (~kosh@user/kosh)
[13:11:24] *** Joins: thing (~thing@user/thing)
[13:13:55] <matiss> does anyone know about any clustering library implementations in python, say raft consensus, shared locks, leader election?
[13:14:09] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:14:09] <matiss> say a lib that one could use to build clustered services
[13:14:27] *** Joins: pnoud (~pnoud@user/pnoud)
[13:15:19] *** Quits: jim (~jim@about/linux/staff/jim) (Read error: Connection reset by peer)
[13:16:54] *** Quits: very_sneaky_ (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky_)
[13:17:15] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:17:58] <varaindemian> matiss: Trying to implement API keys for this app: https://github.com/di/screenshare (I dockrezied it) And now I want to implement authentication based on an API private key sent in the request headers. Can someone please guide me in this direction?
[13:18:11] <varaindemian> mborus: ^
[13:18:12] *** Joins: bindu (bindu@user/bindu)
[13:18:17] <varaindemian> matiss: sorry
[13:18:36] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Client Quit)
[13:18:57] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:19:09] <varaindemian> mborus: that is my question
[13:19:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:19:38] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:19:39] *** Quits: kmh (~kmh@p200300df5f2f6b00ddb09957c69dbac2.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[13:20:39] *** Joins: jim (~jim@about/linux/staff/jim)
[13:20:47] <guardian> hello, I have a function returning 2 values: a, b = foo()
[13:20:52] <mborus> varaindemian ok - so you want to do something like HTTPAuth with user and password?
[13:21:22] <guardian> Is it possible from within foo() to detect 1 of the returned values will be discarded by the caller? a, _ = foo() and as such do less work?
[13:21:45] <mborus> varaindemian - for that, look at https://flask-httpauth.readthedocs.io/en/latest/
[13:22:16] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Client Quit)
[13:22:42] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:22:51] <graingert> guardian: no you'll need to make two functions
[13:22:54] <maxnoe_> @guardian, no that is not possible. And strictly speaking, you are not discarding the value, _ is a valid variable name that is by convention used for this
[13:23:45] *** Joins: pnoud (~pnoud@user/pnoud)
[13:23:45] <guardian> ok thanks
[13:24:10] *** Joins: WizardGed (~WizardGed@user/wizardged)
[13:25:08] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[13:25:14] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[13:25:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[13:25:54] *** Joins: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:d4db:ea08:dafd:12e7)
[13:27:40] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 252 seconds)
[13:28:17] *** Joins: spithash (~spithash@user/spithash)
[13:28:49] *** Joins: wyclif (~wyclif@user/wyclif)
[13:29:26] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[13:29:47] <LordKalma> you can always have a parameter for it
[13:29:58] *** Joins: vladoski (~vladoski@2001:b07:add:d406:b774:24b2:e27:15d6)
[13:30:06] <LordKalma> many things in the numpy API return more things with some flag as argument
[13:30:33] <varaindemian> mborus: yeah, flask is perfect! Thank you :) next steps would be to to create an API callback that receives a link and a screeen (x,y) and this one will close the existing screen there, and open the new one with the new link
[13:30:33] <vladoski> hi guys, in sqlalchemy is there a way to select just a column using core apis so that I can retrieve just a list of them instead a list of tuples with only one element?
[13:30:38] *** Joins: seanh (sid72485@id-72485.charlton.irccloud.com)
[13:30:43] <vladoski> of course without doing it myself with list comp. etc.
[13:31:13] <varaindemian> mborus: again, this is based on the github script I sent earlier
[13:31:22] <varaindemian> mborus: https://github.com/di/screenshare this one
[13:32:51] <varaindemian> mborus: basically I have a few screens connected together and I want to send to them a link or share my screen and I found this project I was talking about and I am thinking to use to accomplish my goal. what do you think? is this project - https://github.com/di/screenshare worth?
[13:33:34] *** Quits: dieth (~dieth@user/dieth) (Read error: Connection reset by peer)
[13:33:36] *** seanh is now known as seanh_
[13:33:47] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[13:34:21] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:34:31] *** seanh_ is now known as seanh
[13:35:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:35:26] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[13:35:34] *** Quits: saagaar (~saagaar@2400:1a00:bd11:651e:a411:484f:b811:5f9a) (Ping timeout: 250 seconds)
[13:36:26] <mborus> @varaindemian I had a quick look at the script, this really just takes a screenshot and serves it. If you that's what you want... It won't be performant and won't scale, but it's a quick hack that could work.
[13:36:37] *** Joins: easior (~easior@61.155.142.67)
[13:37:06] <mborus> varaindemian otherwise, why not use a remote control tool like VNC
[13:37:19] *** Joins: jayesh (~jayesh@2a01:e0a:11c:2c80:cbe1:4fdf:de78:957c)
[13:37:32] *** Quits: jenhsun (uid342237@id-342237.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:38:42] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 264 seconds)
[13:40:08] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:40:42] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[13:42:01] *** Quits: pradhvan (~pradhvan@103.94.114.238) (Ping timeout: 272 seconds)
[13:42:52] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[13:43:23] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[13:43:36] *** Parts: jayesh (~jayesh@2a01:e0a:11c:2c80:cbe1:4fdf:de78:957c) (WeeChat 2.3)
[13:43:50] *** Joins: grawity (grawity@star.nullroute.eu.org)
[13:43:57] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[13:45:25] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:45:43] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[13:46:02] <IHasFinger> Hi everyone, I was wondering if anyone has used the schedule library before?
[13:46:15] <IHasFinger> https://pypi.org/project/schedule/
[13:46:53] *** Joins: Adoi (~Adoi@user/adoi)
[13:47:20] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:48:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 244 seconds)
[13:48:55] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 264 seconds)
[13:49:00] <IHasFinger> https://bpa.st/IFDA I have set it up like this so the script at("minutes:seconds") however i find that when i run this the first time. It actually calls the volume run which I do not want
[13:49:36] <IHasFinger> is it possible so that it calls the script at the exact timing?
[13:49:40] <BullHorn> lol apparently freedone purged all accounts and channels
[13:49:51] <BullHorn> and a handful of users/bots are already taking over all the channels
[13:52:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[13:53:28] <guardian> what's an elegant to write something like: x = uuid.UUID(some_str) or some_str ?
[13:54:00] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[13:54:18] <bjs> guardian: what do you want it to do?
[13:54:56] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[13:54:59] <guardian> I want x to be either an instance of uuid.UUID if the string can be parsed as a uuid or remain a string
[13:55:15] <bjs> IHasFinger: there doesn't seem to be a reason for that code to automatically call .run(), unless the time you ran it was one of those times of course
[13:55:31] <guardian> I'm curious if I can avoid writing try: except: else: or writing an helper for that
[13:56:03] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[13:56:48] <bjs> guardian: the docs for uuid do not suggest any kind of argument/method that can be used,  so you'll be stuck doing something like that yeah
[13:57:02] <bjs> the helper function for it is pretty simple though thankfully
[13:57:05] <mborus>  guardian I'd use try/catch because it's readable
[13:57:50] <guardian> is it ok to write try: x = uuid.UUID(x) except ValueError: pass
[13:57:52] <guardian> ?
[13:58:01] *** Joins: feriman (~feriman@188.163.113.127)
[13:58:15] <guardian> I think I've heard people frowning when seeing "pass" in except clauses
[13:58:19] <guardian> not sure though
[13:58:28] <IHasFinger> Hi bjs basically the first time i run the code, it calls the Volume().run method. so if i run the code at 09:26 it will call this method and then it call it again at 09:30 then 09:35 ... basically every 5 minutes which is okay. However I do not want it to call it at 09:26 for example. It needs to call it every 05,10,15,20 ...00
[13:58:46] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[13:59:00] *** Joins: iflema (~ian@user/iflema)
[13:59:12] <mborus> I'd write it as try: x = uuid,UUID(yourstring) execpt ValueError: x = yourstring
[13:59:14] <bjs> IHasFinger: are you sure it's this file exactly that you're running?  and how can you be sure that it really is calling run
[13:59:38] <IHasFinger> I have print and a timestamp
[13:59:40] <bjs> guardian: well I thought the idea was you wanted `x = some_str` in the except part?
[13:59:47] <bjs> IHasFinger: okay can I see that too and the output?
[14:00:00] <IHasFinger> bjs, yes.
[14:00:04] <mborus> guardian and I'd do a quick check if uuid.UUID really only throws ValueErrors (by testing it with and int and a None Value)
[14:00:13] <guardian> k
[14:00:22] <Helle> I would argue that if you actually need to suppress exceptions to some degree, look at contextlib.suppress https://docs.python.org/3/library/contextlib.html#contextlib.suppress
[14:00:44] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[14:00:46] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:02:04] <tspng> guardian: just keep in mind that uuid.UUID(x) returns an instance of UUID and not str. You probably don't want to mangle that into the same variable.
[14:02:59] <ApostleInTriumph> Hello, I've two np arrays of shape (6078, 3) each. I want to create an iterable that would return (30000, 6) np array upon a call which is permutation of each row of the two input arrays. My end goal is to generate an array (6078*6078, 6) but storing such an array in memory is prohibitive. hence i'm looking for an iterative alternative
[14:03:58] *** Joins: bjelleklang (~c@user/chha)
[14:04:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[14:04:57] *** Joins: easior_ (~easior@61.155.142.70)
[14:05:10] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[14:05:19] *** Joins: mdw (~root@159.65.86.163)
[14:05:42] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 264 seconds)
[14:05:50] *** Joins: pnoud (~pnoud@user/pnoud)
[14:06:10] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[14:06:16] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[14:06:18] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 264 seconds)
[14:07:19] <graingert> Helle: suppress is slower, and behaves differently to try/except pass
[14:08:33] *** Joins: warl (~warl@c-73-222-73-243.hsd1.ca.comcast.net)
[14:09:54] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[14:09:55] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[14:10:07] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[14:10:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[14:10:34] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[14:10:44] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[14:10:57] <bjs> eh not in any interesting or deep way
[14:13:44] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:15:51] *** Parts: thing (~thing@user/thing) (Leaving)
[14:16:58] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 244 seconds)
[14:17:11] <IHasFinger> bjs, any idea?
[14:17:43] <bjs> IHasFinger: you said yes you can share the code and output,  I've just been waiting
[14:19:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[14:19:23] *** Joins: Tempesta (Tempesta@183.98.39.112)
[14:19:46] *** Joins: dukwon (~dukwon@physics.horse)
[14:20:55] *** Joins: masoudd_ (~masoudd@user/masoudd)
[14:21:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[14:22:44] *** Joins: tonnydourado (uid56065@id-56065.tooting.irccloud.com)
[14:22:46] <Repiphany> IHasFinger: https://bpa.st/JHRQ waits until the next multiple of 5 minutes before continuing running
[14:22:54] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[14:22:54] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:23:20] <Repiphany> and repeats every 5 minutes after that assuming run() doesn't take longer than that
[14:23:28] *** Quits: warl (~warl@c-73-222-73-243.hsd1.ca.comcast.net) (Changing host)
[14:23:28] *** Joins: warl (~warl@user/warl)
[14:23:39] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[14:24:06] *** Joins: cidtest (~cidtest@89.238.185.211)
[14:24:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[14:26:37] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[14:26:37] <IHasFinger> Repiphany, :)
[14:26:45] <IHasFinger> thank you will try that out
[14:27:15] <bjs> but your schedule code should've worked (it works for me ...)
[14:27:55] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[14:27:57] <bjs> except I don't have your print and volume things of course
[14:28:11] *** Joins: kilitary (~kilitary@kilitary.ru)
[14:28:25] *** Quits: cidtest (~cidtest@89.238.185.211) (Quit: WeeChat 3.1)
[14:28:26] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[14:28:27] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Quit: WeeChat 3.1)
[14:29:35] *** masoudd_ is now known as masoudd
[14:29:36] *** Joins: cidtest (~cidtest@89.238.185.215)
[14:29:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:29:45] <ApostleInTriumph> Hello, I've two np arrays of shape (6078, 3) each. I want to create an iterable that would return (30000, 6) np array upon a call which is permutation of each row of the two input arrays. My end goal is to generate an array (6078*6078, 6) but storing such an array in memory is prohibitive. how do I go about?
[14:30:09] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[14:30:11] *** Quits: cidtest (~cidtest@89.238.185.215) (Client Quit)
[14:30:27] <IHasFinger> bjs, the code works the issue is that as soon as you run the schedule code, it calls the volume().run method
[14:30:38] <bjs> IHasFinger: that's not what I see
[14:30:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:30:47] *** Quits: easior_ (~easior@61.155.142.70) (Quit: Leaving)
[14:30:50] <bjs> and I can't see why the code would do that.  It should only do it at the times you say in the code
[14:30:51] *** Joins: cidtest (~cidtest@89.238.185.222)
[14:31:01] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[14:31:05] <bjs> IHasFinger: you said you had some kind of print and timestamp?  I guess in the `Volume` class?
[14:31:12] <IHasFinger> bjs, add now = datetime.now()         current_time = now.strftime("%H:%M:%S")          print("Current Time =", current_time)
[14:31:21] <IHasFinger> in the method you are calling
[14:31:34] <bjs> IHasFinger: can you just show the actual code *you* are running?
[14:31:39] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[14:31:56] <IHasFinger> Repiphany, that seems to work, it ran at Current Time = 10:55:01 and Current Time = 11:00:00
[14:32:17] <Repiphany> I would guess the print statements were in the initialization of the Volume instance
[14:32:19] <IHasFinger> however its not what I want
[14:32:41] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[14:32:41] <IHasFinger> its calling a new instance of the script everytime which I do not want
[14:32:47] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 244 seconds)
[14:32:59] <bjs> IHasFinger: a new instance of the script?
[14:33:04] *** Quits: n0cto (~n0cto@70.39.116.233) (Ping timeout: 272 seconds)
[14:33:13] *** masoudd is now known as masoudd_
[14:33:15] <Repiphany> Just make the volume instance outside of the while loop
[14:33:23] <IHasFinger> bjs, i mean it is running the script has if it is new
[14:33:24] <Repiphany> and put the run before or after the sleep
[14:33:39] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:33:48] <IHasFinger> each time it runs i am accessing some stuff to a varibles
[14:34:01] *** Quits: audiocat (~audio@2603-8081-1800-0062-aa25-f87c-a162-a12f.res6.spectrum.com) (Ping timeout: 244 seconds)
[14:34:02] *** Joins: canopus (~user@116.68.98.40)
[14:34:05] <bjs> IHasFinger: well you say Volume() each time,  maybe you want `volume = Volume()` and then to use volume.run instead
[14:34:11] <IHasFinger> when it runs the next time, I am looking at the previous one again
[14:34:33] *** masoudd_ is now known as masoudd
[14:35:31] *** Joins: Berg (~chatzilla@user/berg)
[14:35:53] *** Joins: pnoud (~pnoud@user/pnoud)
[14:36:18] *** Joins: kmikita (~kmikita@178.127.205.193)
[14:37:31] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:37:41] <IHasFinger> bjs, :(
[14:37:50] <IHasFinger> https://bpa.st/CDJQ
[14:38:24] <IHasFinger> print(self.check) should be 1 the first time, then 2,3,4,5 etc
[14:39:27] <Repiphany> You're making 12 Volume() instances in your first script with schedule, you should make one volume = Volume() and then pass volume.run to the schedule..do
[14:39:36] *** Joins: AlwaysLivid (~AlwaysLiv@user/panos)
[14:39:38] <IHasFinger> Repiphany, https://bpa.st/IX3A
[14:39:44] <varaindemian> mborus: oh, VNC! thanks for the suggetion! and how can I implement this for the use case I described earlier?
[14:40:09] <IHasFinger> i moved Volume outside the while loop like bjs suggested
[14:40:34] <IHasFinger> Repiphany, actually its working :)
[14:40:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[14:41:04] *** Joins: ahnkle (~ahnkle@195.206.185.62)
[14:41:15] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[14:41:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:41:35] *** Quits: kmikita (~kmikita@178.127.205.193) (Quit: kmikita)
[14:42:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:43:39] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:45:10] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[14:46:01] *** Quits: ahnkle (~ahnkle@195.206.185.62) (Quit: ahnkle)
[14:46:41] *** Joins: lightbulbjim_ (~lightbulb@user/lightbulbjim)
[14:47:04] *** Joins: ahnkle (~user@195.206.185.62)
[14:47:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:47:29] *** Quits: ahnkle (~user@195.206.185.62) (Client Quit)
[14:47:55] *** Joins: dme86 (~dan@user/dan86)
[14:47:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:58] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Ping timeout: 244 seconds)
[14:48:36] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[14:50:57] *** Parts: ThiefMaster (thief@indico/developer/thiefmaster) ()
[14:51:09] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[14:51:54] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 264 seconds)
[14:53:02] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[14:53:06] *** Joins: iflema (~ian@user/iflema)
[14:53:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:53:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:54:17] *** Parts: Berg (~chatzilla@user/berg) ()
[14:54:38] *** Joins: kmikita (uid461814@id-461814.brockwell.irccloud.com)
[14:55:00] *** Quits: kenso (uid437580@id-437580.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[14:55:12] *** Quits: Mrokii (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 244 seconds)
[14:58:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[14:59:14] *** warl is now known as alienwarlock
[14:59:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:59:44] <IHasFinger> Repiphany, and bjs thank you again
[15:00:53] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 244 seconds)
[15:01:35] *** Quits: alienwarlock (~warl@user/warl) (Quit: Client closed)
[15:01:48] *** Quits: tspng (~tspng@80-218-192-246.dclient.hispeed.ch) (Remote host closed the connection)
[15:02:13] *** Joins: easior (~easior@61.155.142.73)
[15:02:23] *** Joins: tspng (~tspng@80-218-192-246.dclient.hispeed.ch)
[15:03:02] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Remote host closed the connection)
[15:04:01] *** Joins: pnoud (~pnoud@user/pnoud)
[15:04:17] *** Joins: easior_ (~easior@61.155.142.70)
[15:04:40] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:06:22] *** Quits: tspng (~tspng@80-218-192-246.dclient.hispeed.ch) (Ping timeout: 244 seconds)
[15:07:05] *** Joins: gareppa (~gareppa@user/gareppa)
[15:07:16] *** Quits: easior (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[15:07:34] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[15:07:52] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Ping timeout: 250 seconds)
[15:07:54] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:07:55] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[15:08:32] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[15:09:08] *** Joins: Mrokii (mrokii@gateway/vpn/airvpn/mrokii)
[15:09:25] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[15:10:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:10:28] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[15:10:54] <varaindemian> mborus: also, if you don't mind, what VNC (client, server) would you recommend for my use case -> someone sharing their screen on one of the multiple screens connected in the network?
[15:11:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:11:34] *** Quits: f1se4 (~f1se4@213.195.98.55) (Remote host closed the connection)
[15:12:14] *** Joins: easior__ (~easior@61.155.142.67)
[15:12:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[15:12:50] *** Joins: alienwarlock (~warl@user/warl)
[15:13:03] *** Quits: polyrob (~rob@user/polyrob) (Quit: ZNC - http://znc.in)
[15:13:13] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[15:14:14] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[15:14:30] *** Joins: cliluw (~cliluw@47.147.80.149)
[15:14:33] *** Joins: polyrob (~rob@user/polyrob)
[15:15:45] *** Quits: easior_ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[15:16:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:16:42] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 244 seconds)
[15:16:55] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:16:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:51] *** Quits: cidtest (~cidtest@89.238.185.222) (Quit: WeeChat 3.1)
[15:18:30] *** Joins: cidtest (~cidtest@89.238.185.215)
[15:18:31] *** Quits: cidtest (~cidtest@89.238.185.215) (Client Quit)
[15:18:58] *** Joins: cidtest (~cidtest@89.238.185.219)
[15:19:26] *** Quits: HaMsTeRs (~mx@182.153.46.210) (Quit: Konversation terminated!)
[15:20:11] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[15:20:26] *** Joins: pnoud (~pnoud@user/pnoud)
[15:22:00] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:22:34] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:22:36] *** Joins: biozz (~biozz@178.57.22.163)
[15:23:01] *** Joins: Reventlov (~remy@user/reventlov)
[15:23:05] <Reventlov> Hello.
[15:24:02] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:24:40] <nedbat> Reventlov: hey hey
[15:24:49] <Reventlov> Wondering if there was some library to run and manage processes from python, maybe a bit more powerful than subprocess. For example, limiting IOs, having access to timeout, and so on
[15:24:51] *** Quits: AB49K (~AB49K@user/ab49k) (Quit: ZNC - https://znc.in)
[15:25:10] *** Quits: julia (~quassel@user/julia) (Quit: No Ping reply in 180 seconds.)
[15:25:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 244 seconds)
[15:25:35] <supakeen> That questions seems to have been asked a few times over the past few days :)
[15:25:41] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[15:25:43] <Reventlov> Goal is to be able to manage tasks from django (hence python)
[15:25:57] <graingert> Reventlov: tractor?
[15:26:08] <maxnoe_> Reventlov: subprocess supports timeouts: https://docs.python.org/3/library/subprocess.html#subprocess.run
[15:26:11] <graingert> Reventlov: https://github.com/goodboy/tractor it's GPLd though
[15:26:35] *** Joins: julia (~quassel@user/julia)
[15:26:44] <graingert> Reventlov: like abstract tasks or just running CLI commands?
[15:27:06] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:27:14] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 244 seconds)
[15:27:20] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[15:27:25] <Reventlov> something like CLI commands, but maybe with a few dependencies between the tasks
[15:27:26] *** Joins: Julian (~tos9@151.66.53.132)
[15:27:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:27:39] <Reventlov> right now I just use a big bash script running as a systemd service
[15:28:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:28:14] *** bjelleklang is now known as chha
[15:28:51] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[15:29:31] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[15:29:40] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:29:49] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[15:30:57] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 272 seconds)
[15:33:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[15:33:42] *** Joins: easior_ (~easior@61.155.142.73)
[15:33:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:34:10] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[15:34:35] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:35:01] *** Quits: Linux77 (~kvirc@186.235.105.225) (Quit: Changing server...)
[15:35:08] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[15:35:16] *** Joins: biozz (~biozz@178.57.22.163)
[15:35:19] *** Joins: Linux77 (~kvirc@186.235.105.225)
[15:35:38] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[15:36:19] *** Joins: alguien (~alguien@user/alguien)
[15:36:29] *** Joins: gareppa (~gareppa@user/gareppa)
[15:36:54] *** Quits: easior__ (~easior@61.155.142.67) (Ping timeout: 264 seconds)
[15:38:07] *** Joins: saagaar (~saagaar@2400:1a00:bd11:651e:2d8a:76a5:ae1d:e3d6)
[15:38:24] <varaindemian> anyone can give me a suggestion?
[15:38:34] <varaindemian> what VNC (client, server) would you recommend for my use case -> someone sharing their screen on one of the multiple screens connected in the network?
[15:38:46] *** Quits: lightbulbjim_ (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[15:39:38] <randall> varaindemian: jitsi?
[15:39:47] *** Quits: NeoCore (~neocore@138.199.47.158) (Quit: Leaving)
[15:39:56] <randall> varaindemian: Are you looking for only screen sharing, or actually remote desktop?
[15:40:12] <varaindemian> randall: only screensharing
[15:40:13] *** Joins: easior__ (~easior@61.155.142.70)
[15:40:31] *** Joins: duoi (~duoi@user/duoi)
[15:40:39] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[15:40:45] <varaindemian> randall: https://github.com/di/screenshare already dockerize this and I;ll probably look into Flask - API keys
[15:41:02] <varaindemian> randall: unless there are better alternatives
[15:41:26] *** Joins: darksun (~darksun@user/darksun)
[15:42:13] *** Quits: alienwarlock (~warl@user/warl) (Ping timeout: 244 seconds)
[15:42:29] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:42:44] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 244 seconds)
[15:42:44] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 272 seconds)
[15:42:51] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[15:42:57] *** Quits: saagaar (~saagaar@2400:1a00:bd11:651e:2d8a:76a5:ae1d:e3d6) (Client Quit)
[15:43:04] *** Joins: biozz (~biozz@178.57.22.163)
[15:43:09] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[15:43:46] *** Joins: Julian (~tos9@151.66.53.132)
[15:44:03] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 272 seconds)
[15:44:31] *** Joins: easior (~easior@61.155.142.70)
[15:44:41] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[15:44:47] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:45:02] *** Joins: biozz (~biozz@178.57.22.163)
[15:45:50] *** Quits: dyslexicat (~dyslexica@176.234.11.153) (Ping timeout: 244 seconds)
[15:46:40] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 244 seconds)
[15:47:12] *** Joins: easior_ (~easior@61.155.142.67)
[15:47:50] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[15:48:26] *** Quits: shad (~shad@user/shad) (Ping timeout: 272 seconds)
[15:48:48] *** Quits: thm_ (~thomas@fedora/thm) (Quit: leaving)
[15:49:07] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[15:49:37] *** Joins: manti7 (~manti7@176.10.104.94)
[15:50:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:50:09] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[15:50:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:50:35] *** Quits: easior (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[15:50:40] *** Joins: easior__ (~easior@61.155.142.70)
[15:50:48] *** Joins: entuland (~entuland@user/entuland)
[15:52:59] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[15:53:01] *** Joins: patchie (~sdf@136.228.209.44)
[15:53:26] <raek> Reventlov: I have this on my "stuff to check out" list. Maybe it is relevant for you? http://supervisord.org/
[15:53:33] *** Quits: easior_ (~easior@61.155.142.67) (Ping timeout: 272 seconds)
[15:54:02] <raek> I've been using systemd a lot to run python processes and it works really well for my use cases.
[15:54:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[15:55:09] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[15:56:03] <raek> (background services that always run and some smaller tasks that run on a fixed schedule, so practically no user intervention of the running)
[15:58:30] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[15:59:15] *** Joins: easior_ (~easior@61.155.142.73)
[15:59:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Read error: Connection reset by peer)
[16:00:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[16:01:05] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:01:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:02:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:02:58] <Neoon> I put elements into a queue, dispatch workers, workers report the queue is done, however the main thread still waits for them to join even when the works have nothing todo anymore any idea?
[16:03:00] *** Quits: easior__ (~easior@61.155.142.70) (Ping timeout: 272 seconds)
[16:03:09] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:04:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[16:05:22] <mgedmin> Neoon: can we see some code?
[16:05:52] <Neoon> https://pastebin.com/fCgFu7n1
[16:05:53] <Neoon> basically
[16:06:01] <Neoon> and it seems to stuck at join
[16:06:18] <Neoon> gimme a sec
[16:06:33] *** Joins: wyclif (~wyclif@user/wyclif)
[16:06:34] <mgedmin> what are the processes doing?
[16:06:49] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[16:06:57] <Neoon> https://pastebin.com/kJY3Yac5
[16:07:04] <Neoon> basically every worker prints out Worker closed
[16:07:09] <Neoon> yet the main thread still waits
[16:07:23] <Neoon> but why?
[16:07:37] <mgedmin> you say all the workers report "Worker closed"?
[16:07:42] <Neoon> yes
[16:07:47] <mgedmin> what if you swap the outQueue.put(sus) before the print?
[16:08:25] <mgedmin> Queue.put() can block, although it's unlikely, if you didn't specify a maxsize
[16:08:48] <Neoon> why would it block?
[16:08:52] <Neoon> it does apparently
[16:09:10] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[16:09:34] *** Joins: trace (~trace@91.66.153.83)
[16:10:03] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:10:28] <mgedmin> I'm not sure I remember how multiprocessing queues work, the pipe buffer is of a limited size and something needs to read from the queue if you want to be able to write to it
[16:10:48] <mgedmin> also, Queue.qsize() is unreliable, see https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue.qsize
[16:11:05] <Neoon> so it could be that the thread is stuck because I loaded to much data into it?
[16:11:08] <Neoon> and don't read it?
[16:11:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[16:11:24] <Neoon> I start reading the output queue when every thread is joined
[16:11:24] <mgedmin> it's confusing when you talk about threads, but your code says Process(target=...)
[16:11:30] <Neoon> process*
[16:11:39] *** Joins: mspe (~user@tilde.team/user/mspe)
[16:11:56] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[16:12:00] <mgedmin> consider using Queue.join(), reading the outQueue, and only then joining the processes
[16:12:14] <mgedmin> wait, does multiprocessing.Queue have a join()?
[16:12:33] <mgedmin> it's based on queue.Queue, which does, but I don't see it in the multiprocessing docs
[16:13:21] <mgedmin> actually is there a reason to wait for the queue to become empty before you start reading grom outQueue?
[16:13:26] *** Joins: Payam (~Payam@138.106.57.132)
[16:13:46] <Neoon> the data would be not complete hence I wait
[16:13:58] <mgedmin> why would it not be complete?
[16:14:11] <Neoon> because its not done?
[16:14:32] <mgedmin> you have N tasks, each of which is completed before its result is put into outQueue
[16:14:46] <mgedmin> so you only get data from outQueue when the corresponding task is complete
[16:14:55] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[16:15:20] <mgedmin> when you read the same number of objects from outQueue as you put into queue, you'll know all the tasks are complete
[16:15:23] <Payam> Does Trio also have `gather` as asynio?
[16:15:25] *** Quits: Fluxx (~Fluxx@user/fluxx) (Remote host closed the connection)
[16:15:36] *** Joins: st4nd (~st4nd@user/st4nd)
[16:15:38] <mgedmin> this could be a problem if one of the workers crashes and doesn't put anything into outQueue -- your main process would then wait forever
[16:17:24] <mgedmin> multiprocessing is complicated; I'd rather use multiprocessing.pool.Pool().map() than mess with queues
[16:17:28] *** Quits: JTL (~irc@user/jtl) (Read error: Connection reset by peer)
[16:17:39] *** Quits: maxnoe_ (~maxnoe@p5b09e502.dip0.t-ipconnect.de) (Quit: leaving)
[16:21:22] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[16:22:00] <Neoon> mgedmin, I try thanks
[16:22:08] <Neoon> lets see if that works
[16:22:47] *** Joins: wyclif (~wyclif@user/wyclif)
[16:22:51] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[16:24:23] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[16:24:24] <Payam> graingert are you there?
[16:24:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[16:25:09] *** Joins: kmh_ (~kmh@p200300df5f1f6100ddb09957c69dbac2.dip0.t-ipconnect.de)
[16:26:09] <Payam> How do I use trio for concurrency?
[16:27:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[16:27:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:27:54] *** Joins: SeeM_ (~SeeM@153.ip-54-38-53.eu)
[16:28:03] *** rud0lf is now known as test
[16:28:13] *** Quits: SeeM_ (~SeeM@153.ip-54-38-53.eu) (Client Quit)
[16:28:13] *** test is now known as rud0lf
[16:28:30] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Read error: Connection reset by peer)
[16:28:45] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[16:28:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:29:27] *** Joins: zeden (~zeden@user/zeden)
[16:29:36] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 272 seconds)
[16:30:07] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[16:30:27] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[16:31:24] <bjs> Payam: have you read https://trio.readthedocs.io/en/stable/tutorial.html
[16:31:56] *** Joins: brownan (~brownan@136.56.137.143)
[16:31:59] *** Joins: shad (~shad@user/shad)
[16:32:23] <bjs> Payam: but basically; nurseries
[16:32:53] <Payam> so nurseries are the corrosponding function to gather?
[16:33:23] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:c8b9)
[16:33:53] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[16:34:13] <bjs> Payam: sort of, yes.
[16:35:33] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[16:35:51] *** Quits: tonnydourado (uid56065@id-56065.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:35:57] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 244 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:50] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[16:37:51] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[16:38:16] *** Joins: mspe (~user@tilde.team/user/mspe)
[16:39:09] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 272 seconds)
[16:39:47] *** Joins: wyclif (~wyclif@user/wyclif)
[16:41:50] *** Joins: derelict (~derelict@user/derelict)
[16:41:52] <Payam> bjs it says that the wait_xsecond_trio was never awaited: https://bpa.st/MKFA why would I do that. main_trio is not a couroutine.
[16:42:33] <bjs> Payam: you're not using start_soon correctly
[16:43:18] <bjs> Payam: have you read https://trio.readthedocs.io/en/stable/reference-core.html#tasks-let-you-do-multiple-things-at-once and specifically the docs for start_soon?
[16:44:07] *** Joins: DarkaMaul (~dm@2001:bc8:24f6:400::42)
[16:44:33] *** Quits: aluria (~aluria@canonical/aluria) (Quit: Bye o/)
[16:44:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[16:47:21] *** Joins: aluria (~aluria@canonical/aluria)
[16:49:20] *** Joins: wakeup (~wakeup@user/wakeup)
[16:50:55] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[16:51:26] <bancroft> is there a way to install python pillow with debug symbols and make it core dump?
[16:51:30] *** Joins: biozz (~biozz@178.57.22.163)
[16:52:00] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[16:53:31] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 268 seconds)
[16:54:14] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:55:15] <no_gravity> Is there a way to get the line number of the last line matching a given regex?
[16:55:36] *** Joins: wyclif (~wyclif@user/wyclif)
[16:56:06] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 244 seconds)
[16:56:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:56:12] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[16:56:41] <mgedmin> no_gravity: hmm, re.compile(r'\A(.*)regexp', re.MULTILINE).match(text).group(1).count('\n') or something like that
[16:57:35] <no_gravity> mgedmin: Ah, the count trick is kinda nice.
[16:58:09] <no_gravity> mgedmin: What is \A?
[16:58:24] <mgedmin> if the file is large you may be better off with a for lineno, line in the_file: if regex.match(line): last_match = lineno
[16:58:43] <mgedmin> \A matches the start of string, while ^ matches at the beginning of every line, when using re.MULTILINE
[16:58:58] <mgedmin> \A is probably redundant given that I used .match() rather than .search()
[16:59:18] <mgedmin> also I'm not sure you want re.MULTILINE -- it's helpful if your regex wants to use ^/$ to match the entire line
[16:59:41] <mgedmin> (oops I forgot the enumerate() in my for loop)
[16:59:52] <no_gravity> Its a bit tricky. I will explain the use case at hand:
[17:00:17] <Repiphany> Can do the second one with like max(i for i, line in enumerate(f, start = 1) if re.match(pattern, line))
[17:00:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:00:22] <no_gravity> I want to split a file at the first empty line after the last match of ^group:
[17:00:29] <rapha> hi all!
[17:00:53] <bancroft> rapha: hello
[17:00:57] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[17:01:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[17:01:27] <rapha> does python have some meta-programming device by which the method highlighted here (https://github.com/mittagessen/kraken/blob/master/kraken/contrib/repolygonize.py#L36) could magically be executed? (i'm trying to read and understand that file but am failing mostly because i can't figure out how that code could ever run)
[17:01:40] *** Joins: Praise (~Fat@user/praise)
[17:01:41] <varaindemian> anybody? any idea?
[17:01:45] *** Joins: azidhaka (~azidhaka@gateway.videnov.bg)
[17:01:50] <varaindemian> what VNC (client, server) would you recommend for my use case -> someone sharing their screen on one of the multiple screens connected in the network?
[17:02:16] <ChrisWarrick> varaindemian: this isn’t really a #python question
[17:02:23] <varaindemian> https://github.com/di/screenshare already dockerize this and I;ll probably look into Flask - API keys, but I want better alternatives ONLY for screensharing/app sharing
[17:02:40] <varaindemian> ChrisWarrick: ^
[17:03:04] <ChrisWarrick> varaindemian: doesn’t look remotely serious to me
[17:03:08] <no_gravity> mgedmin: I want to split this file after "blue like the ocean": https://pastebin.com/raw/yuS3DHGF
[17:03:23] <ChrisWarrick> varaindemian: try asking some linux channel, they might suggest you something else, and something vnc-based
[17:03:46] <varaindemian> alright
[17:04:12] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[17:04:31] <NoImNotNineVolt> varaindemian: have you considered jitsi meet?
[17:04:48] <ChrisWarrick> (jitsi meet sucks)
[17:04:48] *** Joins: pnoud (~pnoud@user/pnoud)
[17:05:10] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[17:05:32] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:05:36] <NoImNotNineVolt> i've had mixed/positive experiences with it.
[17:05:44] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 265 seconds)
[17:05:44] <NoImNotNineVolt> it definitely seems more performant than vnc.
[17:05:56] <nedbat> rapha: they could use getattr to find those methods, but a quick github search isn't turning it up
[17:05:59] <ChrisWarrick> screen-sharing-wise, maybe
[17:06:20] <ChrisWarrick> general connection quality and stability-wise, not at all
[17:06:20] <NoImNotNineVolt> not that vnc sets an especially high bar there.
[17:06:42] <rapha> nedbat: thanks for taking a look!
[17:07:01] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[17:07:21] <Yhg1s> nedbat: no, it's a nested function, not a method.
[17:08:15] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:08:39] <Yhg1s> rapha: it's *technically* possible that one of the functions being called by this function can poke around in the caller's namespace and call _repl_alto or _repl_page, but it's difficult, fragile, and not something people generally do.
[17:08:48] <nedbat> Yhg1s: oh, true.  perhaps they used to use it where xml.parse_page is now?
[17:09:04] <Yhg1s> yeah, probably.
[17:09:14] *** Joins: wyclif (~wyclif@user/wyclif)
[17:09:29] *** Joins: biozz (~biozz@178.57.22.163)
[17:10:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[17:10:03] *** Joins: tspng (~tspng@80-218-192-246.dclient.hispeed.ch)
[17:10:10] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[17:11:08] <rapha> Yhg1s: perhaps i'll just try to contact the author then to get to the bottom of this. thank you!
[17:14:18] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 240 seconds)
[17:15:04] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:15:26] *** Joins: GeorgeK_ (uid416826@id-416826.brockwell.irccloud.com)
[17:15:37] *** Joins: dkmueller (~dkmueller@2a01:c23:c070:3a00:5108:cc42:2ce8:ed08)
[17:15:39] *** Joins: biozz (~biozz@178.57.22.163)
[17:15:51] *** Joins: crippa (~crippa@dynamic-87-245-66-155.ptr.as35518.net)
[17:17:04] <crippa> hi. I'm overlaying an image to my camera stream using openCV. It complains with a 'TypeError: 'PngImageFile' object is not subscriptable'
[17:17:12] *** Joins: narigama (~narigama@2a01:4b00:8716:600:6891:1193:26a9:1430)
[17:17:46] <crippa> should I change the way I load the .png, as it contains transparency?
[17:17:46] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:18:25] <crippa> or is there something wrong in my adding it to the background? -> cv2.addWeighted(frame[150:250,150:250,:],alpha,foreground[0:100,0:100,:],1-alpha,0)
[17:18:41] <mgedmin> crippa: which variable contains your image?
[17:18:56] *** Joins: kitzman (~mitzman@user/dekenevs)
[17:18:57] <crippa> foreground
[17:19:08] <mgedmin> I suspect that you need to convert it from a PngImageFile to a numpy array somehow
[17:19:12] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[17:19:19] <mgedmin> maybe there's an attribute or method that gives you pixel data
[17:19:24] *** Joins: timkofu (~timkofu@user/timkofu)
[17:19:32] <crippa> foreground = Image.open('test.png')
[17:19:51] *** Joins: Gerula_ (~Gerula@user/gerula)
[17:19:51] *** Gerula is now known as Guest3815
[17:19:51] *** Quits: Guest3815 (~Gerula@user/gerula) (Killed (silver.libera.chat (Nickname regained by services)))
[17:19:51] *** Gerula_ is now known as Gerula
[17:19:54] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 240 seconds)
[17:20:47] *** Joins: dxrt (~dxrt@user/dxrt)
[17:20:52] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:20:53] *** Quits: chance (~chance@50.47.109.175) (Quit: Client closed)
[17:21:11] <kitzman> too lazy to look in the sources - any reason why python 3.8's Popen returns file not found?
[17:21:13] <no_gravity> Is there something like var_dump in Python, which shows the content of a variable in a nice way?
[17:21:21] <kitzman> when the file is clearly there and test -x works on it.
[17:21:24] <mgedmin> https://stackoverflow.com/questions/384759/how-to-convert-a-pil-image-into-a-numpy-array
[17:21:37] <deniska> no_gravity: pprint.pprint might be of use
[17:22:02] <raek> kitzman: is the PATH the same in the Popen context nad where you ran "test -x"?
[17:22:08] <crippa> mgedmin thanks, late me take a look!
[17:22:18] <kitzman> raek: it's an absolute path
[17:22:20] <mgedmin> crippa: tl;dr: numpy.array(foreground)[...]
[17:22:23] <rookie1> hmm... perhaps var.__dict__
[17:22:42] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:22:46] <no_gravity> deniska: Thanks, will try it.
[17:23:00] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[17:23:35] *** Quits: Henry151 (~bishop@user/henry151) (Quit: leaving)
[17:23:40] *** Joins: gusto (~Augustus@109.255.100.54)
[17:23:42] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 264 seconds)
[17:24:23] <alguien> what is @identifier?
[17:24:36] <habnabit_> alguien, it's called a decorator
[17:24:43] <alguien> thanks
[17:25:20] *** Joins: zebrag (~chris@user/zebrag)
[17:25:45] *** Joins: dme86 (~dan@user/dan86)
[17:27:18] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:28:20] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[17:29:06] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[17:29:17] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Ping timeout: 268 seconds)
[17:29:33] *** Joins: dudek (~dudek@185.150.236.112)
[17:29:53] *** Joins: biozz (~biozz@178.57.22.163)
[17:30:41] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:30:53] *** Joins: TadeusTaD (tadeustad@psifactor.pl)
[17:31:09] <no_gravity> pprint.pprint does not display any information about the thing at hand.
[17:31:14] <dudek> i'm using dictwriter to write out a csv from various different dictionaries (they may have different keys so i keep track of the keys in a set). Is it possible to have certain key (that is in each of dicts) to be written out as first column?
[17:31:53] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Quit: Client closed)
[17:31:54] <no_gravity> PHPs var_dump has this nice aspect that when you look at the output, you know exactly what you are dealing with.
[17:32:33] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:32:36] <Yhg1s> dudek: you give csv.DictWriter the fieldnames. You should give the fieldnames as a list, and the order will be the order csv.DictWriter uses to write the cells.
[17:33:10] <bjs> no_gravity: yeah print(type(x), repr(x))  is a common thing that I often write, or sometimes help(x)
[17:33:24] <no_gravity> pprint.pprint seems to print multiline strings as if they were arrays. Very confusing.
[17:34:20] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:34:31] <no_gravity> bjs: Yeah, that is more what I was looking for.
[17:34:43] <Yhg1s> no_gravity: 'as if they were arrays'? No, it uses repr().
[17:34:51] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[17:35:00] <no_gravity> Yhg1s: The output of repr and pprint.pprint look very different here.
[17:35:20] <no_gravity> repr shows:
[17:35:23] <no_gravity> 'a\nb'
[17:35:29] <no_gravity> pprint.pprint shows:
[17:35:30] <no_gravity> 'a'
[17:35:31] <no_gravity> 'b'
[17:35:43] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 264 seconds)
[17:35:44] <dudek> Yhg1s, yes but it's not that easy in my case, I need to keep track of all the different keys first before I even write the dictionary. Check out the code: https://bpa.st/LTCQ
[17:36:14] <mgedmin> no_gravity: I can't reproduce on python 3.9 or 3.10, what's the type() of the thing you're pprinting?
[17:36:39] <no_gravity> mgedmin: <class 'str'>
[17:36:43] <Yhg1s> dudek: and what order do you want the keys to be in, then?
[17:36:58] <mgedmin> no_gravity: what python version?
[17:37:06] <dudek> dicts for example may look like this: 1. {'a': 1234, 'b': 1234235} 2: {'a': 2333, 'c': 675}. I just care that a is the first column
[17:37:27] *** Quits: guardian (~guardian@planet-d.net) (Remote host closed the connection)
[17:37:30] <no_gravity> mgedmin: Python 3.8.5
[17:37:47] <Yhg1s> no_gravity: fyi, https://bpa.st/HG7Q
[17:38:06] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[17:38:27] <Yhg1s> dudek: drop the first column from the set, build a list out of the first key and the contents of the set.
[17:38:34] *** Joins: J0ono0 (~J0ono0@2001:8003:a410:7700:45cc:504d:4fce:9f0)
[17:38:36] <no_gravity> Yhg1s: Is there an online python interpreter where we can try together? Something like 3v4l.org for PHP?
[17:38:44] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[17:39:02] <Yhg1s> no_gravity: none that I would bother using. You can just show us what you're doing and what output you're getting by copying and pasting.
[17:39:04] <mgedmin> repl.it?  pythonanywhere.com?
[17:39:07] *** Joins: nyah (~nyah@90.221.186.180)
[17:40:29] <mgedmin> I can sort-of reproduce with pprint.pprint('a\nb', width=1)
[17:40:41] <mgedmin> but it gives me ('a\n' and then  'b') on the next line
[17:42:02] *** Parts: J0ono0 (~J0ono0@2001:8003:a410:7700:45cc:504d:4fce:9f0) (Leaving)
[17:42:09] <no_gravity> I got an example working here: https://www.programiz.com/python-programming/online-compiler/
[17:42:15] <no_gravity> But it has no way to share :/
[17:42:30] <Yhg1s> no_gravity: just copy and paste what you're seeing into bpa.st
[17:42:48] <mgedmin> ideally both the code that is executing and the output
[17:43:21] <no_gravity> Here we go: https://www.online-python.com/DC4aGb6vlP
[17:43:29] <no_gravity> See the difference between pprint and repr.
[17:44:34] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 268 seconds)
[17:45:12] *** kadobanana is now known as mud
[17:45:17] *** Joins: viktorivan (~ivan@187.223.103.108)
[17:45:18] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 264 seconds)
[17:45:19] <Yhg1s> no_gravity: that's quite different from what you said you saw. Notice that the newlines are still there. pprint.pprint() is just wrapping long lines to make them more readable.
[17:45:21] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:45:36] <no_gravity> Yhg1s: How is it different from what I said?
[17:45:40] <mgedmin> pprint is for pretty printing; repr() is not pretty
[17:45:47] <mgedmin> the example you gave omitted the \n and the surrounding ( )
[17:45:52] <Yhg1s> no_gravity: the newlines are still there. All the data is still there. It's just relying on string concatenation.
[17:45:53] <no_gravity> mgedmin: True
[17:46:08] *** Joins: rapfaria (~doxem@2804:431:c7c8:3779:7536:9d68:129a:fe93)
[17:46:18] <Yhg1s> (the parentheses are for grouping, they do not make a tuple or list, like you seemed to think.)
[17:46:21] <no_gravity> Yhg1s: True. But since someone said pprint uses repr, I had to point out that the output is very different.
[17:46:32] *** Joins: Nact (~l@host-85-27-123-155.dynamic.voo.be)
[17:46:41] <Yhg1s> no_gravity: it *uses* repr(), it's not *the same* as repr(). Otherwise it would just be repr().
[17:46:50] <no_gravity> Also, why does it not do it for "hello\nworld"?
[17:46:54] <Yhg1s> no_gravity: the output is, in fact, the same Python string :)
[17:47:00] <Yhg1s> no_gravity: because it's about the length of the line.
[17:48:03] *** Joins: Wulf4 (~Wulf@user/wulf)
[17:48:19] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:48:22] <Yhg1s> no_gravity: https://bpa.st/GIMA
[17:48:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:48:29] <no_gravity> All right. All misteries solved.
[17:49:15] <no_gravity> So ('...' '...' '...') is a way to define a multiline string?
[17:49:24] *** Joins: dodobrain__ (~dodobrain@user/dodobrain)
[17:49:26] <Yhg1s> no, it's a way to define a string.
[17:49:33] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:49:34] <no_gravity> I see.
[17:49:58] <mgedmin> splitting and wrapping a multiline string on line breaks (or other whitespace) is more readable than splitting it at some arbitrary point
[17:50:09] *** Joins: biozz (~biozz@178.57.22.163)
[17:50:10] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:50:11] <mgedmin> pprint() has a maximum width parameter, defaulting to 80
[17:50:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:50:18] *** Joins: easior_ (~easior@2001:da8:800d:52:fc45:6529:c1a8:951d)
[17:50:22] <Yhg1s> no_gravity: https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation
[17:50:26] <mgedmin> also because unwrapped extra long lines are not very readable
[17:50:36] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:50:40] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 272 seconds)
[17:50:52] *** Joins: biozz (~biozz@178.57.22.163)
[17:51:37] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:51:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[17:51:56] *** Wulf4 is now known as Wulf
[17:52:08] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Remote host closed the connection)
[17:52:28] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[17:54:06] *** Joins: Joene_ (~Joene@213.224.16.26)
[17:54:34] *** Quits: arza (arza@arza.us) (Ping timeout: 268 seconds)
[17:55:16] *** Joins: km_ (~km@static.55.93.181.135.clients.your-server.de)
[17:55:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[17:56:00] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:56:00] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[17:56:01] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Read error: Connection reset by peer)
[17:56:13] *** Joins: zebrag (~chris@user/zebrag)
[17:56:19] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[17:56:50] *** Joins: easior__ (~easior@61.155.142.70)
[17:57:11] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[17:57:36] *** Joins: mambang (~mambang@user/mambang)
[17:57:41] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 272 seconds)
[17:57:55] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:58:43] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[17:59:22] *** Quits: ATAD (ATAD@c-73-227-128-98.hsd1.ma.comcast.net) (Changing host)
[17:59:22] *** Joins: ATAD (ATAD@user/atad)
[17:59:23] *** Quits: dodobrain__ (~dodobrain@user/dodobrain) (Ping timeout: 265 seconds)
[17:59:27] <alguien> How do I take arbitrary arguments and call another function with them?
[17:59:52] *** Quits: easior_ (~easior@2001:da8:800d:52:fc45:6529:c1a8:951d) (Ping timeout: 265 seconds)
[18:00:09] <supakeen>  `def f0(*args, **kwargs): f1(*args, **kwargs)`.
[18:00:31] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[18:00:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[18:00:42] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 240 seconds)
[18:00:44] *** Quits: easior__ (~easior@61.155.142.70) (Client Quit)
[18:01:04] *** Joins: c10l (~c10l@89.34.167.207)
[18:02:04] <sco1> Splat!
[18:02:23] *** Joins: SebastianM (~seba@user/sebastianm)
[18:02:37] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[18:03:41] *** Quits: crippa (~crippa@dynamic-87-245-66-155.ptr.as35518.net) (Ping timeout: 268 seconds)
[18:04:12] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[18:04:13] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[18:04:16] *** Joins: nickodd (~nickodd@user/nickodd)
[18:04:25] *** Joins: slav0nic (slav0nic@python.su)
[18:04:29] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[18:04:47] *** Joins: biozz (~biozz@178.57.22.163)
[18:07:35] *** Joins: BernieMont (~Bernard@4.59.197.170)
[18:07:46] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 272 seconds)
[18:08:10] *** Joins: Sadale (~Sadale@user/sadale)
[18:08:21] *** Joins: lacrymol1gy (~lacrymolo@5.225.8.199)
[18:09:14] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 268 seconds)
[18:09:43] *** Quits: chha (~c@user/chha) (Ping timeout: 272 seconds)
[18:11:08] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[18:11:16] *** Joins: Gerula (~Gerula@user/gerula)
[18:11:29] *** Joins: easior (~easior@61.155.142.67)
[18:11:59] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[18:12:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:12:46] <SamuelMarks> hi
[18:13:04] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[18:13:21] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[18:13:23] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:13:24] <SamuelMarks> hi
[18:13:55] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[18:13:56] <llua> if you have a question, its usually better to just ask
[18:13:57] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[18:14:16] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[18:14:50] <SamuelMarks> For those that were on last night, turned out to be a double-barreled solution to get Windows support working gain… appending `path.sep`, `str.casefold`, and using `repr` everywhere - https://github.com/offscale/cdd-python/commit/cab09fbf55147f7a050c61caec52de2c05bfd612
[18:15:07] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[18:15:18] *** Quits: python (~python@user/demon) ()
[18:15:39] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[18:15:39] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[18:15:48] * SamuelMarks gets carried away with his one-liners
[18:15:57] *** Joins: easior_ (~easior@61.155.142.73)
[18:17:33] *** Joins: dx3 (~dx3@bras-base-qubcpq1306w-grc-20-184-145-221-62.dsl.bell.ca)
[18:17:47] *** Joins: SebastianM (~seba@user/sebastianm)
[18:17:52] *** Quits: easior (~easior@61.155.142.67) (Ping timeout: 268 seconds)
[18:17:57] *** Joins: euouae (~euouae@user/euouae)
[18:19:16] *** Joins: Julian (~tos9@151.66.53.132)
[18:20:07] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 244 seconds)
[18:20:45] <SamuelMarks> llua: also I break tradition and actually send a greeting before asking something :P
[18:20:54] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:22:49] *** Joins: shla (~root@user/shla)
[18:23:06] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[18:23:10] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[18:23:11] *** Joins: dirn (uid16791@id-16791.tinside.irccloud.com)
[18:23:36] <Payam> bjs so I changed it to this : https://bpa.st/HVNQ
[18:24:18] *** Quits: easior_ (~easior@61.155.142.73) (Ping timeout: 240 seconds)
[18:24:24] <bjs> Payam: okay
[18:25:03] *** Joins: wons (~wons@user/wons)
[18:25:51] <Payam> bjs any comments?
[18:25:59] <bjs> Payam: about what
[18:26:03] <Payam> the code.
[18:26:13] <Payam> should it really be in a for loop?
[18:26:20] <bjs> Payam: the for loop looks fine
[18:26:27] <bjs> Payam: not sure why create_file_trio is a coroutine, it doesn't await anything
[18:27:33] <Payam> the nursery. bjs shouldn't be? it is awaiting anything but an async function calling it
[18:27:44] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 268 seconds)
[18:28:05] <Payam> what I try to do is that as soon as you have waited x seconds then create a file.
[18:28:17] <bjs> Payam: well, your create_file_trio function is an `async def` but it doesn't contain any `await`s. So I'm not sure why it's not just a normal `def`
[18:28:21] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 268 seconds)
[18:28:40] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[18:29:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[18:29:09] <Payam> aah okey I get it now
[18:29:14] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2d68-4d9a-7fbc-11de.res6.spectrum.com)
[18:29:17] *** Joins: wyclif (~wyclif@user/wyclif)
[18:29:36] <Payam> what functions do you have to await?
[18:29:54] <bjs> Payam: you `await` an `async def`
[18:30:19] <bjs> and only `async def`s can contain `await`s
[18:30:19] <Payam> for instance I want to download 100 files in parallel and then open them and print the content. I want to do it in paralell somehow.
[18:30:33] <Payam> so do I await the downloading function or the writing function?
[18:30:38] *** Joins: easior_ (~easior@61.155.142.70)
[18:30:39] <Payam> printing*
[18:30:42] <bjs> Payam: you await the async parts
[18:31:15] <Payam> well both print and downloading should be async right?
[18:31:36] <bjs> Payam: the Python `print` function is not async (for example)
[18:31:46] <bjs> so you do not write `await print("foo")`  (that's an error)
[18:32:22] *** Quits: mdk (~mdk@python/psf/mdk) (Quit: WeeChat 3.1)
[18:32:28] <ammar2> Payam: what functions are you using to download and print the content
[18:32:48] <Payam> ammar2 I am trying to draw the picture in my brain
[18:32:55] <Payam> to undrastand which ones need to be async
[18:32:56] *** Joins: mdk (~mdk@python/psf/mdk)
[18:32:58] <bjs> Payam: but e.g. https://pypi.org/project/httpx/ gives a way to request data asynchronously e.g. with `await client.get(...)`
[18:33:46] <ammar2> Payam: generally things that interact with IO tend to be the ones that are async, so the bits that fetch the data over the network as shown above would be one
[18:33:54] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:34:28] <ammar2> local IO aka printing/writing out to a file you might also consider doing async, but the support there is less well built out
[18:34:36] *** Joins: arza (arza@arza.us)
[18:34:43] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[18:35:03] *** Joins: Julian (~tos9@151.66.53.132)
[18:35:03] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[18:35:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:37:46] <Payam> the idea is like this. I want to clone some things from Gitlab using Gitlab API.
[18:37:52] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:c8b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:38:14] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:38:18] <graingert> Payam: https://trio.readthedocs.io/en/stable/reference-io.html#asynchronous-filesystem-i-o for async files btw
[18:38:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:39:10] <bjs> Payam: some functions can let trio do things in parallel and some don't.  E.g. httpx lets you `await client.get(...)` which means you can have 2 async tasks doing HTTP requests at the same time
[18:39:26] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:c8b9)
[18:39:27] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[18:39:28] <bjs> Payam: but the built-in "open" function is not,  so you cannot have 2 async tasks writing to files at the same time using open
[18:40:23] <Payam> I don't know about httpx but I use gitlab api
[18:40:28] <Payam> for python
[18:40:55] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[18:41:02] <ammar2> how are you interacting with the gitlab api
[18:41:08] <ammar2> is there a package you're using?
[18:41:08] <bjs> Payam: like some library?
[18:41:16] <Payam> yes
[18:41:18] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 268 seconds)
[18:41:28] <bjs> Payam: does the library know about trio/asyncio? (does it give you `async def`s /coroutines)
[18:41:30] <Payam> https://python-gitlab.readthedocs.io/en/stable/
[18:43:04] *** Joins: eagleflo (~aku@eagleflow.fi)
[18:43:08] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[18:43:34] *** Quits: death916 (~death916@user/death916) (Ping timeout: 244 seconds)
[18:44:19] <ammar2> looks like no
[18:45:40] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[18:46:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:46:39] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[18:46:43] <Payam> so I can not use this to do stuff asyncrounsly  ?
[18:46:45] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[18:47:02] *** Quits: erica (~erica@user/erica) (Ping timeout: 272 seconds)
[18:48:49] <bjs> Payam: well you cannot use `asyncio` or `trio` to do so
[18:48:59] <bjs> at least, not directly.  You can probably use threads.
[18:49:00] *** Joins: Pynthon (~omar@80-60-40-192.fixed.kpn.net)
[18:49:48] <Payam> so should I then use threads?
[18:49:53] <Payam> yes
[18:50:03] <Payam> sorry missed that you just suggested threads
[18:50:09] *** Joins: guardian (~guardian@planet-d.net)
[18:50:10] *** Joins: digilink (~digilink@user/digilink)
[18:50:15] <bjs> Payam: if you want to use this library and want to do things concurrently then threads or processes are the way.  If the library is thread-safe.
[18:50:41] <bjs> Some libraries or services just aren't designed to be used in a concurrent way.
[18:50:59] <Pynthon> Hey I have a newb question regarding the requests library and timeouts. When I send a get request to  quantcount.com using requests.get("http://quantcount.com", timeout=5) it will still take 10 minutes before I get a ConnecTimeout exception.
[18:51:30] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[18:51:51] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:51:53] *** Joins: ntdll_ (~ntdll@user/ntdll)
[18:52:12] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[18:52:15] *** Joins: srhm (~ascii@user/srhm)
[18:52:43] <Pynthon> But I'm probably not understand the timeout settings?
[18:52:44] *** Quits: patchie (~sdf@136.228.209.44) (Ping timeout: 272 seconds)
[18:53:08] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[18:53:37] *** Joins: Sorcery (~stefan@2a02-a455-3349-1-72e8-86f5-d204-f10d.fixed6.kpn.net)
[18:54:01] <Sorcery> Is there any way to make dictionary lookups for string keys faster if I know i'm only gonna have a specific limited set of keys?
[18:54:10] <bjs> Pynthon: try timeout=(5,5)
[18:54:23] *** Joins: erica (~erica@user/erica)
[18:54:38] <bjs> although I think timeout=5 implies timeout=(5,5)
[18:54:48] <teut> Sorcery then use a named tuple
[18:54:56] <grym> teut: gross
[18:55:03] *** Joins: xcolour (xcolour@164.90.157.248)
[18:55:26] <grym> Sorcery: keys are already setlike views, which will be plenty fast (unless i'm misunderstanding)
[18:55:32] <bjs> Sorcery: make a class.
[18:55:56] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 265 seconds)
[18:56:18] *** Joins: alguien (~alguien@user/alguien)
[18:56:19] <bjs> Sorcery: but really, dictionary lookup is heavily optimised to be fast because it's one of the most common operations a Python program is doing.
[18:56:32] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[18:56:40] *** Quits: Nact (~l@host-85-27-123-155.dynamic.voo.be) (Quit: Konversation terminated!)
[18:56:43] *** Quits: Joene_ (~Joene@213.224.16.26) (Ping timeout: 268 seconds)
[18:57:15] <Sorcery> alright that's what i needed to know thanks guys
[18:58:32] *** Joins: Joene_ (~Joene@213.224.16.26)
[18:58:40] *** Joins: fluter- (~fluter@user/fluter)
[18:58:43] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[18:59:02] <Pynthon> bjs: Thanks! Still the same issue though
[18:59:09] <sco1> It's the site
[18:59:11] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[18:59:24] <bjs> Pynthon: it's possible the timeout isn't happening because the site is sending you data, just slowly
[18:59:27] *** Joins: qlixed (~qlixed@host60.181-13-74.telecom.net.ar)
[18:59:32] *** Joins: Vonter (~Vonter@user/vonter)
[18:59:42] *** Joins: iphone (~iphone@user/iphone)
[18:59:47] <ammar2> heh, curl has a setting for minimum data rate to avoid this problem
[18:59:51] <grawity> so, it turns out that python-requests (urllib3) is in Cloudflare's naughty list because it sets OP_NO_TICKET in its handrolled SSLContext
[19:00:05] <iphone> does anyone else like python programming?
[19:00:09] *** Quits: koltrast (c668e330@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[19:00:12] <sco1> No
[19:00:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[19:00:26] <ammar2> grawity: what does being on cloudflare's naughtly list do? do you get captchas?
[19:00:31] <grawity> yes
[19:00:46] <Pynthon> bjs: Good point, however when I use CURL to the website I get this https://pastebin.com/1YZciBrM
[19:00:53] <Pynthon> sco1: Yes its this specific site indeed
[19:01:33] *** Quits: fluter- (~fluter@user/fluter) (Client Quit)
[19:01:40] <Pynthon> so looking at the CURL output it seems like it cannot make the connection at all.
[19:01:44] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[19:02:19] <raek> Pynthon: you could use wireshark/tcpdump to check what actually gets sent on the wire
[19:02:22] *** Joins: fluter (~fluter@user/fluter)
[19:02:29] *** Joins: koltrast (cf6babc4@h77-53-57-114.cust.a3fiber.se)
[19:02:32] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:03:32] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[19:03:38] *** Joins: jdmark (~jdmark@172.58.172.81)
[19:04:06] <ammar2> grawity: is there a source for this or is it just you experiencing it?
[19:04:29] *** Quits: easior_ (~easior@61.155.142.70) (Quit: Leaving)
[19:04:58] <Pynthon> raek: Thanks, I already used mitmproxy to check the http requests but perhaps using wireshark/tcpdump is betteri ndeed
[19:05:04] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:05:14] <grawity> ammar2: determined experimentally
[19:05:36] <ammar2> grawity: gotcha, flipping OP_NO_TICKET on and off does it reliably?
[19:05:38] *** Joins: pnoud (~pnoud@user/pnoud)
[19:05:39] <grawity> yes
[19:05:52] <grawity> first I tried to figure out why the same request is allowed via httpx and pycurl but not requests
[19:05:53] <ammar2> might wanna make an issue about it on urllib3
[19:06:06] *** Joins: SebastianM (~seba@user/sebastianm)
[19:06:19] <grawity> then why the same request as python-request, byte-to-byte, but delivered over a custom socket connection is suddenly allowed
[19:06:34] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 265 seconds)
[19:06:48] <grawity> ended up subclassing HTTPAdapter to just use ssl.create_default_context() instead of letting urllib3 roll its own
[19:07:06] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[19:07:12] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[19:07:13] <grawity> but even just commenting out the "options |= OP_NO_TICKET" line in urllib3 was enough
[19:07:49] <ammar2> https://github.com/urllib3/urllib3/commit/ed628df10b2810b9bf1e02aca0adb23ea4f4d977
[19:08:09] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[19:09:56] *** Quits: olasd (~olasd@softwareheritage/olasd) (Quit: WeeChat 3.0)
[19:10:04] *** Joins: olasd (~olasd@softwareheritage/olasd)
[19:10:18] *** Quits: SebastianM (~seba@user/sebastianm) (Ping timeout: 240 seconds)
[19:10:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[19:10:21] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[19:11:44] *** Joins: [dpk] (~dpk@xn--issum-vva.nonceword.org)
[19:11:56] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (Quit: .)
[19:12:18] *** Quits: teut (~teut@182.69.85.39) (Ping timeout: 264 seconds)
[19:12:49] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:14:30] *** Quits: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net) (Remote host closed the connection)
[19:16:27] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 268 seconds)
[19:16:28] *** Joins: MoosieRachel (~Moosadee@136.32.155.193)
[19:16:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:17:06] *** jinsun_ is now known as jinsun
[19:17:31] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:c8b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:18:14] *** Quits: MoosieRachel (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[19:18:30] *** Joins: MoosieRachel (~Moosadee@136.32.155.193)
[19:18:42] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 272 seconds)
[19:19:38] *** Joins: dme86 (~dan@user/dan86)
[19:19:55] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:20:47] *** Quits: MoosieRachel (~Moosadee@136.32.155.193) (Read error: Connection reset by peer)
[19:23:19] <alguien> supakeen, appreciate that but something's not quite right. I don't know why: https://pastecode.io/s/fygx9sm5c7
[19:24:10] <alguien> no I do know why, I'm decorating the decorator, not the function call itself
[19:24:18] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[19:24:23] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[19:24:27] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 265 seconds)
[19:25:54] *** Joins: mtarbit (uid504338@highgate.irccloud.com)
[19:26:52] *** Quits: Joene_ (~Joene@213.224.16.26) (Ping timeout: 265 seconds)
[19:27:38] *** Joins: wyclif (~wyclif@user/wyclif)
[19:28:14] *** Joins: biozz (~biozz@178.57.22.163)
[19:28:15] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[19:28:33] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:28:35] <iphone> how do y'all source your feeders? I'm thinking about starting my own rat farm since I have to pay $2.50/feeder in my area
[19:28:59] <grym> iphone: wrong kind of python
[19:29:00] <SnoopJ> iphone, we do the other kind of Python here :)
[19:29:26] <SnoopJ> (I think you can buy frozen feeders online, though?)
[19:30:25] <Sorcery> LOL
[19:30:43] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Remote host closed the connection)
[19:30:48] *** Quits: wons (~wons@user/wons) (Quit: WeeChat 3.2)
[19:32:12] *** iphone is now known as ding
[19:32:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:32:19] *** Joins: gareppa (~gareppa@user/gareppa)
[19:32:21] *** Joins: spicyrice (~ubuntu@2600:1f11:52a:4400:ada3:7fcd:e4c0:53a1)
[19:32:22] *** ding is now known as iphone
[19:32:35] *** iphone is now known as BritneySpears14
[19:33:39] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[19:35:17] *** BritneySpears14 is now known as iphone
[19:36:24] *** Joins: waynew (~wayne@user/waynew)
[19:36:49] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:37:18] *** Quits: jl- (~kl@c-98-216-12-250.hsd1.ma.comcast.net) (Ping timeout: 244 seconds)
[19:37:18] *** Joins: jamea (~jamea77@200.68.140.147)
[19:37:24] *** Joins: rosmaita (~rosmaita@2601:5c0:c380:b8e0::3397)
[19:37:36] *** Parts: rosmaita (~rosmaita@2601:5c0:c380:b8e0::3397) ()
[19:38:42] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 264 seconds)
[19:38:57] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 265 seconds)
[19:39:15] <jamea> https://bpa.st/ZATQ  strnge this line: self.root.ids.pedidos_add_input_rv.data.append({'text':'AAAA'})  work but not when try add from a dataset any advice? "TypeError: tuple indices must be integers or slices, not str"
[19:39:33] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Remote host closed the connection)
[19:40:02] <habnabit_> jamea, sounds like rows is a tuple, not a dict
[19:40:04] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[19:40:07] *** Quits: bjwest (~johnny@154.3.250.184) (Quit: Konversation terminated!)
[19:40:34] <jamea> yes is a Dataset any advice how to fix?
[19:40:45] <habnabit_> jamea, the error says it's a tuple
[19:41:00] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[19:41:02] *** Quits: varaindemian (~567c4ea2@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[19:41:15] <jamea> the tuple have fields
[19:41:17] <jamea> would be
[19:41:21] <jamea> rows.LECTURA  ?
[19:41:37] <habnabit_> jamea, tuples don't have named fields. you have to index it with an int: rows[0]
[19:42:04] *** Joins: Deaygo3 (~Deaygo@let.deaygo.in)
[19:42:18] *** Quits: cidtest (~cidtest@89.238.185.219) (Quit: WeeChat 3.1)
[19:42:19] *** Joins: jdmark2 (~jdmark@172.58.172.81)
[19:42:25] <jamea> done thanks
[19:42:34] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[19:42:37] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[19:43:34] *** Joins: mesa (~mesaboogi@user/mesaboogie)
[19:43:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[19:43:43] *** Joins: euouae_ (~euouae@user/euouae)
[19:44:36] *** Joins: slav0nic_ (slav0nic@python.su)
[19:44:46] *** Joins: Praise- (~Fat@user/praise)
[19:44:50] *** Joins: wyclif (~wyclif@user/wyclif)
[19:44:56] *** Joins: nyah_ (~nyah@90.221.186.180)
[19:45:02] *** Joins: qlixed_again (~qlixed@host60.181-13-74.telecom.net.ar)
[19:45:03] *** Quits: spicyrice (~ubuntu@2600:1f11:52a:4400:ada3:7fcd:e4c0:53a1) (Ping timeout: 265 seconds)
[19:45:03] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Ping timeout: 265 seconds)
[19:45:03] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 265 seconds)
[19:45:03] *** Quits: euouae (~euouae@user/euouae) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: dyslexicat (~dyslexica@176.234.11.153) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: Pynthon (~omar@80-60-40-192.fixed.kpn.net) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: BernieMont (~Bernard@4.59.197.170) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: gareppa (~gareppa@user/gareppa) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: jdmark (~jdmark@172.58.172.81) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: qlixed (~qlixed@host60.181-13-74.telecom.net.ar) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: rapfaria (~doxem@2804:431:c7c8:3779:7536:9d68:129a:fe93) (Ping timeout: 265 seconds)
[19:45:04] <tspng> jamea: fetchall() returns a list of tuples, see https://www.python.org/dev/peps/pep-0249/#fetchall
[19:45:04] *** Deaygo3 is now known as Deaygo
[19:45:41] *** Joins: zebrag (~chris@user/zebrag)
[19:45:45] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[19:46:01] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:46:08] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[19:46:27] *** Joins: mdk (~mdk@python/psf/mdk)
[19:46:51] *** Joins: gareppa (~gareppa@user/gareppa)
[19:46:51] <iphone> so my pet python is shedding this week. I heard from a friend that you shouldn't help pull the skin off as it sheds? Is that true?
[19:47:00] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[19:47:15] <waynew> Sounds about right, but probably the wrong sort of Python for this room :P
[19:47:26] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 244 seconds)
[19:47:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[19:47:31] <iphone> no, hes a ball python
[19:47:41] <iphone> there is no #ball-python
[19:47:53] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Ping timeout: 272 seconds)
[19:48:53] <euouae_> I want to create a test directory using pytest and inside it some files
[19:49:04] <euouae_> How do I guard myself against race conditions?
[19:49:13] <habnabit_> iphone, check /list or ask #libera for a channel directory
[19:49:23] <euouae_> Wait, I don't need to, unit tests are ran during development
[19:49:29] <SnoopJ> euouae_, tell us more about the kind of race condition you're worried about
[19:49:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:49:30] <habnabit_> euouae_, what race?
[19:49:44] <waynew> euouae_: use fixtures and `with tempfile.NamedTemporaryDirectory() as d: yield d`
[19:50:05] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[19:50:12] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[19:50:24] <habnabit_> (pytest already has a better temporary directory fixture than thaT)
[19:50:34] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[19:50:37] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:50:38] <waynew> ah, nice. I didn't know about that
[19:50:38] <euouae_> habnabit_: I'm realizing it's not important, but after I create foo/ with fixtures, inside I want to create a database. The race would be the attacker creating it first
[19:50:58] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[19:51:05] <waynew> if you're worried about someone attacking your tests you have bigger problems (:
[19:51:10] <habnabit_> euouae_, attacker as in.. your evil clone ssh'd to your box runnign the same command? ;)
[19:51:15] *** Quits: jazzy (~jaziz@2600:380:4547:d128:91dd:6fdb:37d:8c6f) (Ping timeout: 244 seconds)
[19:51:15] <euouae_> waynew: you can use tmppath for example. But yeah I'm being silly :)
[19:51:26] <euouae_> waynew: tmp_path
[19:51:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 240 seconds)
[19:52:12] *** Quits: MsPy (~MsPy@2402:e280:3d22:227:3178:c63c:767a:4ac4) (Quit: Client closed)
[19:52:13] *** Quits: jamea (~jamea77@200.68.140.147) (Ping timeout: 268 seconds)
[19:52:45] <waynew> uuuughhhh.  doing security training for work, and doing a "security python microservices" course and I can't 2x it. Also it spells CRUD and SAML X_X
[19:52:48] *** Quits: trace (~trace@91.66.153.83) (Remote host closed the connection)
[19:53:09] *** Joins: jsdallas (~jsdallas@ec2-52-26-176-9.us-west-2.compute.amazonaws.com)
[19:53:12] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[19:53:40] *** Joins: Julian (~tos9@151.66.53.132)
[19:54:04] <jabberwock> waynew: javascript:(setInterval((function() {document.querySelectorAll("video").forEach(v => v.currentTime = v.duration-1);}), 3000))();
[19:54:12] <jabberwock> I use that on LinkedIn Learning; maybe it'll work there
[19:54:31] <jabberwock> it basically fast forwards each video to duriation-1 every 3 seconds
[19:55:17] <euouae_> You guys are the opposite of me
[19:55:26] <jabberwock> ?
[19:55:42] <jabberwock> I'm OCD about getting the cert while also fast-forwarding through things I already know
[19:55:48] <euouae_> I spent a whole afternoon spotting every problem in some training at work and writing up an elaborate report at someone
[19:56:02] <euouae_> Which I never got a reply for
[19:56:05] <jabberwock> I give feedback too if I see or hear something
[19:56:11] *** Quits: ncb (~nocebo@user/nocebo) (Remote host closed the connection)
[19:56:12] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.1)
[19:56:20] <jabberwock> but if there is a whole section that will waste my time then I'd rather skip it
[19:56:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:56:37] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[19:56:51] *** Joins: ncb (~nocebo@user/nocebo)
[19:56:58] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[19:56:58] <waynew> "pee why jay double-ewe tea" -- PyJWT
[19:57:16] <jabberwock> You make a cogent point.
[19:57:18] <jabberwock> 👍
[19:57:36] *** Joins: derelict (~derelict@user/derelict)
[19:58:02] *** Joins: Akuli (~Akuli@82-203-164-49.bb.dnainternet.fi)
[19:58:44] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[19:59:25] *** Quits: ripdog (~quassel@user/ripdog) (Quit: ripdog)
[19:59:36] *** Joins: Pny (pny1312@user/pny)
[19:59:37] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 268 seconds)
[20:00:04] *** Joins: BernieMont (~Bernard@4.59.197.170)
[20:00:04] *** Quits: jdmark2 (~jdmark@172.58.172.81) (Read error: Connection reset by peer)
[20:00:24] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.0)
[20:00:28] *** Joins: jdmark2 (~jdmark@172.58.172.81)
[20:00:29] *** Quits: jdmark2 (~jdmark@172.58.172.81) (Read error: Connection reset by peer)
[20:00:53] *** Joins: jdmark2 (~jdmark@172.58.172.81)
[20:01:17] *** Joins: anp (~anp@user/anp)
[20:02:04] *** Joins: ripdog (~quassel@user/ripdog)
[20:03:14] *** Joins: wyclif (~wyclif@user/wyclif)
[20:03:51] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[20:03:56] *** Quits: dyslexicat (~dyslexica@176.234.11.153) (Ping timeout: 268 seconds)
[20:04:08] *** Joins: roivas (~roivas@167.73.34.15)
[20:04:19] *** Joins: dtux_ (~dtux@2600:1700:22f0:37bf:2eaa:7978:c3d4:ad33)
[20:04:24] *** Quits: roivas (~roivas@167.73.34.15) (Client Quit)
[20:05:12] *** Quits: tspng (~tspng@80-218-192-246.dclient.hispeed.ch) (Remote host closed the connection)
[20:05:41] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[20:05:47] *** Joins: SebastianM (~seba@user/sebastianm)
[20:06:43] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[20:08:48] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[20:09:29] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 268 seconds)
[20:09:35] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[20:09:35] *** Quits: CobraK (uid144971@stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[20:10:47] *** Quits: dyslexicat (~dyslexica@176.234.11.153) (Client Quit)
[20:11:42] *** Joins: Julian (~tos9@151.66.53.132)
[20:11:54] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[20:12:53] *** Quits: dtux_ (~dtux@2600:1700:22f0:37bf:2eaa:7978:c3d4:ad33) (Quit: dtux_)
[20:13:15] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:13:38] *** Joins: dasbootmir (~dasbootmi@port-92-192-88-122.dynamic.as20676.net)
[20:14:03] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[20:15:34] *** Joins: teut (~teut@182.69.85.39)
[20:15:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[20:16:42] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:16:54] *** Parts: kitzman (~mitzman@user/dekenevs) (C-x k)
[20:18:20] *** Joins: FNetSec (~FNetSec@user/fnetsec)
[20:18:44] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 268 seconds)
[20:18:48] *** [dpk] is now known as dpk
[20:19:08] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[20:19:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[20:19:42] *** Joins: leonardo (~leonardo@user/leonardo)
[20:19:47] *** Joins: jw_ (~njw@58.182.164.99)
[20:19:55] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[20:20:14] *** Joins: ffledgling (~textual@2620:10d:c090:500::6:2115)
[20:20:28] *** Joins: gusto (~Augustus@109.255.100.54)
[20:20:37] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:21:38] <m_tadeu> hi...when using the SimpleHTTPRequestHandler, is there an easy way to process incomming packet that are splited in multiple frames?
[20:22:07] <habnabit_> m_tadeu, i don't think that's possible at all. socket APIs don't expose packets/frames
[20:22:13] <habnabit_> m_tadeu, just a stream of bytes
[20:22:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:22:21] <jabberwock> aybe: https://stackoverflow.com/questions/60895110/how-to-handle-chunked-encoding-in-python-basehttprequesthandler
[20:22:23] <jabberwock> *maybe
[20:22:29] <habnabit_> m_tadeu, you'd need to implement your own tcp stack for that
[20:22:33] <jabberwock> assuming you mean chunks and not packet frames
[20:22:49] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[20:23:04] <jabberwock> habnabit_: scapy :)
[20:23:06] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[20:23:14] <habnabit_> jabberwock, scapy would give you a head start, sure
[20:23:17] <m_tadeu> jabberwock: that's not the case at all...the SimpleHTTPRequestHandler is receiving the several frames...but I have to build the total message myself
[20:23:28] <jabberwock> well fuck me then
[20:23:31] <habnabit_> m_tadeu, can you show us your code?
[20:23:45] <habnabit_> m_tadeu, also, nobody really uses http.server. there's substantially better tools
[20:23:53] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:24:06] *** Quits: marduk (~marduk@216.243.54.166) (Remote host closed the connection)
[20:24:08] *** Quits: jw_ (~njw@58.182.164.99) (Client Quit)
[20:24:12] <vaio> woa
[20:24:20] <vaio> oops wrong window, sorry.
[20:24:39] <m_tadeu> habnabit_: what would be better?
[20:24:48] <habnabit_> m_tadeu, fastapi is what i default to these days
[20:25:05] *** Joins: marduk (~marduk@216.243.54.166)
[20:25:13] <m_tadeu> habnabit_: will check that out, for sure....thanks
[20:25:18] <habnabit_> m_tadeu, django or pyramid if you want to serve html. django provides users and login too
[20:25:31] <teut> Uploaded file: https://uploads.kiwiirc.com/files/2e84e2e0ee15ee96936f1724f0e6dae7/pasted.txt
[20:26:17] <m_tadeu> habnabit_: my code is very similat to this (and a lot of projects that seem to replicate this code over and over) https://gist.github.com/dzava/6314626
[20:26:21] <teut> would this be good function and can I call it that it is not modifying the state?
[20:26:45] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 268 seconds)
[20:26:46] <habnabit_> m_tadeu, oh good lord why would you _ever_ use http.server for websockets
[20:26:57] *** Joins: yannick_ (~yannick@user/rhax)
[20:26:58] *** Joins: Julian (~tos9@151.66.53.132)
[20:27:02] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:27:12] <euouae_> Suppose I have a Plugin class with name and func attributes. I want to call 'func' with some data if I encounter 'name' in a certain string. How could I interact with my main code and user defined plugins?
[20:27:12] <teut> function which says get should only give not set
[20:27:13] <habnabit_> m_tadeu, django has good websocket support
[20:27:30] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Ping timeout: 240 seconds)
[20:27:30] <jabberwock> there's no websocket server in pip? That seems... 1900s
[20:27:37] <m_tadeu> habnabit_: maybe ignorance...but...I'm an open minded guy
[20:27:40] <habnabit_> jabberwock, eh? sure there is
[20:27:50] <habnabit_> jabberwock, if you mean on pypi
[20:28:05] <jabberwock> I think I'm just missing context as to the goal, rather than trying to take the question at face value
[20:28:10] <jabberwock> yes on pypi
[20:28:25] <m_tadeu> habnabit_: and because it's in the default python lib
[20:28:37] <habnabit_> m_tadeu, but the code you just linked isn't ;)
[20:28:54] <habnabit_> m_tadeu, anyway looks like fastapi does websockets too: https://fastapi.tiangolo.com/advanced/websockets/
[20:29:12] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[20:29:19] *** Quits: vladoski (~vladoski@2001:b07:add:d406:b774:24b2:e27:15d6) (Remote host closed the connection)
[20:30:31] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:30:36] *** Joins: Padawan (~Padawan@user/padawan)
[20:31:50] <m_tadeu> habnabit_: yeah that I'll have to propose to change...let me put the relevant code in a pastebin
[20:32:37] *** Joins: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com)
[20:32:43] *** Joins: magla (~gelignite@55d431b1.access.ecotel.net)
[20:32:54] <habnabit_> m_tadeu, so.. http.server was never really intended for serious use or extensibility, and i 100% would not trust it to handle websockets. there's no reason to use some random gist instead of a well-known tested library
[20:33:00] *** Quits: FNetSec (~FNetSec@user/fnetsec) (Quit: Leaving)
[20:33:06] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 240 seconds)
[20:33:18] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[20:33:23] *** Quits: sodimel (~co@31.32.214.113) (Quit: Konversation terminated!)
[20:33:34] *** yannick_ is now known as ybgp
[20:34:45] *** Joins: wyclif (~wyclif@user/wyclif)
[20:34:50] <m_tadeu> habnabit_: https://bpa.st/26QA
[20:35:03] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:35:04] <habnabit_> m_tadeu, yikes
[20:35:56] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[20:36:30] *** gr33n7007h is now known as Guest9185
[20:36:30] *** gr33n7001 is now known as gr33n7007h
[20:37:01] <m_tadeu> habnabit_: now...that only reads 1 frame...is the patckage is split into more then 1 frame, I won't get the message properly
[20:37:20] *** Joins: vicfred (~vicfred@user/vicfred)
[20:37:30] <habnabit_> m_tadeu, sure. is there a reason to not use fastapi?
[20:37:33] *** Quits: Guest9185 (~gr33n7007@user/gr33n7007h) (Ping timeout: 244 seconds)
[20:37:58] *** euouae_ is now known as euouae
[20:38:19] *** Joins: jw_ (~njw@58.182.164.99)
[20:38:20] <m_tadeu> not that I'm aware....but this is already implemented code, so I'll have to allocate a time slot to analyse and make the change
[20:38:24] *** Joins: noneco (~noneco@dslb-088-064-247-058.088.064.pools.vodafone-ip.de)
[20:38:30] <m_tadeu> won't be for the immediate
[20:38:37] <habnabit_> m_tadeu, yeah, this is .. not an easy thing to fix
[20:38:43] <habnabit_> m_tadeu, http.server was not meant to do this
[20:39:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:39:18] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[20:39:23] <m_tadeu> habnabit_: so the thing is...I'll have to deal with it myself, correct?
[20:39:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:39:50] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:40:08] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:40:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:40:21] <habnabit_> m_tadeu, i would very strongly recommend switching to fastapi instead of trying to kludge together a 'fix'
[20:41:17] *** Joins: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net)
[20:41:30] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[20:41:52] *** Quits: noneco (~noneco@dslb-088-064-247-058.088.064.pools.vodafone-ip.de) (Remote host closed the connection)
[20:42:24] <m_tadeu> habnabit_: I tend to agree....but unfortunatelly, it's not my call...but I'll create a case for the fastapi
[20:42:30] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[20:42:52] <habnabit_> m_tadeu, good luck
[20:43:11] <m_tadeu> habnabit_: thanks
[20:43:34] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 272 seconds)
[20:43:56] *** Quits: Padawan (~Padawan@user/padawan) (Quit: bye)
[20:43:58] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:44:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:45:01] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[20:45:13] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:45:29] <Mrokii> Can anybody point me to an example of a QAbstractTableModel with a dict as its datasource?
[20:45:37] *** Joins: biozz (~biozz@178.57.22.163)
[20:45:47] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 2.8)
[20:46:06] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[20:46:09] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[20:46:20] *** Joins: spicyrice (~ubuntu@2600:1f11:52a:4400:ccbc:2b96:cabe:414b)
[20:46:54] *** Quits: spicyrice (~ubuntu@2600:1f11:52a:4400:ccbc:2b96:cabe:414b) (Client Quit)
[20:47:01] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:47:32] *** Joins: spicyrice (~ubuntu@2600:1f11:52a:4400:ccbc:2b96:cabe:414b)
[20:48:00] *** Quits: spicyrice (~ubuntu@2600:1f11:52a:4400:ccbc:2b96:cabe:414b) (Client Quit)
[20:50:00] *** Joins: spicyrice (~ubuntu@2600:1f11:52a:4400:ccbc:2b96:cabe:414b)
[20:50:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:51:34] *** Joins: lightdot (~weechat@user/lightdot)
[20:54:44] *** Quits: dkmueller (~dkmueller@2a01:c23:c070:3a00:5108:cc42:2ce8:ed08) (Quit: WeeChat 3.1)
[20:55:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[20:57:21] <euouae> If I have a configuration file for my program, how should I handle where it is stored?
[20:57:28] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[20:57:31] <euouae> I know I can follow the XDG standard, but what about windows/mac
[20:57:57] <SnoopJ> euouae, XDG is meaningful on those platforms too
[20:58:02] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[20:58:14] <grym> euouae: and appdirs handles all three
[20:58:16] <SnoopJ> the `appdirs` library is nice
[20:58:35] <bancroft> i'm trying to parse ansible logs, anyone got a better idea then what i'm doing here? https://bpa.st/WGEA
[20:58:41] <euouae> SnoopJ: oh nice! Thank you
[20:58:43] <SnoopJ> you can also let the user specify where their config lives with a flag and/or env var
[21:00:46] *** TML_ is now known as TML
[21:00:53] *** Joins: Adoi (~Adoi@user/adoi)
[21:01:06] *** Joins: salparadise (~salparadi@129.146.17.140)
[21:01:09] *** Quits: TML (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com) (Changing host)
[21:01:09] *** Joins: TML (~TML-prv@user/tml)
[21:01:24] *** Joins: |7| (~kvirc@user/seachdamh)
[21:02:14] *** Joins: Adois (~Adoi@user/adoi)
[21:02:59] *** Quits: dirn (uid16791@id-16791.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:03:17] *** Joins: g0RT (~thodson@host86-139-210-36.range86-139.btcentralplus.com)
[21:03:19] *** Joins: Julian (~tos9@151.66.53.132)
[21:03:23] *** Joins: Betal (~Beta@user/betal)
[21:04:08] <Adois> hello everyone
[21:04:15] *** Joins: synic (~squish@li74-118.members.linode.com)
[21:04:39] *** Quits: Adois (~Adoi@user/adoi) (Client Quit)
[21:04:58] *** Joins: Adois (~Adoi@user/adoi)
[21:05:47] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[21:06:20] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[21:06:28] *** Joins: pnoud (~pnoud@user/pnoud)
[21:06:42] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:07:06] *** Quits: Sorcery (~stefan@2a02-a455-3349-1-72e8-86f5-d204-f10d.fixed6.kpn.net) (Ping timeout: 240 seconds)
[21:07:22] *** Joins: Adoi (~Adoi@user/adoi)
[21:07:27] *** Quits: Adois (~Adoi@user/adoi) (Client Quit)
[21:07:38] <Adoi> finally with my own nickname..
[21:07:50] *** Quits: Zer0xFF_ (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[21:07:50] *** Quits: |7| (~kvirc@user/seachdamh) (Read error: Connection reset by peer)
[21:08:08] *** Joins: wyclif (~wyclif@user/wyclif)
[21:08:22] *** Joins: feriman (~feriman@188.163.113.127)
[21:08:23] <Adoi> why does one use stdin and stdout? I mean, what good is it for? :)
[21:08:30] *** Joins: |7| (~kvirc@user/seachdamh)
[21:08:54] <Adoi> at first glance it didnt occur to me
[21:09:04] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 244 seconds)
[21:09:06] *** Quits: GeorgeK_ (uid416826@id-416826.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:09:18] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[21:09:34] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[21:09:44] <Adoi> except when one reads data from or pipes them in file
[21:09:44] <grym> Adoi: ever used a command line tool and given it an option or argument? and seen things print out in response?
[21:10:15] <Adoi> grym, yes, a while ago I used the terminal for python exercises
[21:10:19] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:10:36] <Adoi> but I used "open.file" to read files, afaik
[21:10:39] <Adoi> afair
[21:10:51] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 272 seconds)
[21:10:57] <Adoi> or something with "open"
[21:11:03] <grym> Adoi: if you're writing a python script, and you want to tell it at runtime what file to open ...
[21:11:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[21:11:25] <grym> the natural thing to do is to invoke it as something like `python mything.py --read-this-file /foo/bar/baz.txt`, right?
[21:11:31] <grym> (that's stdin!)
[21:11:48] <bjs> Adoi: have you ever used print() ? :)
[21:11:52] <ablegreen> in pycharm, when i'm looking at a section of code within a file, i want to be able to quickly "peek" at what the imports are the top of the file. how do i do this without scrolling all the way to the top?
[21:11:53] <grym> (that's stdout!)
[21:11:54] <Adoi> bjs, yes, all the time
[21:11:56] <SnoopJ> Adoi, stdin/stdout are special file descriptors that are useful for "stuff coming into" and "stuff going out of" a program. The latter is often used for printing (this is the default behavior of print(), for instance). The former is often used for input from another program that lets you chain them together.
[21:12:00] <bjs> Adoi: where do you think it's writing *to* ?
[21:12:11] <grawity> grym: did you drop a < in your stdin?
[21:12:25] <grym> grawity: generally no
[21:12:31] <grawity> because sys.argv is not stdin??
[21:12:42] <grym> fair enough
[21:12:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:12:42] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[21:12:48] <SnoopJ> i.e. `pgrmA | python3 pgrmB.py` <-- B will get the stdout of A as its stdin
[21:13:06] <bjs> Adoi: print() writes to stdout.  input() reads from stdin.
[21:13:06] *** Joins: cdown (~cdown@89.32.122.5)
[21:13:15] <SnoopJ> as far as the OS is concerned these are "just" special kinds of files
[21:13:25] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:13:41] <Adoi> grawity, no, I suppose I drop in a file, right? no, I didnt need to use it with a file..maybe that is why I wonder the exercise wants me to use stdin and stdout
[21:14:38] *** Quits: cdown (~cdown@89.32.122.5) (Remote host closed the connection)
[21:15:25] <Adoi> so stdin and stdout are kind of "under the hood" functions for file i/o ?
[21:15:31] <SnoopJ> they aren't functions
[21:15:37] <grawity> they're endpoints for I/O
[21:15:42] <bjs> Adoi: they're files.
[21:15:46] *** falx is now known as sanshiki
[21:15:47] <bjs> (magic files)
[21:15:48] <SnoopJ> https://en.wikipedia.org/wiki/Standard_streams
[21:16:06] *** Quits: Julian (~tos9@151.66.53.132) (Quit: leaving)
[21:16:13] *** sanshiki is now known as keiseisanshiki
[21:16:24] *** keiseisanshiki is now known as sanshiki
[21:16:27] <grawity> basically, imagine `ls | grep x | sort | rot13.py > secretlist.txt`, versus `ls --output /tmp/list; grep -o /tmp/list2 x /tmp/list; sort /tmp/list2 --out=/tmp/list3; rot13.py -i /tmp/list3 -o secretlist.txt`
[21:17:43] <bjs> Adoi: when you run a program like `python3 foo.py` the print()s are actually writing to the stdout file, and your console program (terminal emulator) is reading the file and showing you the contents.
[21:18:04] <bjs> Adoi: the open()'d file objects have names: sys.stdout and sys.stdin, you can .write() and .read() directly (respectively)
[21:18:25] <grawity> stuff you print goes to stdout; your program doesn't need to special case printing to terminal vs printing to file vs printing to another program's input -- it only has a "standard" output and that's that
[21:18:41] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[21:18:44] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[21:18:47] *** Joins: cdown (~cdown@89.32.122.5)
[21:19:02] <Adoi> so it is the invisible naming convention that are used for files involved in a function, whether input or output?
[21:19:19] <bjs> Adoi: forget functions for a minute
[21:19:38] <Adoi> ok, maybe should stop trying to concretize, too :)
[21:19:50] <alguien> supakeen, How would I take function _and_ [kw]args? Not def f(func, *args, **kwargs) right?
[21:20:10] <bjs> Adoi: when you run a program (and let's assume a Linux-y OS for now),  the OS creates 3 files for you.  We call these files stdin, stdout and stderr.
[21:20:47] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[21:21:02] <bjs> Adoi: these programs are the "hooks" into the program from outside, writing to stdout will appear on the screen. reading from stdin will take input from the user  (when you run the program in the terminal that is)
[21:21:02] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[21:21:10] <bjs> these files are the hooks* sorry
[21:22:05] <alguien> oh wait, that works!
[21:23:06] *** Joins: thiras (~thiras@user/thiras)
[21:23:19] *** Joins: jdc (~textual@cpe-96-28-210-220.kya.res.rr.com)
[21:23:29] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[21:23:55] <bjs> Adoi: I'm using the term "file" here in sort of a paradoxically specific and technical sense, but also in a kind of general sense. There isn't actually a "file" on your hard-drive or anything like that,  but if you think about them as a magic set of files that are created when you run a program, you'll get the right idea
[21:23:57] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[21:24:04] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-83.range86-150.btcentralplus.com) (Quit: Leaving.)
[21:24:11] *** Joins: wyclif (~wyclif@user/wyclif)
[21:24:27] <ablegreen> i need examples of long docstrings (docstrings that are...long and contain a lot of details). any open source projects i should study? flask?
[21:24:47] *** Quits: Strom (strom@fedora/strom) ()
[21:25:32] <grym> ablegreen: numpy
[21:25:34] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:25:37] <ablegreen> thanks
[21:25:50] <grym> so long and complicated that they have their own docstring format!
[21:25:59] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:26:04] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[21:26:05] <SnoopJ> numpydoc +1
[21:26:38] *** Joins: cdown_ (~cdown@163.114.131.1)
[21:27:05] <ham5urg> How do I loop between two float values, range does not accept float?
[21:27:25] *** Joins: Strom (strom@fedora/strom)
[21:27:43] <ham5urg> E.g. loop N times from float0 to float1.
[21:27:57] <grym> ham5urg: if you have numpy around, np.linspace and (ideally) vectorize
[21:27:59] <grym> is one way
[21:28:09] <ham5urg> ok, thanks
[21:28:36] <grym> where "vectorize" means "make numpy do the loop"
[21:29:06] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 240 seconds)
[21:29:06] <SnoopJ> ham5urg, `for val in (start + stepsize*N for N in range(0, num_steps)): ...` if you're not using numpy (if you are, yes use linspace() or arange())
[21:29:20] *** Quits: bidouille (~user_name@trois.potager.org) (Quit: leaving)
[21:29:48] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[21:30:05] <SnoopJ> hmm, I guess you need to modify that if you care about the endpoint, but hopefully the idea is clear
[21:30:43] <grawity> okay but why not 'for step in range(n): value = start+stepsize*step; do_stuff(value)'
[21:30:54] <SnoopJ> no particular reason
[21:31:19] *** Joins: bidouille (~user_name@trois.potager.org)
[21:31:27] <SnoopJ> could also capture that generator to a name and do `for val in float_range: ...`
[21:31:45] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[21:31:48] <SnoopJ> or make a generator function and use it exactly like range() 😇
[21:32:09] *** Joins: supakeen (~user@python/site-packages/supakeen)
[21:33:22] <Adoi> I think I get better how I should think of them, thank you
[21:34:30] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 264 seconds)
[21:35:21] *** Joins: tijuco (~tijuco@user/tijuco)
[21:36:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 264 seconds)
[21:37:37] *** Joins: CrunchyChewie (~CrunchyCh@ec2-18-191-175-241.us-east-2.compute.amazonaws.com)
[21:39:03] *** Quits: CrunchyChewie (~CrunchyCh@ec2-18-191-175-241.us-east-2.compute.amazonaws.com) (Client Quit)
[21:39:11] *** Joins: fofoni (~fofoni@user/fofoni)
[21:39:34] *** Joins: CrunchyChewie (~CrunchyCh@ec2-18-191-175-241.us-east-2.compute.amazonaws.com)
[21:39:36] *** Joins: ttys000 (~ttys000@user/ttys000)
[21:39:39] *** Joins: zeenk (~zeenk@188.26.30.39)
[21:39:40] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[21:41:13] *** Roey is now known as Schmerzkartoffel
[21:41:47] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[21:42:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:43:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:43:32] *** Quits: jdc (~textual@cpe-96-28-210-220.kya.res.rr.com) (Read error: Connection reset by peer)
[21:43:53] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:44:09] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[21:44:29] <alguien> I have an iterable that can throw an exception due to a transient error (429 Too Many Requests). Is there any way I can resume iterating through it (manually) after that?
[21:45:13] <jabberwock> yes. in the part that catches it
[21:46:09] *** Joins: artwr (~textual@c-24-4-177-105.hsd1.ca.comcast.net)
[21:46:18] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:47:37] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:48:21] *** Joins: SebastianM (~seba@user/sebastianm)
[21:48:26] *** Quits: dasbootmir (~dasbootmi@port-92-192-88-122.dynamic.as20676.net) (Quit: gone to sleep... zzz…)
[21:49:18] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[21:49:39] *** Joins: dasbootmir (~dasbootmi@port-92-192-88-122.dynamic.as20676.net)
[21:49:42] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:49:44] *** Quits: dasbootmir (~dasbootmi@port-92-192-88-122.dynamic.as20676.net) (Client Quit)
[21:49:49] *** Joins: Nact (~l@host-85-27-123-155.dynamic.voo.be)
[21:51:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[21:51:34] <alguien> jabberwock, how? I'm catching the exception and calling next() again, but I get my default False instead of the next value
[21:52:08] <alguien> do you reckon the iterator itself is to blame for refusing to continue?
[21:52:29] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[21:52:48] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[21:55:12] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[21:55:54] *** Joins: ckpro (~ckpro@103.106.181.67)
[21:55:59] *** Joins: PixelRobot (~PixelRobo@139.47.72.247)
[21:56:20] *** Joins: Jigsy (~Jigsy@user/jigsy)
[21:56:20] *** Joins: wyclif (~wyclif@user/wyclif)
[21:57:19] <masterkorp> Hello fellow pythonists
[21:57:28] <masterkorp> when using the fpdf2 library on linux
[21:57:30] <masterkorp> fpdf.errors.FPDFException: Undefined font: Courier
[21:57:36] <masterkorp> I always gets this
[21:57:40] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[21:58:04] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:58:18] <masterkorp> https://pyfpdf.github.io/fpdf2/TextStyling.html#set_font
[21:58:37] *** Joins: syllin (~syllin@li890-17.members.linode.com)
[21:58:46] *** Quits: artwr (~textual@c-24-4-177-105.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:59:44] *** Quits: PixelRobot (~PixelRobo@139.47.72.247) (Quit: Quit)
[22:01:06] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[22:01:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:01:55] *** Joins: artwr (~artwr@17.149.208.155)
[22:02:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:02:38] *** Joins: Naan (~Naan@user/naan)
[22:02:47] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:03:18] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 264 seconds)
[22:04:21] <ham5urg> grym, SnoopJ, thanks for the infos. It worked.
[22:05:08] *** Joins: chance (~chance@50.47.109.175)
[22:05:34] *** Joins: mandeep (~mandeep@pool-108-30-14-106.nycmny.fios.verizon.net)
[22:06:00] <teut> Uploaded file: https://uploads.kiwiirc.com/files/52b80ccd5459eeffcf1b01cfbe13618e/pasted.txt
[22:06:04] <mandeep> is this the new channel from freenode? haven't been following along
[22:06:08] <teut> is this a pure function?
[22:06:20] *** Joins: trampel (~trampel@2601:602:9c01:22b8:e835:37e3:7e99:6a3d)
[22:06:23] <be3uykpy> mandeep, ye kinda. well nedbat is here :)
[22:06:31] <be3uykpy> https://nedbatchelder.com/blog/202106/goodbye_freenode.html
[22:06:31] <SnoopJ> mandeep, yes
[22:06:36] *** Joins: fannagoganna (~tanim@c-98-37-1-250.hsd1.ca.comcast.net)
[22:06:44] <SnoopJ> (details are in /topic)
[22:06:49] <disi> teut: probably not
[22:07:23] <chance> teut: not pedantically, at least, because "the same input" does not exist twice in a row
[22:07:31] <mandeep> SnoopJ, thanks
[22:07:32] *** Schmerzkartoffel is now known as SchmerzhafteKart
[22:07:41] <mandeep> be3uykpy, ah i see
[22:07:42] *** Joins: YoungPotato (~user@155.98.225.28)
[22:07:43] *** SchmerzhafteKart is now known as Roey
[22:08:11] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:08:14] *** Joins: sa23m (~sa23m@pool-100-15-124-177.washdc.fios.verizon.net)
[22:08:35] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:08:36] <teut> self.PrintStatementData     change of state of this is not a concern because it's a class variable
[22:08:39] <sa23m> How is it possible for there to be no handler yet logger.log() still prints to stderr
[22:09:41] <ham5urg> Is there already a module for which I can create an array of 3d points [[x,y,z],...] with various shapes. E.g. "create 50 points from [0,0,0] in shape of an 1/4_PI_circular_arc" or to combine two arcs which will bend the path with two arcs and create a screw or similar.
[22:09:46] <ham5urg> ?
[22:09:53] <disi> teut: `self.kwargs[self.page_kwarg] =` pure functions have no side effects (i.e. they do not modify external state)
[22:09:57] <teut> Uploaded file: https://uploads.kiwiirc.com/files/f6d80b3da780e78cca3dee07d3892914/pasted.txt
[22:10:30] <no_gravity> Why is splitting csv everything into chars here? https://www.online-python.com/FHo2zfqamE
[22:10:49] <teut> ya and that's helps me get data for the objects for  previous page in a paginated view
[22:11:23] <teut> so what should I try to pass the variables into this function from   `post `  method?
[22:11:34] <teut> or is it good enough?
[22:11:40] <grym> no_gravity: what happens if you do the io.StringIO dance
[22:11:45] <teut> or should I name this differently?
[22:11:58] <teut> get_something()  should mean get  not set
[22:12:01] <no_gravity> grym: What's that?
[22:12:09] <grym> no_gravity: sec
[22:12:15] <teut> self.get_kwargs only gets , not sets
[22:12:18] <ChrisWarrick> no_gravity: the csv module does not really work if you pass it strings
[22:12:36] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:12:42] <teut> get_form_kwargs*
[22:12:46] *** Quits: mandeep (~mandeep@pool-108-30-14-106.nycmny.fios.verizon.net) (Quit: Leaving)
[22:12:53] <no_gravity> ChrisWarrick: Wow, why not?
[22:13:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:13:18] <TML> no_gravity: The csv module expects to get a "line" at a time from the next method on the first argument, but a string's next method gives the next character
[22:13:23] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[22:13:26] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 268 seconds)
[22:13:32] <grym> no_gravity: https://www.online-python.com/nXGmPMgEt9
[22:13:45] <no_gravity> grym, ChrisWarrick, TML: I see. Thanks!
[22:13:45] <grym> thus "the stringIO dance"
[22:13:59] <disi> teut: does the function do what you need right now? why do you care if it's pure?
[22:14:08] *** Joins: mandeep (uid394387@id-394387.tooting.irccloud.com)
[22:14:15] <no_gravity> Hmm.. can csv use the first row as variable name?
[22:14:27] <TML> no_gravity: What?
[22:14:29] <grym> no_gravity: yes
[22:14:30] <sa23m> How is it possible for there to be no handler yet logger.log() still prints to stderr
[22:14:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[22:14:47] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Client Quit)
[22:14:50] <grym> no_gravity: but i tend to use DictReader anyway
[22:14:50] <teut> I dont know because it's said that it's good if your functions have the side effects in a single place
[22:14:56] <sa23m> I checked both the root handler and the non-root handler
[22:15:01] <sa23m> or rather logger
[22:15:05] <sa23m> and neither has handlers
[22:15:13] <teut> even the react framework enforces on that and that's how hooks work in js
[22:15:20] <grym> no_gravity: DictReader(fieldnames= defaults to "the first row", and thus neatly solves this problem for free
[22:15:25] <TML> sa23m: because it has a default?
[22:15:36] <sa23m> sa23m - what has a default?
[22:15:40] <sa23m> TML*
[22:15:46] <TML> logger
[22:15:48] <teut> and secondly it's    a `  def get_...() `
[22:15:55] <sa23m> It does? I thought everything required handlers
[22:16:16] <teut> so triggering a side effect that, is one of the design smell, misplaced responsibility
[22:16:37] <no_gravity> grym: DictReader seems not to be available by default.
[22:16:55] <disi> sa23m: just a sanity-check... what is logger? (is it actually `logging`?)
[22:16:56] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[22:17:05] <sa23m> Yes, logging
[22:17:09] <disi> sa23m: "The above module-level convenience functions, which delegate to the root logger, call basicConfig() to ensure that at least one handler is available."
[22:17:15] <grym> no_gravity: buh? no, it's been there since forever
[22:17:20] <disi> sa23m: https://docs.python.org/3/library/logging.html#logging.log
[22:17:52] <no_gravity> grym: https://www.online-python.com/wmDtr7Zqvi
[22:17:52] <sa23m> Shouldn't that add a handler?
[22:17:58] *** Quits: ntdll_ (~ntdll@user/ntdll) (Ping timeout: 265 seconds)
[22:18:00] <sa23m> Calling basicConfig adds a handler
[22:18:05] <grym> no_gravity: csv.DictReader
[22:18:06] *** whaley is now known as rofl
[22:18:09] <grym> instead of csv.reader
[22:18:13] <sa23m> This seems to output to stderr without ever adding a visible handler
[22:18:15] <no_gravity> grym: Ok, lets see ...
[22:18:15] *** rofl is now known as ballsmahoney
[22:18:44] <grym> no_gravity: then the n>0th  row is a dict whose keys are the values of the colums of the 0th row
[22:18:51] <TML> sa23m: What are you inspecting to see if it added a handler?
[22:19:01] *** ballsmahoney is now known as whaley
[22:19:07] <no_gravity> grym: Awesome, thanks!
[22:19:20] <no_gravity> grym: https://www.online-python.com/nXGmPMgEt9
[22:19:30] <grym> no_gravity: https://www.online-python.com/pGdlZOTxL0
[22:19:31] <grym> haha
[22:19:31] <no_gravity> grym: https://www.online-python.com/Ss2VTEu1gr
[22:19:47] <no_gravity> grym: Yes, great!
[22:19:55] <grym> i like it too
[22:20:16] *** Joins: alguien (~alguien@user/alguien)
[22:20:23] <disi> sa23m: https://gist.github.com/tucked/4e24820ed610921341f1afa17daf0e21
[22:21:18] <TML> yes, my guess is that you're simply looking in the wrong place
[22:22:06] *** Joins: Payam (~Payam@138.106.57.132)
[22:22:44] <iphone> How can I speed up my ball python's shed? He's been shedding for the last two days and hes only halfway done. The internet says to just wait and maybe spritz him with water a few times but my dad is coming tomorrow and he wants to hold him.
[22:22:54] <sco1> Can someone ban the troll please
[22:22:58] <sa23m> Let me look a a little more
[22:22:59] <grym> grawity: tangentially this seems nicer than repl.it; can you install packages and stuff on online-python?
[22:24:27] <NoImNotNineVolt> 14:30 < iphone> does anyone else like python programming?
[22:24:47] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:25:45] <iphone> I'm a different iPhone
[22:25:46] *** Quits: cmayo (~cmayo@cpe-158-222-151-98.nyc.res.rr.com) (Quit: bye)
[22:26:00] <iphone> I like the PyYAML library. very good library
[22:26:09] *** Joins: Barones (~Barones@2804:48dc:8500:0:23:c8ea:df2b:e5e6)
[22:28:33] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[22:31:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:31:59] <sa23m> Here is what I am trying to understand: https://pastebin.com/fHy9025m
[22:32:41] <no_gravity> Oh wow, here is a solution without the io trick: https://www.online-python.com/HNl7voyCjb
[22:33:58] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[22:34:06] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 10000)
[22:34:07] <disi> sa23m: ah, so it's not logging.log, you're grabbing the paramiko logger, which looks like it may set up a handler: https://github.com/paramiko/paramiko/blob/d2d3d77395d1079a2e335080b7f9f79d3f70ad2a/paramiko/util.py#L256
[22:34:30] <sa23m> That's only when you call log_to_file, which I am not
[22:34:33] <grawity> grym: ??
[22:34:53] <sa23m> But also, if it setups a handler it should print true
[22:34:58] <no_gravity> grym: A solution without the io trick: https://www.online-python.com/HNl7voyCjb
[22:35:00] <sa23m> sets up*
[22:35:14] *** Joins: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com)
[22:35:21] <grym> grawity: whoops, meant no_gravity
[22:35:32] <no_gravity> ?
[22:35:53] <grym> no_gravity: nevermind about online-python as a service.
[22:35:58] <sa23m> (And in fact when I do call log_to_file, then it does attach handler and print true. But I am not, yet it still prints to stderr and still says no handlers.)
[22:36:03] <no_gravity> grym: ?
[22:36:11] *** Quits: artwr (~artwr@17.149.208.155) (Read error: Connection reset by peer)
[22:36:15] <grym> no_gravity: something that worries me about your recent no-io trick paste, though, is that csv handles delimiters more robustly than .split() does
[22:36:28] <grym> so i bet i can find a trivial-ish string that'll break your code
[22:36:33] <no_gravity> grym: I see
[22:37:25] *** Quits: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 244 seconds)
[22:37:25] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 244 seconds)
[22:37:28] *** Joins: wyclif (~wyclif@user/wyclif)
[22:37:46] <TML> sa23m: This appears to be behaviour specific to paramiko.util.get_logger - before I spend a bunch of time digging into that code, what is the ultimate question here?
[22:37:53] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:cce0:3948:a26d:5f4d)
[22:38:28] <TML> Are you after "Why is the behaviour different" or "How do I make it stop doing <X>", or …?
[22:38:30] <sa23m> Not specific to paramiko. Can replace the paramiko call with simply "logging.getLogger" and get same result
[22:38:39] <sa23m> That's all paramiko is doing under the hood
[22:38:56] *** Joins: AlexSwensen (~AlexSwens@2601:8a:502:5c10:5515:fea1:9de4:9a0b)
[22:39:09] <sa23m> Ultimately I am trying to figure out why paramiko is spitting something out to stderr without a handler. I don't want anything logged.
[22:39:34] <sa23m> I can turn it off by setLevel(sys.maxsize) but want to know what's happening
[22:39:42] <TML> logging.log(logging.INFO, "test"); print(logging.getLogger().hasHandlers()) - returns true
[22:40:02] *** Joins: dkmueller (~dkmueller@2a01:c23:c070:3a00:1107:6617:739e:3380)
[22:40:06] *** Quits: AlexSwensen (~AlexSwens@2601:8a:502:5c10:5515:fea1:9de4:9a0b) (Client Quit)
[22:40:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:40:35] <bjs> sa23m: probably nobody called logging config functions (basicConfig etc)
[22:40:42] *** Quits: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com) (Ping timeout: 240 seconds)
[22:40:51] <sa23m> https://www.online-python.com/HNl7voyCjb
[22:41:03] <sa23m> ^ This is an example of what I don't understand, no paramiko
[22:41:05] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[22:41:23] <TML> That is some CSV reader code
[22:41:32] <sa23m> "By default, no destination is set for any logging messages .. they will check to see if no destination is set; and if one is not set, they will set a destination of the console (sys.stderr)"
[22:41:47] <sa23m> Guessing this is what is happening, without any handler
[22:41:52] <bjs> sa23m: without configuring logging,  the loggers just fall back on some silly default to redirect things without formatting or anything to stderr
[22:42:00] <bjs> I guess this is sometimes useful, to someone? maybe?
[22:42:07] <disi> sa23m: doesn't happen at log level INFO
[22:42:33] <disi> interesting... logger.hasHandlers() is False too
[22:42:36] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[22:43:17] <sa23m> https://www.online-python.com/spUFYdyXm0
[22:43:18] <sa23m> Now with correct link*
[22:43:31] <sa23m> Didn't realize I sent wrong one above
[22:43:35] <bjs> sa23m: https://docs.python.org/3/howto/logging.html#what-happens-if-no-configuration-is-provided
[22:44:05] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[22:44:12] <sa23m> Thanks bjs, that answers the question -- "This internal handler is not associated with any logger, and acts like a StreamHandler which writes the event description message to the current value of sys.stderr "
[22:44:33] <disi> TIL
[22:44:36] <bjs> without configuration, all logs redirect to this handler (which is not associated with anything), which will print any message with level WARNING or above to stderr
[22:44:50] <bjs> it's silly behaviour and constantly confuses people when they forget/dont know to configure the loggers
[22:44:58] <bjs> luckily you can just configure the root and it should propagate down
[22:45:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:45:26] <Payam> is there anyway to communicate between threads?
[22:45:28] <sa23m> I swear that MPL does not randomly print logging statements without me calling basicConfig
[22:45:28] <bjs> it took me a while to find the text in the docs, the logging docs is a bit fragmented
[22:45:33] <bjs> Payam: yes, there's lots of ways
[22:45:42] <sa23m> Wonder what they're doing different from paramiko
[22:45:53] <Payam> bjs what should I search for? I use concurrent.future library
[22:45:56] *** Joins: Smyger (~Smyger@ip2-200.brfjupiter.se)
[22:46:29] <bjs> Payam: you can use variables, or attributes (which can be okay depending on what kind of "communication"), there's queue.Queue and there's stuff in the threading.* library
[22:46:43] <bjs> Payam: and concurrent.futures has stuff too in there,  I mean it all depends what kind of communication you want to do
[22:47:09] <bjs> the most common kind is "thread A requests thread B do some work, and then thread B gives the result back to thread A" and concurrent.futures can handle all of that for you
[22:47:52] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: Lost terminal)
[22:48:04] *** Joins: zesty (~djkoolmat@2001:470:69fc:105::2b2c)
[22:48:34] <Payam> bjs : https://bpa.st/IY4A What I want is when `wait_forXsecond` is done then go to create_file function without calling `create_file` from `wait_forXsecond(x)`
[22:48:47] *** Joins: pneff_ (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:49:44] *** Joins: justinf210 (~justinf21@140.sub-97-43-192.myvzw.com)
[22:50:32] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 244 seconds)
[22:50:49] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 10000)
[22:51:07] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[22:51:58] *** Joins: SebastianM (~seba@user/sebastianm)
[22:52:18] <bjs> Payam: why not call from wait_for_Xsecond?
[22:52:19] <raek> Payam: queue.Queue can also be useful
[22:52:47] <bjs> Payam: what about calling wait_for_Xsecond from create_file? or making a third function that calls both and then map()ing that function instead
[22:52:50] *** Joins: J451V (~jv@2001:1530:1018:3f4b:c11:df66:68d1:f59d)
[22:53:10] <Payam> hmm. That sounds better.
[22:53:19] *** Parts: J451V (~jv@2001:1530:1018:3f4b:c11:df66:68d1:f59d) ()
[22:53:33] *** Joins: J451V (~jv@2001:1530:1018:3f4b:c11:df66:68d1:f59d)
[22:54:08] *** Quits: justinf210 (~justinf21@140.sub-97-43-192.myvzw.com) (Ping timeout: 268 seconds)
[22:54:38] <Payam> doesn't look so nice to make a function that calls both
[22:54:39] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Client limit exceeded: 10000)
[22:54:51] *** Joins: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com)
[22:55:03] *** Joins: rk04 (~rk04@user/rajk)
[22:55:06] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[22:57:28] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Client limit exceeded: 10000)
[22:57:53] *** Quits: trampel (~trampel@2601:602:9c01:22b8:e835:37e3:7e99:6a3d) (Quit: Leaving)
[22:58:01] *** Quits: J451V (~jv@2001:1530:1018:3f4b:c11:df66:68d1:f59d) (Read error: Connection reset by peer)
[22:58:31] *** Quits: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com) (Read error: Connection reset by peer)
[22:58:56] *** Joins: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com)
[22:59:02] *** Joins: Henry151 (~bishop@user/henry151)
[23:00:06] *** Quits: Henry151 (~bishop@user/henry151) (Client Quit)
[23:00:27] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:00:38] *** Quits: canopus (~user@116.68.98.40) (Quit: ERC (IRC client for Emacs 27.2))
[23:01:57] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[23:02:56] *** Joins: Henry151 (~bishop@user/henry151)
[23:04:21] *** Joins: sudomann (~sudomann@86.106.143.154)
[23:04:51] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[23:05:14] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[23:05:58] <Roey> Payam: hey there.  You're not /the/ Payam from Youtube are you?
[23:06:18] <iphone> he is
[23:06:41] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[23:07:17] *** Joins: pnoud (~pnoud@user/pnoud)
[23:08:37] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 244 seconds)
[23:08:58] *** Joins: Antibody (~Antibody@107.170.145.30)
[23:09:14] <mefistofeles> who's that?
[23:09:37] <habnabit_> iphone, please stop with the reptile python trolling. it is tedious.
[23:09:54] *** Quits: g0RT (~thodson@host86-139-210-36.range86-139.btcentralplus.com) (Ping timeout: 240 seconds)
[23:10:36] <iphone> habnabit_: no
[23:11:14] <pragma-> I don't know who Payam is or what repile python trolling is. What is happening?
[23:11:24] <teut> really are you  Dr Peyem?
[23:11:31] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[23:12:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 264 seconds)
[23:12:18] *** Quits: jdmark2 (~jdmark@172.58.172.81) (Read error: Connection reset by peer)
[23:12:24] <teut> Payam*
[23:12:35] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[23:13:39] *** Joins: jokoon (~eio@2a01:e0a:542:e160:fe:d5d9:e3f2:dcc3)
[23:13:40] <jokoon> hello
[23:13:52] <jokoon> any idea where to ask question about PIL/Pillow ?
[23:14:11] <teut> here only
[23:14:33] <jokoon> I'd like to create images with text, but I need to center the text somehow, and to fit the text to a small icon
[23:14:51] *** Quits: Koffa (jkohvakk@user/koffa) (Quit: plonk)
[23:14:52] <jokoon> possibly make the icon square, as it's already done with .thumbnail
[23:14:53] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[23:15:18] *** Quits: mumixam (~m@user/mumixam) (Ping timeout: 264 seconds)
[23:15:44] <jokoon> Should I just solve it myself?
[23:15:47] *** Quits: rk04 (~rk04@user/rajk) (Quit: rk04)
[23:16:15] <teut> are you trying to create an icon?
[23:16:19] <teut> .ico file?
[23:16:20] <jokoon> SO seems to have an answer
[23:16:24] <jokoon> no just PNG
[23:16:33] <teut> so just use it , why tell us
[23:16:43] <teut> you better use css
[23:16:56] <jokoon> I can use CSS with PIL?
[23:17:04] <teut> no only css
[23:17:09] *** Quits: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net) (Quit: Konversation terminated!)
[23:17:11] *** Joins: Codaraxis (~Codaraxis@s13490149139.blix.com)
[23:17:25] <teut> https://www.creativebloq.com/features/get-started-with-css-art
[23:17:52] <jokoon> But I need PNG files
[23:17:56] <teut> Uploaded file: https://uploads.kiwiirc.com/files/4191cdb93addef80c370d5dea6c4b2d8/image.png
[23:18:03] <teut> you can get that from the css
[23:18:10] <sudomann> I received an interview invitation and I'm super nervous. Is it acceptable to ask for the format of their interviews and a few days of prep time
[23:18:33] <teut> on #python-offtopic  sudomann
[23:19:26] <teut> jokoon  https://css-tricks.com/lets-make-generative-art-we-can-export-to-svg-and-png/
[23:19:40] <teut> for rest you may want to ask on #css
[23:20:00] *** Quits: sgn- (~sgn@user/sgn) (Ping timeout: 272 seconds)
[23:20:05] <jokoon> thanks for the suggestion
[23:20:38] *** Joins: sgn- (~sgn@user/sgn)
[23:21:29] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[23:21:56] <teut> you are still using PIL?
[23:22:30] *** Quits: ybgp (~yannick@user/rhax) (Ping timeout: 268 seconds)
[23:22:45] <jokoon> I need to batch make about 150 PNG with text in them
[23:23:03] <teut> you can always use js
[23:23:14] <jokoon> I'm not using css tools, I loathe JS and node.js
[23:23:20] <jokoon> but thanks for the suggestion
[23:23:30] <teut> hmm, ok let me check the docs
[23:23:55] *** Quits: reset (~reset@user/reset) (Quit: reset)
[23:24:06] <jokoon> apparently I can get the pixel size of drawn text
[23:24:13] <jokoon> that will help me center the text
[23:24:41] *** iphone is now known as BritneySpears14
[23:24:51] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[23:24:52] *** Joins: geli (~gelignite@55d45e3f.access.ecotel.net)
[23:25:02] <teut> what about your SO answer , isnt it working?
[23:25:45] *** BritneySpears14 is now known as iphone
[23:25:46] <jokoon> yes that's where I found that I can get the pixel size of the text
[23:25:53] <jokoon> cooking pasta I'll try later
[23:26:11] <teut> ok
[23:26:28] *** Joins: Einstein (~einstein@108.5.219.168)
[23:26:34] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[23:26:52] <jokoon> ✔️ solved :D
[23:27:06] *** Quits: magla (~gelignite@55d431b1.access.ecotel.net) (Ping timeout: 240 seconds)
[23:27:35] <teut> nice work :)
[23:27:40] *** Quits: Linux77 (~kvirc@186.235.105.225) (Quit: Changing server...)
[23:27:50] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Quit: Client limit exceeded: 10000)
[23:27:59] *** Joins: Linux77 (~kvirc@186.235.105.225)
[23:28:15] <teut> but you should not detest js so much,   that is what rules everything now
[23:28:28] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[23:30:42] <waynew> detesting js is fine ;)
[23:30:51] <waynew> but living in denial isn't :P
[23:32:22] *** Quits: dudek (~dudek@185.150.236.112) (Ping timeout: 268 seconds)
[23:32:42] <teut> better statement  waynew
[23:32:48] *** Joins: tkazi (~tkazi@user/tkazi)
[23:33:34] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:35:27] *** Quits: qlixed_again (~qlixed@host60.181-13-74.telecom.net.ar) (Ping timeout: 268 seconds)
[23:36:16] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:36:22] <n00b101> please look at THIS https://bpa.st/LC2Q <-- here hello() runs for ever without running print("jaba") , BUT can i run hello() for a specific amount time?
[23:36:30] <n00b101> like time.sleep(3)
[23:37:42] *** Parts: nova (novasenco@user/nova) (♥☺)
[23:38:31] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[23:39:08] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[23:39:15] *** Joins: biozz (~biozz@static.211.203.216.95.clients.your-server.de)
[23:39:51] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:40:09] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[23:40:39] <tunixman> t n00b101 https://bpa.st/74GQ give this a try, or something like it anyway ;)
[23:41:30] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 240 seconds)
[23:41:32] *** Joins: mumixam (~m@user/mumixam)
[23:41:35] <n00b101> any simple way?
[23:41:48] *** Joins: rdvn (~rdvn@user/rdvn)
[23:41:52] *** Quits: rendar (~rendar@user/rendar) ()
[23:41:53] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:41:59] <n00b101> will time.sleep() or any takes a function as argument and run for that seconds
[23:42:18] <chance> n00b101: depends if you consider an afternoon learning about asyncio "simple" (not for a relative noob)
[23:42:22] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Quit: Leaving)
[23:42:39] <habnabit_> trio otoh is quite easy to pick up
[23:42:51] <habnabit_> https://trio.readthedocs.io/en/stable/tutorial.html
[23:43:05] <chance> hadn't thought about turning to a package, that's a good point habnabit_
[23:43:24] <tunixman> n00b101: this might also help, it's a bit more specific https://pypi.org/project/async-timeout/
[23:43:25] <habnabit_> n00b101, take a look at trio if you want simple concurrency^
[23:43:59] <chance> n00b101 basically what all these things we're mentioning do is they allow you to do more than one thing at the same time. one of those things will be "sleep for X seconds and then make the other thing i am doing stop happening"
[23:44:01] <habnabit_> n00b101, it even has a simple function for setting timeouts on a function call
[23:45:18] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[23:45:55] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[23:46:15] <n00b101> how is that?
[23:46:18] *** Quits: justinf210 (~justinf21@42.sub-97-44-1.myvzw.com) (Ping timeout: 240 seconds)
[23:46:23] <n00b101> trio!
[23:46:26] <n00b101> hmm
[23:46:31] *** Joins: badsektor (~badsektor@user/badsektor)
[23:46:34] *** Joins: justinf210 (~justinf21@140.sub-97-43-192.myvzw.com)
[23:46:42] <n00b101> what it has to do with concurrency?
[23:46:47] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Quit: Client limit exceeded: 10000)
[23:46:51] <n00b101> i don't understand
[23:48:10] *** Quits: syllin (~syllin@li890-17.members.linode.com) (Changing host)
[23:48:10] *** Joins: syllin (~syllin@user/syllin)
[23:48:15] <chance> there are several ways to achieve concurrency or parallelism in python. probably the easiest and definitely the most popular are async functions, which tl;dr operate on an "event loop" like python rolled its own timesharing for your function calls. that's *very* tl;dr but there's your concurrency
[23:48:17] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.1)
[23:48:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:48:42] *** Joins: qlixed_again (~qlixed@152.170.44.143)
[23:48:56] *** Parts: sa23m (~sa23m@pool-100-15-124-177.washdc.fios.verizon.net) ()
[23:49:08] <chance> you call an async function, it allows other things to keep happening while the async function is still working, instead of your program just sitting there waiting for the result.
[23:49:31] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[23:49:33] <chance> trio is just a much less painful way to use them
[23:49:47] *** Joins: boringnerd (~techman@82-203-160-168.bb.dnainternet.fi)
[23:50:07] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[23:50:35] *** Joins: greedom (~greedom@2001:16b8:3270:7600:7db0:305d:1b9e:ff6f)
[23:51:02] *** Quits: dkmueller (~dkmueller@2a01:c23:c070:3a00:1107:6617:739e:3380) (Ping timeout: 272 seconds)
[23:52:32] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 244 seconds)
[23:53:38] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[23:54:14] *** Quits: greedom (~greedom@2001:16b8:3270:7600:7db0:305d:1b9e:ff6f) (Remote host closed the connection)
[23:55:04] *** Joins: greedom (~greedom@2001:16b8:3270:7600:7db0:305d:1b9e:ff6f)
[23:55:49] *** Quits: BillyZane2 (~BillyZane@193.160.245.142) (Read error: Connection reset by peer)
[23:56:38] *** Joins: Leonarbro__ (~Leonet@user/leonarbro)
[23:56:46] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[23:56:47] *** Joins: BillyZane2 (~BillyZane@193.160.245.142)
[23:57:30] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[23:57:34] *** Joins: brickfat (~brickfat@user/brickfat)
[23:57:51] *** boringnerd is now known as AM
[23:59:18] *** Joins: tkazi (~tkazi@user/tkazi)
[23:59:39] <jokoon> JS is horrendous watch this if you haven't https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript this video is 7 years old already
[23:59:48] <bjs> n00b101: in general no you cannot say "run this function for $X seconds then stop",  unless the function cooperates with you and has places where it stops to check if it should stop
