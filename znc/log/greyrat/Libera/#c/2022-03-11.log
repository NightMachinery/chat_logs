[00:02:28] *** Joins: strajder (~strajder@user/strajder)
[00:03:20] *** Joins: hpyc9 (~yc9@2600:3c03:e000:297:af:af:af:3)
[00:04:01] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[00:06:37] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[00:08:33] *** Quits: based-overtime (~basedbase@197.1.115.89) (Ping timeout: 252 seconds)
[00:08:45] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[00:09:15] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[00:09:33] *** Joins: savolla (~quassel@95.10.239.22)
[00:09:33] *** Quits: savolla (~quassel@95.10.239.22) (Client Quit)
[00:16:03] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:16:20] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:16:20] *** Joins: Viewday115 (~Viewday@user/viewday)
[00:16:22] <CodeAgain> zop911, I got one to start reading, didn't read much yet, so can't tell whether it's good or I'll waste my time... But here it goes: Seacord, Robert C. Effective C. An Introduction to Professional C Programming. San Francisco: no starch press, 2020. ISBN-13: 978-1-71850-104-1.
[00:17:09] <CodeAgain> I was looking for something like K&R but up-to-date
[00:17:49] <CodeAgain> Not sure I've found, but yay that might be the closest thing I'm gonna find
[00:18:52] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[00:22:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[00:26:43] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[00:26:49] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[00:26:53] <twkm> modern c isn't too far behind.
[00:27:08] *** supakeen_test is now known as supakeen
[00:27:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:28:15] <CodeAgain> Good to know, I'll add to my list
[00:30:09] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.98)
[00:32:46] <zop911> CodeAgain, maybe pratt?
[00:34:04] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:37:37] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 240 seconds)
[00:38:37] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[00:39:00] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f14b7d1690af90762b47.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:40:54] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:41:25] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (Ping timeout: 240 seconds)
[00:41:29] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:42:01] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[00:42:57] <cuppajoe> On my 64-bit Linux machine, sizeof(time_t) is 8, but when I try to convert time_t max = LONG_MAX to a string, it causes a segmentation fault. What am I missing? Here is the code: http://dpaste.com/B7MQZEKVV
[00:44:08] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[00:44:37] <fizzie> `ctime` may return null if there's "an error", and an entirely unreasonable value might easily count as one.
[00:44:52] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:44:55] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[00:45:03] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:45:22] <fizzie> (I mean, LONG_MAX, that'd be, what, year 292 billion or so?)
[00:45:58] <fizzie> POSIX sez: "Attempts to use ctime() or ctime_r() for times before the Epoch or for times beyond the year 9999 produce undefined results."
[00:46:27] <cuppajoe> Oh okay, so the segmentation fault is due to the ctime() implementation, not time_t.
[00:46:37] <apotheon> seems that way
[00:46:44] <cuppajoe> Thanks for the reference.
[00:47:00] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[00:47:04] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 250 seconds)
[00:47:22] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[00:47:28] *** Joins: immibis (~hexchat@62.156.144.218)
[00:48:49] <apotheon> cuppajoe: You could look at OpenBSD manpages for functions you use to double-check gotchas.  The OpenBSD ctime manpage mentions the 9999 limit.
[00:49:13] <apotheon> https://man.openbsd.org/
[00:49:14] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[00:49:14] <candide> Title of apotheon's link: OpenBSD manual pages
[00:49:36] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[00:49:37] <fizzie> In fact (slightly surprisingly) the standard has a pretty similar statement. C11 7.27.3.1p3: "Likewise, if the calculated year exceeds four digits or is less than the year 1000, the behavior is undefined."
[00:49:53] <cuppajoe> Thanks I'll do that. I didn't realize the Linux man pages didn't include everything
[00:50:15] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[00:50:37] <apotheon> I recently wrote some C guidance.  Maybe it'd be helpful.  https://chadperrin.com/articles/understand-c/
[00:50:38] <candide> Title of apotheon's link: Chad Perrin
[00:50:49] <apotheon> (There are a couple bits that might be controversial in there.)
[00:51:16] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[00:51:30] <SaltHilStroller_> Is it possible to initialize an array of structs to default values? I.e. https://godbolt.org/z/c3rjWbhvW
[00:51:59] <ioxzev1z> SaltHilStroller_, struct foo foo[5] = { 0 }; ?
[00:52:15] <cuppajoe> apotheon: thanks, I'll have look at your article!
[00:52:21] <apotheon> glad to help
[00:52:31] <SaltHilStroller_> ioxzev1z: I want to initialize different members in the struct to different values. All structs the same tho
[00:52:38] <caze> SaltHilStroller_: struct foo bar[10] = {foo_default, foo_default, foo_default, foo_default, foo_default, foo_default, foo_default, foo_default, foo_default, foo_default };
[00:52:54] <ioxzev1z> SaltHilStroller_, nvm, spoke before reading link
[00:53:07] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[00:53:15] <SaltHilStroller_> caze: Okay, glad that works. Not super feasible for a large array :/ Also, annoying if the number of items in the struct changes
[00:53:19] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:53:34] <ioxzev1z> SaltHilStroller_, why does line 10 have { } if it's already in the define?
[00:53:42] <caze> That's why loops were invented.
[00:53:55] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[00:54:07] <caze> But then it's not initialization.
[00:54:21] <fizzie> #define rep2(x) x x \n #define rep4(x) rep2(x) rep2(x) \n #define rep8(x) rep4(x) rep4(x) \n ... struct foo bar[80] = {rep64(foo_default,) rep16(foo_default,)}` can do it in O(log n) space in terms of source code. ;)
[00:54:22] <SaltHilStroller_> ioxzev1z: I was hoping that syntax would initialize the whole array
[00:54:29] <caze> ioxzev1z: The { } in the define are for the compound literal.
[00:54:41] <ioxzev1z> SaltHilStroller_, you essentially have { { .a = 5, .b = 10 } }
[00:54:46] <fizzie> GCC has an extension for it, of course.
[00:54:59] <ioxzev1z> caze, right, but a single { .a = 5, .b = 10 } is sufficient, no?
[00:55:04] <caze> ioxzev1z: The { } on line 10 are for the array.
[00:55:24] *** Joins: tejr (~tejr@user/tejr)
[00:55:29] <ioxzev1z> caze, e.g. I would not use struct bar bar[5] = { { 0 } }
[00:55:39] *** imm__ is now known as imm_
[00:55:42] <caze> ioxzev1z: Why not?
[00:55:55] <fizzie> ,cc -w struct foo { int a, b; }; #define foo_default ((struct foo){ .a = 1, .b = 2 }) \n struct foo arr[5] = { [0 ... 4] = foo_default }; // the GCC extension
[00:55:57] <candide> fizzie: no output: arr = {{a = 1, b = 2}, {a = 1, b = 2}, {a = 1, b = 2}, {a = 1, b = 2}, {a = 1, b = 2}}
[00:56:04] <ioxzev1z> ,cc struct bar { int a; int b; }; struct bar bar[5] = { 0 };
[00:56:06] <candide> ioxzev1z: no output: bar = {{a = 0, b = 0}, {a = 0, b = 0}, {a = 0, b = 0}, {a = 0, b = 0}, {a = 0, b = 0}}
[00:56:14] <ioxzev1z> ,cc struct bar { int a; int b; }; struct bar bar[5] = { { 0 } };
[00:56:16] <candide> ioxzev1z: Same output.
[00:56:25] <ioxzev1z> caze, seems unnecessary
[00:56:28] <cuppajoe> So are openbsd manpages for standard functions preferable to the Linux ones, even if I am on a linux system?
[00:57:07] <ioxzev1z> cuppajoe, no
[00:57:59] *** Quits: Alhazred (~Alhazred@86.106.74.43) (Ping timeout: 256 seconds)
[00:57:59] <ioxzev1z> ,cc struct bar { int a; int b; }; struct bar bar[5] = { .a = 5, .b = 10 };
[00:58:00] <candide> ioxzev1z: error: field name not in record or union initializer
[00:58:08] <caze> ioxzev1z: If you have: struct bar { int a; int b; int c; }; and struct bar array[] = { 1, 2, 3, 4, 5 }; How would the compiler know if you wanted { { 1, 2, 3 }, { 4, 5 } }, or if you wanted { { 1, 2 }, { 3, 4, 5 } }?
[00:59:23] <caze> ioxzev1z: Or { { 1 }, { 2 }, { 3 }, { 4 }, { 5 } }
[00:59:28] <caze> etc.
[00:59:36] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[01:00:11] <fizzie> The subaggregate braces *are* optional, though (when you're not using a designator). They just make things clearer.
[01:00:33] <caze> They're optional when what you want is the greedy behavior.
[01:00:55] <caze> If it's not what you want, then omitting them isn't optional.
[01:01:21] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:02:00] <caze> Also, I don't think they're optional in that particular case of using a compound literal as an initializer.
[01:02:28] <fizzie> Right, fair enough.
[01:03:01] <fizzie> ,cc int i = {1}; // now scalar initializers with braces, that's where it's at
[01:03:04] <candide> fizzie: no output: i = 1
[01:03:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:03:26] <pragma-> ,cc int(i)={1}; // the int() function
[01:03:28] <candide> pragma-: no output: i = 1
[01:04:44] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[01:04:55] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:05:46] <SaltHilStroller_> caze: WIth regards to what the compiler konws. I would have thought that the compiler would know based exactly as to how you seperated the cases with the braces!
[01:05:55] *** Joins: de-facto_ (~de-facto@user/de-facto)
[01:06:01] <SaltHilStroller_> Looks like I'll use an init loop
[01:06:04] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 268 seconds)
[01:06:06] *** Joins: noteness (~noteness@user/noteness)
[01:06:11] <SaltHilStroller_> Thanks regardless though
[01:06:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[01:06:31] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Read error: Connection reset by peer)
[01:06:37] <caze> SaltHilStroller_: That was my point. ioxzev1z was saying that the braces are unnecessary.
[01:07:01] <SaltHilStroller_> Oh. I thought you were implying that's why being able to initialize an array like I was trying to do wouldn't work
[01:07:43] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[01:07:55] *** Joins: teepee (~teepee@openscad/teepee)
[01:10:20] <fizzie> BOOST_PP_REPEAT is also an option, if you want to make the preprocessor do it, but don't feel like DIY-ing it. (Boost.Preprocessor explicitly supports C as well.)
[01:10:31] *** de-facto_ is now known as de-facto
[01:10:48] <nitrix> pragma-, Make that more fun with int(i)={i};
[01:11:47] *** Quits: Akuli (~Akuli@82-203-165-79.bb.dnainternet.fi) (Quit: Akuli)
[01:12:28] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[01:13:50] <nitrix> ,cc #define return(x) x \n int(i) = { return (i + i) };
[01:13:52] <candide> nitrix: [warning: 'i' is used uninitialized [-Wuninitialized]  note: 'i' was declared here] no output: i = 0
[01:14:11] <nitrix> Who needs C23 anonymous functions.
[01:14:19] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.0.1)
[01:14:51] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[01:15:23] <nitrix> Missed opportunity of calling it `double`.
[01:17:18] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.3)
[01:18:25] *** Quits: magla (~gelignite@55d4843f.access.ecotel.net) (Quit: Stay safe!)
[01:18:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[01:18:44] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[01:18:47] *** Joins: bindu (~bindu@user/bindu)
[01:19:16] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 256 seconds)
[01:20:55] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[01:21:06] *** Quits: acerbic (~acerbic@cs-xdata-50-86-49-162.cspire.com) (Read error: Connection reset by peer)
[01:24:23] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[01:24:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[01:25:18] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[01:26:39] *** Joins: Torr (~Torr@user/torr)
[01:26:54] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[01:31:02] *** Quits: ekathva_ (~ekathva@85-76-69-150-nat.elisa-mobile.fi) (Remote host closed the connection)
[01:31:10] *** Joins: neo1 (~neo@103.144.161.8)
[01:31:17] <neo1> hello
[01:31:36] <neo1> I needed some help with learning C
[01:33:28] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:34:24] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[01:35:15] <twkm> what kind of help.
[01:35:52] <dave0> hey twkm
[01:35:58] <neo1> I'm in high school atm
[01:36:13] <neo1> learned the introductory basics of a few languages
[01:36:44] <neo1> and looking forward to do assembly after I get a good grasp on C
[01:36:52] <neo1> can you recommend me a book
[01:37:03] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:37:23] <twkm> see the link in the topic.
[01:37:26] <neo1> I'm currently thinking of "Teach Yourself C, Herbert Schildt"
[01:37:35] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[01:37:39] <neo1> link?
[01:37:48] *** Quits: King_jul1an (~King_juli@41.1.137.161) (Ping timeout: 272 seconds)
[01:37:51] <neo1> oh okay
[01:37:53] <neo1> found it
[01:38:13] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.98) (Ping timeout: 256 seconds)
[01:39:00] *** Joins: noteness (~noteness@user/noteness)
[01:39:11] <neo1> twkm do you mean the C standards one?
[01:39:36] <twkm> no, the one that's books: ...
[01:39:54] <twkm> <http://www.iso-9899.info/wiki/Books>
[01:40:04] <neo1> it's empty. . .
[01:40:06] <neo1> I mean the page
[01:40:14] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[01:40:20] <neo1> oh sorry
[01:40:31] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[01:40:32] <neo1> the 's' didn't get copied
[01:42:43] <neo1> thank you so much twkm
[01:44:19] *** Joins: oxfuxxx (~oxfuxxx@37.19.212.99)
[01:46:26] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[01:46:39] <twkm> you're welcome.
[01:46:39] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[01:47:51] <neo1> I want to learn gcc compiler too. I mean using it. and also how it works later on.
[01:48:11] <neo1> can you suggest anything?
[01:48:13] <neo1> twkm
[01:48:19] <twkm> gcc has documentation, often installed along side.
[01:48:39] <twkm> e.g., ''man gcc'' or ''info gcc''.
[01:48:39] <neo1> okay
[01:48:44] <cassepipe> Hi ! I need your help. I can't manage to get a backtrace of my program without gbd's interactive mode. Batch mode just enters the TUI and exits right away not printing anything to terminal
[01:49:14] *** Quits: adip (~adip@dil199.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[01:49:17] <neo1> Thanks again
[01:49:23] <twkm> sure.
[01:49:42] *** Quits: adip_ (~adip@dil199.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[01:49:48] *** Quits: cyberbanjo (~user@2607:fb90:4247:7118:8739:1e35:d38:1fb8) (Ping timeout: 240 seconds)
[01:50:02] <cassepipe> Another solution I found but that also does not work is to #include <valgrind/valgrind.h> in my code and use some VALGRIND_PRINTF_BACKTRACE macro
[01:50:06] <neo1> hehe :3
[01:51:03] <twkm> that seems to provide too little info cassepipe.  how complex is the program?
[01:51:31] <cassepipe> twkm: It's a dining philosophers exercise
[01:51:36] <cassepipe> Small program
[01:52:04] <cassepipe> But it has some usleep in it and I suspect using gdb interactive is messing with timings
[01:52:23] <twkm> almost certainly would.
[01:52:35] *** Quits: oxfuxxx (~oxfuxxx@37.19.212.99) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[01:53:01] *** Joins: masoudd (~masoudd@user/masoudd)
[01:53:02] <twkm> usleep has been removed from posix, perhaps use something else.
[01:53:14] <cassepipe> has it ? Did not know about that
[01:53:33] <cassepipe> It's an exercise so I kinda not have a choice though
[01:55:26] <cassepipe> But even if I used nanosleep (as I read is recommended) that would not help with my pb right
[01:55:33] *** Quits: neo1 (~neo@103.144.161.8) (Quit: WeeChat 3.4)
[01:55:45] <cassepipe> How does one get a simple backtrace ?
[01:55:53] <twkm> i wouldn't expect it help, no.  i was just wondering why you used it.
[01:56:16] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:56:23] <cassepipe> Has anyone use valgrind macros with success ?
[01:56:26] <twkm> i'm guessing the backtrack was lost by the tui terminal reset.
[01:58:34] <cassepipe> twkm: Oh so batch mode would work if I don't set up TUI in ./gdbninit ? I have using the TUI for so long that I forgot it was not the default
[01:59:29] <cassepipe> twkm: I think you solved it
[01:59:39] <cassepipe> I mean that gdb will output to the terminal
[01:59:57] <cassepipe> But it prints "no stack"
[02:00:23] * cassepipe wawes his fist towards the sky
[02:00:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:01:13] <twkm> do you ask the compiler to do away with stack frame references?  or perhaps directly manipulate registers such the stack pointer might have been destroyed?
[02:01:16] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:01:19] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[02:01:55] <cassepipe> twkm: Not sure I understand but I am compiling with -g3 flag
[02:02:21] <twkm> any others?
[02:02:37] <cassepipe> I have been reading about the gdb trick in a article but now that I think of it it kind of makes sense that if I print the BT at the end of execution I get nothing
[02:03:00] <twkm> yeah, at the end isn't too useful.
[02:03:01] <cassepipe> -fsanitize=address maybe
[02:03:23] <cassepipe> No not even I commented that out in the Makefile
[02:03:52] <twkm> no, like -fomit-frame-pointer, but if the bt is after execution there's nothing to show.
[02:03:56] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[02:03:56] <cassepipe> So I guess I'd have to set breakpoint, print the backtrace and then resume exexution
[02:04:05] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:04:10] <twkm> yes.
[02:04:32] <twkm> or a trigger that runs when something changes.
[02:04:46] <fizzie> (`-fomit-frame-pointer` is often the default; you can do `-fno-omit-frame-pointer` to keep it. Not that you generally should need one for debugging on systems where the default is to omit it.)
[02:04:59] <cassepipe> twkm: Good idea. Had not thought of that
[02:05:53] <cassepipe> https://senarvi.github.io/stack-trace-with-gdb/ is the link I got that idea from. Its last example does not even have "-ex backtrace"
[02:07:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:07:53] <cassepipe> cassepipe: Ok I am done, does not seem worth the trouble. It's a pity the valgrind macro does not work. No idea why.
[02:08:19] <cassepipe> Anyways it is from a 2011 article https://blog.mozilla.org/nnethercote/2011/01/11/using-valgrind-to-get-stack-traces/
[02:09:18] <cassepipe> And pstack uses pids so that can't help
[02:10:01] <cassepipe> Back to printf debugging
[02:10:04] <fizzie> The last example has `thread apply all backtrace`, which is the same as `backtrace` except applied to all threads.
[02:10:39] <cassepipe> fizzie: My bad I missed that.
[02:10:42] <fizzie> From the text, I imagine the way you're supposed to use it is to send the program a signal when you want it to stop, rather than wait for execution to end normally.
[02:11:32] <fizzie> (Because "no stack" is indeed the message you get if you try to ask for a backtrace after the program has exited.)
[02:11:54] <cassepipe> fizzie: Yes. Makes sense. Thanks.
[02:12:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:13:07] <cassepipe> Do you know of any solution that my fit my use case ? Like strace but for all function calls ?
[02:13:08] <fizzie> If you want the program itself to decide when you want it to stop, you can have it do `raise(SIGSTOP);`, though I guess it's not _that_ useful for just a backtrace -- it'll just be at the point you put that in.
[02:13:48] <cassepipe> fizzie: That's not a bad idea actually
[02:14:56] *** Joins: dea_ (~dea@213.128.80.36)
[02:16:25] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:17:15] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 252 seconds)
[02:17:37] *** Joins: X-Scale` (~ARM@31.22.203.181)
[02:17:38] <dave0> gcc appears to have __builtin_trap maybe that would work?
[02:18:25] *** Joins: Torr (~Torr@user/torr)
[02:18:36] *** Quits: X-Scale (~ARM@31.22.203.181) (Ping timeout: 240 seconds)
[02:18:39] *** X-Scale` is now known as X-Scale
[02:18:44] <fizzie> As for getting a trace of all function calls, instead of just stopping... a profiler might be able to do that, since tracking function entry and exit is kind of what they do. Usually they keep more aggregated data though (like counts and durations). GCC's `-finstrument-functions` flag could be used to DIY it, but that's work. And I'm sure gdb could be scripted to just print where it is and continue.
[02:19:06] *** Joins: Satin (uid193953@user/Seten)
[02:19:17] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:20:15] *** Joins: hiroshi_ (~freedom@151.37.105.111)
[02:21:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e48f:b916:ea95:460d) (Quit: Quit)
[02:21:40] <fizzie> There's also an strace-analogue for shared library calls called ltrace, but it only intercepts calls from the program to its dynamically linked libraries.
[02:22:44] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[02:23:48] *** Joins: diamondbond (~diamondbo@175.157.59.218)
[02:24:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:26:14] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:26:32] *** Quits: mahmutov (~mahmutov@5.176.30.6) (Ping timeout: 240 seconds)
[02:28:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[02:29:17] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[02:29:49] *** Quits: V (~v@anomalous.eu) (Ping timeout: 240 seconds)
[02:29:54] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Ping timeout: 252 seconds)
[02:31:36] <twkm> dtrac ... oh well.
[02:32:07] *** Joins: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[02:32:07] *** Quits: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[02:32:07] *** Joins: Elbeeo (~asskoala@user/asskoala)
[02:32:13] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[02:33:08] *** Quits: diamondbond (~diamondbo@175.157.59.218) (Quit: Leaving)
[02:33:27] *** Elbeeo is now known as AssKoala
[02:33:38] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 268 seconds)
[02:33:53] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:34:09] *** Joins: pizdets_ (~pizdets@183.182.115.74)
[02:34:30] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 260 seconds)
[02:34:31] *** Quits: pizdets (~pizdets@183.182.114.253) (Ping timeout: 265 seconds)
[02:35:56] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 252 seconds)
[02:39:05] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:39:18] *** Joins: de-facto (~de-facto@user/de-facto)
[02:40:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:47:57] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[02:49:14] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[02:49:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:53:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:01:36] *** Joins: V (~v@anomalous.eu)
[03:03:44] <baltazar> hmm. if I set PARMRK in termios' c_iflag, shouldn't it read { 0xff, 0, 0 } when a break condition occures?
[03:04:05] <baltazar> could it be that my usb serial thingy doesn't support detecting a break condition?
[03:05:48] *** Quits: hiroshi_ (~freedom@151.37.105.111) (Quit: hiroshi_)
[03:09:31] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[03:09:55] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[03:11:21] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Read error: Connection reset by peer)
[03:12:27] *** Joins: fstd (~fstd@xdsl-78-35-88-2.nc.de)
[03:13:30] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[03:18:34] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:19:02] *** Quits: zop911 (~zop9114@95.59.154.69) (Quit: Leaving)
[03:21:24] *** Joins: slimbo (~qooupapn@user/slimbo)
[03:23:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[03:30:41] *** Joins: donnny (~devnull@142.167.143.188)
[03:30:59] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[03:33:49] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[03:38:20] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:38:46] *** Quits: alch (~alch@151.68.145.190) (Ping timeout: 272 seconds)
[03:39:22] *** Joins: MrFantastik (~f@176.108.141.162)
[03:40:04] *** Joins: alch (~alch@151.68.128.234)
[03:41:42] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:43:25] *** Joins: Wulf (~Wulf@user/wulf)
[03:44:02] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 240 seconds)
[03:44:16] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[03:45:06] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[03:45:06] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[03:47:26] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:48:30] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[03:49:15] *** Joins: reedrichards (~f@176.108.141.162)
[03:49:15] *** Quits: MrFantastik (~f@176.108.141.162) (Remote host closed the connection)
[03:50:50] *** Quits: reedrichards (~f@176.108.141.162) (Remote host closed the connection)
[03:51:17] *** Joins: MrFantastik (~f@176.108.141.162)
[03:52:59] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[03:53:56] *** Joins: xcm (~xcm@user/xcm)
[03:55:42] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[03:57:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:58:14] *** Quits: constxd (~brad@142.134.78.128) (Quit: WeeChat 2.8)
[03:59:36] *** Joins: nyjets (~zz@2001:8003:1780:7100:213a:8944:d5a6:c78c)
[03:59:58] *** Joins: hanzo (uid532183@user/hanzo)
[04:02:49] *** Joins: eddof13 (~eddof13@189.178.17.205)
[04:03:53] *** Joins: Torr (~Torr@user/torr)
[04:06:41] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[04:06:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:08:08] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 250 seconds)
[04:08:21] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 252 seconds)
[04:09:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:10:38] *** Joins: KevinX (~KevinX@user/KevinX)
[04:11:38] *** Joins: ferdna (~ferdna@user/ferdna)
[04:12:41] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[04:15:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:17:46] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:18:47] *** Quits: MrFantastik (~f@176.108.141.162) (Remote host closed the connection)
[04:19:01] *** Joins: MrFantastik (~f@176.108.141.162)
[04:22:10] *** Quits: eddof13 (~eddof13@189.178.17.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:22:17] *** Joins: zer0x_ (~zer0x@58.186.217.233)
[04:22:32] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:22:38] *** Joins: eddof13 (~eddof13@189.178.17.205)
[04:22:47] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:22:58] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:23:21] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[04:24:40] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:24:50] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[04:25:51] *** Joins: moog (~moog@98.97.83.104)
[04:27:46] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[04:28:30] *** Quits: zer0x_ (~zer0x@58.186.217.233) (Remote host closed the connection)
[04:28:30] *** Quits: moog__ (~moog@98.97.83.104) (Ping timeout: 250 seconds)
[04:29:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[04:29:56] *** Joins: zer0x (~zer0x@58.186.217.233)
[04:30:01] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[04:30:07] *** Quits: gog (~ada@user/gog) (Quit: byee)
[04:30:20] *** Joins: semeion (~semeion@user/semeion)
[04:30:42] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 272 seconds)
[04:30:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:31:04] *** Joins: slimbo (~qooupapn@user/slimbo)
[04:32:27] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[04:33:14] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[04:33:48] *** Quits: eddof13 (~eddof13@189.178.17.205) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:35:00] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[04:35:31] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:37:46] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[04:38:50] *** Joins: v4mp (~v4mp@user/v4mp)
[04:39:57] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[04:40:02] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:40:02] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[04:40:56] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[04:43:00] <munkis> GOTO considered harmful (Dijkstra 1968) reads like an add for Haskell.
[04:48:12] *** Quits: Jong (~Jong@2620:10d:c090:400::5:b29a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:48:15] *** Joins: vysn (~vysn@user/vysn)
[04:48:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:50:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[04:50:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:51:15] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 252 seconds)
[04:51:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:53:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[04:53:14] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:53:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:01:05] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:01:12] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[05:07:00] *** Quits: defjam (~eb0t@90.210.89.170) (Ping timeout: 240 seconds)
[05:07:20] *** Quits: MrFantastik (~f@176.108.141.162) (Read error: Connection reset by peer)
[05:07:21] *** Joins: constxd_ (~brad@142.134.78.128)
[05:07:23] *** Joins: reedrichards (~f@176.108.141.162)
[05:09:01] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[05:09:04] *** Joins: defjam (~eb0t@90.203.123.221)
[05:09:36] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[05:11:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:11:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:11:25] *** Joins: wroathe (~wroathe@user/wroathe)
[05:23:45] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[05:24:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:25:00] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[05:25:47] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:26:59] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:30:03] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Quit: ZNC - http://znc.in)
[05:30:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[05:31:40] *** Quits: reedrichards (~f@176.108.141.162) (Quit: Leaving)
[05:32:21] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[05:34:01] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-4967-ccf2-1261-48a0.fixed6.kpn.net)
[05:37:37] *** Parts: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) ()
[05:38:32] *** Joins: frost (~frost@user/frost)
[05:38:33] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-4967-ccf2-1261-48a0.fixed6.kpn.net) (Ping timeout: 252 seconds)
[05:38:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[05:39:48] *** Joins: ferdna (~ferdna@user/ferdna)
[05:42:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[05:43:25] *** Quits: ondrej008 (uid311009@id-311009.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:44:27] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[05:46:25] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[05:49:15] *** Quits: X-Scale (~ARM@31.22.203.181) (Ping timeout: 256 seconds)
[05:49:15] *** X-Scale` is now known as X-Scale
[05:51:31] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:55:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:02:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:05:41] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[06:05:44] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:06:06] *** Joins: joev1 (~joev@user/joev)
[06:07:10] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[06:12:14] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:13:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:13:47] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[06:14:15] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[06:15:36] *** Joins: Inline__ (~Inline@p200300cd470c47009a06da4df68ae634.dip0.t-ipconnect.de)
[06:18:16] *** Quits: Inline (~Inline@p200300cd470c9c002556fbf58fa37daf.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:19:40] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[06:20:22] *** Joins: boreas (~heiner@94.31.85.196)
[06:22:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[06:22:25] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:22:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:22:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:22:48] *** Joins: wroathe (~wroathe@user/wroathe)
[06:23:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Client Quit)
[06:26:15] *** Joins: fe23 (~fe23@2409:8a34:466:6010:d9bf:b2e3:3343:bae4)
[06:28:36] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 252 seconds)
[06:33:57] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:34:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[06:35:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[06:45:01] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:48:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:54:08] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:54:27] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 252 seconds)
[06:55:15] *** Joins: joev1 (~joev@user/joev)
[06:59:19] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[07:01:54] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[07:02:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:03:15] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[07:06:07] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Read error: Connection reset by peer)
[07:06:37] *** Joins: slimbo (~qooupapn@user/slimbo)
[07:06:43] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[07:08:37] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:09:46] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[07:11:34] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:11:44] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:12:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com)
[07:12:17] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-9d51-e062-85af-d5a1.res6.spectrum.com) (Client Quit)
[07:13:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:14:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:17:00] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[07:17:18] *** Joins: de-facto_ (~de-facto@user/de-facto)
[07:17:25] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[07:17:42] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:18:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:19:14] *** Joins: Viewday1156 (~Viewday@user/viewday)
[07:20:48] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:20:49] *** Viewday1156 is now known as Viewday115
[07:21:19] *** de-facto_ is now known as de-facto
[07:22:00] *** Joins: tronwizard (~tronwizar@static-74-109-121-138.phlapa.fios.verizon.net)
[07:22:37] *** Parts: tronwizard (~tronwizar@static-74-109-121-138.phlapa.fios.verizon.net) ()
[07:23:00] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[07:24:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:25:48] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 252 seconds)
[07:26:34] *** Joins: joev1 (~joev@user/joev)
[07:27:04] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[07:28:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[07:29:39] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[07:29:52] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (Ping timeout: 256 seconds)
[07:31:37] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[07:36:17] *** Quits: alch (~alch@151.68.128.234) (Read error: Connection reset by peer)
[07:37:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:38:01] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[07:38:57] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 240 seconds)
[07:40:24] *** Joins: alch (~alch@151.68.215.252)
[07:40:33] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-db3-6cce-dc3c-11dd.fixed6.kpn.net)
[07:41:12] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:42:01] *** Quits: zer0x (~zer0x@58.186.217.233) (Ping timeout: 256 seconds)
[07:42:51] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 252 seconds)
[07:43:47] *** Joins: joev1 (~joev@user/joev)
[07:45:03] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-db3-6cce-dc3c-11dd.fixed6.kpn.net) (Ping timeout: 252 seconds)
[07:45:53] *** Joins: nostar (~nostar@107.175.102.245)
[07:47:00] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 240 seconds)
[07:47:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:48:14] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:49:26] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[07:50:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:56:51] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[07:57:10] *** Quits: constxd_ (~brad@142.134.78.128) (Ping timeout: 272 seconds)
[07:59:58] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:01:23] *** Joins: z4r4 (~yaluna@91.193.6.10)
[08:02:02] <z4r4> Hi
[08:02:09] <pony> hi
[08:02:22] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[08:02:22] <greeter> hi
[08:02:34] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[08:10:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:11:44] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[08:14:22] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:15:38] <z4r4> I'm writing a program that registers some key presses and I want to know the time interval between each key press, so I'm going to get the time when the first key is pressed and then again when the second key is pressed. But I'm not sure which function to use to get these times on Linux, or any POSIX systems. By what I searched there are different types of time, like wall-clock time and CPU time, and different functions use these different ty
[08:15:38] <z4r4> pes of time. Which type of time am I supposed to use in my case?
[08:16:34] *** Joins: kts (~kts@103.73.237.220)
[08:16:46] <caze> wall
[08:16:57] <z4r4> Why?
[08:17:25] <caze> Because you're measuring the time between events that happen outside of the computer.
[08:17:33] <z4r4> Makes sense
[08:17:48] <caze> Do you know what CPU time measures?
[08:18:34] <dave0> z4r4: clock_gettime() with a clock_id of CLOCK_REALTIME ... https://pubs.opengroup.org/onlinepubs/9699919799/functions/clock_gettime.html
[08:19:03] <z4r4> Yes. I was thinking about this because I saw some man pages of functions that use wall-clock time saying that the wall-time clock can be changed if the system's clock is changed. And what I'm writing is some sort of game and I was thinking that it would be easy to cheat this way, but maybe this is a very edge case.
[08:19:45] <caze> z4r4: How could CPU time possibly do what you want?
[08:20:46] <z4r4> The time can't be changed I guess
[08:21:02] <z4r4> But I understand why CPU time wouldn't work
[08:21:06] <rcf> z4r4: it’s an edge case, but one served by CLOCK_MONOTONIC. CPU time is totally unrelated to what you want, it’s used to measure resource use.
[08:21:08] <caze> z4r4: But it measures something that is completely irrelevant to the time between keypresses.
[08:21:35] <z4r4> Yes, I understand, I was just a bit confused
[08:21:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:22:08] <dave0> someone who could set the clock can probably kill your process.. i wouldn't worry about it
[08:22:16] <rcf> z4r4: The monotonic clock won’t slip backward upon changes.
[08:22:37] <rcf> dave0: weird results can occur even from benign changes.
[08:22:39] <z4r4> rcf: just read about it in the man  page, thanks.
[08:22:45] <caze> Also why do you care if people cheat?
[08:23:28] <z4r4> Because it's a game and they're not supposed to cheat easily...
[08:23:58] <dave0> if your game involves money then maybe you have a point
[08:24:14] <rcf> True anti cheat measures are a far more complicated issue than just time
[08:24:37] <rcf> But using a monotonic clock for things like this is just good practice anyway
[08:24:44] <z4r4> Yeah, I just thinking that if I could make cheating a tad bit harder by just using the right time then I should
[08:24:55] <z4r4> Yes, that is what I was thinking
[08:24:56] <caze> z4r4: You mean like switch out the system library clock function with a version that will report back arbitrary times under their control?
[08:25:02] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 272 seconds)
[08:25:26] <z4r4> This is not that easy
[08:25:47] <z4r4> They would have to modify the libc source code, compile and replace, no?
[08:26:01] <rcf> caze is simply thinking like a proper cheater would.
[08:26:19] <z4r4> Makes sense
[08:26:23] <z4r4> And it was a good idea
[08:27:24] <rcf> Which in this case should lead you to avoid considering this effective against cheats, considering that there are very determined attackers out there plotting far more involved cheating schemes.
[08:27:50] <z4r4> Btw what about the C11 timespec_get function?
[08:27:59] <z4r4> It seems to be wall time
[08:28:04] <z4r4> I think I should use it instead
[08:28:13] <caze> z4r4: All it takes is one person to create a tool that automates it. And then it becomes very easy for everyone.
[08:28:17] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[08:28:22] <z4r4> You're right lol
[08:29:59] <rcf> Also in these days changing the system clock is something that should be privileged seeing as how doing so allows for far, far more serious security exploitation with digital certificates and whatnot
[08:30:09] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[08:33:02] <rcf> At the very least you can ruin someone’s day by breaking DNSSEC and TLS, as we in #archlinuxarm often see because the clock is always wrong without a battery-backed RTC between power cycles.
[08:33:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:33:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:33:03] *** Joins: wroathe (~wroathe@user/wroathe)
[08:37:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[08:45:45] *** nortoh is now known as luvings
[08:46:29] *** Parts: luvings (~nortoh@user/nortoh) (Textual IRC Client: www.textualapp.com)
[08:49:57] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:50:20] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[08:50:56] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[08:58:06] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Quit: ---)
[08:58:21] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[08:59:33] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:03:34] *** Joins: Jong (~Jong@2620:10d:c090:400::5:74b3)
[09:05:11] *** Quits: z4r4 (~yaluna@91.193.6.10) (Quit: Leaving.)
[09:06:29] *** Joins: z4r4 (~yaluna@91.193.6.10)
[09:06:44] *** Parts: z4r4 (~yaluna@91.193.6.10) ()
[09:08:45] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:08:58] *** Joins: z4r4 (~yaluna@91.193.6.10)
[09:09:13] *** Parts: z4r4 (~yaluna@91.193.6.10) ()
[09:10:37] *** Joins: rando25892 (~homefame@user/rando25892)
[09:10:40] *** Quits: donnny (~devnull@142.167.143.188) (Quit: leaving)
[09:12:26] *** Joins: z4r4 (~yaluna@91.193.6.10)
[09:13:28] *** Quits: z4r4 (~yaluna@91.193.6.10) (Client Quit)
[09:13:51] *** Joins: z4r4 (~z4r4@91.193.6.10)
[09:21:58] *** Joins: slimbo (~qooupapn@user/slimbo)
[09:22:40] <dave0> z4r4: you could always check that the 2nd time is > than the 1st, and do something sensible if it isn't
[09:22:52] <dave0> or even better check it is within some range
[09:23:30] <dave0> hmmm wouldn't work if the clock slowed down or sped up though
[09:25:36] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:26:53] *** Joins: toou (~toou@user/toou)
[09:27:06] <jgart> when should I use bool versus _Bool?
[09:27:57] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[09:28:32] <toou> is there any way to identify the structure of an multidimensional array buy passing the ptr to it, like single
[09:28:50] <toou> *dimensional array and '\0'
[09:29:18] <danielcamiel> jgart, SATURDAY
[09:30:39] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[09:30:49] <dave0> jgart: i believe bool is brought in when you #include <stdbool.h>
[09:31:17] *** Quits: z4r4 (~z4r4@91.193.6.10) (Quit: Leaving.)
[09:32:32] <dave0> toou: just pass in the dimensions to the function.. you could even declare a variable length array    int foo(int width, int height, int array[width][height])
[09:33:19] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[09:34:32] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[09:34:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[09:35:11] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:16] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[09:35:24] *** Quits: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:35:55] <jgart> danielcamiel, wdym?
[09:36:24] <dave0> toou: i personally prefer pointers but it's slightly more complicated than VLA    int foo(int width, int height, int **array)
[09:37:16] <danielcamiel> jgart, use it every saturday religiously, my friend, and you too will become a wizard
[09:40:18] <dave0> jgart: `bool` is prettier, and <stdbool.h> also brings in the `true` and `false` constants, so that's nice too
[09:42:57] <sebag> I'm setting a watchpoint in GDB but it isn't triggered even though it is accessed, changed. Why could this be?
[09:43:02] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[09:43:58] *** Joins: eddof13 (~eddof13@2806:102e:12:64:994e:c256:6228:a886)
[09:45:18] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 256 seconds)
[09:46:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[09:48:36] *** Joins: tusko (~yeurt@user/tusko)
[09:49:21] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Ping timeout: 252 seconds)
[09:50:11] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[09:51:01] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:55:19] *** Joins: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net)
[09:56:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:58:44] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[09:58:57] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Ping timeout: 240 seconds)
[10:00:02] *** Quits: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net) (Ping timeout: 272 seconds)
[10:01:31] *** Joins: oliver1 (~oliver@thunix.net)
[10:03:10] *** Joins: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at)
[10:03:26] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[10:10:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:11:59] *** Joins: basedovertime (~basedbase@41.62.4.214)
[10:11:59] *** Quits: nyjets (~zz@2001:8003:1780:7100:213a:8944:d5a6:c78c) (Read error: Connection reset by peer)
[10:12:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[10:13:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:15:53] <jgart> danielcamiel, dave0 THNX
[10:16:26] *** Quits: slimbo (~qooupapn@user/slimbo) (Remote host closed the connection)
[10:17:15] *** Joins: based-overtime (~basedbase@41.62.4.214)
[10:17:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[10:17:58] <dave0> jgart: ok :-)
[10:18:00] *** Joins: based_overtime (~basedbase@41.62.4.214)
[10:20:41] *** Quits: basedovertime (~basedbase@41.62.4.214) (Ping timeout: 256 seconds)
[10:22:12] *** Quits: based-overtime (~basedbase@41.62.4.214) (Ping timeout: 272 seconds)
[10:23:28] *** Quits: based_overtime (~basedbase@41.62.4.214) (Ping timeout: 272 seconds)
[10:25:23] *** Joins: zer0x (~zer0x@58.186.217.233)
[10:27:02] *** Quits: toou (~toou@user/toou) (Quit: Lost terminal)
[10:28:51] *** Joins: nyjets (~zz@2001:8003:1780:7100:213a:8944:d5a6:c78c)
[10:29:17] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[10:31:55] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:33:25] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[10:33:48] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[10:34:29] *** Quits: eddof13 (~eddof13@2806:102e:12:64:994e:c256:6228:a886) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:37:12] *** Quits: bzng (~bzng4@188-23-202-239.adsl.highway.telekom.at) (Ping timeout: 252 seconds)
[10:38:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[10:40:26] *** Joins: bzng (~bzng4@188-23-237-6.adsl.highway.telekom.at)
[10:40:33] *** Joins: moog_ (~moog@98.97.84.13)
[10:42:29] <Xeroine> why does this https://bpa.st/WTOQ print 2 newlines when I input only 1 character and if it's more than 1 there's only the 1 newline I have in printf? I tried making arr a pointer to string literal and initializing with 1 and then more characters and printing but then it works like I'd expect it to, no extra newlines.
[10:42:57] <Xeroine> I guess it's because of the fgets then but why
[10:43:00] *** Quits: moog (~moog@98.97.83.104) (Ping timeout: 240 seconds)
[10:43:01] <greeter> fgets includes the trailing \n character
[10:43:06] *** Joins: dea_ (~dea@213.128.80.36)
[10:43:31] *** Quits: kts (~kts@103.73.237.220) (Quit: Konversation terminated!)
[10:43:34] *** Joins: moog__ (~moog@98.97.87.156)
[10:43:34] *** Quits: dea_ (~dea@213.128.80.36) (Max SendQ exceeded)
[10:43:53] <Xeroine> greeter: but it doesn't look like it does, if I use printf without \n I get no newline in output
[10:44:03] *** Joins: dea_ (~dea@213.128.80.36)
[10:44:10] <Xeroine> if I have more than 1 character I mean
[10:44:24] <Xeroine> if it's just 1 character I get newline
[10:44:28] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.65)
[10:44:54] <greeter> hmm let me try this and see what happens, maybe i overlooked something
[10:45:04] <Xeroine> okay
[10:45:42] <the_lanetly_052> Hi all, is that correct way? uint64_t val = retval; uint8_t new_val = (uint8_t)(val & 0xff);
[10:46:10] <greeter> ok i think it's because you are only storing at most 3 characters. the string has to be null terminated with \0 which is non printing, so when you enter more than one character, you no longer have space for \n, hence no new line
[10:46:11] *** Quits: moog_ (~moog@98.97.84.13) (Ping timeout: 256 seconds)
[10:46:30] <the_lanetly_052> uint8_t new_val = (uint8_t) ((val & 0xff) - 1); i think it should be like that.
[10:46:36] <Xeroine> greeter: but if I enter 2 characters there should be space for \n, no?
[10:47:11] <greeter> no, because the third character must be \0 i believe
[10:47:17] <Xeroine> oh
[10:47:23] <Xeroine> right
[10:47:42] <Xeroine> yeah it works now
[10:47:50] <Xeroine> I totally forgot about the \0
[10:48:38] <greeter> try adding this after your fgets call: strtok(arr, "\n");
[10:50:26] <dave0> the_lanetly_052: what are you trying to calculate?
[10:51:19] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[10:53:10] <Xeroine> greeter: it breaks up the string in tokens, why would I want that?
[10:53:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:54:21] <dave0> Xeroine: it's a clever trick to remove the \n
[10:54:42] <dave0> i think greeter has done some code golf :-)
[10:55:09] <greeter> i haven't actually, just read a lot of stackoverflow because of my own not so great coding abilities :-P
[10:55:56] <dave0> :-)
[10:56:32] <greeter> always wanting to learn more though. trying to write a text adventure in c/c++ to learn more about coding
[10:57:29] <dave0> do you know infocom ?
[10:58:02] <greeter> oh yeah lol. they were the inspiration for me wanting to code a text adventure. not hugely familiar with them, only tried a few games, lost them all :-P
[10:58:59] <dave0> nice :-)
[10:59:10] <dave0> except the lost part!
[10:59:42] <greeter> eh text adventures can be tough. plus infocom had unique copy protection that would make their games almost unwinnable without having purchased the game. not an issue in the internet age of course
[11:00:57] *** Joins: kts (~kts@103.73.237.220)
[11:01:35] <the_lanetly_052> dave0: I just want to get one byte from 64 bit data value.
[11:08:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[11:09:06] *** Quits: Asszi (~quassel@2a02:ab88:2a00:6d00::ae7) ()
[11:09:59] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Read error: Connection reset by peer)
[11:10:09] *** Quits: kts (~kts@103.73.237.220) (Quit: Konversation terminated!)
[11:11:07] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[11:13:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[11:14:44] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[11:14:46] <Dean> hello
[11:14:54] <greeter> hello
[11:15:08] <Dean> a greeter bot?
[11:15:16] <dave0> the_lanetly_052: you don't need a cast ..  uint8_t new_val = val & 0xff;   will work
[11:15:17] <greeter> nope, i'm an actual person
[11:15:27] <Dean> oh! haha, hello.
[11:15:28] <the_lanetly_052> thanks dave0
[11:15:39] <dave0> the_lanetly_052: you don't really need the & 0xff either, but i personally like it .. it would be a style thing though
[11:16:00] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:16:09] <dave0> the_lanetly_052: uint8_t new_val = val;   would work
[11:17:30] *** Joins: Dean_ (~Dean@165-73-119-36.ip.afrihost.capetown)
[11:22:46] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:23:36] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:23:52] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:24:22] *** Joins: oakyy (~oaky@2001:6b0:1:1041:a603:17b4:115e:2e51)
[11:25:04] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:26:52] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:30:31] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[11:30:55] *** Joins: tejr (~tejr@user/tejr)
[11:31:10] *** Joins: Major_Biscuit (~MajorBisc@c-001-018-027.client.tudelft.eduvpn.nl)
[11:31:12] *** Joins: Darkcoal (~user@user/Darkcoal)
[11:31:55] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:05] <Xeroine> dave0: oh thx
[11:34:06] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:35:46] *** Joins: rcoote (~rcoote@2a02:908:690:a140:1e96:bdd4:cd2c:bd5a)
[11:36:03] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[11:36:48] *** Quits: alch (~alch@151.68.215.252) (Read error: Connection reset by peer)
[11:37:11] *** Quits: dea_ (~dea@213.128.80.36) (Ping timeout: 256 seconds)
[11:38:13] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[11:38:38] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[11:39:48] *** Joins: alch (~alch@151.36.236.237)
[11:41:32] <greeter> well i just found out that although you can have void functions, you oddly can't have void variables :-)
[11:42:35] *** Joins: Rounin (~david@84.212.130.215)
[11:43:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[11:45:32] *** Joins: kajiryoj- (~kajiryoji@180.160.50.152)
[11:47:39] *** Quits: nyjets (~zz@2001:8003:1780:7100:213a:8944:d5a6:c78c) (Quit: WeeChat 1.1.1)
[11:49:43] <beastie> greeter: do you find a use of that?
[11:50:04] <greeter> i was trying to enter function definitions, forgot the brackets
[11:50:49] *** Joins: Hexmind_ (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[11:50:57] <beastie> you mean the parenthesis of the parameter list, or the braces that delimit the body
[11:51:24] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[11:51:47] <greeter> the parenthesis of the parameter list
[11:54:08] *** Joins: badsektor (~badsektor@user/badsektor)
[11:55:23] *** Joins: justAstache4 (~justache@user/justache)
[11:55:47] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (Quit: ZNC 1.8.2 - https://znc.in)
[11:55:56] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[11:55:58] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:57:20] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 256 seconds)
[11:57:21] *** justAstache4 is now known as justAstache
[11:59:36] *** Joins: kts (~kts@103.73.237.220)
[11:59:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:02:09] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[12:02:09] *** Quits: Dean_ (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[12:03:25] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:04:41] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:06:27] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:06:56] *** Joins: r0057er[m] (~r0057erma@2001:470:69fc:105::1:d7f5)
[12:07:49] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Quit: Lost terminal)
[12:08:16] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:08:57] <beastie> so you had something like: void a { b; }  /* for this to be a correct declaration, the semicolon should be outside the braces. */
[12:09:32] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[12:09:53] <greeter> i was just trying to define the function, but instead of void down(); i just had void down;
[12:10:00] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:10:00] <beastie> and of course, the type shouldn't be void.... /* you shouldn't initialize a void variable */
[12:10:38] <beastie> ah.... ok.... that's incorrect... of course... what is the reason to create a void variable if you cannot assign it a value.
[12:10:52] <greeter> exactly lol
[12:11:04] <beastie> nor evaluate it.... :)
[12:11:15] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[12:11:16] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[12:11:38] <greeter> correct me if i'm wrong though (still struggling with learning the language). you can have a void pointer, correct?
[12:11:44] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:12:26] <beastie> you can have a pointer to void.... yes.... but that pointer cannot be derreferenced, without casting it to a valid pointer first.
[12:13:01] <greeter> is that the case even if it points to a void function?
[12:13:22] <beastie> for evident reasons, you cannot either to pointer arithmetic with it.... as the pointed type (void) has no size, so there's no clear idea of how pointer arithmetic should manipulate it
[12:13:34] <greeter> that makes sense
[12:13:49] <beastie> a void function is a function that returns void..... so a pointer to a void function is not a void pointer.
[12:13:57] <greeter> ah i see
[12:14:37] <beastie> there's no problem in this: void (*callback)(/* parameter declarations here */);
[12:15:09] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.65) (Ping timeout: 256 seconds)
[12:15:16] <beastie> callback will be a pointer to a function that takes the parameters specified in the parameter list and returns void (this is, a procedure, not a function)
[12:15:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:15:35] <greeter> ah, i think i follow
[12:15:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:16:04] *** Joins: moog_ (~moog@107.126.53.51)
[12:16:04] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:16:35] <beastie> you can have even an array of pointers like: void (callbacks[10])(int dumb1, double dumb2);
[12:16:45] <beastie> sorry...
[12:16:54] <beastie> you can have even an array of pointers like: void (*callbacks[10])(int dumb1, double dumb2);
[12:17:17] <beastie> that will be an array of ten pointers to functions that take two parameters and return nothing.
[12:17:29] <greeter> i tried that earlier tonight actually while coding my game. was trying to pass the array off to a function to make all the characters in the array lower case. i couldn't make it work though so i wound up doing something else
[12:17:44] *** Quits: kilobyte_ch (~kbch@77.109.171.24) (Ping timeout: 256 seconds)
[12:18:08] <beastie> did you use void * pointers?
[12:18:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:18:24] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:18:33] *** Quits: moog__ (~moog@98.97.87.156) (Ping timeout: 256 seconds)
[12:18:59] *** Quits: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se) (Remote host closed the connection)
[12:19:17] *** Joins: kilobyte_ch (~kbch@77.109.171.24)
[12:19:20] *** Joins: pulse (~pulse@user/pulse)
[12:19:23] <greeter> i wound up using a line of code that someone wrote in c++ which i'm even weaker in than c to be honest, but i figure c++ style strings are probably going to be a little easier to work with for the most part
[12:19:23] *** Joins: King_julian (~King_juli@41.23.68.86)
[12:19:31] <beastie> look that I made a mistake... probably you made the same... to use only the array, and not specify that it is an array of pointers... you cannot have an array of functions, just an array of pointers to functions.
[12:19:32] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 250 seconds)
[12:20:00] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[12:20:15] <beastie> if you can share part of your code, probably I could help.... but from this point I'm lost.
[12:20:53] <greeter> well, i have code now that makes the text all lower case, so i'm good to go there. in fact once i got past that part the rest of what i have now came pretty effortlessly :-D
[12:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:21:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[12:21:26] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[12:24:47] *** Quits: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[12:24:58] *** Joins: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[12:25:59] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-db3-6cce-dc3c-11dd.fixed6.kpn.net)
[12:28:06] *** Quits: hizon (~zxq@43.129.208.183) (Read error: Connection reset by peer)
[12:29:44] *** Quits: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de) (Client Quit)
[12:30:10] *** Quits: randy408[m] (~randy408m@2001:470:69fc:105::2f5e) (Quit: You have been kicked for being idle)
[12:31:20] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Ping timeout: 256 seconds)
[12:32:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:32:03] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[12:32:22] *** Joins: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[12:37:53] *** Joins: kts (~kts@103.73.237.220)
[12:43:00] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Read error: Connection reset by peer)
[12:44:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[12:45:53] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:46:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[12:47:58] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:53:25] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:53:48] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:55:04] <badsektor> could anyone help with this? https://ideone.com/qNV9A7 .. i think the problem is about long integers
[12:55:21] <badsektor> it is for advent of code 2020 day 18. it says the answer is too low
[12:55:36] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:56:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[12:56:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:00:23] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[13:00:47] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[13:02:25] *** Joins: iomari891 (~iomari891@197.210.52.7)
[13:03:06] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:08:23] <clarity> badsektor: What is it supposed to do?
[13:09:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:11:51] *** Joins: plastico (~plastico@neomutt/plastico)
[13:19:02] *** Joins: basedovertime (~basedbase@41.62.4.214)
[13:20:32] <badsektor> clarity, it is supposed to do the inside of parantheses first, but i found the problem, it is not doing it right if the line begins with a '(' , i am fixing it now
[13:23:17] *** Quits: basedovertime (~basedbase@41.62.4.214) (Ping timeout: 240 seconds)
[13:23:18] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:24:50] <badsektor> ok i fixed it: https://ideone.com/5zncoL
[13:38:25] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:38:45] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[13:41:57] *** Quits: rcoote (~rcoote@2a02:908:690:a140:1e96:bdd4:cd2c:bd5a) (Ping timeout: 240 seconds)
[13:43:28] *** Quits: malloy (~jimery@116.30.221.173) (Quit: WeeChat 3.0)
[13:44:22] <Xeroine> is the only thing that the "volatile" keyword does in C is just not store the variable in register or are there other optimizations it's preventing as well?
[13:45:32] <beastie> normally values are not cached.... the value is always got from memory...
[13:45:51] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 252 seconds)
[13:46:30] <Xeroine> I thought the compiler puts some variables in registers automatically like for for loops for example, no?
[13:46:36] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[13:47:04] <beastie> it depends on the compiler.... indeed.... today, the way compilers produce code is very complex.
[13:48:56] *** Joins: kts (~kts@103.73.237.220)
[13:48:57] <beastie> cpus today have sets of registers, all with the same purpose.... so some of them are dedicated to function arguments, some to temporary variables, some must be preserved to function calls.... etc.
[13:49:41] <Xeroine> ok anyways what about my initial question?
[13:49:44] <beastie> it's common for a compiler to operate a pool of registers (more if the cpu supports register versioning)
[13:50:32] <beastie> the one of the newlines.... or before?
[13:50:52] <beastie> what question are you referring to?
[13:50:56] <Xeroine> no I mean are there other optimizations volatile keyword would be preventin?
[13:51:01] <Xeroine> preventing*
[13:51:32] <beastie> I've just told you..... depends on the compiler..... and the cpu architecture.... I can repeat my answer... but this is not going to change it.
[13:51:33] <NRK> the volatile keyword makes it so the compiler must follow the C abstract machine
[13:51:40] <NRK> so yes, it's preventing other optimizations as well
[13:52:00] <Xeroine> I thought you're just talking about registers
[13:52:11] <Xeroine> oh
[13:54:00] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-db3-6cce-dc3c-11dd.fixed6.kpn.net) (Quit: WeeChat 3.4)
[13:57:08] <NRK> in fact it prevents ANY optimization which doesn't corespond 1:1 with the C abstract machine.
[13:57:17] <NRK> ,c99footnote114
[13:57:32] *** Quits: trn (jhj@sourcehut/user/trn) (Ping timeout: 240 seconds)
[13:57:42] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:57:53] <NRK> aright, idk how to print footnote...
[13:59:40] *** Joins: trn (jhj@sourcehut/user/trn)
[14:00:37] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[14:02:09] *** Joins: random-nick (~random-ni@87.116.176.196)
[14:03:46] *** Quits: oakyy (~oaky@2001:6b0:1:1041:a603:17b4:115e:2e51) (Ping timeout: 260 seconds)
[14:08:35] *** Joins: oakyy (~oaky@2001:6b0:1:1041:1e09:7b01:2c71:3f98)
[14:08:47] *** Joins: ismdeep (~ismdeep@50.7.61.96)
[14:09:35] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[14:09:53] *** Joins: unknow (~i.am@user/marlboro)
[14:10:41] <sham1> , c99 footnote.114
[14:10:42] <candide> http://www.iso-9899.info/n1256.html#FOOTNOTE.114 The implementation may place a const object that is not volatile in a read-only region of storage. Moreover, the implementation need not allocate storage for such an object if its address is never used.
[14:12:11] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[14:13:54] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 252 seconds)
[14:14:29] *** Joins: gog` (~ada@user/gog)
[14:14:34] *** gog` is now known as gog
[14:14:56] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[14:14:57] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[14:15:00] *** Quits: ncrowl (~ncrowl@83-233-96-141.cust.bredband2.com) (Ping timeout: 252 seconds)
[14:16:34] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[14:16:45] *** Joins: Waynes (~Waynes@user/waynes)
[14:16:51] *** Joins: ncrowl (~ncrowl@83-233-96-189.cust.bredband2.com)
[14:17:14] *** Quits: ismdeep (~ismdeep@50.7.61.96) (Remote host closed the connection)
[14:17:32] *** Joins: ismdeep (~ismdeep@50.7.61.96)
[14:17:52] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 256 seconds)
[14:18:48] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:20:09] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[14:20:38] *** Quits: ismdeep (~ismdeep@50.7.61.96) (Client Quit)
[14:20:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[14:22:11] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[14:24:50] *** Joins: fapple (~user@193.32.249.138)
[14:24:50] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[14:26:12] <NRK> looks like there's difference between draft and final edition
[14:26:20] <NRK> i meant to print 116 on the draft
[14:26:26] <NRK> ,c99 footnote.116
[14:26:26] <candide> http://www.iso-9899.info/n1256.html#FOOTNOTE.116 A volatile declaration may be used to describe an object corresponding to a memory-mapped input/output port or an object accessed by an asynchronously interrupting function. Actions on objects so declared shall not be ``optimized out'' by an implementation or reordered except as permitted by the rules for evaluating expressions.
[14:27:17] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[14:27:28] <roxlu> I'm about to start a project that will be plugin based (via shared libs). Something that I need to consider is how a plugin is configured. Most libs use some sort of dictionary type. I'm considering to use a per-plugin "settings" object that is passed from the core to the plugin as a `void*`. The plugin will cast it to the correct type.  Would this be OK? or are there big reasons not to use this?
[14:30:19] *** Quits: jaeckel_ (~jaeckel@sleipnir.jaeckel.eu) (Changing host)
[14:30:19] *** Joins: jaeckel_ (~jaeckel@user/jaeckel)
[14:30:24] *** jaeckel_ is now known as jaeckel
[14:39:09] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[14:39:20] *** Quits: King_julian (~King_juli@41.23.68.86) (Ping timeout: 272 seconds)
[14:41:13] *** Joins: Klinda (~superleag@user/klinda)
[14:41:50] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[14:42:54] *** Joins: kts (~kts@103.73.237.220)
[14:43:38] *** Quits: bzng (~bzng4@188-23-237-6.adsl.highway.telekom.at) (Quit: Leaving)
[14:48:35] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:50:02] *** Joins: ztx (~ztx@user/ztx)
[14:51:06] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:51:25] *** Quits: ztx (~ztx@user/ztx) (Quit: WeeChat 3.4)
[14:51:41] *** Joins: mrig (~mrig@user/mrig)
[14:51:43] *** Joins: ztx (~ztx@user/ztx)
[14:52:39] *** Quits: ztx (~ztx@user/ztx) (Client Quit)
[14:52:56] *** Joins: ztx (~ztx@user/ztx)
[14:53:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:54:01] *** Joins: King_julian (~King_juli@41.23.68.86)
[14:55:34] *** Quits: kts (~kts@103.73.237.220) (Read error: Connection reset by peer)
[14:57:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[15:03:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[15:05:17] *** Quits: oakyy (~oaky@2001:6b0:1:1041:1e09:7b01:2c71:3f98) (Ping timeout: 240 seconds)
[15:05:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[15:05:56] *** Quits: clamiax (~clamiax@net-109-116-207-237.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[15:08:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:09:02] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Ping timeout: 240 seconds)
[15:18:24] *** Joins: kts (~kts@103.73.237.220)
[15:19:48] *** Quits: bramhaag (~bramhaag@134.195.121.39) (Quit: The Lounge - https://thelounge.chat)
[15:20:58] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:21:22] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:21:24] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:21:40] *** Joins: ekathva (~ekathva@n14jpjdc5hpackvwy-1.v6.elisa-mobile.fi)
[15:28:48] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:29:15] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[15:30:34] *** Joins: pulse (~pulse@user/pulse)
[15:30:46] *** Joins: badsektor (~badsektor@user/badsektor)
[15:31:22] *** Joins: constxd_ (~brad@142.134.78.128)
[15:36:13] *** Joins: ekathva_ (~ekathva@85-76-69-127-nat.elisa-mobile.fi)
[15:36:13] *** Quits: alch (~alch@151.36.236.237) (Read error: Connection reset by peer)
[15:36:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:36:57] *** Quits: ekathva (~ekathva@n14jpjdc5hpackvwy-1.v6.elisa-mobile.fi) (Ping timeout: 240 seconds)
[15:37:36] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 272 seconds)
[15:38:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[15:38:40] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:40:08] *** Joins: alch (~alch@151.38.248.17)
[15:42:49] <constxd_> kings
[15:46:28] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[15:48:59] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (Quit: <capodecima> i dont say any more word without my loyer jenova)
[15:49:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:53:09] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[15:53:13] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[15:53:14] *** Quits: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird) (Excess Flood)
[15:53:20] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:53:33] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[15:55:33] *** Joins: DrinkyBird (~drinkybir@idlerpg/player/DrinkyBird)
[15:57:18] *** Quits: King_julian (~King_juli@41.23.68.86) (Ping timeout: 252 seconds)
[15:57:27] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:57:36] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[15:58:17] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 240 seconds)
[15:58:35] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[16:00:12] *** Quits: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:00:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:01:51] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:08:46] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[16:09:13] *** Joins: ironman_ (~ironman@49.36.48.112)
[16:09:52] *** ironman_ is now known as ironman
[16:10:06] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[16:10:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:11:36] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 252 seconds)
[16:15:15] *** Quits: kajiryoj- (~kajiryoji@180.160.50.152) (Quit: ZNC 1.8.2 - https://znc.in)
[16:16:12] *** Joins: kajiryoj- (~kajiryoji@180.160.50.152)
[16:16:42] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:18:59] *** Joins: AmR (~AmREiSa@156.199.236.198)
[16:20:40] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[16:20:58] *** Joins: rany (~rany@user/rany)
[16:27:23] *** Joins: remavas (~Remavas@user/remavas)
[16:29:00] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[16:30:04] *** Joins: kts (~kts@103.73.237.220)
[16:30:56] *** Joins: oakyy (~oaky@2001:6b0:1:1041:5689:65ab:4784:52bd)
[16:34:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:35:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (Client Quit)
[16:36:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:40:57] *** Quits: kajiryoj- (~kajiryoji@180.160.50.152) (Quit: ZNC 1.8.2 - https://znc.in)
[16:42:52] *** Joins: kajiryoj- (~kajiryoji@180.160.50.152)
[16:43:21] *** Quits: remavas (~Remavas@user/remavas) (Quit: WeeChat 2.8)
[16:44:44] *** Quits: kts (~kts@103.73.237.220) (Ping timeout: 272 seconds)
[16:46:01] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:46:17] *** Joins: constxd (~brad@142.134.78.128)
[16:46:28] <constxd> kings
[16:47:03] *** joev1 is now known as joev
[16:49:29] *** Quits: ironman (~ironman@49.36.48.112) (Quit: Leaving)
[16:49:31] *** Quits: sokan (~sokan@85.73.229.195) (Quit: Reality.is.a.lie)
[16:52:42] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:55:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[16:56:38] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:05:03] *** Joins: bnchs (~bnchs@160.178.3.121)
[17:05:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-52-171.cspire.com)
[17:07:14] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:10:12] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:10:29] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:11:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:12:06] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 252 seconds)
[17:15:55] <Inline__> the implementation need not allocate storage for such an object if it's address is never used in allocation context.
[17:16:05] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[17:16:07] <Inline__> otherwise ofc the readonly address will be used right ?
[17:16:37] *** Inline__ is now known as Inline
[17:17:28] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[17:17:36] <bnchs> ,cc pthread_mutex_init(getenv("SHELL"))
[17:17:40] <candide> bnchs: [warning: implicit declaration of function 'pthread_mutex_init' [-Wimplicit-function-declaration]]  Success (no output).
[17:17:41] <bnchs> oops
[17:17:41] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:17:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:21:11] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:22:47] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[17:24:01] *** Quits: gog (~ada@user/gog) (Killed (osmium.libera.chat (Nickname regained by services)))
[17:24:25] *** Joins: Guest7627 (~ada@user/gog)
[17:24:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:24:49] <pragma-> you can `,cc -lpthread #include <pthread.h> ...` but what is the deal with your obsession with the SHELL env?
[17:25:12] *** Joins: semeion (~semeion@user/semeion)
[17:26:00] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:26:02] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[17:26:35] <bnchs> pragma-, i'm bored
[17:26:41] <bnchs> also i wanna corrupt environment variables
[17:28:12] *** Joins: wand (~user@gateway/tor-sasl/wand)
[17:33:28] <sham1> pragma-: doesn't ,cc accept -pthread
[17:33:38] <sham1> As in the actual flag you're supposed to use
[17:33:52] <pragma-> whatever the flag is
[17:34:01] * pragma- shrugs with utmost paramount extreme indifference.
[17:34:39] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[17:34:52] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:55] *** Joins: utis (~utis@84.208.160.26)
[17:35:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[17:35:06] *** Joins: Amnesia (~Amnesia@user/amnesia)
[17:35:09] *** Joins: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl)
[17:35:19] <dave0> i'd like to see a multithreaded irc one liner
[17:35:23] <pragma-> Why does pthread get its own flag anyway?
[17:35:48] <sham1> Because pthreads is complicated imagines me
[17:36:03] <dave0> it's insecure and needy?
[17:36:04] <Amnesia> question, how can I use LD_LIBRARY_PATH to use an alternative linker / glibc ? LD_LIBRARY_PATH=$PATH_TO_OLDER_GLIBC_LIB_FOLDER:/usr/lib:/lib my_application is segfault for me;[
[17:36:20] <sham1> You can't
[17:36:38] <fizzie> There's a multithreaded one-liner right there in my candide buffer.
[17:37:02] <Amnesia> sham1: because by default the path to the linker is hardcoded ?
[17:37:10] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Ping timeout: 250 seconds)
[17:37:29] <sham1> Yes
[17:37:33] <fizzie> Granted, it's not *much* of a one, but I think it still qualifies.
[17:37:36] <dave0> fizzie: sung to the tune of horror movie by the skyhooks ?
[17:37:58] <fizzie> It was just a short _Thread_local demonstration.
[17:38:00] <fizzie> ,cc -pthread #include <pthread.h> _Thread_local int i = 21; void *t(void *unused) { printf("[child: i=%d", i); i = 22; printf("->%d]", i); return 0; } int main(void) { pthread_t tt; pthread_create(&tt, 0, t, 0); pthread_join(tt, 0); printf(" [main: i=%d", i); i = 22; printf("->%d]", i); }
[17:38:02] <candide> fizzie: [child: i=21->22] [main: i=21->22]
[17:38:42] <Amnesia> sham1: is there any other approach.. (apart from running the whole lot in a container) ?
[17:39:06] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[17:40:11] <bnchs> recompiling the code?
[17:40:48] <dave0> Amnesia: maybe gcc --sysroot    https://gcc.gnu.org/onlinedocs/gcc-4.6.0/gcc/Directory-Options.html
[17:41:31] <fizzie> I imagine it's `-pthread` so that it can do more than just link an extra library, such as predefine macros (on this system, it adds _REENTRANT) and maybe change the code generation too.
[17:41:36] <Amnesia> bnchs: basically this is an electron app ;[
[17:41:43] <bnchs> you are dead
[17:41:50] <bnchs> recompile the ENTIRE browser
[17:42:01] <Amnesia> xD
[17:42:10] <Amnesia> it's fucking MICROSOFT TEAMS, fml
[17:42:13] <bnchs> should take a day or more
[17:42:20] <Amnesia> but running this shit ina container is a pita as well
[17:42:44] <bnchs> it depends on how the electron build was built
[17:43:01] <Amnesia> it's a static binary ;[
[17:43:16] <bnchs> you mean statically linked?
[17:43:43] <Amnesia> yep
[17:44:00] <Amnesia> at least that's what ldd is telling me
[17:44:07] <bnchs> LD_LIBRARY_PATH is for dynamically linked programs
[17:44:23] <Amnesia> yet it does come with some shared libraries
[17:44:32] <Amnesia> and probably they rely on a particular glibc version
[17:45:26] <Amnesia> I guess statically linked binaries can also perform dlopen calls :p
[17:45:49] <bnchs> yes
[17:45:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:46:16] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 250 seconds)
[17:47:05] <Amnesia> can I assume that the path to the linker is then also still hardcoded?
[17:47:19] <sham1> You could also patch the bi ar
[17:47:22] <sham1> Binary
[17:47:56] <sham1> I just wonder why you are doing this. Using MS Teams is already enough of a punishment, why would you want to change the linker as well
[17:48:39] <Amnesia> sham1: well, it's either doing this, or not updating glibc
[17:48:47] <Amnesia> and my employer forces me to use teams..
[17:49:15] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[17:50:11] *** Joins: ramzy (~ramzy@154.180.141.221)
[17:50:13] <sham1> Yeah… I'd containerise it if I were you
[17:50:57] *** Joins: greatcoof (~greatcoof@154.180.141.221)
[17:51:06] *** Joins: etehhk (~etehhk@154.180.141.221)
[17:51:07] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[17:51:15] *** Joins: UNIXCHAD_ (~UNIXCHAD_@154.180.141.221)
[17:51:18] *** Quits: UNIXCHAD_ (~UNIXCHAD_@154.180.141.221) (Client Quit)
[17:51:24] *** Quits: etehhk (~etehhk@154.180.141.221) (Client Quit)
[17:51:28] *** Quits: greatcoof (~greatcoof@154.180.141.221) (Client Quit)
[17:52:53] <Amnesia> ugh, fml
[17:53:00] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-65ce-26ee-8af2-eab4.fixed6.kpn.net)
[17:53:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:53:55] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Read error: Connection reset by peer)
[17:58:50] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:59:02] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[17:59:21] *** Joins: pulse (~pulse@user/pulse)
[17:59:47] *** Joins: brad_mssw (~bhouse@172.110.173.1)
[17:59:58] <bnchs> Amnesia, i would quit if i were you
[18:00:09] <Amnesia> xD
[18:00:13] <bnchs> especially when my employer tends to force microsoft things on me
[18:04:54] <Xgc> Amnesia: Why do you need a different loader?
[18:05:13] <Xgc> Amnesia: What problem are you trying to solve?
[18:05:23] <Amnesia> Xgc: cause I guess a glibc-x loader isn't compatible with glibc-y ?
[18:05:42] <Amnesia> Xgc: see the comments @ https://aur.archlinux.org/packages/teams
[18:05:54] <bnchs> this is what proprietary software gets you
[18:05:56] *** Joins: Alhazred (~Alhazred@130.245.70.36)
[18:05:59] <Xgc> Amnesia: Are you saying you built the application on one system and hoped you could run it anywhere, even with a different glibc?
[18:06:07] <Amnesia> no, I am not
[18:06:13] <Amnesia> bnchs: word -.-
[18:06:23] <Xgc> Amnesia: Then why are you using different libraries for glibc?
[18:06:40] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:06:40] <bnchs> Xgc, microsoft built teams with outdated glibc
[18:06:44] <Amnesia> ^
[18:06:55] <bnchs> unfortunately this means you can't use it unless you downgrade glibc
[18:06:59] <bnchs> or containerize it
[18:07:03] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[18:07:14] <Xgc> Amnesia: So your answer should have been Yes, the app was pre-built on one system and you're running it on an incompatible system.
[18:07:37] <Amnesia> well, it's all about framing in that regard, I guess :)
[18:08:00] <bnchs> i wouldn't be surprised if this was intentional
[18:08:11] <bnchs> either way if you want to use M$ teams, use the web version
[18:08:23] <Amnesia> bnchs: why would it be?
[18:08:55] <bnchs> what do you mean
[18:09:25] <Xgc> Intentionally in the sense that they know they have this requirement/restriction.
[18:09:32] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[18:09:35] <Amnesia> they literally closed the ticket, so perhaps :)
[18:09:38] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[18:10:03] <bnchs> they want to force people into windows again
[18:10:08] <Xgc> They're not about to provide binaries for every potential version of some library.
[18:10:28] <Xgc> and they don't intent to make this less rigid.
[18:10:51] <bnchs> well i guess just use the web version
[18:11:00] <Xgc> The container suggestion seems to be the best choice.
[18:11:13] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:11:16] <Xgc> Unless you can use the web version.
[18:11:38] <dave0> whats the linux loader? /lib/ld-linux.so ?
[18:11:38] *** Quits: nostar (~nostar@107.175.102.245) (Quit: Leaving)
[18:12:06] <dave0> can you do   /different/path/lib/ld-linux.so /path/to/whatever/teams/is.exe
[18:12:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[18:12:55] <Xgc> Too bad you can't use some form of LD_PRELOAD
[18:13:17] <Amnesia> yep, that was my initial idea :P
[18:13:21] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[18:13:32] <bnchs> but one thing is that they unlisted the download option for gnu/linux
[18:13:35] <bnchs> in their official page
[18:13:51] <bnchs> was it always there?
[18:15:01] <Amnesia> ENOCLUE
[18:15:06] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-65ce-26ee-8af2-eab4.fixed6.kpn.net) (Quit: Leaving)
[18:15:15] <bnchs> https://www.microsoft.com/en-us/microsoft-teams/download-app
[18:15:16] <candide> Title of bnchs's link: Download Microsoft Teams Desktop and Mobile Apps | Microsoft Teams
[18:16:21] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:17:06] <dave0> is container a fancy word for chroot ?
[18:17:11] *** Joins: luvings (~nortoh@user/nortoh)
[18:18:01] <koollman> dave0: a bit fancier than that. it's a chroot, but with process/network/resource isolation, too
[18:20:54] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:21:34] <dave0> koollman: thanks
[18:22:26] *** Joins: kts (~kts@103.73.237.37)
[18:24:22] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[18:24:41] <koollman> dave0: https://www.redhat.com/sysadmin/building-container-namespaces gives you some in-depth (yet short) explanation. maybe a bit too intense as a first discovery of containers. But it has all the concepts right there so you can look them up further if you want to
[18:25:03] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:25:22] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:26:57] <dave0> cool, i'll have a look, thanks koollman
[18:28:19] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:28:54] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:30:34] <SaltHilStroller_> Was just looking at some ARM assembly and saw: `mv pc, r0`. Why would that be done over `b r0` ?
[18:30:39] *** Joins: epony (epony@user/epony)
[18:32:41] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3410:a232:bb15:4ac0)
[18:32:41] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3410:a232:bb15:4ac0) (Changing host)
[18:32:41] *** Joins: skapata (~Skapata@user/skapata)
[18:33:31] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:36:51] *** Joins: ztx (~ztx@user/ztx)
[18:43:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[18:44:41] *** Joins: dea_ (~dea@213.128.80.36)
[18:44:46] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 256 seconds)
[18:45:10] *** Quits: p0g0 (~p0g0@user/p0g0) (Quit: p0g0)
[18:45:12] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[18:46:05] *** Joins: nvmd (~weechat@user/nvmd)
[18:46:44] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[18:48:28] <pragma-> Was just looking at this channel and saw: `mv pc, r0`. Why would that be asked here instead of `#asm` ?
[18:48:55] *** Joins: p0g0 (~p0g0@user/p0g0)
[18:49:43] *** Quits: brad_mssw (~bhouse@172.110.173.1) (Quit: Leaving)
[18:51:09] <bnchs> was just looking at this channel saw: your face. why would that be here instead of some network else
[18:52:38] <SaltHilStroller_> I wasn't aware of the channel! But also looking at it, it's significantly smaller than this one. Thought people here would potentially have insight. I'll ask there too
[18:53:01] <fizzie> ARM `b r0` is just a branch to label "r0", not a jump to a register value.
[18:53:49] <SaltHilStroller_> fizzie: Err `bx r0` then
[18:55:51] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[18:56:47] <fizzie> (Wait, there's both an #asm and an ##asm on Libera? That's not confusing at all.)
[18:57:32] <MrMobius> was "mv pc, r0" in a disassembly? on some architectures PC is just another register like r0 so a jump is actually a mov instruction
[18:58:14] <MrMobius> and the disassembler may not work backward to replace it with a jump or whatever pseudoinstruction generated it
[18:59:52] <SaltHilStroller_> Ah ##asm is a little larger at least
[18:59:54] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[19:00:27] *** Quits: kts (~kts@103.73.237.37) (Ping timeout: 252 seconds)
[19:00:48] <SaltHilStroller_> MrMobius: Nope, this was hand-written assembly
[19:01:03] <fizzie> If it was literally "mv" rather than "mov", it must've been some weirdo dialect.
[19:01:11] <MrMobius> SaltHilStroller_, maybe he was just hardcore like that :)
[19:01:21] <SaltHilStroller_> Oops, s/mv/mov
[19:01:46] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[19:01:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:02:13] <MrMobius> like people who hand write "add $t0, $t1, $zero" in MIPS
[19:02:15] <fizzie> I guess you could decide to only use `bx` when you know in advance you might need the instruction set flip support.
[19:02:27] <SaltHilStroller_> Also, the jump is to a function, so the address is fixed
[19:03:13] <SaltHilStroller_> I guess I would have assumed using `bx` would have better performance with any kind of branch predictor / branch history block
[19:03:50] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[19:03:56] <SaltHilStroller_> but I guess if the PC is just another register, they could also just have (op == mov && rd == pc) as the the predicate for branch prediction
[19:07:58] <SaltHilStroller_> Got linked this interesting post: https://stackoverflow.com/questions/63321275/any-reason-to-use-bx-r-over-mov-pc-r-except-thumb-interwork-pre-armv7
[19:08:15] <SaltHilStroller_> Seems there is an advantage to using bx if there is hardware support for detecting it
[19:09:40] <fizzie> I'm sure it recognizes other writes to PC as branches too. AIUI it's positively commonplace to return from a (non-leaf, spilled lr) function with `pop {..., pc}`.
[19:10:44] <SaltHilStroller_> fizzie: Seems HW dependent. For Cortex-A7 at least, it explicitly mentions pop {..., pc} as not predicted: https://developer.arm.com/documentation/ddi0464/d/L1-Memory-System/L1-instruction-memory-system/Program-flow-prediction
[19:10:45] <candide> Title of SaltHilStroller_'s link: Documentation – Arm Developer
[19:11:38] <fizzie> Doesn't it say exactly the opposite?
[19:13:05] <SaltHilStroller_> "Because return-from-exception instructions can change processor privilege mode and security state, they are not predicted. This includes the LDM R<n>, {.. ,pc}^ instruction, RFE, and the MOVS pc, r14 instruction.
[19:13:05] <SaltHilStroller_> "
[19:13:23] <fizzie> That's got that ^ in there.
[19:13:37] <fizzie> Right before it says: "The following instructions cause a return stack pop if predicted: ... POP {...,pc}".
[19:13:41] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[19:13:47] <fizzie> (I guess "if predicted" still has an "if" though.)
[19:14:20] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:14:56] *** Joins: vekay (~vekay@user/vekay)
[19:15:00] <SaltHilStroller_> interesting :D
[19:15:43] <SaltHilStroller_> Looking at the R5 docs, it does say `mov pc, lr` is not predicted. Doesn't mention about from other registers though: https://developer.arm.com/documentation/ddi0460/d/Prefetch-Unit/Return-stack?lang=en
[19:18:22] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[19:19:43] *** Quits: gerwand (~gerwand@89-79-181-52.dynamic.chello.pl) (Quit: gerwand)
[19:20:05] *** Joins: strajder (~strajder@user/strajder)
[19:20:36] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[19:20:52] *** Joins: gareppa (~gareppa@user/gareppa)
[19:21:37] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[19:22:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[19:23:23] <fizzie> My take-away from this (since I guess it's gone off far enough from #c) is that *if* there are any branch prediction differences (which isn't necessarily the case), then those would favor `bx rN` and thus can't really explain why you'd use `mov pc, rN`. (But really if it was written by a person, it's not like they necessarily had a reason. Maybe the voices just told them to.)
[19:23:30] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: evlc)
[19:26:36] *** Quits: ramzy (~ramzy@154.180.141.221) (Ping timeout: 240 seconds)
[19:26:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[19:28:50] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[19:29:36] *** Quits: Major_Biscuit (~MajorBisc@c-001-018-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[19:30:06] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Quit: You have been kicked for being idle)
[19:31:30] *** Guest7627 is now known as gog
[19:34:37] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[19:36:08] *** Quits: alch (~alch@151.38.248.17) (Read error: Connection reset by peer)
[19:37:35] *** Joins: kts (~kts@103.73.237.233)
[19:39:22] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:39:35] *** Joins: alch (~alch@151.34.250.68)
[19:40:13] *** Joins: Waynes (~Waynes@user/waynes)
[19:42:25] <SaltHilStroller_> fizzie: Agreed. Doesn't seem like there's a good reason. I'll reach out to the guy, and see if he had a particular reason
[19:42:28] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[19:43:12] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[19:43:46] <pragma-> smh this network has #asm and ##asm as distinct channels? hilarious. I wonder if there's a ##c doing something unbeknownst to us.
[19:45:00] <pragma-> weird. ##c seems to be forwarding here while being unregistered with chanserv.
[19:45:05] * pragma- shrugs.
[19:48:15] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:48:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[19:48:57] <bnchs> i wouldn't recommend #asm
[19:48:59] <bnchs> maybe #arm
[19:49:07] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (Quit: WeeChat 3.0)
[19:49:10] <bnchs> or the channel for whatever architecture you have
[19:50:26] <alch> pragma-: iirc ##c was formed right after the whole Freenode debacle, who created the channel (can't remember who) didn't know that it could have been created and registered as a project/community channel under the # namespace. When they knew, #c was created and ##c redirected here.
[19:51:28] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:54:45] <MrMobius> #arm was more or less dead when i last checked
[19:54:52] <MrMobius> ##asm is very active
[19:55:36] *** Quits: Alhazred (~Alhazred@130.245.70.36) (Ping timeout: 256 seconds)
[19:55:59] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[19:56:21] *** Quits: unknow (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[19:56:26] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[19:59:37] *** Quits: zer0x (~zer0x@58.186.217.233) (Ping timeout: 240 seconds)
[20:04:43] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[20:07:09] *** Joins: mahmutov (~mahmutov@5.176.2.106)
[20:09:56] *** Quits: kts (~kts@103.73.237.233) (Ping timeout: 272 seconds)
[20:14:05] <constxd> kings
[20:15:28] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.4)
[20:19:39] *** Quits: bnchs (~bnchs@160.178.3.121) (Ping timeout: 252 seconds)
[20:20:10] *** Joins: nvmd (~weechat@user/nvmd)
[20:20:40] *** Joins: ramzy (~ramzy@102.44.102.37)
[20:22:05] <Waynes> constxd: that is not a good password
[20:22:44] <cehteh> try qu33nz :D
[20:23:30] *** Joins: masoudd (~masoudd@user/masoudd)
[20:24:52] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[20:26:22] *** Joins: savolla (~quassel@95.10.239.22)
[20:29:30] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[20:33:12] *** Joins: Betal (~Betal@user/betal)
[20:33:42] *** Joins: bnchs (~bnchs@160.178.3.121)
[20:35:48] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[20:36:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:36:51] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:37:03] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:43:12] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[20:48:59] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[20:50:39] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[20:50:41] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[20:51:37] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[20:52:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[20:53:10] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:54:03] *** Joins: pulse (~pulse@user/pulse)
[20:54:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:58:08] *** Joins: brad_mssw (~bhouse@172.110.173.1)
[20:58:22] *** Quits: iomari891 (~iomari891@197.210.52.7) (Quit: WeeChat 3.3)
[21:03:06] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[21:04:00] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[21:04:23] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:05:15] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:06:09] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[21:06:23] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:07:00] *** Joins: epony (epony@user/epony)
[21:15:32] *** Quits: fe23 (~fe23@2409:8a34:466:6010:d9bf:b2e3:3343:bae4) (Quit: fe23)
[21:15:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[21:19:39] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:20:04] <Inline> how do you spot an ICE ?
[21:24:16] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[21:25:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:25:28] <Waynes> Inline: round paint brush
[21:26:39] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[21:28:30] <bnchs> Inline, when you see their van
[21:29:48] *** Quits: savolla (~quassel@95.10.239.22) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:33:00] <drew> I am editing a driver that manages charging batteries and right now part of the device info is malloc'ed like this: batt_info = (struct oem_batt_info *)devm_kzalloc(chg->dev, sizeof(struct oem_batt_info), GFP_KERNEL);
[21:33:45] <drew> I want to turn this into a size 2 array of battery info, so I just changed the size parameter to sizeof(struct oem_batt_info) * chg->num_batteries, where num_batteries is 2
[21:33:58] *** Joins: treble (~treble@user/treble)
[21:34:58] <bnchs> so?
[21:35:12] <drew> later I print (void *)&batt_info[0] for debug and it shows up as 0x00...0010, which makes it look like it's not actually getting malloc'ed
[21:35:53] <bnchs> whats chg->num_batteries
[21:36:02] <bnchs> how do you know it's 2
[21:36:22] <drew> I am reading it from the device tree. I guess I should print that to see that it's being set correctly
[21:36:29] <drew> I'll try that now
[21:37:37] <drew> ah: [    8.506902][   T18] qti_glink_dual_charger: qti_dual_charger_parse_dt: num_batteries = 0
[21:37:53] <drew> good call, thanks for that
[21:38:36] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[21:38:43] *** Joins: Akiva (~Akiva@user/Akiva)
[21:39:40] *** Joins: joev (~joev@user/joev)
[21:40:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Excess Flood)
[21:42:44] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[21:44:04] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[21:44:26] *** Joins: JanC (~janc@user/janc)
[21:45:27] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 252 seconds)
[21:45:47] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 256 seconds)
[21:46:08] <bnchs> you're welcome
[21:46:27] *** Joins: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca)
[21:51:05] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[21:51:10] *** Joins: tiotags (~tiotags@user/tiotags)
[21:55:42] *** Quits: joev (~joev@user/joev) (Ping timeout: 272 seconds)
[21:56:04] *** Joins: joev (~joev@user/joev)
[22:02:23] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[22:06:36] *** Quits: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:06:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:07:30] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:08:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[22:12:48] *** Quits: fstd (~fstd@xdsl-78-35-88-2.nc.de) (Read error: Connection reset by peer)
[22:12:58] *** Joins: fstd (~fstd@xdsl-78-35-88-2.nc.de)
[22:13:50] *** Hexmind_ is now known as Hexmind
[22:17:57] *** Quits: dea_ (~dea@213.128.80.36) (Quit: Leaving)
[22:20:02] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:20:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:23:07] *** Joins: unlink2 (~unlink@p200300ebcf17f000a0e82b17ad9d82cf.dip0.t-ipconnect.de)
[22:24:30] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.132)
[22:26:33] *** Joins: seninha (~chatzilla@user/seninha)
[22:28:08] *** Joins: valerius (~corvus@user/theophilus)
[22:28:48] *** Quits: oxfuxxx (~oxfuxxx@37.120.204.132) (Ping timeout: 250 seconds)
[22:29:04] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[22:29:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:30:07] *** Joins: RAMIII (~RAMIII@2601:8c:801:c600::5452)
[22:31:17] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:31:32] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:31:48] *** Joins: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi)
[22:31:51] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[22:31:55] *** Quits: Cyp (~cyp@213.237.85.100) (Read error: Connection reset by peer)
[22:32:07] *** Joins: ramzy (~ramzy@102.44.102.37)
[22:32:19] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:51] *** Joins: Cyp (~cyp@213.237.85.100)
[22:33:13] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[22:34:02] *** Joins: Guest2398 (~Guest@181.91.156.18)
[22:34:31] *** Quits: ekathva_ (~ekathva@85-76-69-127-nat.elisa-mobile.fi) (Ping timeout: 256 seconds)
[22:35:43] *** Quits: RAMIII (~RAMIII@2601:8c:801:c600::5452) (Quit: WeeChat 2.8)
[22:36:30] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:41] *** Joins: oxfuxxx (~oxfuxxx@37.120.204.134)
[22:40:13] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[22:41:41] *** Joins: ekathva_ (~ekathva@n14jrd0b036rtepea-1.v6.elisa-mobile.fi)
[22:42:11] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Client Quit)
[22:42:45] *** Joins: clamiax (~clamiax@net-109-116-207-140.cust.vodafonedsl.it)
[22:44:28] *** Quits: ekathva__ (~ekathva@mobile-access-b04872-245.dhcp.inet.fi) (Ping timeout: 256 seconds)
[22:45:05] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:45:44] *** Joins: vtorri41 (~vtorri@78.197.30.2)
[22:46:17] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[22:46:36] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:47:03] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[22:47:17] *** Joins: ramzy (~ramzy@102.44.102.37)
[22:48:21] <vtorri41> hello
[22:48:24] <sham1> hello
[22:48:26] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 256 seconds)
[22:48:42] <vtorri41> i have a set of functions used in different parts of my prog
[22:48:53] <vtorri41> they have this form :
[22:49:07] <vtorri41> int foo(void *p, arguments);
[22:49:16] <vtorri41> arguments are some arguments
[22:49:25] <vtorri41> sometimes 1, or 2 or 3
[22:51:29] *** Joins: duds- (~duds-@user/duds)
[22:51:29] <ioxzev1z> ok
[22:52:05] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[22:52:34] *** Joins: bnchs__ (~bnchs@196.64.41.214)
[22:52:44] <Xgc> vtorri41 fell asleep.
[22:53:34] <vtorri41> no kids wanted me
[22:53:37] <vtorri41> so
[22:53:42] <vtorri41> question :
[22:53:48] <Xgc> Come now.  Some kids probably want you.
[22:53:50] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:53:50] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[22:54:30] <vtorri41> can i cast all these functions to
[22:54:36] *** Quits: bnchs (~bnchs@160.178.3.121) (Ping timeout: 272 seconds)
[22:55:02] *** Joins: shivesh (~shivesh@user/shivesh)
[22:55:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:55:46] *** Joins: bnchs (~bnchs@105.158.21.101)
[22:56:17] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 240 seconds)
[22:57:10] *** Quits: bnchs__ (~bnchs@196.64.41.214) (Ping timeout: 260 seconds)
[22:58:38] *** Joins: Echoz (~chris@user/echoz)
[22:59:11] <fizzie> And we would have gotten the complete question too, if it weren't for those meddling kids.
[22:59:28] *** Parts: valerius (~corvus@user/theophilus) (Leaving)
[22:59:54] <Xgc> feels more like narcolepcy.
[23:01:22] *** Quits: bnchs (~bnchs@105.158.21.101) (Ping timeout: 260 seconds)
[23:02:14] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[23:02:28] *** Joins: ramzy (~ramzy@102.44.102.37)
[23:07:55] <vtorri41> no no :)
[23:08:19] <vtorri41> so is it valid to cast these functions to int foo_t(void*p,...) ?
[23:08:35] <fizzie> You can cast all of them to *any* pointer-to-a-function type, as long as you convert it back to the correct type before calling. Or you can cast to `int (*)()` -- a pointer to a function taking unspecified parameters and returning an int -- and call through it, if and only if all the arguments are such that they're unchanged by default argument promotions, and you pass the correct types in the call.
[23:08:36] *** Joins: pulse (~pulse@user/pulse)
[23:08:56] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[23:09:32] <vtorri41> ok for no args
[23:09:45] <vtorri41> and with (vois *p,...) ?
[23:09:49] <vtorri41> void
[23:10:13] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:10:21] <fizzie> At least in a strictly conforming program, I don't think you are allowed to call them though an expression of that type. You can still convert to it, and back again, though.
[23:11:42] <Xgc> vtorri41: The type through which you call must be compatible or the behavior is undefined.
[23:11:45] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Read error: Connection reset by peer)
[23:11:52] <fizzie> C11 6.5.2.2p9: "If the function is defined with a type that is not compatible with the type -- pointed to by the expression that denotes the called function, the behavior is undefined." 6.7.6.3p12: "For two function types to be compatible -- the parameter type lists, if both are present, shall agree -- in use of the ellipsis terminator; --"
[23:12:14] <fizzie> s/p12/p15/ there
[23:13:08] <vtorri41> the maintianer of the lib has a function pointer like that :
[23:13:21] <vtorri41> int (*)(struct _Xpost_Context *)
[23:13:31] <vtorri41> and he has plentyof functions like
[23:13:42] <vtorri41> int (*)(Xpost_Context *, Xpost_Object)
[23:13:52] <vtorri41> or other args after the constext
[23:14:03] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ad4e:3a0a:e234:5531)
[23:14:33] <vtorri41> so plenty of warnings because of the cast of int (*)(Xpost_Context *, Xpost_Object) to int (*)(struct _Xpost_Context* )
[23:14:47] <Xgc> vtorri41: The behavior is not guaranteed.  But that doesn't mean the behavior doesn't do what you want on your system.
[23:14:55] <vtorri41> ihmm
[23:15:02] <fizzie> The cast itself is "okay" (in the sense that you can do that conversion, and then convert it back again).
[23:15:05] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:15:09] <vtorri41> so it's preferable to cas to int (*)() ?
[23:15:24] *** Joins: bnchs (~bnchs@105.155.205.145)
[23:15:25] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 240 seconds)
[23:15:42] <Xgc> vtorri41: The cast alone is not the issue. It's what you do with that casted value.
[23:15:48] <vtorri41> ho
[23:16:21] <vtorri41> the context gives everything to select the function with the correct arguments
[23:16:25] <vtorri41> of course
[23:16:43] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[23:16:44] <vtorri41> like variadic args
[23:17:16] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[23:17:29] *** Joins: ramzy (~ramzy@102.44.102.37)
[23:17:40] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:18:07] *** Joins: bnchs__ (~bnchs@160.178.100.251)
[23:18:09] <Xgc> vtorri41: You haven't provided enough detail to understand the program context and what you are doing.
[23:19:31] <vtorri41> ok
[23:19:40] <vtorri41> i try to write a simple code
[23:19:41] <vtorri41> 2s
[23:20:34] *** Quits: bnchs (~bnchs@105.155.205.145) (Ping timeout: 272 seconds)
[23:21:39] *** Joins: bnchs___ (~bnchs@41.141.3.217)
[23:23:01] *** Joins: z4r4 (~z4r4@89.36.78.168)
[23:23:34] <vtorri41> ok here it is :
[23:23:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[23:23:54] *** Quits: bnchs__ (~bnchs@160.178.100.251) (Ping timeout: 252 seconds)
[23:24:24] <vtorri41> https://pastebin.com/xuhYrTx2
[23:24:36] <vtorri41> so the is a func pointer
[23:25:05] <vtorri41> and plenty of calls xpost_operator_cons()
[23:25:10] *** Joins: bnchs (~bnchs@105.158.21.75)
[23:25:43] <vtorri41> the third argument is a function pointer and each time, the function pointer can have any argument
[23:25:56] <fizzie> That still doesn't really show what you *do* with the converted value. It's okay to convert `_getpix` to any function pointer type, if the code that actually *calls* the resulting function pointer converts it back to the right type before calling it.
[23:26:00] <Xgc> vtorri41: Why did you leave out type detail?
[23:26:23] <vtorri41> it's just to fix the warning
[23:26:24] *** Quits: bnchs___ (~bnchs@41.141.3.217) (Ping timeout: 256 seconds)
[23:26:27] <vtorri41> the code is working
[23:26:27] <Xgc> vtorri41: Just create a small test case which compiles and runs.
[23:26:45] <fizzie> ,cc int f(int x, int y) { return x + y; } int (*p)(int) = (int (*)(int)) f; int (*q)(int, int) = (int (*)(int, int)) p; printf("%d", q(123, 456)); // strictly conforming code, even though it generates some warnings
[23:26:47] <candide> fizzie: [warning: cast between incompatible function types from 'int (*)(int,  int)' to 'int (*)(int)' [-Wcast-function-type]  warning: cast between incompatible function types from 'int (*)(int)' to 'int (*)(int,  int)' [-Wcast-function-type]] 579
[23:26:55] <Xgc> vtorri41: What you showed is not helpful to respond to your question completely.
[23:27:18] <Xgc> vtorri41: op is undefined.
[23:27:37] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[23:27:39] <Xgc> vtorri41: The values returned by those calls are unknown.
[23:27:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:28:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[23:28:10] <vtorri41> you want to codeof xpost_operator_cons() ?
[23:28:29] <Xgc> vtorri41: Write a representative/working testcase.
[23:28:31] *** Joins: bnchs__ (~bnchs@160.177.31.32)
[23:28:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[23:28:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:28:55] <vtorri41> basically it's wht fizzie wrote
[23:29:04] <vtorri41> i just want to fix the warning
[23:29:06] *** Lord_of_Life_ is now known as Lord_of_Life
[23:29:36] *** Joins: strajder (~strajder@user/strajder)
[23:29:40] <Xgc> vtorri41: Fix the code to fix the warning.  The warning means the function pointers are not compatible.
[23:29:40] <vtorri41> i proposed to cas to int (*)(Xpost_Op_Func,...)
[23:30:09] <vtorri41> but the maintainer was not very incline to use it
[23:30:15] <Xgc> vtorri41: You need to understand the problem first.
[23:30:47] <Xgc> vtorri41: Did you mean "I want to hide the problem?"  Is that the question you meant to ask?
[23:30:53] <vtorri41> int foo1(void *, int, int;
[23:30:57] *** Joins: neo1 (~neo@103.144.161.8)
[23:30:57] *** Quits: bnchs (~bnchs@105.158.21.75) (Ping timeout: 240 seconds)
[23:31:05] <vtorri41> int foo2(void *, int, double int);
[23:31:34] <vtorri41> int bar(int (*)(void *));
[23:31:43] <fizzie> What implementations decide to warn about is really up to the implementation. Using `int (*)(Xpost_Op_Func, ...)` as the type would not make it any more or less correct in terms of standard C, but could still affect the warnings.
[23:31:47] <vtorri41> i = bar(foo1);
[23:31:55] <vtorri41> j = bar(foo2);
[23:32:02] <vtorri41> this will generate warnings
[23:32:19] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[23:32:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:32:35] *** Joins: ramzy (~ramzy@102.44.102.37)
[23:32:45] *** Joins: King_julian (~King_juli@41.23.68.86)
[23:33:10] <Xgc> vtorri41: This part of bad enough.  But you hid the even more important logic, behind bar.
[23:33:11] <vtorri41> so instead of  int bar(int (*)(void*)); i want to know if it is valid to do
[23:33:28] <vtorri41> int bar(int (*)(void *, ...));
[23:33:29] <fizzie> It's not any more or less valid.
[23:33:32] <vtorri41> that's all
[23:34:00] <Xgc> vtorri41: No.  What does bar do?
[23:34:30] <fizzie> Both are equally valid or invalid. As in, the conversion of `int (*)(void *, int, int)` to either `int (*)(void *)` or `int (*)(void *, ...)` ias allowed, but using the result to call the function isn't.
[23:35:19] <Xgc> vtorri41: If bar properly converts back to the correct type before it uses the function, you are ok.  But you need to be careful to convert properly.
[23:35:20] <vtorri41> basically, the functions foo1, foo1, etc...are stored in an array
[23:35:30] <vtorri41> foo1, foo2
[23:36:53] <vtorri41> according to thefirst pointer the correct function
[23:36:57] <vtorri41> foo1, or foo2
[23:37:07] *** Quits: neo1 (~neo@103.144.161.8) (Quit: neo1)
[23:37:08] <vtorri41> is called
[23:37:15] <vtorri41> it's a postscript interpreter
[23:37:33] <vtorri41> so writing a simple code is not easy
[23:38:06] <vtorri41> Xgc but indeed, bar converts correctly the type
[23:38:15] <vtorri41> the current code *is* working
[23:38:18] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 272 seconds)
[23:38:25] *** Quits: alch (~alch@151.34.250.68) (Ping timeout: 268 seconds)
[23:38:25] <vtorri41> i just want to fix warnings
[23:39:48] <fizzie> Just because it works doesn't make it correct. But okay, assuming it converts it to a compatible type before calling, that'd be fine. Using `int (*)(void *, ...)` instead of `int (*)(void *)` as the "storage" type will not make it any more or less correct.
[23:39:56] *** Joins: alch (~alch@151.68.224.233)
[23:40:23] <fizzie> Sometimes people use `void (*)(void)` as a "generic" function pointer type, and that too is exempted from warnings by some implementations.
[23:41:59] <sham1> ,itworks
[23:41:59] <candide> It works it works! Omg omg omg! I mean it compiles. Now what's a segfault?
[23:42:05] <vtorri41> it works with int (*)(void *),
[23:42:32] <vtorri41> works == the postscript interpreter is displaying the content of the postscript doc
[23:42:52] <vtorri41> and valgrind is not complaining
[23:43:22] <bnchs__> even with that
[23:43:27] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[23:43:40] <bnchs__> do you think a program can act out of line when presented with a malicious input
[23:43:52] <fizzie> Right, but you asked if something's "valid". There's a big gap between "does what I expect on the implementation I'm using" and "strictly conforming".
[23:44:12] <fizzie> However, based on your description, it's quite possible it *is* strictly conforming. If so, it doesn't become more or less so by switching the type.
[23:44:26] <vtorri41> ok, thank you
[23:44:41] <vtorri41> i guess that i have to test with different compilers
[23:44:49] <vtorri41> i tried gcc and vc++
[23:45:08] <vtorri41> i'll try clang too
[23:45:28] <vtorri41> i'm french, so maybe "valid" was not thecorrect word to use
[23:47:29] <vtorri41> thanks for your patience
[23:48:58] *** Joins: Guest7489 (~Guest@181.91.157.216)
[23:48:59] <fizzie> If they're currently using `int (*)(void *)` (or something similar) as the type the function pointers are stored as, using it directly to call wouldn't allow passing more than one argument, so I expect things would go rather more visibly wrong. That's maybe an argument for *not* using `int (*)(void *, ...)` -- that type might encourage people to just use the function pointer without converting it, which
[23:49:01] <fizzie> would not be conforming (even if it might work).
[23:49:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[23:51:56] *** Quits: Guest2398 (~Guest@181.91.156.18) (Ping timeout: 252 seconds)
[23:52:13] *** Quits: ramzy (~ramzy@102.44.102.37) (Remote host closed the connection)
[23:52:28] *** Joins: ramzy (~ramzy@102.44.102.37)
[23:53:34] <vtorri41> fizzie it's not an API
[23:53:45] <vtorri41> not part of the API
[23:53:55] <vtorri41> it's internal code
[23:57:15] <vtorri41> so 'people' is the maintianer
[23:59:33] <Xgc> vtorri41: "the current code *is* working".  Understand, this is a common preface to lots of problem descriptions which turns out to be quite false.  Don't take it personally when we can't make that assumption.
