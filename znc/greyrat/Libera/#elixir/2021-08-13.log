[00:02:05] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[00:14:17] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 245 seconds)
[00:17:08] *** LostKobrakai is now known as LostKobrakai[awa
[00:17:09] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:3851:4700:5830:d663:6a14:24f5) (Quit: LostKobrakai[awa)
[00:23:00] *** Joins: james_lavin (~jameslavi@50.227.197.206)
[00:32:36] *** Joins: JuanPeri (~JuanPeri@139.47.69.75)
[00:35:17] *** Quits: JuanPeri (~JuanPeri@139.47.69.75) (Client Quit)
[00:37:39] *** Joins: LostKobrakai (~LostKobra@2001:16b8:3851:4700:5830:d663:6a14:24f5)
[00:37:49] *** LostKobrakai is now known as LostKobrakai[awa
[00:38:49] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:3851:4700:5830:d663:6a14:24f5) (Client Quit)
[00:46:11] *** Joins: havenwood4 (~havenwood@about/ruby/havenwood)
[00:49:45] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Ping timeout: 248 seconds)
[00:49:45] *** havenwood4 is now known as havenwood
[00:57:30] *** Quits: baroobob (~jwbwater@98.215.243.94) (Ping timeout: 240 seconds)
[01:00:56] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 252 seconds)
[01:03:37] *** Joins: wonko (~wjc@62.115.229.50)
[01:14:41] <Poeticode> Is there a good resource/tutorial for setting up clustering via kubernetes for a phoenix project? I'm a newbie to both docker and k8s lol
[01:16:22] <Poeticode> So far I have this dockerfile and it's working nicely https://hexdocs.pm/phoenix/releases.html#containers
[01:22:26] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 268 seconds)
[01:33:33] *** Joins: hoppity (~user@user/hoppity)
[01:34:33] <hoppity> How do you guys ensure a separation of "capabilities" between regular users and admin people on your Phoenix apps?
[01:42:10] *** Quits: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[01:47:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Remote host closed the connection)
[01:47:28] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:51:22] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[01:51:50] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[01:57:14] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[02:12:51] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[02:18:25] *** Joins: Guest92 (~Guest92@2806:109f:1:a244:60a6:aaf3:8df4:3321)
[02:20:08] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[02:20:39] <Guest92> In Ecto if you pass a keyword list to the 'where' macro the keys are compared to their values using "==". Is there something similar to this but for "!="?
[02:25:27] <Guest92> I see now that it doesn't make sense
[02:33:02] *** Joins: natrys (~natrys@user/natrys)
[02:40:27] *** Quits: ircseeker3 (~nodebot@185.187.243.123) (Remote host closed the connection)
[02:44:38] *** Quits: Guest92 (~Guest92@2806:109f:1:a244:60a6:aaf3:8df4:3321) (Quit: Client closed)
[03:01:09] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[03:08:53] *** Quits: whk (uid469868@id-469868.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:31:21] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Remote host closed the connection)
[03:34:43] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[03:51:31] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:51:50] *** Joins: livoreno (~livoreno@user/notzmv)
[03:59:54] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 256 seconds)
[04:06:12] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[04:14:04] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[04:24:34] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (Ping timeout: 240 seconds)
[04:24:58] *** Quits: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1) (Ping timeout: 240 seconds)
[04:25:06] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Ping timeout: 252 seconds)
[04:25:06] *** Quits: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98) (Ping timeout: 252 seconds)
[04:25:12] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (Ping timeout: 268 seconds)
[04:25:16] *** Quits: kshlm (~kshlm@2001:470:69fc:105::b46b) (Ping timeout: 276 seconds)
[04:25:22] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Ping timeout: 272 seconds)
[04:25:23] *** Quits: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92) (Ping timeout: 272 seconds)
[04:25:24] *** Quits: monocursive[m] (~monocurs_@2001:470:69fc:105::b5c1) (Ping timeout: 256 seconds)
[04:25:32] *** Quits: EltonLeanderPint (~eltonpint@2001:470:69fc:105::c6c6) (Ping timeout: 245 seconds)
[04:25:39] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Ping timeout: 252 seconds)
[04:25:54] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Ping timeout: 276 seconds)
[04:25:54] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Ping timeout: 276 seconds)
[04:38:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[04:43:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:45:20] *** Joins: bfiedler8 (~bfiedler@2a02:168:6150:10:2ef0:5dff:fed3:908f)
[04:50:07] *** Joins: bfiedler72 (~bfiedler@2a02:168:6150:10:2ef0:5dff:fed3:908f)
[04:50:26] *** Quits: bfiedler72 (~bfiedler@2a02:168:6150:10:2ef0:5dff:fed3:908f) (Client Quit)
[05:00:06] *** Joins: bfiedler (~bfiedler@193.36.107.1)
[05:00:31] *** Quits: bfiedler8 (~bfiedler@2a02:168:6150:10:2ef0:5dff:fed3:908f) (Quit: Client closed)
[05:02:56] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 252 seconds)
[05:10:04] *** Quits: bfiedler (~bfiedler@193.36.107.1) (Remote host closed the connection)
[05:10:25] *** Joins: bfiedler (~bfiedler@193.36.107.1)
[05:12:21] *** Quits: bfiedler (~bfiedler@193.36.107.1) (Remote host closed the connection)
[05:12:35] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:25:40] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:26:39] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:26:45] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[05:27:42] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:27:55] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:30:32] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:30:39] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[05:30:47] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:31:45] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:32:14] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:32:29] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:34:47] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:35:32] *** Quits: bfiedler (~bfiedler@2a0d:d740:107::3) (Remote host closed the connection)
[05:35:45] *** Joins: bfiedler (~bfiedler@2a0d:d740:107::3)
[05:42:50] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[05:53:10] *** bfiedler is now known as threefx
[05:54:21] *** threefx is now known as bfiedler
[06:06:35] *** Joins: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92)
[06:11:56] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 256 seconds)
[06:14:44] *** Joins: kshlm (~kshlm@2001:470:69fc:105::b46b)
[06:17:46] *** Joins: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1)
[06:21:58] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[06:25:32] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[06:39:31] *** Joins: monocursive[m] (~monocurs_@2001:470:69fc:105::b5c1)
[06:39:55] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[06:47:19] *** Joins: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98)
[06:53:35] *** Quits: mahmutov (~mahmutov@37.155.41.188) (Ping timeout: 268 seconds)
[07:03:04] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[07:16:18] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[07:18:01] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 248 seconds)
[07:19:27] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[07:21:01] *** Joins: EltonLeanderPint (~eltonpint@2001:470:69fc:105::c6c6)
[08:04:43] *** Quits: james_lavin (~jameslavi@50.227.197.206) (Ping timeout: 258 seconds)
[08:09:38] *** Joins: james_lavin (~jameslavi@50.227.197.206)
[08:32:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[08:33:08] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[08:51:22] *** Quits: james_lavin (~jameslavi@50.227.197.206) (Ping timeout: 268 seconds)
[09:11:00] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 256 seconds)
[09:15:50] *** Joins: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[09:29:31] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[09:30:10] *** Joins: Rubyn (~Rubyn@user/rubyn)
[09:30:49] *** Quits: Rubyn (~Rubyn@user/rubyn) (Client Quit)
[09:31:29] *** Joins: Rubyn (~Rubyn@user/rubyn)
[09:33:15] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:34:13] *** Joins: flynn (~mcbloch@user/flynn)
[10:00:39] *** Joins: whk (uid469868@id-469868.tinside.irccloud.com)
[10:17:52] *** Quits: ur5us_ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 256 seconds)
[10:55:07] *** Joins: LostKobrakai (~LostKobra@2001:16b8:2d43:e300:f45b:79ee:73d:ff84)
[10:55:19] *** LostKobrakai is now known as LostKobrakai[awa
[10:55:22] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d43:e300:f45b:79ee:73d:ff84) (Client Quit)
[11:04:40] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:e0c8:2393:3257:8456)
[11:22:11] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:37:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:38:44] *** Joins: sgn (~sgn@user/sgn)
[11:59:05] *** Joins: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[12:13:19] *** Joins: [deleted] (~livoreno@user/notzmv)
[12:16:41] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 248 seconds)
[12:35:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:01] *** Joins: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net)
[12:42:11] *** Joins: rhn_mk1 (~rhn@user/rhn)
[12:42:40] *** LostKobrakai is now known as LostKobrakai[awa
[12:42:41] *** Quits: LostKobrakai[awa (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Quit: LostKobrakai[awa)
[12:49:45] *** Quits: Ananta-shesha (~pjetcetal@2.95.210.188) (Ping timeout: 248 seconds)
[13:05:41] *** Quits: Tongir68 (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Quit: Leaving)
[13:07:28] *** Joins: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[13:20:23] <m1dnight> I'm experimenting with Node monitors and distribution, but I'm confused about something.
[13:21:15] <m1dnight> https://exbin.call-cc.be/DugsPlatteland
[13:21:35] <m1dnight> This is my code. What I don't get is, when I turn off the network for bob@bobmachine, I see the following in my REPL:
[13:21:50] <m1dnight> (I have to rerun the test, closed window, a moment)
[13:27:12] <m1dnight>   https://exbin.call-cc.be/r/GiltsNosography
[13:27:16] <m1dnight> this is the output I see in bothw indows.
[13:27:38] <m1dnight> My question is; where is that [error] coming from? Can I ignore that, or does that propagate to somewhere?
[14:11:13] *** Quits: waz0wski (~waz0wski@hrothgar.distortion.io) (Quit: quit)
[14:12:42] *** Joins: waz0wski (~waz0wski@hrothgar.distortion.io)
[14:23:21] *** LostKobrakai is now known as LostKobrakai[awa
[14:23:21] *** Quits: LostKobrakai[awa (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Quit: LostKobrakai[awa)
[14:33:53] *** Joins: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[14:52:36] *** Quits: norrland (~norrland@92-33-164-4.customers.ownit.se) (Quit: WeeChat 3.1)
[14:52:53] *** Joins: norrland (~norrland@92-33-164-4.customers.ownit.se)
[14:55:49] *** Joins: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu)
[15:39:21] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net)
[16:07:18] *** Joins: natrys (~natrys@user/natrys)
[16:24:20] <Zarathu> benwilson512: sorry for the direct ping but i need a hail mary right now. have you guys started migrating to ~H yet? how did you deal with this? https://gist.github.com/whitepaperclip/63e96d3c7e96339771d0f4660786cda8
[16:27:47] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[16:28:11] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[16:35:01] <josevalim> Zarathu: check out let :)
[16:36:03] <josevalim> in the component do
[16:36:06] <josevalim> <%= render_block(@inner_block, child) %>
[16:36:13] <josevalim> and then
[16:36:28] <josevalim> <Wat.foo let={child} children={[@post]}>
[16:36:38] <josevalim> and it will be available as the child var from now on
[16:37:55] <josevalim> Zarathu: we are missing docs here. i will investigate
[16:38:05] <Zarathu> ahh!
[16:38:26] <Zarathu> i was digging through the src and was about to try it
[16:39:22] <Zarathu> ty sir
[16:42:06] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net) (Quit: Client closed)
[16:42:33] <Zarathu> benwilson512: sorry ;o
[17:26:21] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:27:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:35:15] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Read error: Connection reset by peer)
[17:35:55] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[17:39:17] *** Quits: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[17:42:43] *** Joins: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[18:03:09] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[18:04:15] *** Joins: phaleth (~phaleth@user/phaleth)
[18:12:55] *** Joins: Rubyn (~Rubyn@user/rubyn)
[18:13:16] *** Quits: Rubyn (~Rubyn@user/rubyn) (Client Quit)
[18:13:46] *** Joins: Rubyn (~Rubyn@user/rubyn)
[18:30:23] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:42:54] *** Joins: james_lavin (~jameslavi@64.119.131.114)
[18:48:59] *** Quits: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net) (Read error: Connection reset by peer)
[18:51:42] *** Joins: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net)
[18:57:14] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:57:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:57:46] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[19:05:13] *** Quits: james_lavin (~jameslavi@64.119.131.114) (Ping timeout: 248 seconds)
[19:06:35] *** Joins: james_lavin (~jameslavi@64.119.131.114)
[19:11:05] *** Quits: james_lavin (~jameslavi@64.119.131.114) (Ping timeout: 248 seconds)
[19:12:50] * wess waves
[19:17:08] <Nicd> hello wess 
[19:20:08] <Poeticode> Is ~H built in to latest Elixir, or is that with Surface? Zarathu
[19:20:34] <Nicd> it's in latest LiveView I think
[19:20:37] <Nicd> it's not an Elixir feature
[19:20:44] <Poeticode> Ohhh gotcha
[19:21:00] <Poeticode> I often conflate phoenix with elixir
[19:21:25] <Nicd> ah, the Rails effect
[19:22:19] *** Joins: wonko (~wjc@62.115.229.50)
[19:22:32] *** Quits: rhbvkleef (~rolfscrib@oberth.vankleef.me) (Quit: I am probably rebooting my server... Hold on!)
[19:22:49] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 248 seconds)
[19:26:40] *** Joins: rkleef (rolfscribb@pegasus.vankleef.me)
[19:27:31] *** Joins: hoppity (~user@user/hoppity)
[19:27:55] <hoppity> How can I check whether a particular radio button has been selected in my Phoenix live view template when using the form helpers?
[19:28:59] <Nicd> selected by the user?
[19:29:15] <hoppity> Nicd: yes
[19:29:40] <Nicd> there's a disconnect there because the radio button is on the client, your code on the server cannot know its state
[19:29:53] <Nicd> the client needs to have a phx-change or similar event that sends information to the backend
[19:31:06] <hoppity> Nicd: agreed, and I do have a phx-change event for live validation so I can know the radio button from the params
[19:31:56] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 252 seconds)
[19:32:17] <hoppity> Basically I need to know if radio button X is selected or whetehr the object being edited already had radio button X selected and then disable a dropdown accordingly
[19:32:28] <Nicd> so you should know if the radio button is selected based on the state on your server
[19:32:36] <hoppity> But I'm not sure if I should be using the params, changeset.changes or something else
[19:39:36] <phaleth> hoppity: make a stateful live component and trigger a rerender on radio button change during which you disable/enable the dropdown
[19:42:33] <hoppity> phaleth: thanks, this works very well when I am creating a new "entry" or "object" (don't know what we call these things) but I'm not sure how to handle the situation when the radiobutton was previously selected, the object saved and now we are editing.
[19:42:49] <hoppity> So in the second scenario the radio button is not being part of any change any more.
[19:43:47] <phaleth> change the state in a handle_event callback and the live component will re-render
[19:44:53] <hoppity> yes, that is what I do when the radio button is clicked by th user. But the tougher scenario is where now I am editing an object where the radiobuton is already pre-selected if you will.
[19:45:47] <phaleth> ok, then render the form based on that pre-selected state during the live component mount
[19:46:07] <hoppity> that's what I don't know how to do
[19:46:35] <Nicd> the radio button is selected or not based on how you render it
[19:46:44] <Nicd> you should know if it's selected or not already
[19:47:25] <hoppity> how do I tell the form helper that creates my set of radio buttons which one in particular needs to be selected?
[19:47:44] <phaleth> hoppity: based on initial state
[19:48:02] <phaleth> that you pass to the live_component function from another component
[19:48:36] <hoppity> select f, :admin_profile_id, @supervisors
[19:49:05] *** rkleef is now known as rhbvkleef
[19:49:26] <hoppity> with checkboxes it is easy because you just make checked_value = value and the checkbox is rendered as checked but with radiobuttons there is no such thing
[19:51:03] <Nicd> are you rendering based on a changeset?
[19:51:23] <hoppity> yes
[19:51:38] <Nicd> then the radio button will be selected if the value == form field value
[19:51:55] <hoppity> thank you
[19:52:06] <hoppity> I will give it another shot and report back in a little bit
[19:52:25] <Nicd> otherwise you can also give it `checked: true` argument
[19:52:40] <hoppity> Excellent, I think that is what will do it for me :)
[20:02:36] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[20:08:28] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:10:29] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[20:12:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[20:12:59] <hoppity> Thank you both for your assistance with the above. I got it now.
[20:13:18] <hoppity> Is there a way to validate in my changeset function that a field is == nil?
[20:17:36] <hoppity> I imagine I will have to make a custom validation function
[20:38:46] *** Quits: arpunk (~arpunk@dynamic-186-31-185-38.dynamic.etb.net.co) (Remote host closed the connection)
[20:39:42] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[20:40:05] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:45:39] *** Quits: LostKobrakai (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Quit: LostKobrakai)
[20:56:51] *** Quits: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net) (Quit: leaving)
[21:09:48] <phaleth> hoppity: https://stackoverflow.com/a/45754361
[21:09:54] <wess> pow lib looks really nice, but i don't use phx :(
[21:10:54] <hoppity> phaleth: interestin, what is outlined in that SO question is exactly what I did to validate on nil
[21:11:00] <hoppity> phaleth: thanks btw
[21:11:16] <phaleth> np
[21:11:45] *** Joins: LostKobrakai (~LostKobra@ip-109-43-48-149.web.vodafone.de)
[21:20:17] *** Quits: LostKobrakai (~LostKobra@ip-109-43-48-149.web.vodafone.de) (Ping timeout: 252 seconds)
[21:25:12] *** Joins: LostKobrakai (~LostKobra@ip-109-43-49-203.web.vodafone.de)
[21:29:30] *** Quits: LostKobrakai (~LostKobra@ip-109-43-49-203.web.vodafone.de) (Remote host closed the connection)
[21:32:38] *** Joins: batok (~batok@187.205.232.87)
[21:35:53] *** Joins: LostKobrakai (~LostKobra@ip-109-43-49-203.web.vodafone.de)
[21:37:37] *** Joins: LostKobrakai_ (~LostKobra@ip-109-43-48-217.web.vodafone.de)
[21:40:21] *** Quits: LostKobrakai (~LostKobra@ip-109-43-49-203.web.vodafone.de) (Ping timeout: 268 seconds)
[21:41:22] *** Joins: mahmutov (~mahmutov@37.155.41.188)
[21:44:00] *** Quits: LostKobrakai_ (~LostKobra@ip-109-43-48-217.web.vodafone.de) (Remote host closed the connection)
[21:46:29] *** Quits: batok (~batok@187.205.232.87) (Remote host closed the connection)
[22:13:01] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[22:24:45] *** Quits: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu) (Ping timeout: 268 seconds)
[22:48:41] *** Joins: batok (~batok@187.205.232.87)
[22:56:17] *** Quits: c4rc4s (~c4rc4s@user/c4rc4s) (Quit: Adios)
[22:57:34] *** Joins: wonko (~wjc@62.115.229.50)
[23:09:11] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:10:15] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[23:12:17] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[23:28:04] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[23:29:17] *** Joins: hoppity (~user@user/hoppity)
[23:48:04] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[23:50:01] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
[23:53:43] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[23:54:47] *** Quits: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[23:55:30] *** Joins: gitgoood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[23:58:33] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 248 seconds)
