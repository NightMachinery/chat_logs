[00:00:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[00:01:16] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:02:33] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:04:27] *** Quits: Tangent-Man (~Tang3nt-M@213.205.240.3) (Ping timeout: 260 seconds)
[00:05:55] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:06:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:06:22] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[00:08:02] *** Joins: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk)
[00:08:24] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:08:36] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[00:08:38] *** Joins: rawley (~rawley@142.99.241.242)
[00:09:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:10:57] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[00:11:47] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:12:13] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:14:50] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[00:15:16] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:16:26] *** Joins: zy (~cc@user/zy)
[00:19:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:19:38] *** Quits: N4buc0_ (~N4buc0@189.115.86.130) (Remote host closed the connection)
[00:19:45] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[00:24:58] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:25:19] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[00:25:19] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[00:25:19] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:25:20] *** Joins: KAHR-Alpha_ (~Alpha@2a01cb0d024a66003d158041aae1d18c.ipv6.abo.wanadoo.fr)
[00:25:54] *** Joins: duds- (~duds-@user/duds)
[00:31:52] *** Joins: sbrothy (~sbrothy@192038130202.mbb.telenor.dk)
[00:34:19] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[00:34:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:37:30] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[00:38:41] *** Quits: proller (~p@2a02:6b8:b081:b70d::1:e) (Ping timeout: 252 seconds)
[00:44:52] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 272 seconds)
[00:45:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[00:48:58] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 246 seconds)
[00:50:13] *** Joins: duds- (~duds-@user/duds)
[00:51:36] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[00:57:21] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[00:57:41] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[00:57:41] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[00:57:41] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:58:48] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[00:59:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 256 seconds)
[01:02:43] *** Joins: seninha (~seninha@user/seninha)
[01:04:02] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[01:05:48] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[01:07:53] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:08:33] *** PJBoy is now known as Guest3051
[01:08:33] *** Quits: Guest3051 (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[01:08:34] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:08:45] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[01:09:02] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[01:09:32] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:16:54] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[01:20:43] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[01:21:03] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[01:21:03] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[01:21:03] *** Joins: RoKenn (~RoKenn@user/rokenn)
[01:28:29] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:32:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:33:02] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:38:44] *** Joins: proller (~p@80.240.216.69)
[01:39:30] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[01:40:40] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[01:40:54] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[01:42:14] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[01:45:29] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[01:45:44] *** Quits: proller (~p@80.240.216.69) (Remote host closed the connection)
[01:46:34] *** Quits: msk (~Thunderbi@89.205.124.40) (Quit: msk)
[01:47:37] *** Joins: proller (~p@80.240.216.69)
[01:50:23] <AliceMeows> https://godbolt.org/z/Kzhsnh5dn is there a way to implement something like this where data_ member variable is checked if its initialized at compile time?
[01:51:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:53:52] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:53:57] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[01:57:04] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 272 seconds)
[01:59:57] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:02:46] *** Joins: Viewday1158 (~Viewday@user/viewday)
[02:02:53] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:55] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[02:04:56] *** Viewday1158 is now known as Viewday115
[02:09:23] *** Joins: proller (~p@2a02:6b8:b081:32::1:2d)
[02:11:00] *** Joins: slidercrank (~slidercra@user/slidercrank)
[02:14:39] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 260 seconds)
[02:15:34] *** Joins: Enitin (~Enitin@82.180.145.226)
[02:16:34] <cbreak> AliceMeows: how about you just initialize it?
[02:17:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:17:30] <cbreak> https://godbolt.org/z/fEYjPGf5d
[02:18:23] <cbreak> now, data_ is never uninitialized :)
[02:18:30] <cbreak> so you don't need that silly b either
[02:20:19] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[02:20:30] *** Quits: MasterK (~MK@86.126.33.146) (Remote host closed the connection)
[02:21:07] *** Quits: proller (~p@2a02:6b8:b081:32::1:2d) (Remote host closed the connection)
[02:22:04] *** Joins: proller (~p@80.240.216.69)
[02:23:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:23:34] <AliceMeows> cbreak: https://godbolt.org/z/7E9To1f44 do you consider this also a good idea?
[02:25:30] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:27:45] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[02:28:33] <cbreak> AliceMeows: what do you mean?
[02:29:03] <cbreak> data_ is initialized to false in that case
[02:29:25] <AliceMeows> I don't think its a good idea to force initialization
[02:29:38] <cbreak> why not?
[02:30:28] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[02:30:33] <AliceMeows> For the same reason std::make_unique_for_overwrite exists
[02:31:17] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 260 seconds)
[02:32:13] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 246 seconds)
[02:32:34] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Ping timeout: 246 seconds)
[02:32:48] *** Joins: Xardas (~Xardas@149.233.51.127)
[02:34:36] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:40:19] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:43:48] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:44:15] *** Joins: proller (~p@2a02:6b8:b081:b505::1:31)
[02:44:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:44:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:44:42] *** ChanServ sets mode: +v npaperbot
[02:46:49] <PJBoy> +1
[02:47:51] <PJBoy> you could do a similar thing if you were so inclined
[02:48:05] <PJBoy> have your public ctors initialise your data members
[02:48:27] <PJBoy> and have a factory function called "make_T_for_overwrite" that uses a private ctor that doesn't initialise
[02:49:16] <AliceMeows> I suppose I could do something like that
[02:49:24] <AliceMeows> Thanks!
[02:50:50] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: Connection reset by peer)
[02:50:57] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:52:54] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 252 seconds)
[02:55:34] *** Joins: badone (~badone@209.132.189.152)
[02:56:46] <ville> don't quite get the point of make_unique_for_overwrite
[02:57:52] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[02:57:55] <AliceMeows> The point is that you don't want unique_ptr to be initialized when your intention is to overwrite the data it points to
[02:58:07] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[02:58:31] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[03:00:02] <ville> umm, that's not what it does
[03:01:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[03:01:17] *** Quits: va (~cargova@2a01:261:0:9::d285) (Ping timeout: 240 seconds)
[03:01:28] <ville> https://www.godbolt.org/z/5zKGEG1WW it's very much initialized
[03:01:40] <zz> make_unique does zero-init (in absence of everything), make_unique_for_overwrite does default-init
[03:03:17] <PJBoy> default init is the goal
[03:05:08] *** Joins: slavfox (~slavfox@93.158.232.111)
[03:06:27] *** Joins: jtm (~jtm@user/jtm)
[03:07:17] *** Joins: abode (~abode@2a00:f28:4e0:7228:8230:49ff:fe6e:36b5)
[03:13:47] <Alipha> AliceMeows: just store a std::optional<T>
[03:14:52] <AliceMeows> The idea was to avoid the additional memory it requires, I guess it just cannot be implemented then
[03:15:40] *** Joins: va (~cargova@cargova.sijanec.eu)
[03:16:16] *** Joins: hiroshi_ (~freedom@151.43.9.79)
[03:17:44] <Alipha> AliceMeows: there's no way to know at compile-time if data_ was default initialized from within the destructor. And what about assignment to data_ between construction and destruction?
[03:18:22] <AliceMeows> I figured as much
[03:18:47] <Alipha> S<bad> *p = rand() % 2 ? new S<bad> : new S<bad>(); delete p;
[03:20:15] *** Quits: abode (~abode@2a00:f28:4e0:7228:8230:49ff:fe6e:36b5) (Ping timeout: 250 seconds)
[03:20:29] *** Joins: abode (~abode@2a00:f29:0:29cc:8230:49ff:fe6e:36b5)
[03:22:25] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[03:22:39] *** Quits: proller (~p@2a02:6b8:b081:b505::1:31) (Ping timeout: 256 seconds)
[03:23:46] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:24:43] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[03:26:07] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:31:28] *** Quits: magla (~gelignite@d53668d6.access.ecotel.net) (Quit: Stay safe!)
[03:31:49] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:31:53] *** Joins: cosimone` (~user@93-44-187-176.ip98.fastwebnet.it)
[03:32:53] *** Quits: hiroshi_ (~freedom@151.43.9.79) (Quit: hiroshi_)
[03:33:03] *** Quits: pizdets (~pizdets@183.182.115.192) (Ping timeout: 252 seconds)
[03:33:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[03:33:45] *** Joins: pizdets (~pizdets@183.182.111.169)
[03:35:15] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:35:18] *** Joins: proller (~p@80.240.216.69)
[03:37:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[03:44:26] *** Joins: faya_ (~faya@90-228-194-182-no542.tbcn.telia.com)
[03:44:36] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[03:47:03] *** Quits: vaasu (~faya@90-228-194-182-no542.tbcn.telia.com) (Ping timeout: 260 seconds)
[03:47:59] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:48:16] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:50:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:50:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:53:15] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[03:54:59] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[03:55:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00) (Ping timeout: 260 seconds)
[03:55:20] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[03:56:08] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[03:57:17] *** Joins: Karel (~Karel@ptr-9091p584yhzvqsxhq6g.18120a2.ip6.access.telenet.be)
[03:58:19] <Karel> I remember there being a website that explained confusing C++ types (typically a mix of pointers, const, functions, ...) to you, but I can't find it anymore. Anyone got the link?
[03:59:15] <enterprisey> https://cdecl.org/ this one's for C, I don't know about C++
[03:59:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00)
[04:01:06] <Karel> I think that was it, it C/C++ doesn't matter that much here. Thanks!
[04:02:25] *** Joins: Awareness (~Kafkas@81.214.104.40)
[04:02:36] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:03:34] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Ping timeout: 246 seconds)
[04:04:31] *** Joins: Xardas (~Xardas@149.233.51.127)
[04:04:41] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[04:07:01] *** Quits: Tangent-Man (~Tang3nt-M@92.40.179.120.threembb.co.uk) (Ping timeout: 245 seconds)
[04:07:37] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:08:27] *** Joins: proller (~p@2a02:6b8:b081:14::1:4)
[04:09:51] <Alipha> << TYPE_DESC<int(float)>
[04:09:52] <geordi> function taking a float and returning an integer
[04:11:43] *** Quits: rgrinberg (~textual@177.248.148.38) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:13:30] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:16:05] <zz> enterprisey: cdecl.org is completely out of date, better install cdecl locally as a program
[04:16:39] <zz> (and be sure to have version 11+)
[04:20:34] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[04:22:21] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:24:37] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925)
[04:24:37] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925) (Changing host)
[04:24:37] *** Joins: skapata (~Skapata@user/skapata)
[04:25:17] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:25:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Max SendQ exceeded)
[04:26:16] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:26:59] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 250 seconds)
[04:33:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:34:05] *** Quits: Karel (~Karel@ptr-9091p584yhzvqsxhq6g.18120a2.ip6.access.telenet.be) (Ping timeout: 252 seconds)
[04:34:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:36:01] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[04:36:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:40:28] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[04:41:39] *** Quits: abode (~abode@2a00:f29:0:29cc:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[04:43:44] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[04:44:19] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[04:44:43] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[04:44:44] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[04:45:00] *** Joins: cpuid (~cpuid@co5.at)
[04:45:00] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[04:45:00] *** Joins: cpuid (~cpuid@user/cpuid)
[04:45:51] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:46:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:46:57] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[04:47:10] *** Joins: Atque (~Atque@user/atque)
[04:47:13] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[04:47:14] *** Joins: kevr (~kevr@user/kevr)
[04:47:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[04:48:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:49:36] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[04:49:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[04:50:09] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Client Quit)
[04:50:09] *** Quits: tobs (~tobs@taboege.de) (Quit: o/)
[04:50:14] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:51:04] *** Joins: abode (~abode@2a00:f29:0:29cc:8230:49ff:fe6e:36b5)
[04:51:09] *** Joins: teepee (~teepee@openscad/teepee)
[04:51:38] *** Joins: tobs` (~tobs@taboege.de)
[04:51:38] *** Joins: trumae (~trumae@2804:18:4018:21f6:1:0:f56c:4788)
[04:51:38] *** tobs` is now known as tobs
[04:52:53] *** Joins: chenqisu12 (~chenqisu1@183.217.200.168)
[04:55:01] *** zz is now known as anyone
[04:55:40] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 272 seconds)
[04:56:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[04:56:01] *** Joins: cnnx (~cnnx@bras-base-mtrlpq3401w-grc-32-174-89-96-67.dsl.bell.ca)
[04:56:49] <cnnx> I like to use qt-creater when I program, is microsoft visual studio much better? or same thing
[04:58:15] <ncwbqcfe> cnnx: not that relevant
[04:58:32] <cnnx> ok
[04:58:39] <ncwbqcfe> you'll be fine with your current tool
[05:01:52] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-7cb9-96b6-fbc8-6431.res6.spectrum.com)
[05:08:01] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:09:22] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 246 seconds)
[05:09:36] *** Parts: jplejacq (~jplejacq@68.71.169.160) (Leaving.)
[05:11:18] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[05:11:51] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 250 seconds)
[05:11:51] *** Quits: megeve (sid523379@id-523379.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[05:11:54] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[05:13:34] *** Joins: megeve (sid523379@id-523379.hampstead.irccloud.com)
[05:14:07] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[05:15:38] *** Quits: abode (~abode@2a00:f29:0:29cc:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[05:16:26] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[05:17:57] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:18:41] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 245 seconds)
[05:23:01] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[05:25:16] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:28:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:29:47] *** Joins: jw4 (~jw4@user/jw4)
[05:30:31] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:31:25] *** Quits: sbrothy (~sbrothy@192038130202.mbb.telenor.dk) (Ping timeout: 246 seconds)
[05:33:16] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[05:38:20] *** Joins: badfilms (~badfilms@user/badfilms)
[05:39:29] *** Joins: hfsoulz_ (~hfsoulz@user/hfsoulz)
[05:39:43] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 240 seconds)
[05:39:48] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[05:39:56] *** Quits: Dreg (~Dreg@fr33project.org) (Quit: Dreg)
[05:40:00] *** Quits: smeso (~smeso@user/smeso) (Ping timeout: 272 seconds)
[05:40:07] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Quit: ZNC - https://znc.in)
[05:40:09] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[05:40:09] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[05:40:09] *** Joins: nortoh (~nortoh@user/nortoh)
[05:41:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:41:36] *** Joins: Dreg (~Dreg@fr33project.org)
[05:41:50] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[05:42:19] *** Quits: emerent (~quassel@p200300cd5743c33bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:43:01] *** Joins: smeso (~smeso@user/smeso)
[05:44:34] *** Joins: emerent (~quassel@p200300cd5743c3a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:44:36] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:46:46] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[05:47:18] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00) (Ping timeout: 260 seconds)
[05:48:42] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:52:44] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:52:53] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[05:53:25] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[05:54:57] *** Joins: rgrinberg (~textual@177.248.146.16)
[05:58:09] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:58:42] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[05:59:27] *** Joins: Atque (~Atque@user/atque)
[05:59:33] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 260 seconds)
[06:06:59] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[06:10:16] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 246 seconds)
[06:11:02] *** Joins: hamburger (~hamburger@user/hamburger)
[06:15:11] *** Joins: zer0x (~zer0x@1.55.255.231)
[06:15:18] *** Joins: mixfix41 (~homefame@user/mixfix41)
[06:16:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:18:53] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[06:21:08] *** Joins: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5)
[06:21:27] *** Joins: jose_ (~goose@111.199.80.15)
[06:21:31] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:21:31] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:21:51] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[06:24:05] *** Quits: gooooose (~goose@111.199.80.15) (Ping timeout: 252 seconds)
[06:24:45] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:25:31] *** Joins: Inline__ (~Inline@p200300cd470f690069ffd8a9e8710708.dip0.t-ipconnect.de)
[06:28:03] *** Quits: Inline (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:29:10] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[06:29:56] *** malloy is now known as suki
[06:36:41] *** Joins: hamburger_ (~hamburger@user/hamburger)
[06:37:21] *** Quits: hamburger_ (~hamburger@user/hamburger) (Client Quit)
[06:37:43] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:38:03] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[06:39:49] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 240 seconds)
[06:44:35] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:44:43] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:44:43] *** ChanServ sets mode: +v npaperbot
[06:51:04] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:51:58] *** Joins: gooooose (~goose@111.199.80.15)
[06:52:59] *** Quits: jose_ (~goose@111.199.80.15) (Read error: Connection reset by peer)
[06:53:08] *** Quits: trumae (~trumae@2804:18:4018:21f6:1:0:f56c:4788) (Remote host closed the connection)
[06:56:02] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:56:07] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[06:57:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:59:23] *** Quits: millido (~millido@84.210.150.128) (Read error: Connection reset by peer)
[07:03:02] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 268 seconds)
[07:06:42] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[07:11:38] *** Joins: pulse (~pulse@user/pulse)
[07:14:12] *** Joins: millido (~millido@84.210.150.128)
[07:16:32] *** Quits: KAHR-Alpha_ (~Alpha@2a01cb0d024a66003d158041aae1d18c.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[07:18:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:21:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:24:13] *** Joins: DrMax_ (~DrMax@207.96.159.130)
[07:30:06] *** Joins: rgrinberg (~textual@177.248.146.16)
[07:32:32] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[07:32:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:33:37] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:35:52] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:41:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 260 seconds)
[07:42:00] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:49:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:50:50] *** Joins: gnomesort_ (~gnomesort@user/gnomesort)
[07:51:29] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 256 seconds)
[07:54:09] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[07:55:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:20] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:00:10] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[08:00:38] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:01:05] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54)
[08:03:46] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 272 seconds)
[08:03:49] *** Quits: Cyp (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[08:04:05] *** Joins: Cyp (~cyp@213.237.84.236)
[08:04:09] *** Joins: Enitin (~Enitin@82.102.22.86)
[08:05:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:5813:fe5c:3e8c:63aa) (Ping timeout: 250 seconds)
[08:05:26] *** Joins: smeso (~smeso@user/smeso)
[08:07:37] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[08:09:21] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:10:25] *** Quits: Awareness (~Kafkas@81.214.104.40) (Read error: Connection reset by peer)
[08:14:25] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:15:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:17:49] *** Quits: sreve (~quassel@p549d70fc.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:17:56] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[08:18:14] *** Joins: sreve (~quassel@p4ff44dd2.dip0.t-ipconnect.de)
[08:20:38] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:20:57] *** Joins: jose_ (~goose@111.199.80.15)
[08:21:34] *** Quits: gooooose (~goose@111.199.80.15) (Read error: Connection reset by peer)
[08:25:47] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[08:34:49] *** Joins: msk (~Thunderbi@89.205.124.39)
[08:49:54] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[08:50:23] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 260 seconds)
[08:51:28] *** Joins: gooooose (~goose@111.199.80.15)
[08:52:05] *** Quits: jose_ (~goose@111.199.80.15) (Read error: Connection reset by peer)
[08:52:58] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d83:2c46:ca7a:9113:4c2b:95e7)
[08:54:09] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:55:19] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[08:55:59] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:57:11] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[08:57:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:59:45] *** Quits: cnnx (~cnnx@bras-base-mtrlpq3401w-grc-32-174-89-96-67.dsl.bell.ca) (Quit: Client closed)
[09:08:54] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d83:2c46:ca7a:9113:4c2b:95e7) (Remote host closed the connection)
[09:09:11] *** Joins: Prof_Dumbledore (~Prof_Dumb@152.57.225.250)
[09:12:36] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[09:13:20] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[09:13:20] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[09:13:20] *** Joins: AssKoala (~asskoala@user/asskoala)
[09:16:07] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 246 seconds)
[09:19:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f0cf:f5b0:60ea:907f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:20:57] *** Joins: jose_ (~goose@111.199.80.15)
[09:21:39] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[09:24:12] *** Quits: gooooose (~goose@111.199.80.15) (Ping timeout: 272 seconds)
[09:27:52] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[09:29:01] *** Joins: Praise (~Fat@user/praise)
[09:30:54] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[09:32:02] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[09:32:15] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[09:32:15] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[09:32:15] *** Joins: AssKoala (~asskoala@user/asskoala)
[09:32:24] *** Quits: jw4 (~jw4@user/jw4) (Quit: leaving)
[09:33:37] *** Quits: jose_ (~goose@111.199.80.15) (Ping timeout: 260 seconds)
[09:35:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:36:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[09:38:27] *** Quits: Prof_Dumbledore (~Prof_Dumb@152.57.225.250) (Remote host closed the connection)
[09:40:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[09:43:26] *** Joins: Enitin (~Enitin@82.102.22.86)
[09:44:29] *** Joins: halberd (~halberd@user/causative)
[09:45:23] *** Quits: causative_ (~halberd@user/causative) (Ping timeout: 256 seconds)
[09:46:13] *** Joins: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net)
[09:49:51] <Guest6919> Given that pragma once is so widely supported, and it's supported by (I think) all major compilers, and it's less typing , should developers just use it instead of header guards?
[09:50:39] *** Joins: savolla (~quassel@84.44.28.28)
[09:54:35] <TinoDidriksen> No, it has subtly different semantics.
[09:56:11] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:56:39] <RandomReader> With the header guards, you choose the identifier, but with #pragma once the identity is not necessarily obvious .. e.g. is the relative path, canonical path for multi-link situations, contents, etc
[09:57:37] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 240 seconds)
[09:57:45] <RandomReader> I tend to consider #pragma once in the smaller or non-portable project kind of sense, where none of that is ever likely to matter .. and the include guard pattern for more portable or longer-term projects
[09:58:08] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 2.8)
[09:58:35] <Raziel> for what it's worth, iirc, compile times are better with #pragma once on msvc
[09:58:50] <TinoDidriksen> Not really
[09:59:26] <Raziel> oof
[10:00:38] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[10:00:52] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[10:01:04] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[10:02:00] <TinoDidriksen> I measured that, and the difference is ~0.3 milliseconds. So a miniscule factor.
[10:02:21] <Raziel> fair enough
[10:02:31] <vdamewood> Per header, per translation unit, or for the whole project?
[10:04:05] *** Joins: nshire (~nshire@user/nshire)
[10:06:48] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:06:57] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[10:11:05] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88)
[10:14:42] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[10:15:05] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[10:20:06] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[10:24:53] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[10:30:48] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[10:31:17] <TinoDidriksen> Per header. But even large projects don't have enough headers for that to matter.
[10:32:45] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (Remote host closed the connection)
[10:34:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[10:35:02] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 260 seconds)
[10:40:59] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[10:41:24] *** Joins: Enitin (~Enitin@82.180.145.227)
[10:44:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:44:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:44:45] *** ChanServ sets mode: +v npaperbot
[10:44:47] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:44:57] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:45:03] <Guest6919> I suppose it would be nice if we could have the same semantics/portability of header guards with the less verbosity of pragma once
[10:46:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00)
[10:47:59] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[10:51:50] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[10:53:24] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[10:54:25] *** Quits: letto (~letto@188.27.114.171) (Quit: Konversation terminated!)
[10:54:36] *** Joins: unyu (~pyon@user/pyon)
[10:55:10] *** Quits: DrMax_ (~DrMax@207.96.159.130) (Quit: Leaving)
[10:56:58] *** Joins: letto (~letto@188.27.114.171)
[10:57:08] <vdamewood> Or we could get modules working.
[10:58:00] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[10:58:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[10:59:18] *** Joins: dansan (~daniel@75.81.148.51)
[10:59:50] *** Quits: cation (cation@user/cation) (Ping timeout: 272 seconds)
[11:02:11] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:7a8d:b353:1d67:c667)
[11:02:51] *** Joins: plastico (~plastico@neomutt/plastico)
[11:02:57] *** Joins: Atque (~Atque@user/atque)
[11:06:01] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[11:10:27] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:10:27] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[11:11:29] *** Joins: Enitin (~Enitin@82.180.145.227)
[11:12:10] *** Quits: hfsoulz_ (~hfsoulz@user/hfsoulz) (Quit: leaving)
[11:13:31] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[11:24:22] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[11:26:02] *** Quits: letto (~letto@188.27.114.171) (Remote host closed the connection)
[11:28:28] *** Joins: letto (~letto@188.27.114.171)
[11:33:34] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:34:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:35:17] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.125)
[11:38:10] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[11:39:02] *** Joins: Atque (~Atque@user/atque)
[11:39:04] *** Joins: caramel (~caramel@user/caramel)
[11:43:30] *** Joins: xiongxin1 (~Thunderbi@117.136.40.181)
[11:46:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:30f:5958:e0c9:e93f:da88) (Ping timeout: 250 seconds)
[11:47:40] *** Quits: xiongxin1 (~Thunderbi@117.136.40.181) (Ping timeout: 246 seconds)
[11:49:01] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[11:49:30] *** Joins: jsbach (~jsbach@2a01:c23:6468:3200:42e8:59db:f661:f100)
[11:49:32] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[11:50:22] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-880b-06f6-9fb0-8a05.res6.spectrum.com)
[11:51:09] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-7cb9-96b6-fbc8-6431.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:53:01] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ace2:b4ed:9f9:d737)
[11:55:48] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:57:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:59:30] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[12:01:58] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[12:03:46] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[12:04:08] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[12:05:12] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:08:07] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[12:10:13] *** Quits: faya_ (~faya@90-228-194-182-no542.tbcn.telia.com) (Quit: Leaving)
[12:17:46] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:19:23] *** Joins: zy (~cc@user/zy)
[12:21:59] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:22:16] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410)
[12:22:16] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410) (Changing host)
[12:22:16] *** Joins: skapata (~Skapata@user/skapata)
[12:22:20] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[12:22:33] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:7a8d:b353:1d67:c667) (Quit: Leaving)
[12:24:27] *** Joins: zy_ (~cc@user/zy)
[12:24:32] *** Quits: zy (~cc@user/zy) (Ping timeout: 260 seconds)
[12:24:40] *** Joins: abode (~abode@2a00:f28:ff41:431c:8230:49ff:fe6e:36b5)
[12:32:33] *** Joins: GvJordan (~Jordan@y.gvnet.me)
[12:35:45] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:36:27] *** Joins: bindu (~bindu@user/bindu)
[12:42:40] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:46:10] *** Joins: abode_ (~abode@2a00:f28:4c1:5360:8230:49ff:fe6e:36b5)
[12:47:55] *** Quits: abode (~abode@2a00:f28:ff41:431c:8230:49ff:fe6e:36b5) (Ping timeout: 260 seconds)
[12:48:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:23] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:f136:f9d6:17ab:1405) (Ping timeout: 260 seconds)
[12:51:58] *** Quits: C-Man (~C-Man@78.31.190.82) (Ping timeout: 260 seconds)
[12:53:54] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[12:54:11] *** Quits: chenqisu12 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:55:02] *** Joins: arch_angel (~arch-ange@user/arch-angel)
[13:00:39] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[13:00:52] *** Quits: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5) (Quit: Leaving)
[13:04:31] *** Joins: xiongxin (~Thunderbi@117.136.33.134)
[13:07:48] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:7874:3832:5c2e:73a2)
[13:11:28] *** Joins: ivii (~ivan@user/ivii)
[13:17:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:18:18] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:23:48] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: heiner)
[13:24:03] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[13:27:40] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c)
[13:29:53] *** Quits: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net) (Ping timeout: 260 seconds)
[13:29:53] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[13:30:34] *** Quits: xiongxin (~Thunderbi@117.136.33.134) (Ping timeout: 272 seconds)
[13:30:35] *** xiongxin1 is now known as xiongxin
[13:32:13] *** Joins: Karel (~Karel@ptr-9091p584yhzvqsxhq6g.18120a2.ip6.access.telenet.be)
[13:32:19] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:33:29] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[13:35:36] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:36:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:36:52] *** Quits: proller (~p@2a02:6b8:b081:14::1:4) (Ping timeout: 260 seconds)
[13:41:41] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:49:53] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:50:41] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:7874:3832:5c2e:73a2) (Ping timeout: 252 seconds)
[13:54:36] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:91b6:2512:6308:3515)
[13:56:23] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl)
[13:57:11] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl) (Client Quit)
[13:57:27] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl)
[13:58:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:58:49] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[13:59:35] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 256 seconds)
[14:00:44] *** Joins: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5)
[14:02:26] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[14:04:43] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[14:04:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[14:04:57] *** Quits: CodeAgain (~codeagain@user/CodeAgain) (Ping timeout: 240 seconds)
[14:05:17] *** Joins: rLapz (~rLapz@user/rLapz)
[14:07:41] *** Joins: jellie (~luv_panda@user/jellie)
[14:08:17] *** Quits: anyone (~filler@a4.inai.de) (Quit: Lost terminal)
[14:10:08] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[14:13:29] *** Joins: Mat_42 (~mat_42@194.12.157.96)
[14:13:47] *** Quits: cosimone` (~user@93-44-187-176.ip98.fastwebnet.it) (Ping timeout: 260 seconds)
[14:14:02] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:15:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:16:58] *** Joins: CodeAgain (~codeagain@user/CodeAgain)
[14:17:59] *** Quits: Mat_42 (~mat_42@194.12.157.96) (Ping timeout: 260 seconds)
[14:18:12] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:18:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[14:21:10] *** Joins: j0hn_mc_clane (~j0hn_mc_c@dd577050e.access.telenet.be)
[14:21:15] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:22:15] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1394:e5c:b5b5:c4e7:b07c) (Ping timeout: 256 seconds)
[14:22:39] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[14:27:31] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:33:36] *** Joins: pulse (~pulse@user/pulse)
[14:43:05] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[14:43:18] *** Joins: hamburger (~hamburger@user/hamburger)
[14:43:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[14:43:56] *** Joins: hamburger_ (~hamburger@user/hamburger)
[14:44:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:44:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:44:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:44:46] *** ChanServ sets mode: +v npaperbot
[14:45:08] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 260 seconds)
[14:45:43] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[14:47:45] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[14:50:21] *** Quits: hamburger_ (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[14:50:22] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[14:51:10] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:51:21] *** Joins: unknow (~i.am@user/marlboro)
[14:51:31] *** Joins: zer0x (~zer0x@1.55.255.231)
[14:54:30] *** Joins: hamburger (~hamburger@user/hamburger)
[14:56:02] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:58:11] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[14:58:30] *** Quits: FergusL2 (~freenode4@23.247.118.78.rev.sfr.net) (Quit: FergusL2)
[14:58:38] *** Joins: FergusL2 (~freenode4@23.247.118.78.rev.sfr.net)
[14:58:44] *** FergusL2 is now known as FergusL
[14:58:47] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:58:51] *** Quits: FergusL (~freenode4@23.247.118.78.rev.sfr.net) (Changing host)
[14:58:51] *** Joins: FergusL (~freenode4@user/fergusl)
[15:03:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[15:04:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:06:11] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.125) (Ping timeout: 245 seconds)
[15:06:49] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 246 seconds)
[15:11:11] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[15:11:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:12:17] *** Joins: reset (~reset@user/reset)
[15:17:24] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[15:20:29] *** Joins: xkuru (~xkuru@user/xkuru)
[15:20:37] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:20:55] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:23:26] *** Joins: Enitin (~Enitin@82.180.145.226)
[15:27:56] *** Joins: proller (~p@2a02:6b8:b081:15::1:f)
[15:30:26] *** Joins: ko (~i.am@user/marlboro)
[15:30:43] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:e568:4309:ec69:3fba)
[15:31:19] *** Quits: unknow (~i.am@user/marlboro) (Ping timeout: 246 seconds)
[15:33:39] *** Joins: cation (cation@user/cation)
[15:34:48] *** Joins: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce)
[15:35:18] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:36:34] *** Quits: zer0x (~zer0x@1.55.255.231) (Ping timeout: 246 seconds)
[15:39:14] *** Quits: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce) (Client Quit)
[15:40:39] *** Joins: xiongxin (~Thunderbi@117.136.39.213)
[15:41:52] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[15:42:36] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:44:03] *** Quits: proller (~p@2a02:6b8:b081:15::1:f) (Ping timeout: 260 seconds)
[15:45:07] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[15:48:50] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[15:49:49] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[15:51:49] *** Joins: C-Man (~C-Man@static.88-198-34-209.clients.your-server.de)
[15:53:11] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:53:41] *** Joins: Payam19 (~Payam@138.106.57.131)
[15:54:20] *** Quits: xiongxin (~Thunderbi@117.136.39.213) (Ping timeout: 272 seconds)
[15:55:21] *** Quits: hamburger (~hamburger@user/hamburger) (Ping timeout: 250 seconds)
[15:57:31] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 250 seconds)
[15:57:42] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:57:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:57:54] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[16:03:52] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 246 seconds)
[16:05:27] *** Joins: anyone (~filler@a4.inai.de)
[16:06:41] *** Joins: jellie (~luv_panda@user/jellie)
[16:06:57] *** Joins: evangeline (~Eleanor@178.79.105.181)
[16:07:36] <evangeline> Hi, is there a way to initialize a std::vector with a bytestring: https://godbolt.org/z/cn8zT9jbq (I would like to use "\x41\x42\x00\x43\x44" string to init the vector without splitting it into 0x parts) ?
[16:08:47] <TinoDidriksen> You can use iterators, so string_view or sizeof() will work.
[16:10:27] <PJBoy> do note that those trailing \x43\x44 bytes never make it into the string
[16:11:09] <TinoDidriksen> evangeline, https://godbolt.org/z/1x1c6hEhj
[16:11:10] <PJBoy> I guess that's obvious
[16:11:13] <evangeline> I want the  \x43\x44 to be in the vector as well ... I intentionally used null byte
[16:11:33] <PJBoy> sizeof is risky
[16:11:58] <evangeline> TinoDidriksen, thank you
[16:12:02] <evangeline> PJBoy, why is sizeof risky
[16:12:04] <TinoDidriksen> sizeof() is fine if you know you have a string literal. Be mindful that the final terminator is included.
[16:12:12] <TinoDidriksen> If you don't want the final \0 then -1
[16:12:14] <PJBoy> because that string literal might not be an array
[16:12:25] <PJBoy> would recommend std::size
[16:12:55] <TinoDidriksen> string_view would be even nicer.
[16:14:00] <PJBoy> `std::vector<unsigned char> test2(std::begin(lit), std::end(lit));` is another possibility
[16:15:08] <TinoDidriksen> https://godbolt.org/z/EY5na3E4f gives a nice size of 5 as most would expect.
[16:17:15] *** Joins: Markow (~Markow@176.122.215.103)
[16:20:48] *** Quits: SR-71 (~user@user/SR-71) (Ping timeout: 260 seconds)
[16:22:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:22:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:30:12] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[16:30:54] *** Quits: abode_ (~abode@2a00:f28:4c1:5360:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[16:35:40] *** Joins: jose_ (~goose@111.199.80.15)
[16:37:24] *** Joins: cnnx (~cnnx@bras-base-mtrlpq3401w-grc-32-174-89-96-67.dsl.bell.ca)
[16:40:16] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[16:40:53] *** Quits: Payam19 (~Payam@138.106.57.131) (Quit: Client closed)
[16:40:58] *** Joins: rLapz (~rLapz@user/rLapz)
[16:43:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[16:43:56] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[16:44:59] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[16:47:09] *** Quits: ironman (~ironman@2405:201:1010:b051:9f16:af8b:1612:56e5) (Quit: Leaving)
[16:47:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:49:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:50:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:50:32] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[16:54:11] <AliceMeows> https://godbolt.org/z/EP87f19TG is there any way to get the compiler to deduce T?
[16:57:09] *** Joins: abode (~abode@2a00:f29:80:41c:8230:49ff:fe6e:36b5)
[16:57:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:00:33] <PJBoy> no chance
[17:01:11] <AliceMeows> Darn
[17:01:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:01:51] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:04:54] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:05:01] <PJBoy> in part because T could be multiple things
[17:05:10] <PJBoy> such as if F takes a void pointer parameter
[17:05:43] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 260 seconds)
[17:07:49] <AliceMeows> I'd do something like this void call(auto(fn)(T*)) but then fn cannot be invocable type
[17:09:38] <rpav> re: valid template instantiations and IFNDR; declval ... the cppreference page "possible implementation" actually provides an `always_false` like the simple one i had yesterday (`<T> constexpr bool always_false = false`) and similarly declval will never produce a valid instantiation outside decltype
[17:09:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:10:10] <PJBoy> there's https://godbolt.org/z/fbGjbnczT potentially
[17:10:48] <PJBoy> yeah I noticed that edit
[17:10:57] <PJBoy> it's UB, but I didn't care enough to revert it
[17:11:08] <PJBoy> or IFNDR even, yeah
[17:11:18] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:11:35] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:11:45] <AliceMeows> Its closed but I still want to be able to provide T if its wanted/needed
[17:14:08] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[17:16:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[17:16:15] *** Joins: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce)
[17:17:53] *** Joins: proller (~p@2a02:6b8:b081:1232::1:0)
[17:19:10] *** jose_ is now known as Luciana
[17:20:57] <rpav> and being pedantic, "valid" doesn't seem to be well-defined in the context of template specialization, so who can even tell if most of C++ is well-formed
[17:22:06] *** Quits: Luciana (~goose@111.199.80.15) (Quit: Leaving)
[17:22:09] <rpav> (e.g., maybe valid is syntactically valid, which does not preclude `static_assert(always_false<T>);`)
[17:23:39] *** Joins: gojiraz (~goose@111.199.80.15)
[17:24:01] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 246 seconds)
[17:27:42] *** Quits: abode (~abode@2a00:f29:80:41c:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[17:36:40] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[17:37:17] *** Joins: Fairy (~Fairy@ti0004a400-5707.bb.online.no)
[17:38:29] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:55f0:caa4:477c:ad54) (Ping timeout: 250 seconds)
[17:38:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:40:18] *** Joins: hamburger (~hamburger@user/hamburger)
[17:42:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:45:09] *** Quits: badfilms (~badfilms@user/badfilms) (Quit: WeeChat 3.3)
[17:45:47] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::102:b65c)
[17:46:28] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:47:57] *** Joins: badfilms (~badfilms@user/badfilms)
[17:48:02] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[17:49:52] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[17:50:13] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::102:b65c) (Ping timeout: 256 seconds)
[17:50:18] *** Joins: badfilms (~badfilms@user/badfilms)
[17:50:40] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:51:53] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[17:52:13] *** Joins: badfilms (~badfilms@user/badfilms)
[17:52:44] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[17:53:04] *** Joins: badfilms (~badfilms@user/badfilms)
[17:55:11] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[17:56:44] <fluter> hi, i have a member function like this: const size_t size() const
[17:56:55] <fluter> but gcc warns with: error: type qualifiers ignored on function return type [-Werror=ignored-qualifiers]
[17:56:57] <fluter> why?
[17:57:07] <fluter> why the qualifiers is ignored?
[17:57:09] <hamburger> if you can avoid object
[17:57:15] <hamburger> better don't use it fluter
[17:57:16] <rpav> yo're returning a const value, it doesn't really do anything
[17:57:36] <fluter> why const value doesn't do anything?
[17:57:40] <rpav> what would it do?
[17:58:04] <TinoDidriksen> It doesn't matter if a value is const - it's copied anyway.
[17:58:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:58:13] <rpav> someone can always make a non-const copy of a value, which is what happens with e.g. `size_t sz = foo.size();` if .size() were to return const size_t
[17:58:16] <Oxyd> The only thing you can do with a size_t is to copy it somewhere, and it doesn't matter whether you copy from a const or non-const value.
[17:58:25] <TinoDidriksen> If you were returning a size_t& then it would matter.
[17:58:25] <hamburger> don't even put const flutter
[17:58:33] <hamburger> const just if you want to reuse
[17:58:40] <hamburger> avoid it
[17:58:47] <hamburger> you should clear memory for it
[17:58:54] <hamburger> that's what i mean by not using object
[17:59:02] <hamburger> because object is still static memory
[17:59:07] <hamburger> unless you clean it
[17:59:14] <hamburger> but some code is coded that way
[17:59:16] <hamburger> some is not
[17:59:17] <TinoDidriksen> ...what? Don't confuse things.
[17:59:34] <hamburger> so just Ask The Lord
[17:59:38] <hamburger> the compiler is perfect
[17:59:41] <hamburger> for gcc
[17:59:41] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[17:59:44] <TinoDidriksen> This has nothing to do with objects.
[17:59:47] <hamburger> take it from redhat
[17:59:57] <hamburger> oh ?
[18:00:04] <hamburger> what do you think tino ?
[18:00:07] <hamburger> explain to me than
[18:00:22] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 272 seconds)
[18:00:40] <TinoDidriksen> It's simply a function value return type, and a const value return or argument doesn't make sense.
[18:01:12] <hamburger> ah i see
[18:01:20] <hamburger> oh const value ?
[18:01:24] <hamburger> what is that actually
[18:01:27] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[18:01:34] <hamburger> you know what is const ?
[18:01:50] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:02:56] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[18:04:06] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-b402-bd86-d3c0-b042.res6.spectrum.com)
[18:04:20] *** Quits: badfilms (~badfilms@user/badfilms) (Quit: WeeChat 3.3)
[18:04:55] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-880b-06f6-9fb0-8a05.res6.spectrum.com) (Ping timeout: 250 seconds)
[18:06:47] *** Joins: badfilms (~badfilms@user/badfilms)
[18:06:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:07:28] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[18:08:05] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:08:23] *** Joins: jellie (~luv_panda@user/jellie)
[18:08:28] <hamburger> i thought you know
[18:08:32] <hamburger> otak udang
[18:08:38] <hamburger> i already explain to you just now
[18:08:40] <hamburger> still ask
[18:09:17] *** Joins: badfilms (~badfilms@user/badfilms)
[18:09:50] <fluter> ok.
[18:10:25] <TinoDidriksen> hamburger, const is a request to not change the stored data. Which has no meaning if the data is copied to a non-const variable anyway.
[18:10:33] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[18:10:56] <hamburger> oh really
[18:11:01] <hamburger> show me the source code than
[18:11:04] <hamburger> if you know compiler
[18:11:09] <hamburger> :p
[18:11:12] <TinoDidriksen> Compilers are off topic here.
[18:11:14] <hamburger> identify kids
[18:11:22] <hamburger> who is the coder of gcc ?
[18:11:25] <TinoDidriksen> Please stop with this trolling...
[18:11:29] <hamburger> off topic
[18:11:33] <hamburger> this is c++
[18:11:35] <hamburger> channel
[18:11:38] <hamburger> get lost frog
[18:11:39] *** ChanServ sets mode: +o TinoDidriksen
[18:11:41] <hamburger> otak udang
[18:11:44] <TinoDidriksen> I repeat, please stop.
[18:12:01] <hamburger> what do We say read it again
[18:12:03] <hamburger> already explain
[18:12:22] <TinoDidriksen> !topic
[18:12:23] <hamburger> you still don't understand than read your book again lah
[18:12:23] <nolyc> #C++ is strictly for Standard C++, including potential and future standardizations. Stay on topic in #C++. #C++-general is less strict, meant for libraries, projects, compilers, and tools in the wider C++ ecosystem, but still must pertain to C++ in some way.
[18:13:11] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4d31:a150:91b6:2512:6308:3515) (Ping timeout: 260 seconds)
[18:13:41] <Zogatribe> I would say C++ compilers are on topic if we are dicussing how certain C++ features are likely implemented
[18:14:13] <hamburger> that is way that const is for something
[18:14:23] <hamburger> is feature of c++ that you guys should avoid it
[18:14:28] <hamburger> i explain again
[18:14:36] <hamburger> const is static to memory and processor
[18:14:43] <hamburger> you can't wipe it
[18:14:48] <hamburger> is waste memory
[18:14:49] <TinoDidriksen> It's really not.
[18:14:52] <hamburger> even reuse it
[18:14:55] <hamburger> nvm
[18:15:00] <hamburger> otak udang what to do
[18:15:03] <hamburger> explain than
[18:15:11] <Zogatribe> hamburger: you can wipe it but only if you wish to exhibit UB
[18:15:13] <hamburger> so my stupid brain can understand
[18:15:22] <hamburger> what is ub ?
[18:15:43] <hamburger> what is const actually
[18:15:45] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:16:16] <Zogatribe> you can't be a very good C++ coder if you don't know what UB is
[18:16:33] <TinoDidriksen> const is potentially backed by read-only memory, but only potentially. Runtime values are very rarely actually read-only.
[18:17:29] <Zogatribe> well either read only memory because that is the way a memory page is protected or ACTUAL read only memory, flashed for example.
[18:17:40] *** Joins: Mat_42 (~mat_42@2001:1458:204:1::101:b65c)
[18:18:02] <hamburger> yeah
[18:18:22] <Zogatribe> either way, it is UB
[18:19:12] <furrymcgee> const a storage class specifier?
[18:19:18] *** Joins: millido (~millido@84.210.150.128)
[18:20:32] <hamburger> what is object
[18:20:38] <hamburger> ?
[18:20:46] *** Joins: irf21k (~irf21k@2401:4900:26bf:b82c:0:76:6635:b801)
[18:20:52] <Zogatribe> an object is a region of storage with an associated lifetime
[18:21:07] <hamburger> oh really ?
[18:21:17] <hamburger> how to wipe it ?
[18:21:28] <fluter> is hamburger a chat bot?
[18:21:32] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:21:38] <hamburger> yeah is UB
[18:21:47] <fluter> heh
[18:22:01] <TinoDidriksen> !give hamburger basics
[18:22:02] <nolyc> hamburger: Books, references, tutorials, for all levels of learning: https://isocpp.org/get-started ; https://isocpp.org/faq ; https://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; https://cppreference.com/
[18:22:08] *** Quits: Mat_42 (~mat_42@2001:1458:204:1::101:b65c) (Ping timeout: 260 seconds)
[18:22:10] <hamburger> is UB ?
[18:22:27] <hamburger> why you shouldn't code in c
[18:22:27] <Zogatribe> is what UB?
[18:22:27] <TinoDidriksen> hamburger, there's also #C++-basic for these kinds of basic questions.
[18:22:30] <hamburger> or assembly
[18:22:33] <hamburger> except c++
[18:22:46] <hamburger> hmm i just remembered
[18:22:49] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 246 seconds)
[18:22:52] <hamburger> why should we code in c
[18:22:56] <hamburger> not c++
[18:22:58] <Zogatribe> C is off topic
[18:23:01] <hamburger> i am researching too
[18:23:05] <hamburger> ahh off topic
[18:23:11] <hamburger> :p
[18:23:18] *** Quits: badfilms (~badfilms@user/badfilms) (Quit: WeeChat 3.3)
[18:23:20] <hamburger> mine to give me
[18:23:29] <hamburger> !give Zogatribe basics
[18:23:30] <nolyc> Zogatribe: Books, references, tutorials, for all levels of learning: https://isocpp.org/get-started ; https://isocpp.org/faq ; https://learncpp.com/ ; http://stackoverflow.com/q/388242 ; https://github.com/isocpp/CppCoreGuidelines ; https://cppreference.com/
[18:23:35] <TinoDidriksen> Do not abuse the bot.
[18:23:39] *** Joins: badfilms (~badfilms@user/badfilms)
[18:23:39] <Zogatribe> C is off topic because Torvalds is an ass
[18:23:46] <cbreak> there's no reason to write C instead of C++, unless you're contributing to some software that's stuck with C
[18:24:04] <hamburger> lol
[18:24:05] <cbreak> C is completely inferior to C++ in all aspects
[18:24:13] <hamburger> oh really
[18:24:18] <hamburger> than why you code c++
[18:24:22] <hamburger> not in c than
[18:24:31] <hamburger> what is c++ actually
[18:24:33] <hamburger> let me google it
[18:24:38] <furrymcgee> C is simple
[18:24:55] <cbreak> furrymcgee: C++ can be simple if you focus on a sufficiently small part...
[18:25:09] <Zogatribe> I've just joined #c amd said "Torvalds is an ass" because that's the way I roll
[18:25:09] <hamburger> simple
[18:25:12] <Guest6919> I really love C++'s garbage collection. It's my favourite feature
[18:25:12] <hamburger> ?
[18:25:21] <hamburger> i would rather code in c than c++
[18:25:23] <cbreak> Guest6919: it usually doesn't work
[18:25:34] <hamburger> why should i code c++ than if c is the same
[18:25:51] <hamburger> ask even mit university
[18:25:54] <hamburger> if they know
[18:25:58] <hamburger> sound than
[18:25:59] <hamburger> mit
[18:26:23] <AliceMeows> What the hell is going on in here?
[18:26:24] <hamburger> come i explain guys
[18:26:25] <Zogatribe> AFAIK a C++ implementation doesn't include garbage collection but there may be some facility to help write one
[18:26:33] <hamburger> if you don't need c++
[18:26:33] *** hamburger was kicked by TinoDidriksen (Not a positive addition to the channel.)
[18:26:34] *** TinoDidriksen sets mode: +b *!*@user/hamburger
[18:27:07] <Zogatribe> I think banning before kicking is better
[18:27:21] <furrymcgee> in practice c++ often is over complicated
[18:27:29] <cbreak> Zogatribe: off-by-1-sec-error at most :P
[18:27:30] <TinoDidriksen> Yeah, but I use it so rarely that this is the default mIRC script.
[18:27:51] <cbreak> furrymcgee: in practice, everything is overcomplicated. Because practice has to deal with legacy and bad programmers
[18:27:56] <Zogatribe> mIRC? ew. I current using an IRC client that I am developing
[18:28:06] <AliceMeows> Zogatribe: iirc gc stuff was removed
[18:28:07] <cbreak> Zogatribe: eew
[18:29:06] <cbreak> nowadays, people don't write IRC clients anymore, they write some messaging client that works via NFT Blockchain in the Cloud to exploit synergies in the stakeholder optimization for stonks?
[18:29:32] <Zogatribe> cbreak: I am actually writing a multi-protocol chat client: IRC is just a plugin
[18:29:49] <AliceMeows> There is already pidgin for that
[18:30:06] <Zogatribe> accept my IRC plugin will make the client as good as any dedicated one
[18:30:10] <Zogatribe> except*
[18:30:18] *** Quits: badfilms (~badfilms@user/badfilms) (Quit: WeeChat 3.3)
[18:31:13] <TinoDidriksen> #C++-social for IRC client discussions.
[18:31:26] *** TinoDidriksen sets mode: -o TinoDidriksen
[18:31:35] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 256 seconds)
[18:32:44] *** Joins: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f)
[18:33:32] *** Joins: hey (~hey@125.99.177.198)
[18:33:54] <Zogatribe> cbreak isn't in #c++-social tho
[18:34:04] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:34:05] <cbreak> I'm not social.
[18:34:06] <AliceMeows> PJBoy: https://godbolt.org/z/Pa4rrGKrM that doesn't seem to work
[18:34:08] *** Quits: hey (~hey@125.99.177.198) (Client Quit)
[18:34:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:34:50] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[18:35:01] *** Quits: j0hn_mc_clane (~j0hn_mc_c@dd577050e.access.telenet.be) (Quit: Leaving)
[18:35:08] *** Joins: badfilms (~badfilms@user/badfilms)
[18:35:59] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[18:36:19] <konfusedagain> What can #c++-social used for ?
[18:36:27] <TinoDidriksen> !otherchannels
[18:36:28] <nolyc> #C++ (strictly Standard C++), #c++-basic (for learners and newbies), #C++-general (non-standard but still related to C++), #c++-social (anything goes), and #geordi
[18:37:09] <konfusedagain> holyc ty
[18:38:28] *** Quits: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f) (Read error: Connection reset by peer)
[18:38:37] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Client Quit)
[18:38:40] <AliceMeows> PJBoy: I don't think that there are any hacks to get it to work
[18:38:46] <Guest6919> Is there a good channel for graphics programming? like talking about shaders etc?
[18:38:51] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[18:39:16] <AliceMeows> Guest6919: #C++-general is your best bet
[18:39:51] *** Joins: trumae (~trumae@45.170.74.100)
[18:40:45] *** Quits: miklcct (~quassel@vps.miklcct.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:40:59] *** Joins: miklcct (quasselcor@vps.miklcct.com)
[18:42:13] *** Joins: badfilms (~badfilms@user/badfilms)
[18:43:15] *** Quits: badfilms (~badfilms@user/badfilms) (Client Quit)
[18:43:36] *** Joins: badfilms (~badfilms@user/badfilms)
[18:44:01] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[18:44:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:44:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:44:46] *** ChanServ sets mode: +v npaperbot
[18:47:57] <Zogatribe> I feel I could contribute positively to #C++-general but alas I am still banned from there
[18:47:58] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:49:33] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:50:08] <rpav> hrm can't use decltype(auto) in std::enable_if_t, operators can't have default additional defaulted arguments, and you can't specify defaults on a template free function operator more than once
[18:51:38] *** Joins: john99 (~john99@134.238.107.162)
[18:52:13] <konfusedagain> Hello any easy way to assign variables instead of one by one...
[18:52:13] <konfusedagain> What i want to do is assign a, b,  c.. To 1,2,3...25
[18:52:30] <rpav> why do you want this
[18:52:44] <cbreak> konfusedagain: consider using a vector instead of distinct variables
[18:52:48] <rpav> ^
[18:53:17] <TinoDidriksen> std::tie() can in fact do this, though.
[18:53:19] <cbreak> then you could use the very intuitively named std::iota
[18:53:42] <konfusedagain> Because i want to make a program to decrypt a string
[18:53:49] <cbreak> TinoDidriksen: all ways to iterate over std::tie's result I can think of are annoying
[18:53:54] <AliceMeows> { auto [a, b, c] = std::tuple(1, 2, 3); }
[18:53:55] <geordi>  
[18:53:59] <Zogatribe> why use a vector for such a trivial mapping?
[18:54:19] <cbreak> konfusedagain: so... that's a reason more to use a container like vector (or string)
[18:54:21] <TinoDidriksen> Oh, it is just a string mapping? Then use a string.
[18:55:39] <Zogatribe> a string would be wrong if the intention is to add a random offset to each character in an arbitrary string
[18:55:42] <Zogatribe> IMO
[18:56:17] <AliceMeows> vector<char> should do
[18:56:25] *** Joins: tmm88 (~tmm88@user/tmm88)
[18:56:29] <Zogatribe> however if it can be considered an encryption key then I suppose a string is as good as anything but I suspect this mapping would be the result of applying an algorithm to the key
[18:56:55] <Zogatribe> but this dicussion belongs in #C++-general to which I am banned
[18:56:56] <Zogatribe> meh
[18:57:02] <konfusedagain> The string ill be passing is sha512crypt
[18:57:43] <AliceMeows> Imo you should probably work on a vector<char> instead of a string
[19:00:02] *** Quits: tmm88 (~tmm88@user/tmm88) (Client Quit)
[19:00:04] <konfusedagain> Ok ill have a read, i know just basic vector. Never used it.
[19:00:17] *** Joins: Enitin (~Enitin@82.180.145.226)
[19:00:47] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[19:01:37] *** Quits: rg (~r-g@51-15-187-53.rev.poneytelecom.eu) (Read error: Connection reset by peer)
[19:03:38] *** Joins: rawley (~rawley@142.99.241.242)
[19:05:32] <AliceMeows> https://godbolt.org/z/PfTaY5497 that wont deduce T either :(
[19:07:24] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:07:31] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048)
[19:11:02] *** Joins: llh (~UPP@user/llh)
[19:11:57] *** Quits: jokoon (~eio@2a01:e0a:542:e160:116a:1fa2:ac44:35ce) (Quit: Leaving)
[19:15:49] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 240 seconds)
[19:18:33] <AliceMeows> Is there really no way to pass some invocable type and still deduce T?
[19:19:32] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048) (Remote host closed the connection)
[19:19:40] *** Joins: N4buc0 (~N4buc0@189.115.86.130)
[19:19:48] *** Joins: plastico (~plastico@neomutt/plastico)
[19:19:57] <anyone> void c(std::inovcable<T> auto f) isn't a syntax I recognize
[19:20:21] <AliceMeows> Its concepts
[19:22:21] *** Joins: Brainium (~brainium@user/brainium)
[19:23:13] <Zogatribe> doesn't `Invocable f`? I thought concepts allowed that
[19:23:19] <Zogatribe> *work
[19:23:50] <Zogatribe> also, I haven't started using concepts yet
[19:26:53] <AliceMeows> It could also be written like that https://godbolt.org/z/dn7v5M9sz or that https://godbolt.org/z/GdcWrY796
[19:27:00] *** Joins: Jeegh (~brute@176.33.66.185)
[19:27:30] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162)
[19:28:22] *** Joins: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[19:28:22] *** Quits: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[19:28:22] *** Joins: Elbeeo (~asskoala@user/asskoala)
[19:28:44] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[19:29:36] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[19:29:55] <AliceMeows> or https://godbolt.org/z/39zox71q9
[19:30:24] <AliceMeows> Neither of those deduce T :(
[19:30:30] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:32:03] *** Quits: ko (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[19:34:07] *** Joins: MasterK (~MK@82.78.72.17)
[19:34:28] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[19:35:20] <Alipha> :-) @ PJBoy | there's https://godbolt.org/z/fbGjbnczT potentially
[19:36:29] *** Elbeeo is now known as AssKoala
[19:39:27] *** Joins: abode (~abode@2a00:f29:80:41c:8230:49ff:fe6e:36b5)
[19:39:32] <Eelis> T can't be deduced in general because it would not be well-defined. for example, [](auto*){} is invocable<int*> but obviously int can't be deduced from anything
[19:40:49] <Eelis> or rather, int* can't be deduced from [](auto*){}
[19:41:03] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:44:52] *** Quits: froggyc (~froggy@2-235-241-212.ip230.fastwebnet.it) (Ping timeout: 272 seconds)
[19:45:29] *** Joins: [o (~istupy@2620:0:1003:206:7555:dc53:8a25:a389)
[19:45:35] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 260 seconds)
[19:47:12] *** Joins: jellie (~luv_panda@user/jellie)
[19:49:15] <Alipha> AliceMeows: why did you add T back into https://godbolt.org/z/PfTaY5497 ? and you're going have to extract more out of my function traits header if you want it to work with lambdas (why not just use the whole header? :-/ )
[19:49:28] <Alipha> AliceMeows: https://godbolt.org/z/zx6T816dd
[19:51:33] <AliceMeows> Alipha: I didn't copy your function_traits but just copied something I had stored locally
[19:51:56] <Alipha> oh, indeed
[19:52:46] <Alipha> std really needs a function_traits
[19:53:57] <AliceMeows> Yeah it could be very useful
[19:58:32] *** Quits: vancz_ (~vancz@user/vancz) (Quit: vancz_)
[19:58:40] *** Joins: froggyc (~froggy@2-235-241-212.ip230.fastwebnet.it)
[19:59:09] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:59:19] *** Joins: rgrinberg (~textual@177.248.146.16)
[19:59:28] *** Joins: vancz (~vancz@user/vancz)
[20:00:28] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:02:22] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[20:02:44] *** Joins: rawley (~rawley@142.99.241.242)
[20:03:44] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd)
[20:04:57] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[20:05:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[20:07:08] *** Joins: vancz (~vancz@user/vancz)
[20:09:25] *** Quits: trumae (~trumae@45.170.74.100) (Read error: Connection reset by peer)
[20:10:32] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[20:12:44] *** Joins: AmR (~AmREiSa@102.44.191.208)
[20:14:38] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 272 seconds)
[20:15:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[20:16:19] *** Joins: Enitin (~Enitin@82.180.145.225)
[20:16:29] *** Joins: gdd (~gdd@129.199.146.230)
[20:16:47] *** Quits: N4buc0 (~N4buc0@189.115.86.130) (Remote host closed the connection)
[20:17:11] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048)
[20:18:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:22:08] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:23:10] *** Joins: N4buc0_ (~N4buc0@189.115.86.130)
[20:23:15] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:d982:4aa4:35d0:f048) (Remote host closed the connection)
[20:24:53] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[20:25:35] *** Quits: rgrinberg (~textual@177.248.146.16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:26:00] *** Joins: seninha (~seninha@user/seninha)
[20:26:44] *** Joins: jellie (~luv_panda@user/jellie)
[20:27:39] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[20:28:43] <furrymcgee> it looks over complicated, bad programmers?
[20:29:20] <AliceMeows> What is?
[20:30:03] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:30:51] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-026.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[20:31:10] <furrymcgee>     std::enable_if_t<std::is_pointer_v<typename function_traits<std::remove_reference_t<F>>::template argument_t<0>>,i int> = 0>
[20:32:33] <AliceMeows> How else would you suggest to write it then?
[20:32:58] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:33:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:34:17] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d)
[20:34:17] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d) (Changing host)
[20:34:17] *** Joins: skapata (~Skapata@user/skapata)
[20:34:26] <furrymcgee> call is not a good function name to start with
[20:34:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[20:36:33] <Alipha> AliceMeows: i mean, you could write a `using` alias to hide the typename and template keywords (and remove_reference, while you're at it): template<typename F, std::size_t N> using function_argument_t = typename function_traits<std::remove_reference_t<F>>::template argument_t<N>;
[20:37:00] <AliceMeows> Yes I could, I was just rushing it so I didn't bother
[20:37:15] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:38:30] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[20:40:02] *** Quits: MasterK (~MK@82.78.72.17) (Remote host closed the connection)
[20:41:44] <anyone> std::next(end(deaf)) && call();
[20:43:46] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:699f:6e20:195b:1ccd) (Remote host closed the connection)
[20:44:09] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ac35:8160:2b6:e011)
[20:44:20] <anyone> call the next defendant :D
[20:46:34] *** Joins: rgrinberg (~textual@2806:102e:18:79a2:88b9:584f:14c:c37e)
[20:48:09] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 256 seconds)
[20:48:24] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:48:24] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:48:39] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[20:49:03] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[20:49:03] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 260 seconds)
[20:49:25] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[20:50:51] *** Joins: gdd (~gdd@129.199.146.230)
[20:53:10] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[20:53:17] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[20:55:10] *** Joins: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:55:10] *** Quits: Elbeeo (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:55:10] *** Joins: Elbeeo (~asskoala@user/asskoala)
[20:55:33] *** Quits: AssKoala (~asskoala@user/asskoala) (Read error: Connection reset by peer)
[20:57:38] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[21:01:25] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[21:04:04] *** Quits: Guest6919 (~Guest69@ip72-199-239-162.sd.sd.cox.net) (Quit: Connection closed)
[21:06:29] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[21:09:37] *** Joins: vancz (~vancz@user/vancz)
[21:12:24] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-f101-a2cf-39ba-27ce.res6.spectrum.com)
[21:14:43] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-b402-bd86-d3c0-b042.res6.spectrum.com) (Ping timeout: 260 seconds)
[21:18:31] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[21:19:52] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[21:21:46] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Ping timeout: 272 seconds)
[21:25:49] *** Joins: MoosieRachel (~Moosadee@198.248.38.26)
[21:25:51] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Remote host closed the connection)
[21:27:54] *** Joins: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk)
[21:36:18] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[21:37:33] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-f101-a2cf-39ba-27ce.res6.spectrum.com) (Ping timeout: 260 seconds)
[21:38:45] *** Quits: john99 (~john99@134.238.107.162) (Quit: Client closed)
[21:40:38] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Remote host closed the connection)
[21:41:01] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[21:41:11] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[21:41:19] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[21:44:57] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[21:45:45] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:45:57] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Ping timeout: 256 seconds)
[21:46:11] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[21:46:40] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[21:46:40] *** Joins: pulse (~pulse@user/pulse)
[21:46:42] *** Quits: MoosieRachel (~Moosadee@198.248.38.26) (Quit: Leaving)
[21:52:29] *** Joins: wakeup (~wakeup@user/wakeup)
[21:52:47] *** Joins: vicfred (~vicfred@user/vicfred)
[21:55:59] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[21:56:58] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[21:58:33] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[21:58:48] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[22:00:23] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[22:03:01] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[22:03:02] *** Joins: drbeco (~beco@user/beco)
[22:06:02] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[22:06:47] *** Quits: pa (~pah@user/pah) (Ping timeout: 252 seconds)
[22:07:11] *** Joins: Praise (~Fat@user/praise)
[22:07:35] *** Joins: pah (~pah@user/pah)
[22:08:47] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Quit: Leaving)
[22:09:02] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:09:36] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:09:48] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:11:11] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:11:43] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:12:01] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:12:15] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:17] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[22:13:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:13:51] *** Joins: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:13:51] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Client Quit)
[22:13:53] *** Quits: bob (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[22:15:06] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[22:18:28] *** Joins: sbrothy (~george@192038130202.mbb.telenor.dk)
[22:19:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) (Ping timeout: 250 seconds)
[22:20:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:21:38] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:22:29] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:23:01] *** Quits: jfsimon1981_b (~jfsimon19@6.62.6.84.rev.sfr.net) (Ping timeout: 240 seconds)
[22:23:37] *** Quits: sbrothy (~george@192038130202.mbb.telenor.dk) (Quit: leaving)
[22:24:19] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[22:28:23] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[22:28:37] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[22:29:14] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[22:29:34] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[22:30:20] *** Joins: jfsimon1981 (~jfsimon19@148.96.128.77.rev.sfr.net)
[22:30:20] *** pah is now known as pa
[22:34:18] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) (Ping timeout: 252 seconds)
[22:34:33] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.101)
[22:34:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:37:38] *** Quits: Tangent-Man (~Tang3nt-M@92.40.178.3.threembb.co.uk) (Ping timeout: 260 seconds)
[22:39:50] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[22:41:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:42:44] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[22:43:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:44:33] *** Quits: rgrinberg (~textual@2806:102e:18:79a2:88b9:584f:14c:c37e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:44:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:44:48] *** ChanServ sets mode: +v npaperbot
[22:45:31] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:45:31] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-d843-6013-df16-a9fe.res6.spectrum.com)
[22:46:35] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7)
[22:46:58] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:47:29] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 252 seconds)
[22:48:07] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[22:48:32] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 272 seconds)
[22:50:27] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[22:53:05] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:55:46] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Ping timeout: 245 seconds)
[22:55:57] *** Quits: proller (~p@2a02:6b8:b081:1232::1:0) (Remote host closed the connection)
[22:57:47] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[23:02:37] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:05:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:06:11] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:12:20] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[23:13:33] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:e2ee:c8b3:3901:c72c:e0d7) ()
[23:13:42] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[23:16:59] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 260 seconds)
[23:17:09] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 2.8)
[23:17:20] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:19:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:544e:226a:9b44:a162) (Ping timeout: 245 seconds)
[23:20:28] *** Joins: george (~george@192038130202.mbb.telenor.dk)
[23:20:32] *** Quits: george (~george@192038130202.mbb.telenor.dk) (Client Quit)
[23:20:37] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[23:21:10] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:22:52] *** Elbeeo is now known as AssKoala
[23:23:27] *** Quits: N4buc0_ (~N4buc0@189.115.86.130) (Quit: Leaving)
[23:23:32] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[23:26:01] *** Joins: sbrothy (~george@192038130202.mbb.telenor.dk)
[23:26:37] *** Quits: konfusedagain (~konfuseda@125.99.177.198) (Read error: Connection reset by peer)
[23:27:16] *** Joins: konfusedagain (~konfuseda@125.99.177.198)
[23:27:32] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[23:29:31] *** Quits: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec) (Ping timeout: 245 seconds)
[23:30:13] *** Joins: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f)
[23:32:08] *** Quits: trumae (~trumae@2804:18:4823:8f75:1:0:f7ff:8e4f) (Read error: Connection reset by peer)
[23:32:53] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:883b:c0af:767b:beac)
[23:32:53] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:883b:c0af:767b:beac) (Changing host)
[23:32:53] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:33:38] *** Joins: trumae (~trumae@2804:58d8:e00:ecdc:f96f:59f8:a40f:beec)
[23:34:44] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[23:44:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:46:37] <SaltHilStroller_> I'm writing some C++ wrapper code that deals with raw C IO buffers that contain various C structs. I'm defining a parent class that get's derived into child classes that process the various struct types. Is there a way in the parent class to define a "pointer" type variable that must be defined in the child class?
[23:47:47] *** Quits: sbrothy (~george@192038130202.mbb.telenor.dk) (Read error: No route to host)
[23:47:47] <AliceMeows> sfinae or concepts
[23:48:08] *** zy_ is now known as zy
[23:49:11] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 260 seconds)
[23:49:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 250 seconds)
[23:49:44] *** Joins: Enitin (~Enitin@82.180.145.225)
[23:51:14] *** Quits: badfilms (~badfilms@user/badfilms) (Ping timeout: 272 seconds)
[23:52:49] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0dd9-0564-5ee4-7b35.res6.spectrum.com)
[23:53:03] *** Joins: badfilms (~badfilms@user/badfilms)
[23:53:49] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 240 seconds)
[23:54:38] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-d843-6013-df16-a9fe.res6.spectrum.com) (Ping timeout: 260 seconds)
[23:54:40] <Alipha> SaltHilStroller_: sounds like you want CRTP
[23:54:43] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[23:54:46] <Alipha> !crtp
[23:54:47] <nolyc> crtp is the Curiously Recurring Template Pattern. A form of static polymorphism where a derived class inherits from a base class template with the derived class as the template parameter.
[23:55:55] *** Joins: crankslider (~slidercra@user/slidercrank)
[23:56:23] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:56:53] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[23:59:13] <[o> !give SaltHilStroller_ xy
[23:59:14] <nolyc> SaltHilStroller_: xy is You're trying to do X, and you thought of solution Y. So you're asking about solution Y, without even mentioning X. The problem is, there might be a better solution, but we can't know that unless you describe what X is. See http://xyproblem.info/
[23:59:39] <SaltHilStroller_> You got me
