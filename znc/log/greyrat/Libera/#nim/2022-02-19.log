[00:16:29] <FromDiscord> <cs> sent a code paste, see https://play.nim-lang.org/#ix=3PYS
[00:17:44] <FromDiscord> <cs> I have tried this a few different ways , but for some reason I can't get the channel float values so that I can invert them. Also,
[00:17:45] <FromDiscord> <cs>  https://media.discordapp.net/attachments/371759389889003532/944334396138340362/unknown.png
[00:18:17] <FromDiscord> <auxym> In reply to @Waldecir Santos "Is it possible to": search keyword: `typedesc`. note however: typeof can only be used at compile time, types are a compile time thing.
[00:19:17] <FromDiscord> <cs> Another question: what is a way I can replicate the Ternary Operator so that the if else isn't so verbose?
[00:19:50] <FromDiscord> <auxym> In reply to @cs "What am I doing": when constructing your `Color` object, I'm pretty sure you need to use field names like `Color(field1: "val", ...)`
[00:20:27] <FromDiscord> <cs> In reply to @auxym "when constructing your `Color`": ok
[00:21:11] <FromDiscord> <cs> That seems to solve one of the issues. Thanks
[00:21:37] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3PYU
[00:22:01] <FromDiscord> <auxym> can even put it all on 1 line if you want
[00:22:15] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[00:23:42] <FromDiscord> <cs> Any ideas on this? For some reason I can't access the Color channels as floats https://media.discordapp.net/attachments/371759389889003532/944335894838652938/unknown.png
[00:24:03] <FromDiscord> <auxym> not familiar with that library, can you link it please?
[00:24:29] <FromDiscord> <cs> In reply to @auxym "not familiar with that": https://nimdocs.com/treeform/chroma/chroma.html
[00:25:28] <FromDiscord> <auxym> try `clr.r`, `clr.g`, etc instead of `[]` indexing
[00:25:39] <FromDiscord> <auxym> the type doesnt have `[]` defined
[00:26:29] <FromDiscord> <cs> In reply to @auxym "try `clr.r`, `clr.g`, etc": Yep. That worked. Not sure why I didn't think of that
[00:28:21] <FromDiscord> <auxym> btw, it's a matter of taste, but I think it's more idiomatic nim to use implicit return with the automatic `result` variable rather than assign a new variable and return it.
[00:29:39] <FromDiscord> <cs> In reply to @auxym "btw, it's a matter": How does that actually work? Is it just assigning the return value to ``result``?
[00:29:47] <FromDiscord> <auxym> yes
[00:29:49] <FromDiscord> <auxym> sent a code paste, see https://play.nim-lang.org/#ix=3PYW
[00:29:56] <FromDiscord> <auxym> result is implicitly returned
[00:29:58] <FromDiscord> <cs> In reply to @auxym "yes": Ok, that makes sense.
[00:35:36] <FromDiscord> <Forest> How would i use a Nim seq as an argument for a JS argument using importjs?
[00:35:54] <FromDiscord> <Forest> Since Nim does some special wrapping
[00:45:20] <FromDiscord> <Forest> :p
[00:58:21] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 272 seconds)
[01:06:25] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[01:11:19] *** Joins: xet7 (~xet7@user/xet7)
[01:19:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:22:55] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[01:38:16] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[01:38:55] <FromDiscord> <System64 ~ Flandre Scarlet> Is it normal it's considered as a virus? https://media.discordapp.net/attachments/371759389889003532/944354824596643940/unknown.png
[01:40:05] <FromDiscord> <exelotl> yeah, certain nim binaries (`finish.exe` and `nimble.exe`) get falsely flagged by antivirus software all the time :(
[01:40:53] <FromDiscord> <System64 ~ Flandre Scarlet> AVs are dumb
[01:52:05] *** Joins: PMunch (~PMunch@user/pmunch)
[01:59:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:01:07] <PMunch> Hmm, I'm struggling creating the most basic destroy hook
[02:01:21] <PMunch> My program compiles and runs but the hook is never called
[02:01:38] <PMunch> My editor complains that it can't register another destroy hook
[02:08:32] <PMunch> Aha, apparently my `Test[T] = object; field: T` was too basic
[02:08:47] <PMunch> I changed it to `field: ptr T` and now it worked
[02:08:54] <PMunch> That seems like a strange limitation
[02:08:59] <PMunch> What if T was a pointer type?
[02:09:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:09:20] <PMunch> Ah, it also works if T is a `ptr int` for example
[02:09:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:09:27] <PMunch> Okay, less weird, still a bit weird
[02:09:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:10:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[02:11:41] <PMunch> Ah damn it, I was hoping the VM would run the destructor at the end of the module scope if I created a destructor and created a {.compileTime.} variable :P
[02:12:11] <PMunch> Wanted to see if I could implement some macro magic which would check whether a certain proc had been called or not
[02:20:52] <nrds> <06Prestige99> What fancy stuff are you making now PMunch? :P
[02:21:10] <PMunch> Haha, nothing in particular
[02:21:20] <PMunch> It's just something that I've wanted for a while
[02:22:06] <PMunch> This time it came up because I wanted Ratel to be able to tell if the setup and loop procedures where actually being run or not
[02:22:21] <PMunch> And throw a friendly hint that if you don't have them your program might not actually do anything
[02:28:17] <FromDiscord> <System64 ~ Flandre Scarlet> why do I have all thoses errors? https://media.discordapp.net/attachments/371759389889003532/944367244002099221/unknown.png
[02:34:18] <PMunch> It seems like your compiler and Nim doesn't agree on the size of an int
[02:34:36] <PMunch> And it seems like your terminal doesn't agree with itself about which characters goes where..
[02:36:53] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @PMunch "It seems like your": I never had this before
[02:37:41] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:37:50] <PMunch> It's probably because it's too small to output the whole line, and then Powershell in its infinite wisdom decides to wrap a line in-between two characters which aren't supposed to be wrapped between
[02:38:16] <PMunch> E.g. a CR and an LF (although this is more likely to be some multi-byte colour code or UTF-8)
[02:38:32] <FromDiscord> <System64 ~ Flandre Scarlet> PS uses UTF-8
[02:38:52] <PMunch> Then it misinterprets those bytes since it is now something different than it was supposed to be and it garbles all the text
[02:39:05] <PMunch> Doesn't it use UTF-16 like the rest of MS products?
[02:39:12] <PMunch> I'd be surprised if it didn't
[02:43:09] <FromDiscord> <System64 ~ Flandre Scarlet> AH I see now https://media.discordapp.net/attachments/371759389889003532/944370984411074590/unknown.png
[02:46:01] <FromDiscord> <System64 ~ Flandre Scarlet> okay fixed
[02:47:09] <PMunch> Do you have five MinGW installs?
[02:47:24] <PMunch> Well, six now I guess if you grabbed the Nim one as well
[02:47:33] <FromDiscord> <Rika> Looks more like three
[02:47:40] <FromDiscord> <Rika> Wait four
[02:47:57] <PMunch> Still, that's N-1 too many
[02:48:04] <FromDiscord> <System64 ~ Flandre Scarlet> Taboo : Four of a Kind
[02:48:39] <FromDiscord> <System64 ~ Flandre Scarlet> btw, which is better? https://media.discordapp.net/attachments/371759389889003532/944372371433857034/unknown.png
[02:49:25] <FromDiscord> <Elegantbeef> nimsaem's
[02:49:56] <FromDiscord> <System64 ~ Flandre Scarlet> alright, thanks
[02:51:12] <FromDiscord> <Elegantbeef> You may need to use the workspace settings to get it to work 100%
[02:51:29] <FromDiscord> <Elegantbeef> https://github.com/saem/vscode-nim#options `nim.project` here
[03:00:03] <NimEventer> New post on r/nim by laker88: Nim cannot find a file, see https://reddit.com/r/nim/comments/svvl6p/nim_cannot_find_a_file/
[03:36:02] <FromDiscord> <Forest> In reply to @exelotl "yeah, certain nim binaries": Eh? But why?
[03:36:50] <FromDiscord> <Rika> Because heuristics are not infallible?
[03:37:31] <FromDiscord> <Forest> Fair enough, but surely people have reported it as a false positive?
[03:39:29] <PMunch> Yeah, some people have
[03:39:46] <PMunch> Whether or not it's enough for the virus vendors to care though is another question..
[03:40:28] <FromDiscord> <Rika> Yes
[03:41:22] <PMunch> I guess that's the price to pay for being an easy to use language with little overhead that can run anywhere, people are going to write malware in it
[03:41:32] <FromDiscord> <xx_ns> as someone who has spent a lot of time debugging antiviruses and their mechanisms for flagging:
[03:41:46] <FromDiscord> <xx_ns> it's quite easy for a binary to be flagged as malicious
[03:42:18] <FromDiscord> <Yepoleb> AV vendors just don't care
[03:42:25] <FromDiscord> <xx_ns> flagging an already-malicious binary as non-malicious requires reverse engineers at the AV companies to analyze the binary to verify that it is in fact not malicious
[03:42:54] <FromDiscord> <xx_ns> it's not that they don't care, i think that's being a bit facetious
[03:43:01] <FromDiscord> <xx_ns> they just have a LOT of work
[03:43:34] <FromDiscord> <xx_ns> and binaries with more false flag reports are obviously higher prio than the ones with not as much
[03:43:47] <FromDiscord> <Yepoleb> I even had a hello world compiled with mingw64 get flagged
[03:44:49] <FromDiscord> <xx_ns> yes, because unfortunately for nim, a lot of malware has been written in it, and non-malicious nim binaries also have IoCs identified from the malicious ones
[03:45:03] <FromDiscord> <xx_ns> even though those IoCs are not actually genuine indicators of compromise
[03:45:10] <FromDiscord> <Yepoleb> Oh, it was not nim, it was C
[03:54:07] <FromDiscord> <Yepoleb> If it was just a few random hits with applications that do crazy system and network stuff that would be excusable to me, but flagging every binary made with a certain compiler is incredibly stupid
[03:55:59] <FromDiscord> <Yepoleb> If it's impossible to fix the rampant false positives maybe you're approaching things the wrong way
[03:56:57] <PMunch> I'm guessing the way it works is that they have some algorithm which generates a fingerprint given sample files. Currently that algorithm is fed with malware written in Nim, and little else. So naturally it finds some commonalities between the binaries which is what Nim does. So it creates fingerprints which targets all Nim programs. If we manage to get some negative samples into the mix this shouldn't happen any longer as the algorithm would no longer 
[03:56:58] <PMunch> recognise Nim stuff as just common between viruses.
[03:57:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[04:01:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:03:49] <FromDiscord> <Elegantbeef> The joke being people release software written in Nim 😛
[04:04:01] <FromDiscord> <Elegantbeef> Oh wait not releasing software is a me issue
[04:10:12] <FromDiscord> <Rika> In reply to @Yepoleb "If it's impossible to": People will complain about a similar thing if they were rampant with false negatives
[04:10:20] <FromDiscord> <Rika> Having a perfect algorithm is impractical
[04:10:58] <PMunch> Hmm, so apparently my PROGMEM stuff for Ratel doesn't work when it's placed in the global scope..
[04:11:21] <PMunch> Is there a way to detect if we're in the global scope or not?
[04:13:05] <FromDiscord> <Rika> I assume not
[04:17:28] <NimEventer> New question by pooooky: Nim Table is not updated, see https://stackoverflow.com/questions/71181417/nim-table-is-not-updated
[04:25:40] <FromDiscord> <auxym> had a  quick look but I can't see the issue with that one
[04:27:28] <FromDiscord> <Rika> There isn’t enough info
[04:27:45] <FromDiscord> <Rika> Or maybe it has to do with methods, but that would be one hell of a big
[04:27:45] <FromDiscord> <Rika> Bug
[04:31:56] <PMunch> Hmm, someone should have a look at highlight.js. It's not doing a great job highlighting Nim code :P
[04:34:45] <FromDiscord> <Rika> I’d say because most of the time they don’t look into how it works and just assume it’s like Python?
[04:37:47] <FromDiscord> <Forest> In reply to @Forest "How would i use": Oh yeah, anyone?
[04:42:12] <PMunch> toJs from jsffi perhaps?
[04:43:08] <FromDiscord> <huantian> In reply to @Rika "I’d say because most": Wdym Nim is just python with forced typing
[04:43:21] <FromDiscord> <Rika> In reply to @huantian "Wdym Nim is just": True
[04:46:36] *** Joins: shadow0133 (~shadow013@194.146.248.72)
[04:49:06] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[04:59:55] <FromDiscord> <Forest> In reply to @PMunch "toJs from jsffi perhaps?": Would there be a way to do it in the pragma?
[05:03:00] *** Quits: shadow0133 (~shadow013@194.146.248.72) (Quit: Client closed)
[05:10:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:20:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:21:10] <FromDiscord> <Forest> :p
[05:51:26] <FromDiscord> <Elegantbeef> Pmunch do you have a symbol for your progmem stuff?
[05:52:00] <FromDiscord> <Elegantbeef> Checks irc logs and see that he's left the building
[06:00:35] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:22:42] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:47:40] <FromDiscord> <aph> nimble forgot to close ansi moment https://media.discordapp.net/attachments/371759389889003532/944432522849304636/unknown.png
[06:47:43] <FromDiscord> <demotomohiro> @PMunch `owner` proc in macros module might be able to see if the symbol is top level or not.
[07:20:16] <FromDiscord> <Arathanis> In reply to @Elegantbeef "https://github.com/saem/vscode-nim#options `nim.pro": I agree with this. Definitely use this one. It is the one with fewer downloads. But is actively mainted. Updated ~20 days ago.↵↵Also when using VS Code for nim I find the following to be vital to the best experience. https://media.discordapp.net/attachments/371759389889003532/944440727960703047/unknown.png
[07:20:36] <FromDiscord> <Arathanis> The delay can be whatever you want but I find 200ms gives me the best Intellisense experience.
[07:22:42] <FromDiscord> <Arathanis> the nim extension only runs on the on-disk source file instead of the swap file maintained by VS Code so it only sees things when the file is saved. Turning on autoSave greatly improves the experience.
[07:26:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:32] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:42:02] <FromDiscord> <ATwenty0ne> Is there any reason why using stdcall in 32 bit nim doesn’t underscore the function names
[07:56:24] <FromDiscord> <huantian> any buitlin func for finding the index of a subseq? this is what I'm doing rn
[07:56:40] <FromDiscord> <huantian> https://play.nim-lang.org/#ix=3Q0I
[07:57:51] <FromDiscord> <Elegantbeef> `a.find(b)`
[07:58:00] <FromDiscord> <huantian> wait that works↵should've checked
[07:59:14] <FromDiscord> <Elegantbeef> Why wouldnt it work, seq's have value semantics 😀
[08:00:08] <FromDiscord> <huantian> oh wait I'm looking for like the first time certain items appear in a specific order in a seq
[08:00:41] <FromDiscord> <Elegantbeef> Ah
[08:01:15] <FromDiscord> <Elegantbeef> `if bigSeq[i..i + subSeq.len - 1] == subSeq:` do not do this 😀
[08:01:30] <FromDiscord> <huantian> duly noted
[08:01:55] <FromDiscord> <Elegantbeef> It's going to allocate a lot of garbage, just iterate the range and check if it matches the subseq
[08:02:21] <FromDiscord> <Elegantbeef> I mean i guess if this is a one off dont worry, but if you care about performance that's going to cause a ton of allocations
[08:03:40] <FromDiscord> <Elegantbeef> I guess you can do `    if bigSeq.toOpenArray(i, subSeq.high) == subSeq:`
[08:04:40] <FromDiscord> <Forest> Does Nim emit ES6 JS code?
[08:05:11] <FromDiscord> <Forest> Since don't most, if not all modern browsers use ES6 nowadays?
[08:05:12] <FromDiscord> <Elegantbeef> No it emits ES3 iirc
[08:05:24] <FromDiscord> <huantian> what's the diff between openArray.high vs openArray.len?
[08:05:32] <FromDiscord> <Forest> In reply to @Elegantbeef "No it emits ES3": Ah :/
[08:06:01] <FromDiscord> <huantian> ig high gives me nicer syntax highlighting 😛
[08:06:03] <FromDiscord> <Elegantbeef> high is len - 1
[08:06:08] <FromDiscord> <huantian> ahh
[08:06:12] <FromDiscord> <huantian> that's helpful
[08:06:40] <FromDiscord> <huantian> why would toOpenArray avoid allocations when slicing doesn't
[08:06:59] <FromDiscord> <Elegantbeef> slicing returns a sequence, `toOpenArray` returns an openarray
[08:07:15] <FromDiscord> <Elegantbeef> Nim doesnt have viewtypes so you cannot hold onto openArrays yet
[08:07:23] <FromDiscord> <Elegantbeef> view types by default\
[08:07:49] <FromDiscord> <huantian> hm ok
[08:10:20] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Q0K guess `==` doesnt work properly, so there you go
[08:10:37] <FromDiscord> <Forest> I don't know how I'm supposed to use more modern features in Nim's JS backend then :|
[08:12:02] <FromDiscord> <Forest> I need to port this code (<https://www.toptal.com/developers/hastebin/bukidufoji.typescript>) to Nim but have no idea how to go about it
[08:12:12] <FromDiscord> <Forest> Mainly everything involving the class :p
[08:16:42] <FromDiscord> <Elegantbeef> I dont follow the issue
[08:17:12] <FromDiscord> <huantian> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3Q0K guess `==` doesn": how did it not work properly?
[08:17:22] <FromDiscord> <Elegantbeef> It checks if the pointers are equal
[08:17:27] <FromDiscord> <huantian> ah
[08:17:33] <FromDiscord> <Elegantbeef> Wait nvm it works
[08:17:38] <FromDiscord> <Elegantbeef> I just had an issue 😛
[08:17:48] <FromDiscord> <huantian> mood
[08:20:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Q0M
[08:21:44] <FromDiscord> <Elegantbeef> @Forest\: ^
[08:24:44] <FromDiscord> <Elegantbeef> `var` might be wrong, but regardless seems close
[08:25:32] <FromDiscord> <Forest> Ah okay then, thanks, that makes sense!
[08:25:45] <FromDiscord> <Elegantbeef> might not need the `JsObject`
[08:28:14] <FromDiscord> <Forest> What does the `importC` do in this case for the type?
[08:28:38] <FromDiscord> <Elegantbeef> "Imports compatible"
[08:28:59] <FromDiscord> <Elegantbeef> Dont know if `importJs` would work there
[08:30:19] <FromDiscord> <Rika> In reply to @Elegantbeef ""Imports compatible"": Not really, it still means import from C
[08:32:11] <FromDiscord> <Elegantbeef> Eh import js/cpp are only really for procedures afaict
[08:33:13] <FromDiscord> <Rika> I think that’s just because changing what it is would break backwards compatibility so in the future it will be corrected aka 2.0
[08:50:29] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[08:50:57] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[09:02:40] <FromDiscord> <Forest> Ah okay
[09:06:15] <FromDiscord> <retkid> is there a good way of requesting a url and seeing where it redirects to?
[09:07:42] <FromDiscord> <Rika> https://nim-lang.org/docs/httpclient.html#redirects
[09:07:45] <FromDiscord> <Rika> Then get
[09:07:58] <FromDiscord> <Rika> The response should have where it redirects to
[09:08:25] <FromDiscord> <retkid> ahhhh
[09:09:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:13:21] <FromDiscord> <retkid> In reply to @Rika "The response should have": yea its not in the headers
[09:13:26] <FromDiscord> <retkid> i dont know where else it would be?
[09:13:31] <FromDiscord> <retkid> bodyStream?
[09:13:38] <FromDiscord> <Rika> Yes afaik
[09:13:57] <FromDiscord> <Rika> It’s in the body and the status code should say it’s a redirect
[09:14:16] <FromDiscord> <retkid> status code is 200
[09:14:34] <FromDiscord> <retkid> but in the body is just the html of the page?
[09:14:45] <FromDiscord> <retkid> i need the url that it went to
[09:15:02] <FromDiscord> <Rika> Eeh really now
[09:15:09] <FromDiscord> <Rika> What is in the body
[09:15:26] <FromDiscord> <Rika> If there’s a node with a reload attribute that’s a redirect
[09:15:47] <FromDiscord> <Rika> Like “<meta http-equiv="Refresh" content="0; url='https://www.w3docs.com'" />”
[09:15:49] <FromDiscord> <retkid> in the stream?
[09:15:50] <FromDiscord> <Rika> I copied this
[09:15:52] <FromDiscord> <retkid> ah
[09:18:06] <FromDiscord> <Rika> I’m not sure if Nim follows those redirects though tbh
[09:33:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[10:02:33] <FromDiscord> <Forest> Is there a way i could completely override existing Nim procs?
[10:02:55] <FromDiscord> <Forest> I don't want to use the existing ones because they're just incompatible with the environment I'm using so
[10:03:18] <FromDiscord> <Elegantbeef> if they're in system it's a bit annoying, otherwise yes just write your variant
[10:07:10] <FromDiscord> <Forest> Alright 👍
[10:22:51] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:58:37] <FromDiscord> <Bung> It seems std httpclient can't download attachment? it shows parse http error during parsing header
[11:46:04] <FromDiscord> <haolian9 (高浩亮)> could you provide a minimal code to reproduce and exact error info? it-ok-on-my-machine™
[12:20:46] <FromDiscord> <Bung> https://github.com/bung87/cp_invoice
[12:22:36] <FromDiscord> <Bung> I use this download file from clipboard, you tried the url pass to download is a attachment in browser ?
[12:23:23] <FromDiscord> <Bung> maybe it only occurs on some http server
[12:25:19] <FromDiscord> <Bung> error is `Exception message: invalid http version, `Ⱦ�;��N�L�dD�� wu��0΀&+��,��9��m�����  ���"�?�]�``
[12:31:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[13:04:09] *** Joins: Abrax (~Abrax@user/abrax)
[13:04:23] <Abrax> ah i see
[13:05:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:14:13] <FromDiscord> <Nabulec> sup
[13:15:22] <FromDiscord> <Elegantbeef> Hello
[13:17:19] <nrds> <06Prestige99> sup Beef
[13:17:54] <FromDiscord> <Elegantbeef> Nothing as usual
[13:19:01] <FromDiscord> <Nabulec> do you use the reactiflux discord-irc bridge
[13:25:36] <FromDiscord> <Rika> No
[13:25:41] <FromDiscord> <Rika> It’s a custom made bridge
[13:38:32] <FromDiscord> <haolian9 (高浩亮)> as the header part was binary format, i think the server do not speak http/1.\, maybe http/2?↵(@Bung)
[13:39:05] <FromDiscord> <haolian9 (高浩亮)> std/httpclient does not work with http/2, is it correct?
[13:39:18] <FromDiscord> <Rika> Yes
[13:39:30] <FromDiscord> <Rika> Nim doesn’t have much for 2 yet
[13:39:37] <FromDiscord> <Rika> Neither a client nor a server I believe
[13:39:54] <FromDiscord> <Rika> Though when it comes to 2, it should start with a 1.1 upgrade
[13:39:58] <FromDiscord> <Rika> So it might be 3?
[13:41:05] <FromDiscord> <Rika> Ah can’t be 3 since that runs over UDP and QUIC
[13:42:08] *** Joins: pro (~pro@user/pro)
[13:43:14] <FromDiscord> <haolian9 (高浩亮)> thanks!
[13:43:20] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:31:32] *** Quits: gsalazar (~gsalazar@194.38.148.130) (Ping timeout: 272 seconds)
[14:33:26] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[14:37:01] <FromDiscord> <gdquest> Hey people, just wanted to say we finished our first sizeable Nim project, it's a build system and formatter that's really specialized - it formats and builds markdown lessons to teach the Godot game engine. And we've had a great experience with the language
[14:37:51] <FromDiscord> <enthus1ast> 👍️
[14:37:57] *** Quits: pro (~pro@user/pro) (Ping timeout: 240 seconds)
[14:39:01] <FromDiscord> <gdquest> We wrote a partial markdown parser (block parser, because we don't need the full AST), formatter for prose, and my teammate wrote the build system and rewrote the formatter after a first iteration I made.↵Actually, the build system's code is now smaller than before, when we used Python and Scons - it's smaller without the framework!
[14:39:21] <FromDiscord> <gdquest> If anyone's curious it's all MIT-licensed, available here, in the src/ directory: https://github.com/GDQuest/product-packager/
[14:40:54] <FromDiscord> <gdquest> The only thing my teammate couldn't get to work yet is running sub-processes/command-line commands in parallel with `execCmdEx()`
[14:41:11] <FromDiscord> <gdquest> We saw that `weave` library for multithreading, but didn't get to try it yet.
[14:41:46] <FromDiscord> <enthus1ast> i think you should use startProcess for this
[14:42:16] <FromDiscord> <Rika> Weave isn’t for subprocess execution
[14:42:36] <FromDiscord> <enthus1ast> startProcess with poEvalCommand option
[14:43:48] <FromDiscord> <gdquest> Gotcha regarding weave. And thanks, we'll look into that proc.
[14:46:11] *** Joins: pro (~pro@user/pro)
[14:46:42] <FromDiscord> <enthus1ast> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: i tried emacs (again), but it just killed me with being a complete other world, BUT i gave nvim another try for programming this time it could maybe replace vscode for me
[14:46:53] <FromDiscord> <enthus1ast> have to say i'm on windows
[14:48:36] <FromDiscord> <enthus1ast> since i mostly work on windows these days all the good stuff requires double the amounth of work unfortunately
[14:49:20] <FromDiscord> <Rika> Why do you want a replacement for VSC
[14:49:46] <FromDiscord> <enthus1ast> just curios and i use vim quite often for admin work already
[14:50:03] <FromDiscord> <Rika> Okay
[14:50:27] <FromDiscord> <Rika> Yeah people joke about vim being hard to exit, LOL try fucking exiting emacs
[14:50:40] <FromDiscord> <Rika> Shit is nigh impossible to do for me
[14:50:49] <FromDiscord> <haxscramper> IMO emacs keybindings are unusable as well
[14:51:01] <FromDiscord> <haxscramper> But it does emulate vim better than vim itself, so
[14:52:17] <FromDiscord> <enthus1ast> i'm still waiting for good nim tooling unfortunately \:/
[14:52:22] <FromDiscord> <Rika> It does? How so
[14:52:32] <FromDiscord> <haxscramper> evil-mode
[14:52:45] <FromDiscord> <Rika> I know of it but that explains nothing about emulating better
[14:53:36] <FromDiscord> <gdquest> In reply to @haxscramper "But it does emulate": That's the reason I use it. Not evil-mode itself but the experience you get in vim mode overall
[14:53:37] <FromDiscord> <haxscramper> For me it is more usable than configuring and using vim
[14:54:02] <FromDiscord> <Rika> I don’t follow
[14:54:13] <FromDiscord> <haxscramper> I like it better
[14:54:14] <FromDiscord> <gdquest> A big selling point is doom emacs, or spacemacs for those who prefer it - they do the hard config work for you, and you don't have something as polished for vim
[14:54:17] <FromDiscord> <haxscramper> simple enough?
[14:54:24] <FromDiscord> <Rika> Okay
[14:55:15] <FromDiscord> <gdquest> For me editing wise the nice thing is you get hybrid input with evil-mode - you can use Ctrl backspace and all the basic text editing shortcuts out of the box
[14:55:32] <FromDiscord> <Rika> I’ve already done my config work and if ever I need a plugin I’d much rather program it in Lua than Lisp….
[14:55:36] <FromDiscord> <gdquest> Or copy to the system clipboard by default, save with Ctrl S and all
[14:55:49] <FromDiscord> <gdquest> Yeah so a configured nvim is just as good
[14:56:04] <FromDiscord> <haxscramper> emacs allows you to write configuration in C, and nim compiles to C
[14:56:11] <FromDiscord> <haxscramper> so I can write my configuration in nim
[14:56:22] <FromDiscord> <Rika> I wouldn’t like to write my config in C
[14:56:22] <FromDiscord> <haxscramper> which, by definition, beats all other options
[14:56:24] <FromDiscord> <Rika> Or Nim
[14:56:33] <FromDiscord> <haxscramper> depends on what do you put in your "config"
[14:56:40] <FromDiscord> <gdquest> The last thing I really love is native compilation of lisp, when you use loads of plugins with the latest version it stays blazing fast
[14:56:49] <FromDiscord> <haxscramper> I just write a shortcut that transposes two operands of infix expression
[14:56:56] <FromDiscord> <gdquest> Vscode gets really slow as you add plugins
[14:56:57] <FromDiscord> <haxscramper> using tree-sitter parser
[14:57:04] <FromDiscord> <Rika> And I assume nvim has this option too…
[14:57:16] <FromDiscord> <haxscramper> I consider it a "config", but I don't think a lot of people spend time on this
[14:57:20] <FromDiscord> <enthus1ast> wait what you write your emacs config in nim \:)
[14:57:23] <FromDiscord> <enthus1ast> awesome
[14:57:52] <FromDiscord> <gdquest> Awesome I dunno but must say, using lisp to configure anything is really the not so great part of emacs
[14:58:41] <FromDiscord> <gdquest> The language is... fine, it's imperative, but it feels a bit dated and bloated (lots of deprecated functions you have to learn not to use)
[14:59:01] <FromDiscord> <haxscramper> the language is garbage
[14:59:29] <FromDiscord> <gdquest> The vast majority of languages are if you take it like that
[14:59:49] <FromDiscord> <haxscramper> the idea/framework around it is good, but I can't see myself writing anything complext in dynamically typed&scoped language. nim is better and can be as concise as I need
[14:59:51] <FromDiscord> <gdquest> Also in general, using imperative code to configure a program sucks, one error can prevent loading or break stuff
[15:00:17] <FromDiscord> <haxscramper> In reply to @gdquest "The vast majority of": yeah, I'm on a more pessimistic side of the language evaluation most of th etime
[15:00:58] <FromDiscord> <haxscramper> also with nim I can pull in all the C libs into my things, and god knows what I can do then
[15:00:58] <FromDiscord> <gdquest> When I say fine, if I'm gonna write code to configure a program, I'd rather have something like nim too
[15:01:33] <FromDiscord> <gdquest> but also hassle-free, tightly integrated, with excellent linting if possible
[15:01:48] <FromDiscord> <gdquest> Well gotta tap out, ttyl!
[15:05:00] <FromDiscord> <Rika> well i dont know, im not a fan of "super configs" like doom/space-xxx so most of my config/plugins are self derived or searched for
[15:05:18] <FromDiscord> <Rika> i dont know how good the integration of evil mode is with any other plugins
[15:05:24] <FromDiscord> <Rika> i dont want to deal with lisp ever
[15:05:31] <FromDiscord> <Rika> eh
[15:07:17] <FromDiscord> <haxscramper> In reply to @Rika "well i dont know,": They provide a baseline experience, and you can configure things on top
[15:07:52] <FromDiscord> <haxscramper> In reply to @Rika "i dont want to": On this part I agree - for anything more complex than `a = b` it is very annoying
[15:07:58] <FromDiscord> <haxscramper> and even `a = b` is annoying
[15:27:18] *** Joins: ltriant (~ltriant@118.102.122.246)
[15:32:05] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:19] <FromDiscord> <Rika> In reply to @haxscramper "They provide a baseline": i usually do not want that base experience, it is usually old or outdated
[15:42:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:46:30] <FromDiscord> <haolian9 (高浩亮)> regarding to tree sitter and nvim, i found https://github.com/haxscramper/tree-sitter-nim,  but i havent gave it a try
[15:46:54] <FromDiscord> <haxscramper> it doesn't work
[15:47:06] <FromDiscord> <haxscramper> writing nim parser for tree-sitter turned out a lot more complicated that I can manage
[15:48:09] <FromDiscord> <haxscramper> so unless there is a tree-sitter expert that is willing to give it a push (with all the syntax elements like nested comments, indentation, UFCS, commmand syntax etc.) I don't think we can get this for nim
[15:48:42] <FromDiscord> <haolian9 (高浩亮)> anyway, thanks; treesitter and treesitter-refactor is just great
[16:13:49] <FromDiscord> <aph> sent a code paste, see https://paste.rs/epL
[16:25:20] *** Joins: PMunch (~PMunch@user/pmunch)
[16:31:23] <FromDiscord> <Rika> it is likely the integer size thing i assume; if so, then your C compiler and Nim do not agree on how big an `int` is
[16:31:31] <FromDiscord> <Rika> or rather how big a pointer is, afaik
[16:32:32] <FromDiscord> <aph> hmm
[16:36:58] <FromDiscord> <aph> seems like i need an updated version of gcc
[16:45:57] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[16:46:17] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:02:36] <PMunch> Argh, this is driving me nuts!
[17:05:02] <FromDiscord> <auxym> the global progmem thing?
[17:06:38] <PMunch> Yup
[17:07:13] <PMunch> Nim insists on creating nimZeroMem even though it's codegenDecl, noInit, and cimport...
[17:07:21] <PMunch> importc*
[17:08:42] <PMunch> Eureka!
[17:08:53] <PMunch> It seems like attaching "global" did it!
[17:09:28] <PMunch> Since these are generated from inside a template anyways they will all have unique symbols
[17:09:34] <PMunch> So that's not an issue
[17:10:02] <PMunch> Hmm, maybe I should try to make it a macro and generate the temporary name based on the content
[17:10:29] <PMunch> That way if you did `p"Hello world"` one place and then `p"Hello world"` another place in your code they should both bind to the same symbol
[17:20:08] <PMunch> Well that worked surprisingly well
[17:20:46] <PMunch> Had to throw on a small `when not declared` around the declaration, so I think this would only make it module-local but that should be fine
[17:20:54] <PMunch> I guess I could also keep a compile-time table
[17:30:17] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[17:33:51] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[17:37:19] <PMunch> Hmm, when working with raw string literals, is there a good way to get the length it would be when parsed by C?
[17:40:33] *** Joins: arkurious (~arkurious@user/arkurious)
[17:42:27] <FromDiscord> <haxscramper> they are codegened into the structure that contains length
[17:42:45] <PMunch> Huh?
[17:42:48] <FromDiscord> <haxscramper> `NimStrLit` or something similar, so there is an explicit  `.len` field in the code
[17:43:29] <FromDiscord> <haxscramper> `STRING_LITERAL(TMyyMRi7JdIWcRPn9b9bzYA6TQ_3, "123123313", 9);`
[17:43:34] <PMunch> Ah yes, but say I have a string `"Hello world\n"` which I pass to my macro `p` as `p"Hello world\n"`
[17:44:28] <PMunch> That literal is now 13 bytes long, even though the string it represents is only 12 bytes long because the two characters of the escape sequence represents a single character
[17:44:50] <FromDiscord> <haxscramper> then subtract number of `\` in the sequence
[17:44:56] <FromDiscord> <haxscramper> in the string
[17:45:06] <PMunch> Well then \\ misbehaves
[17:45:40] <PMunch> And \n on Windows I guess, since that creates CRLF
[17:45:49] <FromDiscord> <haxscramper> then more heuristics
[17:46:00] <FromDiscord> <haxscramper> `when defined(windows)` in the macro code
[17:46:55] <FromDiscord> <haxscramper> The "ength it would be when parsed by C?" is answered by codegen, everything else must be computed manually
[17:47:39] <FromDiscord> <haxscramper> Because `p"XXX"` is a raw string literal, so the C one would be `XXX\\n`, but you are doing some intermediate magic, so you need to account for that yourself
[17:48:04] <PMunch> Just to explain what I'm doing, I need to `codegenDecl` a string, but I want to put that into a type with a static length field
[17:48:21] <PMunch> The static length field and the length that C sees the string as has to agree
[17:48:23] <FromDiscord> <haxscramper> If you just write `r"test\n"` it's len is 6
[17:48:44] <FromDiscord> <auxym> does "\n" really expand to CRLF in nim on windows? I thought that was \p  (platform-specific line ending)
[17:49:06] <PMunch> The problem is that now I can do `p"Hello world"` and `p("Hello world")`, both are those are valid, and I have no way of telling them apart
[17:49:20] <PMunch> @auxym, I believe it was changed around 0.20.0
[17:49:27] <FromDiscord> <haxscramper> does `arg.strVal.len()` work?
[17:49:36] <PMunch> And no way to know which is which and how long the string is
[17:50:00] <PMunch> Well it's `macro p(x: static[string]): untyped` so I don't really have a NimNode
[17:52:46] <FromDiscord> <haxscramper> prints 6 and 5
[17:52:47] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Q3e
[17:53:05] <PMunch> I know
[17:53:10] <PMunch> I want 5 from both of them
[17:53:27] <PMunch> Hmm, I think I have a solution
[17:53:48] <FromDiscord> <haxscramper> that would go against the main language semantics
[17:54:09] <FromDiscord> <haxscramper> in nim `X"str"` means raw string literal, and it is expected to be different from `X "str"`
[17:54:24] <FromDiscord> <haxscramper> I don't even think there is a need to hack around that
[17:54:45] <FromDiscord> <haxscramper> maybe you can get something like `callsite()` working
[17:54:49] <FromDiscord> <haxscramper> in theory
[17:55:20] <FromDiscord> <haxscramper> yeah callsite works
[17:56:01] <PMunch> callsite and read the code from the file?
[17:56:12] <FromDiscord> <haxscramper> and varargs untyped
[17:56:23] <FromDiscord> <haxscramper> callsite is deprecated
[17:56:30] <FromDiscord> <haxscramper> I mean, it is a RStrLit if you drop static
[17:56:48] <PMunch> I don't really need to work around it, I just want to detect it so I can act accordingly
[17:56:51] <FromDiscord> <haxscramper> if you don't drop static, it is, by definition, impossible to do what you want to do IMO
[17:57:01] <PMunch> Yeah I realised
[17:57:16] <FromDiscord> <haxscramper> callsite is deprecated since 0.18 and it returns the code of the whole macro call
[17:57:29] <PMunch> Changing it to type and then checking whether or not it is a string literal node works
[18:13:47] <PMunch> I mean the problem is that if I get a raw string literal and then send that to C via codeGenDecl then C will interpret the string and un-raw it
[18:15:09] *** Joins: ltriant (~ltriant@118.102.122.246)
[18:15:18] <FromDiscord> <haxscramper> what codegendecl are you creating?
[18:15:43] <PMunch> As of now it is `codegenDecl: "static const $# $# PROGMEM = (\"" & `x` & "\")"`
[18:16:57] <FromDiscord> <haxscramper> `.strVal()` of the raw string literal is `\\n`, right? So it would be a `\"" & "test\\n" & "\"`
[18:16:58] <FromDiscord> <haxscramper> or not
[18:18:24] <PMunch> Yes it is \\n in Nim, which means the generated code for `p"test\n"` is `static const $# $# PROGMEM = ("test\n")`
[18:19:53] <PMunch> Which is kinda wrong seeing how `p""` should really be considered to be a raw string literal
[18:20:23] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[18:22:57] <FromDiscord> <haxscramper> have you actually looked at the generated code?
[18:23:08] <PMunch> Yup
[18:23:14] <FromDiscord> <haxscramper> I just tested, and `p"test\n"`'s `.strVal()` is `\\n`
[18:23:23] <FromDiscord> <haxscramper> so how does it end up with `\n`
[18:23:35] <PMunch> Because of codegenDecl
[18:23:55] <PMunch> \\n in Nim is the two character \ and n, that gets inserted verbatim into the C code as \n
[18:23:59] <FromDiscord> <haxscramper> have you tried double escaping everything?
[18:24:21] <PMunch> What do you mean by double escaping?
[18:25:53] <FromDiscord> <haxscramper> double escaping? escaping every escape character again
[18:26:13] <PMunch> Ah, no I haven't tried that
[18:26:48] <PMunch> The problem is that I need C-compatible escaping
[18:28:12] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Q3x
[18:28:15] <FromDiscord> <haxscramper> generates this `static const NCSTRING a_asdf_28 = ("test\\n");`
[18:28:23] <FromDiscord> <haxscramper> you need something different, right?
[18:29:13] <FromDiscord> <haxscramper> Interpolating macro argument in quote do also generates `\\n` in the c code
[18:29:24] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Q3y
[18:29:25] <FromDiscord> <haxscramper> `static const NCSTRING aX60gensym0asdf_13 = ("test\\n");`
[18:42:13] *** Quits: averell (~averell@user/averell) (Remote host closed the connection)
[18:43:58] <PMunch> Okay, I just nicked the makeCString procedure from the compiler
[18:44:02] <PMunch> That should hopefully be correct :P
[18:46:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:59:20] <FromDiscord> <kiell> whats the difference between object and rootobj?
[19:02:22] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[19:20:51] *** Joins: ltriant (~ltriant@118.102.122.246)
[19:22:32] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[19:24:47] <FromDiscord> <Forest> Does Nim have a fast pure JSON parser that's compatible with the JS backend?
[19:25:01] <FromDiscord> <Forest> Or should i just use SJFFI to require the JSON file? :P
[19:26:02] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[19:26:29] <FromDiscord> <Forest> (edit) "SJFFI" => "JSFFI"
[19:27:44] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[19:30:12] *** Quits: pro (~pro@user/pro) (Ping timeout: 240 seconds)
[19:41:17] <FromDiscord> <planetis> you can use this https://github.com/karaxnim/karax/blob/master/karax/jjson.nim
[19:45:56] <FromDiscord> <pietroppeter> In reply to @Forest "Does Nim have a": https://github.com/nitely/nim-regex
[19:59:14] <FromDiscord> <retkid> so
[19:59:27] <FromDiscord> <retkid> i need my httpclient to have the same cookies as my browser
[19:59:30] <FromDiscord> <retkid> how do i set that uP?
[19:59:49] <FromDiscord> <Rika> Manually.
[19:59:53] <FromDiscord> <retkid> where tho
[20:00:00] <FromDiscord> <Rika> You can set cookies
[20:00:17] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/944631991532396584/unknown.png
[20:00:21] <FromDiscord> <Rika> Oh wait I’m brain broken
[20:00:27] <FromDiscord> <Rika> Cookies are sent as headers on request
[20:00:47] <FromDiscord> <Rika> Manually manage them (I guess)
[20:00:58] <FromDiscord> <Rika> You can just make a string table
[20:01:01] <FromDiscord> <retkid> yea
[20:01:11] <FromDiscord> <retkid> uhhh
[20:01:13] <FromDiscord> <retkid> shit
[20:01:21] <FromDiscord> <retkid> whats the format for it do you have an example?
[20:01:33] <FromDiscord> <Rika> Header that is set https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cookie
[20:01:54] <FromDiscord> <Rika> https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies
[20:02:06] <FromDiscord> <retkid> so i mean the nim syntax
[20:02:20] <FromDiscord> <retkid> (edit) "so" => "no"
[20:02:24] <FromDiscord> <retkid> im finding the cookie i need nowe
[20:02:25] <FromDiscord> <Rika> If you want to keep all of the other metadata then type
[20:02:30] <FromDiscord> <retkid> (edit) "nowe" => "now"
[20:02:39] <FromDiscord> <Rika> In reply to @retkid "no i mean the": It’s a table what’s there to say?
[20:02:48] <FromDiscord> <Rika> I’m unsure what you mean now
[20:02:53] <FromDiscord> <Rika> The flow will be like this
[20:03:28] <FromDiscord> <Rika> Define a table for your cookies↵set the key value↵On request, set the cookie header and convert the table into the format given above
[20:03:45] <FromDiscord> <Rika> That’s the basic naive flow
[20:04:08] <FromDiscord> <Rika> If you need expires and other stuff then you’d probably go into custom type for your value territory
[20:04:38] <FromDiscord> <Rika> Then manage expires and stuff, session only cookies don’t matter since you lose them all on restart anyway unless you also implement serialisation, etc
[20:05:10] <FromDiscord> <Rika> The procs you need to define is basically the one that converts it into the header format given the Nim table of cookies
[20:05:22] <FromDiscord> <Rika> I have to sleep
[20:06:16] <FromDiscord> <enthus1ast> @retkid\: have a look at this lib, this can handle cookies\: https://github.com/enthus1ast/nimNimiBrowser
[20:07:24] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/nimNimiBrowser/blob/6ff84c95fea73a758f762a255f4a424509fe3fe1/src/nimibrowser.nim#L49↵https://github.com/enthus1ast/nimNimiBrowser/blob/6ff84c95fea73a758f762a255f4a424509fe3fe1/src/nimibrowser.nim#L82
[20:07:43] <FromDiscord> <Rika> What is this lol interesting
[20:07:51] <FromDiscord> <Rika> Is that an actual browser from scratch or so!
[20:07:52] <FromDiscord> <Rika> ?
[20:07:56] <FromDiscord> <enthus1ast> naah
[20:08:08] <FromDiscord> <enthus1ast> a client lib that i use for crawling mostly
[20:08:21] <FromDiscord> <enthus1ast> it does automatic cookie handling and decompression
[20:08:53] <FromDiscord> <enthus1ast> and have a proc that parses http headers, so that i can just copy and past from burp mitm proxy
[20:09:49] <FromDiscord> <retkid> @Rika it is late, take care!
[20:09:59] <FromDiscord> <enthus1ast> g8 @Rika
[20:10:35] <FromDiscord> <retkid> In reply to @enthus1ast "<@217459674700578816>\: have a look": so with this i can steal some of the functions from it and just use the cookies from firefox?
[20:11:12] <FromDiscord> <enthus1ast> i mean, a "cookie" is just a line in the request header
[20:11:46] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/944634878161469510/unknown.png
[20:11:54] <FromDiscord> <retkid> they would be the value guys, right?
[20:12:11] <FromDiscord> <enthus1ast> i recommend burp for this
[20:12:24] <FromDiscord> <retkid> i cannot burb i have no co2 in my tummy
[20:12:51] <FromDiscord> <retkid> (edit) "burb" => "burp"
[20:12:59] <FromDiscord> <retkid> ("what is burp")
[20:13:22] <FromDiscord> <enthus1ast> burp is a man in the middle proxy
[20:13:37] <FromDiscord> <retkid> alright how do i implement that in nim
[20:13:52] <FromDiscord> <retkid> ah
[20:13:58] <FromDiscord> <retkid> i just need to make one i think
[20:15:38] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3Q4k
[20:15:55] <FromDiscord> <enthus1ast> if you know what to send, you do not need burp
[20:16:09] <FromDiscord> <retkid> yea im 99% sure its one of these two proxies
[20:16:17] <FromDiscord> <retkid> (edit) "proxies" => "cookies"
[20:16:41] <FromDiscord> <retkid> In reply to @enthus1ast "no i mean, i": what is "burps browser"
[20:18:36] <FromDiscord> <enthus1ast> image.png https://media.discordapp.net/attachments/371759389889003532/944636599671590992/image.png
[20:19:32] <FromDiscord> <enthus1ast> a browser (chrome) that is preconfigured for man in the middle
[20:19:44] <FromDiscord> <retkid> i mean
[20:19:48] <FromDiscord> <retkid> i just found the headers firefox used
[20:22:21] <FromDiscord> <Goel> sent a code paste, see https://play.nim-lang.org/#ix=3Q4n
[20:23:13] <FromDiscord> <enthus1ast> i think cps has a goto example
[20:23:29] <FromDiscord> <enthus1ast> but can you not just use a loop?
[20:23:39] <FromDiscord> <retkid> i got it working :)
[20:24:03] <FromDiscord> <Goel> I just want to know if Blocks allows it or not, i don't need it
[20:24:26] <FromDiscord> <retkid> if you want you can do it like this
[20:24:29] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[20:25:43] <FromDiscord> <retkid> or you can use templates for less pasta
[20:25:44] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3Q4s
[20:25:47] <FromDiscord> <retkid> (edit) "pasta" => "spaghetti"
[20:26:50] <FromDiscord> <enthus1ast> o.0
[20:26:53] <FromDiscord> <Goel> I DONT need it, it was just for knowledge sake, nothing else. I just wanted to know if Block have something that may it recall a Block like that. The answer seems to be not, fine. 😄
[20:27:26] <FromDiscord> <Forest> In reply to @planetis "you can use this": Thanks!
[20:27:38] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3Q4t
[20:27:39] <FromDiscord> <retkid> In reply to @Goel "I DONT need it,": ikik
[20:27:45] <FromDiscord> <retkid> im just giving goto like things
[20:28:06] <FromDiscord> <retkid> tmk theres no goto in nim
[20:28:34] <PMunch> @Goel, Nim doesn't have a goto statement, but you can `break myBlock`
[20:28:38] <PMunch> To exit it early
[20:30:53] <FromDiscord> <retkid> also i was wondering with the html parser is there anyway to search by class
[20:31:25] <FromDiscord> <retkid> or maybe make it more convenient to search when im 50 divs in
[20:31:38] <FromDiscord> <enthus1ast> you could use "q" https://github.com/OpenSystemsLab/q.nim
[20:37:36] <FromDiscord> <enthus1ast> but for most of the websites out there, you must clean the html first
[20:38:12] <FromDiscord> <enthus1ast> or, like araq mentioned lately in the forum, tokenize the html
[20:40:32] *** Joins: pro (~pro@user/pro)
[20:40:47] <FromDiscord> <enthus1ast> https://forum.nim-lang.org/t/6179
[20:41:03] <FromDiscord> <retkid> im workin with q
[20:42:23] <FromDiscord> <retkid> its very cool
[20:42:24] <FromDiscord> <retkid> i love it
[20:42:39] <FromDiscord> <retkid> though more classes would be cool its a bit odd just putting a string into something like this
[20:42:43] <FromDiscord> <retkid> echo doc.select("table.style-01 tr td")
[20:42:50] <FromDiscord> <retkid> (edit) "echo doc.select("table.style-01 tr td")" => "sent a code paste, see https://play.nim-lang.org/#ix="
[20:43:01] <FromDiscord> <retkid> reminds me of bash
[20:44:25] <FromDiscord> <enthus1ast> what do you mean?
[20:45:20] <FromDiscord> <retkid> its kinda like the DB stuff
[20:45:24] <FromDiscord> <retkid> its all untyped just strings
[20:45:27] <FromDiscord> <retkid> y'know
[20:47:23] <FromDiscord> <enthus1ast> webcrawling always is dirty business
[20:47:52] <FromDiscord> <enthus1ast> if you're lucky the website exposes a json / rest api
[20:48:27] <FromDiscord> <retkid> lol
[20:48:30] <FromDiscord> <retkid> this is true
[20:48:50] <FromDiscord> <retkid> anything involving the web is still the wild west 30 someodd years later
[20:50:37] <FromDiscord> <haolian9 (高浩亮)> sent a code paste, see https://play.nim-lang.org/#ix=3Q4D
[21:05:56] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[21:07:05] <FromDiscord> <enthus1ast> [haolian9 (高浩亮)](https://matrix.to/#/@haolian9-56e3c49285d51f252ab86990:gitter.im)\:  seems not, only for HttpHead, HttpConnect
[21:07:07] <FromDiscord> <enthus1ast> https://github.com/nim-lang/Nim/blob/7994556f3804c217035c44b453a3feec64405758/lib/pure/httpclient.nim#L1055
[21:15:06] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:852c:c89f:7cdd:a935)
[21:18:17] <FromDiscord> <haolian9 (高浩亮)> thanks, i just found the private property `HttpClient.getBody: bool` which is used to implement `httpclient.downloadFile`; sadly, it's private
[21:21:06] <FromDiscord> <haolian9 (高浩亮)> oh, it also occurs where you have pointed out.
[21:23:40] <FromDiscord> <Forest> Is it possible to suppress certain things that are 'unused'?
[21:27:57] <FromDiscord> <huantian> Check out the used pragma
[21:34:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:35:07] <FromDiscord> <System64 ~ Flandre Scarlet> is it normal the ``>>`` operator doesn't work?
[21:35:45] <FromDiscord> <huantian> Define doesn’t work
[21:35:51] <FromDiscord> <haxscramper> `shr`
[21:36:07] <FromDiscord> <System64 ~ Flandre Scarlet> ah thanks
[21:36:13] <FromDiscord> <haxscramper> `shr` and `shl` for right and left shift, `a = a shr X` for `<<=`
[21:36:18] <FromDiscord> <haxscramper> (edit) "shr" => "shl"
[21:39:40] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 272 seconds)
[21:43:49] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @haxscramper "`shr` and `shl` for": Ah thanks
[21:43:57] <FromDiscord> <System64 ~ Flandre Scarlet> I'm used to the C synthax lol
[21:44:00] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "synthax" => "syntax"
[21:46:24] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3Q4Y
[21:48:02] <FromDiscord> <Forest> In reply to @huantian "Check out the used": How would i use it on imports?
[21:49:24] <FromDiscord> <Forest> Also I can't find information on it
[21:55:19] *** Joins: ltriant (~ltriant@118.102.122.246)
[21:59:20] <FromDiscord> <huantian> https://nim-lang.org/docs/manual.html#pragmas-used-pragma
[22:09:03] <FromDiscord> <retkid> A wise man once told me
[22:09:15] <FromDiscord> <retkid> “ anything has an API if you try hard enough”
[22:10:08] <FromDiscord> <retkid> This has been true for everything besides twitch who’s site is web generated and confusing so you need to use their official apis or figure out patterns in the random garbage they spit out
[22:10:22] <FromDiscord> <retkid> Idk why I’m saying this here
[22:22:37] <arkanoid> my compilation is failing on assert "NIM_STATIC_ASSERT(sizeof(NI) == sizeof(void*) && NIM_INTBITS == sizeof(NI)*8, "");" in nimbase.h
[22:23:08] <arkanoid> what does it mean? I'm trying to compile i386 code in x86_64, so I'm using switch("cpu", "i386")
[22:35:08] <FromDiscord> <lpha3ch0> sent a code paste, see https://play.nim-lang.org/#ix=3Q5j
[22:48:20] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[22:50:18] *** Quits: pro (~pro@user/pro) (Quit: pro)
[22:52:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[22:55:48] <FromDiscord> <lpha3ch0> sent a code paste, see https://play.nim-lang.org/#ix=3Q5m
[23:05:24] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[23:12:09] <FromDiscord> <haxscramper> @lpha3ch0  If you don't want to paste full filenames you can also run with `--filenames=canonical`, it will show paths relative to the project/package root
[23:12:18] <FromDiscord> <haxscramper> I mean the `[redacted]` part
[23:14:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[23:26:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:29:35] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:32:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[23:51:14] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[23:51:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:55:26] <FromDiscord> <Waldecir Santos> Why don't nim convert ints "transparently" I'm passing a int to an argument and it's complaining because it expects int32, I understand if we are going from int32>=->int we can loose that, but the other way makes no sense to me, any idea ?
