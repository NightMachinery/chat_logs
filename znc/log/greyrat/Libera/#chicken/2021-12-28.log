[00:12:13] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[00:21:26] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:31:29] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[00:32:58] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:42:39] *** Joins: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0)
[00:42:40] <zilti[m]> Woah, Netsplit?
[00:43:36] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Quit: leaving)
[01:45:46] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Quit: WeeChat 3.3)
[02:12:20] <vandusen> [eggs] zstd version 1.1 (for CHICKEN 5) has been released
[02:12:20] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[02:12:20] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[02:12:20] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:12:21] *** Joins: evhan[m] (~evhanfold@2001:470:69fc:105::33e3)
[02:12:21] *** Joins: blackbeard (~barbanegr@2001:470:69fc:105::38c4)
[02:12:21] *** Joins: siraben (~siraben@user/siraben)
[02:12:21] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[02:12:21] *** Joins: littleme[m] (~littlemen@2001:470:69fc:105::f37)
[03:15:19] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:26:14] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[04:33:10] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[04:42:44] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:46:10] *** Quits: klovett (~klovett@107.115.32.130) (Quit: ZZZzzz…)
[05:18:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:54:52] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:26:45] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[06:58:37] *** Joins: klovett (~klovett@107.115.32.130)
[07:22:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:37:15] <s-liao> Zipheir did you see what Bunny said yesterday?
[07:39:07] <s-liao> What do we have to do from his reply?
[07:52:31] *** Joins: m455 (~m455@user/m455)
[08:14:59] <Zipheir> s-liao: I don't think we have to do anything.  I think it all works.  The example that you said was broken was actually missing \ escapes; when I fixed that, it worked just fine.
[08:15:32] <Zipheir> The read syntax even works when I load srfi-4 *after* srfi-207, though I'm not totally sure why.
[08:17:48] <Zipheir> In compiled code, at least.  That may not work in csi.
[08:18:03] <s-liao> Ask bunny, he said that. And also gave the reason.
[08:19:47] <s-liao> What is the different between csi and compiled code?
[08:21:20] <s-liao> (define mys "#u8\"\\x29;\\x28;\\x30;\"")
[08:21:38] <s-liao> (display mys)
[08:22:56] <s-liao> Above the code, without srfi-207, the output is same to with srfi-207,(define mys "#u8\"\\x29;\\x28;\\x30;\"") (display mys)
[08:25:52] <s-liao> I was wondering that user-read-hook actively to parse it ("#u8\"\\x29;\\x28;\\x30;\"").
[08:26:07] <s-liao> with srfi-207
[09:38:26] <Zipheir> I'll test it in a minute.
[09:51:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:51:13] <Zipheir> s-liao: Well, of course.  SRFI 207 doesn't care about strings.
[09:51:23] <Zipheir> Oops.
[09:52:53] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[10:10:36] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:45:01] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:14:42] <Zipheir> s-liao: You dropped right as I responded.  Please register your nick so I can respond via MemoServ.
[11:15:09] <Zipheir> s-liao: I said that SRFI 207 doesn't care about strings, so "#u8\"\\x29;\\x28;\\x30;\"" should just display as usual (without srfi-207).
[11:15:15] <s-liao> yes.
[11:15:55] <Zipheir> So that is fine!
[11:16:53] <s-liao> Thanks.
[11:18:18] <s-liao> What do you mean "SRFI 207 doesn't care about strings"?
[11:19:04] <Zipheir> I mean, "#u8\"\\x29;\\x28;\\x30;\"" is a string, not a bitstring.
[11:19:43] <s-liao> I had a nap suddenly.
[11:19:52] <Zipheir> I don't know what you mean by "I was wondering that user-read-hook actively to parse it ..."
[11:20:43] <Zipheir> Only things of the form #u8"..." (no outer quotes) get handled by the srfi-207 read hook, of course.
[11:21:07] <Zipheir> No problem.
[11:22:17] <s-liao> You mean that it is "#u8\"\\x29;\\x28;\\x30;\""  is a string, parser in 207 just ignore it.
[11:22:26] <Zipheir> Yes.
[11:22:48] <Zipheir> Unless you pass a string port on it to read-textual-bytestring, of course.
[11:23:49] <s-liao> So the string port is a bitstring.
[11:24:28] <s-liao> or string port as the input of read-textual-bytestring is  a bitstring.
[11:24:31] <Zipheir> No, it's just a port that read-textual-bytestring can read from.
[11:24:50] <Zipheir> Oops, *bytestring.
[11:25:06] <Zipheir> I've been saying bitstring because I've been working on the SRFI 178 egg.
[11:25:25] <Zipheir> A bytestring is a bytevector.
[11:25:44] <Zipheir> A port is never a bytestring!  I hope everything is clear now.
[11:29:19] <Zipheir> Anyway, it's late, I need sleep.  I'll read the scrollback in the morning.  Happy hacking!
[11:29:32] <s-liao> Okay.
[11:29:43] <s-liao> Have a good sleep.
[11:33:18] <s-liao> string port as the input of read-textual-bytestring,  the read-textual-bytestring function parse the input port byte by byte.
[11:35:05] *** Quits: alexshendi (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:39:48] *** Joins: tooDumbToFleng (~alexshend@2a00:20:3020:7fc9:9327:cabf:9224:33fc)
[11:46:26] <vandusen> "акууу" pasted "акууу" http://paste.call-cc.org/paste?id=d0f94b7cf7dd467e735a3ea9f27556ecf6fd13be
[11:46:26] <judybot> vandusen: spam d0f94b7cf7dd467e735a3ea9f27556ecf6fd13be
[11:46:28] <vandusen> judybot: I have deleted 1 paste(s) with hash d0f94b7cf7dd467e735a3ea9f27556ecf6fd13be successfully.
[11:49:09] <s-liao> I mean that read-textual-bytestring interface in srfi-207 is not too much obviously. bytestring is bytestring , how can it be read/wrote to the input port or the output, that should be put in somewhere else.
[11:49:34] <s-liao> I tried to have a short demo for you.
[11:51:44] *** Joins: tooDumb75 (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[11:53:21] *** Quits: tooDumbToFleng (~alexshend@2a00:20:3020:7fc9:9327:cabf:9224:33fc) (Ping timeout: 250 seconds)
[11:54:51] *** Joins: ublx (~ublx@user/ublx)
[11:58:11] <vandusen> "liao" pasted "srfi-207" http://paste.call-cc.org/paste?id=62eb35425e18e2990cfcf5a07a2cbab8719c7cbb
[11:59:09] <s-liao> Bacialy is that we do not need to put all thing into a egg.
[12:00:09] <s-liao> Like we have module system, Also we are in the chicken. it is already special.
[12:15:39] *** Joins: tooDumbToFleng (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[12:15:39] *** Quits: tooDumb75 (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[12:27:09] <vandusen> SPAM! SPAM! SPAM! by freee
[12:32:04] *** Joins: klovett_ (~klovett@107.115.32.130)
[12:32:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[12:33:50] *** tooDumbToFleng is now known as alwxshendi
[12:34:02] *** alwxshendi is now known as alexshendi
[12:35:03] *** Quits: klovett (~klovett@107.115.32.130) (Ping timeout: 256 seconds)
[13:09:37] *** Joins: idstam (~idstam@2.70.64.205.mobile.tre.se)
[13:09:51] *** Quits: idstam (~idstam@2.70.64.205.mobile.tre.se) (Client Quit)
[13:10:17] *** Joins: idstam (~idstam@2.70.64.205.mobile.tre.se)
[13:32:29] *** Joins: tooDumbToFleng (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[13:33:21] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:35:41] *** Quits: alexshendi (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:08:17] *** Quits: tooDumbToFleng (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:30:32] *** Joins: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de)
[14:41:11] *** Quits: klovett_ (~klovett@107.115.32.130) (Quit: ZZZzzz…)
[15:12:12] <vandusen> [eggs] xj version 1.26 (for CHICKEN 5) has been released
[15:26:11] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[15:41:35] <s-liao> Zipheir you are right. From srfi-207 point view, it is totally okay. the port of the input for read-textual-bytestring, has the external representation string like "#u8\"\\x29;\\x28;\\x30;\"". then the write-textual-bytestring function, has the internal representation string like #u8(#x9 #x41 #x72 #x74 #x68 #x75 #x72 #xa) to be wrote.
[15:43:21] *** Quits: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de) (Quit: -a- Connection Timed Out)
[15:44:45] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:47:25] *** Joins: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de)
[15:58:25] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[16:39:41] *** Joins: ublx (~ublx@user/ublx)
[16:43:21] *** Quits: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de) (Quit: -a- Connection Timed Out)
[16:47:25] *** Joins: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de)
[17:07:08] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:07:09] *** Quits: tooDumbToFleng (~alexshend@ip-109-43-176-123.web.vodafone.de) (Read error: Connection reset by peer)
[17:07:24] *** Joins: tooDumbToFleng (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[17:15:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a892:5f2f:3801:1e1e)
[17:15:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a892:5f2f:3801:1e1e) (Changing host)
[17:15:33] *** Joins: skapata (~Skapata@user/skapata)
[17:19:54] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[17:20:24] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:58:37] *** Joins: klovett (~klovett@107.115.32.130)
[18:11:38] <vandusen> [eggs repo (r40981, by Zipheir)] Note version 0.2 release.
[18:12:50] <Zipheir> s-liao: Thanks.  I will try to improve the wiki page's explanation of {read, write}-textual-bytestring.
[18:21:35] <s-liao> Zipheir but somehow, I think (read (open-input-string "#u8(#x6d #x65)")) and (read (open-input-string "#u8(65 66 173 240 13 67 68)")), That is enough. what are we talking about the bytestring is just an operation, as we have bytestring. its internal representation is "#u8(65 66 173 240 13 67 68)". I would say that like (bytestring "lor" #\r #x65
[18:21:35] <s-liao> #u8(#x6d)) look like good. But practically it would be much to have uniform form.  like (bytestring "lor") + (bytestring #\r) + (bytestring #u8(#x65).
[18:24:14] <Zipheir> s-liao: You think we should throw out read-textual-bytestring ?
[18:24:51] <Zipheir> I agree that it's a bit confusing.  When we were writing the SRFI, I got completely confused about what format read-textual-bytestring was supposed to read.
[18:27:29] <s-liao> Not sure that we should throw out or not.
[18:28:58] <Zipheir> Well, the SRFI provides it, and it's already implemented.
[18:30:01] <s-liao> Yes, it is a version.
[18:31:09] <s-liao> But mostly time, I would like think that reuse the design, extended the designed SRFI.
[18:37:15] *** Joins: tooDumb69 (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[18:40:57] *** Quits: tooDumbToFleng (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:45:13] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[18:47:47] <s-liao> And also #u8"Zaphod" is not needed, (bytestring str) is enough. #u8"Zaphod" is no much meaning.
[18:49:19] *** Joins: xaltsc_ (~xaltsc@user/xaltsc)
[18:51:55] *** xaltsc_ is now known as xaltsc
[18:54:05] <Zipheir> s-liao: That is just a very simple example, but it's still a little more direct than (bytestring "Zaphod").
[18:55:03] <Zipheir> (bytestring ...) gets complicated quickly when you want to write a long bytestring.
[18:59:09] <s-liao> Yeah. that works for a long bytestring.
[19:06:57] <s-liao> Have to get a sleep.
[19:07:15] <s-liao> See you later.
[19:08:08] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[19:53:05] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[20:12:12] <vandusen> [eggs] xj version 1.27 (for CHICKEN 5) has been released
[20:52:28] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[21:23:45] *** Quits: tooDumb69 (~alexshend@pd9f03d60.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:31:03] *** Joins: tooDumb67 (~alexshend@pd9f03d60.dip0.t-ipconnect.de)
[22:02:28] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[23:19:40] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
