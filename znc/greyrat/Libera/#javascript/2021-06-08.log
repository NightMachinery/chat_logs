[00:00:12] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 272 seconds)
[00:00:48] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[00:02:22] *** Joins: Cata (~Cata@user/cata)
[00:03:49] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 245 seconds)
[00:09:14] *** Joins: xse_ (~xse@user/xse)
[00:10:23] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[00:10:29] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[00:11:25] *** Quits: xse (~xse@user/xse) (Killed (NickServ (GHOST command used by xse_)))
[00:11:29] *** xse_ is now known as xse
[00:21:57] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[00:23:53] <merpnderp> Whats' the new operator to check if somethign is not null or an empty string?
[00:23:55] <merpnderp> ?!
[00:24:41] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[00:25:12] <entuland> you mean the null coalescing double question mark?
[00:26:03] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[00:26:09] <merpnderp> entuland: is that what it does?
[00:26:13] <merpnderp> !! only better?
[00:26:42] <GreenJello> nope
[00:26:55] <GreenJello> there isn't an operator that does exactly what you said
[00:27:07] <merpnderp> GreenJello: yeah, ?? is an assignment operator.
[00:27:11] <merpnderp> Looks like !! is still it.
[00:27:23] <GreenJello> it's not an assignment operator
[00:27:33] <entuland> n> a = ?? "" : "something";
[00:27:33] <jellobot> (fail) SyntaxError: Unexpected token '??'
[00:27:41] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[00:27:46] <entuland> silly me
[00:28:14] <entuland> n> a = "" ?? "something";
[00:28:15] <jellobot> (okay) ''
[00:28:19] <merpnderp> n> a  = ''; a ??= 'foo';
[00:28:20] <jellobot> (okay) ''
[00:28:37] <merpnderp> n> a  = null; a ??= 'foo';
[00:28:38] <jellobot> (okay) 'foo'
[00:28:39] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 252 seconds)
[00:28:41] <GreenJello> merpnderp, !!x is valid for that if you don't care about 0 vs 1 giving different results (or it's impossible in your case)
[00:28:49] <GreenJello> ??= is assignment operator, yes
[00:28:50] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[00:28:50] <entuland> that ^
[00:28:52] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[00:28:55] <entuland> won't work for the empty string
[00:29:06] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[00:29:15] <merpnderp> OMG OMG OMG
[00:29:20] *** Joins: repo[m] (~repo@user/repo)
[00:29:22] <merpnderp> ?? is going to get rid of half my ternaries.
[00:29:24] <merpnderp> YES!!!!
[00:29:32] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[00:29:40] <entuland> that's what they added it for mainly I guess :P
[00:29:45] <entuland> all of those null checks
[00:29:53] <merpnderp> Man, I love Javascript so hard.
[00:30:03] <entuland> but as above it's not going to work if you have an empty string
[00:30:19] <merpnderp> entuland: yeah, that is an issue.
[00:30:37] <merpnderp> '' is falsey except for ?? it is truth.
[00:30:40] <merpnderp> truthy
[00:30:46] <merpnderp> bummer
[00:30:54] <GreenJello> ?? checks nullish, but || checks for truthy
[00:31:02] <GreenJello> and ||= is a thing now, I think
[00:31:19] <merpnderp> well I've been doing ternaries mostly wrong then if I could have been using ||
[00:31:20] *** Quits: dreamreal (~joeo@enigmastation.com) (Quit: WeeChat 3.1)
[00:31:41] *** Joins: dreamreal (~joeo@2602:ff16:3:0:1:ec:0:1)
[00:31:41] <entuland> it's not like they're wrong
[00:31:59] *** WillPittenger is now known as Guest8210
[00:32:00] <gkatsev> `var foo = a || "default";` was a common pattern that is fixed/improved by `??`
[00:32:00] <entuland> there may not have been a better alternative, such as before having the null coalescing operator
[00:32:11] <merpnderp> entuland: They're more line noise when you're going through 10k lines of code trying to find your bug :(
[00:32:16] <GreenJello> you can often use || over a ternary
[00:32:24] <gkatsev> a common issue was if `a` was a number and `0` was a valid value
[00:33:02] <merpnderp> In my current case I just need to test that something is a non-zero integer for truthiness.
[00:33:10] <merpnderp> So....winning :)
[00:33:25] <GreenJello> gkatsev, yes, but arguments/destructuring with defaults tends to be slightly cleaner
[00:33:45] <gkatsev> GreenJello: sure, depends on your needs
[00:36:28] *** Quits: dreamreal (~joeo@2602:ff16:3:0:1:ec:0:1) (Changing host)
[00:36:28] *** Joins: dreamreal (~joeo@user/dreamreal)
[00:38:48] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[00:38:59] *** Joins: happymeal (~happymeal@user/happymeal)
[00:39:23] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[00:39:37] *** Quits: silly (~silly@m83-184-26-113.cust.tele2.hr) (Changing host)
[00:39:37] *** Joins: silly (~silly@user/silly)
[00:40:19] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[00:40:37] *** Joins: jazzy (~jaziz@2600:380:874b:26da:28e9:655f:12b2:c191)
[00:45:06] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[00:47:28] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:52:51] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[00:56:35] *** Joins: sheetjs (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net)
[00:57:40] *** Quits: happymeal (~happymeal@user/happymeal) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[00:59:32] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[01:05:21] *** Joins: happymeal (~happymeal@user/happymeal)
[01:05:26] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[01:09:42] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:09:55] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[01:10:20] <austincheney> merpnderp, my personal preferrence is to avoid truthiness.  Even if foo is value true I still write   if (foo === true)   because it is clear what foo is and what I want the value to be just by reading that line.  There are no assumptions and no guessing
[01:13:29] <merpnderp> austincheney: not a bad idea.
[01:13:41] *** Joins: summersault (~summersau@179.221.251.16)
[01:14:22] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 244 seconds)
[01:15:23] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[01:15:47] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:16:38] *** Quits: wovixo (~wovixo@144.92.232.54) (Quit: Leaving)
[01:17:24] *** Joins: space-shell (~space-she@88.98.247.38)
[01:17:28] *** Quits: Codaraxis (~Codaraxis@89.45.7.142) (Client Quit)
[01:17:29] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[01:18:24] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[01:22:14] *** Quits: FabioP (~fabio@151.31.93.232) (Read error: Connection reset by peer)
[01:23:06] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[01:34:31] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 264 seconds)
[01:35:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[01:40:54] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[01:42:00] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[01:46:13] *** Joins: xsperry (~as@user/xsperry)
[01:52:15] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[01:54:19] <wroathe> ||= is one of my favorite operators
[01:54:34] <wroathe> and doubly so in dynamically typed languages
[01:57:15] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 244 seconds)
[01:58:11] *** Emil_ is now known as Emil
[02:00:05] *** Quits: Guest1379 (~openAI@37.46.46.238) (Read error: Connection reset by peer)
[02:00:27] *** Joins: Guest1379 (~openAI@37.46.46.238)
[02:10:04] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 245 seconds)
[02:10:28] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[02:11:03] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[02:11:16] *** repo[m] is now known as repo[M]
[02:12:52] *** repo[M] is now known as repo[m]
[02:17:00] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[02:20:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 245 seconds)
[02:27:15] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[02:28:12] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[02:28:31] *** Joins: Solak (~solak@cthia.xs4all.nl)
[02:30:37] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:31:05] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:33:30] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[02:40:20] *** ruel is now known as lvlinux
[02:41:41] *** Joins: keypushe- (keypusher@user/keypusher)
[02:41:50] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[02:42:18] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[02:44:43] *** keypushe- is now known as keypusher
[02:52:09] *** niko is now known as o
[03:02:16] *** Joins: hax (~hax@user/hax)
[03:04:18] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[03:06:09] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[03:07:27] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:08:31] *** Quits: dreamreal (~joeo@user/dreamreal) (Quit: WeeChat 3.1)
[03:10:02] *** Joins: keypusher (keypusher@user/keypusher)
[03:10:29] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:12:33] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 252 seconds)
[03:14:49] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[03:15:16] *** Joins: keypusher (keypusher@user/keypusher)
[03:15:26] *** Joins: dreamreal (~joeo@user/dreamreal)
[03:16:24] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[03:18:55] *** Joins: Guest57 (~Guest57@75.104.62.40)
[03:19:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[03:22:50] *** Quits: Guest57 (~Guest57@75.104.62.40) (Quit: Client closed)
[03:23:41] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[03:26:43] *** Joins: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs)
[03:30:16] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[03:30:39] *** Joins: Crassus (~Crassus@user/crassus)
[03:31:39] *** Quits: brezanac (~brezanac@dynamic-213-198-222-227.adsl.eunet.rs) (Quit: Leaving)
[03:35:40] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[03:39:04] *** Quits: hanaan (~naan@user/naan) (Quit: Leaving)
[03:41:03] *** Joins: Cata (~Cata@user/cata)
[03:41:14] *** Quits: space-shell (~space-she@88.98.247.38) (Quit: Connection closed)
[03:50:03] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[03:50:17] *** Quits: sheetjs (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net) (Remote host closed the connection)
[03:50:21] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496)
[03:51:37] <howdoi> wroathe: happy to hear that ;)
[03:52:11] <howdoi> ^ logical assignment
[03:53:03] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[03:53:11] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[03:53:51] *** Joins: thiras (~thiras@user/thiras)
[03:58:38] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[04:00:40] <wroathe> howdoi: What... are you taking credit for it or something?
[04:01:42] <howdoi> wroathe: I was one of the co-champs for that proposal, if someone has to take credits it is the entire TC39 committee
[04:02:18] <wroathe> Oh, nice. Good work.
[04:21:59] *** Quits: slaughter (~s@75-172-41-172.tukw.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:24:40] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[04:25:04] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 245 seconds)
[04:25:09] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[04:27:35] *** Joins: zstix (~zstix@38.104.105.178)
[04:28:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[04:32:05] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[04:32:18] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[04:34:01] *** Joins: alystair (~alystair@user/alystair)
[04:39:00] <howdoi> 🙏
[04:40:46] *** Quits: Betal (~Beta@user/betal) (Ping timeout: 272 seconds)
[04:40:47] *** Joins: alystair2 (~alystair@user/alystair)
[04:40:48] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 258 seconds)
[04:40:48] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Ping timeout: 258 seconds)
[04:52:41] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[04:55:14] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[04:57:33] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[05:00:21] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[05:01:49] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[05:02:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[05:02:59] *** Joins: Betal (~Beta@user/betal)
[05:04:00] *** Joins: stenno (~stenno@user/stenno)
[05:04:46] *** Joins: leduyquang753 (~leduyquan@27.76.191.235)
[05:05:17] *** Quits: slaughter (~s@75-172-41-172.tukw.qwest.net) (Client Quit)
[05:14:30] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[05:14:43] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 264 seconds)
[05:14:55] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 258 seconds)
[05:16:13] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[05:17:24] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[05:19:54] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[05:20:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[05:21:59] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[05:23:02] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:23:34] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[05:28:45] *** Quits: Cata (~Cata@user/cata) (Quit: Leaving)
[05:33:34] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[05:39:04] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[05:41:01] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:46:00] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 252 seconds)
[05:53:27] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[05:58:39] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[05:59:05] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:01:03] *** Quits: zstix (~zstix@38.104.105.178) (Quit: Goodbye)
[06:06:14] *** Joins: zebrag (~chris@user/zebrag)
[06:11:04] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[06:16:15] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[06:26:22] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:28:17] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:29:18] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[06:29:25] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:91cc:2528:4817:d496) (Quit: Leaving)
[06:34:57] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[06:37:01] *** Joins: zebrag (~chris@user/zebrag)
[06:38:06] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[06:47:17] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[06:47:41] *** Joins: Rockwood (~Rocky@106.202.4.162)
[06:48:23] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[06:53:42] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[06:59:28] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[06:59:40] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[07:07:59] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 245 seconds)
[07:08:24] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[07:11:42] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[07:14:00] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[07:14:59] *** Quits: slaughter (~s@75-172-41-172.tukw.qwest.net) (Client Quit)
[07:15:58] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[07:17:00] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:19:49] *** Joins: chao (~stenno@user/stenno)
[07:20:41] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[07:21:26] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[07:22:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 244 seconds)
[07:26:35] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[07:26:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:29:26] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[07:31:50] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[07:36:36] *** Quits: Rockwood (~Rocky@106.202.4.162) (Ping timeout: 250 seconds)
[07:37:52] *** Quits: gehn (~gehn@77.247.181.210) (Quit: Leaving)
[07:38:07] *** Joins: Rockwood (~Rocky@106.202.43.94)
[07:40:56] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 250 seconds)
[07:44:31] *** Quits: slaughter (~s@75-172-41-172.tukw.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:30] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[07:47:04] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:48:52] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[07:51:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[07:52:11] *** Joins: Crassus (~Crassus@user/crassus)
[07:53:44] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[07:58:42] *** Quits: Guest1379 (~openAI@37.46.46.238) (Ping timeout: 250 seconds)
[08:00:14] *** Joins: chao (~stenno@user/stenno)
[08:00:31] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 258 seconds)
[08:00:33] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:02:42] *** Joins: ferdna (~ferdna@user/ferdna)
[08:24:00] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[08:25:08] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 250 seconds)
[08:28:17] *** nifl is now known as niflce
[08:35:39] <Rockwood> bye cya
[08:35:48] *** Quits: Rockwood (~Rocky@106.202.43.94) (Quit: The Time is Over)
[08:38:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[08:45:33] *** Joins: silly_ (~silly@user/silly)
[08:47:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:49:40] *** Quits: silly (~silly@user/silly) (Ping timeout: 272 seconds)
[08:51:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:57:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:02:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[09:11:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[09:11:44] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[09:11:55] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Read error: Connection reset by peer)
[09:17:46] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:19:48] *** Joins: summersault (~summersau@179.221.251.16)
[09:21:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:22:09] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[09:24:55] *** Joins: lonelyoptimist (~lonelyopt@106.212.76.156)
[09:26:44] *** Joins: mikkel (~mike@208.110.120.167)
[09:26:46] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[09:33:27] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[09:35:46] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 250 seconds)
[09:39:20] *** Joins: comatory (~ondrejsyn@2a00:1028:8d1c:62da:9c37:25cb:9ca8:3bed)
[09:42:03] *** Joins: ondrejsynacek (~ondrejsyn@2a00:1028:8d1c:62da:d4ad:b3c2:21fa:d67a)
[09:43:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:44:19] *** Quits: comatory (~ondrejsyn@2a00:1028:8d1c:62da:9c37:25cb:9ca8:3bed) (Ping timeout: 244 seconds)
[09:46:23] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 244 seconds)
[09:50:52] *** Joins: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:dc61:a45f:886c:9b73)
[09:51:13] *** Joins: tex (~super@user/dix)
[09:52:34] *** Joins: ondrejsynacek2 (~ondrejsyn@2a00:1028:8d1c:62da:48ff:2c94:642e:d58b)
[09:53:38] *** Quits: ondrejsynacek (~ondrejsyn@2a00:1028:8d1c:62da:d4ad:b3c2:21fa:d67a) (Ping timeout: 272 seconds)
[09:55:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[09:55:32] *** Quits: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:dc61:a45f:886c:9b73) (Ping timeout: 272 seconds)
[09:57:36] *** Joins: chao (~stenno@user/stenno)
[10:03:18] *** Joins: ondrejsynacek3 (~ondrejsyn@2a00:1028:8d1c:62da:edde:c5e:8afa:4bd3)
[10:06:18] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[10:06:21] *** Quits: ondrejsynacek2 (~ondrejsyn@2a00:1028:8d1c:62da:48ff:2c94:642e:d58b) (Ping timeout: 272 seconds)
[10:06:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:06:56] *** Joins: ondrejsynacek4 (~ondrejsyn@2a00:1028:8d1c:62da:40e5:c40c:c0c9:f318)
[10:10:06] *** Quits: ondrejsynacek3 (~ondrejsyn@2a00:1028:8d1c:62da:edde:c5e:8afa:4bd3) (Ping timeout: 272 seconds)
[10:10:52] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[10:12:07] *** Joins: chao (~stenno@user/stenno)
[10:12:30] *** Joins: ondrejsynacek (~ondrejsyn@2a00:1028:8d1c:62da:8125:1988:3459:ee88)
[10:12:40] *** Joins: py88 (~py88@50.21.149.170)
[10:15:48] *** Quits: ondrejsynacek4 (~ondrejsyn@2a00:1028:8d1c:62da:40e5:c40c:c0c9:f318) (Ping timeout: 272 seconds)
[10:18:58] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[10:19:50] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[10:22:06] *** Joins: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:c1fb:c50b:876c:8067)
[10:22:16] *** Joins: chao (~stenno@user/stenno)
[10:24:37] *** Quits: ondrejsynacek (~ondrejsyn@2a00:1028:8d1c:62da:8125:1988:3459:ee88) (Ping timeout: 244 seconds)
[10:25:59] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Ping timeout: 272 seconds)
[10:26:30] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[10:29:05] *** Joins: mexen (uid495612@user/mexen)
[10:29:08] *** Joins: Buttercat (~Buttercat@user/buttercat)
[10:34:44] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:39:55] *** Quits: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:c1fb:c50b:876c:8067) (Ping timeout: 272 seconds)
[10:42:45] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:43:00] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[10:48:34] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[10:50:40] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[10:56:40] *** Joins: Crassus (~Crassus@user/crassus)
[10:56:59] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Quit: -a- Connection Timed Out)
[10:57:13] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[10:57:51] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[11:01:03] *** Joins: eck0 (~Android@mobile-166-173-61-174.mycingular.net)
[11:03:05] *** Quits: eck0 (~Android@mobile-166-173-61-174.mycingular.net) (Read error: Connection reset by peer)
[11:03:16] *** Joins: crazyhorse (~crazyhors@220-244-196-30.tpgi.com.au)
[11:03:27] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[11:04:24] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Ping timeout: 244 seconds)
[11:09:23] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[11:13:05] *** Joins: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com)
[11:14:21] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[11:14:54] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[11:16:28] *** Joins: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:f487:faaf:c617:816d)
[11:17:26] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[11:20:31] *** Joins: ondrejsynacek2 (~ondrejsyn@217.11.241.69)
[11:21:20] *** Quits: lonelyoptimist (~lonelyopt@106.212.76.156) (Remote host closed the connection)
[11:22:29] *** Quits: ondrejsynacek1 (~ondrejsyn@2a00:1028:8d1c:62da:f487:faaf:c617:816d) (Ping timeout: 244 seconds)
[11:23:28] *** Quits: crazyhorse (~crazyhors@220-244-196-30.tpgi.com.au) (Remote host closed the connection)
[11:26:39] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[11:31:55] *** Joins: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[11:32:46] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[11:33:59] *** Joins: GamesMaxed (~gamesmaxe@d51a48798.access.telenet.be)
[11:35:32] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:44:37] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[11:45:38] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[11:50:08] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[11:53:07] *** Quits: GamesMaxed (~gamesmaxe@d51a48798.access.telenet.be) (Quit: Konversation terminated!)
[11:56:05] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[12:03:06] *** Quits: mikkel (~mike@208.110.120.167) (Ping timeout: 250 seconds)
[12:03:39] *** Quits: doc (~doc@user/doc) (Ping timeout: 268 seconds)
[12:04:12] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[12:05:59] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[12:06:36] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[12:09:41] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[12:12:06] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[12:15:37] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[12:19:59] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[12:23:14] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[12:24:05] *** Joins: chao (~stenno@user/stenno)
[12:24:09] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[12:26:41] *** Joins: sausajez_ (uid501562@id-501562.stonehaven.irccloud.com)
[12:28:40] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[12:29:21] *** Joins: jonifen (~jonifen@user/jonifen)
[12:29:58] *** Joins: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1)
[12:30:01] *** Joins: makara (~sol@196.214.171.83)
[12:30:57] <makara> hi. Let me start my question with the broken attempt
[12:31:01] <makara> `eslint --no-eslintrc --parser-options=jsx:true;modules:true enrolment.js`
[12:31:35] <makara> eslint uses https://github.com/eslint/espree but how to get that config translated to command line parser options?
[12:32:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[12:35:56] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:20] *** Quits: quesker (~idnet@mail.89vx.net) (Ping timeout: 245 seconds)
[12:40:41] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[12:40:53] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[12:42:24] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[12:46:46] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[12:47:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[12:55:40] *** Joins: FabioP (~fabio@151.31.93.232)
[12:56:56] <makara> fyi `eslint --no-eslintrc --parser-options={sourceType:module,ecmaVersion:7} enrolment.js`
[12:57:37] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:57:37] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[12:58:08] *** Quits: Buttercat (~Buttercat@user/buttercat) (Ping timeout: 250 seconds)
[12:59:31] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:03:42] *** Quits: justBull (~justache@user/justache) (Remote host closed the connection)
[13:04:12] *** Joins: justBull (~justache@user/justache)
[13:04:38] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[13:04:52] <DnzAtWrk> does an object always evaulate to true when cast to bool?
[13:04:56] <DnzAtWrk> evaluate*
[13:06:46] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:06:51] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:07:01] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[13:07:28] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[13:07:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:32] *** Quits: alystair2 (~alystair@user/alystair) (Ping timeout: 250 seconds)
[13:09:34] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[13:09:40] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 252 seconds)
[13:10:01] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[13:10:15] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[13:10:20] *** Joins: de-facto (~de-facto@user/de-facto)
[13:10:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (Ping timeout: 268 seconds)
[13:13:50] *** Joins: Buttercat (~Buttercat@user/buttercat)
[13:15:42] *** SpydarOO7 is now known as Spydar007
[13:17:32] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:20:49] <DPA> DnzAtWrk: Yes: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean
[13:20:49] <DPA> > Any object of which the value is not undefined or null, including a Boolean object whose value is false, evaluates to true when passed to a conditional statement. For example, the condition in the following if statement evaluates to true
[13:20:49] <DPA> You can, however, make them compare to false:
[13:20:49] <DPA> n> [({[Symbol.toPrimitive](){return false}}) == false, ({valueOf(){return false}}) == false]
[13:20:50] <jellobot> (okay) [ true, true ]
[13:21:01] <DnzAtWrk> ah
[13:21:03] <DnzAtWrk> thank you
[13:21:26] *** Joins: chao (~stenno@user/stenno)
[13:22:54] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[13:23:16] *** Quits: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[13:24:12] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[13:36:11] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:39:00] *** Quits: leduyquang753 (~leduyquan@27.76.191.235) (Ping timeout: 252 seconds)
[13:40:45] *** Joins: niflce_ (uid503076@user/niflce)
[13:41:11] *** Quits: niflce (~niflce@user/niflce) (Killed (osmium.libera.chat (Nickname regained by services)))
[13:41:11] *** niflce_ is now known as niflce
[13:41:18] *** Quits: Buttercat (~Buttercat@user/buttercat) (Ping timeout: 258 seconds)
[13:41:32] *** Joins: leduyquang753 (~leduyquan@27.73.61.122)
[13:41:34] *** Joins: Guest1728 (~niflce@user/niflce)
[13:41:45] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[13:43:58] *** Joins: Buttercat (~Buttercat@user/buttercat)
[13:44:22] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 258 seconds)
[13:45:06] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:47:35] *** Joins: pavonia (~user@user/siracusa)
[13:49:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:53:54] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:56:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[13:56:58] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:59:14] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[14:03:51] *** Joins: kmh (~kmh@p200300df5f2f6b008df4c6dd9f18a0d7.dip0.t-ipconnect.de)
[14:08:20] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 244 seconds)
[14:08:45] *** Joins: chao (~stenno@user/stenno)
[14:09:45] *** Quits: ryt (~arewhytea@185.38.142.75) (Ping timeout: 272 seconds)
[14:11:13] <Swahili> Q: Let's say I have 0.0000000012 which js displays with scientific notation. I use .toFixed(12) and get 0.000000001200. How to remove the last two 00's?
[14:12:29] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[14:13:45] *** Joins: entuland (~entuland@user/entuland)
[14:13:52] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:13:52] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:13:52] *** Joins: Heraes (~Heraes@user/romarain)
[14:14:01] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[14:14:37] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[14:14:40] <Swahili> found this regex that works, but don't really know the right answer. The regex I've tested .replace(/([0-9]+(\.[0-9]+[1-9])?)(\.?0+$)/,'$1')
[14:17:52] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[14:22:59] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[14:23:04] <onizu> hi
[14:23:54] <onizu> suddenly jquery stopped working for me and I'm getting this error: Ensure CORS response header values are valid
[14:24:00] <onizu> what's wrong?
[14:24:21] <entuland> do you know what CORS is?
[14:26:18] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[14:26:30] <onizu> reading about it
[14:27:05] <onizu> cross-origin-resource sharing
[14:27:26] <onizu> btw, I'm using CDN for jquery.. could the problem be with that?
[14:27:53] <entuland> check the headers you're getting out of that request, the CDN should not get in the way
[14:29:36] *** Quits: Buttercat (~Buttercat@user/buttercat) (Ping timeout: 252 seconds)
[14:29:39] <onizu> yes, the requests are of the CDN
[14:30:09] <onizu> entuland: https://pasteboard.co/K5DH9Nw.png
[14:30:50] <FightingFalcon> How can i remove a single inline css?
[14:31:16] <entuland> FightingFalcon, you need to alter the properties of that element if you want to do that via JS
[14:31:39] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[14:31:42] <FightingFalcon> hm ok
[14:31:47] <onizu> <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
[14:32:15] <onizu> the crossorigin attribute there.. i think that's it?
[14:32:19] *** Quits: Fusl (fusl@user/fusl) (Quit: freenode)
[14:32:48] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[14:32:52] <entuland> not sure, I tried googling and I found a few possible hits
[14:33:36] <entuland> did you copy that snipped from some documentation?
[14:34:02] <onizu> yes
[14:34:13] <onizu> and that was long back..
[14:34:24] <onizu> I'm going to try removing the crossorigin attrib
[14:34:31] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[14:34:55] <entuland> check how it's supposed to be integrated nowadays
[14:35:07] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[14:35:17] <entuland> the current docs for bootstrap should give you that info
[14:35:58] <DPA> Loading a script using the script tag should have nothing to do with cors. That should only be a problem with stuff like fetch and XMLHttpRequest.
[14:35:59] <DPA> Do you have some kind of service worker intercepting the request or something? Or some html/js boundler that removes it and tries to load it itself?
[14:37:18] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[14:37:56] <onizu> no DPA
[14:38:32] <entuland> odd, I was quite positive that kind of loading as well could be used for XSS and as such could be intercepted by CORS rules, or something
[14:38:45] <onizu> btw, I had to remove the integrity attrib also , as it required cors to work. Now those request errors are gone, but the CDN is still not loading, getting status 503
[14:38:50] <Dorward> crossorigin="anonymous" allows JS to read error events from cross-origin scripts BUT also makes the script require CORS permissions to load it at all
[14:38:58] <onizu> maybe that CDN does require integrity check
[14:39:01] <onizu> :S
[14:39:49] <entuland> the resource address is still correct
[14:40:02] <entuland> maybe the integrity value has changed?
[14:40:42] <Dorward> When I test it without integrity or crossorigin it loads fine. There is a 503 error, but its for an attempt to load the source map, not the script itself.
[14:41:02] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[14:41:39] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[14:41:40] <onizu> Dorward: ok. I tried clearning the cache.. still CDNs don't load
[14:41:59] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:43:37] <onizu> errors: https://pasteboard.co/K5DMCMh.png
[14:43:38] *** Joins: thiras (~thiras@user/thiras)
[14:45:36] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[14:45:43] <entuland> try changing "crossorigin" with "crossOrigin"
[14:46:26] <entuland> or maybe I'm off track, that may just matter when you integrate via JS
[14:46:26] *** Joins: Buttercat (~Buttercat@user/buttercat)
[14:46:46] <entuland> yeah, likely wrong for your case
[14:47:32] <entuland> but may still matter if you're using React
[14:48:48] <onizu> not using react
[14:50:58] <jwpapi> Is there any way to automatically set parapgraphs in a long wall of text?
[14:51:27] <entuland> onizu, actually, I think there is something far bigger going on
[14:51:34] <entuland> github is failing to load properly for me
[14:51:44] <entuland> with plenty of such errors
[14:51:49] <onizu> oh
[14:52:04] <entuland> does it load properly for you?
[14:52:09] <entuland> it's a big fumble for me
[14:52:14] <entuland> just github.com
[14:52:15] <onizu> NOOO
[14:52:19] <onizu> that's horrific
[14:52:32] <onizu> wtf is going on
[14:52:46] <entuland> yep, I can't also access pypy.org at all and I need a library from there, crap
[14:52:56] <entuland> s/pypy/pypi
[14:53:15] <onizu> yea, 503 there
[14:53:23] <entuland> someone broke the internet
[14:54:23] <onizu> even this https://getbootstrap.com/
[14:54:39] <onizu> does it load for you?
[14:56:18] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[14:56:26] <entuland> https://status.python.org/
[14:56:32] <entuland> https://status.fastly.com/
[14:56:50] <entuland> it's the CDN's fault
[14:57:46] <onizu> ok
[14:57:56] <onizu> is anyone else here experiencing such issues?
[14:58:02] <entuland> everyone
[14:58:26] <entuland> it's not just you, that CDN disruption broke half the internet
[14:58:36] <onizu> yes, I mean if anyone else noticed yet :)
[14:58:43] <entuland> oh sure, they're working on that
[14:58:54] <onizu> here in the channel
[14:59:07] <entuland> that I can't tell
[14:59:31] <entuland> "they're working on that" refers to the CDNs being broken, those status pages show they're aware
[14:59:51] *** Quits: Buttercat (~Buttercat@user/buttercat) (Ping timeout: 252 seconds)
[15:00:24] <DPA> While usually, it's not necessary to set cors headers for <script> resources, the content type should be text/javascript, or the content look like javascript, which isn't the case for html error pages, which explains the cors error.
[15:00:46] <onizu> entuland: ok
[15:01:29] <onizu> DPA: well it seems it wasn't even a cors issue after all
[15:03:22] *** Joins: d[-_-]b (~stenno@user/stenno)
[15:03:30] *** d[-_-]b is now known as stenno
[15:03:42] <onizu> damn, my work is halted :(
[15:04:39] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[15:05:34] <entuland> eheheh, yeah, someone's work is halted, someone else's is multiplied tenfold if not more right now to handle the emergency ahahah
[15:05:54] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 245 seconds)
[15:05:55] <onizu> true
[15:06:19] <DPA> Just intercept the connections to the CDN and host the script yourself. The work must go on!
[15:06:28] <onizu> should have checked by loading the CDN link first
[15:06:43] <onizu> DPA: that's right
[15:06:52] *** Joins: Buttercat (~Buttercat@user/buttercat)
[15:07:02] <stenno> where are my colleague who claimed that a 'cdn will never be down'
[15:07:05] <stenno> i miss them now
[15:07:14] <entuland> I _did_ try loading the CDN directly and it worked just fine
[15:07:29] <onizu> entuland: oh.. and now? I tried now and it gives a 503
[15:07:57] <entuland> can't tell, I may have caught a small still breathing bit of the network by sheer luck
[15:08:02] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[15:08:04] <DPA> I'm happy to report that none of my webpages are affected. (I don't use CDNs)
[15:08:09] <onizu> possible
[15:08:53] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[15:11:20] <entuland> onizu, direct requests to https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js still work for me
[15:11:29] <entuland> probably just the validation bit is failing
[15:11:43] <onizu> now it loaded
[15:11:52] <entuland> so you can get the sources and host them yourself I guess
[15:11:55] *** Quits: niflce (uid503076@user/niflce) ()
[15:11:56] <onizu> yep, github is back too
[15:12:21] *** Guest1728 is now known as niflce
[15:13:05] <stenno> we are safe again
[15:13:40] <entuland> github still borked for me
[15:14:41] *** Joins: gry (~quassel@botters/gry)
[15:15:53] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[15:16:29] *** Joins: EyeOfMidas (~EyeOfMida@2601:c6:c57f:c450:bcdc:5d5f:9a3b:1567)
[15:17:14] <onizu> entuland: hard refresh
[15:17:34] *** Joins: GhostingU (uid193337@id-193337.tinside.irccloud.com)
[15:17:54] <entuland> still borked, it's probably matter of DNS propagation or the alike
[15:18:34] <onizu> try to check on your mobile (LTE network)
[15:18:52] <onizu> but anyway, it should be fine soon
[15:20:03] *** Quits: thykka (~thykka@2a01:4f8:c0c:e335::1) (Ping timeout: 272 seconds)
[15:23:07] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 264 seconds)
[15:23:57] *** Joins: entuland_ (~entuland@user/entuland)
[15:24:02] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:24:54] <onizu> entuland_: wb
[15:24:55] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[15:25:05] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[15:25:16] <CoolerX> is fastly down?
[15:26:17] <onizu> yes, for me
[15:27:33] <EyeOfMidas> major outage for a bit there. should be coming back soon. https://downdetector.com/
[15:29:15] *** entuland_ is now known as entuland
[15:29:27] <CoolerX> I wonder what happened
[15:30:10] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 258 seconds)
[15:30:17] *** Joins: chao (~stenno@user/stenno)
[15:30:28] <entuland> we'll get to know for sure in the next hours
[15:30:52] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[15:31:32] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[15:32:23] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[15:32:51] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[15:33:09] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[15:33:20] *** Joins: thykka (~thykka@2a01:4f8:c0c:e335::1)
[15:36:07] *** Joins: pizdets_ (~pizdets@183.182.114.103)
[15:36:10] *** Joins: tex (~super@user/dix)
[15:36:42] *** Quits: pizdets (~pizdets@183.182.115.205) (Ping timeout: 252 seconds)
[15:38:12] *** Quits: EyeOfMidas (~EyeOfMida@2601:c6:c57f:c450:bcdc:5d5f:9a3b:1567) (Remote host closed the connection)
[15:41:15] <cthulchu_> we can generally .setAttribute without checking if it's set? the API does the checking for us?
[15:41:18] *** Joins: pizdets (~pizdets@183.182.111.54)
[15:41:39] *** Quits: pizdets_ (~pizdets@183.182.114.103) (Ping timeout: 252 seconds)
[15:41:50] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[15:42:06] <systemfault> There are very rare cases where setAttribute is better than just setting the related property
[15:42:55] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[15:43:18] <systemfault> Instead of .setAttribute('something', whatever), just do myNode.something = whatever; As a bonus, the properties act in a saner way than attributes
[15:45:30] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[15:46:40] <cthulchu_> really? I can just do element.class = something?
[15:47:08] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[15:47:43] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[15:48:29] <systemfault> cthulchu_: "class" is an exception... "class" was a reserved keyword in old JS versions, so it's called "className"
[15:48:51] <systemfault> "But", you shouldn't even be using .className when we now have .classList
[15:49:01] <systemfault> (So much better)
[15:49:18] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Ping timeout: 250 seconds)
[15:51:03] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[15:52:46] *** Quits: tex (~super@user/dix) (Ping timeout: 250 seconds)
[15:54:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:55:05] *** Quits: pizdets (~pizdets@183.182.111.54) (Ping timeout: 258 seconds)
[16:00:09] <entuland> definitely better because it lets you add and remove classes from the list without worrying about what's there already
[16:00:40] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[16:02:51] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[16:05:20] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[16:05:24] *** Quits: thykka (~thykka@2a01:4f8:c0c:e335::1) (Ping timeout: 272 seconds)
[16:07:22] *** Joins: thykka (~thykka@static.199.14.69.159.clients.your-server.de)
[16:09:14] *** Quits: happymeal (~happymeal@user/happymeal) (Ping timeout: 244 seconds)
[16:10:21] *** Quits: iomari891 (~iomari891@105.112.138.38) (Read error: Connection reset by peer)
[16:10:25] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:11:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:17:29] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[16:17:49] *** Joins: mattil_ (~mattil@airio.portalify.com)
[16:19:53] *** Quits: mattil_ (~mattil@airio.portalify.com) (Quit: Leaving...)
[16:20:52] *** Joins: mattil (~mattil@airio.portalify.com)
[16:21:01] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:23:07] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[16:24:47] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:28:40] *** Joins: thiras (~thiras@user/thiras)
[16:30:02] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 250 seconds)
[16:32:16] *** chao is now known as stenno
[16:33:59] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:36:59] <DPA> A simple fix for all future CDN problems, fallback URLs: https://bpa.st/C2BQ
[16:37:06] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[16:41:36] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[16:47:37] *** Joins: fef (~thedawn@user/thedawn)
[16:55:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[16:57:17] *** Quits: CoolerX (~CoolerX@202.164.131.24) (Quit: Leaving)
[17:00:22] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[17:02:20] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[17:02:56] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[17:13:15] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[17:18:34] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[17:22:50] <onizu> <f-script /> o.o
[17:23:27] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Read error: Connection reset by peer)
[17:24:05] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[17:24:27] <onizu> oh it's your custom name
[17:24:53] *** Joins: raed (~raed@user/raed)
[17:25:15] *** Quits: jazzy (~jaziz@2600:380:874b:26da:28e9:655f:12b2:c191) (Ping timeout: 272 seconds)
[17:27:04] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[17:29:44] <DPA> The code isn't meant very seriousely. It'd probably cause more problems than it solves.
[17:30:33] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[17:31:31] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 264 seconds)
[17:31:44] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[17:33:28] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[17:37:03] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[17:38:04] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 250 seconds)
[17:38:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 244 seconds)
[17:40:12] *** Joins: nifl (~IceChat95@user/niflce)
[17:40:35] *** Quits: niflce (~niflce@user/niflce) (Killed (cadmium.libera.chat (Nickname regained by services)))
[17:40:35] *** nifl is now known as niflce
[17:40:56] *** Joins: Guest6134 (~niflce@user/niflce)
[17:41:21] <onizu> good effort though )
[17:45:50] *** Joins: fef (~thedawn@user/thedawn)
[17:47:45] *** Quits: niflce (~IceChat95@user/niflce) (Quit: Hard work pays off in the future, laziness pays off now)
[17:49:18] *** Joins: zebrag (~chris@user/zebrag)
[17:49:23] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[17:52:53] *** Joins: mattil (~mattil@airio.portalify.com)
[17:53:45] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[17:53:51] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[17:54:45] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[17:59:41] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[18:05:05] *** Joins: rexar89 (~alexi5@208.83.82.238)
[18:08:15] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[18:13:58] *** Joins: wovixo (~wovixo@144.92.232.54)
[18:14:07] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[18:16:14] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:23:31] *** Joins: ryt (~arewhytea@185.38.142.75)
[18:27:56] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[18:32:42] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[18:38:11] *** Joins: stenno (~stenno@user/stenno)
[18:39:42] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Remote host closed the connection)
[18:41:19] *** Joins: happymeal (~happymeal@user/happymeal)
[18:44:00] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[18:44:54] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[18:46:58] *** Quits: makara (~sol@196.214.171.83) (Ping timeout: 250 seconds)
[18:49:09] <DnzAtWrk> is it supported to use your own tags in DOM?
[18:49:21] <DnzAtWrk> like <cat></cat>, document.querySelector('cat');
[18:50:16] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[18:50:33] <Dorward> If its an HTML DOM then (error recovery aside because you shouldn't make errors on purpose) only when following the custom elements spec. https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements
[18:51:11] <Dorward> Write semantic HTML. Use classes or data-* attributes if you need to add custom meta data.
[18:52:21] <DnzAtWrk> how does that work when you have the DOM pre-defined
[18:52:37] *** Quits: wovixo (~wovixo@144.92.232.54) (Quit: Leaving)
[18:53:32] <jaawerth> DnzAtWrk: on modern platforms, yes; there's a relatively new spec for registering custom elements (it's part of the webcomponents specification), support is actually better than I expected https://caniuse.com/custom-elementsv1
[18:53:54] <DnzAtWrk> I suspected something like that would have been in the works
[18:54:02] <DnzAtWrk> it would be the next logical step for HTML
[18:54:11] <jaawerth> see also https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements
[18:54:24] <jaawerth> and yeah given there are five thousand JS frameworks that fake it lol
[18:54:59] <DnzAtWrk> good example: https://aframe.io/
[18:55:21] <DnzAtWrk> https://aframe.io/docs/1.2.0/introduction/
[18:56:02] <DnzAtWrk> I like the idea, even though it's practically pretty useless
[18:58:05] <DPA> It should contain a - in the tag name, otherwise, it's an unknown element rather than a custom element. It can be really nice together with shadow roots, which allows you to have custom styles and DOM parts only visible inside the shadow root, which can be overlayed over the real element.
[18:58:05] <DPA> My IRC web client (which I wrote) uses this stuff. But I recommend to make some kind of loader for the custom elements, which loads the JS, HTML and CSS stuff as needed.
[18:58:23] <DPA> This is from my IRC web client: https://github.com/Daniel-Abrecht/DPA-IRC/blob/master/js/template.js
[18:58:39] <jaawerth> you can also just use whatever tags you want if there's code that goes in and transforms them - angular 1.x worked like that with its directives; on html5-supporting browsers you could do <my-custom-element>, but for legacy support for older IE and stuff people would do <div my-custom-element> or use a class or something, you could configure the directives to work with both
[19:00:01] <DPA> (I wrote my IRC web client before stuff like connectedCallback existed, I schould redo a few things there.)
[19:00:35] <jaawerth> though that using-unknown-elements thing isn't as common as it used to be now that a compile step is the norm
[19:00:48] <jaawerth> but that doesn't mean it isn't still done
[19:03:52] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[19:04:01] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[19:06:34] *** Quits: raed (~raed@user/raed) (Quit: Ciao)
[19:07:08] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 258 seconds)
[19:07:25] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Read error: Connection reset by peer)
[19:08:49] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[19:08:50] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[19:10:35] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[19:15:38] *** Joins: Guest1379 (~openAI@37.46.46.238)
[19:16:11] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[19:22:11] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[19:23:02] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:8d7d:9bc:db53:8efe)
[19:23:03] *** Quits: repo[m] (~repo@user/repo) (Read error: Connection reset by peer)
[19:23:03] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Read error: Connection reset by peer)
[19:23:04] *** Quits: Guest8210 (~willpitte@2001:470:69fc:105::1bf) (Read error: Connection reset by peer)
[19:23:04] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Read error: Connection reset by peer)
[19:23:04] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Read error: Connection reset by peer)
[19:23:46] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[19:24:08] <onizu> .
[19:24:09] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[19:24:09] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[19:24:23] *** Joins: repo[m] (~repo@user/repo)
[19:24:35] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[19:25:10] <onizu> $('.className').ready(function() { console.log(this.id); }); is returning undefined.. why is that? the id is set for all $('.className')
[19:26:14] *** Quits: blyat-73 (~hjgkjhgkj@79.101.60.163) (Quit: Leaving)
[19:26:38] *** WillPittenger is now known as Guest7881
[19:27:27] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[19:28:02] *** Quits: slaughter (~s@75-172-41-172.tukw.qwest.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:28:10] *** Quits: realies (~realies@user/realies) (Remote host closed the connection)
[19:28:35] *** Quits: GhostingU (uid193337@id-193337.tinside.irccloud.com) ()
[19:28:40] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[19:29:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:30:41] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[19:34:31] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[19:34:44] *** Quits: leduyquang753 (~leduyquan@27.73.61.122) (Quit: leaving)
[19:36:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:39:49] <Dorward> onizu : The ready event fires on the document. Arguments you pass to `$()` before calling `ready` don't do anything. https://api.jquery.com/ready/
[19:40:25] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[19:45:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[19:45:55] <onizu> Dorward: oh.. so whatever.ready() will target on the document?
[19:46:18] <Dorward> Yes
[19:46:51] <onizu> ok
[19:47:54] <systemfault> Even .ready is only there for backward compatibility...
[19:48:17] <systemfault> The "modern" way is just doing $(() => { code here })
[19:48:53] <systemfault> Truth is.... jQuery is not aging well at this point.
[19:50:39] <systemfault> It overused "this" which doesn't work that well with arrow functions... The DOM has implemented most of what jQuery does natively with a worse API...
[19:51:08] <systemfault> (worse as in "more verbose and a bit uglier")
[19:51:41] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[19:52:08] *** Joins: alystair (~alystair@user/alystair)
[19:54:23] <Dorward> But also better in that it doesn't have anything like `$()` which does one of 27 different things depending on what kind of argument you pass it :D
[19:58:56] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[19:59:51] <wroathe> jQuery was almost required back in the day when browsers will still far apart on DOM standardization, and when that standard didn't have most of the features that people wanted, but these days I can't imagine starting a project with jQuery
[20:00:02] <wroathe> It did it's job, but it's time to move on
[20:01:49] *** Joins: silly (~silly@user/silly)
[20:02:25] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[20:04:14] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[20:07:34] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 250 seconds)
[20:13:50] *** Quits: ondrejsynacek2 (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[20:14:38] *** Joins: Deide (~Deide@wire.desu.ga)
[20:14:38] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[20:14:38] *** Joins: Deide (~Deide@user/deide)
[20:16:19] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[20:16:49] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[20:17:11] *** Joins: slaughter (~s@75-172-41-172.tukw.qwest.net)
[20:18:39] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[20:18:43] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[20:21:46] <onizu> move on to what?
[20:22:51] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:23:36] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 250 seconds)
[20:23:51] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:48] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[20:28:57] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[20:33:49] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[20:34:28] *** Joins: eck0__ (~Android@mobile-166-173-61-29.mycingular.net)
[20:37:02] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 250 seconds)
[20:41:07] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:41:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[20:42:10] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[20:45:58] <wroathe> To standard DOM if you're against using a UI framework like Vue or React
[20:47:34] <wroathe> onizu: https://developer.mozilla.org/en-US/docs/Web/API/Element
[20:47:34] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[20:52:06] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[20:54:56] *** Joins: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net)
[20:54:58] *** Joins: gehn (~gehn@109.201.152.168)
[20:56:45] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:56:47] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Ping timeout: 272 seconds)
[20:58:10] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[20:59:50] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[21:00:10] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[21:01:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[21:06:19] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[21:09:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[21:09:27] *** Joins: omen (~omen@user/omen)
[21:10:12] *** Joins: Betal (~Beta@user/betal)
[21:11:11] <omen> I'm looking alternative for moment.js. Or some way to print Date in "HH:MM, DD.MM." format?
[21:11:34] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (*.net *.split)
[21:11:34] *** Quits: les (znc@user/les) (*.net *.split)
[21:11:34] *** Quits: tempest (~ashe@tempest.dev) (*.net *.split)
[21:11:34] *** Quits: rickbutton (sid410078@brockwell.irccloud.com) (*.net *.split)
[21:11:34] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[21:11:34] *** Quits: Stx (~stx@libera/staff/stx) (*.net *.split)
[21:11:34] *** Quits: asd (~noname@user/asd) (*.net *.split)
[21:11:34] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[21:11:34] *** Quits: ozymandias (~ozymandia@libre.theyareafter.us) (*.net *.split)
[21:11:35] *** Quits: systemfault (sid267009@highgate.irccloud.com) (*.net *.split)
[21:11:35] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[21:11:35] *** Quits: Kirjava (~cake@user/kirjava) (*.net *.split)
[21:11:35] *** Quits: beowulf (sid116@tooting.irccloud.com) (*.net *.split)
[21:11:35] *** Quits: lf94 (~lf94@178.128.239.88) (*.net *.split)
[21:11:35] *** Quits: mishiranu (~mishiranu@78.129.171.229) (*.net *.split)
[21:11:47] *** Joins: Kirjava (~cake@2a01:4f9:c010:6fe9::2)
[21:11:47] *** Joins: systemfault_ (sid267009@id-267009.highgate.irccloud.com)
[21:11:50] *** Joins: beowulf (sid116@id-116.tooting.irccloud.com)
[21:11:55] *** Joins: les_ (znc@user/les)
[21:11:55] *** Joins: ross (sid305269@user/ross)
[21:11:58] *** Joins: tempest (~ashe@2607:5501:3000:1d3f::2)
[21:11:58] *** Joins: asd (~noname@user/asd)
[21:12:01] *** Joins: rickbutton (sid410078@id-410078.brockwell.irccloud.com)
[21:12:08] *** Quits: Kirjava (~cake@2a01:4f9:c010:6fe9::2) (Changing host)
[21:12:08] *** Joins: Kirjava (~cake@user/kirjava)
[21:12:08] *** Joins: abirkill- (snoopy@d207-216-233-23.bchsia.telus.net)
[21:12:13] <omen> also my american friends, please put date before month
[21:12:17] *** Joins: mishiranu (~mishiranu@78.129.171.229)
[21:12:24] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[21:12:28] <Dorward> omen: https://date-fns.org/v2.22.1/docs/format is a popular choice
[21:12:30] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[21:12:46] <omen> ty
[21:13:04] *** abirkill- is now known as abirkill
[21:13:05] *** Joins: ozymandias (~ozymandia@libre.theyareafter.us)
[21:13:06] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[21:13:28] <zstix> +1 for date-fns
[21:14:04] <gehn> don't put day before month, use ISO format, in which day comes after month
[21:14:13] <jaawerth> I think they're talking about display format
[21:14:24] <jaawerth> which is entirely a matter of what you're used to
[21:14:35] <omen> I'm just saying that it makes sense to put the numbers in order where smallest order is first
[21:14:53] <Kirjava> it also makes sense to use a date format people are familiar with
[21:15:01] <Kirjava> rather one that is technically better but will confuse people
[21:15:04] <omen> but this is totally offtopic, sorry for starting this
[21:15:15] <stenno> !xkcd iso8601
[21:15:24] <Kirjava> tfw no kawai
[21:15:35] <jaawerth> technically better depends on context. in the code, if you have a date as a string, IMO YYYY-MM-DD (or just ISO) is the only way to go because anything else breaks string sorting
[21:16:30] <wroathe> I prefer DDMM-YYYY
[21:16:34] <jaawerth> in terms of human reading it.. that's what localization is for
[21:16:35] <wroathe> I'm a maverick
[21:16:45] <stenno> i use DMYYYYMD
[21:16:48] <jaawerth> yess
[21:16:52] <wroathe> stenno: this is the way
[21:16:55] <stenno> ikr
[21:16:56] <omen> seconds from 1970 is best
[21:18:05] *** Quits: Ducki (~ducki@user/ducki) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[21:19:10] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[21:19:31] <Dorward> omen https://plnkr.co/edit/eFJoXla3gEhEO3fV?open=lib%2Fscript.js
[21:20:05] <Dorward> Although MM is used twice and is month IIRC :)
[21:20:27] <Dorward> mm for minutes
[21:22:26] *** Joins: doc (~doc@user/doc)
[21:24:14] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[21:24:16] *** Joins: Ducki (~ducki@user/ducki)
[21:26:56] <omen> Dorward: thanks
[21:28:03] *** pizzaiolo is now known as pizza
[21:33:20] *** Joins: markgrady (~markgrady@204.246.246.254)
[21:35:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[21:37:25] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[21:37:33] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[21:37:45] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[21:38:41] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Client Quit)
[21:39:37] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[21:39:42] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[21:39:52] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 250 seconds)
[21:41:01] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Client Quit)
[21:43:09] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[21:48:48] *** Joins: Jasen (~jasen@111.197.233.200)
[21:48:52] *** Quits: Jasen (~jasen@111.197.233.200) (Client Quit)
[21:54:35] *** Joins: Guest9_ (~textual@52.229.135.16)
[21:54:40] *** Joins: Jasen (~textual@52.229.135.16)
[21:56:48] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[21:57:16] *** Quits: Guest9_ (~textual@52.229.135.16) (Client Quit)
[21:57:16] *** Quits: Jasen (~textual@52.229.135.16) (Client Quit)
[21:58:16] *** Joins: Jasen (~textual@52.229.135.16)
[21:58:17] *** Joins: Guest9_ (~textual@52.229.135.16)
[21:59:45] *** Joins: sheetjs (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net)
[22:00:15] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[22:00:30] *** Quits: Guest9_ (~textual@52.229.135.16) (Client Quit)
[22:00:30] *** Quits: Jasen (~textual@52.229.135.16) (Client Quit)
[22:01:53] *** systemfault_ is now known as systemfault
[22:02:09] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[22:02:34] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[22:03:25] *** Joins: summersault (~summersau@2804:7f0:3886:c810:2130:6db7:5dde:9634)
[22:07:59] *** Quits: summersault (~summersau@2804:7f0:3886:c810:2130:6db7:5dde:9634) (Ping timeout: 268 seconds)
[22:08:18] *** Joins: realies (~realies@user/realies)
[22:10:17] *** Joins: ondrejsynacek2 (~ondrejsyn@217.11.241.69)
[22:13:18] *** Quits: g00fy (~g00fy@user/g00fy) (Quit: Ping timeout (120 seconds))
[22:13:43] *** Joins: g00fy (~g00fy@user/g00fy)
[22:14:43] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[22:14:58] *** Quits: ondrejsynacek2 (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[22:17:39] *** Joins: ariedro (~ariedro@user/ariedro)
[22:19:57] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[22:20:03] *** Joins: fef (~thedawn@user/thedawn)
[22:20:46] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:20:56] *** Joins: k4rt0ff3lch33t4h (~k4rt0ff3l@178-164-189-247.pool.digikabel.hu)
[22:21:16] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[22:31:19] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 245 seconds)
[22:37:44] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:38:15] *** Joins: fef (~thedawn@user/thedawn)
[22:39:49] *** Joins: chonkbit (~chonkbit@23-121-181-62.lightspeed.lsvlky.sbcglobal.net)
[22:42:39] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[22:42:48] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[22:44:53] <FightingFalcon> https://ctxt.io/2/AACgXaNUFA
[22:45:02] <FightingFalcon> whats wrong with this code? it doesnt wait for 5 seconds
[22:47:36] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:48:09] <wroathe> Lol, where do all of these random paste sites come from? Was there a big gold rush that I missed out on?
[22:48:27] <wroathe> FightingFalcon: You should consider using a paste site that defaults to monospaced fonts. This current font makes the code hard to read.
[22:49:16] <k4rt0ff3lch33t4h> FightingFalcon: why did you make heyy async in the first place?
[22:49:19] <wroathe> FightingFalcon: To answer your question, right not that async function is returning a promise that is immediately resolved
[22:49:56] <FightingFalcon> im just testing something else
[22:50:09] <FightingFalcon> wroathe, so what do i do?
[22:50:20] <wroathe> FightingFalcon: If you want things to wait for heyy you'll want to do something like const heyy() => new Promise(resolve => setTimeout(() => { console.log('hmmmm'); resolve(); }, 5000));
[22:50:56] <FightingFalcon> Whats the point of using set timeout when you use async?
[22:51:10] <k4rt0ff3lch33t4h> jesus man
[22:51:38] <wroathe> FightingFalcon: How would you use async to wait for a specific period of time before calling a function?
[22:52:00] <FightingFalcon> Shouldnt await means that WAIT until this function finishes?
[22:52:11] <wroathe> FightingFalcon: How do you define "finish"?
[22:52:21] <FightingFalcon> does its job
[22:52:36] <k4rt0ff3lch33t4h> ...or resolves a promise?
[22:52:50] <wroathe> FightingFalcon: How's that book coming along?
[22:53:41] *** Quits: realies (~realies@user/realies) (Ping timeout: 258 seconds)
[22:54:29] <DPA> setTimeout does it's job (enquing a callback / timeout to be called later and returning an id for it) immediately.
[22:54:49] <wroathe> DPA: I think it's time to stop spoonfeeding him. This is a regular occurrence at this point.
[22:56:08] <k4rt0ff3lch33t4h> i think if someone can dig a up a good article for FightingFalcon that could probably help
[22:56:38] <wroathe> k4rt0ff3lch33t4h: We've regularly recommended that he read a good Javascript book, and he's pretty damn set on ignoring that advice.
[22:56:53] <wroathe> k4rt0ff3lch33t4h: There's no amount of reading material on this planet that can help this situation.
[22:57:10] <FightingFalcon> Asking a question after a month here is spoonfeeding? this is silly.
[23:01:14] <wroathe> FightingFalcon: https://eloquentjavascript.net/11_async.html
[23:01:21] <wroathe> FightingFalcon: https://eloquentjavascript.net/
[23:01:26] <FightingFalcon> I read that
[23:01:28] <FightingFalcon> anyways
[23:01:49] <wroathe> Reread it. It didn't sink in. There's a code example on that page that does exactly what you're asking about.
[23:02:59] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[23:04:54] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[23:09:54] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[23:10:04] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 245 seconds)
[23:11:32] <DPA> FightingFalconI: Here is an example for a sleep arrow function, taking the time do sleep as argument:
[23:11:32] <DPA> const sleep = time => new Promise(resolve=>setTimeout(resolve, time)); await sleep(5000);
[23:11:32] <DPA> When called, this the function creates a Promise. the promise constructor immediately invokes the function passed to it as argument, with an argument to resolve, and one to reject (unused here), the promise, later.
[23:11:32] <DPA> The invoked function is another arrow function, calls setTimeout, and as callback to be invoked after time seconds, gives it the function it got earlier to resolve the promise.
[23:11:32] <DPA> Therefore, when the sleep function is called, it returns a promise object, which will be resolved after the amount of time specified. So to wait for that in an async function, just await the promise.
[23:11:40] *** Joins: alystair (~alystair@user/alystair)
[23:13:05] *** Joins: summersault (~summersau@2804:7f0:3886:c810:2130:6db7:5dde:9634)
[23:14:30] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[23:15:34] <wroathe> So in the years prior to and including 2018 I used https://formatjs.io/ on a few projects, and I explicitly chose it because it was an implementation of a larger pattern I liked around moving content out of the view layer. There's a few different translation frameworks across different languages whereby you package messages into a message bundle and refer to individual messages in your view layer by
[23:15:40] <wroathe> ID, and that's just something I got used to doing. Now I see that they're recommending that applications avoid using explicit IDs, and to instead _include_ the default content into your components and use a command line tool to extract that content into a message bundle when building the project. I'm not quite sure where I stand on this practice. On the one hand, I can see the argument that having to
[23:15:46] <wroathe> tough multiple files to create and update components imposes a maintenance burden, but on the other hand I think moving the content out of components typically results in less "code" in the components and makes it easier to understand what's going on. Where do you guys stand on this? Do you like keeping the content in your components and using an extractor? Or do you agree with me about using explicit
[23:15:52] <wroathe> IDs and separating it out by hand?
[23:16:13] <wroathe> having to touch* multiple files
[23:16:46] *** Joins: ondrejsynacek2 (~ondrejsyn@217.11.241.69)
[23:16:48] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[23:17:54] <wroathe> In the past what I've typically done is alias their imperative formatMessageAPI to $t, and then done stuff like <input placeholder={$t('registration.email.placeholder')} type="email" />
[23:18:03] <wroathe> formatMessage API*
[23:18:15] *** Quits: FightingFalcon (~sdasavcsg@user/fightingfalcon) (Read error: Connection reset by peer)
[23:22:03] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 258 seconds)
[23:22:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[23:22:58] *** Guest6134 is now known as niflce
[23:26:53] *** Quits: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1) (Quit: Leaving)
[23:27:33] <DPA> In C, and later some other languages, gnu gettext set the standard for internationalization. The way it was handled there was that you had something like _("Some string"), you would then extract that into .po files,
[23:27:33] <DPA> independent people could then translate them into their languates (also using .po files), the application would then load them, and replace all things if it found a translation. There was also some way to specify a context,
[23:27:33] <DPA> in case the same words needed different translations due to different meanings in different context. I think this is the best way to do things, in any language.
[23:30:42] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5)
[23:30:43] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:98a:984d:cc78:dff5) (Client Quit)
[23:31:31] <DPA> In case anyone needs a then-able sleeper object generator, I didn't get to post it earlier: const sleep2 = time => ({then: resolve=>setTimeout(resolve, time)}); await sleep2(5000);
[23:31:33] <wroathe> DPA: Yeah, that's the general pattern. The main question I was asking was around whether it makes sense to include "Some string" in your code, or to instead reference that translation by an ID
[23:31:45] <wroathe> DPA: I don't know that it does
[23:32:15] <wroathe> DPA: For short strings it's fine, but when you've got a UI layer where half of all of the code is just plain text, I don't know
[23:33:45] <wroathe> The above example I gave isn't great, because the placeholder would be small anyway, but for longer strings like "Subscribe to our newsletter for all of the latest tips and tricks by clicking the link below" it starts to get out of hand quickly'
[23:34:34] <wroathe> And manually referencing that content node with an ID seems like a better practice to me. Some language environments make that a recommendation by default (like Java). So instead it would be $t('footer.subscriptionPrompt');
[23:35:35] <wroathe> rather than $t('Subscribe to our newsletter for all of the latest tips and tricks by clicking the link below'); (or _('Subscribe to our newsletter for all of the latest tips and tricks by clicking the link below') if you like)
[23:35:37] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[23:36:04] <wroathe> Basically I'm wondering if storing content in your view layer and extracting it is worth a damn
[23:38:07] <DPA> I think I would still prefer having the text there. Although, I think if it's mostly content on a site, and almost no UI, I may even just make completely different files pre-translated instead.
[23:39:58] <velix> Anyone from Germany in here? I have formulated a job description text and would like to test whether it is "appealing".
[23:42:30] *** Quits: Guest1379 (~openAI@37.46.46.238) (Ping timeout: 250 seconds)
[23:43:15] *** Joins: AurlienPierre[m] (~aurelienp@2001:470:69fc:105::1685)
[23:43:30] <wroathe> DPA: Yeah, I'm still leaning towards not having the content as part of the view layer.
[23:44:00] *** Quits: cantelope (~cantelope@173-27-116-255.client.mchsi.com) ()
[23:46:31] *** Joins: Baloo_ (~Baloo_@45.83.220.176)
[23:48:39] *** Joins: FightingFalcon (~sdasavcsg@user/fightingfalcon)
[23:50:19] <k4rt0ff3lch33t4h> DPA: I remember that my mind was blown away when I first started learning async await a few years back and realized that async await was implemented around then's instead of promises to keep the compatibilty with old promise implementations. I wonder if
[23:50:27] <k4rt0ff3lch33t4h> FightingFalcon still listens
[23:51:34] <k4rt0ff3lch33t4h> i think your example is pretty good
[23:52:07] <DPA> Thanks
[23:52:17] *** Joins: thiras (~thiras@user/thiras)
[23:54:48] <wroathe> I suppose you can make the argument that the extractor will remove entries in the english translations file if calls to formatMessage are removed as features are changed/removed, but 1. That wouldn't remove the matching messages from the other translation files that were added manually by translators, and 2. This also implies that one set of translations are managed by the content in the application,
[23:54:54] <wroathe> rather than letting the translators manipulate even the default messages.
[23:58:46] <DPA> I think it's mostly just preference. I like having something readable even if an application fails to load any translations.
[23:58:49] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Quit: leaving)
