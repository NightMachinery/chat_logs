[00:00:11] <tomsmeding> if A is itself empty, then Either A (A -> Void) is isomorphic to Void -> Void, which is 0 ^ 0, so ?
[00:00:42] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[00:01:04] <tomsmeding> in Haskell I guess 0 ^ 0 = 1 because
[00:01:11] <tomsmeding> :t absurd :: Void -> Void
[00:01:11] <lambdabot> Void -> Void
[00:01:59] *** Joins: Articus (~Articus@207.248.198.65)
[00:03:50] *** Joins: phma_ (~phma@host-67-44-208-84.hnremote.net)
[00:04:08] *** Quits: briandaed (~root@109.95.142.93) (Remote host closed the connection)
[00:04:43] *** Parts: travv0 (sid293381@user/travv0) ()
[00:07:26] *** Quits: phma (phma@2001:5b0:210b:8f48:791b:849d:7db1:84dd) (Ping timeout: 245 seconds)
[00:08:02] <dpratt> that's unsatisfying; perhaps Haskell should crib from Agda https://agda.readthedocs.io/en/v2.5.2/language/function-definitions.html#absurd-patterns
[00:08:30] <tomsmeding> yes I've always wanted that since I learned some Agda
[00:08:30] *** Quits: infandum (~user@205.189.58.94) (Ping timeout: 272 seconds)
[00:09:25] *** Joins: infandum (~user@205.189.58.94)
[00:10:58] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[00:12:44] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[00:14:03] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[00:19:28] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[00:19:34] *** Quits: InstX1_ (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[00:22:45] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[00:24:32] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[00:27:30] *** Quits: ishutin (~ishutin@92-249-182-23.pool.digikabel.hu) (Ping timeout: 272 seconds)
[00:29:00] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[00:29:02] *** Joins: ishutin (~ishutin@92-249-150-149.static.digikabel.hu)
[00:29:04] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[00:29:07] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:29:23] <monochrom> EmptyCase allows a nice syntax for a :: Void -> t; a x = case x of;
[00:30:50] <tomsmeding> TIL you don't need {}
[00:30:56] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[00:37:16] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[00:37:40] *** Quits: Articus (~Articus@207.248.198.65) (Quit: Client closed)
[00:38:58] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[00:39:21] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[00:39:37] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[00:39:53] *** Joins: v0rpun1 (~pvorp@2001:861:3881:c690:b621:8db3:5cfa:e7ea)
[00:40:09] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[00:44:26] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[00:44:52] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:45:13] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[00:45:16] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:47:14] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[00:47:28] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[00:49:24] *** Joins: bahamas (~lucian@84.232.140.52)
[00:53:36] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc)
[00:54:54] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 256 seconds)
[00:55:38] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[00:56:47] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[00:58:02] *** ec_ is now known as ec
[01:00:49] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[01:03:54] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[01:04:41] *** Joins: euprogramista (~euprogram@103.1.212.125)
[01:05:55] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 240 seconds)
[01:06:15] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 240 seconds)
[01:06:55] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[01:09:02] *** Quits: euprogramista (~euprogram@103.1.212.125) (Ping timeout: 252 seconds)
[01:09:04] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.121) (Ping timeout: 256 seconds)
[01:11:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:11:49] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 240 seconds)
[01:12:28] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[01:14:02] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[01:17:09] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:d4cb:ae21:cf60:e6bc) (Remote host closed the connection)
[01:17:18] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.3)
[01:17:19] <dibblego> FWIW, I went down the rabbit hole on Trees That Grow and came to the same conclusion as tomsmeding 
[01:17:56] <tomsmeding> dibblego: I mean, the ()/Void choice is not really the crux of the idea I guess, though it's good to hear I'm not the only one :p
[01:18:25] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[01:18:44] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[01:18:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:16] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[01:19:18] <dibblego> right, I also was able to change it to get what I think is a more meaningful result
[01:21:12] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[01:22:10] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[01:22:30] <monochrom> tomsmeding: Oops, I didn't test my code, {} is still needed, heh.
[01:22:40] *** Quits: jmorris (~jmorris@98.221.165.173) (Ping timeout: 256 seconds)
[01:22:53] *** Joins: jmorris (~jmorris@98.221.165.173)
[01:23:18] <monochrom> EmptyCase is not exactly absurd pattern, but still, close enough as far as Haskell being non-dependent is concerned.
[01:24:35] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:27:31] *** Quits: fendor_ (~fendor@91.141.79.203.wireless.dyn.drei.com) (Remote host closed the connection)
[01:28:15] *** Quits: coot (~coot@213.134.190.95) (Quit: coot)
[01:28:18] *** Quits: infandum (~user@205.189.58.94) (Ping timeout: 272 seconds)
[01:28:36] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[01:31:29] <tomsmeding> :t \x -> case x of
[01:31:30] <lambdabot> p1 -> p2
[01:33:09] <monochrom> Oh! So my error was adding ; without {}
[01:33:29] *** Quits: haskelln00b2 (~haskelln0@94.177.118.126) (Quit: Client closed)
[01:33:41] <geekosaur> makes sense, ; separates patterns
[01:33:41] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[01:33:55] <tomsmeding> the ; gets parsed as belonging to the case, but not making sense there?
[01:34:09] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:34:15] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[01:34:19] <geekosaur> I don't think it can belong to the case
[01:34:20] <monochrom> Yeah manual ; turns off layout parsing and so explicit {} is also called for.
[01:34:24] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[01:34:27] <tomsmeding> ah
[01:34:43] <geekosaur> unless it comes after a pattern -> exp
[01:34:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:35:13] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:35:36] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[01:38:45] <byorgey> tomsmeding, dibblego: ditto re: TTG and Void.  I always use () instead of Void.  And sometimes Void actually is appropriate when you want to say "this constructor cannot happen", e.g. after a desugaring pass or something like that
[01:39:06] *** Quits: michalz (~michalz@185.246.204.69) (Remote host closed the connection)
[01:39:11] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:39:36] <byorgey> https://github.com/disco-lang/disco/blob/master/src/Disco/AST/Desugared.hs#L75-L101 is an example from some of my code
[01:43:24] *** Quits: jmorris (~jmorris@98.221.165.173) (Ping timeout: 240 seconds)
[01:43:29] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:43:49] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[01:44:07] *** Joins: euprogramista (~euprogram@103.1.212.125)
[01:45:58] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[01:47:08] <hololeap> I've noted that `type Sink i = ConduitT i Void` (from conduit)
[01:47:52] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[01:49:12] <hololeap> but I guess that it's appropriate there because the conduit pipeline is driven by downstream, so a sink would need to have Void for downstream ... ?
[01:50:38] <hololeap> because if the output type was () downstream could still call `await`
[01:51:01] <hololeap> yeah that makes sense
[01:56:50] *** Joins: notzmv (~zmv@user/notzmv)
[01:59:25] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[02:00:03] *** Joins: agumonkey (~user@88.163.231.79)
[02:01:07] <romesrf> byorgey: I quite like how Void makes it so that you don't need to pattern match
[02:03:03] *** Quits: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:03:09] *** Quits: euprogramista (~euprogram@103.1.212.125) (Ping timeout: 256 seconds)
[02:06:41] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:17:37] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44)
[02:17:52] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[02:19:17] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:19:21] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44) (Client Quit)
[02:20:08] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[02:22:21] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[02:26:02] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 240 seconds)
[02:26:14] *** Joins: jbox (~jbox@user/jbox)
[02:26:14] *** Quits: v0rpun1 (~pvorp@2001:861:3881:c690:b621:8db3:5cfa:e7ea) (Quit: bye)
[02:26:15] <byorgey> romesrf: yeah, unfortunately, I don't think the coverage checker is quite smart enough to realize that you don't need to pattern match on a constructor that contains a Void (also because Void actually does have bottom as an inhabitant in Haskell).
[02:29:32] <romesrf> byorgey: Oh, I think it already happens in GHC >= 9.0
[02:29:39] <romesrf> at least I'm writing some code like this:
[02:29:49] *** Quits: V (~v@anomalous.eu) (Ping timeout: 240 seconds)
[02:30:51] <romesrf>   ppr (XTypedBracket b) = case ghcPass @p of
[02:30:53] <romesrf> #if __GLASGOW_HASKELL__ <= 900
[02:30:55] <romesrf>       GhcPs -> dataConCantHappen b
[02:30:57] <romesrf>       GhcRn -> dataConCantHappen b
[02:30:59] <romesrf> #endif
[02:31:01] <romesrf>       GhcTc | (TExpBr _ e) <- b -> thTyBrackets (ppr e)
[02:31:29] <romesrf> in which dataConCantHappen is semantically equivalent to absurd
[02:32:05] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[02:32:18] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[02:32:42] <romesrf> perhaps I'm mixing up things... I'll try a minimal example some other time 
[02:33:31] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[02:33:37] <romesrf> this one definitely isn't minimal =P
[02:37:01] <romesrf> because if I have those case branches when compiling GHC >= 900, I get an "overlapping pattern" warning
[02:37:07] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[02:37:12] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[02:37:22] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[02:37:28] <romesrf> or "unused pattern"
[02:38:40] *** Quits: hughjfchen (~hughjfche@vmi556545.contaboserver.net) (Quit: WeeChat 2.8)
[02:39:11] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7049f800083b30852f1c45e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:40:17] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:41:30] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[02:41:52] *** Joins: hughjfchen (~hughjfche@vmi556545.contaboserver.net)
[02:49:14] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[02:49:19] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:49:48] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[02:52:27] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[02:53:28] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:53:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:45] *** Joins: wroathe (~wroathe@user/wroathe)
[02:54:09] *** Quits: ishutin (~ishutin@92-249-150-149.static.digikabel.hu) (Ping timeout: 256 seconds)
[02:55:55] *** Joins: ishutin (~ishutin@92-249-150-250.static.digikabel.hu)
[02:57:06] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[03:01:39] *** Joins: V (~v@anomalous.eu)
[03:09:51] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[03:12:51] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[03:14:28] *** Joins: alp (~alp@user/alp)
[03:15:58] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[03:20:42] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:21:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:21:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:21:46] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[03:23:09] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[03:39:07] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[03:40:50] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[03:41:07] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:42:37] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[03:42:53] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 256 seconds)
[03:43:20] *** Joins: Guest80 (~Guest80@pool-98-110-124-224.cmdnnj.fios.verizon.net)
[03:43:41] <Axman6> Hmm, I hadn't been keeping up with Unison, but it looks like it's come a long way since I last looked! I'll have to give it a closer look. https://www.unison-lang.org/blog/unison_2021-year-in-review/ has a lot of interesting stuff, not least of which is that they're now using "the Haskell VM" for its runtime, which gives it access to GHC's concurrency and STM stuff. very cool
[03:44:43] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[03:45:06] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[03:46:10] *** Joins: __monty__ (~toonn@user/toonn)
[03:47:43] *** Joins: jakalx (~jakalx@base.jakalx.net)
[03:51:27] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[03:52:28] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[03:54:02] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[03:54:55] <jackdk> Axman6: thanks for teh link. Those are some pretty massive improvements, and Unison has thought hard and long about a lot of important things
[03:55:44] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44)
[03:56:15] *** Joins: gdown (~gavin@h69-11-149-231.kndrid.broadband.dynamic.tds.net)
[04:00:27] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Ping timeout: 256 seconds)
[04:00:56] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[04:08:11] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[04:09:12] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:09:19] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[04:13:49] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 240 seconds)
[04:14:37] *** Joins: jbox (~jbox@user/jbox)
[04:17:46] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[04:18:01] *** Joins: liz_ (~liz@81.92.203.102)
[04:20:27] *** Quits: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa) (Ping timeout: 252 seconds)
[04:25:00] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Ping timeout: 272 seconds)
[04:25:17] *** Quits: liz_ (~liz@81.92.203.102) (Quit: Leaving)
[04:25:37] <Axman6> huh, I was looking at the Unison docs, and I couldn't figure out why they felt to seird - turns out that each definition you looks at gets pushed onto a stack in your browser window, so things you looked at to get to where youy are are right there - this is awesome!
[04:26:41] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) (Remote host closed the connection)
[04:27:17] *** Joins: romesrf (~romes@44.190.189.46.rev.vodafone.pt)
[04:28:44] <geekosaur> now imagine wikipedia with that tech
[04:30:01] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[04:30:28] <Axman6> that'd be pretty cool - though the items are much smaller; I guess if you did it on the level or parageraphs or sections or something itmight work
[04:30:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:31:48] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 240 seconds)
[04:32:21] *** Joins: jbox (~jbox@user/jbox)
[04:32:32] *** Quits: simeon (~pi@dslb-090-186-003-168.090.186.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:34:27] *** Joins: simeon (~pi@dslb-090-186-003-168.090.186.pools.vodafone-ip.de)
[04:35:36] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:36:24] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 272 seconds)
[04:38:09] *** Joins: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com)
[04:38:24] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:17] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[04:40:55] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:42:35] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[04:43:20] *** Quits: burnsidesLlama (~burnsides@rrcs-76-81-82-250.west.biz.rr.com) ()
[04:45:47] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:47:02] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:47:42] *** Quits: romesrf (~romes@44.190.189.46.rev.vodafone.pt) (Quit: WeeChat 3.4)
[04:48:15] *** Joins: vysn (~vysn@user/vysn)
[04:48:23] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.103)
[04:52:54] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.103) (Ping timeout: 252 seconds)
[04:53:14] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[04:55:22] *** phma_ is now known as phma
[04:56:03] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[04:59:50] *** Quits: ishutin (~ishutin@92-249-150-250.static.digikabel.hu) (Ping timeout: 272 seconds)
[05:01:27] *** Joins: ishutin (~ishutin@92-249-150-250.static.digikabel.hu)
[05:09:01] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 256 seconds)
[05:09:36] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[05:11:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:11:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:11:25] *** Joins: wroathe (~wroathe@user/wroathe)
[05:13:01] *** Joins: benin (~benin@183.82.26.94)
[05:13:20] <sm> cool link. how does an experimental new programming language have 10 full time developers ?
[05:17:00] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[05:17:56] *** Quits: aeka` (~aeka@2606:6080:1001:16:3492:5f11:f1fb:66ae) (Quit: ZNC 1.8.2 - https://znc.in)
[05:18:15] *** Joins: aeka (~aeka@user/hiruji)
[05:21:11] <exarkun> I guess https://www.unison-lang.org/blog/benefit-corp-report/ explains how ("investors")
[05:21:50] <exarkun> hmm hq in my old backyard...
[05:30:33] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[05:30:45] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[05:41:23] *** Joins: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa)
[05:42:05] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[05:44:11] <sm> +1, thanks
[05:46:15] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[05:46:25] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:48:17] *** Quits: mvk (~mvk@2607:fea8:5cc3:7e00::45ee) (Ping timeout: 240 seconds)
[05:57:47] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[05:58:27] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[05:59:01] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[06:00:42] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-138.cust.tzulo.com)
[06:02:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:02:18] *** Joins: notzmv (~zmv@user/notzmv)
[06:02:24] *** Quits: Guest80 (~Guest80@pool-98-110-124-224.cmdnnj.fios.verizon.net) (Quit: Client closed)
[06:19:40] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[06:21:31] *** Joins: ubert1 (~Thunderbi@p200300ecdf3be97ed771739640ac5cea.dip0.t-ipconnect.de)
[06:22:42] *** Quits: ubert (~Thunderbi@p200300ecdf3be919a5031f04def6f440.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:22:42] *** ubert1 is now known as ubert
[06:22:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:22:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:22:48] *** Joins: wroathe (~wroathe@user/wroathe)
[06:23:00] *** Quits: alp (~alp@user/alp) (Ping timeout: 256 seconds)
[06:30:01] *** Quits: sander (~sander@user/sander) (Quit: So long! :))
[06:30:03] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[06:30:30] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:31:26] *** Joins: sander (~sander@user/sander)
[06:32:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:32:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:32:14] *** finn_elija is now known as FinnElija
[06:37:46] *** Joins: Articus (~Articus@207.248.198.65)
[06:39:48] *** Quits: td_ (~td@94.134.91.38) (Ping timeout: 240 seconds)
[06:41:48] *** Joins: td_ (~td@94.134.91.18)
[06:43:04] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 272 seconds)
[06:44:18] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[06:48:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:48:17] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:51:35] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:51:48] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:55:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:56:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:56:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:56:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:56:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:56:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:56:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:57:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:57:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:57:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:57:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:57:59] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:58:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:58:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:58:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:58:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:58:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:59:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:59:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:59:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:59:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:59:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:59:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[07:06:07] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Read error: Connection reset by peer)
[07:10:36] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-134-138.cust.tzulo.com) (Ping timeout: 256 seconds)
[07:11:00] *** Quits: ishutin (~ishutin@92-249-150-250.static.digikabel.hu) (Ping timeout: 240 seconds)
[07:13:05] *** Joins: ishutin (~ishutin@87-97-25-195.pool.digikabel.hu)
[07:17:00] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[07:19:00] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44)
[07:25:30] *** Quits: incertia (~incertia@207.98.163.88) (Ping timeout: 272 seconds)
[07:26:20] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[07:27:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:30:03] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:31:25] *** Joins: haasn (~nand@haasn.dev)
[07:32:40] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[07:33:10] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[07:33:25] *** Joins: incertia (~incertia@207.98.163.88)
[07:36:10] <zzz> what's the "fixity" of :: ?
[07:36:48] <zzz> if that makes sense
[07:37:07] <Axman6> % :info (::)
[07:37:07] <yahb> Axman6: ; <interactive>:1:2: error: parse error on input `::'
[07:37:10] <Axman6> :(
[07:37:35] <Axman6> I don't think it does make sense
[07:38:31] <monochrom> It's a reserved word, so :info doesn't have it. You can treat it as very low precedence.
[07:38:53] <janus> can any expression have :: after it?
[07:38:56] <Axman6> low precedence, v. high importance
[07:39:07] <monochrom> Yes.
[07:39:17] <zzz> > length "test" :: [Char]
[07:39:18] <lambdabot>  error:
[07:39:18] <lambdabot>      • Couldn't match expected type ‘[Char]’ with actual type ‘Int’
[07:39:18] <lambdabot>      • In the expression: length "test" :: [Char]
[07:39:24] <zzz> > length $ "test" :: [Char]
[07:39:25] <lambdabot>  error:
[07:39:25] <lambdabot>      • Couldn't match expected type ‘[Char]’ with actual type ‘Int’
[07:39:25] <lambdabot>      • In the expression: length $ "test" :: [Char]
[07:39:31] <monochrom> Lower than $
[07:39:34] <zzz> nice
[07:39:58] <monochrom> It's <humongous expr> :: <type> in the grammar.
[07:42:30] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[07:42:36] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[07:48:48] *** Joins: mbuf (~Shakthi@171.61.199.222)
[07:49:04] <hololeap> > \x -> replicate x $ "abcd" :: Int -> String
[07:49:06] <lambdabot>  error:
[07:49:06] <lambdabot>      • Couldn't match expected type ‘Int -> String’
[07:49:06] <lambdabot>                    with actual type ‘[[Char]]’
[07:49:20] <hololeap> so "\x -> " isn't considered part of the expression?
[07:50:55] <hololeap> @type (\x -> replicate x $ "abcd") :: Int -> [String]
[07:50:56] <lambdabot> Int -> [String]
[07:51:05] <monochrom> Oh oops.
[07:59:32] *** [_] is now known as [itchyjunk]
[07:59:40] *** Joins: da39a3ee5e6b4b0_ (~textual@2403:6200:8876:d2a9:cd54:b207:d3aa:c763)
[07:59:54] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[08:02:36] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:19c8:2a3e:4c40:5c44) (Ping timeout: 240 seconds)
[08:04:44] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:07:29] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[08:09:18] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[08:12:08] *** Quits: Articus (~Articus@207.248.198.65) (Quit: Client closed)
[08:14:04] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:17:26] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[08:18:36] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:19:08] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[08:19:20] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[08:19:20] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 272 seconds)
[08:21:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[08:23:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:23:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:23:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:23:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:23:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:24:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:24:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:24:24] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[08:24:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:27:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:31:53] *** Joins: deadmarshal_ (~deadmarsh@95.38.228.103)
[08:33:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:33:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:33:03] *** Joins: wroathe (~wroathe@user/wroathe)
[08:35:21] *** Quits: stvc (~stvc@192.241.166.39) (Ping timeout: 245 seconds)
[08:36:39] *** Parts: zq (~zq@xorshift.org) ()
[08:36:45] *** Quits: da39a3ee5e6b4b0_ (~textual@2403:6200:8876:d2a9:cd54:b207:d3aa:c763) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:37:30] *** Joins: da39a3ee5e6b4b0d (~textual@67.23.55.162)
[08:37:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[08:44:06] *** Joins: paul1 (~kaskal@2001:4bb8:2e0:b5bd:e3c0:d71b:f32:84d8)
[08:45:30] *** Quits: kaskal (~kaskal@2001:4bb8:2cc:5073:e1cf:a3ef:264a:1e80) (Ping timeout: 260 seconds)
[08:46:03] *** Quits: da39a3ee5e6b4b0d (~textual@67.23.55.162) (Ping timeout: 256 seconds)
[08:49:18] *** Joins: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:cd54:b207:d3aa:c763)
[08:59:39] *** Joins: vorpuni (~pvorp@2001:861:3881:c690:52c2:6b24:7f36:817c)
[09:02:13] *** Joins: bahamas (~lucian@84.232.140.52)
[09:05:28] *** Joins: jushur (~human@user/jushur)
[09:09:22] *** Quits: ishutin (~ishutin@87-97-25-195.pool.digikabel.hu) (Ping timeout: 272 seconds)
[09:10:17] *** Joins: rando25892 (~homefame@user/rando25892)
[09:10:27] *** Joins: ishutin (~ishutin@94-21-108-4.pool.digikabel.hu)
[09:15:15] *** Quits: bahamas (~lucian@84.232.140.52) (Ping timeout: 252 seconds)
[09:24:01] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Ping timeout: 256 seconds)
[09:24:14] *** Joins: stvc (~stvc@192.241.166.39)
[09:24:35] *** Quits: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[09:25:16] *** Joins: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net)
[09:26:24] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Quit: Client closed)
[09:29:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:31:08] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[09:43:41] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:44:11] *** Joins: euprogramista (~euprogram@103.1.212.126)
[09:47:12] <ski> > let x = 0; y = 1 in x * y  -- "Yeah manual ; turns off layout parsing and so explicit {} is also called for."
[09:47:13] <lambdabot>  0
[09:49:30] <ski> the absurd pattern is the neutral element of the disjunctive pattern, just like the wildcard ("don't care"/"anything goes") pattern is the neutral element of the conjunctive pattern (of which the "as"-pattern, `<var>@<pat>', is a special case). (conjunctive patterns would be more useful, with `ViewPatterns', or `PatternSynonyms')
[09:51:01] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:54:26] *** Joins: kongsheng (~kongsheng@71.28.225.182)
[09:58:42] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[09:59:03] *** Quits: kongsheng (~kongsheng@71.28.225.182) (Client Quit)
[09:59:57] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[10:00:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:01:39] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[10:01:53] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[10:10:15] *** Quits: euprogramista (~euprogram@103.1.212.126) (Ping timeout: 252 seconds)
[10:11:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[10:11:29] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[10:18:07] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[10:26:44] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[10:28:13] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:a45d:272f:6e0f:d723)
[10:30:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:42:42] *** Quits: incertia (~incertia@207.98.163.88) (Ping timeout: 252 seconds)
[10:43:01] *** Joins: incertia (~incertia@207.98.163.88)
[10:43:04] *** Joins: coot (~coot@213.134.190.95)
[10:44:44] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:d670:f073:3fe1:a27e)
[10:45:21] *** Quits: m1dnight (~christoph@78-22-9-5.access.telenet.be) (Quit: WeeChat 3.4)
[10:46:41] *** Joins: briandaed (~root@109.95.142.93.r.toneticgroup.pl)
[10:46:42] *** Joins: m1dnight (~christoph@78-22-9-5.access.telenet.be)
[10:47:32] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[10:48:23] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[10:56:15] <tomsmeding> byorgey: yes, that's precisely what I mean! Thanks for the example, that's even an application of TTG :)
[11:00:25] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:9870:63e6:8429:151f)
[11:04:09] *** Joins: pottsy (~pottsy@2400:4050:b560:3700:e503:6ff:c324:ffe6)
[11:06:53] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:18:57] *** Joins: machinedgod (~machinedg@24.105.81.50)
[11:20:23] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:20:25] *** Joins: mncheckm (~mncheck@193.224.205.254)
[11:20:39] *** Quits: liz (~liz@2a00:23c5:9680:501:b62e:99ff:fee4:47fa) (Quit: Leaving)
[11:22:46] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:24:59] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:d670:f073:3fe1:a27e) (Quit: WeeChat 3.3)
[11:25:23] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:d670:f073:3fe1:a27e)
[11:25:26] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[11:25:34] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:29:27] *** Quits: da39a3ee5e6b4b0d (~textual@2403:6200:8876:d2a9:cd54:b207:d3aa:c763) (Quit: Textual IRC Client: www.textualapp.com)
[11:30:44] *** Quits: vorpuni (~pvorp@2001:861:3881:c690:52c2:6b24:7f36:817c) (Remote host closed the connection)
[11:31:10] *** Joins: Major_Biscuit (~MajorBisc@c-001-018-027.client.tudelft.eduvpn.nl)
[11:31:39] *** Quits: gdown (~gavin@h69-11-149-231.kndrid.broadband.dynamic.tds.net) (Ping timeout: 252 seconds)
[11:33:22] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[11:33:44] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[11:34:06] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[11:35:00] *** Joins: haskelln00b (~haskelln0@94.177.118.146)
[11:39:48] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Ping timeout: 240 seconds)
[11:42:13] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f552486cafe8385a22e.dip0.t-ipconnect.de)
[11:42:38] *** Joins: xsarnik (xsarnik@lounge.fi.muni.cz)
[11:45:28] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[11:45:53] *** Joins: alp (~alp@user/alp)
[11:48:36] *** Joins: fendor (~fendor@91.141.79.203.wireless.dyn.drei.com)
[11:50:32] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:d670:f073:3fe1:a27e) (Ping timeout: 240 seconds)
[11:51:44] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:1099:d420:1032:362c)
[11:55:42] *** Joins: justAstache4 (~justache@user/justache)
[11:57:20] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 256 seconds)
[11:57:21] *** justAstache4 is now known as justAstache
[11:57:28] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[11:57:53] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[11:59:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:02:57] *** Joins: ph88 (~ph88@2a01:598:9091:a112:15a0:c731:7b0b:e91f)
[12:06:27] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:08:16] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:10:00] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:11:14] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:1099:d420:1032:362c) (Ping timeout: 252 seconds)
[12:11:44] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:12:17] *** Joins: kuribas (~user@ptr-25vy0i772myfuxlbon4.18120a2.ip6.access.telenet.be)
[12:12:55] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:15:45] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:16:04] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:16:41] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[12:17:40] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:19:06] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:19:41] *** Quits: haskelln00b (~haskelln0@94.177.118.146) (Ping timeout: 256 seconds)
[12:20:00] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[12:20:15] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[12:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:22:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:22:37] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:25:48] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[12:26:51] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:26:58] *** Joins: ccntrq (~Thunderbi@2a01:c22:84e5:8a00:e78d:ab33:9063:803d)
[12:27:12] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 252 seconds)
[12:30:06] *** Quits: unrooted (~unrooted@2001:470:69fc:105::a4a) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: mmos[m] (~mmosmatri@2001:470:69fc:105::1:8340) (Quit: You have been kicked for being idle)
[12:30:30] *** Joins: chele (~chele@user/chele)
[12:30:50] *** Quits: ph88 (~ph88@2a01:598:9091:a112:15a0:c731:7b0b:e91f) (Read error: Connection reset by peer)
[12:31:14] *** Joins: ph88 (~ph88@2001:1c05:2402:c600:488b:33cf:eab8:79a8)
[12:31:42] *** Joins: haskelln00b (~haskelln0@94.177.118.42)
[12:32:21] <haskelln00b> I only just ran across the super-helpful https://web.archive.org/web/20160321231319/http://haskell.cs.yale.edu/wp-content/uploads/2011/02/his...
[12:32:25] <haskelln00b> great overview of the story at that point
[12:32:26] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[12:32:29] <haskelln00b> it makes me wonder if there is a "10 years on" retrospective from then
[12:32:42] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[12:32:43] <haskelln00b> from authors who have an equally comprehensive view of what happened in the decade since
[12:41:24] *** Quits: kuribas (~user@ptr-25vy0i772myfuxlbon4.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[12:45:48] *** Joins: kuribas (~user@ptr-25vy0i772myfuxlbon4.18120a2.ip6.access.telenet.be)
[12:47:15] <kuribas> gtraverse seems to restrictive: gftraverse :: forall t (f :: Type -> Type) (g :: Type -> Type) m. (Applicative m, Generic (t f), Generic (t g), GFTraversable (Curried (Yoneda m)) f g (Rep (t f)) (Rep (t g))) => (forall a. f a -> m (g a)) -> t f -> m (t g)
[12:47:24] <kuribas> I need f :: (k -> Type)
[12:48:54] <kuribas> bug?
[12:49:04] <kuribas> FTraversable has : FTraversable (t :: (k -> Type) -> Type) where
[12:49:18] <kuribas> https://hackage.haskell.org/package/hkd-0.1/docs/Data-HKD.html#t:FTraversable
[12:49:46] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[12:55:21] *** Joins: romesrf (~romes@2001:8a0:6d13:9700:f55f:4f24:3a75:f78c)
[12:57:29] *** Joins: dextaa_ (~dextaa@user/dextaa)
[12:59:36] *** Joins: michalz (~michalz@185.246.204.93)
[13:03:32] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:06:38] *** Quits: pottsy (~pottsy@2400:4050:b560:3700:e503:6ff:c324:ffe6) (Quit: Leaving)
[13:07:45] <kuribas> is the default kind *, or k ?
[13:08:17] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:08:18] <kuribas> for example: f in https://hackage.haskell.org/package/hkd-0.1/docs/Data-HKD.html#v:ftraverse_
[13:09:27] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[13:10:24] <kuribas> Or a in (forall a. f a).
[13:10:32] <kuribas> does a have kind * or k?
[13:11:10] <romesrf> i think f :: * -> *
[13:11:35] <romesrf> however, with levity polymorphism, you can say that f :: k -> k
[13:11:45] <romesrf> but I'm really not sure
[13:12:08] <romesrf> I have to re read the paper on levity polymorphism bc I didn't grok it all the first time around
[13:12:27] <romesrf> kuribas: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/11/levity-pldi17.pdf
[13:12:49] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[13:13:49] <romesrf> I believe you'll find your answer there
[13:14:05] <kuribas> err...
[13:14:10] <kuribas> that's a lot of text
[13:14:32] <kuribas> I just want to know the default.
[13:15:14] <romesrf> kuribas: quoting the paper
[13:15:40] <romesrf> symbol "*" is the kind of ordinary types
[13:16:02] <romesrf> when you say f :: * -> * I believe it's the same as f :: Type -> Type
[13:16:09] <kuribas> I know...
[13:16:16] <romesrf> when you say f :: k -> k it means the function is polymorphic on the kind
[13:16:24] <kuribas> I want to pass it a phantom type.
[13:16:33] <romesrf> so f would work for both ordinary types Type but also Unboxed types
[13:16:56] <romesrf> and by default, the kind of f there is * -> *
[13:17:25] <romesrf> to answer your question, I'm pretty sure the default kind is *
[13:17:41] <romesrf> and in (forall a. f a), a :: *
[13:18:39] <kuribas> didn't that change in some ghc version?
[13:19:54] <kuribas> type f ~> g = forall a. f a -> g a
[13:20:07] <kuribas> :k (~>) :: (k -> *) -> (k -> *) -> *
[13:20:07] <lambdabot> error:
[13:20:07] <lambdabot>     Not in scope: type constructor or class ‘~>’
[13:20:08] <lambdabot> error: Not in scope: type variable ‘k’
[13:20:20] *** Joins: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr)
[13:20:25] <kuribas> so it does infer k in that definition...
[13:20:36] <romesrf> kuribas: it does seem to be k
[13:20:45] <romesrf> I was running tests on ghci rn
[13:20:54] <romesrf> I'll get back to you
[13:21:31] <romesrf> you need PolyKinds to type some type variable as k
[13:24:03] <romesrf> kuribas: :k (~>) is a good example
[13:24:24] <romesrf> Turns out I do not know the concrete answer
[13:24:33] <romesrf> however, one more observation:
[13:28:13] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:29:46] <romesrf> nevermind I'm afraid I might be saying things without purpose
[13:30:07] <romesrf> a few messages before I meant kind polymorphism * not levity
[13:34:47] <kuribas> hrmf, and now stack doesn't want to take my changes from git...
[13:34:56] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7049f552486cafe8385a22e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:34:59] <kuribas> "This may indicate that the source is a git archive which uses git-annex."
[13:35:07] <kuribas> thanks, very helpful, stack...
[13:41:42] <kuribas> haskell tooling sucks big time
[13:41:43] *** Joins: Midjak (~Midjak@82.66.147.146)
[13:42:49] <kuribas> documentation says I can use a tarball, but there is nothing on how to specify one...
[13:42:51] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:42:57] <sm> each tool is heroic, yet still the war goes badly!
[13:42:58] <kuribas> On my local file system.
[13:43:30] <kuribas> It'd be better if there was no stack, and all tools support cabal.
[13:44:07] <sm> I think lots of people act that way already. What tools don't support cabal ?
[13:44:49] <kuribas> intellij
[13:45:22] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[13:45:23] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[13:45:34] <sm> I never managed to get intellij to work, certainly not at the level vs code does now
[13:47:17] <kuribas> vscode doesn't work for me.  It crashes on TH.
[13:47:19] * sm switched from idea to vs code for haskell (and later, everything...)
[13:47:29] <kuribas> Anyway, I use emacs :)  stack if for my colleages.
[13:48:11] <sm> stack is still my workhorse. I like its UX.
[13:48:30] <sm> it's undermaintained now though
[13:48:34] *** Joins: yauhsien_ (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[13:48:36] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[13:48:40] <kuribas> it expects everyone to use stack.
[13:49:13] <maerwald> kuribas: vscode crashes on TH?
[13:49:17] <maerwald> you mean HLS?
[13:49:30] <kuribas> yes
[13:49:36] <maerwald> compile it from soure
[13:49:46] <maerwald> you probably have ABI mismatch
[13:49:49] <kuribas> and this stack issue is 2019, guess 2 years is to short to solve it...
[13:50:12] <maerwald> kuribas: the next HLS release will be dynamically linked and check GHC ABI
[13:50:20] <maerwald> that should remove some of those TH issues
[13:50:21] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[13:50:31] <maerwald> the alternative is to build it yourself
[13:50:37] <kuribas> maerwald: I really don't want to spend more time in tooling.
[13:50:45] <maerwald> building HLS is easy with ghcup
[13:51:07] <kuribas> like half a day to setup an editor, to find out it doesn't work.
[13:51:37] *** Joins: hololeap (~hololeap@user/hololeap)
[13:51:52] *** Quits: yauhsien_ (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:53:29] <maerwald> good news then... vscode extension will soon use ghcup to install a dynamically linked HLS
[13:54:05] <kuribas> maerwald: great I'll try HLS in a few months, and then wait a few months more if it doesn't work.
[13:54:37] <maerwald> stack is on life-support so the experience will only get worse
[13:55:18] <ski> haskelln00b : your link got cut off at the end
[13:56:30] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[13:58:24] <kuribas> ah, a local tarball isn't even supported, I have to upload it somewhere...
[13:58:39] <kuribas> yay, it's working!
[13:58:58] <sm> kuribas: just curious, what are you doing ?
[13:59:41] <maerwald> kuribas: did you specify the local tarball with file:///patth?
[13:59:45] <kuribas> yeah
[13:59:53] <kuribas> sm: adding a fix to hkd
[14:00:02] <kuribas> sm: to use in my project.
[14:01:00] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[14:02:33] <kuribas> yay, the deriving works now!
[14:03:25] <maerwald> kuribas: did you try without file://?
[14:03:33] <kuribas> yeah, that didn't work.
[14:03:59] <maerwald> odd
[14:04:32] <juhp[m]> Anyone use vterm btw for example in Emacs?  I am not sure why, seems haskeline does not work work well in vterm afaict
[14:04:36] <fockerized> do people use vector+lens for easy mutable vector updates,much like array modifications in imperative languages?
[14:05:36] <juhp[m]> (maybe haskeline does not recognise vterm as a terminal?)
[14:06:55] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f552486cafe8385a22e.dip0.t-ipconnect.de)
[14:07:11] *** Joins: juhp (~juhp@128.106.188.82)
[14:09:07] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:bd3d:cf84:df7c:e927)
[14:11:09] <kuribas> fockerized: what does lens give you compared to indexing?
[14:11:21] <kuribas> fockerized: I use the functions provided by vector.
[14:12:56] <fockerized> kuribas: vector API are quite cumblesome
[14:13:11] <kuribas> I found it quite ok.
[14:13:13] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[14:13:18] <fockerized> kuribas: for example, i have use 'write' to write something
[14:13:27] <fockerized> very verbose
[14:13:35] <kuribas> to seems right :)
[14:13:58] <kuribas> that
[14:14:13] <maerwald> Vector is ok
[14:14:24] <maerwald> Array is horrible
[14:15:03] <fockerized> and 'modify' to modify something. in c like languages, you know arry[1]=..
[14:15:19] <fockerized> so i'm guessing the lens api can offer some help
[14:15:25] <fockerized> but not sure of its performances
[14:16:34] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[14:17:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Ping timeout: 240 seconds)
[14:17:26] <kuribas> no, lenses are for deeply nested structures.
[14:17:59] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:18:13] <fockerized> i see their sample code snippets are all used for shallow structures
[14:20:09] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[14:23:21] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[14:25:26] *** Joins: jinsun__ (~jinsun@user/jinsun)
[14:26:40] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[14:27:16] *** Joins: juhp (~juhp@128.106.188.82)
[14:29:12] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[14:32:04] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:39] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:35:07] *** Quits: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr) (Ping timeout: 256 seconds)
[14:39:09] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[14:40:30] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:43:38] <jackdk> lenses can be used for deeply nested structures, but you can use them for shallow structures too
[14:44:05] <jackdk> and to traverse across the `Char`s in a `Text` an the `a`s in a `[a]` in a uniform way
[14:44:14] <jackdk> and to set the bits in an `Int`
[14:48:17] *** Joins: fendor_ (~fendor@77.119.174.8.wireless.dyn.drei.com)
[14:50:59] *** Quits: fendor (~fendor@91.141.79.203.wireless.dyn.drei.com) (Ping timeout: 256 seconds)
[14:54:15] *** Quits: romesrf (~romes@2001:8a0:6d13:9700:f55f:4f24:3a75:f78c) (Quit: WeeChat 3.4)
[14:54:42] <byorgey> fockerized: I'm not convinced that using lens would get you more concise syntax for mutable array updates
[14:54:52] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:bd3d:cf84:df7c:e927) (Ping timeout: 268 seconds)
[14:55:37] *** Quits: acidjnk_new3 (~acidjnk@p200300d0c7049f552486cafe8385a22e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:55:50] <kuribas> jackdk: you can, but is it worth the complexity?
[14:56:05] <byorgey> but in general, libraries like 'vector' are set up to make it easy to do operations on entire arrays (map, scan, etc.), not to set individual elements one by one
[14:56:57] <byorgey> if you find yourself doing lots of individual write operations at particular indices, it's worth asking whether there's a higher-level way to think about whatever you're doing
[14:57:08] <byorgey> though sometimes it's not easily avoidable.
[14:57:23] <jackdk> kuribas: for me? yes.
[14:58:41] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:01:01] *** Joins: razetime (~quassel@117.193.4.25)
[15:02:32] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[15:03:03] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[15:04:49] *** Joins: Lucretia (~laguest@user/lucretia)
[15:05:32] *** Quits: ph88 (~ph88@2001:1c05:2402:c600:488b:33cf:eab8:79a8) (Ping timeout: 240 seconds)
[15:08:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:12:00] *** Quits: ubert (~Thunderbi@p200300ecdf3be97ed771739640ac5cea.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:18:15] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:20:58] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:21:22] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:21:24] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[15:24:25] *** Quits: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de) (Ping timeout: 256 seconds)
[15:27:00] *** Quits: ptrcmd (~ptrcmd@user/ptrcmd) (Quit: leaving)
[15:27:00] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[15:27:13] *** Joins: ptrcmd (~ptrcmd@user/ptrcmd)
[15:27:37] *** Joins: juhp (~juhp@128.106.188.82)
[15:28:10] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[15:33:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:37:36] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 272 seconds)
[15:37:46] *** Quits: ishutin (~ishutin@94-21-108-4.pool.digikabel.hu) (Ping timeout: 256 seconds)
[15:39:20] *** Joins: ishutin (~ishutin@92-249-179-87.pool.digikabel.hu)
[15:43:24] *** Quits: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[15:43:32] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Quit: ZNC 1.7.1 - https://znc.in)
[15:43:33] *** Quits: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[15:44:28] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[15:49:58] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[15:52:58] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Quit: ZNC 1.7.1 - https://znc.in)
[15:53:20] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:54:15] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[15:54:46] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:55:50] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[15:57:05] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:01:51] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:02:19] *** Joins: euprogramista (~euprogram@103.1.212.126)
[16:03:50] *** Quits: razetime (~quassel@117.193.4.25) (Ping timeout: 256 seconds)
[16:06:45] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[16:11:27] *** Joins: ccntrq1 (~Thunderbi@dynamic-077-010-200-243.77.10.pool.telefonica.de)
[16:11:36] *** Quits: ccntrq (~Thunderbi@2a01:c22:84e5:8a00:e78d:ab33:9063:803d) (Ping timeout: 252 seconds)
[16:11:36] *** ccntrq1 is now known as ccntrq
[16:15:29] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[16:16:15] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Read error: Connection reset by peer)
[16:16:33] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[16:18:04] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:49] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[16:18:57] *** Joins: razetime (~quassel@117.193.4.149)
[16:19:46] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Read error: Connection reset by peer)
[16:20:02] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Ping timeout: 260 seconds)
[16:20:10] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[16:21:03] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[16:24:49] *** Quits: madnight (~madnight@static.59.103.201.195.clients.your-server.de) (Read error: Connection reset by peer)
[16:26:42] <kuribas> How can I use "Type" instead of "*"?
[16:26:49] <kuribas> is there an import?
[16:26:54] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[16:27:00] <dminuoso> set -XStarIsType
[16:27:26] <kuribas> thanks :)
[16:27:28] <dminuoso> It should be on by default
[16:27:48] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[16:28:06] <lortabac> IIRC it's in Data.Kind
[16:28:09] <geekosaur> I think you might need to import it still though
[16:28:12] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 256 seconds)
[16:28:31] <kuribas> right
[16:28:33] <geekosaur> and isn't that backwards? -XNoStarIsType to force it to us4e Type instead of * ?
[16:28:39] *** Joins: Topsi (~Tobias@dyndsl-091-249-082-060.ewe-ip-backbone.de)
[16:29:00] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[16:29:48] <kuribas> Now I am confused why it is useful?
[16:29:55] <kuribas> XStarIsType
[16:30:05] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[16:30:32] <geekosaur> that's just how things used to work
[16:30:55] <geekosaur> I think the Report may speak of kinds that way, although standard Haskel lhas no way to express them?
[16:31:23] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[16:31:36] *** Joins: ubert (~Thunderbi@p200300ecdf19b77776b4004eb09af332.dip0.t-ipconnect.de)
[16:36:57] *** Quits: haskelln00b (~haskelln0@94.177.118.42) (Ping timeout: 256 seconds)
[16:40:28] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:41:24] *** Joins: ccntrq1 (~Thunderbi@2a01:c22:904e:8800:e607:dad6:86e8:7c9e)
[16:43:29] *** Quits: ccntrq (~Thunderbi@dynamic-077-010-200-243.77.10.pool.telefonica.de) (Ping timeout: 252 seconds)
[16:43:29] *** ccntrq1 is now known as ccntrq
[16:45:46] *** Quits: euprogramista (~euprogram@103.1.212.126) (Ping timeout: 256 seconds)
[16:47:15] *** Quits: agumonkey (~user@88.163.231.79) (Read error: Connection reset by peer)
[16:51:32] *** Joins: mncheckm (~mncheck@193.224.205.254)
[16:51:34] *** Joins: mncheck (~mncheck@193.224.205.254)
[16:52:39] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:52:42] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:53:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:55:24] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[17:01:27] *** Joins: dextaa_ (~dextaa@user/dextaa)
[17:04:18] <kuribas> How do you dispatch on a type in a GADT?
[17:04:51] <kuribas> Do I need to make a second, "type witness" datatype?
[17:06:04] <kuribas> I guess haskell sucks as a dependently typed language...
[17:08:00] <geekosaur> yep
[17:08:02] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:12:38] <kuribas> ah, stackoverflow post confirms it's impossible.
[17:12:44] <kuribas> without type classes.
[17:15:09] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[17:15:49] <siers> what does "dispatch" mean?
[17:17:15] <kuribas> to pick an implementation based on the type.
[17:17:55] <geekosaur> only typeclasses can do that, yeh
[17:18:22] <kuribas> even if the type is an exhaustive phantom type...
[17:18:24] <kuribas> like Bool
[17:18:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[17:18:39] <dminuoso> You can think of typeclasses as type-level case-of
[17:18:59] <dminuoso> With each instance providing a branch
[17:19:28] <dminuoso> kuribas: Sure, at the end GADTs are just generalized ADTs. But fundamentally they still only allow you to case-of on data constructors.
[17:19:50] <siers> is there a world where the type-level programming resembles regular (value) programming more?
[17:20:00] <kuribas> siers: dependent types.
[17:20:10] <kuribas> siers: idris, agda, coq, ...
[17:20:35] <siers> hm, ok
[17:20:42] <kuribas> it doesn't not resemble value programming, it "is" value programming.
[17:20:43] <siers> but it has type-classes too, no?
[17:20:57] <kuribas> yes, interfaces.
[17:21:03] <kuribas> But they are not fundamental.
[17:21:16] *** Quits: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com) (Quit: leaving)
[17:21:19] <kuribas> They are built on proof search.
[17:21:33] <siers> but then "type-classes are type-level case-of" and the resemblence is lost?
[17:21:53] <kuribas> indeed
[17:22:04] <siers> that was what I kind of was getting at
[17:22:21] <siers> (I have written a small amount of agda with peano number functions, but I hope this summer I'll have time to write something more substantial)
[17:24:08] <kuribas> Is there a way to remove a constraint?
[17:24:34] <kuribas> Like : Num a => a => forall a. Maybe a ?
[17:24:51] <kuribas> turn (Num a => a) into (forall a. Maybe a)?
[17:25:48] <siers> well, it requires the Num instance, so you need that code 
[17:26:24] <kuribas> yeah, it's open ended.
[17:26:30] <dminuoso> siers: In the lambda cube, we have polymorphism as `terms binding types` (think id @Int), type operators as `types binding types` (think Maybe :: Type -> Type), and then you have `types binding terms` as dependent types.
[17:27:13] <dminuoso> So in something like idris or agda you can have all the fun with all the consequences.
[17:27:30] <siers> :) funny phrasing 
[17:27:35] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[17:27:38] <siers> kuribas, what do you mean by that?
[17:28:00] <kuribas> that the behaviour depends on the call site.
[17:28:09] <siers> dminuoso, did you read some book about to learn about the lambda cube?
[17:28:40] *** Joins: zaquest (~notzaques@5.130.79.72)
[17:30:01] <dminuoso> I picked it up across various resources. Some books and papers referenced it
[17:30:33] <siers> is there something "canonical" (hope i'm using this right) that lays it out effectively?
[17:31:01] <siers> dminuoso, and this is supposed to answer my question about "why isn't the type-level lingo more like regular programming lingo?" or?
[17:32:26] <kuribas> siers: in haskell or idris?
[17:32:33] <siers> (I hope I don't come off as impolite :), I can't tell)
[17:32:50] <kuribas> in haskell, you can write "type Foo = Bar 1"
[17:32:57] <kuribas> then type is a "type synonym".
[17:33:19] *** Quits: tabemann (~travisb@2600:1700:7990:24e0:afa7:cc85:6e08:da6f) (Remote host closed the connection)
[17:33:21] <kuribas> In idris, it's just a value "Foo : Type; Foo = Bar 1"
[17:33:32] <kuribas> so the "lingo" is not necessary.
[17:33:37] *** Joins: tabemann (~travisb@2600:1700:7990:24e0:305:eafc:7502:a3bd)
[17:33:46] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[17:34:56] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:35:33] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[17:40:44] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:41:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[17:41:42] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[17:41:42] *** finn_elija is now known as FinnElija
[17:42:22] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[17:45:49] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[17:46:48] <siers> is that with DataKinds?
[17:47:06] <kuribas> there are no DataKinds in idris.
[17:47:19] <siers> > in haskell, you can write "type Foo = Bar 1"
[17:47:21] <lambdabot>  <hint>:1:1: error: parse error on input ‘in’
[17:48:04] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:48:21] <geekosaur> DataKinds is kinda the first step toward trying to Idris-ize Haskell. we have a very long way to go, though
[17:48:42] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[17:51:43] *** Joins: dschrempf (~dominik@2a02:8389:100:e100:b354:d491:299f:8d)
[17:53:00] *** Joins: agumonkey (~user@88.163.231.79)
[17:53:27] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[17:55:34] <siers> I have had this question at the back of my mind for a while: if you're writing in some dependently typed language, I understand you can encode/prove all sorts of mathematical proofs
[17:55:36] <siers> Then you must be also able to encode probably all invariants you want about your algo and potentially squash a bunch of bugs? :)
[17:55:53] <kuribas> siers: you can prove anything in idris.
[17:56:00] <siers> * :D
[17:56:07] <kuribas> however, wether it is sustainable is another question.
[17:56:09] <siers> agda also?
[17:56:14] <siers> yes, sustainability aside
[17:56:16] <kuribas> sure
[17:56:27] <siers> So long as you've actually encoded what you had in mind 
[17:56:29] <kuribas> you can prove anything of math in idris/agda/...
[17:56:53] <siers> well, you don't have the law of excluded middle, apparently, so not quite everything
[17:57:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:57:29] *** Joins: boborygmy (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[17:57:29] *** Joins: soxen (~bob@pool-173-54-217-168.nwrknj.fios.verizon.net)
[17:59:09] <siers> at least I've heard that much and I can imagine that will hurt having seen enough mathematics to know that proof by contradiction is used often enough in textbooks
[17:59:29] <kuribas> you can do proof by contradiction in idris.
[18:00:02] <siers> ! amazing, I have outdated info
[18:00:08] <kuribas> if you can prove a contradiction, you can prove anything.
[18:00:09] <kuribas> :t void
[18:00:10] <lambdabot> Functor f => f a -> f ()
[18:00:15] <kuribas> :t absurd
[18:00:16] <lambdabot> Void -> a
[18:00:19] <Franciman> neado
[18:00:41] <Franciman> it's hard to get to absurd, but when you get there
[18:00:42] <janus> kuribas: what do you mean by 'anything of math'? i thought the constructive approach was different than how much mathematicians work?
[18:00:49] <Franciman> you'll be granted godlike powers
[18:01:05] <kuribas> janus: oh well, I am not an expert...
[18:01:36] <janus> ok just checking.. i think it's worth noting
[18:01:43] *** Joins: joeyh (~joeyh@kitenet.net)
[18:02:20] *** Quits: joeyh_ (joeyh@kitenet.net) (Ping timeout: 268 seconds)
[18:02:55] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[18:02:57] *** Quits: razetime (~quassel@117.193.4.149) (Ping timeout: 240 seconds)
[18:02:58] <siers> logic is tough 
[18:03:43] *** cods_ is now known as cods
[18:03:50] *** Joins: Guest47 (~Guest47@eduroam-mff-ms.koleje.cuni.cz)
[18:04:11] *** Quits: Guest47 (~Guest47@eduroam-mff-ms.koleje.cuni.cz) (Client Quit)
[18:04:45] <Franciman> logic is tough for the hard users of it
[18:04:58] <Franciman> if you are an outsider to logic and have learnt your whole life to reason about your flawed reasonings
[18:05:12] *** Quits: dschrempf (~dominik@2a02:8389:100:e100:b354:d491:299f:8d) (Quit: WeeChat 3.3)
[18:05:19] <Franciman> then logic is something you are familiar with, since you've been processing your whole life reasonings as well
[18:05:30] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[18:06:26] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:07:01] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[18:08:05] *** Joins: romesrf (~romes@198.177.63.94.rev.vodafone.pt)
[18:09:38] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[18:11:13] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:12:02] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[18:13:54] *** Joins: razetime (~quassel@117.254.34.198)
[18:14:39] <kuribas> ah great, I found a work-around.
[18:14:54] <kuribas> Basically, as long as there is a GADT around to restrict the types, GHC is happy.
[18:15:07] <kuribas> So a bit of boilerplate, and it works :)
[18:20:56] <lortabac> kuribas: depending on what you are doing, at some point you may need an existential or a continuation to unrefine the type
[18:24:40] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[18:26:36] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:27:52] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:9870:63e6:8429:151f) (Quit: WeeChat 2.8)
[18:33:04] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[18:33:48] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[18:37:21] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 252 seconds)
[18:41:02] *** Joins: jmorris (~jmorris@98.221.165.173)
[18:43:04] *** Joins: alt-romes (~romes@198.177.63.94.rev.vodafone.pt)
[18:44:46] *** Quits: romesrf (~romes@198.177.63.94.rev.vodafone.pt) (Ping timeout: 256 seconds)
[18:44:58] *** Quits: jmorris (~jmorris@98.221.165.173) (Client Quit)
[18:45:12] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Quit: Off to see the wizard.)
[18:45:22] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[18:52:26] *** Joins: jakalx (~jakalx@base.jakalx.net)
[18:54:17] *** Quits: alt-romes (~romes@198.177.63.94.rev.vodafone.pt) (Ping timeout: 240 seconds)
[18:56:25] *** Joins: notzmv (~zmv@user/notzmv)
[18:59:49] *** Quits: marquis_1ndras (~marquis_a@61.69.224.60) (Ping timeout: 240 seconds)
[19:01:02] *** Joins: marquis_andras (~marquis_a@61.69.224.60)
[19:02:35] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[19:04:27] *** Joins: Guest82 (~Guest82@2a02:587:4854:f100:4eed:fbff:fe67:3137)
[19:05:14] *** Joins: Jason (~Jason@31-152-164-202.pat.amp.cosmote.net)
[19:05:55] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:06:35] <Jason> Hello, I am unable to find the haskell-gsoc channel, can anybody point me at the right direction?
[19:11:09] <geekosaur> I think it hasn't been reconstituted on libera yet, since it's still in the planning phase. I'd ask at committee@haskell.org and also point out to them summer.haskell.org still points to freenode :)
[19:12:08] <Jason> I will do that, thanks for the info.
[19:12:16] *** Joins: kitten (~kitten@host-80-41-94-158.as13285.net)
[19:12:29] *** Quits: kitten (~kitten@host-80-41-94-158.as13285.net) (Remote host closed the connection)
[19:12:41] *** Joins: kitten (~kitten@host-80-41-94-158.as13285.net)
[19:17:47] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[19:22:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Ping timeout: 260 seconds)
[19:25:48] *** Joins: ph88 (~ph88@2001:1c05:2402:c600:488b:33cf:eab8:79a8)
[19:27:30] *** Quits: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Ping timeout: 272 seconds)
[19:28:11] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[19:29:36] *** Quits: Major_Biscuit (~MajorBisc@c-001-018-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[19:30:08] *** Quits: wysteriary[m] (~wysteriar@2001:470:69fc:105::a42e) (Quit: You have been kicked for being idle)
[19:30:28] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[19:31:17] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:31:29] *** Quits: Jason (~Jason@31-152-164-202.pat.amp.cosmote.net) (Ping timeout: 256 seconds)
[19:31:52] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[19:31:54] *** Joins: acidjnk_new3 (~acidjnk@p200300d0c7049f552486cafe8385a22e.dip0.t-ipconnect.de)
[19:33:24] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
[19:35:42] *** Joins: jgeerds (~jgeerds@55d4548e.access.ecotel.net)
[19:35:54] *** Quits: ccntrq (~Thunderbi@2a01:c22:904e:8800:e607:dad6:86e8:7c9e) (Remote host closed the connection)
[19:36:12] *** Joins: ccntrq (~Thunderbi@2a01:c22:904e:8800:e607:dad6:86e8:7c9e)
[19:37:12] *** Joins: alt-romes (~romes@2001:8a0:6d13:9700:3d91:207e:6db1:ade)
[19:37:18] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[19:38:54] *** Quits: Guest82 (~Guest82@2a02:587:4854:f100:4eed:fbff:fe67:3137) (Quit: Client closed)
[19:43:58] *** Joins: haskelln00b (~haskelln0@94.177.118.146)
[19:45:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[19:47:29] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:9870:63e6:8429:151f)
[19:49:42] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[19:50:05] <mcgroin> How are linked list represented in haskell?
[19:50:34] <mcgroin> define some custom data type?
[19:50:52] <mcgroin> or are there some well known library
[19:53:24] <lortabac> mcgroin: there is a standard list type, whose constructors are [] and (:)
[19:53:28] <geekosaur> a normla list is a linked list. if you want an array there is Array, there is Vector, there are others
[19:53:55] <lortabac> it also has syntactic sugar so you can write [1, 2, 3] instead of 1 : 2 : 3 : []
[19:54:29] <merijn> mcgroin: The standard list *is* a linked list :)
[19:54:42] *** Quits: ph88 (~ph88@2001:1c05:2402:c600:488b:33cf:eab8:79a8) (Ping timeout: 260 seconds)
[19:55:01] <merijn> You can easily define your own with slightly different syntax, though
[19:57:40] *** Joins: xpika (~xpika@n175-34-196-120.sun1.vic.optusnet.com.au)
[19:58:09] <mcgroin> i see
[20:00:12] <xpika> hello! first time on libera chat. just testing it works.
[20:00:22] *** Joins: ccntrq1 (~Thunderbi@2a01:c23:8d50:8100:4c5f:620e:1ebe:6a68)
[20:00:34] <lortabac> xpika: hello
[20:00:44] *** Quits: ccntrq (~Thunderbi@2a01:c22:904e:8800:e607:dad6:86e8:7c9e) (Ping timeout: 268 seconds)
[20:00:44] *** ccntrq1 is now known as ccntrq
[20:04:26] *** Quits: jgeerds (~jgeerds@55d4548e.access.ecotel.net) (Ping timeout: 268 seconds)
[20:05:59] *** Quits: haskelln00b (~haskelln0@94.177.118.146) (Quit: Client closed)
[20:06:05] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:06:18] *** xpika is now known as blah
[20:07:00] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 252 seconds)
[20:07:00] *** Quits: mncheckm (~mncheck@193.224.205.254) (Ping timeout: 252 seconds)
[20:07:08] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[20:08:43] *** Joins: xpika (~xpika@n175-34-196-120.sun1.vic.optusnet.com.au)
[20:10:25] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:11:04] *** Joins: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813)
[20:12:17] *** Quits: blah (~xpika@n175-34-196-120.sun1.vic.optusnet.com.au) (Ping timeout: 256 seconds)
[20:14:43] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:9870:63e6:8429:151f) (Quit: WeeChat 2.8)
[20:17:23] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:17:41] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[20:17:41] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[20:17:41] *** finn_elija is now known as FinnElija
[20:19:25] *** alt-romes is now known as romesrf
[20:20:02] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 240 seconds)
[20:27:05] *** Quits: kuribas (~user@ptr-25vy0i772myfuxlbon4.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[20:27:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[20:27:54] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[20:32:20] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:41] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:34:00] *** Joins: zebrag (~chris@user/zebrag)
[20:35:32] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:844b:b51a:d0ea:add8)
[20:37:04] <fockerized> xpika: hello i'm using weechat, also on libera
[20:37:32] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:41:16] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[20:43:54] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[20:46:03] *** Quits: razetime (~quassel@117.254.34.198) (Ping timeout: 252 seconds)
[20:46:03] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:46:51] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[20:47:10] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[20:47:39] *** Joins: Articus (~Articus@207.248.198.65)
[20:48:29] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[20:49:55] *** Quits: agumonkey (~user@88.163.231.79) (Remote host closed the connection)
[20:51:33] *** Joins: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[20:51:33] *** Quits: Vajb (~Vajb@2001:999:62:aa00:7f5a:4f10:c894:3813) (Read error: Connection reset by peer)
[20:51:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:51:42] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[20:53:09] <Articus> Hi, I installed XMonad through stack, I'm having issues with this, help about this would be awesome. Now xmessage appears when there are errors, but doesn't show any message also whith xmonad --recompile, it says XMonad module not found
[20:53:18] *** Joins: cheater (~Username@user/cheater)
[20:53:43] *** Joins: Kaiepi (~Kaiepi@156.34.47.253)
[20:54:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:55:33] <geekosaur> you need a stack.yaml to go along with the xmonad.hs, to tell xmonad --recompile to get its dependencies from stack
[20:56:45] <geekosaur> this also requires xmonad 0.17.0; it's a bit more work if you are still on 0.15. which come to think of it you will be unless you're using the nightly resolver :(
[20:57:48] <Articus> Should I symlink ~/.config/xmonad/stack.yaml to ~/.xmonad ?
[20:58:59] <Articus> It's version 0.17
[21:00:09] <geekosaur> if you're on 0.17 then you should probably not be using ~/.xmonad at all
[21:00:15] <Articus> I thought I had version 0.17 but I have 0.15
[21:00:27] <Articus> How do I unistall it?
[21:02:23] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[21:02:23] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[21:02:23] *** finn_elija is now known as FinnElija
[21:04:14] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[21:04:23] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[21:05:15] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[21:05:38] *** Joins: ph88 (~ph88@84-30-78-253.cable.dynamic.v4.ziggo.nl)
[21:09:28] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[21:16:03] *** Quits: kitten (~kitten@host-80-41-94-158.as13285.net) (Remote host closed the connection)
[21:16:13] *** Joins: econo (uid147250@user/econo)
[21:17:06] *** Joins: Jason (~Jason@31-152-249-202.pat.amp.cosmote.net)
[21:18:20] *** Joins: Graham31415 (~Graham314@213.237.95.25)
[21:21:13] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[21:21:23] <geekosaur> Articus, you can just remove the xmonad binary. you can then reinstall using the nightly resolver, or install it with cabal instead of stack. https://xmonad.org/INSTALL.html may be of interest
[21:22:01] <geekosaur> also you might want to ask in #xmonad instead of here, there are more people who know xmonad (and stack, which I don't particularly; I'm a cabal user)
[21:22:32] <Articus> Thanks!
[21:22:37] *** Quits: ishutin (~ishutin@92-249-179-87.pool.digikabel.hu) (Ping timeout: 240 seconds)
[21:24:05] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[21:24:30] *** Joins: ishutin (~ishutin@193-226-233-55.pool.digikabel.hu)
[21:31:52] *** Quits: Articus (~Articus@207.248.198.65) (Quit: Client closed)
[21:32:36] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[21:38:02] *** Quits: ccntrq (~Thunderbi@2a01:c23:8d50:8100:4c5f:620e:1ebe:6a68) (Remote host closed the connection)
[21:38:43] *** Joins: Akiva (~Akiva@user/Akiva)
[21:40:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Excess Flood)
[21:42:40] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[21:42:58] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[21:43:28] *** Joins: Articus (~Articus@207.248.198.65)
[21:45:27] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 252 seconds)
[21:46:32] *** Quits: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17) (Ping timeout: 240 seconds)
[21:48:20] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:49:22] *** Quits: ph88 (~ph88@84-30-78-253.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[21:50:10] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:51:05] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[21:52:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:52:54] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[21:52:57] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[21:54:32] *** Quits: mbuf (~Shakthi@171.61.199.222) (Quit: Leaving)
[21:56:36] *** Quits: romesrf (~romes@2001:8a0:6d13:9700:3d91:207e:6db1:ade) (Ping timeout: 240 seconds)
[21:57:26] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[21:59:04] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:00:31] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[22:02:22] *** Joins: romesrf (~romes@2001:8a0:6d13:9700:5925:9a0c:3d64:35e6)
[22:03:55] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[22:04:34] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:05:30] <sm> https://www.tweag.io/blog/2022-03-11-nickel-first-release
[22:06:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:08:00] *** Quits: romesrf (~romes@2001:8a0:6d13:9700:5925:9a0c:3d64:35e6) (Ping timeout: 252 seconds)
[22:12:48] *** Joins: romesrf (~romes@2001:8a0:6d13:9700:5925:9a0c:3d64:35e6)
[22:18:26] *** Quits: romesrf (~romes@2001:8a0:6d13:9700:5925:9a0c:3d64:35e6) (Quit: WeeChat 3.4)
[22:21:29] <shapr> yay!
[22:22:21] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[22:22:25] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[22:23:34] <maerwald> "Nickel targets Nix" that's where I stopped reading :p
[22:24:11] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:25:42] *** Quits: Graham31415 (~Graham314@213.237.95.25) (Quit: Client closed)
[22:26:35] *** Joins: Graham31415 (~Graham314@213.237.95.25)
[22:29:04] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Quit: leaving)
[22:29:27] <sm> it's general purpose, not only for nix
[22:29:30] <sm> looks like a more practical dhall
[22:31:20] *** Quits: xpika (~xpika@n175-34-196-120.sun1.vic.optusnet.com.au) (Quit: Client closed)
[22:33:13] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[22:36:43] *** Joins: agumonke` (~user@88.163.231.79)
[22:37:42] *** Quits: agumonkey (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Ping timeout: 252 seconds)
[22:38:04] *** Quits: stiell_ (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[22:38:25] *** Joins: stiell_ (~stiell@gateway/tor-sasl/stiell)
[22:39:54] *** Quits: alp (~alp@user/alp) (Ping timeout: 252 seconds)
[22:40:13] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[22:40:37] *** Quits: theproffesor (~theproffe@2601:282:847f:8010::7f59) (Ping timeout: 240 seconds)
[22:40:45] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[22:41:01] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[22:41:03] *** Joins: theproffesor (~theproffe@c-24-9-30-127.hsd1.co.comcast.net)
[22:42:11] *** Quits: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com) (Client Quit)
[22:42:53] *** Quits: Jason (~Jason@31-152-249-202.pat.amp.cosmote.net) (Quit: Client closed)
[22:43:52] *** Quits: Articus (~Articus@207.248.198.65) (Quit: Client closed)
[22:49:14] <lechner> sm: hi, i like it! maybe i'll try using it in places where dhall scared me. is nickel as capable?
[22:49:57] <sm> check it out lechner, it's 0.1 but looks powerful
[22:50:07] <ski> siers : proof-by-contradiction is distinct from (direct) proof-of-negation
[22:50:12] <sm> more powerful perhaps (contracts)
[22:50:58] <maerwald> sm: dhall tries to be so simple so hard, that it's kinda unergonomic, imo
[22:51:23] <sm> lots of boilerplate, it seems
[22:51:34] <sm> in dhall
[22:51:55] <lechner> yeah, i have stayed away so far
[22:52:05] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[22:52:11] <sm> (I don't use these things, just a spectator)
[22:52:37] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Ping timeout: 240 seconds)
[22:52:44] *** Joins: polyphem (~rod@2a02:810d:840:8754:224e:f6ff:fe5e:bc17)
[22:53:50] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:56:16] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8)
[22:58:31] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:d22:fd9a:65d6:50a8) (Remote host closed the connection)
[23:01:12] <lechner> BTW, for anyone using Debian bullseye/stable: I hope to start making backports availablesoon. Right now, it's just GHC 8.10.7.
[23:01:31] <lechner> https://haskell-backports.debian.net/
[23:04:55] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[23:14:00] *** Quits: ishutin (~ishutin@193-226-233-55.pool.digikabel.hu) (Ping timeout: 252 seconds)
[23:15:50] *** Joins: ishutin (~ishutin@193-226-238-219.pool.digikabel.hu)
[23:17:39] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[23:19:05] <tomjaguarpaw> I'm installing llvm through brew on a Mac Book Pro M1 (because ghcup said I need it).  It's taking forever.  Is this expected?  I guess I'm surprised there's not a binary distribution of llvm.
[23:19:37] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[23:19:48] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Client Quit)
[23:20:02] <geekosaur> if it's compiling it, yes, it'll take a while. I thought they did have prebuilt binaries though
[23:20:22] <geekosaur> but I haven't used a Mac in along time and never used brew
[23:20:46] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[23:20:57] <maerwald> tomjaguarpaw: yeah, I use brew on gitlab GHC CI too to install llvm. Not sure why there are no binaries yet
[23:21:22] <tomjaguarpaw> It's making my Mac hot, which has never happened before.
[23:22:28] <maerwald> well, if you fancy, you can use nix on mac, there's probably some build cache
[23:22:46] <maerwald> and 20 hours of problem fixing along the way
[23:23:00] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 256 seconds)
[23:23:08] *** Joins: tomku (~tomku@user/tomku)
[23:23:19] <hololeap> llvm takes 3 hours to build on my old box, you'll be fine
[23:24:32] <tomjaguarpaw> It's got to installing!
[23:24:40] *** Quits: Graham31415 (~Graham314@213.237.95.25) (Quit: Client closed)
[23:25:39] <tomjaguarpaw> 2336 seconds elapsed, so 40 minutes?  This is mostly for compiling llvm, but also for installing some dependent packages.
[23:25:52] <tomjaguarpaw> Ah well, now I can install ghc and try to diagnose https://www.reddit.com/r/haskell/comments/tbn46e/out_of_memory_when_building_productprofunctors/
[23:25:55] <geekosaur> yeh, llvm's *big*
[23:26:24] *** Quits: deadmarshal_ (~deadmarsh@95.38.228.103) (Ping timeout: 256 seconds)
[23:26:46] <tomjaguarpaw> Um, now that I've looked, it seems that llvm is already in /usr/bin?
[23:27:13] <geekosaur> there are smallpieces of llvm but it'sincomplete
[23:27:22] <geekosaur> apple has always shipped llvm that way ime
[23:27:41] <tomjaguarpaw> Ah, I see
[23:27:51] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:27:51] <geekosaur> in particular opt is missing/incomplete
[23:28:01] <maerwald> they ship broken toolchain? Sounds like apple.
[23:28:18] <geekosaur> thye ship just enough toolchain to keep their portof clang happy
[23:28:28] <geekosaur> but it uses the library versions instead of the standalone ones
[23:28:51] <geekosaur> so opt and lld are usually missing or unusable
[23:28:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:29:06] *** Lord_of_Life_ is now known as Lord_of_Life
[23:31:51] *** Quits: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe) (Quit: WeeChat 3.4)
[23:32:32] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:32:32] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:32:32] *** finn_elija is now known as FinnElija
[23:32:37] *** Joins: ph88 (~ph88@84-30-78-253.cable.dynamic.v4.ziggo.nl)
[23:32:48] *** Joins: ix (~ix@2a02:8010:674f:0:d65d:64ff:fe52:5efe)
[23:33:52] <tomjaguarpaw> over successfulInstallationsViaGhcup (+) RealWorld
[23:34:00] <tomjaguarpaw> Thanks maerwald !
[23:34:25] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Remote host closed the connection)
[23:34:54] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 252 seconds)
[23:35:19] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:35:19] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:35:20] *** finn_elija is now known as FinnElija
[23:35:29] <tomjaguarpaw> Oh, that should be (+ 1)
[23:35:45] <maerwald> are you running 8.10.7?
[23:36:21] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:36:21] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:36:21] *** finn_elija is now known as FinnElija
[23:37:24] *** Joins: juhp (~juhp@128.106.188.82)
[23:39:34] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[23:40:10] *** Joins: pavonia (~user@user/siracusa)
[23:40:45] <tomjaguarpaw> Yes I am.  Whatever was the default.
[23:40:59] <tomjaguarpaw> Or rather, yes I am, because it was the default.
[23:41:17] *** Joins: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net)
[23:42:57] <maerwald> 9.2.1 has native codegen, but I think it's broken?
[23:43:26] <maerwald> maybe 9.2.2 is better
[23:43:27] *** Joins: bliminse (~bliminse@host86-156-84-211.range86-156.btcentralplus.com)
[23:43:30] <geekosaur> yes. but 9.2.2 is out and should be fixed
[23:45:54] *** Quits: yauhsien (~yauhsien@61-231-43-120.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[23:48:54] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b) (Remote host closed the connection)
[23:50:11] <tomjaguarpaw> Ah well, I can't reproduce the bug.
[23:51:37] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[23:51:44] <maerwald> blame the user, close the ticket!
[23:52:50] <tomjaguarpaw> Interesting, 9.2.2 seems to use significantly less memory.
[23:53:51] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[23:54:11] <tomjaguarpaw> Haha, cabal using a funny compression scheme in its store. Seems to strip out all the vowels.  prdct-prfnctrs FTW!
[23:54:46] *** Quits: briandaed (~root@109.95.142.93.r.toneticgroup.pl) (Ping timeout: 272 seconds)
[23:54:56] <sclv> https://github.com/haskell/cabal/issues/7209
[23:54:56] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:4817:6457:31f4:d58b)
[23:57:35] <tomjaguarpaw> Cunning
