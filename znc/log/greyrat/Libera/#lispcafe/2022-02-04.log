[00:01:26] <drakonis> same for doom
[00:05:58] <shka> i am also tempted by the cruelty squad
[00:06:07] <shka> because, well, it is kinda weird
[00:07:09] <shka> https://www.youtube.com/watch?v=OZ4NLbIxzQ4
[00:07:10] -ixelp- Cruelty Squad is Wonderful and Depraved - YouTube
[00:07:15] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[00:07:27] <drakonis> ah yes.
[00:07:35] <drakonis> cruelty squad is quite the game
[00:21:35] <selwyn> sigh
[00:41:17] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[00:51:29] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[00:57:34] *** Joins: ebrasca (~user@librepanther.com)
[00:57:46] <ebrasca> phoe: How are you doing?
[00:58:07] <phoe> ebrasca: sorta sick
[00:58:11] <phoe> but alive
[00:58:42] <ebrasca> Did you do any interesting metting or project?
[01:01:00] *** Joins: dre (~dre@2001:8003:c932:c301:a9ae:c59a:a85f:47a7)
[01:20:53] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[02:01:28] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[02:41:07] * hayley reads the GCC manual for atomics.
[02:41:20] <hayley> Built-in Function: bool __atomic_compare_exchange_n (type *ptr, type *expected, type desired, bool weak, int success_memorder, int failure_memorder)
[02:44:04] <hayley> if (__atomic_compare_exchange_n(pointer, &read, 0x02, false, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST)) return true; // I like ATOMICS:CAS more
[02:45:03] <dave0> hayley: i don't understand a word of those atomics, i /always/ use a mutex
[02:45:29] <hayley> I need to implement a mutex though, and I need to implement it by overwriting a word from each object!
[02:50:23] <moon-child> oh no
[02:50:25] <moon-child> uh
[02:50:30] <moon-child> |3b|, White_Flame: halp
[02:50:38] <hayley> oh no
[02:50:42] <moon-child> is antialiasing wrt time in graphics a thing?
[02:50:46] <moon-child> like
[02:50:56] <White_Flame> temporal antialiasing?  yeah
[02:51:00] <White_Flame> motion blur?  yeah
[02:51:15] <moon-child> White_Flame: kinda like both of those but not really
[02:51:22] <moon-child> say I have a ball moving to the right.  I wanna show it on frame 1.  I could just sample its state at 16ms
[02:51:45] <moon-child> but that seems kinda lame.  So what if I instead sample its state continuously with some filter?
[02:51:56] <White_Flame> yeah, that's motion blur
[02:52:27] <White_Flame> and note that both the camera & object can move, so it's not just about interpolating the object world position
[02:52:44] <moon-child> not motion blur.  Discretizing so the whole object has one location
[02:53:19] <moon-child> and yeah that's where i was gonna go next.  W/physics you usually have nice equations (if you are careful), but that all goes to pot if you wanna let the player move the camers
[02:53:26] <White_Flame> there are 2 forms of motion blur, one smears from position A to position B, another samples its position N times and blurs those samples together
[02:53:50] <sm2n> this seems relevant: <https://github.com/mpv-player/mpv/wiki/Interpolation#interpolation-techniques>
[02:53:50] -ixelp- Interpolation · mpv-player/mpv Wiki · GitHub
[02:59:06] <moon-child> https://files.catbox.moe/w7uagt.jpeg  hopefully this is clear
[03:00:50] <moon-child> sm2n: hmm, seems not quite the same as when actually rendering you can have 1) analytic descriptions for most things' motion and 2) discrete objects
[03:01:46] <sm2n> oh
[03:01:58] <sm2n> Yes, I see
[03:02:15] <sm2n> I think you can look at what people do for networked physics simulations
[03:02:40] <sm2n> They use interpolation to make stuff look nice even when you're dropping packets
[03:03:07] <moon-child> overwatch does a cool thing, related
[03:03:20] <moon-child> if you shoot in between frames, they'll process that correctly
[03:03:30] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:f52e:ed04:3deb:f1e0)
[03:03:30] <moon-child> not pushing the event to one frame or the other
[03:03:53] <sm2n> Nice
[03:04:21] <sm2n> I think all people who "fixed their event loop" should do that correctly though?
[03:04:31] <sm2n> it's just a matter of keeping track of time
[03:04:33] <sm2n> err
[03:04:40] <moon-child> but again I think it's not quite the same.  In that case you're trying to extrapolate from incomplete information.  In this case I have all the information I need, I'm just trying to figure out what the best display of that information is
[03:04:43] <sm2n> s/event loop/timestep/
[03:04:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[03:05:11] <moon-child> sm2n: that blog post gave me some terribly wrong ideas, which I even made a game engine about
[03:05:29] <sm2n> lol, such as?
[03:05:30] <moon-child> one sec
[03:05:42] <edgar-rft> what if the event happens that I didn't fix my loop correctly?
[03:05:44] <White_Flame> continuous motion blur uses linear interpolation across frames, and at 60fps I'm not sure the variances in the movement is going to matter much
[03:05:56] <White_Flame> but if you want to show the curve, then sample it.  that is the way of the gpu
[03:06:54] <moon-child> sm2n: https://www.youtube.com/watch?v=jTzIDmjkLQo
[03:06:54] -ixelp- Game Simulation Programming: Continuous Time - YouTube
[03:06:55] <White_Flame> also, I'm not sure I understand "where do you show the object" in this scenario of antialiasing over time
[03:07:08] <White_Flame> because you're showing either combined samples, or a blur between two points
[03:07:12] <White_Flame> s/points/locations/
[03:08:11] <moon-child> White_Flame: don't need to combine samples if you have an analytic form!  But ultimately have the same problem: what's your sampling methodology?  How do you combine samples?  (And why?)
[03:08:23] <hayley> Does while (pointer[0] == TRANSPORT_LOCK_MAGIC); have to eventually exit, if some other thread writes T_L_M to pointer[0]?
[03:08:41] <moon-child> is pointer[0] volatile?
[03:08:46] <moon-child> if not, you have to atomic_load
[03:08:59] <White_Flame> for timestep length 1, you take as many points as many samples as your framerate can sustain, evenly spaced, you render the object at each location and blend all those renders together
[03:09:01] <hayley> Thanks!
[03:09:22] <White_Flame> (for a sampled approach)
[03:11:21] <moon-child> again, I don't want motion blur; I want to show an object in _one_ state, but don't know what state that should be
[03:12:18] <White_Flame> hmm, so this is purely about how to position a moving object?
[03:12:27] <moon-child> yes
[03:12:38] <White_Flame> because frames are implicitly aliased samples
[03:12:43] <White_Flame> you're not going to "antialias" position
[03:12:58] <White_Flame> unless you virtually have the object across a range of positions
[03:13:12] <White_Flame> so I'm not sure where antialiasing comes into this
[03:13:27] <White_Flame> the passage between frames is the passage of time in your model, obviously
[03:14:27] <White_Flame> and so that tells you how far along its path it has traveled since the last sample
[03:15:27] <White_Flame> clearly it has intended to cross a continuous range of positions during that span, but if you want a singular render of it per frames that is by definition aliasing its position, no matter where in that span you choose
[03:15:31] * hayley wonders how expensive thread local storage is.
[03:15:43] <moon-child> hayley: free
[03:16:00] <hayley> Compared to passing the value around as an argument?
[03:16:20] <hayley> Though /me wonders if using TLS will hamper programming style somehow here.
[03:16:25] <moon-child> well.  Register vs memory.  But yes
[03:16:46] <edgar-rft> you're free to pay rent for your memory :-)
[03:17:08] <moon-child> White_Flame: a frame is a sampling of a continuous signal.  Time is always passing
[03:17:21] <hayley> The issue is that grab_forwarding_pointer returns a boolean (won the race or not) and also a word (the header we just clobbered). And I cannot do multiple value returns nicely in C.
[03:18:11] <moon-child> struct { bool won; void *res; } grab_forwarding_pointer(...)
[03:18:18] <hayley> Sure.
[03:18:55] <hayley> I decided to use a crappy out-parameter pointer instead, since if (forwarding_pointer_p(bla)) happens.
[03:19:20] <moon-child> if ((res=forwarding_pointer(bla)).won)
[03:19:28] <hayley> Yeah.
[03:19:32] <hayley> ¯\_(ツ)_/¯
[03:20:04] <moon-child> actually, can do the same thing regardless.  if (forwarding_pointer(&res,&won),won)
[03:21:59] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[03:22:23] <gilberth> hayley: struct foo { bool won; word header_word; };
[03:22:36] <hayley> Yes, moon-child mentioned that.
[03:22:37] <hayley> Thanks.
[03:22:54] * hayley now hurts her head on fixing copy_instance.
[03:23:26] <moon-child> gilberth: hmm, will your k&r compiler also forbid passing/returning/copying structs?
[03:24:00] * moon-child is convinced that value semantics of structures post-k&r are the reason for the braindead notion of 'move semantics'
[03:24:28] <gilberth> moon-child: Perhaps. I should get some PDP-11 emulator and see what pcc does there.
[03:25:34] <gilberth> Yes, it's a bit odd. Structs weren't there from the very beginning and for arrays there is no value semantics.
[03:25:56] <White_Flame> moon-child: I still don't understand the original question
[03:26:22] * hayley continues shouting atomics. __atomic_store(pointer, FORWARDING_POINTER_MAGIC, __ATOMIC_SEQ_CST)!!!
[03:27:03] <gilberth> hayley: "!" is a prefix operator in C. ;)
[03:27:33] <masinter> this is for the CADR C compiler?
[03:27:50] <hayley> This is for the parallel SBCL GC.
[03:28:41] <moon-child> White_Flame: I have to map some continous game state onto a monitor which updates discretely (kinda) every 16ms.  The standard solution is to sample the game state every 16ms.  This results in an instantaneous point sample.  If I were to only show that sample for an instant, that would be ideal.  But I don't; I show it for 16ms.  So, is that the best thing I could show for 16ms?
[03:28:41] <masinter> originally written in K&R C?
[03:28:52] <moon-child> White_Flame: related: lollipop vs stairstep graphs for audio signals
[03:29:22] <White_Flame> well, I'd say there is no "best"
[03:29:38] <White_Flame> the lag between your input, the render, and the final display is always going to have it lagged
[03:29:56] <White_Flame> and by the few milliseconds that the sampling would change, all in history, it's not going to be that different
[03:30:03] <White_Flame> as long as it's an even passage of time
[03:30:40] <moon-child> well, there may be no _ideal_.  But I think it's still valid to ask if it's possible to do better
[03:30:41] <White_Flame> game engines always render the most recent positions of everythign
[03:30:45] <White_Flame> in terms of things that rely on input
[03:31:22] <moon-child> Sure.  Lots of things don't, though
[03:31:35] <masinter> arent there moire effects with sampling at close to the same rate as the sampled signal is changing?
[03:31:40] <White_Flame> are you doing realtime stuff or prerendered?
[03:32:16] <moon-child> curious about both
[03:32:26] <moon-child> again: ball accelerating to the right; that doesn't depend on input (probably), and you can predict where it's going to be in the future
[03:32:31] <White_Flame> if it's realtime stuff, then you _can't_ know the future position of things because they've not yet manifested.  You can't interpolate between two points starting from the last point going forward.  THere isn't a 2nd point ;)
[03:32:42] <White_Flame> sure
[03:33:04] <White_Flame> and if you know it won't collide with any other object (which still isn't input-related, but still determined per frame of simulation)
[03:33:35] <White_Flame> the interactions between the mechanics of the simulation are hard to predict
[03:33:43] <moon-child> again: collision is (or ought to be) continuous!
[03:33:44] <White_Flame> even if there is no external input
[03:34:15] <White_Flame> well, if you have simulated forward, then each collision creates a new future for everything else, too
[03:34:37] <moon-child> yes
[03:34:44] <White_Flame> however, this stuff still kind of sounds like you want to basically precalculate movement, then go back and render
[03:34:59] <White_Flame> again, how interactive is this?
[03:35:21] <moon-child> it is purely imaginary!
[03:35:21] <masinter> mmo games predict movement to make lag less lethal
[03:35:37] <moon-child> so, let's say it's noninteractive, non-realtime, to make things simpler
[03:35:40] <White_Flame> right, and they roll back errors
[03:36:05] <sm2n> I don't know of any mmos that use rollback netcode
[03:36:14] <sm2n> I thought only fighting games used it
[03:36:19] <White_Flame> ok, then you can compute the next set of serial changes that happen on every sim change event (like collisions) which modify the trajectories of everything in the next 16ms
[03:36:39] <White_Flame> sm2n: I mean more they undo & overwrite things
[03:36:40] <masinter> WoW is it mmo or fighting?
[03:36:46] <moon-child> sure.  I'm not that interested in collisions, just position
[03:36:51] <sm2n> masinter: mmo
[03:36:53] <White_Flame> "roll back", not "rollback netcode" in particular ;)
[03:37:08] <moon-child> sm2n: in any networked multiplayer context, you either do lockstep (intolerable outside lan), or you rollback client state sometimes
[03:37:30] <masinter> second life
[03:37:31] <White_Flame> moon-child: having a formula for position that holds for all of time would be great.  Most real graphical situation don't do that, though :)
[03:37:47] <moon-child> White_Flame: fine, but imagining I _do_ have such a formula.  What do i do with it?
[03:38:12] <White_Flame> you evenly space the sampling along that formula, and render those frames into an evenly-time-spaced output stream
[03:38:41] <White_Flame> I think whjat you want to do is not "miss" the various extremes that it reaches
[03:38:59] <moon-child> hm.  So rather than antialising, hinting?
[03:39:08] <masinter> video software when translating frame rates
[03:39:16] <White_Flame> eg if it follows a parabola, some of the samples will miss the vertex
[03:39:23] <moon-child> (pourquois pas les deux? :)
[03:39:47] <White_Flame> but given many of these functions running in your sim, you can't really cherry pick even time spacing that will hit every single maxima
[03:40:11] <moon-child> I was imagining biasing the functions themselves
[03:40:37] <White_Flame> eg, you have pendulums running at non-multiple rates of speed with each other, and try to sample such that each individual pendulum's maxima and center point are always evenly sampled.  I don't really see a reason to try to do so, given 16ms 60fps
[03:40:40] <moon-child> e.g. if sample N is close to an extremum, get the actual extremum, not the actual state at time N
[03:41:18] <White_Flame> for what purpose?
[03:41:28] <White_Flame> you're changing its definitional trajectory by doing so
[03:41:51] <moon-child> how's that different from spacing your samples differently to catch extrema?
[03:42:13] <White_Flame> if 2 people are shooting at a target, and both will hit in the same frame's timespan, but one mathematically before the other, it doesn't sound like a good idea to "hint" them to be simultaneous
[03:42:33] <White_Flame> I didn't advocate spacing samples differently to catch them
[03:42:40] <White_Flame> just that that's what it sounded like what you were asking for
[03:42:43] <moon-child> sure.  I'm not talking about state, though, just display
[03:43:11] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[03:43:11] <sm2n> hmm
[03:43:24] <White_Flame> if a sound effect or visual effect of note happens during the timespan of a frame, it should be presented at the next frame, regardless of the frame sample not being at the exact mathematical time of the distinguishable event
[03:44:24] <White_Flame> snapping the 60fps perceived movement to "pleasing" points of a trajectory would make it look jittery, unless you were to ease the adjustment over time
[03:44:46] <White_Flame> (for people very attuned to precise movements)
[03:45:05] <moon-child> sure.  Such visual effects generally exceed one frame in duration, though.  So for any frame you render while such an effect is active, you would sample it
[03:45:29] <sm2n> I think the correct solution is to not worry about this, and increase the frame rate instead
[03:45:32] <White_Flame> right
[03:45:39] <White_Flame> keep things even in time
[03:45:55] <moon-child> sm2n: that's the dream...
[03:45:56] <White_Flame> even if that doesn't line up with exact events in the continuous sim time
[03:46:37] <masinter> keep the target frame rate and increase sample rate to > 10x frame rate?
[03:47:06] <moon-child> masinter: that's fine.  But my question remains: what's your sampling methodology?  _How_ do you combine those sampmles into a target frame?
[03:47:38] <White_Flame> you have a time.
[03:47:48] <White_Flame> your formula for position takes a time
[03:47:51] <White_Flame> you plug it in :)
[03:48:07] <masinter> this is all video or audio
[03:48:29] <moon-child> White_Flame: we're going in circles now ... :)
[03:49:17] <masinter> this bears on the VNC vs X11 question
[03:49:26] <White_Flame> you start a time 0.  every time you get to render, you add the passed real time to the time variable
[03:49:41] <White_Flame> I don't know what other time sample you think would work
[03:49:57] <White_Flame> and if you sampled between the curetn & prior, you're rendering even older positions
[03:50:01] <sm2n> moon-child: I have 144Hz, how high do you want?
[03:50:43] <moon-child> White_Flame: I'm not saying to pick another time to sample instead.  I'm saying to consider more than one instant of your input, because your output is displayed for more than one instant
[03:51:19] <sm2n> I think maybe another (similar) problem to consider —
[03:51:23] <moon-child> sm2n: hmm, my laptop is 120hz, but it still seems discrete when I move the mouse pointer around!
[03:51:25] <White_Flame> that's a bad idea to adjust positions, though.  Smoothness of movement is critical at these framerate
[03:51:26] <White_Flame> s
[03:51:26] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:f52e:ed04:3deb:f1e0) (Remote host closed the connection)
[03:51:41] <masinter> people notice jerkiness more than a small amount of lag?
[03:51:41] <sm2n> say you have a 120fps video, and a 60Hz screen, what do you do?
[03:51:46] <White_Flame> and the smoothness depends on evenly spaced sampling, and evenly spaced display
[03:52:10] <sm2n> moon-child: 1000Hz when
[03:52:54] <sm2n> I think there are ~360Hz monitors available now, but I don't know any OS that can drive that
[03:52:57] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[03:52:57] <White_Flame> sampling in other places consistently just changes the "phase" of the video
[03:53:19] <masinter> can anyone see it?
[03:53:25] <Alfr> sm2n, for every two consecutive frames, randomly select one to actually display. ;)
[03:54:19] <moon-child> White_Flame: again: I'm not suggesting to sample in other places instead.  https://files.catbox.moe/w7uagt.jpeg  did this make sense?
[03:54:45] <sm2n> moon-child: That picture is weird. What is p'?
[03:54:45] <White_Flame> I believe I understand the information
[03:55:07] <White_Flame> across that curve, every 16ms there wil be a sample taken (if everythign is fast enough to keep up)
[03:55:26] <White_Flame> what "phase"/"offset" those samples happen to be in, is far less important than keeping the movements of the objects smoothly paced between frames
[03:55:29] <masinter> using X for display, every change to the screen raster is sent
[03:55:40] <moon-child> sm2n: P is what you get if you sample the curve at 16ms.  P' is what you get if you integrate--averaging, essentially--over the 16ms period surrounding 16ms
[03:55:49] <moon-child> P' is higher than P
[03:55:54] <masinter> using VNC the client asks for a sample when it's ready
[03:56:17] <White_Flame> it doesn't matter where its non-sampled positions were.  Only the sampled position matters
[03:56:32] <moon-child> (and, what if you use, say, a gaussian rather than just a box?)
[03:56:44] <White_Flame> the ONLY time this will be a problem is if you start reaching a nyquist frequency between movements & framerate
[03:56:52] <sm2n> moon-child: Oh, I see. Isn't this basically motion blur but you want a canonical position?
[03:58:11] <White_Flame> the sub-frame movements (eg accelerating more in the '2nd half' of the frame) is information that's lost in the sampling rate of the output video
[03:58:19] <White_Flame> and they should be if they're to look believable
[03:58:30] <White_Flame> the only way to sanely include them is motion blur
[03:58:53] <moon-child> White_Flame: it's different because of the _display_.  A frame shown on a monitor is not an instantaneous sample; it's not shown only for an instant
[03:59:04] <White_Flame> and those sorts of movements have frequency components higher than what the display can display
[03:59:27] <White_Flame> right, but it is the temporal resolution fo the display.  It cannot display finer time detail than that
[04:00:01] <sm2n> Also, you, the viewer, are sampling the display again
[04:01:05] <White_Flame> again, compare it to single-pixel edge antialiasing.  Unless you blur the effects of multiple positions together, you can't antialias it
[04:01:16] <White_Flame> but the dot crawl along pixel edges do also indicate a lot of sub-pixel movement
[04:01:23] <White_Flame> for slow-moving edges
[04:01:31] <White_Flame> the brain reconstructs it
[04:01:35] <Alfr> moon-child, I'd say p, otherwise you're drawing the convolution p*g, with g some rectangular function.
[04:02:05] <White_Flame> (meaning dot crawl of aliased polygons slowly moving)
[04:02:31] <White_Flame> so whatever sub-frame accelerations or non-linear deviations of movement are lost, will be reconstructed by the brain, as long as sampling is consistent
[04:04:50] <White_Flame> (ps1 style non-handling of subpixel anything hurt my brain)
[04:04:54] * hayley realises that she has to basically change all of the SBCL GC stuff to be in header-passing style, and decides she is not fit for the task.
[04:12:54] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[04:14:19] * hayley now starts to wonder if sticking a lock in the object is the best of ideas. Cheney is non-recursive, so theoretically I could have a pretty small hash table for locks. But hashing is probably noticeably slower than doing it in-place. sigh
[04:18:39] <hayley> But if I did that, I'd have a lot less "porting" work. idk
[04:20:31] <hayley> Not like CASes are awfully fast, from experience.
[04:22:11] <hayley> Then again, using object memory rather than a table also avoids cache ping-pong. But why shouldn't I just get 64KiB of locks or so, compared to your heap measured in gigabytes? Hm.
[04:27:21] <hayley> Seems like a fine hack to me, come to think of it. The overhead is just one LDB to make the hash.
[04:30:08] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[04:35:14] <hayley> It also costs me another write (as the forwarding pointer is nowhere near the lock, let alone same cache line), but eh.
[04:44:17] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Ping timeout: 240 seconds)
[04:47:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[05:05:48] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[05:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:06:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:08:15] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 268 seconds)
[05:14:01] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[05:14:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[05:16:42] *** Joins: aeth (~aeth@user/aeth)
[05:29:23] <dave0> hayley: what's for lunch?
[05:36:29] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[05:37:57] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 240 seconds)
[05:49:13] <|3b|> moon-child: yeah, "antialiasing wrt time" sounds like either temporal antialiasing (spreading subpixel error across frames to reduce normal 2d aliasing), or motion blur (trying to simulate capturing a longer than instant sample of state spanning the time of a frame)
[05:50:40] <|3b|> temporal AA is pretty reasonable, as long as you can maintain high framerate. motion blur tends to be fairly sketchy hacks once you get beyond trivial ballistic motion with a stationary camera
[05:51:52] <|3b|> and doesn't help that motion blur tends to also be a stylistic thing, along with things like lens flare, so that gets conflated with more reasonable use
[05:53:39] <|3b|> also, it is getting more common to try to show a frame for closer to an instant. VR in particular pretty much needs that, since you can easily move enough during a frame for the view to be nauseatingly wrong by the end of 10ms, but i think some monitors do that too
[05:56:38] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Read error: Connection reset by peer)
[05:56:52] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[06:02:43] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[06:02:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:03:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:06:53] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[06:08:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:08:51] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[06:08:55] <hayley> @dave0: I had spaghetti from a Coles box.
[06:09:31] <dave0> hayley: how was it?
[06:09:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:11:10] *** Quits: Catie (~user@user/catie) (Quit: Going home)
[06:12:26] <hayley> Quite fine.
[06:12:33] <hayley> What did/will you have for lunch?
[06:14:15] <dave0> i had chinese takout
[06:14:19] <dave0> takeout
[06:14:28] <hayley> https://www.youtube.com/watch?v=UUxheK7soS4
[06:14:28] -ixelp- Eaten By The Monster Of Love - YouTube
[06:14:55] <dave0> my friday always feels like the start of a 3 day weekend, it's awesome
[06:15:49] <dave0> saturday is good too cos i keep in contact with my friends... and then a lazy sunday to wind down
[06:16:12] <dave0> if i was any more relaxed i'd be comatose
[06:17:59] <dave0> :-)
[06:20:45] <hayley> .oO( https://video.twimg.com/tweet_video/FKe1BKeacAAQX9k.mp4 )
[06:38:05] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[06:38:24] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[06:44:38] <moon-child> 'For an actively-developed compiler like Go, it’s cool to be able to get performance improvements just by waiting and letting others do all the hard work'
[06:45:05] <moon-child> read: 'it's nice to use a language with a slow implementation, because eventually it catches up to what everyone else has been enjoying for decades'
[06:47:44] <epony> you mean the GARBAGE collection?
[06:48:15] <epony> I heard Rust is slow too..
[06:49:42] <hayley> ):<
[06:51:09] <epony> https://en.wikipedia.org/wiki/Rust_belt#Outcomes
[06:51:45] <epony> https://en.wikipedia.org/wiki/Template:U.S._Belt_regions
[06:55:02] <hayley> I guess I have simplified my work though. I just need to make sure that the GC functions behave w.r.t setting forwarding pointers in a timely manner, give each GC thread its own allocation region (and I'll invariably have to manage those properly), and then start and stop GC threads when necessary.
[06:55:08] <epony> arent't these languages supposed to serve just one company and the rest of the world can get their own real languages?
[06:55:44] <epony> it's like the new age of the IDEs gone "special" again
[06:57:47] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[06:58:49] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 256 seconds)
[07:06:39] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[07:09:01] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[07:20:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:22:06] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:31:30] *** Joins: jeosol (~jeosol@user/jeosol)
[07:32:56] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[07:36:35] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[07:39:17] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[07:56:27] *** Parts: ebrasca (~user@librepanther.com) (ERC (IRC client for Emacs 27.2))
[08:01:24] * hayley enables the secret switch in SBCL to print out GC throughput
[08:01:26] <hayley> "gen0: 312730w copied in 0.008459 sec (282 MiB/sec), 0 pinned objects (4538w), -5300w freed (-1.1%)"
[08:06:45] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[08:07:07] *** Joins: semz (~semz@user/semz)
[08:09:05] *** Quits: semz_ (~semz@user/semz) (Ping timeout: 256 seconds)
[08:09:19] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[08:09:28] <hayley> Though the worst pauses come from decentralise2. "gen0: 10354714w copied in 0.284404 sec (278 MiB/sec), 85 pinned objects (14252w), 36837464w freed (56.2%)"
[08:19:54] *** Joins: Oddity (~Oddity@user/oddity)
[08:31:17] *** Joins: razetime (~quassel@49.207.209.26)
[08:31:51] <hayley> https://vimeo.com/6624203
[08:31:52] -ixelp- Organizing Functional Code for Parallel Execution; or, foldl and foldr Considered Slightly Harmful on Vimeo
[08:36:21] <epony> always laugh at the "mebi"
[08:36:39] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[08:37:24] <epony> tickless kernel when?
[08:38:24] <dave0> i thought `tickless` meant turning off the clock
[08:39:07] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[08:39:39] <epony> https://en.wikipedia.org/wiki/Tickless_kernel
[08:41:53] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Remote host closed the connection)
[08:45:27] <epony> https://en.wikipedia.org/wiki/Nanosecond
[08:46:25] <epony> kernels tick at 100 or 1000 Hz typically resulting in 10 to 1 ms resolution
[08:48:36] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[08:53:48] <epony> https://en.wikipedia.org/wiki/Microkernel#Third_generation
[08:55:12] <dave0> i thought amigaos was a microkernel, but now i think it is an exokernel
[08:55:40] <dave0> and also a single address space operating system
[08:56:02] <dave0> exokernel and SASOS sounds like a nice combination
[08:56:20] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Remote host closed the connection)
[08:56:38] <dave0> now that address spaces are 64-bit
[08:57:40] <epony> a 5 MHz machine is only 1000x slower than yours
[08:59:14] <epony> (the epoch of the 64 KB RAM)
[09:00:17] <epony> it went up rapidly to 1 MB in the 10-25 MHz epoch
[09:00:57] <hayley> "DO loops are so 1950s! (Literally: Fortran is now 50 years old.) So are linear linked lists! (Literally: Lisp is now 50 years old.)"
[09:00:59] <epony> that's mid-80ies, in the mid-90ies it was 64 MB
[09:01:18] <epony> now it's 64 GB ;-) in the mid-10s
[09:01:19] <hayley> "Even arrays are suspect!" Hooray!
[09:01:53] <epony> so, we can leave the single address space single process.. in the early 80ies where it belongs
[09:02:21] <epony> (on 8bit micro-computers)
[09:02:40] <moon-child> hayley: eh, what data structures _do_ they like?
[09:02:51] <epony> because UNIX was doing multiprocess and multiuser in very little more than 64KB RAM
[09:02:54] <hayley> Guy Steele Jr apparently likes trees.
[09:03:17] <moon-child> oh the guy steele talk
[09:03:28] <moon-child> I don't think I ever actually watched it, but I read the slide deck
[09:03:42] <Qwnavery> hi all
[09:04:04] <hayley> He is, of course, welcome to work out how to make this GC parallel for me. After all, it's just a (possibly cyclic) graph traversal.
[09:04:07] <sm2n> Is he a clojurist?
[09:04:12] <Qwnavery> Hey hayley, any news of the lambda?
[09:04:37] <epony> supposedly Steele is Schemist
[09:04:47] <sm2n> "supposedly"
[09:04:48] <sm2n> yes
[09:05:12] <epony> he tried up the Fortrism but it did not stick as a religion
[09:05:29] <hayley> Less so than he is a Schemer, Common Lisper, or Java programmer, since he standardised all three (IIRC).
[09:05:32] <moon-child> hayley: well, I don't think his advice is meaningless.  If read as 'if you can structure your data this way, you will be more likely to have fortune parallelizing', not 'you can not parallelize unless you structure this way'
[09:05:55] <moon-child> he was also responsible for the c standard
[09:05:56] <epony> there is supposed to be some difference between the above concepts
[09:06:04] <moon-child> 'professional language specifier'?  Sounds like a fun job
[09:06:09] <hayley> moon-child: I'm aware, just kidding.
[09:06:27] <hayley> Gilad Bracha calls himself a "computational theologist".
[09:06:38] <hayley> https://bracha.org/Site/Theology.html
[09:06:39] -ixelp- What is a Computational Theologist?
[09:07:13] <epony> that's probably in the nano to nutty-kernels epoch
[09:07:40] <sm2n> Wonder how he edits his website now... I don't think iWeb still exists
[09:09:44] <epony> write in a text editor, give file to servants to format
[09:09:52] <epony> "servantes"
[09:11:41] <epony> https://en.wikipedia.org/wiki/IBMDOS.COM#References
[09:13:54] <hayley> https://www.infoq.com/presentations/past-present-future-programming/ seems like it talks about the idea. Around 17 minutes in he goes on about inner classes and language features combining violently in Java.
[09:13:55] -ixelp- Onward! — Does Thought Crime Pay?
[09:21:41] <epony> spotted gray quux in the wild
[09:26:13] <epony> "the CPU betrayed our faith"  https://en.wikipedia.org/wiki/Multiuser_DOS#CDOS286
[09:59:32] * moon-child wonders what 'gc transphobia' is
[09:59:49] <hayley> "Gender critical"
[09:59:53] <hayley> Hence that god-awful r/transprogrammer post.
[10:01:06] <hayley> (The "critical" part means that they still operate with "gender is pee pee meat stick or hole", but instead you can still be a femboy or smth. But you'll probably still be accused of corrupting children. How kind.)
[10:02:23] <hayley> moon-child: 'trans gcphobia' is also a thing.
[10:05:03] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[10:07:24] * hayley notes that the month-long "no dumbass Rust memes" rule disappeared. <https://old.reddit.com/r/transprogrammer/comments/sj8obg/need_more_women_in_stem/>
[10:08:30] * hayley uploaded an image: (0KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/FqurFdmvgbFOqEPwoerkIdSe/Screenshot%20from%202022-02-04%2017-38-20.png >
[10:08:58] * hayley uploaded an image: (65KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/DtOroXJBtxGFqvMqjBovojjV/Screenshot%20from%202022-02-04%2017-38-46.png >
[10:09:08] <hayley> Here we have the trans table. All the objects in SBCL are trans. Sorry, I don't make the rules
[10:10:19] * moon-child wonders why they have a special representation for vectors of nil
[10:10:43] <hayley> Of element type NIL, i.e. there aren't really any elements at all.
[10:11:07] <moon-child> yes
[10:17:07] <hayley> https://www.reddit.com/r/transprogrammer/comments/sk6mbl/the_sbcl_garbage_collector_is_trans_sorry_i_dont/
[10:17:08] -ixelp- The SBCL garbage collector is trans, sorry I don't make the rules : transprogrammer
[10:25:36] <Qwnavery> lole
[10:26:53] <Qwnavery> "mtf" "meta-to-functional"
[10:41:46] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:58:14] <hayley> Cleavir notably has M->F and F->M, which totally don't refer to "multiple" and "fixed" values.
[11:01:01] <moon-child> hahaha
[11:01:04] <hayley> But IIRC I was thinking of the Steele talk, as I was reading over the scavenge functions, and noted that weak pointers are gathered into a list, making parallel weak pointer processing hard. But I guess we don't have that many weak pointers, so it's not a big deal for me.
[11:01:47] <hayley> Fairly ad-hoc profiling indicates that most time is actually spent doing the damn copying.
[11:03:31] <hayley> I guess my first experiment is to see if I can work with a non-recursive "lock" discipline for lock striping in the GC. i.e. between locking an object to copy, and unlocking it by installing the forwarding pointer, I suspect but don't know that the GC won't try to lock another object. You'd think this is the case for Cheney copying by definition, but SBCL tries to copy lists and functions eagerly/"depth-first".
[11:11:28] <hayley> https://www.youtube.com/watch?v=xP0uZbHViek
[11:11:29] -ixelp- Lou Reed's Metal Machine Music (Slow Version) - YouTube
[11:18:30] *** Joins: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net)
[11:20:19] <hayley> Hm, but when do I "lock"? I guess most actions are taken on when forwarding_pointer_p returns false.
[11:20:33] <hayley> Or I annotate where I would end up locking, and find out. Probably will do that.
[11:24:57] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[11:35:35] * hayley spots scav_fun_pointer -> trans_code doing something like that. Rather than HPS, she could just have an abstract type representing a "backup" of some header, then fix the copy after clobbering part.
[11:36:44] *** Quits: razetime (~quassel@49.207.209.26) (Remote host closed the connection)
[11:40:37] <hayley> Ehm, no, I need to provide a forwarding pointer. Or I could provide NULL, and have that make the reader wait some more. Hm.
[11:55:53] <moon-child> 'RE2 and Hyperscan demonstrate the ceiling'
[11:55:55] <moon-child> hayley: pls comment
[11:56:34] <hayley> Of what? strstr?
[12:07:14] <hayley> Well, all signs point to this "lock a page at a time" idea sucking. I need to maintain the one-lock-at-a-time invariant, else I risk deadlock.
[12:08:02] *** Joins: makomo (~makomo@user/makomo)
[12:09:37] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.4)
[12:09:51] <hayley> Another idea would be to have a sort of Bloom filter to avoid obvious misses, and then an array of claims per thread (which AIUI can be made pretty finite). We'd only make the slower scan across the array of claims when the filter finds a collision...though this could well end up hurting GC performance when the mutator actually has some locality, which is ironic.
[12:13:13] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[12:16:29] *** Joins: notzmv (~zmv@user/notzmv)
[12:16:33] <hayley> And I'm not sure how to actually make locking that atomic, though it's surely possible. sigh
[12:18:57] <hayley> Can I get away with a secondary lock bitmap? SBCL objects are 16-byte aligned on x86-64, so I can store locks as single bits with 1/128 overhead. Don't ask me about cache ping-pong though; it's probably better than page locks though, lol
[12:29:30] * moon-child watches firefox cpu usage spike dramatically (almost 100%) when trying to smoothly zoom text.  And I bet ordinary machines don't have the memory bandwidth to sustain
[12:29:33] <moon-child> I pity the fool!
[12:29:41] <ck_> am the fool
[12:31:12] <moon-child> hmm at least it doesn't cheat though.  Safari cheats: it just scales (probably bilinear or sth) its atlas until you stop zooming
[12:33:09] <moon-child> hmm actually chrome seems to look fine and have reasonable cpu usage.  I wonder what it's doing...
[12:37:43] *** Joins: razetime (~quassel@49.207.209.26)
[12:39:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:41:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:51:39] * hayley now struggles to figure where the heap is actually allocated.
[12:53:25] *** Joins: ln43 (~ln43@user/ln43)
[12:54:34] <hayley> gc_allocate_ptes makes the page table, and the card map for the write barrier, so that seems like the right place to me.
[12:56:36] <ln43> i was thinking to explore the concept of Lambert's algo for tranfer orbit to solve the Kessler Syndrome
[12:56:53] <ln43> and the space pollution problem togheter
[12:58:13] <ln43> but thst only because i should find activities to do in the Java insland during the raining days
[13:02:45] <selwyn> wondering if china will use its satellite tow to get rid of those irritating starlink satellites and save the sky
[13:03:20] <epony> https://en.wikipedia.org/wiki/P-code_machine#Benefits_and_weaknesses_of_implementing_p-code
[13:03:24] <ck_> not a quick job
[13:03:37] <selwyn> are there too many of them?
[13:04:02] <ck_> how many are there now? 12k?
[13:04:10] <epony> https://en.wikipedia.org/wiki/Intermediate_representation#Intermediate_language
[13:04:20] <epony> https://en.wikipedia.org/wiki/George_Necula#C_Intermediate_Language
[13:04:43] <ck_> no, 12k is the approved current maximum, but there are many thousands
[13:04:44] <epony> should be fairly transylvanian
[13:05:07] <ck_> https://en.wikipedia.org/wiki/Starlink#Constellation_design_and_status
[13:05:32] <ck_> so 11914 in total
[13:05:39] <epony> trashlink
[13:05:46] <ck_> .. in november 2027
[13:05:56] <selwyn> i thought there were like 20 damn
[13:06:04] <epony> 10 USD monthly Internet fee when?
[13:06:26] <epony> (that's the fee normal people are paying since 2000s)
[13:06:38] <ck_> selwyn: https://interestingengineering.com/starlink-satellites-ruin-comet-neowise-time-lapse-image 
[13:06:38] -ixelp- Starlink Satellites Ruin Comet NEOWISE Time-Lapse Image
[13:07:27] <epony> like shooting a car with a dummy driver is not stupid enough ;-)
[13:07:38] <epony> (into space)
[13:10:45] <ln43> :)
[13:11:05] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[13:11:20] <selwyn> terrible
[13:12:03] <ck_> don't worry too much, they'll run out of fuel, burn up in the atmosphere (maybe before, maybe after the company does the same thing) and won't be replaced
[13:12:22] <epony> can be laser shot too
[13:18:51] *** Joins: ln43 (~ln43@user/ln43)
[13:23:51] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[13:25:58] *** Joins: shka (~herr@109.231.0.226)
[13:38:35] <selwyn> won't t hat take ages
[13:40:44] *** Quits: dickbar__ (~dickbaren@86-90-132-28.fixed.kpn.net) ()
[13:43:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[13:44:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:45:33] <ck_> I'm not an expert on this, but if I remember correctly the lifespan for these small satellites at low altitudes is a couple of years
[13:50:47] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[13:51:58] <hayley> https://www.reddit.com/r/programmingcirclejerk/comments/sj8oxf/320m_of_ether_stolen_due_to_rust_vulnerability/hvfs3bp/
[13:51:59] -ixelp- $320M of Ether stolen due to rust vulnerability : programmingcirclejerk
[13:52:07] <hayley> "Yep. == instead of &&. Some hacker noticed this and sent a transaction from an invalid signature and from a non-guardian, and bingo bongo the crypto is goneso."
[13:58:39] <shka> good job
[13:58:43] <shka> xD
[13:59:55] <selwyn> hahaha
[14:00:56] <shka> operators are bad m'kay? :P
[14:01:32] <selwyn> if only they had overriden == to mean && this never would have happened
[14:02:35] <ck_> well if I override - to mean + I can raise many people out of debt
[14:04:19] <shka> ok, so let's say that i am a hacker with $320 millions 
[14:04:29] <shka> how do I money wash this?
[14:06:20] <hayley> There are mixing services for Bitcoin, but one should doubt that they'll get their $320M back from one of those.
[14:06:44] <hayley> ...not that you could reasonably mix when you have $320M and most don't, too.
[14:13:11] <moon-child> I wouldn't be surprised if you can get that much through, if you go slowly
[14:13:35] <moon-child> but: yeah, that is a problem with bitcoin: it's not actually fungible
[14:13:41] <moon-child> oh etherium.  Same deal
[14:14:39] <hayley> Solana, rather.
[14:16:49] <hayley> I was thinking they need to spend more time on program correctness than they seem to.
[14:17:24] <selwyn> shka: i heard they got offered $10m as a 'white hat reward' if they returned the 320m
[14:17:30] <selwyn> but i don't think they accepted it
[14:17:40] <hayley> lol
[14:19:42] *** Joins: kevingal (~quassel@149.157.105.172)
[14:21:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:22:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:28:11] *** Quits: kevingal (~quassel@149.157.105.172) (Ping timeout: 256 seconds)
[14:29:16] *** Joins: kevingal (~quassel@2001:770:c0:401:445a:3026:795a:b444)
[14:30:11] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:33:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:49:15] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[14:55:05] *** Joins: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net)
[15:01:29] * hayley uploaded an image: (235KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/nTBQeGbjvNkKiIfujYVQfDFH/downloadfkqud0rwqamd3y_.jpg >
[15:02:39] *** Joins: szos (~user@178.74.52.55)
[15:09:27] <dave0> hayley: voice to text translation seems to have come a long way!
[15:09:39] <shka> i still don't understand why handler-bind is not more wide spread
[15:09:48] <shka> among programming languages
[15:09:49] <hayley> https://www.youtube.com/watch?v=k3aH7RtVSLI
[15:09:50] -ixelp- Sparks 'Amateur Hour' 1974 in Belgium - YouTube
[15:09:53] <shka> and restarts 
[15:10:12] <hayley> "here's a bold claim: The only way to "fix" JavaScript tooling is for the community to come together as one and build a proper build tool/transpiler/task runner/bundler/test runner INTO NPM PROPER."
[15:10:21] <hayley> Here's a bold claim: the build is always broken.
[15:10:26] <selwyn> shka: doesn't it take some clever language design to implement properly
[15:11:04] <hayley> https://gbracha.blogspot.com/2020/01/the-build-is-always-broken.html
[15:11:05] -ixelp- Room 101: The Build is Always Broken
[15:11:06] <selwyn> which excludes a lot of the competition
[15:11:45] <shka> selwyn: i don't think so, no
[15:28:24] <shka> selwyn: also, come to think of it, handler-bind is kinda like your normal sighandler in C
[15:28:29] <shka> in a way
[15:33:33] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:44:55] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:47:08] <hayley> https://twitter.com/phil_eaton/status/1466055871088185354 Oh how the turns tabled since I wrote that article.
[15:48:12] <hayley> Now mainline SBCL generates good code for the tricky regular expression, and OMRN also knows how to SIMD tight loops. Compilation really is shooting fish in a barrel.
[15:51:42] *** szos is now known as shozo
[15:59:13] <hayley> "Want your own prefix scanner for this peculiar set of ranges? Sure, here you go." Even the dirty tricks for special cases just get better with specialization.
[16:10:45] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[16:28:07] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[16:41:09] <selwyn> https://www.youtube.com/watch?v=WvHZy9i9LMA
[16:41:10] -ixelp- Kea Flies away with GoPro - YouTube
[16:41:11] <selwyn> kiwi power
[16:44:27] <shka> that will the coolest stuff this camera will ever record
[16:49:12] <selwyn> i wonder why europe lacks indigenous parrots
[16:50:32] <shka> neither has north america
[16:52:16] <selwyn> really?
[16:52:52] <shka> yup
[16:52:55] <selwyn> huh
[16:53:04] <shka> some in the central america, but nothing in the north
[16:53:11] <shka> anyway, blast is going on https://www.youtube.com/watch?v=dDhYsRus7fg
[16:53:12] -ixelp- BLAST Premier Spring Groups 2022, Day 5: Vitality vs MIBR, NIP vs NAVI, and Astralis vs BIG! - YouTube
[16:54:30] <shka> banana control
[16:54:40] <shka> (huehuehue)
[16:56:00] <selwyn> i am not that good at cs:go but the basic shooting i learned is enough to crush it at fortnite
[16:56:04] <selwyn> people are so bad
[16:57:13] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:58:17] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 240 seconds)
[16:59:27] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[17:18:20] <pl> selwyn: within last few hundred years it *tended* to be too cold for them, and it was supposed to get colder
[17:18:40] <selwyn> isn't new zealand similarly cold
[17:18:42] <pl> now we have "native" parrots
[17:19:17] <pl> selwyn: NZ is also remarkably isolated ecosystem unlike Europe
[17:19:28] <selwyn> yeah, the island effect and all that
[17:19:57] <pl> so I don't expect short-range bird to reach NZ and fuckup a maybe not super-fitted but comfortably adapted bird
[17:20:04] <selwyn> there are local parakeets where i am but they lack the urge to steal and destroy things
[17:20:25] <pl> Europe? <insert seagulls doing the murderhobo thing>
[17:22:41] <selwyn> the bastard of the coast
[17:24:59] <pl> The North Sea's Biggest Motherfucker
[17:25:52] <selwyn> oh yeah you lived in aberdeen. must be terrible there
[17:25:55] <pl> The reason Aberdeen celebrates a seagull going into shop, stealing a bag of tangy cheese doritos and eating it outside? It's because that fucking seagull is *polite* about it
[17:27:51] *** Joins: Catie (~user@user/catie)
[17:28:42] <pl> a friend from Tromso in Norway mentioned how his university started tracking Seagull *gangs* and their gangwars
[17:29:23] <selwyn> lol
[17:30:03] <shka> now that is a strategy game we need
[17:30:18] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[17:31:35] <shka> seagull gangwars craft
[17:32:07] <pl> personally I encountered ritualized 1-on-1 combat between two seagulls with a circle of seagulls kibitzing like it was a fucking sumo match
[17:32:30] <pl> To this day I wish I had presence of mind to record it
[17:33:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[17:34:36] <selwyn> i once saw a swan beat up a terrier in humiliating style
[17:35:09] <pl> poor terrier
[17:35:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:35:47] <pl> not only beaten up, but by someone he can't get help to fight
[17:35:54] <pl> (at least in UK)
[17:35:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:36:11] <selwyn> it jumped in the pond and scared off all of the ducks
[17:36:14] <selwyn> except for one swan...
[17:36:25] <pl> heh
[17:36:43] * pl just remembers that Swans are personal property of the sovereign, yay for funny law
[17:37:49] <selwyn> yes the law does not look kindly on others intervening
[17:38:26] <selwyn> i have a lot of love for a bird which is 50% neck, and still doesn't know fear
[17:38:54] <pl> selwyn: like many flying arseholes, it remembers that it is a dinosaur and once ruled the world
[17:39:15] <selwyn> lol
[17:42:31] <pl> also remember that swans are somewhat closely related to geese, including canadian bigger arsehole (aka cobra chicken, aka canadian geese)
[17:45:05] <selwyn> cobra chicken lol
[17:46:58] <selwyn> https://www.youtube.com/watch?v=NUlfIh91Gk4
[17:46:58] -ixelp- Just the one swan, actually... - YouTube
[17:50:00] <selwyn> while train operating companies are liable for 'small bird' strikes, network rail is liable for 'large bird' strikes
[17:50:42] <selwyn> once it resulted in a case that had to be mediated, in which they had to decide whether a peacock was a small bird or a largebird
[17:50:51] <selwyn> iirc it was considered larger than a goose, so a large bird
[17:51:41] * pl just learnt that canadian geese actually shot down an US military aircraft killing 24 people
[17:54:38] <selwyn> sometimes i find it intriguing that we are able to fly planes and have electricity pylons at all in the presence of birds
[17:55:21] <phoe> just another argument that birds aren't real
[17:55:38] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[17:55:43] <selwyn> phoe: exactly what i've been trying to say
[17:58:48] <phoe> good
[17:58:55] <phoe> I just took a covid test
[17:58:58] <phoe> let's see if I have the plague
[17:59:14] <phoe> I have a meme that I have been waiting two years to use
[18:01:56] <ck_> how much longer for the result
[18:02:03] <ck_> on the edge of my seat here
[18:02:18] <phoe> up to 48h
[18:05:12] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[18:05:17] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[18:11:21] <shka> well, everybody will get covid eventually
[18:11:36] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[18:12:14] <ck_> buzzkill
[18:12:25] <shka> it's true
[18:15:57] <selwyn> nearly all restrictions are lifted here and the death and hospitalisation rates did not spiral out of control
[18:16:33] <selwyn> i think the government succeeded in their bet
[18:16:37] <ck_> what did you do in response? wild bender, pub speedrun, many such cases?
[18:16:46] <selwyn> a pub speedrun lol
[18:17:31] <selwyn> i returned to doing normal things, though i still wear a face mask more often than most people
[18:17:55] <selwyn> there doesn't seem to be much point in following public health measures that very few others do
[18:18:06] <ck_> that's true
[18:18:11] <selwyn> or maybe i got desensitised by the national approach to not caring about death :/
[18:18:38] <ck_> what gets to me is the perspective from people in hospitals, particularly icus
[18:18:59] <selwyn> well, the healthcare system is taking a beating here, that's for sure
[18:19:08] <ck_> maybe they're written by gpt-3, I don't know.. but the stories sound like nothing I'd like to experience
[18:19:09] <selwyn> but this was a feature and not a bug in the governments plans
[18:19:31] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[18:19:38] <ck_> "new patient came in. said he wasn't vaccinated and not believing in it. told me he got better ha ha look how well I breathe now. was dead the next saturday." stuff like that
[18:20:41] <selwyn> yeah crazy stories
[18:23:03] <selwyn> but i think the evidence is that you can reopen everything if you can afford a significant but manageable (if i can use that term) human cost
[18:23:10] <selwyn> have to wonder how many countries will try it after britain
[18:23:31] *** Quits: razetime (~quassel@49.207.209.26) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:28:41] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[18:29:02] <ck_> are you guys really the first to do that?
[18:29:32] <selwyn> idk
[18:29:39] <ck_> I guess we're on the way out of it if the latest news don't speak of "next variant: PI" but instead "omicron subvariant something-02"
[18:29:40] <selwyn> haven't followed international covid news for a while tbh
[18:29:48] <ck_> neither have I, it was an honest question
[18:30:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.4)
[18:30:10] <selwyn> i thought we were the first in europe?
[18:32:31] <ck_> way back when I seem to remember that sweden had their own ideas as well, with less restrictions from the beginning. I haven't followed up with that either though
[18:32:38] <ck_> let us know how it goes :)
[18:32:47] <ck_> did you hear back from that job application?
[18:33:24] <selwyn> not yet
[18:33:31] <ck_> parentheses crossed
[18:33:56] <selwyn> but i know someone who got accepted already
[18:34:01] <ck_> oh wow
[18:34:07] <selwyn> he said it took him about a month to hear back from them
[18:34:11] <selwyn> he applied a long time ago
[18:34:21] <ck_> ah I see
[18:34:48] <selwyn> but they haven't arranged a start date since accepting him
[18:35:03] <selwyn> we suspect that it is a case of visa hell
[18:35:03] <ck_> what a rollercoaster this conversation is
[18:35:18] <selwyn> but they seem to be very disorganised
[18:35:35] <selwyn> so i am somewhat resigned to the possibility that i could get accepted but then it never really happens
[18:36:20] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net)
[18:36:23] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[18:37:14] <ck_> indifference is a key factor to emotional resilience
[18:37:20] <ck_> ancient internet wisdom
[18:38:09] <ck_> I will now make a cup of earl grey. how do you respond??
[18:39:25] <selwyn> well i would love one
[18:39:29] <selwyn> no tea in the house unfortunately
[18:39:40] <ck_> I thought you were a great britain
[18:39:56] <ck_> great briton* .. so close to a good joke -- again!
[18:40:08] <selwyn> coffee displaced tea a lot
[18:40:11] <selwyn> we need to return
[18:40:17] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net) (Ping timeout: 250 seconds)
[18:40:29] <ck_> yes before it is too late
[18:40:44] <ck_> https://theconversation.com/coffee-may-become-more-scarce-and-expensive-thanks-to-climate-change-new-research-175766
[18:40:45] -ixelp- Coffee may become more scarce and expensive thanks to climate change – new research
[18:46:07] <ck_> hmm, "the conversation"
[18:46:10] <ck_> have you seen that movie?
[18:46:40] <selwyn> don't think so
[18:47:08] <ck_> it's a good one, I recommend it
[18:47:12] <ck_> try The Conversation soon
[18:56:28] *** Quits: djuber (~user@65.79.128.64) (Read error: Connection reset by peer)
[19:08:35] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:09:09] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:19:15] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[19:28:40] *** Joins: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net)
[19:28:41] *** Joins: ln43 (~ln43@user/ln43)
[19:31:55] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net) (Ping timeout: 256 seconds)
[19:32:25] <ln43> https://www.youtube.com/watch?v=hCcqYCfJQqI
[19:32:26] -ixelp- Stereo Maracana - Freestyle Love - YouTube
[19:38:24] <contrapunctus> https://scribe.rip/the-cost-of-a-byte-3d675d00c25e _sweats in 70M 'hello world' executable_
[19:38:25] -ixelp- The Cost of a Byte
[19:39:30] *** Quits: kevingal (~quassel@2001:770:c0:401:445a:3026:795a:b444) (Remote host closed the connection)
[19:40:27] <contrapunctus> (Apparently ECL can make it 1M at the cost of slower startup speed...)
[19:41:03] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[19:45:05] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[19:47:53] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:48:15] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[19:50:21] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Client Quit)
[19:57:05] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[20:01:41] <shka> https://www.youtube.com/watch?v=CRE6SqdranY
[20:01:42] -ixelp- Meta Loses $230 billion [Biggest Company Loss in History] - YouTube
[20:01:45] <shka> this brings join
[20:04:54] <ln43> which is a good choice for a database ? is sqlite a good starting point ?
[20:05:43] <shka> ln43: can you use postgres?
[20:05:55] <ln43> practically my choices are restricted by the library i'm using (pandas)
[20:05:59] <shka> if so, use postgres
[20:06:16] <shka> pandas uses sqlalchemy 
[20:06:31] <shka> so it will play with most of sql databases
[20:07:15] <ln43> yes i was starting to see how is possible to get the infos from a database that is not known and it's not so easy
[20:07:27] <ln43> at least for me that it's the first time
[20:07:47] <ln43> i mean getting all the tables and the structures
[20:07:51] <ln43> things like that
[20:08:15] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[20:10:44] <ln43> just to know which keys to use in the qeries...
[20:10:48] <ln43> queries
[20:40:30] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[20:57:20] <gilberth> About the CO₂ footprint; what's next? "Bound checks foster climate change."?
[20:58:54] *** Joins: ln43 (~ln43@user/ln43)
[21:01:06] <ck_> carbon distancing
[21:01:27] <ck_> if we just pass mandates to keep the molecules a certain distance apart, the atmosphere will be safe by doctrine
[21:02:17] <ln43> yes but that is the norm... considering the space among atoms almost all is made of empty space
[21:02:18] <gilberth> Won't it expand rather? And wouldn't that imply a higher temperature?
[21:02:43] <edgar-rft> we need a CO₂ bigfoot for bigger footprints
[21:04:28] <ln43> But currently there is a push in the direction of electric vehicles even if the cost of electricity is rising up
[21:05:38] <semz> > Assuming updates are released weekly (4 times a month),
[21:05:39] <ln43> So i opt for my old car that is still moving even if the price of fuel is rising up the same
[21:06:05] <semz> I don't have a smartphone so excuse my ignorance but surely this is ridiculously off-base
[21:06:33] <ln43> but it moves on longer ranges compared to electric vehicles and it takes few time to charge
[21:08:42] <ln43> practicallyb i don't see any advantage in the adoption of the electrical vehicles
[21:08:50] <ln43> it's only a commercial choice
[21:09:04] <ln43> battery lifespan id short
[21:10:00] *** Joins: makomo (~makomo@user/makomo)
[21:11:32] <ln43> i need to wait 4 years more or less to have a vintage perfectly functional and well maintained car
[21:14:31] <ln43> and this is according to the logic that is better to not change old things that are working better than newer
[21:16:38] <ln43> and new vehicles have a large impact to the sustainability since they use a lot of electronic components too...
[21:19:04] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[21:23:27] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[21:43:51] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[21:50:54] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[21:52:11] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[21:52:43] <shka> https://www.youtube.com/watch?v=KfkHKzgBqiQ
[21:52:43] -ixelp- How Yuri Gagarin's Spacecraft Became A Soviet Spy Satellite - Korolev's Big Space Balls - YouTube
[21:53:24] <shka> vostok derivatives still in service 
[21:57:27] *** Quits: shozo (~user@178.74.52.55) (Ping timeout: 256 seconds)
[22:03:05] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[22:45:12] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[23:07:01] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[23:08:24] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:11:54] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[23:12:47] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Remote host closed the connection)
[23:14:37] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:15:50] *** Joins: rotateq (~user@185.66.193.48)
[23:21:29] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-103B-static.midco.net) (Quit: Leaving)
[23:45:50] *** Joins: jeosol (~jeosol@user/jeosol)
[23:46:27] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[23:55:43] *** Joins: ogamita (~pjb@2a01:cb11:8036:90c2:681b:2c33:76fc:2835)
